
/home/stas/Coursach/Выборки/compiled/normal/lessecho:     формат файла elf32-i386


Дизассемблирование раздела .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Дизассемблирование раздела .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 76 22             	add    %dh,0x22(%esi)
 804819a:	da ea                	(bad)  
 804819c:	5d                   	pop    %ebp
 804819d:	f2 b2 da             	repnz mov $0xda,%dl
 80481a0:	26                   	es
 80481a1:	b6 d0                	mov    $0xd0,%dh
 80481a3:	2b 9b 12 4a 5f 4c    	sub    0x4c5f4a12(%ebx),%ebx
 80481a9:	69                   	.byte 0x69
 80481aa:	b0 7a                	mov    $0x7a,%al

Дизассемблирование раздела .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0c 00                	or     $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 02                	and    %al,(%edx)
 80481bf:	22 00                	and    (%eax),%al
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0c 00             	add    %cl,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	38 f2                	cmp    %dh,%dl
 80481ca:	8b                   	.byte 0x8b
 80481cb:	1c ad                	sbb    $0xad,%al
 80481cd:	4b                   	dec    %ebx
 80481ce:	e3 c0                	jecxz  8048190 <strcmp@plt-0x2d0>

Дизассемблирование раздела .dynsym:

080481d0 <.dynsym>:
	...
 80481e0:	6d                   	insl   (%dx),%es:(%edi)
	...
 80481e9:	00 00                	add    %al,(%eax)
 80481eb:	00 12                	add    %dl,(%edx)
 80481ed:	00 00                	add    %al,(%eax)
 80481ef:	00 31                	add    %dh,(%ecx)
	...
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 12                	add    %dl,(%edx)
 80481fd:	00 00                	add    %al,(%eax)
 80481ff:	00 5f 00             	add    %bl,0x0(%edi)
	...
 804820a:	00 00                	add    %al,(%eax)
 804820c:	12 00                	adc    (%eax),%al
 804820e:	00 00                	add    %al,(%eax)
 8048210:	2c 00                	sub    $0x0,%al
	...
 804821a:	00 00                	add    %al,(%eax)
 804821c:	12 00                	adc    (%eax),%al
 804821e:	00 00                	add    %al,(%eax)
 8048220:	86 00                	xchg   %al,(%eax)
	...
 804822a:	00 00                	add    %al,(%eax)
 804822c:	20 00                	and    %al,(%eax)
 804822e:	00 00                	add    %al,(%eax)
 8048230:	27                   	daa    
	...
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 12                	add    %dl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 66 00             	add    %ah,0x0(%esi)
	...
 804824a:	00 00                	add    %al,(%eax)
 804824c:	12 00                	adc    (%eax),%al
 804824e:	00 00                	add    %al,(%eax)
 8048250:	74 00                	je     8048252 <strcmp@plt-0x20e>
	...
 804825a:	00 00                	add    %al,(%eax)
 804825c:	12 00                	adc    (%eax),%al
 804825e:	00 00                	add    %al,(%eax)
 8048260:	42                   	inc    %edx
	...
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 12                	add    %dl,(%edx)
 804826d:	00 00                	add    %al,(%eax)
 804826f:	00 1a                	add    %bl,(%edx)
	...
 8048279:	00 00                	add    %al,(%eax)
 804827b:	00 12                	add    %dl,(%edx)
 804827d:	00 00                	add    %al,(%eax)
 804827f:	00 4a 00             	add    %cl,0x0(%edx)
	...
 804828a:	00 00                	add    %al,(%eax)
 804828c:	12 00                	adc    (%eax),%al
 804828e:	00 00                	add    %al,(%eax)
 8048290:	58                   	pop    %eax
 8048291:	00 00                	add    %al,(%eax)
 8048293:	00 60 a0             	add    %ah,-0x60(%eax)
 8048296:	04 08                	add    $0x8,%al
 8048298:	04 00                	add    $0x0,%al
 804829a:	00 00                	add    %al,(%eax)
 804829c:	11 00                	adc    %eax,(%eax)
 804829e:	19 00                	sbb    %eax,(%eax)
 80482a0:	0b 00                	or     (%eax),%eax
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	ac                   	lods   %ds:(%esi),%al
 80482a5:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 80482a8:	04 00                	add    $0x0,%al
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	11 00                	adc    %eax,(%eax)
 80482ae:	0f                   	.byte 0xf
	...

Дизассемблирование раздела .dynstr:

080482b0 <.dynstr>:
 80482b0:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80482b4:	63 2e                	arpl   %bp,(%esi)
 80482b6:	73 6f                	jae    8048327 <strcmp@plt-0x139>
 80482b8:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 80482bd:	4f                   	dec    %edi
 80482be:	5f                   	pop    %edi
 80482bf:	73 74                	jae    8048335 <strcmp@plt-0x12b>
 80482c1:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80482c8:	64 
 80482c9:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482cc:	70 72                	jo     8048340 <strcmp@plt-0x120>
 80482ce:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%esi),%ebp
 80482d5:	6b 00 65             	imul   $0x65,(%eax),%eax
 80482d8:	78 69                	js     8048343 <strcmp@plt-0x11d>
 80482da:	74 00                	je     80482dc <strcmp@plt-0x184>
 80482dc:	70 75                	jo     8048353 <strcmp@plt-0x10d>
 80482de:	74 73                	je     8048353 <strcmp@plt-0x10d>
 80482e0:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482e3:	73 74                	jae    8048359 <strcmp@plt-0x107>
 80482e5:	61                   	popa   
 80482e6:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 80482e9:	63 68 6b             	arpl   %bp,0x6b(%eax)
 80482ec:	5f                   	pop    %edi
 80482ed:	66 61                	popaw  
 80482ef:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%eax,%eax,1),%ebp
 80482f6:	68 
 80482f7:	61                   	popa   
 80482f8:	72 00                	jb     80482fa <strcmp@plt-0x166>
 80482fa:	5f                   	pop    %edi
 80482fb:	5f                   	pop    %edi
 80482fc:	66                   	data16
 80482fd:	70 72                	jo     8048371 <strcmp@plt-0xef>
 80482ff:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%esi),%ebp
 8048306:	6b 00 73             	imul   $0x73,(%eax),%eax
 8048309:	74 64                	je     804836f <strcmp@plt-0xf1>
 804830b:	65                   	gs
 804830c:	72 72                	jb     8048380 <strcmp@plt-0xe0>
 804830e:	00 66 77             	add    %ah,0x77(%esi)
 8048311:	72 69                	jb     804837c <strcmp@plt-0xe4>
 8048313:	74 65                	je     804837a <strcmp@plt-0xe6>
 8048315:	00 73 74             	add    %dh,0x74(%ebx)
 8048318:	72 63                	jb     804837d <strcmp@plt-0xe3>
 804831a:	68 72 00 73 74       	push   $0x74730072
 804831f:	72 63                	jb     8048384 <strcmp@plt-0xdc>
 8048321:	6d                   	insl   (%dx),%es:(%edi)
 8048322:	70 00                	jo     8048324 <strcmp@plt-0x13c>
 8048324:	5f                   	pop    %edi
 8048325:	5f                   	pop    %edi
 8048326:	6c                   	insb   (%dx),%es:(%edi)
 8048327:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804832e:	72 74                	jb     80483a4 <strcmp@plt-0xbc>
 8048330:	5f                   	pop    %edi
 8048331:	6d                   	insl   (%dx),%es:(%edi)
 8048332:	61                   	popa   
 8048333:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804833a:	6f                   	outsl  %ds:(%esi),(%dx)
 804833b:	6e                   	outsb  %ds:(%esi),(%dx)
 804833c:	5f                   	pop    %edi
 804833d:	73 74                	jae    80483b3 <strcmp@plt-0xad>
 804833f:	61                   	popa   
 8048340:	72 74                	jb     80483b6 <strcmp@plt-0xaa>
 8048342:	5f                   	pop    %edi
 8048343:	5f                   	pop    %edi
 8048344:	00 47 4c             	add    %al,0x4c(%edi)
 8048347:	49                   	dec    %ecx
 8048348:	42                   	inc    %edx
 8048349:	43                   	inc    %ebx
 804834a:	5f                   	pop    %edi
 804834b:	32 2e                	xor    (%esi),%ch
 804834d:	33 2e                	xor    (%esi),%ebp
 804834f:	34 00                	xor    $0x0,%al
 8048351:	47                   	inc    %edi
 8048352:	4c                   	dec    %esp
 8048353:	49                   	dec    %ecx
 8048354:	42                   	inc    %edx
 8048355:	43                   	inc    %ebx
 8048356:	5f                   	pop    %edi
 8048357:	32 2e                	xor    (%esi),%ch
 8048359:	34 00                	xor    $0x0,%al
 804835b:	47                   	inc    %edi
 804835c:	4c                   	dec    %esp
 804835d:	49                   	dec    %ecx
 804835e:	42                   	inc    %edx
 804835f:	43                   	inc    %ebx
 8048360:	5f                   	pop    %edi
 8048361:	32 2e                	xor    (%esi),%ch
 8048363:	30 00                	xor    %al,(%eax)

Дизассемблирование раздела .gnu.version:

08048366 <.gnu.version>:
 8048366:	00 00                	add    %al,(%eax)
 8048368:	02 00                	add    (%eax),%al
 804836a:	03 00                	add    (%eax),%eax
 804836c:	02 00                	add    (%eax),%al
 804836e:	02 00                	add    (%eax),%al
 8048370:	00 00                	add    %al,(%eax)
 8048372:	02 00                	add    (%eax),%al
 8048374:	02 00                	add    (%eax),%al
 8048376:	02 00                	add    (%eax),%al
 8048378:	02 00                	add    (%eax),%al
 804837a:	04 00                	add    $0x0,%al
 804837c:	04 00                	add    $0x0,%al
 804837e:	02 00                	add    (%eax),%al
 8048380:	01 00                	add    %eax,(%eax)

Дизассемблирование раздела .gnu.version_r:

08048384 <.gnu.version_r>:
 8048384:	01 00                	add    %eax,(%eax)
 8048386:	03 00                	add    (%eax),%eax
 8048388:	01 00                	add    %eax,(%eax)
 804838a:	00 00                	add    %al,(%eax)
 804838c:	10 00                	adc    %al,(%eax)
 804838e:	00 00                	add    %al,(%eax)
 8048390:	00 00                	add    %al,(%eax)
 8048392:	00 00                	add    %al,(%eax)
 8048394:	74 19                	je     80483af <strcmp@plt-0xb1>
 8048396:	69 09 00 00 04 00    	imul   $0x40000,(%ecx),%ecx
 804839c:	95                   	xchg   %eax,%ebp
 804839d:	00 00                	add    %al,(%eax)
 804839f:	00 10                	add    %dl,(%eax)
 80483a1:	00 00                	add    %al,(%eax)
 80483a3:	00 14 69             	add    %dl,(%ecx,%ebp,2)
 80483a6:	69 0d 00 00 03 00 a1 	imul   $0xa1,0x30000,%ecx
 80483ad:	00 00 00 
 80483b0:	10 00                	adc    %al,(%eax)
 80483b2:	00 00                	add    %al,(%eax)
 80483b4:	10 69 69             	adc    %ch,0x69(%ecx)
 80483b7:	0d 00 00 02 00       	or     $0x20000,%eax
 80483bc:	ab                   	stos   %eax,%es:(%edi)
 80483bd:	00 00                	add    %al,(%eax)
 80483bf:	00 00                	add    %al,(%eax)
 80483c1:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .rel.dyn:

080483c4 <.rel.dyn>:
 80483c4:	fc                   	cld    
 80483c5:	9f                   	lahf   
 80483c6:	04 08                	add    $0x8,%al
 80483c8:	06                   	push   %es
 80483c9:	05 00 00 60 a0       	add    $0xa0600000,%eax
 80483ce:	04 08                	add    $0x8,%al
 80483d0:	05                   	.byte 0x5
 80483d1:	0c 00                	or     $0x0,%al
	...

Дизассемблирование раздела .rel.plt:

080483d4 <.rel.plt>:
 80483d4:	0c a0                	or     $0xa0,%al
 80483d6:	04 08                	add    $0x8,%al
 80483d8:	07                   	pop    %es
 80483d9:	01 00                	add    %eax,(%eax)
 80483db:	00 10                	add    %dl,(%eax)
 80483dd:	a0 04 08 07 02       	mov    0x2070804,%al
 80483e2:	00 00                	add    %al,(%eax)
 80483e4:	14 a0                	adc    $0xa0,%al
 80483e6:	04 08                	add    $0x8,%al
 80483e8:	07                   	pop    %es
 80483e9:	03 00                	add    (%eax),%eax
 80483eb:	00 18                	add    %bl,(%eax)
 80483ed:	a0 04 08 07 04       	mov    0x4070804,%al
 80483f2:	00 00                	add    %al,(%eax)
 80483f4:	1c a0                	sbb    $0xa0,%al
 80483f6:	04 08                	add    $0x8,%al
 80483f8:	07                   	pop    %es
 80483f9:	05 00 00 20 a0       	add    $0xa0200000,%eax
 80483fe:	04 08                	add    $0x8,%al
 8048400:	07                   	pop    %es
 8048401:	06                   	push   %es
 8048402:	00 00                	add    %al,(%eax)
 8048404:	24 a0                	and    $0xa0,%al
 8048406:	04 08                	add    $0x8,%al
 8048408:	07                   	pop    %es
 8048409:	07                   	pop    %es
 804840a:	00 00                	add    %al,(%eax)
 804840c:	28 a0 04 08 07 08    	sub    %ah,0x8070804(%eax)
 8048412:	00 00                	add    %al,(%eax)
 8048414:	2c a0                	sub    $0xa0,%al
 8048416:	04 08                	add    $0x8,%al
 8048418:	07                   	pop    %es
 8048419:	09 00                	or     %eax,(%eax)
 804841b:	00 30                	add    %dh,(%eax)
 804841d:	a0 04 08 07 0a       	mov    0xa070804,%al
 8048422:	00 00                	add    %al,(%eax)
 8048424:	34 a0                	xor    $0xa0,%al
 8048426:	04 08                	add    $0x8,%al
 8048428:	07                   	pop    %es
 8048429:	0b 00                	or     (%eax),%eax
	...

Дизассемблирование раздела .init:

0804842c <.init>:
 804842c:	53                   	push   %ebx
 804842d:	83 ec 08             	sub    $0x8,%esp
 8048430:	e8 db 04 00 00       	call   8048910 <__fprintf_chk@plt+0x410>
 8048435:	81 c3 cb 1b 00 00    	add    $0x1bcb,%ebx
 804843b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048441:	85 c0                	test   %eax,%eax
 8048443:	74 05                	je     804844a <strcmp@plt-0x16>
 8048445:	e8 56 00 00 00       	call   80484a0 <__gmon_start__@plt>
 804844a:	83 c4 08             	add    $0x8,%esp
 804844d:	5b                   	pop    %ebx
 804844e:	c3                   	ret    

Дизассемблирование раздела .plt:

08048450 <strcmp@plt-0x10>:
 8048450:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048456:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804845c:	00 00                	add    %al,(%eax)
	...

08048460 <strcmp@plt>:
 8048460:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048466:	68 00 00 00 00       	push   $0x0
 804846b:	e9 e0 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

08048470 <__stack_chk_fail@plt>:
 8048470:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048476:	68 08 00 00 00       	push   $0x8
 804847b:	e9 d0 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

08048480 <fwrite@plt>:
 8048480:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048486:	68 10 00 00 00       	push   $0x10
 804848b:	e9 c0 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

08048490 <puts@plt>:
 8048490:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048496:	68 18 00 00 00       	push   $0x18
 804849b:	e9 b0 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

080484a0 <__gmon_start__@plt>:
 80484a0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80484a6:	68 20 00 00 00       	push   $0x20
 80484ab:	e9 a0 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

080484b0 <exit@plt>:
 80484b0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80484b6:	68 28 00 00 00       	push   $0x28
 80484bb:	e9 90 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

080484c0 <strchr@plt>:
 80484c0:	ff 25 24 a0 04 08    	jmp    *0x804a024
 80484c6:	68 30 00 00 00       	push   $0x30
 80484cb:	e9 80 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

080484d0 <__libc_start_main@plt>:
 80484d0:	ff 25 28 a0 04 08    	jmp    *0x804a028
 80484d6:	68 38 00 00 00       	push   $0x38
 80484db:	e9 70 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

080484e0 <putchar@plt>:
 80484e0:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 80484e6:	68 40 00 00 00       	push   $0x40
 80484eb:	e9 60 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

080484f0 <__printf_chk@plt>:
 80484f0:	ff 25 30 a0 04 08    	jmp    *0x804a030
 80484f6:	68 48 00 00 00       	push   $0x48
 80484fb:	e9 50 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

08048500 <__fprintf_chk@plt>:
 8048500:	ff 25 34 a0 04 08    	jmp    *0x804a034
 8048506:	68 50 00 00 00       	push   $0x50
 804850b:	e9 40 ff ff ff       	jmp    8048450 <strcmp@plt-0x10>

Дизассемблирование раздела .text:

08048510 <.text>:
 8048510:	55                   	push   %ebp
 8048511:	89 e5                	mov    %esp,%ebp
 8048513:	57                   	push   %edi
 8048514:	31 ff                	xor    %edi,%edi
 8048516:	56                   	push   %esi
 8048517:	53                   	push   %ebx
 8048518:	83 e4 f0             	and    $0xfffffff0,%esp
 804851b:	83 ec 40             	sub    $0x40,%esp
 804851e:	8b 5d 08             	mov    0x8(%ebp),%ebx
 8048521:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048527:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 804852b:	31 c0                	xor    %eax,%eax
 804852d:	8b 75 0c             	mov    0xc(%ebp),%esi
 8048530:	83 eb 01             	sub    $0x1,%ebx
 8048533:	85 db                	test   %ebx,%ebx
 8048535:	0f 8e 81 00 00 00    	jle    80485bc <__fprintf_chk@plt+0xbc>
 804853b:	83 c6 04             	add    $0x4,%esi
 804853e:	8b 06                	mov    (%esi),%eax
 8048540:	80 38 2d             	cmpb   $0x2d,(%eax)
 8048543:	75 77                	jne    80485bc <__fprintf_chk@plt+0xbc>
 8048545:	85 ff                	test   %edi,%edi
 8048547:	75 73                	jne    80485bc <__fprintf_chk@plt+0xbc>
 8048549:	0f b6 48 01          	movzbl 0x1(%eax),%ecx
 804854d:	8d 51 d3             	lea    -0x2d(%ecx),%edx
 8048550:	80 fa 43             	cmp    $0x43,%dl
 8048553:	0f 87 d6 02 00 00    	ja     804882f <__fprintf_chk@plt+0x32f>
 8048559:	0f b6 d2             	movzbl %dl,%edx
 804855c:	ff 24 95 c0 8c 04 08 	jmp    *0x8048cc0(,%edx,4)
 8048563:	83 3d e4 a0 04 08 00 	cmpl   $0x0,0x804a0e4
 804856a:	75 0e                	jne    804857a <__fprintf_chk@plt+0x7a>
 804856c:	a1 40 a0 04 08       	mov    0x804a040,%eax
 8048571:	80 38 00             	cmpb   $0x0,(%eax)
 8048574:	0f 85 a3 00 00 00    	jne    804861d <__fprintf_chk@plt+0x11d>
 804857a:	0f be 05 44 a0 04 08 	movsbl 0x804a044,%eax
 8048581:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8048585:	c7 44 24 04 61 8c 04 	movl   $0x8048c61,0x4(%esp)
 804858c:	08 
 804858d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048594:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048598:	0f be 05 45 a0 04 08 	movsbl 0x804a045,%eax
 804859f:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485a3:	e8 48 ff ff ff       	call   80484f0 <__printf_chk@plt>
 80485a8:	85 db                	test   %ebx,%ebx
 80485aa:	0f 8e 1f 03 00 00    	jle    80488cf <__fprintf_chk@plt+0x3cf>
 80485b0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 80485b7:	e8 24 ff ff ff       	call   80484e0 <putchar@plt>
 80485bc:	83 eb 01             	sub    $0x1,%ebx
 80485bf:	8d 43 01             	lea    0x1(%ebx),%eax
 80485c2:	85 c0                	test   %eax,%eax
 80485c4:	0f 8e e1 00 00 00    	jle    80486ab <__fprintf_chk@plt+0x1ab>
 80485ca:	83 c6 04             	add    $0x4,%esi
 80485cd:	8b 7e fc             	mov    -0x4(%esi),%edi
 80485d0:	89 7c 24 2c          	mov    %edi,0x2c(%esp)
 80485d4:	0f be 07             	movsbl (%edi),%eax
 80485d7:	84 c0                	test   %al,%al
 80485d9:	75 18                	jne    80485f3 <__fprintf_chk@plt+0xf3>
 80485db:	eb 33                	jmp    8048610 <__fprintf_chk@plt+0x110>
 80485dd:	8d 76 00             	lea    0x0(%esi),%esi
 80485e0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 80485e4:	8d 50 01             	lea    0x1(%eax),%edx
 80485e7:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 80485eb:	0f be 40 01          	movsbl 0x1(%eax),%eax
 80485ef:	84 c0                	test   %al,%al
 80485f1:	74 1d                	je     8048610 <__fprintf_chk@plt+0x110>
 80485f3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485f7:	c7 04 24 a0 a0 04 08 	movl   $0x804a0a0,(%esp)
 80485fe:	e8 bd fe ff ff       	call   80484c0 <strchr@plt>
 8048603:	85 c0                	test   %eax,%eax
 8048605:	74 d9                	je     80485e0 <__fprintf_chk@plt+0xe0>
 8048607:	e9 57 ff ff ff       	jmp    8048563 <__fprintf_chk@plt+0x63>
 804860c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048610:	a1 e4 a0 04 08       	mov    0x804a0e4,%eax
 8048615:	85 c0                	test   %eax,%eax
 8048617:	0f 85 5d ff ff ff    	jne    804857a <__fprintf_chk@plt+0x7a>
 804861d:	89 7c 24 2c          	mov    %edi,0x2c(%esp)
 8048621:	0f be 07             	movsbl (%edi),%eax
 8048624:	84 c0                	test   %al,%al
 8048626:	75 48                	jne    8048670 <__fprintf_chk@plt+0x170>
 8048628:	e9 7b ff ff ff       	jmp    80485a8 <__fprintf_chk@plt+0xa8>
 804862d:	a1 40 a0 04 08       	mov    0x804a040,%eax
 8048632:	c7 44 24 04 68 8c 04 	movl   $0x8048c68,0x4(%esp)
 8048639:	08 
 804863a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048641:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048645:	e8 a6 fe ff ff       	call   80484f0 <__printf_chk@plt>
 804864a:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 804864e:	0f be 00             	movsbl (%eax),%eax
 8048651:	89 04 24             	mov    %eax,(%esp)
 8048654:	e8 87 fe ff ff       	call   80484e0 <putchar@plt>
 8048659:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 804865d:	8d 50 01             	lea    0x1(%eax),%edx
 8048660:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 8048664:	0f be 40 01          	movsbl 0x1(%eax),%eax
 8048668:	84 c0                	test   %al,%al
 804866a:	0f 84 38 ff ff ff    	je     80485a8 <__fprintf_chk@plt+0xa8>
 8048670:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048674:	c7 04 24 a0 a0 04 08 	movl   $0x804a0a0,(%esp)
 804867b:	e8 40 fe ff ff       	call   80484c0 <strchr@plt>
 8048680:	85 c0                	test   %eax,%eax
 8048682:	74 c6                	je     804864a <__fprintf_chk@plt+0x14a>
 8048684:	eb a7                	jmp    804862d <__fprintf_chk@plt+0x12d>
 8048686:	a1 60 a0 04 08       	mov    0x804a060,%eax
 804868b:	c7 44 24 08 4e 00 00 	movl   $0x4e,0x8(%esp)
 8048692:	00 
 8048693:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804869a:	00 
 804869b:	c7 04 24 70 8c 04 08 	movl   $0x8048c70,(%esp)
 80486a2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80486a6:	e8 d5 fd ff ff       	call   8048480 <fwrite@plt>
 80486ab:	31 c0                	xor    %eax,%eax
 80486ad:	8b 4c 24 3c          	mov    0x3c(%esp),%ecx
 80486b1:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80486b8:	0f 85 c1 01 00 00    	jne    804887f <__fprintf_chk@plt+0x37f>
 80486be:	8d 65 f4             	lea    -0xc(%ebp),%esp
 80486c1:	5b                   	pop    %ebx
 80486c2:	5e                   	pop    %esi
 80486c3:	5f                   	pop    %edi
 80486c4:	5d                   	pop    %ebp
 80486c5:	c3                   	ret    
 80486c6:	0f b6 40 02          	movzbl 0x2(%eax),%eax
 80486ca:	a2 45 a0 04 08       	mov    %al,0x804a045
 80486cf:	e9 5c fe ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 80486d4:	8b 0d 80 a0 04 08    	mov    0x804a080,%ecx
 80486da:	83 c0 02             	add    $0x2,%eax
 80486dd:	89 44 24 18          	mov    %eax,0x18(%esp)
 80486e1:	8d 51 01             	lea    0x1(%ecx),%edx
 80486e4:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80486e8:	89 15 80 a0 04 08    	mov    %edx,0x804a080
 80486ee:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 80486f2:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 80486f6:	e8 15 03 00 00       	call   8048a10 <__fprintf_chk@plt+0x510>
 80486fb:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 80486ff:	88 81 a0 a0 04 08    	mov    %al,0x804a0a0(%ecx)
 8048705:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048709:	39 44 24 2c          	cmp    %eax,0x2c(%esp)
 804870d:	0f 84 cd 01 00 00    	je     80488e0 <__fprintf_chk@plt+0x3e0>
 8048713:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048717:	c6 80 a0 a0 04 08 00 	movb   $0x0,0x804a0a0(%eax)
 804871e:	e9 0d fe ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 8048723:	8b 0d 80 a0 04 08    	mov    0x804a080,%ecx
 8048729:	0f b6 40 02          	movzbl 0x2(%eax),%eax
 804872d:	8d 51 01             	lea    0x1(%ecx),%edx
 8048730:	89 15 80 a0 04 08    	mov    %edx,0x804a080
 8048736:	88 81 a0 a0 04 08    	mov    %al,0x804a0a0(%ecx)
 804873c:	c6 81 a1 a0 04 08 00 	movb   $0x0,0x804a0a1(%ecx)
 8048743:	e9 e8 fd ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 8048748:	8d 48 02             	lea    0x2(%eax),%ecx
 804874b:	89 c8                	mov    %ecx,%eax
 804874d:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 8048751:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8048755:	e8 b6 02 00 00       	call   8048a10 <__fprintf_chk@plt+0x510>
 804875a:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 804875e:	39 4c 24 2c          	cmp    %ecx,0x2c(%esp)
 8048762:	c7 05 40 a0 04 08 e0 	movl   $0x804a0e0,0x804a040
 8048769:	a0 04 08 
 804876c:	a2 e0 a0 04 08       	mov    %al,0x804a0e0
 8048771:	0f 85 b9 fd ff ff    	jne    8048530 <__fprintf_chk@plt+0x30>
 8048777:	b8 de 8b 04 08       	mov    $0x8048bde,%eax
 804877c:	e8 5f 02 00 00       	call   80489e0 <__fprintf_chk@plt+0x4e0>
 8048781:	80 78 02 2d          	cmpb   $0x2d,0x2(%eax)
 8048785:	0f 85 ae 00 00 00    	jne    8048839 <__fprintf_chk@plt+0x339>
 804878b:	80 78 03 00          	cmpb   $0x0,0x3(%eax)
 804878f:	0f 85 a4 00 00 00    	jne    8048839 <__fprintf_chk@plt+0x339>
 8048795:	c7 05 40 a0 04 08 b3 	movl   $0x8048bb3,0x804a040
 804879c:	8b 04 08 
 804879f:	e9 8c fd ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 80487a4:	8d 48 02             	lea    0x2(%eax),%ecx
 80487a7:	89 c8                	mov    %ecx,%eax
 80487a9:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 80487ad:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80487b1:	e8 5a 02 00 00       	call   8048a10 <__fprintf_chk@plt+0x510>
 80487b6:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 80487ba:	39 4c 24 2c          	cmp    %ecx,0x2c(%esp)
 80487be:	a2 44 a0 04 08       	mov    %al,0x804a044
 80487c3:	0f 85 67 fd ff ff    	jne    8048530 <__fprintf_chk@plt+0x30>
 80487c9:	b8 c6 8b 04 08       	mov    $0x8048bc6,%eax
 80487ce:	e8 0d 02 00 00       	call   80489e0 <__fprintf_chk@plt+0x4e0>
 80487d3:	8d 48 02             	lea    0x2(%eax),%ecx
 80487d6:	89 c8                	mov    %ecx,%eax
 80487d8:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 80487dc:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80487e0:	e8 2b 02 00 00       	call   8048a10 <__fprintf_chk@plt+0x510>
 80487e5:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 80487e9:	39 4c 24 2c          	cmp    %ecx,0x2c(%esp)
 80487ed:	a2 45 a0 04 08       	mov    %al,0x804a045
 80487f2:	0f 85 38 fd ff ff    	jne    8048530 <__fprintf_chk@plt+0x30>
 80487f8:	b8 f6 8b 04 08       	mov    $0x8048bf6,%eax
 80487fd:	e8 de 01 00 00       	call   80489e0 <__fprintf_chk@plt+0x4e0>
 8048802:	80 78 02 00          	cmpb   $0x0,0x2(%eax)
 8048806:	75 3e                	jne    8048846 <__fprintf_chk@plt+0x346>
 8048808:	bf 01 00 00 00       	mov    $0x1,%edi
 804880d:	e9 1e fd ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 8048812:	0f b6 40 02          	movzbl 0x2(%eax),%eax
 8048816:	a2 44 a0 04 08       	mov    %al,0x804a044
 804881b:	e9 10 fd ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 8048820:	c7 05 e4 a0 04 08 01 	movl   $0x1,0x804a0e4
 8048827:	00 00 00 
 804882a:	e9 01 fd ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 804882f:	b8 4b 8c 04 08       	mov    $0x8048c4b,%eax
 8048834:	e8 a7 01 00 00       	call   80489e0 <__fprintf_chk@plt+0x4e0>
 8048839:	83 c0 02             	add    $0x2,%eax
 804883c:	a3 40 a0 04 08       	mov    %eax,0x804a040
 8048841:	e9 ea fc ff ff       	jmp    8048530 <__fprintf_chk@plt+0x30>
 8048846:	8d 58 02             	lea    0x2(%eax),%ebx
 8048849:	c7 44 24 04 26 8c 04 	movl   $0x8048c26,0x4(%esp)
 8048850:	08 
 8048851:	89 1c 24             	mov    %ebx,(%esp)
 8048854:	e8 07 fc ff ff       	call   8048460 <strcmp@plt>
 8048859:	85 c0                	test   %eax,%eax
 804885b:	74 27                	je     8048884 <__fprintf_chk@plt+0x384>
 804885d:	c7 44 24 04 2e 8c 04 	movl   $0x8048c2e,0x4(%esp)
 8048864:	08 
 8048865:	89 1c 24             	mov    %ebx,(%esp)
 8048868:	e8 f3 fb ff ff       	call   8048460 <strcmp@plt>
 804886d:	85 c0                	test   %eax,%eax
 804886f:	0f 84 11 fe ff ff    	je     8048686 <__fprintf_chk@plt+0x186>
 8048875:	b8 33 8c 04 08       	mov    $0x8048c33,%eax
 804887a:	e8 61 01 00 00       	call   80489e0 <__fprintf_chk@plt+0x4e0>
 804887f:	e8 ec fb ff ff       	call   8048470 <__stack_chk_fail@plt>
 8048884:	b8 b4 8b 04 08       	mov    $0x8048bb4,%eax
 8048889:	eb 0b                	jmp    8048896 <__fprintf_chk@plt+0x396>
 804888b:	84 d2                	test   %dl,%dl
 804888d:	0f 84 18 fe ff ff    	je     80486ab <__fprintf_chk@plt+0x1ab>
 8048893:	83 c0 01             	add    $0x1,%eax
 8048896:	0f b6 10             	movzbl (%eax),%edx
 8048899:	80 fa 20             	cmp    $0x20,%dl
 804889c:	75 ed                	jne    804888b <__fprintf_chk@plt+0x38b>
 804889e:	8d 5c 24 32          	lea    0x32(%esp),%ebx
 80488a2:	8d 50 01             	lea    0x1(%eax),%edx
 80488a5:	89 d8                	mov    %ebx,%eax
 80488a7:	eb 0e                	jmp    80488b7 <__fprintf_chk@plt+0x3b7>
 80488a9:	f6 c1 df             	test   $0xdf,%cl
 80488ac:	74 11                	je     80488bf <__fprintf_chk@plt+0x3bf>
 80488ae:	83 c0 01             	add    $0x1,%eax
 80488b1:	83 c2 01             	add    $0x1,%edx
 80488b4:	88 48 ff             	mov    %cl,-0x1(%eax)
 80488b7:	0f b6 0a             	movzbl (%edx),%ecx
 80488ba:	80 f9 24             	cmp    $0x24,%cl
 80488bd:	75 ea                	jne    80488a9 <__fprintf_chk@plt+0x3a9>
 80488bf:	c6 00 00             	movb   $0x0,(%eax)
 80488c2:	89 1c 24             	mov    %ebx,(%esp)
 80488c5:	e8 c6 fb ff ff       	call   8048490 <puts@plt>
 80488ca:	e9 dc fd ff ff       	jmp    80486ab <__fprintf_chk@plt+0x1ab>
 80488cf:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 80488d6:	e8 05 fc ff ff       	call   80484e0 <putchar@plt>
 80488db:	e9 dc fc ff ff       	jmp    80485bc <__fprintf_chk@plt+0xbc>
 80488e0:	b8 0e 8c 04 08       	mov    $0x8048c0e,%eax
 80488e5:	e8 f6 00 00 00       	call   80489e0 <__fprintf_chk@plt+0x4e0>
 80488ea:	66 90                	xchg   %ax,%ax
 80488ec:	31 ed                	xor    %ebp,%ebp
 80488ee:	5e                   	pop    %esi
 80488ef:	89 e1                	mov    %esp,%ecx
 80488f1:	83 e4 f0             	and    $0xfffffff0,%esp
 80488f4:	50                   	push   %eax
 80488f5:	54                   	push   %esp
 80488f6:	52                   	push   %edx
 80488f7:	68 90 8b 04 08       	push   $0x8048b90
 80488fc:	68 20 8b 04 08       	push   $0x8048b20
 8048901:	51                   	push   %ecx
 8048902:	56                   	push   %esi
 8048903:	68 10 85 04 08       	push   $0x8048510
 8048908:	e8 c3 fb ff ff       	call   80484d0 <__libc_start_main@plt>
 804890d:	f4                   	hlt    
 804890e:	66 90                	xchg   %ax,%ax
 8048910:	8b 1c 24             	mov    (%esp),%ebx
 8048913:	c3                   	ret    
 8048914:	66 90                	xchg   %ax,%ax
 8048916:	66 90                	xchg   %ax,%ax
 8048918:	66 90                	xchg   %ax,%ax
 804891a:	66 90                	xchg   %ax,%ax
 804891c:	66 90                	xchg   %ax,%ax
 804891e:	66 90                	xchg   %ax,%ax
 8048920:	b8 4f a0 04 08       	mov    $0x804a04f,%eax
 8048925:	2d 4c a0 04 08       	sub    $0x804a04c,%eax
 804892a:	83 f8 06             	cmp    $0x6,%eax
 804892d:	77 01                	ja     8048930 <__fprintf_chk@plt+0x430>
 804892f:	c3                   	ret    
 8048930:	b8 00 00 00 00       	mov    $0x0,%eax
 8048935:	85 c0                	test   %eax,%eax
 8048937:	74 f6                	je     804892f <__fprintf_chk@plt+0x42f>
 8048939:	55                   	push   %ebp
 804893a:	89 e5                	mov    %esp,%ebp
 804893c:	83 ec 18             	sub    $0x18,%esp
 804893f:	c7 04 24 4c a0 04 08 	movl   $0x804a04c,(%esp)
 8048946:	ff d0                	call   *%eax
 8048948:	c9                   	leave  
 8048949:	c3                   	ret    
 804894a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048950:	b8 4c a0 04 08       	mov    $0x804a04c,%eax
 8048955:	2d 4c a0 04 08       	sub    $0x804a04c,%eax
 804895a:	c1 f8 02             	sar    $0x2,%eax
 804895d:	89 c2                	mov    %eax,%edx
 804895f:	c1 ea 1f             	shr    $0x1f,%edx
 8048962:	01 d0                	add    %edx,%eax
 8048964:	d1 f8                	sar    %eax
 8048966:	75 01                	jne    8048969 <__fprintf_chk@plt+0x469>
 8048968:	c3                   	ret    
 8048969:	ba 00 00 00 00       	mov    $0x0,%edx
 804896e:	85 d2                	test   %edx,%edx
 8048970:	74 f6                	je     8048968 <__fprintf_chk@plt+0x468>
 8048972:	55                   	push   %ebp
 8048973:	89 e5                	mov    %esp,%ebp
 8048975:	83 ec 18             	sub    $0x18,%esp
 8048978:	89 44 24 04          	mov    %eax,0x4(%esp)
 804897c:	c7 04 24 4c a0 04 08 	movl   $0x804a04c,(%esp)
 8048983:	ff d2                	call   *%edx
 8048985:	c9                   	leave  
 8048986:	c3                   	ret    
 8048987:	89 f6                	mov    %esi,%esi
 8048989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8048990:	80 3d 64 a0 04 08 00 	cmpb   $0x0,0x804a064
 8048997:	75 13                	jne    80489ac <__fprintf_chk@plt+0x4ac>
 8048999:	55                   	push   %ebp
 804899a:	89 e5                	mov    %esp,%ebp
 804899c:	83 ec 08             	sub    $0x8,%esp
 804899f:	e8 7c ff ff ff       	call   8048920 <__fprintf_chk@plt+0x420>
 80489a4:	c6 05 64 a0 04 08 01 	movb   $0x1,0x804a064
 80489ab:	c9                   	leave  
 80489ac:	f3 c3                	repz ret 
 80489ae:	66 90                	xchg   %ax,%ax
 80489b0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80489b5:	85 c0                	test   %eax,%eax
 80489b7:	74 1f                	je     80489d8 <__fprintf_chk@plt+0x4d8>
 80489b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80489be:	85 c0                	test   %eax,%eax
 80489c0:	74 16                	je     80489d8 <__fprintf_chk@plt+0x4d8>
 80489c2:	55                   	push   %ebp
 80489c3:	89 e5                	mov    %esp,%ebp
 80489c5:	83 ec 18             	sub    $0x18,%esp
 80489c8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80489cf:	ff d0                	call   *%eax
 80489d1:	c9                   	leave  
 80489d2:	e9 79 ff ff ff       	jmp    8048950 <__fprintf_chk@plt+0x450>
 80489d7:	90                   	nop
 80489d8:	e9 73 ff ff ff       	jmp    8048950 <__fprintf_chk@plt+0x450>
 80489dd:	66 90                	xchg   %ax,%ax
 80489df:	90                   	nop
 80489e0:	83 ec 1c             	sub    $0x1c,%esp
 80489e3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80489e7:	a1 60 a0 04 08       	mov    0x804a060,%eax
 80489ec:	c7 44 24 08 b0 8b 04 	movl   $0x8048bb0,0x8(%esp)
 80489f3:	08 
 80489f4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80489fb:	00 
 80489fc:	89 04 24             	mov    %eax,(%esp)
 80489ff:	e8 fc fa ff ff       	call   8048500 <__fprintf_chk@plt>
 8048a04:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048a0b:	e8 a0 fa ff ff       	call   80484b0 <exit@plt>
 8048a10:	55                   	push   %ebp
 8048a11:	57                   	push   %edi
 8048a12:	56                   	push   %esi
 8048a13:	53                   	push   %ebx
 8048a14:	0f b6 08             	movzbl (%eax),%ecx
 8048a17:	80 f9 20             	cmp    $0x20,%cl
 8048a1a:	0f 85 d6 00 00 00    	jne    8048af6 <__fprintf_chk@plt+0x5f6>
 8048a20:	83 c0 01             	add    $0x1,%eax
 8048a23:	0f b6 08             	movzbl (%eax),%ecx
 8048a26:	80 f9 09             	cmp    $0x9,%cl
 8048a29:	74 f5                	je     8048a20 <__fprintf_chk@plt+0x520>
 8048a2b:	80 f9 20             	cmp    $0x20,%cl
 8048a2e:	74 f0                	je     8048a20 <__fprintf_chk@plt+0x520>
 8048a30:	80 f9 2d             	cmp    $0x2d,%cl
 8048a33:	0f 84 8f 00 00 00    	je     8048ac8 <__fprintf_chk@plt+0x5c8>
 8048a39:	31 ed                	xor    %ebp,%ebp
 8048a3b:	80 f9 2b             	cmp    $0x2b,%cl
 8048a3e:	0f 94 c1             	sete   %cl
 8048a41:	bf 0a 00 00 00       	mov    $0xa,%edi
 8048a46:	0f b6 c9             	movzbl %cl,%ecx
 8048a49:	01 c8                	add    %ecx,%eax
 8048a4b:	0f b6 08             	movzbl (%eax),%ecx
 8048a4e:	80 f9 30             	cmp    $0x30,%cl
 8048a51:	0f 84 8a 00 00 00    	je     8048ae1 <__fprintf_chk@plt+0x5e1>
 8048a57:	31 f6                	xor    %esi,%esi
 8048a59:	eb 1a                	jmp    8048a75 <__fprintf_chk@plt+0x575>
 8048a5b:	90                   	nop
 8048a5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a60:	0f be d9             	movsbl %cl,%ebx
 8048a63:	83 eb 30             	sub    $0x30,%ebx
 8048a66:	39 fb                	cmp    %edi,%ebx
 8048a68:	7d 25                	jge    8048a8f <__fprintf_chk@plt+0x58f>
 8048a6a:	0f af f7             	imul   %edi,%esi
 8048a6d:	83 c0 01             	add    $0x1,%eax
 8048a70:	0f b6 08             	movzbl (%eax),%ecx
 8048a73:	01 de                	add    %ebx,%esi
 8048a75:	8d 59 d0             	lea    -0x30(%ecx),%ebx
 8048a78:	80 fb 09             	cmp    $0x9,%bl
 8048a7b:	76 e3                	jbe    8048a60 <__fprintf_chk@plt+0x560>
 8048a7d:	8d 59 9f             	lea    -0x61(%ecx),%ebx
 8048a80:	80 fb 05             	cmp    $0x5,%bl
 8048a83:	77 33                	ja     8048ab8 <__fprintf_chk@plt+0x5b8>
 8048a85:	0f be d9             	movsbl %cl,%ebx
 8048a88:	83 eb 57             	sub    $0x57,%ebx
 8048a8b:	39 fb                	cmp    %edi,%ebx
 8048a8d:	7c db                	jl     8048a6a <__fprintf_chk@plt+0x56a>
 8048a8f:	85 d2                	test   %edx,%edx
 8048a91:	75 0b                	jne    8048a9e <__fprintf_chk@plt+0x59e>
 8048a93:	eb 15                	jmp    8048aaa <__fprintf_chk@plt+0x5aa>
 8048a95:	8d 76 00             	lea    0x0(%esi),%esi
 8048a98:	83 c0 01             	add    $0x1,%eax
 8048a9b:	0f b6 08             	movzbl (%eax),%ecx
 8048a9e:	80 f9 09             	cmp    $0x9,%cl
 8048aa1:	74 f5                	je     8048a98 <__fprintf_chk@plt+0x598>
 8048aa3:	80 f9 20             	cmp    $0x20,%cl
 8048aa6:	74 f0                	je     8048a98 <__fprintf_chk@plt+0x598>
 8048aa8:	89 02                	mov    %eax,(%edx)
 8048aaa:	89 f0                	mov    %esi,%eax
 8048aac:	f7 d8                	neg    %eax
 8048aae:	85 ed                	test   %ebp,%ebp
 8048ab0:	5b                   	pop    %ebx
 8048ab1:	0f 44 c6             	cmove  %esi,%eax
 8048ab4:	5e                   	pop    %esi
 8048ab5:	5f                   	pop    %edi
 8048ab6:	5d                   	pop    %ebp
 8048ab7:	c3                   	ret    
 8048ab8:	8d 59 bf             	lea    -0x41(%ecx),%ebx
 8048abb:	80 fb 05             	cmp    $0x5,%bl
 8048abe:	77 cf                	ja     8048a8f <__fprintf_chk@plt+0x58f>
 8048ac0:	0f be d9             	movsbl %cl,%ebx
 8048ac3:	83 eb 37             	sub    $0x37,%ebx
 8048ac6:	eb 9e                	jmp    8048a66 <__fprintf_chk@plt+0x566>
 8048ac8:	83 c0 01             	add    $0x1,%eax
 8048acb:	0f b6 08             	movzbl (%eax),%ecx
 8048ace:	bd 01 00 00 00       	mov    $0x1,%ebp
 8048ad3:	bf 0a 00 00 00       	mov    $0xa,%edi
 8048ad8:	80 f9 30             	cmp    $0x30,%cl
 8048adb:	0f 85 76 ff ff ff    	jne    8048a57 <__fprintf_chk@plt+0x557>
 8048ae1:	0f b6 48 01          	movzbl 0x1(%eax),%ecx
 8048ae5:	80 f9 78             	cmp    $0x78,%cl
 8048ae8:	74 1a                	je     8048b04 <__fprintf_chk@plt+0x604>
 8048aea:	83 c0 01             	add    $0x1,%eax
 8048aed:	66 bf 08 00          	mov    $0x8,%di
 8048af1:	e9 61 ff ff ff       	jmp    8048a57 <__fprintf_chk@plt+0x557>
 8048af6:	80 f9 09             	cmp    $0x9,%cl
 8048af9:	0f 84 21 ff ff ff    	je     8048a20 <__fprintf_chk@plt+0x520>
 8048aff:	e9 2c ff ff ff       	jmp    8048a30 <__fprintf_chk@plt+0x530>
 8048b04:	0f b6 48 02          	movzbl 0x2(%eax),%ecx
 8048b08:	bf 10 00 00 00       	mov    $0x10,%edi
 8048b0d:	83 c0 02             	add    $0x2,%eax
 8048b10:	e9 42 ff ff ff       	jmp    8048a57 <__fprintf_chk@plt+0x557>
 8048b15:	66 90                	xchg   %ax,%ax
 8048b17:	90                   	nop
 8048b18:	66 90                	xchg   %ax,%ax
 8048b1a:	66 90                	xchg   %ax,%ax
 8048b1c:	66 90                	xchg   %ax,%ax
 8048b1e:	66 90                	xchg   %ax,%ax
 8048b20:	55                   	push   %ebp
 8048b21:	57                   	push   %edi
 8048b22:	31 ff                	xor    %edi,%edi
 8048b24:	56                   	push   %esi
 8048b25:	53                   	push   %ebx
 8048b26:	e8 e5 fd ff ff       	call   8048910 <__fprintf_chk@plt+0x410>
 8048b2b:	81 c3 d5 14 00 00    	add    $0x14d5,%ebx
 8048b31:	83 ec 1c             	sub    $0x1c,%esp
 8048b34:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048b38:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 8048b3e:	e8 e9 f8 ff ff       	call   804842c <strcmp@plt-0x34>
 8048b43:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048b49:	29 c6                	sub    %eax,%esi
 8048b4b:	c1 fe 02             	sar    $0x2,%esi
 8048b4e:	85 f6                	test   %esi,%esi
 8048b50:	74 27                	je     8048b79 <__fprintf_chk@plt+0x679>
 8048b52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048b58:	8b 44 24 38          	mov    0x38(%esp),%eax
 8048b5c:	89 2c 24             	mov    %ebp,(%esp)
 8048b5f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048b63:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048b67:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048b6b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048b72:	83 c7 01             	add    $0x1,%edi
 8048b75:	39 f7                	cmp    %esi,%edi
 8048b77:	75 df                	jne    8048b58 <__fprintf_chk@plt+0x658>
 8048b79:	83 c4 1c             	add    $0x1c,%esp
 8048b7c:	5b                   	pop    %ebx
 8048b7d:	5e                   	pop    %esi
 8048b7e:	5f                   	pop    %edi
 8048b7f:	5d                   	pop    %ebp
 8048b80:	c3                   	ret    
 8048b81:	eb 0d                	jmp    8048b90 <__fprintf_chk@plt+0x690>
 8048b83:	90                   	nop
 8048b84:	90                   	nop
 8048b85:	90                   	nop
 8048b86:	90                   	nop
 8048b87:	90                   	nop
 8048b88:	90                   	nop
 8048b89:	90                   	nop
 8048b8a:	90                   	nop
 8048b8b:	90                   	nop
 8048b8c:	90                   	nop
 8048b8d:	90                   	nop
 8048b8e:	90                   	nop
 8048b8f:	90                   	nop
 8048b90:	f3 c3                	repz ret 
 8048b92:	66 90                	xchg   %ax,%ax

Дизассемблирование раздела .fini:

08048b94 <.fini>:
 8048b94:	53                   	push   %ebx
 8048b95:	83 ec 08             	sub    $0x8,%esp
 8048b98:	e8 73 fd ff ff       	call   8048910 <__fprintf_chk@plt+0x410>
 8048b9d:	81 c3 63 14 00 00    	add    $0x1463,%ebx
 8048ba3:	83 c4 08             	add    $0x8,%esp
 8048ba6:	5b                   	pop    %ebx
 8048ba7:	c3                   	ret    

Дизассемблирование раздела .rodata:

08048ba8 <_IO_stdin_used-0x4>:
 8048ba8:	03 00                	add    (%eax),%eax
	...

08048bac <_IO_stdin_used>:
 8048bac:	01 00                	add    %eax,(%eax)
 8048bae:	02 00                	add    (%eax),%al
 8048bb0:	25 73 0a 00 24       	and    $0x24000a73,%eax
 8048bb5:	52                   	push   %edx
 8048bb6:	65                   	gs
 8048bb7:	76 69                	jbe    8048c22 <_IO_stdin_used+0x76>
 8048bb9:	73 69                	jae    8048c24 <_IO_stdin_used+0x78>
 8048bbb:	6f                   	outsl  %ds:(%esi),(%dx)
 8048bbc:	6e                   	outsb  %ds:(%esi),(%dx)
 8048bbd:	3a 20                	cmp    (%eax),%ah
 8048bbf:	31 2e                	xor    %ebp,(%esi)
 8048bc1:	31 35 20 24 00 4d    	xor    %esi,0x4d002420
 8048bc7:	69 73 73 69 6e 67 20 	imul   $0x20676e69,0x73(%ebx),%esi
 8048bce:	6e                   	outsb  %ds:(%esi),(%dx)
 8048bcf:	75 6d                	jne    8048c3e <_IO_stdin_used+0x92>
 8048bd1:	62 65 72             	bound  %esp,0x72(%ebp)
 8048bd4:	20 61 66             	and    %ah,0x66(%ecx)
 8048bd7:	74 65                	je     8048c3e <_IO_stdin_used+0x92>
 8048bd9:	72 20                	jb     8048bfb <_IO_stdin_used+0x4f>
 8048bdb:	2d 64 00 4d 69       	sub    $0x694d0064,%eax
 8048be0:	73 73                	jae    8048c55 <_IO_stdin_used+0xa9>
 8048be2:	69 6e 67 20 6e 75 6d 	imul   $0x6d756e20,0x67(%esi),%ebp
 8048be9:	62 65 72             	bound  %esp,0x72(%ebp)
 8048bec:	20 61 66             	and    %ah,0x66(%ecx)
 8048bef:	74 65                	je     8048c56 <_IO_stdin_used+0xaa>
 8048bf1:	72 20                	jb     8048c13 <_IO_stdin_used+0x67>
 8048bf3:	2d 66 00 4d 69       	sub    $0x694d0066,%eax
 8048bf8:	73 73                	jae    8048c6d <_IO_stdin_used+0xc1>
 8048bfa:	69 6e 67 20 6e 75 6d 	imul   $0x6d756e20,0x67(%esi),%ebp
 8048c01:	62 65 72             	bound  %esp,0x72(%ebp)
 8048c04:	20 61 66             	and    %ah,0x66(%ecx)
 8048c07:	74 65                	je     8048c6e <_IO_stdin_used+0xc2>
 8048c09:	72 20                	jb     8048c2b <_IO_stdin_used+0x7f>
 8048c0b:	2d 70 00 4d 69       	sub    $0x694d0070,%eax
 8048c10:	73 73                	jae    8048c85 <_IO_stdin_used+0xd9>
 8048c12:	69 6e 67 20 6e 75 6d 	imul   $0x6d756e20,0x67(%esi),%ebp
 8048c19:	62 65 72             	bound  %esp,0x72(%ebp)
 8048c1c:	20 61 66             	and    %ah,0x66(%ecx)
 8048c1f:	74 65                	je     8048c86 <_IO_stdin_used+0xda>
 8048c21:	72 20                	jb     8048c43 <_IO_stdin_used+0x97>
 8048c23:	2d 6e 00 76 65       	sub    $0x6576006e,%eax
 8048c28:	72 73                	jb     8048c9d <_IO_stdin_used+0xf1>
 8048c2a:	69 6f 6e 00 68 65 6c 	imul   $0x6c656800,0x6e(%edi),%ebp
 8048c31:	70 00                	jo     8048c33 <_IO_stdin_used+0x87>
 8048c33:	49                   	dec    %ecx
 8048c34:	6e                   	outsb  %ds:(%esi),(%dx)
 8048c35:	76 61                	jbe    8048c98 <_IO_stdin_used+0xec>
 8048c37:	6c                   	insb   (%dx),%es:(%edi)
 8048c38:	69 64 20 6f 70 74 69 	imul   $0x6f697470,0x6f(%eax,%eiz,1),%esp
 8048c3f:	6f 
 8048c40:	6e                   	outsb  %ds:(%esi),(%dx)
 8048c41:	20 61 66             	and    %ah,0x66(%ecx)
 8048c44:	74 65                	je     8048cab <_IO_stdin_used+0xff>
 8048c46:	72 20                	jb     8048c68 <_IO_stdin_used+0xbc>
 8048c48:	2d 2d 00 49 6e       	sub    $0x6e49002d,%eax
 8048c4d:	76 61                	jbe    8048cb0 <_IO_stdin_used+0x104>
 8048c4f:	6c                   	insb   (%dx),%es:(%edi)
 8048c50:	69 64 20 6f 70 74 69 	imul   $0x6f697470,0x6f(%eax,%eiz,1),%esp
 8048c57:	6f 
 8048c58:	6e                   	outsb  %ds:(%esi),(%dx)
 8048c59:	20 6c 65 74          	and    %ch,0x74(%ebp,%eiz,2)
 8048c5d:	74 65                	je     8048cc4 <_IO_stdin_used+0x118>
 8048c5f:	72 00                	jb     8048c61 <_IO_stdin_used+0xb5>
 8048c61:	25 63 25 73 25       	and    $0x25732563,%eax
 8048c66:	63 00                	arpl   %ax,(%eax)
 8048c68:	25 73 00 5c 00       	and    $0x5c0073,%eax
 8048c6d:	00 00                	add    %al,(%eax)
 8048c6f:	00 75 73             	add    %dh,0x73(%ebp)
 8048c72:	61                   	popa   
 8048c73:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
 8048c77:	6c                   	insb   (%dx),%es:(%edi)
 8048c78:	65                   	gs
 8048c79:	73 73                	jae    8048cee <_IO_stdin_used+0x142>
 8048c7b:	65 63 68 6f          	arpl   %bp,%gs:0x6f(%eax)
 8048c7f:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048c82:	6f                   	outsl  %ds:(%esi),(%dx)
 8048c83:	78 5d                	js     8048ce2 <_IO_stdin_used+0x136>
 8048c85:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048c88:	63 78 5d             	arpl   %di,0x5d(%eax)
 8048c8b:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048c8e:	70 6e                	jo     8048cfe <_IO_stdin_used+0x152>
 8048c90:	5d                   	pop    %ebp
 8048c91:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048c94:	64 6e                	outsb  %fs:(%esi),(%dx)
 8048c96:	5d                   	pop    %ebp
 8048c97:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048c9a:	6d                   	insl   (%dx),%es:(%edi)
 8048c9b:	78 5d                	js     8048cfa <_IO_stdin_used+0x14e>
 8048c9d:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048ca0:	6e                   	outsb  %ds:(%esi),(%dx)
 8048ca1:	6e                   	outsb  %ds:(%esi),(%dx)
 8048ca2:	5d                   	pop    %ebp
 8048ca3:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048ca6:	65                   	gs
 8048ca7:	78 5d                	js     8048d06 <_IO_stdin_used+0x15a>
 8048ca9:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048cac:	66                   	data16
 8048cad:	6e                   	outsb  %ds:(%esi),(%dx)
 8048cae:	5d                   	pop    %ebp
 8048caf:	20 5b 2d             	and    %bl,0x2d(%ebx)
 8048cb2:	61                   	popa   
 8048cb3:	5d                   	pop    %ebp
 8048cb4:	20 66 69             	and    %ah,0x69(%esi)
 8048cb7:	6c                   	insb   (%dx),%es:(%edi)
 8048cb8:	65 20 2e             	and    %ch,%gs:(%esi)
 8048cbb:	2e 2e 0a 00          	cs or  %cs:(%eax),%al
 8048cbf:	00 02                	add    %al,(%edx)
 8048cc1:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cc4:	2f                   	das    
 8048cc5:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cc8:	2f                   	das    
 8048cc9:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048ccc:	2f                   	das    
 8048ccd:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cd0:	2f                   	das    
 8048cd1:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cd4:	2f                   	das    
 8048cd5:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cd8:	2f                   	das    
 8048cd9:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cdc:	2f                   	das    
 8048cdd:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048ce0:	2f                   	das    
 8048ce1:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048ce4:	2f                   	das    
 8048ce5:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048ce8:	2f                   	das    
 8048ce9:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cec:	2f                   	das    
 8048ced:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cf0:	2f                   	das    
 8048cf1:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cf4:	2f                   	das    
 8048cf5:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cf8:	2f                   	das    
 8048cf9:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048cfc:	2f                   	das    
 8048cfd:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d00:	2f                   	das    
 8048d01:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d04:	2f                   	das    
 8048d05:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d08:	86 86 04 08 2f 88    	xchg   %al,-0x77d0f7fc(%esi)
 8048d0e:	04 08                	add    $0x8,%al
 8048d10:	2f                   	das    
 8048d11:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d14:	2f                   	das    
 8048d15:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d18:	2f                   	das    
 8048d19:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d1c:	2f                   	das    
 8048d1d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d20:	2f                   	das    
 8048d21:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d24:	2f                   	das    
 8048d25:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d28:	2f                   	das    
 8048d29:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d2c:	2f                   	das    
 8048d2d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d30:	2f                   	das    
 8048d31:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d34:	2f                   	das    
 8048d35:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d38:	2f                   	das    
 8048d39:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d3c:	2f                   	das    
 8048d3d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d40:	2f                   	das    
 8048d41:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d44:	2f                   	das    
 8048d45:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d48:	2f                   	das    
 8048d49:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d4c:	2f                   	das    
 8048d4d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d50:	2f                   	das    
 8048d51:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d54:	2f                   	das    
 8048d55:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d58:	2f                   	das    
 8048d59:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d5c:	2f                   	das    
 8048d5d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d60:	2f                   	das    
 8048d61:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d64:	2f                   	das    
 8048d65:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d68:	2f                   	das    
 8048d69:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d6c:	2f                   	das    
 8048d6d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d70:	2f                   	das    
 8048d71:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d74:	2f                   	das    
 8048d75:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d78:	2f                   	das    
 8048d79:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d7c:	2f                   	das    
 8048d7d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d80:	2f                   	das    
 8048d81:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d84:	2f                   	das    
 8048d85:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d88:	2f                   	das    
 8048d89:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d8c:	2f                   	das    
 8048d8d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048d90:	20 88 04 08 2f 88    	and    %cl,-0x77d0f7fc(%eax)
 8048d96:	04 08                	add    $0x8,%al
 8048d98:	12 88 04 08 a4 87    	adc    -0x785bf7fc(%eax),%cl
 8048d9e:	04 08                	add    $0x8,%al
 8048da0:	81 87 04 08 48 87 04 	addl   $0x882f0804,-0x78b7f7fc(%edi)
 8048da7:	08 2f 88 
 8048daa:	04 08                	add    $0x8,%al
 8048dac:	2f                   	das    
 8048dad:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048db0:	2f                   	das    
 8048db1:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048db4:	2f                   	das    
 8048db5:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048db8:	2f                   	das    
 8048db9:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048dbc:	2f                   	das    
 8048dbd:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048dc0:	23 87 04 08 d4 86    	and    -0x792bf7fc(%edi),%eax
 8048dc6:	04 08                	add    $0x8,%al
 8048dc8:	c6 86 04 08 d3 87 04 	movb   $0x4,-0x782cf7fc(%esi)
 8048dcf:	08                   	.byte 0x8

Дизассемблирование раздела .eh_frame_hdr:

08048dd0 <.eh_frame_hdr>:
 8048dd0:	01 1b                	add    %ebx,(%ebx)
 8048dd2:	03 3b                	add    (%ebx),%edi
 8048dd4:	38 00                	cmp    %al,(%eax)
 8048dd6:	00 00                	add    %al,(%eax)
 8048dd8:	06                   	push   %es
 8048dd9:	00 00                	add    %al,(%eax)
 8048ddb:	00 80 f6 ff ff 54    	add    %al,0x54fffff6(%eax)
 8048de1:	00 00                	add    %al,(%eax)
 8048de3:	00 40 f7             	add    %al,-0x9(%eax)
 8048de6:	ff                   	(bad)  
 8048de7:	ff c8                	dec    %eax
 8048de9:	00 00                	add    %al,(%eax)
 8048deb:	00 10                	add    %dl,(%eax)
 8048ded:	fc                   	cld    
 8048dee:	ff                   	(bad)  
 8048def:	ff                   	(bad)  
 8048df0:	78 00                	js     8048df2 <_IO_stdin_used+0x246>
 8048df2:	00 00                	add    %al,(%eax)
 8048df4:	40                   	inc    %eax
 8048df5:	fc                   	cld    
 8048df6:	ff                   	(bad)  
 8048df7:	ff 8c 00 00 00 50 fd 	decl   -0x2b00000(%eax,%eax,1)
 8048dfe:	ff                   	(bad)  
 8048dff:	ff                   	(bad)  
 8048e00:	fc                   	cld    
 8048e01:	00 00                	add    %al,(%eax)
 8048e03:	00 c0                	add    %al,%al
 8048e05:	fd                   	std    
 8048e06:	ff                   	(bad)  
 8048e07:	ff                   	(bad)  
 8048e08:	38 01                	cmp    %al,(%ecx)
	...

Дизассемблирование раздела .eh_frame:

08048e0c <.eh_frame>:
 8048e0c:	14 00                	adc    $0x0,%al
 8048e0e:	00 00                	add    %al,(%eax)
 8048e10:	00 00                	add    %al,(%eax)
 8048e12:	00 00                	add    %al,(%eax)
 8048e14:	01 7a 52             	add    %edi,0x52(%edx)
 8048e17:	00 01                	add    %al,(%ecx)
 8048e19:	7c 08                	jl     8048e23 <_IO_stdin_used+0x277>
 8048e1b:	01 1b                	add    %ebx,(%ebx)
 8048e1d:	0c 04                	or     $0x4,%al
 8048e1f:	04 88                	add    $0x88,%al
 8048e21:	01 00                	add    %eax,(%eax)
 8048e23:	00 20                	add    %ah,(%eax)
 8048e25:	00 00                	add    %al,(%eax)
 8048e27:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048e2a:	00 00                	add    %al,(%eax)
 8048e2c:	24 f6                	and    $0xf6,%al
 8048e2e:	ff                   	(bad)  
 8048e2f:	ff c0                	inc    %eax
 8048e31:	00 00                	add    %al,(%eax)
 8048e33:	00 00                	add    %al,(%eax)
 8048e35:	0e                   	push   %cs
 8048e36:	08 46 0e             	or     %al,0xe(%esi)
 8048e39:	0c 4a                	or     $0x4a,%al
 8048e3b:	0f 0b                	ud2    
 8048e3d:	74 04                	je     8048e43 <_IO_stdin_used+0x297>
 8048e3f:	78 00                	js     8048e41 <_IO_stdin_used+0x295>
 8048e41:	3f                   	aas    
 8048e42:	1a 3b                	sbb    (%ebx),%bh
 8048e44:	2a 32                	sub    (%edx),%dh
 8048e46:	24 22                	and    $0x22,%al
 8048e48:	10 00                	adc    %al,(%eax)
 8048e4a:	00 00                	add    %al,(%eax)
 8048e4c:	40                   	inc    %eax
 8048e4d:	00 00                	add    %al,(%eax)
 8048e4f:	00 90 fb ff ff 30    	add    %dl,0x30fffffb(%eax)
 8048e55:	00 00                	add    %al,(%eax)
 8048e57:	00 00                	add    %al,(%eax)
 8048e59:	43                   	inc    %ebx
 8048e5a:	0e                   	push   %cs
 8048e5b:	20 38                	and    %bh,(%eax)
 8048e5d:	00 00                	add    %al,(%eax)
 8048e5f:	00 54 00 00          	add    %dl,0x0(%eax,%eax,1)
 8048e63:	00 ac fb ff ff 05 01 	add    %ch,0x105ffff(%ebx,%edi,8)
 8048e6a:	00 00                	add    %al,(%eax)
 8048e6c:	00 41 0e             	add    %al,0xe(%ecx)
 8048e6f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048e75:	87 03                	xchg   %eax,(%ebx)
 8048e77:	41                   	inc    %ecx
 8048e78:	0e                   	push   %cs
 8048e79:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048e7f:	83 05 02 9d 0a c3 0e 	addl   $0xe,0xc30a9d02
 8048e86:	10 44 c6 0e          	adc    %al,0xe(%esi,%eax,8)
 8048e8a:	0c 41                	or     $0x41,%al
 8048e8c:	c7                   	(bad)  
 8048e8d:	0e                   	push   %cs
 8048e8e:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048e91:	0e                   	push   %cs
 8048e92:	04 41                	add    $0x41,%al
 8048e94:	0b 00                	or     (%eax),%eax
 8048e96:	00 00                	add    %al,(%eax)
 8048e98:	30 00                	xor    %al,(%eax)
 8048e9a:	00 00                	add    %al,(%eax)
 8048e9c:	90                   	nop
 8048e9d:	00 00                	add    %al,(%eax)
 8048e9f:	00 70 f6             	add    %dh,-0xa(%eax)
 8048ea2:	ff                   	(bad)  
 8048ea3:	ff                   	(bad)  
 8048ea4:	da 03                	fiaddl (%ebx)
 8048ea6:	00 00                	add    %al,(%eax)
 8048ea8:	00 41 0e             	add    %al,0xe(%ecx)
 8048eab:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048eb1:	41                   	inc    %ecx
 8048eb2:	87 03                	xchg   %eax,(%ebx)
 8048eb4:	4a                   	dec    %edx
 8048eb5:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 8048eb8:	05 03 a4 01 0a       	add    $0xa01a403,%eax
 8048ebd:	c3                   	ret    
 8048ebe:	41                   	inc    %ecx
 8048ebf:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 8048ec3:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048ec6:	04 41                	add    $0x41,%al
 8048ec8:	0b 00                	or     (%eax),%eax
 8048eca:	00 00                	add    %al,(%eax)
 8048ecc:	38 00                	cmp    %al,(%eax)
 8048ece:	00 00                	add    %al,(%eax)
 8048ed0:	c4 00                	les    (%eax),%eax
 8048ed2:	00 00                	add    %al,(%eax)
 8048ed4:	4c                   	dec    %esp
 8048ed5:	fc                   	cld    
 8048ed6:	ff                   	(bad)  
 8048ed7:	ff 61 00             	jmp    *0x0(%ecx)
 8048eda:	00 00                	add    %al,(%eax)
 8048edc:	00 41 0e             	add    %al,0xe(%ecx)
 8048edf:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048ee5:	87 03                	xchg   %eax,(%ebx)
 8048ee7:	43                   	inc    %ebx
 8048ee8:	0e                   	push   %cs
 8048ee9:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048eef:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048ef6:	0e                   	push   %cs
 8048ef7:	14 41                	adc    $0x41,%al
 8048ef9:	c3                   	ret    
 8048efa:	0e                   	push   %cs
 8048efb:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048efe:	0e                   	push   %cs
 8048eff:	0c 41                	or     $0x41,%al
 8048f01:	c7                   	(bad)  
 8048f02:	0e                   	push   %cs
 8048f03:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048f06:	0e                   	push   %cs
 8048f07:	04 10                	add    $0x10,%al
 8048f09:	00 00                	add    %al,(%eax)
 8048f0b:	00 00                	add    %al,(%eax)
 8048f0d:	01 00                	add    %eax,(%eax)
 8048f0f:	00 80 fc ff ff 02    	add    %al,0x2fffffc(%eax)
	...

Дизассемблирование раздела .init_array:

08049f08 <.init_array>:
 8049f08:	b0 89                	mov    $0x89,%al
 8049f0a:	04 08                	add    $0x8,%al

Дизассемблирование раздела .fini_array:

08049f0c <.fini_array>:
 8049f0c:	90                   	nop
 8049f0d:	89 04 08             	mov    %eax,(%eax,%ecx,1)

Дизассемблирование раздела .jcr:

08049f10 <.jcr>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .dynamic:

08049f14 <.dynamic>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	2c 84                	sub    $0x84,%al
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 94       	or     $0x94000000,%eax
 8049f29:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	b0 82                	mov    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 d0                	add    %dl,%al
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	b5 00                	mov    $0x0,%ch
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	58                   	pop    %eax
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 d4                	add    %dl,%ah
 8049f99:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 c4                	add    %al,%ah
 8049fa1:	83 04 08 12          	addl   $0x12,(%eax,%ecx,1)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 10                	add    %dl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 84             	ljmp   *-0x7c(%edi)
 8049fb9:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 66             	ljmp   *0x66(%edi)
 8049fc9:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Дизассемблирование раздела .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Дизассемблирование раздела .got.plt:

0804a000 <.got.plt>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	66                   	data16
 804a00d:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a010:	76 84                	jbe    8049f96 <_IO_stdin_used+0x13ea>
 804a012:	04 08                	add    $0x8,%al
 804a014:	86 84 04 08 96 84 04 	xchg   %al,0x4849608(%esp,%eax,1)
 804a01b:	08 a6 84 04 08 b6    	or     %ah,-0x49f7fb7c(%esi)
 804a021:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a024:	c6 84 04 08 d6 84 04 	movb   $0x8,0x484d608(%esp,%eax,1)
 804a02b:	08 
 804a02c:	e6 84                	out    %al,$0x84
 804a02e:	04 08                	add    $0x8,%al
 804a030:	f6 84 04 08 06 85 04 	testb  $0x8,0x4850608(%esp,%eax,1)
 804a037:	08 

Дизассемблирование раздела .data:

0804a038 <.data>:
	...
 804a040:	6b 8c 04 08 22 22 00 	imul   $0x0,0x222208(%esp,%eax,1),%ecx
 804a047:	00 
 804a048:	34 35                	xor    $0x35,%al
 804a04a:	38 00                	cmp    %al,(%eax)

Дизассемблирование раздела .bss:

0804a060 <stderr>:
	...

Дизассемблирование раздела .gnu_debuglink:

00000000 <.gnu_debuglink>:
   0:	32 32                	xor    (%edx),%dh
   2:	64                   	fs
   3:	61                   	popa   
   4:	65                   	gs
   5:	61                   	popa   
   6:	35 64 66 32 62       	xor    $0x62326664,%eax
   b:	32 64 61 32          	xor    0x32(%ecx,%eiz,2),%ah
   f:	36 62 36             	bound  %esi,%ss:(%esi)
  12:	64 30 32             	xor    %dh,%fs:(%edx)
  15:	62 39                	bound  %edi,(%ecx)
  17:	62 31                	bound  %esi,(%ecx)
  19:	32 34 61             	xor    (%ecx,%eiz,2),%dh
  1c:	35 66 34 63 36       	xor    $0x36633466,%eax
  21:	39 62 30             	cmp    %esp,0x30(%edx)
  24:	37                   	aaa    
  25:	61                   	popa   
  26:	2e 64 65 62 75 67    	cs fs bound %esi,%cs:%fs:%gs:0x67(%ebp)
  2c:	00 00                	add    %al,(%eax)
  2e:	00 00                	add    %al,(%eax)
  30:	da 31                	fidivl (%ecx)
  32:	a9                   	.byte 0xa9
  33:	a3                   	.byte 0xa3
