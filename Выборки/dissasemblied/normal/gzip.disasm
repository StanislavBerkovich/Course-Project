das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,0x1db55d0f(%eax)
arpl   %di,(%ebx)
data16
cmp    %bh,-0x7f(%esi)
push   %eax
cmp    $0xe1,%dh
jmp    *(%ebx)
movsb  %ds:(%esi),%es:(%edi)
daa
pop    %ebp
add    (%eax),%eax
add    %al,(%eax)
push   %ebp
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x55023d65(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
pop    %ecx
add    %al,(%eax)
add    %ch,(%ecx)
sbb    $0xf2381c8c,%eax
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  804819c <raise@plt-0xdf4>
addr16 push %ebp
popa
adc    %dh,(%edx)
(bad)
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
xchg   %eax,%edi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
daa
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    804827a <raise@plt-0xd16>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popf
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jg     804834a <raise@plt-0xc46>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,$0x2
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
daa
add    (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testb  $0x0,(%edx)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,$0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x0,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x2
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%eax)
add    %al,(%eax)
pusha
in     $0x5,%eax
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
cmc
add    %eax,(%eax)
add    %ah,(%eax)
in     $0x5,%eax
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
and    $0x87,%al
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ch,0x44000000(%esi)
in     $0x5,%eax
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
dec    %ebp
add    %al,(%eax)
add    %al,-0x1b(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,%bl
add    %eax,(%eax)
add    %ah,0x5(%ebp,%eiz,8)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    804880f <raise@plt-0x781>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    804881d <raise@plt-0x773>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %bl,0x5f(%edi)
jae    804882a <raise@plt-0x766>
jo     804881b <raise@plt-0x775>
jo     8048833 <raise@plt-0x75d>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048837 <raise@plt-0x759>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
jo     804884f <raise@plt-0x741>
je     804883f <raise@plt-0x751>
add    %ch,0x62(%ebp)
jb     8048855 <raise@plt-0x73b>
outsl  %ds:(%esi),(%dx)
ja     8048847 <raise@plt-0x749>
add    %ch,0x70(%edi)
je     8048852 <raise@plt-0x73e>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048862 <raise@plt-0x72e>
arpl   %bp,0x72(%eax)
add    %dh,0x65(%eax)
jb     804886a <raise@plt-0x726>
outsl  %ds:(%esi),(%dx)
jb     80487fb <raise@plt-0x795>
arpl   %bp,0x73(%edi,%ebp,2)
gs imul $0x6e676973,%fs:%gs:0x0(%edx),%esi
6e
popa
insb   (%dx),%es:(%edi)
add    %dh,0x69(%ebx)
addr16 jo 8048882 <raise@plt-0x70e>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    8048881 <raise@plt-0x70f>
add    %bl,0x5f(%edi)
jae    804888f <raise@plt-0x701>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x69,(%eax),%eax
jae    80488a9 <raise@plt-0x6e7>
jo     80488a6 <raise@plt-0x6ea>
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048846 <raise@plt-0x74a>
jae    80488bc <raise@plt-0x6d4>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     8048852 <raise@plt-0x73e>
pop    %edi
pop    %edi
popa
jae    80488ca <raise@plt-0x6c6>
gs
jb     80488ce <raise@plt-0x6c2>
pop    %edi
popaw
imul   $0x7974635f,0x5f(%eax,%eax,1),%ebp
jo     80488cc <raise@plt-0x6c4>
pop    %edi
addr16
gs
je     80488cb <raise@plt-0x6c5>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    80488e4 <raise@plt-0x6ac>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048877 <raise@plt-0x719>
jae    80488ed <raise@plt-0x6a3>
jb     80488ef <raise@plt-0x6a1>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     80488f7 <raise@plt-0x699>
jns    8048885 <raise@plt-0x70b>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
jne    8048903 <raise@plt-0x68d>
imul   $0x7300736e,0x65(%ebp),%ebp
je     804890a <raise@plt-0x686>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048905 <raise@plt-0x68b>
add    %dh,0x69(%ebx)
addr16
gs
insl   (%dx),%es:(%edi)
jo     804891e <raise@plt-0x672>
jns    804891f <raise@plt-0x671>
gs
je     80488af <raise@plt-0x6e1>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    8048919 <raise@plt-0x677>
je     80488b6 <raise@plt-0x6da>
jne    804892c <raise@plt-0x664>
imul   $0x7461736e,0x65(%ebp),%ebp
add    %bl,0x5f(%edi)
gs
jb     8048937 <raise@plt-0x659>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
jb     804893f <raise@plt-0x651>
popa
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
data16
js     804895c <raise@plt-0x634>
je     804894c <raise@plt-0x644>
je     8048923 <raise@plt-0x66d>
xor    $0x0,%al
jae    804895a <raise@plt-0x636>
addr16 popa
fs
fs
jae    804895c <raise@plt-0x634>
je     80488f9 <raise@plt-0x697>
data16
arpl   %bp,0x6f(%eax)
ja     804896d <raise@plt-0x623>
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    804897a <raise@plt-0x616>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048982 <raise@plt-0x60e>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsw  %fs:(%esi),(%dx)
jo     804898f <raise@plt-0x601>
outsb  %ds:(%esi),(%dx)
imul   $0x73696172,%fs:0x0(%edx),%esi
add    %ch,%gs:0x62(%ebp)
jae    80489a2 <raise@plt-0x5ee>
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     80489a5 <raise@plt-0x5eb>
je     804897c <raise@plt-0x614>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    80489b2 <raise@plt-0x5de>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048950 <raise@plt-0x640>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     80489d3 <raise@plt-0x5bd>
je     80489c3 <raise@plt-0x5cd>
je     804899a <raise@plt-0x5f6>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80489dd <raise@plt-0x5b3>
outsb  %ds:(%esi),(%dx)
jbe    804897b <raise@plt-0x615>
outsl  %ds:(%esi),(%dx)
jo     80489f2 <raise@plt-0x59e>
popa
jb     80489e8 <raise@plt-0x5a8>
add    %bl,0x5f(%edi)
data16
jb     80489ec <raise@plt-0x5a4>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     8048a05 <raise@plt-0x58b>
add    %bl,0x5f(%edi)
jae    8048a06 <raise@plt-0x58a>
jo     8048a0c <raise@plt-0x584>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
jae    8048a09 <raise@plt-0x587>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048a1d <raise@plt-0x573>
jo     8048a24 <raise@plt-0x56c>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%ebp)
imul   $0x77660073,0x65(%ebp),%ebp
jb     8048a31 <raise@plt-0x55f>
je     8048a2f <raise@plt-0x561>
add    %ah,0x65(%edi)
je     8048a43 <raise@plt-0x54d>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    80489d8 <raise@plt-0x5b8>
jae    8048a43 <raise@plt-0x54d>
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x69(%ebx)
imul   $0x65626d65,0x6d(%bp,%di),%esi
jb     80489fb <raise@plt-0x595>
arpl   %bp,0x63(%edi,%ebp,2)
imul   $0x65,0x67(%edi),%ebx
je     8048a79 <raise@plt-0x517>
imul   $0x665f5f00,0x65(%ebp),%ebp
jo     8048a73 <raise@plt-0x51d>
outsb  %ds:(%esi),(%dx)
imul   $0x636f6c00,%fs:0x67(%esi),%ebp
popa
insb   (%dx),%es:(%edi)
je     8048a84 <raise@plt-0x50c>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%ebx,%esi,2)
imul   $0x34,%gs:(%esi),%esi
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048a90 <raise@plt-0x500>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x5f5f0034,%fs:0x36(%edx),%esi
5f
jae    8048aaf <raise@plt-0x4e1>
jb     8048aa0 <raise@plt-0x4f0>
jo     8048ab8 <raise@plt-0x4d8>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8048abd <raise@plt-0x4d3>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048ab7 <raise@plt-0x4d9>
jb     8048ab3 <raise@plt-0x4dd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
arpl   %bp,0x74(%esi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
jae    8048ad2 <raise@plt-0x4be>
jb     8048acd <raise@plt-0x4c3>
outsb  %ds:(%esi),(%dx)
je     8048acd <raise@plt-0x4c3>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x75(%esi)
je     8048ad9 <raise@plt-0x4b7>
insl   (%dx),%es:(%edi)
gs
jae    8048ad5 <raise@plt-0x4bb>
je     8048a76 <raise@plt-0x51a>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048ae2 <raise@plt-0x4ae>
add    %bl,0x49(%edi)
dec    %edi
pop    %edi
addr16
gs
je     8048ae9 <raise@plt-0x4a7>
add    %dh,0x74(%ebx)
jb     8048aee <raise@plt-0x4a2>
insl   (%dx),%es:(%edi)
jo     8048a8e <raise@plt-0x502>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048b0e <raise@plt-0x482>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %ah,%fs:0x65(%esi)
jb     8048b1c <raise@plt-0x474>
outsl  %ds:(%esi),(%dx)
jb     8048aad <raise@plt-0x4e3>
data16
jb     8048b15 <raise@plt-0x47b>
add    %bl,%gs:0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048b20 <raise@plt-0x470>
js     8048b26 <raise@plt-0x46a>
je     8048abf <raise@plt-0x4d1>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048b3c <raise@plt-0x454>
popa
jb     8048b3f <raise@plt-0x451>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,0x2000500
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %cl,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,0x2000200
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%eax,%eax,1)
add    $0x2000800,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %cl,(%edx)
add    %al,(%edx)
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %eax,(%eax)
or     %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0xa0000,%eax
add    %ss:(%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x90000,(%ecx),%ecx
inc    %eax
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x80000,0xd(%ecx),%ebp
dec    %esp
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x356,0x70000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
push   %es
add    %ah,0x3(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
imul   $0x0,(%ebx),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%esi)
imul   $0x40000,0xd(%ecx),%ebp
jne    8048c61 <raise@plt-0x32f>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8048c7f <raise@plt-0x311>
imul   $0x30000,(%ecx),%ecx
jg     8048c71 <raise@plt-0x31f>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x20000,%eax
mov    (%ebx),%eax
add    %al,(%eax)
add    %al,(%eax)
cld
fild   0x2a0608
add    %ah,(%eax)
in     $0x5,%eax
or     %al,0x40000056
in     $0x5,%eax
or     %al,0x44000059
in     $0x5,%eax
or     %al,0x60000058
in     $0x5,%eax
or     %al,0x64000055
in     $0x5,%eax
.byte 0x8
.byte 0x5
pop    %edx
or     $0xe0,%al
add    $0x10708,%eax
add    %dl,(%eax)
loopne 8048cc4 <raise@plt-0x2cc>
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%eiz,8)
add    $0x30708,%eax
add    %bl,(%eax)
loopne 8048cd4 <raise@plt-0x2bc>
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%eiz,8)
add    $0x50708,%eax
add    %ah,(%eax)
loopne 8048ce4 <raise@plt-0x2ac>
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0xe0,%al
add    $0x70708,%eax
add    %ch,(%eax)
loopne 8048cf4 <raise@plt-0x29c>
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%eiz,8)
add    $0x90708,%eax
add    %dh,(%eax)
loopne 8048d04 <raise@plt-0x28c>
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax,%eiz,8)
add    $0xb0708,%eax
add    %bh,(%eax)
loopne 8048d14 <raise@plt-0x27c>
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%eiz,8)
add    $0xd0708,%eax
add    %al,-0x20(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%eiz,8)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
loopne 8048d34 <raise@plt-0x25c>
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,-0x20(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,-0x20(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    $0xe0600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%eiz,8)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x70805e0
sbb    %al,(%eax)
add    %ch,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,-0x20(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,-0x20(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    $0xe0800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%eiz,8)
add    %al,(%eax)
mov    %ah,%al
add    $0x200708,%eax
add    %cl,0x21070805(%eax,%eiz,8)
add    %al,(%eax)
nop
loopne 8048dc4 <raise@plt-0x1cc>
or     %al,(%edi)
and    (%eax),%al
add    %dl,0x23070805(%eax,%eiz,8)
add    %al,(%eax)
cwtl
loopne 8048dd4 <raise@plt-0x1bc>
or     %al,(%edi)
and    $0x0,%al
add    %bl,0x25070805(%eax,%eiz,8)
add    %al,(%eax)
mov    0x70805e0,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
loopne 8048dec <raise@plt-0x1a4>
or     %al,(%edi)
daa
add    %al,(%eax)
test   $0xe0,%al
add    $0x280708,%eax
add    %ch,0x29070805(%eax,%eiz,8)
add    %al,(%eax)
mov    $0xe0,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%eiz,8)
add    %al,(%eax)
mov    $0x70805e0,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%eiz,8)
add    %al,(%eax)
shl    $0x5,%al
or     %al,(%edi)
add    %al,%cs:(%eax)
(bad)
loopne 8048e2c <raise@plt-0x164>
or     %al,(%edi)
das
add    %al,(%eax)
enter  $0x5e0,$0x8
pop    %es
xor    %al,(%eax)
add    %cl,%ah
loopne 8048e3c <raise@plt-0x154>
or     %al,(%edi)
xor    %eax,(%eax)
add    %dl,%al
loopne 8048e44 <raise@plt-0x14c>
or     %al,(%edi)
xor    (%eax),%al
add    %dl,%ah
loopne 8048e4c <raise@plt-0x144>
or     %al,(%edi)
xor    (%eax),%eax
add    %bl,%al
loopne 8048e54 <raise@plt-0x13c>
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%ah
loopne 8048e5c <raise@plt-0x134>
or     %al,(%edi)
xor    $0xe0e00000,%eax
add    $0x360708,%eax
add    %ah,%ah
loopne 8048e6c <raise@plt-0x124>
or     %al,(%edi)
aaa
add    %al,(%eax)
call   f0c9451 <optarg+0x706aeed>
cmp    %al,(%eax)
add    %ch,%ah
loopne 8048e7c <raise@plt-0x114>
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dh,%al
loopne 8048e84 <raise@plt-0x10c>
or     %al,(%edi)
cmp    (%eax),%al
add    %dh,%ah
loopne 8048e8c <raise@plt-0x104>
or     %al,(%edi)
cmp    (%eax),%eax
add    %bh,%al
loopne 8048e94 <raise@plt-0xfc>
or     %al,(%edi)
cmp    $0x0,%al
add    %bh,%ah
loopne 8048e9c <raise@plt-0xf4>
or     %al,(%edi)
cmp    $0xe1000000,%eax
add    $0x3e0708,%eax
add    %al,(%ecx,%eiz,8)
add    $0x3f0708,%eax
add    %cl,(%eax)
loope  8048eb4 <raise@plt-0xdc>
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
or     $0xe1,%al
add    $0x410708,%eax
add    %dl,(%eax)
loope  8048ec4 <raise@plt-0xcc>
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
adc    $0xe1,%al
add    $0x430708,%eax
add    %bl,(%eax)
loope  8048ed4 <raise@plt-0xbc>
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
sbb    $0xe1,%al
add    $0x450708,%eax
add    %ah,(%eax)
loope  8048ee4 <raise@plt-0xac>
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
and    $0xe1,%al
add    $0x470708,%eax
add    %ch,(%eax)
loope  8048ef4 <raise@plt-0x9c>
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
sub    $0xe1,%al
add    $0x490708,%eax
add    %dh,(%eax)
loope  8048f04 <raise@plt-0x8c>
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
xor    $0xe1,%al
add    $0x4b0708,%eax
add    %bh,(%eax)
loope  8048f14 <raise@plt-0x7c>
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
cmp    $0xe1,%al
add    $0x4d0708,%eax
add    %al,-0x1f(%eax)
add    $0x4e0708,%eax
add    %al,0x5(%ecx,%eiz,8)
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
dec    %eax
loope  8048f34 <raise@plt-0x5c>
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %esp
loope  8048f3c <raise@plt-0x54>
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
push   %eax
loope  8048f44 <raise@plt-0x4c>
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %esp
loope  8048f4c <raise@plt-0x44>
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
pop    %eax
loope  8048f54 <raise@plt-0x3c>
or     %al,(%edi)
push   %esp
push   %ebx
sub    $0x8,%esp
call   8049a50 <fchmod@plt+0x590>
add    $0x150a3,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048f72 <raise@plt-0x1e>
call   8049220 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x805e004
jmp    *0x805e008
add    %al,(%eax)
jmp    *0x805e00c
push   $0x0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e010
push   $0x8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e014
push   $0x10
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e018
push   $0x18
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e01c
push   $0x20
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e020
push   $0x28
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e024
push   $0x30
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e028
push   $0x38
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e02c
push   $0x40
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e030
push   $0x48
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e034
push   $0x50
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e038
push   $0x58
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e03c
push   $0x60
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e040
push   $0x68
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e044
push   $0x70
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e048
push   $0x78
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e04c
push   $0x80
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e050
push   $0x88
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e054
push   $0x90
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e058
push   $0x98
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e05c
push   $0xa0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e060
push   $0xa8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e064
push   $0xb0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e068
push   $0xb8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e06c
push   $0xc0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e070
push   $0xc8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e074
push   $0xd0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e078
push   $0xd8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e07c
push   $0xe0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e080
push   $0xe8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e084
push   $0xf0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e088
push   $0xf8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e08c
push   $0x100
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e090
push   $0x108
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e094
push   $0x110
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e098
push   $0x118
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e09c
push   $0x120
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0a0
push   $0x128
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0a4
push   $0x130
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0a8
push   $0x138
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0ac
push   $0x140
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0b0
push   $0x148
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0b4
push   $0x150
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0b8
push   $0x158
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0bc
push   $0x160
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0c0
push   $0x168
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0c4
push   $0x170
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0c8
push   $0x178
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0cc
push   $0x180
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0d0
push   $0x188
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0d4
push   $0x190
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0d8
push   $0x198
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0dc
push   $0x1a0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0e0
push   $0x1a8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0e4
push   $0x1b0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0e8
push   $0x1b8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0ec
push   $0x1c0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0f0
push   $0x1c8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0f4
push   $0x1d0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0f8
push   $0x1d8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e0fc
push   $0x1e0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e100
push   $0x1e8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e104
push   $0x1f0
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e108
push   $0x1f8
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e10c
push   $0x200
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e110
push   $0x208
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e114
push   $0x210
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e118
push   $0x218
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e11c
push   $0x220
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e120
push   $0x228
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e124
push   $0x230
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e128
push   $0x238
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e12c
push   $0x240
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e130
push   $0x248
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e134
push   $0x250
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e138
push   $0x258
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e13c
push   $0x260
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e140
push   $0x268
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e144
push   $0x270
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e148
push   $0x278
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e14c
push   $0x280
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e150
push   $0x288
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e154
push   $0x290
jmp    8048f80 <raise@plt-0x10>
jmp    *0x805e158
push   $0x298
jmp    8048f80 <raise@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xb0,%esp
mov    0xc(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8051cc0 <fchmod@plt+0x8800>
mov    %eax,(%esp)
mov    %eax,0x80a6d88
call   8049280 <strlen@plt>
movl   $0x8052990,(%esp)
mov    %eax,%ebx
call   80586d0 <fchmod@plt+0xf210>
cmp    $0x4,%ebx
jbe    804952d <fchmod@plt+0x6d>
mov    0x80a6d88,%eax
movl   $0x80593d5,0x4(%esp)
lea    -0x4(%eax,%ebx,1),%ebx
mov    %ebx,(%esp)
call   8048fc0 <strcmp@plt>
test   %eax,%eax
je     80495b7 <fchmod@plt+0xf7>
lea    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
lea    0x8(%ebp),%eax
movl   $0x80593da,0x8(%esp)
mov    %eax,(%esp)
call   8051d80 <fchmod@plt+0x88c0>
test   %eax,%eax
mov    %eax,0x805e6cc
mov    0xc(%ebp),%eax
je     8049558 <fchmod@plt+0x98>
mov    %eax,0x805e6c8
movl   $0x80593df,0x805e6c4
08
mov    $0xffffffff,%esi
xor    %ebx,%ebx
movl   $0x3,0x805e6c0
00
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8059740,0xc(%esp)
movl   $0x8058c84,0x8(%esp)
mov    %eax,(%esp)
call   8049250 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049838 <fchmod@plt+0x378>
lea    -0x31(%eax),%edx
cmp    $0x4f,%edx
ja     8049833 <fchmod@plt+0x373>
nop
jmp    *0x8059530(,%edx,4)
movb   $0x0,(%ebx)
jmp    804952d <fchmod@plt+0x6d>
movb   $0x1,0x805e6f4
xchg   %ax,%ax
mov    0xc(%ebp),%eax
jmp    8049573 <fchmod@plt+0xb3>
sub    $0x30,%eax
mov    %eax,0x805e1e4
jmp    80495c8 <fchmod@plt+0x108>
mov    0x80a6d88,%eax
mov    $0x80596c0,%ebx
movl   $0x8058c38,(%esp)
mov    %eax,0x4(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    $0x8058bd0,%eax
xchg   %ax,%ax
add    $0x4,%ebx
mov    %eax,0x4(%esp)
movl   $0x8059d8c,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    (%ebx),%eax
test   %eax,%eax
jne    80495f8 <fchmod@plt+0x138>
jmp    804961a <fchmod@plt+0x15a>
call   804aa10 <fchmod@plt+0x1550>
xor    %eax,%eax
lea    0x0(%esi),%esi
call   804bf30 <fchmod@plt+0x2a70>
movl   $0x0,0x805e1f0
00
movl   $0x0,0x805e1f4
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x0,0x805e1f0
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e5a0
00
jmp    80495c8 <fchmod@plt+0x108>
mov    0x805e564,%edx
mov    %esi,%ecx
mov    %ebx,%eax
mov    %edx,%edi
repnz scas %es:(%edi),%al
mov    %edx,0x805e6c4
not    %ecx
sub    $0x1,%ecx
mov    %ecx,0x805e6c0
jmp    80495c8 <fchmod@plt+0x108>
call   804aa10 <fchmod@plt+0x1550>
movl   $0x8059418,(%esp)
call   8055210 <fchmod@plt+0xbd50>
movl   $0x80593e3,(%esp)
call   8055210 <fchmod@plt+0xbd50>
xor    %eax,%eax
call   804bf30 <fchmod@plt+0x2a70>
mov    0x80a6d88,%eax
movl   $0x8058c5c,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
call   804bf80 <fchmod@plt+0x2ac0>
movl   $0x1,0x805e6f0
00
jmp    80495c8 <fchmod@plt+0x108>
mov    0x805e564,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049410 <strtol@plt>
mov    %eax,0x805e1ec
mov    0x805e564,%eax
movzbl (%eax),%edx
test   %dl,%dl
je     80495c8 <fchmod@plt+0x108>
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804972b <fchmod@plt+0x26b>
add    $0x1,%eax
lea    0x0(%esi),%esi
mov    %eax,0x805e564
movzbl (%eax),%edx
test   %dl,%dl
je     80495c8 <fchmod@plt+0x108>
sub    $0x30,%edx
add    $0x1,%eax
cmp    $0x9,%dl
jbe    8049710 <fchmod@plt+0x250>
mov    0x80a6d88,%eax
movl   $0x8058c14,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
call   804bf80 <fchmod@plt+0x2ac0>
movl   $0x1,0x805e5b4
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e6ec
00
jmp    80495c8 <fchmod@plt+0x108>
addl   $0x1,0x805e6e8
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e6e4
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e5b4
00
movl   $0x1,0x805e6ec
00
movl   $0x1,0x805e6dc
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e1f0
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e1f0
00
movl   $0x1,0x805e1f4
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e5ac
00
movl   $0x0,0x805e5b0
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e6e0
00
jmp    80495c8 <fchmod@plt+0x108>
movl   $0x1,0x805e5b4
00
movl   $0x1,0x805e6ec
00
movl   $0x1,0x805e5a8
00
jmp    80495c8 <fchmod@plt+0x108>
addl   $0x1,0x805e5b0
movl   $0x0,0x805e5ac
00
jmp    80495c8 <fchmod@plt+0x108>
call   804bf80 <fchmod@plt+0x2ac0>
cmpl   $0x0,0x805e1f0
js     8049a0e <fchmod@plt+0x54e>
cmpl   $0x0,0x805e1f4
js     80499ff <fchmod@plt+0x53f>
mov    0x8(%ebp),%eax
cmpl   $0x0,0x805e6f0
mov    %eax,0x1c(%esp)
mov    0x805e540,%eax
mov    %eax,0x18(%esp)
jne    804999e <fchmod@plt+0x4de>
mov    0x805e6c0,%eax
sub    $0x1,%eax
cmp    $0x1d,%eax
ja     80499ce <fchmod@plt+0x50e>
cmpl   $0x1,0x805e5ac
movl   $0x805e640,(%esp)
lea    0x24(%esp),%ebx
sbb    %eax,%eax
xor    %esi,%esi
not    %eax
and    $0xd,%eax
mov    %eax,0x805e630
call   8049350 <sigemptyset@plt>
mov    0x80598f0(,%esi,4),%edi
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   80493d0 <sigaction@plt>
cmpl   $0x1,0x24(%esp)
je     80498d7 <fchmod@plt+0x417>
mov    %edi,0x4(%esp)
movl   $0x805e640,(%esp)
call   80492f0 <sigaddset@plt>
add    $0x1,%esi
cmp    $0x6,%esi
jne    80498a5 <fchmod@plt+0x3e5>
lea    0x28(%esp),%edi
mov    $0x805e640,%esi
mov    $0x20,%ecx
movl   $0x804aad0,0x24(%esp)
rep movsl %ds:(%esi),%es:(%edi)
xor    %esi,%esi
movl   $0x0,0xa8(%esp)
00
mov    0x80598f0(,%esi,4),%edi
movl   $0x805e640,(%esp)
mov    %edi,0x4(%esp)
call   8049110 <sigismember@plt>
test   %eax,%eax
je     804993b <fchmod@plt+0x47b>
test   %esi,%esi
je     8049a1d <fchmod@plt+0x55d>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   80493d0 <sigaction@plt>
add    $0x1,%esi
cmp    $0x6,%esi
jne    8049904 <fchmod@plt+0x444>
mov    0x1c(%esp),%ebx
sub    0x18(%esp),%ebx
jne    8049992 <fchmod@plt+0x4d2>
call   804c010 <fchmod@plt+0x2b50>
cmpl   $0x0,0x805e6dc
je     8049974 <fchmod@plt+0x4b4>
cmpl   $0x0,0x805e5ac
jne    8049974 <fchmod@plt+0x4b4>
sub    $0x1,%ebx
jle    8049974 <fchmod@plt+0x4b4>
or     $0xffffffff,%edx
or     $0xffffffff,%eax
call   804b960 <fchmod@plt+0x24a0>
mov    0x805e5a4,%eax
call   804bf30 <fchmod@plt+0x2a70>
lea    0x1(%eax),%edx
mov    %edx,0x805e540
mov    0xc(%ebp),%edx
mov    (%edx,%eax,4),%eax
call   804d6d0 <fchmod@plt+0x4210>
mov    0x805e540,%eax
cmp    0x8(%ebp),%eax
jl     804997e <fchmod@plt+0x4be>
jmp    8049952 <fchmod@plt+0x492>
cmpl   $0x0,0x805e5ac
jne    804986f <fchmod@plt+0x3af>
mov    0x80a6d88,%eax
movl   $0x8058ca8,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804986f <fchmod@plt+0x3af>
mov    0x805e6c4,%eax
movl   $0x8059401,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80a6d88,%eax
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    $0x1,%eax
call   804bf30 <fchmod@plt+0x2a70>
mov    0x805e6ec,%eax
mov    %eax,0x805e1f4
jmp    8049852 <fchmod@plt+0x392>
mov    0x805e6ec,%eax
mov    %eax,0x805e1f0
jmp    8049845 <fchmod@plt+0x385>
movl   $0x1,0x805e6d8
00
jmp    8049927 <fchmod@plt+0x467>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x80586c0
push   $0x8058650
push   %ecx
push   %esi
push   $0x80494d0
call   80492b0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x805e523,%eax
sub    $0x805e520,%eax
cmp    $0x6,%eax
ja     8049a70 <fchmod@plt+0x5b0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     8049a6f <fchmod@plt+0x5af>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805e520,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x805e520,%eax
sub    $0x805e520,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049aa9 <fchmod@plt+0x5e9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049aa8 <fchmod@plt+0x5e8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x805e520,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x805e568
jne    8049aec <fchmod@plt+0x62c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049a60 <fchmod@plt+0x5a0>
movb   $0x1,0x805e568
leave
repz ret
xchg   %ax,%ax
mov    0x805df10,%eax
test   %eax,%eax
je     8049b18 <fchmod@plt+0x658>
mov    $0x0,%eax
test   %eax,%eax
je     8049b18 <fchmod@plt+0x658>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805df10,(%esp)
call   *%eax
leave
jmp    8049a90 <fchmod@plt+0x5d0>
nop
jmp    8049a90 <fchmod@plt+0x5d0>
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
xor    %edx,%edx
mov    %dx,0x805e570
movl   $0x0,0x805e56c
00
cmp    $0xffffffff,%eax
mov    %eax,0x805e574
je     8049b4b <fchmod@plt+0x68b>
movl   $0x8052920,0x8061d00
08
repz ret
lea    0x0(%esi),%esi
push   %edi
mov    0x805e56c,%ecx
mov    $0x10,%eax
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
sub    %ebx,%eax
cmp    %ecx,%eax
jge    8049be8 <fchmod@plt+0x728>
mov    0x80a6d94,%eax
mov    %esi,%edx
shl    %cl,%edx
or     0x805e570,%dx
cmp    $0x3ffd,%eax
mov    %dx,0x805e570
jbe    8049c00 <fchmod@plt+0x740>
lea    0x1(%eax),%ecx
cmp    $0x4000,%ecx
mov    %dl,0x8092160(%eax)
mov    %ecx,%eax
mov    %ecx,0x80a6d94
je     8049c28 <fchmod@plt+0x768>
lea    0x1(%eax),%ecx
shr    $0x8,%dx
cmp    $0x4000,%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
je     8049c20 <fchmod@plt+0x760>
mov    0x805e56c,%eax
mov    $0x10,%ecx
movzwl %si,%esi
sub    %eax,%ecx
sar    %cl,%esi
lea    -0x10(%eax,%ebx,1),%eax
mov    %si,0x805e570
pop    %ebx
mov    %eax,0x805e56c
pop    %esi
pop    %edi
ret
nop
shl    %cl,%esi
add    %ebx,%ecx
or     %si,0x805e570
pop    %ebx
mov    %ecx,0x805e56c
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %dl,0x8092160(%eax)
lea    0x2(%eax),%edi
shr    $0x8,%dx
mov    %dl,0x8092161(%eax)
mov    %ecx,%eax
mov    %edi,0x80a6d94
jmp    8049bc7 <fchmod@plt+0x707>
lea    0x0(%esi),%esi
call   8052190 <fchmod@plt+0x8cd0>
jmp    8049bc2 <fchmod@plt+0x702>
nop
nop
lea    0x0(%esi,%eiz,1),%esi
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
movzwl 0x805e570,%edx
jmp    8049ba7 <fchmod@plt+0x6e7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x8(%esp),%ebx
xor    %eax,%eax
mov    0xc(%esp),%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
sub    $0x1,%ecx
and    $0x1,%edx
or     %eax,%edx
shr    %ebx
test   %ecx,%ecx
lea    (%edx,%edx,1),%eax
jg     8049c60 <fchmod@plt+0x7a0>
shr    %eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x805e56c,%eax
cmp    $0x8,%eax
jle    8049cf8 <fchmod@plt+0x838>
mov    0x80a6d94,%eax
cmp    $0x3ffd,%eax
jbe    8049d28 <fchmod@plt+0x868>
movzwl 0x805e570,%ecx
lea    0x1(%eax),%edx
cmp    $0x4000,%edx
mov    %edx,0x80a6d94
mov    %cl,0x8092160(%eax)
mov    %edx,%eax
je     8049d50 <fchmod@plt+0x890>
lea    0x1(%eax),%edx
shr    $0x8,%cx
cmp    $0x4000,%edx
mov    %edx,0x80a6d94
mov    %cl,0x8092160(%eax)
je     8049d1e <fchmod@plt+0x85e>
xor    %eax,%eax
mov    %ax,0x805e570
movl   $0x0,0x805e56c
00
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
test   %eax,%eax
jle    8049cdc <fchmod@plt+0x81c>
mov    0x80a6d94,%edx
movzwl 0x805e570,%ecx
lea    0x1(%edx),%eax
cmp    $0x4000,%eax
mov    %eax,0x80a6d94
mov    %cl,0x8092160(%edx)
jne    8049cdc <fchmod@plt+0x81c>
call   8052190 <fchmod@plt+0x8cd0>
jmp    8049cdc <fchmod@plt+0x81c>
lea    0x0(%esi),%esi
movzwl 0x805e570,%edx
lea    0x2(%eax),%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
shr    $0x8,%dx
mov    %dl,0x8092161(%eax)
jmp    8049cdc <fchmod@plt+0x81c>
lea    0x0(%esi),%esi
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
movzwl 0x805e570,%ecx
jmp    8049cc1 <fchmod@plt+0x801>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
call   8049c80 <fchmod@plt+0x7c0>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8049e04 <fchmod@plt+0x944>
mov    0x80a6d94,%eax
cmp    $0x3ffd,%eax
jbe    8049e40 <fchmod@plt+0x980>
lea    0x1(%eax),%edx
mov    %esi,%ecx
cmp    $0x4000,%edx
mov    %esi,%ebp
mov    %edx,0x80a6d94
mov    %cl,0x8092160(%eax)
je     8049eac <fchmod@plt+0x9ec>
lea    0x1(%edx),%eax
mov    %esi,%ecx
shr    $0x8,%cx
cmp    $0x4000,%eax
mov    %eax,0x80a6d94
mov    %esi,%edi
mov    %cl,0x8092160(%edx)
je     8049ec0 <fchmod@plt+0xa00>
cmp    $0x3ffd,%eax
ja     8049e62 <fchmod@plt+0x9a2>
mov    %ebp,%edx
not    %edi
not    %edx
mov    %dl,0x8092160(%eax)
lea    0x2(%eax),%edx
mov    %edx,0x80a6d94
mov    %edi,%edx
shr    $0x8,%dx
mov    %dl,0x8092161(%eax)
add    %ebx,%esi
xchg   %ax,%ax
cmp    %esi,%ebx
je     8049e38 <fchmod@plt+0x978>
mov    0x80a6d94,%edx
add    $0x1,%ebx
lea    0x1(%edx),%eax
mov    %eax,0x80a6d94
movzbl -0x1(%ebx),%ecx
cmp    $0x4000,%eax
mov    %cl,0x8092160(%edx)
jne    8049e08 <fchmod@plt+0x948>
call   8052190 <fchmod@plt+0x8cd0>
cmp    %esi,%ebx
jne    8049e0c <fchmod@plt+0x94c>
nop
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%edx
mov    %esi,%ecx
shr    $0x8,%dx
add    $0x2,%eax
mov    %cl,0x809215e(%eax)
mov    %esi,%ebp
mov    %esi,%edi
mov    %dl,0x809215f(%eax)
cmp    $0x3ffd,%eax
jbe    8049de3 <fchmod@plt+0x923>
lea    0x1(%eax),%edx
mov    %ebp,%ecx
not    %ecx
cmp    $0x4000,%edx
mov    %cl,0x8092160(%eax)
mov    %edx,%eax
mov    %edx,0x80a6d94
je     8049ecf <fchmod@plt+0xa0f>
not    %edi
lea    0x1(%eax),%ecx
mov    %edi,%edx
shr    $0x8,%dx
cmp    $0x4000,%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
jne    8049e04 <fchmod@plt+0x944>
call   8052190 <fchmod@plt+0x8cd0>
jmp    8049e04 <fchmod@plt+0x944>
lea    0x0(%esi,%eiz,1),%esi
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%edx
jmp    8049dbb <fchmod@plt+0x8fb>
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
jmp    8049ddc <fchmod@plt+0x91c>
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
jmp    8049e7f <fchmod@plt+0x9bf>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
cmp    $0x1fff,%eax
push   %edi
push   %esi
push   %ebx
ja     8049f28 <fchmod@plt+0xa68>
mov    0x805e57c,%ecx
add    %eax,%edx
add    $0x8096d80,%eax
lea    0x8096d80(%edx),%esi
xchg   %ax,%ax
cmp    %esi,%eax
je     8049f90 <fchmod@plt+0xad0>
movzbl (%eax),%ebx
add    $0x1,%eax
add    %ebx,%ecx
cmp    $0x8098d80,%eax
jne    8049f00 <fchmod@plt+0xa40>
mov    %ecx,0x805e57c
sub    $0x2000,%edx
mov    $0x2000,%eax
lea    (%edx,%eax,1),%edi
cmp    %edi,%eax
jae    8049f86 <fchmod@plt+0xac6>
mov    0x805e57c,%ebp
lea    0x8096d80(%eax),%ecx
mov    0x805e578,%esi
jmp    8049f54 <fchmod@plt+0xa94>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
add    $0x1,%ecx
cmp    %edi,%eax
je     8049f7a <fchmod@plt+0xaba>
mov    %edx,%ebp
movzbl (%ecx),%edx
movzbl -0x2000(%ecx),%ebx
sub    %ebx,%edx
add    %ebp,%edx
cmp    $0xffffffff,%esi
jne    8049f48 <fchmod@plt+0xa88>
test   $0x1fff,%edx
cmove  %eax,%esi
add    $0x1,%eax
add    $0x1,%ecx
cmp    %edi,%eax
jne    8049f52 <fchmod@plt+0xa92>
mov    %edx,0x805e57c
mov    %esi,0x805e578
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    %ecx,0x805e57c
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x10000,%ebx
sub    $0x10,%esp
mov    0x805e588,%esi
mov    0x8061d04,%edi
sub    %esi,%ebx
sub    %edi,%ebx
cmp    $0xffffffff,%ebx
je     804a018 <fchmod@plt+0xb58>
cmp    $0xfef9,%edi
ja     804a020 <fchmod@plt+0xb60>
mov    0x805e58c,%ecx
test   %ecx,%ecx
je     8049fe0 <fchmod@plt+0xb20>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    0x8061d04,%esi
mov    %ebx,0x4(%esp)
add    $0x8096d80,%esi
mov    %esi,(%esp)
call   *0x8061d00
lea    -0x1(%eax),%edx
cmp    $0xfffffffd,%edx
ja     804a0d6 <fchmod@plt+0xc16>
add    %eax,0x805e588
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    $0xfffffffe,%ebx
jmp    8049fc8 <fchmod@plt+0xb08>
nop
movl   $0x8000,0x8(%esp)
sub    $0x8000,%edi
movl   $0x809ed80,0x4(%esp)
movl   $0x8096d80,(%esp)
call   8049050 <memcpy@plt>
mov    0x805e578,%eax
subl   $0x8000,0x8061d1c
00
mov    %edi,0x8061d04
cmp    $0xffffffff,%eax
je     804a066 <fchmod@plt+0xba6>
sub    $0x8000,%eax
mov    %eax,0x805e578
subl   $0x8000,0x8061d08
00
mov    $0x8072140,%eax
lea    0x0(%esi),%esi
movzwl (%eax),%ecx
xor    %edx,%edx
lea    -0x8000(%ecx),%edi
cmp    $0x8000,%ecx
cmovae %edi,%edx
add    $0x2,%eax
mov    %dx,-0x2(%eax)
cmp    $0x8082140,%eax
jne    804a078 <fchmod@plt+0xbb8>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x8062140(%eax,%eax,1),%ecx
xor    %edx,%edx
lea    -0x8000(%ecx),%edi
cmp    $0x8000,%ecx
cmovae %edi,%edx
mov    %dx,0x8062140(%eax,%eax,1)
add    $0x1,%eax
cmp    $0x8000,%eax
jne    804a0a0 <fchmod@plt+0xbe0>
add    $0x8000,%ebx
jmp    8049fc8 <fchmod@plt+0xb08>
mov    0x805e588,%eax
xor    %edx,%edx
add    0x8061d04,%eax
movl   $0x1,0x805e58c
00
mov    %dx,0x8096d80(%eax)
jmp    8049fd2 <fchmod@plt+0xb12>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
lea    -0x1(%ebx),%eax
cmp    $0x8,%eax
ja     804a255 <fchmod@plt+0xd95>
movl   $0x10000,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x8072140,(%esp)
mov    %ebx,0x805e580
call   8049300 <memset@plt>
movzwl 0x8058742(,%ebx,8),%eax
cmp    $0x1,%ebx
movl   $0xffffffff,0x805e578
ff
movl   $0x0,0x805e57c
00
mov    %eax,0x805e584
movzwl 0x8058740(,%ebx,8),%eax
mov    %eax,0x8061d0c
movzwl 0x8058744(,%ebx,8),%eax
mov    %eax,0x8061d10
movzwl 0x8058746(,%ebx,8),%eax
mov    %eax,0x8061d14
je     804a238 <fchmod@plt+0xd78>
cmp    $0x9,%ebx
je     804a248 <fchmod@plt+0xd88>
movl   $0x0,0x8061d04
00
movl   $0x0,0x8061d08
00
call   8056f48 <fchmod@plt+0xda88>
movl   $0x10000,0x4(%esp)
movl   $0x8096d80,(%esp)
call   *0x8061d00
lea    -0x1(%eax),%edx
cmp    $0xfffffffd,%edx
mov    %eax,0x805e588
ja     804a218 <fchmod@plt+0xd58>
cmp    $0x105,%eax
movl   $0x0,0x805e58c
00
jbe    804a1e9 <fchmod@plt+0xd29>
jmp    804a1fa <fchmod@plt+0xd3a>
xchg   %ax,%ax
mov    0x805e58c,%eax
test   %eax,%eax
jne    804a1fa <fchmod@plt+0xd3a>
call   8049fa0 <fchmod@plt+0xae0>
cmpl   $0x105,0x805e588
00
jbe    804a1e0 <fchmod@plt+0xd20>
movzbl 0x8096d80,%eax
movzbl 0x8096d81,%edx
shl    $0x5,%eax
xor    %edx,%eax
mov    %eax,0x805e590
add    $0x18,%esp
pop    %ebx
ret
nop
movl   $0x1,0x805e58c
00
movl   $0x0,0x805e588
00
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
orw    $0x4,(%eax)
jmp    804a190 <fchmod@plt+0xcd0>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
orw    $0x2,(%eax)
jmp    804a190 <fchmod@plt+0xcd0>
movl   $0x8058728,(%esp)
call   8051d40 <fchmod@plt+0x8880>
jmp    804a270 <fchmod@plt+0xdb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmpl   $0x3,0x805e580
jle    804a6f3 <fchmod@plt+0x1233>
mov    0x805e588,%esi
mov    $0x2,%ebx
xor    %edi,%edi
movl   $0x0,0x10(%esp)
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     804a408 <fchmod@plt+0xf48>
mov    0x8061d04,%eax
mov    0x805e590,%ecx
mov    %ebx,0x8061d18
movzbl 0x8096d82(%eax),%edx
mov    %eax,%esi
shl    $0x5,%ecx
and    $0x7fff,%esi
xor    %ecx,%edx
and    $0x7fff,%edx
mov    %edx,0x805e590
add    $0x8000,%edx
movzwl 0x8062140(%edx,%edx,1),%ecx
movzwl %cx,%ebp
test   %ebp,%ebp
mov    %cx,0x8062140(%esi,%esi,1)
mov    0x8061d1c,%esi
mov    %ax,0x8062140(%edx,%edx,1)
je     804a328 <fchmod@plt+0xe68>
cmp    0x805e584,%ebx
jae    804a328 <fchmod@plt+0xe68>
mov    %eax,%edx
sub    %ebp,%edx
cmp    $0x7efa,%edx
ja     804a328 <fchmod@plt+0xe68>
cmp    $0xfefa,%eax
jbe    804a674 <fchmod@plt+0x11b4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    $0x2,%ebx
cmp    $0x2,%edx
jbe    804a33c <fchmod@plt+0xe7c>
cmp    %edx,%ebx
jbe    804a518 <fchmod@plt+0x1058>
test   %edi,%edi
jne    804a458 <fchmod@plt+0xf98>
mov    0x805e5a0,%ecx
test   %ecx,%ecx
je     804a3b8 <fchmod@plt+0xef8>
cmp    %eax,0x805e578
jae    804a4e9 <fchmod@plt+0x1029>
mov    0x8061d08,%edx
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xffffffff,0x805e578
ff
sub    %edx,%eax
test   %edx,%edx
lea    0x8096d80(%edx),%ecx
mov    $0x0,%edx
cmovns %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804fb50 <fchmod@plt+0x6690>
mov    0x805e5a0,%edx
mov    0x8061d04,%eax
movl   $0x2,0x10(%esp)
test   %edx,%edx
mov    %eax,0x8061d08
jne    804a4e9 <fchmod@plt+0x1029>
add    $0x1,%eax
mov    $0x1,%edi
mov    %eax,0x8061d04
mov    0x805e588,%eax
lea    -0x1(%eax),%esi
mov    %esi,0x805e588
cmp    $0x105,%esi
jbe    804a3f7 <fchmod@plt+0xf37>
jmp    804a2a0 <fchmod@plt+0xde0>
call   8049fa0 <fchmod@plt+0xae0>
mov    0x805e588,%esi
cmp    $0x105,%esi
ja     804a2a0 <fchmod@plt+0xde0>
mov    0x805e58c,%eax
test   %eax,%eax
je     804a3e0 <fchmod@plt+0xf20>
test   %esi,%esi
jne    804a2a8 <fchmod@plt+0xde8>
test   %edi,%edi
jne    804a6d2 <fchmod@plt+0x1212>
mov    0x8061d08,%ecx
xor    %eax,%eax
mov    0x10(%esp),%ebx
mov    0x8061d04,%edx
movl   $0x1,0xc(%esp)
lea    0x8096d80(%ecx),%esi
sub    $0x1,%ebx
sub    %ecx,%edx
test   %ecx,%ecx
cmovns %esi,%eax
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804fb50 <fchmod@plt+0x6690>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x8096d7f(%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804ff00 <fchmod@plt+0x6a40>
mov    0x805e5a0,%edx
test   %edx,%edx
mov    %eax,0x10(%esp)
mov    0x8061d04,%eax
je     804a500 <fchmod@plt+0x1040>
cmp    0x805e578,%eax
jbe    804a500 <fchmod@plt+0x1040>
movl   $0xffffffff,0x805e578
ff
mov    $0x1,%ecx
movl   $0x2,0x10(%esp)
mov    0x8061d08,%edx
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
sub    %edx,%eax
test   %edx,%edx
lea    0x8096d80(%edx),%esi
mov    $0x0,%edx
cmovns %esi,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804fb50 <fchmod@plt+0x6690>
mov    0x8061d04,%eax
mov    0x805e5a0,%edx
mov    %eax,0x8061d08
test   %edx,%edx
je     804a3b8 <fchmod@plt+0xef8>
mov    $0x1,%edx
call   8049ee0 <fchmod@plt+0xa20>
mov    0x8061d04,%eax
jmp    804a3b8 <fchmod@plt+0xef8>
lea    0x0(%esi),%esi
mov    0x10(%esp),%esi
test   %esi,%esi
je     804a4e1 <fchmod@plt+0x1021>
mov    0x10(%esp),%edi
lea    -0x1(%edi),%ecx
jmp    804a4a1 <fchmod@plt+0xfe1>
lea    0x0(%esi,%eiz,1),%esi
not    %esi
sub    $0x3,%edx
add    %esi,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ff00 <fchmod@plt+0x6a40>
mov    0x805e588,%edi
movl   $0x0,0x18(%esp)
lea    0x1(%edi),%esi
mov    %eax,0x10(%esp)
mov    0x8061d18,%eax
lea    -0x2(%eax),%edx
sub    %eax,%esi
mov    %edx,0x8061d18
mov    %edx,0x14(%esp)
mov    0x805e5a0,%edx
mov    %esi,0x805e588
test   %edx,%edx
jne    804a6a2 <fchmod@plt+0x11e2>
mov    0x8061d04,%ebp
mov    0x14(%esp),%eax
mov    0x805e590,%ecx
mov    %esi,0x1c(%esp)
mov    %ebp,%edx
lea    (%eax,%ebp,1),%edi
jmp    804a58a <fchmod@plt+0x10ca>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
add    $0x1,%edx
movzbl 0x8096d82(%edx),%eax
shl    $0x5,%ecx
mov    %edx,%ebx
and    $0x7fff,%ebx
xor    %ecx,%eax
and    $0x7fff,%eax
cmp    %edi,%edx
lea    0x8000(%eax),%ecx
movzwl 0x8062140(%ecx,%ecx,1),%esi
mov    %si,0x8062140(%ebx,%ebx,1)
mov    %dx,0x8062140(%ecx,%ecx,1)
jne    804a588 <fchmod@plt+0x10c8>
mov    %eax,0x805e590
mov    0x14(%esp),%eax
mov    0x1c(%esp),%esi
movl   $0x0,0x8061d18
00
lea    0x1(%eax,%ebp,1),%eax
mov    0x18(%esp),%ebp
mov    %eax,0x8061d04
test   %ebp,%ebp
je     804a660 <fchmod@plt+0x11a0>
cmp    0x805e578,%eax
jbe    804a660 <fchmod@plt+0x11a0>
movl   $0xffffffff,0x805e578
ff
mov    $0x1,%ecx
movl   $0x2,0x10(%esp)
mov    0x8061d08,%edx
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
sub    %edx,%eax
test   %edx,%edx
lea    0x8096d80(%edx),%ebx
mov    $0x0,%edx
cmovns %ebx,%edx
mov    $0x2,%ebx
mov    %eax,0x4(%esp)
xor    %edi,%edi
mov    %edx,(%esp)
call   804fb50 <fchmod@plt+0x6690>
mov    0x8061d04,%eax
mov    0x805e588,%esi
mov    %eax,0x8061d08
jmp    804a3d3 <fchmod@plt+0xf13>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%edi
test   %edi,%edi
jne    804a6c6 <fchmod@plt+0x1206>
mov    $0x2,%ebx
xor    %edi,%edi
jmp    804a3d3 <fchmod@plt+0xf13>
mov    %ebp,(%esp)
call   8056f49 <fchmod@plt+0xda89>
mov    0x805e588,%edx
mov    %edx,%ebx
cmp    %edx,%eax
cmovbe %eax,%ebx
cmp    $0x3,%ebx
je     804a9d6 <fchmod@plt+0x1516>
mov    0x8061d18,%edx
mov    0x8061d04,%eax
jmp    804a32f <fchmod@plt+0xe6f>
lea    -0x1(%eax),%edx
mov    0x8061d04,%eax
call   8049ee0 <fchmod@plt+0xa20>
mov    0x805e5a0,%eax
mov    %eax,0x18(%esp)
mov    0x8061d18,%eax
mov    %eax,0x14(%esp)
jmp    804a568 <fchmod@plt+0x10a8>
mov    0x10(%esp),%edi
lea    -0x1(%edi),%ecx
jmp    804a60f <fchmod@plt+0x114f>
mov    0x8061d04,%eax
movl   $0x0,(%esp)
movzbl 0x8096d7f(%eax),%eax
mov    %eax,0x4(%esp)
call   804ff00 <fchmod@plt+0x6a40>
jmp    804a410 <fchmod@plt+0xf50>
mov    0x805e588,%edx
xor    %ebx,%ebx
movl   $0x2,0x8061d18
00
lea    0x0(%esi),%esi
test   %edx,%edx
je     804a861 <fchmod@plt+0x13a1>
mov    0x8061d04,%edx
mov    0x805e590,%ecx
movzbl 0x8096d82(%edx),%eax
mov    %edx,%esi
shl    $0x5,%ecx
and    $0x7fff,%esi
xor    %ecx,%eax
and    $0x7fff,%eax
mov    %eax,0x805e590
add    $0x8000,%eax
movzwl 0x8062140(%eax,%eax,1),%ecx
movzwl %cx,%ebx
test   %ebx,%ebx
mov    %cx,0x8062140(%esi,%esi,1)
mov    %dx,0x8062140(%eax,%eax,1)
je     804a778 <fchmod@plt+0x12b8>
mov    %edx,%eax
sub    %ebx,%eax
cmp    $0x7efa,%eax
ja     804a778 <fchmod@plt+0x12b8>
cmp    $0xfefa,%edx
jbe    804a8d6 <fchmod@plt+0x1416>
lea    0x0(%esi),%esi
movzbl 0x8096d80(%edx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804ff00 <fchmod@plt+0x6a40>
mov    0x805e5a0,%edi
mov    %eax,%ebx
xor    %eax,%eax
test   %edi,%edi
jne    804a8b6 <fchmod@plt+0x13f6>
subl   $0x1,0x805e588
addl   $0x1,0x8061d04
test   %eax,%eax
je     804a8a0 <fchmod@plt+0x13e0>
mov    0x8061d04,%eax
cmp    0x805e578,%eax
jbe    804a8a0 <fchmod@plt+0x13e0>
movl   $0xffffffff,0x805e578
ff
mov    %eax,%ecx
mov    $0x1,%edi
mov    $0x2,%ebx
mov    0x8061d08,%edx
xor    %eax,%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
sub    %edx,%ecx
test   %edx,%edx
lea    0x8096d80(%edx),%esi
cmovns %esi,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804fb50 <fchmod@plt+0x6690>
mov    0x8061d04,%eax
mov    %eax,0x8061d08
mov    0x805e588,%eax
cmp    $0x105,%eax
ja     804a8cf <fchmod@plt+0x140f>
mov    0x805e58c,%esi
test   %esi,%esi
jne    804a8cf <fchmod@plt+0x140f>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049fa0 <fchmod@plt+0xae0>
mov    0x805e588,%edx
cmp    $0x105,%edx
ja     804a708 <fchmod@plt+0x1248>
mov    0x805e58c,%ecx
test   %ecx,%ecx
je     804a838 <fchmod@plt+0x1378>
test   %edx,%edx
jne    804a710 <fchmod@plt+0x1250>
mov    0x8061d08,%ecx
sub    $0x1,%ebx
mov    0x8061d04,%eax
mov    %ebx,0x8(%esp)
movl   $0x1,0xc(%esp)
lea    0x8096d80(%ecx),%esi
sub    %ecx,%eax
test   %ecx,%ecx
cmovns %esi,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804fb50 <fchmod@plt+0x6690>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804a815 <fchmod@plt+0x1355>
lea    -0x1(%ebx),%edi
mov    0x8061d04,%ecx
jmp    804a7de <fchmod@plt+0x131e>
mov    0x8061d04,%eax
mov    $0x1,%edx
call   8049ee0 <fchmod@plt+0xa20>
mov    0x805e5a0,%eax
jmp    804a7a1 <fchmod@plt+0x12e1>
mov    %eax,%edx
jmp    804a708 <fchmod@plt+0x1248>
mov    %ebx,(%esp)
call   8056f49 <fchmod@plt+0xda89>
mov    0x805e588,%edx
cmp    %edx,%eax
cmovbe %eax,%edx
cmp    $0x2,%edx
mov    %edx,%esi
jbe    804a9fa <fchmod@plt+0x153a>
lea    -0x3(%edx),%eax
mov    %eax,0x4(%esp)
mov    0x8061d04,%eax
sub    0x8061d1c,%eax
mov    %eax,(%esp)
call   804ff00 <fchmod@plt+0x6a40>
mov    0x805e5a0,%ebp
sub    %esi,0x805e588
test   %ebp,%ebp
mov    %eax,%ebx
jne    804a9c5 <fchmod@plt+0x1505>
cmp    %esi,0x805e584
jb     804a997 <fchmod@plt+0x14d7>
mov    0x8061d04,%edi
mov    0x805e590,%eax
lea    0x1(%edi),%ecx
add    %esi,%edi
jmp    804a942 <fchmod@plt+0x1482>
xchg   %ax,%ax
mov    %edx,%eax
movzbl 0x8096d82(%ecx),%edx
shl    $0x5,%eax
mov    %ecx,%esi
and    $0x7fff,%esi
xor    %eax,%edx
and    $0x7fff,%edx
lea    0x8000(%edx),%eax
movzwl 0x8062140(%eax,%eax,1),%ebp
mov    %bp,0x8062140(%esi,%esi,1)
mov    %cx,0x8062140(%eax,%eax,1)
add    $0x1,%ecx
cmp    %edi,%ecx
jne    804a940 <fchmod@plt+0x1480>
mov    %edx,0x805e590
mov    0x805e5a0,%eax
mov    %ecx,0x8061d04
jmp    804a7af <fchmod@plt+0x12ef>
add    0x8061d04,%esi
movzbl 0x8096d80(%esi),%edx
movzbl 0x8096d81(%esi),%eax
mov    %esi,0x8061d04
shl    $0x5,%edx
xor    %edx,%eax
mov    %eax,0x805e590
mov    0x805e5a0,%eax
jmp    804a7af <fchmod@plt+0x12ef>
mov    0x8061d04,%eax
mov    %esi,%edx
call   8049ee0 <fchmod@plt+0xa20>
jmp    804a924 <fchmod@plt+0x1464>
mov    0x8061d04,%eax
mov    %eax,%edx
sub    0x8061d1c,%edx
cmp    $0x1000,%edx
mov    0x8061d18,%edx
ja     804a32a <fchmod@plt+0xe6a>
jmp    804a32f <fchmod@plt+0xe6f>
mov    0x8061d04,%edx
jmp    804a778 <fchmod@plt+0x12b8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
mov    $0x8059908,%ebx
sub    $0x18,%esp
mov    0x805e4bc,%eax
movl   $0x805920e,(%esp)
mov    %eax,0x8(%esp)
mov    0x80a6d88,%eax
mov    %eax,0x4(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    $0x8058790,%eax
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebx
mov    %eax,0x4(%esp)
movl   $0x8059d8c,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    (%ebx),%eax
test   %eax,%eax
jne    804aa40 <fchmod@plt+0x1580>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x98,%esp
lea    0x10(%esp),%ebx
mov    %ebx,0x8(%esp)
movl   $0x805e640,0x4(%esp)
movl   $0x0,(%esp)
call   8049010 <sigprocmask@plt>
mov    0x805e1e0,%eax
test   %eax,%eax
js     804aaaa <fchmod@plt+0x15ea>
mov    %eax,(%esp)
movl   $0xffffffff,0x805e1e0
ff
call   8049430 <close@plt>
movl   $0x8096980,(%esp)
call   8051cf0 <fchmod@plt+0x8830>
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x2,(%esp)
call   8049010 <sigprocmask@plt>
add    $0x98,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
call   804aa60 <fchmod@plt+0x15a0>
mov    0x805e630,%eax
cmp    %eax,%ebx
je     804ab03 <fchmod@plt+0x1643>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   80490b0 <signal@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048f90 <raise@plt>
movl   $0x2,(%esp)
call   8049000 <_exit@plt>
nop
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
call   8049320 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    0x80a6d88,%eax
movl   $0x8059d91,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    %edi,(%ebx)
mov    %esi,(%esp)
call   8049140 <perror@plt>
movl   $0x1,0x805e5a4
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %eax,0x18(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x805e6c4,%eax
mov    %eax,0x805e1a0
cmpb   $0x7a,(%eax)
je     804ac68 <fchmod@plt+0x17a8>
mov    $0x805e1a0,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049280 <strlen@plt>
cmp    $0x20,%eax
mov    %eax,0x1c(%esp)
jg     804ac38 <fchmod@plt+0x1778>
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x21,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x2b(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   8049210 <__memcpy_chk@plt>
mov    0x14(%esp),%esi
mov    %esi,(%esp)
call   8051c70 <fchmod@plt+0x87b0>
mov    %esi,(%esp)
call   8049280 <strlen@plt>
mov    (%ebx),%edi
mov    %eax,%esi
nop
mov    %edi,(%esp)
call   8049280 <strlen@plt>
cmp    %eax,%esi
mov    %eax,%ebp
jle    804ac15 <fchmod@plt+0x1755>
mov    %esi,%eax
sub    %ebp,%eax
cmpb   $0x2f,0x2a(%esp,%eax,1)
je     804ac15 <fchmod@plt+0x1755>
add    0x14(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048fc0 <strcmp@plt>
test   %eax,%eax
je     804ac80 <fchmod@plt+0x17c0>
add    $0x4,%ebx
mov    (%ebx),%edi
test   %edi,%edi
jne    804abe8 <fchmod@plt+0x1728>
xor    %eax,%eax
mov    0x4c(%esp),%edx
xor    %gs:0x14,%edx
jne    804ac8c <fchmod@plt+0x17cc>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
movl   $0x21,0x8(%esp)
lea    -0x20(%eax,%ecx,1),%eax
mov    %eax,0x4(%esp)
lea    0x2b(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   8049340 <__strcpy_chk@plt>
jmp    804abcf <fchmod@plt+0x170f>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%eax)
jne    804ab8a <fchmod@plt+0x16ca>
mov    $0x805e1a4,%ebx
jmp    804ab8f <fchmod@plt+0x16cf>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
sub    %ebp,%eax
add    0x18(%esp),%eax
jmp    804ac20 <fchmod@plt+0x1760>
call   80490e0 <__stack_chk_fail@plt>
jmp    804aca0 <fchmod@plt+0x17e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    %edx,%edi
push   %esi
and    $0x2,%edi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
test   %eax,%eax
lea    0x1f(%esp),%esi
je     804ace7 <fchmod@plt+0x1827>
lea    0x0(%esi),%esi
mov    0x8092144,%ecx
cmp    0x80a6d98,%ecx
jae    804ad1a <fchmod@plt+0x185a>
lea    0x1(%ecx),%eax
mov    %eax,0x8092144
movzbl 0x80a6da0(%ecx),%eax
test   %edi,%edi
mov    %al,0x1f(%esp)
jne    804acf0 <fchmod@plt+0x1830>
cmp    $0xffffffff,%ebx
je     804ad05 <fchmod@plt+0x1845>
sub    $0x1,%ebx
jne    804acb8 <fchmod@plt+0x17f8>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8051b10 <fchmod@plt+0x8650>
cmp    $0xffffffff,%ebx
jne    804ace2 <fchmod@plt+0x1822>
cmpb   $0x0,0x1f(%esp)
je     804ace7 <fchmod@plt+0x1827>
mov    0x8092144,%ecx
cmp    0x80a6d98,%ecx
jb     804acc6 <fchmod@plt+0x1806>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    804acd5 <fchmod@plt+0x1815>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x805e6e8,%eax
test   %eax,%eax
je     804ad5b <fchmod@plt+0x189b>
mov    0x805e5b4,%eax
test   %eax,%eax
jne    804aed8 <fchmod@plt+0x1a18>
mov    0x8092144,%eax
mov    0x80a6d98,%ecx
cmp    %ecx,%eax
jae    804b370 <fchmod@plt+0x1eb0>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
test   %al,%al
mov    %al,0x22(%esp)
jne    804aeb0 <fchmod@plt+0x19f0>
cmp    %edx,%ecx
jbe    804b5c8 <fchmod@plt+0x2108>
movzbl 0x80a6da0(%edx),%edi
lea    0x1(%edx),%eax
mov    %eax,0x8092144
mov    %edi,%eax
xor    %ebx,%ebx
mov    %al,0x23(%esp)
lea    0x22(%esp),%esi
movl   $0x2,0x8(%esp)
movl   $0x8059215,0x4(%esp)
mov    %esi,(%esp)
addl   $0x1,0x805e6d0
movl   $0xffffffff,0x805e1e8
ff
movl   $0x0,0x80aede0
00
movl   $0x0,0x80aede4
00
movl   $0x0,0x805e6d4
00
call   80490c0 <memcmp@plt>
test   %eax,%eax
je     804af28 <fchmod@plt+0x1a68>
movl   $0x2,0x8(%esp)
movl   $0x8059218,0x4(%esp)
mov    %esi,(%esp)
call   80490c0 <memcmp@plt>
test   %eax,%eax
je     804af28 <fchmod@plt+0x1a68>
movl   $0x2,0x8(%esp)
movl   $0x805921b,0x4(%esp)
mov    %esi,(%esp)
call   80490c0 <memcmp@plt>
test   %eax,%eax
jne    804ae45 <fchmod@plt+0x1985>
cmpl   $0x2,0x8092144
je     804b800 <fchmod@plt+0x2340>
movl   $0x2,0x8(%esp)
movl   $0x8059220,0x4(%esp)
mov    %esi,(%esp)
call   80490c0 <memcmp@plt>
test   %eax,%eax
je     804b540 <fchmod@plt+0x2080>
movl   $0x2,0x8(%esp)
movl   $0x8059223,0x4(%esp)
mov    %esi,(%esp)
call   80490c0 <memcmp@plt>
test   %eax,%eax
jne    804b6e0 <fchmod@plt+0x2220>
movl   $0x8050a10,0x805e1dc
08
mov    $0x1,%al
movl   $0x1,0x805e1e8
00
movl   $0x1,0x805e6d4
00
jmp    804b1d9 <fchmod@plt+0x1d19>
lea    0x0(%esi),%esi
cmp    %edx,%ecx
jbe    804b5e0 <fchmod@plt+0x2120>
lea    0x1(%edx),%eax
mov    %eax,0x8092144
movzbl 0x80a6da0(%edx),%eax
mov    %al,0x23(%esp)
xor    %edi,%edi
xor    %ebx,%ebx
jmp    804ada9 <fchmod@plt+0x18e9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8092144,%edx
mov    0x80a6d98,%ecx
cmp    %ecx,%edx
jae    804b560 <fchmod@plt+0x20a0>
movzbl 0x80a6da0(%edx),%ebx
lea    0x1(%edx),%eax
mov    %eax,0x8092144
cmp    %eax,%ecx
mov    %bl,0x22(%esp)
jbe    804b6c8 <fchmod@plt+0x2208>
movzbl 0x80a6da0(%eax),%edi
lea    0x1(%eax),%edx
mov    %edx,0x8092144
mov    %edi,%eax
mov    %al,0x23(%esp)
jmp    804ada9 <fchmod@plt+0x18e9>
lea    0x0(%esi),%esi
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804b358 <fchmod@plt+0x1e98>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
cmp    $0x8,%eax
mov    %eax,0x805e1e8
jne    804b888 <fchmod@plt+0x23c8>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
movl   $0x80515f0,0x805e1dc
08
jae    804b390 <fchmod@plt+0x1ed0>
movzbl 0x80a6da0(%eax),%ebx
lea    0x1(%eax),%edx
mov    %edx,0x8092144
test   $0x20,%bl
jne    804b8f1 <fchmod@plt+0x2431>
test   $0xc0,%bl
jne    804b3a8 <fchmod@plt+0x1ee8>
mov    0x8092144,%ecx
mov    0x80a6d98,%edx
cmp    %edx,%ecx
jae    804b400 <fchmod@plt+0x1f40>
lea    0x1(%ecx),%eax
movzbl 0x80a6da0(%ecx),%ebp
cmp    %edx,%eax
mov    %eax,0x8092144
jae    804b421 <fchmod@plt+0x1f61>
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
shl    $0x8,%eax
or     %eax,%ebp
cmp    %edx,%ecx
jae    804b446 <fchmod@plt+0x1f86>
lea    0x1(%ecx),%eax
movzbl 0x80a6da0(%ecx),%ecx
mov    %eax,0x8092144
shl    $0x10,%ecx
or     %ebp,%ecx
cmp    %eax,%edx
jbe    804b46c <fchmod@plt+0x1fac>
lea    0x1(%eax),%ebp
movzbl 0x80a6da0(%eax),%eax
mov    %ebp,0x8092144
shl    $0x18,%eax
or     %eax,%ecx
mov    %ecx,0x18(%esp)
je     804b020 <fchmod@plt+0x1b60>
mov    0x805e1f0,%eax
test   %eax,%eax
je     804b528 <fchmod@plt+0x2068>
cmp    %ebp,%edx
jbe    804b508 <fchmod@plt+0x2048>
movzbl 0x80a6da0(%ebp),%ecx
lea    0x1(%ebp),%eax
mov    %eax,0x8092144
cmp    %edx,%eax
mov    %cl,0x2a(%esp)
jae    804b4f0 <fchmod@plt+0x2030>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebx,%ebp
and    $0x2,%ebp
mov    %al,0x2b(%esp)
jne    804b498 <fchmod@plt+0x1fd8>
test   $0x4,%bl
je     804b0cf <fchmod@plt+0x1c0f>
mov    0x8092144,%edx
mov    0x80a6d98,%eax
cmp    %eax,%edx
jae    804b618 <fchmod@plt+0x2158>
lea    0x1(%edx),%ecx
movzbl 0x80a6da0(%edx),%edx
mov    %ecx,0x8092144
cmp    %ecx,%eax
mov    %dl,0x20(%esp)
jbe    804b5f8 <fchmod@plt+0x2138>
lea    0x1(%ecx),%eax
movzbl 0x80a6da0(%ecx),%ecx
mov    %eax,0x8092144
mov    0x805e5b0,%eax
mov    %cl,0x21(%esp)
shl    $0x8,%ecx
or     %edx,%ecx
test   %eax,%eax
jne    804b660 <fchmod@plt+0x21a0>
mov    %ebp,%eax
test   %al,%al
jne    804b638 <fchmod@plt+0x2178>
movzbl %bl,%edx
mov    %ecx,%eax
call   804aca0 <fchmod@plt+0x17e0>
test   $0x8,%bl
je     804b1b0 <fchmod@plt+0x1cf0>
mov    0x805e1f4,%eax
test   %eax,%eax
jne    804b27d <fchmod@plt+0x1dbd>
mov    0x805e5b4,%eax
test   %eax,%eax
jne    804b270 <fchmod@plt+0x1db0>
cmpl   $0x1,0x805e6d0
jg     804b27d <fchmod@plt+0x1dbd>
movl   $0x8096980,(%esp)
call   8051cc0 <fchmod@plt+0x8800>
mov    %edi,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %eax,%edi
jmp    804b13d <fchmod@plt+0x1c7d>
nop
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %al,(%edi)
add    $0x1,%edi
test   %al,%al
je     804b158 <fchmod@plt+0x1c98>
cmp    $0x8096d80,%edi
jae    804b946 <fchmod@plt+0x2486>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804b118 <fchmod@plt+0x1c58>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    804b128 <fchmod@plt+0x1c68>
mov    %ebp,%eax
mov    %edi,%edx
mov    0x1c(%esp),%edi
test   %al,%al
je     804b176 <fchmod@plt+0x1cb6>
mov    0x18(%esp),%eax
sub    %eax,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8051b10 <fchmod@plt+0x8650>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8051cc0 <fchmod@plt+0x8800>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049280 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049030 <memmove@plt>
lea    0x0(%esi,%eiz,1),%esi
test   $0x10,%bl
jne    804b293 <fchmod@plt+0x1dd3>
mov    %ebp,%eax
test   %al,%al
jne    804b2aa <fchmod@plt+0x1dea>
cmpl   $0x1,0x805e6d0
je     804b5a0 <fchmod@plt+0x20e0>
mov    0x805e1e8,%eax
test   %eax,%eax
js     804b1f8 <fchmod@plt+0x1d38>
mov    0x2c(%esp),%esi
xor    %gs:0x14,%esi
jne    804b941 <fchmod@plt+0x2481>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpl   $0x1,0x805e6d0
je     804b926 <fchmod@plt+0x2466>
cmpb   $0x0,0x22(%esp)
jne    804b240 <fchmod@plt+0x1d80>
test   %edi,%edi
jne    804b237 <fchmod@plt+0x1d77>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804b7b0 <fchmod@plt+0x22f0>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
test   %eax,%eax
je     804b210 <fchmod@plt+0x1d50>
mov    %eax,%edi
cmp    $0xffffffff,%edi
je     804b7c8 <fchmod@plt+0x2308>
mov    0x805e5ac,%ecx
test   %ecx,%ecx
je     804b698 <fchmod@plt+0x21d8>
mov    0x805e5a4,%edx
mov    $0xfffffffe,%eax
test   %edx,%edx
jne    804b1d9 <fchmod@plt+0x1d19>
movl   $0x2,0x805e5a4
00
jmp    804b1d9 <fchmod@plt+0x1d19>
mov    0x805e6dc,%eax
test   %eax,%eax
jne    804b0f2 <fchmod@plt+0x1c32>
movzbl %bl,%edx
mov    $0xffffffff,%eax
call   804aca0 <fchmod@plt+0x17e0>
test   $0x10,%bl
je     804b1b9 <fchmod@plt+0x1cf9>
mov    $0xffffffff,%eax
movzbl %bl,%edx
call   804aca0 <fchmod@plt+0x17e0>
mov    %ebp,%eax
test   %al,%al
je     804b1c3 <fchmod@plt+0x1d03>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8051b10 <fchmod@plt+0x8650>
mov    0x8092144,%edx
mov    0x80a6d98,%ebx
cmp    %ebx,%edx
movzwl %ax,%esi
jae    804b580 <fchmod@plt+0x20c0>
movzbl 0x80a6da0(%edx),%ebp
lea    0x1(%edx),%ecx
mov    %ecx,0x8092144
cmp    %ecx,%ebx
jbe    804b798 <fchmod@plt+0x22d8>
lea    0x1(%ecx),%eax
mov    %eax,0x8092144
movzbl 0x80a6da0(%ecx),%eax
shl    $0x8,%eax
or     %ebp,%eax
cmp    %esi,%eax
je     804b1c3 <fchmod@plt+0x1d03>
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
mov    %esi,0x14(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x80588a0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
cmpl   $0x1,0x805e6e8
movl   $0x1,0x805e5a4
00
jg     804b1c3 <fchmod@plt+0x1d03>
mov    $0xffffffff,%eax
jmp    804b1d9 <fchmod@plt+0x1d19>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    804af49 <fchmod@plt+0x1a89>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x80a6d98,%ecx
mov    0x8092144,%edx
jmp    804ad7e <fchmod@plt+0x18be>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    %eax,%ebx
jmp    804af82 <fchmod@plt+0x1ac2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %bl,%eax
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058824,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
cmpl   $0x1,0x805e6e8
movl   $0x1,0x805e5a4
00
jle    804b34a <fchmod@plt+0x1e8a>
mov    0x8092144,%ecx
mov    0x80a6d98,%edx
cmp    %edx,%ecx
jb     804afa8 <fchmod@plt+0x1ae8>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x80a6d98,%edx
mov    %eax,%ebp
mov    0x8092144,%eax
cmp    %edx,%eax
jb     804afbf <fchmod@plt+0x1aff>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x8092144,%ecx
mov    0x80a6d98,%edx
shl    $0x8,%eax
or     %eax,%ebp
cmp    %edx,%ecx
jb     804afdc <fchmod@plt+0x1b1c>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x80a6d98,%edx
mov    %eax,%ecx
mov    0x8092144,%eax
shl    $0x10,%ecx
or     %ebp,%ecx
cmp    %eax,%edx
ja     804aff8 <fchmod@plt+0x1b38>
movl   $0x0,(%esp)
mov    %ecx,0x18(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x8092144,%ebp
mov    0x80a6d98,%edx
mov    0x18(%esp),%ecx
shl    $0x18,%eax
jmp    804b00b <fchmod@plt+0x1b4b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
movb   $0x8,0x24(%esp)
mov    %ecx,%eax
shr    $0x8,%eax
mov    %al,0x27(%esp)
mov    %ecx,%eax
mov    %cl,0x26(%esp)
shr    $0x10,%eax
shr    $0x18,%ecx
mov    %bl,0x25(%esp)
mov    %al,0x28(%esp)
mov    %cl,0x29(%esp)
call   8051b10 <fchmod@plt+0x8650>
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   8051b10 <fchmod@plt+0x8650>
jmp    804b062 <fchmod@plt+0x1ba2>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    804b053 <fchmod@plt+0x1b93>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x80a6d98,%edx
mov    %eax,%ecx
mov    0x8092144,%eax
jmp    804b037 <fchmod@plt+0x1b77>
xchg   %ax,%ax
mov    %ecx,0x80a6d8c
movl   $0x0,0x80a6d90
00
jmp    804b020 <fchmod@plt+0x1b60>
lea    0x0(%esi),%esi
movl   $0x8051110,0x805e1dc
08
mov    $0x2,%al
movl   $0x2,0x805e1e8
00
jmp    804b1d9 <fchmod@plt+0x1d19>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x80a6d98,%ecx
mov    %eax,%ebx
mov    0x8092144,%eax
jmp    804aefb <fchmod@plt+0x1a3b>
xchg   %ax,%ax
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x8092144,%ecx
mov    0x80a6d98,%ebx
mov    %eax,%ebp
jmp    804b2e1 <fchmod@plt+0x1e21>
nop
mov    0x8092144,%eax
movl   $0x0,0x80aede4
00
add    $0x8,%eax
mov    %eax,0x80aede0
mov    0x805e1e8,%eax
jmp    804b1d5 <fchmod@plt+0x1d15>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    %eax,%edi
jmp    804ada1 <fchmod@plt+0x18e1>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    804aec7 <fchmod@plt+0x1a07>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x18(%esp),%edx
movzbl %al,%ecx
jmp    804b0a5 <fchmod@plt+0x1be5>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    0x8092144,%ecx
movzbl %al,%edx
mov    0x80a6d98,%eax
jmp    804b08a <fchmod@plt+0x1bca>
nop
lea    0x20(%esp),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8051b10 <fchmod@plt+0x8650>
mov    0x18(%esp),%ecx
jmp    804b0c5 <fchmod@plt+0x1c05>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80a6d88,%eax
mov    %ecx,0x10(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x805884c,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %ecx,0x18(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x18(%esp),%ecx
jmp    804b0bb <fchmod@plt+0x1bfb>
nop
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058914,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804b24e <fchmod@plt+0x1d8e>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8052250 <fchmod@plt+0x8d90>
mov    %eax,%edi
jmp    804af17 <fchmod@plt+0x1a57>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x8(%esp)
movl   $0x8059226,0x4(%esp)
mov    %esi,(%esp)
call   80490c0 <memcmp@plt>
test   %eax,%eax
je     804b860 <fchmod@plt+0x23a0>
mov    0x805e6e8,%eax
test   %eax,%eax
je     804b1f8 <fchmod@plt+0x1d38>
mov    0x805e5b4,%eax
test   %eax,%eax
je     804b1f8 <fchmod@plt+0x1d38>
mov    0x805e6dc,%ebp
test   %ebp,%ebp
jne    804b1f8 <fchmod@plt+0x1d38>
cmp    $0xffffffff,%edi
movl   $0x0,0x805e1e8
00
movl   $0x80520d0,0x805e1dc
08
je     804b748 <fchmod@plt+0x2288>
subl   $0x1,0x8092144
xor    %eax,%eax
cmp    $0xffffffff,%ebx
movl   $0x1,0x805e6d4
00
je     804b1d9 <fchmod@plt+0x1d19>
mov    0x805e560,%eax
mov    %eax,(%esp)
call   8049330 <fileno@plt>
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
addl   $0x1,0x80a6d80
adcl   $0x0,0x80a6d84
jmp    804b1d0 <fchmod@plt+0x1d10>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
shl    $0x8,%eax
jmp    804b2fb <fchmod@plt+0x1e3b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    804b231 <fchmod@plt+0x1d71>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e5b0,%edi
test   %edi,%edi
je     804b7f4 <fchmod@plt+0x2334>
mov    0x805e5ac,%esi
test   %esi,%esi
je     804b8c6 <fchmod@plt+0x2406>
mov    0x805e5a4,%ebx
test   %ebx,%ebx
jne    804b7f4 <fchmod@plt+0x2334>
movl   $0x2,0x805e5a4
00
mov    $0xfffffffd,%eax
jmp    804b1d9 <fchmod@plt+0x1d19>
xchg   %ax,%ax
movl   $0x4,0x8(%esp)
movl   $0x805921b,0x4(%esp)
movl   $0x80a6da0,(%esp)
call   80490c0 <memcmp@plt>
test   %eax,%eax
jne    804ae45 <fchmod@plt+0x1985>
mov    %ebp,(%esp)
movl   $0x0,0x8092144
00
movl   $0x80515f0,0x805e1dc
08
call   80514b0 <fchmod@plt+0x7ff0>
test   %eax,%eax
jne    804b34a <fchmod@plt+0x1e8a>
movl   $0x1,0x805e6d4
00
mov    0x805e1e8,%eax
jmp    804b1d5 <fchmod@plt+0x1d15>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80505a0,0x805e1dc
08
mov    $0x3,%al
movl   $0x3,0x805e1e8
00
movl   $0x1,0x805e6d4
00
jmp    804b1d9 <fchmod@plt+0x1d19>
lea    0x0(%esi),%esi
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x80587d0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    $0xffffffff,%eax
movl   $0x1,0x805e5a4
00
jmp    804b1d9 <fchmod@plt+0x1d19>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x80588dc,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804b7e0 <fchmod@plt+0x2320>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x80587fc,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
movl   $0x1,0x805e5a4
00
jmp    804b34a <fchmod@plt+0x1e8a>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059229,0x4(%esp)
mov    %eax,0x8(%esp)
jmp    804b90a <fchmod@plt+0x244a>
call   80490e0 <__stack_chk_fail@plt>
movl   $0x8058878,(%esp)
call   8051d40 <fchmod@plt+0x8880>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x30,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x805e180,%eax
test   %eax,%eax
je     804bb30 <fchmod@plt+0x2670>
test   %edx,%edx
js     804bb38 <fchmod@plt+0x2678>
mov    0x805e5b0,%eax
movl   $0x0,0x805e180
00
test   %eax,%eax
jne    804be98 <fchmod@plt+0x29d8>
mov    0x805e5ac,%eax
test   %eax,%eax
je     804be50 <fchmod@plt+0x2990>
mov    0x8092150,%ecx
cmp    $0x8,%esi
mov    0x8092154,%ebx
movl   $0xffffffff,0x80a6d80
ff
movl   $0xffffffff,0x80a6d84
ff
mov    %ecx,0x8062120
mov    %ebx,0x8062124
je     804bd78 <fchmod@plt+0x28b8>
mov    $0xffffffff,%edi
mov    0x805e5b0,%eax
test   %eax,%eax
jne    804bc98 <fchmod@plt+0x27d8>
mov    0x8062120,%eax
mov    0x8062124,%edx
movl   $0x13,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x805e560,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8052360 <fchmod@plt+0x8ea0>
movl   $0x805928b,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    0x80a6d80,%eax
mov    0x80a6d84,%edx
movl   $0x13,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x805e560,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8052360 <fchmod@plt+0x8ea0>
movl   $0x805928b,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    0x8062120,%esi
mov    0x8062124,%edi
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     804bd00 <fchmod@plt+0x2840>
mov    0x805e62c,%edx
mov    0x805e628,%eax
test   %edx,%edx
js     804ba95 <fchmod@plt+0x25d5>
add    %esi,%eax
adc    %edi,%edx
mov    %eax,0x805e628
mov    %edx,0x805e62c
mov    0x80a6d80,%eax
mov    0x80a6d84,%edx
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804bc38 <fchmod@plt+0x2778>
mov    0x805e624,%ebx
mov    0x805e620,%ecx
test   %ebx,%ebx
js     804bacd <fchmod@plt+0x260d>
add    %eax,%ecx
adc    %edx,%ebx
mov    %ecx,0x805e620
mov    %ebx,0x805e624
mov    %eax,%ecx
mov    %edx,%ebx
add    0x80aede0,%ecx
adc    0x80aede4,%ebx
sub    %esi,%ecx
sbb    %edi,%ebx
mov    0x805e560,%esi
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0x4(%esp)
call   8052300 <fchmod@plt+0x8e40>
movl   $0x8096980,0x4(%esp)
movl   $0x8059d8b,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    804bf1a <fchmod@plt+0x2a5a>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jns    804b9af <fchmod@plt+0x24ef>
mov    0x805e62c,%ecx
mov    0x805e628,%ebx
cmp    $0x0,%ecx
jl     804bb13 <fchmod@plt+0x2653>
jle    804bef8 <fchmod@plt+0x2a38>
cmpl   $0x0,0x805e624
jl     804bb13 <fchmod@plt+0x2653>
jle    804bf08 <fchmod@plt+0x2a48>
mov    0x805e5b0,%esi
mov    %ebx,%eax
mov    %ecx,%edx
test   %esi,%esi
jne    804bec8 <fchmod@plt+0x2a08>
mov    0x805e5ac,%ecx
test   %ecx,%ecx
jne    804bbe2 <fchmod@plt+0x2722>
mov    %eax,0x4(%esp)
mov    0x805e560,%eax
mov    %edx,0x8(%esp)
movl   $0x13,0xc(%esp)
mov    %eax,(%esp)
call   8052360 <fchmod@plt+0x8ea0>
movl   $0x805928b,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    0x805e620,%eax
mov    0x805e624,%edx
movl   $0x13,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x805e560,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8052360 <fchmod@plt+0x8ea0>
movl   $0x805928b,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    0x805e628,%eax
mov    0x805e62c,%edx
mov    0x805e620,%ecx
mov    0x805e624,%ebx
mov    0x805e560,%esi
mov    %ecx,0x8(%esp)
sub    %eax,%ecx
mov    %ebx,0xc(%esp)
sbb    %edx,%ebx
mov    %ecx,%eax
mov    %ebx,%edx
add    0x80aede0,%eax
adc    0x80aede4,%edx
mov    %esi,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8052300 <fchmod@plt+0x8e40>
movl   $0x805928d,(%esp)
call   8055210 <fchmod@plt+0xbd50>
jmp    804bb13 <fchmod@plt+0x2653>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x805e620
ff
xor    %ecx,%ecx
xor    %ebx,%ebx
movl   $0xffffffff,0x805e624
ff
xor    %eax,%eax
xor    %edx,%edx
movl   $0x0,0x80aede0
00
movl   $0x0,0x80aede4
00
movl   $0x0,0x80a6d80
00
movl   $0x0,0x80a6d84
00
movl   $0x0,0x8062120
00
movl   $0x0,0x8062124
00
jmp    804bae1 <fchmod@plt+0x2621>
lea    0x0(%esi),%esi
movl   $0x80a6d8c,(%esp)
call   8049260 <localtime@plt>
mov    %edi,0x8(%esp)
movl   $0x8059298,(%esp)
mov    %eax,%ebx
mov    0x8059680(,%esi,4),%eax
mov    %eax,0x4(%esp)
call   8055210 <fchmod@plt+0xbd50>
test   %ebx,%ebx
je     804beb0 <fchmod@plt+0x29f0>
mov    0xc(%ebx),%eax
mov    0x4(%ebx),%ecx
mov    0x8(%ebx),%edx
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    0x10(%ebx),%eax
movl   $0x80592a3,(%esp)
lea    0x8059500(,%eax,4),%eax
mov    %eax,0x4(%esp)
call   8055210 <fchmod@plt+0xbd50>
jmp    804b9f6 <fchmod@plt+0x2536>
lea    0x0(%esi),%esi
mov    0x805e624,%ebx
xor    %eax,%eax
xor    %edx,%edx
xor    %esi,%esi
xor    %edi,%edi
mov    0x805e620,%ecx
movl   $0xffffffff,0x805e628
ff
movl   $0xffffffff,0x805e62c
ff
test   %ebx,%ebx
movl   $0x0,0x80aede0
00
movl   $0x0,0x80aede4
00
movl   $0x0,0x80a6d80
00
movl   $0x0,0x80a6d84
00
movl   $0x0,0x8062120
00
movl   $0x0,0x8062124
00
jns    804babd <fchmod@plt+0x25fd>
jmp    804bacd <fchmod@plt+0x260d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e6d4,%edx
test   %edx,%edx
jne    804b9e4 <fchmod@plt+0x2524>
movl   $0x2,0xc(%esp)
movl   $0xfffffff8,0x4(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %edi,(%esp)
call   80493b0 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
mov    %eax,0x8062120
mov    %edx,0x8062124
je     804b9e4 <fchmod@plt+0x2524>
add    $0x8,%eax
mov    %eax,0x8062120
lea    0x24(%esp),%eax
adc    $0x0,%edx
movl   $0x8,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8062124
call   8048fe0 <read@plt>
cmp    $0x8,%eax
jne    804bf1f <fchmod@plt+0x2a5f>
movzbl 0x27(%esp),%edi
movzbl 0x26(%esp),%eax
movzbl 0x24(%esp),%edx
movzbl 0x28(%esp),%ecx
shl    $0x8,%edi
or     %eax,%edi
movzbl 0x25(%esp),%eax
shl    $0x10,%edi
movl   $0x0,0x80a6d84
00
shl    $0x8,%eax
or     %edx,%eax
movzbl 0x2a(%esp),%edx
or     %eax,%edi
movzbl 0x2b(%esp),%eax
shl    $0x8,%eax
or     %edx,%eax
movzbl 0x29(%esp),%edx
shl    $0x10,%eax
shl    $0x8,%edx
or     %ecx,%edx
or     %edx,%eax
mov    %eax,0x80a6d80
jmp    804b9e9 <fchmod@plt+0x2529>
lea    0x0(%esi),%esi
movl   $0x8059263,0x18(%esp)
movl   $0x13,0x14(%esp)
movl   $0x13,0x10(%esp)
movl   $0x8059265,0xc(%esp)
movl   $0x13,0x8(%esp)
movl   $0x13,0x4(%esp)
movl   $0x805894c,(%esp)
call   8055210 <fchmod@plt+0xbd50>
jmp    804b9af <fchmod@plt+0x24ef>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8059246,(%esp)
call   8055210 <fchmod@plt+0xbd50>
jmp    804b9a2 <fchmod@plt+0x24e2>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80592b4,(%esp)
call   8055210 <fchmod@plt+0xbd50>
jmp    804b9f6 <fchmod@plt+0x2536>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8059270,(%esp)
call   8055210 <fchmod@plt+0xbd50>
mov    0x805e5b0,%ebx
mov    0x805e628,%eax
mov    0x805e62c,%edx
test   %ebx,%ebx
jne    804bb7a <fchmod@plt+0x26ba>
jmp    804bb70 <fchmod@plt+0x26b0>
lea    0x0(%esi),%esi
cmp    $0x0,%ebx
jbe    804bb13 <fchmod@plt+0x2653>
jmp    804bb4f <fchmod@plt+0x268f>
xchg   %ax,%ax
cmpl   $0x0,0x805e620
jbe    804bb13 <fchmod@plt+0x2653>
jmp    804bb5e <fchmod@plt+0x269e>
call   80490e0 <__stack_chk_fail@plt>
nop
call   8051fc0 <fchmod@plt+0x8b00>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x805e5b8,%eax
test   %eax,%eax
jne    804bf77 <fchmod@plt+0x2ab7>
mov    0x805e6cc,%eax
movl   $0x1,0x805e5b8
00
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    0x805e6c8,%eax
movl   $0x0,0x805e6cc
00
mov    %eax,(%esp)
call   8049040 <free@plt>
movl   $0x0,0x805e6c8
00
mov    %ebx,(%esp)
call   8049230 <exit@plt>
nop
sub    $0x1c,%esp
mov    0x80a6d88,%eax
movl   $0x8058974,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    $0x1,%eax
call   804bf30 <fchmod@plt+0x2a70>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x1,%ebx
sub    $0x18,%esp
mov    0x805e6ec,%edx
test   %edx,%edx
je     804bfdb <fchmod@plt+0x2b1b>
mov    0x805e6d4,%eax
test   %eax,%eax
jne    804bfdb <fchmod@plt+0x2b1b>
mov    0x8092144,%eax
xor    %bl,%bl
cmp    0x80a6d98,%eax
je     804bfe8 <fchmod@plt+0x2b28>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
cmp    $0x8000,%eax
mov    $0x1,%bl
jne    804bfdb <fchmod@plt+0x2b1b>
movl   $0x1,(%esp)
call   8052250 <fchmod@plt+0x8d90>
cmp    $0xffffffff,%eax
je     804bfdb <fchmod@plt+0x2b1b>
movl   $0x0,0x8092144
00
xor    %bl,%bl
jmp    804bfdb <fchmod@plt+0x2b1b>
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x805e6e8,%edx
test   %edx,%edx
jne    804c02c <fchmod@plt+0x2b6c>
mov    0x805e6dc,%eax
test   %eax,%eax
je     804c1d8 <fchmod@plt+0x2d18>
mov    $0x6e,%eax
mov    %ax,0x8061d24
mov    $0x7475,%eax
mov    %ax,0x8096984
mov    0x805e544,%eax
movl   $0x69647473,0x8061d20
69
movl   $0x6f647473,0x8096980
6f
movb   $0x0,0x8096986
mov    %eax,(%esp)
call   8049330 <fileno@plt>
movl   $0x805e5c0,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049160 <__fxstat64@plt>
test   %eax,%eax
jne    804c34f <fchmod@plt+0x2e8f>
mov    0x805e5d0,%ecx
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
and    $0xf000,%ecx
cmp    $0x8000,%ecx
je     804c290 <fchmod@plt+0x2dd0>
mov    %eax,0x8092150
mov    0x805e1f0,%eax
mov    %edx,0x8092154
movl   $0xffffffff,0x80a6d90
ff
test   %eax,%eax
je     804c198 <fchmod@plt+0x2cd8>
mov    0x805e6dc,%eax
test   %eax,%eax
jne    804c198 <fchmod@plt+0x2cd8>
call   8051b70 <fchmod@plt+0x86b0>
mov    0x805e544,%eax
movl   $0x1,0x805e5b4
00
movl   $0x0,0x805e6d0
00
mov    %eax,(%esp)
call   8049330 <fileno@plt>
mov    0x805e6ec,%esi
test   %esi,%esi
mov    %eax,0x8096960
jne    804c270 <fchmod@plt+0x2db0>
mov    0x805e6dc,%ebx
test   %ebx,%ebx
je     804c15d <fchmod@plt+0x2c9d>
jmp    804c320 <fchmod@plt+0x2e60>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804bfb0 <fchmod@plt+0x2af0>
test   %eax,%eax
nop
jne    804c2a0 <fchmod@plt+0x2de0>
mov    0x8096960,%eax
call   804ad30 <fchmod@plt+0x1870>
test   %eax,%eax
mov    %eax,0x805e1e8
js     804c18c <fchmod@plt+0x2ccc>
movl   $0x0,0x80a6d80
00
movl   $0x0,0x80a6d84
00
mov    0x805e560,%eax
mov    0x805e1dc,%ebx
mov    %eax,(%esp)
call   8049330 <fileno@plt>
mov    %eax,%esi
mov    0x805e544,%eax
mov    %eax,(%esp)
call   8049330 <fileno@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   *%ebx
test   %eax,%eax
je     804c128 <fchmod@plt+0x2c68>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
cmp    $0x8000,%ecx
je     804c1b8 <fchmod@plt+0x2cf8>
movl   $0x80a6d8c,(%esp)
call   8052bd0 <fchmod@plt+0x9710>
jmp    804c0db <fchmod@plt+0x2c1b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e608,%eax
mov    %eax,0x80a6d8c
mov    0x805e60c,%eax
mov    %eax,0x80a6d90
jmp    804c0db <fchmod@plt+0x2c1b>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x805e6f4
jne    804c20c <fchmod@plt+0x2d4c>
mov    0x805e6ec,%eax
test   %eax,%eax
mov    0x805e544,%eax
cmove  0x805e560,%eax
mov    %eax,(%esp)
call   8049330 <fileno@plt>
mov    %eax,(%esp)
call   80493e0 <isatty@plt>
test   %eax,%eax
je     804c02c <fchmod@plt+0x2b6c>
cmpl   $0x0,0x805e5ac
jne    804c359 <fchmod@plt+0x2e99>
cmpl   $0x0,0x805e6ec
mov    $0x805921f,%eax
mov    $0x80592c2,%edx
mov    $0x80592cf,%ecx
movl   $0x805899c,0x4(%esp)
cmove  %eax,%edx
mov    $0x80592c5,%eax
cmove  %ecx,%eax
mov    0x80a6d88,%ecx
mov    %eax,0xc(%esp)
mov    0x805e520,%eax
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c359 <fchmod@plt+0x2e99>
lea    0x0(%esi),%esi
call   804ad30 <fchmod@plt+0x1870>
test   %eax,%eax
mov    %eax,0x805e1e8
jns    804c114 <fchmod@plt+0x2c54>
mov    0x805e5a4,%eax
call   804bf30 <fchmod@plt+0x2a70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e5ec,%eax
mov    0x805e5f0,%edx
jmp    804c0ac <fchmod@plt+0x2bec>
mov    0x805e5b0,%ecx
test   %ecx,%ecx
je     804c18c <fchmod@plt+0x2ccc>
mov    0x805e5a8,%edx
test   %edx,%edx
jne    804c335 <fchmod@plt+0x2e75>
mov    0x805e6ec,%eax
test   %eax,%eax
jne    804c18c <fchmod@plt+0x2ccc>
mov    0x8062120,%eax
mov    0x8062124,%edx
mov    0x805e520,%ecx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
add    0x80aede0,%eax
adc    0x80aede4,%edx
sub    0x80a6d80,%eax
sbb    0x80a6d84,%edx
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8052300 <fchmod@plt+0x8e40>
mov    0x805e520,%eax
movl   $0x8059418,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c18c <fchmod@plt+0x2ccc>
mov    0x805e1e8,%edx
mov    0x8096960,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804b960 <fchmod@plt+0x24a0>
mov    0x805e520,%eax
movl   $0x80592e9,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c18c <fchmod@plt+0x2ccc>
mov    $0x80592da,%eax
call   804ab10 <fchmod@plt+0x1650>
mov    $0x1,%eax
call   804bf30 <fchmod@plt+0x2a70>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    0x805e5b4,%edx
test   %edx,%edx
jne    804c38b <fchmod@plt+0x2ecb>
mov    0x805e6e8,%eax
test   %eax,%eax
je     804c3d0 <fchmod@plt+0x2f10>
mov    $0x900,%edx
movl   $0x180,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x8061d20,(%esp)
call   8052b90 <fchmod@plt+0x96d0>
test   %eax,%eax
mov    %eax,%ebx
js     804c3c6 <fchmod@plt+0x2f06>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   8049160 <__fxstat64@plt>
test   %eax,%eax
jne    804c3d7 <fchmod@plt+0x2f17>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0x20900,%edx
jmp    804c390 <fchmod@plt+0x2ed0>
call   8049320 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049430 <close@plt>
mov    %edi,(%esi)
jmp    804c3c6 <fchmod@plt+0x2f06>
jmp    804c400 <fchmod@plt+0x2f40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4cc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4bc(%esp)
xor    %eax,%eax
mov    0x805e6c4,%eax
mov    %edi,(%esp)
mov    %eax,0x805e1c4
call   8049280 <strlen@plt>
cmp    $0x3fe,%eax
ja     804c8d4 <fchmod@plt+0x3414>
add    $0x1,%eax
movl   $0x400,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x8061d20,(%esp)
call   8049210 <__memcpy_chk@plt>
mov    $0x805e5c0,%eax
call   804c370 <fchmod@plt+0x2eb0>
test   %eax,%eax
mov    %eax,%ebx
js     804c798 <fchmod@plt+0x32d8>
mov    0x805e5d0,%eax
mov    %ebx,0x8096960
mov    %eax,%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     804c758 <fchmod@plt+0x3298>
mov    0x805e5b4,%esi
test   %esi,%esi
jne    804c4e8 <fchmod@plt+0x3028>
cmp    $0x8000,%ecx
je     804cc38 <fchmod@plt+0x3778>
mov    0x805e5ac,%eax
test   %eax,%eax
je     804cae0 <fchmod@plt+0x3620>
mov    0x805e5a4,%eax
test   %eax,%eax
jne    804c4c0 <fchmod@plt+0x3000>
movl   $0x2,0x805e5a4
00
mov    %ebx,(%esp)
call   8049430 <close@plt>
mov    0x4bc(%esp),%eax
xor    %gs:0x14,%eax
jne    804d699 <fchmod@plt+0x41d9>
add    $0x4cc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x8000,%ecx
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
je     804cc28 <fchmod@plt+0x3768>
mov    0x805e1f0,%ebp
mov    %eax,0x8092150
mov    %edx,0x8092154
movl   $0xffffffff,0x80a6d90
ff
test   %ebp,%ebp
jne    804c960 <fchmod@plt+0x34a0>
mov    0x805e608,%eax
mov    %eax,0x80a6d8c
mov    0x805e60c,%eax
mov    %eax,0x80a6d90
test   %esi,%esi
je     804c551 <fchmod@plt+0x3091>
mov    0x805e6dc,%esi
test   %esi,%esi
jne    804c551 <fchmod@plt+0x3091>
mov    0x805e5a8,%ebx
test   %ebx,%ebx
je     804cf00 <fchmod@plt+0x3a40>
movl   $0x400,0x8(%esp)
movl   $0x8061d20,0x4(%esp)
movl   $0x8096980,(%esp)
call   8049340 <__strcpy_chk@plt>
mov    $0x8096980,%eax
call   804ab60 <fchmod@plt+0x16a0>
mov    0x805e6ec,%edx
test   %edx,%edx
mov    %eax,%ebx
je     804c978 <fchmod@plt+0x34b8>
test   %eax,%eax
je     804cf50 <fchmod@plt+0x3a90>
mov    %eax,(%esp)
mov    $0x8059328,%edi
mov    %ebx,%esi
call   8051c70 <fchmod@plt+0x87b0>
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804c5bb <fchmod@plt+0x30fb>
mov    $0x805932d,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cef8 <fchmod@plt+0x3a38>
movl   $0x7261742e,(%ebx)
movb   $0x0,0x4(%ebx)
call   8051b70 <fchmod@plt+0x86b0>
mov    0x805e6ec,%edx
movl   $0x0,0x805e6d0
00
test   %edx,%edx
jne    804ce30 <fchmod@plt+0x3970>
mov    0x805e6dc,%eax
test   %eax,%eax
jne    804ce50 <fchmod@plt+0x3990>
mov    0x805e5b4,%eax
test   %eax,%eax
je     804cb38 <fchmod@plt+0x3678>
mov    0x805e560,%eax
mov    %eax,(%esp)
call   8049330 <fileno@plt>
mov    %eax,0x8092140
mov    0x8092148,%esi
test   %esi,%esi
je     804ce80 <fchmod@plt+0x39c0>
mov    0x805e5b0,%eax
test   %eax,%eax
je     804c660 <fchmod@plt+0x31a0>
jmp    804d1fb <fchmod@plt+0x3d3b>
lea    0x0(%esi),%esi
call   804bfb0 <fchmod@plt+0x2af0>
test   %eax,%eax
jne    804c685 <fchmod@plt+0x31c5>
mov    0x8096960,%eax
call   804ad30 <fchmod@plt+0x1870>
test   %eax,%eax
mov    %eax,0x805e1e8
js     804c685 <fchmod@plt+0x31c5>
movl   $0x0,0x80a6d80
00
movl   $0x0,0x80a6d84
00
mov    0x8092140,%eax
mov    %eax,0x4(%esp)
mov    0x8096960,%eax
mov    %eax,(%esp)
call   *0x805e1dc
test   %eax,%eax
je     804c630 <fchmod@plt+0x3170>
movl   $0xffffffff,0x805e1e8
ff
mov    0x8096960,%eax
mov    %eax,(%esp)
call   8049430 <close@plt>
test   %eax,%eax
jne    804ce75 <fchmod@plt+0x39b5>
mov    0x805e5b4,%ebx
test   %ebx,%ebx
je     804cfa2 <fchmod@plt+0x3ae2>
cmpl   $0xffffffff,0x805e1e8
je     804d21d <fchmod@plt+0x3d5d>
mov    0x805e5b0,%esi
test   %esi,%esi
je     804c4c8 <fchmod@plt+0x3008>
mov    0x805e5a8,%ebx
test   %ebx,%ebx
jne    804cf36 <fchmod@plt+0x3a76>
mov    0x805e6ec,%ecx
test   %ecx,%ecx
je     804d34d <fchmod@plt+0x3e8d>
mov    0x80a6d80,%eax
mov    0x80a6d84,%edx
mov    0x805e520,%ecx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
add    0x80aede0,%eax
adc    0x80aede4,%edx
sub    0x8062120,%eax
sbb    0x8062124,%edx
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8052300 <fchmod@plt+0x8e40>
mov    0x805e5a8,%edx
test   %edx,%edx
jne    804c737 <fchmod@plt+0x3277>
mov    0x805e5b4,%eax
test   %eax,%eax
je     804d493 <fchmod@plt+0x3fd3>
mov    0x805e520,%eax
movl   $0x8059418,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c4c8 <fchmod@plt+0x3008>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e6e0,%eax
mov    %ebx,(%esp)
test   %eax,%eax
jne    804c9f0 <fchmod@plt+0x3530>
call   8049430 <close@plt>
mov    0x805e5ac,%eax
test   %eax,%eax
je     804d1d0 <fchmod@plt+0x3d10>
mov    0x805e5a4,%eax
test   %eax,%eax
jne    804c4c8 <fchmod@plt+0x3008>
movl   $0x2,0x805e5a4
00
jmp    804c4c8 <fchmod@plt+0x3008>
xchg   %ax,%ax
mov    0x805e6ec,%eax
test   %eax,%eax
je     804c942 <fchmod@plt+0x3482>
call   8049320 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,0x2c(%esp)
jne    804c942 <fchmod@plt+0x3482>
mov    $0x8061d20,%eax
call   804ab60 <fchmod@plt+0x16a0>
test   %eax,%eax
jne    804c942 <fchmod@plt+0x3482>
mov    $0x8061d20,%ecx
mov    (%ecx),%edx
add    $0x4,%ecx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     804c7ce <fchmod@plt+0x330e>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ecx),%edx
cmovne %ecx,%edx
add    %al,%al
mov    0x805e6c4,%eax
mov    %edx,0x28(%esp)
sbbl   $0x3,0x28(%esp)
subl   $0x8061d20,0x28(%esp)
cmpb   $0x2e,(%eax)
jne    804c828 <fchmod@plt+0x3368>
cmpb   $0x67,0x1(%eax)
jne    804c828 <fchmod@plt+0x3368>
cmpb   $0x7a,0x2(%eax)
je     804cf22 <fchmod@plt+0x3a62>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805e1c4,%esi
mov    (%esi),%ebx
xor    %ebp,%ebp
mov    %edi,0x24(%esp)
jmp    804c897 <fchmod@plt+0x33d7>
nop
add    $0x1,%eax
movl   $0x400,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049210 <__memcpy_chk@plt>
mov    $0x805e5c0,%eax
call   804c370 <fchmod@plt+0x2eb0>
test   %eax,%eax
jns    804cea0 <fchmod@plt+0x39e0>
mov    0x2c(%esp),%eax
cmpl   $0x2,(%eax)
jne    804c942 <fchmod@plt+0x3482>
mov    0x805e6c4,%edi
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8048fc0 <strcmp@plt>
test   %eax,%eax
mov    $0x2,%eax
cmove  %eax,%ebp
add    $0x4,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
je     804c908 <fchmod@plt+0x3448>
mov    0x24(%esp),%eax
movl   $0x400,0x8(%esp)
movl   $0x8061d20,(%esp)
mov    %eax,0x4(%esp)
call   8049290 <__stpcpy_chk@plt>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8049280 <strlen@plt>
mov    0x28(%esp),%ecx
lea    (%eax,%ecx,1),%edx
cmp    $0x3ff,%edx
jbe    804c838 <fchmod@plt+0x3378>
mov    0x24(%esp),%edi
mov    0x80a6d88,%eax
mov    %edi,0xc(%esp)
movl   $0x80592ee,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
movl   $0x1,0x805e5a4
00
jmp    804c94c <fchmod@plt+0x348c>
lea    0x0(%esi),%esi
mov    %ebp,%esi
mov    %edi,%ebp
mov    0x24(%esp),%edi
movl   $0x400,0x8(%esp)
movl   $0x8061d20,(%esp)
mov    %edi,0x4(%esp)
call   8049290 <__stpcpy_chk@plt>
movl   $0x400,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049340 <__strcpy_chk@plt>
mov    0x2c(%esp),%eax
mov    %esi,(%eax)
mov    $0x8061d20,%eax
call   804ab10 <fchmod@plt+0x1650>
movl   $0xffffffff,0x8096960
ff
jmp    804c4c8 <fchmod@plt+0x3008>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e6dc,%edi
test   %edi,%edi
je     804c535 <fchmod@plt+0x3075>
jmp    804c521 <fchmod@plt+0x3061>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     804ccc8 <fchmod@plt+0x3808>
mov    0x805e6e8,%eax
test   %eax,%eax
jne    804ccc8 <fchmod@plt+0x3808>
mov    0x805e5b0,%ebp
test   %ebp,%ebp
jne    804c9ab <fchmod@plt+0x34eb>
mov    0x805e6e0,%edi
test   %edi,%edi
jne    804c9d8 <fchmod@plt+0x3518>
mov    0x805e5ac,%esi
test   %esi,%esi
jne    804c9d8 <fchmod@plt+0x3518>
mov    0x80a6d88,%eax
mov    %ebx,0x10(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x8058b38,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
lea    0x0(%esi),%esi
mov    0x8096960,%eax
mov    %eax,(%esp)
call   8049430 <close@plt>
jmp    804c4c8 <fchmod@plt+0x3008>
lea    0x0(%esi),%esi
call   8049390 <fdopendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d47f <fchmod@plt+0x3fbf>
mov    %eax,(%esp)
call   8054170 <fchmod@plt+0xacb0>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804d633 <fchmod@plt+0x4173>
mov    %esi,(%esp)
call   8049440 <closedir@plt>
test   %eax,%eax
jne    804d235 <fchmod@plt+0x3d75>
mov    0x24(%esp),%eax
test   %eax,%eax
je     804c4c8 <fchmod@plt+0x3008>
cmpb   $0x0,(%eax)
mov    %eax,%ebx
je     804cacd <fchmod@plt+0x360d>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049280 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049280 <strlen@plt>
cmpb   $0x2e,(%ebx)
mov    %eax,%esi
je     804cb18 <fchmod@plt+0x3658>
lea    (%esi,%ebp,1),%eax
cmp    $0x3fd,%eax
ja     804cc90 <fchmod@plt+0x37d0>
lea    0x1(%ebp),%edx
lea    0xbc(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x400,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   8049210 <__memcpy_chk@plt>
test   %ebp,%ebp
mov    0x28(%esp),%edx
lea    0xbc(%esp),%eax
jne    804cee9 <fchmod@plt+0x3a29>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049180 <strcpy@plt>
lea    0xbc(%esp),%eax
call   804d6d0 <fchmod@plt+0x4210>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ebx,%esi,1),%ebx
cmpb   $0x0,(%ebx)
jne    804ca40 <fchmod@plt+0x3580>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049040 <free@plt>
jmp    804c4c8 <fchmod@plt+0x3008>
xchg   %ax,%ax
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058a20,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8096960,%ebx
jmp    804c4ad <fchmod@plt+0x2fed>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebx),%eax
test   %al,%al
je     804cac0 <fchmod@plt+0x3600>
cmp    $0x2e,%al
jne    804ca5d <fchmod@plt+0x359d>
cmpb   $0x0,0x2(%ebx)
je     804cac0 <fchmod@plt+0x3600>
xchg   %ax,%ax
jmp    804ca5d <fchmod@plt+0x359d>
lea    0x0(%esi),%esi
call   8049320 <__errno_location@plt>
xor    %ebx,%ebx
lea    0x3c(%esp),%ebp
mov    %eax,0x24(%esp)
mov    %ebp,0x8(%esp)
movl   $0x805e640,0x4(%esp)
movl   $0x0,(%esp)
call   8049010 <sigprocmask@plt>
movl   $0x180,0x8(%esp)
movl   $0xc1,0x4(%esp)
movl   $0x8096980,(%esp)
call   8052b90 <fchmod@plt+0x96d0>
mov    %eax,0x8092140
mov    %eax,0x805e1e0
mov    0x24(%esp),%eax
mov    (%eax),%esi
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x2,(%esp)
call   8049010 <sigprocmask@plt>
mov    0x8092140,%eax
test   %eax,%eax
jns    804d4b5 <fchmod@plt+0x3ff5>
cmp    $0x11,%esi
je     804cd68 <fchmod@plt+0x38a8>
cmp    $0x24,%esi
jne    804cd48 <fchmod@plt+0x3888>
mov    $0x8096980,%ebx
mov    (%ebx),%edx
add    $0x4,%ebx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     804cbc7 <fchmod@plt+0x3707>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ebx),%edx
cmove  %edx,%ebx
add    %al,%al
mov    0x805e6ec,%eax
sbb    $0x3,%ebx
sub    $0x8096980,%ebx
test   %eax,%eax
je     804d245 <fchmod@plt+0x3d85>
cmp    $0x1,%ebx
jle    804d69e <fchmod@plt+0x41de>
movb   $0x0,0x809697f(%ebx)
mov    $0x1,%ebx
jmp    804cb47 <fchmod@plt+0x3687>
lea    0x0(%esi),%esi
mov    0x805e5ec,%eax
mov    0x805e5f0,%edx
jmp    804c4fe <fchmod@plt+0x303e>
test   $0x8,%ah
jne    804ceab <fchmod@plt+0x39eb>
test   $0x4,%ah
je     804d393 <fchmod@plt+0x3ed3>
mov    0x805e5ac,%ebp
test   %ebp,%ebp
jne    804c4ad <fchmod@plt+0x2fed>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058a88,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8096960,%ebx
jmp    804c4ad <fchmod@plt+0x2fed>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80a6d88,%eax
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x805930a,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
movl   $0x1,0x805e5a4
00
jmp    804cac0 <fchmod@plt+0x3600>
lea    0x0(%esi),%esi
movl   $0x0,0x8092148
00
mov    $0x8096980,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804ccd7 <fchmod@plt+0x3817>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
mov    0x805e6c0,%eax
sbb    $0x3,%edx
sub    $0x8096980,%edx
add    %edx,%eax
cmp    $0x3ff,%eax
jbe    804d45b <fchmod@plt+0x3f9b>
mov    0x805e5ac,%ecx
test   %ecx,%ecx
je     804d430 <fchmod@plt+0x3f70>
mov    0x805e5a4,%edi
test   %edi,%edi
jne    804c9d8 <fchmod@plt+0x3518>
movl   $0x2,0x805e5a4
00
jmp    804c9d8 <fchmod@plt+0x3518>
mov    $0x8096980,%eax
call   804ab10 <fchmod@plt+0x1650>
mov    0x8096960,%eax
mov    %eax,(%esp)
call   8049430 <close@plt>
jmp    804c4c8 <fchmod@plt+0x3008>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e6e8,%eax
test   %eax,%eax
jne    804ce0b <fchmod@plt+0x394b>
mov    0x80a6d88,%eax
movl   $0x8096980,0xc(%esp)
movl   $0x805935c,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x805e6d8,%eax
test   %eax,%eax
jne    804cdbe <fchmod@plt+0x38fe>
mov    0x805e520,%eax
movl   $0x8059373,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804cd2b <fchmod@plt+0x386b>
cmpb   $0x0,0x805e6f4
jne    804cde0 <fchmod@plt+0x3920>
mov    0x805e544,%eax
mov    %eax,(%esp)
call   8049330 <fileno@plt>
mov    %eax,(%esp)
call   80493e0 <isatty@plt>
test   %eax,%eax
je     804cda4 <fchmod@plt+0x38e4>
mov    0x805e520,%eax
movl   $0x8058b84,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8054ff0 <fchmod@plt+0xbb30>
call   8054e80 <fchmod@plt+0xb9c0>
test   %al,%al
je     804cda4 <fchmod@plt+0x38e4>
movl   $0x8096980,(%esp)
call   8051cf0 <fchmod@plt+0x8830>
test   %eax,%eax
je     804cb47 <fchmod@plt+0x3687>
mov    $0x8096980,%eax
call   804ab10 <fchmod@plt+0x1650>
jmp    804c9d8 <fchmod@plt+0x3518>
xchg   %ax,%ax
mov    0x8096960,%eax
call   804ad30 <fchmod@plt+0x1870>
test   %eax,%eax
mov    %eax,0x805e1e8
jns    804c5e2 <fchmod@plt+0x3122>
jmp    804c9d8 <fchmod@plt+0x3518>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e1e8,%edx
mov    0x8096960,%eax
call   804b960 <fchmod@plt+0x24a0>
mov    0x8096960,%eax
mov    %eax,(%esp)
call   8049430 <close@plt>
test   %eax,%eax
je     804c4c8 <fchmod@plt+0x3008>
call   8051fc0 <fchmod@plt+0x8b00>
lea    0x0(%esi),%esi
mov    0x805e1f4,%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    %eax,0x8092148
mov    0x805e5b0,%eax
jmp    804c621 <fchmod@plt+0x3161>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edi
mov    %eax,%ebx
jmp    804c46b <fchmod@plt+0x2fab>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804c4ad <fchmod@plt+0x2fed>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058a58,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8096960,%ebx
jmp    804c4ad <fchmod@plt+0x2fed>
movb   $0x2f,0xbc(%esp,%ebp,1)
add    %edx,%eax
jmp    804caa4 <fchmod@plt+0x35e4>
movb   $0x0,(%ebx)
jmp    804c5c5 <fchmod@plt+0x3105>
mov    $0x7475,%ecx
movl   $0x6f647473,0x8096980
6f
mov    %cx,0x8096984
movb   $0x0,0x8096986
jmp    804c5c5 <fchmod@plt+0x3105>
cmpb   $0x0,0x3(%eax)
jne    804c828 <fchmod@plt+0x3368>
mov    $0x805e1c8,%esi
jmp    804c82d <fchmod@plt+0x336d>
mov    0x805e520,%eax
movl   $0x80593bc,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c720 <fchmod@plt+0x3260>
mov    0x805e6e0,%eax
test   %eax,%eax
je     804d3f0 <fchmod@plt+0x3f30>
cmpl   $0x0,0x805e5b0
je     804c9d8 <fchmod@plt+0x3518>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804cd2b <fchmod@plt+0x386b>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058b14,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804cd2b <fchmod@plt+0x386b>
mov    0x805e600,%eax
mov    0x805e5d0,%ebx
mov    0x805e6ec,%ecx
mov    0x805e60c,%edx
mov    %eax,0x3c(%esp)
mov    0x805e604,%eax
and    $0x1ff,%ebx
test   %ecx,%ecx
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
mov    0x805e608,%eax
mov    %eax,0x44(%esp)
je     804d02c <fchmod@plt+0x3b6c>
mov    0x80a6d90,%ecx
test   %ecx,%ecx
js     804d02c <fchmod@plt+0x3b6c>
cmp    0x80a6d8c,%eax
je     804d63f <fchmod@plt+0x417f>
mov    0x80a6d8c,%eax
mov    0x80a6d90,%edx
cmpl   $0x1,0x805e5b0
mov    %eax,0x44(%esp)
mov    %edx,0x48(%esp)
jle    804d02c <fchmod@plt+0x3b6c>
mov    0x805e520,%eax
movl   $0x8096980,0x8(%esp)
movl   $0x80593a3,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8092140,%eax
lea    0x3c(%esp),%ebp
mov    %ebp,0x8(%esp)
movl   $0x8096980,0x4(%esp)
mov    %eax,(%esp)
call   8054540 <fchmod@plt+0xb080>
test   %eax,%eax
je     804d07f <fchmod@plt+0x3bbf>
call   8049320 <__errno_location@plt>
mov    0x805e5ac,%edx
test   %edx,%edx
mov    %eax,%esi
mov    (%eax),%edi
je     804d572 <fchmod@plt+0x40b2>
mov    0x805e5a4,%eax
test   %eax,%eax
jne    804d077 <fchmod@plt+0x3bb7>
movl   $0x2,0x805e5a4
00
test   %edx,%edx
je     804d5b8 <fchmod@plt+0x40f8>
mov    0x805e5dc,%eax
mov    %eax,0x8(%esp)
mov    0x805e5d8,%eax
mov    %eax,0x4(%esp)
mov    0x8092140,%eax
mov    %eax,(%esp)
call   80492a0 <fchown@plt>
mov    0x8092140,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80494c0 <fchmod@plt>
test   %eax,%eax
je     804d0ef <fchmod@plt+0x3c2f>
call   8049320 <__errno_location@plt>
mov    0x805e5ac,%edx
test   %edx,%edx
mov    %eax,%ebx
mov    (%eax),%esi
je     804d549 <fchmod@plt+0x4089>
mov    0x805e5a4,%eax
test   %eax,%eax
jne    804d0dd <fchmod@plt+0x3c1d>
movl   $0x2,0x805e5a4
00
test   %edx,%edx
jne    804d0ef <fchmod@plt+0x3c2f>
mov    %esi,(%ebx)
movl   $0x8096980,(%esp)
call   8049140 <perror@plt>
mov    0x8092140,%eax
mov    %eax,(%esp)
call   8049430 <close@plt>
test   %eax,%eax
jne    804d6aa <fchmod@plt+0x41ea>
mov    0x805e6e4,%eax
test   %eax,%eax
jne    804c6a8 <fchmod@plt+0x31e8>
mov    %ebp,0x8(%esp)
movl   $0x805e640,0x4(%esp)
movl   $0x0,(%esp)
call   8049010 <sigprocmask@plt>
movl   $0x8061d20,(%esp)
movl   $0xffffffff,0x805e1e0
ff
call   8051cf0 <fchmod@plt+0x8830>
test   %eax,%eax
je     804d59b <fchmod@plt+0x40db>
call   8049320 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x2,(%esp)
call   8049010 <sigprocmask@plt>
test   %esi,%esi
je     804c6a8 <fchmod@plt+0x31e8>
mov    0x805e5ac,%edx
test   %edx,%edx
jne    804d19e <fchmod@plt+0x3cde>
mov    0x80a6d88,%eax
movl   $0x8059d91,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x805e5ac,%edx
mov    0x805e5a4,%ebp
test   %ebp,%ebp
jne    804d1b2 <fchmod@plt+0x3cf2>
movl   $0x2,0x805e5a4
00
test   %edx,%edx
jne    804c6a8 <fchmod@plt+0x31e8>
mov    %esi,(%ebx)
movl   $0x8061d20,(%esp)
call   8049140 <perror@plt>
jmp    804c6a8 <fchmod@plt+0x31e8>
lea    0x0(%esi),%esi
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x80589fc,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c77a <fchmod@plt+0x32ba>
mov    0x805e520,%eax
movl   $0x8061d20,0x8(%esp)
movl   $0x805939e,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c660 <fchmod@plt+0x31a0>
mov    0x805e5b4,%edi
test   %edi,%edi
jne    804c4c8 <fchmod@plt+0x3008>
call   804aa60 <fchmod@plt+0x15a0>
jmp    804c4c8 <fchmod@plt+0x3008>
mov    %edi,%eax
call   804ab10 <fchmod@plt+0x1650>
lea    0x0(%esi,%eiz,1),%esi
jmp    804ca23 <fchmod@plt+0x3563>
mov    $0x8096980,%eax
call   804ab60 <fchmod@plt+0x16a0>
test   %eax,%eax
je     804d6bb <fchmod@plt+0x41fb>
cmp    $0x4,%ebx
movb   $0x0,(%eax)
movl   $0x1,0x8092148
00
jle    804d280 <fchmod@plt+0x3dc0>
lea    -0x4(%eax),%edx
mov    $0x8059357,%edi
mov    %edx,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d655 <fchmod@plt+0x4195>
movl   $0x2f,0x4(%esp)
mov    $0x3,%edi
movl   $0x8096980,(%esp)
call   8049380 <strrchr@plt>
lea    0x1(%eax),%edx
test   %eax,%eax
mov    $0x8096980,%eax
cmovne %edx,%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%edx
xor    %eax,%eax
movzbl (%edx),%ecx
test   %cl,%cl
je     804d2ec <fchmod@plt+0x3e2c>
cmp    $0x2e,%cl
je     804d349 <fchmod@plt+0x3e89>
lea    0x1(%edx),%esi
xor    %ebx,%ebx
jmp    804d2d0 <fchmod@plt+0x3e10>
nop
cmp    $0x2e,%cl
lea    0x1(%esi),%esi
je     804d2dc <fchmod@plt+0x3e1c>
movzbl (%esi),%ecx
add    $0x1,%ebx
mov    %esi,%edx
test   %cl,%cl
jne    804d2c8 <fchmod@plt+0x3e08>
lea    -0x1(%edx),%esi
cmp    %ebx,%edi
cmovl  %esi,%eax
cmp    $0x1,%cl
sbb    $0xffffffff,%edx
jmp    804d2b0 <fchmod@plt+0x3df0>
test   %eax,%eax
jne    804d33a <fchmod@plt+0x3e7a>
sub    $0x1,%edi
jne    804d2aa <fchmod@plt+0x3dea>
movl   $0x2e,0x4(%esp)
movl   $0x8096980,(%esp)
call   8049380 <strrchr@plt>
test   %eax,%eax
je     804d6af <fchmod@plt+0x41ef>
cmpb   $0x1,0x1(%eax)
sbb    $0x0,%eax
mov    0x805e6c4,%edx
mov    $0x1,%ebx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049180 <strcpy@plt>
jmp    804cb47 <fchmod@plt+0x3687>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%eax
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%ecx
test   %dl,%dl
mov    %dl,(%eax)
jne    804d338 <fchmod@plt+0x3e78>
jmp    804d318 <fchmod@plt+0x3e58>
xor    %ebx,%ebx
jmp    804d2dc <fchmod@plt+0x3e1c>
mov    0x8062120,%eax
mov    0x8062124,%edx
mov    0x805e520,%ecx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
add    0x80aede0,%eax
adc    0x80aede4,%edx
sub    0x80a6d80,%eax
sbb    0x80a6d84,%edx
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8052300 <fchmod@plt+0x8e40>
jmp    804c720 <fchmod@plt+0x3260>
mov    0x805e6e8,%edi
test   %edi,%edi
jne    804cc28 <fchmod@plt+0x3768>
test   $0x2,%ah
je     804d5cb <fchmod@plt+0x410b>
mov    0x805e5ac,%ecx
test   %ecx,%ecx
jne    804c4ad <fchmod@plt+0x2fed>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8058ab8,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8096960,%ebx
jmp    804c4ad <fchmod@plt+0x2fed>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e6dc,%eax
test   %eax,%eax
jne    804c5c5 <fchmod@plt+0x3105>
mov    0x805e5a8,%eax
test   %eax,%eax
jne    804c5c5 <fchmod@plt+0x3105>
cmpl   $0x0,0x805e5b0
jne    804cf6a <fchmod@plt+0x3aaa>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804c9d8 <fchmod@plt+0x3518>
jmp    804cf77 <fchmod@plt+0x3ab7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x80592ee,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804cd2b <fchmod@plt+0x386b>
mov    0x805e6c4,%eax
add    $0x8096980,%edx
movl   $0x400,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049340 <__strcpy_chk@plt>
jmp    804c5c5 <fchmod@plt+0x3105>
mov    %edi,%eax
call   804ab10 <fchmod@plt+0x1650>
mov    %ebx,(%esp)
call   8049430 <close@plt>
jmp    804c4c8 <fchmod@plt+0x3008>
mov    0x805e520,%eax
movl   $0x8096980,0x8(%esp)
movl   $0x80593c0,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c737 <fchmod@plt+0x3277>
test   %ebx,%ebx
mov    0x805e6ec,%eax
je     804d4e4 <fchmod@plt+0x4024>
test   %eax,%eax
je     804d4ec <fchmod@plt+0x402c>
mov    0x805e5ac,%esi
test   %esi,%esi
je     804d669 <fchmod@plt+0x41a9>
mov    0x805e5a4,%ebx
test   %ebx,%ebx
jne    804d4e4 <fchmod@plt+0x4024>
movl   $0x2,0x805e5a4
00
test   %eax,%eax
jne    804c60e <fchmod@plt+0x314e>
mov    0x8092148,%ecx
test   %ecx,%ecx
je     804ce80 <fchmod@plt+0x39c0>
mov    0x805e5b0,%ebp
test   %ebp,%ebp
jne    804d1fb <fchmod@plt+0x3d3b>
mov    0x805e5ac,%edi
test   %edi,%edi
jne    804c660 <fchmod@plt+0x31a0>
mov    0x80a6d88,%eax
movl   $0x8096980,0x10(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x8059385,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    804c60e <fchmod@plt+0x314e>
mov    0x80a6d88,%eax
movl   $0x8059d91,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x805e5ac,%edx
jmp    804d0ca <fchmod@plt+0x3c0a>
mov    0x80a6d88,%eax
movl   $0x8059d91,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x805e5ac,%edx
jmp    804d064 <fchmod@plt+0x3ba4>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x2,(%esp)
call   8049010 <sigprocmask@plt>
jmp    804c6a8 <fchmod@plt+0x31e8>
mov    %edi,(%esi)
movl   $0x8096980,(%esp)
call   8049140 <perror@plt>
jmp    804d07f <fchmod@plt+0x3bbf>
mov    0x805e5d4,%eax
cmp    $0x1,%eax
jbe    804cc28 <fchmod@plt+0x3768>
mov    0x805e5ac,%edx
test   %edx,%edx
jne    804c4ad <fchmod@plt+0x2fed>
cmp    $0x2,%eax
mov    $0x73,%ecx
mov    $0x20,%edx
cmovne %ecx,%edx
sub    $0x1,%eax
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
mov    %edx,0x14(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x8058ae8,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8096960,%ebx
jmp    804c4ad <fchmod@plt+0x2fed>
mov    %edi,%eax
call   804ab10 <fchmod@plt+0x1650>
jmp    804ca13 <fchmod@plt+0x3553>
cmp    %ecx,%edx
jne    804cff3 <fchmod@plt+0x3b33>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804d02c <fchmod@plt+0x3b6c>
movl   $0x7a67742e,-0x4(%eax)
mov    $0x1,%ebx
movb   $0x0,(%eax)
jmp    804cb47 <fchmod@plt+0x3687>
mov    0x80a6d88,%eax
movl   $0x8096980,0xc(%esp)
movl   $0x8058bac,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x805e6ec,%eax
jmp    804d4d0 <fchmod@plt+0x4010>
call   80490e0 <__stack_chk_fail@plt>
movl   $0x8059332,(%esp)
call   8051d40 <fchmod@plt+0x8880>
call   8052030 <fchmod@plt+0x8b70>
movl   $0x8058b64,(%esp)
call   8051d40 <fchmod@plt+0x8880>
movl   $0x8059341,(%esp)
call   8051d40 <fchmod@plt+0x8880>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x2d,(%eax)
jne    804d6f8 <fchmod@plt+0x4238>
cmpb   $0x0,0x1(%eax)
jne    804d6f8 <fchmod@plt+0x4238>
push   %ebx
sub    $0x8,%esp
mov    0x805e5b4,%ebx
call   804c010 <fchmod@plt+0x2b50>
mov    %ebx,0x805e5b4
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
jmp    804c400 <fchmod@plt+0x2f40>
lea    0x0(%esi),%esi
sub    $0xc,%esp
call   804aa60 <fchmod@plt+0x15a0>
mov    $0x1,%eax
call   804bf30 <fchmod@plt+0x2a70>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80a6d94,%esi
mov    %eax,0x28(%esp)
movzwl 0x8059920(%ecx,%ecx,1),%eax
mov    0x805e700,%edi
mov    0x805e6fc,%ebp
mov    %edx,0x38(%esp)
mov    %eax,0x24(%esp)
mov    0x60(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %esi,0x18(%esp)
movzwl 0x8059920(%eax,%eax,1),%eax
mov    %eax,0x2c(%esp)
cmp    0x1c(%esp),%ebp
jb     804d840 <fchmod@plt+0x4380>
mov    0x24(%esp),%eax
mov    0x28(%esp),%esi
and    %edi,%eax
lea    (%esi,%eax,8),%ebx
movzbl (%ebx),%esi
cmp    $0x10,%esi
jbe    804d871 <fchmod@plt+0x43b1>
cmp    $0x63,%esi
je     804d830 <fchmod@plt+0x4370>
mov    %esi,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebx),%ecx
lea    -0x10(%edx),%esi
movzbl %cl,%eax
sub    %eax,%ebp
shr    %cl,%edi
cmp    %esi,%ebp
jae    804d80d <fchmod@plt+0x434d>
mov    %esi,%eax
mov    %ebx,%esi
mov    %eax,%ebx
jmp    804d7d5 <fchmod@plt+0x4315>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%edi
cmp    %ebp,%ebx
jbe    804d807 <fchmod@plt+0x4347>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804d7b8 <fchmod@plt+0x42f8>
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebp,%ecx
add    $0x8,%ebp
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%edi
cmp    %ebp,%ebx
ja     804d7d5 <fchmod@plt+0x4315>
mov    %ebx,%eax
mov    %esi,%ebx
mov    %eax,%esi
movzwl 0x8059920(%esi,%esi,1),%eax
mov    0x4(%ebx),%ecx
and    %edi,%eax
lea    (%ecx,%eax,8),%eax
movzbl (%eax),%edx
mov    %eax,%ebx
cmp    $0x10,%edx
jbe    804d86f <fchmod@plt+0x43af>
cmp    $0x63,%edx
jne    804d798 <fchmod@plt+0x42d8>
mov    $0x1,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804dba2 <fchmod@plt+0x46e2>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%edi
jmp    804d765 <fchmod@plt+0x42a5>
mov    %edx,%esi
movzbl 0x1(%ebx),%ecx
movzbl %cl,%eax
shr    %cl,%edi
sub    %eax,%ebp
cmp    $0x10,%esi
je     804dbbf <fchmod@plt+0x46ff>
cmp    $0xf,%esi
je     804dbfb <fchmod@plt+0x473b>
cmp    %ebp,%esi
jbe    804d8f5 <fchmod@plt+0x4435>
mov    %ebx,%eax
mov    %esi,%ebx
mov    %eax,%esi
jmp    804d8bd <fchmod@plt+0x43fd>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%edi
cmp    %ebp,%ebx
jbe    804d8ef <fchmod@plt+0x442f>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804d8a0 <fchmod@plt+0x43e0>
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebp,%ecx
add    $0x8,%ebp
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%edi
cmp    %ebp,%ebx
ja     804d8bd <fchmod@plt+0x43fd>
mov    %esi,%eax
mov    %ebx,%esi
mov    %eax,%ebx
movzwl 0x4(%ebx),%eax
mov    %esi,%ecx
mov    %edi,%ebx
shr    %cl,%ebx
sub    %esi,%ebp
cmp    0x60(%esp),%ebp
mov    %ax,0x30(%esp)
movzwl 0x8059920(%esi,%esi,1),%eax
mov    %ax,0x34(%esp)
jae    804d96f <fchmod@plt+0x44af>
mov    0x60(%esp),%esi
jmp    804d93d <fchmod@plt+0x447d>
nop
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%ebx
cmp    %esi,%ebp
jae    804d96f <fchmod@plt+0x44af>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804d920 <fchmod@plt+0x4460>
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebp,%ecx
add    $0x8,%ebp
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%ebx
cmp    %esi,%ebp
jb     804d93d <fchmod@plt+0x447d>
mov    0x2c(%esp),%eax
mov    0x38(%esp),%esi
and    %ebx,%eax
lea    (%esi,%eax,8),%eax
movzbl (%eax),%esi
mov    %eax,0x20(%esp)
cmp    $0x10,%esi
jbe    804da39 <fchmod@plt+0x4579>
cmp    $0x63,%esi
je     804d830 <fchmod@plt+0x4370>
mov    %edi,0x3c(%esp)
mov    0x20(%esp),%edi
mov    %esi,%edx
nop
movzbl 0x1(%edi),%ecx
lea    -0x10(%edx),%esi
movzbl %cl,%eax
sub    %eax,%ebp
shr    %cl,%ebx
cmp    %esi,%ebp
jb     804d9d5 <fchmod@plt+0x4515>
jmp    804da07 <fchmod@plt+0x4547>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%ebx
cmp    %ebp,%esi
jbe    804da07 <fchmod@plt+0x4547>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804d9b8 <fchmod@plt+0x44f8>
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebp,%ecx
add    $0x8,%ebp
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%ebx
cmp    %ebp,%esi
ja     804d9d5 <fchmod@plt+0x4515>
movzwl 0x8059920(%esi,%esi,1),%eax
mov    0x4(%edi),%edx
and    %ebx,%eax
lea    (%edx,%eax,8),%eax
movzbl (%eax),%edx
mov    %eax,%edi
cmp    $0x10,%edx
jbe    804da2f <fchmod@plt+0x456f>
cmp    $0x63,%edx
jne    804d9a0 <fchmod@plt+0x44e0>
jmp    804d830 <fchmod@plt+0x4370>
mov    0x3c(%esp),%edi
mov    %edx,%esi
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
mov    %ebx,%edx
movzbl 0x1(%eax),%ecx
movzbl %cl,%eax
sub    %eax,%ebp
shr    %cl,%edx
cmp    %ebp,%esi
jbe    804daa9 <fchmod@plt+0x45e9>
mov    %edx,%ebx
jmp    804da75 <fchmod@plt+0x45b5>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%ebx
cmp    %ebp,%esi
jbe    804daa7 <fchmod@plt+0x45e7>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804da58 <fchmod@plt+0x4598>
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebp,%ecx
add    $0x8,%ebp
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%ebx
cmp    %ebp,%esi
ja     804da75 <fchmod@plt+0x45b5>
mov    %ebx,%edx
movzwl 0x34(%esp),%eax
sub    %esi,%ebp
movzwl 0x30(%esp),%ecx
mov    0x18(%esp),%ebx
mov    %ebp,0x34(%esp)
and    %edi,%eax
mov    0x20(%esp),%edi
add    %ecx,%eax
mov    %esi,%ecx
mov    %eax,0x30(%esp)
mov    0x30(%esp),%ebp
movzwl 0x4(%edi),%eax
sub    %eax,%ebx
movzwl 0x8059920(%esi,%esi,1),%eax
mov    0x18(%esp),%esi
and    %edx,%eax
shr    %cl,%edx
sub    %eax,%ebx
mov    %edx,0x20(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    $0x8000,%edi
and    $0x7fff,%edx
mov    $0x8000,%eax
sub    %esi,%eax
sub    %edx,%edi
cmp    %edx,%esi
mov    %esi,%ecx
cmovae %eax,%edi
mov    %edx,%eax
cmp    %ebp,%edi
cmova  %ebp,%edi
sub    %edx,%ecx
sub    %esi,%eax
sub    %edi,%ebp
cmp    %edx,%esi
cmova  %ecx,%eax
mov    %eax,0x18(%esp)
lea    (%edi,%edx,1),%ebx
mov    %edx,%eax
cmp    %edi,0x18(%esp)
jae    804db68 <fchmod@plt+0x46a8>
xchg   %ax,%ax
add    $0x1,%eax
movzbl 0x8096d7f(%eax),%edx
cmp    %ebx,%eax
mov    %dl,0x8096d7f(%ecx,%eax,1)
jne    804db30 <fchmod@plt+0x4670>
add    %edi,%esi
cmp    $0x8000,%esi
je     804db8e <fchmod@plt+0x46ce>
test   %ebp,%ebp
jne    804daf0 <fchmod@plt+0x4630>
mov    %esi,0x18(%esp)
mov    0x20(%esp),%edi
mov    0x34(%esp),%ebp
jmp    804d765 <fchmod@plt+0x42a5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x8096d80(%esi),%eax
add    $0x8096d80,%edx
mov    %edi,0x8(%esp)
add    %edi,%esi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049050 <memcpy@plt>
cmp    $0x8000,%esi
jne    804db4f <fchmod@plt+0x468f>
movl   $0x8000,0x80a6d94
00
xor    %si,%si
call   80521e0 <fchmod@plt+0x8d20>
jmp    804db4f <fchmod@plt+0x468f>
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804d861 <fchmod@plt+0x43a1>
mov    0x18(%esp),%esi
movzwl 0x4(%ebx),%eax
mov    %al,0x8096d80(%esi)
lea    0x1(%esi),%eax
cmp    $0x8000,%eax
mov    %eax,0x18(%esp)
jne    804d765 <fchmod@plt+0x42a5>
movl   $0x8000,0x80a6d94
00
call   80521e0 <fchmod@plt+0x8d20>
movl   $0x0,0x18(%esp)
jmp    804d765 <fchmod@plt+0x42a5>
mov    0x18(%esp),%eax
mov    %edi,0x805e700
mov    %ebp,0x805e6fc
mov    %eax,0x80a6d94
xor    %eax,%eax
jmp    804d835 <fchmod@plt+0x4375>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x5bc,%esp
lea    0xa8(%esp),%edx
mov    %eax,0xc(%esp)
mov    %edx,%edi
xor    %eax,%eax
mov    %ecx,0x4c(%esp)
mov    $0x11,%ecx
rep stos %eax,%es:(%edi)
mov    %esi,%ecx
mov    %ebp,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%ebx
add    $0x4,%ecx
addl   $0x1,0xa8(%esp,%ebx,4)
sub    $0x1,%eax
jne    804dc50 <fchmod@plt+0x4790>
cmp    %ebp,0xa8(%esp)
je     804e0cf <fchmod@plt+0x4c0f>
mov    0x5dc(%esp),%eax
mov    $0x1,%ecx
mov    (%eax),%eax
mov    %eax,0x10(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx,%ecx,4),%eax
test   %eax,%eax
jne    804e138 <fchmod@plt+0x4c78>
add    $0x1,%ecx
cmp    $0x11,%ecx
jne    804dc88 <fchmod@plt+0x47c8>
mov    $0x20000,%esi
movl   $0x11,0x24(%esp)
mov    0x10(%esp),%edi
cmp    %ecx,%edi
mov    %edi,%eax
jb     804e0c0 <fchmod@plt+0x4c00>
mov    $0x10,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx,%ebx,4),%edi
test   %edi,%edi
jne    804e148 <fchmod@plt+0x4c88>
sub    $0x1,%ebx
jne    804dcc0 <fchmod@plt+0x4800>
movl   $0x0,0x48(%esp)
cmp    %eax,%ebx
mov    0x5dc(%esp),%edi
mov    0x10(%esp),%eax
cmovb  0x48(%esp),%eax
cmp    %ecx,%ebx
mov    %eax,0x10(%esp)
mov    %eax,(%edi)
jbe    804dd1a <fchmod@plt+0x485a>
sub    0xa8(%esp,%ecx,4),%esi
jns    804dd11 <fchmod@plt+0x4851>
jmp    804e128 <fchmod@plt+0x4c68>
lea    0x0(%esi),%esi
sub    (%edx,%ecx,4),%esi
js     804e128 <fchmod@plt+0x4c68>
add    $0x1,%ecx
add    %esi,%esi
cmp    %ebx,%ecx
jb     804dd08 <fchmod@plt+0x4848>
mov    %esi,%edi
mov    $0x2,%eax
sub    0xa8(%esp,%ebx,4),%edi
mov    %edi,0x5c(%esp)
js     804e11b <fchmod@plt+0x4c5b>
mov    %esi,0xa8(%esp,%ebx,4)
xor    %al,%al
xor    %ecx,%ecx
sub    $0x1,%ebx
movl   $0x0,0xf0(%esp)
00
lea    0xec(%esp),%esi
je     804dd67 <fchmod@plt+0x48a7>
lea    0x0(%esi,%eiz,1),%esi
add    0x4(%edx,%eax,4),%ecx
mov    %ecx,0x8(%esi,%eax,4)
add    $0x1,%eax
cmp    %ebx,%eax
jne    804dd58 <fchmod@plt+0x4898>
mov    0xc(%esp),%esi
xor    %eax,%eax
lea    0x0(%esi),%esi
mov    (%esi,%eax,4),%ecx
test   %ecx,%ecx
je     804dd8f <fchmod@plt+0x48cf>
mov    0xec(%esp,%ecx,4),%ebx
lea    0x1(%ebx),%edi
mov    %edi,0xec(%esp,%ecx,4)
mov    %eax,0x130(%esp,%ebx,4)
add    $0x1,%eax
cmp    %eax,%ebp
ja     804dd70 <fchmod@plt+0x48b0>
mov    0x10(%esp),%edi
mov    0x48(%esp),%esi
movl   $0x0,0x68(%esp)
neg    %edi
cmp    %esi,0x24(%esp)
mov    0xec(%esp,%esi,4),%eax
mov    %edi,0x30(%esp)
movl   $0x0,0xec(%esp)
00
jg     804e200 <fchmod@plt+0x4d40>
lea    0x130(%esp,%eax,4),%eax
xor    %edi,%edi
mov    %eax,0x58(%esp)
mov    0x24(%esp),%eax
mov    $0xffffffff,%ebp
movl   $0x0,0x28(%esp)
movl   $0x0,0x38(%esp)
mov    %edi,0x1c(%esp)
lea    (%edx,%eax,4),%edx
mov    %edx,0x44(%esp)
mov    0x48(%esp),%edx
sub    %eax,%edx
mov    0x10(%esp),%eax
mov    %edx,0x40(%esp)
mov    0x14(%esp),%edx
shl    $0x2,%eax
mov    %eax,0x34(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x130(%esp),%eax
mov    %eax,0x50(%esp)
mov    0x44(%esp),%eax
mov    %ebp,%edi
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x24(%esp),%eax
lea    -0x1(%eax),%ecx
mov    $0x1,%eax
shl    %cl,%eax
mov    %eax,0x54(%esp)
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804e1e1 <fchmod@plt+0x4d21>
lea    0x68(%esp,%edi,4),%eax
mov    0x24(%esp),%esi
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
add    0x20(%esp),%eax
mov    0x44(%esp),%ebx
mov    %edi,0x14(%esp)
mov    0x28(%esp),%edi
sub    %eax,%esi
mov    %eax,0xc(%esp)
lea    0x0(,%esi,4),%eax
sub    %eax,%ebx
mov    0x24(%esp),%eax
cmp    %eax,0xc(%esp)
mov    %ebx,0x28(%esp)
jge    804dfcc <fchmod@plt+0x4b0c>
mov    $0x1,%eax
mov    %esi,%ecx
addl   $0x1,0x14(%esp)
mov    %esi,%ebx
shl    %cl,%eax
cmp    %eax,0x2c(%esp)
jae    804def7 <fchmod@plt+0x4a37>
mov    0x40(%esp),%edi
mov    0x10(%esp),%ebx
add    %esi,%edi
cmp    %ebx,%edi
cmova  %ebx,%edi
mov    %esi,%ebx
cmp    %esi,%edi
jbe    804def7 <fchmod@plt+0x4a37>
lea    0x1(%esi),%ebx
cmp    %ebx,%edi
jbe    804def7 <fchmod@plt+0x4a37>
mov    0x44(%esp),%ecx
sub    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    0x4(%ecx),%ecx
add    %eax,%eax
cmp    %eax,%ecx
jb     804deea <fchmod@plt+0x4a2a>
jmp    804def7 <fchmod@plt+0x4a37>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp,%ebx,4),%ecx
add    %eax,%eax
cmp    %ecx,%eax
jbe    804def3 <fchmod@plt+0x4a33>
add    $0x1,%ebx
sub    %ecx,%eax
cmp    %ebx,%edi
ja     804dee0 <fchmod@plt+0x4a20>
mov    %ebp,0x28(%esp)
mov    %ebx,%ecx
mov    $0x1,%edi
shl    %cl,%edi
lea    0x8(,%edi,8),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   80491f0 <malloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804e158 <fchmod@plt+0x4c98>
mov    0x805e6f8,%ecx
mov    0x5d8(%esp),%ebp
lea    0x1(%edi,%ecx,1),%ecx
mov    %ecx,0x805e6f8
lea    0x8(%eax),%ecx
mov    %ecx,0x0(%ebp)
lea    0x4(%eax),%ebp
movl   $0x0,0x4(%eax)
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %ebp,0x5d8(%esp)
mov    %ecx,0x4(%eax)
mov    0x14(%esp),%ecx
test   %ecx,%ecx
je     804df99 <fchmod@plt+0x4ad9>
mov    0x14(%esp),%ecx
add    $0x10,%ebx
mov    0x38(%esp),%eax
mov    %bl,%dl
mov    0x10(%esp),%dh
mov    %eax,0xec(%esp,%ecx,4)
mov    0x1c(%esp),%ecx
mov    %ecx,%ebp
mov    %ecx,0x3c(%esp)
movzbl 0x20(%esp),%ecx
shr    %cl,%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    (%eax),%eax
lea    (%eax,%ecx,8),%eax
mov    %edx,(%eax)
mov    %ebp,0x4(%eax)
mov    0x30(%esp),%ebx
mov    0x34(%esp),%eax
add    %eax,0x28(%esp)
mov    0xc(%esp),%eax
add    %ebx,%esi
mov    0x10(%esp),%ebx
addl   $0x4,0x18(%esp)
mov    %eax,0x20(%esp)
add    %ebx,%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
cmp    %eax,0xc(%esp)
jl     804de90 <fchmod@plt+0x49d0>
movzbl 0x24(%esp),%eax
mov    $0x63,%ebx
sub    0x20(%esp),%al
mov    %edi,0x28(%esp)
mov    0x14(%esp),%edi
mov    %eax,%esi
mov    0x58(%esp),%eax
cmp    %eax,0x50(%esp)
jb     804e170 <fchmod@plt+0x4cb0>
mov    0x24(%esp),%ecx
mov    $0x1,%eax
sub    0x20(%esp),%ecx
mov    0x38(%esp),%ebp
shl    %cl,%eax
movzbl 0x20(%esp),%ecx
shr    %cl,%ebp
cmp    0x28(%esp),%ebp
mov    %ebp,%ecx
jae    804e048 <fchmod@plt+0x4b88>
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%ebp
mov    %esi,%eax
mov    %edi,0xc(%esp)
mov    0x14(%esp),%esi
mov    0x3c(%esp),%edi
lea    0x0(%esi),%esi
mov    %bl,%dl
mov    %al,%dh
mov    %edx,0x0(%ebp,%ecx,8)
mov    %edi,0x4(%ebp,%ecx,8)
add    %esi,%ecx
cmp    0x28(%esp),%ecx
jb     804e030 <fchmod@plt+0x4b70>
mov    0xc(%esp),%edi
mov    0x54(%esp),%esi
test   %esi,0x38(%esp)
mov    0x38(%esp),%ecx
mov    %esi,%eax
je     804e064 <fchmod@plt+0x4ba4>
xor    %eax,%ecx
shr    %eax
test   %ecx,%eax
jne    804e058 <fchmod@plt+0x4b98>
mov    %ecx,0x38(%esp)
mov    0x20(%esp),%ebx
xor    %eax,0x38(%esp)
mov    $0x1,%eax
mov    0x38(%esp),%esi
mov    %ebx,%ecx
shl    %cl,%eax
sub    $0x1,%eax
and    %esi,%eax
cmp    0xec(%esp,%edi,4),%eax
je     804e0b2 <fchmod@plt+0x4bf2>
mov    0x10(%esp),%ebp
lea    0xec(%esp),%eax
mov    %ebx,%ecx
lea    0x0(%esi,%eiz,1),%esi
sub    %ebp,%ecx
mov    $0x1,%ebx
shl    %cl,%ebx
sub    $0x1,%edi
sub    $0x1,%ebx
and    %esi,%ebx
cmp    (%eax,%edi,4),%ebx
jne    804e098 <fchmod@plt+0x4bd8>
mov    %ecx,0x20(%esp)
subl   $0x1,0x2c(%esp)
jmp    804de43 <fchmod@plt+0x4983>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edi
mov    %edi,%eax
mov    %edi,0x10(%esp)
jmp    804dcb6 <fchmod@plt+0x47f6>
movl   $0x18,(%esp)
call   80491f0 <malloc@plt>
test   %eax,%eax
je     804e160 <fchmod@plt+0x4ca0>
mov    0x5d8(%esp),%edx
add    $0x8,%eax
movl   $0x0,-0x4(%eax)
movb   $0x63,(%eax)
movb   $0x1,0x1(%eax)
movb   $0x63,0x8(%eax)
movb   $0x1,0x9(%eax)
mov    %eax,(%edx)
mov    0x5dc(%esp),%eax
addl   $0x3,0x805e6f8
movl   $0x1,(%eax)
xor    %eax,%eax
add    $0x5bc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x5bc,%esp
mov    $0x2,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x1,%esi
shl    %cl,%esi
mov    %ecx,0x24(%esp)
jmp    804dca8 <fchmod@plt+0x47e8>
mov    %ebx,0x48(%esp)
jmp    804dcd8 <fchmod@plt+0x4818>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%ebp
test   %ebp,%ebp
jne    804e197 <fchmod@plt+0x4cd7>
add    $0x5bc,%esp
mov    $0x3,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x50(%esp),%eax
mov    (%eax),%eax
cmp    0x4c(%esp),%eax
jae    804e1b4 <fchmod@plt+0x4cf4>
cmp    $0x100,%eax
sbb    %ebx,%ebx
not    %ebx
add    $0x10,%ebx
mov    %ax,0x3c(%esp)
addl   $0x4,0x50(%esp)
jmp    804dff2 <fchmod@plt+0x4b32>
mov    0x68(%esp),%ebx
test   %ebx,%ebx
je     804e160 <fchmod@plt+0x4ca0>
nop
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e1a0 <fchmod@plt+0x4ce0>
jmp    804e160 <fchmod@plt+0x4ca0>
mov    0x5d0(%esp),%ebp
sub    0x4c(%esp),%eax
mov    0x3c(%esp),%ecx
mov    0x5d4(%esp),%ebx
mov    0x0(%ebp,%eax,2),%cx
addl   $0x4,0x50(%esp)
movzbl (%ebx,%eax,2),%ebx
mov    %ecx,0x3c(%esp)
jmp    804dff2 <fchmod@plt+0x4b32>
addl   $0x1,0x24(%esp)
mov    %edi,%ebp
mov    0x48(%esp),%eax
addl   $0x4,0x44(%esp)
subl   $0x1,0x40(%esp)
cmp    %eax,0x24(%esp)
jle    804de25 <fchmod@plt+0x4965>
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
setne  %dl
xor    %eax,%eax
cmpl   $0x1,0x48(%esp)
setne  %al
and    %edx,%eax
jmp    804e11b <fchmod@plt+0x4c5b>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x53c,%esp
mov    0x805e6fc,%ebx
mov    0x80a6d94,%eax
mov    0x805e700,%ebp
cmp    $0x4,%ebx
mov    %eax,0x20(%esp)
ja     804e26e <fchmod@plt+0x4dae>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804e448 <fchmod@plt+0x4f88>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebx,%ecx
add    $0x8,%ebx
shl    %cl,%eax
or     %eax,%ebp
mov    %ebp,%eax
and    $0x1f,%eax
lea    -0x5(%ebx),%esi
add    $0x101,%eax
shr    $0x5,%ebp
cmp    $0x4,%esi
mov    %eax,0x2c(%esp)
ja     804e2b1 <fchmod@plt+0x4df1>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804e468 <fchmod@plt+0x4fa8>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %esi,%ecx
shl    %cl,%eax
or     %eax,%ebp
lea    0x3(%ebx),%esi
mov    %ebp,%eax
and    $0x1f,%eax
lea    -0x5(%esi),%ebx
add    $0x1,%eax
shr    $0x5,%ebp
cmp    $0x3,%ebx
mov    %eax,0x28(%esp)
ja     804e2f2 <fchmod@plt+0x4e32>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804e428 <fchmod@plt+0x4f68>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebx,%ecx
shl    %cl,%eax
or     %eax,%ebp
lea    0x3(%esi),%ebx
cmpl   $0x1e,0x28(%esp)
ja     804e417 <fchmod@plt+0x4f57>
cmpl   $0x11e,0x2c(%esp)
ja     804e417 <fchmod@plt+0x4f57>
mov    %ebp,%esi
and    $0xf,%ebp
sub    $0x4,%ebx
add    $0x4,%ebp
mov    %ebx,%ecx
xor    %edi,%edi
mov    %ebp,%ebx
mov    0x20(%esp),%ebp
shr    $0x4,%esi
jmp    804e35c <fchmod@plt+0x4e9c>
lea    0x0(%esi),%esi
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
shl    %cl,%eax
add    $0x8,%ecx
or     %eax,%esi
mov    0x8059960(,%edi,4),%eax
mov    %esi,%edx
add    $0x1,%edi
and    $0x7,%edx
sub    $0x3,%ecx
shr    $0x3,%esi
cmp    %edi,%ebx
mov    %edx,0x40(%esp,%eax,4)
jbe    804e38d <fchmod@plt+0x4ecd>
cmp    $0x2,%ecx
ja     804e33f <fchmod@plt+0x4e7f>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804e328 <fchmod@plt+0x4e68>
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
mov    %ebp,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    0x1c(%esp),%ecx
movzbl %al,%eax
jmp    804e338 <fchmod@plt+0x4e78>
cmp    $0x13,%edi
mov    %ecx,%ebx
lea    0x8059960(,%edi,4),%eax
je     804e3b4 <fchmod@plt+0x4ef4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
add    $0x4,%eax
cmp    $0x80599ac,%eax
movl   $0x0,0x40(%esp,%edx,4)
jne    804e3a0 <fchmod@plt+0x4ee0>
lea    0x38(%esp),%eax
mov    $0x13,%ecx
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    $0x13,%edx
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x7,0x38(%esp)
call   804dc20 <fchmod@plt+0x4760>
test   %eax,%eax
mov    %eax,%ebp
je     804e485 <fchmod@plt+0x4fc5>
cmp    $0x1,%eax
jne    804e41c <fchmod@plt+0x4f5c>
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804e417 <fchmod@plt+0x4f57>
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e405 <fchmod@plt+0x4f45>
mov    $0x1,%eax
add    $0x53c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804e2e9 <fchmod@plt+0x4e29>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804e265 <fchmod@plt+0x4da5>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804e2a8 <fchmod@plt+0x4de8>
mov    0x30(%esp),%edx
mov    $0x2,%eax
test   %edx,%edx
je     804e41c <fchmod@plt+0x4f5c>
mov    0x28(%esp),%eax
xor    %edi,%edi
add    0x2c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x38(%esp),%eax
movzwl 0x8059920(%eax,%eax,1),%eax
mov    %eax,0x24(%esp)
cmp    %ebp,0x1c(%esp)
jbe    804e557 <fchmod@plt+0x5097>
cmp    0x38(%esp),%ebx
jb     804e4e7 <fchmod@plt+0x5027>
jmp    804e51b <fchmod@plt+0x505b>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebx,%ecx
add    $0x8,%ebx
shl    %cl,%eax
or     %eax,%esi
cmp    %ebx,0x38(%esp)
jbe    804e51b <fchmod@plt+0x505b>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804e4c8 <fchmod@plt+0x5008>
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebx,%ecx
add    $0x8,%ebx
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%esi
cmp    %ebx,0x38(%esp)
ja     804e4e7 <fchmod@plt+0x5027>
mov    0x24(%esp),%edx
mov    0x30(%esp),%eax
and    %esi,%edx
lea    (%eax,%edx,8),%eax
mov    %eax,0x34(%esp)
movzbl 0x1(%eax),%ecx
movzwl 0x4(%eax),%eax
movzbl %cl,%edx
shr    %cl,%esi
sub    %edx,%ebx
cmp    $0xf,%eax
ja     804e5f0 <fchmod@plt+0x5130>
mov    %eax,0x40(%esp,%ebp,4)
add    $0x1,%ebp
mov    %eax,%edi
cmp    %ebp,0x1c(%esp)
ja     804e4ba <fchmod@plt+0x4ffa>
mov    0x30(%esp),%edi
test   %edi,%edi
je     804e571 <fchmod@plt+0x50b1>
lea    -0x8(%edi),%eax
mov    -0x4(%edi),%edi
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %edi,%edi
jne    804e55f <fchmod@plt+0x509f>
mov    0x2c(%esp),%edx
lea    0x38(%esp),%eax
mov    $0x101,%ecx
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
movl   $0x805e280,0x4(%esp)
movl   $0x805e2c0,(%esp)
mov    %esi,0x805e700
mov    %ebx,0x805e6fc
movl   $0x9,0x38(%esp)
call   804dc20 <fchmod@plt+0x4760>
test   %eax,%eax
je     804e79a <fchmod@plt+0x52da>
cmp    $0x1,%eax
jne    804e41c <fchmod@plt+0x4f5c>
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804e417 <fchmod@plt+0x4f57>
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e5d3 <fchmod@plt+0x5113>
jmp    804e417 <fchmod@plt+0x4f57>
lea    0x0(%esi),%esi
cmp    $0x10,%eax
je     804e68a <fchmod@plt+0x51ca>
cmp    $0x11,%eax
lea    0x0(%esi,%eiz,1),%esi
je     804e712 <fchmod@plt+0x5252>
cmp    $0x6,%ebx
ja     804e631 <fchmod@plt+0x5171>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804e670 <fchmod@plt+0x51b0>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebx,%ecx
add    $0x8,%ebx
shl    %cl,%eax
or     %eax,%esi
mov    %esi,%ecx
sub    $0x7,%ebx
and    $0x7f,%ecx
shr    $0x7,%esi
lea    0xb(%ebp,%ecx,1),%eax
cmp    %eax,0x1c(%esp)
jb     804e417 <fchmod@plt+0x4f57>
lea    0x0(%ebp,%ecx,1),%edx
lea    0x40(%esp,%ebp,4),%eax
lea    0x6c(%esp,%edx,4),%edx
xchg   %ax,%ax
movl   $0x0,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e658 <fchmod@plt+0x5198>
lea    0xb(%ebp,%ecx,1),%ebp
xor    %edi,%edi
jmp    804e4b0 <fchmod@plt+0x4ff0>
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804e628 <fchmod@plt+0x5168>
cmp    $0x1,%ebx
ja     804e6b5 <fchmod@plt+0x51f5>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804e6f8 <fchmod@plt+0x5238>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebx,%ecx
add    $0x8,%ebx
shl    %cl,%eax
or     %eax,%esi
mov    %esi,%ecx
sub    $0x2,%ebx
and    $0x3,%ecx
shr    $0x2,%esi
lea    0x3(%ebp,%ecx,1),%eax
cmp    %eax,0x1c(%esp)
jb     804e417 <fchmod@plt+0x4f57>
lea    0x0(%ebp,%ecx,1),%edx
lea    0x40(%esp,%ebp,4),%eax
lea    0x4c(%esp,%edx,4),%edx
lea    0x0(%esi),%esi
mov    %edi,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e6e0 <fchmod@plt+0x5220>
lea    0x3(%ebp,%ecx,1),%ebp
jmp    804e4b0 <fchmod@plt+0x4ff0>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804e6ac <fchmod@plt+0x51ec>
cmp    $0x2,%ebx
ja     804e73d <fchmod@plt+0x527d>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804e780 <fchmod@plt+0x52c0>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %ebx,%ecx
add    $0x8,%ebx
shl    %cl,%eax
or     %eax,%esi
mov    %esi,%ecx
sub    $0x3,%ebx
and    $0x7,%ecx
shr    $0x3,%esi
lea    0x3(%ebp,%ecx,1),%eax
cmp    %eax,0x1c(%esp)
jb     804e417 <fchmod@plt+0x4f57>
lea    0x0(%ebp,%ecx,1),%edx
lea    0x40(%esp,%ebp,4),%eax
lea    0x4c(%esp,%edx,4),%edx
lea    0x0(%esi),%esi
movl   $0x0,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e768 <fchmod@plt+0x52a8>
lea    0x3(%ebp,%ecx,1),%ebp
xor    %edi,%edi
jmp    804e4b0 <fchmod@plt+0x4ff0>
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804e734 <fchmod@plt+0x5274>
lea    0x3c(%esp),%edx
mov    0x2c(%esp),%eax
xor    %ecx,%ecx
mov    %edx,0xc(%esp)
lea    0x34(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x28(%esp),%edx
movl   $0x805e200,0x4(%esp)
lea    0x40(%esp,%eax,4),%eax
movl   $0x805e240,(%esp)
movl   $0x6,0x3c(%esp)
call   804dc20 <fchmod@plt+0x4760>
test   %eax,%eax
mov    %eax,%esi
je     804e800 <fchmod@plt+0x5340>
cmp    $0x1,%eax
je     804e85d <fchmod@plt+0x539d>
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804e7f9 <fchmod@plt+0x5339>
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e7e7 <fchmod@plt+0x5327>
mov    %esi,%eax
jmp    804e41c <fchmod@plt+0x4f5c>
mov    0x3c(%esp),%eax
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804d720 <fchmod@plt+0x4260>
mov    0x30(%esp),%ebx
test   %eax,%eax
setne  %al
test   %ebx,%ebx
movzbl %al,%eax
mov    %eax,%esi
je     804e83c <fchmod@plt+0x537c>
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e82a <fchmod@plt+0x536a>
mov    0x34(%esp),%ebx
test   %ebx,%ebx
je     804e7f9 <fchmod@plt+0x5339>
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e844 <fchmod@plt+0x5384>
mov    %esi,%eax
jmp    804e41c <fchmod@plt+0x4f5c>
mov    0x34(%esp),%ebx
test   %ebx,%ebx
je     804e7df <fchmod@plt+0x531f>
lea    -0x8(%ebx),%eax
mov    -0x4(%ebx),%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e869 <fchmod@plt+0x53a9>
jmp    804e7df <fchmod@plt+0x531f>
push   %esi
push   %ebx
sub    $0x4a4,%esp
lea    0x260(%esp),%edx
lea    0x20(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e898 <fchmod@plt+0x53d8>
lea    0x420(%esp),%edx
lea    0x0(%esi,%eiz,1),%esi
movl   $0x9,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e8b0 <fchmod@plt+0x53f0>
lea    0x420(%esp),%eax
lea    0x480(%esp),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x7,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e8d0 <fchmod@plt+0x5410>
lea    0x480(%esp),%eax
lea    0x4a0(%esp),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e8f0 <fchmod@plt+0x5430>
lea    0x18(%esp),%eax
mov    $0x101,%ecx
mov    %eax,0xc(%esp)
lea    0x10(%esp),%eax
mov    $0x120,%edx
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
movl   $0x805e280,0x4(%esp)
movl   $0x805e2c0,(%esp)
movl   $0x7,0x18(%esp)
call   804dc20 <fchmod@plt+0x4760>
test   %eax,%eax
mov    %eax,%esi
jne    804e9b2 <fchmod@plt+0x54f2>
lea    0x20(%esp),%eax
lea    0x98(%esp),%edx
movl   $0x5,(%eax)
add    $0x4,%eax
cmp    %edx,%eax
jne    804e948 <fchmod@plt+0x5488>
lea    0x1c(%esp),%eax
xor    %ecx,%ecx
mov    %eax,0xc(%esp)
lea    0x14(%esp),%eax
mov    $0x1e,%edx
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
movl   $0x805e200,0x4(%esp)
movl   $0x805e240,(%esp)
movl   $0x5,0x1c(%esp)
call   804dc20 <fchmod@plt+0x4760>
cmp    $0x1,%eax
mov    %eax,%esi
jle    804e9bd <fchmod@plt+0x54fd>
mov    0x10(%esp),%ebx
test   %ebx,%ebx
je     804e9b2 <fchmod@plt+0x54f2>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x8(%ebx),%edx
mov    -0x4(%ebx),%ebx
mov    %edx,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e9a0 <fchmod@plt+0x54e0>
add    $0x4a4,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
mov    0x1c(%esp),%eax
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
mov    %eax,(%esp)
mov    0x10(%esp),%eax
call   804d720 <fchmod@plt+0x4260>
test   %eax,%eax
mov    %eax,%esi
jne    804ea11 <fchmod@plt+0x5551>
mov    0x10(%esp),%ebx
test   %ebx,%ebx
je     804e9f5 <fchmod@plt+0x5535>
lea    -0x8(%ebx),%edx
mov    -0x4(%ebx),%ebx
mov    %edx,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e9e3 <fchmod@plt+0x5523>
mov    0x14(%esp),%ebx
test   %ebx,%ebx
je     804e9b2 <fchmod@plt+0x54f2>
lea    -0x8(%ebx),%edx
mov    -0x4(%ebx),%ebx
mov    %edx,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    804e9fd <fchmod@plt+0x553d>
jmp    804e9b2 <fchmod@plt+0x54f2>
mov    $0x1,%esi
jmp    804e9b2 <fchmod@plt+0x54f2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ecx,%ecx
push   %edi
xor    %edi,%edi
push   %esi
mov    %edi,%ebp
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
test   %ebx,%ebx
movl   $0x0,0x80a6d94
00
mov    %ecx,%eax
movl   $0x0,0x805e6fc
00
movl   $0x0,0x805e700
00
movl   $0x0,0x805e6f8
00
jne    804ec39 <fchmod@plt+0x5779>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    804ead0 <fchmod@plt+0x5610>
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
or     %eax,%ebp
mov    $0x5,%ebx
mov    %ebp,%esi
and    $0x1,%esi
shr    %ebp
mov    %ebp,%eax
and    $0x3,%eax
shr    $0x2,%ebp
cmp    $0x2,%eax
mov    %ebp,0x805e700
mov    %ebx,0x805e6fc
je     804ec00 <fchmod@plt+0x5740>
test   %eax,%eax
je     804eae8 <fchmod@plt+0x5628>
cmp    $0x1,%eax
je     804ed9b <fchmod@plt+0x58db>
mov    $0x2,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
movzbl %al,%eax
jmp    804ea85 <fchmod@plt+0x55c5>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%ecx
mov    0x80a6d94,%edi
and    $0x7,%ecx
sub    %ecx,%ebx
shr    %cl,%ebp
cmp    $0xf,%ebx
ja     804eb60 <fchmod@plt+0x56a0>
mov    %ebx,%ecx
jmp    804eb1c <fchmod@plt+0x565c>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
shl    %cl,%eax
add    $0x8,%ecx
or     %eax,%ebp
cmp    $0xf,%ecx
ja     804eb52 <fchmod@plt+0x5692>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804eb00 <fchmod@plt+0x5640>
movl   $0x0,(%esp)
mov    %ecx,0x8(%esp)
mov    %edi,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    0x8(%esp),%ecx
movzbl %al,%eax
shl    %cl,%eax
add    $0x8,%ecx
or     %eax,%ebp
cmp    $0xf,%ecx
jbe    804eb1c <fchmod@plt+0x565c>
mov    $0xf,%eax
sub    %ebx,%eax
and    $0xfffffff8,%eax
lea    0x8(%ebx,%eax,1),%ebx
movzwl %bp,%eax
mov    %ebp,%edx
lea    -0x10(%ebx),%ebp
shr    $0x10,%edx
cmp    $0xf,%ebp
mov    %eax,0x8(%esp)
ja     804ebe2 <fchmod@plt+0x5722>
mov    %ebx,0xc(%esp)
mov    %edx,%ebx
jmp    804eb9e <fchmod@plt+0x56de>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ecx
movzbl 0x80a6da0(%eax),%eax
mov    %ecx,0x8092144
mov    %ebp,%ecx
add    $0x8,%ebp
shl    %cl,%eax
or     %eax,%ebx
cmp    $0xf,%ebp
ja     804ebce <fchmod@plt+0x570e>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804eb80 <fchmod@plt+0x56c0>
movl   $0x0,(%esp)
mov    %edi,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebp,%ecx
add    $0x8,%ebp
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%ebx
cmp    $0xf,%ebp
jbe    804eb9e <fchmod@plt+0x56de>
mov    %ebx,%edx
mov    0xc(%esp),%ebx
mov    $0x1f,%eax
sub    %ebx,%eax
and    $0xfffffff8,%eax
lea    -0x8(%ebx,%eax,1),%ebp
mov    %edx,%eax
not    %eax
movzwl %ax,%eax
cmp    %eax,0x8(%esp)
je     804ec79 <fchmod@plt+0x57b9>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804e220 <fchmod@plt+0x4d60>
test   %eax,%eax
jne    804eac2 <fchmod@plt+0x5602>
test   %esi,%esi
nop
jne    804ed5e <fchmod@plt+0x589e>
mov    0x805e6fc,%ebx
mov    0x805e700,%ebp
mov    0x80a6d94,%eax
movl   $0x0,0x805e6f8
00
test   %ebx,%ebx
je     804ea68 <fchmod@plt+0x55a8>
mov    %ebp,%esi
lea    -0x1(%ebx),%ecx
and    $0x1,%esi
shr    %ebp
cmp    $0x1,%ecx
ja     804edd1 <fchmod@plt+0x5911>
mov    0x8092144,%edi
cmp    0x80a6d98,%edi
jae    804edb0 <fchmod@plt+0x58f0>
lea    0x1(%edi),%eax
mov    %eax,0x8092144
movzbl 0x80a6da0(%edi),%eax
shl    %cl,%eax
add    $0x5,%ebx
or     %eax,%ebp
jmp    804ea93 <fchmod@plt+0x55d3>
mov    0x8(%esp),%eax
shr    $0x10,%edx
sub    $0x10,%ebp
test   %eax,%eax
je     804eda5 <fchmod@plt+0x58e5>
mov    %esi,0xc(%esp)
mov    %edx,%esi
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7,%ebp
ja     804ecf9 <fchmod@plt+0x5839>
mov    %ebp,%ebx
jmp    804ecc6 <fchmod@plt+0x5806>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %ebx,%ecx
add    $0x8,%ebx
mov    %edx,0x8092144
shl    %cl,%eax
or     %eax,%esi
cmp    $0x7,%ebx
ja     804ecf6 <fchmod@plt+0x5836>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     804eca8 <fchmod@plt+0x57e8>
movl   $0x0,(%esp)
mov    %edi,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    %ebx,%ecx
add    $0x8,%ebx
movzbl %al,%eax
shl    %cl,%eax
or     %eax,%esi
cmp    $0x7,%ebx
jbe    804ecc6 <fchmod@plt+0x5806>
add    $0x8,%ebp
lea    0x1(%edi),%eax
mov    %esi,%edx
cmp    $0x8000,%eax
mov    %dl,0x8096d80(%edi)
je     804ed1f <fchmod@plt+0x585f>
shr    $0x8,%esi
sub    $0x8,%ebp
subl   $0x1,0x8(%esp)
je     804ed3d <fchmod@plt+0x587d>
mov    %eax,%edi
jmp    804ec98 <fchmod@plt+0x57d8>
movl   $0x8000,0x80a6d94
00
shr    $0x8,%esi
sub    $0x8,%ebp
call   80521e0 <fchmod@plt+0x8d20>
xor    %eax,%eax
subl   $0x1,0x8(%esp)
jne    804ed18 <fchmod@plt+0x5858>
mov    %esi,%edx
mov    0xc(%esp),%esi
mov    %eax,0x80a6d94
xor    %eax,%eax
test   %esi,%esi
mov    %edx,0x805e700
mov    %ebp,0x805e6fc
je     804ec16 <fchmod@plt+0x5756>
mov    0x805e6fc,%edx
cmp    $0x7,%edx
jbe    804ed89 <fchmod@plt+0x58c9>
mov    0x8092144,%edi
lea    -0x8(%edx),%ebx
and    $0x7,%edx
shr    $0x3,%ebx
mov    %edx,0x805e6fc
lea    -0x1(%edi),%ecx
sub    %ebx,%ecx
mov    %ecx,0x8092144
mov    %eax,0x8(%esp)
call   80521e0 <fchmod@plt+0x8d20>
mov    0x8(%esp),%eax
jmp    804eac2 <fchmod@plt+0x5602>
call   804e880 <fchmod@plt+0x53c0>
jmp    804ec05 <fchmod@plt+0x5745>
mov    %edi,%eax
jmp    804ed43 <fchmod@plt+0x5883>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x80a6d94
call   8052250 <fchmod@plt+0x8d90>
mov    0x8(%esp),%ecx
movzbl %al,%eax
jmp    804ec6d <fchmod@plt+0x57ad>
sub    $0x3,%ebx
jmp    804ea93 <fchmod@plt+0x55d3>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x805e704,%eax
test   %eax,%eax
je     804edf0 <fchmod@plt+0x5930>
mov    $0x1,%eax
ret
nop
sub    $0x1c,%esp
mov    0x805e520,%eax
movl   $0x80599ac,0x4(%esp)
movl   $0x1,0x805e704
00
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x24(%esp),%eax
cmp    %eax,0x20(%esp)
je     804ee26 <fchmod@plt+0x5966>
movl   $0x1,0x805e5a4
00
mov    $0x1,%eax
add    $0x1c,%esp
ret
nop
xor    %eax,%eax
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    %dx,0x8060d80(,%eax,4)
add    $0x1,%eax
cmp    $0x11e,%eax
jne    804ee38 <fchmod@plt+0x5978>
xor    %ax,%ax
nop
xor    %ecx,%ecx
mov    %cx,0x8060c80(,%eax,4)
add    $0x1,%eax
cmp    $0x1e,%eax
jne    804ee50 <fchmod@plt+0x5990>
xor    %al,%al
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %dx,0x80606e0(,%eax,4)
add    $0x1,%eax
cmp    $0x13,%eax
jne    804ee68 <fchmod@plt+0x59a8>
mov    $0x1,%eax
mov    %ax,0x8061180
movl   $0x0,0x805e738
00
movl   $0x0,0x805e73c
00
movl   $0x0,0x805e744
00
movl   $0x0,0x805e748
00
movl   $0x0,0x805e74c
00
movb   $0x0,0x805e741
movb   $0x1,0x805e740
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805fdc0(,%edx,4),%eax
mov    0x805fda4,%edi
mov    %eax,%ebx
mov    %eax,0x10(%esp)
lea    (%edx,%edx,1),%eax
cmp    %edi,%eax
jg     804ef78 <fchmod@plt+0x5ab8>
movzwl 0x0(%ebp,%ebx,4),%ecx
mov    %edi,(%esp)
mov    %ebp,%edi
mov    %cx,0x6(%esp)
jmp    804ef2f <fchmod@plt+0x5a6f>
mov    0x805fdc0(,%eax,4),%ebx
mov    %eax,%ecx
movzwl (%edi,%ebx,4),%esi
cmp    %si,0x6(%esp)
jb     804ef78 <fchmod@plt+0x5ab8>
je     804ef90 <fchmod@plt+0x5ad0>
lea    (%ecx,%ecx,1),%eax
cmp    (%esp),%eax
mov    %ebx,0x805fdc0(,%edx,4)
mov    %ecx,%edx
jg     804ef78 <fchmod@plt+0x5ab8>
cmp    (%esp),%eax
jge    804ef08 <fchmod@plt+0x5a48>
mov    0x805fdc0(,%eax,4),%esi
lea    0x1(%eax),%ecx
mov    0x805fdc0(,%ecx,4),%ebx
mov    %esi,0x8(%esp)
movzwl (%edi,%esi,4),%esi
mov    %esi,%ebp
mov    %si,0xc(%esp)
movzwl (%edi,%ebx,4),%esi
cmp    %bp,%si
jb     804ef15 <fchmod@plt+0x5a55>
je     804efb0 <fchmod@plt+0x5af0>
movzwl 0xc(%esp),%esi
mov    %eax,%ecx
cmp    %si,0x6(%esp)
mov    0x8(%esp),%ebx
jae    804ef1c <fchmod@plt+0x5a5c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %eax,0x805fdc0(,%edx,4)
add    $0x14,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%esi
movzbl 0x805fb60(%ebx),%eax
cmp    %al,0x805fb60(%esi)
ja     804ef1e <fchmod@plt+0x5a5e>
jmp    804ef78 <fchmod@plt+0x5ab8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%ebp
mov    %eax,0xc(%esp)
movzbl 0x805fb60(%ebx),%eax
cmp    0x805fb60(%ebp),%al
mov    0xc(%esp),%eax
cmova  %ebp,%ebx
cmova  %eax,%ecx
jmp    804ef15 <fchmod@plt+0x5a55>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0xffffffff,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4,%esp
movzwl 0x2(%eax),%ecx
lea    0x4(,%edx,4),%ebx
mov    %bp,0x2(%eax,%ebx,1)
cmp    $0x1,%ecx
sbb    %edi,%edi
add    $0x4,%edi
cmp    $0x1,%ecx
sbb    %esi,%esi
and    $0x83,%esi
add    $0x7,%esi
test   %edx,%edx
js     804f09b <fchmod@plt+0x5bdb>
add    %eax,%ebx
xor    %edx,%edx
mov    %ebx,(%esp)
mov    $0xffffffff,%ebp
jmp    804f053 <fchmod@plt+0x5b93>
add    %dx,0x80606e0(,%ecx,4)
test   %ebx,%ebx
je     804f087 <fchmod@plt+0x5bc7>
cmp    %ebx,%ecx
setne  %dl
movzbl %dl,%edi
movzbl %dl,%esi
add    $0x3,%edi
add    $0x6,%esi
xor    %edx,%edx
add    $0x4,%eax
cmp    (%esp),%eax
je     804f09b <fchmod@plt+0x5bdb>
mov    %ecx,%ebp
mov    %ebx,%ecx
add    $0x1,%edx
movzwl 0x6(%eax),%ebx
cmp    %esi,%edx
jge    804f062 <fchmod@plt+0x5ba2>
cmp    %ebx,%ecx
je     804f0c0 <fchmod@plt+0x5c00>
cmp    %edi,%edx
jl     804f028 <fchmod@plt+0x5b68>
test   %ecx,%ecx
je     804f0a8 <fchmod@plt+0x5be8>
cmp    %ecx,%ebp
lea    0x0(%esi,%eiz,1),%esi
je     804f07b <fchmod@plt+0x5bbb>
addw   $0x1,0x80606e0(,%ecx,4)
01
addw   $0x1,0x8060720
test   %ebx,%ebx
jne    804f034 <fchmod@plt+0x5b74>
xor    %edx,%edx
add    $0x4,%eax
cmp    (%esp),%eax
mov    $0x3,%edi
mov    $0x8a,%esi
jne    804f04f <fchmod@plt+0x5b8f>
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edx
jg     804f0c8 <fchmod@plt+0x5c08>
addw   $0x1,0x8060724
jmp    804f030 <fchmod@plt+0x5b70>
lea    0x0(%esi),%esi
mov    %ebp,%ecx
jmp    804f047 <fchmod@plt+0x5b87>
lea    0x0(%esi,%eiz,1),%esi
addw   $0x1,0x8060728
jmp    804f030 <fchmod@plt+0x5b70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x1,%ecx
push   %ebx
xor    %esi,%esi
sub    $0x34,%esp
lea    0x0(%esi,%eiz,1),%esi
add    0x80606be(%ecx,%ecx,1),%si
add    %esi,%esi
mov    %si,0x10(%esp,%ecx,2)
add    $0x1,%ecx
cmp    $0x10,%ecx
jne    804f0f0 <fchmod@plt+0x5c30>
test   %edx,%edx
mov    %eax,%ebx
lea    0x4(%eax,%edx,4),%esi
js     804f143 <fchmod@plt+0x5c83>
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x2(%ebx),%eax
test   %eax,%eax
je     804f13c <fchmod@plt+0x5c7c>
movzwl 0x10(%esp,%eax,2),%edx
lea    0x1(%edx),%ecx
mov    %cx,0x10(%esp,%eax,2)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049c50 <fchmod@plt+0x790>
mov    %ax,(%ebx)
add    $0x4,%ebx
cmp    %esi,%ebx
jne    804f118 <fchmod@plt+0x5c58>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x10(%eax),%ebp
mov    (%eax),%edi
mov    %eax,0x1c(%esp)
movl   $0x0,0x805fda4
00
test   %ebp,%ebp
mov    %edi,%edx
mov    %edi,0x28(%esp)
mov    0x4(%eax),%edi
movl   $0x23d,0x805fda0
00
jle    804f5a3 <fchmod@plt+0x60e3>
xor    %ecx,%ecx
xor    %ebx,%ebx
mov    $0xffffffff,%esi
xor    %eax,%eax
jmp    804f1b1 <fchmod@plt+0x5cf1>
add    $0x1,%ebx
mov    %eax,%esi
movb   $0x0,0x805fb60(%eax)
add    $0x4,%edx
mov    %ebx,%ecx
mov    %eax,0x805fdc0(,%ebx,4)
add    $0x1,%eax
cmp    %ebp,%eax
je     804f1c7 <fchmod@plt+0x5d07>
cmpw   $0x0,(%edx)
jne    804f192 <fchmod@plt+0x5cd2>
add    $0x1,%eax
add    $0x4,%edx
movw   $0x0,-0x2(%edx)
cmp    %ebp,%eax
jne    804f1b1 <fchmod@plt+0x5cf1>
mov    %esi,0x2c(%esp)
mov    %ecx,0x805fda4
mov    0x805e738,%ecx
mov    %ebp,0x8(%esp)
mov    0x805fda4,%eax
mov    0x805e73c,%edx
mov    0x2c(%esp),%ebp
mov    %ecx,0x4(%esp)
jmp    804f21a <fchmod@plt+0x5d5a>
mov    0x28(%esp),%ecx
test   %edi,%edi
mov    %eax,0x805fdc0(,%ebx,4)
movw   $0x1,(%ecx,%esi,1)
movb   $0x0,0x805fb60(%eax)
je     804f215 <fchmod@plt+0x5d55>
movzwl 0x2(%edi,%esi,1),%eax
sub    %eax,0x4(%esp)
sub    $0x1,%edx
mov    %ebx,%eax
cmp    $0x1,%ebx
jg     804f239 <fchmod@plt+0x5d79>
add    $0x1,%ebx
xor    %esi,%esi
xor    %eax,%eax
cmp    $0x1,%ebp
jg     804f1f0 <fchmod@plt+0x5d30>
add    $0x1,%ebp
lea    0x0(,%ebp,4),%esi
mov    %ebp,%eax
jmp    804f1f0 <fchmod@plt+0x5d30>
mov    0x1c(%esp),%esi
mov    %ebp,%edi
mov    0x4(%esp),%ecx
mov    %ebp,0x2c(%esp)
mov    0x8(%esp),%ebp
mov    %eax,0x805fda4
mov    %edi,0x18(%esi)
mov    0x28(%esp),%edi
mov    %ebx,%esi
mov    %edx,0x805e73c
sar    %esi
mov    %ecx,0x805e738
nop
mov    %esi,%edx
mov    %edi,%eax
call   804eed0 <fchmod@plt+0x5a10>
sub    $0x1,%esi
jne    804f268 <fchmod@plt+0x5da8>
mov    0x805fda0,%eax
lea    0x805fdbc(,%eax,4),%edi
mov    %eax,0x10(%esp)
add    %eax,%eax
neg    %eax
lea    (%eax,%ebx,4),%eax
mov    %edi,0x8(%esp)
mov    0x28(%esp),%edi
mov    %eax,0x18(%esp)
jmp    804f2aa <fchmod@plt+0x5dea>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    %esi,%ebp
mov    %edx,0x10(%esp)
lea    -0x1(%ebx),%eax
mov    0x18(%esp),%ecx
mov    $0x1,%edx
mov    0x10(%esp),%ebx
mov    %eax,0x14(%esp)
mov    0x805fdc4,%esi
mov    %eax,0x805fda4
mov    0x805fdc0(%ecx,%ebx,2),%eax
mov    %eax,0x805fdc4
mov    %edi,%eax
call   804eed0 <fchmod@plt+0x5a10>
mov    0x805fdc4,%eax
mov    %ebx,%edx
mov    0x8(%esp),%ecx
sub    $0x2,%edx
mov    %edx,0xc(%esp)
mov    %edx,0x805fda0
lea    (%edi,%esi,4),%edx
mov    %esi,(%ecx)
mov    %eax,-0x4(%ecx)
lea    (%edi,%eax,4),%ecx
movzwl (%ecx),%ebx
add    (%edx),%bx
mov    %bx,(%edi,%ebp,4)
movzbl 0x805fb60(%esi),%ebx
mov    %bl,0x4(%esp)
movzbl 0x805fb60(%eax),%ebx
movzbl 0x4(%esp),%esi
cmp    %bl,0x4(%esp)
lea    0x1(%esi),%eax
lea    0x1(%ebx),%esi
cmovb  %esi,%eax
mov    %al,0x805fb60(%ebp)
mov    %edi,%eax
mov    %bp,0x2(%ecx)
lea    0x1(%ebp),%esi
mov    %bp,0x2(%edx)
mov    $0x1,%edx
mov    %ebp,0x805fdc4
call   804eed0 <fchmod@plt+0x5a10>
mov    0x14(%esp),%ebx
subl   $0x8,0x8(%esp)
cmp    $0x1,%ebx
jg     804f2a0 <fchmod@plt+0x5de0>
mov    0x10(%esp),%eax
mov    0x805fdc4,%edx
sub    $0x3,%eax
mov    %edx,0x805fdc0(,%eax,4)
mov    %eax,0x805fda0
mov    0x1c(%esp),%eax
mov    (%eax),%edi
mov    0x14(%eax),%esi
mov    %edi,0x8(%esp)
mov    0x8(%eax),%edi
mov    %edi,0x24(%esp)
mov    0xc(%eax),%edi
mov    %edi,0x18(%esp)
mov    0x18(%eax),%edi
mov    0x4(%eax),%eax
mov    %edi,0x10(%esp)
mov    %eax,0x1c(%esp)
xor    %eax,%eax
xchg   %ax,%ax
xor    %ebx,%ebx
mov    %bx,0x80606c0(%eax,%eax,1)
add    $0x1,%eax
cmp    $0x10,%eax
jne    804f3a8 <fchmod@plt+0x5ee8>
mov    0x8(%esp),%eax
xor    %ecx,%ecx
cmpl   $0x23c,0xc(%esp)
mov    %cx,0x2(%eax,%edx,4)
jg     804f58f <fchmod@plt+0x60cf>
mov    0x805e73c,%eax
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x805e738,%eax
mov    %eax,0x20(%esp)
mov    0xc(%esp),%eax
movl   $0x0,0xc(%esp)
lea    0x805fdc0(,%eax,4),%ebp
mov    0x0(%ebp),%edx
lea    0x0(,%edx,4),%ebx
lea    (%esi,%ebx,1),%ecx
movzwl 0x2(%ecx),%eax
movzwl 0x2(%esi,%eax,4),%eax
add    $0x1,%eax
cmp    %eax,0x4(%esp)
jge    804f428 <fchmod@plt+0x5f68>
addl   $0x1,0xc(%esp)
mov    0x4(%esp),%eax
cmp    %edx,0x10(%esp)
mov    %ax,0x2(%ecx)
jl     804f474 <fchmod@plt+0x5fb4>
addw   $0x1,0x80606c0(%eax,%eax,1)
01
xor    %edi,%edi
cmp    %edx,0x18(%esp)
jg     804f44e <fchmod@plt+0x5f8e>
mov    0x24(%esp),%edi
sub    0x18(%esp),%edx
mov    (%edi,%edx,4),%edi
movzwl (%ecx),%edx
add    %edi,%eax
mov    0x1c(%esp),%ecx
imul   %edx,%eax
add    0x14(%esp),%eax
test   %ecx,%ecx
je     804f470 <fchmod@plt+0x5fb0>
movzwl 0x2(%ecx,%ebx,1),%ecx
add    %edi,%ecx
imul   %edx,%ecx
add    %ecx,0x20(%esp)
mov    %eax,0x14(%esp)
add    $0x4,%ebp
cmp    $0x80606b4,%ebp
jne    804f400 <fchmod@plt+0x5f40>
mov    0x14(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x4(%esp),%esi
mov    %eax,0x805e73c
mov    0x20(%esp),%eax
test   %ecx,%ecx
mov    %eax,0x805e738
je     804f58f <fchmod@plt+0x60cf>
lea    -0x1(%esi),%eax
mov    %eax,0xc(%esp)
mov    %eax,%ebx
movzwl 0x80606c0(%ebx,%ebx,1),%edx
mov    %ebx,%eax
test   %dx,%dx
jne    804f4d0 <fchmod@plt+0x6010>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%eax
movzwl 0x80606c0(%eax,%eax,1),%edx
test   %dx,%dx
je     804f4c0 <fchmod@plt+0x6000>
sub    $0x1,%edx
sub    $0x2,%ecx
addw   $0x2,0x80606c2(%eax,%eax,1)
02
test   %ecx,%ecx
mov    %dx,0x80606c0(%eax,%eax,1)
movzwl 0x80606c0(%esi,%esi,1),%eax
lea    -0x1(%eax),%edx
mov    %dx,0x80606c0(%esi,%esi,1)
jg     804f4aa <fchmod@plt+0x5fea>
test   %esi,%esi
je     804f58f <fchmod@plt+0x60cf>
mov    0x805e73c,%edi
mov    $0x23d,%eax
mov    %edi,%ebp
mov    0x10(%esp),%edi
nop
movzwl %dx,%edx
test   %edx,%edx
je     804f56a <fchmod@plt+0x60aa>
mov    %ebp,0x4(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%eax
mov    0x805fdc0(,%eax,4),%ecx
cmp    %ecx,%edi
jl     804f562 <fchmod@plt+0x60a2>
mov    0x8(%esp),%ebx
lea    (%ebx,%ecx,4),%ecx
movzwl 0x2(%ecx),%ebx
cmp    %esi,%ebx
je     804f55f <fchmod@plt+0x609f>
mov    %esi,%ebp
sub    %ebx,%ebp
mov    %ebp,%ebx
movzwl (%ecx),%ebp
mov    %si,0x2(%ecx)
mov    0x4(%esp),%ecx
imul   %ebp,%ebx
add    %ecx,%ebx
mov    %ebx,0x4(%esp)
sub    $0x1,%edx
test   %edx,%edx
jne    804f528 <fchmod@plt+0x6068>
mov    0x4(%esp),%ebp
mov    0xc(%esp),%edx
test   %edx,%edx
mov    %edx,%esi
je     804f589 <fchmod@plt+0x60c9>
mov    0xc(%esp),%ebx
movzwl 0x80606c0(%ebx,%ebx,1),%edx
sub    $0x1,%ebx
mov    %ebx,0xc(%esp)
jmp    804f518 <fchmod@plt+0x6058>
mov    %ebp,0x805e73c
mov    0x2c(%esp),%edx
mov    0x28(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804f0e0 <fchmod@plt+0x5c20>
xor    %ebx,%ebx
movl   $0xffffffff,0x2c(%esp)
jmp    804f1d1 <fchmod@plt+0x5d11>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
movzwl 0x2(%eax),%esi
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0xffffffff,0x10(%esp)
cmp    $0x1,%esi
sbb    %edx,%edx
add    $0x4,%edx
cmp    $0x1,%esi
sbb    %eax,%eax
xor    %ecx,%ecx
and    $0x83,%eax
xor    %edi,%edi
add    $0x7,%eax
test   %ebx,%ebx
jns    804f68f <fchmod@plt+0x61cf>
jmp    804f6ed <fchmod@plt+0x622d>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     804f6f8 <fchmod@plt+0x6238>
cmp    %esi,0x10(%esp)
mov    %ecx,0x1c(%esp)
je     804f63c <fchmod@plt+0x617c>
movzwl 0x80606e2(,%esi,4),%eax
mov    %eax,0x4(%esp)
movzwl 0x80606e0(,%esi,4),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x1c(%esp),%ecx
mov    %ecx,%ebx
movzwl 0x8060722,%eax
sub    $0x3,%ebx
mov    %eax,0x4(%esp)
movzwl 0x8060720,%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049b50 <fchmod@plt+0x690>
test   %ebp,%ebp
je     804f6d8 <fchmod@plt+0x6218>
cmp    %ebp,%esi
setne  %al
xor    %ecx,%ecx
movzbl %al,%edx
movzbl %al,%eax
add    $0x3,%edx
add    $0x6,%eax
add    $0x1,%edi
cmp    %edi,0x18(%esp)
jl     804f6ed <fchmod@plt+0x622d>
mov    %esi,0x10(%esp)
mov    %ebp,%esi
mov    0x14(%esp),%ebx
movzwl 0x6(%ebx,%edi,4),%ebp
lea    0x1(%ecx),%ebx
cmp    %eax,%ebx
jge    804f6a7 <fchmod@plt+0x61e7>
cmp    %ebp,%esi
je     804f738 <fchmod@plt+0x6278>
cmp    %edx,%ebx
jge    804f608 <fchmod@plt+0x6148>
nop
movzwl 0x80606e2(,%esi,4),%eax
mov    %eax,0x4(%esp)
movzwl 0x80606e0(,%esi,4),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
sub    $0x1,%ebx
jne    804f6b0 <fchmod@plt+0x61f0>
jmp    804f669 <fchmod@plt+0x61a9>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x1,%edi
cmp    %edi,0x18(%esp)
mov    $0x3,%edx
mov    $0x8a,%eax
jge    804f689 <fchmod@plt+0x61c9>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0xa,%ebx
mov    %ecx,0x10(%esp)
jg     804f748 <fchmod@plt+0x6288>
movzwl 0x8060726,%eax
mov    %eax,0x4(%esp)
movzwl 0x8060724,%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x10(%esp),%ecx
movl   $0x3,0x4(%esp)
sub    $0x2,%ecx
mov    %ecx,(%esp)
call   8049b50 <fchmod@plt+0x690>
jmp    804f669 <fchmod@plt+0x61a9>
nop
mov    %ebx,%ecx
mov    0x10(%esp),%esi
jmp    804f680 <fchmod@plt+0x61c0>
nop
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x806072a,%eax
mov    %eax,0x4(%esp)
movzwl 0x8060728,%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x10(%esp),%ecx
movl   $0x7,0x4(%esp)
sub    $0xa,%ecx
mov    %ecx,(%esp)
call   8049b50 <fchmod@plt+0x690>
jmp    804f669 <fchmod@plt+0x61a9>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %eax,0xc(%esp)
mov    0x805e74c,%eax
mov    %edx,0x1c(%esp)
test   %eax,%eax
je     804f8c0 <fchmod@plt+0x6400>
xor    %esi,%esi
xor    %edi,%edi
movl   $0x0,0x10(%esp)
xor    %ebx,%ebx
jmp    804f7dc <fchmod@plt+0x631c>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
lea    (%eax,%edx,4),%eax
movzwl 0x2(%eax),%edx
mov    %edx,0x4(%esp)
movzwl (%eax),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    %esi,%eax
shr    %al
cmp    0x805e74c,%ebx
mov    %eax,%esi
jae    804f8c0 <fchmod@plt+0x6400>
test   $0x7,%bl
jne    804f7f3 <fchmod@plt+0x6333>
mov    0x10(%esp),%eax
movzbl 0x805e760(%eax),%esi
add    $0x1,%eax
mov    %eax,0x10(%esp)
add    $0x1,%ebx
test   $0x1,%esi
movzbl 0x80a6d9f(%ebx),%edx
je     804f7b0 <fchmod@plt+0x62f0>
movzbl 0x805fa60(%edx),%ebp
mov    0xc(%esp),%eax
mov    %edx,0x14(%esp)
lea    0x404(%eax,%ebp,4),%eax
movzwl 0x2(%eax),%ecx
mov    %ecx,0x4(%esp)
movzwl (%eax),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x805e440(,%ebp,4),%eax
mov    0x14(%esp),%edx
test   %eax,%eax
jne    804f900 <fchmod@plt+0x6440>
movzwl 0x8082140(%edi,%edi,1),%edx
lea    0x1(%edi),%eax
mov    %eax,0x14(%esp)
cmp    $0xff,%edx
ja     804f8e8 <fchmod@plt+0x6428>
movzbl 0x805f860(%edx),%ebp
mov    0x1c(%esp),%eax
mov    %edx,0x18(%esp)
lea    (%eax,%ebp,4),%ecx
movzwl 0x2(%ecx),%edi
mov    %edi,0x4(%esp)
movzwl (%ecx),%ecx
mov    %ecx,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x805e3c0(,%ebp,4),%ecx
mov    0x14(%esp),%edi
mov    0x18(%esp),%edx
test   %ecx,%ecx
je     804f7ca <fchmod@plt+0x630a>
sub    0x805f760(,%ebp,4),%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    %esi,%eax
shr    %al
cmp    0x805e74c,%ebx
mov    %eax,%esi
jb     804f7dc <fchmod@plt+0x631c>
lea    0x0(%esi),%esi
mov    0xc(%esp),%edi
movzwl 0x402(%edi),%eax
mov    %eax,0x4(%esp)
movzwl 0x400(%edi),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %edx,%eax
shr    $0x7,%eax
movzbl 0x805f960(%eax),%ebp
jmp    804f863 <fchmod@plt+0x63a3>
lea    0x0(%esi,%eiz,1),%esi
sub    0x805f7e0(,%ebp,4),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049b50 <fchmod@plt+0x690>
jmp    804f841 <fchmod@plt+0x6381>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
cmpw   $0x0,0x8060782
movl   $0x0,0x805e728
00
movl   $0x0,0x805e72c
00
mov    %eax,0x805e724
mov    0x34(%esp),%eax
movl   $0x0,0x805e730
00
movl   $0x0,0x805e734
00
mov    %eax,0x805e720
jne    804fb41 <fchmod@plt+0x6681>
xor    %ebx,%ebx
xor    %esi,%esi
mov    $0x1,%edi
mov    0x805e440(,%ebx,4),%ecx
mov    %edi,%ebp
mov    %esi,0x805f7e0(,%ebx,4)
shl    %cl,%ebp
test   %ebp,%ebp
jle    804f9ab <fchmod@plt+0x64eb>
lea    0x805fa60(%esi),%eax
mov    %ebx,%ecx
lea    (%eax,%ebp,1),%edx
lea    0x0(%esi,%eiz,1),%esi
mov    %cl,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    804f9a0 <fchmod@plt+0x64e0>
add    %ebp,%esi
add    $0x1,%ebx
cmp    $0x1c,%ebx
jne    804f978 <fchmod@plt+0x64b8>
movb   $0x1c,0x805fa5f(%esi)
xor    %bl,%bl
xor    %esi,%esi
mov    $0x1,%edi
mov    0x805e3c0(,%ebx,4),%ecx
mov    %edi,%ebp
mov    %esi,0x805f760(,%ebx,4)
shl    %cl,%ebp
test   %ebp,%ebp
jle    804f9f3 <fchmod@plt+0x6533>
lea    0x805f860(%esi),%eax
mov    %ebx,%ecx
lea    (%eax,%ebp,1),%edx
lea    0x0(%esi,%eiz,1),%esi
mov    %cl,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    804f9e8 <fchmod@plt+0x6528>
add    %ebp,%esi
add    $0x1,%ebx
cmp    $0x10,%ebx
jne    804f9c3 <fchmod@plt+0x6503>
sar    $0x7,%esi
mov    $0x1,%edi
mov    %esi,%eax
mov    %edi,%ebp
shl    $0x7,%eax
mov    %eax,0x805f760(,%ebx,4)
mov    0x805e3c0(,%ebx,4),%eax
lea    -0x7(%eax),%ecx
shl    %cl,%ebp
test   %ebp,%ebp
jle    804fa3b <fchmod@plt+0x657b>
mov    %ebx,%ecx
lea    0x805f960(%esi),%eax
lea    0x805f960(%ebp,%esi,1),%edx
mov    %cl,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    804fa30 <fchmod@plt+0x6570>
add    %ebp,%esi
add    $0x1,%ebx
cmp    $0x1e,%ebx
jne    804fa03 <fchmod@plt+0x6543>
xor    %eax,%eax
xor    %ebp,%ebp
mov    %bp,0x80606c0(%eax,%eax,1)
add    $0x1,%eax
cmp    $0x10,%eax
jne    804fa45 <fchmod@plt+0x6585>
movzwl 0x80606d0,%edx
xor    %al,%al
add    $0x1,%eax
mov    $0x8,%edi
cmp    $0x90,%eax
mov    %di,0x80607fe(,%eax,4)
jne    804fa60 <fchmod@plt+0x65a0>
movzwl 0x80606d2,%ecx
xchg   %ax,%ax
add    $0x1,%eax
mov    $0x9,%esi
cmp    $0x100,%eax
mov    %si,0x80607fe(,%eax,4)
jne    804fa80 <fchmod@plt+0x65c0>
add    $0x70,%ecx
mov    %cx,0x80606d2
movzwl 0x80606ce,%ecx
add    $0x1,%eax
mov    $0x7,%ebx
cmp    $0x118,%eax
mov    %bx,0x80607fe(,%eax,4)
jne    804faa8 <fchmod@plt+0x65e8>
add    $0x18,%ecx
mov    %cx,0x80606ce
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    $0x8,%ecx
cmp    $0x120,%eax
mov    %cx,0x80607fe(,%eax,4)
jne    804fad0 <fchmod@plt+0x6610>
lea    0x98(%edx),%eax
mov    $0x11f,%edx
mov    %ax,0x80606d0
mov    $0x8060800,%eax
xor    %ebx,%ebx
call   804f0e0 <fchmod@plt+0x5c20>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x5,%eax
mov    %ebx,(%esp)
movl   $0x5,0x4(%esp)
mov    %ax,0x8060782(,%ebx,4)
call   8049c50 <fchmod@plt+0x790>
mov    %ax,0x8060780(,%ebx,4)
add    $0x1,%ebx
cmp    $0x1e,%ebx
jne    804fb08 <fchmod@plt+0x6648>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804ee30 <fchmod@plt+0x5970>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e724,%edi
movzbl 0x805e741,%eax
mov    0x805e744,%edx
mov    0x34(%esp),%ebx
cmpw   $0xffff,(%edi)
mov    %al,0x805e760(%edx)
je     804fe98 <fchmod@plt+0x69d8>
mov    $0x805e338,%eax
mov    $0x12,%esi
call   804f150 <fchmod@plt+0x5c90>
mov    $0x805e31c,%eax
call   804f150 <fchmod@plt+0x5c90>
mov    0x805e350,%edx
mov    $0x8060d80,%eax
call   804efe0 <fchmod@plt+0x5b20>
mov    0x805e334,%edx
mov    $0x8060c80,%eax
call   804efe0 <fchmod@plt+0x5b20>
mov    $0x805e300,%eax
call   804f150 <fchmod@plt+0x5c90>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x80599d8(%esi),%eax
cmpw   $0x0,0x80606e2(,%eax,4)
00
jne    804fe50 <fchmod@plt+0x6990>
sub    $0x1,%esi
cmp    $0x2,%esi
jne    804fbc8 <fchmod@plt+0x6708>
mov    $0x9,%edx
mov    0x805e73c,%eax
lea    0x4(%ebx),%ebp
lea    0xe(%edx,%eax,1),%ecx
mov    0x805e738,%eax
xor    %edx,%edx
mov    %ecx,0x805e73c
add    $0xa,%ecx
shr    $0x3,%ecx
lea    0xa(%eax),%edi
mov    %ecx,%eax
shr    $0x3,%edi
add    %ebx,0x805e728
adc    %edx,0x805e72c
cmp    %edi,%ecx
cmova  %edi,%eax
cmp    %eax,%ebp
ja     804fcd8 <fchmod@plt+0x6818>
mov    0x30(%esp),%edx
test   %edx,%edx
je     804fcd8 <fchmod@plt+0x6818>
mov    0x3c(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x805e730,%eax
mov    0x805e734,%edx
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
add    $0xa,%eax
mov    %eax,%ecx
adc    $0x0,%edx
lea    0x0(,%ebp,8),%eax
and    $0xfffffff8,%ecx
mov    %edx,%edi
xor    %edx,%edx
add    %ecx,%eax
mov    %eax,0x805e730
mov    0x30(%esp),%eax
adc    %edi,%edx
mov    %edx,0x805e734
mov    %eax,(%esp)
call   8049d70 <fchmod@plt+0x8b0>
call   804ee30 <fchmod@plt+0x5970>
mov    0x3c(%esp),%esi
test   %esi,%esi
je     804fdb4 <fchmod@plt+0x68f4>
call   8049c80 <fchmod@plt+0x7c0>
mov    0x805e730,%eax
mov    0x805e734,%edx
add    $0x7,%eax
adc    $0x0,%edx
mov    %eax,0x805e730
shrd   $0x3,%edx,%eax
mov    %edx,0x805e734
add    $0x1c,%esp
pop    %ebx
sar    $0x3,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,%edi
mov    0x3c(%esp),%eax
movl   $0x3,0x4(%esp)
je     804fe60 <fchmod@plt+0x69a0>
add    $0x4,%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x805e350,%edi
mov    0x805e334,%ebx
movl   $0x5,0x4(%esp)
lea    -0x100(%edi),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
movl   $0x5,0x4(%esp)
mov    %ebx,(%esp)
call   8049b50 <fchmod@plt+0x690>
lea    -0x3(%esi),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
xchg   %ax,%ax
movzbl 0x80599d8(%ebp),%eax
add    $0x1,%ebp
movl   $0x3,0x4(%esp)
movzwl 0x80606e2(,%eax,4),%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
cmp    %esi,%ebp
jle    804fd40 <fchmod@plt+0x6880>
mov    %edi,%edx
mov    $0x8060d80,%eax
call   804f5c0 <fchmod@plt+0x6100>
mov    %ebx,%edx
mov    $0x8060c80,%eax
call   804f5c0 <fchmod@plt+0x6100>
mov    $0x8060c80,%edx
mov    $0x8060d80,%eax
call   804f780 <fchmod@plt+0x62c0>
mov    0x805e73c,%eax
xor    %edx,%edx
add    $0x3,%eax
add    %eax,0x805e730
adc    %edx,0x805e734
call   804ee30 <fchmod@plt+0x5970>
mov    0x3c(%esp),%esi
test   %esi,%esi
jne    804fca4 <fchmod@plt+0x67e4>
mov    0x38(%esp),%ebx
test   %ebx,%ebx
je     804fe2f <fchmod@plt+0x696f>
mov    0x805e730,%ecx
mov    0x805e734,%ebx
test   $0x7,%cl
mov    %ecx,%eax
mov    %ebx,%edx
jne    804fde0 <fchmod@plt+0x6920>
add    $0x1c,%esp
pop    %ebx
shrd   $0x3,%edx,%eax
pop    %esi
sar    $0x3,%edx
pop    %edi
pop    %ebp
ret
movl   $0x3,0x4(%esp)
movl   $0x0,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    0x805e730,%eax
mov    0x805e734,%edx
movl   $0x1,0x8(%esp)
movl   $0x0,0x4(%esp)
add    $0xa,%eax
adc    $0x0,%edx
and    $0xfffffff8,%eax
mov    %eax,0x805e730
mov    0x30(%esp),%eax
mov    %edx,0x805e734
mov    %eax,(%esp)
call   8049d70 <fchmod@plt+0x8b0>
mov    0x805e734,%edx
mov    0x805e730,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
shrd   $0x3,%edx,%eax
pop    %ebp
sar    $0x3,%edx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x3(%esi,%esi,2),%edx
jmp    804fbeb <fchmod@plt+0x672b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2,%eax
mov    %eax,(%esp)
call   8049b50 <fchmod@plt+0x690>
mov    $0x8060780,%edx
mov    $0x8060800,%eax
call   804f780 <fchmod@plt+0x62c0>
mov    0x805e738,%eax
xor    %edx,%edx
add    $0x3,%eax
add    %eax,0x805e730
adc    %edx,0x805e734
jmp    804fda3 <fchmod@plt+0x68e3>
lea    0x0(%esi),%esi
xor    %edx,%edx
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzwl 0x8060d7c(,%eax,4),%ecx
add    %ecx,%edx
cmp    $0x7,%eax
jne    804fea0 <fchmod@plt+0x69e0>
xor    %ecx,%ecx
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzwl 0x8060d7c(,%eax,4),%esi
add    %esi,%ecx
cmp    $0x80,%eax
jne    804feb8 <fchmod@plt+0x69f8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzwl 0x8060d7c(,%eax,4),%esi
add    %esi,%edx
cmp    $0x100,%eax
jne    804fed0 <fchmod@plt+0x6a10>
shr    $0x2,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
setae  %al
mov    %ax,(%edi)
jmp    804fb7e <fchmod@plt+0x66be>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    0x805e74c,%edx
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ecx
mov    0x18(%esp),%eax
lea    0x1(%edx),%esi
mov    %esi,0x805e74c
test   %ecx,%ecx
mov    %al,0x80a6da0(%edx)
jne    804ffa8 <fchmod@plt+0x6ae8>
addw   $0x1,0x8060d80(,%eax,4)
01
movzbl 0x805e740,%eax
add    %eax,%eax
test   $0x7,%esi
mov    %al,0x805e740
jne    804ff71 <fchmod@plt+0x6ab1>
mov    0x805e744,%eax
movb   $0x1,0x805e740
lea    0x1(%eax),%edx
mov    %edx,0x805e744
movzbl 0x805e741,%edx
movb   $0x0,0x805e741
mov    %dl,0x805e760(%eax)
cmpl   $0x2,0x805e1e4
jle    804ff86 <fchmod@plt+0x6ac6>
test   $0xfff,%esi
je     8050010 <fchmod@plt+0x6b50>
cmp    $0x7fff,%esi
mov    $0x1,%eax
je     804ffa2 <fchmod@plt+0x6ae2>
xor    %eax,%eax
cmpl   $0x8000,0x805e748
00
sete   %al
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movzbl 0x805fa60(%eax),%eax
lea    -0x1(%ecx),%edx
addw   $0x1,0x8061184(,%eax,4)
01
cmp    $0xff,%edx
jle    8050000 <fchmod@plt+0x6b40>
mov    %edx,%eax
sar    $0x7,%eax
movzbl 0x805f960(%eax),%eax
addw   $0x1,0x8060c80(,%eax,4)
01
mov    0x805e748,%eax
lea    0x1(%eax),%ecx
mov    %dx,0x8082140(%eax,%eax,1)
movzbl 0x805e740,%eax
mov    %ecx,0x805e748
or     %al,0x805e741
jmp    804ff39 <fchmod@plt+0x6a79>
movzbl 0x805f85f(%ecx),%eax
jmp    804ffcf <fchmod@plt+0x6b0f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8061d04,%ebp
lea    0x0(,%esi,8),%ecx
xor    %eax,%eax
mov    0x8061d08,%edi
lea    0x0(%esi),%esi
mov    0x805e3c0(,%eax,4),%ebx
lea    0x5(%ebx),%edx
movzwl 0x8060c80(,%eax,4),%ebx
add    $0x1,%eax
imul   %ebx,%edx
add    %edx,%ecx
cmp    $0x1e,%eax
jne    8050028 <fchmod@plt+0x6b68>
mov    %esi,%eax
shr    %eax
cmp    0x805e748,%eax
jbe    804ff86 <fchmod@plt+0x6ac6>
mov    %ebp,%edx
mov    $0x1,%eax
sub    %edi,%edx
shr    $0x3,%ecx
shr    %edx
cmp    %edx,%ecx
jae    804ff86 <fchmod@plt+0x6ac6>
jmp    804ffa2 <fchmod@plt+0x6ae2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movzwl 0x8061694,%edx
mov    %ebx,%ecx
mov    0x806168c,%eax
mov    0x8061690,%esi
shl    %cl,%edx
cmp    %eax,%ebx
jg     80500d2 <fchmod@plt+0x6c12>
jmp    8050128 <fchmod@plt+0x6c68>
xchg   %ax,%ax
movzbl 0x80a6da0(%eax),%esi
lea    0x1(%eax),%ecx
mov    %ecx,0x8092144
mov    %esi,0x8061690
cmp    $0x8,%ebx
mov    $0x8,%eax
movl   $0x8,0x806168c
00
jle    8050128 <fchmod@plt+0x6c68>
sub    %eax,%ebx
mov    0x8092144,%eax
mov    %ebx,%ecx
shl    %cl,%esi
or     %esi,%edx
cmp    0x80a6d98,%eax
mov    %dx,0x8061694
jb     80500a8 <fchmod@plt+0x6be8>
movl   $0x1,(%esp)
call   8052250 <fchmod@plt+0x8d90>
movzwl 0x8061694,%edx
cmp    $0xffffffff,%eax
mov    %eax,%esi
mov    %eax,0x8061690
jne    80500be <fchmod@plt+0x6bfe>
movl   $0x0,0x8061690
00
movzwl 0x8061694,%edx
xor    %esi,%esi
jmp    80500be <fchmod@plt+0x6bfe>
lea    0x0(%esi),%esi
sub    %ebx,%eax
mov    %eax,%ecx
shr    %cl,%esi
or     %esi,%edx
mov    %eax,0x806168c
mov    %dx,0x8061694
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    %eax,0x14(%esp)
lea    0x5a(%esp),%ebx
mov    %edx,0x18(%esp)
lea    0x3a(%esp),%eax
mov    %ecx,0x1c(%esp)
xchg   %ax,%ax
xor    %ebp,%ebp
add    $0x2,%eax
mov    %bp,-0x2(%eax)
cmp    %ebx,%eax
jne    8050170 <fchmod@plt+0x6cb0>
mov    0x14(%esp),%edi
xor    %eax,%eax
test   %edi,%edi
je     80501a1 <fchmod@plt+0x6ce1>
mov    0x14(%esp),%ecx
mov    0x18(%esp),%esi
nop
movzbl (%esi,%eax,1),%edx
add    $0x1,%eax
addw   $0x1,0x38(%esp,%edx,2)
cmp    %ecx,%eax
jne    8050190 <fchmod@plt+0x6cd0>
xor    %esi,%esi
mov    $0x1,%ecx
mov    %si,0x7e(%esp)
mov    $0x10,%edi
xor    %esi,%esi
jmp    80501bc <fchmod@plt+0x6cfc>
xchg   %ax,%ax
mov    %edx,%esi
mov    %eax,%ecx
lea    0x1(%ecx),%eax
mov    %edi,%ebp
movzwl 0x36(%esp,%eax,2),%edx
sub    %ecx,%ebp
mov    %ebp,%ecx
shl    %cl,%edx
add    %esi,%edx
cmp    $0x11,%eax
mov    %dx,0x7c(%esp,%eax,2)
jne    80501b8 <fchmod@plt+0x6cf8>
cmpw   $0x0,0x9e(%esp)
00
jne    80503ba <fchmod@plt+0x6efa>
mov    0x1c(%esp),%edi
mov    $0x10,%eax
mov    $0x1,%esi
sub    %edi,%eax
test   %edi,%edi
mov    %eax,0x24(%esp)
mov    $0x1,%eax
je     8050236 <fchmod@plt+0x6d76>
mov    0x24(%esp),%ebp
mov    0x1c(%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x7c(%esp,%eax,2),%edx
mov    %ebp,%ecx
sar    %cl,%edx
mov    %edi,%ecx
sub    %eax,%ecx
mov    %dx,0x7c(%esp,%eax,2)
mov    %esi,%edx
shl    %cl,%edx
mov    %dx,(%ebx,%eax,2)
add    $0x1,%eax
cmp    %edi,%eax
jbe    8050210 <fchmod@plt+0x6d50>
cmp    $0x11,%eax
je     8050263 <fchmod@plt+0x6da3>
lea    (%ebx,%eax,2),%edi
mov    $0x11,%esi
mov    $0x10,%ebx
sub    %eax,%esi
sub    %eax,%ebx
xor    %edx,%edx
mov    $0x1,%eax
xchg   %ax,%ax
mov    %ebx,%ecx
mov    %eax,%ebp
sub    %edx,%ecx
shl    %cl,%ebp
mov    %bp,(%edi,%edx,2)
add    $0x1,%edx
cmp    %esi,%edx
jne    8050250 <fchmod@plt+0x6d90>
mov    0x1c(%esp),%eax
movzbl 0x24(%esp),%ecx
movzwl 0x7e(%esp,%eax,2),%eax
sar    %cl,%eax
test   %eax,%eax
je     805029e <fchmod@plt+0x6dde>
movzbl 0x1c(%esp),%ecx
mov    $0x1,%edx
shl    %cl,%edx
cmp    %edx,%eax
je     805029e <fchmod@plt+0x6dde>
mov    0xc0(%esp),%ecx
xchg   %ax,%ax
add    $0x1,%eax
xor    %ebx,%ebx
cmp    %eax,%edx
mov    %bx,-0x2(%ecx,%eax,2)
jne    8050290 <fchmod@plt+0x6dd0>
mov    0x1c(%esp),%esi
mov    $0x1,%eax
mov    $0xf,%ecx
mov    %eax,%ebx
movl   $0x0,0x10(%esp)
sub    %esi,%ecx
shl    %cl,%ebx
mov    %esi,%ecx
shl    %cl,%eax
mov    %eax,0x28(%esp)
mov    0x14(%esp),%eax
mov    %ebx,0x2c(%esp)
test   %eax,%eax
mov    %eax,%ebx
je     805032f <fchmod@plt+0x6e6f>
mov    0x18(%esp),%eax
mov    0x10(%esp),%edi
movzbl (%eax,%edi,1),%esi
test   %esi,%esi
je     8050320 <fchmod@plt+0x6e60>
movzwl 0x7c(%esp,%esi,2),%edx
movzwl 0x5a(%esp,%esi,2),%edi
add    %edx,%edi
cmp    0x1c(%esp),%esi
ja     8050340 <fchmod@plt+0x6e80>
cmp    0x28(%esp),%edi
ja     80503ba <fchmod@plt+0x6efa>
cmp    %edx,%edi
jbe    805031b <fchmod@plt+0x6e5b>
movzwl 0x10(%esp),%eax
mov    0xc0(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
mov    %ax,(%ecx,%edx,2)
add    $0x1,%edx
cmp    %edx,%edi
jne    8050310 <fchmod@plt+0x6e50>
mov    %di,0x7c(%esp,%esi,2)
addl   $0x1,0x10(%esp)
mov    0x14(%esp),%eax
cmp    %eax,0x10(%esp)
jne    80502d0 <fchmod@plt+0x6e10>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x24(%esp),%ecx
mov    %edx,%eax
shr    %cl,%eax
mov    0xc0(%esp),%ecx
lea    (%ecx,%eax,2),%ebp
mov    %esi,%ecx
sub    0x1c(%esp),%ecx
je     80503ac <fchmod@plt+0x6eec>
mov    %esi,0x20(%esp)
mov    0x2c(%esp),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x0(%ebp),%eax
test   %ax,%ax
jne    805038f <fchmod@plt+0x6ecf>
xor    %eax,%eax
mov    %ax,0x8062140(%ebx,%ebx,1)
xor    %eax,%eax
mov    %ax,0x8072140(%ebx,%ebx,1)
movzwl %bx,%eax
mov    %bx,0x0(%ebp)
add    $0x1,%ebx
test   %esi,%edx
lea    0x8072140(%eax,%eax,1),%ebp
jne    80503a1 <fchmod@plt+0x6ee1>
lea    0x8062140(%eax,%eax,1),%ebp
add    %edx,%edx
sub    $0x1,%ecx
jne    8050368 <fchmod@plt+0x6ea8>
mov    0x20(%esp),%esi
movzwl 0x10(%esp),%eax
mov    %ax,0x0(%ebp)
jmp    805031b <fchmod@plt+0x6e5b>
movl   $0x80599eb,(%esp)
call   8051d40 <fchmod@plt+0x8880>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    $0x10,%esi
push   %ebx
sub    %edx,%esi
sub    $0x1c,%esp
mov    %ecx,%ebx
mov    %eax,0x8(%esp)
movzwl 0x8061694,%eax
mov    %esi,%ecx
mov    %eax,0x4(%esp)
mov    %edx,%eax
sarl   %cl,0x4(%esp)
call   8050080 <fchmod@plt+0x6bc0>
mov    0x4(%esp),%eax
test   %eax,%eax
je     8050539 <fchmod@plt+0x7079>
xor    %edx,%edx
lea    0x1(%eax),%esi
cmp    0x4(%esp),%edx
jge    8050498 <fchmod@plt+0x6fd8>
lea    0x1(%edx),%edi
jmp    805044a <fchmod@plt+0x6f8a>
xchg   %ax,%ax
cmp    $0x6,%edx
jg     8050490 <fchmod@plt+0x6fd0>
mov    %ecx,%ebp
mov    $0x3,%eax
call   8050080 <fchmod@plt+0x6bc0>
mov    %ebp,%eax
cmp    %ebx,%edi
mov    %edi,%edx
mov    %al,0x80618bf(%edi)
je     80504e0 <fchmod@plt+0x7020>
add    $0x1,%edi
cmp    %esi,%edi
je     8050498 <fchmod@plt+0x6fd8>
movzwl 0x8061694,%eax
mov    %eax,%ecx
shr    $0xd,%cx
movzwl %cx,%edx
cmp    $0x7,%edx
jne    8050420 <fchmod@plt+0x6f60>
test   $0x10,%ah
movzwl %ax,%ecx
je     805052a <fchmod@plt+0x706a>
mov    $0x1000,%eax
shr    %eax
add    $0x1,%edx
test   %eax,%ecx
jne    8050470 <fchmod@plt+0x6fb0>
cmp    $0x10,%edx
jg     805058a <fchmod@plt+0x70ca>
lea    -0x3(%edx),%eax
mov    %edx,%ebp
jmp    805042c <fchmod@plt+0x6f6c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3(%edx),%eax
mov    %ecx,%ebp
jmp    805042c <fchmod@plt+0x6f6c>
nop
mov    0x8(%esp),%ebx
lea    0x80618c0(%edx),%eax
cmp    %edx,%ebx
lea    0x80618c0(%ebx),%ecx
jle    80504ba <fchmod@plt+0x6ffa>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %ecx,%eax
jne    80504b0 <fchmod@plt+0x6ff0>
mov    0x8(%esp),%eax
mov    $0x8,%ecx
mov    $0x80618c0,%edx
movl   $0x80616a0,(%esp)
call   8050150 <fchmod@plt+0x6c90>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x8061694,%ebp
mov    $0x2,%eax
mov    %edi,0xc(%esp)
call   8050080 <fchmod@plt+0x6bc0>
mov    0xc(%esp),%edx
sar    $0xe,%ebp
test   %ebp,%ebp
je     805040f <fchmod@plt+0x6f4f>
lea    0x80618c0(%edi),%eax
lea    0x80618c0(%ebp,%edi,1),%edx
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    8050518 <fchmod@plt+0x7058>
lea    (%edi,%ebp,1),%edx
jmp    805040f <fchmod@plt+0x6f4f>
mov    $0x7,%ebp
mov    $0x4,%eax
jmp    805042c <fchmod@plt+0x6f6c>
movzwl 0x8061694,%ebx
mov    %esi,%ecx
mov    %ebp,%eax
sar    %cl,%ebx
call   8050080 <fchmod@plt+0x6bc0>
mov    0x8(%esp),%edx
test   %edx,%edx
jle    8050566 <fchmod@plt+0x70a6>
xor    %eax,%eax
lea    0x0(%esi),%esi
movb   $0x0,0x80618c0(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    8050558 <fchmod@plt+0x7098>
mov    %ebx,%edx
xor    %eax,%eax
lea    0x0(%esi),%esi
mov    %dx,0x80616a0(%eax,%eax,1)
add    $0x1,%eax
cmp    $0x100,%eax
jne    8050570 <fchmod@plt+0x70b0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x80599eb,(%esp)
call   8051d40 <fchmod@plt+0x8880>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ecx,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %cx,0x8061694
movl   $0x0,0x8061690
00
movl   $0x0,0x806168c
00
mov    %eax,0x8096960
mov    0x34(%esp),%eax
mov    %eax,0x8092140
mov    $0x10,%eax
call   8050080 <fchmod@plt+0x6bc0>
xor    %eax,%eax
movl   $0x0,0x80618a0
00
movl   $0x0,0x8061684
00
xchg   %ax,%ax
mov    0x8061680,%edx
sub    $0x1,%eax
xor    %ebx,%ebx
jmp    8050630 <fchmod@plt+0x7170>
lea    0x0(%esi),%esi
movzbl 0x8096d80(%edx),%ecx
add    $0x1,%ebx
add    $0x1,%edx
and    $0x1fff,%edx
sub    $0x1,%eax
mov    %cl,0x8096d7f(%ebx)
cmp    $0x2000,%ebx
je     80506f8 <fchmod@plt+0x7238>
test   %eax,%eax
mov    %eax,%esi
jns    8050608 <fchmod@plt+0x7148>
mov    %edx,0x8061680
mov    %eax,0x8061688
mov    0x80618a0,%eax
test   %eax,%eax
je     8050730 <fchmod@plt+0x7270>
movzwl 0x8061694,%edx
sub    $0x1,%eax
mov    %eax,0x80618a0
mov    %edx,%eax
shr    $0x4,%ax
movzwl %ax,%eax
movzwl 0x8082140(%eax,%eax,1),%esi
cmp    $0x1fd,%esi
jbe    80506a8 <fchmod@plt+0x71e8>
mov    $0x8,%eax
jmp    8050692 <fchmod@plt+0x71d2>
lea    0x0(%esi),%esi
movzwl 0x8072140(%esi,%esi,1),%esi
shr    %eax
cmp    $0x1fd,%esi
jbe    80506a8 <fchmod@plt+0x71e8>
test   %edx,%eax
jne    8050680 <fchmod@plt+0x71c0>
movzwl 0x8062140(%esi,%esi,1),%esi
shr    %eax
cmp    $0x1fd,%esi
ja     8050692 <fchmod@plt+0x71d2>
movzbl 0x8092160(%esi),%eax
call   8050080 <fchmod@plt+0x6bc0>
cmp    $0xff,%esi
ja     8050770 <fchmod@plt+0x72b0>
mov    %esi,%eax
add    $0x1,%ebx
mov    %al,0x8096d7f(%ebx)
cmp    $0x2000,%ebx
jne    8050641 <fchmod@plt+0x7181>
mov    0x805e5a8,%eax
test   %eax,%eax
je     805070d <fchmod@plt+0x724d>
mov    0x8061684,%eax
test   %eax,%eax
jne    8050764 <fchmod@plt+0x72a4>
mov    0x8061688,%eax
jmp    80505f8 <fchmod@plt+0x7138>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e5a8,%eax
mov    %edx,0x8061680
mov    %esi,0x8061688
test   %eax,%eax
jne    80506e0 <fchmod@plt+0x7220>
mov    $0x2000,%ebx
mov    0x34(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x8096d80,0x4(%esp)
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
jmp    80506e0 <fchmod@plt+0x7220>
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x8061694,%esi
mov    $0x10,%al
call   8050080 <fchmod@plt+0x6bc0>
test   %esi,%esi
mov    %esi,0x80618a0
jne    8050860 <fchmod@plt+0x73a0>
mov    0x805e5a8,%edx
movl   $0x1,0x8061684
00
test   %edx,%edx
je     8050848 <fchmod@plt+0x7388>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movzwl 0x8061694,%edx
sub    $0xfd,%esi
mov    %esi,0x8061688
movzbl %dh,%eax
movzwl 0x80616a0(%eax,%eax,1),%esi
cmp    $0xd,%esi
jbe    80507c2 <fchmod@plt+0x7302>
mov    $0x80,%eax
jmp    80507af <fchmod@plt+0x72ef>
lea    0x0(%esi),%esi
movzwl 0x8072140(%esi,%esi,1),%esi
shr    %eax
cmp    $0xd,%esi
jbe    80507c2 <fchmod@plt+0x7302>
test   %edx,%eax
jne    80507a0 <fchmod@plt+0x72e0>
movzwl 0x8062140(%esi,%esi,1),%esi
shr    %eax
cmp    $0xd,%esi
ja     80507af <fchmod@plt+0x72ef>
movzbl 0x80618c0(%esi),%eax
call   8050080 <fchmod@plt+0x6bc0>
test   %esi,%esi
je     80507f7 <fchmod@plt+0x7337>
movzwl 0x8061694,%edi
lea    -0x1(%esi),%ebp
mov    $0x11,%ecx
sub    %esi,%ecx
mov    %ebp,%eax
mov    $0x1,%esi
sar    %cl,%edi
call   8050080 <fchmod@plt+0x6bc0>
mov    %ebp,%ecx
shl    %cl,%esi
add    %edi,%esi
mov    0x8061688,%eax
lea    -0x1(%ebx),%edx
sub    %esi,%edx
and    $0x1fff,%edx
sub    $0x1,%eax
jmp    8050838 <fchmod@plt+0x7378>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x8096d80(%edx),%ecx
add    $0x1,%ebx
add    $0x1,%edx
and    $0x1fff,%edx
sub    $0x1,%eax
mov    %cl,0x8096d7f(%ebx)
cmp    $0x2000,%ebx
je     80506f8 <fchmod@plt+0x7238>
test   %eax,%eax
mov    %eax,%esi
jns    8050810 <fchmod@plt+0x7350>
jmp    8050636 <fchmod@plt+0x7176>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
jne    8050712 <fchmod@plt+0x7252>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x3,%ecx
mov    $0x5,%edx
mov    $0x13,%eax
xor    %ebp,%ebp
call   80503d0 <fchmod@plt+0x6f10>
movzwl 0x8061694,%edi
mov    $0x9,%eax
call   8050080 <fchmod@plt+0x6bc0>
sar    $0x7,%edi
test   %edi,%edi
je     80509c3 <fchmod@plt+0x7503>
lea    0x0(%esi),%esi
movzwl 0x8061694,%edx
movzbl %dh,%eax
movzwl 0x80616a0(%eax,%eax,1),%esi
cmp    $0x12,%esi
jle    80508da <fchmod@plt+0x741a>
mov    $0x80,%eax
jmp    80508c7 <fchmod@plt+0x7407>
xchg   %ax,%ax
movzwl 0x8072140(%esi,%esi,1),%esi
shr    %eax
cmp    $0x12,%esi
jle    80508da <fchmod@plt+0x741a>
test   %edx,%eax
jne    80508b8 <fchmod@plt+0x73f8>
movzwl 0x8062140(%esi,%esi,1),%esi
shr    %eax
cmp    $0x12,%esi
jg     80508c7 <fchmod@plt+0x7407>
movzbl 0x80618c0(%esi),%eax
call   8050080 <fchmod@plt+0x6bc0>
cmp    $0x2,%esi
jg     80509a0 <fchmod@plt+0x74e0>
test   %esi,%esi
je     8050916 <fchmod@plt+0x7456>
cmp    $0x1,%esi
movzwl 0x8061694,%esi
je     80509ae <fchmod@plt+0x74ee>
mov    $0x9,%eax
call   8050080 <fchmod@plt+0x6bc0>
sar    $0x7,%esi
add    $0x14,%esi
sub    $0x1,%esi
mov    %esi,%edx
mov    %ebp,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
sub    $0x1,%edx
movb   $0x0,0x809215f(%eax)
jns    8050920 <fchmod@plt+0x7460>
test   %esi,%esi
mov    $0x0,%eax
cmovs  %eax,%esi
lea    0x1(%ebp,%esi,1),%ebp
cmp    %ebp,%edi
jg     8050898 <fchmod@plt+0x73d8>
cmp    $0x1fd,%ebp
jg     8050962 <fchmod@plt+0x74a2>
lea    0x0(%esi),%esi
add    $0x1,%ebp
cmp    $0x1fe,%ebp
movb   $0x0,0x809215f(%ebp)
jne    8050950 <fchmod@plt+0x7490>
movl   $0x8082140,(%esp)
mov    $0xc,%ecx
mov    $0x8092160,%edx
mov    $0x1fe,%eax
call   8050150 <fchmod@plt+0x6c90>
mov    $0xe,%eax
mov    $0xffffffff,%ecx
mov    $0x4,%edx
call   80503d0 <fchmod@plt+0x6f10>
mov    0x80618a0,%eax
jmp    805064e <fchmod@plt+0x718e>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2(%esi),%eax
add    $0x1,%ebp
mov    %al,0x809215f(%ebp)
jmp    805093d <fchmod@plt+0x747d>
sar    $0xc,%esi
mov    $0x4,%eax
call   8050080 <fchmod@plt+0x6bc0>
add    $0x3,%esi
jmp    8050913 <fchmod@plt+0x7453>
movzwl 0x8061694,%esi
mov    $0x9,%eax
call   8050080 <fchmod@plt+0x6bc0>
xor    %eax,%eax
sar    $0x7,%esi
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x8092160(%eax)
add    $0x1,%eax
cmp    $0x1fe,%eax
jne    80509e0 <fchmod@plt+0x7520>
mov    %esi,%edx
xor    %ax,%ax
xchg   %ax,%ax
mov    %dx,0x8082140(%eax,%eax,1)
add    $0x1,%eax
cmp    $0x1000,%eax
jne    80509f8 <fchmod@plt+0x7538>
jmp    805097d <fchmod@plt+0x74bd>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    80510ae <fchmod@plt+0x7bee>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    %eax,%edx
and    $0x80,%edx
mov    %edx,0x805e4b4
mov    %eax,%edx
and    $0x60,%edx
mov    %eax,0x805e1ec
je     8050a79 <fchmod@plt+0x75b9>
mov    0x805e5ac,%esi
test   %esi,%esi
je     805107f <fchmod@plt+0x7bbf>
mov    0x805e5a4,%ebx
test   %ebx,%ebx
jne    8050a74 <fchmod@plt+0x75b4>
movl   $0x2,0x805e5a4
00
mov    0x805e1ec,%eax
and    $0x1f,%eax
mov    %eax,%ecx
movl   $0x1,0x44(%esp)
shll   %cl,0x44(%esp)
cmp    $0x10,%eax
mov    %eax,0x805e1ec
jg     8051034 <fchmod@plt+0x7b74>
mov    0x8092144,%eax
mov    $0x8062140,%ebx
mov    $0x100,%edx
mov    0x80a6d98,%esi
mov    %ebx,%edi
shl    $0x3,%eax
cmpl   $0x1,0x805e4b4
mov    %eax,0x20(%esp)
mov    %esi,0x48(%esp)
sbb    %eax,%eax
mov    %eax,0x1c(%esp)
addl   $0x101,0x1c(%esp)
test   $0x2,%bl
jne    805101d <fchmod@plt+0x7b5d>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
and    $0x2,%edx
rep stos %eax,%es:(%edi)
je     8050aeb <fchmod@plt+0x762b>
xor    %eax,%eax
mov    %ax,(%edi)
mov    $0xff,%eax
mov    %al,0x8096d80(%eax)
sub    $0x1,%eax
cmp    $0xffffffff,%eax
jne    8050af0 <fchmod@plt+0x7630>
and    $0x2,%ebx
mov    %esi,%ebp
movl   $0x9,0x2c(%esp)
xor    %esi,%esi
movl   $0x1ff,0x38(%esp)
movl   $0x1ff,0x3c(%esp)
movl   $0xffffffff,0x24(%esp)
movl   $0x0,0x28(%esp)
mov    %ebx,0x4c(%esp)
mov    0x20(%esp),%edx
sar    $0x3,%edx
cmp    %ebp,%edx
ja     8050db0 <fchmod@plt+0x78f0>
sub    %edx,%ebp
test   %ebp,%ebp
jle    8050b5e <fchmod@plt+0x769e>
mov    $0x80a6da0,%eax
lea    0x0(%ebp,%eax,1),%ecx
nop
movzbl (%eax,%edx,1),%ebx
add    $0x1,%eax
mov    %bl,-0x1(%eax)
cmp    %ecx,%eax
jne    8050b50 <fchmod@plt+0x7690>
cmp    $0x3f,%ebp
mov    %ebp,0x80a6d98
jbe    8050dbc <fchmod@plt+0x78fc>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8050e14 <fchmod@plt+0x7954>
xor    %edx,%edx
mov    %ebp,%eax
divl   0x2c(%esp)
mov    %ebp,%eax
sub    %edx,%eax
shl    $0x3,%eax
mov    %eax,0x34(%esp)
mov    0x34(%esp),%eax
test   %eax,%eax
jle    8050e30 <fchmod@plt+0x7970>
mov    0x38(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     8050fb1 <fchmod@plt+0x7af1>
movl   $0x0,0x20(%esp)
mov    %esi,%edi
mov    0x20(%esp),%esi
mov    %esi,%ecx
sar    $0x3,%ecx
movzbl 0x80a6da2(%ecx),%ebp
movzbl 0x80a6da1(%ecx),%eax
shl    $0x10,%ebp
shl    $0x8,%eax
or     %eax,%ebp
movzbl 0x80a6da0(%ecx),%eax
mov    %esi,%ecx
and    $0x7,%ecx
or     %eax,%ebp
mov    0x2c(%esp),%eax
sar    %cl,%ebp
add    %eax,0x20(%esp)
and    0x3c(%esp),%ebp
cmpl   $0xffffffff,0x24(%esp)
mov    %ebp,0x40(%esp)
je     8050d60 <fchmod@plt+0x78a0>
cmp    $0x100,%ebp
je     8050eb0 <fchmod@plt+0x79f0>
cmp    0x1c(%esp),%ebp
jl     8050d50 <fchmod@plt+0x7890>
jg     8050fbd <fchmod@plt+0x7afd>
movzbl 0x28(%esp),%eax
mov    $0x809213e,%ecx
mov    0x24(%esp),%ebx
mov    %al,0x809213d
mov    $0x809213d,%eax
cmp    $0xff,%ebx
jbe    8050c56 <fchmod@plt+0x7796>
xchg   %ax,%ax
movzbl 0x8096d80(%ebx),%edx
sub    $0x1,%eax
mov    %dl,(%eax)
movzwl 0x8062140(%ebx,%ebx,1),%edx
cmp    $0xff,%dx
movzwl %dx,%ebx
ja     8050c38 <fchmod@plt+0x7778>
movzbl 0x8096d80(%ebx),%edx
lea    -0x1(%eax),%esi
sub    %esi,%ecx
movzbl %dl,%ebx
mov    %ebx,0x28(%esp)
lea    (%ecx,%edi,1),%ebx
cmp    $0x3fff,%ebx
mov    %dl,0x33(%esp)
mov    %dl,-0x1(%eax)
jg     8050c8f <fchmod@plt+0x77cf>
jmp    8050e92 <fchmod@plt+0x79d2>
xor    %edi,%edi
add    %ebx,%esi
mov    $0x809213e,%ecx
sub    %esi,%ecx
test   %ecx,%ecx
jle    8050d00 <fchmod@plt+0x7840>
mov    $0x4000,%ebx
sub    %edi,%ebx
cmp    %ebx,%ecx
cmovle %ecx,%ebx
test   %ebx,%ebx
jle    8050cb7 <fchmod@plt+0x77f7>
lea    0x8092160(%edi),%eax
add    %ebx,%edi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049050 <memcpy@plt>
cmp    $0x3fff,%edi
jle    8050c82 <fchmod@plt+0x77c2>
mov    0x805e5a8,%ecx
test   %ecx,%ecx
jne    8050c80 <fchmod@plt+0x77c0>
mov    0x74(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x8092160,0x4(%esp)
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
mov    %edi,%eax
mov    $0x809213e,%ecx
cltd
add    %edi,0x80a6d80
adc    %edx,0x80a6d84
add    %ebx,%esi
sub    %esi,%ecx
xor    %edi,%edi
test   %ecx,%ecx
jg     8050c8f <fchmod@plt+0x77cf>
nop
mov    0x1c(%esp),%eax
cmp    %eax,0x44(%esp)
jle    8050d29 <fchmod@plt+0x7869>
movzwl 0x24(%esp),%esi
addl   $0x1,0x1c(%esp)
mov    %si,0x8062140(%eax,%eax,1)
mov    %eax,%esi
movzbl 0x33(%esp),%eax
mov    %al,0x8096d80(%esi)
mov    0x20(%esp),%eax
cmp    %eax,0x34(%esp)
jle    8050d85 <fchmod@plt+0x78c5>
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jl     8050f30 <fchmod@plt+0x7a70>
mov    %ebp,0x24(%esp)
jmp    8050bb0 <fchmod@plt+0x76f0>
lea    0x0(%esi),%esi
mov    $0x809213e,%ecx
mov    %ebp,%ebx
mov    %ecx,%eax
jmp    8050c2e <fchmod@plt+0x776e>
xchg   %ax,%ax
cmp    $0xff,%ebp
jg     8051011 <fchmod@plt+0x7b51>
mov    %ebp,%eax
add    $0x1,%edi
mov    %al,0x809215f(%edi)
mov    0x20(%esp),%eax
cmp    %eax,0x34(%esp)
mov    %ebp,0x28(%esp)
jg     8050d33 <fchmod@plt+0x7873>
mov    0x48(%esp),%edx
mov    %edi,%esi
test   %edx,%edx
je     8050e4c <fchmod@plt+0x798c>
mov    0x20(%esp),%edx
mov    0x80a6d98,%ebp
mov    0x40(%esp),%eax
sar    $0x3,%edx
cmp    %ebp,%edx
mov    %eax,0x24(%esp)
jbe    8050b40 <fchmod@plt+0x7680>
movl   $0x0,0x80a6d98
00
xor    %ebp,%ebp
mov    0x70(%esp),%eax
add    $0x80a6da0,%ebp
movl   $0x8000,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8051bc0 <fchmod@plt+0x8700>
cmp    $0xffffffff,%eax
mov    %eax,0x48(%esp)
je     8050fb8 <fchmod@plt+0x7af8>
mov    0x48(%esp),%edi
mov    0x80a6d98,%ebp
mov    %edi,%eax
cltd
mov    0x48(%esp),%eax
add    %edi,%ebp
add    %edi,0x8062120
adc    %edx,0x8062124
test   %eax,%eax
mov    %ebp,0x80a6d98
jne    8050b79 <fchmod@plt+0x76b9>
mov    $0x1,%eax
sub    0x2c(%esp),%eax
lea    (%eax,%ebp,8),%eax
mov    %eax,0x34(%esp)
mov    0x34(%esp),%eax
test   %eax,%eax
jg     8050b98 <fchmod@plt+0x76d8>
mov    0x48(%esp),%edx
mov    0x24(%esp),%eax
movl   $0x0,0x20(%esp)
test   %edx,%edx
mov    %eax,0x40(%esp)
jne    8050d93 <fchmod@plt+0x78d3>
mov    0x805e5a8,%eax
xor    %edi,%edi
test   %eax,%eax
jne    8050e88 <fchmod@plt+0x79c8>
test   %esi,%esi
mov    0x48(%esp),%edi
jle    8050e88 <fchmod@plt+0x79c8>
mov    0x74(%esp),%eax
mov    %esi,%ebx
mov    %esi,0x8(%esp)
sar    $0x1f,%ebx
movl   $0x8092160,0x4(%esp)
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
add    %esi,0x80a6d80
adc    %ebx,0x80a6d84
add    $0x5c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x8092160(%edi),%edx
mov    %ebx,%edi
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   8049050 <memcpy@plt>
jmp    8050d00 <fchmod@plt+0x7840>
nop
mov    0x805e4b4,%eax
test   %eax,%eax
je     8050c06 <fchmod@plt+0x7746>
mov    0x4c(%esp),%eax
mov    %edi,%esi
mov    $0x100,%edx
mov    $0x8062140,%edi
test   %eax,%eax
jne    8050f9b <fchmod@plt+0x7adb>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
and    $0x2,%edx
rep stos %eax,%es:(%edi)
je     8050ee8 <fchmod@plt+0x7a28>
xor    %ebp,%ebp
mov    %bp,(%edi)
mov    0x20(%esp),%ebx
mov    0x2c(%esp),%ecx
mov    0x80a6d98,%ebp
movl   $0x9,0x2c(%esp)
sub    $0x1,%ebx
shl    $0x3,%ecx
lea    (%ebx,%ecx,1),%eax
cltd
idiv   %ecx
movl   $0x1ff,0x38(%esp)
movl   $0x100,0x1c(%esp)
movl   $0x1ff,0x3c(%esp)
sub    %edx,%ecx
lea    (%ebx,%ecx,1),%eax
mov    %eax,0x20(%esp)
jmp    8050b31 <fchmod@plt+0x7671>
mov    0x20(%esp),%ebx
mov    %ebp,%eax
mov    %edi,%esi
mov    0x80a6d98,%ebp
mov    %eax,0x24(%esp)
sub    $0x1,%ebx
mov    0x2c(%esp),%eax
addl   $0x1,0x2c(%esp)
lea    0x0(,%eax,8),%ecx
lea    (%ecx,%ebx,1),%eax
cltd
idiv   %ecx
sub    %edx,%ecx
lea    (%ecx,%ebx,1),%eax
movzbl 0x2c(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
cmp    0x805e1ec,%eax
mov    $0x1,%eax
je     8050f8c <fchmod@plt+0x7acc>
shl    %cl,%eax
sub    $0x1,%eax
mov    %eax,0x38(%esp)
mov    %eax,0x3c(%esp)
jmp    8050b31 <fchmod@plt+0x7671>
mov    0x44(%esp),%edi
shl    %cl,%eax
sub    $0x1,%eax
mov    %edi,0x38(%esp)
jmp    8050f83 <fchmod@plt+0x7ac3>
xor    %eax,%eax
mov    $0x8062142,%edi
mov    %ax,0x8062140
mov    $0xfe,%dx
jmp    8050ed5 <fchmod@plt+0x7a15>
mov    $0xffffffff,%ebx
jmp    8050f45 <fchmod@plt+0x7a85>
call   8051fc0 <fchmod@plt+0x8b00>
mov    %edi,%esi
mov    0x805e5a8,%edi
test   %edi,%edi
jne    8050ff4 <fchmod@plt+0x7b34>
test   %esi,%esi
jle    8050ff4 <fchmod@plt+0x7b34>
mov    0x74(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x8092160,0x4(%esp)
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
mov    %esi,%eax
cltd
add    %esi,0x80a6d80
adc    %edx,0x80a6d84
mov    0x805e5b4,%ebx
mov    $0x80599f6,%eax
mov    $0x8059a08,%edx
test   %ebx,%ebx
cmove  %edx,%eax
mov    %eax,(%esp)
call   8051d40 <fchmod@plt+0x8880>
movl   $0x80599f6,(%esp)
call   8051d40 <fchmod@plt+0x8880>
xor    %ecx,%ecx
mov    $0x8062142,%edi
mov    %cx,0x8062140
mov    $0xfe,%dx
jmp    8050ad8 <fchmod@plt+0x7618>
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
mov    $0x1,%edi
movl   $0x10,0x14(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x8059a60,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    %edi,%eax
movl   $0x1,0x805e5a4
00
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80a6d88,%eax
mov    %edx,0x10(%esp)
movl   $0x8061d20,0xc(%esp)
movl   $0x8059a38,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    8050a60 <fchmod@plt+0x75a0>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    8050a38 <fchmod@plt+0x7578>
nop
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jae    80510e0 <fchmod@plt+0x7c20>
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
ret
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
test   %eax,%eax
js     80510f7 <fchmod@plt+0x7c37>
add    $0x1c,%esp
ret
movl   $0x8059a9c,(%esp)
call   8051d40 <fchmod@plt+0x8880>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    $0x4,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
movl   $0x0,0x8061b84
00
mov    %eax,0x8096960
mov    0x34(%esp),%eax
mov    %eax,0x8092140
call   80510c0 <fchmod@plt+0x7c00>
shl    $0x8,%esi
movzbl %al,%eax
or     %esi,%eax
sub    $0x1,%ebx
mov    %eax,0x8061b84
je     8051155 <fchmod@plt+0x7c95>
mov    %eax,%esi
jmp    805113a <fchmod@plt+0x7c7a>
call   80510c0 <fchmod@plt+0x7c00>
movzbl %al,%eax
lea    -0x1(%eax),%edx
cmp    $0x18,%edx
mov    %eax,0x8061b80
ja     805144c <fchmod@plt+0x7f8c>
xor    %esi,%esi
test   %eax,%eax
mov    $0x1,%edi
mov    $0x1,%ebx
je     8051498 <fchmod@plt+0x7fd8>
call   80510c0 <fchmod@plt+0x7c00>
xor    %ecx,%ecx
mov    %edi,%ebp
movzbl %al,%edx
mov    0x8061b80,%eax
mov    %edx,0x8061980(,%ebx,4)
cmp    %eax,%ebx
sete   %cl
sub    %ecx,%ebp
cmp    %ebp,%edx
jg     805148c <fchmod@plt+0x7fcc>
add    $0x1,%ebx
sub    %edx,%edi
add    %edx,%esi
cmp    %ebx,%eax
lea    0x1(%edi,%edi,1),%edi
jge    8051182 <fchmod@plt+0x7cc2>
cmp    $0xff,%esi
jg     805148c <fchmod@plt+0x7fcc>
addl   $0x1,0x8061980(,%eax,4)
test   %eax,%eax
jle    8051470 <fchmod@plt+0x7fb0>
mov    $0x1,%esi
movl   $0x0,0x8(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x8061980(,%esi,4),%edi
mov    0x8(%esp),%ecx
test   %edi,%edi
mov    %ecx,0x8061a00(,%esi,4)
jle    8051226 <fchmod@plt+0x7d66>
lea    0x8061a80(%ecx),%ebp
lea    0x0(%ebp,%edi,1),%ebx
call   80510c0 <fchmod@plt+0x7c00>
add    $0x1,%ebp
mov    %al,-0x1(%ebp)
cmp    %ebx,%ebp
jne    8051208 <fchmod@plt+0x7d48>
mov    0x8(%esp),%eax
add    %edi,%eax
mov    %eax,0x8(%esp)
mov    0x8061b80,%eax
add    $0x1,%esi
mov    %eax,%edx
cmp    %eax,%esi
jle    80511e8 <fchmod@plt+0x7d28>
mov    0x8061980(,%eax,4),%eax
test   %edx,%edx
lea    0x1(%eax),%ebx
mov    %eax,0xc(%esp)
mov    %ebx,0x8061980(,%edx,4)
jle    805126e <fchmod@plt+0x7dae>
mov    %edx,%eax
xor    %ecx,%ecx
jmp    8051257 <fchmod@plt+0x7d97>
xchg   %ax,%ax
mov    0x8061980(,%eax,4),%ebx
sar    %ecx
mov    %ecx,0x8061900(,%eax,4)
sub    %ecx,0x8061a00(,%eax,4)
add    %ebx,%ecx
sub    $0x1,%eax
jne    8051250 <fchmod@plt+0x7d90>
cmp    $0xc,%edx
mov    $0xc,%ebp
cmovle %edx,%ebp
movl   $0x1,0x8(%esp)
mov    %ebp,%ecx
shll   %cl,0x8(%esp)
test   %ebp,%ebp
mov    0x8(%esp),%eax
mov    %ebp,0x80618e8
lea    0x8092160(%eax),%esi
jle    80512dc <fchmod@plt+0x7e1c>
lea    0x1(%ebp),%edi
mov    $0x1,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8061980(,%edx,4),%ebx
mov    %ebp,%ecx
sub    %edx,%ecx
shl    %cl,%ebx
test   %ebx,%ebx
lea    -0x1(%ebx),%eax
je     80512d5 <fchmod@plt+0x7e15>
sub    %ebx,%esi
mov    %edx,%ecx
mov    %esi,%ebx
lea    0x0(%esi),%esi
mov    %cl,(%ebx,%eax,1)
sub    $0x1,%eax
mov    %ebx,%esi
cmp    $0xffffffff,%eax
jne    80512c8 <fchmod@plt+0x7e08>
add    $0x1,%edx
cmp    %edi,%edx
jne    80512a8 <fchmod@plt+0x7de8>
cmp    $0x8092160,%esi
jbe    80512f2 <fchmod@plt+0x7e32>
sub    $0x1,%esi
cmp    $0x8092160,%esi
movb   $0x0,(%esi)
jne    80512e4 <fchmod@plt+0x7e24>
mov    0x8(%esp),%eax
xor    %ebx,%ebx
xor    %edx,%edx
movl   $0x0,0x80618e0
00
movl   $0x0,0x80618e4
00
sub    $0x1,%eax
mov    %eax,0x8(%esp)
jmp    8051392 <fchmod@plt+0x7ed2>
mov    %edx,%ecx
mov    %ebx,%eax
sub    %ebp,%ecx
shr    %cl,%eax
and    0x8(%esp),%eax
movzbl 0x8092160(%eax),%esi
test   %esi,%esi
je     80513bb <fchmod@plt+0x7efb>
mov    %ebp,%ecx
sub    %esi,%ecx
shr    %cl,%eax
cmp    0xc(%esp),%eax
je     8051430 <fchmod@plt+0x7f70>
ja     8051464 <fchmod@plt+0x7fa4>
add    $0x8061a80,%eax
mov    0x80a6d94,%ecx
add    0x8061a00(,%esi,4),%eax
movzbl (%eax),%eax
lea    0x1(%ecx),%edx
cmp    $0x8000,%edx
mov    %edx,0x80a6d94
mov    %al,0x8096d80(%ecx)
je     8051426 <fchmod@plt+0x7f66>
mov    0x80618e0,%edx
mov    0x80618e4,%ebx
sub    %esi,%edx
mov    %edx,0x80618e0
mov    0x80618e8,%ebp
cmp    %ebp,%edx
jge    8051317 <fchmod@plt+0x7e57>
call   80510c0 <fchmod@plt+0x7c00>
mov    0x80618e0,%edi
shl    $0x8,%ebx
lea    0x8(%edi),%edx
mov    %edx,0x80618e0
movzbl %al,%eax
or     %ebx,%eax
mov    %eax,0x80618e4
mov    %eax,%ebx
jmp    805138c <fchmod@plt+0x7ecc>
cmp    0x8061900(,%ebp,4),%eax
mov    %ebp,%esi
mov    0x8(%esp),%edi
jae    8051338 <fchmod@plt+0x7e78>
xchg   %ax,%ax
add    $0x1,%esi
cmp    %edx,%esi
lea    0x1(%edi,%edi,1),%edi
jle    8051407 <fchmod@plt+0x7f47>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80510c0 <fchmod@plt+0x7c00>
mov    0x80618e0,%ecx
shl    $0x8,%ebx
lea    0x8(%ecx),%edx
mov    %edx,0x80618e0
movzbl %al,%eax
or     %ebx,%eax
cmp    %edx,%esi
mov    %eax,0x80618e4
mov    %eax,%ebx
jg     80513e0 <fchmod@plt+0x7f20>
mov    %edx,%ecx
mov    %ebx,%eax
sub    %esi,%ecx
shr    %cl,%eax
and    %edi,%eax
cmp    %eax,0x8061900(,%esi,4)
jbe    8051338 <fchmod@plt+0x7e78>
mov    0x80618e0,%edx
jmp    80513d0 <fchmod@plt+0x7f10>
call   80521e0 <fchmod@plt+0x8d20>
jmp    8051378 <fchmod@plt+0x7eb8>
call   80521e0 <fchmod@plt+0x8d20>
mov    0x8061b84,%eax
cmp    %eax,0x80a6d80
jne    8051458 <fchmod@plt+0x7f98>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x8059ad0,(%esp)
call   8051d40 <fchmod@plt+0x8880>
movl   $0x8059b5c,(%esp)
call   8051d40 <fchmod@plt+0x8880>
movl   $0x8059b30,(%esp)
call   8051d40 <fchmod@plt+0x8880>
mov    %eax,%edx
mov    0x8061980(,%edx,4),%eax
mov    %eax,0xc(%esp)
add    $0x1,%eax
mov    %eax,0x8061980(,%edx,4)
jmp    805126e <fchmod@plt+0x7dae>
movl   $0x8059b10,(%esp)
call   8051d40 <fchmod@plt+0x8880>
addl   $0x1,0x8061980
xor    %edx,%edx
jmp    8051472 <fchmod@plt+0x7fb2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8092144,%ebx
mov    0x20(%esp),%eax
lea    0x80a6da0(%ebx),%edx
movzbl 0x1b(%edx),%ecx
mov    %eax,0x8096960
movzbl 0x1a(%edx),%eax
movzbl 0x1c(%edx),%esi
shl    $0x8,%ecx
or     %eax,%ecx
movzbl 0x1d(%edx),%eax
shl    $0x8,%eax
or     %esi,%eax
lea    0x1e(%ecx,%eax,1),%eax
add    %ebx,%eax
cmp    0x80a6d98,%eax
mov    %eax,0x8092144
ja     8051520 <fchmod@plt+0x8060>
movzbl 0x3(%edx),%eax
movzbl 0x2(%edx),%ecx
movzbl 0x80a6da0(%ebx),%ebx
shl    $0x8,%eax
or     %ecx,%eax
movzbl 0x1(%edx),%ecx
shl    $0x10,%eax
shl    $0x8,%ecx
or     %ebx,%ecx
or     %ecx,%eax
cmp    $0x4034b50,%eax
je     8051560 <fchmod@plt+0x80a0>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059b84,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    $0x1,%eax
movl   $0x1,0x805e5a4
00
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x8(%edx),%eax
movzbl %al,%ecx
test   $0xf7,%al
mov    %ecx,0x805e1e8
jne    80515a8 <fchmod@plt+0x80e8>
movzbl 0x6(%edx),%edx
mov    %edx,%eax
and    $0x1,%eax
test   %eax,%eax
mov    %eax,0x8061b90
jne    80515c8 <fchmod@plt+0x8108>
shr    $0x3,%dl
xor    %eax,%eax
and    $0x1,%edx
mov    %edx,0x8061b88
movl   $0x1,0x8061b8c
00
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059ba4,0x4(%esp)
mov    %eax,0x8(%esp)
jmp    8051539 <fchmod@plt+0x8079>
xchg   %ax,%ax
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059be0,0x4(%esp)
mov    %eax,0x8(%esp)
jmp    8051539 <fchmod@plt+0x8079>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x40(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8096960
mov    0x44(%esp),%eax
mov    %eax,0x8092140
call   8051b10 <fchmod@plt+0x8650>
mov    0x8061b8c,%eax
test   %eax,%eax
jne    8051650 <fchmod@plt+0x8190>
cmpl   $0x8,0x805e1e8
je     8051a48 <fchmod@plt+0x8588>
movl   $0x8059c60,(%esp)
call   8051d40 <fchmod@plt+0x8880>
lea    0x0(%esi),%esi
mov    0x8061b88,%eax
test   %eax,%eax
je     8051740 <fchmod@plt+0x8280>
xor    %edi,%edi
xor    %esi,%esi
mov    0x805e1e8,%eax
cmp    $0x8,%eax
je     8051a4c <fchmod@plt+0x858c>
test   %eax,%eax
jne    805163e <fchmod@plt+0x817e>
movzbl 0x80a6db9,%eax
movzbl 0x80a6db8,%edx
movzbl 0x80a6db6,%ecx
movzbl 0x80a6db2,%ebx
shl    $0x8,%eax
or     %edx,%eax
movzbl 0x80a6db7,%edx
shl    $0x10,%eax
shl    $0x8,%edx
or     %ecx,%edx
movzbl 0x80a6db4,%ecx
or     %edx,%eax
movzbl 0x80a6db5,%edx
shl    $0x8,%edx
or     %ecx,%edx
movzbl 0x80a6db3,%ecx
shl    $0x10,%edx
shl    $0x8,%ecx
or     %ebx,%ecx
or     %ecx,%edx
cmpl   $0x1,0x8061b90
mov    %edx,%ebx
sbb    %ecx,%ecx
not    %ecx
and    $0xc,%ecx
sub    %ecx,%ebx
cmp    %eax,%ebx
je     805171c <fchmod@plt+0x825c>
jmp    8051adc <fchmod@plt+0x861c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
mov    %edx,0x8092144
mov    0x80a6d94,%ecx
lea    0x1(%ecx),%edx
cmp    $0x8000,%edx
mov    %edx,0x80a6d94
mov    %al,0x8096d80(%ecx)
je     80517a0 <fchmod@plt+0x82e0>
sub    $0x1,%ebx
test   %ebx,%ebx
je     80517b0 <fchmod@plt+0x82f0>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     80516e8 <fchmod@plt+0x8228>
movl   $0x0,(%esp)
call   8052250 <fchmod@plt+0x8d90>
jmp    80516f8 <fchmod@plt+0x8238>
nop
movzbl 0x80a6db1,%esi
movzbl 0x80a6db0,%eax
movzbl 0x80a6dae,%edx
movzbl 0x80a6db9,%edi
shl    $0x8,%esi
or     %eax,%esi
movzbl 0x80a6daf,%eax
shl    $0x10,%esi
shl    $0x8,%edi
shl    $0x8,%eax
or     %edx,%eax
movzbl 0x80a6db6,%edx
or     %eax,%esi
movzbl 0x80a6db8,%eax
or     %eax,%edi
movzbl 0x80a6db7,%eax
shl    $0x10,%edi
shl    $0x8,%eax
or     %edx,%eax
or     %eax,%edi
jmp    8051661 <fchmod@plt+0x81a1>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80521e0 <fchmod@plt+0x8d20>
jmp    8051719 <fchmod@plt+0x8259>
lea    0x0(%esi),%esi
call   80521e0 <fchmod@plt+0x8d20>
mov    0x8061b8c,%eax
test   %eax,%eax
jne    8051970 <fchmod@plt+0x84b0>
lea    0x1c(%esp),%ebx
lea    0x24(%esp),%esi
jmp    80517ea <fchmod@plt+0x832a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
add    $0x1,%ebx
mov    %edx,0x8092144
mov    %al,-0x1(%ebx)
cmp    %esi,%ebx
je     805180d <fchmod@plt+0x834d>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     80517d0 <fchmod@plt+0x8310>
movl   $0x0,(%esp)
add    $0x1,%ebx
call   8052250 <fchmod@plt+0x8d90>
mov    %al,-0x1(%ebx)
cmp    %esi,%ebx
jne    80517ea <fchmod@plt+0x832a>
movzbl 0x1f(%esp),%esi
movzbl 0x1e(%esp),%eax
movzbl 0x1c(%esp),%edx
movzbl 0x23(%esp),%edi
shl    $0x8,%esi
or     %eax,%esi
movzbl 0x1d(%esp),%eax
shl    $0x10,%esi
shl    $0x8,%edi
shl    $0x8,%eax
or     %edx,%eax
movzbl 0x20(%esp),%edx
or     %eax,%esi
movzbl 0x22(%esp),%eax
or     %eax,%edi
movzbl 0x21(%esp),%eax
shl    $0x10,%edi
shl    $0x8,%eax
or     %edx,%eax
or     %eax,%edi
movl   $0x0,0x4(%esp)
xor    %ebx,%ebx
movl   $0x8092160,(%esp)
call   8051b10 <fchmod@plt+0x8650>
cmp    %esi,%eax
je     8051895 <fchmod@plt+0x83d5>
mov    0x80a6d88,%eax
mov    $0x1,%bl
movl   $0x8061d20,0xc(%esp)
movl   $0x8059c80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
cmp    %edi,0x80a6d80
je     80518c8 <fchmod@plt+0x8408>
mov    0x80a6d88,%eax
mov    $0x1,%ebx
movl   $0x8061d20,0xc(%esp)
movl   $0x8059cb0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x8061b8c,%edi
test   %edi,%edi
je     8051920 <fchmod@plt+0x8460>
mov    0x8092144,%edx
lea    0x4(%edx),%eax
cmp    0x80a6d98,%eax
jae    8051920 <fchmod@plt+0x8460>
movzbl 0x80a6da3(%edx),%eax
movzbl 0x80a6da2(%edx),%ecx
shl    $0x8,%eax
or     %ecx,%eax
movzbl 0x80a6da1(%edx),%ecx
movzbl 0x80a6da0(%edx),%edx
shl    $0x10,%eax
shl    $0x8,%ecx
or     %edx,%ecx
or     %ecx,%eax
cmp    $0x4034b50,%eax
je     8051a17 <fchmod@plt+0x8557>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
movl   $0x0,0x8061b8c
00
movl   $0x0,0x8061b88
00
je     8051a10 <fchmod@plt+0x8550>
mov    0x805e5a8,%eax
movl   $0x1,0x805e5a4
00
test   %eax,%eax
je     8051b05 <fchmod@plt+0x8645>
mov    $0x1,%eax
mov    0x2c(%esp),%edi
xor    %gs:0x14,%edi
jne    8051ad7 <fchmod@plt+0x8617>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x8061b88,%eax
test   %eax,%eax
je     8051853 <fchmod@plt+0x8393>
lea    0x1c(%esp),%ebx
lea    0x2c(%esp),%esi
jmp    80519a2 <fchmod@plt+0x84e2>
nop
lea    0x1(%eax),%edx
movzbl 0x80a6da0(%eax),%eax
add    $0x1,%ebx
mov    %edx,0x8092144
mov    %al,-0x1(%ebx)
cmp    %esi,%ebx
je     80519c5 <fchmod@plt+0x8505>
mov    0x8092144,%eax
cmp    0x80a6d98,%eax
jb     8051988 <fchmod@plt+0x84c8>
movl   $0x0,(%esp)
add    $0x1,%ebx
call   8052250 <fchmod@plt+0x8d90>
mov    %al,-0x1(%ebx)
cmp    %esi,%ebx
jne    80519a2 <fchmod@plt+0x84e2>
movzbl 0x23(%esp),%esi
movzbl 0x22(%esp),%eax
movzbl 0x20(%esp),%edx
movzbl 0x2b(%esp),%edi
shl    $0x8,%esi
or     %eax,%esi
movzbl 0x21(%esp),%eax
shl    $0x10,%esi
shl    $0x8,%edi
shl    $0x8,%eax
or     %edx,%eax
movzbl 0x28(%esp),%edx
or     %eax,%esi
movzbl 0x2a(%esp),%eax
or     %eax,%edi
movzbl 0x29(%esp),%eax
shl    $0x10,%edi
shl    $0x8,%eax
or     %edx,%eax
or     %eax,%edi
jmp    8051853 <fchmod@plt+0x8393>
xor    %eax,%eax
jmp    8051958 <fchmod@plt+0x8498>
mov    0x805e5b4,%esi
test   %esi,%esi
je     8051a98 <fchmod@plt+0x85d8>
mov    0x805e5ac,%ecx
test   %ecx,%ecx
je     8051a70 <fchmod@plt+0x85b0>
mov    0x805e5a4,%edx
test   %edx,%edx
jne    8051920 <fchmod@plt+0x8460>
movl   $0x2,0x805e5a4
00
jmp    8051920 <fchmod@plt+0x8460>
xor    %edi,%edi
xor    %esi,%esi
call   804ea20 <fchmod@plt+0x5560>
cmp    $0x3,%eax
je     8051b0a <fchmod@plt+0x864a>
test   %eax,%eax
je     80517b5 <fchmod@plt+0x82f5>
movl   $0x8059c08,(%esp)
call   8051d40 <fchmod@plt+0x8880>
xchg   %ax,%ax
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059ce0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    8051a2b <fchmod@plt+0x856b>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059d10,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
movl   $0x0,0x8061b8c
00
movl   $0x0,0x8061b88
00
jmp    805193c <fchmod@plt+0x847c>
call   80490e0 <__stack_chk_fail@plt>
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %edx,0xc(%esp)
movl   $0x8059d3d,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
movl   $0x8059c34,(%esp)
call   8051d40 <fchmod@plt+0x8880>
call   804d700 <fchmod@plt+0x4240>
call   8051f30 <fchmod@plt+0x8a70>
nop
push   %ebx
mov    0x8(%esp),%eax
mov    0xc(%esp),%ecx
test   %eax,%eax
je     8051b58 <fchmod@plt+0x8698>
test   %ecx,%ecx
mov    0x805e4b8,%edx
lea    (%eax,%ecx,1),%ebx
je     8051b49 <fchmod@plt+0x8689>
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    %edx,%ecx
xor    -0x1(%eax),%cl
shr    $0x8,%edx
movzbl %cl,%ecx
xor    0x8059dc0(,%ecx,4),%edx
cmp    %ebx,%eax
jne    8051b30 <fchmod@plt+0x8670>
mov    %edx,%eax
not    %eax
mov    %edx,0x805e4b8
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0xffffffff,%edx
xor    %eax,%eax
mov    %edx,0x805e4b8
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x0,0x80a6d94
00
movl   $0x0,0x8092144
00
movl   $0x0,0x80a6d98
00
movl   $0x0,0x80a6d80
00
movl   $0x0,0x80a6d84
00
movl   $0x0,0x8062120
00
movl   $0x0,0x8062124
00
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x7fffffff,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
test   %ebx,%ebx
cmovs  %eax,%ebx
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048fe0 <read@plt>
test   %eax,%eax
mov    %eax,%esi
js     8051c00 <fchmod@plt+0x8740>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049320 <__errno_location@plt>
cmpl   $0xb,(%eax)
jne    8051bf3 <fchmod@plt+0x8733>
movl   $0x3,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8054ed0 <fchmod@plt+0xba10>
test   %eax,%eax
js     8051bf3 <fchmod@plt+0x8733>
test   $0x8,%ah
jne    8051c38 <fchmod@plt+0x8778>
mov    0xc(%esp),%edx
movl   $0xb,(%edx)
jmp    8051bf3 <fchmod@plt+0x8733>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0xf7,%ah
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
call   8054ed0 <fchmod@plt+0xba10>
cmp    $0xffffffff,%eax
je     8051bf3 <fchmod@plt+0x8733>
mov    %ebx,0x38(%esp)
mov    %ebp,0x34(%esp)
mov    %edi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048fe0 <read@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x20(%esp),%eax
movzbl (%eax),%ebx
test   %bl,%bl
je     8051cb4 <fchmod@plt+0x87f4>
call   8049490 <__ctype_b_loc@plt>
mov    0x20(%esp),%esi
mov    %eax,%ebp
lea    0x0(%esi),%esi
mov    0x0(%ebp),%eax
movzbl %bl,%edi
testb  $0x1,0x1(%eax,%edi,2)
je     8051ca8 <fchmod@plt+0x87e8>
call   8049470 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
movzbl (%eax,%edi,4),%ebx
mov    %bl,(%esi)
add    $0x1,%esi
movzbl (%esi),%ebx
test   %bl,%bl
jne    8051c90 <fchmod@plt+0x87d0>
mov    0x20(%esp),%eax
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049380 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmovne %edx,%ebx
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8049100 <unlink@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x2e,0x4(%esp)
mov    %ebx,(%esp)
call   8049380 <strrchr@plt>
test   %eax,%eax
je     8051d3b <fchmod@plt+0x887b>
xor    %edx,%edx
cmp    %ebx,%eax
sete   %dl
add    %edx,%eax
jmp    8051d2c <fchmod@plt+0x886c>
nop
cmp    %ebx,%eax
je     8051d3b <fchmod@plt+0x887b>
sub    $0x1,%eax
cmpb   $0x2e,(%eax)
jne    8051d28 <fchmod@plt+0x8868>
cmp    %ebx,%eax
movb   $0x5f,(%eax)
jne    8051d2c <fchmod@plt+0x886c>
add    $0x18,%esp
pop    %ebx
ret
sub    $0x2c,%esp
mov    0x30(%esp),%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059d4f,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
call   804d700 <fchmod@plt+0x4240>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    (%esi),%eax
mov    %eax,0x10(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <getenv@plt>
test   %eax,%eax
je     8051f16 <fchmod@plt+0x8a56>
mov    %eax,(%esp)
xor    %edi,%edi
call   8054e50 <fchmod@plt+0xb990>
mov    %eax,%ebx
cmpb   $0x0,(%ebx)
mov    %eax,0x14(%esp)
jne    8051dc3 <fchmod@plt+0x8903>
jmp    8051f00 <fchmod@plt+0x8a40>
nop
add    $0x1,%eax
movzbl (%eax),%ecx
mov    %eax,%ebx
movsbl %cl,%edx
cmp    $0x20,%edx
je     8051dc0 <fchmod@plt+0x8900>
cmp    $0x9,%edx
je     8051dc0 <fchmod@plt+0x8900>
test   %cl,%cl
je     8051ef8 <fchmod@plt+0x8a38>
cmp    $0x20,%edx
je     8051ee0 <fchmod@plt+0x8a20>
cmp    $0x9,%edx
je     8051ee0 <fchmod@plt+0x8a20>
add    $0x1,%eax
jmp    8051e0d <fchmod@plt+0x894d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%edx
je     8051ee0 <fchmod@plt+0x8a20>
add    $0x1,%eax
cmp    $0x9,%edx
je     8051ee0 <fchmod@plt+0x8a20>
movsbl (%eax),%edx
mov    %eax,%ebx
test   %dl,%dl
jne    8051df8 <fchmod@plt+0x8938>
add    $0x1,%edi
mov    (%esi),%eax
add    %edi,%eax
mov    %eax,(%esi)
add    $0x1,%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   8054df0 <fchmod@plt+0xb930>
mov    0x10(%esp),%edx
mov    0x44(%esp),%esi
test   %edx,%edx
mov    (%esi),%ebp
mov    %eax,(%esi)
js     8051f1a <fchmod@plt+0x8a5a>
mov    %eax,%ebx
add    $0x4,%eax
mov    0x14(%esp),%ecx
mov    %eax,0x18(%esp)
mov    0x0(%ebp),%eax
xor    %esi,%esi
mov    %ebp,0x1c(%esp)
mov    %ebx,%ebp
mov    %eax,(%ebx)
mov    %ecx,%eax
jmp    8051e6b <fchmod@plt+0x89ab>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
mov    %eax,%ecx
movsbl %dl,%ebx
cmp    $0x20,%ebx
je     8051e68 <fchmod@plt+0x89a8>
cmp    $0x9,%ebx
je     8051e68 <fchmod@plt+0x89a8>
mov    %eax,0x4(%ebp,%esi,4)
jmp    8051e8b <fchmod@plt+0x89cb>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%edx
add    $0x1,%ecx
test   %dl,%dl
jne    8051e88 <fchmod@plt+0x89c8>
add    $0x1,%esi
cmp    %edi,%esi
jne    8051e60 <fchmod@plt+0x89a0>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ebp
lea    (%eax,%esi,4),%ecx
mov    0x10(%esp),%eax
cmp    $0x1,%eax
je     8051ece <fchmod@plt+0x8a0e>
lea    -0x1(%eax),%ebx
xor    %eax,%eax
lea    0x0(%esi),%esi
mov    0x4(%ebp,%eax,4),%edx
mov    %edx,(%ecx,%eax,4)
add    $0x1,%eax
cmp    %ebx,%eax
jne    8051eb8 <fchmod@plt+0x89f8>
mov    0x10(%esp),%eax
lea    -0x4(%ecx,%eax,4),%ecx
mov    0x14(%esp),%eax
movl   $0x0,(%ecx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%edi
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%eax
movb   $0x0,(%ebx)
jne    8051dc3 <fchmod@plt+0x8903>
jmp    8051e19 <fchmod@plt+0x8959>
test   %edi,%edi
jne    8051e19 <fchmod@plt+0x8959>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049040 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    8051ed8 <fchmod@plt+0x8a18>
movl   $0x8059d5c,(%esp)
call   8051d40 <fchmod@plt+0x8880>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80a6d88,%eax
movl   $0x8059d64,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
call   804d700 <fchmod@plt+0x4240>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x805e5ac,%edx
test   %edx,%edx
je     8051f88 <fchmod@plt+0x8ac8>
mov    0x805e5a4,%eax
test   %eax,%eax
jne    8051f80 <fchmod@plt+0x8ac0>
movl   $0x2,0x805e5a4
00
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x8059d7b,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x80a6d88,%eax
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    8051f6d <fchmod@plt+0x8aad>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   8049320 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    0x80a6d88,%eax
movl   $0x8059d90,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
test   %esi,%esi
je     8052003 <fchmod@plt+0x8b43>
mov    %esi,(%ebx)
movl   $0x8061d20,(%esp)
call   8049140 <perror@plt>
call   804d700 <fchmod@plt+0x4240>
mov    0x805e520,%eax
movl   $0x8061d20,0x8(%esp)
movl   $0x8059d96,0x4(%esp)
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
jmp    8051ffe <fchmod@plt+0x8b3e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   8049320 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    0x80a6d88,%eax
movl   $0x8059d90,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    %esi,(%ebx)
movl   $0x8096980,(%esp)
call   8049140 <perror@plt>
call   804d700 <fchmod@plt+0x4240>
nop
push   %ebp
push   %edi
push   %esi
mov    $0x7fffffff,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%ebx
jmp    8052099 <fchmod@plt+0x8bd9>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%eax
je     80520bc <fchmod@plt+0x8bfc>
sub    %eax,%ebx
add    %eax,%ebp
test   %ebx,%ebx
mov    %esi,%eax
cmovns %ebx,%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80492c0 <write@plt>
cmp    %ebx,%eax
jne    8052090 <fchmod@plt+0x8bd0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8052030 <fchmod@plt+0x8b70>
jmp    80520d0 <fchmod@plt+0x8c10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   8049320 <__errno_location@plt>
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
movl   $0x0,(%eax)
mov    0x80a6d98,%eax
mov    0x8092144,%edx
cmp    %eax,%edx
jb     8052102 <fchmod@plt+0x8c42>
jmp    8052174 <fchmod@plt+0x8cb4>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
sub    %edx,%eax
add    $0x80a6da0,%edx
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
mov    0x80a6d98,%eax
xor    %edx,%edx
sub    0x8092144,%eax
movl   $0x8000,0x8(%esp)
add    %eax,0x80a6d80
adc    %edx,0x80a6d84
movl   $0x80a6da0,0x4(%esp)
mov    %esi,(%esp)
call   8051bc0 <fchmod@plt+0x8700>
cmp    $0xffffffff,%eax
je     805217c <fchmod@plt+0x8cbc>
mov    %eax,%ecx
sar    $0x1f,%ecx
add    %eax,0x8062120
adc    %ecx,0x8062124
test   %eax,%eax
mov    %eax,0x80a6d98
movl   $0x0,0x8092144
00
jne    8052100 <fchmod@plt+0x8c40>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
call   8051fc0 <fchmod@plt+0x8b00>
jmp    8052190 <fchmod@plt+0x8cd0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x80a6d94,%eax
test   %eax,%eax
jne    80521a0 <fchmod@plt+0x8ce0>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    %eax,0x8(%esp)
mov    0x8092140,%eax
movl   $0x8092160,0x4(%esp)
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
mov    0x80a6d94,%eax
xor    %edx,%edx
add    %eax,0x80a6d80
adc    %edx,0x80a6d84
movl   $0x0,0x80a6d94
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    0x80a6d94,%eax
test   %eax,%eax
jne    80521f0 <fchmod@plt+0x8d30>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    %eax,0x4(%esp)
movl   $0x8096d80,(%esp)
call   8051b10 <fchmod@plt+0x8650>
mov    0x805e5a8,%eax
test   %eax,%eax
je     8052230 <fchmod@plt+0x8d70>
mov    0x80a6d94,%eax
xor    %edx,%edx
add    %eax,0x80a6d80
adc    %edx,0x80a6d84
movl   $0x0,0x80a6d94
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    0x80a6d94,%eax
movl   $0x8096d80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8092140,%eax
mov    %eax,(%esp)
call   8052070 <fchmod@plt+0x8bb0>
jmp    805220c <fchmod@plt+0x8d4c>
push   %ebx
xor    %eax,%eax
sub    $0x18,%esp
mov    $0x8000,%ebx
movl   $0x0,0x80a6d98
00
jmp    8052283 <fchmod@plt+0x8dc3>
nop
cmp    $0xffffffff,%eax
je     80522f4 <fchmod@plt+0x8e34>
add    0x80a6d98,%eax
cmp    $0x7fff,%eax
mov    %eax,0x80a6d98
ja     80522c0 <fchmod@plt+0x8e00>
mov    %ebx,%edx
sub    %eax,%edx
add    $0x80a6da0,%eax
mov    %eax,0x4(%esp)
mov    0x8096960,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8051bc0 <fchmod@plt+0x8700>
test   %eax,%eax
jne    8052268 <fchmod@plt+0x8da8>
mov    0x80a6d98,%eax
test   %eax,%eax
jne    80522c0 <fchmod@plt+0x8e00>
mov    0x20(%esp),%eax
test   %eax,%eax
je     80522e4 <fchmod@plt+0x8e24>
add    $0x18,%esp
mov    $0xffffffff,%eax
pop    %ebx
ret
xor    %edx,%edx
add    %eax,0x8062120
adc    %edx,0x8062124
movzbl 0x80a6da0,%eax
movl   $0x1,0x8092144
00
add    $0x18,%esp
pop    %ebx
ret
call   80521e0 <fchmod@plt+0x8d20>
call   8049320 <__errno_location@plt>
movl   $0x0,(%eax)
call   8051fc0 <fchmod@plt+0x8b00>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x8,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%ebx
mov    %edx,%edi
mov    0x28(%esp),%esi
or     %eax,%edi
je     8052358 <fchmod@plt+0x8e98>
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
fildll (%esp)
fmuls  0x805a1c0
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
fildll (%esp)
fdivrp %st,%st(1)
mov    %esi,0x18(%esp)
fstpl  0x20(%esp)
movl   $0x8059db2,0x1c(%esp)
add    $0x8,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8055050 <fchmod@plt+0xbb90>
nop
fldz
jmp    805233c <fchmod@plt+0x8e7c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x98(%esp),%esi
lea    0x6c(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x90(%esp),%edi
mov    0x94(%esp),%ebp
test   %esi,%esi
js     8052448 <fchmod@plt+0x8f88>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
sub    $0x1,%ebx
mov    %esi,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8058480 <fchmod@plt+0xefc0>
add    $0x30,%eax
mov    %al,(%ebx)
mov    %ebp,(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8058300 <fchmod@plt+0xee40>
mov    %eax,%ebp
mov    %edx,%eax
or     %ebp,%eax
mov    %edx,%esi
jne    8052398 <fchmod@plt+0x8ed8>
mov    %ebx,%eax
lea    0x6c(%esp),%ecx
sub    %ecx,%eax
add    0x9c(%esp),%eax
test   %eax,%eax
lea    -0x1(%eax),%esi
jle    8052410 <fchmod@plt+0x8f50>
mov    %edi,0x4(%esp)
sub    $0x1,%esi
movl   $0x20,(%esp)
call   8049120 <_IO_putc@plt>
cmp    $0xffffffff,%esi
jne    80523f8 <fchmod@plt+0x8f38>
lea    0x6c(%esp),%eax
cmp    %eax,%ebx
jae    8052432 <fchmod@plt+0x8f72>
mov    %edi,0x4(%esp)
movsbl (%ebx),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049120 <_IO_putc@plt>
lea    0x6c(%esp),%eax
cmp    %eax,%ebx
jne    8052418 <fchmod@plt+0x8f58>
mov    0x6c(%esp),%eax
xor    %gs:0x14,%eax
jne    80524b3 <fchmod@plt+0x8ff3>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,%eax
mov    $0x30,%ebx
mov    %edi,0x1c(%esp)
mov    %esi,%edi
mov    %eax,%esi
nop
mov    %ebp,(%esp)
sub    $0x1,%esi
mov    %edi,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8058480 <fchmod@plt+0xefc0>
mov    %ebx,%ecx
sub    %eax,%ecx
mov    %cl,(%esi)
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8058300 <fchmod@plt+0xee40>
mov    %eax,%ebp
mov    %edx,%eax
or     %ebp,%eax
mov    %edx,%edi
jne    8052458 <fchmod@plt+0x8f98>
mov    0x1c(%esp),%edi
lea    -0x1(%esi),%ebx
movb   $0x2d,-0x1(%esi)
jmp    80523e2 <fchmod@plt+0x8f22>
call   80490e0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %ecx,%ecx
push   %ebx
xor    %edx,%edx
sub    $0x24,%esp
mov    0x80a6d8c,%esi
mov    0x30(%esp),%eax
cmpl   $0x1,0x8092148
mov    0x34(%esp),%ebx
mov    %dx,0x1c(%esp)
mov    %eax,0x8096960
sbb    %eax,%eax
not    %eax
and    $0x8,%eax
mov    %al,0x8092163
xor    %eax,%eax
test   %esi,%esi
cmovns 0x80a6d8c,%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %al,0x8092164
mov    %eax,%edx
shr    $0x10,%eax
shr    $0x8,%dx
mov    %al,0x8092166
shr    $0x8,%ax
mov    %cx,0x1e(%esp)
mov    %dl,0x8092165
mov    %ebx,0x8092140
movl   $0x8,0x805e1e8
00
movb   $0x1f,0x8092160
movb   $0x8b,0x8092161
movb   $0x8,0x8092162
movl   $0x8,0x80a6d94
00
mov    %al,0x8092167
call   8051b10 <fchmod@plt+0x8650>
mov    %ebx,(%esp)
mov    %eax,0x8061b94
call   8049b20 <fchmod@plt+0x660>
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
movl   $0x805e1e8,0x4(%esp)
call   804f920 <fchmod@plt+0x6460>
lea    0x1e(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x805e1e4,%eax
mov    %eax,(%esp)
call   804a100 <fchmod@plt+0xc40>
mov    0x80a6d94,%edx
movzwl 0x1e(%esp),%ecx
lea    0x1(%edx),%eax
cmp    $0x4000,%eax
mov    %eax,0x80a6d94
mov    %cl,0x8092160(%edx)
je     80528f8 <fchmod@plt+0x9438>
lea    0x1(%eax),%ebx
cmp    $0x4000,%ebx
mov    %ebx,0x80a6d94
movb   $0x3,0x8092160(%eax)
je     80528e8 <fchmod@plt+0x9428>
mov    0x8092148,%eax
test   %eax,%eax
je     8052630 <fchmod@plt+0x9170>
movl   $0x8061d20,(%esp)
call   8051cc0 <fchmod@plt+0x8800>
mov    %eax,%esi
jmp    8052601 <fchmod@plt+0x9141>
add    $0x1,%esi
cmpb   $0x0,-0x1(%esi)
je     8052630 <fchmod@plt+0x9170>
lea    0x1(%ebx),%eax
mov    %eax,0x80a6d94
movzbl (%esi),%edx
cmp    $0x4000,%eax
mov    %dl,0x8092160(%ebx)
mov    %eax,%ebx
jne    80525f8 <fchmod@plt+0x9138>
add    $0x1,%esi
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%ebx
cmpb   $0x0,-0x1(%esi)
jne    8052601 <fchmod@plt+0x9141>
nop
mov    %ebx,0x80aede0
movl   $0x0,0x80aede4
00
call   804a270 <fchmod@plt+0xdb0>
mov    0x8092150,%eax
mov    0x8092154,%edx
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     805268f <fchmod@plt+0x91cf>
xor    0x8062124,%edx
xor    0x8062120,%eax
or     %eax,%edx
je     805268f <fchmod@plt+0x91cf>
mov    0x80a6d88,%eax
movl   $0x8061d20,0xc(%esp)
movl   $0x805a1c4,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8055050 <fchmod@plt+0xbb90>
mov    0x80a6d94,%eax
cmp    $0x3ffd,%eax
ja     8052810 <fchmod@plt+0x9350>
mov    0x8061b94,%edx
add    $0x2,%eax
mov    %edx,%ecx
shr    $0x8,%cx
mov    %dl,0x809215e(%eax)
mov    %cl,0x809215f(%eax)
cmp    $0x3ffd,%eax
ja     80527c0 <fchmod@plt+0x9300>
shr    $0x10,%edx
add    $0x2,%eax
mov    %dl,0x809215e(%eax)
shr    $0x8,%dx
mov    %dl,0x809215f(%eax)
cmp    $0x3ffd,%eax
ja     8052768 <fchmod@plt+0x92a8>
mov    0x8062120,%edx
add    $0x2,%eax
mov    %edx,%ecx
shr    $0x8,%cx
mov    %dl,0x809215e(%eax)
mov    %cl,0x809215f(%eax)
cmp    $0x3ffd,%eax
jbe    8052868 <fchmod@plt+0x93a8>
lea    0x1(%eax),%ecx
shr    $0x10,%edx
cmp    $0x4000,%ecx
mov    %dl,0x8092160(%eax)
mov    %ecx,%eax
mov    %ecx,0x80a6d94
je     8052908 <fchmod@plt+0x9448>
lea    0x1(%eax),%ecx
shr    $0x8,%dx
cmp    $0x4000,%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
je     8052890 <fchmod@plt+0x93d0>
addl   $0x8,0x80aede0
adcl   $0x0,0x80aede4
call   8052190 <fchmod@plt+0x8cd0>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8062120,%edx
lea    0x1(%eax),%ecx
cmp    $0x4000,%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
je     80528d0 <fchmod@plt+0x9410>
lea    0x1(%ecx),%eax
mov    %edx,%ebx
shr    $0x8,%bx
cmp    $0x4000,%eax
mov    %eax,0x80a6d94
mov    %bl,0x8092160(%ecx)
jne    8052701 <fchmod@plt+0x9241>
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
mov    0x8062120,%edx
jmp    8052701 <fchmod@plt+0x9241>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ecx
shr    $0x10,%edx
cmp    $0x4000,%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
je     80528a0 <fchmod@plt+0x93e0>
lea    0x1(%ecx),%eax
shr    $0x8,%dx
cmp    $0x4000,%eax
mov    %eax,0x80a6d94
mov    %dl,0x8092160(%ecx)
jne    80526db <fchmod@plt+0x921b>
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
jmp    80526db <fchmod@plt+0x921b>
lea    0x0(%esi),%esi
mov    0x8061b94,%edx
lea    0x1(%eax),%ecx
cmp    $0x4000,%ecx
mov    %ecx,0x80a6d94
mov    %dl,0x8092160(%eax)
je     80528b8 <fchmod@plt+0x93f8>
lea    0x1(%ecx),%eax
mov    %edx,%ebx
shr    $0x8,%bx
cmp    $0x4000,%eax
mov    %eax,0x80a6d94
mov    %bl,0x8092160(%ecx)
jne    80526ba <fchmod@plt+0x91fa>
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
mov    0x8061b94,%edx
jmp    80526ba <fchmod@plt+0x91fa>
lea    0x0(%esi),%esi
shr    $0x10,%edx
mov    %dl,0x8092160(%eax)
lea    0x2(%eax),%ecx
shr    $0x8,%dx
mov    %ecx,0x80a6d94
mov    %dl,0x8092161(%eax)
jmp    805274b <fchmod@plt+0x928b>
lea    0x0(%esi,%eiz,1),%esi
call   8052190 <fchmod@plt+0x8cd0>
jmp    805274b <fchmod@plt+0x928b>
lea    0x0(%esi),%esi
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%ecx
movzwl 0x8061b96,%edx
jmp    80527de <fchmod@plt+0x931e>
nop
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%ecx
mov    0x8061b94,%edx
jmp    8052831 <fchmod@plt+0x9371>
xchg   %ax,%ax
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%ecx
mov    0x8062120,%edx
jmp    8052789 <fchmod@plt+0x92c9>
xchg   %ax,%ax
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%ebx
jmp    80525df <fchmod@plt+0x911f>
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
jmp    80525c3 <fchmod@plt+0x9103>
nop
call   8052190 <fchmod@plt+0x8cd0>
mov    0x80a6d94,%eax
movzwl 0x8062122,%edx
jmp    805272c <fchmod@plt+0x926c>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x8096960,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8051bc0 <fchmod@plt+0x8700>
test   %eax,%eax
mov    %eax,%esi
je     805296c <fchmod@plt+0x94ac>
cmp    $0xffffffff,%eax
je     8052974 <fchmod@plt+0x94b4>
mov    %ebx,(%esp)
xor    %ebx,%ebx
mov    %eax,0x4(%esp)
call   8051b10 <fchmod@plt+0x8650>
add    %esi,0x8062120
adc    %ebx,0x8062124
mov    %eax,0x8061b94
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
call   8051fc0 <fchmod@plt+0x8b00>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8061b98
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x805e544,%ebx
mov    %ebx,(%esp)
call   8055140 <fchmod@plt+0xbc80>
test   %eax,%eax
jne    8052a10 <fchmod@plt+0x9550>
mov    %ebx,(%esp)
call   8057070 <fchmod@plt+0xdbb0>
test   %eax,%eax
je     8052a6a <fchmod@plt+0x95aa>
xchg   %ax,%ax
mov    0x8061b98,%eax
test   %eax,%eax
je     8052a78 <fchmod@plt+0x95b8>
mov    %eax,(%esp)
call   8053f20 <fchmod@plt+0xaa60>
mov    %eax,%ebx
call   8049320 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x805a1f4,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x805a207,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80491c0 <error@plt>
call   8052ad0 <fchmod@plt+0x9610>
mov    0x805e4c0,%eax
mov    %eax,(%esp)
call   8049000 <_exit@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8055170 <fchmod@plt+0xbcb0>
mov    0x805e544,%ebx
test   %eax,%eax
jne    80529a6 <fchmod@plt+0x94e6>
mov    0x805e544,%eax
mov    %eax,(%esp)
call   8054ff0 <fchmod@plt+0xbb30>
mov    %eax,%ebx
mov    0x805e544,%eax
mov    %eax,(%esp)
call   8057070 <fchmod@plt+0xdbb0>
test   %eax,%eax
jne    80529b8 <fchmod@plt+0x94f8>
test   %ebx,%ebx
jne    80529b8 <fchmod@plt+0x94f8>
add    $0x28,%esp
pop    %ebx
jmp    8052ad0 <fchmod@plt+0x9610>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049320 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x805a1f4,0xc(%esp)
movl   $0x805a20b,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80491c0 <error@plt>
jmp    80529fa <fchmod@plt+0x953a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    %eax,0x8061ba0
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8061b9c
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x805e560,%eax
mov    %eax,(%esp)
call   8057070 <fchmod@plt+0xdbb0>
test   %eax,%eax
je     8052af8 <fchmod@plt+0x9638>
cmpb   $0x0,0x8061b9c
je     8052b0e <fchmod@plt+0x964e>
call   8049320 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8052b0e <fchmod@plt+0x964e>
mov    0x805e520,%eax
mov    %eax,(%esp)
call   8057070 <fchmod@plt+0xdbb0>
test   %eax,%eax
jne    8052b4c <fchmod@plt+0x968c>
add    $0x28,%esp
pop    %ebx
ret
mov    0x8061ba0,%eax
test   %eax,%eax
je     8052b59 <fchmod@plt+0x9699>
mov    %eax,(%esp)
call   8053f20 <fchmod@plt+0xaa60>
mov    %eax,%ebx
call   8049320 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x805a20e,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x805a207,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80491c0 <error@plt>
mov    0x805e4c0,%eax
mov    %eax,(%esp)
call   8049000 <_exit@plt>
call   8049320 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x805a20e,0xc(%esp)
movl   $0x805a20b,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80491c0 <error@plt>
jmp    8052b4c <fchmod@plt+0x968c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048fd0 <open64@plt>
mov    %eax,(%esp)
call   8054350 <fchmod@plt+0xae90>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x0,(%esp)
mov    %ebx,0x4(%esp)
call   8049070 <clock_gettime@plt>
test   %eax,%eax
je     8052c11 <fchmod@plt+0x9751>
lea    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <gettimeofday@plt>
mov    0x18(%esp),%eax
mov    %eax,(%ebx)
imul   $0x3e8,0x1c(%esp),%eax
mov    %eax,0x4(%ebx)
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     8052c41 <fchmod@plt+0x9781>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   80493f0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
lea    -0x41(%ecx),%ebx
sub    $0x1c,%esp
cmp    $0x19,%ebx
mov    0x30(%esp),%edi
mov    %edx,0xc(%esp)
mov    0x34(%esp),%ebp
ja     8052d08 <fchmod@plt+0x9848>
movzbl 0x6(%eax),%ebx
and    $0xffffffdf,%ebx
cmp    %cl,%bl
sete   %dl
mov    %edx,%esi
mov    %esi,%edx
xor    %ebx,%ebx
test   %dl,%dl
je     8052cf8 <fchmod@plt+0x9838>
test   %cl,%cl
mov    $0x1,%bl
je     8052cf8 <fchmod@plt+0x9838>
mov    %edi,%edx
movsbl %dl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
jbe    8052d18 <fchmod@plt+0x9858>
mov    %edi,%edx
cmp    0x7(%eax),%dl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     8052cf8 <fchmod@plt+0x9838>
mov    %edi,%edx
mov    $0x1,%bl
test   %dl,%dl
je     8052cf8 <fchmod@plt+0x9838>
mov    %ebp,%ebx
movsbl %bl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
ja     8052d30 <fchmod@plt+0x9870>
movzbl 0x8(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%bl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     8052cf8 <fchmod@plt+0x9838>
mov    %ebp,%edx
mov    $0x1,%bl
test   %dl,%dl
je     8052cf8 <fchmod@plt+0x9838>
mov    0xc(%esp),%edx
add    $0x9,%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
add    $0x9,%edx
mov    %edx,0x4(%esp)
call   8057010 <fchmod@plt+0xdb50>
test   %eax,%eax
sete   %bl
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %cl,0x6(%eax)
sete   %dl
mov    %edx,%esi
jmp    8052c7d <fchmod@plt+0x97bd>
lea    0x0(%esi),%esi
movzbl 0x7(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%dl
sete   %cl
jmp    8052ca4 <fchmod@plt+0x97e4>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%ebx
cmp    0x8(%eax),%bl
sete   %cl
jmp    8052ccb <fchmod@plt+0x980b>
lea    0x0(%esi),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
call   8057190 <fchmod@plt+0xdcd0>
movzbl (%eax),%ecx
and    $0xffffffdf,%ecx
cmp    $0x55,%cl
jne    8052da0 <fchmod@plt+0x98e0>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    8052db8 <fchmod@plt+0x98f8>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x2d,0x3(%eax)
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x38,0x4(%eax)
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x0,0x5(%eax)
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x60,(%ebx)
mov    $0x805a229,%eax
mov    $0x805a21c,%edx
cmovne %edx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x47,%cl
jne    8052db8 <fchmod@plt+0x98f8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x31,0x2(%eax)
je     8052dd0 <fchmod@plt+0x9910>
nop
cmp    $0x7,%esi
mov    $0x805a223,%eax
mov    $0x805a21a,%edx
cmovne %edx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmpb   $0x38,0x3(%eax)
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x30,0x4(%eax)
jne    8052db8 <fchmod@plt+0x98f8>
cmpb   $0x33,0x5(%eax)
jne    8052db8 <fchmod@plt+0x98f8>
movl   $0x0,0x4(%esp)
mov    $0x30,%ecx
mov    $0x805a22d,%edx
movl   $0x0,(%esp)
call   8052c50 <fchmod@plt+0x9790>
test   %eax,%eax
je     8052db8 <fchmod@plt+0x98f8>
cmpb   $0x60,(%ebx)
mov    $0x805a225,%eax
mov    $0x805a220,%edx
cmovne %edx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %edx,0x28(%esp)
mov    0x90(%esp),%esi
mov    %ecx,0x1c(%esp)
mov    %eax,0x38(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8049170 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     8053700 <fchmod@plt+0xa240>
mov    0x94(%esp),%eax
jmp    *0x805a280(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x40(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %edi,%edi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
je     805305f <fchmod@plt+0x9b9f>
test   %al,%al
je     8053072 <fchmod@plt+0x9bb2>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
setne  0x34(%esp)
je     8052f08 <fchmod@plt+0x9a48>
cmpb   $0x0,0x58(%esp)
jne    8053540 <fchmod@plt+0xa080>
mov    0x1c(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%edi,1),%ecx
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     80532c8 <fchmod@plt+0x9e08>
movzbl %bl,%eax
jmp    *0x805a2a4(,%eax,4)
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
je     8053110 <fchmod@plt+0x9c50>
cmpl   $0x3,0x94(%esp)
jne    8052fe8 <fchmod@plt+0x9b28>
testb  $0x4,0x98(%esp)
je     8052fe8 <fchmod@plt+0x9b28>
lea    0x2(%edi),%edx
cmp    %edx,%esi
jbe    8052fe8 <fchmod@plt+0x9b28>
mov    0x1c(%esp),%eax
cmpb   $0x3f,0x1(%eax,%edi,1)
jne    8052fe8 <fchmod@plt+0x9b28>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x34(%esp)
ja     8052fe8 <fchmod@plt+0x9b28>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     8052fe8 <fchmod@plt+0x9b28>
cmpb   $0x0,0x2f(%esp)
jne    8053120 <fchmod@plt+0x9c60>
cmp    0x28(%esp),%ebp
jae    8052fa7 <fchmod@plt+0x9ae7>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    8052fb9 <fchmod@plt+0x9af9>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    8052fcb <fchmod@plt+0x9b0b>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    8052fdd <fchmod@plt+0x9b1d>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x34(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%edi
nop
cmpb   $0x0,0x59(%esp)
je     8052ff6 <fchmod@plt+0x9b36>
cmpb   $0x0,0x5a(%esp)
jne    805301b <fchmod@plt+0x9b5b>
mov    0x38(%esp),%edx
test   %edx,%edx
je     805301b <fchmod@plt+0x9b5b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x38(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    8053022 <fchmod@plt+0x9b62>
cmpb   $0x0,0x24(%esp)
je     805303e <fchmod@plt+0x9b7e>
cmpb   $0x0,0x2f(%esp)
jne    8053120 <fchmod@plt+0x9c60>
cmp    0x28(%esp),%ebp
jae    805303b <fchmod@plt+0x9b7b>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    0x28(%esp),%ebp
jae    805304e <fchmod@plt+0x9b8e>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
jne    8052ee8 <fchmod@plt+0x9a28>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax,%edi,1)
setne  %al
test   %al,%al
jne    8052ef0 <fchmod@plt+0x9a30>
test   %ebp,%ebp
jne    805308b <fchmod@plt+0x9bcb>
cmpl   $0x2,0x94(%esp)
jne    805308b <fchmod@plt+0x9bcb>
cmpb   $0x0,0x2f(%esp)
jne    8053120 <fchmod@plt+0x9c60>
cmpb   $0x0,0x2f(%esp)
jne    80530c2 <fchmod@plt+0x9c02>
mov    0x40(%esp),%eax
test   %eax,%eax
je     80530c2 <fchmod@plt+0x9c02>
mov    0x40(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     80530c2 <fchmod@plt+0x9c02>
mov    0x30(%esp),%ebx
sub    %ebp,%edx
mov    0x28(%esp),%ecx
nop
cmp    %ebp,%ecx
jbe    80530b7 <fchmod@plt+0x9bf7>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    80530b0 <fchmod@plt+0x9bf0>
cmp    0x28(%esp),%ebp
mov    %ebp,%eax
jae    8053165 <fchmod@plt+0x9ca5>
mov    0x30(%esp),%ecx
movb   $0x0,(%ecx,%ebp,1)
jmp    8053165 <fchmod@plt+0x9ca5>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%esi
setne  %al
cmp    $0xffffffff,%esi
je     80536f0 <fchmod@plt+0xa230>
test   %al,%al
jne    8052fe8 <fchmod@plt+0x9b28>
test   %edi,%edi
jne    8052fe8 <fchmod@plt+0x9b28>
cmpl   $0x2,0x94(%esp)
jne    8052fe8 <fchmod@plt+0x9b28>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
je     8052fe8 <fchmod@plt+0x9b28>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    0x1c(%esp),%ecx
mov    0x28(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
call   8052e20 <fchmod@plt+0x9960>
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80537ed <fchmod@plt+0xa32d>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     805376d <fchmod@plt+0xa2ad>
cmpb   $0x0,0x58(%esp)
je     8052fe8 <fchmod@plt+0x9b28>
mov    %eax,%ebx
jmp    8053022 <fchmod@plt+0x9b62>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    8053193 <fchmod@plt+0x9cd3>
nop
mov    $0x66,%eax
jmp    8053193 <fchmod@plt+0x9cd3>
nop
mov    $0x76,%eax
jmp    8053193 <fchmod@plt+0x9cd3>
nop
mov    $0x6e,%eax
jmp    8053185 <fchmod@plt+0x9cc5>
nop
mov    $0x74,%eax
jmp    8053185 <fchmod@plt+0x9cc5>
nop
mov    $0x61,%eax
jmp    8053193 <fchmod@plt+0x9cd3>
nop
cmpb   $0x0,0x58(%esp)
je     80536d8 <fchmod@plt+0xa218>
cmpb   $0x0,0x2f(%esp)
jne    8053120 <fchmod@plt+0x9c60>
cmp    0x28(%esp),%ebp
jae    80531fc <fchmod@plt+0x9d3c>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%edi),%edx
cmp    %edx,%esi
lea    0x1(%ebp),%eax
jbe    8053240 <fchmod@plt+0x9d80>
mov    0x1c(%esp),%ecx
movzbl 0x1(%ecx,%edi,1),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x9,%dl
mov    %cl,0x34(%esp)
ja     8053240 <fchmod@plt+0x9d80>
cmp    %eax,0x28(%esp)
ja     8053780 <fchmod@plt+0xa2c0>
lea    0x2(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    8053237 <fchmod@plt+0x9d77>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    8052ff6 <fchmod@plt+0x9b36>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x58(%esp)
je     8053269 <fchmod@plt+0x9da9>
cmpb   $0x0,0x2f(%esp)
je     8053269 <fchmod@plt+0x9da9>
cmpb   $0x0,0x34(%esp)
jne    805303e <fchmod@plt+0x9b7e>
mov    %ebx,%eax
jmp    8053185 <fchmod@plt+0x9cc5>
cmpl   $0x2,0x94(%esp)
jne    8052fe8 <fchmod@plt+0x9b28>
cmpb   $0x0,0x2f(%esp)
jne    8053120 <fchmod@plt+0x9c60>
cmp    0x28(%esp),%ebp
jae    8053297 <fchmod@plt+0x9dd7>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    80532a9 <fchmod@plt+0x9de9>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x28(%esp)
jbe    80532bb <fchmod@plt+0x9dfb>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    8052fe8 <fchmod@plt+0x9b28>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x4c(%esp)
jne    80535b8 <fchmod@plt+0xa0f8>
call   8049490 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x34(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     8052fe8 <fchmod@plt+0x9b28>
mov    0x34(%esp),%eax
mov    0x30(%esp),%ecx
mov    %dl,0x34(%esp)
mov    %esi,0x90(%esp)
add    %edi,%eax
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
jmp    8053388 <fchmod@plt+0x9ec8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    8053708 <fchmod@plt+0xa248>
cmp    %eax,%ebp
jae    8053333 <fchmod@plt+0x9e73>
movb   $0x5c,(%ecx,%ebp,1)
lea    0x1(%ebp),%esi
cmp    %esi,%eax
jbe    805334a <fchmod@plt+0x9e8a>
mov    %ebx,%edx
shr    $0x6,%dl
mov    %edx,%esi
add    $0x30,%esi
mov    %esi,%edx
mov    %dl,0x1(%ecx,%ebp,1)
lea    0x2(%ebp),%esi
cmp    %esi,%eax
jbe    8053364 <fchmod@plt+0x9ea4>
mov    %ebx,%edx
shr    $0x3,%dl
mov    %edx,%esi
and    $0x7,%esi
add    $0x30,%esi
mov    %esi,%edx
mov    %dl,0x2(%ecx,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%edi
cmp    %edi,0x3c(%esp)
jbe    80533af <fchmod@plt+0x9eef>
cmp    %eax,%ebp
jae    805337d <fchmod@plt+0x9ebd>
mov    %bl,(%ecx,%ebp,1)
mov    0x1c(%esp),%edx
add    $0x1,%ebp
movzbl (%edx,%edi,1),%ebx
cmpb   $0x0,0x34(%esp)
jne    8053320 <fchmod@plt+0x9e60>
cmpb   $0x0,0x24(%esp)
je     805336d <fchmod@plt+0x9ead>
cmp    %eax,%ebp
jae    805339e <fchmod@plt+0x9ede>
movb   $0x5c,(%ecx,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    %edi,0x3c(%esp)
movb   $0x0,0x24(%esp)
ja     8053376 <fchmod@plt+0x9eb6>
mov    0x90(%esp),%esi
jmp    8053041 <fchmod@plt+0x9b81>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80537f2 <fchmod@plt+0xa332>
mov    0x28(%esp),%edi
test   %edi,%edi
je     805374e <fchmod@plt+0xa28e>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x805a223,0x40(%esp)
movb   $0x22,(%eax)
jmp    8052ec0 <fchmod@plt+0x9a00>
lea    0x0(%esi),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x805a223,0x40(%esp)
movl   $0x3,0x94(%esp)
00
jmp    8052ec0 <fchmod@plt+0x9a00>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x805a21a,0x40(%esp)
movl   $0x2,0x94(%esp)
00
jmp    8052ec0 <fchmod@plt+0x9a00>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    805380e <fchmod@plt+0xa34e>
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     805372f <fchmod@plt+0xa26f>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x20(%esp)
movl   $0x805a21a,0x40(%esp)
movb   $0x27,(%eax)
jmp    8052ec0 <fchmod@plt+0x9a00>
lea    0x0(%esi),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x40(%esp)
jmp    8052ec0 <fchmod@plt+0x9a00>
lea    0x0(%esi,%eiz,1),%esi
je     80534f4 <fchmod@plt+0xa034>
mov    0x94(%esp),%edx
mov    $0x805a235,%eax
call   8052d40 <fchmod@plt+0x9880>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x805a21a,%eax
call   8052d40 <fchmod@plt+0x9880>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    8053522 <fchmod@plt+0xa062>
mov    0x48(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     8053522 <fchmod@plt+0xa062>
mov    0x30(%esp),%ebx
mov    0x28(%esp),%edx
cmp    %edx,%ebp
jae    8053517 <fchmod@plt+0xa057>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%ecx,%ebp,1),%eax
test   %al,%al
jne    8053510 <fchmod@plt+0xa050>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8049280 <strlen@plt>
mov    %ebx,0x40(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x20(%esp)
jmp    8052ec0 <fchmod@plt+0x9a00>
mov    0x20(%esp),%eax
cmp    $0xffffffff,%esi
lea    (%edi,%eax,1),%ebx
jne    805355f <fchmod@plt+0xa09f>
cmp    $0x1,%eax
jbe    805355f <fchmod@plt+0xa09f>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049280 <strlen@plt>
mov    %eax,%esi
mov    0x1c(%esp),%eax
cmp    %ebx,%esi
lea    (%eax,%edi,1),%ecx
jb     80535a8 <fchmod@plt+0xa0e8>
mov    0x20(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   80490c0 <memcmp@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    80535a8 <fchmod@plt+0xa0e8>
cmpb   $0x0,0x2f(%esp)
jne    8053120 <fchmod@plt+0x9c60>
movb   $0x1,0x24(%esp)
jmp    8052f14 <fchmod@plt+0x9a54>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    8052f14 <fchmod@plt+0x9a54>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%esi
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     8053714 <fchmod@plt+0xa254>
movb   $0x1,0x3c(%esp)
movl   $0x0,0x34(%esp)
mov    %edi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %bl,0x5b(%esp)
mov    %ecx,0x5c(%esp)
mov    0x1c(%esp),%eax
mov    0x34(%esp),%edi
add    0x50(%esp),%edi
lea    (%eax,%edi,1),%ebx
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80491a0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80536ae <fchmod@plt+0xa1ee>
cmp    $0xffffffff,%eax
je     80537d6 <fchmod@plt+0xa316>
cmp    $0xfffffffe,%eax
je     805378d <fchmod@plt+0xa2cd>
cmpb   $0x0,0x2f(%esp)
je     8053677 <fchmod@plt+0xa1b7>
cmpl   $0x2,0x94(%esp)
jne    8053677 <fchmod@plt+0xa1b7>
cmp    $0x1,%eax
je     8053677 <fchmod@plt+0xa1b7>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     8053670 <fchmod@plt+0xa1b0>
movzbl %al,%eax
jmp    *0x805a4a0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    8053658 <fchmod@plt+0xa198>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049130 <iswprint@plt>
mov    $0x0,%ecx
test   %eax,%eax
movzbl 0x3c(%esp),%eax
cmove  %ecx,%eax
mov    %al,0x3c(%esp)
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x34(%esp)
call   8049060 <mbsinit@plt>
test   %eax,%eax
je     80535ee <fchmod@plt+0xa12e>
movzbl 0x3c(%esp),%edx
mov    0x50(%esp),%edi
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
cmpl   $0x1,0x34(%esp)
jbe    80532f3 <fchmod@plt+0x9e33>
and    0x58(%esp),%dl
jmp    80532fd <fchmod@plt+0x9e3d>
nop
testb  $0x1,0x98(%esp)
je     8052fe8 <fchmod@plt+0x9b28>
add    $0x1,%edi
jmp    8052eda <fchmod@plt+0x9a1a>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    80530ef <fchmod@plt+0x9c2f>
call   80493f0 <abort@plt>
lea    0x0(%esi),%esi
mov    0x90(%esp),%esi
jmp    8053120 <fchmod@plt+0x9c60>
mov    0x1c(%esp),%eax
mov    %ecx,0x34(%esp)
mov    %eax,(%esp)
call   8049280 <strlen@plt>
mov    0x34(%esp),%ecx
mov    %eax,%esi
jmp    80535d1 <fchmod@plt+0xa111>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x20(%esp)
movl   $0x805a21a,0x40(%esp)
jmp    8052ec0 <fchmod@plt+0x9a00>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x20(%esp)
movl   $0x805a223,0x40(%esp)
jmp    8052ec0 <fchmod@plt+0x9a00>
cmpb   $0x0,0x2f(%esp)
je     8053193 <fchmod@plt+0x9cd3>
jmp    8053120 <fchmod@plt+0x9c60>
lea    0x0(%esi),%esi
mov    0x30(%esp),%ecx
movb   $0x30,(%ecx,%eax,1)
jmp    8053225 <fchmod@plt+0x9d65>
mov    %edi,%edx
mov    %ebx,%eax
mov    0x54(%esp),%ebp
cmp    %edx,%esi
mov    0x50(%esp),%edi
movzbl 0x5b(%esp),%ebx
mov    0x5c(%esp),%ecx
jbe    80537cc <fchmod@plt+0xa30c>
cmpb   $0x0,(%eax)
je     80537cc <fchmod@plt+0xa30c>
mov    0x34(%esp),%eax
jmp    80537be <fchmod@plt+0xa2fe>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     80537c8 <fchmod@plt+0xa308>
add    $0x1,%eax
lea    (%edi,%eax,1),%edx
cmp    %edx,%esi
ja     80537b8 <fchmod@plt+0xa2f8>
mov    %eax,0x34(%esp)
mov    $0x1,%edx
jmp    80536c3 <fchmod@plt+0xa203>
mov    0x50(%esp),%edi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
jmp    80536c3 <fchmod@plt+0xa203>
call   80490e0 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x20(%esp)
movl   $0x805a223,0x40(%esp)
jmp    8052ec0 <fchmod@plt+0x9a00>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x20(%esp)
movl   $0x805a21a,0x40(%esp)
jmp    8052ec0 <fchmod@plt+0x9a00>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049320 <__errno_location@plt>
test   %edi,%edi
mov    0x805e510,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     80539bc <fchmod@plt+0xa4fc>
cmp    0x805e51c,%edi
jb     80538c8 <fchmod@plt+0xa408>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     80539c1 <fchmod@plt+0xa501>
cmp    $0x805e514,%esi
lea    0x0(,%ebp,8),%eax
je     8053990 <fchmod@plt+0xa4d0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8054c80 <fchmod@plt+0xb7c0>
mov    %eax,%esi
mov    %eax,0x805e510
mov    0x805e51c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049300 <memset@plt>
mov    %ebp,0x805e51c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    0x2c(%ebx),%ecx
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    0x28(%ebx),%edx
mov    %eax,0x24(%esp)
mov    (%ebx),%eax
mov    %ecx,0x14(%esp)
mov    0x24(%esp),%ecx
orl    $0x1,0x18(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %ecx,0xc(%esp)
mov    0x18(%esp),%ecx
mov    %edx,0x10(%esp)
mov    %ebp,%edx
mov    %eax,(%esp)
mov    %esi,%eax
mov    %ecx,0x8(%esp)
mov    0x1c(%esp),%ecx
call   8052e20 <fchmod@plt+0x9960>
cmp    %eax,%ebp
ja     8053979 <fchmod@plt+0xa4b9>
lea    0x1(%eax),%ebp
cmp    $0x8061bc0,%esi
mov    %ebp,(%edi)
je     8053934 <fchmod@plt+0xa474>
mov    %esi,(%esp)
call   8049040 <free@plt>
mov    %ebp,(%esp)
call   8054c10 <fchmod@plt+0xb750>
mov    0x2c(%ebx),%edx
mov    (%ebx),%ecx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x28(%ebx),%eax
mov    %ecx,0x4(%esp)
mov    0x1c(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %ebp,%edx
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8052e20 <fchmod@plt+0x9960>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ebx
mov    %ebx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8054c80 <fchmod@plt+0xb7c0>
mov    0x805e518,%edx
mov    %eax,%esi
mov    %eax,0x805e510
mov    0x805e514,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805389f <fchmod@plt+0xa3df>
call   80493f0 <abort@plt>
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049320 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8061cc0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   8054e20 <fchmod@plt+0xb960>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8061cc0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    8053a30 <fchmod@plt+0xa570>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8061cc0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8061cc0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8061cc0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8061cc0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     8053ae3 <fchmod@plt+0xa623>
test   %ecx,%ecx
je     8053ae3 <fchmod@plt+0xa623>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   80493f0 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x8061cc0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x50(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049320 <__errno_location@plt>
mov    0x28(%ebx),%ecx
add    $0x8,%ebx
mov    -0x4(%ebx),%edx
mov    0x24(%ebx),%ebp
mov    (%eax),%edi
mov    %eax,%esi
mov    -0x8(%ebx),%eax
mov    %ecx,0x10(%esp)
mov    0x48(%esp),%ecx
mov    %edx,0x8(%esp)
mov    0x44(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %eax,(%esp)
mov    0x40(%esp),%eax
call   8052e20 <fchmod@plt+0x9960>
mov    %edi,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x8061cc0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049320 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x2c(%ebx),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x28(%ebx),%edx
or     %eax,%esi
mov    (%ebx),%eax
mov    %ecx,0x14(%esp)
mov    0x54(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %edx,0x10(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %ebp,0xc(%esp)
call   8052e20 <fchmod@plt+0x9960>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   8054c10 <fchmod@plt+0xb750>
mov    0x2c(%ebx),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x28(%ebx),%eax
mov    (%ebx),%ebx
mov    %ecx,0x14(%esp)
mov    0x54(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x20(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %ebx,0x4(%esp)
call   8052e20 <fchmod@plt+0x9960>
mov    0x58(%esp),%ecx
mov    0x24(%esp),%esi
test   %ecx,%ecx
mov    %esi,(%edi)
je     8053c28 <fchmod@plt+0xa768>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8053b60 <fchmod@plt+0xa6a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805e51c,%edi
mov    0x805e510,%esi
cmp    $0x1,%edi
jbe    8053ca3 <fchmod@plt+0xa7e3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049040 <free@plt>
cmp    %edi,%ebx
jne    8053c90 <fchmod@plt+0xa7d0>
mov    0x4(%esi),%eax
cmp    $0x8061bc0,%eax
je     8053cc9 <fchmod@plt+0xa809>
mov    %eax,(%esp)
call   8049040 <free@plt>
movl   $0x100,0x805e514
00
movl   $0x8061bc0,0x805e518
08
cmp    $0x805e514,%esi
je     8053ce3 <fchmod@plt+0xa823>
mov    %esi,(%esp)
call   8049040 <free@plt>
movl   $0x805e514,0x805e510
08
movl   $0x1,0x805e51c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8061cc0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8061cc0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8061cc0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8061cc0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8052c20 <fchmod@plt+0x9760>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8053830 <fchmod@plt+0xa370>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8052c20 <fchmod@plt+0x9760>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8053830 <fchmod@plt+0xa370>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8053d80 <fchmod@plt+0xa8c0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8053db0 <fchmod@plt+0xa8f0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x8061cc0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x8061cc4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x8061cc8,%eax
mov    %eax,0x18(%esp)
mov    0x8061ccc,%eax
mov    %eax,0x1c(%esp)
mov    0x8061cd0,%eax
mov    %eax,0x20(%esp)
mov    0x8061cd4,%eax
mov    %eax,0x24(%esp)
mov    0x8061cd8,%eax
mov    %eax,0x28(%esp)
mov    0x8061cdc,%eax
mov    %eax,0x2c(%esp)
mov    0x8061ce0,%eax
mov    %eax,0x30(%esp)
mov    0x8061ce4,%eax
mov    %eax,0x34(%esp)
mov    0x8061ce8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x8061cec,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   8053830 <fchmod@plt+0xa370>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8053e40 <fchmod@plt+0xa980>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8053e40 <fchmod@plt+0xa980>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8053e40 <fchmod@plt+0xa980>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x8061cc0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x8061cc4,%eax
mov    %eax,0x14(%esp)
mov    0x8061cc8,%eax
mov    %eax,0x18(%esp)
mov    0x8061ccc,%eax
mov    %eax,0x1c(%esp)
mov    0x8061cd0,%eax
mov    %eax,0x20(%esp)
mov    0x8061cd4,%eax
mov    %eax,0x24(%esp)
mov    0x8061cd8,%eax
mov    %eax,0x28(%esp)
mov    0x8061cdc,%eax
mov    %eax,0x2c(%esp)
mov    0x8061ce0,%eax
mov    %eax,0x30(%esp)
mov    0x8061ce4,%eax
mov    %eax,0x34(%esp)
mov    0x8061ce8,%eax
mov    %eax,0x38(%esp)
mov    0x8061cec,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8053ab0 <fchmod@plt+0xa5f0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8053830 <fchmod@plt+0xa370>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8053f80 <fchmod@plt+0xaac0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8053f80 <fchmod@plt+0xaac0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8053f80 <fchmod@plt+0xaac0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x805e4e0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x805e4e0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x805e4e0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x805e4e0,0x4(%esp)
jmp    8053830 <fchmod@plt+0xa370>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
test   %eax,%eax
je     8054292 <fchmod@plt+0xadd2>
movl   $0x200,(%esp)
mov    $0x200,%esi
call   8054c10 <fchmod@plt+0xb750>
mov    %eax,0x14(%esp)
call   8049320 <__errno_location@plt>
movl   $0x0,0x10(%esp)
mov    %eax,%edi
jmp    80541b7 <fchmod@plt+0xacf7>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x13(%eax,%edx,1)
jne    80541ef <fchmod@plt+0xad2f>
mov    0x40(%esp),%eax
movl   $0x0,(%edi)
mov    %eax,(%esp)
call   80493c0 <readdir64@plt>
test   %eax,%eax
je     8054278 <fchmod@plt+0xadb8>
xor    %edx,%edx
cmpb   $0x2e,0x13(%eax)
lea    0x13(%eax),%ebp
jne    80541b0 <fchmod@plt+0xacf0>
xor    %edx,%edx
cmpb   $0x2e,0x14(%eax)
sete   %dl
add    $0x1,%edx
cmpb   $0x0,0x13(%eax,%edx,1)
je     80541b7 <fchmod@plt+0xacf7>
mov    %ebp,(%esp)
call   8049280 <strlen@plt>
mov    0x10(%esp),%edx
lea    0x1(%eax),%ecx
add    %ecx,%edx
jb     80542a4 <fchmod@plt+0xade4>
cmp    %esi,%edx
jae    8054212 <fchmod@plt+0xad52>
jmp    8054248 <fchmod@plt+0xad88>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
lea    (%esi,%esi,1),%ebx
cmp    %ebx,%esi
ja     80542a4 <fchmod@plt+0xade4>
cmp    %ebx,%edx
nop
jae    8054210 <fchmod@plt+0xad50>
mov    0x14(%esp),%eax
mov    %ebx,%esi
mov    %ebx,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   8054c80 <fchmod@plt+0xb7c0>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x10(%esp),%eax
add    0x14(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   8049050 <memcpy@plt>
mov    0x18(%esp),%edx
mov    %edx,0x10(%esp)
jmp    80541b7 <fchmod@plt+0xacf7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x10(%esp),%ecx
movb   $0x0,(%eax,%ecx,1)
mov    (%edi),%ebx
test   %ebx,%ebx
jne    8054296 <fchmod@plt+0xadd6>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    805428a <fchmod@plt+0xadca>
mov    %eax,(%esp)
call   8049040 <free@plt>
xor    %eax,%eax
mov    %ebx,(%edi)
jmp    805428a <fchmod@plt+0xadca>
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   8054170 <fchmod@plt+0xacb0>
test   %ebx,%ebx
mov    %eax,%esi
je     80542e0 <fchmod@plt+0xae20>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   8049440 <closedir@plt>
test   %eax,%eax
jne    80542f0 <fchmod@plt+0xae30>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049320 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049040 <free@plt>
mov    %edi,(%esi)
jmp    80542d4 <fchmod@plt+0xae14>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80570f0 <fchmod@plt+0xdc30>
add    $0x1c,%esp
jmp    80542b0 <fchmod@plt+0xadf0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049390 <fdopendir@plt>
add    $0x1c,%esp
jmp    80542b0 <fchmod@plt+0xadf0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     805437f <fchmod@plt+0xaebf>
mov    %ebx,(%esp)
call   8057550 <fchmod@plt+0xe090>
mov    %eax,%edi
call   8049320 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049430 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    (%edx),%ebx
mov    0x4(%ebx),%ecx
cmp    $0x3ffffffe,%ecx
je     80543e8 <fchmod@plt+0xaf28>
cmp    $0x3fffffff,%ecx
je     80543c8 <fchmod@plt+0xaf08>
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8054420 <fchmod@plt+0xaf60>
xor    %eax,%eax
cmp    $0x3fffffff,%edx
je     8054408 <fchmod@plt+0xaf48>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3fffffff,0xc(%ebx)
je     8054448 <fchmod@plt+0xaf88>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8052bd0 <fchmod@plt+0x9710>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
jmp    80543ac <fchmod@plt+0xaeec>
xchg   %ax,%ax
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8054438 <fchmod@plt+0xaf78>
mov    0x40(%eax),%ecx
mov    0x44(%eax),%eax
mov    %ecx,(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
cmp    $0x3fffffff,%edx
jne    80543be <fchmod@plt+0xaefe>
add    $0x8,%ebx
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8052bd0 <fchmod@plt+0x9710>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
mov    0x48(%eax),%edx
mov    0x4c(%eax),%eax
mov    %edx,0x8(%ebx)
mov    %eax,0xc(%ebx)
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    80543be <fchmod@plt+0xaefe>
lea    0x0(%esi),%esi
movl   $0x0,(%edx)
xor    %eax,%eax
jmp    80543be <fchmod@plt+0xaefe>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
je     8054516 <fchmod@plt+0xb056>
mov    0x4(%eax),%ebp
lea    -0x3ffffffe(%ebp),%edx
cmp    $0x1,%edx
ja     80544e8 <fchmod@plt+0xb028>
mov    0xc(%eax),%esi
lea    -0x3ffffffe(%esi),%ecx
cmp    $0x1,%ecx
ja     8054508 <fchmod@plt+0xb048>
xor    %ebx,%ebx
xor    %edi,%edi
cmp    $0x1,%edx
jbe    80544b0 <fchmod@plt+0xaff0>
cmp    $0x1,%ecx
jbe    80544ca <fchmod@plt+0xb00a>
xor    %eax,%eax
cmp    $0x1,%ebx
sete   %al
add    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
cmp    $0x3ffffffe,%ebp
sete   %bl
cmp    $0x1,%ecx
movl   $0x0,(%eax)
mov    $0x1,%di
ja     8054499 <fchmod@plt+0xafd9>
movl   $0x0,0x8(%eax)
xor    %eax,%eax
cmp    $0x3ffffffe,%esi
sete   %al
mov    $0x1,%edi
add    %eax,%ebx
jmp    8054499 <fchmod@plt+0xafd9>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%ebp
jbe    805447d <fchmod@plt+0xafbd>
call   8049320 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    80544a3 <fchmod@plt+0xafe3>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%esi
jbe    805448b <fchmod@plt+0xafcb>
jmp    80544f0 <fchmod@plt+0xb030>
movl   $0x805a5a1,0xc(%esp)
movl   $0x5a,0x8(%esp)
movl   $0x805a584,0x4(%esp)
movl   $0x805a598,(%esp)
call   8049480 <__assert_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    0xe8(%esp),%edx
mov    0xe0(%esp),%edi
test   %edx,%edx
je     80547b8 <fchmod@plt+0xb2f8>
mov    (%edx),%ecx
lea    0x30(%esp),%eax
mov    0x4(%edx),%ebx
mov    %eax,0x2c(%esp)
mov    %ecx,0x30(%esp)
mov    0x8(%edx),%ecx
mov    %ebx,0x34(%esp)
mov    0xc(%edx),%ebx
mov    %ecx,0x38(%esp)
mov    %ebx,0x3c(%esp)
call   8054460 <fchmod@plt+0xafa0>
test   %eax,%eax
mov    %eax,%ebp
js     8054950 <fchmod@plt+0xb490>
mov    0xe4(%esp),%eax
mov    %edi,%ebx
shr    $0x1f,%ebx
test   %eax,%eax
sete   0x1c(%esp)
test   %bl,%bl
jne    8054960 <fchmod@plt+0xb4a0>
mov    0x8061cf4,%eax
test   %eax,%eax
js     80545ed <fchmod@plt+0xb12d>
cmp    $0x2,%ebp
je     8054738 <fchmod@plt+0xb278>
mov    0x2c(%esp),%eax
test   %bl,%bl
jne    80547f0 <fchmod@plt+0xb330>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80493a0 <futimens@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jle    8054820 <fchmod@plt+0xb360>
call   8049320 <__errno_location@plt>
movl   $0x26,(%eax)
test   %ebp,%ebp
movl   $0xffffffff,0x8061cf4
ff
movl   $0xffffffff,0x8061cf0
ff
jne    80546b0 <fchmod@plt+0xb1f0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8054840 <fchmod@plt+0xb380>
mov    (%ecx),%eax
mov    $0x10624dd3,%esi
mov    0x4(%ecx),%ebp
mov    %eax,0x40(%esp)
mov    %ebp,%eax
imul   %esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ecx
sar    $0x1f,%ebp
sar    $0x6,%edx
sub    %ebp,%edx
mov    %eax,0x48(%esp)
mov    %ecx,%eax
mov    %edx,0x44(%esp)
imul   %esi
sar    $0x1f,%ecx
lea    0x40(%esp),%ebp
sar    $0x6,%edx
sub    %ecx,%edx
mov    %edx,0x4c(%esp)
test   %bl,%bl
mov    %ebp,0x8(%esp)
jne    80547c8 <fchmod@plt+0xb308>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049450 <futimesat@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8054708 <fchmod@plt+0xb248>
test   %ebp,%ebp
je     805469d <fchmod@plt+0xb1dd>
cmpl   $0x7a11f,0x4(%ebp)
setg   %bl
cmpl   $0x7a11f,0xc(%ebp)
setg   %cl
jg     8054888 <fchmod@plt+0xb3c8>
test   %bl,%bl
jne    8054888 <fchmod@plt+0xb3c8>
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x3,%ebp
je     80546e2 <fchmod@plt+0xb222>
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8054790 <fchmod@plt+0xb2d0>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049160 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8054950 <fchmod@plt+0xb490>
mov    0x2c(%esp),%esi
test   %esi,%esi
je     8054840 <fchmod@plt+0xb380>
lea    0x2c(%esp),%edx
xor    %esi,%esi
lea    0x60(%esp),%eax
call   8054390 <fchmod@plt+0xaed0>
test   %al,%al
je     8054609 <fchmod@plt+0xb149>
jmp    805469d <fchmod@plt+0xb1dd>
nop
cmpb   $0x0,0x1c(%esp)
mov    $0xffffffff,%esi
jne    805469d <fchmod@plt+0xb1dd>
mov    0xe4(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80492d0 <utimes@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8054848 <fchmod@plt+0xb388>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049160 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8054950 <fchmod@plt+0xb490>
mov    0x2c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     8054870 <fchmod@plt+0xb3b0>
cmpl   $0x3ffffffe,0xc(%eax)
je     8054980 <fchmod@plt+0xb4c0>
mov    $0x3,%ebp
jmp    80545c3 <fchmod@plt+0xb103>
lea    0x0(%esi),%esi
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049400 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    80546da <fchmod@plt+0xb21a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x2c(%esp)
xor    %ebp,%ebp
jmp    8054592 <fchmod@plt+0xb0d2>
nop
mov    0xe4(%esp),%eax
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   8049450 <futimesat@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,0x8(%esp)
mov    0xe4(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   8048fb0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jg     80545e2 <fchmod@plt+0xb122>
xchg   %ax,%ax
jne    80549ab <fchmod@plt+0xb4eb>
movl   $0x1,0x8061cf4
00
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    8054651 <fchmod@plt+0xb191>
nop
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049400 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    805475d <fchmod@plt+0xb29d>
lea    0x0(%esi,%eiz,1),%esi
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    8054783 <fchmod@plt+0xb2c3>
lea    0x60(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x1c(%esp)
call   8049160 <__fxstat64@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    805469d <fchmod@plt+0xb1dd>
mov    0xa8(%esp),%eax
mov    0x4(%ebp),%edx
mov    0xa0(%esp),%esi
sub    0x0(%ebp),%esi
mov    %eax,0x1c(%esp)
mov    0x8(%ebp),%eax
sub    %eax,0x1c(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x54(%esp)
mov    0xc(%ebp),%edx
mov    %eax,0x50(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x5c(%esp)
xor    %edx,%edx
test   %bl,%bl
mov    %eax,0x58(%esp)
je     805490a <fchmod@plt+0xb44a>
cmp    $0x1,%esi
jne    805490a <fchmod@plt+0xb44a>
mov    0xa4(%esp),%ebx
test   %ebx,%ebx
jne    805490a <fchmod@plt+0xb44a>
movl   $0x0,0x54(%esp)
lea    0x50(%esp),%edx
test   %cl,%cl
je     80549a0 <fchmod@plt+0xb4e0>
cmpl   $0x1,0x1c(%esp)
jne    80549a0 <fchmod@plt+0xb4e0>
mov    0xac(%esp),%eax
test   %eax,%eax
jne    80549a0 <fchmod@plt+0xb4e0>
movl   $0x0,0x5c(%esp)
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049450 <futimesat@plt>
jmp    805469d <fchmod@plt+0xb1dd>
nop
mov    $0xffffffff,%esi
jmp    805469d <fchmod@plt+0xb1dd>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1c(%esp)
je     80545ad <fchmod@plt+0xb0ed>
call   8049320 <__errno_location@plt>
mov    $0xffffffff,%esi
movl   $0x9,(%eax)
jmp    805469d <fchmod@plt+0xb1dd>
mov    0xac(%esp),%edx
mov    0xa8(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    8054783 <fchmod@plt+0xb2c3>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jne    8054934 <fchmod@plt+0xb474>
xor    %esi,%esi
jmp    805469d <fchmod@plt+0xb1dd>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049320 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8054826 <fchmod@plt+0xb366>
xchg   %ax,%ax
jmp    80545ed <fchmod@plt+0xb12d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8054540 <fchmod@plt+0xb080>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ebx
test   %edx,%edx
je     8054af0 <fchmod@plt+0xb630>
mov    (%edx),%esi
lea    0x20(%esp),%eax
mov    0x4(%edx),%edi
mov    0xc(%edx),%ecx
mov    0x8(%edx),%edx
mov    %esi,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x24(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   8054460 <fchmod@plt+0xafa0>
test   %eax,%eax
mov    %eax,%esi
js     8054baf <fchmod@plt+0xb6ef>
mov    0x8061cf0,%edi
test   %edi,%edi
js     8054a9a <fchmod@plt+0xb5da>
cmp    $0x2,%esi
je     8054b68 <fchmod@plt+0xb6a8>
mov    0x1c(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8048fb0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%edi
jle    8054bb8 <fchmod@plt+0xb6f8>
call   8049320 <__errno_location@plt>
movl   $0x26,(%eax)
test   %esi,%esi
movl   $0xffffffff,0x8061cf0
ff
je     8054b18 <fchmod@plt+0xb658>
cmp    $0x3,%esi
je     8054acd <fchmod@plt+0xb60d>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049420 <__lxstat64@plt>
test   %eax,%eax
jne    8054baf <fchmod@plt+0xb6ef>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     8054b34 <fchmod@plt+0xb674>
lea    0x1c(%esp),%edx
lea    0x30(%esp),%eax
call   8054390 <fchmod@plt+0xaed0>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
je     8054b34 <fchmod@plt+0xb674>
jmp    8054b5c <fchmod@plt+0xb69c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8061cf0,%edx
xor    %eax,%eax
xor    %esi,%esi
movl   $0x0,0x1c(%esp)
test   %edx,%edx
jns    8054a68 <fchmod@plt+0xb5a8>
movl   $0xffffffff,0x8061cf0
ff
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049420 <__lxstat64@plt>
test   %eax,%eax
jne    8054baf <fchmod@plt+0xb6ef>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8054ba4 <fchmod@plt+0xb6e4>
mov    0x1c(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
call   8054540 <fchmod@plt+0xb080>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049420 <__lxstat64@plt>
test   %eax,%eax
jne    8054baf <fchmod@plt+0xb6ef>
mov    0x1c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     8054be0 <fchmod@plt+0xb720>
cmpl   $0x3ffffffe,0xc(%eax)
je     8054bf0 <fchmod@plt+0xb730>
mov    $0x3,%esi
jmp    8054a68 <fchmod@plt+0xb5a8>
call   8049320 <__errno_location@plt>
movl   $0x26,(%eax)
mov    $0xffffffff,%eax
jmp    8054b5c <fchmod@plt+0xb69c>
xchg   %ax,%ax
jne    8054c00 <fchmod@plt+0xb740>
movl   $0x1,0x8061cf4
00
mov    %edi,%eax
movl   $0x1,0x8061cf0
00
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    8054b9a <fchmod@plt+0xb6da>
nop
mov    0x7c(%esp),%edx
mov    0x78(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    8054b9a <fchmod@plt+0xb6da>
call   8049320 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8054bba <fchmod@plt+0xb6fa>
jmp    8054a9a <fchmod@plt+0xb5da>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80491f0 <malloc@plt>
test   %eax,%eax
je     8054c29 <fchmod@plt+0xb769>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8054c24 <fchmod@plt+0xb764>
lea    0x0(%esi),%esi
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8054c69 <fchmod@plt+0xb7a9>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8054c10 <fchmod@plt+0xb750>
call   8051f30 <fchmod@plt+0x8a70>
xchg   %ax,%ax
jmp    8054c10 <fchmod@plt+0xb750>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     8054ca8 <fchmod@plt+0xb7e8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
test   %eax,%eax
je     8054cbb <fchmod@plt+0xb7fb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     8054c90 <fchmod@plt+0xb7d0>
mov    %eax,(%esp)
call   8049040 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     8054ca0 <fchmod@plt+0xb7e0>
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     8054d03 <fchmod@plt+0xb843>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    8054c80 <fchmod@plt+0xb7c0>
call   8051f30 <fchmod@plt+0x8a70>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8054d50 <fchmod@plt+0xb890>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8054d68 <fchmod@plt+0xb8a8>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    8054c80 <fchmod@plt+0xb7c0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    8054d39 <fchmod@plt+0xb879>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    8054d39 <fchmod@plt+0xb879>
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     8054da8 <fchmod@plt+0xb8e8>
cmp    $0xaaaaaaa9,%eax
ja     8054db4 <fchmod@plt+0xb8f4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8054c80 <fchmod@plt+0xb7c0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    8054d90 <fchmod@plt+0xb8d0>
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8054c10 <fchmod@plt+0xb750>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049300 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80494a0 <calloc@plt>
test   %eax,%eax
je     8054e0f <fchmod@plt+0xb94f>
add    $0x1c,%esp
ret
nop
call   8051f30 <fchmod@plt+0x8a70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8054c10 <fchmod@plt+0xb750>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049050 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049280 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8054e20 <fchmod@plt+0xb960>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x805e544,%eax
mov    %eax,(%esp)
call   80490f0 <_IO_getc@plt>
mov    %eax,%edx
and    $0xffffffdf,%eax
cmp    $0x59,%eax
sete   %bl
cmp    $0xffffffff,%edx
je     8054ec5 <fchmod@plt+0xba05>
cmp    $0xa,%edx
jne    8054eb2 <fchmod@plt+0xb9f2>
jmp    8054ec5 <fchmod@plt+0xba05>
cmp    $0xa,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     8054ec5 <fchmod@plt+0xba05>
mov    0x805e544,%edx
mov    %edx,(%esp)
call   80490f0 <_IO_getc@plt>
cmp    $0xffffffff,%eax
jne    8054ea8 <fchmod@plt+0xb9e8>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    8054f30 <fchmod@plt+0xba70>
mov    0x8061cf8,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     8054fd8 <fchmod@plt+0xbb18>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   80492e0 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8054f50 <fchmod@plt+0xba90>
movl   $0x1,0x8061cf8
00
test   %ebx,%ebx
js     8054f27 <fchmod@plt+0xba67>
cmpl   $0xffffffff,0x8061cf8
je     8054f80 <fchmod@plt+0xbac0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80492e0 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049320 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    8054f10 <fchmod@plt+0xba50>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8054ed0 <fchmod@plt+0xba10>
test   %eax,%eax
mov    %eax,%ebx
js     8054f27 <fchmod@plt+0xba67>
movl   $0xffffffff,0x8061cf8
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80492e0 <fcntl@plt>
test   %eax,%eax
js     8054fb4 <fchmod@plt+0xbaf4>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   80492e0 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    8054f27 <fchmod@plt+0xba67>
call   8049320 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049430 <close@plt>
mov    %edi,(%esi)
jmp    8054f27 <fchmod@plt+0xba67>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8054ed0 <fchmod@plt+0xba10>
mov    %eax,%ebx
jmp    8054f1a <fchmod@plt+0xba5a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8055008 <fchmod@plt+0xbb48>
mov    %ebx,(%esp)
call   8049200 <__freading@plt>
test   %eax,%eax
jne    8055018 <fchmod@plt+0xbb58>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048ff0 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     8055008 <fchmod@plt+0xbb48>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8055170 <fchmod@plt+0xbcb0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048ff0 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7fc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x7ec(%esp)
xor    %eax,%eax
lea    0x818(%esp),%eax
mov    0x810(%esp),%ebp
mov    %eax,0xc(%esp)
mov    0x814(%esp),%eax
lea    0x1c(%esp),%edi
mov    %edi,(%esp)
movl   $0x7d0,0x18(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   80552a0 <fchmod@plt+0xbde0>
mov    0x18(%esp),%esi
test   %eax,%eax
mov    %eax,%ebx
je     8055121 <fchmod@plt+0xbc61>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fwrite@plt>
cmp    %eax,%esi
ja     80550f8 <fchmod@plt+0xbc38>
cmp    %edi,%ebx
je     80550d4 <fchmod@plt+0xbc14>
mov    %ebx,(%esp)
call   8049040 <free@plt>
test   %esi,%esi
js     8055116 <fchmod@plt+0xbc56>
mov    0x7ec(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    8055130 <fchmod@plt+0xbc70>
add    $0x7fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %edi,%ebx
mov    $0xffffffff,%esi
je     80550d8 <fchmod@plt+0xbc18>
call   8049320 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%edi
mov    %ebx,(%esp)
call   8049040 <free@plt>
mov    %ebp,(%edi)
jmp    80550d8 <fchmod@plt+0xbc18>
call   8049320 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    %ebp,(%esp)
mov    $0xffffffff,%esi
call   8055200 <fchmod@plt+0xbd40>
jmp    80550d8 <fchmod@plt+0xbc18>
call   80490e0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x10(%edx),%ecx
cmp    %ecx,0x14(%edx)
ja     8055166 <fchmod@plt+0xbca6>
mov    0x8(%edx),%eax
xor    %ecx,%ecx
sub    0x4(%edx),%eax
testl  $0x100,(%edx)
je     8055164 <fchmod@plt+0xbca4>
mov    0x2c(%edx),%ecx
sub    0x24(%edx),%ecx
add    %ecx,%eax
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     80551b0 <fchmod@plt+0xbcf0>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80490a0 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    805518f <fchmod@plt+0xbccf>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    805518f <fchmod@plt+0xbccf>
mov    %ebx,(%esp)
call   8049330 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   80493b0 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     80551f7 <fchmod@plt+0xbd37>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    80551ef <fchmod@plt+0xbd2f>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
orl    $0x20,(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x805e560,%eax
mov    %eax,(%esp)
call   8056e60 <fchmod@plt+0xd9a0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x3c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
fld1
lea    0x27(%esp),%eax
fstpl  0x10(%esp)
movl   $0x805a5b3,0xc(%esp)
movl   $0x5,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <__sprintf_chk@plt>
movzbl 0x28(%esp),%edx
mov    $0x2e,%eax
test   %dl,%dl
cmovne %edx,%eax
mov    0x2c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8055299 <fchmod@plt+0xbdd9>
add    $0x3c,%esp
ret
call   80490e0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4e0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   8057760 <fchmod@plt+0xe2a0>
test   %eax,%eax
js     8056340 <fchmod@plt+0xce80>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8057680 <fchmod@plt+0xe1c0>
test   %eax,%eax
js     8056520 <fchmod@plt+0xd060>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     80554d8 <fchmod@plt+0xc018>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     80554d8 <fchmod@plt+0xc018>
cmp    $0xf9f,%edx
ja     8055f98 <fchmod@plt+0xcad8>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4e4(%ebp)
00
test   %eax,%eax
je     8055fcb <fchmod@plt+0xcb0b>
mov    -0x4e0(%ebp),%eax
mov    (%eax),%edi
mov    -0x418(%ebp),%eax
mov    %ebx,%ecx
xor    %esi,%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4bc(%ebp),%edx
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    %edx,%ebx
mov    (%eax),%edi
cmp    %ecx,%edi
je     8055c0b <fchmod@plt+0xc74b>
sub    %ecx,%edi
mov    %edi,%eax
add    %esi,%eax
mov    %eax,%edx
mov    $0xffffffff,%eax
cmovae %edx,%eax
mov    -0x4b4(%ebp),%edx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%edx
jae    8055c20 <fchmod@plt+0xc760>
test   %edx,%edx
je     8055ae0 <fchmod@plt+0xc620>
js     8056500 <fchmod@plt+0xd040>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%edx
cmp    %edx,%eax
cmovb  %edx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     8056500 <fchmod@plt+0xd040>
cmp    -0x4bc(%ebp),%ebx
sete   -0x4d8(%ebp)
test   %ebx,%ebx
je     8055425 <fchmod@plt+0xbf65>
cmpb   $0x0,-0x4d8(%ebp)
je     8055af0 <fchmod@plt+0xc630>
mov    -0x4b4(%ebp),%eax
mov    %ecx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    -0x4c4(%ebp),%ecx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     8056500 <fchmod@plt+0xd040>
test   %esi,%esi
jne    8055ce0 <fchmod@plt+0xc820>
add    -0x4b0(%ebp),%esi
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   8049050 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     8056568 <fchmod@plt+0xd0a8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     8055b20 <fchmod@plt+0xc660>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     8055f68 <fchmod@plt+0xcaa8>
cmp    $0x6e,%dl
je     8055cb8 <fchmod@plt+0xc7f8>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    8055540 <fchmod@plt+0xc080>
cmp    $0x41,%dl
je     8055540 <fchmod@plt+0xc080>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    8055551 <fchmod@plt+0xc091>
lea    0x0(%esi,%eiz,1),%esi
call   8049320 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     80554fb <fchmod@plt+0xc03b>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8055513 <fchmod@plt+0xc053>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    8056e2b <fchmod@plt+0xd96b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     8056058 <fchmod@plt+0xcb98>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%edi
mov    0x8(%eax),%eax
add    $0x1,%edi
movb   $0x25,-0x1(%edi)
test   $0x1,%al
je     8055578 <fchmod@plt+0xc0b8>
mov    -0x4c0(%ebp),%esi
lea    0x2(%esi),%edi
movb   $0x27,0x1(%esi)
test   $0x2,%al
je     8055582 <fchmod@plt+0xc0c2>
movb   $0x2d,(%edi)
add    $0x1,%edi
test   $0x4,%al
je     805558c <fchmod@plt+0xc0cc>
movb   $0x2b,(%edi)
add    $0x1,%edi
test   $0x8,%al
je     8055596 <fchmod@plt+0xc0d6>
movb   $0x20,(%edi)
add    $0x1,%edi
test   $0x10,%al
je     80555a0 <fchmod@plt+0xc0e0>
movb   $0x23,(%edi)
add    $0x1,%edi
test   $0x40,%al
je     80555aa <fchmod@plt+0xc0ea>
movb   $0x49,(%edi)
add    $0x1,%edi
test   $0x20,%al
je     80555b4 <fchmod@plt+0xc0f4>
movb   $0x30,(%edi)
add    $0x1,%edi
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%ebx
cmp    %ebx,%eax
je     80555d8 <fchmod@plt+0xc118>
sub    %eax,%ebx
mov    %edi,(%esp)
add    %ebx,%edi
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    -0x4ac(%ebp),%ecx
mov    0x18(%ecx),%eax
mov    0x1c(%ecx),%ebx
cmp    %ebx,%eax
je     80555fc <fchmod@plt+0xc13c>
sub    %eax,%ebx
mov    %edi,(%esp)
add    %ebx,%edi
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     8055622 <fchmod@plt+0xc162>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     8055d28 <fchmod@plt+0xc868>
movb   $0x6c,(%edi)
add    $0x1,%edi
mov    -0x4ac(%ebp),%esi
movzbl 0x24(%esi),%eax
movb   $0x0,0x1(%edi)
mov    %al,(%edi)
mov    0x14(%esi),%eax
cmp    $0xffffffff,%eax
je     8055f90 <fchmod@plt+0xcad0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    8055f68 <fchmod@plt+0xcaa8>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     8055f80 <fchmod@plt+0xcac0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    8055f68 <fchmod@plt+0xcaa8>
mov    0x4(%eax),%eax
lea    0x1(%edx),%ecx
mov    %ecx,-0x4dc(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%esi
mov    %esi,%eax
add    $0x2,%eax
cmp    %eax,%esi
mov    %eax,%ecx
mov    %eax,-0x4f8(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    8055787 <fchmod@plt+0xc2c7>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     8055712 <fchmod@plt+0xc252>
js     8056e30 <fchmod@plt+0xd970>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    8055728 <fchmod@plt+0xc268>
call   8049320 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    8056758 <fchmod@plt+0xd298>
mov    -0x4e4(%ebp),%eax
test   %eax,%eax
je     80554d8 <fchmod@plt+0xc018>
mov    %eax,(%esp)
call   8049040 <free@plt>
jmp    80554e3 <fchmod@plt+0xc023>
mov    -0x4f8(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     80556de <fchmod@plt+0xc21e>
mov    $0xc,%eax
lea    0x0(%esi),%esi
mov    -0x4f8(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     8055761 <fchmod@plt+0xc2a1>
test   %bl,%bl
je     8055fd8 <fchmod@plt+0xcb18>
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8056028 <fchmod@plt+0xcb68>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%ecx
mov    -0x4b8(%ebp),%ebx
movb   $0x0,(%ecx,%ebx,1)
call   8049320 <__errno_location@plt>
mov    -0x4b4(%ebp),%esi
mov    %edi,-0x4b4(%ebp)
mov    %ebx,%edi
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4e8(%ebp)
mov    %esi,%ebx
mov    $0x7fffffff,%eax
sub    %edi,%ebx
cmovs  %eax,%ebx
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     8055f68 <fchmod@plt+0xcaa8>
jmp    *0x805a5bc(,%eax,4)
mov    -0x4ac(%ebp),%eax
mov    -0x4dc(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     8055c58 <fchmod@plt+0xc798>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    8055a00 <fchmod@plt+0xc540>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     8055a44 <fchmod@plt+0xc584>
cmp    %edx,%ebx
jbe    8055891 <fchmod@plt+0xc3d1>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%edi,1)
jne    8055f68 <fchmod@plt+0xcaa8>
cmp    %edx,%eax
jle    805589d <fchmod@plt+0xc3dd>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%ebx
ja     8056730 <fchmod@plt+0xd270>
cmp    $0x7fffffff,%ebx
je     8056780 <fchmod@plt+0xd2c0>
test   %esi,%esi
mov    $0xffffffff,%eax
lea    (%esi,%esi,1),%ecx
cmovs  %eax,%ecx
add    -0x4f8(%ebp),%edx
cmp    %edx,%edi
ja     80558d2 <fchmod@plt+0xc412>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%esi
jae    80557b8 <fchmod@plt+0xc2f8>
test   %esi,%esi
je     8055ca8 <fchmod@plt+0xc7e8>
js     80556e9 <fchmod@plt+0xc229>
add    %esi,%esi
cmp    %eax,%esi
cmovb  %eax,%esi
cmp    $0xffffffff,%esi
je     80556e9 <fchmod@plt+0xc229>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     80559e8 <fchmod@plt+0xc528>
test   %dl,%dl
jne    80559e8 <fchmod@plt+0xc528>
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%ebx
test   %ebx,%ebx
je     80556e9 <fchmod@plt+0xc229>
test   %dl,%dl
jne    8055ff8 <fchmod@plt+0xcb38>
mov    %ebx,-0x4b0(%ebp)
jmp    80557b8 <fchmod@plt+0xc2f8>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4dc(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     8055f18 <fchmod@plt+0xca58>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    8056358 <fchmod@plt+0xce98>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80491f0 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%ebx
jmp    8055939 <fchmod@plt+0xc479>
lea    0x0(%esi),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x4(%esp)
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
jns    805587b <fchmod@plt+0xc3bb>
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    8055d18 <fchmod@plt+0xc858>
test   %eax,%eax
jns    8055895 <fchmod@plt+0xc3d5>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    8056493 <fchmod@plt+0xcfd3>
mov    -0x4e4(%ebp),%eax
test   %eax,%eax
je     8055a84 <fchmod@plt+0xc5c4>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     8055a9c <fchmod@plt+0xc5dc>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8055ab4 <fchmod@plt+0xc5f4>
mov    %eax,(%esp)
call   8049040 <free@plt>
test   %ebx,%ebx
jne    8055ad1 <fchmod@plt+0xc611>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    8055521 <fchmod@plt+0xc061>
movl   $0xc,-0x4b4(%ebp)
00
jmp    80553e7 <fchmod@plt+0xbf27>
nop
mov    -0x4b4(%ebp),%eax
mov    %ebx,(%esp)
mov    %ecx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   80491e0 <realloc@plt>
mov    -0x4c4(%ebp),%ecx
mov    %eax,-0x4b0(%ebp)
jmp    8055445 <fchmod@plt+0xbf85>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    8055f68 <fchmod@plt+0xcaa8>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%esi
cmp    %esi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%esi
cmp    %esi,-0x4b4(%ebp)
jae    8055bd2 <fchmod@plt+0xc712>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    8055ee8 <fchmod@plt+0xca28>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %esi,%eax
cmovb  %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%edi
cmp    %edi,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     8055f70 <fchmod@plt+0xcab0>
test   %bl,%bl
jne    8055f70 <fchmod@plt+0xcab0>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8056398 <fchmod@plt+0xced8>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    %eax,%ebx
movb   $0x25,(%eax,%edi,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%ecx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%edi
cmp    %ecx,%edi
jne    80553af <fchmod@plt+0xbeef>
mov    %esi,-0x4b8(%ebp)
mov    %ebx,-0x4b0(%ebp)
jmp    8055471 <fchmod@plt+0xbfb1>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,-0x4b0(%ebp)
jmp    805545b <fchmod@plt+0xbf9b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4dc(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    8055814 <fchmod@plt+0xc354>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%esi
jmp    80558ea <fchmod@plt+0xc42a>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%edi
lea    -0x12(%edi),%edx
cmp    $0x4,%edx
ja     8055f68 <fchmod@plt+0xcaa8>
mov    0x4(%eax),%eax
jmp    *0x805a604(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     805545b <fchmod@plt+0xbf9b>
mov    -0x4b0(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ecx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8049050 <memcpy@plt>
mov    -0x4d8(%ebp),%ecx
jmp    805545b <fchmod@plt+0xbf9b>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    80557b8 <fchmod@plt+0xc2f8>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    8056348 <fchmod@plt+0xce88>
test   $0xc,%al
je     8055622 <fchmod@plt+0xc162>
movb   $0x6c,(%edi)
add    $0x1,%edi
jmp    805561c <fchmod@plt+0xc15c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4dc(%ebp),%eax
cmp    $0x1,%eax
je     80566e0 <fchmod@plt+0xd220>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    8056458 <fchmod@plt+0xcf98>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4dc(%ebp),%eax
cmp    $0x1,%eax
je     8056690 <fchmod@plt+0xd1d0>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    8056418 <fchmod@plt+0xcf58>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4dc(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    8055814 <fchmod@plt+0xc354>
jmp    8055c58 <fchmod@plt+0xc798>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4dc(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
jne    8055814 <fchmod@plt+0xc354>
jmp    8055c58 <fchmod@plt+0xc798>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4dc(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    8055814 <fchmod@plt+0xc354>
jmp    8055c58 <fchmod@plt+0xc798>
lea    0x0(%esi),%esi
js     80556de <fchmod@plt+0xc21e>
shll   -0x4b4(%ebp)
jmp    8055b61 <fchmod@plt+0xc6a1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    %edi,(%eax)
mov    %edi,%esi
mov    -0x4b0(%ebp),%ebx
jmp    8055be4 <fchmod@plt+0xc724>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
nop
call   80493f0 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    %eax,%edi
jmp    8055bb6 <fchmod@plt+0xc6f6>
nop
mov    %edx,-0x4dc(%ebp)
jmp    8055695 <fchmod@plt+0xc1d5>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    805565e <fchmod@plt+0xc19e>
nop
cmp    $0xffffffff,%edx
je     80554d8 <fchmod@plt+0xc018>
mov    %edx,(%esp)
call   80491f0 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     80554d8 <fchmod@plt+0xc018>
mov    %eax,-0x4e4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    805536f <fchmod@plt+0xbeaf>
xor    %edi,%edi
jmp    8055377 <fchmod@plt+0xbeb7>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
mov    %eax,%esi
jmp    805576b <fchmod@plt+0xc2ab>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8055949 <fchmod@plt+0xc489>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    %ebx,-0x4b0(%ebp)
jmp    80557b8 <fchmod@plt+0xc2f8>
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8055781 <fchmod@plt+0xc2c1>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    8055787 <fchmod@plt+0xc2c7>
nop
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   8057620 <fchmod@plt+0xe160>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    80560a8 <fchmod@plt+0xcbe8>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     8056083 <fchmod@plt+0xcbc3>
je     80560aa <fchmod@plt+0xcbea>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    8055551 <fchmod@plt+0xc091>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%esi
mov    0xc(%esi),%eax
mov    0x10(%esi),%ebx
mov    0x8(%esi),%edi
cmp    %ebx,%eax
mov    %edi,-0x4c4(%ebp)
je     8056949 <fchmod@plt+0xd489>
mov    -0x4ac(%ebp),%edi
mov    0x14(%edi),%edx
cmp    $0xffffffff,%edx
je     80564b8 <fchmod@plt+0xcff8>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    8055f68 <fchmod@plt+0xcaa8>
mov    0x4(%edx),%edi
movl   $0x1,-0x4dc(%ebp)
00
test   %edi,%edi
js     80569d4 <fchmod@plt+0xd514>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     8056889 <fchmod@plt+0xd3c9>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     8056907 <fchmod@plt+0xd447>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    8055f68 <fchmod@plt+0xcaa8>
mov    0x4(%eax),%esi
test   %esi,%esi
js     8056889 <fchmod@plt+0xd3c9>
test   %esi,%esi
jne    80568bb <fchmod@plt+0xd3fb>
xor    %esi,%esi
mov    $0xc,%eax
cmp    %eax,%edi
jbe    8056e4a <fchmod@plt+0xd98a>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     80556de <fchmod@plt+0xc21e>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%ecx
ja     805695a <fchmod@plt+0xd49a>
mov    -0x4ac(%ebp),%eax
mov    %ecx,-0x4e8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4f8(%ebp)
call   8057620 <fchmod@plt+0xe160>
mov    -0x4e8(%ebp),%ecx
test   %eax,%eax
fldt   -0x4f8(%ebp)
je     80567e8 <fchmod@plt+0xd328>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4f8(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
ja     80568da <fchmod@plt+0xd41a>
movb   $0x4e,(%ecx)
lea    0x3(%ecx),%esi
xor    %edx,%edx
movb   $0x41,0x1(%ecx)
movb   $0x4e,0x2(%ecx)
mov    -0x4dc(%ebp),%eax
mov    %esi,%ebx
sub    %ecx,%ebx
test   %eax,%eax
je     805622d <fchmod@plt+0xcd6d>
cmp    %ebx,%edi
jbe    805622d <fchmod@plt+0xcd6d>
mov    %ecx,%eax
sub    %esi,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%esi,%edi,1),%ebx
je     8056b2b <fchmod@plt+0xd66b>
test   %edi,%edi
je     805622b <fchmod@plt+0xcd6b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmp    %esi,%ebx
movb   $0x20,-0x1(%esi)
jne    8056220 <fchmod@plt+0xcd60>
sub    %ecx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    8055f68 <fchmod@plt+0xcaa8>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     80568ad <fchmod@plt+0xd3ed>
mov    -0x4b8(%ebp),%esi
mov    $0xffffffff,%eax
add    %ebx,%esi
cmovae %esi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    80562fb <fchmod@plt+0xce3b>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     805699a <fchmod@plt+0xd4da>
js     80556de <fchmod@plt+0xc21e>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%edi
cmp    %edi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     80562c3 <fchmod@plt+0xce03>
cmpb   $0x0,-0x4d8(%ebp)
je     80569a9 <fchmod@plt+0xd4e9>
mov    -0x4b4(%ebp),%eax
mov    %ecx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    -0x4c4(%ebp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8056b80 <fchmod@plt+0xd6c0>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %ecx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,-0x4b8(%ebp)
call   8049050 <memcpy@plt>
mov    -0x4b8(%ebp),%ecx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%ecx
je     8056335 <fchmod@plt+0xce75>
mov    %ecx,(%esp)
call   8049040 <free@plt>
mov    -0x4b0(%ebp),%ebx
jmp    8055be4 <fchmod@plt+0xc724>
xor    %eax,%eax
jmp    8055521 <fchmod@plt+0xc061>
nop
movb   $0x4c,(%edi)
add    $0x1,%edi
jmp    8055622 <fchmod@plt+0xc162>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
nop
test   %bl,%bl
je     8055bcc <fchmod@plt+0xc70c>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    8055bd2 <fchmod@plt+0xc712>
nop
mov    -0x4b8(%ebp),%edi
movl   $0x0,0x4(%eax)
mov    %edi,(%eax)
mov    %edi,%esi
mov    -0x4b0(%ebp),%ebx
jmp    8055be4 <fchmod@plt+0xc724>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%esi
mov    -0x4b0(%ebp),%ebx
mov    %esi,%ecx
mov    %cl,(%eax)
jmp    8055be4 <fchmod@plt+0xc724>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%esi
mov    -0x4b0(%ebp),%ebx
mov    %si,(%eax)
jmp    8055be4 <fchmod@plt+0xc724>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     8055a72 <fchmod@plt+0xc5b2>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049040 <free@plt>
jmp    8055a72 <fchmod@plt+0xc5b2>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     80564dc <fchmod@plt+0xd01c>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    80564c0 <fchmod@plt+0xd000>
movl   $0x1,-0x4dc(%ebp)
00
jmp    8056100 <fchmod@plt+0xcc40>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,-0x4ac(%ebp)
call   8049320 <__errno_location@plt>
mov    %ebx,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    80556e9 <fchmod@plt+0xc229>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     8056538 <fchmod@plt+0xd078>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8056550 <fchmod@plt+0xd090>
mov    %eax,(%esp)
call   8049040 <free@plt>
call   8049320 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    8055521 <fchmod@plt+0xc061>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%esi
mov    $0xffffffff,%eax
mov    -0x4b4(%ebp),%edi
mov    %eax,%edx
lea    0x1(%esi),%ebx
cmp    %ebx,%esi
cmovbe %ebx,%edx
cmp    %edx,%edi
jae    8056612 <fchmod@plt+0xd152>
test   %edi,%edi
je     80569e2 <fchmod@plt+0xd522>
lea    (%edi,%edi,1),%edx
test   %edi,%edi
cmovns %edx,%eax
mov    %eax,%edi
cmp    %ebx,-0x4b8(%ebp)
mov    $0xffffffff,%eax
cmovbe %ebx,%eax
cmp    %eax,%edi
jae    80565bd <fchmod@plt+0xd0fd>
cmp    %ebx,-0x4b8(%ebp)
ja     80556de <fchmod@plt+0xc21e>
mov    %ebx,%edi
cmp    $0xffffffff,%edi
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
je     80565ec <fchmod@plt+0xd12c>
cmpb   $0x0,-0x4ac(%ebp)
je     80569ec <fchmod@plt+0xd52c>
mov    %edi,(%esp)
call   80491f0 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     80556de <fchmod@plt+0xc21e>
mov    -0x4b8(%ebp),%edx
test   %edx,%edx
jne    8056bd5 <fchmod@plt+0xd715>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%esi
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%esi,1)
je     8056632 <fchmod@plt+0xd172>
cmp    %ebx,%edi
ja     8056a05 <fchmod@plt+0xd545>
mov    -0x4e4(%ebp),%eax
test   %eax,%eax
je     8056644 <fchmod@plt+0xd184>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805665c <fchmod@plt+0xd19c>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8056674 <fchmod@plt+0xd1b4>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x4e0(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    8055521 <fchmod@plt+0xc061>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %edi,%eax
mov    %eax,(%esp)
call   8048fa0 <__snprintf_chk@plt>
jmp    805586d <fchmod@plt+0xc3ad>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%esi
mov    -0x4e8(%ebp),%edi
add    %edx,%esi
mov    %edi,(%eax)
jmp    8056335 <fchmod@plt+0xce75>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     80556f7 <fchmod@plt+0xc237>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049040 <free@plt>
jmp    80556f7 <fchmod@plt+0xc237>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    8056a23 <fchmod@plt+0xd563>
mov    -0x4e4(%ebp),%eax
test   %eax,%eax
je     80567a0 <fchmod@plt+0xd2e0>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     80567b8 <fchmod@plt+0xd2f8>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     80567d0 <fchmod@plt+0xd310>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    8055521 <fchmod@plt+0xc061>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     80568ef <fchmod@plt+0xd42f>
fchs
lea    0x1(%ecx),%edx
movb   $0x2d,(%ecx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    8056a48 <fchmod@plt+0xd588>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     8055f68 <fchmod@plt+0xcaa8>
jne    8055f68 <fchmod@plt+0xcaa8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4e8(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
ja     8056bc0 <fchmod@plt+0xd700>
movb   $0x49,(%edx)
lea    0x3(%edx),%esi
movb   $0x4e,0x1(%edx)
movb   $0x46,0x2(%edx)
xor    %edx,%edx
xchg   %ax,%ax
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    80561ed <fchmod@plt+0xcd2d>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x41,%al
je     8056145 <fchmod@plt+0xcc85>
mov    $0x6,%esi
mov    $0x12,%eax
jmp    805614c <fchmod@plt+0xcc8c>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%esi
jmp    80562fb <fchmod@plt+0xce3b>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    805614c <fchmod@plt+0xcc8c>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    805615f <fchmod@plt+0xcc9f>
movb   $0x6e,(%ecx)
lea    0x3(%ecx),%esi
xor    %edx,%edx
movb   $0x61,0x1(%ecx)
movb   $0x6e,0x2(%ecx)
jmp    80561ed <fchmod@plt+0xcd2d>
testb  $0x4,-0x4c4(%ebp)
je     8056980 <fchmod@plt+0xd4c0>
lea    0x1(%ecx),%edx
movb   $0x2b,(%ecx)
jmp    8056821 <fchmod@plt+0xd361>
add    $0x1,%edx
cmp    %edx,%ebx
je     8056145 <fchmod@plt+0xcc85>
xor    %esi,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     8056934 <fchmod@plt+0xd474>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    8056918 <fchmod@plt+0xd458>
jmp    805613d <fchmod@plt+0xcc7d>
xor    %edi,%edi
movl   $0x0,-0x4dc(%ebp)
00
jmp    8056100 <fchmod@plt+0xcc40>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     80556de <fchmod@plt+0xc21e>
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
jne    8056181 <fchmod@plt+0xccc1>
jmp    80556de <fchmod@plt+0xc21e>
testb  $0x8,-0x4c4(%ebp)
mov    %ecx,%edx
je     8056821 <fchmod@plt+0xd361>
lea    0x1(%ecx),%edx
movb   $0x20,(%ecx)
jmp    8056821 <fchmod@plt+0xd361>
movl   $0xc,-0x4b4(%ebp)
00
jmp    8056283 <fchmod@plt+0xcdc3>
mov    -0x4b4(%ebp),%eax
mov    %ecx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
mov    -0x4c4(%ebp),%ecx
mov    %eax,%edi
jmp    80562df <fchmod@plt+0xce1f>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    8056100 <fchmod@plt+0xcc40>
mov    $0xc,%edi
jmp    805659d <fchmod@plt+0xd0dd>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
mov    %eax,%esi
jmp    80565f6 <fchmod@plt+0xd136>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    8056632 <fchmod@plt+0xd172>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     805678e <fchmod@plt+0xd2ce>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049040 <free@plt>
jmp    805678e <fchmod@plt+0xd2ce>
fstp   %st(0)
jp     8055f68 <fchmod@plt+0xcaa8>
jne    8055f68 <fchmod@plt+0xcaa8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    8056ab8 <fchmod@plt+0xd5f8>
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%edx)
jne    8056cb8 <fchmod@plt+0xd7f8>
test   %esi,%esi
je     8056c09 <fchmod@plt+0xd749>
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%edx),%ebx
mov    %edx,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4e8(%ebp),%edx
mov    -0x4fc(%ebp),%ecx
mov    %al,0x1(%edx)
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    8056aa8 <fchmod@plt+0xd5e8>
jmp    8056870 <fchmod@plt+0xd3b0>
cmp    $0x45,%al
jne    8056c11 <fchmod@plt+0xd751>
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%edx)
jne    8056d61 <fchmod@plt+0xd8a1>
test   %esi,%esi
lea    0x1(%edx),%eax
je     8056b0b <fchmod@plt+0xd64b>
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%edx),%ebx
mov    %edx,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4e8(%ebp),%edx
mov    -0x4fc(%ebp),%ecx
mov    %al,0x1(%edx)
lea    (%ebx,%esi,1),%eax
lea    0x0(%esi),%esi
add    $0x1,%ebx
cmp    %eax,%ebx
movb   $0x30,-0x1(%ebx)
jne    8056b00 <fchmod@plt+0xd640>
mov    -0x4ac(%ebp),%ebx
lea    0x4(%eax),%esi
movzbl 0x24(%ebx),%ebx
movb   $0x2b,0x1(%eax)
movb   $0x30,0x2(%eax)
movb   $0x30,0x3(%eax)
mov    %bl,(%eax)
jmp    8056870 <fchmod@plt+0xd3b0>
testb  $0x20,-0x4c4(%ebp)
je     8056c7d <fchmod@plt+0xd7bd>
test   %edx,%edx
je     8056c7d <fchmod@plt+0xd7bd>
cmp    %esi,%edx
jae    8056b65 <fchmod@plt+0xd6a5>
mov    %ebx,%eax
mov    %ecx,-0x4c4(%ebp)
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%esi
movzbl (%esi),%ecx
sub    $0x1,%eax
cmp    %edx,%esi
mov    %cl,(%eax)
jne    8056b50 <fchmod@plt+0xd690>
mov    -0x4c4(%ebp),%ecx
test   %edi,%edi
lea    (%esi,%edi,1),%eax
je     805622b <fchmod@plt+0xcd6b>
add    $0x1,%esi
cmp    %eax,%esi
movb   $0x30,-0x1(%esi)
jne    8056b70 <fchmod@plt+0xd6b0>
jmp    805622b <fchmod@plt+0xcd6b>
cmpb   $0x0,-0x4d8(%ebp)
je     80562f5 <fchmod@plt+0xce35>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %ecx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    -0x4d8(%ebp),%ecx
mov    %edi,-0x4b0(%ebp)
jmp    80562fb <fchmod@plt+0xce3b>
movb   $0x69,(%edx)
lea    0x3(%edx),%esi
movb   $0x6e,0x1(%edx)
movb   $0x66,0x2(%edx)
xor    %edx,%edx
jmp    8056870 <fchmod@plt+0xd3b0>
cmpb   $0x0,-0x4ac(%ebp)
je     805660c <fchmod@plt+0xd14c>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    8056612 <fchmod@plt+0xd152>
lea    0x1(%edx),%esi
jmp    8056870 <fchmod@plt+0xd3b0>
cmp    $0x47,%al
jne    8056cea <fchmod@plt+0xd82a>
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%edx)
je     8056c09 <fchmod@plt+0xd749>
test   %esi,%esi
je     8056d93 <fchmod@plt+0xd8d3>
lea    -0x1(%esi),%eax
lea    0x2(%edx),%ebx
mov    %ecx,-0x500(%ebp)
mov    %ebx,%esi
mov    %edx,-0x4fc(%ebp)
mov    %eax,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4fc(%ebp),%edx
mov    -0x500(%ebp),%ecx
mov    %al,0x1(%edx)
mov    -0x4e8(%ebp),%eax
test   %eax,%eax
je     8056870 <fchmod@plt+0xd3b0>
add    %ebx,%eax
mov    %eax,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    8056c6d <fchmod@plt+0xd7ad>
jmp    8056870 <fchmod@plt+0xd3b0>
cmp    %esi,%ecx
mov    %ebx,%edx
mov    %esi,%eax
jae    8056c9b <fchmod@plt+0xd7db>
mov    %ebx,%esi
nop
sub    $0x1,%eax
movzbl (%eax),%ebx
sub    $0x1,%edx
cmp    %ecx,%eax
mov    %bl,(%edx)
jne    8056c88 <fchmod@plt+0xd7c8>
mov    %esi,%ebx
mov    %ecx,%esi
test   %edi,%edi
lea    (%esi,%edi,1),%eax
je     805622b <fchmod@plt+0xcd6b>
xchg   %ax,%ax
add    $0x1,%esi
cmp    %eax,%esi
movb   $0x20,-0x1(%esi)
jne    8056ca8 <fchmod@plt+0xd7e8>
jmp    805622b <fchmod@plt+0xcd6b>
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%edx),%ebx
mov    %edx,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4e8(%ebp),%edx
test   %esi,%esi
mov    -0x4fc(%ebp),%ecx
mov    %al,0x1(%edx)
jne    8056aa2 <fchmod@plt+0xd5e2>
mov    %ebx,%esi
jmp    8056870 <fchmod@plt+0xd3b0>
cmp    $0x41,%al
jne    8055f68 <fchmod@plt+0xcaa8>
lea    0x2(%edx),%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%edx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%edx)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%edx)
jne    8056df7 <fchmod@plt+0xd937>
test   %esi,%esi
jne    8056dbb <fchmod@plt+0xd8fb>
lea    0x3(%edx),%eax
mov    %eax,-0x4e8(%ebp)
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ebx
mov    -0x4fc(%ebp),%edx
movzbl 0x24(%eax),%eax
lea    0x3(%ebx),%esi
movb   $0x2b,0x1(%ebx)
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0xf,%eax
mov    %al,(%ebx)
jmp    8056870 <fchmod@plt+0xd3b0>
lea    0x2(%edx),%ebx
mov    %ecx,-0x4fc(%ebp)
mov    %edx,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4e8(%ebp),%edx
test   %esi,%esi
mov    -0x4fc(%ebp),%ecx
mov    %al,0x1(%edx)
mov    %ebx,%eax
jne    8056afa <fchmod@plt+0xd63a>
jmp    8056b0b <fchmod@plt+0xd64b>
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%edx),%esi
mov    %edx,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4e8(%ebp),%edx
mov    -0x4fc(%ebp),%ecx
mov    %al,0x1(%edx)
jmp    8056870 <fchmod@plt+0xd3b0>
mov    %ecx,-0x500(%ebp)
lea    0x4(%edx),%ebx
mov    %edx,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x4e8(%ebp),%edx
mov    -0x500(%ebp),%ecx
mov    %al,0x3(%edx)
lea    (%ebx,%esi,1),%eax
mov    %eax,-0x4e8(%ebp)
add    $0x1,%ebx
cmp    %eax,%ebx
movb   $0x30,-0x1(%ebx)
jne    8056de7 <fchmod@plt+0xd927>
jmp    8056d30 <fchmod@plt+0xd870>
lea    0x4(%edx),%eax
mov    %ecx,-0x504(%ebp)
mov    %eax,%ebx
mov    %edx,-0x500(%ebp)
mov    %eax,-0x4e8(%ebp)
call   8055240 <fchmod@plt+0xbd80>
mov    -0x500(%ebp),%edx
test   %esi,%esi
mov    -0x504(%ebp),%ecx
mov    %al,0x3(%edx)
jne    8056dde <fchmod@plt+0xd91e>
jmp    8056d30 <fchmod@plt+0xd870>
call   80490e0 <__stack_chk_fail@plt>
mov    -0x4f8(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     80556de <fchmod@plt+0xc21e>
or     $0xffffffff,%eax
jmp    8055728 <fchmod@plt+0xc268>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    805615f <fchmod@plt+0xcc9f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7fc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x7ec(%esp)
xor    %eax,%eax
mov    0x818(%esp),%eax
lea    0x1c(%esp),%edi
mov    %edi,(%esp)
mov    0x810(%esp),%ebp
movl   $0x7d0,0x18(%esp)
mov    %eax,0xc(%esp)
mov    0x814(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   80552a0 <fchmod@plt+0xbde0>
mov    0x18(%esp),%esi
test   %eax,%eax
mov    %eax,%ebx
je     8056f31 <fchmod@plt+0xda71>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fwrite@plt>
cmp    %eax,%esi
ja     8056f08 <fchmod@plt+0xda48>
cmp    %edi,%ebx
je     8056ee4 <fchmod@plt+0xda24>
mov    %ebx,(%esp)
call   8049040 <free@plt>
test   %esi,%esi
js     8056f26 <fchmod@plt+0xda66>
mov    0x7ec(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    8056f40 <fchmod@plt+0xda80>
add    $0x7fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %edi,%ebx
mov    $0xffffffff,%esi
je     8056ee8 <fchmod@plt+0xda28>
call   8049320 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%edi
mov    %ebx,(%esp)
call   8049040 <free@plt>
mov    %ebp,(%edi)
jmp    8056ee8 <fchmod@plt+0xda28>
call   8049320 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    %ebp,(%esp)
mov    $0xffffffff,%esi
call   8055200 <fchmod@plt+0xbd40>
jmp    8056ee8 <fchmod@plt+0xda28>
call   80490e0 <__stack_chk_fail@plt>
xchg   %ax,%ax
nop
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%esi
mov    0x8061d14,%ebp
mov    0x8061d04,%edi
mov    %edi,%edx
sub    $0x7efa,%edx
jae    8056f69 <fchmod@plt+0xdaa9>
sub    %edx,%edx
add    $0x8096d82,%edi
mov    0x8061d18,%ebx
mov    -0x3(%ebx,%edi,1),%ax
mov    -0x2(%edi),%cx
cmp    0x8061d0c,%ebx
jb     8056faa <fchmod@plt+0xdaea>
shr    $0x2,%ebp
jmp    8056faa <fchmod@plt+0xdaea>
nop
mov    -0x3(%ebx,%edi,1),%ax
mov    -0x2(%edi),%cx
and    $0x7fff,%esi
mov    0x8062140(%esi,%esi,1),%si
cmp    %edx,%esi
jbe    8056ffa <fchmod@plt+0xdb3a>
dec    %ebp
je     8056ffa <fchmod@plt+0xdb3a>
cmp    0x8096d7f(%ebx,%esi,1),%ax
jne    8056f95 <fchmod@plt+0xdad5>
cmp    0x8096d80(%esi),%cx
jne    8056f95 <fchmod@plt+0xdad5>
lea    0x8096d82(%esi),%esi
mov    %edi,%eax
mov    $0x80,%ecx
repz cmpsw %es:(%edi),%ds:(%esi)
je     8057001 <fchmod@plt+0xdb41>
mov    -0x2(%edi),%cl
sub    -0x2(%esi),%cl
xchg   %eax,%edi
sub    %edi,%eax
sub    %eax,%esi
sub    $0x8096d82,%esi
sub    $0x1,%cl
adc    $0x0,%eax
cmp    %ebx,%eax
jle    8056f8c <fchmod@plt+0xdacc>
mov    %esi,0x8061d1c
mov    %eax,%ebx
cmp    0x8061d10,%eax
jl     8056f8c <fchmod@plt+0xdacc>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpsb  %es:(%edi),%ds:(%esi)
jmp    8056fcf <fchmod@plt+0xdb0f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x18(%esp),%ecx
cmp    %ecx,%ebx
jne    8057032 <fchmod@plt+0xdb72>
jmp    8057065 <fchmod@plt+0xdba5>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ecx
cmp    %dl,%al
jne    8057056 <fchmod@plt+0xdb96>
movzbl (%ebx),%eax
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
movzbl (%ecx),%edx
lea    0x20(%eax),%esi
cmova  %eax,%esi
mov    %esi,%eax
lea    -0x41(%edx),%ebp
cmp    $0x19,%ebp
lea    0x20(%edx),%edi
cmovbe %edi,%edx
test   %al,%al
jne    8057028 <fchmod@plt+0xdb68>
mov    %esi,%eax
movzbl %dl,%edx
movzbl %al,%eax
pop    %ebx
sub    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049190 <__fpending@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049080 <ferror@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8057580 <fchmod@plt+0xe0c0>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    80570b8 <fchmod@plt+0xdbf8>
test   %dl,%dl
je     80570ac <fchmod@plt+0xdbec>
test   %edi,%edi
je     80570d8 <fchmod@plt+0xdc18>
mov    $0xffffffff,%ebx
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    80570ac <fchmod@plt+0xdbec>
call   8049320 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049320 <__errno_location@plt>
cmpl   $0x9,(%eax)
je     80570ac <fchmod@plt+0xdbec>
mov    $0xffffffff,%ebx
jmp    80570ac <fchmod@plt+0xdbec>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049460 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8057116 <fchmod@plt+0xdc56>
mov    %eax,(%esp)
call   8049020 <dirfd@plt>
cmp    $0x2,%eax
jbe    8057120 <fchmod@plt+0xdc60>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   8057550 <fchmod@plt+0xe090>
test   %eax,%eax
js     8057168 <fchmod@plt+0xdca8>
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   8049390 <fdopendir@plt>
mov    %eax,%edi
call   8049320 <__errno_location@plt>
test   %edi,%edi
mov    0xc(%esp),%edx
mov    %eax,%esi
mov    (%eax),%ebp
je     8057178 <fchmod@plt+0xdcb8>
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049440 <closedir@plt>
mov    %ebx,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049320 <__errno_location@plt>
xor    %edi,%edi
mov    %eax,%esi
mov    (%eax),%ebp
jmp    805714b <fchmod@plt+0xdc8b>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   8049430 <close@plt>
jmp    805714b <fchmod@plt+0xdc8b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049370 <nl_langinfo@plt>
mov    0x8061cfc,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x805921f,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     805725c <fchmod@plt+0xdd9c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     8057227 <fchmod@plt+0xdd67>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    8057200 <fchmod@plt+0xdd40>
nop
mov    %ebp,(%esp)
call   8049280 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049280 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     8057258 <fchmod@plt+0xdd98>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048fc0 <strcmp@plt>
test   %eax,%eax
je     805721b <fchmod@plt+0xdd5b>
cmp    $0x2a,%bl
jne    80571e0 <fchmod@plt+0xdd20>
cmpb   $0x0,0x1(%ebp)
jne    80571e0 <fchmod@plt+0xdd20>
mov    %ebp,(%esp)
call   8049280 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x805a621,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805751d <fchmod@plt+0xe05d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    8057227 <fchmod@plt+0xdd67>
movl   $0x805a627,(%esp)
call   80491d0 <getenv@plt>
test   %eax,%eax
je     8057275 <fchmod@plt+0xddb5>
cmpb   $0x0,(%eax)
jne    8057483 <fchmod@plt+0xdfc3>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x805a618,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     8057474 <fchmod@plt+0xdfb4>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   80491f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8057513 <fchmod@plt+0xe053>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049050 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     80572dc <fchmod@plt+0xde1c>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048fd0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8057458 <fchmod@plt+0xdf98>
movl   $0x805935a,0x4(%esp)
mov    %eax,(%esp)
call   8049240 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8057450 <fchmod@plt+0xdf90>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8057436 <fchmod@plt+0xdf76>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     8057340 <fchmod@plt+0xde80>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    8057340 <fchmod@plt+0xde80>
cmp    $0x23,%eax
je     80574ad <fchmod@plt+0xdfed>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049310 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805a637,0x4(%esp)
mov    %esi,(%esp)
call   8049270 <fscanf@plt>
cmp    $0x1,%eax
jle    80574d0 <fchmod@plt+0xe010>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049280 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049280 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    80574ee <fchmod@plt+0xe02e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   80491f0 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     8057522 <fchmod@plt+0xe062>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8049180 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8049180 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     805734c <fchmod@plt+0xde8c>
mov    %esi,(%esp)
call   8049360 <__uflow@plt>
cmp    $0xffffffff,%eax
je     80574d0 <fchmod@plt+0xe010>
jmp    8057355 <fchmod@plt+0xde95>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049430 <close@plt>
mov    $0x805921f,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    %ebp,0x8061cfc
jmp    80571cf <fchmod@plt+0xdd0f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    805729b <fchmod@plt+0xdddb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049280 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8057474 <fchmod@plt+0xdfb4>
lea    -0x1(%eax),%eax
jmp    8057284 <fchmod@plt+0xddc4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     80574c7 <fchmod@plt+0xe007>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    805753c <fchmod@plt+0xe07c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    80574a8 <fchmod@plt+0xdfe8>
cmp    $0xffffffff,%eax
jne    8057340 <fchmod@plt+0xde80>
mov    %esi,(%esp)
call   8057580 <fchmod@plt+0xe0c0>
mov    0x10(%esp),%eax
test   %eax,%eax
je     8057458 <fchmod@plt+0xdf98>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    805745d <fchmod@plt+0xdf9d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   80491e0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    80573ec <fchmod@plt+0xdf2c>
mov    $0x805921f,%ebp
jmp    8057469 <fchmod@plt+0xdfa9>
call   80490e0 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x805921f,%ebp
call   8049040 <free@plt>
mov    %esi,(%esp)
call   8057580 <fchmod@plt+0xe0c0>
jmp    805745d <fchmod@plt+0xdf9d>
mov    %esi,(%esp)
call   8049360 <__uflow@plt>
jmp    80574c2 <fchmod@plt+0xe002>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8054ed0 <fchmod@plt+0xba10>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049330 <fileno@plt>
test   %eax,%eax
js     8057608 <fchmod@plt+0xe148>
mov    %ebx,(%esp)
call   8049200 <__freading@plt>
test   %eax,%eax
jne    80575d8 <fchmod@plt+0xe118>
mov    %ebx,(%esp)
call   8054ff0 <fchmod@plt+0xbb30>
test   %eax,%eax
je     8057608 <fchmod@plt+0xe148>
call   8049320 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049090 <fclose@plt>
test   %edi,%edi
je     80575ca <fchmod@plt+0xe10a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049330 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80493b0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    80575a2 <fchmod@plt+0xe0e2>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049090 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     8057650 <fchmod@plt+0xe190>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     8057660 <fchmod@plt+0xe1a0>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     80576c2 <fchmod@plt+0xe202>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     8057750 <fchmod@plt+0xe290>
mov    (%eax),%ebx
jmp    *0x805a648(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     8057698 <fchmod@plt+0xe1d8>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    80576b8 <fchmod@plt+0xe1f8>
movl   $0x805a641,0x4(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    80576b8 <fchmod@plt+0xe1f8>
movl   $0x805a6a4,0x4(%eax)
jmp    80576b8 <fchmod@plt+0xe1f8>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    80577da <fchmod@plt+0xe31a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     8057808 <fchmod@plt+0xe348>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    80577d0 <fchmod@plt+0xe310>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    80578bc <fchmod@plt+0xe3fc>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    80578ae <fchmod@plt+0xe3ee>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     8057948 <fchmod@plt+0xe488>
cmp    $0x2b,%dl
je     8057958 <fchmod@plt+0xe498>
cmp    $0x20,%dl
je     8057968 <fchmod@plt+0xe4a8>
cmp    $0x23,%dl
je     8057978 <fchmod@plt+0xe4b8>
cmp    $0x30,%dl
nop
je     8057988 <fchmod@plt+0xe4c8>
cmp    $0x49,%dl
jne    8057998 <fchmod@plt+0xe4d8>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    8057868 <fchmod@plt+0xe3a8>
orl    $0x1,0x8(%ebx)
jmp    80578a8 <fchmod@plt+0xe3e8>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    80578c0 <fchmod@plt+0xe400>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    805785c <fchmod@plt+0xe39c>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    80578f2 <fchmod@plt+0xe432>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     8057909 <fchmod@plt+0xe449>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    80578f0 <fchmod@plt+0xe430>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     8057f94 <fchmod@plt+0xead4>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    805785c <fchmod@plt+0xe39c>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    80578a8 <fchmod@plt+0xe3e8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    80578a8 <fchmod@plt+0xe3e8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    80578a8 <fchmod@plt+0xe3e8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    80578a8 <fchmod@plt+0xe3e8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    80578a8 <fchmod@plt+0xe3e8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     8057c24 <fchmod@plt+0xe764>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     80579e4 <fchmod@plt+0xe524>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     805822a <fchmod@plt+0xed6a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    80579c0 <fchmod@plt+0xe500>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     8057bd7 <fchmod@plt+0xe717>
add    $0x1,%esi
xor    %eax,%eax
jmp    8057a1e <fchmod@plt+0xe55e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     8057a30 <fchmod@plt+0xe570>
cmp    $0x6c,%dl
je     8057a38 <fchmod@plt+0xe578>
cmp    $0x6a,%dl
je     8057a40 <fchmod@plt+0xe580>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     8057a18 <fchmod@plt+0xe558>
cmp    $0x74,%dl
jne    8057a48 <fchmod@plt+0xe588>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    80579f8 <fchmod@plt+0xe538>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    8057a18 <fchmod@plt+0xe558>
or     $0x4,%eax
jmp    8057a18 <fchmod@plt+0xe558>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    8057a18 <fchmod@plt+0xe558>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    8057a18 <fchmod@plt+0xe558>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     8057f94 <fchmod@plt+0xead4>
movzbl %cl,%ecx
jmp    *0x805a6c0(,%ecx,4)
movl   $0x11,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     8058130 <fchmod@plt+0xec70>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    805802b <fchmod@plt+0xeb6b>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x24(%esp),%ecx
cmp    %eax,%edx
jb     8057ac7 <fchmod@plt+0xe607>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    8057ab0 <fchmod@plt+0xe5f0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x24(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    80580b2 <fchmod@plt+0xebf2>
mov    0x28(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    8057b0a <fchmod@plt+0xe64a>
mov    0x4(%eax),%eax
jmp    80577da <fchmod@plt+0xe31a>
mov    0x20(%esp),%eax
test   %eax,%eax
js     8057b98 <fchmod@plt+0xe6d8>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     8057b98 <fchmod@plt+0xe6d8>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8058152 <fchmod@plt+0xec92>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80491e0 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     8057b98 <fchmod@plt+0xe6d8>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     8058231 <fchmod@plt+0xed71>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    80577da <fchmod@plt+0xe31a>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     80580c8 <fchmod@plt+0xec08>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    80580c8 <fchmod@plt+0xec08>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     8057bad <fchmod@plt+0xe6ed>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8057bc2 <fchmod@plt+0xe702>
mov    %eax,(%esp)
call   8049040 <free@plt>
call   8049320 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    80577fb <fchmod@plt+0xe33b>
cmpb   $0x2a,0x1(%esi)
je     8057e7e <fchmod@plt+0xe9be>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     8057c06 <fchmod@plt+0xe746>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    8057bf8 <fchmod@plt+0xe738>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    80579ed <fchmod@plt+0xe52d>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    8057cc8 <fchmod@plt+0xe808>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     8057f94 <fchmod@plt+0xead4>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    8057b6c <fchmod@plt+0xe6ac>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x24(%esp),%edx
cmp    %edi,%eax
ja     8057ca7 <fchmod@plt+0xe7e7>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    8057c90 <fchmod@plt+0xe7d0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x24(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    8058122 <fchmod@plt+0xec62>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    80579e4 <fchmod@plt+0xe524>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8057cd0 <fchmod@plt+0xe810>
cmp    $0x24,%dl
jne    8057c48 <fchmod@plt+0xe788>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     8057d02 <fchmod@plt+0xe842>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8057ceb <fchmod@plt+0xe82b>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     8057f94 <fchmod@plt+0xead4>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    8057c65 <fchmod@plt+0xe7a5>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x28(%esp)
addl   $0xf,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
cmp    $0xf,%eax
movl   $0x16,0x28(%esp)
jg     8057a70 <fchmod@plt+0xe5b0>
test   $0x4,%al
jne    8057a70 <fchmod@plt+0xe5b0>
cmp    $0x7,%eax
movl   $0x15,0x28(%esp)
jg     8057a70 <fchmod@plt+0xe5b0>
test   $0x2,%al
movl   $0x12,0x28(%esp)
jne    8057a70 <fchmod@plt+0xe5b0>
and    $0x1,%eax
mov    %eax,0x28(%esp)
negl   0x28(%esp)
addl   $0x14,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     8057fdb <fchmod@plt+0xeb1b>
test   $0x4,%al
jne    8057fdb <fchmod@plt+0xeb1b>
cmp    $0x7,%eax
jg     8058258 <fchmod@plt+0xed98>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805829c <fchmod@plt+0xeddc>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x28(%esp)
andl   $0x2,0x28(%esp)
addl   $0x3,0x28(%esp)
mov    %dl,0x1c(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x28(%esp)
addl   $0xd,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
movl   $0x10,0x28(%esp)
movb   $0x73,0x1c(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
movl   $0xe,0x28(%esp)
movb   $0x63,0x1c(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
cmp    $0xf,%eax
jle    8058161 <fchmod@plt+0xeca1>
mov    %dl,0x1c(%esp)
movl   $0xc,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
cmp    $0xf,%eax
jg     8057fec <fchmod@plt+0xeb2c>
test   $0x4,%al
jne    8057fec <fchmod@plt+0xeb2c>
cmp    $0x7,%eax
jg     8058269 <fchmod@plt+0xeda9>
test   $0x2,%al
jne    80582ad <fchmod@plt+0xeded>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x28(%esp)
andl   $0x2,0x28(%esp)
addl   $0x4,0x28(%esp)
mov    %dl,0x1c(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     8057ffd <fchmod@plt+0xeb3d>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8057eab <fchmod@plt+0xe9eb>
cmp    $0x24,%dl
jne    8057ffd <fchmod@plt+0xeb3d>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     8057edd <fchmod@plt+0xea1d>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8057ec6 <fchmod@plt+0xea06>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     8057f94 <fchmod@plt+0xead4>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     805817b <fchmod@plt+0xecbb>
mov    0x14(%esp),%eax
test   %eax,%eax
js     8057b98 <fchmod@plt+0xe6d8>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     8057f3a <fchmod@plt+0xea7a>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     8057b98 <fchmod@plt+0xe6d8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8057b98 <fchmod@plt+0xe6d8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     80582be <fchmod@plt+0xedfe>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80491e0 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     8057b9c <fchmod@plt+0xe6dc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     80582d6 <fchmod@plt+0xee16>
mov    0x68(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x4(%eax)
jmp    8058186 <fchmod@plt+0xecc6>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%esp)
mov    0x24(%esp),%eax
cmp    %eax,0x30(%esp)
je     8057fb1 <fchmod@plt+0xeaf1>
mov    %eax,(%esp)
call   8049040 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8057fc6 <fchmod@plt+0xeb06>
mov    %eax,(%esp)
call   8049040 <free@plt>
call   8049320 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    80577fb <fchmod@plt+0xe33b>
mov    %dl,0x1c(%esp)
movl   $0x9,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    %dl,0x1c(%esp)
movl   $0xa,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    8057f0b <fchmod@plt+0xea4b>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     8057f94 <fchmod@plt+0xead4>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    8057f0b <fchmod@plt+0xea4b>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     8057b98 <fchmod@plt+0xe6d8>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     8058050 <fchmod@plt+0xeb90>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     8057b98 <fchmod@plt+0xe6d8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8057b98 <fchmod@plt+0xe6d8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x24(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     80581e2 <fchmod@plt+0xed22>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80491e0 <realloc@plt>
mov    0x24(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     8057b9f <fchmod@plt+0xe6df>
cmp    %eax,0x30(%esp)
je     80581f8 <fchmod@plt+0xed38>
mov    0x68(%esp),%eax
mov    %ecx,0x24(%esp)
mov    %ecx,0x4(%eax)
jmp    8057a97 <fchmod@plt+0xe5d7>
cmp    %eax,0x28(%esp)
je     8057ade <fchmod@plt+0xe61e>
jmp    8057f9f <fchmod@plt+0xeadf>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8057b98 <fchmod@plt+0xe6d8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     8058249 <fchmod@plt+0xed89>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80491e0 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     8057b9c <fchmod@plt+0xe6dc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805827a <fchmod@plt+0xedba>
mov    0x68(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x4(%eax)
jmp    8057c7a <fchmod@plt+0xe7ba>
cmp    $0x5,%eax
je     80579e1 <fchmod@plt+0xe521>
jmp    8057f9f <fchmod@plt+0xeadf>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     8057f94 <fchmod@plt+0xead4>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    8057a82 <fchmod@plt+0xe5c2>
mov    %edx,(%esp)
call   80491f0 <malloc@plt>
mov    %eax,%esi
jmp    8057b47 <fchmod@plt+0xe687>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x28(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x24(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x24(%esp),%edx
cmp    %esi,%eax
ja     80581b0 <fchmod@plt+0xecf0>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    8058199 <fchmod@plt+0xecd9>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x24(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    80581cf <fchmod@plt+0xed0f>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    80579ed <fchmod@plt+0xe52d>
cmp    $0x5,%eax
jne    8057f9f <fchmod@plt+0xeadf>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    80579ed <fchmod@plt+0xe52d>
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     80582cd <fchmod@plt+0xee0d>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x24(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8049050 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x24(%esp),%ecx
jmp    80580a2 <fchmod@plt+0xebe2>
xor    %eax,%eax
jmp    80579d1 <fchmod@plt+0xe511>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049050 <memcpy@plt>
jmp    8057b5c <fchmod@plt+0xe69c>
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    %eax,%edx
jmp    80580f9 <fchmod@plt+0xec39>
mov    %dl,0x1c(%esp)
movl   $0x7,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    %dl,0x1c(%esp)
movl   $0x8,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049050 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    8058112 <fchmod@plt+0xec52>
mov    %dl,0x1c(%esp)
movl   $0x1,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    %dl,0x1c(%esp)
movl   $0x2,0x28(%esp)
jmp    8057a70 <fchmod@plt+0xe5b0>
mov    %eax,(%esp)
call   80491f0 <malloc@plt>
mov    %eax,%edx
jmp    8057f6b <fchmod@plt+0xeaab>
mov    0x30(%esp),%eax
jmp    8057b9f <fchmod@plt+0xe6df>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049050 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    8057f84 <fchmod@plt+0xeac4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     80583c8 <fchmod@plt+0xef08>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     80583e4 <fchmod@plt+0xef24>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    8058360 <fchmod@plt+0xeea0>
cmp    %ebp,%esi
jbe    8058388 <fchmod@plt+0xeec8>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    8058368 <fchmod@plt+0xeea8>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    80583a8 <fchmod@plt+0xeee8>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     805837a <fchmod@plt+0xeeba>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    8058397 <fchmod@plt+0xeed7>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    8058368 <fchmod@plt+0xeea8>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    80583f8 <fchmod@plt+0xef38>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    80583be <fchmod@plt+0xeefe>
cmp    %ebp,%eax
jae    8058364 <fchmod@plt+0xeea4>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    8058368 <fchmod@plt+0xeea8>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    805833b <fchmod@plt+0xee7b>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    805833b <fchmod@plt+0xee7b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     8058468 <fchmod@plt+0xefa8>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    805845d <fchmod@plt+0xef9d>
cmp    0x4(%esp),%ebp
je     8058468 <fchmod@plt+0xefa8>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    8058368 <fchmod@plt+0xeea8>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    8058368 <fchmod@plt+0xeea8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x34(%esp),%edx
mov    0x3c(%esp),%eax
mov    0x30(%esp),%ebp
mov    0x38(%esp),%edi
test   %edx,%edx
mov    %eax,%esi
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,0xc(%esp)
js     8058568 <fchmod@plt+0xf0a8>
test   %esi,%esi
mov    %edi,%edx
mov    %eax,%ecx
js     8058558 <fchmod@plt+0xf098>
mov    0x4(%esp),%edi
mov    %ecx,%eax
mov    %edx,%ecx
mov    (%esp),%esi
test   %eax,%eax
mov    %edx,0x10(%esp)
mov    %edi,%ebp
mov    %esi,0x14(%esp)
mov    %esi,%edi
mov    %ebp,%esi
jne    80584f0 <fchmod@plt+0xf030>
cmp    %esi,%edx
jbe    8058538 <fchmod@plt+0xf078>
mov    %esi,%edx
mov    0x14(%esp),%eax
div    %ecx
mov    %edx,%esi
mov    %esi,%eax
xor    %edx,%edx
jmp    80584f9 <fchmod@plt+0xf039>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%eax
jbe    8058510 <fchmod@plt+0xf050>
mov    (%esp),%eax
mov    %esi,%edx
mov    0xc(%esp),%ecx
test   %ecx,%ecx
je     8058508 <fchmod@plt+0xf048>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x20,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
bsr    %eax,%edx
mov    %edx,(%esp)
xorl   $0x1f,(%esp)
jne    8058588 <fchmod@plt+0xf0c8>
cmp    %edi,%ecx
jbe    8058620 <fchmod@plt+0xf160>
cmp    %esi,%eax
jb     8058620 <fchmod@plt+0xf160>
mov    %edi,%eax
mov    %ebp,%edx
jmp    80584f9 <fchmod@plt+0xf039>
lea    0x0(%esi),%esi
test   %edx,%edx
jne    8058547 <fchmod@plt+0xf087>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%ecx
mov    %esi,%eax
xor    %edx,%edx
div    %ecx
mov    %edi,%eax
div    %ecx
mov    %edx,%esi
jmp    80584e6 <fchmod@plt+0xf026>
lea    0x0(%esi),%esi
neg    %edx
adc    $0x0,%ecx
neg    %ecx
jmp    80584bb <fchmod@plt+0xeffb>
lea    0x0(%esi,%eiz,1),%esi
negl   (%esp)
adcl   $0x0,0x4(%esp)
negl   0x4(%esp)
movl   $0xffffffff,0xc(%esp)
jmp    80584af <fchmod@plt+0xefef>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%edx
movl   $0x20,0x18(%esp)
mov    0x10(%esp),%ebp
sub    %edx,0x18(%esp)
mov    %edx,%ecx
shl    %cl,%eax
movzbl 0x18(%esp),%ecx
mov    %ebp,%edi
shr    %cl,%edi
mov    %edx,%ecx
shl    %cl,%ebp
movzbl 0x18(%esp),%ecx
or     %eax,%edi
mov    %edx,%eax
mov    %esi,%edx
mov    %ebp,0x1c(%esp)
shr    %cl,%edx
mov    %eax,%ecx
mov    0x14(%esp),%eax
shl    %cl,%esi
movzbl 0x18(%esp),%ecx
shr    %cl,%eax
movzbl (%esp),%ecx
or     %esi,%eax
mov    0x14(%esp),%esi
div    %edi
shl    %cl,%esi
mov    %esi,0x14(%esp)
mov    %edx,%esi
mul    %ebp
mov    %edx,0x10(%esp)
mov    0x10(%esp),%ebp
mov    %eax,%edx
cmp    %ebp,%esi
mov    %ebp,%ecx
jb     8058634 <fchmod@plt+0xf174>
cmp    %eax,0x14(%esp)
jb     8058630 <fchmod@plt+0xf170>
mov    (%esp),%ebp
mov    0x14(%esp),%edi
sub    %edx,%edi
sbb    %ecx,%esi
mov    %esi,%eax
mov    %ebp,%ecx
shr    %cl,%edi
movzbl 0x18(%esp),%ecx
shl    %cl,%eax
mov    %ebp,%ecx
or     %eax,%edi
shr    %cl,%esi
mov    %edi,%eax
mov    %esi,%edx
jmp    80584f9 <fchmod@plt+0xf039>
nop
sub    %ecx,%edi
sbb    %eax,%esi
mov    %esi,%ebp
jmp    805852c <fchmod@plt+0xf06c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%esi
jne    80585f8 <fchmod@plt+0xf138>
mov    0x10(%esp),%ecx
mov    %eax,%edx
sub    0x1c(%esp),%edx
sbb    %edi,%ecx
jmp    80585f8 <fchmod@plt+0xf138>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049a50 <fchmod@plt+0x590>
add    $0x59a5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048f54 <raise@plt-0x3c>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     80586ab <fchmod@plt+0xf1eb>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0xf8(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    8058688 <fchmod@plt+0xf1c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   8049a50 <fchmod@plt+0x590>
add    $0x592a,%ebx
sub    $0x18,%esp
lea    0x164(%ebx),%eax
test   %eax,%eax
je     8058708 <fchmod@plt+0xf248>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80491b0 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    80586eb <fchmod@plt+0xf22b>
push   %ebx
sub    $0x8,%esp
call   8049a50 <fchmod@plt+0x590>
add    $0x58eb,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
bound  %esp,0x64(%ecx)
and    %dh,0x61(%eax)
arpl   %bp,0x20(%ebx)
insb   (%dx),%es:(%edi)
gs
jbe    805879a <_IO_stdin_used+0x76>
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    $0x0,%al
add    $0x0,%al
or     %al,(%eax)
add    $0x0,%al
add    $0x0,%al
add    $0x8001000,%eax
add    %al,(%eax,%eax,1)
push   %es
add    %ah,(%eax)
add    %ah,(%eax)
add    %al,(%eax,%eax,1)
add    $0x0,%al
adc    %al,(%eax)
adc    %al,(%eax)
or     %al,(%eax)
adc    %al,(%eax)
and    %al,(%eax)
and    %al,(%eax)
or     %al,(%eax)
adc    %al,(%eax)
addb   $0x80,(%eax)
add    %cl,(%eax)
add    %ah,(%eax)
add    %al,0x20010000(%eax)
add    %al,0x10200(%eax)
add    $0x20,%al
add    %al,(%edx)
add    %eax,(%edx)
add    %eax,(%eax)
adc    %al,0x6f(%ebx)
jo     805880d <_IO_stdin_used+0xe9>
jb     80587ff <_IO_stdin_used+0xdb>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edi)
sub    $0x20,%al
xor    (%eax),%dh
xor    %esi,(%eax)
sub    $0x20,%al
xor    (%eax),%dh
xor    %esi,(%ecx)
and    %al,0x72(%esi)
gs and %dl,%gs:0x6f(%ebx)
data16
je     8058830 <_IO_stdin_used+0x10c>
popa
jb     8058821 <_IO_stdin_used+0xfd>
and    %al,0x6f(%esi)
jne    805882f <_IO_stdin_used+0x10b>
fs
popa
je     805882e <_IO_stdin_used+0x10a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %al,(%eax)
add    %ah,0x25203a73
jae    8058811 <_IO_stdin_used+0xed>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
je     805884c <_IO_stdin_used+0x128>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x2d2d2064
and    %ch,0x6f(%esi)
je     8058811 <_IO_stdin_used+0xed>
jae    8058868 <_IO_stdin_used+0x144>
jo     8058865 <_IO_stdin_used+0x141>
outsl  %ds:(%esi),(%dx)
jb     805886c <_IO_stdin_used+0x148>
gs or  %fs:%gs:(%eax),%al
and    $0x25203a73,%eax
jae    8058823 <_IO_stdin_used+0xff>
imul   $0x72636e65,0x20(%ebx),%esi
jns    805887c <_IO_stdin_used+0x158>
je     8058873 <_IO_stdin_used+0x14f>
and    %ch,%fs:0x6f6e202d
je     8058837 <_IO_stdin_used+0x113>
jae    805888e <_IO_stdin_used+0x16a>
jo     805888b <_IO_stdin_used+0x167>
outsl  %ds:(%esi),(%dx)
jb     8058892 <_IO_stdin_used+0x16e>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
and    $0x25203a73,%eax
jae    805884b <_IO_stdin_used+0x127>
push   $0x66207361
insb   (%dx),%es:(%edi)
popa
addr16 jae 8058855 <_IO_stdin_used+0x131>
xor    %bh,0x25(%eax)
js     805885a <_IO_stdin_used+0x136>
sub    $0x6f6e202d,%eax
je     8058861 <_IO_stdin_used+0x13d>
jae    80588b8 <_IO_stdin_used+0x194>
jo     80588b5 <_IO_stdin_used+0x191>
outsl  %ds:(%esi),(%dx)
jb     80588bc <_IO_stdin_used+0x198>
gs or  %fs:%gs:(%eax),%al
and    $0x25203a73,%eax
jae    805888d <_IO_stdin_used+0x169>
and    %ah,0x78(%ebp)
je     80588ca <_IO_stdin_used+0x1a6>
popa
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x66(%edi)
and    %ah,0x79622075
je     80588cf <_IO_stdin_used+0x1ab>
jae    805888c <_IO_stdin_used+0x168>
imul   $0x6465726f,0x6e(%edi),%esp
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jb     80588ee <_IO_stdin_used+0x1ca>
jne    80588ee <_IO_stdin_used+0x1ca>
je     80588e5 <_IO_stdin_used+0x1c1>
and    %ch,%fs:0x6e(%ecx)
jo     80588fb <_IO_stdin_used+0x1d7>
je     80588a8 <_IO_stdin_used+0x184>
sub    $0x6966202d,%eax
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x72(%ecx,%eiz,2)
add    %al,%gs:(%bx,%si)
and    $0x25203a73,%eax
jae    80588e1 <_IO_stdin_used+0x1bd>
and    %ch,0x65(%eax)
popa
fs
gs
jb     80588cf <_IO_stdin_used+0x1ab>
arpl   %bp,0x65(%eax)
arpl   %bp,0x73(%ebx)
jne    8058924 <_IO_stdin_used+0x200>
and    %dh,(%eax)
js     80588e0 <_IO_stdin_used+0x1bc>
xor    %dh,(%eax,%edi,2)
and    %ah,(%ecx)
cmp    $0x6d6f6320,%eax
jo     805893c <_IO_stdin_used+0x218>
je     805892e <_IO_stdin_used+0x20a>
and    %ah,%fs:0x68(%ebx)
arpl   %bp,%gs:0x73(%ebx)
jne    8058940 <_IO_stdin_used+0x21c>
and    %dh,(%eax)
js     80588fc <_IO_stdin_used+0x1d8>
xor    %dh,(%eax,%edi,2)
or     (%eax),%al
or     0x25203a73,%ah
jae    805891e <_IO_stdin_used+0x1fa>
and    %ah,0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     805895e <_IO_stdin_used+0x23a>
gs
jae    8058962 <_IO_stdin_used+0x23e>
imul   $0x2c4b4f20,0x6e(%edi),%ebp
and    %dh,0x61(%edx,%esi,2)
imul   $0x657a2067,0x6e(%ecx,%ebp,2),%ebp
jb     8058973 <_IO_stdin_used+0x24f>
and    %ah,0x79(%edx)
je     805896e <_IO_stdin_used+0x24a>
jae    805892b <_IO_stdin_used+0x207>
imul   $0x6465726f,0x6e(%edi),%esp
or     (%eax),%al
or     0x25203a73,%ah
jae    8058956 <_IO_stdin_used+0x232>
and    %ah,0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8058996 <_IO_stdin_used+0x272>
gs
jae    805899a <_IO_stdin_used+0x276>
imul   $0x2c4b4f20,0x6e(%edi),%ebp
and    %dh,0x61(%edx,%esi,2)
imul   $0x61672067,0x6e(%ecx,%ebp,2),%ebp
jb     805899e <_IO_stdin_used+0x27a>
popa
and    %ch,%gs:0x67(%bx,%di)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     80589ab <_IO_stdin_used+0x287>
or     %fs:(%eax),%al
add    %al,(%eax)
add    %ah,0x732a2e2a
and    %ah,0x732a2e2a
and    %ah,(%eax)
jb     80589bc <_IO_stdin_used+0x298>
je     80589c6 <_IO_stdin_used+0x2a2>
outsl  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x6d(%edi)
jo     80589d8 <_IO_stdin_used+0x2b4>
gs
jae    80589dc <_IO_stdin_used+0x2b8>
gs
fs
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
push   %esp
jb     80589f0 <_IO_stdin_used+0x2cc>
and    %ah,0x25(%eax)
jae    805899c <_IO_stdin_used+0x278>
sub    $0x6c65682d,%eax
jo     80589aa <_IO_stdin_used+0x286>
and    %ah,0x6f(%esi)
jb     80589a8 <_IO_stdin_used+0x284>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80589f1 <_IO_stdin_used+0x2cd>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8058a00 <_IO_stdin_used+0x2dc>
popa
je     80589ff <_IO_stdin_used+0x2db>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,0x63203a73
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8058a17 <_IO_stdin_used+0x2f3>
gs
jae    8058a1b <_IO_stdin_used+0x2f7>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
and    %ch,0x6f(%esi)
je     80589d4 <_IO_stdin_used+0x2b0>
and    $0x20612073,%eax
je     8058a20 <_IO_stdin_used+0x2fc>
jb     8058a2a <_IO_stdin_used+0x306>
imul   $0x55202e6c,0x61(%esi),%ebp
jae    8058a2b <_IO_stdin_used+0x307>
and    %ch,0x6f742066
and    %ah,0x6f(%esi)
jb     8058a34 <_IO_stdin_used+0x310>
and    %ah,%gs:0x6d6f6373
jo     8058a4c <_IO_stdin_used+0x328>
gs
jae    8058a50 <_IO_stdin_used+0x32c>
imul   $0x6f460a2e,0x6e(%edi),%ebp
jb     8058a06 <_IO_stdin_used+0x2e2>
push   $0x2c706c65
and    %dh,0x70(%ecx,%edi,2)
cmp    %gs:(%eax),%ah
and    $0x682d2073,%eax
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x25203a73
jae    8058a23 <_IO_stdin_used+0x2ff>
imul   $0x69642061,0x20(%ebx),%esi
jb     8058a71 <_IO_stdin_used+0x34d>
arpl   %si,0x72(%edi,%ebp,2)
jns    8058a32 <_IO_stdin_used+0x30e>
sub    $0x6769202d,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8058a80 <_IO_stdin_used+0x35c>
or     %fs:(%eax),%al
add    %al,(%eax)
and    $0x25203a73,%eax
jae    8058a47 <_IO_stdin_used+0x323>
imul   $0x20746f6e,0x20(%ebx),%esi
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8058a5a <_IO_stdin_used+0x336>
outsl  %ds:(%esi),(%dx)
jb     8058a5d <_IO_stdin_used+0x339>
popa
and    %dh,0x65(%edx)
addr16 jne 8058ab0 <_IO_stdin_used+0x38c>
popa
jb     8058a67 <_IO_stdin_used+0x343>
imul   $0x202d,0x20(%ebp,%eiz,2),%bp
imul   $0x6465726f,0x6e(%edi),%esp
or     (%eax),%al
add    %ah,0x25203a73
jae    8058a7f <_IO_stdin_used+0x35b>
imul   $0x2d746573,0x20(%ebx),%esi
jne    8058adb <_IO_stdin_used+0x3b7>
gs
jb     8058a98 <_IO_stdin_used+0x374>
dec    %ecx
inc    %esp
and    %ch,0x6e(%edi)
and    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
imul   $0x69202d20,0x6e(%edi),%ebp
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8058ae8 <_IO_stdin_used+0x3c4>
or     %fs:(%eax),%al
add    %al,(%eax)
and    $0x25203a73,%eax
jae    8058aaf <_IO_stdin_used+0x38b>
imul   $0x2d746573,0x20(%ebx),%esi
addr16 jb 8058b08 <_IO_stdin_used+0x3e4>
jne    8058b0b <_IO_stdin_used+0x3e7>
sub    $0x6f204449,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
imul   $0x69202d20,0x6e(%edi),%ebp
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8058b19 <_IO_stdin_used+0x3f5>
or     %fs:(%eax),%al
add    %ah,0x25203a73
jae    8058adf <_IO_stdin_used+0x3bb>
push   $0x74207361
push   $0x74732065
imul   $0x69622079,0x6b(%ebx),%esp
je     8058af2 <_IO_stdin_used+0x3ce>
jae    8058b39 <_IO_stdin_used+0x415>
je     8058af6 <_IO_stdin_used+0x3d2>
sub    $0x6c696620,%eax
and    %ch,%gs:0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8058b48 <_IO_stdin_used+0x424>
or     %fs:(%eax),%al
add    %al,(%eax)
and    $0x25203a73,%eax
jae    8058b0f <_IO_stdin_used+0x3eb>
push   $0x25207361
insb   (%dx),%es:(%edi)
jne    8058b17 <_IO_stdin_used+0x3f3>
outsl  %ds:(%esi),(%dx)
je     8058b62 <_IO_stdin_used+0x43e>
gs
jb     8058b1d <_IO_stdin_used+0x3f9>
insb   (%dx),%es:(%edi)
imul   $0x2d206325,0x6b(%esi),%ebp
sub    $0x636e7520,%eax
push   $0x65676e61
or     %fs:(%eax),%al
add    %al,(%eax)
and    $0x25203a73,%eax
jae    8058b55 <_IO_stdin_used+0x431>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
data32 imul $0x2d2d,0x20(%eax),%di
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8058b99 <_IO_stdin_used+0x475>
or     %fs:(%eax),%al
add    %ah,0x25203a73
jae    8058b5f <_IO_stdin_used+0x43b>
popa
insb   (%dx),%es:(%edi)
jb     8058ba8 <_IO_stdin_used+0x484>
popa
fs
jns    8058b67 <_IO_stdin_used+0x443>
push   $0x25207361
jae    8058b6e <_IO_stdin_used+0x44a>
jae    8058bc5 <_IO_stdin_used+0x4a1>
data32 imul $0x2d2d,0x20(%eax),%di
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs or  %fs:%gs:(%bx,%si),%al
add    %ch,0x6e(%ecx)
je     8058bcd <_IO_stdin_used+0x4a9>
jb     8058bd8 <_IO_stdin_used+0x4b4>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8058be0 <_IO_stdin_used+0x4bc>
jb     8058b93 <_IO_stdin_used+0x46f>
imul   $0x726f6873,0x20(%esi),%ebp
je     8058be1 <_IO_stdin_used+0x4bd>
outsb  %ds:(%esi),(%dx)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
and    %ah,0x20(%edi,%ebp,2)
jns    8058bf9 <_IO_stdin_used+0x4d5>
jne    8058bac <_IO_stdin_used+0x488>
ja     8058bf7 <_IO_stdin_used+0x4d3>
jae    8058bf8 <_IO_stdin_used+0x4d4>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jbe    8058bfc <_IO_stdin_used+0x4d8>
jb     8058c10 <_IO_stdin_used+0x4ec>
jb     8058c04 <_IO_stdin_used+0x4e0>
je     8058c02 <_IO_stdin_used+0x4de>
and    %ch,(%eax)
jns    8058bc1 <_IO_stdin_used+0x49d>
outsl  %ds:(%esi),(%dx)
jb     8058bc4 <_IO_stdin_used+0x4a0>
outsb  %ds:(%esi),(%dx)
sub    %edi,(%edi)
and    %al,(%eax)
add    %al,(%eax)
add    %ah,0x25203a73
jae    8058bed <_IO_stdin_used+0x4c9>
and    %dh,0x61(%edi)
jb     8058c26 <_IO_stdin_used+0x502>
imul   $0x616e202c,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x75(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8058c47 <_IO_stdin_used+0x523>
gs
jae    8058c4b <_IO_stdin_used+0x527>
and    %ch,0x72(%edi)
and    %dh,0x6e(%ebp)
arpl   %bp,0x6d(%edi)
jo     8058c55 <_IO_stdin_used+0x531>
gs
jae    8058c59 <_IO_stdin_used+0x535>
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    8058c0d <_IO_stdin_used+0x4e9>
sub    %ah,0x79(%edx)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    8058c63 <_IO_stdin_used+0x53f>
je     8058c25 <_IO_stdin_used+0x501>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8058c71 <_IO_stdin_used+0x54d>
gs
jae    8058c75 <_IO_stdin_used+0x551>
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
push   %ebx
and    %ch,0x6e(%ecx)
sub    $0x63616c70,%eax
sub    %ebp,%gs:(%esi)
add    %ah,0x2d203a73
bound  %esp,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8058c83 <_IO_stdin_used+0x55f>
jb     8058c81 <_IO_stdin_used+0x55d>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx)
and    %ch,0x6f(%esi)
je     8058c4a <_IO_stdin_used+0x526>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
je     8058c96 <_IO_stdin_used+0x572>
addr16
gs
jb     8058c3f <_IO_stdin_used+0x51b>
add    %al,(%eax)
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bl,%cs:0x46(%ebx)
dec    %ecx
dec    %esp
inc    %ebp
pop    %ebp
cs cs or %cs:(%eax),%al
add    %al,(%eax)
add    %ah,0x2d203a73
pop    %edx
and    %ch,0x6f(%esi)
je     8058c87 <_IO_stdin_used+0x563>
jae    8058cde <_IO_stdin_used+0x5ba>
jo     8058cdb <_IO_stdin_used+0x5b7>
outsl  %ds:(%esi),(%dx)
jb     8058ce2 <_IO_stdin_used+0x5be>
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    8058c99 <_IO_stdin_used+0x575>
jbe    8058ce0 <_IO_stdin_used+0x5bc>
jb     8058cf0 <_IO_stdin_used+0x5cc>
imul   $0xa,0x6e(%edi),%ebp
popa
bound  %edi,(%edx)
arpl   %sp,0x68(%esi,%eiz,2)
dec    %eax
aas
imul   $0x4d,0x6d(%esp,%ecx,2),%ebp
outsb  %ds:(%esi),(%dx)
dec    %esi
jno    8058d08 <_IO_stdin_used+0x5e4>
push   %ebx
cmp    0x56(%esi,%esi,2),%dh
pop    %edx
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
add    %al,(%eax)
add    %ah,0x6f203a73
jo     8058d23 <_IO_stdin_used+0x5ff>
imul   $0x612d2d20,0x6e(%edi),%ebp
jae    8058d1b <_IO_stdin_used+0x5f7>
imul   $0x6f6e6769,0x20(%ecx),%ebp
jb     8058d26 <_IO_stdin_used+0x602>
and    %ch,%fs:0x6e(%edi)
and    %dh,0x69(%eax,%ebp,2)
jae    8058ceb <_IO_stdin_used+0x5c7>
jae    8058d46 <_IO_stdin_used+0x622>
jae    8058d43 <_IO_stdin_used+0x61f>
gs
insl   (%dx),%es:(%edi)
or     (%eax),%al
add    %cl,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     8058d4a <_IO_stdin_used+0x626>
jb     8058d56 <_IO_stdin_used+0x632>
and    %ah,0x72(%ecx)
addr16 jne 8058d50 <_IO_stdin_used+0x62c>
outsb  %gs:(%esi),(%dx)
je     8058d5a <_IO_stdin_used+0x636>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     8058d5d <_IO_stdin_used+0x639>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8058d18 <_IO_stdin_used+0x5f4>
popa
jb     8058d60 <_IO_stdin_used+0x63c>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     8058d72 <_IO_stdin_used+0x64e>
jb     8058d7e <_IO_stdin_used+0x65a>
and    %ah,0x6f(%esi)
jb     8058d2a <_IO_stdin_used+0x606>
jae    8058d74 <_IO_stdin_used+0x650>
outsl  %ds:(%esi),(%dx)
jb     8058d83 <_IO_stdin_used+0x65f>
and    %ch,0x70(%edi)
je     8058d7d <_IO_stdin_used+0x659>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8058d38 <_IO_stdin_used+0x614>
je     8058d89 <_IO_stdin_used+0x665>
outsl  %ds:(%esi),(%dx)
add    %al,%cs:(%eax)
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c63,%eax
sub    $0x6f647473,%eax
jne    8058da2 <_IO_stdin_used+0x67e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
ja     8058da8 <_IO_stdin_used+0x684>
imul   $0x73206e6f,0x20(%ebp,%eiz,2),%esi
je     8058da1 <_IO_stdin_used+0x67d>
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8058da9 <_IO_stdin_used+0x685>
and    %ch,0x75(%edi)
je     8058dba <_IO_stdin_used+0x696>
jne    8058dc0 <_IO_stdin_used+0x69c>
sub    $0x20,%al
imul   $0x70,0x65(%ebp),%esp
and    %ch,0x72(%edi)
imul   $0x206c616e,0x69(%edi),%esp
imul   $0x7520,0x73(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs add %ah,%fs:%gs:(%bx,%si)
and    %ch,0x2d202c64
sub    $0x6f636564,%eax
insl   (%dx),%es:(%edi)
jo     8058ded <_IO_stdin_used+0x6c9>
gs
jae    8058df1 <_IO_stdin_used+0x6cd>
and    %ah,(%eax)
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     8058df9 <_IO_stdin_used+0x6d5>
gs
jae    8058dfd <_IO_stdin_used+0x6d9>
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c66,%eax
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     8058e07 <_IO_stdin_used+0x6e3>
and    %ch,%gs:0x76(%edi)
gs
jb     8058e22 <_IO_stdin_used+0x6fe>
jb     8058e16 <_IO_stdin_used+0x6f2>
je     8058e14 <_IO_stdin_used+0x6f0>
and    %ch,0x66(%edi)
and    %ch,0x75(%edi)
je     8058e27 <_IO_stdin_used+0x703>
jne    8058e2d <_IO_stdin_used+0x709>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6e(%ecx)
and    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8058e3a <_IO_stdin_used+0x716>
gs
jae    8058e3e <_IO_stdin_used+0x71a>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x0,0x0(%ebx),%esi
add    %ah,(%eax)
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x69687420,0x65(%bp),%esi
jae    8058e12 <_IO_stdin_used+0x6ee>
push   $0x706c65
add    %ah,(%eax)
and    %ch,0x2d202c6b
sub    $0x7065656b,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x70,0x65(%ebp),%esp
and    %ch,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     8058e38 <_IO_stdin_used+0x714>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8058e83 <_IO_stdin_used+0x75f>
sub    %esp,(%eax)
imul   $0x66207475,0x70(%esi),%ebp
imul   $0x2d202000,0x73(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
sub    $0x20,%al
sub    $0x73696c2d,%eax
je     8058e59 <_IO_stdin_used+0x735>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x73(%ecx,%ebp,2)
je     8058e65 <_IO_stdin_used+0x741>
arpl   %bp,0x6d(%edi)
jo     8058ebc <_IO_stdin_used+0x798>
gs
jae    8058ec0 <_IO_stdin_used+0x79c>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8058ebf <_IO_stdin_used+0x79b>
outsb  %ds:(%esi),(%dx)
je     8058ed0 <_IO_stdin_used+0x7ac>
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c4c
sub    $0x6563696c,%eax
outsb  %ds:(%esi),(%dx)
jae    8058ed4 <_IO_stdin_used+0x7b0>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     8058ee5 <_IO_stdin_used+0x7c1>
popa
jns    8058e9c <_IO_stdin_used+0x778>
jae    8058eed <_IO_stdin_used+0x7c9>
data16
je     8058ef8 <_IO_stdin_used+0x7d4>
popa
jb     8058ee9 <_IO_stdin_used+0x7c5>
and    %ch,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    8058ef1 <_IO_stdin_used+0x7cd>
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c6e,%eax
sub    $0x6e2d6f6e,%eax
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058ecb <_IO_stdin_used+0x7a7>
jae    8058f0e <_IO_stdin_used+0x7ea>
jbe    8058f14 <_IO_stdin_used+0x7f0>
and    %ch,0x72(%edi)
and    %dh,0x65(%edx)
jae    8058f2b <_IO_stdin_used+0x807>
outsl  %ds:(%esi),(%dx)
jb     8058f1f <_IO_stdin_used+0x7fb>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x72(%edi)
imul   $0x206c616e,0x69(%edi),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     8058edc <_IO_stdin_used+0x7b8>
and    %ah,(%eax)
sub    $0x2d202c4e,%eax
sub    $0x656d616e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8058f53 <_IO_stdin_used+0x82f>
jbe    8058f59 <_IO_stdin_used+0x835>
and    %ch,0x72(%edi)
and    %dh,0x65(%edx)
jae    8058f70 <_IO_stdin_used+0x84c>
outsl  %ds:(%esi),(%dx)
jb     8058f64 <_IO_stdin_used+0x840>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x72(%edi)
imul   $0x206c616e,0x69(%edi),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     8058f21 <_IO_stdin_used+0x7fd>
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c71
sub    $0x65697571,%eax
je     8058f52 <_IO_stdin_used+0x82e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8058faf <_IO_stdin_used+0x88b>
jo     8058fac <_IO_stdin_used+0x888>
jb     8058fa3 <_IO_stdin_used+0x87f>
jae    8058fb3 <_IO_stdin_used+0x88f>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%edi)
jb     8058fb7 <_IO_stdin_used+0x893>
imul   $0x73,0x67(%esi),%ebp
and    %ah,(%eax)
sub    $0x2d202c72,%eax
sub    $0x75636572,%eax
jb     8058fd1 <_IO_stdin_used+0x8ad>
imul   $0x6f202020,0x65(%esi),%esi
jo     8058fcc <_IO_stdin_used+0x8a8>
jb     8058fca <_IO_stdin_used+0x8a6>
je     8058fd0 <_IO_stdin_used+0x8ac>
and    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    8058fdc <_IO_stdin_used+0x8b8>
jbe    8058fda <_IO_stdin_used+0x8b6>
insb   (%dx),%es:(%edi)
jns    8058f98 <_IO_stdin_used+0x874>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x20200000,0x73(%ebp),%esp
sub    $0x2d202c53,%eax
sub    $0x66667573,%eax
imul   $0x20465553,0x3d(%eax),%edi
and    %dh,0x73(%ebp)
and    %dh,%gs:0x75(%ebx)
data32 imul $0x5553,0x20(%eax),%di
inc    %esi
and    %ch,0x6e(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059025 <_IO_stdin_used+0x901>
gs
jae    8059029 <_IO_stdin_used+0x905>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8058fbf <_IO_stdin_used+0x89b>
add    %ah,(%eax)
and    %ch,0x2d202c74
sub    $0x74736574,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     805903b <_IO_stdin_used+0x917>
jae    805904c <_IO_stdin_used+0x928>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059050 <_IO_stdin_used+0x92c>
gs
jae    8059054 <_IO_stdin_used+0x930>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
je     8059052 <_IO_stdin_used+0x92e>
addr16 jb 8059059 <_IO_stdin_used+0x935>
je     805906b <_IO_stdin_used+0x947>
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    8059068 <_IO_stdin_used+0x944>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%esi)
jb     805906e <_IO_stdin_used+0x94a>
outsl  %ds:(%esi),(%dx)
jae    8059074 <_IO_stdin_used+0x950>
and    %ch,0x6f(%ebp)
fs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,0x73(%ecx,%ebp,2)
jo     805909d <_IO_stdin_used+0x979>
popa
jns    8059054 <_IO_stdin_used+0x930>
jbe    805909b <_IO_stdin_used+0x977>
jb     80590ab <_IO_stdin_used+0x987>
imul   $0x6d756e20,0x6e(%edi),%ebp
bound  %esp,0x72(%ebp)
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c31,%eax
sub    $0x74736166,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6d(%edi)
jo     80590cf <_IO_stdin_used+0x9ab>
gs
jae    80590d3 <_IO_stdin_used+0x9af>
and    %ah,0x61(%esi)
jae    80590d9 <_IO_stdin_used+0x9b5>
gs
jb     8059068 <_IO_stdin_used+0x944>
and    %ah,(%eax)
sub    $0x2d202c39,%eax
sub    $0x74736562,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6d(%edi)
jo     80590f3 <_IO_stdin_used+0x9cf>
gs
jae    80590f7 <_IO_stdin_used+0x9d3>
and    %ah,0x65(%edx)
je     80590fd <_IO_stdin_used+0x9d9>
gs
jb     805908c <_IO_stdin_used+0x968>
and    %ah,(%eax)
sub    $0x7973722d,%eax
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x62(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x61(%ebp)
imul   $0x72,0x20(%ebp),%esp
jae    8059121 <_IO_stdin_used+0x9fd>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x65697266
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
jns    80590d4 <_IO_stdin_used+0x9b0>
popa
jb     805911a <_IO_stdin_used+0x9f6>
push   $0x657669
push   %edi
imul   $0x46206f6e,0x20(%eax,%ebp,2),%esi
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     80590ed <_IO_stdin_used+0x9c9>
ja     8059137 <_IO_stdin_used+0xa13>
outsb  %gs:(%esi),(%dx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
and    %ch,0x73(%ecx)
and    %ch,0x6572202c
popa
and    %dh,%fs:0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     805914e <_IO_stdin_used+0xa2a>
and    %ch,0x6e(%ecx)
jo     8059164 <_IO_stdin_used+0xa40>
je     805911f <_IO_stdin_used+0x9fb>
add    %al,(%eax)
add    %dl,0x65(%edx)
jo     8059167 <_IO_stdin_used+0xa43>
jb     805916e <_IO_stdin_used+0xa4a>
and    %ah,0x75(%edx)
addr16 jae 8059120 <_IO_stdin_used+0x9fc>
je     8059171 <_IO_stdin_used+0xa4d>
and    %bh,(%edx,%eiz,2)
jne    805916e <_IO_stdin_used+0xa4a>
sub    $0x70697a67,%eax
inc    %eax
outsb  %ds:(%si),(%dx)
jne    805913f <_IO_stdin_used+0xa1b>
outsl  %ds:(%esi),(%dx)
jb     805917b <_IO_stdin_used+0xa57>
ds add %al,%cs:%ds:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     8059195 <_IO_stdin_used+0xa71>
jb     8059187 <_IO_stdin_used+0xa63>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    %edi,(%ecx)
cmp    %esi,(%ebx)
and    %cl,0x65(%edx)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x70756f6c,%eax
and    %al,0x61(%edi)
imul   $0x2e,0x79(%esp,%ebp,2),%ebp
add    %dl,0x69(%eax,%ebp,2)
jae    8059165 <_IO_stdin_used+0xa41>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     80591c9 <_IO_stdin_used+0xaa5>
popa
jb     80591ba <_IO_stdin_used+0xa96>
and    %ah,%cs:(%eax)
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    805917c <_IO_stdin_used+0xa58>
insl   (%dx),%es:(%edi)
popa
jns    8059180 <_IO_stdin_used+0xa5c>
jb     80591c7 <_IO_stdin_used+0xaa3>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     80591d1 <_IO_stdin_used+0xaad>
and    %ah,0x6f(%ebx)
jo     80591da <_IO_stdin_used+0xab6>
gs
jae    8059194 <_IO_stdin_used+0xa70>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     80591a0 <_IO_stdin_used+0xa7c>
je     80591ea <_IO_stdin_used+0xac6>
and    %dh,%gs:0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jae    80591aa <_IO_stdin_used+0xa86>
outsl  %ds:(%esi),(%dx)
data16
add    %al,(%eax)
add    %al,(%eax)
je     80591fa <_IO_stdin_used+0xad6>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     80591ff <_IO_stdin_used+0xadb>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    8059213 <_IO_stdin_used+0xaef>
and    %bh,(%eax,%ebp,2)
je     8059227 <_IO_stdin_used+0xb03>
jo     80591ef <_IO_stdin_used+0xacb>
das
das
ja     8059230 <_IO_stdin_used+0xb0c>
ja     80591e9 <_IO_stdin_used+0xac5>
outsb  %ds:(%si),(%dx)
jne    80591ed <_IO_stdin_used+0xac9>
outsl  %ds:(%esi),(%dx)
jb     8059229 <_IO_stdin_used+0xb05>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 805923b <_IO_stdin_used+0xb17>
cs
push   $0x3e6c6d74
add    %al,%cs:(%eax)
push   %esp
push   $0x20657265
imul   $0x57204f4e,0x20(%ebx),%esi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     805925f <_IO_stdin_used+0xb3b>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     805925e <_IO_stdin_used+0xb3a>
outsb  %ds:(%esi),(%dx)
je     805921c <_IO_stdin_used+0xaf8>
jo     8059263 <_IO_stdin_used+0xb3f>
jb     805926d <_IO_stdin_used+0xb49>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
add    %ah,%cs:0x73252073
or     (%eax),%al
pop    %ds
mov    (%eax),%eax
pop    %ds
sahf
add    %dl,0x4b(%eax)
add    (%eax,%eax,1),%eax
pop    %ds
push   %ds
add    %bl,(%edi)
popf
add    %bl,(%edi)
mov    0x73250a00,%al
cmp    (%eax),%ah
and    $0x6e203a73,%eax
outsl  %ds:(%esi),(%dx)
je     8059256 <_IO_stdin_used+0xb32>
imul   $0x70697a67,0x20(%esi),%ebp
and    %ah,0x6f(%esi)
jb     80592af <_IO_stdin_used+0xb8b>
popa
je     805924f <_IO_stdin_used+0xb2b>
add    %ch,0x65(%ebp)
je     80592b2 <_IO_stdin_used+0xb8e>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:(%eax)
arpl   %si,0x63(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x74(%ecx,%eiz,2)
and    %ah,%gs:(%eax)
je     80592c7 <_IO_stdin_used+0xba3>
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
add    %dh,0x6e(%ebp)
arpl   %bp,0x6d(%edi)
jo     80592dc <_IO_stdin_used+0xbb8>
gs
jae    80592e0 <_IO_stdin_used+0xbbc>
gs add %ah,%fs:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,(%eax)
and    %ch,(%eax)
je     8059300 <_IO_stdin_used+0xbdc>
je     80592f4 <_IO_stdin_used+0xbd0>
insb   (%dx),%es:(%edi)
jae    80592bf <_IO_stdin_used+0xb9b>
or     (%eax),%al
and    $0x25207335,%eax
xor    %bh,(%eax)
insb   (%dx),%es:(%edi)
js     80592c2 <_IO_stdin_used+0xb9e>
add    %ah,0x64332573
and    %ah,0x3a643230
and    $0x20643230,%eax
add    %bh,(%edi)
aas
aas
and    %bh,(%edi)
aas
and    %bh,(%edi)
aas
cmp    (%edi),%bh
aas
and    %al,(%eax)
fs add %dh,%fs:%gs:0x65(%edx)
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %dh,0x72(%edi)
imul   $0x6f74206e,0x65(%esp,%esi,2),%esi
add    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8059346 <_IO_stdin_used+0xc22>
and    %ch,0x6e(%ecx)
jo     805935c <_IO_stdin_used+0xc38>
je     80592e9 <_IO_stdin_used+0xbc5>
and    %cl,0x4b(%edi)
or     (%eax),%al
and    $0x25203a73,%eax
jae    805932f <_IO_stdin_used+0xc0b>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
or     (%bx,%si),%al
and    $0x25203a73,%eax
jae    8059340 <_IO_stdin_used+0xc1c>
and    $0x70203a73,%eax
popa
je     8059381 <_IO_stdin_used+0xc5d>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
or     (%bx,%si),%al
je,pn  8059392 <_IO_stdin_used+0xc6e>
jp     805932d <_IO_stdin_used+0xc09>
je,pn  8059391 <_IO_stdin_used+0xc6d>
jp     8059332 <_IO_stdin_used+0xc0e>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jb     80593b4 <_IO_stdin_used+0xc90>
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8059367 <_IO_stdin_used+0xc43>
jb     80593ae <_IO_stdin_used+0xc8a>
arpl   %bp,0x76(%edi)
gs
jb     805936f <_IO_stdin_used+0xc4b>
jae    80593c6 <_IO_stdin_used+0xca2>
data32 imul $0x2e00,0xa(%eax),%di
je     80593bb <_IO_stdin_used+0xc97>
jb     805935c <_IO_stdin_used+0xc38>
and    $0x25203a73,%eax
jae    8059383 <_IO_stdin_used+0xc5f>
popa
insb   (%dx),%es:(%edi)
jb     80593cc <_IO_stdin_used+0xca8>
popa
fs
jns    805938b <_IO_stdin_used+0xc67>
gs
js     80593d7 <_IO_stdin_used+0xcb3>
jae    80593e4 <_IO_stdin_used+0xcc0>
jae    80593ad <_IO_stdin_used+0xc89>
add    %cl,(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059398 <_IO_stdin_used+0xc74>
outsl  %ds:(%esi),(%dx)
jbe    80593e0 <_IO_stdin_used+0xcbc>
jb     80593f4 <_IO_stdin_used+0xcd0>
jb     80593e8 <_IO_stdin_used+0xcc4>
je     80593f5 <_IO_stdin_used+0xcd1>
outsb  %gs:(%esi),(%dx)
or     (%eax),%al
and    $0x25203a73,%eax
jae    80593ac <_IO_stdin_used+0xc88>
arpl   %bp,0x6d(%edi)
jo     8059403 <_IO_stdin_used+0xcdf>
gs
jae    8059407 <_IO_stdin_used+0xce3>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
and    $0x25000a73,%eax
jae    80593db <_IO_stdin_used+0xcb7>
or     %eax,(%eax)
and    $0x74203a73,%eax
imul   $0x61747320,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
jo     80593d2 <_IO_stdin_used+0xcae>
jb     8059419 <_IO_stdin_used+0xcf5>
jae    805942a <_IO_stdin_used+0xd06>
outsl  %ds:(%esi),(%dx)
jb     805941e <_IO_stdin_used+0xcfa>
or     %fs:(%eax),%al
and    %cl,0x4b(%edi)
add    %ah,(%eax)
sub    $0x6572202d,%eax
jo     8059434 <_IO_stdin_used+0xd10>
popa
arpl   %sp,0x64(%ebp)
and    %dh,0x69(%edi)
je     8059439 <_IO_stdin_used+0xd15>
and    %ah,0x652e0073
js     805943e <_IO_stdin_used+0xd1a>
add    %al,0x5a(%edi)
dec    %ecx
push   %eax
add    %ch,(%esi)
addr16 jp 80593e3 <_IO_stdin_used+0xcbf>
push   %edi
jb     805944f <_IO_stdin_used+0xd2b>
je     805945c <_IO_stdin_used+0xd38>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %cl,0x65(%edx)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x70756f6c,%eax
and    %al,0x61(%edi)
imul   $0x25000a2e,0x79(%esp,%ebp,2),%ebp
jae    805943e <_IO_stdin_used+0xd1a>
and    %ch,0x6e(%ecx)
jbe    805946a <_IO_stdin_used+0xd46>
insb   (%dx),%es:(%edi)
imul   $0x69666675,0x73(%eax,%eiz,1),%esp
js     8059434 <_IO_stdin_used+0xd10>
daa
and    $0xa2773,%eax
jae    8059490 <_IO_stdin_used+0xd6c>
outsl  %ds:(%esi),(%dx)
jb     8059484 <_IO_stdin_used+0xd60>
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059497 <_IO_stdin_used+0xd73>
add    %dh,0x61(%eax)
arpl   %bp,0x20(%ebx)
add    %ch,0x68(%edx,%edi,2)
and    %ah,(%eax)
add    %ah,0x66(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
popa
add    %ch,(%esi)
jp     805943b <_IO_stdin_used+0xd17>
sub    $0x2d007a67,%eax
jp     8059442 <_IO_stdin_used+0xd1e>
pop    %edi
jp     8059445 <_IO_stdin_used+0xd21>
cs
pop    %edx
add    %ah,0x73(%ecx)
arpl   %bp,0x69(%ecx)
add    %dh,0x2d(%edi,%ebp,2)
jae    80594c7 <_IO_stdin_used+0xda3>
outsl  %fs:(%esi),(%dx)
jne    80594cb <_IO_stdin_used+0xda7>
add    %ah,0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     80594d1 <_IO_stdin_used+0xdad>
gs
jae    80594d5 <_IO_stdin_used+0xdb1>
add    %dh,0x6e(%ebp)
arpl   %bp,0x6d(%edi)
jo     80594dc <_IO_stdin_used+0xdb8>
gs
jae    80594e0 <_IO_stdin_used+0xdbc>
add    %ah,0x6f(%esi)
jb     80594d5 <_IO_stdin_used+0xdb1>
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8059479 <_IO_stdin_used+0xd55>
imul   $0x70,0x65(%ebp),%esp
add    %ch,0x73(%ecx,%ebp,2)
je     8059483 <_IO_stdin_used+0xd5f>
insb   (%dx),%es:(%edi)
imul   $0x65736e,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656d616e,%eax
add    %ch,0x73657270
jne    8059507 <_IO_stdin_used+0xde3>
gs
sub    $0x75706e69,%eax
je     80594cf <_IO_stdin_used+0xdab>
je     8059518 <_IO_stdin_used+0xdf4>
jns    80594a6 <_IO_stdin_used+0xd82>
jno    805951d <_IO_stdin_used+0xdf9>
imul   $0x6c697300,0x74(%ebp),%esp
outsb  %gs:(%esi),(%dx)
je     80594b3 <_IO_stdin_used+0xd8f>
jb     805951a <_IO_stdin_used+0xdf6>
arpl   %si,0x72(%ebp)
jae    8059523 <_IO_stdin_used+0xdff>
jbe    8059521 <_IO_stdin_used+0xdfd>
add    %dh,0x75(%ebx)
data32 imul $0x6574,0x0(%eax),%di
jae    805953c <_IO_stdin_used+0xe18>
add    %ch,0x6f(%esi)
sub    $0x656d6974,%eax
add    %dh,0x65(%esi)
jb     8059537 <_IO_stdin_used+0xe13>
outsl  %ds:(%esi),(%dx)
jae    805953d <_IO_stdin_used+0xe19>
add    %dh,0x65(%esi)
jb     8059550 <_IO_stdin_used+0xe2c>
imul   $0x73616600,0x6e(%edi),%ebp
je     80594e6 <_IO_stdin_used+0xdc2>
bound  %esp,0x73(%ebp)
je     80594eb <_IO_stdin_used+0xdc7>
insb   (%dx),%es:(%edi)
jp     8059565 <_IO_stdin_used+0xe41>
add    %ah,0x69(%edx)
je     8059566 <_IO_stdin_used+0xe42>
add    %dh,0x73(%edx)
jns    8059566 <_IO_stdin_used+0xe42>
arpl   %sp,0x62(%ecx)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %cl,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,0x65(%esi)
bound  %eax,(%eax)
dec    %ebp
popa
jb     805950c <_IO_stdin_used+0xde8>
inc    %ecx
jo     8059581 <_IO_stdin_used+0xe5d>
add    %cl,0x61(%ebp)
jns    8059514 <_IO_stdin_used+0xdf0>
dec    %edx
jne    8059585 <_IO_stdin_used+0xe61>
add    %cl,0x75(%edx)
insb   (%dx),%es:(%edi)
add    %al,0x75(%ecx)
add    %dl,0x65(%bp,%di)
jo     8059524 <_IO_stdin_used+0xe00>
dec    %edi
arpl   %si,0x4e(%eax,%eax,1)
outsl  %ds:(%esi),(%dx)
jbe    805952c <_IO_stdin_used+0xe08>
inc    %esp
arpl   %ax,%gs:(%eax)
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
int    $0x95
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xlat   %ds:(%ebx)
xchg   %eax,%ebp
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x69ecf7fc(%eax),%ebx
add    $0x8,%al
cmp    -0x69daf7fc(%esi),%edx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x69b8f7fc(%eax),%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
jp     805955c <_IO_stdin_used+0xe38>
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x6961f7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
rcll   $0x4,-0x692ff7fc(%esi)
or     %cl,-0x69(%esi)
add    $0x8,%al
pop    %ebp
xchg   %eax,%edi
add    $0x8,%al
xor    -0x6893f7fc(%eax),%ebx
add    $0x8,%al
xor    -0x6a28f7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
js     80595b1 <_IO_stdin_used+0xe8d>
add    $0x8,%al
xchg   %edx,-0x6855f7fc(%edi)
add    $0x8,%al
mov    $0x33080497,%ecx
cwtl
add    $0x8,%al
xor    -0x682df7fc(%eax),%ebx
add    $0x8,%al
jmp    80595cd <_IO_stdin_used+0xea9>
add    $0x8,%al
xor    -0x6805f7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67e2f7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x67ccf7fc(%eax),%ebx
add    $0x8,%al
xor    -0x6a40f7fc(%eax),%ebx
add    $0x8,%al
sbb    0x5942008(%ebp,%eax,1),%dl
or     %ah,(%esi)
xchg   %eax,%esp
add    $0x5942c08,%eax
or     %bl,(%edi)
xchg   %eax,%edx
add    $0x5921f08,%eax
or     %bl,(%edi)
xchg   %eax,%edx
add    $0x5921f08,%eax
or     %dh,(%edx)
xchg   %eax,%esp
add    $0x8,%eax
add    %dl,%al
mov    0x5921f08,%eax
or     %dl,%ah
mov    %es,0x5921f08
or     %ah,(%eax)
lea    0x58d6c08,%eax
or     %cl,-0x722bf7fb(%ebp,%ecx,4)
add    $0x58df808,%eax
or     %ch,(%esi,%ecx,4)
add    $0x58e6008,%eax
or     %dl,-0x23f7fa72(%eax)
mov    0x58f2408,%es
or     %dl,-0x71(%eax)
add    $0x58f8808,%eax
or     %al,%al
popl   0x58ff408
or     %bl,(%eax)
nop
add    $0x5904408,%eax
or     %ch,-0x70(%eax)
add    $0x5908c08,%eax
or     %bl,(%edi)
xchg   %eax,%edx
add    $0x590bc08,%eax
or     %bl,(%edi)
xchg   %eax,%edx
add    $0x590f408,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %cl,-0x6c(%eax)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
dec    %esi
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
push   %ecx
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
pop    %eax
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %ah,-0x6c(%ebx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %ch,-0x6c(%esi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
je     8059736 <_IO_stdin_used+0x1012>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
jns    8059746 <_IO_stdin_used+0x1022>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
jle    8059756 <_IO_stdin_used+0x1032>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %al,0x80594(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %cl,0x80594(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
mov    0x8(%ebp,%eax,1),%ss
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
xchg   %eax,%ebx
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x5a000000(%eax)
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
lods   %ds:(%esi),%al
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
mov    $0x94,%bl
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
mov    $0x1080594,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
les    0x8(%ebp,%eax,1),%edx
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %cl,%cl
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,%cl
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
fsts   0x8(%ebp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
loope  8059826 <_IO_stdin_used+0x1102>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%ecx)
add    %al,(%eax)
add    %ah,%dh
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%ecx)
add    %al,(%eax)
add    %ch,%bl
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
out    %eax,(%dx)
xchg   %eax,%esp
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
hlt
xchg   %eax,%esp
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0xf000000,%eax
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%ecx)
add    %al,(%eax)
add    %dl,0x18080587(%eax)
xchg   %eax,%ecx
add    $0x5914008,%eax
or     %dl,-0x27f7fa6f(%eax)
xchg   %eax,%ecx
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%edi)
add    %cl,(%edi)
add    %bl,(%edi)
add    %bh,(%edi)
add    %bh,0x0(%edi)
incl   (%eax)
incl   (%ecx)
incl   (%ebx)
incl   (%edi)
decl   (%edi)
lcall  *(%edi)
(bad)
aas
(bad)
jg     8059940 <_IO_stdin_used+0x121c>
incl   (%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,0xb000000
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
or     $0x2000000,%eax
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %ch,0x75(%edi)
je     8059a20 <_IO_stdin_used+0x12fc>
jne    8059a26 <_IO_stdin_used+0x1302>
and    %ch,0x6e(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059a2d <_IO_stdin_used+0x1309>
gs
jae    8059a31 <_IO_stdin_used+0x130d>
and    %ch,(%esi)
pop    %edx
and    %ah,0x6f(%esi)
jb     8059a33 <_IO_stdin_used+0x130f>
popa
je     80599e9 <_IO_stdin_used+0x12c5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80599ed <_IO_stdin_used+0x12c9>
jae    8059a44 <_IO_stdin_used+0x1320>
jo     8059a41 <_IO_stdin_used+0x131d>
outsl  %ds:(%esi),(%dx)
jb     8059a48 <_IO_stdin_used+0x1324>
gs or  %fs:%gs:(%eax),%al
adc    %dl,(%ecx)
adc    (%eax),%al
or     %al,(%edi)
or     %eax,(%esi)
or     0x30c040b,%al
or     $0xf010e02,%eax
inc    %edx
popa
and    %dh,%fs:0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
arpl   %bp,0x72(%edi)
jb     8059a70 <_IO_stdin_used+0x134c>
jo     8059a71 <_IO_stdin_used+0x134d>
and    %ch,0x6e(%ecx)
jo     8059a77 <_IO_stdin_used+0x1353>
je     8059a32 <_IO_stdin_used+0x130e>
add    %al,(%eax)
add    %al,(%eax)
arpl   %bp,0x72(%edi)
jb     8059a82 <_IO_stdin_used+0x135e>
jo     8059a83 <_IO_stdin_used+0x135f>
and    %ch,0x6e(%ecx)
jo     8059a89 <_IO_stdin_used+0x1365>
je     8059a44 <_IO_stdin_used+0x1320>
and    %dl,0x73(%ebp)
and    %bh,%gs:0x63(%edx)
popa
je     8059a40 <_IO_stdin_used+0x131c>
je     8059a91 <_IO_stdin_used+0x136d>
and    %dh,0x65(%edx)
arpl   %bp,0x76(%edi)
gs
jb     8059a4b <_IO_stdin_used+0x1327>
jae    8059a9c <_IO_stdin_used+0x1378>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x74(%ecx,%eiz,2)
popa
add    %al,%cs:(%eax)
add    %cl,(%edx)
and    $0x25203a73,%eax
jae    8059a7a <_IO_stdin_used+0x1356>
and    %dh,0x61(%edi)
jb     8059ab3 <_IO_stdin_used+0x138f>
imul   $0x6e75202c,0x67(%esi),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%esi)
popa
addr16 jae 8059a78 <_IO_stdin_used+0x1354>
xor    %bh,0x25(%eax)
js     8059a67 <_IO_stdin_used+0x1343>
add    %al,(%eax)
add    %cl,(%edx)
and    $0x25203a73,%eax
jae    8059aa2 <_IO_stdin_used+0x137e>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059ae0 <_IO_stdin_used+0x13bc>
gs
jae    8059ae4 <_IO_stdin_used+0x13c0>
gs and %dh,%fs:%gs:0x69(%edi)
je     8059ae0 <_IO_stdin_used+0x13bc>
and    %ah,0x69622064
je     8059af3 <_IO_stdin_used+0x13cf>
sub    $0x20,%al
arpl   %sp,0x6e(%ecx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8059aab <_IO_stdin_used+0x1387>
push   $0x6c646e61
and    %ah,%gs:0x69622064
je     8059b0c <_IO_stdin_used+0x13e8>
or     (%eax),%al
add    %ch,0x6e(%ecx)
jbe    8059b01 <_IO_stdin_used+0x13dd>
insb   (%dx),%es:(%edi)
imul   $0x72706d6f,0x63(%eax,%eiz,1),%esp
gs
jae    8059b1f <_IO_stdin_used+0x13fb>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
and    %ch,0x6e75202d
gs
js     8059b2c <_IO_stdin_used+0x1408>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %ch,0x6e(%ecx)
jbe    8059b35 <_IO_stdin_used+0x1411>
insb   (%dx),%es:(%edi)
imul   $0x72706d6f,0x63(%eax,%eiz,1),%esp
gs
jae    8059b53 <_IO_stdin_used+0x142f>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
and    %ch,0x7548202d
data32 insw (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
fs and %ah,%fs:%gs:0x69(%edx)
je     8059b1c <_IO_stdin_used+0x13f8>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8059b6a <_IO_stdin_used+0x1446>
and    %ch,0x75(%edi)
je     8059b27 <_IO_stdin_used+0x1403>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %dh,%gs:0x6f(%si)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    8059b39 <_IO_stdin_used+0x1415>
insb   (%dx),%es:(%edi)
gs
popa
jbe    8059b83 <_IO_stdin_used+0x145f>
jae    8059b40 <_IO_stdin_used+0x141c>
imul   $0x66667548,0x20(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx,%esi,2)
add    %ch,%gs:0x6e(%ecx)
jbe    8059b95 <_IO_stdin_used+0x1471>
insb   (%dx),%es:(%edi)
imul   $0x72706d6f,0x63(%eax,%eiz,1),%esp
gs
jae    8059bb3 <_IO_stdin_used+0x148f>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x646f632d,%eax
and    %ch,%gs:0x75(%edi)
je     8059b72 <_IO_stdin_used+0x144e>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%bx,%si)
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059bdb <_IO_stdin_used+0x14b7>
gs
jae    8059bdf <_IO_stdin_used+0x14bb>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x6e656c2d,%eax
addr16 je 8059be3 <_IO_stdin_used+0x14bf>
and    %ah,0x72(%ebp)
jb     8059bef <_IO_stdin_used+0x14cb>
jb     8059b82 <_IO_stdin_used+0x145e>
add    %al,(%eax)
or     0x25203a73,%ah
jae    8059bc6 <_IO_stdin_used+0x14a2>
and    %ch,0x6f(%esi)
je     8059bb1 <_IO_stdin_used+0x148d>
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x66207069,0x7a(%eax,%eiz,1),%esp
imul   $0x250a0000,0xa(%ebp,%eiz,2),%ebp
jae    8059be2 <_IO_stdin_used+0x14be>
and    %ah,0x66203a73
imul   $0x6e652074,0x73(%edx),%esi
je     8059c29 <_IO_stdin_used+0x1505>
jns    8059bd9 <_IO_stdin_used+0x14b5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059bdd <_IO_stdin_used+0x14b9>
fs
gs
data16
insb   (%dx),%es:(%edi)
popa
je     8059c29 <_IO_stdin_used+0x1505>
and    %ch,%fs:0x72(%edi)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jb     8059c33 <_IO_stdin_used+0x150f>
and    %ch,%fs:0x7375202d
and    %dh,%gs:0x6e(%ebp)
jp     8059c44 <_IO_stdin_used+0x1520>
jo     8059be7 <_IO_stdin_used+0x14c3>
add    %al,(%eax)
add    %cl,(%edx)
and    $0x25203a73,%eax
jae    8059c22 <_IO_stdin_used+0x14fe>
and    %ah,0x6e(%ebp)
arpl   %si,0x79(%edx)
jo     8059c64 <_IO_stdin_used+0x1540>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x7375202d
and    %dh,%gs:0x6e(%ebp)
jp     8059c6c <_IO_stdin_used+0x1548>
jo     8059c0f <_IO_stdin_used+0x14eb>
add    %al,(%eax)
add    %ch,0x6e(%ecx)
jbe    8059c6d <_IO_stdin_used+0x1549>
insb   (%dx),%es:(%edi)
imul   $0x72706d6f,0x63(%eax,%eiz,1),%esp
gs
jae    8059c8b <_IO_stdin_used+0x1567>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x726f662d,%eax
insl   (%dx),%es:(%edi)
popa
je     8059c48 <_IO_stdin_used+0x1524>
jbe    8059c93 <_IO_stdin_used+0x156f>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
popa
je     8059c94 <_IO_stdin_used+0x1570>
add    %al,%fs:(%eax)
add    %al,(%eax)
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8059cb3 <_IO_stdin_used+0x158f>
gs
jae    8059cb7 <_IO_stdin_used+0x1593>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x6e656c2d,%eax
addr16 je 8059cbb <_IO_stdin_used+0x1597>
and    %ch,0x69(%ebp)
jae    8059cc5 <_IO_stdin_used+0x15a1>
popa
je     8059cbe <_IO_stdin_used+0x159a>
push   $0x0
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8059cdc <_IO_stdin_used+0x15b8>
jb     8059c9b <_IO_stdin_used+0x1577>
and    %ch,0x6e(%ecx)
jbe    8059cd5 <_IO_stdin_used+0x15b1>
insb   (%dx),%es:(%edi)
imul   $0x6f687465,0x6d(%eax,%eiz,1),%esp
add    %al,%fs:(%eax)
or     0x25203a73,%ah
jae    8059cc2 <_IO_stdin_used+0x159e>
and    %ch,0x6e(%ecx)
jbe    8059cee <_IO_stdin_used+0x15ca>
insb   (%dx),%es:(%edi)
imul   $0x72706d6f,0x63(%eax,%eiz,1),%esp
gs
jae    8059d0c <_IO_stdin_used+0x15e8>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x6372632d,%eax
and    %ah,0x72(%ebp)
jb     8059d19 <_IO_stdin_used+0x15f5>
jb     8059cb6 <_IO_stdin_used+0x1592>
add    %al,(%eax)
add    %al,(%eax)
or     0x25203a73,%ah
jae    8059cf2 <_IO_stdin_used+0x15ce>
and    %ch,0x6e(%ecx)
jbe    8059d1e <_IO_stdin_used+0x15fa>
insb   (%dx),%es:(%edi)
imul   $0x72706d6f,0x63(%eax,%eiz,1),%esp
gs
jae    8059d3c <_IO_stdin_used+0x1618>
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
sub    $0x6e656c2d,%eax
addr16 je 8059d40 <_IO_stdin_used+0x161c>
and    %ah,0x72(%ebp)
jb     8059d4c <_IO_stdin_used+0x1628>
jb     8059ce9 <_IO_stdin_used+0x15c5>
add    %ah,0x25203a73
jae    8059d07 <_IO_stdin_used+0x15e3>
push   $0x6d207361
outsl  %ds:(%esi),(%dx)
jb     8059d54 <_IO_stdin_used+0x1630>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x6e(%ebp)
je     8059d6f <_IO_stdin_used+0x164b>
jns    8059d2c <_IO_stdin_used+0x1608>
sub    $0x74736572,%eax
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8059d70 <_IO_stdin_used+0x164c>
or     %fs:(%eax),%al
add    %al,(%eax)
and    $0x25203a73,%eax
jae    8059d37 <_IO_stdin_used+0x1613>
push   $0x6d207361
outsl  %ds:(%esi),(%dx)
jb     8059d84 <_IO_stdin_used+0x1660>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x6e(%ebp)
je     8059d9f <_IO_stdin_used+0x167b>
jns    8059d4f <_IO_stdin_used+0x162b>
sub    $0x6e75202d,%eax
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs or  %fs:%gs:(%bx,%si),%al
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x202c646c
jae    8059db1 <_IO_stdin_used+0x168d>
jp     8059d6a <_IO_stdin_used+0x1646>
and    $0xa646c,%eax
or     0x25203a73,%ah
jae    8059d91 <_IO_stdin_used+0x166d>
and    %ah,0x61000a73
jb     8059dc6 <_IO_stdin_used+0x16a2>
arpl   %di,0x250a0030(,%edi,1)
jae    8059da2 <_IO_stdin_used+0x167e>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8059de8 <_IO_stdin_used+0x16c4>
pop    %edi
gs
js     8059ddb <_IO_stdin_used+0x16b7>
popa
jne    8059de9 <_IO_stdin_used+0x16c5>
je     8059ddd <_IO_stdin_used+0x16b9>
or     %fs:(%eax),%al
and    $0x25203a73,%eax
jae    8059dbc <_IO_stdin_used+0x1698>
and    %dh,0x61(%edi)
jb     8059df5 <_IO_stdin_used+0x16d1>
imul   $0x7325203a,0x67(%esi),%ebp
or     (%eax),%al
or     0x203a73,%ah
and    $0x75203a73,%eax
outsb  %ds:(%esi),(%dx)
gs
js     8059e0f <_IO_stdin_used+0x16eb>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    $0x66312e35,%eax
and    $0x25,%eax
xchg   %eax,%esi
xor    %al,(%edi)
ja     8059df5 <_IO_stdin_used+0x16d1>
popa
push   %cs
out    %al,(%dx)
mov    $0x19990951,%edx
les    0x7(%ebp),%ebp
(bad)
hlt
push   $0x70
xor    $0xa3e963a5,%eax
xchg   %eax,%ebp
fs
sahf
xor    -0x475bf125(%eax),%cl
fdivrl 0x1e(%ecx)
jmp    e18e7ec3 <optarg+0xd988995f>
rclb   %cl,0x9b64c2b(%edi)
mov    $0x77eb17c,%ebp
sub    $0x1d91e7b8,%eax
mov    $0xb7106490,%edi
sbb    $0x6ab020f2,%eax
dec    %eax
jno    8059dc4 <_IO_stdin_used+0x16a0>
repz fiadd -0x42(%ecx)
test   %bh,-0x2c(%ebp)
ficompl (%edx)
jmp    8059dfa <_IO_stdin_used+0x16d6>
(bad)  0x51(%ebp)
mov    $0xd4,%ch
hlt
movl   $0xa8c0136c,-0x67a97c2d(%ebp)
a8
imul   $0x62,-0x7(%edx,%edi,2),%esp
std
in     (%dx),%al
leave
mov    %gs:0x5c(%edi),%cl
add    %edx,(%ecx,%ebx,8)
insb   (%dx),%es:(%edi)
push   %es
arpl   %sp,0x3d(%ebx)
psubd  %mm5,%mm6
or     $0x20c88d08,%eax
outsb  %ds:(%esi),(%dx)
cmp    0x10(%esi),%ebx
imul   $0x7172d560,0x41(%esp,%eiz,8),%ecx
addr16 mov %al,0xe4d1
add    (%edi,%eax,2),%edi
aam    $0x4
dec    %ebx
std
test   %ecx,0xab56bd2
movsl  %ds:(%esi),%es:(%edi)
cli
test   $0xb5,%al
xor    $0x42b2986c,%eax
(bad)
leave
mov    $0xbcf940db,%ebx
lods   %ds:(%esi),%al
jecxz  8059ede <_IO_stdin_used+0x17ba>
fdivs  (%edx)
jne    8059ed2 <_IO_stdin_used+0x17ae>
fild   -0x31(%ebp)
or     $0x3d59dcd6,%eax
shrl   0x26d930ac(%ebx)
cmp    (%eax),%al
ficom  -0x80(%ecx)
push   %ecx
xlat   %ds:(%ebx)
enter  $0x6116,$0xd0
mov    $0x21b4f4b5,%edi
and    %esp,%eax
mov    $0x56,%bl
cltd
xchg   %eax,%ebp
mov    $0xbda50fcf,%edx
mov    $0x2802b89e,%eax
or     %cl,-0x264da0fb(%eax)
or     $0xc6,%al
and    $0xe9,%al
or     0x2f6f7c87(%ecx),%esi
adc    %ecx,0x58(%eax,%ebp,2)
stos   %eax,%es:(%edi)
sbb    $0x2d3dc161,%eax
data16
mov    $0x90,%dh
inc    %ecx
fdivl  0x6(%esi)
jno    8059ea2 <_IO_stdin_used+0x177e>
add    %edi,0x102a98d2(%eax,%eiz,1)
aad    $0xef
mov    %eax,-0x4ae08e4f(%ebp)
mov    $0x6,%dh
movsl  %ds:(%esi),%es:(%edi)
in     $0xbf,%al
lahf
xor    %esp,%edx
mov    $0x7c9a2e8,%eax
js     8059f19 <_IO_stdin_used+0x17f5>
stc
add    %cl,(%edi)
mov    -0x67e769f7(%eax),%gs
push   %cs
loope  8059eac <_IO_stdin_used+0x1788>
or     $0x3d2d7f6a,%eax
insl   (%dx),%es:(%edi)
or     %dl,0x191646c(%edi)
pop    %esp
arpl   %sp,%si
hlt
push   %ecx
imul   $0x61,0x62(%ebx),%ebp
insb   (%dx),%es:(%edi)
sbb    $0xd8,%al
xor    %ah,-0x7b(%ebp)
dec    %esi
add    %ah,-0xe(%edx)
in     (%dx),%eax
xchg   %eax,%ebp
push   %es
insb   (%dx),%es:(%edi)
jnp    8059ebb <_IO_stdin_used+0x1797>
add    %ebx,(%ebx)
(bad)
hlt
or     %al,-0xaf03ba9(%edx)
(bad)
fnstenv -0x4816af9b(%eax)
adc    %dl,%ch
mov    $0x887c8bbe,%eax
mov    $0xdd1ddffc,%ecx
bound  %ecx,0x2d(%ecx)
ficoml 0x8cd37cf3
gs
dec    %esp
aam    $0xfb
pop    %eax
popa
mov    $0x4d,%dl
into
push   %ecx
mov    $0x3a,%ch
je     8059f4a <_IO_stdin_used+0x1826>
mov    $0xbb30e2a3,%esp
aam    $0x41
movsl  %ds:(%esi),%es:(%edi)
fisttp -0x29(%edx)
xchg   %eax,%ebp
fdivrs 0xa4d1c46d
sti
hlt
(bad)
shrl   %cl,-0x17(%edx)
imul   $0x46346ed9,-0x4(%ebx),%eax
mov    %ah,-0x53(%edi)
sarb   0x2d73da60(%eax)
add    $0x44,%al
in     $0x1d,%eax
add    (%ebx),%esi
pop    %edi
dec    %esp
or     -0x22f28337(%edx),%ch
cmp    $0x71,%al
add    $0x241aa50,%eax
daa
adc    %dl,(%eax)
or     -0x36f3df7a(%esi),%edi
and    $0xb35768b5,%eax
test   %ebp,0x20(%edi)
or     %edx,%esp
mov    $0xe49f,%cx
popa
into
push   %cs
stc
ficomp -0x68(%esi)
leave
fldcw  (%ecx)
and    -0x574b4f30(%eax),%bl
xlat   %ds:(%ebx)
(bad)
pop    %ss
cmp    $0xd8159b3,%eax
mov    $0x2e,%ah
cmp    -0x49(%ebp,%edi,4),%ebx
lods   %ds:(%esi),%eax
insb   (%dx),%es:(%edi)
mov    $0xb88320c0,%edx
in     (%dx),%eax
mov    $0xb3,%dh
mov    $0xb6e20c9a,%edi
add    0x3974b1d2(%edx),%ebx
inc    %edi
aad    $0xea
scas   %es:(%edi),%eax
ja     8059fa9 <_IO_stdin_used+0x1885>
popf
adc    $0x8304db26,%eax
push   %ss
fdivl  0x12(%ebx)
or     -0x1d(%ebx),%esp
test   %bh,(%ebx)
fs
xchg   %eax,%esp
ds
push   $0x6d
or     $0x7a6a5aa8,%eax
or     %edi,%ecx
push   %cs
in     $0x9d,%al
decl   (%ecx)
xchg   %eax,%ebx
daa
scas   %es:(%edi),%al
add    %cl,(%edx)
mov    $0x9e,%cl
pop    %es
jge    805a045 <_IO_stdin_used+0x1921>
xchg   %eax,%ebx
(bad)
shlb   %cl,-0xd9778f8(%ebx)
add    %ebx,(%esi)
inc    %dl
push   %es
imul   $0x67cbf762,0x57(%ebp),%ebx
xorb   $0x6c,%gs:0x36(%ecx)
sbb    %esp,%edi
push   %es
imul   $0x1b,0x76(%esi),%ebp
aam    $0xfe
loopne 805a051 <_IO_stdin_used+0x192d>
rorl   %cl,0x10da7a5a(%ecx)
int3
dec    %edx
frstor 0x6f(%edi)
fistpll -0x41100607(%ecx)
mov    -0x42(%ebx),%es
mov    $0x17,%bh
aad    $0x8e
mov    $0x60,%al
call   86dc76e8 <optarg+0x7ed69184>
xchg   %eax,%ebx
shll   0x38d8c2c4(%ecx)
push   %edx
repnz fisttp -0xf(%edi)
addr16 mov $0xbc5767d1,%ebx
cmpsb  %es:(%edi),%ds:(%esi)
fldl   (%esi)
mov    $0x3f,%ch
dec    %ebx
ss
mov    $0x48,%dl
fisubrl (%ebx)
or     $0xa1b4cd8,%eax
scas   %es:(%edi),%eax
(bad)
dec    %edx
add    (%esi),%esi
pusha
jp     805a073 <_IO_stdin_used+0x194f>
inc    %ecx
ret
out    %eax,(%dx)
pusha
fist   -0x21(%ebp)
addr16 test $0xef,%al
mov    0x31(%esi),%gs
jns    805a03c <_IO_stdin_used+0x1918>
imul   $0x1acb61b3,-0x74(%esi),%eax
andl   $0xffffffa0,-0x44(%esi)
shrb   %cl,0x25(%edi)
ss
loop   805a0f7 <_IO_stdin_used+0x19d3>
push   %edx
xchg   %eax,%ebp
ja     805a09f <_IO_stdin_used+0x197b>
int3
add    0xb(%edi),%eax
mov    $0x220216b9,%ebx
das
es
add    $0xba3bbe55,%eax
lds    (%eax),%ebp
or     -0x4ba56d4e(%ebp),%edi
sub    (%edx,%ebp,2),%eax
mov    $0x5c,%bl
cmpsl  %es:(%edi),%ds:(%esi)
call   *%edi
ret    $0xcf31
(bad)
mov    $0x8b,%ch
sahf
fldcw  -0x4fa42152(,%ebx,1)
ret    $0x9b64
es
repnz arpl %bp,%sp
pushf
mov    %eax,0x930a756a
insl   (%dx),%es:(%edi)
add    0x3f9c0906(%ecx),%ch
ss
push   %cs
jmp    805a05e <_IO_stdin_used+0x193a>
addr16 pop %es
jb     805a0f0 <_IO_stdin_used+0x19cc>
push   %edi
add    %al,0x95bf4a82
adc    $0x7a,%al
mov    $0xb12baee2,%eax
jnp    805a125 <_IO_stdin_used+0x1a01>
sbb    -0x2d7164f4(%esi),%esi
xchg   %eax,%edx
or     $0xb7e5d5be,%eax
out    %eax,(%dx)
fdivrl -0x21(%ecx,%eiz,1)
fisttpl (%ebx)
aam    $0xd2
roll   %cl,-0xe2b1dbe(%esi)
clc
mov    $0xdd,%bl
push   $0x1fda836e
int    $0x16
mov    $0xb9265b81,%esi
mul    %cl
ja     805a0cb <_IO_stdin_used+0x19a7>
outsl  %ds:(%esi),(%dx)
ja     805a165 <_IO_stdin_used+0x1a41>
mov    $0x18,%bh
out    %al,$0x5a
or     %cl,-0xf09590(%eax)
lret   $0x63b
pop    %sp
or     (%ecx),%eax
adc    %edi,%edi
sahf
gs
(bad)
scas   %es:(%edi),%al
(bad)
clc
sar    %cl,%edi
imul   $0xffffffcf,0x45(%ecx),%esp
insb   (%dx),%es:(%edi)
push   %ss
js     805a124 <_IO_stdin_used+0x1a00>
or     -0x28f22d12(%eax),%ah
push   %esp
addl   $0xffffffc2,(%esi,%ecx,2)
mov    $0x3,%bl
cmp    %esp,0x26(%ecx)
cmpsl  %es:(%di),%ds:(%si)
notl   (%esi)
pusha
rorb   0x47(%ebp)
imul   $0x4a3e6e77,-0x25(%ecx),%ecx
push   $0xffffffd1
scas   %es:(%edi),%al
fcompl -0x2a(%edx)
fldenv 0xb(%esi)
fild   -0x10(%eax)
cmp    %eax,%ebx
aaa
push   %ebx
scas   %es:(%edi),%al
mov    $0xbb9ec5a9,%esp
fidivr -0x31(%edi)
mov    $0x47,%dl
jmp    24365780 <optarg+0x1c30721c>
repnz mov $0xbac28abd,%ebp
lret   $0x9330
mov    $0x53,%bl
cmpsb  %es:(%edi),%ds:(%esi)
mov    %eax,0x360524b4
sarb   -0x3228f96d(%edx)
sub    %edx,-0x22(%edi)
push   %esp
mov    $0x2e23d967,%edi
jp     805a209 <_IO_stdin_used+0x1ae5>
mov    $0xb8,%bl
dec    %edx
popa
les    (%edx),%eax
sbb    0x5d(%eax),%ebp
xchg   %eax,%esp
sub    0x2a(%edi),%ebp
aaa
mov    $0x8ea1b40b,%esi
or     $0xc3,%al
sbb    %edi,%ebx
add    $0x2ef8d5a,%eax
sub    $0x42c80000,%eax
and    $0x25203a73,%eax
jae    805a205 <_IO_stdin_used+0x1ae1>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%ebx)
jp     805a23a <_IO_stdin_used+0x1b16>
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
gs and %dh,%fs:%gs:0x68(%bx)
imul   $0x7070697a,0x20(%ebp,%eiz,2),%ebp
imul   $0xa,0x67(%esi),%ebp
add    %dh,(%ecx)
cs add %ah,%cs:%ss:0x72(%ebp)
jb     805a267 <_IO_stdin_used+0x1b43>
jb     805a21a <_IO_stdin_used+0x1af6>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6c696620,0x67(%esi),%ebp
add    %ah,%gs:0x25203a73
jae    805a20e <_IO_stdin_used+0x1aea>
ja     805a282 <_IO_stdin_used+0x1b5e>
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     805a21a <_IO_stdin_used+0x1af6>
daa
add    %ah,%dl
sbbb   $0x22,0xafa100(%ecx)
add    %ah,-0x1dff9af9(%ecx)
sbbb   $0x38,0x31424700(%eax)
xor    %dh,(%ebx)
xor    %al,(%eax)
pusha
add    %ch,0x74(%ecx,%ebp,2)
gs
jb     805a29e <_IO_stdin_used+0x1b7a>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    805a2c4 <_IO_stdin_used+0x1ba0>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    805a2ba <_IO_stdin_used+0x1b96>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
mov    0x3008052e,%al
xor    $0x5,%al
or     %ah,0x34(%eax)
add    $0x533c008,%eax
or     %al,(%eax)
xor    $0x5,%al
or     %ah,-0x37f7facc(%eax)
xor    $0x5,%al
or     %cl,%al
xor    $0x5,%al
or     %cl,%al
xor    $0x5,%al
or     %bl,%al
xor    %eax,0x532c808
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x531d008,%al
or     %ch,-0x37f7facf(%eax)
xor    %eax,0x531c008
or     %bh,-0x4ff7facf(%eax)
xor    %eax,0x5318008
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %cl,%al
xor    0x532c808,%al
or     %bh,%bh
xor    %al,0x530ff08
or     %bh,%bh
xor    %al,0x530f708
or     %bh,%bh
xor    %al,0x52fe808
or     %bh,%bh
xor    %al,0x5327008
or     %bh,%bh
xor    %al,0x530ff08
or     %bh,%bh
xor    %al,0x52fe808
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x530ff08,%eax
or     %bh,%bh
xor    %al,0x530ff08
or     %bh,%bh
xor    %al,0x52f3008
or     %cl,%al
xor    0x52fe808,%al
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x530ff08,%eax
or     %dl,0x32(%eax)
add    $0x52fe808,%eax
or     %bh,%bh
xor    %al,0x52fe808
or     %bh,%bh
xor    %al,0x52fe808
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x52fe808,%eax
or     %ch,%al
das
add    $0x530e008,%eax
or     %bh,%bh
xor    %al,0x530e008
or     %dh,%bh
xor    %al,0x5312008
or     %ah,(%eax)
xor    %eax,0x5367008
or     %ah,(%eax)
xor    %eax,0x5367008
or     %ah,(%eax)
xor    %eax,0x5367008
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %dh,0x36(%eax)
add    $0x5367008,%eax
or     %ah,(%eax)
xor    %eax,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,(%edi)
mov    %al,0xa23f0805
add    $0x5a24508,%eax
or     %dl,0x520805a5(%esi)
mov    %al,0xa25a0805
add    $0x5a26208,%eax
or     %ah,-0x5e(%ecx)
add    $0x8,%eax
add    %ch,(%esi)
cs
das
cs
cs
das
insb   (%dx),%es:(%edi)
imul   $0x6d697475,0x2f(%edx),%esp
outsb  %gs:(%esi),(%dx)
jae    805a5c4 <_IO_stdin_used+0x1ea0>
arpl   %ax,(%eax)
je     805a603 <_IO_stdin_used+0x1edf>
insl   (%dx),%es:(%edi)
gs
jae    805a60e <_IO_stdin_used+0x1eea>
arpl   %ax,%gs:(%eax)
jbe    805a604 <_IO_stdin_used+0x1ee0>
insb   (%dx),%es:(%edi)
imul   $0x69745f65,0x74(%ecx,%eiz,2),%esp
insl   (%dx),%es:(%edi)
gs
jae    805a620 <_IO_stdin_used+0x1efc>
arpl   %ax,%gs:(%eax)
and    $0x66302e23,%eax
add    %al,(%eax)
add    %al,(%eax)
push   $0x3008055f
pop    %esp
add    $0x55eb808,%eax
or     %cl,0x5808055e(%eax)
pop    %esi
add    $0x557f008,%eax
or     %dh,%al
push   %edi
add    $0x557f008,%eax
or     %dh,%al
push   %edi
add    $0x5595808,%eax
or     %bl,0x59(%eax)
add    $0x55d4808,%eax
or     %dl,%al
pop    %ebp
add    $0x557f008,%eax
or     %dh,%al
push   %edi
add    $0x557f008,%eax
or     %dh,%al
push   %edi
add    $0x557f008,%eax
or     %ch,%al
arpl   %ax,0x5640008
or     %al,(%eax)
pop    %edi
add    $0x55f0008,%eax
or     %cl,%al
arpl   %ax,0x73752f08
jb     805a64c <_IO_stdin_used+0x1f28>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
sub    %cl,0x55(%esi)
dec    %esp
dec    %esp
sub    %eax,(%eax)
push   %eax
ja     805a650 <_IO_stdin_used+0x1f2c>
or     %ch,%al
jbe    805a654 <_IO_stdin_used+0x1f30>
or     %ch,%al
jbe    805a658 <_IO_stdin_used+0x1f34>
or     %bl,%al
jbe    805a65c <_IO_stdin_used+0x1f38>
or     %bl,%al
jbe    805a660 <_IO_stdin_used+0x1f3c>
or     %dh,-0x4ff7fa8a(%eax)
jbe    805a668 <_IO_stdin_used+0x1f44>
or     %dh,-0x4ff7fa8a(%eax)
jbe    805a670 <_IO_stdin_used+0x1f4c>
or     %cl,%al
jbe    805a674 <_IO_stdin_used+0x1f50>
or     %cl,%al
jbe    805a678 <_IO_stdin_used+0x1f54>
or     %bh,%al
jbe    805a67c <_IO_stdin_used+0x1f58>
or     %cl,(%eax)
ja     805a680 <_IO_stdin_used+0x1f5c>
or     %dh,-0x4ff7fa8a(%eax)
jbe    805a688 <_IO_stdin_used+0x1f64>
or     %bl,(%eax)
ja     805a68c <_IO_stdin_used+0x1f68>
or     %dh,(%eax)
ja     805a690 <_IO_stdin_used+0x1f6c>
or     %dh,-0x4ff7fa8a(%eax)
jbe    805a698 <_IO_stdin_used+0x1f74>
or     %dh,-0x4ff7fa8a(%eax)
jbe    805a6a0 <_IO_stdin_used+0x1f7c>
or     %dh,-0x4ff7fa8a(%eax)
jbe    805a6a8 <_IO_stdin_used+0x1f84>
or     %ch,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
push   %ebp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%dh
jp     805a6c8 <_IO_stdin_used+0x1fa4>
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %ah,(%ebx)
jle    805a738 <_IO_stdin_used+0x2014>
or     %dl,0x7e110805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %ah,(%ebx)
jle    805a748 <_IO_stdin_used+0x2024>
or     %ah,(%ebx)
jle    805a74c <_IO_stdin_used+0x2028>
or     %ah,(%ebx)
jle    805a750 <_IO_stdin_used+0x202c>
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57dff08,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7e3d0805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7e230805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %ch,%al
jge    805a7c0 <_IO_stdin_used+0x209c>
or     %ah,0x2308057d(%eax)
jle    805a7c8 <_IO_stdin_used+0x20a4>
or     %ah,(%ebx)
jle    805a7cc <_IO_stdin_used+0x20a8>
or     %ah,(%ebx)
jle    805a7d0 <_IO_stdin_used+0x20ac>
or     %dl,0x7da00805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %cl,0x5(%ebp,%edi,2)
or     %bh,0x6408057e
jp     805a7f4 <_IO_stdin_used+0x20d0>
or     %dl,0x7f940805(%edi,%edi,2)
add    $0x57d3508,%eax
or     %dl,0x7e3d0805(%edi,%edi,2)
add    $0x57f9408,%eax
or     %dl,0x7e3d0805(%edi,%edi,2)
.byte 0x5
.byte 0x8
add    %ebx,(%ebx)
add    (%ebx),%edi
sbb    %al,0xa20000
add    %al,(%eax)
jo     805a805 <_IO_stdin_used+0x20e1>
(bad)
pushl  -0x13400000(,%eax,1)
(bad)
(bad)
cld
or     %eax,(%eax)
add    %dl,(%eax)
repz (bad)
lcall  *0x5(%eax)
add    %al,(%eax)
inc    %eax
repz (bad)
ljmp   *0x0(%ebp,%eax,1)
add    %al,-0xc(%eax)
(bad)
ljmp   *-0xb900000(%ebp,%eax,1)
(bad)
dec    %eax
add    $0xf5600000,%eax
(bad)
jmp    *%esp
add    $0xf6d00000,%eax
(bad)
jmp    *(%esi,%eax,1)
add    %al,(%eax)
nop
idiv   %esi
pushl  0x6(%eax)
add    %al,(%eax)
lock clc
(bad)
(bad)
mov    $0x60000006,%eax
cli
(bad)
(bad)
call   805a87b <_IO_stdin_used+0x2157>
add    %bh,%bh
incl   0x7(%eax)
add    %al,(%eax)
push   %eax
add    %bh,%bh
jmp    *0x0(%edi,%eax,1)
add    %al,%al
add    %bh,%bh
decl   0x7(%eax)
add    %edi,%edi
ljmp   *0x3500000(%edi,%eax,1)
(bad)
jmp    *%eax
pop    %es
add    %al,(%eax)
nop
add    $0xff,%al
jmp    *(%eax)
or     %al,(%eax)
add    %ah,(%eax)
add    $0x858ffff,%eax
add    %al,(%eax)
push   %eax
adc    %edi,%edi
lcall  *0x20000008(%eax)
pop    %ss
(bad)
call   *%eax
or     %al,(%eax)
add    %dh,0x17(%eax)
(bad)
(bad)
in     (%dx),%al
or     %al,(%eax)
add    %ah,0xffff17(%eax)
or     %eax,(%eax)
add    %al,(%eax)
sbb    %bh,%bh
jmp    *(%ecx,%ecx,1)
add    %al,(%eax)
pusha
sbb    %edi,%edi
jmp    *0x0(%ecx,%ecx,1)
add    %dh,%al
sbb    %edi,%edi
lcall  *0x2ec00000(%ecx,%ecx,1)
(bad)
(bad)
fmull  (%ecx)
add    %al,(%eax)
lock
cs
(bad)
lcall  *(%edx,%ecx,1)
add    %al,(%eax)
adc    %ch,(%edi)
(bad)
pushl  (%eax)
or     (%eax),%al
add    %dl,(%eax)
xor    $0xff,%al
pushl  0xa(%eax)
add    %al,(%eax)
adc    %bh,(%edx)
(bad)
jmp    *%eax
or     (%eax),%al
add    %dh,0x40(%eax)
(bad)
jmp    *(%ebx,%ecx,1)
add    %al,(%eax)
adc    %al,-0x1(%edx)
call   *0x0(%ebx,%ecx,1)
add    %dl,%al
inc    %ebp
(bad)
ljmp   *0x46200000(%ebx,%ecx,1)
(bad)
inc    %esp
or     (%eax),%eax
add    %al,%al
inc    %esi
(bad)
(bad)
fmuls  (%ebx)
add    %al,(%eax)
rolb   -0x1(%edi)
lcall  *(%eax)
or     $0x0,%al
add    %dl,%al
dec    %eax
(bad)
lcall  *0xc(%eax)
add    %al,(%eax)
inc    %eax
dec    %ecx
(bad)
incl   0x4db00000(%esp,%ecx,1)
(bad)
inc    %esp
or     $0x0,%al
add    %dh,0x4f(%eax)
(bad)
incl   0x51100000(,%ecx,1)
(bad)
incl   0x0(%ebp,%ecx,1)
add    %al,0x53(%eax)
(bad)
lcall  *-0xffffff3(%eax)
push   %esi
(bad)
decl   (%eax)
push   %cs
add    %al,(%eax)
jo     805a9ce <_IO_stdin_used+0x22aa>
(bad)
incl   0x0(%esi,%ecx,1)
add    %al,0x59(%eax)
(bad)
pushl  0xe(%eax)
add    %al,(%eax)
rcrb   $0xff,-0x1(%ebx)
mov    $0xe,%ah
add    %al,(%eax)
nop
pop    %ebp
(bad)
decl   (%edi,%ecx,1)
add    %al,(%eax)
add    %ah,-0x1(%edx)
jmp    *0x0(%edi,%ecx,1)
add    %dh,-0x43000098(%eax)
sldt   (%eax)
add    %ch,-0x1(%ecx)
(bad)
fmuls  (%edi)
add    %al,(%eax)
mov    0x18ffff6c,%al
adc    %al,(%eax)
add    %ah,%al
insl   (%dx),%es:(%edi)
(bad)
call   *0x0(%eax,%edx,1)
add    %al,(%eax)
jae    805a9be <_IO_stdin_used+0x229a>
decl   0x73600000(%eax,%edx,1)
(bad)
pushl  -0x4ffffff0(%eax)
jae    805a9ce <_IO_stdin_used+0x22aa>
inc    %esp
adc    %al,(%eax)
add    %ah,0x74(%eax)
(bad)
lcall  *(%eax)
adc    %eax,(%eax)
add    %dh,0x54ffff74(%eax)
adc    %eax,(%eax)
add    %ah,%al
je     805a9e6 <_IO_stdin_used+0x22c2>
pushl  0x0(%ecx,%edx,1)
add    %dh,%al
je     805a9ee <_IO_stdin_used+0x22ca>
decl   0x30000011(%eax)
jne    805a9f6 <_IO_stdin_used+0x22d2>
ljmp   *0x70000011(%eax)
jne    805a9fe <_IO_stdin_used+0x22da>
(bad)
mov    $0x20000011,%esp
ja     805aa06 <_IO_stdin_used+0x22e2>
call   *(%edx,%edx,1)
add    %al,(%eax)
push   %eax
ja     805aa0e <_IO_stdin_used+0x22ea>
ljmp   *(%eax)
adc    (%eax),%al
add    %dh,0x44ffff77(%eax)
adc    (%eax),%al
add    %ah,(%eax)
js     805aa1e <_IO_stdin_used+0x22fa>
jmp    *0x0(%edx,%edx,1)
add    %ah,0x78(%eax)
(bad)
incl   0x78c00000(%edx,%edx,1)
(bad)
inc    %esp
adc    (%eax),%al
add    %al,-0xb000087(%eax)
adc    (%eax),%al
add    %dl,%al
jns    805aa3e <_IO_stdin_used+0x231a>
decl   (%ebx,%edx,1)
add    %al,(%eax)
inc    %eax
jp     805aa46 <_IO_stdin_used+0x2322>
ljmp   *(%eax)
adc    (%eax),%eax
add    %dh,%al
jp     805aa4e <_IO_stdin_used+0x232a>
lcall  *0x13(%eax)
add    %al,(%eax)
push   %eax
jnp    805aa56 <_IO_stdin_used+0x2332>
call   *-0x4fffffed(%eax)
jl     805aa5e <_IO_stdin_used+0x233a>
call   *%eax
adc    (%eax),%eax
add    %dl,(%eax)
cmp    $0x1400ff,%edi
add    %dh,-0x7f(%eax)
(bad)
pushl  (%eax)
adc    $0x0,%al
add    %al,0x44ffff81(%eax)
adc    $0x0,%al
add    %ah,0x68ffff82(%eax)
adc    $0x0,%al
add    %dh,0x7cffff82(%eax)
adc    $0x0,%al
add    %al,%al
(bad)
(bad)
call   *-0x7fffffec(%eax)
cmp    $0xffffffff,%edi
mov    $0x14,%ah
add    %al,(%eax)
rolb   $0x0,0x14ccffff(%ebx)
add    %dl,(%eax)
test   %bh,%bh
push   %eax
adc    $0x0,%al
add    %al,-0x7c(%eax)
(bad)
lcall  *-0x7ad00000(,%edx,1)
(bad)
lcall  *0x0(%ebp,%edx,1)
add    %dl,(%eax)
xchg   %bh,%bh
jmp    *-0x6fe00000(%ebp,%edx,1)
(bad)
(bad)
call   c805aae2 <optarg+0xbfffc57e>
xchg   %eax,%ecx
(bad)
ljmp   *(%eax)
push   %ss
add    %al,(%eax)
add    %dl,0x165cffff(%edx)
add    %al,(%eax)
and    %dl,0x1670ffff(%edx)
add    %al,(%eax)
inc    %eax
xchg   %eax,%edx
(bad)
incl   -0x6d800000(%esi,%edx,1)
(bad)
ljmp   *-0x5fffffea(%eax)
xchg   %eax,%edx
(bad)
(bad)
mov    $0xe0000016,%esp
xchg   %eax,%edx
(bad)
jmp    *%eax
push   %ss
add    %al,(%eax)
push   %eax
xchg   %eax,%ebx
(bad)
lcall  *(%edi,%edx,1)
add    %al,(%eax)
xor    %dl,0x1758ff(%edi,%edi,8)
add    %ah,-0x6c(%eax)
(bad)
pushl  0x17(%eax)
add    %al,(%eax)
lock xchg %eax,%esp
(bad)
jmp    *-0x6af00000(%edi,%edx,1)
(bad)
(bad)
mov    $0x30000017,%eax
xchg   %eax,%ebp
(bad)
dec    %esp
pop    %ss
add    %al,(%eax)
push   %eax
xchg   %eax,%ebp
(bad)
jmp    *%eax
pop    %ss
add    %al,(%eax)
jo     805aad3 <_IO_stdin_used+0x23af>
(bad)
push   %esp
pop    %ss
add    %al,(%eax)
mov    0x14ffff95,%al
sbb    %al,(%eax)
add    %dl,%al
xchg   %eax,%ebp
(bad)
pushl  (%eax,%ebx,1)
add    %al,(%eax)
add    %dl,0x184cffff(%esi)
add    %al,(%eax)
xor    %dl,0x1864ffff(%esi)
add    %al,(%eax)
loopne 805aafc <_IO_stdin_used+0x23d8>
(bad)
decl   0x10000018(%eax)
xchg   %eax,%edi
(bad)
jmp    *0x40000018(%eax)
xchg   %eax,%edi
(bad)
(bad)
mov    $0x70000018,%eax
xchg   %eax,%edi
(bad)
call   *%eax
sbb    %al,(%eax)
add    %ah,(%eax)
cwtl
(bad)
push   %esp
sbb    %al,(%eax)
add    %ah,-0x68(%eax)
(bad)
decl   (%ecx,%ebx,1)
add    %al,(%eax)
mov    0x24ffff98,%al
sbb    %eax,(%eax)
add    %ah,%al
cwtl
(bad)
(bad)
cmp    $0x19,%al
add    %al,(%eax)
add    %bl,0x1950ffff(%ecx)
add    %al,(%eax)
and    %bl,0x1964ffff(%ecx)
add    %al,(%eax)
inc    %eax
cltd
(bad)
(bad)
js     805abd3 <_IO_stdin_used+0x24af>
add    %al,(%eax)
pusha
cltd
(bad)
decl   -0x65600000(%ecx,%ebx,1)
(bad)
dec    %esp
sbb    %eax,(%eax)
add    %al,(%eax)
fwait
(bad)
call   *(%edx,%ebx,1)
add    %al,(%eax)
and    %bl,0x1a2cffff(%ebx)
add    %al,(%eax)
inc    %eax
fwait
(bad)
incl   0x0(%edx,%ebx,1)
add    %al,-0x7f000065(%eax)
sbb    (%eax),%al
add    %dl,-0x64(%eax)
(bad)
(bad)
mov    $0x3000001a,%eax
popf
(bad)
(bad)
clc
sbb    (%eax),%al
add    %al,%al
mov    0x1b80ffff,%eax
add    %al,(%eax)
lock mov 0x1b98ffff,%eax
add    %al,(%eax)
add    %ah,0x1be4ff(%edi,%edi,8)
add    %dh,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
decl   (%eax)
sbb    $0x0,%al
add    %ah,-0x5c(%eax)
(bad)
ljmp   *(%esp,%ebx,1)
add    %al,(%eax)
jo     805abca <_IO_stdin_used+0x24a6>
(bad)
incl   0x1c(%eax)
add    %al,(%eax)
shlb   $0x0,0x1c70ff(%edi,%edi,8)
add    %ah,0x1c9cffff(%ebp)
add    %al,(%eax)
pusha
movsl  %ds:(%esi),%es:(%edi)
(bad)
dec    %esp
sbb    $0x0,%al
add    %dh,-0xf00005b(%eax)
sbb    $0x0,%al
add    %ah,%al
movsl  %ds:(%esi),%es:(%edi)
(bad)
call   *(%eax)
sbb    $0xa6100000,%eax
(bad)
ljmp   *-0x59c00000(,%ebx,1)
(bad)
decl   0x0(%ebp,%ebx,1)
add    %dh,-0x5a(%eax)
(bad)
ljmp   *0x0(%ebp,%ebx,1)
add    %al,%al
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
call   *-0x1fffffe3(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
(bad)
fcomps 0xa8400000
(bad)
incl   (%esi,%ebx,1)
add    %al,(%eax)
xor    %ch,0x1e44ffff(%ecx)
add    %al,(%eax)
pusha
test   $0x1e58ffff,%eax
add    %al,(%eax)
lock test $0x1eb0ffff,%eax
add    %al,(%eax)
add    %ch,0x1ec4ffff(%edx)
add    %al,(%eax)
xor    %ch,0x1edcffff(%edx)
add    %al,(%eax)
nop
stos   %al,%es:(%edi)
(bad)
(bad)
clc
push   %ds
add    %al,(%eax)
push   %eax
(bad)
(bad)
ljmp   *(%eax)
pop    %ds
add    %al,(%eax)
add    %cl,%al
(bad)
ljmp   *0x1f(%eax)
add    %al,(%eax)
pusha
enter  $0xffff,$0xb4
pop    %ds
add    %al,(%eax)
loopne 805ac96 <_IO_stdin_used+0x2572>
(bad)
(bad)
cld
pop    %ds
add    %al,(%eax)
or     $0xff,%cl
call   *0x20(%eax)
add    %al,(%eax)
inc    %eax
int    $0xff
call   *0x70000020(%eax)
int    $0xff
ljmp   *0x10000020(%eax)
into
(bad)
push   %eax
and    %al,(%eax)
add    %dh,-0x32(%eax)
(bad)
call   *(%ecx,%eiz,1)
add    %al,(%eax)
push   %eax
iret
(bad)
call   *0x21(%eax)
add    %al,(%eax)
lock (bad)
call   *0x70000021(%eax)
fdivr  %st,%st(7)
dec    %eax
and    %eax,(%eax)
add    %al,-0x22(%eax)
(bad)
incl   (%eax)
and    (%eax),%al
add    %dh,0x3cffffde(%eax)
and    (%eax),%al
add    %al,%al
fdivrp %st,%st(7)
call   *0x22(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805ad43 <_IO_stdin_used+0x261f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xor    $0xe2,%al
(bad)
call   *0x5(%eax)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805ad63 <_IO_stdin_used+0x263f>
js     805ad61 <_IO_stdin_used+0x263d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0x2dfffeed(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,%ah
in     (%dx),%eax
(bad)
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4c02(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa810204(%ebx)
ret
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%edx,%ecx,1),%ecx
push   %cs
or     $0x47,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
add    %al,(%eax)
add    %cl,0x27fffe(%esi,%ebp,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36502(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,-0x60000000(%eax)
out    %al,(%dx)
(bad)
jmp    *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %al,(%edx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
int3
add    %al,(%eax)
add    %dh,-0x2(%edi,%ebp,8)
ljmp   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %cl,(%ecx,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
lock (bad)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a9e02
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%edi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
sbb    %dh,%cl
(bad)
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
push   $0xa
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ebp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
mov    0x30000001,%al
repnz (bad)
jmp    *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    (%ecx),%edx
add    %ecx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,%al
add    %eax,(%eax)
add    %dh,-0xd(%eax)
(bad)
call   *0x7(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
aas
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%al
add    %bh,0x4efffefa(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4802(%ebx)
add    0xe(%ebx),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
add    (%eax),%al
add    %ah,%ah
cli
(bad)
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x5ff1b9fe(%ebx)
add    %eax,(%edx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x2(%eax)
add    %al,(%eax)
xor    %bh,%bl
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
add    (%eax),%al
add    %cl,-0x2(%ebx,%edi,8)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
jle    805afef <_IO_stdin_used+0x28cb>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x2,$0x0
push   $0x31fffefb
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc9,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
or     %al,(%ebx)
add    %al,(%eax)
push   $0x88fffefc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %esp
push   %cs
adc    %al,0x300e4504(%ebx)
jge    805b05f <_IO_stdin_used+0x293b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
add    (%eax),%eax
add    %al,%al
cld
(bad)
jmp    *(%edx)
or     $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb4,0x3500e43
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
addb   $0x0,(%ebx)
add    %dh,-0x3a0000f8(%eax)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x100e0a01(%ebp),%edi
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
mov    $0x48000003,%eax
push   %cs
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    (%eax),%eax
add    %bh,-0x1(%esi,%ecx,1)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,(%eax)
add    %al,(%eax)
add    %ch,%al
add    (%eax),%eax
add    %bl,0x60ffff0e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4802(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
or     $0x4,%al
add    %al,(%eax)
aam    $0xe
(bad)
call   *0x3(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%ebx)
jp     805b156 <_IO_stdin_used+0x2a32>
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
xchg   %eax,%esi
add    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
add    $0x0,%al
add    %dh,%ah
adc    %edi,%edi
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
test   %al,(%eax,%eax,1)
add    %cl,-0x1(%edx,%edx,1)
inc    %edi
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x9e00e46
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
les    (%eax,%eax,1),%eax
add    %bl,%ah
and    $0xff,%al
ljmp   *0x0
dec    %esp
push   %cs
or     %al,0x100e4302(%ebx)
push   %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,%ah
add    $0x0,%al
add    %bh,0x55cfffe(%edx,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x10,%eax
add    $0x5,%al
add    %al,(%eax)
int3
and    $0xff,%al
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %al,0x24d80000
(bad)
push   %edi
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x11,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%ebp
add    %bl,0x5(%eax)
add    %al,(%eax)
cwtl
sub    %edi,%edi
(bad)
cli
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0xbd00e46
repz add $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,%al
add    $0x2f280000,%eax
(bad)
jmp    *0x6(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xad00e46
clc
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
or     $0x6,%al
add    %al,(%eax)
inc    %esp
xor    $0x198ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
mov    $0x9,%al
add    (%eax),%esi
add    %ecx,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,(%esi,%eax,1)
add    %al,(%eax)
mov    $0x36,%ah
(bad)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff96,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
add    %ecx,%es:(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
push   %es
add    %al,(%eax)
sbb    $0x3a,%al
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %bh,0xe(%ebx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %es
add    %al,(%eax)
push   %esp
cmp    %bh,%bh
call   *0x0(%esi)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
rolb   $0x0,(%esi)
add    %ah,%al
cmp    %bh,%bh
incl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x2280e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
mov    $0x3b,%al
(bad)
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb2,0x2180e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
pop    %es
add    %al,(%eax)
jo     805b4ae <_IO_stdin_used+0x2d8a>
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x45,(%ebx)
push   %cs
inc    %eax
add    0xe(%edx),%bl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %es
add    %al,(%eax)
mov    $0x3c,%ah
(bad)
jmp    *0x4(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x43,0x3500e43
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
lods   %ds:(%esi),%al
pop    %es
add    %al,(%eax)
in     $0x40,%al
(bad)
(bad)
mov    $0x1,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x27,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     (%dx),%al
pop    %es
add    %al,(%eax)
fs
inc    %edx
(bad)
lcall  *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax),%edx
add    %al,(%eax)
sub    $0x8,%al
add    %al,(%eax)
les    -0x1(%ebx),%eax
ljmp   *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x11,0x3300e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,-0x5ffffff8(%eax)
inc    %ebp
(bad)
jmp    *0x3(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
cld
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebp)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,%al
or     %al,(%eax)
add    %ah,%al
dec    %eax
(bad)
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4702(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a9902
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    $0x9,%al
add    %al,(%eax)
and    $0x4a,%al
(bad)
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
mov    $0xc3410c0e,%eax
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
pop    %eax
or     %eax,(%eax)
add    %cl,%al
dec    %edx
(bad)
pushl  0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
fildl  (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x4d040000(%ecx,%ecx,1)
(bad)
inc    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xfffffff7,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,%ah
or     %eax,(%eax)
add    %bh,-0x1(%esi,%ecx,2)
ljmp   *0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbe,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
jecxz  805b769 <_IO_stdin_used+0x3045>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x0(%edx,%ecx,1)
add    %dl,0x6afffff(%edx,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x74,0x3700e43
add    $0xa,%al
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
call   1c13c1bb <optarg+0x140ddc57>
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %ah,0x58ec0000(%edx,%ecx,1)
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %ah,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
rorb   $0x0,(%edx)
add    %ah,(%eax)
pop    %ecx
(bad)
call   *0x3(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x27,0x3300e48
add    (%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,0x36ffff5c(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    %eax,0x410c0e0a
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
cmp    $0xb,%al
add    %al,(%eax)
test   %bl,-0x1(%ebp)
lcall  *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x3(%esi),%esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
je     805b8ad <_IO_stdin_used+0x3189>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa430202(%ebx)
ret
push   %cs
add    $0x44,%al
or     -0x3d(%esi),%ecx
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x57fffff5(%eax)
(bad)
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,0x62e40000(%ebx,%ecx,1)
(bad)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6a300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
arpl   %cx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,0x63(%eax)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2200e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,(%esp,%ecx,1)
add    %al,(%eax)
push   %esp
arpl   %di,%di
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,0x0(%esp,%ecx,1)
add    %ah,-0x1(%ebx,%eiz,2)
incl   0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     805b9aa <_IO_stdin_used+0x3286>
add    %al,(%eax)
pusha
arpl   %di,%di
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jp     805b9c1 <_IO_stdin_used+0x329d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0x7ffffff4(%eax)
arpl   %di,%di
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %dl,0x0(%eax,%eax,1)
add    %ah,0x63ac0000(%esp,%ecx,1)
(bad)
jmp    *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
or     $0x0,%al
add    %al,0x26ffff(,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
or     $0x65200000,%eax
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0xd,%al
add    %al,(%eax)
fs
gs
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
or     $0x65b40000,%eax
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     $0x65d40000,%eax
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xa,0x7b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
or     $0x65f40000,%eax
(bad)
pushl  0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    %al,0x430c0e0a
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
fmull  0x66840000
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %bh,0xe(%ecx)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
hlt
or     $0x66bc0000,%eax
(bad)
pushl  0x0(%eax)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %bh,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
adc    %cl,(%esi)
add    %al,(%eax)
adc    %ah,-0x1(%edi)
ljmp   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
add    0xa(%ebx),%ah
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x41,%al
or     0xa(%edx),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
push   %cs
add    %al,(%eax)
nop
addr16 (bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x180e4304(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
js     805bbb4 <_IO_stdin_used+0x3490>
add    %al,(%eax)
mov    $0x58ffff67,%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
fisttpl (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
mov    $0xd800000e,%eax
push   $0x45effff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %al,(%ebx)
cwtl
add    (%edx),%cl
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
call   1005bc27 <optarg+0x7ffd6c3>
insl   (%dx),%es:(%edi)
(bad)
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %cl,(%edi)
add    %al,(%eax)
cmp    %ch,-0x1(%ebp)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,(%edi,%ecx,1)
add    %al,(%eax)
xor    $0x6d,%al
(bad)
call   *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    %cl,%bl
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,0xf(%eax)
add    %al,(%eax)
xor    %ch,-0x1(%esi)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi,%ecx,1)
add    %ch,(%esi,%ebp,2)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0xf(%eax)
add    %al,(%eax)
sub    %ch,-0x1(%esi)
pushl  0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
js     805bcc5 <_IO_stdin_used+0x35a1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
pushf
sldt   (%eax)
les    -0x1(%esi),%ebp
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    $0xf,%ah
add    %al,(%eax)
in     (%dx),%al
outsb  %ds:(%esi),(%dx)
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%eax),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fmuls  (%edi)
add    %al,(%eax)
sbb    %ch,-0x1(%edi)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
add    $0x10,%al
add    %al,(%eax)
sbb    $0x6f,%al
(bad)
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %al,0x0(%eax,%edx,1)
add    %cl,%ah
outsl  %ds:(%esi),(%dx)
(bad)
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %cl,0x70640000(%eax,%edx,1)
(bad)
decl   (%edx)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
push   %edx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
rclb   (%eax)
add    %al,(%eax)
xor    %bh,-0x1(%edx)
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dl,(%eax)
adc    %eax,(%eax)
add    %dl,0x36ffff7b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx,%edx,1)
add    %bl,0x11ffff(%ebx,%edi,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
adc    %eax,(%eax)
add    %ch,0x15ffff7b(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx,%edx,1)
add    %dh,0x3fffff(%ebx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
nop
adc    %eax,(%eax)
add    %dl,%al
jnp    805bec2 <_IO_stdin_used+0x379e>
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x7bdc0000(%ecx,%edx,1)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
enter  $0x11,$0x0
clc
jnp    805befa <_IO_stdin_used+0x37d6>
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %al,(%edx,%edx,1)
add    %al,(%eax)
sub    $0x7c,%al
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x12(%eax)
add    %al,(%eax)
sarb   -0x1(%edi,%edi,8)
sub    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
pop    %eax
adc    (%eax),%al
add    %ch,%al
jl     805bf8a <_IO_stdin_used+0x3866>
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %ss,(%edx)
add    %al,(%eax)
inc    %esp
jge    805bfbe <_IO_stdin_used+0x389a>
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x50000012(%eax)
jge    805bfd2 <_IO_stdin_used+0x38ae>
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x7d5c0000(%edx,%edx,1)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
adc    (%eax),%al
add    %ch,0x7d(%eax)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
fcoml  (%edx)
add    %al,(%eax)
je     805c08b <_IO_stdin_used+0x3967>
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,%ah
adc    (%eax),%al
add    %al,0x2cffff(%ebp,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,(%ebx,%edx,1)
add    %al,(%eax)
xchg   %eax,%esp
jge    805c04e <_IO_stdin_used+0x392a>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    $0x13,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
jge    805c066 <_IO_stdin_used+0x3942>
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
adc    (%eax),%eax
add    %al,%ah
jge    805c07e <_IO_stdin_used+0x395a>
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jo     805c0b1 <_IO_stdin_used+0x398d>
add    %al,(%eax)
push   %eax
jle    805c0a2 <_IO_stdin_used+0x397e>
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %dl,(%ebx)
add    %al,(%eax)
push   $0x23ffff7e
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    0x80000013,%al
jle    805c0d2 <_IO_stdin_used+0x39ae>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    $0x98000013,%eax
jle    805c0ea <_IO_stdin_used+0x39c6>
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
fcoml  (%ebx)
add    %al,(%eax)
and    $0x7f,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
hlt
adc    (%eax),%eax
add    %cl,-0x1(%edi,%edi,2)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     $0x14,%al
add    %al,(%eax)
je     805c1bd <_IO_stdin_used+0x3a99>
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
and    $0x14,%al
add    %al,(%eax)
pushf
jg     805c156 <_IO_stdin_used+0x3a32>
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
adc    $0x0,%al
add    %ch,0x17ffff7f(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esp,%edx,1)
add    %dh,0x1affff(%edi,%edi,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pusha
adc    $0x0,%al
add    %al,%al
jg     805c192 <_IO_stdin_used+0x3a6e>
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
je     805c1b6 <_IO_stdin_used+0x3a92>
add    %al,(%eax)
int3
jg     805c1a6 <_IO_stdin_used+0x3a82>
(bad)
cmp    %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x16,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %dh,-0x7f340000(%esp,%edx,1)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
cld
adc    $0x0,%al
add    %ah,%ah
cmp    $0xff,%bh
adc    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
adc    $0x15,%al
add    %al,(%eax)
in     (%dx),%al
cmp    $0xff,%bh
pop    %ss
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
sub    $0x15,%al
add    %al,(%eax)
hlt
cmp    $0xff,%bh
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
push   $0xf8000015
cmp    $0xff,%bh
lds    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    0x90000015,%al
cmp    $0xdaff,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,0x15e00000(%eax,%eax,1)
add    %al,(%eax)
xor    %al,0x485ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jge    805c356 <_IO_stdin_used+0x3c32>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
push   $0x38000016
xchg   %bh,%bh
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %al,0x50000016(%eax)
xchg   %bh,%bh
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%ebx)
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
int3
push   %ss
add    %al,(%eax)
adc    $0x88,%al
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lock push %ss
add    %al,(%eax)
and    %cl,0x2effff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x17,%al
add    %al,(%eax)
sub    $0x88,%al
(bad)
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
sub    %dl,(%edi)
add    %al,(%eax)
sub    %cl,0x44ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %eax
pop    %ss
add    %al,(%eax)
dec    %eax
mov    %bh,%bh
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
test   %dl,(%edi)
add    %al,(%eax)
pop    %esp
mov    %bh,%bh
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    $0x17,%ah
add    %al,(%eax)
mov    %cs,0x49ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
fcoms  (%edi)
add    %al,(%eax)
mov    $0x29ffff88,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bh,%al
pop    %ss
add    %al,(%eax)
enter  $0xff88,$0xff
and    $0x0,%eax
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x18,%al
add    %al,(%eax)
fmull  0x29ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,(%eax,%ebx,1)
add    %al,(%eax)
in     (%dx),%al
mov    %bh,%bh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,0x0(%eax,%ebx,1)
add    %bh,%ah
mov    %bh,%bh
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0x8(%esi,%ecx,1),%al
inc    %ebx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,0x18(%eax)
add    %al,(%eax)
sub    %cl,0x11fffff(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,%al
sbb    %al,(%eax)
add    %al,(%eax)
mov    %bh,%bh
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
sbb    %al,(%eax)
add    %dh,(%edx,%ecx,4)
(bad)
jmp    *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10900e46
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,(%ecx,%ebx,1)
add    %al,(%eax)
in     $0x8a,%al
(bad)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,0x19(%eax)
add    %al,(%eax)
add    %cl,0x8cffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cwtl
sbb    %eax,(%eax)
add    %bh,(%eax)
mov    %edi,%edi
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    %eax,(%eax)
add    %dh,(%ebx,%ecx,4)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
les    (%ecx),%ebx
add    %al,(%eax)
dec    %esp
mov    %edi,%edi
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xa(%ebp),%dl
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
loopne 805c727 <_IO_stdin_used+0x4003>
add    %al,(%eax)
nop
mov    %edi,%edi
(bad)
mov    $0x1b,%eax
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
adc    %bl,(%edx)
add    %al,(%eax)
and    %ah,0xe5ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10900e46
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%ecx
add    %al,(%eax)
push   %eax
sbb    (%eax),%al
add    %dl,0x5cffffa8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4b02
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,-0x575c0000(%edx,%ebx,1)
(bad)
(bad)
jns    805c7d2 <_IO_stdin_used+0x40ae>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jns    805c7f3 <_IO_stdin_used+0x40cf>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ah,%ah
sbb    (%eax),%al
add    %bl,%ah
test   $0xff,%al
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x62300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cmp    %bl,(%ebx)
add    %al,(%eax)
sub    %ch,0x3b9ffff(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
js     805c8c1 <_IO_stdin_used+0x419d>
add    %al,(%eax)
test   $0xac,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %dl,-0x3fffffe5(%eax)
lods   %ds:(%esi),%al
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
fcomps (%ebx)
add    %al,(%eax)
sbb    %ch,0x52ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cld
sbb    (%eax),%eax
add    %dl,-0x1(%ebp,%ebp,4)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,(%eax)
sbb    $0x0,%al
add    %bh,%al
lods   %ds:(%esi),%eax
(bad)
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
js     805c9c2 <_IO_stdin_used+0x429e>
add    %al,(%eax)
pop    %eax
mov    $0x172ffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x1c,%al
add    %al,(%eax)
mov    0xc2ffffba,%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0x41100e0a(%ebp),%al
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%al
sbb    $0x0,%al
add    %bh,(%eax)
mov    $0x63ffff,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,-0x43940000(,%ebx,1)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
sbb    $0xbc680000,%eax
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
lock
.byte 0x9a
add    $0x8,%al
.byte 0xd0
.byte 0x9a
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
push   %esp
popl   (%eax,%ecx,1)
or     $0xc000000,%eax
xchg   %eax,0x1908
add    %cl,(%eax)
fild   0x1b08
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0xdf,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
cwtl
xchg   %eax,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %ch,%al
addl   $0xa,(%eax,%ecx,1)
xchg   %eax,%ebp
add    (%eax),%eax
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
loopne 805df88 <_IO_stdin_used+0x5864>
or     %al,(%edx)
add    %al,(%eax)
add    %ah,0x14000002(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %dh,0x110804(%esp,%ecx,4)
add    %al,(%eax)
test   %cl,0x1208(%esp,%eax,1)
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x1c(%edi)
mov    (%eax,%ecx,1),%eax
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x2e(%edi)
mov    (%eax,%ecx,1),%eax
add    %al,(%eax)
adc    $0xdf,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x59f7fb71(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    805dfd6 <_IO_stdin_used+0x58b2>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    805e017 <_IO_stdin_used+0x58f3>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    805e058 <_IO_stdin_used+0x5934>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    805e099 <_IO_stdin_used+0x5975>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    805e0da <_IO_stdin_used+0x59b6>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
fist   -0x6bc7f7fb(%ebx)
add    $0x5932d08,%eax
or     %ch,(%eax)
xchg   %eax,%ebx
add    $0x5943b08,%eax
or     %bh,(%edi)
xchg   %eax,%esp
add    $0x5944208,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%bh
xchg   %eax,%ebx
add    $0x5943808,%eax
or     %bh,(%edi)
xchg   %eax,%esp
add    $0x5944508,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,%al
and    $0x5,%al
or     %bh,%bh
(bad)
(bad)
incl   (%esi)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x6000500,%eax
add    %al,(%esi)
add    %al,(%edi)
add    %al,(%edi)
add    %cl,(%eax)
add    %cl,(%eax)
add    %cl,(%ecx)
add    %cl,(%ecx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %cl,(%ebx)
add    %cl,(%ebx)
add    %cl,(%eax,%eax,1)
or     $0x0,%al
or     $0xd00,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x9000700,%eax
add    %cl,0x19001100
add    %ah,(%ecx)
add    %dh,(%ecx)
add    %al,0x0(%ecx)
popa
add    %al,0x100c100(%ecx)
add    %eax,0x1020101(%ecx)
add    (%ecx),%eax
add    $0x1,%al
push   %es
add    %ecx,(%eax)
add    %ecx,(%ecx,%eax,1)
adc    %al,(%ecx)
sbb    %al,(%ecx)
and    %al,(%ecx)
xor    %al,(%ecx)
inc    %eax
add    %esp,0x0(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x5000500,%eax
add    %al,0x63000000
add    %ah,0x0(%ebx)
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    $0x7000600,%eax
add    %cl,(%eax)
add    %cl,(%ecx)
add    %cl,(%edx)
add    %cl,(%ebx)
add    %cl,0x11000f00
add    %dl,(%ebx)
add    %dl,(%edi)
add    %bl,(%ebx)
add    %bl,(%edi)
add    %ah,(%ebx)
add    %ch,(%ebx)
add    %dh,(%ebx)
add    %bh,(%ebx)
add    %al,0x0(%ebx)
push   %ebx
add    %ah,0x0(%ebx)
jae    805e2f0 <_IO_stdin_used+0x5bcc>
addl   $0xffffffa3,(%eax)
add    %al,%bl
add    %ah,%bl
add    %al,(%edx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%al
push   %es
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x1d(%eax)
add    $0x8,%eax
add    %dl,(%ebx)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x7ff7f9f4(%eax)
pop    %es
push   %es
or     %al,%al
jecxz  805e32c <_IO_stdin_used+0x5c08>
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%esi)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x8060d(%eax)
or     %al,(%esi)
or     %al,-0x1c(%eax)
add    $0x10108,%eax
add    %bl,(%esi)
add    %eax,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x5000000,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0xd000000,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x5000000,%eax
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x1000000(%eax)
(bad)
(bad)
push   %eax
mov    0x10805,%eax
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,0x1000805(,%eiz,8)
add    %al,(%eax)
rcrb   $0x6,(%ebx)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addr16 jp 6c <raise@plt-0x8048f24>
jo     5 <raise@plt-0x8048f8b>
add    %al,(%eax)
add    %dl,-0x74(%ebp)
.byte 0x3b
pop    %eax
