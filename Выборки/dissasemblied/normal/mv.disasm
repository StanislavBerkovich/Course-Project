das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,-0x5b6ec0ee(%ebp,%eiz,1)
sub    $0x1e216fb8,%eax
pop    %ecx
mov    %eax,0x5e299c34
je     8048157 <_init-0x17f9>
.byte 0x2a
adc    %eax,(%eax)
add    %al,(%eax)
addl   $0x0,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    (%eax),%dl
and    %ecx,(%edx,%eiz,1)
sub    %al,(%eax)
add    %al,(%eax)
addb   $0x20,(%eax)
add    %al,-0x63ffbf00(%ecx)
sub    %al,0x2588099
and    %esp,(%esp,%eax,1)
or     %al,(%ebx,%eax,4)
add    %al,(%eax)
add    %al,-0x7a000000(%ebp)
add    %al,(%eax)
add    %cl,-0x75000000(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
add    %cl,-0x6f000000(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
add    %dl,-0x6b000000(%ebx)
add    %al,(%eax)
add    %dl,-0x68000000(%esi)
add    %al,(%eax)
add    %bl,-0x44000000(%edx)
push   %eax
jbe    80481c2 <_init-0x178e>
inc    %ebx
ret
mov    %dl,0xeefd3eb(%edx)
xor    %ah,%al
notl   (%edx)
mov    $0x860ef18d,%ecx
lock xchg %eax,%esi
jl     8048211 <_init-0x173f>
jno    8048293 <_init-0x16bd>
sbb    $0x97,%al
mov    0x2cce9789,%al
arpl   %si,-0x54(%edx)
dec    %ebx
jecxz  8048208 <_init-0x1748>
mov    $0xc77c92e3,%ebx
push   %cs
loopne 804828d <_init-0x16c3>
cmp    %dh,%dl
mov    (%ebx,%eax,2),%ebx
inc    %ebp
aad    $0xec
in     $0x62,%eax
inc    %ecx
cmc
mov    $0xa2,%bl
notl   (%edx)
push   %bp
popa
adc    %ah,-0x221d3a01(%edi)
dec    %ebx
popa
(bad)
or     $0x39,%al
mov    -0xd8ffa05(%edx),%dl
cmp    $0xad,%al
cmp    %ecx,0x91c3d0a5
.byte 0x29
.byte 0x1d
.byte 0x8c
.byte 0x1c
push   %ebx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     80482d2 <_init-0x167e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pushf
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ecx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x4
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
das
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fadds  (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     8048616 <_init-0x133a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %es,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax,%eax,1),%es
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x0
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stc
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ecx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    8048935 <_init-0x101b>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x0,%ax
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,%dh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x1
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x3
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %esi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    $0x52a00000,%eax
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
aaa
add    $0x87b00000,%eax
add    $0x37b08,%eax
add    %dl,(%edx)
add    %cl,0xcd00
add    %bl,0x5(%ebp,%ebx,8)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %dh,%dl
add    %eax,(%eax)
add    %ah,%al
push   %edx
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   $0x0
add    %al,(%eax)
push   %eax
cltd
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
add    %ax,(%eax)
add    %ah,-0x66(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x6,%al
add    %al,(%eax)
test   %dl,0x6(%edx)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ah,-0x3ffffffe(%esi)
push   %edx
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
lock add $0x52c00000,%eax
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sahf
add    %eax,(%eax)
add    %al,0x40805(%ebp,%ebx,8)
add    %al,(%eax)
adc    %eax,(%eax)
verr   (%eax)
push   %es
add    %al,(%eax)
cwtl
pop    %eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %bh,0x2(%ebp)
add    %al,(%eax)
jo     8048b02 <_init-0xe4e>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %esi
add    $0x0,%al
add    %ah,0x40806(%edx,%edx,2)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     $0x84000006,%eax
push   %edx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %ch,%bl
add    $0x0,%al
add    %ah,0x4080652(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %dh,(%esp,%eax,1)
add    %al,(%eax)
add    $0x53,%al
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    (%edx),%eax
add    %al,(%eax)
in     $0x52,%al
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
icebp
add    (%eax),%al
add    %dh,(%eax)
mov    0x18608,%eax
add    %dl,(%edx)
add    %cl,0x42c00
add    %dl,%al
xchg   %eax,%esp
add    $0x3408,%eax
add    %dl,(%edx)
add    %cl,0x3a300
add    %al,%al
mov    %es,0x80508
add    %dl,(%edx)
add    %cl,0x57500
add    %dl,(%eax)
xchg   %eax,%ebp
add    $0x15108,%eax
add    %dl,(%edx)
add    %cl,0x3c500
add    %dl,0x8049c(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    (%eax),%al
add    %dl,%al
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebx
add    (%eax),%eax
add    %al,(%eax)
push   %ebx
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
jae    8048c9b <_init-0xcb5>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048caf <_init-0xca1>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048cda <_init-0xc76>
popa
jb     8048cdd <_init-0xc73>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048ccf <_init-0xc81>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048cf0 <_init-0xc60>
gs
jae    8048c80 <_init-0xcd0>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048cec <_init-0xc64>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x73690074,0x69(%esi),%ebp
pop    %edi
jae    8048d0a <_init-0xc46>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x65(%edi)
je     8048d1d <_init-0xc33>
jae    8048d1c <_init-0xc34>
jb     8048d20 <_init-0xc30>
popa
je     8048d23 <_init-0xc2d>
arpl   %bp,0x6e(%edi)
add    %ah,0x67(%esi)
gs
je     8048d2d <_init-0xc23>
imul   $0x66006e6f,0x63(%ebp,%eiz,2),%ebp
jb     8048d36 <_init-0xc1a>
arpl   %bp,%gs:0x6e(%edi)
add    %ch,0x65(%edi,%eiz,2)
je     8048d41 <_init-0xc0f>
imul   $0x66006e6f,0x63(%ebp,%eiz,2),%ebp
jae    8048d4a <_init-0xc06>
je     8048d4d <_init-0xc03>
imul   $0x73006e6f,0x63(%ebp,%eiz,2),%ebp
gs
je     8048d58 <_init-0xbf8>
jae    8048d57 <_init-0xbf9>
jb     8048d5b <_init-0xbf5>
popa
je     8048d5e <_init-0xbf2>
arpl   %bp,0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
popa
arpl   %bp,0x73(%esi,%ebp,1)
outsl  %ds:(%esi),(%dx)
xor    %eax,%cs:(%eax)
popa
arpl   %bp,0x67(%edi,%ebx,2)
gs
je     8048d76 <_init-0xbda>
data16
add    %ah,%fs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048d81 <_init-0xbcf>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048d8e <_init-0xbc2>
outsb  %gs:(%esi),(%dx)
je     8048da5 <_init-0xbab>
jns    8048d35 <_init-0xc1b>
popa
arpl   %bp,0x66(%edi,%ebx,2)
jb     8048dab <_init-0xba5>
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ah,%fs:%gs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048daa <_init-0xba6>
je     8048dae <_init-0xba2>
addr16 pop %edi
je     8048dca <_init-0xb86>
jo     8048db8 <_init-0xb98>
add    %ah,0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
jae    8048dbf <_init-0xb91>
je     8048dbb <_init-0xb95>
data16
add    %ah,%fs:0x63(%ecx)
insb   (%dx),%es:(%edi)
pop    %edi
gs
js     8048dda <_init-0xb76>
outsb  %gs:(%esi),(%dx)
fs
gs
fs
pop    %edi
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
jae    8048ddc <_init-0xb74>
je     8048dd8 <_init-0xb78>
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8048ded <_init-0xb63>
pop    %edi
fs
gs
pop    %di
imul   $0x6361,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     8048dfe <_init-0xb52>
add    %ch,%gs:0x62(%ecx,%ebp,2)
popa
je     8048e15 <_init-0xb3b>
jb     8048dd1 <_init-0xb7f>
jae    8048e14 <_init-0xb3c>
xor    %eax,%cs:(%eax)
popa
je     8048e1f <_init-0xb31>
jb     8048e0c <_init-0xb44>
arpl   %bp,0x70(%edi)
jns    8048e11 <_init-0xb3f>
data16
add    %ah,%fs:0x74(%ecx)
je     8048e2b <_init-0xb25>
pop    %edi
arpl   %bp,0x70(%edi)
jns    8048e1e <_init-0xb32>
imul   $0x696c,0x0(%ebp,%eiz,2),%bp
bound  %esp,0x2e(%ebx)
jae    8048e3a <_init-0xb16>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048e48 <_init-0xb08>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048e55 <_init-0xafb>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8048e68 <_init-0xae8>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x70,(%eax),%eax
popa
je     8048e6b <_init-0xae5>
arpl   %bp,0x6e(%edi)
data16
add    %dh,0x65(%ebx)
je     8048e78 <_init-0xad8>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048e8a <_init-0xac6>
outsl  %ds:(%esi),(%dx)
ja     8048e7c <_init-0xad4>
add    %dh,0x74(%ebx)
jb     8048e8c <_init-0xac4>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048e8f <_init-0xac1>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048e9f <_init-0xab1>
arpl   %bp,0x72(%eax)
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x72007461,0x6b(%esi),%ebp
jo     8048eac <_init-0xaa4>
popa
je     8048ea5 <_init-0xaab>
push   $0x67636400
gs
je     8048ebe <_init-0xa92>
gs
js     8048ec1 <_init-0xa8f>
add    %ah,0x74(%esi)
jb     8048ec7 <_init-0xa89>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
ss
xor    $0x0,%al
pop    %edi
pop    %edi
data16
js     8048ed2 <_init-0xa7e>
je     8048ec2 <_init-0xa8e>
je     8048ec4 <_init-0xa8c>
je     8048e9b <_init-0xab5>
xor    $0x0,%al
jne    8048ed7 <_init-0xa79>
insb   (%dx),%es:(%edi)
imul   $0x63007461,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048eda <_init-0xa76>
imul   $0x64686366,%fs:0x0(%edx),%esi
imul   $0x6f727265,0x0(%edx),%esi
jb     8048e86 <_init-0xaca>
pop    %edi
pop    %edi
jae    8048efe <_init-0xa52>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x69,(%eax),%eax
jae    8048f18 <_init-0xa38>
jo     8048f15 <_init-0xa3b>
imul   $0x646b6d00,0x74(%esi),%ebp
imul   $0x6c616572,0x0(%edx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048ebb <_init-0xa95>
jae    8048f31 <_init-0xa1f>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     8048ec7 <_init-0xa89>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jb     8048f36 <_init-0xa1a>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048f3d <_init-0xa13>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048f66 <_init-0x9ea>
gs
jb     8048f6a <_init-0x9e6>
pop    %edi
popaw
imul   $0x726f7272,0x65(%eax,%eax,1),%ebp
pop    %edi
popa
je     8048f64 <_init-0x9ec>
insb   (%dx),%es:(%edi)
imul   $0x635f5f00,0x65(%esi),%ebp
je     8048f88 <_init-0x9c8>
jo     8048f76 <_init-0x9da>
pop    %edi
addr16
gs
je     8048f75 <_init-0x9db>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048f8e <_init-0x9c2>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048f21 <_init-0xa2f>
data16
je     8048f97 <_init-0x9b9>
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x73(%ecx)
popa
je     8048fa4 <_init-0x9ac>
jns    8048f32 <_init-0xa1e>
insb   (%dx),%es:(%edi)
arpl   %bp,0x6f(%eax)
ja     8048fa6 <_init-0x9aa>
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616300,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
jne    8048fbf <_init-0x991>
imul   $0x7300736e,0x65(%ebp),%ebp
je     8048fc6 <_init-0x98a>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048fc1 <_init-0x98f>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048fc9 <_init-0x987>
je     8048f66 <_init-0x9ea>
jne    8048fdc <_init-0x974>
imul   $0x7461736e,0x65(%ebp),%ebp
add    %bl,0x5f(%edi)
gs
jb     8048fe7 <_init-0x969>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8049003 <_init-0x94d>
popa
addr16
gs
jae    8049001 <_init-0x94f>
jp     8048fff <_init-0x951>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     8049003 <_init-0x94d>
jo     804901b <_init-0x935>
add    %bl,0x5f(%edi)
data16
js     804901b <_init-0x935>
je     804900b <_init-0x945>
je     8048fe2 <_init-0x96e>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8049025 <_init-0x92b>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
arpl   %bp,0x6f(%eax)
ja     8049030 <_init-0x920>
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    804903d <_init-0x913>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ah,0x74(%esi)
jae    8049036 <_init-0x91a>
jb     804903e <_init-0x912>
popa
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    804904e <_init-0x902>
add    %ah,0x75(%ebp)
imul   $0x73736563,0x63(%ecx,%eiz,2),%esp
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    804906b <_init-0x8e5>
popa
jae    804906c <_init-0x8e4>
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     804906c <_init-0x8e4>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     804907c <_init-0x8d4>
je     8049053 <_init-0x8fd>
xor    $0x0,%al
data16
jae    8049096 <_init-0x8ba>
popa
je     804908b <_init-0x8c5>
jae    804905d <_init-0x8f3>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8049093 <_init-0x8bd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8049031 <_init-0x91f>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     80490b4 <_init-0x89c>
je     80490a4 <_init-0x8ac>
je     804907b <_init-0x8d5>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80490be <_init-0x892>
outsb  %ds:(%esi),(%dx)
jbe    804905c <_init-0x8f4>
data16
je     80490d2 <_init-0x87e>
pop    %edi
jae    80490c7 <_init-0x889>
je     8049064 <_init-0x8ec>
outsl  %ds:(%esi),(%dx)
jo     80490db <_init-0x875>
popa
jb     80490d1 <_init-0x87f>
add    %bl,0x5f(%edi)
data16
jb     80490d5 <_init-0x87b>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     80490ee <_init-0x862>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
jae    80490f5 <_init-0x85b>
jo     80490fb <_init-0x855>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8049115 <_init-0x83b>
jo     804911c <_init-0x834>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
js     804911f <_init-0x831>
imul   $0x64,0x6f(%esi),%ebp
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%ebp)
imul   $0x65670073,0x65(%ebp),%ebp
je     804912c <_init-0x824>
ja     804912f <_init-0x821>
add    %bl,0x5f(%edi)
addr16
gs
je     8049136 <_init-0x81a>
gs
insb   (%dx),%es:(%edi)
imul   $0x69727766,0x0(%ebp),%ebp
je     8049142 <_init-0x80e>
add    %ah,0x65(%edi)
je     8049156 <_init-0x7fa>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    80490eb <_init-0x865>
jb     8049152 <_init-0x7fe>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     804915b <_init-0x7f5>
jne    8049161 <_init-0x7ef>
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     8049178 <_init-0x7d8>
imul   $0x665f5f00,0x65(%ebp),%ebp
jo     8049172 <_init-0x7de>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 8049182 <_init-0x7ce>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     80491a7 <_init-0x7a9>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     80491a3 <_init-0x7ad>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     80491c3 <_init-0x78d>
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
pop    %edi
imul   $0x616e,0x5f(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x74(%esi)
jae    80491ca <_init-0x786>
outsl  %ds:(%esi),(%dx)
jo     80491d3 <_init-0x77d>
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     80491e1 <_init-0x76f>
add    %bl,0x5f(%edi)
jae    80491ea <_init-0x766>
jb     80491e5 <_init-0x76b>
outsb  %ds:(%esi),(%dx)
je     80491e5 <_init-0x76b>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x75(%esi)
je     80491f1 <_init-0x75f>
insl   (%dx),%es:(%edi)
gs
jae    80491ed <_init-0x763>
je     804918e <_init-0x7c2>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80491fa <_init-0x756>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     8049201 <_init-0x74f>
js     8049212 <_init-0x73e>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x5f737466,0x0(%esi),%ebp
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
fs
jb     8049215 <_init-0x73b>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6b(%ebp)
imul   $0x6f00,0x6f(%esi),%sp
jo     8049221 <_init-0x72f>
outsb  %ds:(%esi),(%dx)
popa
je     80491f6 <_init-0x75a>
xor    $0x0,%al
popaw
arpl   %sp,0x65(%ebx)
jae    804923c <_init-0x714>
popa
je     80491cc <_init-0x784>
jae    8049242 <_init-0x70e>
jb     8049233 <_init-0x71d>
insl   (%dx),%es:(%edi)
jo     80491d3 <_init-0x77d>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8049253 <_init-0x6fd>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %bl,%fs:0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8049255 <_init-0x6fb>
jb     8049258 <_init-0x6f8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80491f6 <_init-0x75a>
jo     8049267 <_init-0x6e9>
jae    8049263 <_init-0x6ed>
js     804925b <_init-0x6f5>
popaw
fs
jbe    804926a <_init-0x6e6>
jae    8049268 <_init-0x6e8>
ss
xor    $0x0,%al
data16
jo     804927e <_init-0x6d2>
je     804927e <_init-0x6d2>
pop    %edi
jne    804927c <_init-0x6d4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %bl,%fs:0x5f(%edi)
jo     804928b <_init-0x6c5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8049296 <_init-0x6ba>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    804929a <_init-0x6b6>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     804929e <_init-0x6b2>
js     80492a4 <_init-0x6ac>
je     804923d <_init-0x713>
pop    %edi
gs
fs
popa
je     80492a4 <_init-0x6ac>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    80492c0 <_init-0x690>
popa
jb     80492c3 <_init-0x68d>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x54(%ecx)
push   %esp
push   %edx
pop    %edi
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %ecx
inc    %ebx
dec    %esp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    $0x3000000,%eax
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000700
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x9000300
add    %al,(%ebx)
add    %al,0x9000300
add    %al,(%ebx)
add    %cl,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x5000500
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%esi)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,0x7000300
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%esi)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
push   %es
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,0x3000500
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %eax,(%eax)
add    %eax,(%eax)
imul   $0x0,(%ecx),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x28(%ecx)
cwtl
or     %eax,(%eax)
add    %cl,(%ebx)
add    %ah,0x6
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %dl,%bl
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x24(%eax)
(bad)
add    $0x50000,%eax
cs
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
or     (%eax),%al
xchg   %eax,%esp
add    %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0xd0000,0xd(%ecx),%ebp
ss
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8049483 <_init-0x4cd>
imul   $0xc0000,(%ecx),%ecx
inc    %eax
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8049499 <_init-0x4b7>
imul   $0xa0000,(%ecx),%ecx
dec    %esp
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x90000,%eax
pop    %eax
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
or     %al,(%eax)
bound  %eax,(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x66d,0x70000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x60000,%eax
ja     80494c8 <_init-0x488>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %ss
imul   $0x40000,0xd(%ecx),%ebp
addl   $0x100000,(%esi)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
mov    (%esi),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8049503 <_init-0x44d>
imul   $0x20000,(%ecx),%ecx
xchg   %eax,%ebp
push   %es
add    %al,(%eax)
add    %al,(%eax)
cld
dec    %edi
push   %es
or     %al,(%esi)
xor    $0x52a00000,%eax
push   %es
or     %al,0xa4000083
push   %edx
push   %es
or     %al,0xc000008f
push   %edx
push   %es
or     %al,0xe000008b
push   %edx
push   %es
or     %al,0xe4000086
push   %edx
push   %es
or     %al,0x93
push   %ebx
push   %es
or     %al,0x400009a
push   %ebx
push   %es
.byte 0x8
.byte 0x5
xchg   %eax,%edx
or     $0x50,%al
push   %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
push   %eax
push   %es
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%edx,2)
push   %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
push   %eax
push   %es
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%edx,2)
push   %es
or     %al,(%edi)
add    $0x50200000,%eax
push   %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0x50,%al
push   %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
sub    %dl,0x6(%eax)
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%edx,2)
push   %es
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax)
push   %eax
push   %es
or     %al,(%edi)
or     (%eax),%eax
add    %dh,(%eax,%edx,2)
push   %es
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax)
push   %eax
push   %es
or     %al,(%edi)
or     $0x503c0000,%eax
push   %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %eax
push   %eax
push   %es
or     %al,(%edi)
mov    %al,(%eax)
add    %al,0x6(%eax,%edx,2)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
push   %eax
push   %es
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x6(%eax,%edx,2)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x50(%eax)
push   %es
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x6(%eax,%edx,2)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x50(%eax)
push   %es
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x6(%eax,%edx,2)
or     %al,(%edi)
adc    $0x50600000,%eax
push   %es
or     %al,(%edi)
push   %ss
add    %al,(%eax)
fs
push   %eax
push   %es
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080650
sbb    %al,(%eax)
add    %ch,0x6(%eax,%edx,2)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x50(%eax)
push   %es
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x6(%eax,%edx,2)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x50(%eax)
push   %es
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x6(%eax,%edx,2)
or     %al,(%edi)
sbb    $0x50800000,%eax
push   %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
test   %dl,0x6(%eax)
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
mov    %dl,0x6(%eax)
or     %al,(%edi)
and    %al,(%eax)
add    %cl,0x21070806(%eax,%edx,2)
add    %al,(%eax)
nop
push   %eax
push   %es
or     %al,(%edi)
and    (%eax),%al
add    %dl,0x23070806(%eax,%edx,2)
add    %al,(%eax)
cwtl
push   %eax
push   %es
or     %al,(%edi)
and    $0x0,%al
add    %bl,0x25070806(%eax,%edx,2)
add    %al,(%eax)
mov    0x7080650,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %eax
push   %es
or     %al,(%edi)
daa
add    %al,(%eax)
test   $0x50,%al
push   %es
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x29070806(%eax,%edx,2)
add    %al,(%eax)
mov    $0x50,%al
push   %es
or     %al,(%edi)
sub    (%eax),%al
add    %dh,0x2b070806(%eax,%edx,2)
add    %al,(%eax)
mov    $0x7080650,%eax
sub    $0x0,%al
add    %bh,0x2d070806(%eax,%edx,2)
add    %al,(%eax)
rclb   $0x8,0x6(%eax)
pop    %es
add    %al,%cs:(%eax)
les    0x6(%eax),%edx
or     %al,(%edi)
mov    (%eax),%es
add    %cl,%al
push   %eax
push   %es
or     %al,(%edi)
das
add    %al,(%eax)
int3
push   %eax
push   %es
or     %al,(%edi)
cwtl
add    %al,(%eax)
rclb   0x6(%eax)
or     %al,(%edi)
xor    %al,(%eax)
add    %dl,%ah
push   %eax
push   %es
or     %al,(%edi)
xor    %eax,(%eax)
add    %bl,%al
push   %eax
push   %es
or     %al,(%edi)
xor    (%eax),%al
add    %bl,%ah
push   %eax
push   %es
or     %al,(%edi)
cltd
add    %al,(%eax)
loopne 8049732 <_init-0x21e>
push   %es
or     %al,(%edi)
xor    (%eax),%eax
add    %ah,%ah
push   %eax
push   %es
or     %al,(%edi)
xor    $0x0,%al
add    %ch,%al
push   %eax
push   %es
or     %al,(%edi)
xor    $0x50ec0000,%eax
push   %es
or     %al,(%edi)
add    %al,%ss:(%eax)
lock push %eax
push   %es
or     %al,(%edi)
aaa
add    %al,(%eax)
hlt
push   %eax
push   %es
or     %al,(%edi)
cmp    %al,(%eax)
add    %bh,%al
push   %eax
push   %es
or     %al,(%edi)
cmp    %eax,(%eax)
add    %bh,%ah
push   %eax
push   %es
or     %al,(%edi)
cmp    (%eax),%al
add    %al,(%eax)
push   %ecx
push   %es
or     %al,(%edi)
cmp    (%eax),%eax
add    %al,(%ecx,%edx,2)
push   %es
or     %al,(%edi)
cmp    $0x0,%al
add    %cl,(%eax)
push   %ecx
push   %es
or     %al,(%edi)
cmp    $0x510c0000,%eax
push   %es
or     %al,(%edi)
add    %al,%ds:(%eax)
adc    %dl,0x6(%ecx)
or     %al,(%edi)
aas
add    %al,(%eax)
adc    $0x51,%al
push   %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
sbb    %dl,0x6(%ecx)
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
sbb    $0x51,%al
push   %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
and    %dl,0x6(%ecx)
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
and    $0x51,%al
push   %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
sub    %dl,0x6(%ecx)
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
sub    $0x51,%al
push   %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
xor    %dl,0x6(%ecx)
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
xor    $0x51,%al
push   %es
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
cmp    %dl,0x6(%ecx)
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
cmp    $0x51,%al
push   %es
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
inc    %eax
push   %ecx
push   %es
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
inc    %esp
push   %ecx
push   %es
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
dec    %eax
push   %ecx
push   %es
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
dec    %esp
push   %ecx
push   %es
or     %al,(%edi)
dec    %esi
add    %al,(%eax)
push   %eax
push   %ecx
push   %es
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
push   %esp
push   %ecx
push   %es
or     %al,(%edi)
push   %eax
add    %al,(%eax)
pop    %eax
push   %ecx
push   %es
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
pop    %esp
push   %ecx
push   %es
or     %al,(%edi)
push   %edx
add    %al,(%eax)
pusha
push   %ecx
push   %es
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
fs
push   %ecx
push   %es
or     %al,(%edi)
push   %esp
add    %al,(%eax)
push   $0x7080651
push   %ebp
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %ecx
push   %es
or     %al,(%edi)
push   %esi
add    %al,(%eax)
jo     8049853 <_init-0xfd>
push   %es
or     %al,(%edi)
push   %edi
add    %al,(%eax)
je     804985b <_init-0xf5>
push   %es
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
js     8049863 <_init-0xed>
push   %es
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
jl     804986b <_init-0xe5>
push   %es
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
adcb   $0x8,0x6(%ecx)
pop    %es
pop    %ebx
add    %al,(%eax)
test   %dl,0x6(%ecx)
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
mov    %dl,0x6(%ecx)
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
mov    %ss,0x6(%ecx)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
nop
push   %ecx
push   %es
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
xchg   %eax,%esp
push   %ecx
push   %es
or     %al,(%edi)
popa
add    %al,(%eax)
cwtl
push   %ecx
push   %es
or     %al,(%edi)
bound  %eax,(%eax)
add    %bl,0x63070806(%ecx,%edx,2)
add    %al,(%eax)
mov    0x7080651,%al
add    %al,%fs:(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %ecx
push   %es
or     %al,(%edi)
add    %al,%gs:(%eax)
test   $0x51,%al
push   %es
or     %al,(%edi)
data16
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %ecx
push   %es
or     %al,(%edi)
add    %al,(%bx,%si)
mov    $0x51,%al
push   %es
or     %al,(%edi)
push   $0x51b40000
push   %es
or     %al,(%edi)
imul   $0x651b800,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %bh,0x6b070806(%ecx,%edx,2)
add    %al,(%eax)
rclb   $0x8,0x6(%ecx)
pop    %es
insb   (%dx),%es:(%edi)
add    %al,(%eax)
les    0x6(%ecx),%edx
or     %al,(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
enter  $0x651,$0x8
pop    %es
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
int3
push   %ecx
push   %es
or     %al,(%edi)
jo     80498bf <_init-0x91>
add    %dl,%al
push   %ecx
push   %es
or     %al,(%edi)
jno    80498c7 <_init-0x89>
add    %dl,%ah
push   %ecx
push   %es
or     %al,(%edi)
jb     80498cf <_init-0x81>
add    %bl,%al
push   %ecx
push   %es
or     %al,(%edi)
jae    80498d7 <_init-0x79>
add    %bl,%ah
push   %ecx
push   %es
or     %al,(%edi)
je     80498df <_init-0x71>
add    %ah,%al
push   %ecx
push   %es
or     %al,(%edi)
jne    80498e7 <_init-0x69>
add    %ah,%ah
push   %ecx
push   %es
or     %al,(%edi)
jbe    80498ef <_init-0x61>
add    %ch,%al
push   %ecx
push   %es
or     %al,(%edi)
ja     80498f7 <_init-0x59>
add    %ch,%ah
push   %ecx
push   %es
or     %al,(%edi)
js     80498ff <_init-0x51>
add    %dh,%al
push   %ecx
push   %es
or     %al,(%edi)
jns    8049907 <_init-0x49>
add    %dh,%ah
push   %ecx
push   %es
or     %al,(%edi)
jp     804990f <_init-0x41>
add    %bh,%al
push   %ecx
push   %es
or     %al,(%edi)
jnp    8049917 <_init-0x39>
add    %bh,%ah
push   %ecx
push   %es
or     %al,(%edi)
jl     804991f <_init-0x31>
add    %al,(%eax)
push   %edx
push   %es
or     %al,(%edi)
jge    8049927 <_init-0x29>
add    %al,(%edx,%edx,2)
push   %es
or     %al,(%edi)
jle    804992f <_init-0x21>
add    %cl,(%eax)
push   %edx
push   %es
or     %al,(%edi)
jg     8049937 <_init-0x19>
add    %cl,(%edx,%edx,2)
push   %es
or     %al,(%edi)
addb   $0x0,(%eax)
adc    %dl,0x6(%edx)
or     %al,(%edi)
addl   $0x6521400,(%eax)
or     %al,(%edi)
(bad)
push   %ebx
sub    $0x8,%esp
call   804a9e0 <fchmod@plt+0x830>
add    $0x1b6a7,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804996e <_init+0x1e>
call   8049d00 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8065004
jmp    *0x8065008
add    %al,(%eax)
jmp    *0x806500c
push   $0x0
jmp    8049980 <_init+0x30>
jmp    *0x8065010
push   $0x8
jmp    8049980 <_init+0x30>
jmp    *0x8065014
push   $0x10
jmp    8049980 <_init+0x30>
jmp    *0x8065018
push   $0x18
jmp    8049980 <_init+0x30>
jmp    *0x806501c
push   $0x20
jmp    8049980 <_init+0x30>
jmp    *0x8065020
push   $0x28
jmp    8049980 <_init+0x30>
jmp    *0x8065024
push   $0x30
jmp    8049980 <_init+0x30>
jmp    *0x8065028
push   $0x38
jmp    8049980 <_init+0x30>
jmp    *0x806502c
push   $0x40
jmp    8049980 <_init+0x30>
jmp    *0x8065030
push   $0x48
jmp    8049980 <_init+0x30>
jmp    *0x8065034
push   $0x50
jmp    8049980 <_init+0x30>
jmp    *0x8065038
push   $0x58
jmp    8049980 <_init+0x30>
jmp    *0x806503c
push   $0x60
jmp    8049980 <_init+0x30>
jmp    *0x8065040
push   $0x68
jmp    8049980 <_init+0x30>
jmp    *0x8065044
push   $0x70
jmp    8049980 <_init+0x30>
jmp    *0x8065048
push   $0x78
jmp    8049980 <_init+0x30>
jmp    *0x806504c
push   $0x80
jmp    8049980 <_init+0x30>
jmp    *0x8065050
push   $0x88
jmp    8049980 <_init+0x30>
jmp    *0x8065054
push   $0x90
jmp    8049980 <_init+0x30>
jmp    *0x8065058
push   $0x98
jmp    8049980 <_init+0x30>
jmp    *0x806505c
push   $0xa0
jmp    8049980 <_init+0x30>
jmp    *0x8065060
push   $0xa8
jmp    8049980 <_init+0x30>
jmp    *0x8065064
push   $0xb0
jmp    8049980 <_init+0x30>
jmp    *0x8065068
push   $0xb8
jmp    8049980 <_init+0x30>
jmp    *0x806506c
push   $0xc0
jmp    8049980 <_init+0x30>
jmp    *0x8065070
push   $0xc8
jmp    8049980 <_init+0x30>
jmp    *0x8065074
push   $0xd0
jmp    8049980 <_init+0x30>
jmp    *0x8065078
push   $0xd8
jmp    8049980 <_init+0x30>
jmp    *0x806507c
push   $0xe0
jmp    8049980 <_init+0x30>
jmp    *0x8065080
push   $0xe8
jmp    8049980 <_init+0x30>
jmp    *0x8065084
push   $0xf0
jmp    8049980 <_init+0x30>
jmp    *0x8065088
push   $0xf8
jmp    8049980 <_init+0x30>
jmp    *0x806508c
push   $0x100
jmp    8049980 <_init+0x30>
jmp    *0x8065090
push   $0x108
jmp    8049980 <_init+0x30>
jmp    *0x8065094
push   $0x110
jmp    8049980 <_init+0x30>
jmp    *0x8065098
push   $0x118
jmp    8049980 <_init+0x30>
jmp    *0x806509c
push   $0x120
jmp    8049980 <_init+0x30>
jmp    *0x80650a0
push   $0x128
jmp    8049980 <_init+0x30>
jmp    *0x80650a4
push   $0x130
jmp    8049980 <_init+0x30>
jmp    *0x80650a8
push   $0x138
jmp    8049980 <_init+0x30>
jmp    *0x80650ac
push   $0x140
jmp    8049980 <_init+0x30>
jmp    *0x80650b0
push   $0x148
jmp    8049980 <_init+0x30>
jmp    *0x80650b4
push   $0x150
jmp    8049980 <_init+0x30>
jmp    *0x80650b8
push   $0x158
jmp    8049980 <_init+0x30>
jmp    *0x80650bc
push   $0x160
jmp    8049980 <_init+0x30>
jmp    *0x80650c0
push   $0x168
jmp    8049980 <_init+0x30>
jmp    *0x80650c4
push   $0x170
jmp    8049980 <_init+0x30>
jmp    *0x80650c8
push   $0x178
jmp    8049980 <_init+0x30>
jmp    *0x80650cc
push   $0x180
jmp    8049980 <_init+0x30>
jmp    *0x80650d0
push   $0x188
jmp    8049980 <_init+0x30>
jmp    *0x80650d4
push   $0x190
jmp    8049980 <_init+0x30>
jmp    *0x80650d8
push   $0x198
jmp    8049980 <_init+0x30>
jmp    *0x80650dc
push   $0x1a0
jmp    8049980 <_init+0x30>
jmp    *0x80650e0
push   $0x1a8
jmp    8049980 <_init+0x30>
jmp    *0x80650e4
push   $0x1b0
jmp    8049980 <_init+0x30>
jmp    *0x80650e8
push   $0x1b8
jmp    8049980 <_init+0x30>
jmp    *0x80650ec
push   $0x1c0
jmp    8049980 <_init+0x30>
jmp    *0x80650f0
push   $0x1c8
jmp    8049980 <_init+0x30>
jmp    *0x80650f4
push   $0x1d0
jmp    8049980 <_init+0x30>
jmp    *0x80650f8
push   $0x1d8
jmp    8049980 <_init+0x30>
jmp    *0x80650fc
push   $0x1e0
jmp    8049980 <_init+0x30>
jmp    *0x8065100
push   $0x1e8
jmp    8049980 <_init+0x30>
jmp    *0x8065104
push   $0x1f0
jmp    8049980 <_init+0x30>
jmp    *0x8065108
push   $0x1f8
jmp    8049980 <_init+0x30>
jmp    *0x806510c
push   $0x200
jmp    8049980 <_init+0x30>
jmp    *0x8065110
push   $0x208
jmp    8049980 <_init+0x30>
jmp    *0x8065114
push   $0x210
jmp    8049980 <_init+0x30>
jmp    *0x8065118
push   $0x218
jmp    8049980 <_init+0x30>
jmp    *0x806511c
push   $0x220
jmp    8049980 <_init+0x30>
jmp    *0x8065120
push   $0x228
jmp    8049980 <_init+0x30>
jmp    *0x8065124
push   $0x230
jmp    8049980 <_init+0x30>
jmp    *0x8065128
push   $0x238
jmp    8049980 <_init+0x30>
jmp    *0x806512c
push   $0x240
jmp    8049980 <_init+0x30>
jmp    *0x8065130
push   $0x248
jmp    8049980 <_init+0x30>
jmp    *0x8065134
push   $0x250
jmp    8049980 <_init+0x30>
jmp    *0x8065138
push   $0x258
jmp    8049980 <_init+0x30>
jmp    *0x806513c
push   $0x260
jmp    8049980 <_init+0x30>
jmp    *0x8065140
push   $0x268
jmp    8049980 <_init+0x30>
jmp    *0x8065144
push   $0x270
jmp    8049980 <_init+0x30>
jmp    *0x8065148
push   $0x278
jmp    8049980 <_init+0x30>
jmp    *0x806514c
push   $0x280
jmp    8049980 <_init+0x30>
jmp    *0x8065150
push   $0x288
jmp    8049980 <_init+0x30>
jmp    *0x8065154
push   $0x290
jmp    8049980 <_init+0x30>
jmp    *0x8065158
push   $0x298
jmp    8049980 <_init+0x30>
jmp    *0x806515c
push   $0x2a0
jmp    8049980 <_init+0x30>
jmp    *0x8065160
push   $0x2a8
jmp    8049980 <_init+0x30>
jmp    *0x8065164
push   $0x2b0
jmp    8049980 <_init+0x30>
jmp    *0x8065168
push   $0x2b8
jmp    8049980 <_init+0x30>
jmp    *0x806516c
push   $0x2c0
jmp    8049980 <_init+0x30>
jmp    *0x8065170
push   $0x2c8
jmp    8049980 <_init+0x30>
jmp    *0x8065174
push   $0x2d0
jmp    8049980 <_init+0x30>
jmp    *0x8065178
push   $0x2d8
jmp    8049980 <_init+0x30>
jmp    *0x806517c
push   $0x2e0
jmp    8049980 <_init+0x30>
jmp    *0x8065180
push   $0x2e8
jmp    8049980 <_init+0x30>
jmp    *0x8065184
push   $0x2f0
jmp    8049980 <_init+0x30>
jmp    *0x8065188
push   $0x2f8
jmp    8049980 <_init+0x30>
jmp    *0x806518c
push   $0x300
jmp    8049980 <_init+0x30>
jmp    *0x8065190
push   $0x308
jmp    8049980 <_init+0x30>
jmp    *0x8065194
push   $0x310
jmp    8049980 <_init+0x30>
jmp    *0x8065198
push   $0x318
jmp    8049980 <_init+0x30>
jmp    *0x806519c
push   $0x320
jmp    8049980 <_init+0x30>
jmp    *0x80651a0
push   $0x328
jmp    8049980 <_init+0x30>
jmp    *0x80651a4
push   $0x330
jmp    8049980 <_init+0x30>
jmp    *0x80651a8
push   $0x338
jmp    8049980 <_init+0x30>
jmp    *0x80651ac
push   $0x340
jmp    8049980 <_init+0x30>
jmp    *0x80651b0
push   $0x348
jmp    8049980 <_init+0x30>
jmp    *0x80651b4
push   $0x350
jmp    8049980 <_init+0x30>
jmp    *0x80651b8
push   $0x358
jmp    8049980 <_init+0x30>
jmp    *0x80651bc
push   $0x360
jmp    8049980 <_init+0x30>
jmp    *0x80651c0
push   $0x368
jmp    8049980 <_init+0x30>
jmp    *0x80651c4
push   $0x370
jmp    8049980 <_init+0x30>
jmp    *0x80651c8
push   $0x378
jmp    8049980 <_init+0x30>
jmp    *0x80651cc
push   $0x380
jmp    8049980 <_init+0x30>
jmp    *0x80651d0
push   $0x388
jmp    8049980 <_init+0x30>
jmp    *0x80651d4
push   $0x390
jmp    8049980 <_init+0x30>
jmp    *0x80651d8
push   $0x398
jmp    8049980 <_init+0x30>
jmp    *0x80651dc
push   $0x3a0
jmp    8049980 <_init+0x30>
jmp    *0x80651e0
push   $0x3a8
jmp    8049980 <_init+0x30>
jmp    *0x80651e4
push   $0x3b0
jmp    8049980 <_init+0x30>
jmp    *0x80651e8
push   $0x3b8
jmp    8049980 <_init+0x30>
jmp    *0x80651ec
push   $0x3c0
jmp    8049980 <_init+0x30>
jmp    *0x80651f0
push   $0x3c8
jmp    8049980 <_init+0x30>
jmp    *0x80651f4
push   $0x3d0
jmp    8049980 <_init+0x30>
jmp    *0x80651f8
push   $0x3d8
jmp    8049980 <_init+0x30>
jmp    *0x80651fc
push   $0x3e0
jmp    8049980 <_init+0x30>
jmp    *0x8065200
push   $0x3e8
jmp    8049980 <_init+0x30>
jmp    *0x8065204
push   $0x3f0
jmp    8049980 <_init+0x30>
jmp    *0x8065208
push   $0x3f8
jmp    8049980 <_init+0x30>
jmp    *0x806520c
push   $0x400
jmp    8049980 <_init+0x30>
jmp    *0x8065210
push   $0x408
jmp    8049980 <_init+0x30>
jmp    *0x8065214
push   $0x410
jmp    8049980 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xe0,%esp
mov    0xc(%ebp),%ebx
mov    0x8(%ebp),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80539e0 <fchmod@plt+0x9830>
movl   $0x805ef75,0x4(%esp)
movl   $0x6,(%esp)
call   8049f70 <setlocale@plt>
movl   $0x805dde4,0x4(%esp)
movl   $0x805ddd6,(%esp)
call   804a060 <bindtextdomain@plt>
movl   $0x805ddd6,(%esp)
call   8049b60 <textdomain@plt>
movl   $0x8051e80,(%esp)
call   805dd20 <fts_children+0x4810>
call   80499d0 <is_selinux_enabled@plt>
mov    %eax,%edi
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   804c810 <fchmod@plt+0x2660>
test   %edi,%edi
movl   $0x0,(%esp)
setg   0x67(%esp)
movb   $0x0,0x58(%esp)
movl   $0x0,0x74(%esp)
movl   $0x2,0x48(%esp)
movb   $0x0,0x59(%esp)
movb   $0x0,0x5a(%esp)
movb   $0x0,0x5b(%esp)
movl   $0x4,0x4c(%esp)
movb   $0x1,0x5c(%esp)
movb   $0x0,0x5f(%esp)
movb   $0x1,0x60(%esp)
movb   $0x1,0x64(%esp)
movb   $0x1,0x61(%esp)
movb   $0x1,0x62(%esp)
movb   $0x0,0x63(%esp)
movb   $0x0,0x6b(%esp)
movb   $0x1,0x65(%esp)
movb   $0x0,0x66(%esp)
movb   $0x0,0x68(%esp)
movb   $0x1,0x69(%esp)
movb   $0x0,0x6a(%esp)
movb   $0x1,0x6c(%esp)
movl   $0x2,0x50(%esp)
movb   $0x0,0x6e(%esp)
movb   $0x0,0x6d(%esp)
movl   $0x0,0x54(%esp)
call   804a0a0 <isatty@plt>
movl   $0x805ddf6,(%esp)
movb   $0x0,0x72(%esp)
movb   $0x0,0x6f(%esp)
movb   $0x0,0x70(%esp)
movl   $0x0,0x78(%esp)
test   %eax,%eax
setne  0x71(%esp)
xor    %edi,%edi
movl   $0x0,0x7c(%esp)
call   8049c60 <getenv@plt>
movb   $0x0,0x37(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x30(%esp)
movl   $0x0,0x10(%esp)
movl   $0x805e8c0,0xc(%esp)
movl   $0x805de68,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049d40 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804a473 <fchmod@plt+0x2c3>
cmp    $0x66,%eax
je     804a55f <fchmod@plt+0x3af>
jle    804a388 <fchmod@plt+0x1d8>
cmp    $0x74,%eax
je     804a512 <fchmod@plt+0x362>
nop
jle    804a3b8 <fchmod@plt+0x208>
cmp    $0x76,%eax
je     804a508 <fchmod@plt+0x358>
nop
lea    0x0(%esi,%eiz,1),%esi
jl     804a417 <fchmod@plt+0x267>
add    $0xffffff80,%eax
jne    804a4e9 <fchmod@plt+0x339>
movb   $0x1,0x806531c
jmp    804a31e <fchmod@plt+0x16e>
cmp    $0x53,%eax
je     804a4f5 <fchmod@plt+0x345>
jg     804a3d8 <fchmod@plt+0x228>
cmp    $0xffffff7d,%eax
je     804a421 <fchmod@plt+0x271>
cmp    $0xffffff7e,%eax
jne    804a4e9 <fchmod@plt+0x339>
movl   $0x0,(%esp)
call   804ac00 <fchmod@plt+0xa50>
lea    0x0(%esi),%esi
cmp    $0x69,%eax
je     804a40a <fchmod@plt+0x25a>
cmp    $0x6e,%eax
jne    804a4e9 <fchmod@plt+0x339>
movl   $0x2,0x4c(%esp)
jmp    804a31e <fchmod@plt+0x16e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x54,%eax
je     804a400 <fchmod@plt+0x250>
cmp    $0x62,%eax
jne    804a4e9 <fchmod@plt+0x339>
mov    0x8065304,%eax
mov    $0x1,%edi
test   %eax,%eax
cmove  0x38(%esp),%eax
mov    %eax,0x38(%esp)
jmp    804a31e <fchmod@plt+0x16e>
movb   $0x1,0x37(%esp)
jmp    804a31e <fchmod@plt+0x16e>
movl   $0x3,0x4c(%esp)
jmp    804a31e <fchmod@plt+0x16e>
movb   $0x1,0x6f(%esp)
jmp    804a31e <fchmod@plt+0x16e>
mov    0x8065230,%eax
movl   $0x0,0x1c(%esp)
movl   $0x805de3c,0x18(%esp)
movl   $0x805de49,0x14(%esp)
mov    %eax,0xc(%esp)
mov    0x8065300,%eax
movl   $0x805de59,0x10(%esp)
movl   $0x805ddd2,0x8(%esp)
movl   $0x805de65,0x4(%esp)
mov    %eax,(%esp)
call   8056b20 <fchmod@plt+0xc970>
movl   $0x0,(%esp)
call   8049d10 <exit@plt>
mov    0x80652e0,%eax
sub    %eax,%esi
cmpl   $0x0,0x3c(%esp)
lea    (%ebx,%eax,4),%eax
mov    %eax,0x28(%esp)
sete   %al
movzbl %al,%edx
cmp    %edx,%esi
mov    %esi,0x2c(%esp)
jg     804a56c <fchmod@plt+0x3bc>
sub    $0x1,%esi
jne    804a871 <fchmod@plt+0x6c1>
mov    0x28(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e7f0,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movl   $0x1,(%esp)
call   804ac00 <fchmod@plt+0xa50>
mov    0x8065304,%eax
mov    $0x1,%edi
mov    %eax,0x30(%esp)
jmp    804a31e <fchmod@plt+0x16e>
movb   $0x1,0x70(%esp)
jmp    804a31e <fchmod@plt+0x16e>
cmpl   $0x0,0x3c(%esp)
je     804a68d <fchmod@plt+0x4dd>
movl   $0x5,0x8(%esp)
movl   $0x805e7c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    0x8065304,%eax
mov    %eax,0x3c(%esp)
jmp    804a31e <fchmod@plt+0x16e>
movl   $0x1,0x4c(%esp)
jmp    804a31e <fchmod@plt+0x16e>
cmpb   $0x0,0x37(%esp)
je     804a75b <fchmod@plt+0x5ab>
cmpl   $0x0,0x3c(%esp)
je     804a5b2 <fchmod@plt+0x402>
movl   $0x5,0x8(%esp)
movl   $0x805e81c,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
cmpl   $0x2,0x2c(%esp)
jg     804a8db <fchmod@plt+0x72b>
mov    %edi,%eax
test   %al,%al
je     804a5ce <fchmod@plt+0x41e>
cmpl   $0x2,0x4c(%esp)
je     804a901 <fchmod@plt+0x751>
mov    0x30(%esp),%eax
test   %eax,%eax
je     804a5e3 <fchmod@plt+0x433>
mov    %eax,(%esp)
call   8056e90 <fchmod@plt+0xcce0>
mov    %eax,0x8065234
mov    %edi,%ecx
xor    %eax,%eax
test   %cl,%cl
jne    804a8aa <fchmod@plt+0x6fa>
mov    %eax,0x44(%esp)
call   8050ec0 <fchmod@plt+0x6d10>
cmpl   $0x0,0x3c(%esp)
je     804a71e <fchmod@plt+0x56e>
cmpl   $0x1,0x2c(%esp)
je     804a616 <fchmod@plt+0x466>
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   804c790 <fchmod@plt+0x25e0>
xor    %ebx,%ebx
movb   $0x1,0x38(%esp)
jmp    804a673 <fchmod@plt+0x4c3>
mov    %edi,(%esp)
add    $0x1,%ebx
call   8052220 <fchmod@plt+0x8070>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80527c0 <fchmod@plt+0x8610>
mov    %eax,%esi
mov    %eax,(%esp)
call   80522c0 <fchmod@plt+0x8110>
lea    0x44(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   804aab0 <fchmod@plt+0x900>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049a60 <free@plt>
mov    %edi,%eax
and    %al,0x38(%esp)
cmp    %ebx,0x2c(%esp)
jle    804a749 <fchmod@plt+0x599>
mov    0x28(%esp),%eax
cmpb   $0x0,0x806531c
mov    (%eax,%ebx,4),%edi
je     804a61f <fchmod@plt+0x46f>
mov    %edi,(%esp)
call   80522c0 <fchmod@plt+0x8110>
jmp    804a61f <fchmod@plt+0x46f>
lea    0x80(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8065304,%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
jne    804a814 <fchmod@plt+0x664>
mov    0x90(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804a551 <fchmod@plt+0x3a1>
mov    0x8065304,%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805de1f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x3c(%esp)
call   8049b00 <dcgettext@plt>
mov    0x3c(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804a551 <fchmod@plt+0x3a1>
mov    0x28(%esp),%eax
cmpb   $0x0,0x806531c
mov    0x4(%eax),%esi
mov    (%eax),%ebx
je     804a738 <fchmod@plt+0x588>
mov    %ebx,(%esp)
call   80522c0 <fchmod@plt+0x8110>
lea    0x44(%esp),%ecx
mov    %esi,%edx
mov    %ebx,%eax
call   804aab0 <fchmod@plt+0x900>
mov    %al,0x38(%esp)
xor    %eax,%eax
cmpb   $0x0,0x38(%esp)
sete   %al
mov    %eax,(%esp)
call   8049d10 <exit@plt>
test   %al,%al
je     804a5bd <fchmod@plt+0x40d>
cmpl   $0x1,0x2c(%esp)
je     804a930 <fchmod@plt+0x780>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
lea    -0x4(%eax,%edx,4),%ebx
mov    (%ebx),%esi
lea    0x80(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x3,(%esp)
mov    %esi,0x4(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
je     804a916 <fchmod@plt+0x766>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edx
test   %edx,%edx
je     804a916 <fchmod@plt+0x766>
test   $0xfffffffd,%edx
je     804a7fc <fchmod@plt+0x64c>
mov    %esi,(%esp)
mov    %edx,0x3c(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805de0b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    0x3c(%esp),%edx
mov    %esi,0xc(%esp)
movl   $0x1,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
cmpl   $0x2,0x2c(%esp)
jne    804a954 <fchmod@plt+0x7a4>
movl   $0x0,0x3c(%esp)
jmp    804a5bd <fchmod@plt+0x40d>
mov    0x8065304,%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805de0b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x2c(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,0x3c(%esp)
call   8049e80 <__errno_location@plt>
mov    0x2c(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804a6b5 <fchmod@plt+0x505>
movl   $0x5,0x8(%esp)
movl   $0x805de74,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804a4e9 <fchmod@plt+0x339>
movl   $0x5,0x8(%esp)
movl   $0x805dea7,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8051db0 <fchmod@plt+0x7c00>
jmp    804a5ef <fchmod@plt+0x43f>
mov    0x28(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805de89,0x4(%esp)
mov    %eax,%ebx
jmp    804a4c1 <fchmod@plt+0x311>
movl   $0x5,0x8(%esp)
movl   $0x805e864,0x4(%esp)
jmp    804a881 <fchmod@plt+0x6d1>
mov    0x90(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804a99d <fchmod@plt+0x7ed>
xor    %edx,%edx
jmp    804a7ae <fchmod@plt+0x5fe>
movl   $0x805e8a8,0xc(%esp)
movl   $0x1c7,0x8(%esp)
movl   $0x805dd88,0x4(%esp)
movl   $0x805de9a,(%esp)
call   804a160 <__assert_fail@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805de1f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804a807 <fchmod@plt+0x657>
subl   $0x1,0x2c(%esp)
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    (%eax,%edx,4),%eax
mov    %eax,0x3c(%esp)
jmp    804a5bd <fchmod@plt+0x40d>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x805dd10
push   $0x805dca0
push   %ecx
push   %esi
push   $0x804a1c0
call   8049de0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8065287,%eax
sub    $0x8065284,%eax
cmp    $0x6,%eax
ja     804aa00 <fchmod@plt+0x850>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804a9ff <fchmod@plt+0x84f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8065284,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8065284,%eax
sub    $0x8065284,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804aa39 <fchmod@plt+0x889>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804aa38 <fchmod@plt+0x888>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8065284,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8065308
jne    804aa7c <fchmod@plt+0x8cc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a9f0 <fchmod@plt+0x840>
movb   $0x1,0x8065308
leave
repz ret
xchg   %ax,%ax
mov    0x8064ef8,%eax
test   %eax,%eax
je     804aaa8 <fchmod@plt+0x8f8>
mov    $0x0,%eax
test   %eax,%eax
je     804aaa8 <fchmod@plt+0x8f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8064ef8,(%esp)
call   *%eax
leave
jmp    804aa20 <fchmod@plt+0x870>
nop
jmp    804aa20 <fchmod@plt+0x870>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x4c,%esp
lea    0x23(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x22(%esp),%eax
mov    %eax,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   8050b40 <fchmod@plt+0x6990>
test   %al,%al
je     804aaf0 <fchmod@plt+0x940>
cmpb   $0x0,0x22(%esp)
je     804aaf8 <fchmod@plt+0x948>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x23(%esp)
jne    804aaf0 <fchmod@plt+0x940>
test   %ebx,%ebx
je     804aaf0 <fchmod@plt+0x940>
movl   $0x806530c,(%esp)
movb   $0x0,0x2c(%esp)
movb   $0x1,0x36(%esp)
movb   $0x1,0x35(%esp)
movb   $0x0,0x34(%esp)
movl   $0x5,0x30(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x0,0x3d(%esp)
movb   $0x1,0x3e(%esp)
call   8054f10 <fchmod@plt+0xad60>
test   %eax,%eax
mov    %eax,0x38(%esp)
je     804ab80 <fchmod@plt+0x9d0>
movzbl 0x2c(%esi),%eax
mov    %ebx,0x24(%esp)
movl   $0x0,0x28(%esp)
mov    %al,0x3d(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   804b700 <fchmod@plt+0x1550>
lea    -0x2(%eax),%edx
cmp    $0x2,%edx
ja     804abd0 <fchmod@plt+0xa20>
cmp    $0x4,%eax
setne  %al
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x805f92e,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805df28,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804ab42 <fchmod@plt+0x992>
movl   $0x805e8a0,0xc(%esp)
movl   $0xe9,0x8(%esp)
movl   $0x805dd88,0x4(%esp)
movl   $0x805df48,(%esp)
call   804a160 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x806573c,%esi
mov    0x30(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     804ac54 <fchmod@plt+0xaa4>
movl   $0x805df94,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80652a4,%eax
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049d10 <exit@plt>
movl   $0x805dfbc,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e03c,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e074,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e0c0,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e264,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e31c,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e4ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e4dc,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e514,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e5f4,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    0x806573c,%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
movl   $0x5,0x8(%esp)
movl   $0x805dd91,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x805dda8,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805ddbe,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x805e6d4,0xc(%esp)
movl   $0x805ddd2,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8065300,%esi
movl   $0x5,0x8(%esp)
movl   $0x805e6fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8049f70 <setlocale@plt>
test   %eax,%eax
je     804af07 <fchmod@plt+0xd57>
movl   $0x3,0x8(%esp)
movl   $0x805dde0,0x4(%esp)
mov    %eax,(%esp)
call   804a080 <strncmp@plt>
test   %eax,%eax
jne    804af4b <fchmod@plt+0xd9b>
mov    0x806573c,%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
movl   $0x5,0x8(%esp)
movl   $0x805e784,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
jmp    804ac4c <fchmod@plt+0xa9c>
mov    0x806573c,%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
movl   $0x5,0x8(%esp)
movl   $0x805e73c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
jmp    804af07 <fchmod@plt+0xd57>
nop
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    %ecx,0x1c(%esp)
mov    %esi,%eax
cmp    $0x1,%al
sbb    %ebx,%ebx
not    %ebx
and    $0x200,%ebx
mov    %ebx,0x8(%esp)
mov    0x18(%edx),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049a30 <unlinkat@plt>
test   %eax,%eax
jne    804aff0 <fchmod@plt+0xe40>
mov    0x1c(%esp),%edx
mov    $0x2,%al
cmpb   $0x0,0x11(%edx)
jne    804b0c0 <fchmod@plt+0xf10>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%esi
cmp    $0x1e,%ebx
je     804b128 <fchmod@plt+0xf78>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804b098 <fchmod@plt+0xee8>
cmpw   $0x4,0x3c(%ebp)
je     804b198 <fchmod@plt+0xfe8>
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    0x4(%ebp),%eax
mov    0x30(%eax),%ebx
test   %ebx,%ebx
jns    804b081 <fchmod@plt+0xed1>
jmp    804b088 <fchmod@plt+0xed8>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x10(%eax)
mov    0x4(%eax),%eax
mov    0x30(%eax),%edx
test   %edx,%edx
js     804b088 <fchmod@plt+0xed8>
mov    0x10(%eax),%ecx
test   %ecx,%ecx
je     804b070 <fchmod@plt+0xec0>
add    $0x8c,%esp
mov    $0x4,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x14,%ebx
je     804b0ad <fchmod@plt+0xefd>
jle    804b118 <fchmod@plt+0xf68>
cmp    $0x16,%ebx
je     804b0ad <fchmod@plt+0xefd>
cmp    $0x54,%ebx
jne    804b00f <fchmod@plt+0xe5f>
add    $0x8c,%esp
mov    $0x2,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
mov    %eax,%ebx
mov    %esi,%eax
test   %al,%al
je     804b178 <fchmod@plt+0xfc8>
movl   $0x805e990,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8049ef0 <__printf_chk@plt>
add    $0x8c,%esp
mov    $0x2,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x2,%ebx
jne    804b00f <fchmod@plt+0xe5f>
jmp    804b0ad <fchmod@plt+0xefd>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%eax
movl   $0x100,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,0x4(%esp)
call   8049b80 <__fxstatat64@plt>
test   %eax,%eax
je     804b168 <fchmod@plt+0xfb8>
cmpl   $0x2,(%esi)
jne    804b168 <fchmod@plt+0xfb8>
mov    $0x2,%ebx
jmp    804b002 <fchmod@plt+0xe52>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1e,(%esi)
jmp    804b002 <fchmod@plt+0xe52>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e9a7,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    804b0f3 <fchmod@plt+0xf43>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x27,%ebx
je     804b1b0 <fchmod@plt+0x1000>
lea    -0x14(%ebx),%eax
cmp    $0x1,%eax
jbe    804b1b0 <fchmod@plt+0x1000>
cmp    $0x11,%ebx
jne    804b01a <fchmod@plt+0xe6a>
xchg   %ax,%ax
mov    0x20(%ebp),%eax
cmp    $0xd,%eax
jne    804b1bf <fchmod@plt+0x100f>
mov    %eax,(%esi)
jmp    804b01a <fchmod@plt+0xe6a>
cmp    $0x1,%eax
jne    804b01a <fchmod@plt+0xe6a>
mov    %eax,(%esi)
jmp    804b01a <fchmod@plt+0xe6a>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%ecx),%ebx
mov    0x2c(%ecx),%esi
and    %ebx,%esi
cmp    $0xffffffff,%esi
je     804b1f0 <fchmod@plt+0x1040>
test   %ebx,%ebx
js     804b24e <fchmod@plt+0x109e>
xor    %eax,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ecx,0xc(%esp)
movl   $0x100,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x1c(%esp)
call   8049b80 <__fxstatat64@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    804b228 <fchmod@plt+0x1078>
mov    0x30(%ecx),%ebx
jmp    804b1e2 <fchmod@plt+0x1032>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xfffffffe,0x2c(%ecx)
movl   $0xffffffff,0x30(%ecx)
mov    %ecx,0x1c(%esp)
call   8049e80 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
mov    %eax,0x58(%ecx)
sar    $0x1f,%eax
mov    %eax,0x5c(%ecx)
mov    %ecx,0x1c(%esp)
call   8049e80 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    0x58(%ecx),%edx
mov    %edx,(%eax)
mov    $0xffffffff,%eax
jmp    804b1e8 <fchmod@plt+0x1038>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    %eax,0x24(%esp)
mov    0x1c(%edx),%eax
mov    0xb8(%esp),%ebx
mov    %eax,0x2c(%esp)
mov    0x18(%edx),%eax
test   %ebx,%ebx
mov    %eax,0x28(%esp)
je     804b2a6 <fchmod@plt+0x10f6>
mov    0xb8(%esp),%eax
movl   $0x2,(%eax)
mov    0xb8(%esp),%edx
cmp    $0x1,%cl
sbb    %esi,%esi
xor    %ebx,%ebx
not    %esi
and    $0x4,%esi
test   %edx,%edx
movl   $0xffffffff,0x5c(%esp)
movl   $0xffffffff,0x60(%esp)
je     804b35c <fchmod@plt+0x11ac>
mov    0x28(%esp),%eax
movl   $0x30900,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <openat64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     804b34c <fchmod@plt+0x119c>
mov    %eax,(%esp)
call   8049fc0 <fdopendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b684 <fchmod@plt+0x14d4>
call   8049e80 <__errno_location@plt>
mov    %eax,%ebp
movl   $0x0,(%eax)
jmp    804b32e <fchmod@plt+0x117e>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
cmpb   $0x2e,0x14(%eax)
sete   %dl
movzbl 0x14(%eax,%edx,1),%eax
cmp    $0x2f,%al
jne    804b6e5 <fchmod@plt+0x1535>
mov    %ebx,(%esp)
call   804a020 <readdir64@plt>
test   %eax,%eax
je     804b500 <fchmod@plt+0x1350>
cmpb   $0x2e,0x13(%eax)
je     804b318 <fchmod@plt+0x1168>
mov    %ebx,(%esp)
call   804a120 <closedir@plt>
xor    %ebx,%ebx
mov    $0x3,%eax
mov    0xb8(%esp),%ecx
mov    %eax,(%ecx)
mov    0x10(%edi),%eax
test   %eax,%eax
jne    804b4c8 <fchmod@plt+0x1318>
mov    0xb0(%esp),%eax
mov    0x4(%eax),%eax
cmp    $0x5,%eax
je     804b4b5 <fchmod@plt+0x1305>
mov    0xb0(%esp),%ecx
cmpb   $0x0,(%ecx)
je     804b4d8 <fchmod@plt+0x1328>
cmp    $0x3,%eax
jne    804b4b5 <fchmod@plt+0x1305>
xor    %ebp,%ebp
test   %esi,%esi
je     804b6dc <fchmod@plt+0x152c>
cmp    $0x4,%esi
je     804b5d0 <fchmod@plt+0x1420>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
cmp    $0x4,%esi
mov    %eax,%edi
jne    804b436 <fchmod@plt+0x1286>
cmpl   $0x2,0xb4(%esp)
jne    804b436 <fchmod@plt+0x1286>
test   %bl,%bl
jne    804b436 <fchmod@plt+0x1286>
test   %ebp,%ebp
mov    0x806573c,%ebx
movl   $0x5,0x8(%esp)
jne    804b66b <fchmod@plt+0x14bb>
movl   $0x805ea68,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    0x80652a4,%eax
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    804b4ac <fchmod@plt+0x12fc>
mov    0xb0(%esp),%eax
cmpl   $0x3,0x4(%eax)
jne    804b4b5 <fchmod@plt+0x1305>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
mov    %eax,%edi
mov    0x28(%esp),%edx
lea    0x30(%esp),%ecx
mov    0x24(%esp),%eax
call   804b1d0 <fchmod@plt+0x1020>
test   %eax,%eax
jne    804b695 <fchmod@plt+0x14e5>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052460 <fchmod@plt+0x82b0>
test   %ebp,%ebp
mov    0x806573c,%ebx
movl   $0x5,0x8(%esp)
mov    %eax,%esi
je     804b5f8 <fchmod@plt+0x1448>
movl   $0x805ea88,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    0x80652a4,%eax
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
call   8057110 <fchmod@plt+0xcf60>
test   %al,%al
je     804b4c8 <fchmod@plt+0x1318>
mov    $0x2,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x3,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x3,%eax
je     804b4e3 <fchmod@plt+0x1333>
cmpb   $0x0,0x10(%ecx)
je     804b4b5 <fchmod@plt+0x1305>
call   8056c10 <fchmod@plt+0xca60>
test   %al,%al
je     804b520 <fchmod@plt+0x1370>
mov    0xb0(%esp),%eax
mov    0x4(%eax),%eax
jmp    804b38a <fchmod@plt+0x11da>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%ebp
mov    %ebx,(%esp)
call   804a120 <closedir@plt>
cmp    $0x1,%ebp
setb   %bl
sbb    %eax,%eax
not    %eax
add    $0x4,%eax
jmp    804b353 <fchmod@plt+0x11a3>
lea    0x0(%esi),%esi
mov    0x28(%esp),%ebp
lea    0x30(%esp),%edi
mov    0x24(%esp),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804b1d0 <fchmod@plt+0x1020>
test   %eax,%eax
jne    804b618 <fchmod@plt+0x1468>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804b4ec <fchmod@plt+0x133c>
mov    0x24(%esp),%eax
movl   $0x200,0xc(%esp)
movl   $0x2,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049a80 <faccessat@plt>
test   %eax,%eax
je     804b4ec <fchmod@plt+0x133c>
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebp
cmp    $0xd,%ebp
jne    804b61f <fchmod@plt+0x146f>
test   %esi,%esi
mov    $0x1,%bp
jne    804b39d <fchmod@plt+0x11ed>
mov    0x28(%esp),%edx
mov    %edi,%ecx
mov    0x24(%esp),%eax
call   804b1d0 <fchmod@plt+0x1020>
test   %eax,%eax
jne    804b618 <fchmod@plt+0x1468>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804b417 <fchmod@plt+0x1267>
xor    %esi,%esi
cmp    $0x4000,%eax
jne    804b3a6 <fchmod@plt+0x11f6>
mov    $0x4,%esi
lea    0x0(%esi),%esi
mov    0xb0(%esp),%eax
cmpb   $0x0,0x9(%eax)
jne    804b3a6 <fchmod@plt+0x11f6>
cmpb   $0x0,0xa(%eax)
je     804b5ef <fchmod@plt+0x143f>
test   %bl,%bl
jne    804b428 <fchmod@plt+0x1278>
mov    $0x15,%ebp
jmp    804b61f <fchmod@plt+0x146f>
xchg   %ax,%ax
movl   $0x805e9c4,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    804b487 <fchmod@plt+0x12d7>
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    $0x4,%eax
jmp    804b4ba <fchmod@plt+0x130a>
movl   $0x805ea38,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    804b3f1 <fchmod@plt+0x1241>
mov    %ebp,(%esp)
call   804a110 <close@plt>
lea    0x0(%esi,%eiz,1),%esi
jmp    804b34c <fchmod@plt+0x119c>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    $0x4,%eax
jmp    804b4ba <fchmod@plt+0x130a>
lea    0x30(%esp),%edi
jmp    804b591 <fchmod@plt+0x13e1>
test   %al,%al
je     804b32e <fchmod@plt+0x117e>
lea    0x0(%esi),%esi
jmp    804b344 <fchmod@plt+0x1194>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
je     804bb88 <fchmod@plt+0x19d8>
mov    0x54(%esp),%eax
mov    $0x2,%ebp
cmpb   $0x1,0x8(%eax)
movl   $0x0,0x8(%esp)
mov    %edx,(%esp)
sbb    %eax,%eax
and    $0xffffffc0,%eax
add    $0x258,%eax
mov    %eax,0x4(%esp)
call   8056f10 <fchmod@plt+0xcd60>
mov    %eax,%esi
lea    0x1c(%eax),%eax
mov    %eax,0x18(%esp)
mov    %esi,(%esp)
call   8058cc0 <fts_read>
test   %eax,%eax
mov    %eax,%ebx
je     804b7ef <fchmod@plt+0x163f>
movzwl 0x3c(%eax),%eax
cmp    $0xd,%ax
ja     804b9a0 <fchmod@plt+0x17f0>
movzwl %ax,%edx
jmp    *0x805ecb0(,%edx,4)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ea03,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c50 <error@plt>
movl   $0x4,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   80594d0 <fts_set>
mov    %esi,(%esp)
call   8058cc0 <fts_read>
mov    %esi,(%esp)
mov    $0x4,%ebp
call   8058cc0 <fts_read>
test   %eax,%eax
mov    %eax,%ebx
jne    804b75b <fchmod@plt+0x15ab>
call   8049e80 <__errno_location@plt>
mov    %eax,%ebx
mov    (%eax),%eax
test   %eax,%eax
jne    804bd90 <fchmod@plt+0x1be0>
mov    %esi,(%esp)
call   8058b30 <fts_close>
test   %eax,%eax
je     804bb8d <fchmod@plt+0x19dd>
movl   $0x5,0x8(%esp)
mov    $0x4,%ebp
movl   $0x805ea25,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804bb8d <fchmod@plt+0x19dd>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6,%ax
je     804bae0 <fchmod@plt+0x1930>
and    $0xfffffffd,%eax
mov    0x54(%esp),%edi
mov    %ebx,%edx
cmp    $0x4,%ax
sete   %al
movzbl %al,%eax
mov    %eax,%ecx
mov    %eax,0x1c(%esp)
mov    0x1c(%esi),%eax
mov    %edi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x3,0x4(%esp)
call   804b270 <fchmod@plt+0x10c0>
cmp    $0x2,%eax
lea    -0x2(%eax),%edi
je     804bb98 <fchmod@plt+0x19e8>
cmp    $0x2,%edi
ja     804be45 <fchmod@plt+0x1c95>
cmp    $0x4,%eax
je     804b7d8 <fchmod@plt+0x1628>
cmp    $0x3,%eax
nop
jne    804b749 <fchmod@plt+0x1599>
cmp    $0x2,%ebp
cmove  %eax,%ebp
jmp    804b749 <fchmod@plt+0x1599>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eb7c,0x4(%esp)
mov    %eax,%edi
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
jmp    804b7b0 <fchmod@plt+0x1600>
xchg   %ax,%ax
mov    0x54(%esp),%eax
cmpb   $0x0,0x9(%eax)
jne    804ba18 <fchmod@plt+0x1868>
cmpb   $0x0,0xa(%eax)
jne    804bc48 <fchmod@plt+0x1a98>
mov    $0x15,%ebp
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    0x4(%ebx),%eax
mov    0x30(%eax),%edi
test   %edi,%edi
jns    804b98d <fchmod@plt+0x17dd>
jmp    804b7bc <fchmod@plt+0x160c>
lea    0x0(%esi),%esi
movl   $0x1,0x10(%eax)
mov    0x4(%eax),%eax
mov    0x30(%eax),%edx
test   %edx,%edx
js     804b7bc <fchmod@plt+0x160c>
mov    0x10(%eax),%ecx
test   %ecx,%ecx
je     804b978 <fchmod@plt+0x17c8>
jmp    804b7bc <fchmod@plt+0x160c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movzwl 0x3c(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805ec38,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
movl   $0x805dda8,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
call   804a0c0 <abort@plt>
mov    0x1c(%esp),%eax
mov    (%eax),%edx
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   804a120 <closedir@plt>
mov    0x1c(%esp),%edx
test   %edx,%edx
jne    804bccc <fchmod@plt+0x1b1c>
mov    0x30(%ebx),%eax
test   %eax,%eax
jne    804ba57 <fchmod@plt+0x18a7>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
cmpb   $0x2e,(%eax)
je     804bbb8 <fchmod@plt+0x1a08>
mov    0x54(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     804ba57 <fchmod@plt+0x18a7>
mov    0x9c(%ebx),%edx
mov    0xa0(%ebx),%ecx
xor    0x4(%eax),%ecx
xor    (%eax),%edx
or     %edx,%ecx
je     804bce4 <fchmod@plt+0x1b34>
lea    0x2c(%esp),%ecx
mov    0x1c(%esi),%eax
mov    %ebx,%edx
mov    %ecx,0x8(%esp)
mov    0x54(%esp),%ecx
movl   $0x2,0x4(%esp)
mov    %ecx,(%esp)
mov    $0x1,%ecx
call   804b270 <fchmod@plt+0x10c0>
cmp    $0x2,%eax
mov    %eax,%ecx
je     804bbf0 <fchmod@plt+0x1a40>
mov    0x4(%ebx),%edx
mov    0x30(%edx),%eax
test   %eax,%eax
jns    804baa9 <fchmod@plt+0x18f9>
jmp    804bab0 <fchmod@plt+0x1900>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x10(%edx)
mov    0x4(%edx),%edx
mov    0x30(%edx),%edi
test   %edi,%edi
js     804bab0 <fchmod@plt+0x1900>
mov    0x10(%edx),%eax
test   %eax,%eax
je     804ba98 <fchmod@plt+0x18e8>
movl   $0x4,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x1c(%esp)
call   80594d0 <fts_set>
mov    %esi,(%esp)
call   8058cc0 <fts_read>
mov    0x1c(%esp),%ecx
lea    -0x2(%ecx),%edi
mov    %ecx,%eax
jmp    804b89a <fchmod@plt+0x16ea>
xchg   %ax,%ax
mov    0x54(%esp),%ecx
cmpb   $0x0,0x8(%ecx)
je     804b85a <fchmod@plt+0x16aa>
mov    0x30(%ebx),%edx
test   %edx,%edx
jle    804b85a <fchmod@plt+0x16aa>
mov    0x44(%ebx),%edx
mov    0x48(%ebx),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
je     804b85a <fchmod@plt+0x16aa>
mov    0x4(%ebx),%eax
mov    0x30(%eax),%edi
test   %edi,%edi
jns    804bb31 <fchmod@plt+0x1981>
jmp    804bb38 <fchmod@plt+0x1988>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x10(%eax)
mov    0x4(%eax),%eax
mov    0x30(%eax),%edx
test   %edx,%edx
js     804bb38 <fchmod@plt+0x1988>
mov    0x10(%eax),%ecx
test   %ecx,%ecx
je     804bb20 <fchmod@plt+0x1970>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eb4c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804b7d8 <fchmod@plt+0x1628>
lea    0x0(%esi),%esi
mov    $0x2,%ebp
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%esp),%eax
mov    %ebx,%edx
mov    0x54(%esp),%ecx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   804af90 <fchmod@plt+0xde0>
lea    -0x2(%eax),%edi
jmp    804b89a <fchmod@plt+0x16ea>
xchg   %ax,%ax
xor    %edx,%edx
cmpb   $0x2e,0x1(%eax)
sete   %dl
movzbl 0x1(%eax,%edx,1),%eax
cmp    $0x2f,%al
jne    804be76 <fchmod@plt+0x1cc6>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9e7,0x4(%esp)
mov    %eax,%edi
jmp    804b8e5 <fchmod@plt+0x1735>
xor    %edi,%edi
cmpl   $0x4,0x2c(%esp)
jne    804bad7 <fchmod@plt+0x1927>
mov    0x54(%esp),%ecx
mov    %ebx,%edx
mov    0x18(%esp),%eax
movl   $0x1,(%esp)
call   804af90 <fchmod@plt+0xde0>
movl   $0x4,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   80594d0 <fts_set>
mov    %esi,(%esp)
call   8058cc0 <fts_read>
mov    0x1c(%esp),%ecx
cmp    $0x2,%ecx
jne    804ba88 <fchmod@plt+0x18d8>
mov    %ecx,%eax
jmp    804b89a <fchmod@plt+0x16ea>
nop
movl   $0x30900,0x8(%esp)
mov    0x18(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   8049dc0 <openat64@plt>
test   %eax,%eax
js     804bccc <fchmod@plt+0x1b1c>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049fc0 <fdopendir@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     804be38 <fchmod@plt+0x1c88>
call   8049e80 <__errno_location@plt>
mov    %eax,0x1c(%esp)
movl   $0x0,(%eax)
jmp    804bcae <fchmod@plt+0x1afe>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
cmpb   $0x2e,0x14(%eax)
sete   %dl
movzbl 0x14(%eax,%edx,1),%eax
cmp    $0x2f,%al
jne    804be69 <fchmod@plt+0x1cb9>
mov    %edi,(%esp)
call   804a020 <readdir64@plt>
test   %eax,%eax
je     804b9fa <fchmod@plt+0x184a>
cmpb   $0x2e,0x13(%eax)
je     804bc98 <fchmod@plt+0x1ae8>
mov    %edi,(%esp)
call   804a120 <closedir@plt>
mov    0x54(%esp),%eax
cmpb   $0x0,0xa(%eax)
je     804b920 <fchmod@plt+0x1770>
mov    $0x27,%ebp
jmp    804b925 <fchmod@plt+0x1775>
mov    0x44(%ebx),%edx
mov    0x48(%ebx),%ecx
xor    0xc(%eax),%ecx
xor    0x8(%eax),%edx
or     %edx,%ecx
jne    804ba57 <fchmod@plt+0x18a7>
mov    0x1c(%ebx),%eax
cmpb   $0x2f,(%eax)
jne    804bdcc <fchmod@plt+0x1c1c>
cmpb   $0x0,0x1(%eax)
jne    804bdcc <fchmod@plt+0x1c1c>
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eaac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movl   $0x5,0x8(%esp)
movl   $0x805eb18,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804b7bc <fchmod@plt+0x160c>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
mov    $0x4,%ebp
movl   $0x805e9d7,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804b800 <fchmod@plt+0x1650>
movl   $0x805f92e,0x4(%esp)
movl   $0x1,(%esp)
call   8054ed0 <fchmod@plt+0xad20>
mov    %eax,%ebp
mov    0x1c(%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805eadc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804bd50 <fchmod@plt+0x1ba0>
mov    %edx,(%esp)
call   804a110 <close@plt>
jmp    804bccc <fchmod@plt+0x1b1c>
movl   $0x805ece8,0xc(%esp)
movl   $0x23a,0x8(%esp)
movl   $0x805ea18,0x4(%esp)
movl   $0x805ec70,(%esp)
call   804a160 <__assert_fail@plt>
test   %al,%al
je     804bcae <fchmod@plt+0x1afe>
jmp    804bcc4 <fchmod@plt+0x1b14>
test   %al,%al
je     804bbce <fchmod@plt+0x1a1e>
xchg   %ax,%ax
jmp    804ba33 <fchmod@plt+0x1883>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    %eax,0x4(%esp)
jmp    8054ef0 <fchmod@plt+0xad40>
lea    0x0(%esi),%esi
and    $0xf000,%edx
cmp    $0xa000,%edx
je     804bef8 <fchmod@plt+0x1d48>
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   8056c10 <fchmod@plt+0xca60>
test   %al,%al
je     804bed8 <fchmod@plt+0x1d28>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
nop
mov    %ebx,(%esp)
movl   $0x2,0x4(%esp)
call   804a030 <euidaccess@plt>
test   %eax,%eax
sete   %al
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x8065720,%eax
test   %eax,%eax
jne    804bf70 <fchmod@plt+0x1dc0>
jmp    804bf92 <fchmod@plt+0x1de2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806522c,%edi
xor    %ebp,%ebp
cmp    $0x0,%ecx
mov    %ebp,0x1c(%esp)
mov    %edx,%esi
mov    %edi,0x18(%esp)
mov    %ecx,%edi
ja     804bf37 <fchmod@plt+0x1d87>
cmp    0x18(%esp),%edx
jbe    804bf3f <fchmod@plt+0x1d8f>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x8065720,%eax
mov    %edi,%ebp
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   80528e0 <fchmod@plt+0x8730>
xor    %esi,%eax
or     %eax,%ebp
jne    804bf88 <fchmod@plt+0x1dd8>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
sub    %esi,%edx
sbb    %edi,%ecx
mov    %ecx,%eax
or     %edx,%eax
jne    804bf18 <fchmod@plt+0x1d68>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x806522c,%eax
movl   $0x1,0x4(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   804a190 <calloc@plt>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    %eax,0x8065720
jne    804bf70 <fchmod@plt+0x1dc0>
movl   $0x8065320,0x8065720
08
movl   $0x400,0x806522c
00
jmp    804bf70 <fchmod@plt+0x1dc0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x1c(%esp)
movzbl 0x54(%esp),%eax
mov    0x64(%esp),%edi
mov    0x60(%esp),%esi
mov    %edx,0x24(%esp)
mov    %al,0x23(%esp)
mov    0x6c(%esp),%eax
movb   $0x0,(%eax)
mov    0x68(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
mov    %edi,%eax
or     %esi,%eax
je     804c0fc <fchmod@plt+0x1f4c>
mov    0x50(%esp),%eax
xor    %edx,%edx
mov    %edi,%ebp
mov    %edx,0x14(%esp)
mov    %esi,%edi
mov    %ecx,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    0x14(%esp),%ebp
mov    %edi,%eax
jb     804c054 <fchmod@plt+0x1ea4>
ja     804c050 <fchmod@plt+0x1ea0>
cmp    0x10(%esp),%edi
jbe    804c054 <fchmod@plt+0x1ea4>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049a00 <read@plt>
test   %eax,%eax
mov    %eax,%esi
js     804c110 <fchmod@plt+0x1f60>
je     804c0fc <fchmod@plt+0x1f4c>
mov    %eax,%ebx
mov    %eax,%ecx
sar    $0x1f,%ebx
sub    %eax,%edi
mov    0x68(%esp),%eax
sbb    %ebx,%ebp
add    %esi,(%eax)
adc    %ebx,0x4(%eax)
cmpb   $0x0,0x23(%esp)
je     804c0ca <fchmod@plt+0x1f1a>
mov    0x18(%esp),%eax
lea    (%eax,%esi,1),%edx
movb   $0x1,(%edx)
cmpl   $0x0,(%eax)
mov    %edx,0x28(%esp)
lea    0x4(%eax),%edx
jne    804c0b7 <fchmod@plt+0x1f07>
mov    %edx,%eax
cmpl   $0x0,(%eax)
lea    0x4(%eax),%edx
je     804c0ad <fchmod@plt+0x1efd>
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
je     804c0b7 <fchmod@plt+0x1f07>
cmp    0x28(%esp),%eax
ja     804c170 <fchmod@plt+0x1fc0>
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80528e0 <fchmod@plt+0x8730>
cmp    %esi,%eax
jne    804c1a0 <fchmod@plt+0x1ff0>
xor    %eax,%eax
mov    0x6c(%esp),%ebx
mov    %al,(%ebx)
mov    %ebp,%eax
or     %edi,%eax
jne    804c040 <fchmod@plt+0x1e90>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     804c0f2 <fchmod@plt+0x1f42>
mov    %eax,%ebx
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eceb,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x1,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   804a010 <lseek64@plt>
test   %edx,%edx
js     804c1f2 <fchmod@plt+0x2042>
mov    $0x1,%eax
jmp    804c0ec <fchmod@plt+0x1f3c>
lea    0x0(%esi),%esi
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed0c,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804c162 <fchmod@plt+0x1fb2>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ecfc,0x4(%esp)
mov    %eax,%esi
jmp    804c1be <fchmod@plt+0x200e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
test   %eax,%eax
mov    %ecx,0x4(%esp)
js     804c238 <fchmod@plt+0x2088>
mov    %eax,(%esp)
call   804a1b0 <fchmod@plt>
add    $0x1c,%esp
ret
nop
mov    %edx,(%esp)
call   804a0b0 <chmod@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%ebx
cmpb   $0x0,0x21(%ebx)
jne    804c290 <fchmod@plt+0x20e0>
test   %edx,%edx
movl   $0x804c380,0x24(%esp)
movl   $0x804bea0,0x28(%esp)
movl   $0x804be90,0x2c(%esp)
js     804c2bf <fchmod@plt+0x210f>
cmpl   $0x0,0x40(%esp)
js     804c2bf <fchmod@plt+0x210f>
lea    0x0(%esi),%esi
lea    0x24(%esp),%esi
jmp    804c2f6 <fchmod@plt+0x2146>
xchg   %ax,%ax
cmpb   $0x0,0x26(%ebx)
jne    804c25f <fchmod@plt+0x20af>
movzbl 0x27(%ebx),%ebx
movl   $0x804c330,0x24(%esp)
movl   $0x804bea0,0x28(%esp)
movl   $0x804be90,0x2c(%esp)
xor    $0x1,%ebx
test   %edx,%edx
jns    804c2e8 <fchmod@plt+0x2138>
xor    %edx,%edx
test   %bl,%bl
je     804c2c3 <fchmod@plt+0x2113>
lea    0x24(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049f20 <attr_copy_file@plt>
test   %eax,%eax
sete   %al
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x40(%esp),%esi
test   %esi,%esi
js     804c2b9 <fchmod@plt+0x2109>
xor    %esi,%esi
test   %bl,%bl
jne    804c288 <fchmod@plt+0x20d8>
mov    %esi,0x14(%esp)
mov    0x40(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
call   8049eb0 <attr_copy_fd@plt>
test   %eax,%eax
sete   %al
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x3d,%eax
jne    804c348 <fchmod@plt+0x2198>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5f,%eax
je     804c33f <fchmod@plt+0x218f>
lea    0x28(%esp),%edx
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
call   80564c0 <fchmod@plt+0xc310>
add    $0x1c,%esp
ret
jmp    804c380 <fchmod@plt+0x21d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
call   8049e80 <__errno_location@plt>
lea    0x28(%esp),%edx
mov    (%eax),%eax
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80564c0 <fchmod@plt+0xc310>
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    %edx,0x4(%esp)
movl   $0x1,(%esp)
call   8054ed0 <fchmod@plt+0xad20>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8054ed0 <fchmod@plt+0xad20>
mov    %edi,0xc(%esp)
movl   $0x805ed1d,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049ef0 <__printf_chk@plt>
test   %ebx,%ebx
je     804c436 <fchmod@plt+0x2286>
mov    %ebx,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed26,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8065300,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c453 <fchmod@plt+0x22a3>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049f90 <__overflow@plt>
jmp    804c44c <fchmod@plt+0x229c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
movl   $0x0,0x10(%esp)
mov    0x40(%esp),%edi
mov    %edx,0xc(%esp)
movl   $0xffffff9c,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8059750 <fts_children+0x240>
test   %eax,%eax
setne  %al
je     804c5b8 <fchmod@plt+0x2408>
mov    %ebp,%edx
test   %dl,%dl
je     804c5b0 <fchmod@plt+0x2400>
call   8049e80 <__errno_location@plt>
cmpl   $0x11,(%eax)
mov    %eax,%ebp
je     804c530 <fchmod@plt+0x2380>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   8054ed0 <fchmod@plt+0xad20>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805ef94,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,(%esp)
call   8049b40 <unlink@plt>
test   %eax,%eax
jne    804c5c8 <fchmod@plt+0x2418>
mov    %edi,%eax
test   %al,%al
je     804c580 <fchmod@plt+0x23d0>
mov    %ebx,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9a7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x0,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0xffffff9c,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8059750 <fts_children+0x240>
test   %eax,%eax
setne  %al
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    804c60d <fchmod@plt+0x245d>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %eax,%eax
jmp    804c5bd <fchmod@plt+0x240d>
call   8049e80 <__errno_location@plt>
mov    %eax,%ebp
jmp    804c4c6 <fchmod@plt+0x2316>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x0,(%esp)
call   8049e00 <setfscreatecon@plt>
test   %eax,%eax
je     804c66d <fchmod@plt+0x24bd>
movl   $0x5,0x8(%esp)
movl   $0x805efb8,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x30,%esp
mov    (%edx),%edx
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    %ebx,%eax
call   804beb0 <fchmod@plt+0x1d00>
test   %al,%al
je     804c708 <fchmod@plt+0x2558>
mov    %ebx,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
mov    0x806573c,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805ed34,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80652a4,%eax
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    804c785 <fchmod@plt+0x25d5>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   80525d0 <fchmod@plt+0x8420>
mov    (%esi),%esi
mov    %ebx,(%esp)
movb   $0x0,0x2a(%esp)
call   8054ef0 <fchmod@plt+0xad40>
mov    0x806573c,%ebx
movl   $0x5,0x8(%esp)
and    $0xfff,%esi
movl   $0x805efec,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
lea    0x21(%esp),%edx
mov    %edx,0x18(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80652a4,%eax
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    804c6f0 <fchmod@plt+0x2540>
call   8049b20 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
movl   $0x80539c0,0x10(%esp)
movl   $0x8053920,0xc(%esp)
movl   $0x80538b0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3d,(%esp)
call   80530f0 <fchmod@plt+0x8f40>
mov    0x30(%esp),%edx
mov    %eax,0x34(%edx)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
movl   $0x80539c0,0x10(%esp)
movl   $0x8053920,0xc(%esp)
movl   $0x80538f0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3d,(%esp)
call   80530f0 <fchmod@plt+0x8f40>
mov    0x30(%esp),%edx
mov    %eax,0x38(%edx)
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %edi
mov    $0x3c,%edx
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
test   $0x1,%bl
mov    %ebx,%edi
jne    804c868 <fchmod@plt+0x26b8>
test   $0x2,%edi
jne    804c878 <fchmod@plt+0x26c8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     804c844 <fchmod@plt+0x2694>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     804c84c <fchmod@plt+0x269c>
movb   $0x0,(%edi)
call   8049b30 <geteuid@plt>
test   %eax,%eax
sete   %al
mov    %al,0x1a(%ebx)
mov    %al,0x19(%ebx)
add    $0x4,%esp
pop    %ebx
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x1(%ebx),%edi
mov    $0x3b,%dl
test   $0x2,%edi
movb   $0x0,(%ebx)
je     804c82d <fchmod@plt+0x267d>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    804c82d <fchmod@plt+0x267d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
sete   %dl
cmp    $0x1,%eax
sete   %al
or     %dl,%al
je     804c8b5 <fchmod@plt+0x2705>
mov    0x10(%esp),%eax
movzbl 0x19(%eax),%eax
xor    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
cmpb   $0x0,0x44(%esp)
mov    0x1c(%ebx),%eax
mov    0x18(%ebx),%edx
mov    %eax,0x18(%esp)
jne    804c980 <fchmod@plt+0x27d0>
cmpb   $0x0,0x1d(%esi)
je     804ca30 <fchmod@plt+0x2880>
mov    0x48(%esp),%eax
mov    0x10(%ebx),%ebx
mov    (%eax),%eax
and    %ebx,%eax
and    $0x1c0,%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   80513b0 <fchmod@plt+0x7200>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804c980 <fchmod@plt+0x27d0>
call   8049e80 <__errno_location@plt>
mov    %eax,%ebx
mov    (%eax),%eax
cmp    $0x16,%eax
je     804c92f <fchmod@plt+0x277f>
cmp    $0x1,%eax
jne    804c939 <fchmod@plt+0x2789>
cmpb   $0x0,0x1a(%esi)
je     804ca1b <fchmod@plt+0x286b>
mov    %edi,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed47,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804ca1b <fchmod@plt+0x286b>
xchg   %ax,%ax
mov    0x18(%esp),%eax
cmp    $0xffffffff,%ebp
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
je     804ca58 <fchmod@plt+0x28a8>
mov    %ebp,(%esp)
call   8049dd0 <fchown@plt>
test   %eax,%eax
je     804ca64 <fchmod@plt+0x28b4>
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%edx
cmp    $0x16,%ebx
je     804cab0 <fchmod@plt+0x2900>
cmp    $0x1,%ebx
je     804cab0 <fchmod@plt+0x2900>
mov    %esi,(%esp)
call   804c890 <fchmod@plt+0x26e0>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
jne    804ca69 <fchmod@plt+0x28b9>
mov    %edi,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f024,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
movzbl 0x22(%esi),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x18(%esi)
jne    804c8f0 <fchmod@plt+0x2740>
cmpb   $0x0,0x29(%esi)
je     804c980 <fchmod@plt+0x27d0>
mov    0x48(%esp),%eax
mov    0x10(%esi),%ebx
mov    (%eax),%eax
jmp    804c8f9 <fchmod@plt+0x2749>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049fa0 <lchown@plt>
test   %eax,%eax
jne    804ca78 <fchmod@plt+0x28c8>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     804ca8f <fchmod@plt+0x28df>
cmp    $0x1,%ebx
jne    804c9c0 <fchmod@plt+0x2810>
mov    0x18(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049fa0 <lchown@plt>
mov    %ebx,0x0(%ebp)
jmp    804c9c0 <fchmod@plt+0x2810>
nop
mov    0x18(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
call   8049dd0 <fchown@plt>
mov    0x1c(%esp),%edx
mov    %ebx,(%edx)
jmp    804c9c0 <fchmod@plt+0x2810>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8065228,%eax
cmp    $0xffffffff,%eax
je     804caf0 <fchmod@plt+0x2940>
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x0,(%esp)
call   804a0e0 <umask@plt>
mov    %eax,(%esp)
mov    %eax,%ebx
mov    %eax,0x8065228
call   804a0e0 <umask@plt>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x26c,%esp
mov    0x14(%ebp),%ebx
mov    %eax,-0x1dc(%ebp)
mov    0x8(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,-0x204(%ebp)
mov    0xc(%ebp),%eax
mov    %eax,-0x208(%ebp)
mov    0x10(%ebp),%eax
mov    %eax,-0x200(%ebp)
mov    0x18(%ebp),%eax
mov    %eax,-0x1ec(%ebp)
mov    0x1c(%ebp),%eax
mov    %eax,-0x1fc(%ebp)
mov    0x20(%ebp),%eax
mov    %eax,-0x1e8(%ebp)
mov    0x24(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmpb   $0x0,0x18(%ebx)
je     804cb9a <fchmod@plt+0x29ea>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     804cb9a <fchmod@plt+0x29ea>
movb   $0x0,(%eax)
mov    -0x1e8(%ebp),%eax
cmpl   $0x2,0x4(%ebx)
movb   $0x0,(%eax)
lea    -0x1a0(%ebp),%eax
mov    %eax,-0x1f4(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
je     804d1e8 <fchmod@plt+0x3038>
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    804d1fa <fchmod@plt+0x304a>
mov    -0x190(%ebp),%eax
mov    %eax,-0x20c(%ebp)
and    $0xf000,%eax
cmp    $0x4000,%eax
mov    %eax,-0x1e4(%ebp)
je     804d268 <fchmod@plt+0x30b8>
cmpb   $0x0,-0x1ec(%ebp)
je     804cc34 <fchmod@plt+0x2a84>
mov    (%ebx),%eax
test   %eax,%eax
je     804d7e0 <fchmod@plt+0x3630>
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   8052390 <fchmod@plt+0x81e0>
mov    %esi,%eax
test   %al,%al
jne    804cc99 <fchmod@plt+0x2ae9>
cmpl   $0x8000,-0x1e4(%ebp)
00
je     804d3a8 <fchmod@plt+0x31f8>
cmpb   $0x0,0x14(%ebx)
jne    804d388 <fchmod@plt+0x31d8>
lea    -0x140(%ebp),%eax
mov    %eax,-0x1f8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
setne  %al
xor    %edx,%edx
test   %al,%al
je     804d608 <fchmod@plt+0x3458>
call   8049e80 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%esi
jne    804d410 <fchmod@plt+0x3260>
movb   $0x1,-0x210(%ebp)
xor    %edi,%edi
movb   $0x0,-0x218(%ebp)
movl   $0x0,-0x1f8(%ebp)
00
cmpb   $0x0,-0x1ec(%ebp)
je     804cdb8 <fchmod@plt+0x2c08>
mov    0x34(%ebx),%eax
test   %eax,%eax
je     804cdb8 <fchmod@plt+0x2c08>
movzbl 0x18(%ebx),%edx
test   %dl,%dl
jne    804cdb8 <fchmod@plt+0x2c08>
mov    (%ebx),%eax
test   %eax,%eax
jne    804cdb8 <fchmod@plt+0x2c08>
cmpb   $0x0,-0x218(%ebp)
lea    -0x140(%ebp),%ecx
je     804da0b <fchmod@plt+0x385b>
mov    0x10(%ecx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804cdb8 <fchmod@plt+0x2c08>
mov    -0x1e0(%ebp),%eax
mov    %ecx,0x8(%esp)
mov    %edx,-0x218(%ebp)
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   8052410 <fchmod@plt+0x8260>
mov    -0x218(%ebp),%edx
test   %al,%al
je     804cdb8 <fchmod@plt+0x2c08>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %edx,-0x1e4(%ebp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f1ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e4(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2c(%ebx)
je     804cde8 <fchmod@plt+0x2c38>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804cde8 <fchmod@plt+0x2c38>
mov    %edi,%eax
xor    %ecx,%ecx
mov    -0x1e0(%ebp),%edx
test   %al,%al
mov    -0x1dc(%ebp),%eax
cmovne -0x1f8(%ebp),%ecx
call   804c3b0 <fchmod@plt+0x2200>
movzbl 0x18(%ebx),%eax
test   %al,%al
jne    804d1a8 <fchmod@plt+0x2ff8>
cmpb   $0x0,0x20(%ebx)
je     804ce30 <fchmod@plt+0x2c80>
cmpb   $0x0,0x17(%ebx)
jne    804ce30 <fchmod@plt+0x2c80>
cmpl   $0x1,-0x18c(%ebp)
ja     804d460 <fchmod@plt+0x32b0>
cmpb   $0x0,-0x1ec(%ebp)
mov    0x4(%ebx),%edx
je     804ce22 <fchmod@plt+0x2c72>
cmp    $0x3,%edx
je     804d460 <fchmod@plt+0x32b0>
cmp    $0x4,%edx
je     804d460 <fchmod@plt+0x32b0>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
cmpb   $0x0,0x28(%ebx)
jne    804d290 <fchmod@plt+0x30e0>
test   %al,%al
jne    804d588 <fchmod@plt+0x33d8>
mov    -0x20c(%ebp),%eax
and    $0xfff,%eax
cmpb   $0x0,0x29(%ebx)
mov    %eax,-0x1f0(%ebp)
je     804ce6e <fchmod@plt+0x2cbe>
mov    0x10(%ebx),%eax
mov    %eax,-0x1f0(%ebp)
andl   $0xfff,-0x1f0(%ebp)
00
cmpb   $0x0,0x1c(%ebx)
je     804d860 <fchmod@plt+0x36b0>
mov    -0x1f0(%ebp),%eax
and    $0x3f,%eax
mov    %eax,-0x21c(%ebp)
cmpb   $0x0,0x23(%ebx)
je     804ced2 <fchmod@plt+0x2d22>
cmpb   $0x0,0x21(%ebx)
jne    804de60 <fchmod@plt+0x3cb0>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   80596f0 <fts_children+0x1e0>
test   %eax,%eax
js     804e665 <fchmod@plt+0x44b5>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049e00 <setfscreatecon@plt>
test   %eax,%eax
js     804deb5 <fchmod@plt+0x3d05>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a000 <freecon@plt>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804df28 <fchmod@plt+0x3d78>
cmpb   $0x0,0x2a(%ebx)
je     804dc60 <fchmod@plt+0x3ab0>
mov    -0x1dc(%ebp),%eax
cmpb   $0x2f,(%eax)
je     804cf3e <fchmod@plt+0x2d8e>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x7f90>
cmpb   $0x2e,(%eax)
mov    %eax,%edi
je     804e352 <fchmod@plt+0x41a2>
lea    -0xe0(%ebp),%eax
mov    %eax,0x8(%esp)
movl   $0x805fff3,0x4(%esp)
movl   $0x3,(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
je     804ed4c <fchmod@plt+0x4b9c>
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8049fb0 <symlink@plt>
test   %eax,%eax
jne    804e5db <fchmod@plt+0x442b>
mov    $0x1,%edi
xor    %ecx,%ecx
mov    $0x1,%esi
movb   $0x0,-0x218(%ebp)
cmpb   $0x0,-0x1ec(%ebp)
je     804cfbe <fchmod@plt+0x2e0e>
mov    0x34(%ebx),%edx
test   %edx,%edx
je     804cfbe <fchmod@plt+0x2e0e>
mov    -0x1e0(%ebp),%eax
lea    -0x7c(%ebp),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %ecx,-0x1ec(%ebp)
mov    %eax,0x4(%esp)
mov    %edx,-0x1e8(%ebp)
call   804a100 <__lxstat64@plt>
mov    -0x1e8(%ebp),%edx
mov    -0x1ec(%ebp),%ecx
test   %eax,%eax
je     804eb38 <fchmod@plt+0x4988>
cmpb   $0x0,0x17(%ebx)
je     804cfd6 <fchmod@plt+0x2e26>
cmpl   $0x4000,-0x1e4(%ebp)
00
mov    %esi,%edx
jne    804d249 <fchmod@plt+0x3099>
test   %cl,%cl
mov    %esi,%edx
jne    804d249 <fchmod@plt+0x3099>
cmpb   $0x0,0x1e(%ebx)
je     804d044 <fchmod@plt+0x2e94>
mov    -0x160(%ebp),%eax
mov    %eax,-0x7c(%ebp)
mov    -0x15c(%ebp),%eax
mov    %eax,-0x78(%ebp)
mov    -0x158(%ebp),%eax
mov    %eax,-0x74(%ebp)
mov    -0x154(%ebp),%eax
mov    %eax,-0x70(%ebp)
mov    %edi,%eax
test   %al,%al
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
je     804e8c8 <fchmod@plt+0x4718>
call   80561d0 <fchmod@plt+0xc020>
xor    %edx,%edx
test   %eax,%eax
je     804d03a <fchmod@plt+0x2e8a>
call   8049e80 <__errno_location@plt>
cmpl   $0x26,(%eax)
setne  %dl
mov    %edx,%eax
test   %al,%al
jne    804ec00 <fchmod@plt+0x4a50>
mov    %edi,%eax
mov    %esi,%edx
test   %al,%al
jne    804d249 <fchmod@plt+0x3099>
cmpb   $0x0,0x1c(%ebx)
je     804d0c2 <fchmod@plt+0x2f12>
cmpb   $0x0,-0x210(%ebp)
jne    804d071 <fchmod@plt+0x2ec1>
mov    -0x128(%ebp),%eax
cmp    %eax,-0x188(%ebp)
je     804f13b <fchmod@plt+0x4f8b>
lea    -0x130(%ebp),%eax
mov    -0x1e0(%ebp),%edx
mov    $0xffffffff,%ecx
mov    %eax,0x8(%esp)
movzbl -0x210(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1f4(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   804c8c0 <fchmod@plt+0x2710>
xor    %edx,%edx
cmp    $0xffffffff,%eax
je     804d249 <fchmod@plt+0x3099>
mov    -0x20c(%ebp),%edi
mov    %edi,%edx
and    $0xf1,%dh
test   %eax,%eax
cmovne %edi,%edx
mov    %edx,-0x20c(%ebp)
cmpb   $0x0,0x25(%ebx)
jne    804ed12 <fchmod@plt+0x4b62>
cmpb   $0x0,0x1d(%ebx)
jne    804e87b <fchmod@plt+0x46cb>
cmpb   $0x0,0x18(%ebx)
jne    804e87b <fchmod@plt+0x46cb>
cmpb   $0x0,0x29(%ebx)
jne    804f298 <fchmod@plt+0x50e8>
movzbl 0x1f(%ebx),%edx
test   %dl,%dl
jne    804f87c <fchmod@plt+0x56cc>
mov    -0x21c(%ebp),%eax
test   %eax,%eax
jne    804fa02 <fchmod@plt+0x5852>
cmpb   $0x0,-0x218(%ebp)
mov    %esi,%edx
je     804d249 <fchmod@plt+0x3099>
mov    -0x21c(%ebp),%eax
or     -0x254(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a0b0 <chmod@plt>
mov    %esi,%edx
test   %eax,%eax
je     804d249 <fchmod@plt+0x3099>
mov    -0x1e0(%ebp),%eax
mov    %edx,-0x1dc(%ebp)
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eeb2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1dc(%ebp),%edx
cmpb   $0x0,0x22(%ebx)
je     804d249 <fchmod@plt+0x3099>
xchg   %ax,%ax
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
nop
cmpl   $0x1,-0x18c(%ebp)
jne    804cdf4 <fchmod@plt+0x2c44>
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050dd0 <fchmod@plt+0x6c20>
mov    %eax,%esi
jmp    804d498 <fchmod@plt+0x32e8>
call   804a100 <__lxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
je     804cbe0 <fchmod@plt+0x2a30>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed63,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
mov    %edx,%eax
jne    804f21f <fchmod@plt+0x506f>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x28(%ebx),%edx
test   %dl,%dl
je     804d888 <fchmod@plt+0x36d8>
cmpb   $0x0,-0x1ec(%ebp)
jne    804cc15 <fchmod@plt+0x2a65>
mov    %esi,%eax
test   %al,%al
jne    804cc99 <fchmod@plt+0x2ae9>
jmp    804cc4a <fchmod@plt+0x2a9a>
cmpl   $0x4000,-0x1e4(%ebp)
00
jne    804ce3c <fchmod@plt+0x2c8c>
cmpb   $0x0,-0x1ec(%ebp)
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
jne    804d8f8 <fchmod@plt+0x3748>
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050dd0 <fchmod@plt+0x6c20>
mov    %eax,%esi
test   %esi,%esi
je     804d8e8 <fchmod@plt+0x3738>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1dc(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8054fd0 <fchmod@plt+0xae20>
test   %al,%al
jne    804da50 <fchmod@plt+0x38a0>
cmpl   $0x4,0x4(%ebx)
je     804d8e8 <fchmod@plt+0x3738>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,-0x1dc(%ebp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f210,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    -0x1dc(%ebp),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x3321>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804cc54 <fchmod@plt+0x2aa4>
cmpl   $0xa000,-0x1e4(%ebp)
00
je     804cc54 <fchmod@plt+0x2aa4>
cmpb   $0x0,0x18(%ebx)
jne    804cc54 <fchmod@plt+0x2aa4>
cmpb   $0x0,0x2a(%ebx)
jne    804cc54 <fchmod@plt+0x2aa4>
cmpb   $0x0,0x17(%ebx)
jne    804cc54 <fchmod@plt+0x2aa4>
mov    (%ebx),%eax
test   %eax,%eax
jne    804cc54 <fchmod@plt+0x2aa4>
cmpb   $0x0,0x15(%ebx)
jne    804cc54 <fchmod@plt+0x2aa4>
lea    -0x140(%ebp),%eax
mov    %eax,-0x1f8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
mov    $0x1,%edx
test   %eax,%eax
setne  %al
jmp    804cc81 <fchmod@plt+0x2ad1>
nop
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed63,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    0x0(%esi),%esi
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0xc(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c70>
mov    %eax,%esi
test   %esi,%esi
je     804d8e8 <fchmod@plt+0x3738>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804d2e8 <fchmod@plt+0x3138>
movzbl 0x2c(%ebx),%eax
mov    $0x1,%ecx
mov    -0x1e0(%ebp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   804c470 <fchmod@plt+0x22c0>
test   %al,%al
jne    804d5f8 <fchmod@plt+0x3448>
cmpb   $0x0,0x23(%ebx)
jne    804d7d0 <fchmod@plt+0x3620>
test   %esi,%esi
lea    0x0(%esi),%esi
je     804e000 <fchmod@plt+0x3e50>
mov    -0x1f8(%ebp),%eax
test   %eax,%eax
je     804d1a0 <fchmod@plt+0x2ff0>
mov    -0x1e0(%ebp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   8049d60 <rename@plt>
test   %eax,%eax
jne    804d838 <fchmod@plt+0x3688>
cmpb   $0x0,0x2c(%ebx)
je     804d1a0 <fchmod@plt+0x2ff0>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1f8(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805ef61,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8049d60 <rename@plt>
test   %eax,%eax
jne    804e031 <fchmod@plt+0x3e81>
cmpb   $0x0,0x2c(%ebx)
je     804d5be <fchmod@plt+0x340e>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804ebb5 <fchmod@plt+0x4a05>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     804d5cb <fchmod@plt+0x341b>
movb   $0x1,(%eax)
cmpb   $0x0,-0x1ec(%ebp)
je     804d5f8 <fchmod@plt+0x3448>
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   8052390 <fchmod@plt+0x81e0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    0x0(%esi),%esi
xor    $0x1,%edx
mov    %edx,%eax
mov    -0x144(%ebp),%edx
and    $0x1,%eax
mov    %al,-0x218(%ebp)
mov    -0x148(%ebp),%eax
xor    -0xe4(%ebp),%edx
xor    -0xe8(%ebp),%eax
or     %eax,%edx
je     804dad8 <fchmod@plt+0x3928>
cmpl   $0x2,0x4(%ebx)
je     804ddd8 <fchmod@plt+0x3c28>
xor    %edi,%edi
xor    %esi,%esi
cmpl   $0x4000,-0x1e4(%ebp)
00
je     8050581 <fchmod@plt+0x63d1>
cmpb   $0x0,0x2b(%ebx)
jne    804d930 <fchmod@plt+0x3780>
cmpb   $0x0,0x18(%ebx)
jne    805058b <fchmod@plt+0x63db>
mov    0x8(%ebx),%eax
cmp    $0x2,%eax
je     804d5f8 <fchmod@plt+0x3448>
cmp    $0x3,%eax
je     804eb90 <fchmod@plt+0x49e0>
mov    %esi,%eax
test   %al,%al
jne    804d5f8 <fchmod@plt+0x3448>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804d6da <fchmod@plt+0x352a>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804e755 <fchmod@plt+0x45a5>
cmpb   $0x0,-0x1ec(%ebp)
je     804d6da <fchmod@plt+0x352a>
cmpl   $0x3,(%ebx)
je     804d6da <fchmod@plt+0x352a>
mov    -0x1f8(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   8052410 <fchmod@plt+0x8260>
test   %al,%al
jne    804f0c7 <fchmod@plt+0x4f17>
cmpl   $0x4000,-0x1e4(%ebp)
00
je     804d6fc <fchmod@plt+0x354c>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804e8d7 <fchmod@plt+0x4727>
movzbl 0x18(%ebx),%edx
mov    (%ebx),%esi
test   %dl,%dl
jne    804e43e <fchmod@plt+0x428e>
test   %esi,%esi
jne    804e477 <fchmod@plt+0x42c7>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804e384 <fchmod@plt+0x41d4>
test   %dl,%dl
jne    804e384 <fchmod@plt+0x41d4>
cmpb   $0x0,0x15(%ebx)
jne    804d74d <fchmod@plt+0x359d>
cmpb   $0x0,0x20(%ebx)
je     804e368 <fchmod@plt+0x41b8>
cmpl   $0x1,-0x12c(%ebp)
jbe    804e368 <fchmod@plt+0x41b8>
mov    -0x1e0(%ebp),%eax
mov    %edx,-0x1f8(%ebp)
mov    %eax,(%esp)
call   8049b40 <unlink@plt>
test   %eax,%eax
je     804ec72 <fchmod@plt+0x4ac2>
call   8049e80 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%esi
je     804ec72 <fchmod@plt+0x4ac2>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1f8(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    0x0(%esi),%esi
call   804c620 <fchmod@plt+0x2470>
jmp    804d4db <fchmod@plt+0x332b>
lea    0x0(%esi),%esi
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%ebx),%eax
mov    %eax,(%esp)
call   8052410 <fchmod@plt+0x8260>
test   %al,%al
mov    %eax,%edx
je     804cc15 <fchmod@plt+0x2a65>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f048,0x4(%esp)
mov    %eax,%ebx
jmp    804d8ae <fchmod@plt+0x36fe>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ef4d,0x4(%esp)
mov    %eax,%esi
jmp    804d21a <fchmod@plt+0x306a>
lea    0x0(%esi),%esi
mov    -0x1e4(%ebp),%edi
xor    %ecx,%ecx
mov    -0x1f0(%ebp),%eax
and    $0x12,%eax
cmp    $0x4000,%edi
cmovne %ecx,%eax
mov    %eax,-0x21c(%ebp)
jmp    804ce87 <fchmod@plt+0x2cd7>
lea    0x0(%esi),%esi
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed72,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e0(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x18(%ebx),%eax
jmp    804ce3c <fchmod@plt+0x2c8c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c70>
mov    %eax,%esi
jmp    804d2db <fchmod@plt+0x312b>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x0,0x1e(%ebx)
je     804d960 <fchmod@plt+0x37b0>
cmpb   $0x0,0x18(%ebx)
mov    $0x1,%al
je     804d960 <fchmod@plt+0x37b0>
mov    -0x140(%ebp),%edx
mov    -0x13c(%ebp),%eax
xor    -0x19c(%ebp),%eax
xor    -0x1a0(%ebp),%edx
or     %eax,%edx
setne  %al
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    -0x1f4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1f8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80553e0 <fchmod@plt+0xb230>
test   %eax,%eax
js     804d65e <fchmod@plt+0x34ae>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     804d99b <fchmod@plt+0x37eb>
movb   $0x1,(%eax)
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0xc(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c70>
test   %eax,%eax
mov    %eax,%esi
je     804d5f8 <fchmod@plt+0x3448>
movzbl 0x2c(%ebx),%eax
mov    $0x1,%ecx
mov    -0x1e0(%ebp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   804c470 <fchmod@plt+0x22c0>
test   %al,%al
jne    804d5f8 <fchmod@plt+0x3448>
movl   $0x0,-0x1f8(%ebp)
00
jmp    804d4d1 <fchmod@plt+0x3321>
lea    -0x7c(%ebp),%eax
mov    %eax,-0x230(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %edx,-0x218(%ebp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
mov    -0x218(%ebp),%edx
test   %eax,%eax
jne    804cdb8 <fchmod@plt+0x2c08>
mov    -0x230(%ebp),%ecx
jmp    804ccf4 <fchmod@plt+0x2b44>
lea    0x0(%esi),%esi
mov    0x8065724,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,-0x1dc(%ebp)
mov    0x8065728,%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f1e0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    -0x1dc(%ebp),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e8(%ebp),%eax
movb   $0x1,(%eax)
jmp    804d4d1 <fchmod@plt+0x3321>
lea    0x0(%esi),%esi
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
xor    -0x13c(%ebp),%edx
xor    -0x140(%ebp),%eax
or     %eax,%edx
jne    804d636 <fchmod@plt+0x3486>
cmpb   $0x0,0x17(%ebx)
jne    804e346 <fchmod@plt+0x4196>
cmpl   $0x2,0x4(%ebx)
je     80503fe <fchmod@plt+0x624e>
lea    -0xe0(%ebp),%eax
mov    %eax,-0x220(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    804d640 <fchmod@plt+0x3490>
lea    -0x7c(%ebp),%eax
mov    %eax,-0x230(%ebp)
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    804d640 <fchmod@plt+0x3490>
mov    -0x24(%ebp),%eax
xor    %ecx,%ecx
mov    -0x20(%ebp),%edx
xor    -0x84(%ebp),%edx
xor    -0x88(%ebp),%eax
or     %eax,%edx
je     804edfb <fchmod@plt+0x4c4b>
mov    -0x6c(%ebp),%eax
mov    -0x220(%ebp),%edx
mov    -0x230(%ebp),%esi
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804edd6 <fchmod@plt+0x4c26>
mov    (%ebx),%eax
test   %eax,%eax
je     804e1d8 <fchmod@plt+0x4028>
test   %cl,%cl
jne    804eb62 <fchmod@plt+0x49b2>
cmpb   $0x0,0x18(%ebx)
jne    804d640 <fchmod@plt+0x3490>
cmpl   $0x2,0x4(%ebx)
je     804d640 <fchmod@plt+0x3490>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804d640 <fchmod@plt+0x3490>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804d640 <fchmod@plt+0x3490>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805ed88,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
nop
cmpb   $0x0,0x17(%ebx)
jne    804e407 <fchmod@plt+0x4257>
cmpl   $0x8000,-0x1e4(%ebp)
00
je     804dc90 <fchmod@plt+0x3ae0>
cmpb   $0x0,0x14(%ebx)
je     804e39c <fchmod@plt+0x41ec>
cmpl   $0xa000,-0x1e4(%ebp)
00
je     804ef38 <fchmod@plt+0x4d88>
mov    -0x190(%ebp),%eax
mov    $0x0,%edx
cmpl   $0x2,0x4(%ebx)
mov    %eax,-0x208(%ebp)
movzbl 0x21(%ebx),%eax
mov    %al,-0x200(%ebp)
mov    $0x20000,%eax
cmovne %edx,%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8052350 <fchmod@plt+0x81a0>
test   %eax,%eax
mov    %eax,-0x1e8(%ebp)
js     804edad <fchmod@plt+0x4bfd>
lea    -0xe0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e8(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
jne    804ec94 <fchmod@plt+0x4ae4>
mov    -0x148(%ebp),%eax
mov    -0x144(%ebp),%edx
xor    -0x84(%ebp),%edx
xor    -0x88(%ebp),%eax
or     %eax,%edx
jne    804dd3b <fchmod@plt+0x3b8b>
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
xor    -0xdc(%ebp),%edx
xor    -0xe0(%ebp),%eax
or     %eax,%edx
je     804f2c4 <fchmod@plt+0x5114>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f330,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
xor    %edi,%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movl   $0x0,-0x200(%ebp)
00
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
test   %eax,%eax
js     804f05d <fchmod@plt+0x4ead>
mov    -0x200(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %edi,%eax
test   %al,%al
je     804d4d1 <fchmod@plt+0x3321>
xor    %edi,%edi
mov    $0x1,%ecx
mov    $0x1,%esi
movb   $0x0,-0x218(%ebp)
jmp    804cf71 <fchmod@plt+0x2dc1>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
mov    -0x190(%ebp),%eax
mov    -0x1f8(%ebp),%edx
mov    -0x1f4(%ebp),%esi
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804dba0 <fchmod@plt+0x39f0>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804dba0 <fchmod@plt+0x39f0>
mov    -0x1e0(%ebp),%eax
mov    %ecx,-0x210(%ebp)
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054fd0 <fchmod@plt+0xae20>
test   %al,%al
jne    804eb7a <fchmod@plt+0x49ca>
cmpl   $0x0,(%ebx)
mov    -0x210(%ebp),%ecx
jne    804d640 <fchmod@plt+0x3490>
test   %cl,%cl
je     804eb7a <fchmod@plt+0x49ca>
mov    $0x1,%edi
mov    $0x1,%esi
jmp    804d644 <fchmod@plt+0x3494>
xchg   %ax,%ax
cmpb   $0x0,0x24(%ebx)
jne    804ce97 <fchmod@plt+0x2ce7>
cmpb   $0x0,0x27(%ebx)
jne    80507e1 <fchmod@plt+0x6631>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   80596f0 <fts_children+0x1e0>
test   %eax,%eax
js     804e567 <fchmod@plt+0x43b7>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049e00 <setfscreatecon@plt>
test   %eax,%eax
jns    804cec7 <fchmod@plt+0x2d17>
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x3d,%eax
je     804df09 <fchmod@plt+0x3d59>
cmp    $0x5f,%eax
je     804df09 <fchmod@plt+0x3d59>
call   8049e80 <__errno_location@plt>
mov    %eax,%edi
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f2ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x218(%ebp)
call   8049b00 <dcgettext@plt>
mov    -0x218(%ebp),%edx
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x24(%ebx)
je     804cec7 <fchmod@plt+0x2d17>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a000 <freecon@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    0x0(%esi),%esi
mov    -0x200(%ebp),%eax
test   %eax,%eax
je     804f10c <fchmod@plt+0x4f5c>
mov    -0x148(%ebp),%edi
mov    -0x1a0(%ebp),%edx
mov    -0x19c(%ebp),%ecx
mov    %esi,-0x228(%ebp)
mov    %edi,-0x230(%ebp)
mov    -0x144(%ebp),%edi
mov    %ebx,-0x220(%ebp)
mov    -0x230(%ebp),%esi
mov    %edx,%ebx
mov    %edx,-0x234(%ebp)
mov    %ecx,-0x218(%ebp)
jmp    804df82 <fchmod@plt+0x3dd2>
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
je     804e0e9 <fchmod@plt+0x3f39>
mov    0x8(%eax),%ecx
mov    0x4(%eax),%edx
xor    %edi,%ecx
xor    %esi,%edx
or     %edx,%ecx
jne    804df78 <fchmod@plt+0x3dc8>
mov    0xc(%eax),%edx
mov    -0x218(%ebp),%ecx
xor    0x10(%eax),%ecx
xor    %ebx,%edx
or     %edx,%ecx
jne    804df78 <fchmod@plt+0x3dc8>
mov    -0x1dc(%ebp),%eax
mov    -0x228(%ebp),%esi
mov    -0x220(%ebp),%ebx
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f42c,0x4(%esp)
mov    %eax,%edi
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x3321>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050d70 <fchmod@plt+0x6bc0>
jmp    804d4e6 <fchmod@plt+0x3336>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%edi
cmp    $0x16,%edx
je     804ee23 <fchmod@plt+0x4c73>
cmp    $0x12,%edx
mov    -0x1e0(%ebp),%eax
je     804e675 <fchmod@plt+0x44c5>
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805edb5,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1a0(%ebp),%eax
mov    -0x19c(%ebp),%edx
mov    %eax,0x8(%esp)
mov    -0x148(%ebp),%eax
mov    %edx,0xc(%esp)
mov    -0x144(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050d70 <fchmod@plt+0x6bc0>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
mov    -0x228(%ebp),%esi
mov    -0x220(%ebp),%ebx
sub    $0x30,%esp
mov    -0x200(%ebp),%ecx
lea    0x2f(%esp),%eax
mov    %eax,-0x228(%ebp)
andl   $0xfffffff0,-0x228(%ebp)
mov    -0x228(%ebp),%eax
cmpb   $0x0,-0x210(%ebp)
mov    %edi,0x8(%eax)
mov    -0x234(%ebp),%edi
mov    %ecx,(%eax)
mov    -0x230(%ebp),%ecx
mov    %edi,0xc(%eax)
mov    -0x218(%ebp),%edi
mov    %ecx,0x4(%eax)
mov    %edi,0x10(%eax)
jne    804e154 <fchmod@plt+0x3fa4>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ecfc <fchmod@plt+0x4b4c>
mov    -0x21c(%ebp),%eax
not    %eax
and    -0x1f0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8049e70 <mkdir@plt>
test   %eax,%eax
je     804e7aa <fchmod@plt+0x45fa>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805edca,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1dc(%ebp),%edx
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x3321>
cmpb   $0x0,0x18(%ebx)
jne    804e1e4 <fchmod@plt+0x4034>
cmpb   $0x0,0x15(%ebx)
je     804e238 <fchmod@plt+0x4088>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804d640 <fchmod@plt+0x3490>
test   %cl,%cl
je     804e238 <fchmod@plt+0x4088>
cmpl   $0x1,0x14(%edx)
jbe    804e238 <fchmod@plt+0x4088>
mov    -0x1e0(%ebp),%eax
mov    %edx,-0x210(%ebp)
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054fd0 <fchmod@plt+0xae20>
mov    -0x210(%ebp),%edx
test   %al,%al
jne    804e238 <fchmod@plt+0x4088>
cmpb   $0x0,0x18(%ebx)
jne    804de4f <fchmod@plt+0x3c9f>
jmp    804d640 <fchmod@plt+0x3490>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804e286 <fchmod@plt+0x40d6>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804e286 <fchmod@plt+0x40d6>
mov    0x58(%esi),%eax
mov    0x5c(%esi),%ecx
xor    0x5c(%edx),%ecx
xor    0x58(%edx),%eax
or     %eax,%ecx
jne    804d640 <fchmod@plt+0x3490>
mov    (%esi),%eax
mov    0x4(%esi),%ecx
xor    0x4(%edx),%ecx
xor    (%edx),%eax
or     %eax,%ecx
jne    804d640 <fchmod@plt+0x3490>
cmpb   $0x0,0x17(%ebx)
jne    804e346 <fchmod@plt+0x4196>
cmpb   $0x0,0x18(%ebx)
je     804e2a2 <fchmod@plt+0x40f2>
mov    -0x190(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804f224 <fchmod@plt+0x5074>
cmpb   $0x0,0x15(%ebx)
je     804e2bb <fchmod@plt+0x410b>
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804f8c7 <fchmod@plt+0x5717>
cmpl   $0x2,0x4(%ebx)
jne    804dbec <fchmod@plt+0x3a3c>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804fc0c <fchmod@plt+0x5a5c>
lea    -0x7c(%ebp),%edi
mov    $0x18,%ecx
rep movsl %ds:(%esi),%es:(%edi)
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804feae <fchmod@plt+0x5cfe>
lea    -0xe0(%ebp),%edi
mov    $0x18,%ecx
mov    %edx,%esi
rep movsl %ds:(%esi),%es:(%edi)
mov    -0x24(%ebp),%eax
mov    -0x20(%ebp),%edx
xor    -0x84(%ebp),%edx
xor    -0x88(%ebp),%eax
or     %eax,%edx
jne    804d640 <fchmod@plt+0x3490>
mov    -0xdc(%ebp),%edi
cmp    %edi,-0x78(%ebp)
mov    -0x7c(%ebp),%eax
jne    804d640 <fchmod@plt+0x3490>
cmp    -0xe0(%ebp),%eax
jne    804d640 <fchmod@plt+0x3490>
cmpb   $0x0,0x17(%ebx)
je     804dbec <fchmod@plt+0x3a3c>
xor    %edi,%edi
mov    $0x1,%esi
jmp    804d644 <fchmod@plt+0x3494>
cmpb   $0x0,0x1(%eax)
je     804cf36 <fchmod@plt+0x2d86>
jmp    804cf10 <fchmod@plt+0x2d60>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x4(%ebx)
jne    804e384 <fchmod@plt+0x41d4>
mov    -0x190(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804d74d <fchmod@plt+0x359d>
movb   $0x0,-0x210(%ebp)
xor    %edi,%edi
movl   $0x0,-0x1f8(%ebp)
00
jmp    804ccb3 <fchmod@plt+0x2b03>
cmpl   $0x1000,-0x1e4(%ebp)
00
je     804eea0 <fchmod@plt+0x4cf0>
mov    -0x20c(%ebp),%eax
and    $0xb000,%eax
cmp    $0x2000,%eax
je     804e6da <fchmod@plt+0x452a>
cmpl   $0xc000,-0x1e4(%ebp)
00
je     804e6da <fchmod@plt+0x452a>
cmpl   $0xa000,-0x1e4(%ebp)
00
je     804ef38 <fchmod@plt+0x4d88>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ef34,0x4(%esp)
mov    %eax,%edi
jmp    804dfce <fchmod@plt+0x3e1e>
mov    -0x1e0(%ebp),%edx
xor    %ecx,%ecx
mov    -0x1dc(%ebp),%eax
movl   $0x0,(%esp)
call   804c470 <fchmod@plt+0x22c0>
test   %al,%al
je     804d4d1 <fchmod@plt+0x3321>
xor    %edi,%edi
xor    %ecx,%ecx
mov    $0x1,%esi
movb   $0x0,-0x218(%ebp)
jmp    804cf71 <fchmod@plt+0x2dc1>
mov    -0x190(%ebp),%eax
mov    $0x1,%edx
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804d70a <fchmod@plt+0x355a>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804d70a <fchmod@plt+0x355a>
test   %esi,%esi
je     804f837 <fchmod@plt+0x5687>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1f8(%ebp)
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
mov    -0x1f8(%ebp),%edx
cmpb   $0x2e,(%eax)
je     804ebd8 <fchmod@plt+0x4a28>
test   %dl,%dl
jne    804e4b4 <fchmod@plt+0x4304>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804e384 <fchmod@plt+0x41d4>
mov    -0x1e0(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8051a30 <fchmod@plt+0x7880>
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
jne    804f152 <fchmod@plt+0x4fa2>
cmpb   $0x0,0x18(%ebx)
movl   $0x5,0x8(%esp)
je     804f036 <fchmod@plt+0x4e86>
movl   $0x805f144,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%edi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
mov    %edi,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049c50 <error@plt>
mov    %esi,(%esp)
call   8049a60 <free@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
call   8049e80 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
cmp    $0x3d,%eax
je     804e5ca <fchmod@plt+0x441a>
cmp    $0x5f,%eax
je     804e5ca <fchmod@plt+0x441a>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f2e0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x218(%ebp)
call   8049b00 <dcgettext@plt>
mov    -0x218(%ebp),%edx
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x24(%ebx)
je     804ced2 <fchmod@plt+0x2d22>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%edi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f308,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1e4(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,-0x1dc(%ebp)
call   8049e80 <__errno_location@plt>
mov    -0x1e4(%ebp),%ecx
mov    -0x1dc(%ebp),%edx
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x3321>
call   8049e80 <__errno_location@plt>
mov    %eax,%edi
lea    0x0(%esi,%eiz,1),%esi
jmp    804e57a <fchmod@plt+0x43ca>
mov    %eax,(%esp)
call   8049b40 <unlink@plt>
movb   $0x1,-0x210(%ebp)
test   %eax,%eax
je     804ce44 <fchmod@plt+0x2c94>
cmpl   $0x2,(%edi)
je     804ce44 <fchmod@plt+0x2c94>
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f270,0x4(%esp)
mov    %eax,%esi
jmp    804e08c <fchmod@plt+0x3edc>
mov    -0x180(%ebp),%eax
mov    -0x17c(%ebp),%edx
movl   $0x1,(%esp)
mov    %eax,-0xe0(%ebp)
lea    -0xe0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x21c(%ebp),%eax
mov    %edx,-0xdc(%ebp)
not    %eax
and    -0x20c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   804a0f0 <__xmknod@plt>
test   %eax,%eax
je     804e429 <fchmod@plt+0x4279>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eef9,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3ff0>
cmpb   $0x0,0x18(%ebx)
je     804e765 <fchmod@plt+0x45b5>
mov    (%ebx),%eax
test   %eax,%eax
jne    804d6a5 <fchmod@plt+0x34f5>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f07c,0x4(%esp)
mov    %eax,%ebx
jmp    804dc2c <fchmod@plt+0x3a7c>
lea    -0x140(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    804f00d <fchmod@plt+0x4e5d>
mov    -0x130(%ebp),%edi
mov    %edi,%eax
and    $0x1c0,%eax
cmp    $0x1c0,%eax
je     804ee17 <fchmod@plt+0x4c67>
mov    %edi,%eax
or     $0x1c0,%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a0b0 <chmod@plt>
mov    %edi,-0x254(%ebp)
movb   $0x1,-0x218(%ebp)
test   %eax,%eax
jne    804f88d <fchmod@plt+0x56dd>
mov    -0x1fc(%ebp),%eax
cmpb   $0x0,(%eax)
je     804f1db <fchmod@plt+0x502b>
cmpb   $0x0,0x2c(%ebx)
jne    804f280 <fchmod@plt+0x50d0>
cmpb   $0x0,0x1b(%ebx)
je     804e936 <fchmod@plt+0x4786>
mov    -0x208(%ebp),%eax
or     -0x204(%ebp),%eax
je     804e936 <fchmod@plt+0x4786>
mov    -0x208(%ebp),%edx
mov    -0x204(%ebp),%eax
xor    -0x19c(%ebp),%edx
xor    -0x1a0(%ebp),%eax
or     %eax,%edx
je     804e936 <fchmod@plt+0x4786>
xor    %edi,%edi
xor    %ecx,%ecx
mov    $0x1,%esi
jmp    804cf71 <fchmod@plt+0x2dc1>
mov    -0x20c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8051750 <fchmod@plt+0x75a0>
mov    %esi,%edx
test   %eax,%eax
je     804d249 <fchmod@plt+0x3099>
cmpb   $0x0,0x22(%ebx)
je     804d249 <fchmod@plt+0x3099>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
call   80561a0 <fchmod@plt+0xbff0>
test   %eax,%eax
setne  %al
jmp    804d03c <fchmod@plt+0x2e8c>
cmpb   $0x0,0x18(%ebx)
je     804e8e7 <fchmod@plt+0x4737>
mov    (%ebx),%esi
test   %esi,%esi
jne    804e43e <fchmod@plt+0x428e>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f0dc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
mov    (%ebx),%eax
mov    %eax,-0x7c(%ebp)
mov    0x4(%ebx),%eax
mov    %eax,-0x78(%ebp)
mov    0x8(%ebx),%eax
mov    %eax,-0x74(%ebp)
mov    0xc(%ebx),%eax
mov    %eax,-0x70(%ebp)
mov    0x10(%ebx),%eax
mov    %eax,-0x6c(%ebp)
mov    0x14(%ebx),%eax
mov    %eax,-0x68(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,-0x64(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,-0x60(%ebp)
mov    0x20(%ebx),%eax
mov    %eax,-0x5c(%ebp)
mov    0x24(%ebx),%eax
mov    %eax,-0x58(%ebp)
mov    0x28(%ebx),%eax
mov    %eax,-0x54(%ebp)
mov    0x2c(%ebx),%eax
mov    %eax,-0x50(%ebp)
mov    0x30(%ebx),%eax
mov    %eax,-0x4c(%ebp)
mov    0x34(%ebx),%eax
mov    %eax,-0x48(%ebp)
mov    0x38(%ebx),%eax
mov    %eax,-0x44(%ebp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   80552e0 <fchmod@plt+0xb130>
test   %eax,%eax
mov    %eax,-0x208(%ebp)
je     804fc6e <fchmod@plt+0x5abe>
cmpl   $0x3,0x4(%ebx)
je     804f051 <fchmod@plt+0x4ea1>
mov    -0x208(%ebp),%eax
cmpb   $0x0,(%eax)
je     804fcc2 <fchmod@plt+0x5b12>
movzbl -0x210(%ebp),%edi
mov    $0x1,%esi
movb   $0x0,-0x1f8(%ebp)
mov    %ebx,-0x234(%ebp)
mov    %edi,-0x204(%ebp)
mov    %eax,%edi
lea    -0xe0(%ebp),%eax
mov    %eax,-0x220(%ebp)
lea    -0x7c(%ebp),%eax
mov    %eax,-0x230(%ebp)
lea    -0x1c0(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
mov    %esi,%eax
mov    %al,-0x200(%ebp)
jmp    804ea32 <fchmod@plt+0x4882>
movzbl -0xe0(%ebp),%eax
mov    %edi,(%esp)
or     %al,-0x1f8(%ebp)
call   8049db0 <strlen@plt>
lea    0x1(%edi,%eax,1),%edi
cmpb   $0x0,(%edi)
je     804eb05 <fchmod@plt+0x4955>
mov    -0x1dc(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80527c0 <fchmod@plt+0x8610>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%ebx
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80527c0 <fchmod@plt+0x8610>
mov    -0x19c(%ebp),%edx
mov    -0x204(%ebp),%ecx
mov    %eax,%esi
mov    -0x1fc(%ebp),%eax
movzbl (%eax),%eax
mov    %edx,0x4(%esp)
mov    %esi,%edx
movl   $0x0,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %al,-0xe0(%ebp)
mov    -0x1f0(%ebp),%eax
mov    %eax,0x18(%esp)
mov    -0x220(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x230(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x228(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1a0(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   804cb20 <fchmod@plt+0x2970>
mov    -0x1e8(%ebp),%ecx
and    %al,-0x200(%ebp)
movzbl -0x1c0(%ebp),%eax
or     %al,(%ecx)
mov    %esi,(%esp)
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
cmpb   $0x0,-0x1c0(%ebp)
je     804ea10 <fchmod@plt+0x4860>
movzbl -0x200(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    -0x208(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x1fc(%ebp),%edi
movzbl -0x1f8(%ebp),%eax
mov    %al,(%edi)
xor    %edi,%edi
xor    %ecx,%ecx
jmp    804cf71 <fchmod@plt+0x2dc1>
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %ecx,-0x1e8(%ebp)
mov    %eax,0x4(%esp)
mov    0x34(%ebx),%eax
mov    %eax,(%esp)
call   8052390 <fchmod@plt+0x81e0>
mov    -0x1e8(%ebp),%ecx
jmp    804cfbe <fchmod@plt+0x2e0e>
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054fd0 <fchmod@plt+0xae20>
xor    $0x1,%eax
test   %al,%al
je     804dbec <fchmod@plt+0x3a3c>
xor    %esi,%esi
xor    %edi,%edi
jmp    804d644 <fchmod@plt+0x3494>
xchg   %ax,%ax
mov    -0x1e0(%ebp),%eax
lea    -0x130(%ebp),%edx
call   804c680 <fchmod@plt+0x24d0>
call   8057110 <fchmod@plt+0xcf60>
test   %al,%al
jne    804d679 <fchmod@plt+0x34c9>
xchg   %ax,%ax
jmp    804d5f8 <fchmod@plt+0x3448>
mov    %edi,%ecx
mov    -0x1e0(%ebp),%edx
test   %cl,%cl
mov    -0x1f8(%ebp),%ecx
cmove  %eax,%ecx
mov    -0x1dc(%ebp),%eax
call   804c3b0 <fchmod@plt+0x2200>
jmp    804d5be <fchmod@plt+0x340e>
xor    %ecx,%ecx
cmpb   $0x2e,0x1(%eax)
sete   %cl
movzbl 0x1(%eax,%ecx,1),%eax
cmp    $0x2f,%al
je     804d712 <fchmod@plt+0x3562>
test   %al,%al
je     804d712 <fchmod@plt+0x3562>
jmp    804e49a <fchmod@plt+0x42ea>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee9a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1e8(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,-0x1e4(%ebp)
call   8049e80 <__errno_location@plt>
mov    -0x1e8(%ebp),%ecx
mov    -0x1e4(%ebp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x22(%ebx)
je     804d044 <fchmod@plt+0x2e94>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
cmpb   $0x0,0x2c(%ebx)
jne    804f7df <fchmod@plt+0x562f>
movb   $0x1,-0x210(%ebp)
xor    %edi,%edi
movl   $0x0,-0x1f8(%ebp)
00
jmp    804ccb3 <fchmod@plt+0x2b03>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee2c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
xor    %edi,%edi
movl   $0x0,(%esp)
call   8049c50 <error@plt>
movl   $0x0,-0x200(%ebp)
00
jmp    804dd8f <fchmod@plt+0x3bdf>
movb   $0x0,-0x218(%ebp)
movl   $0x0,-0x21c(%ebp)
00
jmp    804e831 <fchmod@plt+0x4681>
mov    -0x1e0(%ebp),%ecx
mov    $0xffffffff,%edx
mov    -0x1dc(%ebp),%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
call   804c250 <fchmod@plt+0x20a0>
test   %al,%al
jne    804d0cc <fchmod@plt+0x2f1c>
cmpb   $0x0,0x26(%ebx)
je     804d0cc <fchmod@plt+0x2f1c>
xor    %edx,%edx
jmp    804d249 <fchmod@plt+0x3099>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
jne    804cf36 <fchmod@plt+0x2d86>
mov    -0x20(%ebp),%ecx
cmp    %ecx,-0x84(%ebp)
mov    -0x88(%ebp),%eax
je     804fc42 <fchmod@plt+0x5a92>
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f450,0x4(%esp)
mov    %eax,%edi
jmp    804dfce <fchmod@plt+0x3e1e>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee11,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3ff0>
mov    -0xd0(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804dba0 <fchmod@plt+0x39f0>
cmpb   $0x0,0x15(%ebx)
je     804dba0 <fchmod@plt+0x39f0>
jmp    804d640 <fchmod@plt+0x3490>
mov    -0x7c(%ebp),%edx
mov    -0x78(%ebp),%eax
xor    -0xe0(%ebp),%edx
xor    -0xdc(%ebp),%eax
or     %eax,%edx
sete   %cl
jmp    804db81 <fchmod@plt+0x39d1>
movb   $0x0,-0x218(%ebp)
jmp    804e818 <fchmod@plt+0x4668>
mov    0x8065724,%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x8065728,%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f240,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
mov    -0x1e8(%ebp),%eax
mov    $0x1,%edx
movb   $0x1,(%eax)
jmp    804d249 <fchmod@plt+0x3099>
mov    -0x21c(%ebp),%edi
lea    -0x1c0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x1,(%esp)
movl   $0x0,-0x1c0(%ebp)
00
not    %edi
and    -0x20c(%ebp),%edi
mov    %eax,0x4(%esp)
movl   $0x0,-0x1bc(%ebp)
00
mov    %edi,0x8(%esp)
call   804a0f0 <__xmknod@plt>
test   %eax,%eax
je     804e429 <fchmod@plt+0x4279>
mov    %edi,%eax
and    $0xef,%ah
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   804a130 <mkfifo@plt>
test   %eax,%eax
je     804e429 <fchmod@plt+0x4279>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eee3,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3ff0>
xchg   %ax,%ax
mov    -0x174(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8051910 <fchmod@plt+0x7760>
test   %eax,%eax
mov    %eax,-0x1e8(%ebp)
je     804fe85 <fchmod@plt+0x5cd5>
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049fb0 <symlink@plt>
test   %eax,%eax
je     804fb7d <fchmod@plt+0x59cd>
call   8049e80 <__errno_location@plt>
cmpb   $0x0,0x2b(%ebx)
mov    (%eax),%eax
mov    %eax,-0x1f0(%ebp)
je     804efb0 <fchmod@plt+0x4e00>
cmpb   $0x0,-0x210(%ebp)
jne    804efb0 <fchmod@plt+0x4e00>
mov    -0x130(%ebp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     805027c <fchmod@plt+0x60cc>
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f40c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    -0x1f0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804d4d1 <fchmod@plt+0x3321>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed63,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3ff0>
movl   $0x805f178,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
jmp    804e50a <fchmod@plt+0x435a>
movl   $0x2,-0x78(%ebp)
jmp    804e9b5 <fchmod@plt+0x4805>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eed0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1dc(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1dc(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x200(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    804d4d1 <fchmod@plt+0x3321>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f0b0,0x4(%esp)
mov    %eax,%ebx
jmp    804dc2c <fchmod@plt+0x3a7c>
mov    -0x148(%ebp),%eax
mov    -0x144(%ebp),%edi
mov    %eax,-0x230(%ebp)
mov    -0x1a0(%ebp),%eax
mov    %eax,-0x234(%ebp)
mov    -0x19c(%ebp),%eax
mov    %eax,-0x218(%ebp)
jmp    804e0f5 <fchmod@plt+0x3f45>
mov    -0x124(%ebp),%eax
cmp    %eax,-0x184(%ebp)
jne    804d071 <fchmod@plt+0x2ec1>
jmp    804d0c2 <fchmod@plt+0x2f12>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %esi,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    0x1e(%ecx),%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x2f(%esp),%eax
and    $0xfffffff0,%eax
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,(%esp)
mov    %eax,%edi
mov    %eax,-0x1f8(%ebp)
call   8049a60 <free@plt>
mov    -0x1e0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <rename@plt>
test   %eax,%eax
je     804f8b6 <fchmod@plt+0x5706>
call   8049e80 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%esi
je     804ec7c <fchmod@plt+0x4acc>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eda4,0x4(%esp)
mov    %eax,%ebx
jmp    804d430 <fchmod@plt+0x3280>
mov    -0x140(%ebp),%eax
mov    -0x13c(%ebp),%edx
mov    %eax,0xc(%esp)
mov    -0xe8(%ebp),%eax
mov    %edx,0x10(%esp)
mov    -0xe4(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8050e20 <fchmod@plt+0x6c70>
mov    -0x1fc(%ebp),%eax
movb   $0x1,(%eax)
jmp    804e827 <fchmod@plt+0x4677>
call   8049b20 <__stack_chk_fail@plt>
cmpl   $0x1,0x14(%edx)
jbe    804e2a2 <fchmod@plt+0x40f2>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x210(%ebp)
mov    %eax,(%esp)
call   8049ff0 <canonicalize_file_name@plt>
mov    -0x210(%ebp),%edx
test   %eax,%eax
mov    %eax,%edi
je     804e2a2 <fchmod@plt+0x40f2>
mov    -0x1e0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8054fd0 <fchmod@plt+0xae20>
mov    %edi,(%esp)
xor    $0x1,%eax
mov    %eax,-0x210(%ebp)
call   8049a60 <free@plt>
mov    -0x210(%ebp),%eax
jmp    804eb7d <fchmod@plt+0x49cd>
mov    -0x1e0(%ebp),%edx
xor    %ecx,%ecx
mov    -0x1dc(%ebp),%eax
call   804c3b0 <fchmod@plt+0x2200>
jmp    804e831 <fchmod@plt+0x4681>
mov    0x10(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   80514a0 <fchmod@plt+0x72f0>
test   %eax,%eax
jne    804d1a0 <fchmod@plt+0x2ff0>
mov    %esi,%edx
jmp    804d249 <fchmod@plt+0x3099>
mov    -0x1f0(%ebp),%eax
and    $0x1ff,%eax
cmpb   $0x0,-0x210(%ebp)
mov    %eax,-0x248(%ebp)
jne    804f941 <fchmod@plt+0x5791>
cmpb   $0x1,0x21(%ebx)
sbb    %eax,%eax
and    $0xfffffe00,%eax
add    $0x201,%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8052350 <fchmod@plt+0x81a0>
mov    %eax,-0x1fc(%ebp)
call   8049e80 <__errno_location@plt>
cmpb   $0x0,0x23(%ebx)
mov    %eax,-0x204(%ebp)
mov    (%eax),%eax
mov    %eax,-0x1f0(%ebp)
jne    804fe0c <fchmod@plt+0x5c5c>
cmpl   $0x0,-0x1fc(%ebp)
js     804f8db <fchmod@plt+0x572b>
movl   $0x0,-0x238(%ebp)
00
cmpl   $0x0,-0x1fc(%ebp)
js     804fa56 <fchmod@plt+0x58a6>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1fc(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
jne    804fedb <fchmod@plt+0x5d2b>
cmpb   $0x0,-0x200(%ebp)
je     804fcd3 <fchmod@plt+0x5b23>
cmpl   $0x0,0x30(%ebx)
jne    80504b9 <fchmod@plt+0x6309>
call   8049e10 <getpagesize@plt>
mov    $0x4,%ecx
mov    %eax,%edi
jmp    804f39c <fchmod@plt+0x51ec>
lea    0x0(%esi),%esi
mov    %ecx,%eax
mov    %edx,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    804f398 <fchmod@plt+0x51e8>
xor    %edx,%edx
mov    $0x4,%eax
div    %ecx
movl   $0x2,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
imul   %eax,%edi
lea    0x3(%edi),%eax
mov    %eax,-0x228(%ebp)
mov    -0x48(%ebp),%eax
mov    %edi,-0x218(%ebp)
mov    %eax,%edi
sub    $0x10000,%eax
cmp    $0x1fff0001,%eax
mov    $0x10000,%eax
cmovb  %edi,%eax
mov    %eax,-0x204(%ebp)
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   80522f0 <fchmod@plt+0x8140>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8050886 <fchmod@plt+0x66d6>
mov    -0xd0(%ebp),%eax
movb   $0x0,-0x1f0(%ebp)
mov    %eax,-0x230(%ebp)
mov    -0xac(%ebp),%ecx
mov    $0x7ffffffc,%edi
mov    $0x10000,%eax
sub    -0x218(%ebp),%edi
lea    -0x10000(%ecx),%edx
cmp    $0x1fff0000,%edx
cmovbe %ecx,%eax
mov    -0x204(%ebp),%ecx
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8051e00 <fchmod@plt+0x7c50>
mov    %eax,-0x200(%ebp)
mov    -0x230(%ebp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8050855 <fchmod@plt+0x66a5>
mov    -0x204(%ebp),%ecx
xor    %edx,%edx
mov    -0x200(%ebp),%eax
lea    -0x1(%ecx,%eax,1),%ecx
mov    %ecx,%eax
divl   -0x200(%ebp)
sub    %edx,%ecx
cmp    %ecx,%edi
mov    %ecx,-0x204(%ebp)
jb     804f4b9 <fchmod@plt+0x5309>
test   %ecx,%ecx
jne    804f4c5 <fchmod@plt+0x5315>
mov    -0x200(%ebp),%eax
mov    %eax,-0x204(%ebp)
movb   $0x0,-0x23d(%ebp)
mov    -0x228(%ebp),%eax
add    -0x204(%ebp),%eax
mov    %eax,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    -0x218(%ebp),%edi
xor    %edx,%edx
lea    -0x1(%eax,%edi,1),%ecx
mov    %eax,-0x200(%ebp)
mov    %ecx,%eax
div    %edi
sub    %edx,%ecx
cmpb   $0x0,-0x1f0(%ebp)
mov    %ecx,-0x244(%ebp)
je     80508c1 <fchmod@plt+0x6711>
mov    -0x6c(%ebp),%eax
movl   $0x1,-0x23c(%ebp)
00
and    $0xf000,%eax
cmp    $0x8000,%eax
je     8050af4 <fchmod@plt+0x6944>
mov    -0xb4(%ebp),%eax
mov    -0xb0(%ebp),%edx
mov    %eax,-0x228(%ebp)
lea    -0x1c0(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
mov    %eax,0x4(%esp)
mov    -0x1e8(%ebp),%eax
mov    %edx,-0x224(%ebp)
mov    %eax,(%esp)
call   8050f30 <fchmod@plt+0x6d80>
xor    %eax,%eax
xor    %edx,%edx
mov    %esi,-0x220(%ebp)
mov    %edx,%edi
mov    %eax,%esi
movb   $0x1,-0x1c9(%ebp)
movl   $0x0,-0x230(%ebp)
00
movl   $0x0,-0x22c(%ebp)
00
movl   $0x0,-0x218(%ebp)
00
movl   $0x0,-0x214(%ebp)
00
mov    %ebx,-0x234(%ebp)
mov    -0x1f0(%ebp),%eax
mov    %eax,(%esp)
call   8050f70 <fchmod@plt+0x6dc0>
test   %al,%al
je     8050a16 <fchmod@plt+0x6866>
mov    -0x1b0(%ebp),%ecx
test   %ecx,%ecx
je     804ffca <fchmod@plt+0x5e1a>
mov    -0x230(%ebp),%eax
xor    %ebx,%ebx
mov    -0x22c(%ebp),%edx
mov    -0x218(%ebp),%esi
mov    -0x214(%ebp),%edi
mov    %eax,-0x250(%ebp)
mov    %edx,-0x24c(%ebp)
jmp    804f79d <fchmod@plt+0x55ed>
mov    -0x1a8(%ebp),%eax
lea    (%ebx,%ebx,4),%ecx
lea    (%eax,%ecx,4),%ecx
mov    (%ecx),%eax
mov    0x4(%ecx),%edx
mov    %eax,-0x218(%ebp)
mov    0x8(%ecx),%eax
mov    %edx,-0x214(%ebp)
mov    0xc(%ecx),%edx
mov    %eax,-0x230(%ebp)
mov    %edx,-0x22c(%ebp)
mov    -0x218(%ebp),%eax
mov    -0x214(%ebp),%edx
movb   $0x0,-0x1c9(%ebp)
sub    %esi,%eax
sbb    %edi,%edx
mov    %eax,%esi
mov    %edx,%edi
sub    -0x250(%ebp),%esi
sbb    -0x24c(%ebp),%edi
mov    %edi,%eax
or     %esi,%eax
je     804f6c4 <fchmod@plt+0x5514>
mov    -0x218(%ebp),%eax
mov    -0x214(%ebp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    -0x1e8(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a010 <lseek64@plt>
test   %edx,%edx
js     80509a9 <fchmod@plt+0x67f9>
cmpl   $0x1,-0x23c(%ebp)
je     804fa7f <fchmod@plt+0x58cf>
mov    -0x218(%ebp),%eax
mov    -0x214(%ebp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804a010 <lseek64@plt>
test   %edx,%edx
js     8050974 <fchmod@plt+0x67c4>
movb   $0x1,-0x1c9(%ebp)
lea    -0x1c9(%ebp),%eax
mov    -0x22c(%ebp),%edx
mov    %eax,0x1c(%esp)
lea    -0x1c8(%ebp),%eax
mov    -0x244(%ebp),%ecx
mov    %eax,0x18(%esp)
mov    -0x230(%ebp),%eax
mov    %edx,0x14(%esp)
mov    -0x1fc(%ebp),%edx
mov    %eax,0x10(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x8(%esp)
xor    %eax,%eax
cmpl   $0x3,-0x23c(%ebp)
sete   %al
mov    %eax,0x4(%esp)
mov    -0x204(%ebp),%eax
mov    %eax,(%esp)
mov    -0x1e8(%ebp),%eax
call   804bfe0 <fchmod@plt+0x1e30>
test   %al,%al
je     8050ae3 <fchmod@plt+0x6933>
mov    -0x218(%ebp),%esi
mov    -0x214(%ebp),%edi
mov    -0x224(%ebp),%edx
mov    -0x228(%ebp),%eax
add    -0x1c8(%ebp),%esi
adc    -0x1c4(%ebp),%edi
xor    %esi,%eax
xor    %edi,%edx
or     %eax,%edx
je     804ffc3 <fchmod@plt+0x5e13>
mov    -0x1b0(%ebp),%ecx
add    $0x1,%ebx
cmp    %ebx,%ecx
jbe    804ffca <fchmod@plt+0x5e1a>
mov    -0x230(%ebp),%eax
mov    -0x22c(%ebp),%edx
mov    -0x218(%ebp),%esi
mov    -0x214(%ebp),%edi
mov    %eax,-0x250(%ebp)
mov    %edx,-0x24c(%ebp)
cmp    %ebx,%ecx
ja     804f5f0 <fchmod@plt+0x5440>
mov    -0x1a8(%ebp),%eax
sub    $0x1,%ebx
lea    (%ebx,%ebx,4),%ecx
movl   $0x0,-0x230(%ebp)
00
movl   $0x0,-0x22c(%ebp)
00
lea    (%eax,%ecx,4),%ecx
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%edx
add    %eax,-0x218(%ebp)
adc    %edx,-0x214(%ebp)
jmp    804f61f <fchmod@plt+0x546f>
mov    -0x1e0(%ebp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9a7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movb   $0x1,-0x210(%ebp)
movl   $0x0,-0x1f8(%ebp)
00
jmp    804ccb3 <fchmod@plt+0x2b03>
mov    -0x1e0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,%esi
mov    -0x1dc(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f110,0x4(%esp)
mov    %eax,%ebx
jmp    804dc2c <fchmod@plt+0x3a7c>
call   804cae0 <fchmod@plt+0x2930>
not    %eax
and    $0x1ff,%eax
jmp    804f29b <fchmod@plt+0x50eb>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ede5,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3ff0>
movb   $0x1,-0x210(%ebp)
mov    $0x1,%edi
jmp    804ccb3 <fchmod@plt+0x2b03>
mov    (%edx),%ecx
mov    0x4(%edx),%eax
xor    0x4(%esi),%eax
xor    (%esi),%ecx
or     %eax,%ecx
sete   %al
jmp    804eb7d <fchmod@plt+0x49cd>
cmpb   $0x0,0x16(%ebx)
je     804f334 <fchmod@plt+0x5184>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8049b40 <unlink@plt>
test   %eax,%eax
jne    8050816 <fchmod@plt+0x6666>
cmpb   $0x0,0x2c(%ebx)
je     804f941 <fchmod@plt+0x5791>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9a7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    -0x21c(%ebp),%eax
mov    %eax,-0x238(%ebp)
mov    -0x238(%ebp),%edi
mov    -0x1e0(%ebp),%eax
movl   $0xc1,0x4(%esp)
not    %edi
and    -0x248(%ebp),%edi
mov    %eax,(%esp)
mov    %edi,0x8(%esp)
call   8052350 <fchmod@plt+0x81a0>
mov    %eax,-0x1fc(%ebp)
call   8049e80 <__errno_location@plt>
mov    %eax,-0x204(%ebp)
mov    (%eax),%eax
cmp    $0x11,%eax
mov    %eax,-0x1f0(%ebp)
jne    805020a <fchmod@plt+0x605a>
mov    -0x1fc(%ebp),%eax
shr    $0x1f,%eax
test   %al,%al
je     805020a <fchmod@plt+0x605a>
cmpb   $0x0,0x18(%ebx)
je     8050194 <fchmod@plt+0x5fe4>
movb   $0x1,-0x210(%ebp)
movl   $0x11,-0x1f0(%ebp)
00
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee3c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    -0x1f0(%ebp),%eax
jmp    804ecdb <fchmod@plt+0x4b2b>
mov    %edx,-0x1dc(%ebp)
call   804cae0 <fchmod@plt+0x2930>
not    %eax
and    %eax,-0x21c(%ebp)
je     804d104 <fchmod@plt+0x2f54>
cmpb   $0x0,-0x218(%ebp)
jne    804d104 <fchmod@plt+0x2f54>
cmpb   $0x0,-0x210(%ebp)
jne    804ff43 <fchmod@plt+0x5d93>
mov    -0x130(%ebp),%eax
mov    %eax,-0x254(%ebp)
not    %eax
test   %eax,-0x21c(%ebp)
jne    804d113 <fchmod@plt+0x2f63>
mov    %esi,%edx
jmp    804d249 <fchmod@plt+0x3099>
cmpl   $0x2,-0x1f0(%ebp)
jne    804f9c3 <fchmod@plt+0x5813>
cmpb   $0x0,-0x210(%ebp)
jne    804f9c3 <fchmod@plt+0x5813>
cmpb   $0x0,0x18(%ebx)
je     804f94d <fchmod@plt+0x579d>
jmp    804f9c3 <fchmod@plt+0x5813>
mov    -0x1fc(%ebp),%eax
mov    %esi,%edx
mov    %edi,%ecx
call   804bf00 <fchmod@plt+0x1d50>
test   %al,%al
jne    804f6c4 <fchmod@plt+0x5514>
mov    -0x1e0(%ebp),%eax
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee75,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1a8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
xor    %edi,%edi
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
test   %eax,%eax
jns    804dd8f <fchmod@plt+0x3bdf>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eed0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
xor    %edi,%edi
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804dd8f <fchmod@plt+0x3bdf>
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
cmpb   $0x0,0x23(%ebx)
je     804fb96 <fchmod@plt+0x59e6>
call   804c620 <fchmod@plt+0x2470>
cmpb   $0x0,0x1c(%ebx)
je     804cf5e <fchmod@plt+0x2dae>
mov    -0x184(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x188(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8049fa0 <lchown@plt>
test   %eax,%eax
je     804cf5e <fchmod@plt+0x2dae>
mov    %ebx,(%esp)
call   804c890 <fchmod@plt+0x26e0>
test   %al,%al
jne    804cf5e <fchmod@plt+0x2dae>
movl   $0x5,0x8(%esp)
movl   $0x805f024,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1e0(%ebp),%ecx
mov    %ecx,0xc(%esp)
jmp    804e1bd <fchmod@plt+0x400d>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1dc(%ebp),%eax
movl   $0x3,(%esp)
mov    %edx,-0x210(%ebp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
mov    -0x210(%ebp),%edx
test   %eax,%eax
je     804e2e2 <fchmod@plt+0x4132>
jmp    804d640 <fchmod@plt+0x3490>
cmp    -0x24(%ebp),%eax
jne    804ed80 <fchmod@plt+0x4bd0>
mov    -0x78(%ebp),%ecx
cmp    %ecx,-0xdc(%ebp)
mov    -0xe0(%ebp),%eax
jne    804ed80 <fchmod@plt+0x4bd0>
cmp    -0x7c(%ebp),%eax
jne    804ed80 <fchmod@plt+0x4bd0>
jmp    804cf36 <fchmod@plt+0x2d86>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee00,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
xor    %esi,%esi
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804eb2f <fchmod@plt+0x497f>
movb   $0x0,-0x1f8(%ebp)
mov    $0x1,%esi
jmp    804eb12 <fchmod@plt+0x4962>
movl   $0x0,-0x200(%ebp)
00
cmpb   $0x0,0x1e(%ebx)
jne    80500d4 <fchmod@plt+0x5f24>
cmpb   $0x0,0x1c(%ebx)
je     804fd50 <fchmod@plt+0x5ba0>
mov    -0x64(%ebp),%eax
cmp    %eax,-0x188(%ebp)
jne    804fd03 <fchmod@plt+0x5b53>
mov    -0x60(%ebp),%eax
cmp    %eax,-0x184(%ebp)
je     804fd50 <fchmod@plt+0x5ba0>
lea    -0x6c(%ebp),%eax
mov    -0x1fc(%ebp),%ecx
mov    %eax,0x8(%esp)
movzbl -0x210(%ebp),%eax
mov    -0x1e0(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1f4(%ebp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   804c8c0 <fchmod@plt+0x2710>
cmp    $0xffffffff,%eax
je     804fb07 <fchmod@plt+0x5957>
mov    -0x208(%ebp),%edi
mov    %edi,%edx
and    $0xf1,%dh
test   %eax,%eax
cmovne %edi,%edx
mov    %edx,-0x208(%ebp)
cmpb   $0x0,0x25(%ebx)
mov    $0x1,%edi
je     804fdad <fchmod@plt+0x5bfd>
testb  $0x80,-0x6c(%ebp)
je     805068b <fchmod@plt+0x64db>
movb   $0x0,-0x1f0(%ebp)
mov    -0x1fc(%ebp),%eax
mov    $0x1,%edi
mov    -0x1e0(%ebp),%ecx
mov    -0x1e8(%ebp),%edx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    -0x1dc(%ebp),%eax
call   804c250 <fchmod@plt+0x20a0>
test   %al,%al
jne    804fda0 <fchmod@plt+0x5bf0>
movzbl 0x26(%ebx),%edi
xor    $0x1,%edi
cmpb   $0x0,-0x1f0(%ebp)
jne    8050a71 <fchmod@plt+0x68c1>
cmpb   $0x0,0x1d(%ebx)
jne    804fdbd <fchmod@plt+0x5c0d>
cmpb   $0x0,0x18(%ebx)
je     8050345 <fchmod@plt+0x6195>
mov    -0x208(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8051750 <fchmod@plt+0x75a0>
test   %eax,%eax
je     804fb09 <fchmod@plt+0x5959>
cmpb   $0x0,0x22(%ebx)
mov    $0x0,%eax
cmovne %eax,%edi
jmp    804fb09 <fchmod@plt+0x5959>
cmpl   $0x0,-0x1fc(%ebp)
js     804f8db <fchmod@plt+0x572b>
cmpb   $0x0,0x21(%ebx)
jne    805030b <fchmod@plt+0x615b>
lea    -0x7c(%ebp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
movl   $0x0,-0x7c(%ebp)
call   804a090 <getfscreatecon@plt>
mov    $0x1,%ecx
test   %eax,%eax
js     8050744 <fchmod@plt+0x6594>
mov    -0x7c(%ebp),%eax
mov    %ecx,-0x218(%ebp)
test   %eax,%eax
je     804f334 <fchmod@plt+0x5184>
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   8049f50 <fsetfilecon@plt>
mov    -0x218(%ebp),%ecx
test   %eax,%eax
js     8050408 <fchmod@plt+0x6258>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a000 <freecon@plt>
jmp    804f334 <fchmod@plt+0x5184>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ef17,0x4(%esp)
mov    %eax,-0x1dc(%ebp)
jmp    804e1a0 <fchmod@plt+0x3ff0>
lea    -0xe0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
je     804e304 <fchmod@plt+0x4154>
jmp    804d640 <fchmod@plt+0x3490>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee2c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
xor    %edi,%edi
movl   $0x0,-0x200(%ebp)
00
jmp    804fb09 <fchmod@plt+0x5959>
lea    -0x140(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
je     804fa35 <fchmod@plt+0x5885>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ed63,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x1dc(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3099>
movb   $0x1,-0x1ab(%ebp)
mov    -0x1a8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
cmpb   $0x0,-0x1ab(%ebp)
movl   $0x0,-0x1a8(%ebp)
00
movl   $0x0,-0x1b0(%ebp)
00
je     804f5a1 <fchmod@plt+0x53f1>
mov    %esi,-0x218(%ebp)
mov    -0x234(%ebp),%ebx
mov    -0x220(%ebp),%esi
mov    %edi,-0x214(%ebp)
mov    -0x214(%ebp),%eax
cmp    %eax,-0x224(%ebp)
jg     805003c <fchmod@plt+0x5e8c>
jl     805002f <fchmod@plt+0x5e7f>
mov    -0x218(%ebp),%eax
cmp    %eax,-0x228(%ebp)
ja     805003c <fchmod@plt+0x5e8c>
cmpb   $0x0,-0x1c9(%ebp)
je     804fcdd <fchmod@plt+0x5b2d>
cmpl   $0x1,-0x23c(%ebp)
je     8050a95 <fchmod@plt+0x68e5>
mov    -0x228(%ebp),%eax
mov    -0x224(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049f10 <ftruncate64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
je     804fcdd <fchmod@plt+0x5b2d>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee86,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804fb07 <fchmod@plt+0x5957>
mov    -0x160(%ebp),%eax
mov    %eax,-0x1c0(%ebp)
mov    -0x15c(%ebp),%eax
mov    %eax,-0x1bc(%ebp)
mov    -0x158(%ebp),%eax
mov    %eax,-0x1b8(%ebp)
mov    -0x154(%ebp),%eax
mov    %eax,-0x1b4(%ebp)
lea    -0x1c0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   8055d10 <fchmod@plt+0xbb60>
test   %eax,%eax
je     804fce7 <fchmod@plt+0x5b37>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ee9a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x22(%ebx)
je     804fce7 <fchmod@plt+0x5b37>
jmp    804fb07 <fchmod@plt+0x5957>
lea    -0x7c(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x1e0(%ebp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    805071c <fchmod@plt+0x656c>
mov    -0x6c(%ebp),%eax
movl   $0x11,-0x1f0(%ebp)
00
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    805020a <fchmod@plt+0x605a>
cmpb   $0x0,0x2e(%ebx)
je     80506bc <fchmod@plt+0x650c>
mov    -0x1e0(%ebp),%eax
mov    %edi,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %eax,(%esp)
call   8052350 <fchmod@plt+0x81a0>
mov    %eax,-0x1fc(%ebp)
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x1f0(%ebp)
cmpl   $0x15,-0x1f0(%ebp)
movb   $0x1,-0x210(%ebp)
jne    804f33e <fchmod@plt+0x518e>
mov    -0x1fc(%ebp),%eax
shr    $0x1f,%eax
test   %al,%al
je     804f33e <fchmod@plt+0x518e>
mov    -0x1e0(%ebp),%eax
movl   $0x15,-0x1f0(%ebp)
00
cmpb   $0x0,(%eax)
je     8050270 <fchmod@plt+0x60c0>
mov    -0x1e0(%ebp),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    -0x1e0(%ebp),%edi
xor    %eax,%eax
not    %ecx
cmpb   $0x2f,-0x2(%edi,%ecx,1)
setne  %al
mov    %eax,-0x1f0(%ebp)
addl   $0x14,-0x1f0(%ebp)
movb   $0x1,-0x210(%ebp)
jmp    804f9c3 <fchmod@plt+0x5813>
mov    -0x1e8(%ebp),%edi
or     $0xffffffff,%ecx
movzbl -0x210(%ebp),%eax
mov    -0x114(%ebp),%edx
repnz scas %es:(%edi),%al
not    %ecx
sub    $0x1,%ecx
cmpl   $0x0,-0x110(%ebp)
jne    804efb0 <fchmod@plt+0x4e00>
cmp    %ecx,%edx
jne    804efb0 <fchmod@plt+0x4e00>
mov    -0x1e0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8051910 <fchmod@plt+0x7760>
mov    %eax,%edi
mov    -0x1e8(%ebp),%eax
test   %edi,%edi
je     8050797 <fchmod@plt+0x65e7>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80499e0 <strcmp@plt>
mov    %edi,(%esp)
mov    %eax,-0x1fc(%ebp)
call   8049a60 <free@plt>
mov    -0x1e8(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x1fc(%ebp),%eax
test   %eax,%eax
je     804fb8b <fchmod@plt+0x59db>
jmp    804efbe <fchmod@plt+0x4e0e>
cmpb   $0x0,0x24(%ebx)
jne    804fe23 <fchmod@plt+0x5c73>
cmpb   $0x0,0x27(%ebx)
jne    8050ac0 <fchmod@plt+0x6910>
lea    -0x7c(%ebp),%eax
mov    %eax,(%esp)
movl   $0x0,-0x7c(%ebp)
call   804a090 <getfscreatecon@plt>
test   %eax,%eax
js     805072b <fchmod@plt+0x657b>
xor    %ecx,%ecx
mov    $0x1,%edi
jmp    804fe44 <fchmod@plt+0x5c94>
cmpb   $0x0,0x29(%ebx)
jne    80507dc <fchmod@plt+0x662c>
cmpb   $0x0,0x1f(%ebx)
jne    80507a5 <fchmod@plt+0x65f5>
cmpl   $0x0,-0x238(%ebp)
je     804fb09 <fchmod@plt+0x5959>
call   804cae0 <fchmod@plt+0x2930>
not    %eax
test   %eax,-0x238(%ebp)
je     804fb09 <fchmod@plt+0x5959>
mov    -0x248(%ebp),%ecx
mov    -0x1e0(%ebp),%edx
mov    -0x1fc(%ebp),%eax
call   804c220 <fchmod@plt+0x2070>
test   %eax,%eax
je     804fb09 <fchmod@plt+0x5959>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eeb2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x204(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,-0x1f0(%ebp)
call   8049e80 <__errno_location@plt>
mov    -0x204(%ebp),%ecx
mov    -0x1f0(%ebp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    804fdfb <fchmod@plt+0x5c4b>
mov    $0x1,%ecx
jmp    804ddda <fchmod@plt+0x3c2a>
test   %cl,%cl
jne    8050428 <fchmod@plt+0x6278>
mov    %edi,%eax
test   %al,%al
je     805049f <fchmod@plt+0x62ef>
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
cmp    $0x3d,%eax
je     805049f <fchmod@plt+0x62ef>
cmp    $0x5f,%eax
je     805049f <fchmod@plt+0x62ef>
mov    -0x7c(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,-0x218(%ebp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805f394,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    -0x218(%ebp),%ecx
mov    %edi,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
cmpb   $0x0,0x24(%ebx)
je     804fe75 <fchmod@plt+0x5cc5>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   804a000 <freecon@plt>
jmp    804ff32 <fchmod@plt+0x5d82>
mov    -0x1e8(%ebp),%eax
movl   $0x40049409,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,(%esp)
call   8049bb0 <ioctl@plt>
test   %eax,%eax
je     804fcd3 <fchmod@plt+0x5b23>
cmpl   $0x2,0x30(%ebx)
jne    804f387 <fchmod@plt+0x51d7>
mov    -0x1dc(%ebp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x0,(%esp)
mov    %eax,-0x200(%ebp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
movl   $0x5,0x8(%esp)
movl   $0x805ee5a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,-0x1f0(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    -0x200(%ebp),%ecx
mov    -0x1f0(%ebp),%edx
mov    %edi,0x8(%esp)
xor    %edi,%edi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
movl   $0x0,-0x200(%ebp)
00
jmp    804fb09 <fchmod@plt+0x5959>
cmpb   $0x0,0x18(%ebx)
je     804d679 <fchmod@plt+0x34c9>
mov    0x8(%ebx),%eax
cmp    $0x2,%eax
je     8050617 <fchmod@plt+0x6467>
cmp    $0x3,%eax
je     80505fd <fchmod@plt+0x644d>
cmp    $0x4,%eax
je     80505e2 <fchmod@plt+0x6432>
mov    %edi,%eax
test   %al,%al
je     804d679 <fchmod@plt+0x34c9>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8049b40 <unlink@plt>
test   %eax,%eax
je     8050617 <fchmod@plt+0x6467>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
mov    %eax,%esi
jmp    804d21a <fchmod@plt+0x306a>
cmpb   $0x0,0x2d(%ebx)
je     80505a1 <fchmod@plt+0x63f1>
mov    -0x130(%ebp),%edx
mov    -0x1e0(%ebp),%eax
call   804beb0 <fchmod@plt+0x1d00>
test   %al,%al
jne    80505a1 <fchmod@plt+0x63f1>
mov    -0x1e0(%ebp),%eax
lea    -0x130(%ebp),%edx
call   804c680 <fchmod@plt+0x24d0>
call   8057110 <fchmod@plt+0xcf60>
test   %al,%al
jne    80505a1 <fchmod@plt+0x63f1>
mov    -0x1f0(%ebp),%eax
test   %eax,%eax
je     8050624 <fchmod@plt+0x6474>
movb   $0x1,(%eax)
mov    %edi,%eax
test   %al,%al
je     804d5f8 <fchmod@plt+0x3448>
movzbl 0x2c(%ebx),%edx
test   %dl,%dl
je     804d5f8 <fchmod@plt+0x3448>
mov    -0x1dc(%ebp),%eax
mov    %edx,-0x1e0(%ebp)
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9a7,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049b00 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    -0x1e0(%ebp),%edx
jmp    804d249 <fchmod@plt+0x3099>
call   8049b30 <geteuid@plt>
test   %eax,%eax
je     804fd65 <fchmod@plt+0x5bb5>
mov    -0x1e0(%ebp),%edx
mov    $0x180,%ecx
mov    -0x1fc(%ebp),%eax
call   804c220 <fchmod@plt+0x2070>
test   %eax,%eax
sete   -0x1f0(%ebp)
jmp    804fd6c <fchmod@plt+0x5bbc>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f3c4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
xor    %edi,%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c50 <error@plt>
movb   $0x1,-0x210(%ebp)
movl   $0x0,-0x200(%ebp)
00
jmp    804dd8f <fchmod@plt+0x3bdf>
movl   $0x11,-0x1f0(%ebp)
00
jmp    805020a <fchmod@plt+0x605a>
mov    -0x204(%ebp),%eax
xor    %ecx,%ecx
mov    $0x1,%edi
mov    (%eax),%eax
cmp    $0x3d,%eax
je     8050788 <fchmod@plt+0x65d8>
cmp    $0x5f,%eax
je     8050788 <fchmod@plt+0x65d8>
movl   $0x5,0x8(%esp)
movl   $0x805f368,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,-0x218(%ebp)
call   8049b00 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    -0x204(%ebp),%eax
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    -0x218(%ebp),%ecx
cmpb   $0x0,0x24(%ebx)
jne    804ff32 <fchmod@plt+0x5d82>
jmp    804fe44 <fchmod@plt+0x5c94>
mov    %eax,(%esp)
call   8049a60 <free@plt>
nop
jmp    804efbe <fchmod@plt+0x4e0e>
call   804cae0 <fchmod@plt+0x2930>
not    %eax
and    $0x1b6,%eax
mov    %eax,0x8(%esp)
mov    -0x1fc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   80514a0 <fchmod@plt+0x72f0>
test   %eax,%eax
mov    $0x0,%eax
cmovne %eax,%edi
jmp    804fb09 <fchmod@plt+0x5959>
mov    0x10(%ebx),%eax
jmp    80507b1 <fchmod@plt+0x6601>
lea    -0x7c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   80596f0 <fts_children+0x1e0>
test   %eax,%eax
js     804e5ca <fchmod@plt+0x441a>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049e00 <setfscreatecon@plt>
test   %eax,%eax
jns    804cec7 <fchmod@plt+0x2d17>
jmp    804df09 <fchmod@plt+0x3d59>
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805e9b3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    -0x204(%ebp),%eax
jmp    804ecd9 <fchmod@plt+0x4b29>
cmpl   $0x0,-0xb0(%ebp)
mov    -0xb4(%ebp),%ecx
mov    -0x204(%ebp),%eax
jg     804f48f <fchmod@plt+0x52df>
jl     8050878 <fchmod@plt+0x66c8>
cmp    %eax,%ecx
jae    804f48f <fchmod@plt+0x52df>
lea    0x1(%ecx),%eax
mov    %eax,-0x204(%ebp)
jmp    804f48f <fchmod@plt+0x52df>
mov    -0xd0(%ebp),%eax
mov    0xc(%ebx),%ecx
movb   $0x0,-0x1f0(%ebp)
mov    %eax,-0x230(%ebp)
and    $0xf000,%eax
cmp    $0x8000,%eax
je     80509bd <fchmod@plt+0x680d>
cmp    $0x3,%ecx
movb   $0x1,-0x23d(%ebp)
je     804f4cc <fchmod@plt+0x531c>
jmp    804f438 <fchmod@plt+0x5288>
lea    -0x1c0(%ebp),%eax
mov    %eax,-0x1f0(%ebp)
lea    -0x1c8(%ebp),%eax
mov    -0x244(%ebp),%ecx
mov    %eax,0x1c(%esp)
mov    -0x1f0(%ebp),%eax
mov    -0x1fc(%ebp),%edx
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0x14(%esp)
mov    %eax,0x18(%esp)
mov    -0x1e0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0x1dc(%ebp),%eax
mov    %eax,0x8(%esp)
movzbl -0x23d(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x204(%ebp),%eax
mov    %eax,(%esp)
mov    -0x1e8(%ebp),%eax
call   804bfe0 <fchmod@plt+0x1e30>
test   %al,%al
je     8050078 <fchmod@plt+0x5ec8>
cmpb   $0x0,-0x1c8(%ebp)
je     804fcdd <fchmod@plt+0x5b2d>
mov    -0x1c0(%ebp),%eax
mov    -0x1bc(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x1fc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049f10 <ftruncate64@plt>
test   %eax,%eax
jns    804fcdd <fchmod@plt+0x5b2d>
jmp    8050078 <fchmod@plt+0x5ec8>
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    -0x1e0(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ecfc,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
jmp    804fac6 <fchmod@plt+0x5916>
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
mov    -0x1dc(%ebp),%eax
jmp    8050986 <fchmod@plt+0x67d6>
mov    -0xb0(%ebp),%edi
xor    %edx,%edx
sar    $0x1f,%edi
and    $0x1ff,%edi
mov    %edi,%eax
add    -0xb4(%ebp),%eax
adc    -0xb0(%ebp),%edx
shrd   $0x9,%edx,%eax
sar    $0x9,%edx
cmp    %edx,-0xa4(%ebp)
jl     8050a01 <fchmod@plt+0x6851>
jg     80509f5 <fchmod@plt+0x6845>
cmp    %eax,-0xa8(%ebp)
jb     8050a01 <fchmod@plt+0x6851>
movb   $0x0,-0x1f0(%ebp)
jmp    80508ac <fchmod@plt+0x66fc>
cmp    $0x2,%ecx
je     8050b02 <fchmod@plt+0x6952>
movb   $0x1,-0x1f0(%ebp)
jmp    80508ac <fchmod@plt+0x66fc>
cmpb   $0x0,-0x1ab(%ebp)
mov    %esi,-0x218(%ebp)
mov    -0x234(%ebp),%ebx
mov    %edi,-0x214(%ebp)
mov    -0x220(%ebp),%esi
jne    8050011 <fchmod@plt+0x5e61>
cmpb   $0x0,-0x1ac(%ebp)
jne    80508cd <fchmod@plt+0x671d>
mov    -0x1dc(%ebp),%eax
mov    %eax,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805f3ec,0x4(%esp)
mov    %eax,-0x1f0(%ebp)
jmp    805009c <fchmod@plt+0x5eec>
mov    -0x238(%ebp),%ecx
mov    -0x1e0(%ebp),%edx
mov    -0x1fc(%ebp),%eax
not    %ecx
and    -0x248(%ebp),%ecx
call   804c220 <fchmod@plt+0x2070>
jmp    804fdad <fchmod@plt+0x5bfd>
mov    -0x228(%ebp),%edx
mov    -0x224(%ebp),%ecx
mov    -0x1fc(%ebp),%eax
sub    -0x218(%ebp),%edx
sbb    -0x214(%ebp),%ecx
call   804bf00 <fchmod@plt+0x1d50>
xor    $0x1,%eax
jmp    8050070 <fchmod@plt+0x5ec0>
lea    -0x7c(%ebp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
movl   $0x0,-0x7c(%ebp)
call   804a090 <getfscreatecon@plt>
xor    %ecx,%ecx
test   %eax,%eax
jns    804fe44 <fchmod@plt+0x5c94>
jmp    8050788 <fchmod@plt+0x65d8>
mov    -0x220(%ebp),%esi
mov    -0x234(%ebp),%ebx
jmp    804faf9 <fchmod@plt+0x5949>
mov    0xc(%ebx),%eax
mov    %eax,-0x23c(%ebp)
jmp    804f528 <fchmod@plt+0x5378>
mov    -0x228(%ebp),%eax
add    -0x204(%ebp),%eax
mov    %eax,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    -0x218(%ebp),%edi
xor    %edx,%edx
movb   $0x1,-0x23d(%ebp)
lea    -0x1(%eax,%edi,1),%ecx
mov    %eax,-0x200(%ebp)
mov    %ecx,%eax
div    %edi
sub    %edx,%ecx
mov    %ecx,-0x244(%ebp)
jmp    804f50b <fchmod@plt+0x535b>
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x4c(%esp),%ebx
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    0x48(%esp),%ecx
test   %ebx,%ebx
je     8050c95 <fchmod@plt+0x6ae5>
cmpl   $0x3,(%ebx)
ja     8050c71 <fchmod@plt+0x6ac1>
mov    0xc(%ebx),%edi
lea    -0x1(%edi),%esi
cmp    $0x2,%esi
ja     8050cb9 <fchmod@plt+0x6b09>
mov    0x30(%ebx),%esi
cmp    $0x2,%esi
ja     8050c4d <fchmod@plt+0x6a9d>
cmpb   $0x0,0x17(%ebx)
jne    8050bf0 <fchmod@plt+0x6a40>
cmp    $0x2,%esi
je     8050c20 <fchmod@plt+0x6a70>
mov    0x54(%esp),%esi
movzbl %cl,%ecx
mov    %ebx,0xc(%esp)
movl   $0x1,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,0x1c(%esp)
mov    0x50(%esp),%esi
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
movb   $0x0,0x2f(%esp)
mov    %esi,0x18(%esp)
lea    0x2f(%esp),%esi
mov    %esi,0x14(%esp)
mov    %eax,0x8065728
mov    %edx,0x8065724
call   804cb20 <fchmod@plt+0x2970>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2a(%ebx)
je     8050b88 <fchmod@plt+0x69d8>
movl   $0x805f61d,0xc(%esp)
movl   $0xa66,0x8(%esp)
movl   $0x805ef76,0x4(%esp)
movl   $0x805f5ac,(%esp)
call   804a160 <__assert_fail@plt>
lea    0x0(%esi),%esi
cmp    $0x2,%edi
je     8050b91 <fchmod@plt+0x69e1>
movl   $0x805f61d,0xc(%esp)
movl   $0xa69,0x8(%esp)
movl   $0x805ef76,0x4(%esp)
movl   $0x805f5d4,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x805f61d,0xc(%esp)
movl   $0xa65,0x8(%esp)
movl   $0x805ef76,0x4(%esp)
movl   $0x805f538,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x805f61d,0xc(%esp)
movl   $0xa63,0x8(%esp)
movl   $0x805ef76,0x4(%esp)
movl   $0x805f490,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x805f61d,0xc(%esp)
movl   $0xa62,0x8(%esp)
movl   $0x805ef76,0x4(%esp)
movl   $0x805ef81,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x805f61d,0xc(%esp)
movl   $0xa64,0x8(%esp)
movl   $0x805ef76,0x4(%esp)
movl   $0x805f4c8,(%esp)
call   804a160 <__assert_fail@plt>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805db40 <fts_children+0x4630>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    (%esi),%edx
mov    0x4(%esi),%ecx
xor    0x4(%ebx),%ecx
xor    (%ebx),%edx
or     %edx,%ecx
je     8050d30 <fchmod@plt+0x6b80>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%esi),%edx
mov    0xc(%esi),%eax
xor    0xc(%ebx),%eax
xor    0x8(%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a60 <free@plt>
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
movl   $0x0,0x2c(%esp)
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x4c(%esp),%edx
mov    %eax,0x24(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x806572c,%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   8053740 <fchmod@plt+0x9590>
test   %eax,%eax
mov    %eax,%ebx
je     8050dca <fchmod@plt+0x6c1a>
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
add    $0x38,%esp
pop    %ebx
ret
nop
sub    $0x3c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x4c(%esp),%edx
mov    %eax,0x24(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x806572c,%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   8052ea0 <fchmod@plt+0x8cf0>
test   %eax,%eax
je     8050e18 <fchmod@plt+0x6c68>
mov    0x10(%eax),%eax
add    $0x3c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8050e0f <fchmod@plt+0x6c5f>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%edx
mov    0x24(%esp),%eax
movl   $0x14,(%esp)
mov    0x2c(%esp),%esi
mov    0x30(%esp),%edi
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    %eax,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8056e90 <fchmod@plt+0xcce0>
mov    0xc(%esp),%edx
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%ebx)
mov    %edi,0xc(%ebx)
mov    %edx,0x4(%ebx)
mov    %eax,0x10(%ebx)
mov    0x8(%esp),%eax
mov    %eax,(%ebx)
mov    0x806572c,%eax
mov    %eax,(%esp)
call   8053700 <fchmod@plt+0x9550>
test   %eax,%eax
mov    %eax,%esi
je     8050eac <fchmod@plt+0x6cfc>
cmp    %ebx,%eax
je     8050ea8 <fchmod@plt+0x6cf8>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x10(%esi),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    8050e9f <fchmod@plt+0x6cef>
call   8056ec0 <fchmod@plt+0xcd10>
jmp    8050ec0 <fchmod@plt+0x6d10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
movl   $0x8050d50,0x10(%esp)
movl   $0x8050d10,0xc(%esp)
movl   $0x8050ce0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x67,(%esp)
call   80530f0 <fchmod@plt+0x8f40>
test   %eax,%eax
mov    %eax,0x806572c
je     8050efc <fchmod@plt+0x6d4c>
add    $0x2c,%esp
ret
call   8056ec0 <fchmod@plt+0xcd10>
jmp    8050f10 <fchmod@plt+0x6d60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x806572c,%eax
mov    %eax,(%esp)
call   80532c0 <fchmod@plt+0x9110>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
movl   $0x0,0x10(%eax)
mov    %edx,(%eax)
movl   $0x0,0x18(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movb   $0x0,0x14(%eax)
movb   $0x0,0x15(%eax)
movl   $0x1,0xc(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
movl   $0x0,0x24(%esp)
mov    0x18(%ebp),%eax
mov    0x4(%ebp),%edx
mov    0x8(%ebp),%ebx
mov    %eax,%esi
xor    %eax,%eax
mov    $0x400,%ecx
lea    0x4c(%esp),%edi
rep stos %eax,%es:(%edi)
mov    %edx,%eax
not    %eax
mov    %eax,0x54(%esp)
lea    0x4c(%esp),%eax
mov    %edx,0x4c(%esp)
mov    0xc(%ebp),%edx
mov    %eax,0x8(%esp)
movl   $0xc020660b,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %ebx,0x50(%esp)
not    %ebx
mov    %edx,0x5c(%esp)
movl   $0x48,0x64(%esp)
mov    %eax,(%esp)
mov    %ebx,0x58(%esp)
call   8049bb0 <ioctl@plt>
test   %eax,%eax
js     80510f6 <fchmod@plt+0x6f46>
mov    0x60(%esp),%eax
test   %eax,%eax
je     8051338 <fchmod@plt+0x7188>
mov    0x10(%ebp),%edx
mov    %eax,%ecx
not    %ecx
cmp    %ecx,%edx
ja     8051354 <fchmod@plt+0x71a4>
add    %edx,%eax
mov    0x18(%ebp),%edx
mov    %esi,%ebx
mov    %eax,0x10(%ebp)
sub    %edx,%ebx
sar    $0x2,%ebx
cmp    $0xccccccc,%eax
ja     805134f <fchmod@plt+0x719f>
lea    (%eax,%eax,4),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8056cc0 <fchmod@plt+0xcb10>
mov    %eax,0x18(%ebp)
lea    (%eax,%ebx,4),%esi
mov    0x60(%esp),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8051239 <fchmod@plt+0x7089>
mov    0x6c(%esp),%eax
mov    $0xffffffff,%ecx
mov    $0x7fffffff,%ebx
mov    0x70(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x7c(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x80(%esp),%edx
sub    %eax,%ecx
sbb    %edx,%ebx
cmp    %ebx,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jb     805109c <fchmod@plt+0x6eec>
ja     80511c4 <fchmod@plt+0x7014>
cmp    %ecx,0x18(%esp)
ja     80511c4 <fchmod@plt+0x7014>
lea    0x6c(%esp),%edi
movl   $0x0,0x20(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8051128 <fchmod@plt+0x6f78>
mov    0x28(%edi),%eax
mov    %eax,0x30(%esp)
and    $0xfffffffe,%eax
cmp    %eax,0x10(%esi)
je     8051288 <fchmod@plt+0x70d8>
mov    (%esi),%eax
mov    0x4(%esi),%edx
add    0x8(%esi),%eax
adc    0xc(%esi),%edx
cmp    %edx,0x1c(%esp)
ja     8051143 <fchmod@plt+0x6f93>
jae    80512d8 <fchmod@plt+0x7128>
mov    %eax,%ecx
mov    %edx,%ebx
sub    0x18(%esp),%ecx
sbb    0x1c(%esp),%ebx
cmp    0x2c(%esp),%ebx
ja     805120a <fchmod@plt+0x705a>
jae    8051200 <fchmod@plt+0x7050>
mov    0x8(%ebp),%eax
or     0x4(%ebp),%eax
jne    80512e8 <fchmod@plt+0x7138>
movb   $0x1,0x14(%ebp)
xor    %eax,%eax
mov    0x104c(%esp),%ebx
xor    %gs:0x14,%ebx
jne    805134a <fchmod@plt+0x719a>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8(%ebp),%edx
cmp    0x1c(%esp),%edx
mov    0x4(%ebp),%eax
ja     80510da <fchmod@plt+0x6f2a>
jb     805113c <fchmod@plt+0x6f8c>
cmp    0x18(%esp),%eax
ja     80510da <fchmod@plt+0x6f2a>
mov    0x28(%edi),%eax
mov    %eax,0x30(%esp)
mov    0x24(%esp),%eax
addl   $0x1,0x24(%esp)
lea    (%eax,%eax,4),%edx
mov    0x18(%ebp),%eax
lea    (%eax,%edx,4),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    0x28(%esp),%eax
mov    %edx,0x4(%esi)
mov    0x2c(%esp),%edx
mov    %eax,0x8(%esi)
mov    0x30(%esp),%eax
mov    %edx,0xc(%esi)
mov    %eax,0x10(%esi)
addl   $0x1,0x20(%esp)
mov    0x34(%esp),%eax
cmp    %eax,0x20(%esp)
jae    8051239 <fchmod@plt+0x7089>
imul   $0x38,0x20(%esp),%edi
mov    $0xffffffff,%ecx
lea    0x6c(%esp),%eax
mov    $0x7fffffff,%ebx
add    %eax,%edi
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %eax,0x18(%esp)
mov    0x10(%edi),%eax
mov    %edx,0x1c(%esp)
mov    0x14(%edi),%edx
sub    %eax,%ecx
sbb    %edx,%ebx
cmp    %ebx,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jbe    80511e8 <fchmod@plt+0x7038>
movl   $0x805f724,0xc(%esp)
movl   $0x8f,0x8(%esp)
movl   $0x805f62b,0x4(%esp)
movl   $0x805f67c,(%esp)
call   804a160 <__assert_fail@plt>
jb     80510a8 <fchmod@plt+0x6ef8>
cmp    %ecx,0x18(%esp)
ja     80511c4 <fchmod@plt+0x7014>
jmp    80510a8 <fchmod@plt+0x6ef8>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x28(%esp),%ecx
jb     80510f6 <fchmod@plt+0x6f46>
mov    %eax,(%edi)
mov    0x28(%esp),%eax
mov    %edx,0x4(%edi)
mov    0x2c(%esp),%edx
sub    %ecx,%eax
sbb    %ebx,%edx
subl   $0x1,0x20(%esp)
addl   $0x1,0x20(%esp)
mov    %eax,0x10(%edi)
mov    0x34(%esp),%eax
cmp    %eax,0x20(%esp)
mov    %edx,0x14(%edi)
jb     805118a <fchmod@plt+0x6fda>
testb  $0x1,0x10(%esi)
jne    8051308 <fchmod@plt+0x7158>
cmpl   $0x48,0x24(%esp)
movzbl 0x15(%ebp),%eax
ja     80512ef <fchmod@plt+0x713f>
mov    0x24(%esp),%ebx
test   %al,%al
mov    %ebx,0x10(%ebp)
jne    80512fa <fchmod@plt+0x714a>
mov    (%esi),%ecx
mov    0x4(%esi),%ebx
add    0x8(%esi),%ecx
adc    0xc(%esi),%ebx
cmpl   $0x47,0x24(%esp)
mov    %ecx,0x4(%ebp)
mov    %ebx,0x8(%ebp)
ja     80512fa <fchmod@plt+0x714a>
mov    %ecx,%edx
jmp    8050fa3 <fchmod@plt+0x6df3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
mov    0xc(%esi),%edx
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%ecx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
add    (%esi),%eax
adc    0x4(%esi),%edx
xor    %eax,%ecx
xor    %edx,%ebx
or     %ecx,%ebx
jne    80510ce <fchmod@plt+0x6f1e>
mov    0x28(%esp),%eax
add    0x38(%esp),%eax
mov    0x2c(%esp),%edx
adc    0x3c(%esp),%edx
mov    %eax,0x8(%esi)
mov    0x30(%esp),%eax
mov    %edx,0xc(%esi)
mov    %eax,0x10(%esi)
jmp    8051177 <fchmod@plt+0x6fc7>
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x18(%esp)
jae    8051143 <fchmod@plt+0x6f93>
jmp    80510da <fchmod@plt+0x6f2a>
nop
xor    %eax,%eax
jmp    8051108 <fchmod@plt+0x6f58>
test   %al,%al
je     805131d <fchmod@plt+0x716d>
mov    0x24(%esp),%eax
mov    %eax,0x10(%ebp)
mov    $0x1,%eax
jmp    8051108 <fchmod@plt+0x6f58>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x48,0x24(%esp)
movb   $0x1,0x15(%ebp)
ja     80512f3 <fchmod@plt+0x7143>
mov    $0x1,%eax
jmp    8051252 <fchmod@plt+0x70a2>
subl   $0x1,0x24(%esp)
mov    0x24(%esp),%ebx
mov    0x18(%ebp),%eax
lea    (%ebx,%ebx,4),%edx
lea    -0x14(%eax,%edx,4),%esi
mov    %ebx,0x10(%ebp)
jmp    8051261 <fchmod@plt+0x70b1>
mov    0x4(%ebp),%eax
or     0x8(%ebp),%eax
movb   $0x1,0x15(%ebp)
setne  %al
jmp    8051108 <fchmod@plt+0x6f58>
call   8049b20 <__stack_chk_fail@plt>
call   8056ec0 <fchmod@plt+0xcd10>
movl   $0x805f724,0xc(%esp)
movl   $0x80,0x8(%esp)
movl   $0x805f62b,0x4(%esp)
movl   $0x805f640,(%esp)
call   804a160 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    0x4(%esp),%ecx
cmp    $0xffffffff,%eax
mov    %edx,0x8(%esp)
je     80513a0 <fchmod@plt+0x71f0>
mov    %eax,0x4(%esp)
jmp    804a1b0 <fchmod@plt>
xchg   %ax,%ax
mov    %ecx,0x4(%esp)
jmp    804a0b0 <chmod@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
mov    %ebx,(%esp)
call   8049cb0 <acl_from_mode@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8051423 <fchmod@plt+0x7273>
cmp    $0xffffffff,%esi
je     8051470 <fchmod@plt+0x72c0>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80499c0 <acl_set_fd@plt>
test   %eax,%eax
je     8051430 <fchmod@plt+0x7280>
call   8049e80 <__errno_location@plt>
mov    %eax,%ecx
mov    (%eax),%eax
mov    %ebp,(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   804a180 <acl_free@plt>
mov    0x18(%esp),%ecx
mov    (%ecx),%eax
cmp    $0x5f,%eax
je     8051458 <fchmod@plt+0x72a8>
cmp    $0x26,%eax
je     8051458 <fchmod@plt+0x72a8>
cmp    $0x16,%eax
je     8051458 <fchmod@plt+0x72a8>
cmp    $0x10,%eax
je     8051458 <fchmod@plt+0x72a8>
mov    0x1c(%esp),%eax
mov    %eax,(%ecx)
mov    $0xffffffff,%eax
jmp    805144d <fchmod@plt+0x729d>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   804a180 <acl_free@plt>
mov    %ebx,%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8051490 <fchmod@plt+0x72e0>
xor    %eax,%eax
test   $0xe,%bh
jne    8051458 <fchmod@plt+0x72a8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x48(%esp)
mov    %esi,0x44(%esp)
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8051380 <fchmod@plt+0x71d0>
mov    %eax,0x8(%esp)
movl   $0x8000,0x4(%esp)
mov    %edi,(%esp)
call   8049ca0 <acl_set_file@plt>
jmp    80513e6 <fchmod@plt+0x7236>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049b10 <acl_delete_def_file@plt>
test   %eax,%eax
je     8051446 <fchmod@plt+0x7296>
jmp    8051423 <fchmod@plt+0x7273>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80513b0 <fchmod@plt+0x7200>
test   %eax,%eax
mov    %eax,%ebx
je     805150f <fchmod@plt+0x735f>
mov    %esi,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805ede5,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %eax,%esi
call   8049e80 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
mov    0x40(%esp),%ebp
mov    0x4c(%esp),%ebx
cmp    $0xffffffff,%eax
mov    0x50(%esp),%esi
mov    %edx,0x18(%esp)
je     80515f8 <fchmod@plt+0x7448>
mov    %eax,(%esp)
call   8049cc0 <acl_get_fd@plt>
mov    %eax,%edi
test   %edi,%edi
je     8051612 <fchmod@plt+0x7462>
cmp    $0xffffffff,%ebx
je     8051678 <fchmod@plt+0x74c8>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   80499c0 <acl_set_fd@plt>
test   %eax,%eax
je     8051648 <fchmod@plt+0x7498>
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,0x1c(%esp)
cmp    $0x5f,%ebp
je     80515c8 <fchmod@plt+0x7418>
cmp    $0x26,%ebp
je     80515c8 <fchmod@plt+0x7418>
cmp    $0x16,%ebp
je     80515c8 <fchmod@plt+0x7418>
cmp    $0x10,%ebp
je     80515c8 <fchmod@plt+0x7418>
mov    %edi,(%esp)
call   804a180 <acl_free@plt>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    $0xffffffff,%ebx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8051380 <fchmod@plt+0x71d0>
mov    0x1c(%esp),%eax
mov    %ebp,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   8051820 <fchmod@plt+0x7670>
test   %eax,%eax
jne    8051596 <fchmod@plt+0x73e6>
mov    %edi,(%esp)
call   804a180 <acl_free@plt>
mov    0x18(%esp),%eax
mov    %esi,0x48(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8051380 <fchmod@plt+0x71d0>
movl   $0x8000,0x4(%esp)
mov    %ebp,(%esp)
call   8049e40 <acl_get_file@plt>
mov    %eax,%edi
test   %edi,%edi
jne    805155a <fchmod@plt+0x73aa>
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
je     80516c0 <fchmod@plt+0x7510>
cmp    $0x26,%eax
je     80516c0 <fchmod@plt+0x7510>
cmp    $0x16,%eax
je     80516c0 <fchmod@plt+0x7510>
cmp    $0x10,%eax
je     80516c0 <fchmod@plt+0x7510>
mov    $0xfffffffe,%ebx
jmp    80515bd <fchmod@plt+0x740d>
nop
mov    %edi,(%esp)
call   804a180 <acl_free@plt>
test   $0xe00,%esi
jne    8051698 <fchmod@plt+0x74e8>
and    $0xf000,%esi
cmp    $0x4000,%esi
je     80516e0 <fchmod@plt+0x7530>
add    $0x2c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x8000,0x4(%esp)
mov    %eax,(%esp)
call   8049ca0 <acl_set_file@plt>
jmp    805156f <fchmod@plt+0x73bf>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8051380 <fchmod@plt+0x71d0>
test   %eax,%eax
je     8051658 <fchmod@plt+0x74a8>
mov    $0xffffffff,%ebx
jmp    80515bd <fchmod@plt+0x740d>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %esi,0x48(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80513b0 <fchmod@plt+0x7200>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4000,0x4(%esp)
mov    %ebp,(%esp)
call   8049e40 <acl_get_file@plt>
test   %eax,%eax
mov    %eax,%esi
je     805163d <fchmod@plt+0x748d>
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x4000,0x4(%esp)
mov    %eax,(%esp)
call   8049ca0 <acl_set_file@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8051725 <fchmod@plt+0x7575>
mov    %esi,(%esp)
call   804a180 <acl_free@plt>
jmp    80515bd <fchmod@plt+0x740d>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   804a180 <acl_free@plt>
mov    %edi,(%ebx)
mov    $0xffffffff,%ebx
jmp    80515bd <fchmod@plt+0x740d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%eax
mov    0x30(%esp),%edi
mov    0x38(%esp),%esi
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %edi,(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8051520 <fchmod@plt+0x7370>
cmp    $0xfffffffe,%eax
mov    %eax,%ebx
je     80517e0 <fchmod@plt+0x7630>
cmp    $0xffffffff,%eax
jne    80517d5 <fchmod@plt+0x7625>
mov    %esi,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x5,0x8(%esp)
movl   $0x805eeb2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049b00 <dcgettext@plt>
mov    %eax,%esi
call   8049e80 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %edi,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
mov    %eax,%esi
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x8060091,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x18(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049ec0 <acl_get_entry@plt>
test   %eax,%eax
jle    8051894 <fchmod@plt+0x76e4>
lea    0x1c(%esp),%edi
jmp    805187b <fchmod@plt+0x76cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmp    $0x1,%eax
je     8051863 <fchmod@plt+0x76b3>
cmp    $0x4,%eax
je     8051863 <fchmod@plt+0x76b3>
cmp    $0x20,%eax
jne    80518a0 <fchmod@plt+0x76f0>
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049ec0 <acl_get_entry@plt>
test   %eax,%eax
jle    8051894 <fchmod@plt+0x76e4>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <acl_get_tag_type@plt>
test   %eax,%eax
jns    8051850 <fchmod@plt+0x76a0>
mov    $0xffffffff,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x10(%eax),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     80518f0 <fchmod@plt+0x7740>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049c00 <acl_extended_file@plt>
test   %eax,%eax
js     80518e0 <fchmod@plt+0x7730>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x5f,%eax
jne    80518f8 <fchmod@plt+0x7748>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
cmp    $0x26,%eax
je     80518f0 <fchmod@plt+0x7740>
cmp    $0x16,%eax
je     80518f0 <fchmod@plt+0x7740>
cmp    $0x10,%eax
setne  %al
movzbl %al,%eax
neg    %eax
jmp    80518d6 <fchmod@plt+0x7726>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x401,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebp
lea    0x1(%eax),%edx
cmp    $0x400,%eax
cmovbe %edx,%ebx
nop
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8051978 <fchmod@plt+0x77c8>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8049b70 <readlink@plt>
test   %eax,%eax
mov    %eax,%edi
js     8051998 <fchmod@plt+0x77e8>
cmp    %edi,%ebx
ja     80519c8 <fchmod@plt+0x7818>
mov    %esi,(%esp)
call   8049a60 <free@plt>
cmp    $0x3fffffff,%ebx
ja     8051988 <fchmod@plt+0x77d8>
add    %ebx,%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
jne    805193e <fchmod@plt+0x778e>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x7ffffffe,%ebx
ja     80519d8 <fchmod@plt+0x7828>
mov    $0x7fffffff,%ebx
jmp    8051930 <fchmod@plt+0x7780>
nop
call   8049e80 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x22,%edx
je     8051954 <fchmod@plt+0x77a4>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8049a60 <free@plt>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    805197a <fchmod@plt+0x77ca>
lea    0x0(%esi),%esi
movb   $0x0,(%esi,%edi,1)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049e80 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x8065280,%ecx
movl   $0x4,0x10(%esp)
movl   $0x805f780,0xc(%esp)
movl   $0x805f7a0,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805a180 <fts_children+0xc70>
mov    0x805f780(,%eax,4),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebx
mov    %ebx,(%esp)
call   8049db0 <strlen@plt>
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x8065234,%eax
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
lea    0x1(%eax),%esi
mov    $0x9,%eax
cmp    $0x9,%esi
cmovae %esi,%eax
mov    %esi,0x2c(%esp)
lea    0x1(%edi),%esi
add    %esi,%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049a70 <memcpy@plt>
cmpl   $0x1,0x64(%esp)
je     8051cb0 <fchmod@plt+0x7b00>
mov    %ebp,(%esp)
call   8052220 <fchmod@plt+0x8070>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x20(%esp)
call   8052280 <fchmod@plt+0x80d0>
movzwl (%edi),%ebx
mov    %eax,0x28(%esp)
mov    $0x2e,%eax
mov    %ax,(%edi)
mov    %ebp,(%esp)
call   80520a0 <fchmod@plt+0x7ef0>
mov    0x28(%esp),%ecx
mov    %edi,%edx
mov    %bx,(%edi)
add    %ecx,%edx
movl   $0x7e317e2e,(%edx)
mov    %eax,%esi
test   %esi,%esi
movb   $0x0,0x4(%edx)
je     8051ca8 <fchmod@plt+0x7af8>
mov    %ecx,%eax
lea    0x4(%ecx),%edx
add    $0x2,%eax
mov    %ebp,0x1c(%esp)
movl   $0x1,0x38(%esp)
movl   $0x2,0x34(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
xchg   %ax,%ax
mov    %esi,(%esp)
call   804a020 <readdir64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8051c68 <fchmod@plt+0x7ab8>
mov    0x4(%ebx),%eax
or     (%ebx),%eax
je     8051b08 <fchmod@plt+0x7958>
lea    0x13(%ebx),%edi
mov    %edi,(%esp)
call   8049db0 <strlen@plt>
cmp    0x14(%esp),%eax
jb     8051b08 <fchmod@plt+0x7958>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
sub    %ebp,%eax
add    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049ad0 <memcmp@plt>
test   %eax,%eax
jne    8051b08 <fchmod@plt+0x7958>
mov    0x18(%esp),%eax
movzbl 0x13(%ebx,%eax,1),%eax
lea    -0x31(%eax),%edx
cmp    $0x8,%dl
ja     8051b08 <fchmod@plt+0x7958>
mov    0x28(%esp),%edx
cmp    $0x39,%al
lea    0x15(%ebx,%edx,1),%edi
sete   %dl
movzbl 0x1(%edi),%eax
mov    $0x1,%ebx
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
ja     8051ba1 <fchmod@plt+0x79f1>
xchg   %ax,%ax
cmp    $0x39,%al
sete   %al
add    $0x1,%ebx
and    %eax,%edx
movzbl (%edi,%ebx,1),%eax
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
jbe    8051b88 <fchmod@plt+0x79d8>
cmp    $0x7e,%al
jne    8051b08 <fchmod@plt+0x7958>
cmpb   $0x0,0x1(%edi,%ebx,1)
jne    8051b08 <fchmod@plt+0x7958>
cmp    0x38(%esp),%ebx
jbe    8051d49 <fchmod@plt+0x7b99>
movzbl %dl,%eax
mov    0x24(%esp),%edx
mov    %eax,0x34(%esp)
add    %ebx,%eax
mov    %eax,0x38(%esp)
lea    0x3(%eax,%edx,1),%ecx
cmp    0x30(%esp),%ecx
jb     8051c06 <fchmod@plt+0x7a56>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x1,%eax
jbe    8051d80 <fchmod@plt+0x7bd0>
lea    (%ecx,%ecx,1),%eax
mov    %eax,0x30(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8056cc0 <fchmod@plt+0xcb10>
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    0x34(%esp),%edx
add    0x24(%esp),%eax
movb   $0x2e,(%eax)
lea    0x2(%eax,%edx,1),%edx
movb   $0x7e,0x1(%eax)
movb   $0x30,0x2(%eax)
lea    0x2(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x3c(%esp)
call   8049a70 <memcpy@plt>
mov    0x3c(%esp),%edx
add    %ebx,%edx
lea    -0x1(%edx),%eax
movzbl -0x1(%edx),%edx
cmp    $0x39,%dl
jne    8051c5e <fchmod@plt+0x7aae>
lea    0x0(%esi),%esi
movb   $0x30,(%eax)
sub    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x39,%dl
je     8051c50 <fchmod@plt+0x7aa0>
add    $0x1,%edx
mov    %dl,(%eax)
jmp    8051b08 <fchmod@plt+0x7958>
mov    %esi,(%esp)
call   804a120 <closedir@plt>
mov    0x1c(%esp),%ebp
cmpl   $0x1,0x34(%esp)
jne    8051c9e <fchmod@plt+0x7aee>
mov    %ebp,(%esp)
call   8052220 <fchmod@plt+0x8070>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8052280 <fchmod@plt+0x80d0>
cmp    $0xe,%eax
mov    %eax,%esi
ja     8051cd8 <fchmod@plt+0x7b28>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x2,0x34(%esp)
jne    8051c94 <fchmod@plt+0x7ae4>
lea    0x0(%esi),%esi
cmpl   $0x2,0x64(%esp)
jne    8051c7b <fchmod@plt+0x7acb>
nop
mov    0x2c(%esp),%edx
mov    0x24(%esp),%eax
mov    %edx,0x8(%esp)
mov    0x8065234,%edx
add    %ebp,%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049a70 <memcpy@plt>
jmp    8051c7b <fchmod@plt+0x7acb>
lea    0x0(%esi),%esi
movzwl (%ebx),%ecx
mov    $0x2e,%eax
mov    %ax,(%ebx)
mov    %ecx,0x14(%esp)
call   8049e80 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
movl   $0x3,0x4(%esp)
mov    %ebp,(%esp)
call   80499a0 <pathconf@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
js     8051d3c <fchmod@plt+0x7b8c>
mov    %eax,%edx
cmp    %edx,%esi
mov    %cx,(%ebx)
jbe    8051c94 <fchmod@plt+0x7ae4>
mov    0x24(%esp),%eax
lea    -0x1(%edx),%ecx
add    %ebp,%eax
sub    %ebx,%eax
cmp    %edx,%eax
cmovae %ecx,%eax
movb   $0x7e,(%ebx,%eax,1)
movb   $0x0,0x1(%ebx,%eax,1)
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%edi
mov    $0xff,%edx
test   %edi,%edi
jne    8051d0e <fchmod@plt+0x7b5e>
jmp    8051d0c <fchmod@plt+0x7b5c>
jne    8051b08 <fchmod@plt+0x7958>
mov    %edx,0x3c(%esp)
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
lea    0x2(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   8049ad0 <memcmp@plt>
mov    0x3c(%esp),%edx
test   %eax,%eax
jg     8051b08 <fchmod@plt+0x7958>
jmp    8051bbe <fchmod@plt+0x7a0e>
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
test   %edx,%edx
je     8051da1 <fchmod@plt+0x7bf1>
cmpb   $0x0,(%edx)
jne    8051da8 <fchmod@plt+0x7bf8>
mov    $0x2,%eax
ret
nop
jmp    80519f0 <fchmod@plt+0x7840>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
test   %edx,%edx
je     8051dd0 <fchmod@plt+0x7c20>
cmpb   $0x0,(%edx)
je     8051dd0 <fchmod@plt+0x7c20>
add    $0x1c,%esp
jmp    80519f0 <fchmod@plt+0x7840>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805f73b,(%esp)
call   8049c60 <getenv@plt>
test   %eax,%eax
je     8051de5 <fchmod@plt+0x7c35>
cmpb   $0x0,(%eax)
jne    8051df0 <fchmod@plt+0x7c40>
mov    $0x2,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    %eax,%edx
add    $0x1c,%esp
mov    $0x805f73a,%eax
jmp    80519f0 <fchmod@plt+0x7840>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ecx
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%esi
test   %ecx,%ecx
jne    8051e30 <fchmod@plt+0x7c80>
mov    $0x2000,%cx
test   %ebx,%ebx
cmovne %ebx,%ecx
cmp    %esi,%ecx
mov    %esi,%eax
cmovbe %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8051e1d <fchmod@plt+0x7c6d>
xor    %edx,%edx
mov    %ebx,%edi
mov    %ecx,%eax
div    %edi
test   %edx,%edx
je     8051e4c <fchmod@plt+0x7c9c>
mov    %edi,%eax
mov    %edx,%edi
xor    %edx,%edx
div    %edi
test   %edx,%edx
jne    8051e40 <fchmod@plt+0x7c90>
xor    %edx,%edx
mov    %ecx,%eax
div    %edi
mov    %eax,%edi
mov    %eax,%ebp
imul   %ebx,%edi
cmp    %esi,%edi
ja     8051e1d <fchmod@plt+0x7c6d>
xor    %edx,%edx
mov    %edi,%eax
div    %ebx
cmp    %ebp,%eax
jne    8051e1d <fchmod@plt+0x7c6d>
mov    %edi,%eax
jmp    8051e24 <fchmod@plt+0x7c74>
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8065730
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80652e4,%ebx
mov    %ebx,(%esp)
call   8057300 <fchmod@plt+0xd150>
test   %eax,%eax
jne    8051f20 <fchmod@plt+0x7d70>
mov    %ebx,(%esp)
call   805a4f0 <fts_children+0xfe0>
test   %eax,%eax
je     8051f7a <fchmod@plt+0x7dca>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x805f7c4,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    0x8065730,%edx
test   %edx,%edx
mov    %eax,%ebx
je     8051f88 <fchmod@plt+0x7dd8>
mov    %edx,(%esp)
call   8054cc0 <fchmod@plt+0xab10>
mov    %eax,%esi
call   8049e80 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x805f7d7,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   8051fd0 <fchmod@plt+0x7e20>
mov    0x8065238,%eax
mov    %eax,(%esp)
call   8049a20 <_exit@plt>
nop
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8057330 <fchmod@plt+0xd180>
mov    0x80652e4,%ebx
test   %eax,%eax
jne    8051e9b <fchmod@plt+0x7ceb>
mov    0x80652e4,%eax
mov    %eax,(%esp)
call   80572a0 <fchmod@plt+0xd0f0>
mov    %eax,%ebx
mov    0x80652e4,%eax
mov    %eax,(%esp)
call   805a4f0 <fts_children+0xfe0>
test   %eax,%eax
jne    8051eb0 <fchmod@plt+0x7d00>
test   %ebx,%ebx
jne    8051eb0 <fchmod@plt+0x7d00>
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    8051fd0 <fchmod@plt+0x7e20>
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8060091,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    8051f0d <fchmod@plt+0x7d5d>
mov    0x4(%esp),%eax
mov    %eax,0x8065738
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8065734
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8065300,%eax
mov    %eax,(%esp)
call   805a4f0 <fts_children+0xfe0>
test   %eax,%eax
je     8051ff9 <fchmod@plt+0x7e49>
cmpb   $0x0,0x8065734
je     8052010 <fchmod@plt+0x7e60>
call   8049e80 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8052010 <fchmod@plt+0x7e60>
mov    0x80652a4,%eax
mov    %eax,(%esp)
call   805a4f0 <fts_children+0xfe0>
test   %eax,%eax
jne    8052068 <fchmod@plt+0x7eb8>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x805f7de,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8065738,%eax
test   %eax,%eax
je     8052075 <fchmod@plt+0x7ec5>
mov    %eax,(%esp)
call   8054cc0 <fchmod@plt+0xab10>
mov    %eax,%esi
call   8049e80 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x805f7d7,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
mov    0x8065238,%eax
mov    %eax,(%esp)
call   8049a20 <_exit@plt>
call   8049e80 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8060091,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    8052068 <fchmod@plt+0x7eb8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a150 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80520c6 <fchmod@plt+0x7f16>
mov    %eax,(%esp)
call   8049a40 <dirfd@plt>
cmp    $0x2,%eax
jbe    80520d0 <fchmod@plt+0x7f20>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   8055320 <fchmod@plt+0xb170>
test   %eax,%eax
js     8052118 <fchmod@plt+0x7f68>
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   8049fc0 <fdopendir@plt>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
test   %edi,%edi
mov    0xc(%esp),%edx
mov    %eax,%esi
mov    (%eax),%ebp
je     8052128 <fchmod@plt+0x7f78>
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804a120 <closedir@plt>
mov    %ebx,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
xor    %edi,%edi
mov    %eax,%esi
mov    (%eax),%ebp
jmp    80520fb <fchmod@plt+0x7f4b>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   804a110 <close@plt>
jmp    80520fb <fchmod@plt+0x7f4b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80521b0 <fchmod@plt+0x8000>
test   %eax,%eax
je     8052157 <fchmod@plt+0x7fa7>
add    $0x1c,%esp
ret
call   8056ec0 <fchmod@plt+0xcd10>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   8052220 <fchmod@plt+0x8070>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    80521a8 <fchmod@plt+0x7ff8>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     805219c <fchmod@plt+0x7fec>
jmp    80521a8 <fchmod@plt+0x7ff8>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    80521a0 <fchmod@plt+0x7ff0>
mov    %eax,%edx
cmp    %edx,%esi
jb     8052190 <fchmod@plt+0x7fe0>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    80521a0 <fchmod@plt+0x7ff0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052160 <fchmod@plt+0x7fb0>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8052218 <fchmod@plt+0x8068>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    8052210 <fchmod@plt+0x8060>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    80521fc <fchmod@plt+0x804c>
xor    %eax,%eax
jmp    8052202 <fchmod@plt+0x8052>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    805223b <fchmod@plt+0x808b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8052230 <fchmod@plt+0x8080>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     8052269 <fchmod@plt+0x80b9>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     8052269 <fchmod@plt+0x80b9>
cmp    $0x2f,%cl
je     8052270 <fchmod@plt+0x80c0>
test   %bl,%bl
je     8052248 <fchmod@plt+0x8098>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    8052252 <fchmod@plt+0x80a2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8052248 <fchmod@plt+0x8098>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049db0 <strlen@plt>
cmp    $0x1,%eax
jbe    805229f <fchmod@plt+0x80ef>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     80522a8 <fchmod@plt+0x80f8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    8052295 <fchmod@plt+0x80e5>
nop
jmp    805229f <fchmod@plt+0x80ef>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8052220 <fchmod@plt+0x8070>
cmpb   $0x0,(%eax)
cmovne %eax,%ebx
mov    %ebx,(%esp)
call   8052280 <fchmod@plt+0x80d0>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
movb   $0x0,(%ebx)
setne  %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
jmp    804a070 <posix_fadvise64@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     8052343 <fchmod@plt+0x8193>
mov    %eax,(%esp)
call   8049ea0 <fileno@plt>
mov    0x34(%esp),%edx
movl   $0x0,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <posix_fadvise64@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80499f0 <open64@plt>
mov    %eax,(%esp)
call   8055350 <fchmod@plt+0xb1a0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
test   %esi,%esi
je     8052400 <fchmod@plt+0x8250>
movl   $0x14,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8056e90 <fchmod@plt+0xcce0>
mov    0x5c(%edi),%edx
mov    %eax,(%ebx)
mov    0x58(%edi),%eax
mov    %edx,0x8(%ebx)
mov    0x4(%edi),%edx
mov    %eax,0x4(%ebx)
mov    (%edi),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x10(%ebx)
mov    %eax,0xc(%ebx)
call   8053700 <fchmod@plt+0x9550>
test   %eax,%eax
je     8052408 <fchmod@plt+0x8258>
cmp    %ebx,%eax
je     8052400 <fchmod@plt+0x8250>
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80539c0 <fchmod@plt+0x9810>
lea    0x0(%esi),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x38,%esp
mov    0x40(%esp),%ecx
mov    0x48(%esp),%ebx
test   %ecx,%ecx
je     805245a <fchmod@plt+0x82aa>
mov    0x44(%esp),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x1c(%esp)
mov    0x58(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0x4(%ebx),%edx
mov    %eax,0x20(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8052ea0 <fchmod@plt+0x8cf0>
test   %eax,%eax
setne  %al
add    $0x38,%esp
pop    %ebx
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%edx
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     80524d8 <fchmod@plt+0x8328>
cmp    $0x4000,%eax
movl   $0x5,0x8(%esp)
je     8052530 <fchmod@plt+0x8380>
cmp    $0x6000,%eax
je     8052548 <fchmod@plt+0x8398>
cmp    $0x2000,%eax
je     8052568 <fchmod@plt+0x83b8>
cmp    $0x1000,%eax
je     8052588 <fchmod@plt+0x83d8>
cmp    $0xa000,%eax
je     80525a8 <fchmod@plt+0x83f8>
cmp    $0xc000,%eax
je     8052518 <fchmod@plt+0x8368>
movl   $0x805f84e,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%edx),%eax
or     0x2c(%edx),%eax
movl   $0x5,0x8(%esp)
jne    8052500 <fchmod@plt+0x8350>
movl   $0x805f7ea,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
add    $0x1c,%esp
ret
movl   $0x805f7fd,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
add    $0x1c,%esp
ret
movl   $0x805f847,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    80524d0 <fchmod@plt+0x8320>
xchg   %ax,%ax
movl   $0x805de32,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    80524d0 <fchmod@plt+0x8320>
xchg   %ax,%ax
movl   $0x805f80a,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    80524d0 <fchmod@plt+0x8320>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805f81d,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    80524d0 <fchmod@plt+0x8320>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805f834,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    80524d0 <fchmod@plt+0x8320>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805f839,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
jmp    80524d0 <fchmod@plt+0x8320>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %eax,%ecx
and    $0xf000,%ecx
cmp    $0x8000,%ecx
je     8052758 <fchmod@plt+0x85a8>
cmp    $0x4000,%ecx
je     8052768 <fchmod@plt+0x85b8>
cmp    $0x6000,%ecx
je     8052778 <fchmod@plt+0x85c8>
cmp    $0x2000,%ecx
je     8052748 <fchmod@plt+0x8598>
cmp    $0xa000,%ecx
je     8052788 <fchmod@plt+0x85d8>
cmp    $0x1000,%ecx
je     8052798 <fchmod@plt+0x85e8>
cmp    $0xc000,%ecx
mov    $0x73,%ebx
mov    $0x3f,%ecx
cmovne %ecx,%ebx
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
mov    %bl,(%edx)
je     8052738 <fchmod@plt+0x8588>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     8052730 <fchmod@plt+0x8580>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x7(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x8(%edx)
je     8052710 <fchmod@plt+0x8560>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x9(%edx)
movb   $0x20,0xa(%edx)
movb   $0x0,0xb(%edx)
pop    %ebx
ret
lea    0x0(%esi),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x9(%edx)
movb   $0x20,0xa(%edx)
movb   $0x0,0xb(%edx)
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80526c1 <fchmod@plt+0x8511>
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    8052683 <fchmod@plt+0x84d3>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x63,%ebx
jmp    805263c <fchmod@plt+0x848c>
lea    0x0(%esi),%esi
mov    $0x2d,%ebx
jmp    805263c <fchmod@plt+0x848c>
lea    0x0(%esi),%esi
mov    $0x64,%ebx
jmp    805263c <fchmod@plt+0x848c>
lea    0x0(%esi),%esi
mov    $0x62,%ebx
jmp    805263c <fchmod@plt+0x848c>
lea    0x0(%esi),%esi
mov    $0x6c,%ebx
jmp    805263c <fchmod@plt+0x848c>
lea    0x0(%esi),%esi
mov    $0x70,%ebx
jmp    805263c <fchmod@plt+0x848c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x4(%esp)
jmp    80525d0 <fchmod@plt+0x8420>
sub    $0x1c,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80527f0 <fchmod@plt+0x8640>
test   %eax,%eax
je     80527e7 <fchmod@plt+0x8637>
add    $0x1c,%esp
ret
call   8056ec0 <fchmod@plt+0xcd10>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8052280 <fchmod@plt+0x80d0>
mov    %ebx,%ebp
sub    0x30(%esp),%ebp
add    %eax,%ebp
test   %eax,%eax
je     8052828 <fchmod@plt+0x8678>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x34(%esp),%edi
cmpb   $0x2f,(%edi)
je     80528b0 <fchmod@plt+0x8700>
mov    %edi,(%esp)
call   8049db0 <strlen@plt>
mov    %eax,%edx
mov    %eax,0xc(%esp)
lea    0x1(%ebp,%esi,1),%eax
add    %edx,%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80528d0 <fchmod@plt+0x8720>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049f00 <mempcpy@plt>
add    %eax,%esi
movb   $0x2f,(%eax)
mov    0x38(%esp),%eax
test   %eax,%eax
je     805288d <fchmod@plt+0x86dd>
mov    0x34(%esp),%eax
mov    %esi,%ecx
cmpb   $0x2f,(%eax)
sete   %al
movzbl %al,%eax
sub    %eax,%ecx
mov    %ecx,%eax
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049f00 <mempcpy@plt>
movb   $0x0,(%eax)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    8052831 <fchmod@plt+0x8681>
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    8052831 <fchmod@plt+0x8681>
jmp    80528b0 <fchmod@plt+0x8700>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80528a6 <fchmod@plt+0x86f6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
test   %ebx,%ebx
jne    805290c <fchmod@plt+0x875c>
jmp    8052921 <fchmod@plt+0x8771>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     8052930 <fchmod@plt+0x8780>
add    %eax,%esi
add    %eax,%ebp
sub    %eax,%ebx
je     8052921 <fchmod@plt+0x8771>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8054f70 <fchmod@plt+0xadc0>
cmp    $0xffffffff,%eax
jne    8052900 <fchmod@plt+0x8750>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
movl   $0x1c,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     80529c6 <fchmod@plt+0x8816>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    80529bf <fchmod@plt+0x880f>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     80529b0 <fchmod@plt+0x8800>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805299d <fchmod@plt+0x87ed>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     80529b0 <fchmod@plt+0x8800>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     8052990 <fchmod@plt+0x87e0>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    80529b8 <fchmod@plt+0x8808>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    8052968 <fchmod@plt+0x87b8>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    80529a6 <fchmod@plt+0x87f6>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    805295e <fchmod@plt+0x87ae>
jmp    80529b8 <fchmod@plt+0x8808>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ebx)
cmp    0x8(%ebx),%eax
jae    8052a22 <fchmod@plt+0x8872>
mov    (%ebx),%edx
add    $0x18,%esp
pop    %ebx
lea    (%edx,%eax,8),%eax
ret
call   804a0c0 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
call   8052a00 <fchmod@plt+0x8850>
mov    0xc(%esp),%ecx
mov    %eax,%ebx
mov    %eax,(%ecx)
mov    (%eax),%eax
test   %eax,%eax
je     8052ab6 <fchmod@plt+0x8906>
cmp    %eax,%edi
je     8052a6a <fchmod@plt+0x88ba>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     8052aaf <fchmod@plt+0x88ff>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     8052a90 <fchmod@plt+0x88e0>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     8052ae8 <fchmod@plt+0x8938>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edx),%eax
cmp    %edi,%eax
je     8052ac5 <fchmod@plt+0x8915>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    8052ac0 <fchmod@plt+0x8910>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    8052a98 <fchmod@plt+0x88e8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     8052a90 <fchmod@plt+0x88e0>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    8052a90 <fchmod@plt+0x88e0>
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x805f8c8,%edx
je     8052b98 <fchmod@plt+0x89e8>
flds   0x8(%edx)
flds   0x805f8dc
fxch   %st(1)
fucomi %st(1),%st
jbe    8052b58 <fchmod@plt+0x89a8>
flds   0x805f8e0
fucomip %st(1),%st
jbe    8052b60 <fchmod@plt+0x89b0>
flds   0xc(%edx)
flds   0x805f8e4
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    8052b68 <fchmod@plt+0x89b8>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     8052b70 <fchmod@plt+0x89c0>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    8052b78 <fchmod@plt+0x89c8>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     8052b80 <fchmod@plt+0x89d0>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    8052b88 <fchmod@plt+0x89d8>
jmp    8052b9d <fchmod@plt+0x89ed>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    8052b88 <fchmod@plt+0x89d8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    8052b88 <fchmod@plt+0x89d8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    8052b88 <fchmod@plt+0x89d8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8052b88 <fchmod@plt+0x89d8>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8052b88 <fchmod@plt+0x89d8>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805f8c8,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
cmp    0x4(%edx),%edi
mov    %edx,0x4(%esp)
mov    %cl,0xb(%esp)
jae    8052c24 <fchmod@plt+0x8a74>
mov    (%edi),%ebx
test   %ebx,%ebx
je     8052c18 <fchmod@plt+0x8a68>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
jne    8052bd7 <fchmod@plt+0x8a27>
jmp    8052c0a <fchmod@plt+0x8a5a>
nop
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebp)
mov    %ebp,0x4(%eax)
je     8052c08 <fchmod@plt+0x8a58>
mov    %edx,%ebp
mov    0x0(%ebp),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   8052a00 <fchmod@plt+0x8850>
mov    0x4(%ebp),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
jne    8052bc8 <fchmod@plt+0x8a18>
mov    %ebx,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,0x0(%ebp)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebp)
mov    %ebp,0x24(%esi)
jne    8052bd5 <fchmod@plt+0x8a25>
xchg   %ax,%ax
mov    (%edi),%ebx
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     8052c38 <fchmod@plt+0x8a88>
mov    0x4(%esp),%eax
add    $0x8,%edi
cmp    %edi,0x4(%eax)
ja     8052bb8 <fchmod@plt+0x8a08>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %esi,%eax
call   8052a00 <fchmod@plt+0x8850>
mov    %eax,%edx
mov    (%eax),%eax
test   %eax,%eax
je     8052c82 <fchmod@plt+0x8ad2>
mov    0x24(%esi),%eax
test   %eax,%eax
je     8052c8a <fchmod@plt+0x8ada>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    0x4(%edx),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%esp),%eax
cmp    %edi,0x4(%eax)
ja     8052bb8 <fchmod@plt+0x8a08>
jmp    8052c24 <fchmod@plt+0x8a74>
mov    %ebx,(%edx)
addl   $0x1,0xc(%esi)
jmp    8052c61 <fchmod@plt+0x8ab1>
movl   $0x8,(%esp)
mov    %edx,0xc(%esp)
call   8049c90 <malloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    8052c56 <fchmod@plt+0x8aa6>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    8052d26 <fchmod@plt+0x8b76>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     8052d1f <fchmod@plt+0x8b6f>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     8052d1a <fchmod@plt+0x8b6a>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    8052d10 <fchmod@plt+0x8b60>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     8052cf8 <fchmod@plt+0x8b48>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    8052d71 <fchmod@plt+0x8bc1>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     8052d6a <fchmod@plt+0x8bba>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     8052d6a <fchmod@plt+0x8bba>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8052d60 <fchmod@plt+0x8bb0>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     8052d48 <fchmod@plt+0x8b98>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     8052d7c <fchmod@plt+0x8bcc>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    8052dee <fchmod@plt+0x8c3e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     8052de7 <fchmod@plt+0x8c37>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     8052de2 <fchmod@plt+0x8c32>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8052dd8 <fchmod@plt+0x8c28>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     8052dc0 <fchmod@plt+0x8c10>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x805f859,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   804a050 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x805f871,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a050 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x805f8a4,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x805f8e8
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   804a050 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x805f889,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a050 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   8052a00 <fchmod@plt+0x8850>
mov    (%eax),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    8052eca <fchmod@plt+0x8d1a>
jmp    8052ee3 <fchmod@plt+0x8d33>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
cmp    %ecx,%esi
je     8052ef2 <fchmod@plt+0x8d42>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    8052ef0 <fchmod@plt+0x8d40>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8052ec8 <fchmod@plt+0x8d18>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
add    $0x10,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     8052f31 <fchmod@plt+0x8d81>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     8052f27 <fchmod@plt+0x8d77>
jmp    8052f37 <fchmod@plt+0x8d87>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    8052f37 <fchmod@plt+0x8d87>
mov    (%edx),%eax
test   %eax,%eax
je     8052f20 <fchmod@plt+0x8d70>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   804a0c0 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   8052a00 <fchmod@plt+0x8850>
mov    %eax,%ebx
mov    %eax,%ecx
jmp    8052f67 <fchmod@plt+0x8db7>
lea    0x0(%esi),%esi
mov    0x4(%ecx),%ecx
test   %ecx,%ecx
je     8052f72 <fchmod@plt+0x8dc2>
cmp    %esi,(%ecx)
jne    8052f60 <fchmod@plt+0x8db0>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    8052f8b <fchmod@plt+0x8ddb>
mov    0x4(%edi),%edx
jmp    8052f7e <fchmod@plt+0x8dce>
nop
mov    (%ebx),%eax
test   %eax,%eax
jne    8052f87 <fchmod@plt+0x8dd7>
add    $0x8,%ebx
cmp    %edx,%ebx
jb     8052f78 <fchmod@plt+0x8dc8>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
pop    %ebx
mov    (%eax),%eax
pop    %esi
pop    %edi
ret
jmp    8052fa0 <fchmod@plt+0x8df0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    8052ff8 <fchmod@plt+0x8e48>
mov    (%edi),%edx
test   %edx,%edx
je     8052fec <fchmod@plt+0x8e3c>
cmp    %eax,%ebx
jbe    8052ff8 <fchmod@plt+0x8e48>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     8052fec <fchmod@plt+0x8e3c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     8052ff8 <fchmod@plt+0x8e48>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    8052fd8 <fchmod@plt+0x8e28>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     8052fba <fchmod@plt+0x8e0a>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    8053068 <fchmod@plt+0x8eb8>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805303b <fchmod@plt+0x8e8b>
jmp    8053052 <fchmod@plt+0x8ea2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     8053068 <fchmod@plt+0x8eb8>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    8053038 <fchmod@plt+0x8e88>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     8053024 <fchmod@plt+0x8e74>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     80530b2 <fchmod@plt+0x8f02>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    8053098 <fchmod@plt+0x8ee8>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x80529e0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x80529f0,%eax
cmove  %eax,%esi
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8053228 <fchmod@plt+0x9078>
test   %ebx,%ebx
mov    $0x805f8c8,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   8052af0 <fchmod@plt+0x8940>
test   %al,%al
je     8053211 <fchmod@plt+0x9061>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    80531a0 <fchmod@plt+0x8ff0>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x805f8ec
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    8053208 <fchmod@plt+0x9058>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x40(%esp)
jmp    80531a2 <fchmod@plt+0x8ff2>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   8052950 <fchmod@plt+0x87a0>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     805320a <fchmod@plt+0x905a>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     8053211 <fchmod@plt+0x9061>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   804a190 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8053211 <fchmod@plt+0x9061>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   8049a60 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    80531fc <fchmod@plt+0x904c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    80532a6 <fchmod@plt+0x90f6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     805329e <fchmod@plt+0x90ee>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    8053262 <fchmod@plt+0x90b2>
jmp    8053286 <fchmod@plt+0x90d6>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     8053270 <fchmod@plt+0x90c0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    8053260 <fchmod@plt+0x90b0>
test   %edx,%edx
je     8053291 <fchmod@plt+0x90e1>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     8053248 <fchmod@plt+0x9098>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     80532d8 <fchmod@plt+0x9128>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    805334a <fchmod@plt+0x919a>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    8053311 <fchmod@plt+0x9161>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    80532fa <fchmod@plt+0x914a>
jmp    8053309 <fchmod@plt+0x9159>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    80532f8 <fchmod@plt+0x9148>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     80532e8 <fchmod@plt+0x9138>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    8053322 <fchmod@plt+0x9172>
jmp    8053331 <fchmod@plt+0x9181>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    8053320 <fchmod@plt+0x9170>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049a60 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    8053311 <fchmod@plt+0x9161>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    805336a <fchmod@plt+0x91ba>
jmp    8053377 <fchmod@plt+0x91c7>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8053368 <fchmod@plt+0x91b8>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     8053358 <fchmod@plt+0x91a8>
jmp    80532db <fchmod@plt+0x912b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    80533f0 <fchmod@plt+0x9240>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x805f8ec
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    80534d0 <fchmod@plt+0x9320>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,%eax
jmp    80533f2 <fchmod@plt+0x9242>
fstp   %st(0)
call   8052950 <fchmod@plt+0x87a0>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     80534d2 <fchmod@plt+0x9322>
cmp    %ebx,0x8(%esi)
je     80534c0 <fchmod@plt+0x9310>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   804a190 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     80534d2 <fchmod@plt+0x9322>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   8052ba0 <fchmod@plt+0x89f0>
test   %al,%al
mov    %eax,%ebx
jne    80534e0 <fchmod@plt+0x9330>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   8052ba0 <fchmod@plt+0x89f0>
test   %al,%al
je     8053515 <fchmod@plt+0x9365>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   8052ba0 <fchmod@plt+0x89f0>
test   %al,%al
je     8053515 <fchmod@plt+0x9365>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebx
test   %edi,%edi
je     80536a8 <fchmod@plt+0x94f8>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   8052a30 <fchmod@plt+0x8880>
test   %eax,%eax
je     8053568 <fchmod@plt+0x93b8>
test   %ebx,%ebx
je     80535e8 <fchmod@plt+0x9438>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    80535a8 <fchmod@plt+0x93f8>
jmp    80535f8 <fchmod@plt+0x9448>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     80536b0 <fchmod@plt+0x9500>
mov    0x24(%esi),%eax
test   %eax,%eax
je     80536c4 <fchmod@plt+0x9514>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esi),%eax
call   8052af0 <fchmod@plt+0x8940>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    80535a0 <fchmod@plt+0x93f0>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    8053648 <fchmod@plt+0x9498>
fmulp  %st,%st(1)
jmp    805364a <fchmod@plt+0x949a>
lea    0x0(%esi),%esi
fstp   %st(1)
flds   0x805f8ec
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    80536da <fchmod@plt+0x952a>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   8053390 <fchmod@plt+0x91e0>
test   %al,%al
je     80536dc <fchmod@plt+0x952c>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   8052a30 <fchmod@plt+0x8880>
test   %eax,%eax
je     80535a8 <fchmod@plt+0x93f8>
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    805355e <fchmod@plt+0x93ae>
movl   $0x8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
jne    80535c7 <fchmod@plt+0x9417>
jmp    80536dc <fchmod@plt+0x952c>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    805355e <fchmod@plt+0x93ae>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8053520 <fchmod@plt+0x9370>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053520 <fchmod@plt+0x9370>
cmp    $0xffffffff,%eax
je     8053738 <fchmod@plt+0x9588>
test   %eax,%eax
mov    %ebx,%eax
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805372e <fchmod@plt+0x957e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   8052a30 <fchmod@plt+0x8880>
test   %eax,%eax
mov    %eax,%edi
je     8053878 <fchmod@plt+0x96c8>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    8053788 <fchmod@plt+0x95d8>
jmp    8053798 <fchmod@plt+0x95e8>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    8053788 <fchmod@plt+0x95d8>
lea    0x14(%esi),%eax
call   8052af0 <fchmod@plt+0x8940>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    8053780 <fchmod@plt+0x95d0>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     8053880 <fchmod@plt+0x96d0>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   8053390 <fchmod@plt+0x91e0>
test   %al,%al
jne    8053788 <fchmod@plt+0x95d8>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    805385a <fchmod@plt+0x96aa>
lea    0x0(%esi,%eiz,1),%esi
jmp    8053869 <fchmod@plt+0x96b9>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    8053858 <fchmod@plt+0x96a8>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    8053788 <fchmod@plt+0x95d8>
nop
xor    %ebp,%ebp
jmp    8053788 <fchmod@plt+0x95d8>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    805382f <fchmod@plt+0x967f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   805a6d0 <fts_children+0x11c0>
mov    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805db40 <fts_children+0x4630>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805db40 <fts_children+0x4630>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
mov    0x8(%esp),%ecx
mov    0xc(%esp),%ebx
mov    0x4(%ecx),%eax
mov    0x8(%ecx),%edx
xor    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
or     %eax,%edx
je     8053940 <fchmod@plt+0x9790>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%edx
xor    0x10(%ebx),%edx
xor    0xc(%ebx),%eax
or     %eax,%edx
jne    8053939 <fchmod@plt+0x9789>
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
mov    (%ecx),%eax
mov    %eax,0x8(%esp)
pop    %ebx
jmp    8054fd0 <fchmod@plt+0xae20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%ecx
xor    0x8(%esi),%ecx
xor    0x4(%esi),%edx
or     %edx,%ecx
je     8053998 <fchmod@plt+0x97e8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x10(%ebx),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
jne    805398f <fchmod@plt+0x97df>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
sete   %al
jmp    805398f <fchmod@plt+0x97df>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a60 <free@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     8053a63 <fchmod@plt+0x98b3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049f80 <strrchr@plt>
test   %eax,%eax
je     8053a4f <fchmod@plt+0x989f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    8053a4f <fchmod@plt+0x989f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x805f928,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    8053a4f <fchmod@plt+0x989f>
mov    $0x3,%ecx
mov    $0x805f930,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    8053a4f <fchmod@plt+0x989f>
lea    0x4(%eax),%ebx
mov    %ebx,0x80652a0
mov    %ebx,0x806573c
mov    %ebx,0x80652c0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80652a4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805f8f0,(%esp)
mov    %eax,0xc(%esp)
call   8049bd0 <fwrite@plt>
call   804a0c0 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     8053ab1 <fchmod@plt+0x9901>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     8053af0 <fchmod@plt+0x9940>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   805a7c0 <fts_children+0x12b0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    8053b58 <fchmod@plt+0x99a8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    8053b40 <fchmod@plt+0x9990>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x2d,0x3(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x38,0x4(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x0,0x5(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x60,(%esi)
mov    $0x805f941,%eax
mov    $0x805f934,%edx
cmovne %edx,%eax
jmp    8053ae8 <fchmod@plt+0x9938>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805f93b,%eax
cmp    $0x7,%edi
mov    $0x806018c,%edx
cmovne %edx,%eax
jmp    8053ae8 <fchmod@plt+0x9938>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    8053b40 <fchmod@plt+0x9990>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x31,0x2(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x38,0x3(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x30,0x4(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x33,0x5(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x30,0x6(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x0,0x7(%eax)
jne    8053b40 <fchmod@plt+0x9990>
cmpb   $0x60,(%esi)
mov    $0x805f93d,%eax
mov    $0x805f938,%edx
cmovne %edx,%eax
jmp    8053ae8 <fchmod@plt+0x9938>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8049bf0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     8054488 <fchmod@plt+0xa2d8>
mov    0x94(%esp),%eax
jmp    *0x805f980(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     8054290 <fchmod@plt+0xa0e0>
test   %al,%al
je     80542a3 <fchmod@plt+0xa0f3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     8054278 <fchmod@plt+0xa0c8>
cmpb   $0x0,0x58(%esp)
je     8054278 <fchmod@plt+0xa0c8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     8054278 <fchmod@plt+0xa0c8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049ad0 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    8054310 <fchmod@plt+0xa160>
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     8054028 <fchmod@plt+0x9e78>
movzbl %bl,%eax
jmp    *0x805f9a4(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     8053e68 <fchmod@plt+0x9cb8>
cmpl   $0x3,0x94(%esp)
jne    8053dc8 <fchmod@plt+0x9c18>
testb  $0x4,0x98(%esp)
je     8053dc8 <fchmod@plt+0x9c18>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    8053dc8 <fchmod@plt+0x9c18>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    8053dc8 <fchmod@plt+0x9c18>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     8053dc8 <fchmod@plt+0x9c18>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     8053dc8 <fchmod@plt+0x9c18>
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
cmp    %edi,%ebp
jae    8053d8e <fchmod@plt+0x9bde>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    8053d9e <fchmod@plt+0x9bee>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8053dae <fchmod@plt+0x9bfe>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    8053dbe <fchmod@plt+0x9c0e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     8053dd6 <fchmod@plt+0x9c26>
cmpb   $0x0,0x5a(%esp)
jne    8053dfb <fchmod@plt+0x9c4b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     8053dfb <fchmod@plt+0x9c4b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    8053e02 <fchmod@plt+0x9c52>
cmpb   $0x0,0x24(%esp)
je     8053e18 <fchmod@plt+0x9c68>
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
cmp    %edi,%ebp
jae    8053e15 <fchmod@plt+0x9c65>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    8053e26 <fchmod@plt+0x9c76>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    8053c68 <fchmod@plt+0x9ab8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     8054478 <fchmod@plt+0xa2c8>
test   %al,%al
jne    8053dc8 <fchmod@plt+0x9c18>
test   %esi,%esi
jne    8053dc8 <fchmod@plt+0x9c18>
cmpl   $0x2,0x94(%esp)
jne    8053dc8 <fchmod@plt+0x9c18>
nop
cmpb   $0x0,0x2f(%esp)
je     8053dc8 <fchmod@plt+0x9c18>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8053bb0 <fchmod@plt+0x9a00>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    80545a2 <fchmod@plt+0xa3f2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     80544eb <fchmod@plt+0xa33b>
cmpb   $0x0,0x58(%esp)
je     8053dc8 <fchmod@plt+0x9c18>
mov    %eax,%ebx
jmp    8053e02 <fchmod@plt+0x9c52>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    8053ef3 <fchmod@plt+0x9d43>
nop
mov    $0x66,%eax
jmp    8053ef3 <fchmod@plt+0x9d43>
nop
mov    $0x76,%eax
jmp    8053ef3 <fchmod@plt+0x9d43>
nop
mov    $0x6e,%eax
jmp    8053ee5 <fchmod@plt+0x9d35>
nop
mov    $0x74,%eax
jmp    8053ee5 <fchmod@plt+0x9d35>
nop
cmpb   $0x0,0x58(%esp)
je     8054460 <fchmod@plt+0xa2b0>
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
cmp    %edi,%ebp
jae    8053f52 <fchmod@plt+0x9da2>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    8053f98 <fchmod@plt+0x9de8>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     8053f98 <fchmod@plt+0x9de8>
cmp    %eax,%edi
ja     8054500 <fchmod@plt+0xa350>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8053f8e <fchmod@plt+0x9dde>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    8053dd6 <fchmod@plt+0x9c26>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    8053ef3 <fchmod@plt+0x9d43>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     8053fce <fchmod@plt+0x9e1e>
cmpb   $0x0,0x2f(%esp)
je     8053fce <fchmod@plt+0x9e1e>
test   %dl,%dl
jne    8053e18 <fchmod@plt+0x9c68>
mov    %ebx,%eax
jmp    8053ee5 <fchmod@plt+0x9d35>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    8053dc8 <fchmod@plt+0x9c18>
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
cmp    %edi,%ebp
jae    8053ffd <fchmod@plt+0x9e4d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    805400d <fchmod@plt+0x9e5d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    805401d <fchmod@plt+0x9e6d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    8053dc8 <fchmod@plt+0x9c18>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    8054320 <fchmod@plt+0xa170>
call   804a170 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     8053dc8 <fchmod@plt+0x9c18>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    80540d4 <fchmod@plt+0x9f24>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
cmp    %edi,%ebp
jae    8054083 <fchmod@plt+0x9ed3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    8054096 <fchmod@plt+0x9ee6>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    80540ac <fchmod@plt+0x9efc>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    8053e1b <fchmod@plt+0x9c6b>
cmp    %edi,%ebp
jae    80540c9 <fchmod@plt+0x9f19>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    8054070 <fchmod@plt+0x9ec0>
cmpb   $0x0,0x24(%esp)
je     80540b5 <fchmod@plt+0x9f05>
cmp    %edi,%ebp
jae    80540e7 <fchmod@plt+0x9f37>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    80540b5 <fchmod@plt+0x9f05>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80545a7 <fchmod@plt+0xa3f7>
test   %edi,%edi
je     80544ad <fchmod@plt+0xa2fd>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805f93b,0x3c(%esp)
movb   $0x22,(%eax)
jmp    8053c48 <fchmod@plt+0x9a98>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805f93b,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    8053c48 <fchmod@plt+0x9a98>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    8053c48 <fchmod@plt+0x9a98>
lea    0x0(%esi,%eiz,1),%esi
je     80541bc <fchmod@plt+0xa00c>
mov    0x94(%esp),%edx
mov    $0x805f945,%eax
call   8053ac0 <fchmod@plt+0x9910>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x806018c,%eax
call   8053ac0 <fchmod@plt+0x9910>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    80541ea <fchmod@plt+0xa03a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     80541ea <fchmod@plt+0xa03a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    80541df <fchmod@plt+0xa02f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    80541d8 <fchmod@plt+0xa028>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8049db0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    8053c48 <fchmod@plt+0x9a98>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x806018c,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    8053c48 <fchmod@plt+0x9a98>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80545c3 <fchmod@plt+0xa413>
test   %edi,%edi
je     80544cc <fchmod@plt+0xa31c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x806018c,0x3c(%esp)
movb   $0x27,(%eax)
jmp    8053c48 <fchmod@plt+0x9a98>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    8053d00 <fchmod@plt+0x9b50>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    8053c88 <fchmod@plt+0x9ad8>
test   %ebp,%ebp
jne    80542bc <fchmod@plt+0xa10c>
cmpl   $0x2,0x94(%esp)
jne    80542bc <fchmod@plt+0xa10c>
cmpb   $0x0,0x2f(%esp)
jne    8053e78 <fchmod@plt+0x9cc8>
cmpb   $0x0,0x2f(%esp)
jne    80542f2 <fchmod@plt+0xa142>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     80542f2 <fchmod@plt+0xa142>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     80542f2 <fchmod@plt+0xa142>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    80542e7 <fchmod@plt+0xa137>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    80542e0 <fchmod@plt+0xa130>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    8053ec2 <fchmod@plt+0x9d12>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    8053ec2 <fchmod@plt+0x9d12>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    8053d00 <fchmod@plt+0x9b50>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     805448d <fchmod@plt+0xa2dd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049c30 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805450d <fchmod@plt+0xa35d>
cmp    $0xffffffff,%eax
je     8054528 <fchmod@plt+0xa378>
cmp    $0xfffffffe,%eax
je     8054543 <fchmod@plt+0xa393>
cmpb   $0x0,0x2f(%esp)
je     80543ef <fchmod@plt+0xa23f>
cmpl   $0x2,0x94(%esp)
jne    80543ef <fchmod@plt+0xa23f>
cmp    $0x1,%eax
je     80543ef <fchmod@plt+0xa23f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     80543e8 <fchmod@plt+0xa238>
movzbl %al,%eax
jmp    *0x805fba0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    80543d0 <fchmod@plt+0xa220>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049ba0 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8049a90 <mbsinit@plt>
test   %eax,%eax
je     8054361 <fchmod@plt+0xa1b1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    8054053 <fchmod@plt+0x9ea3>
and    0x58(%esp),%dl
jmp    805405d <fchmod@plt+0x9ead>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    8053e78 <fchmod@plt+0x9cc8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     8053dc8 <fchmod@plt+0x9c18>
add    $0x1,%esi
jmp    8053c68 <fchmod@plt+0x9ab8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    8053e49 <fchmod@plt+0x9c99>
call   804a0c0 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    805433e <fchmod@plt+0xa18e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805f93b,0x3c(%esp)
jmp    8053c48 <fchmod@plt+0x9a98>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x806018c,0x3c(%esp)
jmp    8053c48 <fchmod@plt+0x9a98>
cmpb   $0x0,0x2f(%esp)
je     8053ef3 <fchmod@plt+0x9d43>
jmp    8053e78 <fchmod@plt+0x9cc8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    8053f7e <fchmod@plt+0x9dce>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8054435 <fchmod@plt+0xa285>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8054435 <fchmod@plt+0xa285>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    8054598 <fchmod@plt+0xa3e8>
cmpb   $0x0,(%eax)
je     8054598 <fchmod@plt+0xa3e8>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    8054586 <fchmod@plt+0xa3d6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     8054590 <fchmod@plt+0xa3e0>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     8054580 <fchmod@plt+0xa3d0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    8054435 <fchmod@plt+0xa285>
call   8049b20 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805f93b,0x3c(%esp)
jmp    8053c48 <fchmod@plt+0x9a98>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x806018c,0x3c(%esp)
jmp    8053c48 <fchmod@plt+0x9a98>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049e80 <__errno_location@plt>
test   %edi,%edi
mov    0x8065270,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     805476c <fchmod@plt+0xa5bc>
cmp    0x806527c,%edi
jb     8054678 <fchmod@plt+0xa4c8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     8054771 <fchmod@plt+0xa5c1>
cmp    $0x8065274,%esi
lea    0x0(,%ebp,8),%eax
je     8054740 <fchmod@plt+0xa590>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8056cc0 <fchmod@plt+0xcb10>
mov    %eax,%esi
mov    %eax,0x8065270
mov    0x806527c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %ebp,0x806527c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8053bb0 <fchmod@plt+0x9a00>
cmp    %eax,%ebp
ja     8054727 <fchmod@plt+0xa577>
lea    0x1(%eax),%ebp
cmp    $0x8065740,%esi
mov    %ebp,(%edi)
je     80546e2 <fchmod@plt+0xa532>
mov    %esi,(%esp)
call   8049a60 <free@plt>
mov    %ebp,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8053bb0 <fchmod@plt+0x9a00>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8056cc0 <fchmod@plt+0xcb10>
mov    0x8065278,%edx
mov    %eax,%esi
mov    %eax,0x8065270
mov    0x8065274,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805464f <fchmod@plt+0xa49f>
call   804a0c0 <abort@plt>
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049e80 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8065840,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   8056e60 <fchmod@plt+0xccb0>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8065840,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    80547e0 <fchmod@plt+0xa630>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8065840,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8065840,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8065840,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8065840,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     8054893 <fchmod@plt+0xa6e3>
test   %ecx,%ecx
je     8054893 <fchmod@plt+0xa6e3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   804a0c0 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8065840,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8053bb0 <fchmod@plt+0x9a00>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8065840,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8053bb0 <fchmod@plt+0x9a00>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   8053bb0 <fchmod@plt+0x9a00>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     80549c8 <fchmod@plt+0xa818>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8054900 <fchmod@plt+0xa750>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x806527c,%edi
mov    0x8065270,%esi
cmp    $0x1,%edi
jbe    8054a43 <fchmod@plt+0xa893>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
cmp    %edi,%ebx
jne    8054a30 <fchmod@plt+0xa880>
mov    0x4(%esi),%eax
cmp    $0x8065740,%eax
je     8054a69 <fchmod@plt+0xa8b9>
mov    %eax,(%esp)
call   8049a60 <free@plt>
movl   $0x100,0x8065274
00
movl   $0x8065740,0x8065278
08
cmp    $0x8065274,%esi
je     8054a83 <fchmod@plt+0xa8d3>
mov    %esi,(%esp)
call   8049a60 <free@plt>
movl   $0x8065274,0x8065270
08
movl   $0x1,0x806527c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8065840,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8065840,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8065840,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8065840,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8053a90 <fchmod@plt+0x98e0>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   80545e0 <fchmod@plt+0xa430>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8053a90 <fchmod@plt+0x98e0>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   80545e0 <fchmod@plt+0xa430>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8054b20 <fchmod@plt+0xa970>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8054b50 <fchmod@plt+0xa9a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x8065840,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x8065844,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x8065848,%eax
mov    %eax,0x18(%esp)
mov    0x806584c,%eax
mov    %eax,0x1c(%esp)
mov    0x8065850,%eax
mov    %eax,0x20(%esp)
mov    0x8065854,%eax
mov    %eax,0x24(%esp)
mov    0x8065858,%eax
mov    %eax,0x28(%esp)
mov    0x806585c,%eax
mov    %eax,0x2c(%esp)
mov    0x8065860,%eax
mov    %eax,0x30(%esp)
mov    0x8065864,%eax
mov    %eax,0x34(%esp)
mov    0x8065868,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x806586c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   80545e0 <fchmod@plt+0xa430>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8054be0 <fchmod@plt+0xaa30>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8054be0 <fchmod@plt+0xaa30>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8054be0 <fchmod@plt+0xaa30>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x8065840,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x8065844,%eax
mov    %eax,0x14(%esp)
mov    0x8065848,%eax
mov    %eax,0x18(%esp)
mov    0x806584c,%eax
mov    %eax,0x1c(%esp)
mov    0x8065850,%eax
mov    %eax,0x20(%esp)
mov    0x8065854,%eax
mov    %eax,0x24(%esp)
mov    0x8065858,%eax
mov    %eax,0x28(%esp)
mov    0x806585c,%eax
mov    %eax,0x2c(%esp)
mov    0x8065860,%eax
mov    %eax,0x30(%esp)
mov    0x8065864,%eax
mov    %eax,0x34(%esp)
mov    0x8065868,%eax
mov    %eax,0x38(%esp)
mov    0x806586c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8054860 <fchmod@plt+0xa6b0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   80545e0 <fchmod@plt+0xa430>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8054d20 <fchmod@plt+0xab70>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8054d20 <fchmod@plt+0xab70>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8054d20 <fchmod@plt+0xab70>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8065240,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8065240,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8065240,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8065240,0x4(%esp)
jmp    80545e0 <fchmod@plt+0xa430>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x78,%esp
lea    0x10(%esp),%eax
mov    0x80(%esp),%ebx
mov    %eax,0x8(%esp)
movl   $0x805f92e,0x4(%esp)
movl   $0x3,(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    8054f60 <fchmod@plt+0xadb0>
mov    0x68(%esp),%eax
mov    0x6c(%esp),%edx
mov    %eax,(%ebx)
mov    0x10(%esp),%eax
mov    %edx,0x4(%ebx)
mov    0x14(%esp),%edx
mov    %eax,0x8(%ebx)
mov    %ebx,%eax
mov    %edx,0xc(%ebx)
add    $0x78,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
add    $0x78,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049df0 <write@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8054fc0 <fchmod@plt+0xae10>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     8054f88 <fchmod@plt+0xadd8>
cmp    $0x16,%edx
jne    8054fc0 <fchmod@plt+0xae10>
cmp    $0x7fffe000,%ebx
jbe    8054fc0 <fchmod@plt+0xae10>
mov    $0x7fffe000,%ebx
jmp    8054f88 <fchmod@plt+0xadd8>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   8052220 <fchmod@plt+0x8070>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8052280 <fchmod@plt+0x80d0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   8052280 <fchmod@plt+0x80d0>
cmp    %eax,%ebp
je     8055028 <fchmod@plt+0xae78>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049ad0 <memcmp@plt>
test   %eax,%eax
jne    8055014 <fchmod@plt+0xae64>
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x7f90>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   8052140 <fchmod@plt+0x7f90>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
je     805509d <fchmod@plt+0xaeed>
call   8049e80 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8060091,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
jne    80550f8 <fchmod@plt+0xaf48>
mov    0x68(%esp),%ecx
xor    %edi,%edi
mov    0x6c(%esp),%eax
xor    0xcc(%esp),%eax
xor    0xc8(%esp),%ecx
or     %ecx,%eax
je     8055120 <fchmod@plt+0xaf70>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    %esi,(%esp)
call   8049a60 <free@plt>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x8060091,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
jmp    80550b9 <fchmod@plt+0xaf09>
lea    0x0(%esi),%esi
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
xor    0x74(%esp),%eax
xor    0x70(%esp),%edx
or     %eax,%edx
sete   %al
mov    %eax,%edi
jmp    80550d5 <fchmod@plt+0xaf25>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
test   %eax,%eax
je     8055262 <fchmod@plt+0xb0b2>
movl   $0x200,(%esp)
mov    $0x200,%esi
call   8056c50 <fchmod@plt+0xcaa0>
mov    %eax,0x14(%esp)
call   8049e80 <__errno_location@plt>
movl   $0x0,0x10(%esp)
mov    %eax,%edi
jmp    8055187 <fchmod@plt+0xafd7>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x13(%eax,%edx,1)
jne    80551bf <fchmod@plt+0xb00f>
mov    0x40(%esp),%eax
movl   $0x0,(%edi)
mov    %eax,(%esp)
call   804a020 <readdir64@plt>
test   %eax,%eax
je     8055248 <fchmod@plt+0xb098>
xor    %edx,%edx
cmpb   $0x2e,0x13(%eax)
lea    0x13(%eax),%ebp
jne    8055180 <fchmod@plt+0xafd0>
xor    %edx,%edx
cmpb   $0x2e,0x14(%eax)
sete   %dl
add    $0x1,%edx
cmpb   $0x0,0x13(%eax,%edx,1)
je     8055187 <fchmod@plt+0xafd7>
mov    %ebp,(%esp)
call   8049db0 <strlen@plt>
mov    0x10(%esp),%edx
lea    0x1(%eax),%ecx
add    %ecx,%edx
jb     8055274 <fchmod@plt+0xb0c4>
cmp    %esi,%edx
jae    80551e2 <fchmod@plt+0xb032>
jmp    8055218 <fchmod@plt+0xb068>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
lea    (%esi,%esi,1),%ebx
cmp    %ebx,%esi
ja     8055274 <fchmod@plt+0xb0c4>
cmp    %ebx,%edx
nop
jae    80551e0 <fchmod@plt+0xb030>
mov    0x14(%esp),%eax
mov    %ebx,%esi
mov    %ebx,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   8056cc0 <fchmod@plt+0xcb10>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x10(%esp),%eax
add    0x14(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   8049a70 <memcpy@plt>
mov    0x18(%esp),%edx
mov    %edx,0x10(%esp)
jmp    8055187 <fchmod@plt+0xafd7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x10(%esp),%ecx
movb   $0x0,(%eax,%ecx,1)
mov    (%edi),%ebx
test   %ebx,%ebx
jne    8055266 <fchmod@plt+0xb0b6>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    805525a <fchmod@plt+0xb0aa>
mov    %eax,(%esp)
call   8049a60 <free@plt>
xor    %eax,%eax
mov    %ebx,(%edi)
jmp    805525a <fchmod@plt+0xb0aa>
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   8055140 <fchmod@plt+0xaf90>
test   %ebx,%ebx
mov    %eax,%esi
je     80552b0 <fchmod@plt+0xb100>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   804a120 <closedir@plt>
test   %eax,%eax
jne    80552c0 <fchmod@plt+0xb110>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049a60 <free@plt>
mov    %edi,(%esi)
jmp    80552a4 <fchmod@plt+0xb0f4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80520a0 <fchmod@plt+0x7ef0>
add    $0x1c,%esp
jmp    8055280 <fchmod@plt+0xb0d0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049fc0 <fdopendir@plt>
add    $0x1c,%esp
jmp    8055280 <fchmod@plt+0xb0d0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8057180 <fchmod@plt+0xcfd0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     805537f <fchmod@plt+0xb1cf>
mov    %ebx,(%esp)
call   8055320 <fchmod@plt+0xb170>
mov    %eax,%edi
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804a110 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805db40 <fts_children+0x4630>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    (%eax),%edx
mov    0x4(%eax),%eax
xor    0x4(%ecx),%eax
xor    (%ecx),%edx
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf4(%esp),%ebx
mov    0xf8(%esp),%eax
testb  $0x1,0xfc(%esp)
mov    0x4c(%ebx),%edx
mov    0x48(%ebx),%esi
mov    0x48(%eax),%ebp
mov    0x4c(%eax),%edi
mov    %edx,0x1c(%esp)
je     80554c8 <fchmod@plt+0xb318>
cmp    %ebp,%esi
sete   0x20(%esp)
cmp    %edi,%edx
je     8055500 <fchmod@plt+0xb350>
lea    -0x1(%ebp),%eax
mov    $0xffffffff,%ecx
cmp    %eax,%esi
jl     80554f0 <fchmod@plt+0xb340>
lea    -0x1(%esi),%eax
mov    $0x1,%ecx
cmp    %eax,%ebp
jl     80554f0 <fchmod@plt+0xb340>
mov    0x8065874,%ebx
test   %ebx,%ebx
je     80559bd <fchmod@plt+0xb80d>
mov    0x8065870,%eax
test   %eax,%eax
je     805593c <fchmod@plt+0xb78c>
mov    0xf4(%esp),%ecx
mov    (%ecx),%edx
mov    0x4(%ecx),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8053700 <fchmod@plt+0x9550>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805551b <fchmod@plt+0xb36b>
cmp    0x8065870,%eax
je     8055965 <fchmod@plt+0xb7b5>
mov    0x8(%eax),%ebx
movzbl 0xc(%eax),%eax
mov    %ebx,0x24(%esp)
test   %al,%al
je     8055578 <fchmod@plt+0xb3c8>
mov    0x24(%esp),%ebx
xor    %ecx,%ecx
mov    %edi,%eax
cmp    $0x77359400,%ebx
sete   %cl
cltd
idiv   %ebx
not    %ecx
and    %ecx,%ebp
sub    %edx,%edi
lea    0x0(%esi),%esi
cmp    %esi,%ebp
mov    $0xffffffff,%ecx
jg     80554f0 <fchmod@plt+0xb340>
mov    $0x1,%ecx
jl     80554f0 <fchmod@plt+0xb340>
mov    0x1c(%esp),%ebx
xor    %eax,%eax
mov    $0xffffffff,%ecx
cmp    %ebx,%edi
setl   %al
cmovle %eax,%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xdc,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ecx,%ecx
cmpb   $0x0,0x20(%esp)
jne    80554f0 <fchmod@plt+0xb340>
lea    -0x1(%ebp),%eax
mov    $0xffffffff,%ecx
cmp    %eax,%esi
jge    8055435 <fchmod@plt+0xb285>
jmp    80554f0 <fchmod@plt+0xb340>
mov    0x8065874,%eax
test   %eax,%eax
je     8055983 <fchmod@plt+0xb7d3>
mov    0xf4(%esp),%ebx
mov    (%ebx),%ecx
mov    0x4(%ebx),%ebx
mov    %eax,(%esp)
mov    %ecx,0x50(%esp)
mov    %ebx,0x54(%esp)
lea    0x50(%esp),%ebx
mov    %ebx,0x4(%esp)
call   8052ea0 <fchmod@plt+0x8cf0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
jne    8055495 <fchmod@plt+0xb2e5>
movl   $0x77359400,0x58(%esp)
movb   $0x0,0x5c(%esp)
movl   $0x77359400,0x24(%esp)
mov    %ebx,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0xf4(%esp),%eax
mov    0xf4(%esp),%ebx
mov    0x40(%eax),%eax
mov    0x54(%ebx),%ebx
mov    %eax,0x44(%esp)
mov    0xf4(%esp),%eax
mov    0x50(%eax),%eax
mov    %eax,0x48(%esp)
mov    0xf4(%esp),%eax
mov    0x44(%eax),%eax
mov    %eax,0x30(%esp)
mov    $0x66666667,%eax
imul   %ebx
mov    %ebx,%eax
sar    $0x1f,%eax
mov    %edx,%ecx
sar    $0x2,%ecx
sub    %eax,%ecx
lea    (%ecx,%ecx,4),%eax
add    %eax,%eax
sub    %eax,%ebx
mov    $0x66666667,%eax
imull  0x30(%esp)
mov    %ebx,0x34(%esp)
mov    %edx,%ebx
mov    0x30(%esp),%edx
sar    $0x2,%ebx
mov    %edx,%eax
sar    $0x1f,%eax
sub    %eax,%ebx
lea    (%ebx,%ebx,4),%eax
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
or     %edx,0x34(%esp)
mov    0x1c(%esp),%edx
mov    %edx,0x38(%esp)
imul   %edx
mov    %edx,0x28(%esp)
mov    0x38(%esp),%edx
sarl   $0x2,0x28(%esp)
mov    %edx,%eax
sar    $0x1f,%eax
sub    %eax,0x28(%esp)
mov    0x28(%esp),%eax
lea    (%eax,%eax,4),%eax
add    %eax,%eax
sub    %eax,%edx
mov    %edx,%eax
or     0x34(%esp),%eax
mov    %eax,0x3c(%esp)
jne    8055920 <fchmod@plt+0xb770>
cmpl   $0xa,0x24(%esp)
mov    %ecx,%edx
mov    0x28(%esp),%ecx
jle    8055a00 <fchmod@plt+0xb850>
mov    $0x66666667,%eax
mov    %edx,0x34(%esp)
imul   %edx
mov    0x34(%esp),%eax
movl   $0x8,0x28(%esp)
movl   $0xa,0x38(%esp)
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    0x34(%esp),%edx
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
mov    %edx,0x40(%esp)
imul   %ebx
mov    %ebx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ebx,%edx
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
or     %edx,0x40(%esp)
imul   %ecx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ecx,%edx
add    %eax,%eax
sub    %eax,%edx
mov    %edx,%eax
mov    0x40(%esp),%edx
or     %eax,%edx
jne    8055a00 <fchmod@plt+0xb850>
mov    %edi,0x40(%esp)
mov    0x38(%esp),%edi
mov    %esi,0x4c(%esp)
mov    0x34(%esp),%esi
mov    %ebp,0x3c(%esp)
nop
lea    (%edi,%edi,4),%eax
lea    (%eax,%eax,1),%edi
mov    $0x66666667,%eax
imul   %ebx
mov    $0x66666667,%eax
sar    $0x1f,%ebx
mov    %edi,0x34(%esp)
sar    $0x2,%edx
sub    %ebx,%edx
mov    %edx,%ebx
imul   %esi
mov    $0x66666667,%eax
sar    $0x1f,%esi
sar    $0x2,%edx
sub    %esi,%edx
mov    %edx,%esi
imul   %ecx
sar    $0x1f,%ecx
sar    $0x2,%edx
sub    %ecx,%edx
cmp    0x24(%esp),%edi
mov    %edx,%ecx
jge    805598c <fchmod@plt+0xb7dc>
mov    $0x66666667,%eax
mov    %esi,%ebp
imul   %esi
mov    %esi,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
sub    %eax,%ebp
mov    $0x66666667,%eax
imul   %ebx
mov    %ebx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ebx,%edx
add    %eax,%eax
sub    %eax,%edx
mov    $0x66666667,%eax
or     %edx,%ebp
imul   %ecx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
mov    %ecx,%edx
add    %eax,%eax
sub    %eax,%edx
or     %edx,%ebp
jne    805598c <fchmod@plt+0xb7dc>
subl   $0x1,0x28(%esp)
jne    80556d0 <fchmod@plt+0xb520>
mov    0x4c(%esp),%esi
mov    0x44(%esp),%edx
mov    0x40(%esp),%edi
mov    0x3c(%esp),%ebp
or     %esi,%edx
or     0x48(%esp),%edx
and    $0x1,%edx
cmp    $0x1,%edx
sbb    %eax,%eax
sub    $0x1,%eax
cmp    $0x1,%edx
sbb    %ebx,%ebx
xor    $0x1,%edx
mov    %ebx,0x38(%esp)
mov    0x2c(%esp),%ebx
andl   $0x3b9aca00,0x38(%esp)
addl   $0x3b9aca00,0x38(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x3c(%esp)
mov    %ecx,0x8(%ebx)
cmp    %ebp,%esi
mov    $0x1,%ecx
jg     80554f0 <fchmod@plt+0xb340>
cmp    %edi,0x1c(%esp)
jl     80557e4 <fchmod@plt+0xb634>
cmpb   $0x0,0x20(%esp)
jne    80554f0 <fchmod@plt+0xb340>
and    %ebp,%eax
mov    $0xffffffff,%ecx
cmp    %eax,%esi
jl     80554f0 <fchmod@plt+0xb340>
je     8055a1d <fchmod@plt+0xb86d>
mov    0x44(%esp),%eax
mov    $0x38e38e39,%edx
lea    0x60(%esp),%ebx
mov    %eax,0x60(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x64(%esp)
mov    0x3c(%esp),%eax
or     %esi,%eax
mov    %eax,0x68(%esp)
mov    0x38(%esp),%eax
imul   %edx
mov    0x38(%esp),%eax
sar    %edx
sar    $0x1f,%eax
sub    %eax,%edx
mov    0xf4(%esp),%eax
add    0x1c(%esp),%edx
mov    0x10(%eax),%eax
mov    %edx,0x6c(%esp)
mov    %ebx,0x4(%esp)
and    $0xf000,%eax
cmp    $0xa000,%eax
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
je     8055a37 <fchmod@plt+0xb887>
call   80561a0 <fchmod@plt+0xbff0>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8055911 <fchmod@plt+0xb761>
mov    0xf4(%esp),%eax
mov    0x10(%eax),%eax
movl   $0x3,(%esp)
and    $0xf000,%eax
cmp    $0xa000,%eax
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xf0(%esp),%eax
mov    %eax,0x4(%esp)
je     8055af5 <fchmod@plt+0xb945>
call   804a0d0 <__xstat64@plt>
mov    %eax,%ecx
mov    0xb8(%esp),%edx
mov    0x1c(%esp),%eax
xor    0xbc(%esp),%eax
xor    %esi,%edx
or     %edx,%eax
or     %ecx,%eax
je     8055a46 <fchmod@plt+0xb896>
mov    0x1c(%esp),%eax
mov    %esi,0x68(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x6c(%esp)
mov    0xf4(%esp),%eax
mov    0x10(%eax),%eax
mov    %ebx,0x4(%esp)
and    $0xf000,%eax
cmp    $0xa000,%eax
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
je     8055b07 <fchmod@plt+0xb957>
call   80561a0 <fchmod@plt+0xbff0>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
je     8055a46 <fchmod@plt+0xb896>
mov    $0xfffffffe,%ecx
jmp    80554f0 <fchmod@plt+0xb340>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    $0xffffffff,%ecx
mov    $0x1,%ebx
mov    0x2c(%esp),%eax
mov    %ebx,0x8(%eax)
movb   $0x1,0xc(%eax)
jmp    80554be <fchmod@plt+0xb30e>
movl   $0x10,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x8065870
je     805551b <fchmod@plt+0xb36b>
movl   $0x77359400,0x8(%eax)
movb   $0x0,0xc(%eax)
jmp    8055460 <fchmod@plt+0xb2b0>
mov    0x2c(%esp),%eax
movl   $0x0,0x8065870
00
mov    0x8(%eax),%ebx
movzbl 0xc(%eax),%eax
mov    %ebx,0x24(%esp)
jmp    80554a0 <fchmod@plt+0xb2f0>
lea    0x50(%esp),%ebx
jmp    8055558 <fchmod@plt+0xb3a8>
mov    0x34(%esp),%eax
mov    0x2c(%esp),%ebx
mov    0x3c(%esp),%ebp
mov    %edi,0x38(%esp)
mov    0x4c(%esp),%esi
cmp    $0x77359400,%eax
mov    0x40(%esp),%edi
mov    %eax,0x8(%ebx)
sete   %al
movzbl %al,%eax
mov    %eax,0x3c(%esp)
not    %eax
jmp    80557c6 <fchmod@plt+0xb616>
movl   $0x8049a60,0x10(%esp)
movl   $0x80553c0,0xc(%esp)
movl   $0x8055390,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x10,(%esp)
call   80530f0 <fchmod@plt+0x8f40>
test   %eax,%eax
mov    %eax,0x8065874
je     8055983 <fchmod@plt+0xb7d3>
mov    %eax,%ebx
jmp    8055453 <fchmod@plt+0xb2a3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0xa,0x38(%esp)
movl   $0xa,0x8(%eax)
mov    $0xffffffff,%eax
jmp    80557c6 <fchmod@plt+0xb616>
mov    %edi,%eax
cltd
idivl  0x38(%esp)
mov    %edi,%eax
sub    %edx,%eax
cmp    %eax,0x1c(%esp)
jl     80554f0 <fchmod@plt+0xb340>
jmp    80557f9 <fchmod@plt+0xb649>
call   80561d0 <fchmod@plt+0xc020>
test   %eax,%eax
setne  %al
jmp    8055867 <fchmod@plt+0xb6b7>
mov    0xb8(%esp),%ecx
mov    $0x66666667,%edx
and    $0x1,%ecx
imul   $0x3b9aca00,%ecx,%ecx
add    0xbc(%esp),%ecx
mov    %ecx,%eax
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
cmp    %eax,%ecx
jne    8055b1c <fchmod@plt+0xb96c>
cmpl   $0xa,0x38(%esp)
je     8055b15 <fchmod@plt+0xb965>
mov    $0x9,%eax
mov    $0xa,%ebx
mov    %esi,0x20(%esp)
mov    %eax,%esi
jmp    8055aa5 <fchmod@plt+0xb8f5>
lea    (%ebx,%ebx,4),%ebx
add    %ebx,%ebx
cmp    %ebx,0x38(%esp)
je     8055b01 <fchmod@plt+0xb951>
mov    $0x66666667,%eax
imul   %ecx
mov    $0x66666667,%eax
sar    $0x1f,%ecx
sar    $0x2,%edx
sub    %ecx,%edx
mov    %edx,%ecx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
cmp    %eax,%ecx
jne    8055b01 <fchmod@plt+0xb951>
sub    $0x1,%esi
jne    8055a9a <fchmod@plt+0xb8ea>
mov    0x20(%esp),%esi
mov    $0x77359400,%ebx
xor    %ecx,%ecx
mov    %edi,%eax
cmp    $0x77359400,%ebx
sete   %cl
cltd
not    %ecx
idiv   %ebx
jmp    805592c <fchmod@plt+0xb77c>
call   804a100 <__lxstat64@plt>
mov    %eax,%ecx
jmp    80558aa <fchmod@plt+0xb6fa>
mov    0x20(%esp),%esi
jmp    8055ade <fchmod@plt+0xb92e>
call   80561d0 <fchmod@plt+0xc020>
mov    0x20(%esp),%ecx
jmp    8055909 <fchmod@plt+0xb759>
mov    $0xa,%ebx
jmp    8055ade <fchmod@plt+0xb92e>
mov    $0x1,%ebx
jmp    8055ade <fchmod@plt+0xb92e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    (%edx),%ebx
mov    0x4(%ebx),%ecx
cmp    $0x3ffffffe,%ecx
je     8055b88 <fchmod@plt+0xb9d8>
cmp    $0x3fffffff,%ecx
je     8055b68 <fchmod@plt+0xb9b8>
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8055bc0 <fchmod@plt+0xba10>
xor    %eax,%eax
cmp    $0x3fffffff,%edx
je     8055ba8 <fchmod@plt+0xb9f8>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3fffffff,0xc(%ebx)
je     8055be8 <fchmod@plt+0xba38>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   805a680 <fts_children+0x1170>
mov    0xc(%ebx),%edx
mov    0xc(%esp),%eax
jmp    8055b4c <fchmod@plt+0xb99c>
xchg   %ax,%ax
mov    0xc(%ebx),%edx
cmp    $0x3ffffffe,%edx
je     8055bd8 <fchmod@plt+0xba28>
mov    0x40(%eax),%ecx
mov    0x44(%eax),%eax
mov    %ecx,(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
cmp    $0x3fffffff,%edx
jne    8055b5e <fchmod@plt+0xb9ae>
add    $0x8,%ebx
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   805a680 <fts_children+0x1170>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
mov    0x48(%eax),%edx
mov    0x4c(%eax),%eax
mov    %edx,0x8(%ebx)
mov    %eax,0xc(%ebx)
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    8055b5e <fchmod@plt+0xb9ae>
lea    0x0(%esi),%esi
movl   $0x0,(%edx)
xor    %eax,%eax
jmp    8055b5e <fchmod@plt+0xb9ae>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
je     8055cb6 <fchmod@plt+0xbb06>
mov    0x4(%eax),%ebp
lea    -0x3ffffffe(%ebp),%edx
cmp    $0x1,%edx
ja     8055c88 <fchmod@plt+0xbad8>
mov    0xc(%eax),%esi
lea    -0x3ffffffe(%esi),%ecx
cmp    $0x1,%ecx
ja     8055ca8 <fchmod@plt+0xbaf8>
xor    %ebx,%ebx
xor    %edi,%edi
cmp    $0x1,%edx
jbe    8055c50 <fchmod@plt+0xbaa0>
cmp    $0x1,%ecx
jbe    8055c6a <fchmod@plt+0xbaba>
xor    %eax,%eax
cmp    $0x1,%ebx
sete   %al
add    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
cmp    $0x3ffffffe,%ebp
sete   %bl
cmp    $0x1,%ecx
movl   $0x0,(%eax)
mov    $0x1,%di
ja     8055c39 <fchmod@plt+0xba89>
movl   $0x0,0x8(%eax)
xor    %eax,%eax
cmp    $0x3ffffffe,%esi
sete   %al
mov    $0x1,%edi
add    %eax,%ebx
jmp    8055c39 <fchmod@plt+0xba89>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%ebp
jbe    8055c1d <fchmod@plt+0xba6d>
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8055c43 <fchmod@plt+0xba93>
lea    0x0(%esi),%esi
cmp    $0x3b9ac9ff,%esi
jbe    8055c2b <fchmod@plt+0xba7b>
jmp    8055c90 <fchmod@plt+0xbae0>
movl   $0x805fc9b,0xc(%esp)
movl   $0x5a,0x8(%esp)
movl   $0x805fc84,0x4(%esp)
movl   $0x805fc92,(%esp)
call   804a160 <__assert_fail@plt>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8059c40 <fts_children+0x730>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    0xe8(%esp),%edx
mov    0xe0(%esp),%edi
test   %edx,%edx
je     8055f88 <fchmod@plt+0xbdd8>
mov    (%edx),%ecx
lea    0x30(%esp),%eax
mov    0x4(%edx),%ebx
mov    %eax,0x2c(%esp)
mov    %ecx,0x30(%esp)
mov    0x8(%edx),%ecx
mov    %ebx,0x34(%esp)
mov    0xc(%edx),%ebx
mov    %ecx,0x38(%esp)
mov    %ebx,0x3c(%esp)
call   8055c00 <fchmod@plt+0xba50>
test   %eax,%eax
mov    %eax,%ebp
js     8056120 <fchmod@plt+0xbf70>
mov    0xe4(%esp),%eax
mov    %edi,%ebx
shr    $0x1f,%ebx
test   %eax,%eax
sete   0x1c(%esp)
test   %bl,%bl
jne    8056130 <fchmod@plt+0xbf80>
mov    0x806587c,%eax
test   %eax,%eax
js     8055dbd <fchmod@plt+0xbc0d>
cmp    $0x2,%ebp
je     8055f08 <fchmod@plt+0xbd58>
mov    0x2c(%esp),%eax
test   %bl,%bl
jne    8055fc0 <fchmod@plt+0xbe10>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049fd0 <futimens@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jle    8055ff0 <fchmod@plt+0xbe40>
call   8049e80 <__errno_location@plt>
movl   $0x26,(%eax)
test   %ebp,%ebp
movl   $0xffffffff,0x806587c
ff
movl   $0xffffffff,0x8065878
ff
jne    8055e80 <fchmod@plt+0xbcd0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8056010 <fchmod@plt+0xbe60>
mov    (%ecx),%eax
mov    $0x10624dd3,%esi
mov    0x4(%ecx),%ebp
mov    %eax,0x40(%esp)
mov    %ebp,%eax
imul   %esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ecx
sar    $0x1f,%ebp
sar    $0x6,%edx
sub    %ebp,%edx
mov    %eax,0x48(%esp)
mov    %ecx,%eax
mov    %edx,0x44(%esp)
imul   %esi
sar    $0x1f,%ecx
lea    0x40(%esp),%ebp
sar    $0x6,%edx
sub    %ecx,%edx
mov    %edx,0x4c(%esp)
test   %bl,%bl
mov    %ebp,0x8(%esp)
jne    8055f98 <fchmod@plt+0xbde8>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804a140 <futimesat@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8055ed8 <fchmod@plt+0xbd28>
test   %ebp,%ebp
je     8055e6d <fchmod@plt+0xbcbd>
cmpl   $0x7a11f,0x4(%ebp)
setg   %bl
cmpl   $0x7a11f,0xc(%ebp)
setg   %cl
jg     8056058 <fchmod@plt+0xbea8>
test   %bl,%bl
jne    8056058 <fchmod@plt+0xbea8>
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x3,%ebp
je     8055eb2 <fchmod@plt+0xbd02>
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8055f60 <fchmod@plt+0xbdb0>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8056120 <fchmod@plt+0xbf70>
mov    0x2c(%esp),%esi
test   %esi,%esi
je     8056010 <fchmod@plt+0xbe60>
lea    0x2c(%esp),%edx
xor    %esi,%esi
lea    0x60(%esp),%eax
call   8055b30 <fchmod@plt+0xb980>
test   %al,%al
je     8055dd9 <fchmod@plt+0xbc29>
jmp    8055e6d <fchmod@plt+0xbcbd>
nop
cmpb   $0x0,0x1c(%esp)
mov    $0xffffffff,%esi
jne    8055e6d <fchmod@plt+0xbcbd>
mov    0xe4(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049e20 <utimes@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x60(%esp),%eax
test   %bl,%bl
mov    %eax,0x8(%esp)
jne    8056018 <fchmod@plt+0xbe68>
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8056120 <fchmod@plt+0xbf70>
mov    0x2c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     8056040 <fchmod@plt+0xbe90>
cmpl   $0x3ffffffe,0xc(%eax)
je     8056150 <fchmod@plt+0xbfa0>
mov    $0x3,%ebp
jmp    8055d93 <fchmod@plt+0xbbe3>
lea    0x0(%esi),%esi
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    8055eaa <fchmod@plt+0xbcfa>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x2c(%esp)
xor    %ebp,%ebp
jmp    8055d62 <fchmod@plt+0xbbb2>
nop
mov    0xe4(%esp),%eax
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   804a140 <futimesat@plt>
add    $0xcc,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,0x8(%esp)
mov    0xe4(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x4(%esp)
call   80499b0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%esi
jg     8055db2 <fchmod@plt+0xbc02>
xchg   %ax,%ax
jne    805617b <fchmod@plt+0xbfcb>
movl   $0x1,0x806587c
00
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    8055e21 <fchmod@plt+0xbc71>
nop
mov    0xe4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
setne  %al
jmp    8055f2d <fchmod@plt+0xbd7d>
lea    0x0(%esi,%eiz,1),%esi
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    8055f53 <fchmod@plt+0xbda3>
lea    0x60(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x1c(%esp)
call   8049be0 <__fxstat64@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    8055e6d <fchmod@plt+0xbcbd>
mov    0xa8(%esp),%eax
mov    0x4(%ebp),%edx
mov    0xa0(%esp),%esi
sub    0x0(%ebp),%esi
mov    %eax,0x1c(%esp)
mov    0x8(%ebp),%eax
sub    %eax,0x1c(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x54(%esp)
mov    0xc(%ebp),%edx
mov    %eax,0x50(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x5c(%esp)
xor    %edx,%edx
test   %bl,%bl
mov    %eax,0x58(%esp)
je     80560da <fchmod@plt+0xbf2a>
cmp    $0x1,%esi
jne    80560da <fchmod@plt+0xbf2a>
mov    0xa4(%esp),%ebx
test   %ebx,%ebx
jne    80560da <fchmod@plt+0xbf2a>
movl   $0x0,0x54(%esp)
lea    0x50(%esp),%edx
test   %cl,%cl
je     8056170 <fchmod@plt+0xbfc0>
cmpl   $0x1,0x1c(%esp)
jne    8056170 <fchmod@plt+0xbfc0>
mov    0xac(%esp),%eax
test   %eax,%eax
jne    8056170 <fchmod@plt+0xbfc0>
movl   $0x0,0x5c(%esp)
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804a140 <futimesat@plt>
jmp    8055e6d <fchmod@plt+0xbcbd>
nop
mov    $0xffffffff,%esi
jmp    8055e6d <fchmod@plt+0xbcbd>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1c(%esp)
je     8055d7d <fchmod@plt+0xbbcd>
call   8049e80 <__errno_location@plt>
mov    $0xffffffff,%esi
movl   $0x9,(%eax)
jmp    8055e6d <fchmod@plt+0xbcbd>
mov    0xac(%esp),%edx
mov    0xa8(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    8055f53 <fchmod@plt+0xbda3>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jne    8056104 <fchmod@plt+0xbf54>
xor    %esi,%esi
jmp    8055e6d <fchmod@plt+0xbcbd>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8055ff6 <fchmod@plt+0xbe46>
xchg   %ax,%ax
jmp    8055dbd <fchmod@plt+0xbc0d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8055d10 <fchmod@plt+0xbb60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%ebx
test   %edx,%edx
je     80562c0 <fchmod@plt+0xc110>
mov    (%edx),%esi
lea    0x20(%esp),%eax
mov    0x4(%edx),%edi
mov    0xc(%edx),%ecx
mov    0x8(%edx),%edx
mov    %esi,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x24(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   8055c00 <fchmod@plt+0xba50>
test   %eax,%eax
mov    %eax,%esi
js     805637f <fchmod@plt+0xc1cf>
mov    0x8065878,%edi
test   %edi,%edi
js     805626a <fchmod@plt+0xc0ba>
cmp    $0x2,%esi
je     8056338 <fchmod@plt+0xc188>
mov    0x1c(%esp),%eax
movl   $0x100,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   80499b0 <utimensat@plt>
cmp    $0x0,%eax
mov    %eax,%edi
jle    8056388 <fchmod@plt+0xc1d8>
call   8049e80 <__errno_location@plt>
movl   $0x26,(%eax)
test   %esi,%esi
movl   $0xffffffff,0x8065878
ff
je     80562e8 <fchmod@plt+0xc138>
cmp    $0x3,%esi
je     805629d <fchmod@plt+0xc0ed>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    805637f <fchmod@plt+0xc1cf>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     8056304 <fchmod@plt+0xc154>
lea    0x1c(%esp),%edx
lea    0x30(%esp),%eax
call   8055b30 <fchmod@plt+0xb980>
mov    %eax,%edx
xor    %eax,%eax
test   %dl,%dl
je     8056304 <fchmod@plt+0xc154>
jmp    805632c <fchmod@plt+0xc17c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8065878,%edx
xor    %eax,%eax
xor    %esi,%esi
movl   $0x0,0x1c(%esp)
test   %edx,%edx
jns    8056238 <fchmod@plt+0xc088>
movl   $0xffffffff,0x8065878
ff
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    805637f <fchmod@plt+0xc1cf>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8056374 <fchmod@plt+0xc1c4>
mov    0x1c(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x8(%esp)
call   8055d10 <fchmod@plt+0xbb60>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    805637f <fchmod@plt+0xc1cf>
mov    0x1c(%esp),%eax
cmpl   $0x3ffffffe,0x4(%eax)
je     80563b0 <fchmod@plt+0xc200>
cmpl   $0x3ffffffe,0xc(%eax)
je     80563c0 <fchmod@plt+0xc210>
mov    $0x3,%esi
jmp    8056238 <fchmod@plt+0xc088>
call   8049e80 <__errno_location@plt>
movl   $0x26,(%eax)
mov    $0xffffffff,%eax
jmp    805632c <fchmod@plt+0xc17c>
xchg   %ax,%ax
jne    80563d0 <fchmod@plt+0xc220>
movl   $0x1,0x806587c
00
mov    %edi,%eax
movl   $0x1,0x8065878
00
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%ecx
mov    %edx,0x4(%eax)
mov    %ecx,(%eax)
jmp    805636a <fchmod@plt+0xc1ba>
nop
mov    0x7c(%esp),%edx
mov    0x78(%esp),%ecx
mov    %edx,0xc(%eax)
mov    %ecx,0x8(%eax)
jmp    805636a <fchmod@plt+0xc1ba>
call   8049e80 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    805638a <fchmod@plt+0xc1da>
jmp    805626a <fchmod@plt+0xc0ba>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%eax
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
mov    0x48(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8057080 <fchmod@plt+0xced0>
test   %eax,%eax
mov    %eax,%ebx
je     8056478 <fchmod@plt+0xc2c8>
test   %ebp,%ebp
je     8056450 <fchmod@plt+0xc2a0>
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
movl   $0x8060091,0x10(%esp)
mov    %eax,0xc(%esp)
call   8049cf0 <error_at_line@plt>
mov    %ebx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049a60 <free@plt>
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
movl   $0x8060091,0x8(%esp)
call   8049c50 <error@plt>
mov    %ebx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049a60 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x805fcb0,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%ebx
call   8049e80 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80563e0 <fchmod@plt+0xc230>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     80569b8 <fchmod@plt+0xc808>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x805fcd0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a050 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805fce3,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x805ff80,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   804a050 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805fd40,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     80569e0 <fchmod@plt+0xc830>
jmp    *0x805ff44(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fea4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049b00 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   804a050 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fed4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049b00 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a050 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fce7,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a050 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fcf7,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a050 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fd0e,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a050 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fe0c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049b00 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    805665f <fchmod@plt+0xc4af>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fe2c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049b00 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    805665f <fchmod@plt+0xc4af>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fe50,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049b00 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    805665f <fchmod@plt+0xc4af>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805fe78,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049b00 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    805665f <fchmod@plt+0xc4af>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x805fcdc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    8056551 <fchmod@plt+0xc3a1>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805ff08,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049b00 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    80566ea <fchmod@plt+0xc53a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     8056a8a <fchmod@plt+0xc8da>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    8056a80 <fchmod@plt+0xc8d0>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8056500 <fchmod@plt+0xc350>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     8056ae2 <fchmod@plt+0xc932>
add    $0x1,%eax
cmp    $0xa,%eax
jne    8056ad0 <fchmod@plt+0xc920>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8056500 <fchmod@plt+0xc350>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8056ac0 <fchmod@plt+0xc910>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x805fd2a,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x805dda8,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805ddbe,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
movl   $0x805e6d4,0xc(%esp)
movl   $0x805ddd2,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8065300,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805e6fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
cmpb   $0x0,0x8065881
je     8056c28 <fchmod@plt+0xca78>
movzbl 0x8065880,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
call   8049b30 <geteuid@plt>
movb   $0x1,0x8065881
test   %eax,%eax
sete   %al
mov    %al,0x8065880
add    $0xc,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     8056c69 <fchmod@plt+0xcab9>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8056c64 <fchmod@plt+0xcab4>
lea    0x0(%esi),%esi
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8056ca9 <fchmod@plt+0xcaf9>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8056c50 <fchmod@plt+0xcaa0>
call   8056ec0 <fchmod@plt+0xcd10>
xchg   %ax,%ax
jmp    8056c50 <fchmod@plt+0xcaa0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     8056ce8 <fchmod@plt+0xcb38>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
je     8056cfb <fchmod@plt+0xcb4b>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     8056cd0 <fchmod@plt+0xcb20>
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     8056ce0 <fchmod@plt+0xcb30>
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     8056d43 <fchmod@plt+0xcb93>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    8056cc0 <fchmod@plt+0xcb10>
call   8056ec0 <fchmod@plt+0xcd10>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8056d90 <fchmod@plt+0xcbe0>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8056da8 <fchmod@plt+0xcbf8>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    8056cc0 <fchmod@plt+0xcb10>
xchg   %ax,%ax
test   %ecx,%ecx
jne    8056d79 <fchmod@plt+0xcbc9>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    8056d79 <fchmod@plt+0xcbc9>
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     8056de8 <fchmod@plt+0xcc38>
cmp    $0xaaaaaaa9,%eax
ja     8056df4 <fchmod@plt+0xcc44>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8056cc0 <fchmod@plt+0xcb10>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    8056dd0 <fchmod@plt+0xcc20>
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a190 <calloc@plt>
test   %eax,%eax
je     8056e4f <fchmod@plt+0xcc9f>
add    $0x1c,%esp
ret
nop
call   8056ec0 <fchmod@plt+0xcd10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049db0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8056e60 <fchmod@plt+0xccb0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x805ffaf,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    0x8065238,%edx
movl   $0x8060091,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049c50 <error@plt>
call   804a0c0 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
or     $0x2,%ah
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80587b0 <fts_open>
test   %eax,%eax
je     8056f40 <fchmod@plt+0xcd90>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
cmpl   $0x16,(%eax)
je     8056f50 <fchmod@plt+0xcda0>
call   8056ec0 <fchmod@plt+0xcd10>
nop
movl   $0x805ffe8,0xc(%esp)
movl   $0x29,0x8(%esp)
movl   $0x805ffc0,0x4(%esp)
movl   $0x805ffcb,(%esp)
call   804a160 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x2c(%eax),%edx
and    $0x11,%edx
cmp    $0x10,%edx
je     8056fa8 <fchmod@plt+0xcdf8>
xor    %eax,%eax
cmp    $0x11,%edx
je     8056f98 <fchmod@plt+0xcde8>
repz ret
mov    0x8(%esp),%eax
mov    0x30(%eax),%eax
test   %eax,%eax
setne  %al
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8057067 <fchmod@plt+0xceb7>
mov    (%edx),%eax
lea    0x4(%edx),%edi
mov    $0xffffffff,%esi
mov    %edi,%ebx
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    8057000 <fchmod@plt+0xce50>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
add    $0x4,%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
add    %ebp,%eax
mov    %eax,%edx
cmovb  %esi,%edx
mov    %edx,%ebp
subl   $0x1,0x1c(%esp)
jne    8056fe8 <fchmod@plt+0xce38>
test   %ebp,%ebp
js     8057058 <fchmod@plt+0xcea8>
lea    0x1(%ebp),%edx
mov    %edx,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    %eax,0x1c(%esp)
mov    %eax,%ebx
jmp    8057023 <fchmod@plt+0xce73>
xchg   %ax,%ax
add    $0x4,%edi
mov    -0x4(%edi),%esi
mov    %esi,(%esp)
call   8049db0 <strlen@plt>
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebp
mov    %eax,0x8(%esp)
add    %ebp,%ebx
call   8049a70 <memcpy@plt>
subl   $0x1,0x18(%esp)
jne    8057020 <fchmod@plt+0xce70>
mov    0x1c(%esp),%eax
movb   $0x0,(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e80 <__errno_location@plt>
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    8057050 <fchmod@plt+0xcea0>
movl   $0x1,(%esp)
call   8056c50 <fchmod@plt+0xcaa0>
mov    %eax,%ebx
mov    %eax,0x1c(%esp)
jmp    8057049 <fchmod@plt+0xce99>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%edx
movzbl (%edi),%eax
test   %al,%al
je     8057101 <fchmod@plt+0xcf51>
cmp    $0x25,%al
jne    80570d0 <fchmod@plt+0xcf20>
cmpb   $0x73,0x1(%edi)
jne    80570d0 <fchmod@plt+0xcf20>
mov    %edi,%esi
xor    %eax,%eax
jmp    80570b3 <fchmod@plt+0xcf03>
lea    0x0(%esi),%esi
cmp    $0x25,%bl
jne    80570d0 <fchmod@plt+0xcf20>
cmpb   $0x73,0x1(%ecx)
jne    80570d0 <fchmod@plt+0xcf20>
lea    0x2(%esi),%ecx
movzbl (%ecx),%ebx
add    $0x1,%eax
mov    %ecx,%esi
test   %bl,%bl
jne    80570a8 <fchmod@plt+0xcef8>
call   8056fb0 <fchmod@plt+0xce00>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8059e00 <fts_children+0x8f0>
mov    %eax,%edx
mov    0x1c(%esp),%eax
test   %edx,%edx
jns    80570c7 <fchmod@plt+0xcf17>
call   8049e80 <__errno_location@plt>
cmpl   $0xc,(%eax)
je     8057105 <fchmod@plt+0xcf55>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    80570c2 <fchmod@plt+0xcf12>
call   8056ec0 <fchmod@plt+0xcd10>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
xor    %ebx,%ebx
sub    $0x28,%esp
mov    0x80652e4,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0xc(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049b90 <__getdelim@plt>
test   %eax,%eax
jle    8057169 <fchmod@plt+0xcfb9>
mov    0x18(%esp),%edx
movb   $0x0,-0x1(%edx,%eax,1)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049f30 <rpmatch@plt>
test   %eax,%eax
setg   %bl
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    80571e0 <fchmod@plt+0xd030>
mov    0x8065884,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     8057288 <fchmod@plt+0xd0d8>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049e30 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8057200 <fchmod@plt+0xd050>
movl   $0x1,0x8065884
00
test   %ebx,%ebx
js     80571d7 <fchmod@plt+0xd027>
cmpl   $0xffffffff,0x8065884
je     8057230 <fchmod@plt+0xd080>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049e30 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049e80 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    80571c0 <fchmod@plt+0xd010>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8057180 <fchmod@plt+0xcfd0>
test   %eax,%eax
mov    %eax,%ebx
js     80571d7 <fchmod@plt+0xd027>
movl   $0xffffffff,0x8065884
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049e30 <fcntl@plt>
test   %eax,%eax
js     8057264 <fchmod@plt+0xd0b4>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049e30 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    80571d7 <fchmod@plt+0xd027>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   804a110 <close@plt>
mov    %edi,(%esi)
jmp    80571d7 <fchmod@plt+0xd027>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8057180 <fchmod@plt+0xcfd0>
mov    %eax,%ebx
jmp    80571ca <fchmod@plt+0xd01a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80572b8 <fchmod@plt+0xd108>
mov    %ebx,(%esp)
call   8049ce0 <__freading@plt>
test   %eax,%eax
jne    80572c8 <fchmod@plt+0xd118>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a10 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     80572b8 <fchmod@plt+0xd108>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8057330 <fchmod@plt+0xd180>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a10 <fflush@plt>
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x10(%edx),%ecx
cmp    %ecx,0x14(%edx)
ja     8057326 <fchmod@plt+0xd176>
mov    0x8(%edx),%eax
xor    %ecx,%ecx
sub    0x4(%edx),%eax
testl  $0x100,(%edx)
je     8057324 <fchmod@plt+0xd174>
mov    0x2c(%edx),%ecx
sub    0x24(%edx),%ecx
add    %ecx,%eax
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     8057370 <fchmod@plt+0xd1c0>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049ac0 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    805734f <fchmod@plt+0xd19f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    805734f <fchmod@plt+0xd19f>
mov    %ebx,(%esp)
call   8049ea0 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   804a010 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     80573b7 <fchmod@plt+0xd207>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    80573af <fchmod@plt+0xd1ff>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
xor    0xc(%ebx),%ecx
xor    0x8(%ebx),%edx
or     %edx,%ecx
je     80573e0 <fchmod@plt+0xd230>
pop    %ebx
pop    %esi
ret
nop
mov    (%esi),%edx
mov    0x4(%esi),%eax
xor    0x4(%ebx),%eax
xor    (%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805db40 <fts_children+0x4630>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805db40 <fts_children+0x4630>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    (%eax),%edx
mov    0x4(%eax),%eax
xor    0x4(%ecx),%eax
xor    (%ecx),%edx
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%ecx
mov    0x9c(%eax),%ebx
mov    0x10(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%edx
mov    0x9c(%eax),%esi
cmp    %edx,%ecx
jae    80574b8 <fchmod@plt+0xd308>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    80574d8 <fchmod@plt+0xd328>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     80574b0 <fchmod@plt+0xd300>
jb     80574c9 <fchmod@plt+0xd319>
cmp    %esi,%ebx
ja     80574b0 <fchmod@plt+0xd300>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebx
jb     80574aa <fchmod@plt+0xd2fa>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     80574b0 <fchmod@plt+0xd300>
jmp    80574c3 <fchmod@plt+0xd313>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    0x28(%eax),%ebp
cmp    %ecx,0x24(%eax)
jb     8057578 <fchmod@plt+0xd3c8>
mov    0x8(%eax),%edx
test   %ebx,%ebx
je     8057520 <fchmod@plt+0xd370>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%edx
mov    %ebx,-0x4(%edx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    8057510 <fchmod@plt+0xd360>
mov    0x8(%esi),%edx
mov    %ebp,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   804a040 <qsort@plt>
mov    0x8(%esi),%ebp
mov    %edi,%esi
sub    $0x1,%esi
mov    0x0(%ebp),%eax
je     80575cb <fchmod@plt+0xd41b>
mov    %eax,%ecx
mov    %ebp,%edx
jmp    8057552 <fchmod@plt+0xd3a2>
nop
mov    (%edx),%ecx
mov    0x4(%edx),%ebx
add    $0x4,%edx
sub    $0x1,%esi
mov    %ebx,0x8(%ecx)
jne    8057550 <fchmod@plt+0xd3a0>
mov    -0x4(%ebp,%edi,4),%edx
movl   $0x0,0x8(%edx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%ecx),%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%esi)
ja     80575a8 <fchmod@plt+0xd3f8>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
je     80575a8 <fchmod@plt+0xd3f8>
mov    %eax,0x8(%esi)
mov    %eax,%edx
jmp    8057508 <fchmod@plt+0xd358>
lea    0x0(%esi),%esi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebx,%eax
movl   $0x0,0x8(%esi)
movl   $0x0,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,%edx
jmp    8057564 <fchmod@plt+0xd3b4>
nop
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x1c,%esp
lea    0xa8(%ecx),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8057646 <fchmod@plt+0xd496>
lea    0xa4(%eax),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    0x14(%edi),%eax
mov    $0x3,%edx
movb   $0x0,0xa4(%ebx,%esi,1)
mov    %esi,0x34(%ebx)
mov    %edi,0x2c(%ebx)
mov    %eax,0x1c(%ebx)
xor    %eax,%eax
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
mov    %ax,0x3e(%ebx)
mov    %dx,0x40(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
test   %eax,%eax
jne    8057662 <fchmod@plt+0xd4b2>
jmp    8057680 <fchmod@plt+0xd4d0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     8057674 <fchmod@plt+0xd4c4>
mov    %eax,(%esp)
call   804a120 <closedir@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
test   %esi,%esi
jne    8057660 <fchmod@plt+0xd4b0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
jmp    80576a4 <fchmod@plt+0xd4f4>
mov    %ebx,(%esp)
call   805a780 <fts_children+0x1270>
test   %eax,%eax
jns    80576b8 <fchmod@plt+0xd508>
mov    %ebx,(%esp)
call   805a730 <fts_children+0x1220>
test   %al,%al
je     8057698 <fchmod@plt+0xd4e8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   804a110 <close@plt>
jmp    80576a4 <fchmod@plt+0xd4f4>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x1c(%eax),%eax
cmp    %edx,%eax
je     805771c <fchmod@plt+0xd56c>
test   %cl,%cl
jne    8057700 <fchmod@plt+0xd550>
testb  $0x4,0x2c(%ebx)
jne    80576f6 <fchmod@plt+0xd546>
test   %eax,%eax
js     80576f6 <fchmod@plt+0xd546>
mov    %eax,(%esp)
call   804a110 <close@plt>
mov    %esi,0x1c(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %eax,0x4(%esp)
lea    0x38(%ebx),%eax
mov    %eax,(%esp)
call   805a740 <fts_children+0x1230>
test   %eax,%eax
jns    80576ee <fchmod@plt+0xd53e>
mov    %esi,0x1c(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
cmp    $0xffffff9c,%eax
je     80576e0 <fchmod@plt+0xd530>
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x2c(%eax),%eax
test   $0x4,%al
jne    8057758 <fchmod@plt+0xd5a8>
test   $0x2,%ah
je     8057768 <fchmod@plt+0xd5b8>
mov    $0x1,%ecx
mov    $0xffffff9c,%edx
mov    %ebx,%eax
xor    %esi,%esi
call   80576d0 <fchmod@plt+0xd520>
lea    0x38(%ebx),%eax
call   8057690 <fchmod@plt+0xd4e0>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8049fe0 <fchdir@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
lea    0x38(%ebx),%eax
call   8057690 <fchmod@plt+0xd4e0>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x2c,%esp
mov    0x30(%ecx),%ebp
lea    0x44(%ecx),%edi
mov    0x40(%esp),%edx
mov    (%esi),%ecx
test   %ebp,%ebp
jne    80577b0 <fchmod@plt+0xd600>
test   $0x1,%cl
jne    80577b9 <fchmod@plt+0xd609>
and    $0x2,%ecx
jne    80577b9 <fchmod@plt+0xd609>
test   %dl,%dl
je     8057838 <fchmod@plt+0xd688>
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__xstat64@plt>
test   %eax,%eax
je     8057860 <fchmod@plt+0xd6b0>
call   8049e80 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
cmp    $0x2,%esi
je     8057930 <fchmod@plt+0xd780>
mov    %esi,0x20(%ebx)
test   $0x1,%edi
mov    $0x60,%edx
jne    8057920 <fchmod@plt+0xd770>
test   $0x2,%edi
jne    8057908 <fchmod@plt+0xd758>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8057821 <fchmod@plt+0xd671>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8057829 <fchmod@plt+0xd679>
movb   $0x0,(%edi)
mov    $0xa,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%ebx),%edx
movl   $0x100,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
call   8049b80 <__fxstatat64@plt>
test   %eax,%eax
jne    8057898 <fchmod@plt+0xd6e8>
nop
mov    0x54(%ebx),%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     80578a8 <fchmod@plt+0xd6f8>
cmp    $0xa000,%ecx
mov    $0xc,%eax
je     805782e <fchmod@plt+0xd67e>
xor    %eax,%eax
cmp    $0x8000,%ecx
sete   %al
add    $0x2c,%esp
pop    %ebx
lea    0x3(%eax,%eax,4),%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
jmp    80577ed <fchmod@plt+0xd63d>
nop
mov    (%esi),%edx
mov    0x58(%ebx),%eax
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0x2,%edx
sub    %edx,%eax
cmpb   $0x2e,0xa4(%ebx)
mov    %eax,0x38(%ebx)
mov    $0x1,%eax
jne    805782e <fchmod@plt+0xd67e>
cmpb   $0x0,0xa5(%ebx)
je     80578f0 <fchmod@plt+0xd740>
mov    0xa4(%ebx),%edx
and    $0xffff00,%edx
cmp    $0x2e00,%edx
jne    805782e <fchmod@plt+0xd67e>
cmpl   $0x1,0x30(%ebx)
sbb    %eax,%eax
and    $0xfffffffc,%eax
add    $0x5,%eax
jmp    805782e <fchmod@plt+0xd67e>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    805780a <fchmod@plt+0xd65a>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x44(%ebx)
add    $0x1,%edi
mov    $0x5f,%dl
jmp    80577fe <fchmod@plt+0xd64e>
xchg   %ax,%ax
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a100 <__lxstat64@plt>
test   %eax,%eax
jne    80577ea <fchmod@plt+0xd63a>
movl   $0x0,0x0(%ebp)
mov    $0xd,%al
jmp    805782e <fchmod@plt+0xd67e>
lea    0x0(%esi),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    (%edx),%eax
lea    0x100(%eax,%ecx,1),%ecx
cmp    %ecx,%eax
ja     8057998 <fchmod@plt+0xd7e8>
mov    (%ebx),%eax
mov    %ecx,(%edx)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
je     80579c0 <fchmod@plt+0xd810>
mov    %eax,(%ebx)
mov    $0x1,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
movl   $0x0,(%ebx)
call   8049e80 <__errno_location@plt>
movl   $0x24,(%eax)
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
xor    %eax,%eax
movl   $0x0,(%ebx)
jmp    805798e <fchmod@plt+0xd7de>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    %edx,%ebx
sub    $0x28,%esp
test   $0x102,%eax
je     8057a28 <fchmod@plt+0xd878>
movl   $0x8049a60,0x10(%esp)
movl   $0x80573c0,0xc(%esp)
movl   $0x8057400,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   80530f0 <fchmod@plt+0x8f40>
test   %eax,%eax
mov    %eax,(%ebx)
setne  %al
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x1c,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edx
mov    %eax,(%ebx)
xor    %eax,%eax
test   %edx,%edx
je     8057a20 <fchmod@plt+0xd870>
mov    %edx,(%esp)
call   805a570 <fts_children+0x1060>
add    $0x28,%esp
mov    $0x1,%eax
pop    %ebx
ret
push   %esi
push   %ebx
mov    %edx,%ebx
and    $0x10,%ebx
sub    $0x14,%esp
cmp    $0x1,%ebx
mov    %edx,%ebx
sbb    %esi,%esi
and    $0xfffe0000,%esi
shl    $0x7,%ebx
add    $0x30900,%esi
and    $0x40000,%ebx
or     %esi,%ebx
and    $0x2,%dh
je     8057ab0 <fchmod@plt+0xd900>
mov    %ebx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   805ac00 <fts_children+0x16f0>
mov    %eax,%ebx
test   %ebx,%ebx
js     8057aa3 <fchmod@plt+0xd8f3>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   805a450 <fts_children+0xf40>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
mov    %ecx,(%esp)
call   8052350 <fchmod@plt+0x81a0>
mov    %eax,%ebx
jmp    8057a8f <fchmod@plt+0xd8df>
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%ebx
mov    %edx,0x18(%esp)
movb   $0x0,0x14(%esp)
test   %ebx,%ebx
je     8057af6 <fchmod@plt+0xd946>
cmpb   $0x2e,(%ebx)
jne    8057af6 <fchmod@plt+0xd946>
cmpb   $0x2e,0x1(%ebx)
jne    8057af6 <fchmod@plt+0xd946>
cmpb   $0x0,0x2(%ebx)
sete   0x14(%esp)
mov    0x2c(%ebp),%edx
mov    %edx,%esi
and    $0x4,%esi
je     8057b28 <fchmod@plt+0xd978>
and    $0x200,%edx
mov    %edx,%esi
je     8057b18 <fchmod@plt+0xd968>
xor    %esi,%esi
test   %edi,%edi
js     8057b18 <fchmod@plt+0xd968>
mov    %edi,(%esp)
call   804a110 <close@plt>
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,%eax
shr    $0x1f,%eax
cmpb   $0x0,0x14(%esp)
jne    8057bc0 <fchmod@plt+0xda10>
test   %al,%al
jne    8057bd6 <fchmod@plt+0xda26>
mov    %edi,0x1c(%esp)
test   $0x2,%dl
jne    8057b70 <fchmod@plt+0xd9c0>
test   %ebx,%ebx
je     8057c18 <fchmod@plt+0xda68>
cmpb   $0x2e,(%ebx)
jne    8057c18 <fchmod@plt+0xda68>
cmpb   $0x2e,0x1(%ebx)
xchg   %ax,%ax
jne    8057c18 <fchmod@plt+0xda68>
cmpb   $0x0,0x2(%ebx)
jne    8057c18 <fchmod@plt+0xda68>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049be0 <__fxstat64@plt>
test   %eax,%eax
je     8057c38 <fchmod@plt+0xda88>
mov    $0xffffffff,%eax
test   %edi,%edi
mov    %eax,%esi
jns    8057b18 <fchmod@plt+0xd968>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
mov    %edi,(%ebx)
jmp    8057b18 <fchmod@plt+0xd968>
nop
test   %al,%al
je     8057b40 <fchmod@plt+0xd990>
test   $0x2,%dh
jne    8057c60 <fchmod@plt+0xdab0>
movb   $0x1,0x14(%esp)
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
call   8057a50 <fchmod@plt+0xd8a0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
js     8057cd3 <fchmod@plt+0xdb23>
mov    0x2c(%ebp),%edx
jmp    8057b44 <fchmod@plt+0xd994>
lea    0x0(%esi,%eiz,1),%esi
mov    0x9c(%ecx),%eax
mov    0xa0(%ecx),%edx
xor    0x7c(%esp),%edx
xor    0x78(%esp),%eax
or     %eax,%edx
jne    8057c4e <fchmod@plt+0xda9e>
mov    0x2c(%ebp),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x2,%dh
jne    8057cb8 <fchmod@plt+0xdb08>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049fe0 <fchdir@plt>
jmp    8057b99 <fchmod@plt+0xd9e9>
lea    0x0(%esi),%esi
mov    0x18(%esp),%ecx
mov    0x44(%ecx),%eax
mov    0x48(%ecx),%edx
xor    0x24(%esp),%edx
xor    0x20(%esp),%eax
or     %eax,%edx
je     8057bf8 <fchmod@plt+0xda48>
call   8049e80 <__errno_location@plt>
movl   $0x2,(%eax)
jmp    8057b94 <fchmod@plt+0xd9e4>
xchg   %ax,%ax
lea    0x38(%ebp),%ecx
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x14(%esp)
call   805a730 <fts_children+0x1220>
mov    0x1c(%esp),%edx
mov    0x14(%esp),%ecx
test   %al,%al
jne    8057bd1 <fchmod@plt+0xda21>
mov    %ecx,(%esp)
call   805a780 <fts_children+0x1270>
mov    0x2c(%ebp),%edx
test   %eax,%eax
mov    %eax,0x1c(%esp)
js     8057bd1 <fchmod@plt+0xda21>
test   $0x2,%dl
mov    0x1c(%esp),%edi
movb   $0x1,0x14(%esp)
je     8057c18 <fchmod@plt+0xda68>
jmp    8057b70 <fchmod@plt+0xd9c0>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x14(%esp),%ecx
mov    %ebp,%eax
mov    0x1c(%esp),%edx
xor    $0x1,%ecx
movzbl %cl,%ecx
call   80576d0 <fchmod@plt+0xd520>
jmp    8057b18 <fchmod@plt+0xd968>
mov    $0xffffffff,%esi
jmp    8057b18 <fchmod@plt+0xd968>
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
test   $0x102,%eax
je     8057d70 <fchmod@plt+0xdbc0>
movl   $0x14,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8057da8 <fchmod@plt+0xdbf8>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %ebx,0x10(%esi)
mov    %esi,0x4(%esp)
mov    %eax,(%esi)
mov    0x9c(%ebx),%eax
mov    %edx,0x4(%esi)
mov    0xa0(%ebx),%edx
mov    %eax,0x8(%esi)
mov    (%edi),%eax
mov    %edx,0xc(%esi)
mov    %eax,(%esp)
call   8053700 <fchmod@plt+0x9550>
mov    %eax,%edi
mov    $0x1,%eax
cmp    %edi,%esi
je     8057d62 <fchmod@plt+0xdbb2>
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049a60 <free@plt>
test   %edi,%edi
je     8057da8 <fchmod@plt+0xdbf8>
mov    0x10(%edi),%edx
mov    $0x2,%ecx
mov    0xc(%esp),%eax
mov    %cx,0x3c(%ebx)
mov    %edx,(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x44(%ecx),%eax
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   805a590 <fts_children+0x1080>
test   %al,%al
je     8057d98 <fchmod@plt+0xdbe8>
mov    $0x2,%edx
mov    %ebx,(%ebx)
mov    %dx,0x3c(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    8057dc0 <fchmod@plt+0xdc10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x34,%esp
test   $0x102,%eax
jne    8057e08 <fchmod@plt+0xdc58>
mov    0x4(%ecx),%esi
test   %esi,%esi
je     8057dfd <fchmod@plt+0xdc4d>
mov    0x30(%esi),%eax
test   %eax,%eax
js     8057dfd <fchmod@plt+0xdc4d>
mov    (%edx),%ebx
mov    0x14(%ebx),%eax
or     0x10(%ebx),%eax
je     8057e82 <fchmod@plt+0xdcd2>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
xor    0xa0(%ecx),%edx
xor    0x9c(%ecx),%eax
or     %eax,%edx
je     8057e50 <fchmod@plt+0xdca0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ecx),%ebx
lea    0x1c(%esp),%eax
mov    0x48(%ecx),%esi
mov    %ebx,0x1c(%esp)
mov    0xa0(%ecx),%ebx
mov    0x9c(%ecx),%ecx
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %esi,0x20(%esp)
mov    %ebx,0x28(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   8053740 <fchmod@plt+0x9590>
test   %eax,%eax
je     8057e82 <fchmod@plt+0xdcd2>
mov    %eax,(%esp)
call   8049a60 <free@plt>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
xor    0x48(%ecx),%edx
xor    0x44(%ecx),%eax
or     %eax,%edx
jne    8057dfd <fchmod@plt+0xdc4d>
mov    0x44(%esi),%eax
mov    0x48(%esi),%edx
mov    %eax,0x8(%ebx)
mov    0x9c(%esi),%eax
mov    %edx,0xc(%ebx)
mov    0xa0(%esi),%edx
mov    %eax,(%ebx)
mov    %edx,0x4(%ebx)
jmp    8057dfd <fchmod@plt+0xdc4d>
call   804a0c0 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    (%eax),%eax
mov    %edx,0x38(%esp)
mov    %eax,0x14(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
setne  0x3e(%esp)
jne    8058410 <fchmod@plt+0xe260>
mov    0x2c(%ebp),%eax
mov    $0x10900,%ecx
test   $0x10,%al
jne    8058348 <fchmod@plt+0xe198>
mov    0x2c(%ebp),%edx
shl    $0x7,%eax
mov    $0xffffff9c,%ebx
mov    0x14(%esp),%edi
and    $0x40000,%eax
and    $0x204,%edx
cmp    $0x200,%edx
mov    0x18(%edi),%esi
je     80585d8 <fchmod@plt+0xe428>
or     %ecx,%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
call   805ac00 <fts_children+0x16f0>
test   %eax,%eax
mov    %eax,%ebx
js     8058671 <fchmod@plt+0xe4c1>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805a450 <fts_children+0xf40>
mov    %ebx,(%esp)
call   8049fc0 <fdopendir@plt>
test   %eax,%eax
je     805865e <fchmod@plt+0xe4ae>
mov    0x14(%esp),%edi
cmpw   $0xb,0x3c(%edi)
mov    %eax,0xc(%edi)
je     8058694 <fchmod@plt+0xe4e4>
mov    0x2c(%ebp),%eax
test   $0x1,%ah
jne    8058488 <fchmod@plt+0xe2d8>
cmpl   $0x1,0x28(%ebp)
sbb    %edi,%edi
xor    %ecx,%ecx
mov    %edi,0x24(%esp)
andl   $0x186a1,0x24(%esp)
subl   $0x1,0x24(%esp)
cmpl   $0x2,0x38(%esp)
je     8057f7d <fchmod@plt+0xddcd>
mov    0x2c(%ebp),%edx
mov    $0xffffffff,%ecx
and    $0x18,%edx
cmp    $0x18,%edx
je     8058458 <fchmod@plt+0xe2a8>
cmpb   $0x0,0x3e(%esp)
movb   $0x1,0x3f(%esp)
jne    8057fb8 <fchmod@plt+0xde08>
test   %ecx,%ecx
setne  %cl
cmpl   $0x3,0x38(%esp)
mov    %ecx,%esi
sete   %cl
mov    %ecx,%edi
mov    %esi,%ecx
test   %cl,%cl
jne    80583d8 <fchmod@plt+0xe228>
mov    %edi,%ecx
test   %cl,%cl
movb   $0x0,0x3f(%esp)
jne    80583d8 <fchmod@plt+0xe228>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
movl   $0x0,0x2c(%esp)
mov    0x28(%edi),%edx
mov    0x1c(%edi),%ebx
lea    -0x1(%edx),%ecx
cmpb   $0x2f,-0x1(%ebx,%edx,1)
cmove  %ecx,%edx
test   $0x4,%al
jne    8058330 <fchmod@plt+0xe180>
mov    0x20(%ebp),%edi
lea    0x1(%edx),%eax
mov    %eax,0x1c(%esp)
movb   $0x0,0x3d(%esp)
movl   $0x0,0x10(%esp)
mov    %edi,0x18(%esp)
sub    %eax,0x18(%esp)
mov    0x14(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x20(%esp)
mov    0x30(%eax),%eax
add    $0x1,%eax
mov    %eax,0x28(%esp)
lea    0x2c(%ebp),%eax
mov    %eax,0x34(%esp)
lea    0x2(%edx),%eax
mov    %eax,0x30(%esp)
jmp    80580fa <fchmod@plt+0xdf4a>
lea    0x0(%esi),%esi
add    0x1c(%esp),%edx
jb     80581be <fchmod@plt+0xe00e>
mov    0x28(%esp),%eax
testb  $0x4,0x2c(%ebp)
mov    %eax,0x30(%ebx)
mov    0x0(%ebp),%eax
mov    %edx,0x28(%ebx)
mov    0x4(%esi),%edx
mov    %eax,0x4(%ebx)
mov    (%esi),%eax
mov    %edx,0xa0(%ebx)
mov    %eax,0x9c(%ebx)
jne    8058210 <fchmod@plt+0xe060>
lea    0xa4(%ebx),%eax
mov    %eax,0x18(%ebx)
mov    0x28(%ebp),%eax
test   %eax,%eax
je     805807f <fchmod@plt+0xdecf>
testb  $0x4,0x2d(%ebp)
je     8058240 <fchmod@plt+0xe090>
mov    0x2c(%ebp),%eax
xor    %ecx,%ecx
and    $0x18,%eax
cmp    $0x18,%eax
je     8058320 <fchmod@plt+0xe170>
mov    $0xb,%edi
xor    %eax,%eax
mov    %di,0x3c(%ebx)
movzbl 0x12(%esi),%edx
sub    $0x1,%edx
cmp    $0xb,%edx
ja     80580ae <fchmod@plt+0xdefe>
mov    0x8060000(,%edx,4),%eax
xor    %edx,%edx
test   %ecx,%ecx
mov    %eax,0x54(%ebx)
mov    $0x1,%eax
jne    80580c3 <fchmod@plt+0xdf13>
mov    $0x2,%eax
xor    %edx,%edx
mov    0x20(%esp),%esi
mov    %eax,0x70(%ebx)
mov    %edx,0x74(%ebx)
movl   $0x0,0x8(%ebx)
test   %esi,%esi
je     805826c <fchmod@plt+0xe0bc>
mov    0x10(%esp),%eax
addl   $0x1,0xc(%esp)
mov    %ebx,0x8(%eax)
mov    0xc(%esp),%eax
cmp    %eax,0x24(%esp)
jbe    8058288 <fchmod@plt+0xe0d8>
mov    %ebx,0x10(%esp)
mov    0x14(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     8058288 <fchmod@plt+0xe0d8>
mov    %eax,(%esp)
call   804a020 <readdir64@plt>
test   %eax,%eax
mov    %eax,%esi
je     8058630 <fchmod@plt+0xe480>
testb  $0x20,0x2c(%ebp)
jne    805812b <fchmod@plt+0xdf7b>
cmpb   $0x2e,0x13(%eax)
je     8058300 <fchmod@plt+0xe150>
lea    0x13(%esi),%edi
mov    %edi,(%esp)
call   8049db0 <strlen@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %ebp,%eax
call   80575d0 <fchmod@plt+0xd420>
test   %eax,%eax
mov    %eax,%ebx
je     80585e0 <fchmod@plt+0xe430>
mov    %edi,(%esp)
call   8049db0 <strlen@plt>
cmp    %eax,0x18(%esp)
mov    %eax,%edx
ja     8058030 <fchmod@plt+0xde80>
mov    0x14(%ebp),%ecx
lea    0x20(%ebp),%edx
mov    %ecx,0x18(%esp)
mov    0x30(%esp),%ecx
add    %eax,%ecx
lea    0x14(%ebp),%eax
call   8057960 <fchmod@plt+0xd7b0>
test   %al,%al
je     80585e0 <fchmod@plt+0xe430>
mov    0x14(%ebp),%eax
cmp    0x18(%esp),%eax
je     805819b <fchmod@plt+0xdfeb>
testb  $0x4,0x2c(%ebp)
movb   $0x1,0x3d(%esp)
je     805819b <fchmod@plt+0xdfeb>
add    0x1c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x20(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
sub    %eax,0x18(%esp)
call   8049db0 <strlen@plt>
mov    %eax,%edx
add    0x1c(%esp),%edx
jae    805803a <fchmod@plt+0xde8a>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x20(%esp),%eax
call   8057650 <fchmod@plt+0xd4a0>
mov    0x14(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   804a120 <closedir@plt>
mov    $0x7,%edx
movl   $0x0,0xc(%edi)
mov    %dx,0x3c(%edi)
orl    $0x4000,0x2c(%ebp)
call   8049e80 <__errno_location@plt>
movl   $0x24,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%ebx),%eax
mov    %eax,0x18(%ebx)
mov    0x34(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
lea    0xa4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memmove@plt>
jmp    805806e <fchmod@plt+0xdebe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x34(%esp),%edx
movl   $0x0,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
mov    0x20(%esp),%esi
movl   $0x0,0x8(%ebx)
test   %esi,%esi
mov    %ax,0x3c(%ebx)
jne    80580dc <fchmod@plt+0xdf2c>
addl   $0x1,0xc(%esp)
mov    0xc(%esp),%eax
cmp    %eax,0x24(%esp)
mov    %ebx,0x20(%esp)
ja     80580f6 <fchmod@plt+0xdf46>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x3d(%esp)
jne    80584d8 <fchmod@plt+0xe328>
testb  $0x4,0x2c(%ebp)
je     80582b6 <fchmod@plt+0xe106>
mov    0x1c(%esp),%eax
cmp    %eax,0x20(%ebp)
je     80582aa <fchmod@plt+0xe0fa>
mov    0xc(%esp),%eax
test   %eax,%eax
jne    80582af <fchmod@plt+0xe0ff>
subl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%eax
movb   $0x0,(%eax)
cmpb   $0x0,0x3f(%esp)
jne    8058370 <fchmod@plt+0xe1c0>
mov    0xc(%esp),%ebx
test   %ebx,%ebx
je     80586dc <fchmod@plt+0xe52c>
cmpl   $0x2710,0xc(%esp)
jbe    8058430 <fchmod@plt+0xe280>
mov    0x28(%ebp),%edx
test   %edx,%edx
je     80586f7 <fchmod@plt+0xe547>
mov    0xc(%esp),%ecx
mov    %ebp,%eax
mov    0x20(%esp),%edx
call   80574f0 <fchmod@plt+0xd340>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x14(%eax)
je     8058311 <fchmod@plt+0xe161>
cmpw   $0x2e,0x14(%eax)
jne    805812b <fchmod@plt+0xdf7b>
mov    0x10(%esp),%ebx
jmp    80580f6 <fchmod@plt+0xdf46>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
testb  $0xfb,0x12(%esi)
setne  %cl
jmp    8058090 <fchmod@plt+0xdee0>
xchg   %ax,%ax
mov    0x14(%ebp),%eax
add    %edx,%eax
lea    0x1(%eax),%edi
mov    %edi,0x2c(%esp)
movb   $0x2f,(%eax)
jmp    8057fdd <fchmod@plt+0xde2d>
lea    0x0(%esi,%eiz,1),%esi
test   $0x1,%al
mov    $0x30900,%ecx
je     8057ec6 <fchmod@plt+0xdd16>
mov    0x14(%esp),%edi
cmpl   $0x1,0x30(%edi)
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x30900,%ecx
jmp    8057ec6 <fchmod@plt+0xdd16>
cmpb   $0x0,0x3e(%esp)
jne    80582c1 <fchmod@plt+0xe111>
mov    0xc(%esp),%eax
test   %eax,%eax
je     805838e <fchmod@plt+0xe1de>
cmpl   $0x1,0x38(%esp)
jne    80582cd <fchmod@plt+0xe11d>
mov    0x14(%esp),%eax
mov    0x30(%eax),%edi
test   %edi,%edi
jne    80586b8 <fchmod@plt+0xe508>
mov    %ebp,%eax
call   8057730 <fchmod@plt+0xd580>
test   %eax,%eax
setne  %al
test   %al,%al
je     80582c1 <fchmod@plt+0xe111>
mov    0x14(%esp),%eax
mov    $0x7,%esi
mov    %si,0x3c(%eax)
mov    0x20(%esp),%eax
orl    $0x4000,0x2c(%ebp)
call   8057650 <fchmod@plt+0xd4a0>
xor    %eax,%eax
jmp    8058446 <fchmod@plt+0xe296>
lea    0x0(%esi),%esi
test   $0x2,%ah
jne    8058547 <fchmod@plt+0xe397>
mov    0x14(%esp),%edx
mov    %ebx,%ecx
mov    %ebp,%eax
movl   $0x0,(%esp)
call   8057ac0 <fchmod@plt+0xd910>
test   %eax,%eax
jne    8058570 <fchmod@plt+0xe3c0>
mov    0x2c(%ebp),%eax
movb   $0x1,0x3f(%esp)
jmp    8057fb8 <fchmod@plt+0xde08>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049a40 <dirfd@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8058758 <fchmod@plt+0xe5a8>
mov    0x2c(%ebp),%eax
jmp    8057f49 <fchmod@plt+0xdd99>
lea    0x0(%esi),%esi
mov    0x28(%ebp),%eax
test   %eax,%eax
je     8058442 <fchmod@plt+0xe292>
cmpl   $0x1,0xc(%esp)
ja     80582e6 <fchmod@plt+0xe136>
mov    0x20(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%esi
mov    %eax,%edx
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
mov    0x58(%esi),%ecx
and    $0x2,%edx
movb   $0x1,0x3f(%esp)
sub    %edx,%ecx
cmpb   $0x0,0x3e(%esp)
jne    8057fb8 <fchmod@plt+0xde08>
jmp    8057f89 <fchmod@plt+0xddd9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
lea    0x34(%ebp),%esi
mov    %esi,%edx
mov    %edi,%ecx
call   8057dc0 <fchmod@plt+0xdc10>
mov    0x1c(%ebp),%eax
lea    0x2c(%ebp),%edx
mov    %edi,%ecx
movl   $0x0,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
mov    0x2c(%ebp),%eax
mov    %edi,%ecx
mov    %esi,%edx
call   8057ce0 <fchmod@plt+0xdb30>
test   %al,%al
jne    8058422 <fchmod@plt+0xe272>
call   8049e80 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    8058446 <fchmod@plt+0xe296>
lea    0x0(%esi),%esi
mov    0x4(%ebp),%eax
mov    0x14(%ebp),%edx
test   %eax,%eax
je     8058507 <fchmod@plt+0xe357>
lea    0x0(%esi),%esi
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     80584fd <fchmod@plt+0xe34d>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    %edx,0x1c(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    80584e8 <fchmod@plt+0xe338>
mov    0x20(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%eax),%ecx
test   %ecx,%ecx
js     8058293 <fchmod@plt+0xe0e3>
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     8058530 <fchmod@plt+0xe380>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    0x8(%eax),%ecx
mov    %edx,0x1c(%eax)
test   %ecx,%ecx
je     8058540 <fchmod@plt+0xe390>
mov    %ecx,%eax
jmp    8058510 <fchmod@plt+0xe360>
xchg   %ax,%ax
mov    0x4(%eax),%ecx
mov    %ecx,%eax
jmp    8058510 <fchmod@plt+0xe360>
mov    %ebx,(%esp)
call   8055320 <fchmod@plt+0xb170>
test   %eax,%eax
mov    %eax,%ebx
js     8058570 <fchmod@plt+0xe3c0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805a450 <fts_children+0xf40>
jmp    80583e1 <fchmod@plt+0xe231>
lea    0x0(%esi),%esi
mov    %esi,%eax
test   %al,%al
je     805857c <fchmod@plt+0xe3cc>
mov    %edi,%eax
test   %al,%al
jne    80585c3 <fchmod@plt+0xe413>
mov    0x14(%esp),%edi
mov    0xc(%edi),%eax
orw    $0x1,0x3e(%edi)
mov    %eax,(%esp)
call   804a120 <closedir@plt>
mov    0x2c(%ebp),%eax
movl   $0x0,0xc(%edi)
test   $0x2,%ah
je     80585ae <fchmod@plt+0xe3fe>
test   %ebx,%ebx
js     80585ae <fchmod@plt+0xe3fe>
mov    %ebx,(%esp)
call   804a110 <close@plt>
mov    0x2c(%ebp),%eax
mov    0x14(%esp),%edi
movb   $0x0,0x3f(%esp)
movl   $0x0,0xc(%edi)
jmp    8057fb8 <fchmod@plt+0xde08>
call   8049e80 <__errno_location@plt>
mov    0x14(%esp),%edi
mov    (%eax),%eax
mov    %eax,0x20(%edi)
jmp    805857c <fchmod@plt+0xe3cc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebp),%ebx
jmp    8057eef <fchmod@plt+0xdd3f>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x20(%esp),%eax
call   8057650 <fchmod@plt+0xd4a0>
mov    0x14(%esp),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   804a120 <closedir@plt>
mov    $0x7,%ecx
xor    %eax,%eax
movl   $0x0,0xc(%ebx)
mov    %cx,0x3c(%ebx)
orl    $0x4000,0x2c(%ebp)
mov    %edi,(%esi)
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x14(%esp),%edi
mov    0xc(%edi),%eax
test   %eax,%eax
je     8058288 <fchmod@plt+0xe0d8>
mov    %eax,(%esp)
call   804a120 <closedir@plt>
cmpb   $0x0,0x3d(%esp)
movl   $0x0,0xc(%edi)
je     8058293 <fchmod@plt+0xe0e3>
jmp    80584d8 <fchmod@plt+0xe328>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   804a110 <close@plt>
mov    %edi,(%esi)
mov    0x14(%esp),%eax
cmpl   $0x3,0x38(%esp)
movl   $0x0,0xc(%eax)
je     8058779 <fchmod@plt+0xe5c9>
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x14(%esp),%esi
lea    0x2c(%ebp),%edx
mov    0x1c(%ebp),%eax
movl   $0x0,(%esp)
mov    %esi,%ecx
call   8057790 <fchmod@plt+0xd5e0>
mov    %ax,0x3c(%esi)
mov    0x2c(%ebp),%eax
jmp    8057f49 <fchmod@plt+0xdd99>
mov    0x14(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x4(%eax),%edx
mov    %ebp,%eax
movl   $0x805fff2,(%esp)
call   8057ac0 <fchmod@plt+0xd910>
test   %eax,%eax
setne  %al
jmp    80583a9 <fchmod@plt+0xe1f9>
cmpl   $0x3,0x38(%esp)
je     8058797 <fchmod@plt+0xe5e7>
mov    0x20(%esp),%eax
call   8057650 <fchmod@plt+0xd4a0>
xor    %eax,%eax
jmp    8058446 <fchmod@plt+0xe296>
testb  $0x2,0x2d(%ebp)
je     8058442 <fchmod@plt+0xe292>
lea    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   8049d70 <fstatfs64@plt>
test   %eax,%eax
jne    8058732 <fchmod@plt+0xe582>
mov    0x4c(%esp),%eax
cmp    $0x6969,%eax
je     8058430 <fchmod@plt+0xe280>
cmp    $0x1021994,%eax
je     8058430 <fchmod@plt+0xe280>
mov    0xc(%esp),%ecx
mov    %ebp,%eax
mov    0x20(%esp),%edx
movl   $0x8057480,0x28(%ebp)
call   80574f0 <fchmod@plt+0xd340>
movl   $0x0,0x28(%ebp)
mov    %eax,0x20(%esp)
jmp    8058442 <fchmod@plt+0xe292>
mov    0x14(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   804a120 <closedir@plt>
cmpl   $0x3,0x38(%esp)
movl   $0x0,0xc(%edi)
jne    8058687 <fchmod@plt+0xe4d7>
mov    0x14(%esp),%edi
mov    $0x4,%ebx
mov    %bx,0x3c(%edi)
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%edi)
xor    %eax,%eax
jmp    8058689 <fchmod@plt+0xe4d9>
mov    0x14(%esp),%eax
mov    $0x6,%ecx
mov    %cx,0x3c(%eax)
jmp    80586e7 <fchmod@plt+0xe537>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ebx
mov    %ebx,%esi
and    $0xffffe000,%esi
jne    8058a98 <fts_open+0x2e8>
mov    %ebx,%eax
and    $0x204,%eax
cmp    $0x204,%eax
je     8058a98 <fts_open+0x2e8>
test   $0x12,%bl
je     8058a98 <fts_open+0x2e8>
movl   $0x58,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8058b1d <fts_open+0x36d>
mov    %eax,%edi
mov    $0x16,%ecx
mov    %esi,%eax
test   $0x2,%bl
rep stos %eax,%es:(%edi)
mov    0x48(%esp),%eax
mov    %eax,0x28(%ebp)
jne    8058a58 <fts_open+0x2a8>
mov    %ebx,0x2c(%ebp)
mov    0x40(%esp),%eax
movl   $0xffffff9c,0x1c(%ebp)
mov    (%eax),%eax
test   %eax,%eax
je     8058b13 <fts_open+0x363>
mov    0x40(%esp),%edi
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
cmp    %eax,%esi
cmovb  %eax,%esi
add    $0x4,%edi
mov    (%edi),%eax
test   %eax,%eax
jne    8058838 <fts_open+0x88>
lea    0x1(%esi),%ecx
mov    $0x1000,%ax
cmp    $0x1000,%ecx
cmovb  %eax,%ecx
lea    0x20(%ebp),%edx
lea    0x14(%ebp),%eax
call   8057960 <fchmod@plt+0xd7b0>
test   %al,%al
mov    %al,0x17(%esp)
je     8058a86 <fts_open+0x2d6>
mov    0x40(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     8058af8 <fts_open+0x348>
xor    %ecx,%ecx
mov    $0x805ef75,%edx
mov    %ebp,%eax
call   80575d0 <fchmod@plt+0xd420>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8058a7b <fts_open+0x2cb>
movl   $0xffffffff,0x30(%eax)
mov    0x40(%esp),%eax
mov    (%eax),%edx
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     80588bf <fts_open+0x10f>
mov    0x2c(%ebp),%eax
shr    $0xa,%eax
and    $0x1,%eax
mov    %al,0x17(%esp)
test   %edx,%edx
je     8058b24 <fts_open+0x374>
and    $0x1000,%ebx
xor    %esi,%esi
lea    0x2c(%ebp),%eax
xor    %edi,%edi
mov    %ebx,0x10(%esp)
mov    %edx,%ebx
movl   $0x0,0x1c(%esp)
mov    %eax,0x18(%esp)
jmp    805892d <fts_open+0x17d>
cmpb   $0x0,0x17(%esp)
je     8058984 <fts_open+0x1d4>
mov    $0xb,%eax
mov    %ax,0x3c(%ebx)
mov    0x48(%esp),%eax
movl   $0x2,0x70(%ebx)
movl   $0x0,0x74(%ebx)
test   %eax,%eax
je     80589a9 <fts_open+0x1f9>
mov    %edi,0x8(%ebx)
mov    %ebx,%edi
mov    0x40(%esp),%eax
add    $0x1,%esi
mov    (%eax,%esi,4),%ebx
test   %ebx,%ebx
je     80589d8 <fts_open+0x228>
mov    %ebx,(%esp)
call   8049db0 <strlen@plt>
mov    0x10(%esp),%edx
test   %edx,%edx
jne    8058950 <fts_open+0x1a0>
cmp    $0x2,%eax
jbe    8058950 <fts_open+0x1a0>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
je     8058a40 <fts_open+0x290>
lea    0x0(%esi),%esi
mov    %eax,%ecx
mov    %ebx,%edx
mov    %ebp,%eax
call   80575d0 <fchmod@plt+0xd420>
test   %eax,%eax
mov    %eax,%ebx
je     8058a68 <fts_open+0x2b8>
movl   $0x0,0x30(%eax)
mov    0xc(%esp),%eax
test   %edi,%edi
mov    %eax,0x4(%ebx)
lea    0xa4(%ebx),%eax
mov    %eax,0x18(%ebx)
jne    80588e8 <fts_open+0x138>
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x18(%esp),%edx
movl   $0x0,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
mov    %ax,0x3c(%ebx)
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8058916 <fts_open+0x166>
test   %edi,%edi
movl   $0x0,0x8(%ebx)
je     8058b08 <fts_open+0x358>
mov    0x1c(%esp),%eax
add    $0x1,%esi
mov    %ebx,0x1c(%esp)
mov    %ebx,0x8(%eax)
mov    0x40(%esp),%eax
mov    (%eax,%esi,4),%ebx
test   %ebx,%ebx
jne    805892d <fts_open+0x17d>
lea    0x0(%esi),%esi
cmp    $0x1,%esi
ja     8058ad8 <fts_open+0x328>
xor    %ecx,%ecx
mov    $0x805ef75,%edx
mov    %ebp,%eax
call   80575d0 <fchmod@plt+0xd420>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8058a68 <fts_open+0x2b8>
mov    $0x9,%edx
mov    %dx,0x3c(%eax)
lea    0x34(%ebp),%edx
mov    %edi,0x8(%eax)
mov    0x2c(%ebp),%eax
call   80579e0 <fchmod@plt+0xd830>
test   %al,%al
je     8058a68 <fts_open+0x2b8>
mov    0x2c(%ebp),%edx
test   $0x204,%edx
je     8058ab0 <fts_open+0x300>
lea    0x38(%ebp),%eax
mov    %eax,(%esp)
movl   $0xffffffff,0x4(%esp)
call   805a700 <fts_children+0x11f0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x2f,-0x2(%ebx,%eax,1)
jne    8058950 <fts_open+0x1a0>
sub    $0x1,%eax
cmp    $0x1,%eax
jne    8058a40 <fts_open+0x290>
jmp    8058950 <fts_open+0x1a0>
mov    %ebx,%eax
and    $0xfd,%ah
or     $0x4,%eax
mov    %eax,0x2c(%ebp)
jmp    8058818 <fts_open+0x68>
mov    %edi,%eax
call   8057650 <fchmod@plt+0xd4a0>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebp,(%esp)
call   8049a60 <free@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%ebp),%eax
mov    $0x805fff3,%ecx
call   8057a50 <fchmod@plt+0xd8a0>
test   %eax,%eax
mov    %eax,0x18(%ebp)
jns    8058a20 <fts_open+0x270>
orl    $0x4,0x2c(%ebp)
jmp    8058a20 <fts_open+0x270>
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     80589e1 <fts_open+0x231>
mov    %edi,%edx
mov    %esi,%ecx
mov    %ebp,%eax
call   80574f0 <fchmod@plt+0xd340>
mov    %eax,%edi
jmp    80589e1 <fts_open+0x231>
xchg   %ax,%ax
xor    %edx,%edx
movl   $0x0,0xc(%esp)
jmp    80588aa <fts_open+0xfa>
nop
mov    %ebx,%edi
mov    %ebx,0x1c(%esp)
jmp    805891b <fts_open+0x16b>
mov    $0x1000,%ecx
jmp    805885e <fts_open+0xae>
xor    %eax,%eax
jmp    8058a90 <fts_open+0x2e0>
xor    %edi,%edi
jmp    80589e1 <fts_open+0x231>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     8058b88 <fts_close+0x58>
mov    0x30(%eax),%edx
test   %edx,%edx
jns    8058b61 <fts_close+0x31>
jmp    8058c6c <fts_close+0x13c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
js     8058b80 <fts_close+0x50>
mov    %ebx,%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
jne    8058b50 <fts_close+0x20>
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
jns    8058b5f <fts_close+0x2f>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8058b94 <fts_close+0x64>
call   8057650 <fchmod@plt+0xd4a0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x2c(%esi),%eax
test   $0x2,%ah
je     8058c20 <fts_close+0xf0>
mov    0x1c(%esi),%eax
test   %eax,%eax
js     8058bd0 <fts_close+0xa0>
mov    %eax,(%esp)
call   804a110 <close@plt>
test   %eax,%eax
jne    8058c60 <fts_close+0x130>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
lea    0x38(%esi),%eax
call   8057690 <fchmod@plt+0xd4e0>
mov    0x30(%esi),%eax
test   %eax,%eax
je     8058be9 <fts_close+0xb9>
mov    %eax,(%esp)
call   80532c0 <fchmod@plt+0x9110>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     8058c50 <fts_close+0x120>
test   %eax,%eax
je     8058c01 <fts_close+0xd1>
mov    %eax,(%esp)
call   80532c0 <fchmod@plt+0x9110>
mov    %esi,(%esp)
call   8049a60 <free@plt>
xor    %eax,%eax
test   %ebx,%ebx
jne    8058ca5 <fts_close+0x175>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   $0x4,%al
jne    8058bd0 <fts_close+0xa0>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049fe0 <fchdir@plt>
test   %eax,%eax
jne    8058c75 <fts_close+0x145>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
test   %eax,%eax
je     8058bd0 <fts_close+0xa0>
call   8049e80 <__errno_location@plt>
mov    %eax,%edi
mov    (%edi),%ebx
jmp    8058bd2 <fts_close+0xa2>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    8058c01 <fts_close+0xd1>
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebx
jmp    8058bd2 <fts_close+0xa2>
mov    %eax,%ebx
xchg   %ax,%ax
jmp    8058b80 <fts_close+0x50>
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%edi
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
test   %eax,%eax
je     8058bd2 <fts_close+0xa2>
test   %ebx,%ebx
jne    8058bd2 <fts_close+0xa2>
mov    (%edi),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8058bd2 <fts_close+0xa2>
call   8049e80 <__errno_location@plt>
mov    %ebx,(%eax)
mov    $0xffffffff,%eax
jmp    8058c13 <fts_close+0xe3>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    (%esi),%edi
test   %edi,%edi
je     8058dc8 <fts_read+0x108>
mov    0x2c(%esi),%edx
test   $0x40,%dh
jne    8058dc8 <fts_read+0x108>
movzwl 0x40(%edi),%eax
mov    $0x3,%ecx
mov    %cx,0x40(%edi)
cmp    $0x1,%ax
je     8059070 <fts_read+0x3b0>
cmp    $0x2,%ax
je     8058dd8 <fts_read+0x118>
cmpw   $0x1,0x3c(%edi)
jne    8058d3d <fts_read+0x7d>
nop
jmp    8058e55 <fts_read+0x195>
lea    0x0(%esi),%esi
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    0x30(%ebx),%edx
test   %edx,%edx
je     8058e90 <fts_read+0x1d0>
movzwl 0x40(%ebx),%eax
cmp    $0x4,%ax
jne    8058f98 <fts_read+0x2d8>
mov    %ebx,%edi
mov    0x8(%edi),%ebx
test   %ebx,%ebx
jne    8058d18 <fts_read+0x58>
mov    0x4(%edi),%ebx
mov    0xc(%ebx),%ecx
test   %ecx,%ecx
jne    8059240 <fts_read+0x580>
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   8049a60 <free@plt>
cmpl   $0xffffffff,0x30(%ebx)
je     805913d <fts_read+0x47d>
cmpw   $0xb,0x3c(%ebx)
je     805946d <fts_read+0x7ad>
mov    0x14(%esi),%edx
mov    0x28(%ebx),%eax
movb   $0x0,(%edx,%eax,1)
mov    0x30(%ebx),%ebp
test   %ebp,%ebp
je     80590cd <fts_read+0x40d>
movzwl 0x3e(%ebx),%eax
test   $0x2,%al
je     805908f <fts_read+0x3cf>
mov    0x2c(%esi),%eax
test   $0x4,%al
je     80590dd <fts_read+0x41d>
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
mov    0x2c(%esi),%eax
mov    0x20(%ebx),%edi
test   %edi,%edi
je     8059050 <fts_read+0x390>
mov    $0x7,%edx
mov    %dx,0x3c(%ebx)
test   $0x40,%ah
je     8058e7e <fts_read+0x1be>
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzwl 0x3c(%edi),%eax
lea    -0xc(%eax),%ecx
cmp    $0x1,%cx
jbe    8059102 <fts_read+0x442>
sub    $0x1,%ax
jne    8058d3d <fts_read+0x7d>
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x40,%dl
je     8058fe8 <fts_read+0x328>
mov    0x44(%edi),%eax
mov    0x48(%edi),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%eax
or     %eax,%ecx
je     8058fe8 <fts_read+0x328>
testb  $0x2,0x3e(%edi)
jne    8059230 <fts_read+0x570>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8058e32 <fts_read+0x172>
call   8057650 <fchmod@plt+0xd4a0>
movl   $0x0,0x4(%esi)
mov    $0x6,%eax
mov    %edi,%ecx
mov    %ax,0x3c(%edi)
mov    0x2c(%esi),%eax
lea    0x34(%esi),%edx
call   8057dc0 <fchmod@plt+0xdc10>
add    $0x8c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x4,%ax
jne    8058df8 <fts_read+0x138>
jmp    8058e15 <fts_read+0x155>
lea    0x0(%esi),%esi
mov    0x70(%ebx),%edx
mov    0x74(%ebx),%eax
mov    %edx,%ecx
xor    $0x2,%ecx
or     %eax,%ecx
je     80591bb <fts_read+0x4fb>
xor    $0x1,%edx
or     %eax,%edx
jne    805946d <fts_read+0x7ad>
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   8057730 <fchmod@plt+0xd580>
test   %eax,%eax
jne    805919d <fts_read+0x4dd>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     8059160 <fts_read+0x4a0>
test   %eax,%eax
je     8058ebb <fts_read+0x1fb>
mov    %eax,(%esp)
call   80532c0 <fchmod@plt+0x9110>
mov    0x34(%ebx),%eax
lea    0xa4(%ebx),%edi
mov    %eax,0x28(%ebx)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049a50 <memmove@plt>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049f80 <strrchr@plt>
test   %eax,%eax
je     8058f24 <fts_read+0x264>
cmp    %eax,%edi
je     80591a9 <fts_read+0x4e9>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   8049db0 <strlen@plt>
mov    0x18(%esp),%edx
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%ebp
lea    0x1(%eax),%eax
mov    %eax,0x8(%esp)
call   8049a50 <memmove@plt>
mov    %ebp,0x34(%ebx)
mov    0x14(%esi),%eax
lea    0x34(%esi),%edx
mov    %eax,0x1c(%ebx)
mov    %eax,0x18(%ebx)
mov    0x2c(%esi),%eax
call   80579e0 <fchmod@plt+0xd830>
movzwl 0x3c(%ebx),%ecx
cmp    $0xb,%cx
mov    %ebx,(%esi)
je     8058e60 <fts_read+0x1a0>
cmp    $0x1,%cx
mov    %ebx,%eax
jne    8058dca <fts_read+0x10a>
mov    0x30(%ebx),%eax
test   %eax,%eax
jne    8058f67 <fts_read+0x2a7>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,0xc(%esi)
mov    %edx,0x10(%esi)
mov    0x2c(%esi),%eax
lea    0x34(%esi),%edx
mov    %ebx,%ecx
call   8057ce0 <fchmod@plt+0xdb30>
mov    %eax,%edx
mov    %ebx,%eax
test   %dl,%dl
jne    8058dca <fts_read+0x10a>
call   8049e80 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    8058dca <fts_read+0x10a>
lea    0x0(%esi),%esi
cmp    $0x2,%ax
je     805926b <fts_read+0x5ab>
mov    0x4(%ebx),%ecx
mov    0x28(%ecx),%edx
mov    0x1c(%ecx),%ecx
lea    -0x1(%edx),%eax
cmpb   $0x2f,-0x1(%ecx,%edx,1)
cmovne %edx,%eax
add    0x14(%esi),%eax
movb   $0x2f,(%eax)
mov    0x34(%ebx),%ecx
add    $0x1,%eax
mov    %eax,(%esp)
lea    0x1(%ecx),%edx
mov    %edx,0x8(%esp)
lea    0xa4(%ebx),%edx
mov    %edx,0x4(%esp)
call   8049a50 <memmove@plt>
movzwl 0x3c(%ebx),%ecx
jmp    8058f3c <fts_read+0x27c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     805917f <fts_read+0x4bf>
test   $0x20,%dh
jne    805916d <fts_read+0x4ad>
mov    0x18(%edi),%eax
mov    $0xffffffff,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   8057ac0 <fchmod@plt+0xd910>
test   %eax,%eax
je     80590fa <fts_read+0x43a>
call   8049e80 <__errno_location@plt>
mov    0x4(%esi),%edx
mov    %edx,%ebx
mov    (%eax),%eax
orw    $0x1,0x3e(%edi)
test   %edx,%edx
mov    %eax,0x20(%edi)
je     8059042 <fts_read+0x382>
mov    0x4(%ebx),%eax
mov    0x18(%eax),%eax
mov    %eax,0x18(%ebx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    8059030 <fts_read+0x370>
mov    %edx,%ebx
movl   $0x0,0x4(%esi)
jmp    8058fa2 <fts_read+0x2e2>
xchg   %ax,%ax
mov    $0x6,%ecx
mov    %cx,0x3c(%ebx)
lea    0x34(%esi),%edx
mov    %ebx,%ecx
call   8057dc0 <fchmod@plt+0xdc10>
mov    0x2c(%esi),%eax
jmp    8058dbf <fts_read+0xff>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x0,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
mov    %ax,0x3c(%edi)
mov    %edi,%eax
jmp    8058dca <fts_read+0x10a>
test   $0x1,%al
jne    8058da8 <fts_read+0xe8>
mov    0x4(%ebx),%edx
mov    $0xffffffff,%ecx
mov    %esi,%eax
movl   $0x805fff2,(%esp)
call   8057ac0 <fchmod@plt+0xd910>
test   %eax,%eax
je     8058da8 <fts_read+0xe8>
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
mov    0x2c(%esi),%eax
or     $0x40,%ah
mov    %eax,0x2c(%esi)
jmp    8058dab <fts_read+0xeb>
mov    %esi,%eax
call   8057730 <fchmod@plt+0xd580>
test   %eax,%eax
jne    80590b5 <fts_read+0x3f5>
jmp    8058da8 <fts_read+0xe8>
test   $0x2,%ah
je     8059297 <fts_read+0x5d7>
mov    0x24(%ebx),%edx
mov    $0x1,%ecx
mov    %esi,%eax
call   80576d0 <fchmod@plt+0xd520>
jmp    8058d9d <fts_read+0xdd>
mov    0x4(%esi),%ebx
jmp    8059042 <fts_read+0x382>
mov    0x1c(%esi),%eax
mov    %edi,%ecx
mov    %edi,%ebx
lea    0x2c(%esi),%edx
movl   $0x1,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
cmp    $0x1,%ax
mov    %eax,%ecx
mov    %ax,0x3c(%edi)
jne    8058f3c <fts_read+0x27c>
mov    0x2c(%esi),%edx
test   $0x4,%dl
je     8059309 <fts_read+0x649>
mov    %edi,(%esi)
mov    %edi,%ebx
jmp    8058f48 <fts_read+0x288>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
call   8049e80 <__errno_location@plt>
movl   $0x0,(%eax)
xor    %eax,%eax
movl   $0x0,(%esi)
jmp    8058dca <fts_read+0x10a>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    8058ebb <fts_read+0x1fb>
and    $0xdf,%dh
mov    %edx,0x2c(%esi)
call   8057650 <fchmod@plt+0xd4a0>
movl   $0x0,0x4(%esi)
mov    $0x3,%edx
mov    %esi,%eax
call   8057e90 <fchmod@plt+0xdce0>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     8059386 <fts_read+0x6c6>
mov    %eax,%ebx
jmp    8059042 <fts_read+0x382>
orl    $0x4000,0x2c(%esi)
jmp    8058dc8 <fts_read+0x108>
cmpb   $0x0,0xa5(%ebx)
jne    8058ef9 <fts_read+0x239>
jmp    8058f24 <fts_read+0x264>
mov    0x30(%ebx),%eax
mov    0x4(%ebx),%edi
test   %eax,%eax
jle    80591db <fts_read+0x51b>
mov    0x38(%edi),%eax
test   %eax,%eax
jne    80591db <fts_read+0x51b>
mov    0x2c(%esi),%eax
and    $0x18,%eax
cmp    $0x18,%eax
je     805932f <fts_read+0x66f>
mov    0x1c(%esi),%eax
mov    %ebx,%ecx
lea    0x2c(%esi),%edx
movl   $0x0,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
mov    %eax,%ecx
mov    %ax,0x3c(%ebx)
mov    0x54(%ebx),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8058f48 <fts_read+0x288>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8058f48 <fts_read+0x288>
mov    0x38(%edi),%eax
test   %eax,%eax
je     8058f48 <fts_read+0x288>
sub    $0x1,%eax
mov    %eax,0x38(%edi)
jmp    8058f48 <fts_read+0x288>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
jmp    8058e1f <fts_read+0x15f>
mov    0x28(%ebx),%eax
mov    0x14(%esi),%edx
mov    %ebx,(%esi)
movb   $0x0,(%edx,%eax,1)
mov    $0x3,%edx
mov    %esi,%eax
call   8057e90 <fchmod@plt+0xdce0>
test   %eax,%eax
mov    %eax,%ebx
je     80592d0 <fts_read+0x610>
mov    %edi,(%esp)
call   8049a60 <free@plt>
jmp    8058fa2 <fts_read+0x2e2>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x1,(%esp)
call   8057790 <fchmod@plt+0xd5e0>
cmp    $0x1,%ax
mov    %ax,0x3c(%ebx)
je     80592e2 <fts_read+0x622>
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
jmp    8058fa2 <fts_read+0x2e2>
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049fe0 <fchdir@plt>
test   %eax,%eax
je     8058d9d <fts_read+0xdd>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebp
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   804a110 <close@plt>
mov    %edi,0x0(%ebp)
mov    %edi,0x20(%ebx)
orl    $0x4000,0x2c(%esi)
jmp    8058d9d <fts_read+0xdd>
testb  $0x40,0x2d(%esi)
jne    8058dc8 <fts_read+0x108>
mov    0x4(%edi),%ebx
jmp    8058d52 <fts_read+0x92>
mov    0x2c(%esi),%edx
test   $0x4,%dl
jne    8059289 <fts_read+0x5c9>
mov    0x1c(%esi),%eax
mov    $0x805fff3,%ecx
call   8057a50 <fchmod@plt+0xd8a0>
test   %eax,%eax
mov    %eax,0x24(%ebx)
js     80593ba <fts_read+0x6fa>
orw    $0x2,0x3e(%ebx)
jmp    8059289 <fts_read+0x5c9>
mov    0x1c(%esi),%eax
mov    $0x805fff3,%ecx
call   8057a50 <fchmod@plt+0xd8a0>
test   %eax,%eax
mov    %eax,0x24(%edi)
js     80593d2 <fts_read+0x712>
orw    $0x2,0x3e(%edi)
movzwl 0x3c(%edi),%ecx
jmp    8058f3c <fts_read+0x27c>
mov    0x2c(%edi),%edx
testb  $0x2,0x2d(%edx)
mov    0x30(%edx),%ebp
je     80591db <fts_read+0x51b>
test   %ebp,%ebp
je     8059472 <fts_read+0x7b2>
mov    0x44(%edi),%eax
mov    %edx,0x18(%esp)
mov    0x48(%edi),%edx
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edx,0x24(%esp)
call   8052ea0 <fchmod@plt+0x8cf0>
mov    0x18(%esp),%edx
test   %eax,%eax
je     80593ef <fts_read+0x72f>
movzbl 0x8(%eax),%edx
test   %dl,%dl
je     80591db <fts_read+0x51b>
movzwl 0x3c(%ebx),%ecx
jmp    8058f48 <fts_read+0x288>
mov    0x2c(%esi),%eax
test   $0x40,%ah
jne    8058dc8 <fts_read+0x108>
mov    0x20(%edi),%ebp
test   %ebp,%ebp
je     80593a9 <fts_read+0x6e9>
cmpw   $0x4,0x3c(%edi)
je     80593a9 <fts_read+0x6e9>
mov    $0x7,%ebx
mov    %bx,0x3c(%edi)
lea    0x34(%esi),%edx
mov    %edi,%ecx
call   8057dc0 <fchmod@plt+0xdc10>
mov    %edi,%eax
jmp    8058dca <fts_read+0x10a>
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
mov    $0x7,%eax
mov    %ax,0x3c(%ebx)
jmp    8059289 <fts_read+0x5c9>
call   8049e80 <__errno_location@plt>
mov    $0x7,%ecx
mov    (%eax),%eax
mov    %eax,0x20(%edi)
mov    $0x7,%eax
mov    %ax,0x3c(%edi)
jmp    8059134 <fts_read+0x474>
movl   $0xc,(%esp)
mov    %edx,0x1c(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80591db <fts_read+0x51b>
mov    0x1c(%esp),%edx
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%edx),%eax
mov    %eax,(%esp)
call   8049d70 <fstatfs64@plt>
xor    %edx,%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    8059437 <fts_read+0x777>
cmpl   $0x52654973,0x2c(%esp)
sete   %dl
mov    %dl,0x8(%ecx)
mov    0x44(%edi),%eax
mov    %edx,0x1c(%esp)
mov    0x48(%edi),%edx
mov    %ecx,0x18(%esp)
mov    %eax,(%ecx)
mov    %edx,0x4(%ecx)
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   8053700 <fchmod@plt+0x9550>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
test   %eax,%eax
je     80594b8 <fts_read+0x7f8>
cmp    %eax,%ecx
je     8059375 <fts_read+0x6b5>
call   804a0c0 <abort@plt>
movl   $0x8049a60,0x10(%esp)
movl   $0x8057460,0xc(%esp)
movl   $0x8057430,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
mov    %edx,0x18(%esp)
call   80530f0 <fchmod@plt+0x8f40>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,0x30(%edx)
jne    8059347 <fts_read+0x687>
jmp    80591db <fts_read+0x51b>
mov    %ecx,(%esp)
call   8049a60 <free@plt>
jmp    80591db <fts_read+0x51b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x18(%esp),%eax
cmp    $0x4,%eax
ja     80594f0 <fts_set+0x20>
mov    0x14(%esp),%edx
mov    %ax,0x40(%edx)
xor    %eax,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
testl  $0xffffdfff,0x34(%esp)
mov    0x30(%esp),%ebx
jne    8059608 <fts_children+0xf8>
call   8049e80 <__errno_location@plt>
mov    (%ebx),%esi
movl   $0x0,(%eax)
mov    %eax,%edi
testb  $0x40,0x2d(%ebx)
jne    8059620 <fts_children+0x110>
movzwl 0x3c(%esi),%ecx
cmp    $0x9,%cx
je     80595f8 <fts_children+0xe8>
xor    %eax,%eax
cmp    $0x1,%cx
jne    8059596 <fts_children+0x86>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     8059564 <fts_children+0x54>
call   8057650 <fchmod@plt+0xd4a0>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebp
je     80595a0 <fts_children+0x90>
mov    0x30(%esi),%eax
test   %eax,%eax
jne    805958a <fts_children+0x7a>
mov    0x18(%esi),%eax
cmpb   $0x2f,(%eax)
je     805958a <fts_children+0x7a>
mov    0x2c(%ebx),%edx
test   $0x4,%dl
je     80595b8 <fts_children+0xa8>
mov    %ebp,%edx
mov    %ebx,%eax
call   8057e90 <fchmod@plt+0xdce0>
mov    %eax,0x4(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x30(%esi),%eax
mov    $0x2,%bp
orl    $0x2000,0x2c(%ebx)
test   %eax,%eax
je     805957a <fts_children+0x6a>
jmp    805958a <fts_children+0x7a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebx),%eax
mov    $0x805fff3,%ecx
call   8057a50 <fchmod@plt+0xd8a0>
test   %eax,%eax
mov    %eax,%esi
js     8059640 <fts_children+0x130>
mov    %ebp,%edx
mov    %ebx,%eax
call   8057e90 <fchmod@plt+0xdce0>
testb  $0x2,0x2d(%ebx)
mov    %eax,0x4(%ebx)
je     8059628 <fts_children+0x118>
mov    $0x1,%ecx
mov    %esi,%edx
mov    %ebx,%eax
call   80576d0 <fchmod@plt+0xd520>
mov    0x4(%ebx),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8(%esi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8059596 <fts_children+0x86>
nop
mov    %esi,(%esp)
call   8049fe0 <fchdir@plt>
test   %eax,%eax
jne    805964e <fts_children+0x13e>
mov    %esi,(%esp)
call   804a110 <close@plt>
jmp    80595eb <fts_children+0xdb>
xchg   %ax,%ax
movl   $0x0,0x4(%ebx)
xor    %eax,%eax
jmp    8059596 <fts_children+0x86>
mov    (%edi),%ebx
mov    %esi,(%esp)
call   804a110 <close@plt>
xor    %eax,%eax
mov    %ebx,(%edi)
jmp    8059596 <fts_children+0x86>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
test   %eax,%eax
je     80596b8 <fts_children+0x1a8>
cmp    $0xa,%eax
je     8059688 <fts_children+0x178>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    (%edx),%edx
mov    $0x8060030,%edi
mov    $0xa,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805967f <fts_children+0x16f>
mov    %edx,(%esp)
call   804a000 <freecon@plt>
call   8049e80 <__errno_location@plt>
movl   $0x3d,(%eax)
mov    $0xffffffff,%eax
jmp    805967f <fts_children+0x16f>
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
movl   $0x5f,(%eax)
mov    $0xffffffff,%eax
jmp    805967f <fts_children+0x16f>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049d50 <getfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    8059670 <fts_children+0x160>
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c80 <lgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    8059670 <fts_children+0x160>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <fgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    8059670 <fts_children+0x160>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x50(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x60(%esp),%eax
test   $0xfffffbff,%eax
jne    8059930 <fts_children+0x420>
test   %eax,%eax
je     8059900 <fts_children+0x3f0>
mov    0x8065888,%edx
test   %edx,%edx
js     80597f8 <fts_children+0x2e8>
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049ee0 <linkat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     80597d8 <fts_children+0x2c8>
movl   $0x1,0x8065888
00
mov    %ebx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,0x2c(%esp)
jne    80597bf <fts_children+0x2af>
movl   $0xffffffff,0x8065888
ff
jmp    8059801 <fts_children+0x2f1>
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%edi
mov    $0x14,%esi
mov    %ebp,0x20(%esp)
jmp    805982d <fts_children+0x31d>
cmp    %edi,0x1c(%esp)
je     80598b0 <fts_children+0x3a0>
mov    %edi,(%esp)
mov    %ebx,%edi
call   8049a60 <free@plt>
sub    $0x1,%esi
je     80598c0 <fts_children+0x3b0>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8059e60 <fts_children+0x950>
test   %eax,%eax
mov    %eax,%ebx
je     8059964 <fts_children+0x454>
cmpb   $0x2f,(%ebx)
je     8059810 <fts_children+0x300>
mov    %edi,(%esp)
call   80521b0 <fchmod@plt+0x8000>
cmp    %edi,0x1c(%esp)
mov    %eax,%ebp
je     8059864 <fts_children+0x354>
mov    %edi,(%esp)
call   8049a60 <free@plt>
test   %ebp,%ebp
je     8059948 <fts_children+0x438>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   80527f0 <fchmod@plt+0x8640>
mov    %ebp,(%esp)
mov    %eax,%edi
call   8049a60 <free@plt>
mov    %ebx,(%esp)
call   8049a60 <free@plt>
test   %edi,%edi
jne    8059824 <fts_children+0x314>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    80597cb <fts_children+0x2bb>
lea    0x0(%esi),%esi
sub    $0x1,%esi
mov    %ebx,%edi
jne    805982d <fts_children+0x31d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    $0x28,%ebx
movl   $0x28,(%eax)
cmp    %edi,0x1c(%esp)
mov    $0xffffffff,%eax
je     80597cb <fts_children+0x2bb>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8049a60 <free@plt>
mov    0x2c(%esp),%eax
mov    %ebx,(%eax)
mov    0x1c(%esp),%eax
jmp    80597cb <fts_children+0x2bb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %ebp,0x50(%esp)
movl   $0x0,0x60(%esp)
mov    %eax,0x5c(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x54(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049ee0 <linkat@plt>
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    80597cb <fts_children+0x2bb>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049a60 <free@plt>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    80597cb <fts_children+0x2bb>
mov    0x2c(%esp),%eax
mov    0x20(%esp),%ebp
mov    (%eax),%ebx
cmp    $0x16,%ebx
jne    80598cf <fts_children+0x3bf>
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   8049ee0 <linkat@plt>
cmp    %edi,0x1c(%esp)
je     80597cb <fts_children+0x2bb>
mov    0x2c(%esp),%esi
mov    %eax,0x1c(%esp)
mov    (%esi),%ebx
mov    %edi,(%esp)
call   8049a60 <free@plt>
mov    0x1c(%esp),%eax
mov    %ebx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xffc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xfec(%esp)
xor    %eax,%eax
testl  $0xfffffeff,0x1010(%esp)
ff
jne    8059bb0 <fts_children+0x6a0>
cmp    $0xffffff9c,%ebx
mov    %edx,%ebp
mov    %ecx,%esi
je     8059a80 <fts_children+0x570>
cmpb   $0x2f,(%edx)
je     8059a80 <fts_children+0x570>
lea    0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805b0e0 <fts_children+0x1bd0>
test   %eax,%eax
mov    %eax,%edi
je     8059ad9 <fts_children+0x5c9>
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
je     8059b60 <fts_children+0x650>
call   80561a0 <fchmod@plt+0xbff0>
mov    %eax,0x14(%esp)
call   8049e80 <__errno_location@plt>
lea    0x2c(%esp),%ecx
cmp    %ecx,%edi
mov    (%eax),%edx
je     8059a70 <fts_children+0x560>
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8049a60 <free@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
cmpl   $0xffffffff,0x14(%esp)
je     8059ad0 <fts_children+0x5c0>
mov    0x14(%esp),%ebp
jmp    8059a9b <fts_children+0x58b>
lea    0x0(%esi),%esi
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
je     8059ac0 <fts_children+0x5b0>
call   80561a0 <fchmod@plt+0xbff0>
mov    %eax,%ebp
mov    0xfec(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    8059c12 <fts_children+0x702>
add    $0xffc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   80561d0 <fchmod@plt+0xc020>
mov    %eax,%ebp
jmp    8059a9b <fts_children+0x58b>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x14,%edx
jne    8059b70 <fts_children+0x660>
lea    0x24(%esp),%edi
mov    %edi,(%esp)
call   805ac40 <fts_children+0x1730>
test   %eax,%eax
jne    8059c26 <fts_children+0x716>
test   %ebx,%ebx
js     8059afb <fts_children+0x5eb>
cmp    %ebx,0x24(%esp)
je     8059bf5 <fts_children+0x6e5>
mov    %ebx,(%esp)
call   8049fe0 <fchdir@plt>
test   %eax,%eax
jne    8059bc8 <fts_children+0x6b8>
cmpl   $0x100,0x1010(%esp)
00
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
je     8059b9e <fts_children+0x68e>
call   80561a0 <fchmod@plt+0xbff0>
mov    %eax,%ebp
xor    %ebx,%ebx
cmp    $0xffffffff,%ebp
je     8059be5 <fts_children+0x6d5>
mov    %edi,(%esp)
call   805acb0 <fts_children+0x17a0>
test   %eax,%eax
jne    8059c17 <fts_children+0x707>
mov    %edi,(%esp)
call   805ace0 <fts_children+0x17d0>
test   %ebx,%ebx
je     8059a9b <fts_children+0x58b>
call   8049e80 <__errno_location@plt>
mov    %ebx,(%eax)
jmp    8059a9b <fts_children+0x58b>
lea    0x0(%esi),%esi
call   80561d0 <fchmod@plt+0xc020>
mov    %eax,0x14(%esp)
jmp    8059a49 <fts_children+0x539>
xchg   %ax,%ax
lea    -0x1(%edx),%ecx
cmp    $0x1,%ecx
jbe    8059ad9 <fts_children+0x5c9>
cmp    $0xd,%edx
je     8059ad9 <fts_children+0x5c9>
cmp    $0x26,%edx
je     8059ad9 <fts_children+0x5c9>
cmp    $0x5f,%edx
je     8059ad9 <fts_children+0x5c9>
mov    %edx,(%eax)
jmp    8059a77 <fts_children+0x567>
xchg   %ax,%ax
call   80561d0 <fchmod@plt+0xc020>
mov    %eax,%ebp
jmp    8059b26 <fts_children+0x616>
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    $0xffffffff,%ebp
movl   $0x16,(%eax)
jmp    8059a9b <fts_children+0x58b>
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    $0xffffffff,%ebp
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   805ace0 <fts_children+0x17d0>
mov    %esi,(%ebx)
jmp    8059a9b <fts_children+0x58b>
call   8049e80 <__errno_location@plt>
mov    (%eax),%ebx
lea    0x0(%esi,%eiz,1),%esi
jmp    8059b31 <fts_children+0x621>
mov    %edi,(%esp)
mov    $0xffffffff,%ebp
call   805ace0 <fts_children+0x17d0>
call   8049e80 <__errno_location@plt>
movl   $0x9,(%eax)
jmp    8059a9b <fts_children+0x58b>
call   8049b20 <__stack_chk_fail@plt>
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   805abc0 <fts_children+0x16b0>
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   805ab80 <fts_children+0x1670>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0x806588c,%edx
mov    0xb4(%esp),%ebp
mov    0xb8(%esp),%ebx
mov    0xbc(%esp),%esi
test   %edx,%edx
js     8059d70 <fts_children+0x860>
test   %ebx,%ebx
je     8059c83 <fts_children+0x773>
cmpl   $0x3ffffffe,0x4(%ebx)
je     8059cc8 <fts_children+0x7b8>
cmpl   $0x3ffffffe,0xc(%ebx)
je     8059cc8 <fts_children+0x7b8>
mov    0xb0(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80499b0 <utimensat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8059d38 <fts_children+0x828>
test   %eax,%eax
jne    8059da8 <fts_children+0x898>
movl   $0x1,0x806588c
00
mov    %edi,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %esi,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049b80 <__fxstatat64@plt>
test   %eax,%eax
jne    8059d98 <fts_children+0x888>
cmpl   $0x3ffffffe,0x4(%ebx)
je     8059db8 <fts_children+0x8a8>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
cmpl   $0x3ffffffe,0xc(%ebx)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
je     8059de0 <fts_children+0x8d0>
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
lea    0x20(%esp),%ebx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jmp    8059c83 <fts_children+0x773>
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
je     8059d90 <fts_children+0x880>
cmp    $0x16,%eax
je     8059d52 <fts_children+0x842>
cmp    $0x26,%eax
jne    8059cb1 <fts_children+0x7a1>
mov    0x806588c,%eax
test   %eax,%eax
js     8059d70 <fts_children+0x860>
call   8049e80 <__errno_location@plt>
cmpl   $0x26,(%eax)
jne    8059d70 <fts_children+0x860>
movl   $0xffffffff,0x806588c
ff
nop
mov    0xb0(%esp),%eax
mov    %ebx,%ecx
mov    %ebp,%edx
mov    %esi,(%esp)
call   80599d0 <fts_children+0x4c0>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   $0xfffffeff,%esi
je     8059d52 <fts_children+0x842>
add    $0x9c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e80 <__errno_location@plt>
mov    (%eax),%eax
jmp    8059d44 <fts_children+0x834>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x3ffffffe,0xc(%ebx)
je     8059cbd <fts_children+0x7ad>
mov    0x70(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x24(%esp)
jmp    8059d1e <fts_children+0x80e>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
lea    0x20(%esp),%ebx
mov    %eax,0x28(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x2c(%esp)
jmp    8059c83 <fts_children+0x773>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   805b230 <fts_children+0x1d20>
test   %eax,%eax
je     8059e3f <fts_children+0x92f>
mov    0x1c(%esp),%edx
test   %edx,%edx
js     8059e46 <fts_children+0x936>
mov    0x30(%esp),%ecx
mov    %eax,(%ecx)
mov    %edx,%eax
add    $0x2c,%esp
ret
mov    $0xffffffff,%eax
jmp    8059e3b <fts_children+0x92b>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049e80 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    $0xffffffff,%eax
jmp    8059e3b <fts_children+0x92b>
sub    $0x2c,%esp
mov    0x34(%esp),%eax
movl   $0x8049cd0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   805a270 <fts_children+0xd60>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804ac00 <fchmod@plt+0xa50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
mov    %eax,%ebp
mov    0x44(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     8059fa2 <fts_children+0xa92>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movb   $0x0,0x1f(%esp)
movl   $0xffffffff,0x18(%esp)
jmp    8059f46 <fts_children+0xa36>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8059f78 <fts_children+0xa68>
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
imul   0x4c(%esp),%eax
add    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049ad0 <memcmp@plt>
movzbl 0x1f(%esp),%edx
test   %eax,%eax
mov    $0x1,%eax
cmovne %eax,%edx
mov    %dl,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8059f80 <fts_children+0xa70>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a080 <strncmp@plt>
test   %eax,%eax
jne    8059f34 <fts_children+0xa24>
mov    %edi,(%esp)
call   8049db0 <strlen@plt>
cmp    %ebp,%eax
je     8059f98 <fts_children+0xa88>
cmpl   $0xffffffff,0x18(%esp)
jne    8059ef8 <fts_children+0x9e8>
mov    %ebx,0x18(%esp)
jmp    8059f34 <fts_children+0xa24>
nop
movb   $0x1,0x1f(%esp)
jmp    8059f34 <fts_children+0xa24>
nop
cmpb   $0x0,0x1f(%esp)
jne    8059fac <fts_children+0xa9c>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,0x18(%esp)
jmp    8059f87 <fts_children+0xa77>
mov    $0xfffffffe,%eax
jmp    8059f8b <fts_children+0xa7b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     805a048 <fts_children+0xb38>
movl   $0x8060055,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8054ed0 <fchmod@plt+0xad20>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8054b20 <fchmod@plt+0xa970>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049c50 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x806003a,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    %eax,%esi
jmp    8059fea <fts_children+0xada>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80652a4,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x8060072,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   8049b00 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   8049d30 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    805a0fd <fts_children+0xbed>
jmp    805a148 <fts_children+0xc38>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x8060087,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80652a4,%eax
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     805a148 <fts_children+0xc38>
test   %esi,%esi
je     805a0c0 <fts_children+0xbb0>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049ad0 <memcmp@plt>
test   %eax,%eax
jne    805a0c0 <fts_children+0xbb0>
mov    %ebp,(%esp)
call   8054ef0 <fchmod@plt+0xad40>
movl   $0x806008f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80652a4,%eax
mov    %eax,(%esp)
call   804a050 <__fprintf_chk@plt>
jmp    805a0eb <fts_children+0xbdb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80652a4,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    805a166 <fts_children+0xc56>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049f90 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebp
mov    0x38(%esp),%ebx
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
call   8059ec0 <fts_children+0x9b0>
test   %eax,%eax
js     805a1b7 <fts_children+0xca7>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8059fc0 <fts_children+0xab0>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   805a060 <fts_children+0xb50>
call   *0x44(%esp)
mov    $0xffffffff,%eax
jmp    805a1af <fts_children+0xc9f>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     805a233 <fts_children+0xd23>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    805a21b <fts_children+0xd0b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     805a233 <fts_children+0xd23>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049ad0 <memcmp@plt>
test   %eax,%eax
jne    805a210 <fts_children+0xd00>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0xc,%esp
cmpl   $0xffffff9c,0x10(%esp)
mov    0x14(%esp),%eax
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
jne    805a26a <fts_children+0xd5a>
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0xc,%esp
jmp    8049b70 <readlink@plt>
call   804a0c0 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x454(%esp),%eax
mov    0x460(%esp),%edi
mov    0x45c(%esp),%ebx
mov    0x464(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x458(%esp),%eax
mov    %eax,0x14(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
test   %edi,%edi
mov    $0x8060248,%eax
cmove  %eax,%edi
test   %ebx,%ebx
jne    805a2ce <fts_children+0xdbe>
lea    0x2c(%esp),%eax
mov    $0x400,%bx
mov    %eax,0x14(%esp)
mov    0x14(%esp),%esi
jmp    805a2e5 <fts_children+0xdd5>
lea    0x0(%esi,%eiz,1),%esi
add    %ebx,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
je     805a33f <fts_children+0xe2f>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x450(%esp),%eax
mov    %eax,(%esp)
call   *%ebp
test   %eax,%eax
mov    %eax,%edx
js     805a380 <fts_children+0xe70>
cmp    %edx,%ebx
ja     805a3c0 <fts_children+0xeb0>
cmp    0x14(%esp),%esi
je     805a31b <fts_children+0xe0b>
mov    %esi,(%esp)
call   *0x8(%edi)
cmp    $0x40000000,%ebx
jbe    805a2d8 <fts_children+0xdc8>
cmp    $0x80000000,%ebx
jae    805a408 <fts_children+0xef8>
mov    $0x80000000,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
jne    805a2e5 <fts_children+0xdd5>
mov    0xc(%edi),%eax
test   %eax,%eax
je     805a34b <fts_children+0xe3b>
mov    %ebx,(%esp)
call   *%eax
call   8049e80 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0xc,(%eax)
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805a441 <fts_children+0xf31>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
call   8049e80 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
cmp    $0x22,%ecx
je     805a307 <fts_children+0xdf7>
xor    %ebx,%ebx
cmp    %esi,0x14(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
je     805a358 <fts_children+0xe48>
mov    %esi,(%esp)
call   *0x8(%edi)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
jmp    805a358 <fts_children+0xe48>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
cmp    %eax,%esi
lea    0x1(%edx),%ebp
movb   $0x0,(%esi,%edx,1)
je     805a41a <fts_children+0xf0a>
cmp    %ebp,%ebx
jbe    805a400 <fts_children+0xef0>
cmp    %esi,0x14(%esp)
je     805a400 <fts_children+0xef0>
mov    0x4(%edi),%eax
mov    %esi,%ebx
test   %eax,%eax
je     805a358 <fts_children+0xe48>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   *%eax
test   %eax,%eax
cmovne %eax,%ebx
jmp    805a358 <fts_children+0xe48>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    805a358 <fts_children+0xe48>
nop
call   8049e80 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0x24,(%eax)
jmp    805a358 <fts_children+0xe48>
mov    %ebp,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%ebx
je     805a43a <fts_children+0xf2a>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
jmp    805a358 <fts_children+0xe48>
mov    %ebp,%ebx
jmp    805a33f <fts_children+0xe2f>
call   8049b20 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8057180 <fchmod@plt+0xcfd0>
test   %eax,%eax
mov    %eax,%edx
js     805a4b8 <fts_children+0xfa8>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     805a4b0 <fts_children+0xfa0>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   8057180 <fchmod@plt+0xcfd0>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    805a4b0 <fts_children+0xfa0>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   8057180 <fchmod@plt+0xcfd0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049c20 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   805b040 <fts_children+0x1b30>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    805a530 <fts_children+0x1020>
test   %dl,%dl
je     805a527 <fts_children+0x1017>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     805a550 <fts_children+0x1040>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    805a527 <fts_children+0x1017>
call   8049e80 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049e80 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x95f616,0x18(%eax)
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
cmpl   $0x95f616,0x18(%esi)
jne    805a64d <fts_children+0x113d>
mov    0x14(%esi),%edx
mov    0x10(%esi),%eax
mov    %edx,%ebx
or     %eax,%ebx
je     805a600 <fts_children+0x10f0>
mov    0x58(%edi),%ebx
mov    %ebx,%ecx
mov    %ebx,0x18(%esp)
mov    0x5c(%edi),%ebx
xor    (%esi),%ecx
mov    %ebx,0x1c(%esp)
xor    0x4(%esi),%ebx
or     %ecx,%ebx
je     805a630 <fts_children+0x1120>
mov    %eax,%ecx
mov    %edx,%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,%ebp
and    %eax,%ebp
and    %ebx,%edx
xor    %eax,%eax
or     %ebp,%edx
mov    %ecx,0x10(%esi)
mov    %ebx,0x14(%esi)
jne    805a626 <fts_children+0x1116>
mov    %ebx,%eax
or     %ecx,%eax
je     805a640 <fts_children+0x1130>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%ecx
jmp    805a614 <fts_children+0x1104>
lea    0x0(%esi),%esi
mov    0x58(%edi),%ebx
mov    0x5c(%edi),%ecx
movl   $0x1,0x10(%esi)
movl   $0x0,0x14(%esi)
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %ebx,(%esi)
mov    %ecx,0x4(%esi)
mov    %eax,0x8(%esi)
xor    %eax,%eax
mov    %edx,0xc(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%edi),%ecx
mov    0x4(%edi),%ebx
xor    0xc(%esi),%ebx
xor    0x8(%esi),%ecx
or     %ecx,%ebx
jne    805a5d1 <fts_children+0x10c1>
nop
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x80600be,0xc(%esp)
movl   $0x3c,0x8(%esp)
movl   $0x8060094,0x4(%esp)
movl   $0x80600a6,(%esp)
call   804a160 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x0,(%esp)
mov    %ebx,0x4(%esp)
call   8049aa0 <clock_gettime@plt>
test   %eax,%eax
je     805a6c1 <fts_children+0x11b1>
lea    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ae0 <gettimeofday@plt>
mov    0x18(%esp),%eax
mov    %eax,(%ebx)
imul   $0x3e8,0x1c(%esp),%eax
mov    %eax,0x4(%ebx)
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%edx
movsbl (%edx),%ecx
test   %cl,%cl
je     805a6f8 <fts_children+0x11e8>
xor    %eax,%eax
lea    0x0(%esi),%esi
ror    $0x17,%eax
add    $0x1,%edx
add    %ecx,%eax
movsbl (%edx),%ecx
test   %cl,%cl
jne    805a6e0 <fts_children+0x11d0>
xor    %edx,%edx
divl   0x8(%esp)
mov    %edx,%eax
ret
xor    %edx,%edx
jmp    805a6f5 <fts_children+0x11e5>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movb   $0x1,0x1c(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    %edx,(%eax)
mov    %edx,0x4(%eax)
mov    %edx,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x1c(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
mov    0x14(%esp),%edi
movzbl 0x1c(%edx),%eax
mov    0x14(%edx),%ecx
xor    $0x1,%eax
movzbl %al,%esi
add    %esi,%ecx
and    $0x3,%ecx
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %edi,(%ebx)
mov    0x18(%edx),%ebx
mov    %ecx,0x14(%edx)
cmp    %ecx,%ebx
jne    805a776 <fts_children+0x1266>
add    %esi,%ebx
and    $0x3,%ebx
mov    %ebx,0x18(%edx)
movb   $0x0,0x1c(%edx)
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%edx
cmpb   $0x0,0x1c(%edx)
jne    805a7ba <fts_children+0x12aa>
mov    0x14(%edx),%ecx
mov    0x10(%edx),%esi
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %esi,(%ebx)
cmp    0x18(%edx),%ecx
je     805a7b0 <fts_children+0x12a0>
add    $0x3,%ecx
and    $0x3,%ecx
mov    %ecx,0x14(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
movb   $0x1,0x1c(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
call   804a0c0 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049f60 <nl_langinfo@plt>
mov    0x8065890,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x805ef75,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     805a88c <fts_children+0x137c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     805a857 <fts_children+0x1347>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    805a830 <fts_children+0x1320>
nop
mov    %ebp,(%esp)
call   8049db0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049db0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     805a888 <fts_children+0x1378>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80499e0 <strcmp@plt>
test   %eax,%eax
je     805a84b <fts_children+0x133b>
cmp    $0x2a,%bl
jne    805a810 <fts_children+0x1300>
cmpb   $0x0,0x1(%ebp)
jne    805a810 <fts_children+0x1300>
mov    %ebp,(%esp)
call   8049db0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x80600d3,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805ab4d <fts_children+0x163d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    805a857 <fts_children+0x1347>
movl   $0x80600d9,(%esp)
call   8049c60 <getenv@plt>
test   %eax,%eax
je     805a8a5 <fts_children+0x1395>
cmpb   $0x0,(%eax)
jne    805aab3 <fts_children+0x15a3>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x80600ca,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     805aaa4 <fts_children+0x1594>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805ab43 <fts_children+0x1633>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     805a90c <fts_children+0x13fc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     805aa88 <fts_children+0x1578>
movl   $0x805ded5,0x4(%esp)
mov    %eax,(%esp)
call   8049d20 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     805aa80 <fts_children+0x1570>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    805aa66 <fts_children+0x1556>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     805a970 <fts_children+0x1460>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    805a970 <fts_children+0x1460>
cmp    $0x23,%eax
je     805aadd <fts_children+0x15cd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049e60 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x80600e9,0x4(%esp)
mov    %esi,(%esp)
call   8049da0 <fscanf@plt>
cmp    $0x1,%eax
jle    805ab00 <fts_children+0x15f0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049db0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    805ab1e <fts_children+0x160e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049c90 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     805ab52 <fts_children+0x1642>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8049c10 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8049c10 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     805a97c <fts_children+0x146c>
mov    %esi,(%esp)
call   8049f40 <__uflow@plt>
cmp    $0xffffffff,%eax
je     805ab00 <fts_children+0x15f0>
jmp    805a985 <fts_children+0x1475>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804a110 <close@plt>
mov    $0x805ef75,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    %ebp,0x8065890
jmp    805a7ff <fts_children+0x12ef>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    805a8cb <fts_children+0x13bb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049db0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     805aaa4 <fts_children+0x1594>
lea    -0x1(%eax),%eax
jmp    805a8b4 <fts_children+0x13a4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     805aaf7 <fts_children+0x15e7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    805ab6c <fts_children+0x165c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    805aad8 <fts_children+0x15c8>
cmp    $0xffffffff,%eax
jne    805a970 <fts_children+0x1460>
mov    %esi,(%esp)
call   805b040 <fts_children+0x1b30>
mov    0x10(%esp),%eax
test   %eax,%eax
je     805aa88 <fts_children+0x1578>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    805aa8d <fts_children+0x157d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049c70 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    805aa1c <fts_children+0x150c>
mov    $0x805ef75,%ebp
jmp    805aa99 <fts_children+0x1589>
call   8049b20 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x805ef75,%ebp
call   8049a60 <free@plt>
mov    %esi,(%esp)
call   805b040 <fts_children+0x1b30>
jmp    805aa8d <fts_children+0x157d>
mov    %esi,(%esp)
call   8049f40 <__uflow@plt>
jmp    805aaf2 <fts_children+0x15e2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x80600f4,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    0x8065238,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   804a0c0 <abort@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8060120,0x4(%esp)
movl   $0x0,(%esp)
call   8049b00 <dcgettext@plt>
mov    0x8065238,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c50 <error@plt>
call   804a0c0 <abort@plt>
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x28(%esp),%edx
test   $0x40,%dl
cmovne 0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <openat64@plt>
mov    %eax,(%esp)
call   8055350 <fchmod@plt+0xb1a0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%ebx)
movl   $0x0,0x4(%esp)
movl   $0x805fff3,(%esp)
call   8052350 <fchmod@plt+0x81a0>
test   %eax,%eax
mov    %eax,(%ebx)
js     805ac80 <fts_children+0x1770>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805a450 <fts_children+0xf40>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049d90 <getcwd@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
sete   %al
add    $0x18,%esp
movzbl %al,%eax
neg    %eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
js     805acc8 <fts_children+0x17b8>
mov    %eax,0x4(%esp)
jmp    8049fe0 <fchdir@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %eax,0x4(%esp)
jmp    805ad90 <fts_children+0x1880>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
js     805acf6 <fts_children+0x17e6>
mov    %eax,(%esp)
call   804a110 <close@plt>
mov    0x4(%ebx),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049a60 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
js     805ad28 <fts_children+0x1818>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804a110 <close@plt>
test   %eax,%eax
jne    805ad2a <fts_children+0x181a>
add    $0x1c,%esp
repz ret
movl   $0x80601b0,0xc(%esp)
movl   $0x3f,0x8(%esp)
movl   $0x8060150,0x4(%esp)
movl   $0x8060161,(%esp)
call   804a160 <__assert_fail@plt>
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x10900,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049dc0 <openat64@plt>
test   %eax,%eax
mov    %eax,%esi
js     805ad88 <fts_children+0x1878>
mov    %ebx,%eax
call   805ad10 <fts_children+0x1800>
xor    %eax,%eax
mov    %esi,(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    805ad7e <fts_children+0x186e>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
mov    %edi,(%esp)
call   8049af0 <chdir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805ae58 <fts_children+0x1948>
call   8049e80 <__errno_location@plt>
cmpl   $0x24,(%eax)
mov    %eax,0x18(%esp)
je     805adc5 <fts_children+0x18b5>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   8049db0 <strlen@plt>
movl   $0xffffff9c,0x2c(%esp)
test   %eax,%eax
lea    (%edi,%eax,1),%esi
je     805afa2 <fts_children+0x1a92>
cmp    $0xfff,%eax
jbe    805afc6 <fts_children+0x1ab6>
xor    %edx,%edx
mov    %edi,%ebx
cmpb   $0x2f,(%edi)
lea    0x1(%edi),%eax
jne    805aec1 <fts_children+0x19b1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
add    $0x1,%edx
cmpb   $0x2f,-0x1(%eax)
je     805ae00 <fts_children+0x18f0>
cmp    $0x2,%edx
je     805ae64 <fts_children+0x1954>
lea    0x2c(%esp),%ebp
mov    $0x805f92e,%edx
mov    %ebp,%eax
call   805ad50 <fts_children+0x1840>
test   %eax,%eax
jne    805af52 <fts_children+0x1a42>
cmpb   $0x2f,(%ebx)
jne    805aec1 <fts_children+0x19b1>
movl   $0x80601b9,0xc(%esp)
movl   $0xa1,0x8(%esp)
movl   $0x8060150,0x4(%esp)
movl   $0x8060182,(%esp)
call   804a160 <__assert_fail@plt>
add    $0x3c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x3(%edi),%eax
mov    %esi,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049e90 <memchr@plt>
test   %eax,%eax
je     805af70 <fts_children+0x1a60>
lea    0x2c(%esp),%ebp
mov    %edi,%edx
movb   $0x0,(%eax)
mov    %eax,0x1c(%esp)
mov    %ebp,%eax
call   805ad50 <fts_children+0x1840>
mov    0x1c(%esp),%ecx
movb   $0x2f,(%ecx)
test   %eax,%eax
jne    805af52 <fts_children+0x1a42>
cmpb   $0x2f,0x1(%ecx)
lea    0x1(%ecx),%ebx
jne    805aec1 <fts_children+0x19b1>
lea    0x2(%ecx),%eax
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     805aeb6 <fts_children+0x19a6>
cmp    %ebx,%esi
jb     805b00e <fts_children+0x1afe>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
sub    %ebx,%eax
cmp    $0xfff,%eax
jle    805af3d <fts_children+0x1a2d>
movl   $0x1000,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049d80 <memrchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     805af70 <fts_children+0x1a60>
movb   $0x0,(%eax)
sub    %ebx,%eax
cmp    $0xfff,%eax
jg     805afea <fts_children+0x1ada>
lea    0x2c(%esp),%ebp
mov    %ebx,%edx
mov    %ebp,%eax
call   805ad50 <fts_children+0x1840>
movb   $0x2f,(%edi)
test   %eax,%eax
jne    805af52 <fts_children+0x1a42>
cmpb   $0x2f,0x1(%edi)
lea    0x1(%edi),%ebx
jne    805aed0 <fts_children+0x19c0>
lea    0x2(%edi),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     805af30 <fts_children+0x1a20>
jmp    805aed0 <fts_children+0x19c0>
cmp    %ebx,%esi
lea    0x2c(%esp),%ebp
jbe    805af84 <fts_children+0x1a74>
mov    %ebx,%edx
mov    %ebp,%eax
call   805ad50 <fts_children+0x1840>
test   %eax,%eax
je     805af84 <fts_children+0x1a74>
mov    0x18(%esp),%esi
mov    %ebp,%eax
mov    (%esi),%ebx
call   805ad10 <fts_children+0x1800>
mov    %ebx,(%esi)
add    $0x3c,%esp
mov    $0xffffffff,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    $0xffffffff,%ebx
movl   $0x24,(%eax)
jmp    805adbb <fts_children+0x18ab>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049fe0 <fchdir@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805af52 <fts_children+0x1a42>
mov    %ebp,%eax
call   805ad10 <fts_children+0x1800>
jmp    805adbb <fts_children+0x18ab>
movl   $0x80601b9,0xc(%esp)
movl   $0x7d,0x8(%esp)
movl   $0x8060150,0x4(%esp)
movl   $0x806016e,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x80601b9,0xc(%esp)
movl   $0x7e,0x8(%esp)
movl   $0x8060150,0x4(%esp)
movl   $0x8060176,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x80601b9,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x8060150,0x4(%esp)
movl   $0x806019d,(%esp)
call   804a160 <__assert_fail@plt>
movl   $0x80601b9,0xc(%esp)
movl   $0xa2,0x8(%esp)
movl   $0x8060150,0x4(%esp)
movl   $0x806018e,(%esp)
call   804a160 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049ea0 <fileno@plt>
test   %eax,%eax
js     805b0c8 <fts_children+0x1bb8>
mov    %ebx,(%esp)
call   8049ce0 <__freading@plt>
test   %eax,%eax
jne    805b098 <fts_children+0x1b88>
mov    %ebx,(%esp)
call   80572a0 <fchmod@plt+0xd0f0>
test   %eax,%eax
je     805b0c8 <fts_children+0x1bb8>
call   8049e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049ab0 <fclose@plt>
test   %edi,%edi
je     805b08a <fts_children+0x1b7a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049ea0 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804a010 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    805b062 <fts_children+0x1b52>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049ab0 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
cmpb   $0x0,(%esi)
je     805b188 <fts_children+0x1c78>
mov    0x8065894,%eax
test   %eax,%eax
je     805b190 <fts_children+0x1c80>
test   %eax,%eax
js     805b17e <fts_children+0x1c6e>
mov    %esi,(%esp)
call   8049db0 <strlen@plt>
add    $0x1b,%eax
cmp    $0xfc0,%eax
ja     805b170 <fts_children+0x1c60>
mov    0x74(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x80601d8,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a1a0 <__sprintf_chk@plt>
mov    %ebx,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805b221 <fts_children+0x1d11>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805b127 <fts_children+0x1c17>
xor    %eax,%eax
jmp    805b155 <fts_children+0x1c45>
lea    0x0(%esi),%esi
movb   $0x0,(%ebx)
mov    %ebx,%eax
jmp    805b155 <fts_children+0x1c45>
nop
movl   $0x10900,0x4(%esp)
movl   $0x80601c4,(%esp)
call   80499f0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     805b210 <fts_children+0x1d00>
lea    0x2c(%esp),%ebp
movl   $0x80601d2,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x80601d8,0xc(%esp)
movl   $0x20,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a1a0 <__sprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8049ed0 <access@plt>
mov    %edi,(%esp)
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0x2,%edx
sub    $0x1,%edx
mov    %edx,0x8065894
call   804a110 <close@plt>
mov    0x8065894,%eax
jmp    805b111 <fts_children+0x1c01>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x8065894
ff
xor    %eax,%eax
jmp    805b155 <fts_children+0x1c45>
call   8049b20 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   805cfa0 <fts_children+0x3a90>
test   %eax,%eax
js     805c330 <fts_children+0x2e20>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   805cec0 <fts_children+0x39b0>
test   %eax,%eax
js     805c528 <fts_children+0x3018>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     805b468 <fts_children+0x1f58>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     805b468 <fts_children+0x1f58>
cmp    $0xf9f,%edx
ja     805bf78 <fts_children+0x2a68>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4f4(%ebp)
00
test   %eax,%eax
je     805bfab <fts_children+0x2a9b>
mov    -0x4f0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4b4(%ebp)
mov    -0x418(%ebp),%eax
xor    %edx,%edx
mov    %edx,%edi
mov    %ebx,%edx
mov    -0x4bc(%ebp),%esi
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
je     805bafb <fts_children+0x25eb>
sub    %edx,%ebx
mov    %ebx,%eax
add    %edi,%eax
mov    %eax,%ecx
mov    $0xffffffff,%eax
cmovae %ecx,%eax
mov    -0x4b4(%ebp),%ecx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%ecx
jae    805bbf8 <fts_children+0x26e8>
test   %ecx,%ecx
je     805b9d0 <fts_children+0x24c0>
js     805c510 <fts_children+0x3000>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%ecx
cmp    %ecx,%eax
cmovb  %ecx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805c510 <fts_children+0x3000>
cmp    -0x4bc(%ebp),%esi
sete   -0x4d8(%ebp)
test   %esi,%esi
je     805b3b5 <fts_children+0x1ea5>
cmpb   $0x0,-0x4d8(%ebp)
je     805b9e0 <fts_children+0x24d0>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     805c510 <fts_children+0x3000>
test   %edi,%edi
jne    805bcb8 <fts_children+0x27a8>
add    -0x4b0(%ebp),%edi
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     805c570 <fts_children+0x3060>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     805ba10 <fts_children+0x2500>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     805bf48 <fts_children+0x2a38>
cmp    $0x6e,%dl
je     805bc90 <fts_children+0x2780>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    805b4d0 <fts_children+0x1fc0>
cmp    $0x41,%dl
je     805b4d0 <fts_children+0x1fc0>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    805b4e1 <fts_children+0x1fd1>
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805b48b <fts_children+0x1f7b>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805b4a3 <fts_children+0x1f93>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%ebx
xor    %gs:0x14,%ebx
jne    805ce3b <fts_children+0x392b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     805c048 <fts_children+0x2b38>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%ebx
mov    0x8(%eax),%eax
add    $0x1,%ebx
movb   $0x25,-0x1(%ebx)
test   $0x1,%al
je     805b50a <fts_children+0x1ffa>
mov    -0x4c0(%ebp),%ecx
mov    %ecx,%ebx
add    $0x2,%ebx
movb   $0x27,0x1(%ecx)
test   $0x2,%al
je     805b514 <fts_children+0x2004>
movb   $0x2d,(%ebx)
add    $0x1,%ebx
test   $0x4,%al
je     805b51e <fts_children+0x200e>
movb   $0x2b,(%ebx)
add    $0x1,%ebx
test   $0x8,%al
je     805b528 <fts_children+0x2018>
movb   $0x20,(%ebx)
add    $0x1,%ebx
test   $0x10,%al
je     805b532 <fts_children+0x2022>
movb   $0x23,(%ebx)
add    $0x1,%ebx
test   $0x40,%al
je     805b53c <fts_children+0x202c>
movb   $0x49,(%ebx)
add    $0x1,%ebx
test   $0x20,%al
je     805b546 <fts_children+0x2036>
movb   $0x30,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%esi
cmp    %esi,%eax
je     805b56a <fts_children+0x205a>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4ac(%ebp),%edi
mov    0x18(%edi),%eax
mov    0x1c(%edi),%esi
cmp    %esi,%eax
je     805b58e <fts_children+0x207e>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     805b5b4 <fts_children+0x20a4>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     805bd00 <fts_children+0x27f0>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
movzbl 0x24(%ecx),%eax
movb   $0x0,0x1(%ebx)
mov    %al,(%ebx)
mov    0x14(%ecx),%eax
cmp    $0xffffffff,%eax
je     805bf70 <fts_children+0x2a60>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    805bf48 <fts_children+0x2a38>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     805bf60 <fts_children+0x2a50>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    805bf48 <fts_children+0x2a38>
mov    0x4(%eax),%eax
lea    0x1(%edx),%edi
mov    %edi,-0x4e8(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%edi
mov    %edi,%eax
add    $0x2,%eax
cmp    %eax,%edi
mov    %eax,%ecx
mov    %eax,-0x4ec(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    805b719 <fts_children+0x2209>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     805c3b7 <fts_children+0x2ea7>
js     805b6a4 <fts_children+0x2194>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    805b6b8 <fts_children+0x21a8>
call   8049e80 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    805c768 <fts_children+0x3258>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805b468 <fts_children+0x1f58>
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805b473 <fts_children+0x1f63>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     805b670 <fts_children+0x2160>
or     $0xffffffff,%eax
lea    0x0(%esi),%esi
mov    -0x4ec(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805b670 <fts_children+0x2160>
mov    -0x4bc(%ebp),%eax
mov    -0x4b0(%ebp),%edi
cmp    %eax,%edi
sete   %al
test   %edi,%edi
mov    %eax,%esi
je     805b6ed <fts_children+0x21dd>
test   %al,%al
je     805bfc0 <fts_children+0x2ab0>
mov    -0x4b4(%ebp),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     805b670 <fts_children+0x2160>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    805c010 <fts_children+0x2b00>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%edi
mov    -0x4b8(%ebp),%esi
movb   $0x0,(%edi,%esi,1)
call   8049e80 <__errno_location@plt>
mov    -0x4b4(%ebp),%edi
mov    %ebx,-0x4b4(%ebp)
mov    %esi,%ebx
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4f8(%ebp)
mov    %edi,%esi
mov    $0x7fffffff,%eax
sub    %ebx,%esi
cmovs  %eax,%esi
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     805bf48 <fts_children+0x2a38>
jmp    *0x80601ec(,%eax,4)
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     805bc30 <fts_children+0x2720>
cmp    $0x2,%ecx
jne    805bbb0 <fts_children+0x26a0>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     805bb10 <fts_children+0x2600>
cmp    %edx,%esi
jbe    805b829 <fts_children+0x2319>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%ebx,1)
jne    805bf48 <fts_children+0x2a38>
cmp    %edx,%eax
jle    805b835 <fts_children+0x2325>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%esi
ja     805c740 <fts_children+0x3230>
cmp    $0x7fffffff,%esi
je     805c790 <fts_children+0x3280>
test   %edi,%edi
mov    $0xffffffff,%eax
lea    (%edi,%edi,1),%ecx
cmovs  %eax,%ecx
add    -0x4ec(%ebp),%edx
cmp    %edx,%ebx
ja     805b86a <fts_children+0x235a>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%edi
jae    805b74a <fts_children+0x223a>
test   %edi,%edi
je     805bc80 <fts_children+0x2770>
js     805b67b <fts_children+0x216b>
add    %edi,%edi
cmp    %eax,%edi
cmovb  %eax,%edi
cmp    $0xffffffff,%edi
je     805b67b <fts_children+0x216b>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     805b9b8 <fts_children+0x24a8>
test   %dl,%dl
jne    805b9b8 <fts_children+0x24a8>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     805b67b <fts_children+0x216b>
test   %dl,%dl
jne    805bfe0 <fts_children+0x2ad0>
mov    %esi,-0x4b0(%ebp)
jmp    805b74a <fts_children+0x223a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     805bef8 <fts_children+0x29e8>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    805c348 <fts_children+0x2e38>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
jne    805b7ac <fts_children+0x229c>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x1c(%esp)
jmp    805bc3a <fts_children+0x272a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049c90 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
jmp    805b8d1 <fts_children+0x23c1>
lea    0x0(%esi),%esi
movl   $0xc,-0x4b4(%ebp)
00
jmp    805b377 <fts_children+0x1e67>
nop
mov    -0x4b4(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
jmp    805b3d5 <fts_children+0x1ec5>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    805bf48 <fts_children+0x2a38>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%edi
cmp    %edi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%edi
cmp    %edi,-0x4b4(%ebp)
jae    805bac2 <fts_children+0x25b2>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    805bec8 <fts_children+0x29b8>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805b670 <fts_children+0x2160>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ebx
cmp    %ebx,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     805bf50 <fts_children+0x2a40>
test   %bl,%bl
jne    805bf50 <fts_children+0x2a40>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     805b670 <fts_children+0x2160>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    805c388 <fts_children+0x2e78>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%ebx
mov    %eax,%esi
movb   $0x25,(%eax,%ebx,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%edx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
jne    805b33f <fts_children+0x1e2f>
mov    %edi,-0x4b8(%ebp)
mov    %esi,-0x4b0(%ebp)
jmp    805b401 <fts_children+0x1ef1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    805bcf0 <fts_children+0x27e0>
test   %eax,%eax
jns    805b82d <fts_children+0x231d>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    805c4a3 <fts_children+0x2f93>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805bb50 <fts_children+0x2640>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805bb68 <fts_children+0x2658>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805bb80 <fts_children+0x2670>
mov    %eax,(%esp)
call   8049a60 <free@plt>
test   %ebx,%ebx
jne    805bb9d <fts_children+0x268d>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    805b4b1 <fts_children+0x1fa1>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%ecx
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b0(%ebp)
jmp    805b3eb <fts_children+0x1edb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    805bdfd <fts_children+0x28ed>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%edi
jmp    805b882 <fts_children+0x2372>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%ebx
lea    -0x12(%ebx),%edx
cmp    $0x4,%edx
ja     805bf48 <fts_children+0x2a38>
mov    0x4(%eax),%eax
jmp    *0x8060234(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     805b3eb <fts_children+0x1edb>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
jmp    805b3eb <fts_children+0x1edb>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    805b74a <fts_children+0x223a>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    805c338 <fts_children+0x2e28>
test   $0xc,%al
je     805b5b4 <fts_children+0x20a4>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
jmp    805b5ae <fts_children+0x209e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     805c6f0 <fts_children+0x31e0>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    805c468 <fts_children+0x2f58>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    805b7ac <fts_children+0x229c>
jmp    805bc30 <fts_children+0x2720>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
je     805bc30 <fts_children+0x2720>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    805bbb6 <fts_children+0x26a6>
mov    %ecx,0x20(%esp)
jmp    805b7bf <fts_children+0x22af>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    805bdfd <fts_children+0x28ed>
jmp    805bc30 <fts_children+0x2720>
xchg   %ax,%ax
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     805c6a0 <fts_children+0x3190>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    805c428 <fts_children+0x2f18>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
lea    0x0(%esi),%esi
js     805b670 <fts_children+0x2160>
shll   -0x4b4(%ebp)
jmp    805ba51 <fts_children+0x2541>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    805bad4 <fts_children+0x25c4>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
nop
call   804a0c0 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%esi
jmp    805baa6 <fts_children+0x2596>
nop
mov    %edx,-0x4e8(%ebp)
jmp    805b627 <fts_children+0x2117>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    805b5f0 <fts_children+0x20e0>
nop
cmp    $0xffffffff,%edx
je     805b468 <fts_children+0x1f58>
mov    %edx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     805b468 <fts_children+0x1f58>
mov    %eax,-0x4f4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    805b2ff <fts_children+0x1def>
movl   $0x0,-0x4b4(%ebp)
00
jmp    805b30d <fts_children+0x1dfd>
lea    0x0(%esi),%esi
mov    -0x4b4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%edi
jmp    805b6fd <fts_children+0x21ed>
nop
test   %ebx,%ebx
je     805b8e1 <fts_children+0x23d1>
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    805b74a <fts_children+0x223a>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
je     805b713 <fts_children+0x2203>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    805b719 <fts_children+0x2209>
lea    0x0(%esi,%eiz,1),%esi
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   805ce60 <fts_children+0x3950>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    805c098 <fts_children+0x2b88>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     805c073 <fts_children+0x2b63>
je     805c09a <fts_children+0x2b8a>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    805b4e1 <fts_children+0x1fd1>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
mov    0x8(%eax),%ebx
mov    %ebx,-0x4c4(%ebp)
mov    %eax,%ebx
mov    0xc(%eax),%eax
mov    0x10(%ebx),%ebx
cmp    %ebx,%eax
je     805c981 <fts_children+0x3471>
mov    -0x4ac(%ebp),%esi
mov    0x14(%esi),%edx
cmp    $0xffffffff,%edx
je     805c4c8 <fts_children+0x2fb8>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    805bf48 <fts_children+0x2a38>
mov    0x4(%edx),%edi
movl   $0x1,-0x4ec(%ebp)
00
test   %edi,%edi
js     805ca16 <fts_children+0x3506>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     805c8b1 <fts_children+0x33a1>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     805c942 <fts_children+0x3432>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    805bf48 <fts_children+0x2a38>
mov    0x4(%eax),%esi
test   %esi,%esi
js     805c8b1 <fts_children+0x33a1>
test   %esi,%esi
jne    805c8e8 <fts_children+0x33d8>
mov    $0xc,%eax
cmp    %eax,%edi
jbe    805ce4c <fts_children+0x393c>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     805b670 <fts_children+0x2160>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%edx
ja     805c992 <fts_children+0x3482>
mov    -0x4ac(%ebp),%eax
mov    %edx,-0x4f8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4e8(%ebp)
call   805ce60 <fts_children+0x3950>
mov    -0x4f8(%ebp),%edx
test   %eax,%eax
fldt   -0x4e8(%ebp)
je     805c7f8 <fts_children+0x32e8>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     805c907 <fts_children+0x33f7>
movb   $0x4e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x41,0x1(%edx)
movb   $0x4e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
mov    -0x4ec(%ebp),%esi
mov    %ecx,%ebx
sub    %edx,%ebx
test   %esi,%esi
je     805c21d <fts_children+0x2d0d>
cmp    %ebx,%edi
jbe    805c21d <fts_children+0x2d0d>
mov    %edx,%eax
sub    %ecx,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%ecx,%edi,1),%ebx
je     805cb71 <fts_children+0x3661>
test   %edi,%edi
je     805c21b <fts_children+0x2d0b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,%ebx
movb   $0x20,-0x1(%ecx)
jne    805c210 <fts_children+0x2d00>
sub    %edx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    805bf48 <fts_children+0x2a38>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     805c8da <fts_children+0x33ca>
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
add    %ebx,%edi
cmovae %edi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    805c2eb <fts_children+0x2ddb>
mov    -0x4b4(%ebp),%ecx
test   %ecx,%ecx
je     805c9dc <fts_children+0x34cc>
js     805b670 <fts_children+0x2160>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     805b670 <fts_children+0x2160>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     805c2b3 <fts_children+0x2da3>
cmpb   $0x0,-0x4d8(%ebp)
je     805c9eb <fts_children+0x34db>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     805b670 <fts_children+0x2160>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    805cbc8 <fts_children+0x36b8>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x4b8(%ebp)
call   8049a70 <memcpy@plt>
mov    -0x4b8(%ebp),%edx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%edx
je     805c325 <fts_children+0x2e15>
mov    %edx,(%esp)
call   8049a60 <free@plt>
mov    -0x4b0(%ebp),%esi
jmp    805bad4 <fts_children+0x25c4>
xor    %eax,%eax
jmp    805b4b1 <fts_children+0x1fa1>
nop
movb   $0x4c,(%ebx)
add    $0x1,%ebx
jmp    805b5b4 <fts_children+0x20a4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
nop
test   %bl,%bl
je     805babc <fts_children+0x25ac>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    805bac2 <fts_children+0x25b2>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     805b670 <fts_children+0x2160>
mov    $0xc,%eax
jmp    805b6b8 <fts_children+0x21a8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
movl   $0x0,0x4(%eax)
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    805bad4 <fts_children+0x25c4>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %edi,%ecx
mov    %cl,(%eax)
jmp    805bad4 <fts_children+0x25c4>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %di,(%eax)
jmp    805bad4 <fts_children+0x25c4>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
mov    -0x4b0(%ebp),%eax
cmp    %eax,-0x4bc(%ebp)
je     805bb3e <fts_children+0x262e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805bb3e <fts_children+0x262e>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     805c4ec <fts_children+0x2fdc>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    805c4d0 <fts_children+0x2fc0>
movl   $0x1,-0x4ec(%ebp)
00
jmp    805c0f2 <fts_children+0x2be2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e80 <__errno_location@plt>
mov    %esi,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    805b67b <fts_children+0x216b>
xchg   %ax,%ax
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805c540 <fts_children+0x3030>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805c558 <fts_children+0x3048>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    805b4b1 <fts_children+0x1fa1>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
mov    %eax,%edx
lea    0x1(%edi),%ebx
cmp    %edi,%ebx
cmovae %ebx,%edx
cmp    -0x4b4(%ebp),%edx
jbe    805c62c <fts_children+0x311c>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     805ca24 <fts_children+0x3514>
mov    -0x4b4(%ebp),%esi
lea    (%esi,%esi,1),%edx
test   %esi,%esi
cmovns %edx,%eax
mov    %eax,-0x4b4(%ebp)
cmp    %edi,%ebx
mov    $0xffffffff,%eax
cmovae %ebx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    805c5d3 <fts_children+0x30c3>
cmp    %edi,%ebx
jb     805b670 <fts_children+0x2160>
mov    %ebx,-0x4b4(%ebp)
cmpl   $0xffffffff,-0x4b4(%ebp)
je     805b670 <fts_children+0x2160>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     805c60c <fts_children+0x30fc>
cmpb   $0x0,-0x4ac(%ebp)
je     805ca33 <fts_children+0x3523>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     805b670 <fts_children+0x2160>
test   %edi,%edi
jne    805cc25 <fts_children+0x3715>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%edi,1)
je     805c64a <fts_children+0x313a>
cmp    %ebx,-0x4b4(%ebp)
ja     805ca4c <fts_children+0x353c>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805c65c <fts_children+0x314c>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805c674 <fts_children+0x3164>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805c68c <fts_children+0x317c>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x4f0(%ebp),%eax
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    805b4b1 <fts_children+0x1fa1>
nop
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049990 <__snprintf_chk@plt>
jmp    805b805 <fts_children+0x22f5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    -0x4f8(%ebp),%ebx
add    %edx,%edi
mov    %ebx,(%eax)
jmp    805c325 <fts_children+0x2e15>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     805b689 <fts_children+0x2179>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805b689 <fts_children+0x2179>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    805ca6a <fts_children+0x355a>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     805c7b0 <fts_children+0x32a0>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     805c7c8 <fts_children+0x32b8>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805c7e0 <fts_children+0x32d0>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    805b4b1 <fts_children+0x1fa1>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     805c924 <fts_children+0x3414>
lea    0x1(%edx),%eax
fchs
mov    %eax,-0x4e8(%ebp)
movb   $0x2d,(%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    805ca8f <fts_children+0x357f>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     805bf48 <fts_children+0x2a38>
jne    805bf48 <fts_children+0x2a38>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4fc(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
mov    -0x4e8(%ebp),%eax
ja     805cc08 <fts_children+0x36f8>
movb   $0x49,(%eax)
lea    0x3(%eax),%ecx
movb   $0x4e,0x1(%eax)
movb   $0x46,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
lea    0x0(%esi),%esi
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    805c1df <fts_children+0x2ccf>
mov    -0x4ac(%ebp),%eax
xor    %esi,%esi
movzbl 0x24(%eax),%edx
mov    $0x6,%eax
and    $0xffffffdf,%edx
cmp    $0x41,%dl
mov    $0x12,%edx
cmovne %eax,%esi
mov    $0xc,%al
cmovne %edx,%eax
jmp    805c13c <fts_children+0x2c2c>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%edi
jmp    805c2eb <fts_children+0x2ddb>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    805c13c <fts_children+0x2c2c>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    805c14f <fts_children+0x2c3f>
movb   $0x6e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x61,0x1(%edx)
movb   $0x6e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
jmp    805c1df <fts_children+0x2ccf>
testb  $0x4,-0x4c4(%ebp)
je     805c9b8 <fts_children+0x34a8>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x2b,(%edx)
jmp    805c837 <fts_children+0x3327>
add    $0x1,%edx
xor    %esi,%esi
cmp    %edx,%ebx
je     805c137 <fts_children+0x2c27>
nop
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     805c96c <fts_children+0x345c>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    805c950 <fts_children+0x3440>
jmp    805c12f <fts_children+0x2c1f>
xor    %edi,%edi
movl   $0x0,-0x4ec(%ebp)
00
jmp    805c0f2 <fts_children+0x2be2>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     805b670 <fts_children+0x2160>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    805c171 <fts_children+0x2c61>
jmp    805b670 <fts_children+0x2160>
testb  $0x8,-0x4c4(%ebp)
mov    %edx,-0x4e8(%ebp)
je     805c837 <fts_children+0x3327>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x20,(%edx)
jmp    805c837 <fts_children+0x3327>
movl   $0xc,-0x4b4(%ebp)
00
jmp    805c273 <fts_children+0x2d63>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
jmp    805c2cf <fts_children+0x2dbf>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    805c0f2 <fts_children+0x2be2>
movl   $0xc,-0x4b4(%ebp)
00
jmp    805c5b3 <fts_children+0x30a3>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%esi
jmp    805c616 <fts_children+0x3106>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    805c64a <fts_children+0x313a>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     805c79e <fts_children+0x328e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049a60 <free@plt>
jmp    805c79e <fts_children+0x328e>
fstp   %st(0)
jp     805bf48 <fts_children+0x2a38>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jne    805bf48 <fts_children+0x2a38>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    805cb28 <fts_children+0x3618>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    805cad4 <fts_children+0x35c4>
test   %esi,%esi
lea    0x1(%eax),%ecx
je     805c898 <fts_children+0x3388>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049f60 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     805ce2d <fts_children+0x391d>
lea    (%ebx,%esi,1),%ecx
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    805cb18 <fts_children+0x3608>
jmp    805c898 <fts_children+0x3388>
cmp    $0x45,%al
jne    805cc53 <fts_children+0x3743>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    805cd18 <fts_children+0x3808>
test   %esi,%esi
jne    805cd18 <fts_children+0x3808>
lea    0x1(%eax),%esi
mov    -0x4ac(%ebp),%eax
lea    0x4(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
movb   $0x30,0x3(%esi)
mov    %al,(%esi)
jmp    805c898 <fts_children+0x3388>
testb  $0x20,-0x4c4(%ebp)
je     805ccdd <fts_children+0x37cd>
mov    -0x4e8(%ebp),%esi
test   %esi,%esi
je     805ccdd <fts_children+0x37cd>
cmp    %ecx,%esi
jae    805cbad <fts_children+0x369d>
mov    %ebx,%eax
mov    %edx,-0x4c4(%ebp)
sub    $0x1,%ecx
movzbl (%ecx),%edx
sub    $0x1,%eax
cmp    %esi,%ecx
mov    %dl,(%eax)
jne    805cb98 <fts_children+0x3688>
mov    -0x4c4(%ebp),%edx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     805c21b <fts_children+0x2d0b>
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x30,-0x1(%ecx)
jne    805cbb8 <fts_children+0x36a8>
jmp    805c21b <fts_children+0x2d0b>
cmpb   $0x0,-0x4d8(%ebp)
je     805c2e5 <fts_children+0x2dd5>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
mov    %esi,-0x4b0(%ebp)
jmp    805c2eb <fts_children+0x2ddb>
movb   $0x69,(%eax)
lea    0x3(%eax),%ecx
movb   $0x6e,0x1(%eax)
movb   $0x66,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
jmp    805c898 <fts_children+0x3388>
cmpb   $0x0,-0x4ac(%ebp)
je     805c626 <fts_children+0x3116>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    805c62c <fts_children+0x311c>
cmp    $0x47,%al
jne    805cd70 <fts_children+0x3860>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
lea    0x1(%eax),%ecx
je     805c898 <fts_children+0x3388>
lea    -0x1(%esi),%eax
xor    %ecx,%ecx
test   %esi,%esi
cmovne %eax,%ecx
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049f60 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%esi
mov    $0x2e,%eax
mov    %esi,%ecx
test   %cl,%cl
mov    -0x4fc(%ebp),%ecx
cmovne %esi,%eax
mov    -0x4e8(%ebp),%esi
test   %ecx,%ecx
mov    %al,0x1(%esi)
je     805ce2d <fts_children+0x391d>
add    %ebx,%ecx
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    805cccd <fts_children+0x37bd>
jmp    805c898 <fts_children+0x3388>
cmp    %ecx,%edx
mov    %ebx,%esi
mov    %ecx,%eax
jae    805ccf9 <fts_children+0x37e9>
lea    0x0(%esi),%esi
sub    $0x1,%eax
movzbl (%eax),%ecx
sub    $0x1,%esi
cmp    %edx,%eax
mov    %cl,(%esi)
jne    805cce8 <fts_children+0x37d8>
mov    %edx,%ecx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     805c21b <fts_children+0x2d0b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x20,-0x1(%ecx)
jne    805cd08 <fts_children+0x37f8>
jmp    805c21b <fts_children+0x2d0b>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049f60 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     805ce34 <fts_children+0x3924>
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    805cd60 <fts_children+0x3850>
jmp    805cb51 <fts_children+0x3641>
cmp    $0x41,%al
jne    805bf48 <fts_children+0x2a38>
mov    -0x4e8(%ebp),%ebx
mov    %ebx,%eax
add    $0x2,%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%ebx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%ebx)
jne    805cde3 <fts_children+0x38d3>
test   %esi,%esi
jne    805cde3 <fts_children+0x38d3>
mov    %ebx,%esi
add    $0x3,%esi
mov    -0x4ac(%ebp),%eax
lea    0x3(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
add    $0xf,%eax
mov    %al,(%esi)
mov    -0x4fc(%ebp),%eax
mov    %eax,-0x4e8(%ebp)
jmp    805c898 <fts_children+0x3388>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
lea    0x4(%eax),%ebx
call   8049f60 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x3(%ecx)
je     805ce45 <fts_children+0x3935>
add    %ebx,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    805ce20 <fts_children+0x3910>
jmp    805cdb8 <fts_children+0x38a8>
mov    %ebx,%ecx
jmp    805c898 <fts_children+0x3388>
mov    %ebx,%esi
jmp    805cb51 <fts_children+0x3641>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049b20 <__stack_chk_fail@plt>
mov    %ebx,%esi
jmp    805cdb8 <fts_children+0x38a8>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    805c14f <fts_children+0x2c3f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     805ce90 <fts_children+0x3980>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     805cea0 <fts_children+0x3990>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     805cf02 <fts_children+0x39f2>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     805cf90 <fts_children+0x3a80>
mov    (%eax),%ebx
jmp    *0x8060260(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     805ced8 <fts_children+0x39c8>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    805cef8 <fts_children+0x39e8>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    805cef8 <fts_children+0x39e8>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    805cef8 <fts_children+0x39e8>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    805cef8 <fts_children+0x39e8>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    805cef8 <fts_children+0x39e8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    805cef8 <fts_children+0x39e8>
movl   $0x8060258,0x4(%eax)
jmp    805cef8 <fts_children+0x39e8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    805cef8 <fts_children+0x39e8>
movl   $0x80602bc,0x4(%eax)
jmp    805cef8 <fts_children+0x39e8>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    805d01a <fts_children+0x3b0a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     805d048 <fts_children+0x3b38>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    805d010 <fts_children+0x3b00>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    805d0fc <fts_children+0x3bec>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    805d0ee <fts_children+0x3bde>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     805d188 <fts_children+0x3c78>
cmp    $0x2b,%dl
je     805d198 <fts_children+0x3c88>
cmp    $0x20,%dl
je     805d1a8 <fts_children+0x3c98>
cmp    $0x23,%dl
je     805d1b8 <fts_children+0x3ca8>
cmp    $0x30,%dl
nop
je     805d1c8 <fts_children+0x3cb8>
cmp    $0x49,%dl
jne    805d1d8 <fts_children+0x3cc8>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    805d0a8 <fts_children+0x3b98>
orl    $0x1,0x8(%ebx)
jmp    805d0e8 <fts_children+0x3bd8>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    805d100 <fts_children+0x3bf0>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    805d09c <fts_children+0x3b8c>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    805d132 <fts_children+0x3c22>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     805d149 <fts_children+0x3c39>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    805d130 <fts_children+0x3c20>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     805d7d4 <fts_children+0x42c4>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    805d09c <fts_children+0x3b8c>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    805d0e8 <fts_children+0x3bd8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    805d0e8 <fts_children+0x3bd8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    805d0e8 <fts_children+0x3bd8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    805d0e8 <fts_children+0x3bd8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    805d0e8 <fts_children+0x3bd8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     805d464 <fts_children+0x3f54>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     805d224 <fts_children+0x3d14>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     805da6a <fts_children+0x455a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    805d200 <fts_children+0x3cf0>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     805d417 <fts_children+0x3f07>
add    $0x1,%esi
xor    %eax,%eax
jmp    805d25e <fts_children+0x3d4e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     805d270 <fts_children+0x3d60>
cmp    $0x6c,%dl
je     805d278 <fts_children+0x3d68>
cmp    $0x6a,%dl
je     805d280 <fts_children+0x3d70>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     805d258 <fts_children+0x3d48>
cmp    $0x74,%dl
jne    805d288 <fts_children+0x3d78>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    805d238 <fts_children+0x3d28>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    805d258 <fts_children+0x3d48>
or     $0x4,%eax
jmp    805d258 <fts_children+0x3d48>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    805d258 <fts_children+0x3d48>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    805d258 <fts_children+0x3d48>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     805d7d4 <fts_children+0x42c4>
movzbl %cl,%ecx
jmp    *0x80602d8(,%ecx,4)
movl   $0x11,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     805d970 <fts_children+0x4460>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    805d86b <fts_children+0x435b>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x28(%esp),%ecx
cmp    %eax,%edx
jb     805d307 <fts_children+0x3df7>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    805d2f0 <fts_children+0x3de0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x28(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    805d8f2 <fts_children+0x43e2>
mov    0x24(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    805d34a <fts_children+0x3e3a>
mov    0x4(%eax),%eax
jmp    805d01a <fts_children+0x3b0a>
mov    0x20(%esp),%eax
test   %eax,%eax
js     805d3d8 <fts_children+0x3ec8>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     805d3d8 <fts_children+0x3ec8>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     805d992 <fts_children+0x4482>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     805d3d8 <fts_children+0x3ec8>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     805da71 <fts_children+0x4561>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    805d01a <fts_children+0x3b0a>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     805d908 <fts_children+0x43f8>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    805d908 <fts_children+0x43f8>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     805d3ed <fts_children+0x3edd>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     805d402 <fts_children+0x3ef2>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049e80 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    805d03b <fts_children+0x3b2b>
cmpb   $0x2a,0x1(%esi)
je     805d6be <fts_children+0x41ae>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     805d446 <fts_children+0x3f36>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    805d438 <fts_children+0x3f28>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    805d22d <fts_children+0x3d1d>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    805d508 <fts_children+0x3ff8>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     805d7d4 <fts_children+0x42c4>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    805d3ac <fts_children+0x3e9c>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %edi,%eax
ja     805d4e7 <fts_children+0x3fd7>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    805d4d0 <fts_children+0x3fc0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    805d962 <fts_children+0x4452>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    805d224 <fts_children+0x3d14>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805d510 <fts_children+0x4000>
cmp    $0x24,%dl
jne    805d488 <fts_children+0x3f78>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     805d542 <fts_children+0x4032>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805d52b <fts_children+0x401b>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     805d7d4 <fts_children+0x42c4>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    805d4a5 <fts_children+0x3f95>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xf,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
cmp    $0xf,%eax
movl   $0x16,0x24(%esp)
jg     805d2b0 <fts_children+0x3da0>
test   $0x4,%al
jne    805d2b0 <fts_children+0x3da0>
cmp    $0x7,%eax
movl   $0x15,0x24(%esp)
jg     805d2b0 <fts_children+0x3da0>
test   $0x2,%al
movl   $0x12,0x24(%esp)
jne    805d2b0 <fts_children+0x3da0>
and    $0x1,%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
addl   $0x14,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     805d81b <fts_children+0x430b>
test   $0x4,%al
jne    805d81b <fts_children+0x430b>
cmp    $0x7,%eax
jg     805da98 <fts_children+0x4588>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805dadc <fts_children+0x45cc>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x3,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    805d2b0 <fts_children+0x3da0>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xd,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
movl   $0x10,0x24(%esp)
movb   $0x73,0x1c(%esp)
jmp    805d2b0 <fts_children+0x3da0>
movl   $0xe,0x24(%esp)
movb   $0x63,0x1c(%esp)
jmp    805d2b0 <fts_children+0x3da0>
cmp    $0xf,%eax
jle    805d9a1 <fts_children+0x4491>
mov    %dl,0x1c(%esp)
movl   $0xc,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
cmp    $0xf,%eax
jg     805d82c <fts_children+0x431c>
test   $0x4,%al
jne    805d82c <fts_children+0x431c>
cmp    $0x7,%eax
jg     805daa9 <fts_children+0x4599>
test   $0x2,%al
jne    805daed <fts_children+0x45dd>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x4,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     805d83d <fts_children+0x432d>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805d6eb <fts_children+0x41db>
cmp    $0x24,%dl
jne    805d83d <fts_children+0x432d>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     805d71d <fts_children+0x420d>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805d706 <fts_children+0x41f6>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     805d7d4 <fts_children+0x42c4>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     805d9bb <fts_children+0x44ab>
mov    0x14(%esp),%eax
test   %eax,%eax
js     805d3d8 <fts_children+0x3ec8>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     805d77a <fts_children+0x426a>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     805d3d8 <fts_children+0x3ec8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     805d3d8 <fts_children+0x3ec8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     805dafe <fts_children+0x45ee>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     805d3dc <fts_children+0x3ecc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805db16 <fts_children+0x4606>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    805d9c6 <fts_children+0x44b6>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x30(%esp)
je     805d7f1 <fts_children+0x42e1>
mov    %eax,(%esp)
call   8049a60 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     805d806 <fts_children+0x42f6>
mov    %eax,(%esp)
call   8049a60 <free@plt>
call   8049e80 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    805d03b <fts_children+0x3b2b>
mov    %dl,0x1c(%esp)
movl   $0x9,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    %dl,0x1c(%esp)
movl   $0xa,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    805d74b <fts_children+0x423b>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     805d7d4 <fts_children+0x42c4>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    805d74b <fts_children+0x423b>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     805d3d8 <fts_children+0x3ec8>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     805d890 <fts_children+0x4380>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     805d3d8 <fts_children+0x3ec8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     805d3d8 <fts_children+0x3ec8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x28(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     805da22 <fts_children+0x4512>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    0x28(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     805d3df <fts_children+0x3ecf>
cmp    %eax,0x30(%esp)
je     805da38 <fts_children+0x4528>
mov    0x68(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %ecx,0x4(%eax)
jmp    805d2d7 <fts_children+0x3dc7>
cmp    %eax,0x24(%esp)
je     805d31e <fts_children+0x3e0e>
jmp    805d7df <fts_children+0x42cf>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     805d3d8 <fts_children+0x3ec8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     805da89 <fts_children+0x4579>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049c70 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     805d3dc <fts_children+0x3ecc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805daba <fts_children+0x45aa>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    805d4ba <fts_children+0x3faa>
cmp    $0x5,%eax
je     805d221 <fts_children+0x3d11>
jmp    805d7df <fts_children+0x42cf>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     805d7d4 <fts_children+0x42c4>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    805d2c2 <fts_children+0x3db2>
mov    %edx,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%esi
jmp    805d387 <fts_children+0x3e77>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %esi,%eax
ja     805d9f0 <fts_children+0x44e0>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    805d9d9 <fts_children+0x44c9>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    805da0f <fts_children+0x44ff>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    805d22d <fts_children+0x3d1d>
cmp    $0x5,%eax
jne    805d7df <fts_children+0x42cf>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    805d22d <fts_children+0x3d1d>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     805db0d <fts_children+0x45fd>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8049a70 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ecx
jmp    805d8e2 <fts_children+0x43d2>
xor    %eax,%eax
jmp    805d211 <fts_children+0x3d01>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
jmp    805d39c <fts_children+0x3e8c>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edx
jmp    805d939 <fts_children+0x4429>
mov    %dl,0x1c(%esp)
movl   $0x7,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    %dl,0x1c(%esp)
movl   $0x8,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    805d952 <fts_children+0x4442>
mov    %dl,0x1c(%esp)
movl   $0x1,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    %dl,0x1c(%esp)
movl   $0x2,0x24(%esp)
jmp    805d2b0 <fts_children+0x3da0>
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
mov    %eax,%edx
jmp    805d7ab <fts_children+0x429b>
mov    0x30(%esp),%eax
jmp    805d3df <fts_children+0x3ecf>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049a70 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    805d7c4 <fts_children+0x42b4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    805db88 <fts_children+0x4678>
cmp    %edi,%esi
jbe    805dbc0 <fts_children+0x46b0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     805dbe0 <fts_children+0x46d0>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    805dbf0 <fts_children+0x46e0>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     805dc88 <fts_children+0x4778>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    805dbd1 <fts_children+0x46c1>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    805db7b <fts_children+0x466b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     805dc74 <fts_children+0x4764>
cmp    %eax,0xc(%esp)
jb     805dc70 <fts_children+0x4760>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    805dc4e <fts_children+0x473e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    805dc4e <fts_children+0x473e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     805dba1 <fts_children+0x4691>
jmp    805dbb1 <fts_children+0x46a1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a9e0 <fchmod@plt+0x830>
add    $0x7355,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x10c(%ebx),%esi
call   8049950 <_init>
lea    -0x110(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     805dcf9 <fts_children+0x47e9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x110(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    805dcd8 <fts_children+0x47c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    805dd10 <fts_children+0x4800>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804a9e0 <fchmod@plt+0x830>
add    $0x72da,%ebx
sub    $0x18,%esp
lea    0x224(%ebx),%eax
test   %eax,%eax
je     805dd58 <fts_children+0x4848>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c40 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805dd3b <fts_children+0x482b>
push   %ebx
sub    $0x8,%esp
call   804a9e0 <fchmod@plt+0x830>
add    $0x729b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
jae    805ddfc <_IO_stdin_used+0x78>
arpl   %bp,(%edi)
insl   (%dx),%es:(%edi)
jbe    805ddbd <_IO_stdin_used+0x39>
arpl   %ax,(%eax)
or     0x65(%edx),%dl
jo     805de05 <_IO_stdin_used+0x81>
jb     805de0c <_IO_stdin_used+0x88>
and    %ah,0x75622073
addr16 jae 805ddc1 <_IO_stdin_used+0x3d>
je     805de12 <_IO_stdin_used+0x8e>
and    %ah,0x62000a73
jne    805de12 <_IO_stdin_used+0x8e>
sub    $0x65726f63,%eax
jne    805de26 <_IO_stdin_used+0xa2>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     805de24 <_IO_stdin_used+0xa0>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    805de0e <_IO_stdin_used+0x8a>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     805de3f <_IO_stdin_used+0xbb>
jne    805de50 <_IO_stdin_used+0xcc>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
das
jne    805de5a <_IO_stdin_used+0xd6>
jb     805de18 <_IO_stdin_used+0x94>
jae    805de53 <_IO_stdin_used+0xcf>
popa
jb     805de53 <_IO_stdin_used+0xcf>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dl,%gs:0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    805de8e <_IO_stdin_used+0x10a>
and    %ah,0x61740073
jb     805de8a <_IO_stdin_used+0x106>
gs
je     805de46 <_IO_stdin_used+0xc2>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     805de50 <_IO_stdin_used+0xcc>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805de3c <_IO_stdin_used+0xb8>
dec    %edx
imul   $0x6579654d,0x20(%ebp),%ebp
jb     805deaf <_IO_stdin_used+0x12b>
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%si)
jbe    805deb6 <_IO_stdin_used+0x132>
and    %cl,%fs:0x61(%ebp)
arpl   %cx,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jp     805dec0 <_IO_stdin_used+0x13c>
add    %cl,%gs:0x69(%ebp)
imul   $0x50,0x20(%ebp),%esp
popa
jb     805decd <_IO_stdin_used+0x149>
gs
jb     805de65 <_IO_stdin_used+0xe1>
insl   (%dx),%es:(%edi)
jbe    805de68 <_IO_stdin_used+0xe4>
bound  %esp,0x69(%esi)
outsb  %ds:(%esi),(%dx)
je     805dea8 <_IO_stdin_used+0x124>
jne    805dee6 <_IO_stdin_used+0x162>
push   %ebx
cmp    0x6d(%eax,%eax,1),%dl
imul   $0x20676e69,0x73(%ebx),%esi
imul   $0x706f,0x20(%ebp,%eiz,2),%bp
gs
jb     805dee7 <_IO_stdin_used+0x163>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x78(%ebp)
je     805deff <_IO_stdin_used+0x17b>
popa
and    %ch,0x70(%edi)
gs
jb     805def5 <_IO_stdin_used+0x171>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20320073
cmp    $0x3d,%al
and    %ch,0x5f(%esi)
imul   $0x6200,0x73(%ebp,%eiz,2),%bp
popa
arpl   %bp,0x75(%ebx)
jo     805dece <_IO_stdin_used+0x14a>
je     805df29 <_IO_stdin_used+0x1a5>
jo     805df17 <_IO_stdin_used+0x193>
add    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805deba <_IO_stdin_used+0x136>
outsw  %ds:(%esi),(%dx)
jb     805df21 <_IO_stdin_used+0x19d>
add    %ch,%gs:0x6e(%ecx)
je     805df29 <_IO_stdin_used+0x1a5>
jb     805df27 <_IO_stdin_used+0x1a3>
arpl   %si,0x76(%ecx,%ebp,2)
add    %ch,%gs:0x6f(%esi)
sub    $0x626f6c63,%eax
bound  %esp,0x72(%ebp)
add    %ch,0x6f(%esi)
sub    $0x67726174,%eax
gs
je     805df0e <_IO_stdin_used+0x18a>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805deeb <_IO_stdin_used+0x167>
jae    805df61 <_IO_stdin_used+0x1dd>
jb     805df58 <_IO_stdin_used+0x1d4>
jo     805df1e <_IO_stdin_used+0x19a>
je     805df65 <_IO_stdin_used+0x1e1>
popa
imul   $0x6c732d67,0x6e(%ecx,%ebp,2),%ebp
popa
jae    805df67 <_IO_stdin_used+0x1e3>
gs
jae    805df02 <_IO_stdin_used+0x17e>
jae    805df79 <_IO_stdin_used+0x1f5>
data32 imul $0x7075,0x0(%eax),%di
fs
popa
je     805df74 <_IO_stdin_used+0x1f0>
add    %dh,0x65(%esi)
jb     805df76 <_IO_stdin_used+0x1f2>
outsl  %ds:(%esi),(%dx)
jae    805df7c <_IO_stdin_used+0x1f8>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     805df1d <_IO_stdin_used+0x199>
jbe    805df84 <_IO_stdin_used+0x200>
jb     805df94 <_IO_stdin_used+0x210>
imul   $0x0,0x6e(%edi),%ebp
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     805df56 <_IO_stdin_used+0x1d2>
popa
je     805dfad <_IO_stdin_used+0x229>
jb     805dfa4 <_IO_stdin_used+0x220>
bound  %esi,0x74(%ebp)
gs
jae    805df61 <_IO_stdin_used+0x1dd>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x28000073
sub    %dh,0x74(%ebx)
popa
je     805dfc4 <_IO_stdin_used+0x240>
jae    805df7a <_IO_stdin_used+0x1f6>
and    %bh,0x4d52203d
pop    %edi
dec    %edi
dec    %ebx
and    %bh,0x20(%esp,%edi,2)
sub    %dh,0x74(%ebx)
popa
je     805dfd9 <_IO_stdin_used+0x255>
jae    805df8f <_IO_stdin_used+0x20b>
and    %bh,0x4d52203d
pop    %edi
push   %ebp
push   %ebx
inc    %ebp
push   %edx
pop    %edi
inc    %esp
inc    %ebp
inc    %ebx
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
inc    %esp
and    %bh,0x20(%esp,%edi,2)
sub    %dh,0x74(%ebx)
popa
je     805dff9 <_IO_stdin_used+0x275>
jae    805dfaf <_IO_stdin_used+0x22b>
and    %bh,0x4d52203d
pop    %edi
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
sub    %eax,(%eax)
push   %esp
jb     805e010 <_IO_stdin_used+0x28c>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     805dfc8 <_IO_stdin_used+0x244>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805e011 <_IO_stdin_used+0x28d>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     805e020 <_IO_stdin_used+0x29c>
popa
je     805e01f <_IO_stdin_used+0x29b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bl,%cs:0x2d(%ebx)
push   %esp
pop    %ebp
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %al,0x53(%ebp,%eax,2)
push   %esp
or     (%eax),%ah
and    %ch,0x72(%edi)
cmp    (%eax),%ah
and    %ah,0x4f5b2073
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
cs cs and %al,%cs:0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     (%eax),%ah
and    %ch,0x72(%edi)
cmp    (%eax),%ah
and    %ah,0x4f5b2073
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %ch,%cs:0x49442074
49
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
cs cs or %cs:(%eax),%al
add    %dl,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %dh,0x20(%edi,%ebp,2)
inc    %esp
inc    %ebp
push   %ebx
push   %esp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     805e076 <_IO_stdin_used+0x2f2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805e0bf <_IO_stdin_used+0x33b>
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
sub    %dh,0x29(%ebx)
and    %dh,0x20(%edi,%ebp,2)
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     %cs:(%eax),%al
or     0x61(%ebp),%cl
outsb  %ds:(%esi),(%dx)
fs
popa
je     805e0eb <_IO_stdin_used+0x367>
jb     805e0f7 <_IO_stdin_used+0x373>
and    %ah,0x72(%ecx)
addr16 jne 805e0f1 <_IO_stdin_used+0x36d>
outsb  %gs:(%esi),(%dx)
je     805e0fb <_IO_stdin_used+0x377>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     805e0fe <_IO_stdin_used+0x37a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805e0b9 <_IO_stdin_used+0x335>
popa
jb     805e101 <_IO_stdin_used+0x37d>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     805e113 <_IO_stdin_used+0x38f>
jb     805e11f <_IO_stdin_used+0x39b>
and    %ah,0x6f(%esi)
jb     805e0cb <_IO_stdin_used+0x347>
jae    805e115 <_IO_stdin_used+0x391>
outsl  %ds:(%esi),(%dx)
jb     805e124 <_IO_stdin_used+0x3a0>
and    %ch,0x70(%edi)
je     805e11e <_IO_stdin_used+0x39a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805e0d9 <_IO_stdin_used+0x355>
je     805e12a <_IO_stdin_used+0x3a6>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6361622d
imul   $0x5b,0x70(%ebp),%esi
cmp    $0x544e4f43,%eax
push   %edx
dec    %edi
dec    %esp
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x61,0x20(%ebp),%esp
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805e10d <_IO_stdin_used+0x389>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
gs
js     805e161 <_IO_stdin_used+0x3dd>
jae    805e16e <_IO_stdin_used+0x3ea>
imul   $0x73656420,0x67(%esi),%ebp
je     805e16c <_IO_stdin_used+0x3e8>
outsb  %ds:(%esi),(%dx)
popa
je     805e170 <_IO_stdin_used+0x3ec>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x20202062
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x622d2d20,0x65(%ebx),%ebp
popa
arpl   %bp,0x75(%ebx)
jo     805e15c <_IO_stdin_used+0x3d8>
bound  %esi,0x74(%ebp)
and    %ah,0x65(%edi,%ebp,2)
jae    805e165 <_IO_stdin_used+0x3e1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805e169 <_IO_stdin_used+0x3e5>
popa
arpl   %sp,0x65(%ebx)
jo     805e1c3 <_IO_stdin_used+0x43f>
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
addr16 jne 805e1c5 <_IO_stdin_used+0x441>
outsb  %gs:(%esi),(%dx)
je     805e166 <_IO_stdin_used+0x3e2>
and    %ah,(%eax)
sub    $0x2d202c66,%eax
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     805e1a2 <_IO_stdin_used+0x41e>
jo     805e1f6 <_IO_stdin_used+0x472>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     805e1fc <_IO_stdin_used+0x478>
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     805e1f4 <_IO_stdin_used+0x470>
and    %ch,0x76(%edi)
gs
jb     805e20c <_IO_stdin_used+0x488>
jb     805e200 <_IO_stdin_used+0x47c>
je     805e202 <_IO_stdin_used+0x47e>
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%ah
and    %ch,0x2d202c69
sub    $0x65746e69,%eax
jb     805e20b <_IO_stdin_used+0x487>
arpl   %si,0x76(%ecx,%ebp,2)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     805e22f <_IO_stdin_used+0x4ab>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     805e235 <_IO_stdin_used+0x4b1>
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     805e22d <_IO_stdin_used+0x4a9>
and    %ch,0x76(%edi)
gs
jb     805e245 <_IO_stdin_used+0x4c1>
jb     805e239 <_IO_stdin_used+0x4b5>
je     805e237 <_IO_stdin_used+0x4b3>
or     (%eax),%ah
and    %ch,0x2d202c6e
sub    $0x632d6f6e,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x65(%edx)
jb     805e206 <_IO_stdin_used+0x482>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     805e219 <_IO_stdin_used+0x495>
outsl  %ds:(%esi),(%dx)
jbe    805e261 <_IO_stdin_used+0x4dd>
jb     805e275 <_IO_stdin_used+0x4f1>
jb     805e269 <_IO_stdin_used+0x4e5>
je     805e267 <_IO_stdin_used+0x4e3>
and    %ah,0x6e(%ecx)
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x6649,0xa(%ebp,%eiz,2),%bp
and    %bh,0x6f(%ecx)
jne    805e23b <_IO_stdin_used+0x4b7>
jae    805e28d <_IO_stdin_used+0x509>
arpl   %bp,%gs:0x66(%ecx)
jns    805e243 <_IO_stdin_used+0x4bf>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805e28c <_IO_stdin_used+0x508>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x66(%edi)
and    %ch,0x2d202c69
data16
sub    $0x20,%al
sub    $0x6f202c6e,%eax
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    805e265 <_IO_stdin_used+0x4e1>
je     805e2af <_IO_stdin_used+0x52b>
and    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%edi)
and    %dh,%gs:0x6b(%ecx,%eiz,2)
gs
jae    805e279 <_IO_stdin_used+0x4f5>
gs
data16
data16
arpl   %si,%gs:0xa(%esi,%ebp,1)
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7274732d
imul   $0x69617274,0x2d(%eax),%esi
insb   (%dx),%es:(%edi)
imul   $0x616c732d,0x67(%esi),%ebp
jae    805e2e8 <_IO_stdin_used+0x564>
gs
jae    805e2a3 <_IO_stdin_used+0x51f>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805e2ef <_IO_stdin_used+0x56b>
and    %ah,0x6e(%ecx)
jns    805e2af <_IO_stdin_used+0x52b>
je     805e303 <_IO_stdin_used+0x57f>
popa
imul   $0x6c732067,0x6e(%ecx,%ebp,2),%ebp
popa
jae    805e305 <_IO_stdin_used+0x581>
gs
jae    805e2c0 <_IO_stdin_used+0x53c>
data16
jb     805e312 <_IO_stdin_used+0x58e>
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
push   %ebx
dec    %edi
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
jb     805e33c <_IO_stdin_used+0x5b8>
jne    805e344 <_IO_stdin_used+0x5c0>
outsb  %gs:(%esi),(%dx)
je     805e2e5 <_IO_stdin_used+0x561>
and    %ah,(%eax)
sub    $0x2d202c53,%eax
sub    $0x66667573,%eax
imul   $0x46465553,0x3d(%eax),%edi
dec    %ecx
pop    %eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jbe    805e362 <_IO_stdin_used+0x5de>
jb     805e371 <_IO_stdin_used+0x5ed>
imul   $0x20656874,0x20(%ebp,%eiz,2),%esp
jne    805e37c <_IO_stdin_used+0x5f8>
jne    805e36c <_IO_stdin_used+0x5e8>
insb   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805e334 <_IO_stdin_used+0x5b0>
jae    805e38b <_IO_stdin_used+0x607>
data32 imul $0x2000,0xa(%eax),%di
and    %ch,0x2d202c74
sub    $0x67726174,%eax
gs
je     805e358 <_IO_stdin_used+0x5d4>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805e372 <_IO_stdin_used+0x5ee>
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805e3a9 <_IO_stdin_used+0x625>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x72(%ecx)
addr16 jne 805e3c2 <_IO_stdin_used+0x63e>
outsb  %gs:(%esi),(%dx)
je     805e3cc <_IO_stdin_used+0x648>
and    %ch,0x6e(%ecx)
je     805e3cd <_IO_stdin_used+0x649>
and    %al,0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     (%eax),%ah
and    %ch,0x2d202c54
sub    $0x742d6f6e,%eax
popa
jb     805e3df <_IO_stdin_used+0x65b>
gs
je     805e3a8 <_IO_stdin_used+0x624>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805e3a5 <_IO_stdin_used+0x621>
and    %ah,(%eax)
and    %dh,0x65(%edx,%esi,2)
popa
je     805e3ae <_IO_stdin_used+0x62a>
inc    %esp
inc    %ebp
push   %ebx
push   %esp
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     805e409 <_IO_stdin_used+0x685>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x2d202c75
sub    $0x61647075,%eax
je     805e417 <_IO_stdin_used+0x693>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jbe    805e42c <_IO_stdin_used+0x6a8>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    805e3ed <_IO_stdin_used+0x669>
ja     805e437 <_IO_stdin_used+0x6b3>
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x4f(%ebx)
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x65(%esi)
ja     805e44e <_IO_stdin_used+0x6ca>
jb     805e3f5 <_IO_stdin_used+0x671>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x73(%ebp,%eiz,2)
je     805e483 <_IO_stdin_used+0x6ff>
outsb  %ds:(%esi),(%dx)
popa
je     805e487 <_IO_stdin_used+0x703>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
fs
gs
jae    805e4cb <_IO_stdin_used+0x747>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x69(%ebp)
jae    805e4de <_IO_stdin_used+0x75a>
imul   $0x2d20200a,0x67(%esi),%ebp
jbe    805e4a0 <_IO_stdin_used+0x71c>
and    %ch,0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
js     805e501 <_IO_stdin_used+0x77d>
insb   (%dx),%es:(%edi)
popa
imul   $0x74616877,0x20(%esi),%ebp
and    %ch,0x73(%ecx)
and    %ah,0x65(%edx)
imul   $0x6e6f6420,0x67(%esi),%ebp
or     %gs:(%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     805e4d9 <_IO_stdin_used+0x755>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     805e52f <_IO_stdin_used+0x7ab>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    805e552 <_IO_stdin_used+0x7ce>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    805e564 <_IO_stdin_used+0x7e0>
jo     805e567 <_IO_stdin_used+0x7e3>
je     805e514 <_IO_stdin_used+0x790>
jbe    805e55b <_IO_stdin_used+0x7d7>
jb     805e56b <_IO_stdin_used+0x7e7>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     805e56f <_IO_stdin_used+0x7eb>
popa
je     805e56e <_IO_stdin_used+0x7ea>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x540a0000,0x0(%edx,%ecx,1),%esi
push   $0x61622065
arpl   %bp,0x75(%ebx)
jo     805e540 <_IO_stdin_used+0x7bc>
jae    805e597 <_IO_stdin_used+0x813>
data32 imul $0x7369,0x20(%eax),%di
and    %ah,(%edi)
jle    805e554 <_IO_stdin_used+0x7d0>
sub    $0x20,%al
jne    805e59f <_IO_stdin_used+0x81b>
insb   (%dx),%es:(%edi)
gs
jae    805e5a8 <_IO_stdin_used+0x824>
and    %dh,0x65(%ebx)
je     805e55a <_IO_stdin_used+0x7d6>
ja     805e5a5 <_IO_stdin_used+0x821>
je     805e5a6 <_IO_stdin_used+0x822>
and    %ch,0x6675732d
imul   $0x726f,0x20(%eax),%di
and    %dl,0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
or     %cs:0x65(%eax,%ebp,2),%dl
and    %dh,0x65(%esi)
jb     805e5dc <_IO_stdin_used+0x858>
imul   $0x6e6f6320,0x6e(%edi),%ebp
je     805e5e4 <_IO_stdin_used+0x860>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
je     805e5e1 <_IO_stdin_used+0x85d>
outsl  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%ebp)
jns    805e5a0 <_IO_stdin_used+0x81c>
bound  %esp,0x20(%ebp)
jae    805e5ea <_IO_stdin_used+0x866>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x69(%esi)
popa
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
outsl  %ds:(%esi),(%dx)
jo     805e614 <_IO_stdin_used+0x890>
imul   $0x20726f20,0x6e(%edi),%ebp
je     805e611 <_IO_stdin_used+0x88d>
jb     805e61a <_IO_stdin_used+0x896>
jne    805e614 <_IO_stdin_used+0x890>
push   $0x6568740a
and    %dl,0x45(%esi)
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
and    %ah,0x6e(%ebp)
jbe    805e630 <_IO_stdin_used+0x8ac>
jb     805e638 <_IO_stdin_used+0x8b4>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805e5ef <_IO_stdin_used+0x86b>
jbe    805e632 <_IO_stdin_used+0x8ae>
jb     805e63c <_IO_stdin_used+0x8b8>
popa
bound  %ebp,0x2e(%ebp,%eiz,2)
and    %ah,(%eax)
dec    %eax
gs
jb     805e643 <_IO_stdin_used+0x8bf>
and    %ah,0x72(%ecx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    805e651 <_IO_stdin_used+0x8cd>
jae    805e628 <_IO_stdin_used+0x8a4>
or     (%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
data16
data16
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
jbe    805e66f <_IO_stdin_used+0x8eb>
jb     805e62c <_IO_stdin_used+0x8a8>
insl   (%dx),%es:(%edi)
popa
imul   $0x62,0x20(%ebp),%esp
popa
arpl   %bp,0x75(%ebx)
jo     805e68b <_IO_stdin_used+0x907>
and    %ch,(%eax)
gs
jbe    805e682 <_IO_stdin_used+0x8fe>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
imul   $0x65766967,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
sub    %ecx,(%edx)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
jne    805e6a7 <_IO_stdin_used+0x923>
bound  %esp,0x72(%ebp)
gs
fs
sub    $0x20,%al
je     805e663 <_IO_stdin_used+0x8df>
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x6e,0x20(%ebp),%esp
jne    805e6bc <_IO_stdin_used+0x938>
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805e6cf <_IO_stdin_used+0x94b>
or     (%eax),%ah
and    %ah,0x78(%ebp)
imul   $0x2c676e69,0x74(%ebx),%esi
and    %ch,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ch,%fs:%gs:0x66(%ecx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805e6fe <_IO_stdin_used+0x97a>
and    %ah,0x78(%ebp)
imul   $0x6973202c,0x74(%ebx),%esi
insl   (%dx),%es:(%edi)
jo     805e704 <_IO_stdin_used+0x980>
and    %ch,%gs:0x74(%edi)
push   $0x69777265
jae    805e708 <_IO_stdin_used+0x984>
or     (%eax),%ah
and    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     805e717 <_IO_stdin_used+0x993>
gs
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
gs
jbe    805e717 <_IO_stdin_used+0x993>
jb     805e6d4 <_IO_stdin_used+0x950>
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
ja     805e71b <_IO_stdin_used+0x997>
jns    805e72f <_IO_stdin_used+0x9ab>
and    %ch,0x61(%ebp)
imul   $0x73,0x20(%ebp),%esp
imul   $0x6220656c,0x70(%ebp),%ebp
popa
arpl   %bp,0x75(%ebx)
jo     805e743 <_IO_stdin_used+0x9bf>
or     (%eax),%al
add    %al,(%eax)
push   $0x3a707474
das
das
ja     805e754 <_IO_stdin_used+0x9d0>
ja     805e70d <_IO_stdin_used+0x989>
outsb  %ds:(%si),(%dx)
jne    805e711 <_IO_stdin_used+0x98d>
outsl  %ds:(%esi),(%dx)
jb     805e74d <_IO_stdin_used+0x9c9>
das
jae    805e758 <_IO_stdin_used+0x9d4>
data16
je     805e763 <_IO_stdin_used+0x9df>
popa
jb     805e754 <_IO_stdin_used+0x9d0>
das
arpl   %bp,0x72(%edi)
gs
jne    805e76a <_IO_stdin_used+0x9e6>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     805e763 <_IO_stdin_used+0x9df>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     805e729 <_IO_stdin_used+0x9a5>
jne    805e77e <_IO_stdin_used+0x9fa>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     805e78f <_IO_stdin_used+0xa0b>
popa
jb     805e780 <_IO_stdin_used+0x9fc>
cmp    (%eax),%ah
cmp    $0x68,%al
je     805e795 <_IO_stdin_used+0xa11>
jo     805e75d <_IO_stdin_used+0x9d9>
das
das
ja     805e79e <_IO_stdin_used+0xa1a>
ja     805e757 <_IO_stdin_used+0x9d3>
outsb  %ds:(%si),(%dx)
jne    805e75b <_IO_stdin_used+0x9d7>
outsl  %ds:(%esi),(%dx)
jb     805e797 <_IO_stdin_used+0xa13>
das
addr16
gs
je     805e79d <_IO_stdin_used+0xa19>
gs
insb   (%dx),%es:(%edi)
jo     805e768 <_IO_stdin_used+0x9e4>
or     %ds:(%eax),%al
push   %edx
gs
jo     805e7af <_IO_stdin_used+0xa2b>
jb     805e7b6 <_IO_stdin_used+0xa32>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    805e7b8 <_IO_stdin_used+0xa34>
popa
je     805e7b8 <_IO_stdin_used+0xa34>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 805e777 <_IO_stdin_used+0x9f3>
je     805e7c8 <_IO_stdin_used+0xa44>
and    %bh,(%eax,%ebp,2)
je     805e7d2 <_IO_stdin_used+0xa4e>
jo     805e79a <_IO_stdin_used+0xa16>
das
das
je     805e7d6 <_IO_stdin_used+0xa52>
popa
outsb  %ds:(%esi),(%dx)
jae    805e7d4 <_IO_stdin_used+0xa50>
popa
je     805e7d4 <_IO_stdin_used+0xa50>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     805e7e1 <_IO_stdin_used+0xa5d>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     805e7df <_IO_stdin_used+0xa5b>
das
je     805e7e0 <_IO_stdin_used+0xa5c>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     805e7a8 <_IO_stdin_used+0xa24>
arpl   %bp,0x6d(%edi)
jo     805e7f9 <_IO_stdin_used+0xa75>
gs
je     805e7f5 <_IO_stdin_used+0xa71>
and    %ah,0x63(%edi,%ebp,2)
jne    805e803 <_IO_stdin_used+0xa7f>
outsb  %gs:(%esi),(%dx)
je     805e7fb <_IO_stdin_used+0xa77>
je     805e805 <_IO_stdin_used+0xa81>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     805e817 <_IO_stdin_used+0xa93>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     805e813 <_IO_stdin_used+0xa8f>
jne    805e824 <_IO_stdin_used+0xaa0>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
insl   (%dx),%es:(%edi)
jne    805e837 <_IO_stdin_used+0xab3>
je     805e836 <_IO_stdin_used+0xab2>
jo     805e83b <_IO_stdin_used+0xab7>
and    %dh,%gs:0x72(%ecx,%eiz,2)
addr16
gs
je     805e7f8 <_IO_stdin_used+0xa74>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x65707320,0x73(%ebp),%esp
arpl   %bp,0x66(%ecx)
imul   $0x6d000000,0x64(%ebp),%esp
imul   $0x20676e69,0x73(%ebx),%esi
fs
gs
jae    805e870 <_IO_stdin_used+0xaec>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x70(%edi)
gs
jb     805e86f <_IO_stdin_used+0xaeb>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x66(%ecx)
je     805e87a <_IO_stdin_used+0xaf6>
jb     805e837 <_IO_stdin_used+0xab3>
and    $0x73,%eax
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805e843 <_IO_stdin_used+0xabf>
arpl   %bp,0x6d(%edi)
bound  %ebp,0x6e(%ecx)
and    %ch,%gs:0x7261742d
addr16
gs
je     805e861 <_IO_stdin_used+0xadd>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805e85e <_IO_stdin_used+0xada>
sub    %ch,0x61202974
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x2d6f6e2d
je     805e8af <_IO_stdin_used+0xb2b>
jb     805e8b7 <_IO_stdin_used+0xb33>
gs
je     805e880 <_IO_stdin_used+0xafc>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805e87d <_IO_stdin_used+0xaf9>
sub    %ch,0x2954
add    %ch,0x70(%edi)
je     805e8d1 <_IO_stdin_used+0xb4d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805e88c <_IO_stdin_used+0xb08>
sub    $0x6361622d,%eax
imul   $0x20,0x70(%ebp),%esi
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x2d6f6e2d
arpl   %bp,0x62(%edi,%ebp,2)
bound  %esp,0x72(%ebp)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x75(%ebp)
je     805e903 <_IO_stdin_used+0xb7f>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    805e8b3 <_IO_stdin_used+0xb2f>
gs
js     805e8f9 <_IO_stdin_used+0xb75>
insb   (%dx),%es:(%edi)
jne    805e90c <_IO_stdin_used+0xb88>
imul   $0x0,0x65(%esi),%esi
outsl  %fs:(%esi),(%dx)
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805e90c <_IO_stdin_used+0xb88>
add    %ch,0x61(%ebp)
imul   $0x0,0x0(%esi),%ebp
add    %al,(%eax)
add    %dh,0x20805de(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
mov    $0x805de,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
rcr    $0x5,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
int3
fiadd  0x8
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
xlat   %ds:(%ebx)
fiadd  0x8
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ch,%bl
fiadd  0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x2000000(%eax)
fild   0x108
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
fcmovu %st(6),%st
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %cl,(%ecx)
fild   0x8
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
adc    %bl,%bh
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
sbb    %bl,%bh
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%esi)
(bad)
lcall  *0x805df
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%ebp)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805e9fb <_IO_stdin_used+0xc77>
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805e9dc <_IO_stdin_used+0xc58>
and    %ah,0x72000a73
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805ea12 <_IO_stdin_used+0xc8e>
and    %ah,%fs:0x63000a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805e9da <_IO_stdin_used+0xc56>
jb     805ea21 <_IO_stdin_used+0xc9d>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805ea25 <_IO_stdin_used+0xca1>
and    %ah,0x73250073
cmp    (%eax),%ah
jb     805ea2f <_IO_stdin_used+0xcab>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805ea33 <_IO_stdin_used+0xcaf>
and    %ah,0x73252073
aas
and    %al,(%eax)
data16
je     805ea4d <_IO_stdin_used+0xcc9>
pop    %edi
jb     805ea42 <_IO_stdin_used+0xcbe>
popa
and    %ah,%fs:0x61(%esi)
imul   $0x6e616300,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ea0e <_IO_stdin_used+0xc8a>
jb     805ea55 <_IO_stdin_used+0xcd1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805ea59 <_IO_stdin_used+0xcd5>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805ea39 <_IO_stdin_used+0xcb5>
and    %ah,0x72740073
popa
jbe    805ea6d <_IO_stdin_used+0xce9>
jb     805ea7d <_IO_stdin_used+0xcf9>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
add    %dh,0x72(%ebx)
arpl   %bp,(%edi)
jb     805ea83 <_IO_stdin_used+0xcff>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805ea87 <_IO_stdin_used+0xd03>
arpl   %ax,%cs:(%eax)
data16
je     805ea9b <_IO_stdin_used+0xd17>
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x61(%esi)
imul   $0x25000000,0x64(%ebp,%eiz,2),%ebp
jae    805ea75 <_IO_stdin_used+0xcf1>
and    %ah,0x73(%ebp,%eiz,2)
arpl   %sp,0x6e(%ebp)
and    %ch,%fs:0x6e(%ecx)
je     805eab7 <_IO_stdin_used+0xd33>
and    %dh,0x72(%edi)
imul   $0x746f7270,0x2d(%ebp,%eiz,2),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805ea83 <_IO_stdin_used+0xcff>
and    $0x203f73,%eax
and    $0x64203a73,%eax
gs
jae    805ead3 <_IO_stdin_used+0xd4f>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx)
je     805eae7 <_IO_stdin_used+0xd63>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805eaa3 <_IO_stdin_used+0xd1f>
and    $0x203f73,%eax
and    $0x72203a73,%eax
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805eaf7 <_IO_stdin_used+0xd73>
and    %dh,0x72(%edi)
imul   $0x746f7270,0x2d(%ebp,%eiz,2),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x73252073
aas
and    %al,(%eax)
add    %ch,0x74(%ecx)
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx,%eiz,2)
addr16
gs
jb     805eb28 <_IO_stdin_used+0xda4>
jne    805eb2e <_IO_stdin_used+0xdaa>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jo     805eb27 <_IO_stdin_used+0xda3>
jb     805eb25 <_IO_stdin_used+0xda1>
je     805eb2b <_IO_stdin_used+0xda7>
and    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    805eb37 <_IO_stdin_used+0xdb3>
jbe    805eb35 <_IO_stdin_used+0xdb1>
insb   (%dx),%es:(%edi)
jns    805eaf3 <_IO_stdin_used+0xd6f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73
add    %ch,0x74(%ecx)
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx,%eiz,2)
addr16
gs
jb     805eb58 <_IO_stdin_used+0xdd4>
jne    805eb5e <_IO_stdin_used+0xdda>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jo     805eb57 <_IO_stdin_used+0xdd3>
jb     805eb55 <_IO_stdin_used+0xdd1>
je     805eb5b <_IO_stdin_used+0xdd7>
and    %dh,0x65(%edx)
arpl   %si,0x72(%ebp)
jae    805eb67 <_IO_stdin_used+0xde3>
jbe    805eb65 <_IO_stdin_used+0xde1>
insb   (%dx),%es:(%edi)
jns    805eb23 <_IO_stdin_used+0xd9f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73282073
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x2973
add    %dh,0x73(%ebp)
and    %ch,%gs:0x2d6f6e2d
jo     805eb95 <_IO_stdin_used+0xe11>
gs
jae    805eb8b <_IO_stdin_used+0xe07>
jb     805eb9e <_IO_stdin_used+0xe1a>
gs
sub    $0x746f6f72,%eax
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jbe    805eb9a <_IO_stdin_used+0xe16>
jb     805eba9 <_IO_stdin_used+0xe25>
imul   $0x73696874,0x20(%ebp,%eiz,2),%esp
and    %ah,0x61(%esi)
imul   $0x6566,0x61(%ebx,%esi,2),%ebp
add    %al,(%eax)
jae    805ebb9 <_IO_stdin_used+0xe35>
imul   $0x20676e69,0x70(%eax),%esi
and    $0x73202c73,%eax
imul   $0x74692065,0x63(%esi),%ebp
daa
jae    805eb84 <_IO_stdin_used+0xe00>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     805eb93 <_IO_stdin_used+0xe0f>
fs
gs
jbe    805ebe0 <_IO_stdin_used+0xe5c>
arpl   %sp,0x0(%ebp)
add    %al,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %ebx
imul   $0x72616c75,0x63(%edx),%esi
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805ebb8 <_IO_stdin_used+0xe34>
jae    805ec0e <_IO_stdin_used+0xe8a>
jb     805ec11 <_IO_stdin_used+0xe8d>
arpl   %si,0x72(%ebp,%esi,2)
gs or  %cs:%gs:0x69(%eax,%ebp,2),%dl
jae    805ebc8 <_IO_stdin_used+0xe44>
popa
insb   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    805ec22 <_IO_stdin_used+0xe9e>
and    %ah,0x65(%ebx)
jb     805ec27 <_IO_stdin_used+0xea3>
popa
imul   $0x656d2079,0x6c(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
jae    805ebdf <_IO_stdin_used+0xe5b>
je     805ec29 <_IO_stdin_used+0xea5>
popa
je     805ebe4 <_IO_stdin_used+0xe60>
jns    805ec35 <_IO_stdin_used+0xeb1>
jne    805ebe8 <_IO_stdin_used+0xe64>
push   $0x20657661
popa
and    %ah,0x6f(%ebx)
jb     805ec45 <_IO_stdin_used+0xec1>
jne    805ec45 <_IO_stdin_used+0xec1>
je     805ec3c <_IO_stdin_used+0xeb8>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805ec56 <_IO_stdin_used+0xed2>
gs
insl   (%dx),%es:(%edi)
or     %cs:0x4f(%esi),%cl
push   %esp
dec    %ecx
inc    %esi
pop    %ecx
and    %bl,0x4f(%ecx)
push   %ebp
push   %edx
and    %dl,0x59(%ebx)
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
and    %cl,0x41(%ebp)
dec    %esi
inc    %ecx
inc    %edi
inc    %ebp
push   %edx
or     %cs:0x65(%eax,%ebp,2),%dl
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805ec76 <_IO_stdin_used+0xef2>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%si)
jb     805ec79 <_IO_stdin_used+0xef5>
arpl   %si,0x72(%edi,%ebp,2)
jns    805ec3a <_IO_stdin_used+0xeb6>
imul   $0x74726170,0x20(%ebx),%esi
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x79(%ebx)
arpl   %bp,0x3a(%ebp,%eiz,2)
or     (%eax),%ah
and    %ah,0xa73
add    %dh,0x6e(%ebp)
gs
js     805ecad <_IO_stdin_used+0xf29>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x61(%esi)
imul   $0x66203a65,0x72(%ebp,%esi,2),%ebp
je     805ecc2 <_IO_stdin_used+0xf3e>
pop    %edi
imul   $0x64253d6f,0x66(%esi),%ebp
cmp    (%eax),%ah
and    $0x6c700a73,%eax
gs
popa
jae    805ecc7 <_IO_stdin_used+0xf43>
and    %dh,0x65(%edx)
jo     805ecd6 <_IO_stdin_used+0xf52>
jb     805ecdd <_IO_stdin_used+0xf59>
and    %dh,0x20(%edi,%ebp,2)
and    $0x28280073,%eax
jae    805ec9d <_IO_stdin_used+0xf19>
and    %bh,0x4d52203d
pop    %edi
dec    %edi
dec    %ebx
and    %bh,0x20(%esp,%edi,2)
sub    %dh,0x29(%ebx)
and    %bh,0x4d52203d
pop    %edi
push   %ebp
push   %ebx
inc    %ebp
push   %edx
pop    %edi
inc    %esp
inc    %ebp
inc    %ebx
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
inc    %esp
and    %bh,0x20(%esp,%edi,2)
sub    %dh,0x29(%ebx)
and    %bh,0x4d52203d
pop    %edi
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
sub    %eax,(%eax)
add    %al,(%eax)
add    %ah,0x80804b9(%eax)
mov    $0xb8c80804,%ecx
add    $0x8,%al
push   %eax
mov    $0xb8500804,%eax
add    $0x8,%al
mov    0x500804b9,%al
mov    $0xb7780804,%eax
add    $0x8,%al
push   %eax
mov    $0xb9a00804,%eax
add    $0x8,%al
push   %eax
mov    $0xb8500804,%eax
add    $0x8,%al
push   %eax
mov    $0xb8500804,%eax
add    $0x8,%al
jb     805ed57 <_IO_stdin_used+0xfd3>
add    %ah,0x72(%ebp)
jb     805ed5e <_IO_stdin_used+0xfda>
jb     805ed11 <_IO_stdin_used+0xf8d>
jb     805ed58 <_IO_stdin_used+0xfd4>
popa
imul   $0x732520,%fs:0x67(%esi),%ebp
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ed23 <_IO_stdin_used+0xf9f>
insb   (%dx),%es:(%edi)
jae    805ed6b <_IO_stdin_used+0xfe7>
imul   $0x25,%gs:(%eax),%esp
jae    805ed0c <_IO_stdin_used+0xf88>
gs
jb     805ed81 <_IO_stdin_used+0xffd>
outsl  %ds:(%esi),(%dx)
jb     805ed32 <_IO_stdin_used+0xfae>
ja     805ed86 <_IO_stdin_used+0x1002>
imul   $0x73252067,0x6e(%ecx,%ebp,2),%esi
add    %ah,0x3e2d2073
and    %ah,0x28200073
bound  %esp,0x63(%ecx)
imul   $0x3a,0x70(%ebp),%esi
and    %ah,0x25002973
jae    805ed71 <_IO_stdin_used+0xfed>
and    %ch,0x76(%edi)
gs
jb     805edb4 <_IO_stdin_used+0x1030>
jb     805eda8 <_IO_stdin_used+0x1024>
je     805eda6 <_IO_stdin_used+0x1022>
and    %ah,0x203f73
arpl   %bp,0x61(%ebp,%eiz,2)
jb     805edb6 <_IO_stdin_used+0x1032>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bx,%si)
jb     805edc1 <_IO_stdin_used+0x103d>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     805ed80 <_IO_stdin_used+0xffc>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ed8a <_IO_stdin_used+0x1006>
jae    805ede0 <_IO_stdin_used+0x105c>
popa
je     805ed8f <_IO_stdin_used+0x100b>
and    $0x6d6f0073,%eax
imul   $0x6420676e,0x69(%esp,%esi,2),%esi
imul   $0x726f7463,0x65(%edx),%esi
jns    805eda5 <_IO_stdin_used+0x1021>
and    $0x73250073,%eax
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x72612073
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805edcb <_IO_stdin_used+0x1047>
bound  %esp,0x63(%ecx)
imul   $0x20,0x70(%ebp),%esi
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805eddc <_IO_stdin_used+0x1058>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805ee25 <_IO_stdin_used+0x10a1>
and    %ah,0x6f742073
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805edf1 <_IO_stdin_used+0x106d>
arpl   %si,0x65(%edx)
popa
je     805ee3c <_IO_stdin_used+0x10b8>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805ee02 <_IO_stdin_used+0x107e>
and    $0x65730073,%eax
je     805ee5d <_IO_stdin_used+0x10d9>
imul   $0x72657020,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     805ee1d <_IO_stdin_used+0x1099>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ee27 <_IO_stdin_used+0x10a3>
popa
arpl   %sp,0x65(%ebx)
jae    805ee80 <_IO_stdin_used+0x10fc>
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ee38 <_IO_stdin_used+0x10b4>
outsl  %ds:(%esi),(%dx)
jo     805ee80 <_IO_stdin_used+0x10fc>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f662073
jb     805ee44 <_IO_stdin_used+0x10c0>
jb     805ee8b <_IO_stdin_used+0x1107>
popa
imul   $0x6e616300,%fs:0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ee53 <_IO_stdin_used+0x10cf>
data16
jae    805eeaa <_IO_stdin_used+0x1126>
popa
je     805ee59 <_IO_stdin_used+0x10d5>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ee63 <_IO_stdin_used+0x10df>
arpl   %si,0x65(%edx)
popa
je     805eeae <_IO_stdin_used+0x112a>
and    %dh,0x65(%edx)
addr16 jne 805eebb <_IO_stdin_used+0x1137>
popa
jb     805ee72 <_IO_stdin_used+0x10ee>
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x6e(%edi,%ebp,2)
and    %ah,%gs:0x72662073
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x73250073
cmp    (%eax),%ah
ja     805eeed <_IO_stdin_used+0x1169>
imul   $0x6c696166,0x20(%ebp,%eiz,2),%esi
gs add %ah,%fs:%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
gs
js     805ef07 <_IO_stdin_used+0x1183>
outsb  %gs:(%esi),(%dx)
and    %ah,%fs:0x72700073
gs
jae    805ef04 <_IO_stdin_used+0x1180>
jb     805ef17 <_IO_stdin_used+0x1193>
imul   $0x6d697420,0x67(%esi),%ebp
gs
jae    805eecb <_IO_stdin_used+0x1147>
outsw  %ds:(%esi),(%dx)
jb     805eecf <_IO_stdin_used+0x114b>
and    $0x72700073,%eax
gs
jae    805ef1c <_IO_stdin_used+0x1198>
jb     805ef2f <_IO_stdin_used+0x11ab>
imul   $0x72657020,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     805eeed <_IO_stdin_used+0x1169>
and    $0x61660073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ef0a <_IO_stdin_used+0x1186>
arpl   %si,0x65(%edx)
popa
je     805ef55 <_IO_stdin_used+0x11d1>
and    %ah,0x69(%esi)
outsw  %ds:(%esi),(%dx)
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ef20 <_IO_stdin_used+0x119c>
arpl   %si,0x65(%edx)
popa
je     805ef6b <_IO_stdin_used+0x11e7>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ef3e <_IO_stdin_used+0x11ba>
jb     805ef85 <_IO_stdin_used+0x1201>
popa
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x73250073
and    %ch,0x61(%eax)
jae    805ef5b <_IO_stdin_used+0x11d7>
jne    805efab <_IO_stdin_used+0x1227>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
add    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805ef74 <_IO_stdin_used+0x11f0>
jne    805efc4 <_IO_stdin_used+0x1240>
sub    $0x6b636162,%eax
jne    805efcd <_IO_stdin_used+0x1249>
and    %ah,0x73250073
and    %ch,0x7325203e
and    %ch,(%eax)
jne    805efdb <_IO_stdin_used+0x1257>
bound  %esp,0x63(%ecx)
imul   $0x29,0x70(%ebp),%esi
or     (%eax),%al
jae    805efea <_IO_stdin_used+0x1266>
arpl   %bp,(%edi)
arpl   %bp,0x70(%edi)
jns    805efad <_IO_stdin_used+0x1229>
arpl   %ax,(%eax)
arpl   %bp,0x20(%edi)
and    %edi,0x76282820
outsl  %ds:(%esi),(%dx)
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805efbb <_IO_stdin_used+0x1237>
arpl   %si,0x65(%edx)
popa
je     805f006 <_IO_stdin_used+0x1282>
and    %ch,0x61(%eax)
jb     805f00a <_IO_stdin_used+0x1286>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    805efcf <_IO_stdin_used+0x124b>
je     805f020 <_IO_stdin_used+0x129c>
and    %ah,0x73
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     805f029 <_IO_stdin_used+0x12a5>
jae    805f03a <_IO_stdin_used+0x12b6>
outsl  %ds:(%esi),(%dx)
jb     805f02e <_IO_stdin_used+0x12aa>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    805f040 <_IO_stdin_used+0x12bc>
je     805eff6 <_IO_stdin_used+0x1272>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     805f04a <_IO_stdin_used+0x12c6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805f04e <_IO_stdin_used+0x12ca>
js     805f05f <_IO_stdin_used+0x12db>
add    %ah,0x74203a73
jb     805f06c <_IO_stdin_used+0x12e8>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jbe    805f05f <_IO_stdin_used+0x12db>
jb     805f073 <_IO_stdin_used+0x12ef>
jb     805f067 <_IO_stdin_used+0x12e3>
je     805f065 <_IO_stdin_used+0x12e1>
and    %ah,0x6f202c73
jbe    805f06d <_IO_stdin_used+0x12e9>
jb     805f07c <_IO_stdin_used+0x12f8>
imul   $0x6f6d2067,0x6e(%ecx,%ebp,2),%esp
fs and %ah,%fs:%gs:0x6f6c3430
and    %ch,(%eax)
and    $0x203f2973,%eax
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     805f0a2 <_IO_stdin_used+0x131e>
gs
jae    805f098 <_IO_stdin_used+0x1314>
jb     805f0ab <_IO_stdin_used+0x1327>
and    %ch,%gs:0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     805f0b0 <_IO_stdin_used+0x132c>
push   $0x66207069
outsl  %ds:(%esi),(%dx)
jb     805f065 <_IO_stdin_used+0x12e1>
and    $0x61770073,%eax
jb     805f0ba <_IO_stdin_used+0x1336>
imul   $0x6f73203a,0x67(%esi),%ebp
jne    805f0c7 <_IO_stdin_used+0x1343>
arpl   %sp,0x20(%ebp)
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x726f6d20,0x64(%ebp),%esp
and    %dh,%gs:0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
arpl   %sp,0x0(%ebp)
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f0a3 <_IO_stdin_used+0x131f>
outsl  %ds:(%esi),(%dx)
jbe    805f0eb <_IO_stdin_used+0x1367>
jb     805f0ff <_IO_stdin_used+0x137b>
jb     805f0f3 <_IO_stdin_used+0x136f>
je     805f0f1 <_IO_stdin_used+0x136d>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    805f0bb <_IO_stdin_used+0x1337>
and    $0x69772073,%eax
je     805f10a <_IO_stdin_used+0x1386>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f0cd <_IO_stdin_used+0x1349>
and    $0x69770073,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     805f0d9 <_IO_stdin_used+0x1355>
outsl  %ds:(%esi),(%dx)
jbe    805f121 <_IO_stdin_used+0x139d>
jb     805f135 <_IO_stdin_used+0x13b1>
jb     805f129 <_IO_stdin_used+0x13a5>
je     805f127 <_IO_stdin_used+0x13a3>
and    %ch,0x75(%edx)
jae    805f13b <_IO_stdin_used+0x13b7>
sub    $0x61657263,%eax
je     805f133 <_IO_stdin_used+0x13af>
and    %ah,%fs:0x69772073
je     805f13f <_IO_stdin_used+0x13bb>
and    %ah,0x63000073
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f103 <_IO_stdin_used+0x137f>
outsl  %ds:(%esi),(%dx)
jbe    805f14b <_IO_stdin_used+0x13c7>
jb     805f15f <_IO_stdin_used+0x13db>
jb     805f153 <_IO_stdin_used+0x13cf>
je     805f151 <_IO_stdin_used+0x13cd>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f117 <_IO_stdin_used+0x1393>
and    $0x69772073,%eax
je     805f166 <_IO_stdin_used+0x13e2>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    805f10d <_IO_stdin_used+0x1389>
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f137 <_IO_stdin_used+0x13b3>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805f180 <_IO_stdin_used+0x13fc>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f146 <_IO_stdin_used+0x13c2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     805f199 <_IO_stdin_used+0x1415>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    805f173 <_IO_stdin_used+0x13ef>
and    %ah,0x3e2d2073
and    %ah,0x62000073
popa
arpl   %bp,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%di)
and    %ah,0x6f772073
jne    805f1c2 <_IO_stdin_used+0x143e>
and    %ah,%fs:0x73(%ebp,%eiz,2)
je     805f1cf <_IO_stdin_used+0x144b>
outsl  %ds:(%esi),(%dx)
jns    805f180 <_IO_stdin_used+0x13fc>
jae    805f1d1 <_IO_stdin_used+0x144d>
jne    805f1d6 <_IO_stdin_used+0x1452>
arpl   %sp,0x3b(%ebp)
and    %ah,(%eax)
and    $0x6f6e2073,%eax
je     805f190 <_IO_stdin_used+0x140c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805f1d9 <_IO_stdin_used+0x1455>
add    %al,%fs:(%eax)
add    %ah,0x61(%edx)
arpl   %bp,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%di)
and    %ah,0x6f772073
jne    805f1f6 <_IO_stdin_used+0x1472>
and    %ah,%fs:0x73(%ebp,%eiz,2)
je     805f203 <_IO_stdin_used+0x147f>
outsl  %ds:(%esi),(%dx)
jns    805f1b4 <_IO_stdin_used+0x1430>
jae    805f205 <_IO_stdin_used+0x1481>
jne    805f20a <_IO_stdin_used+0x1486>
arpl   %sp,0x3b(%ebp)
and    %ah,(%eax)
and    $0x6f6e2073,%eax
je     805f1c4 <_IO_stdin_used+0x1440>
arpl   %bp,0x70(%edi)
imul   $0x69770000,0x64(%ebp),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     805f1d5 <_IO_stdin_used+0x1451>
arpl   %bp,0x70(%edi)
jns    805f1da <_IO_stdin_used+0x1456>
and    $0x68742073,%eax
jb     805f230 <_IO_stdin_used+0x14ac>
jne    805f22a <_IO_stdin_used+0x14a6>
push   $0x73756a20
je     805f1f7 <_IO_stdin_used+0x1473>
arpl   %si,0x65(%edx)
popa
je     805f235 <_IO_stdin_used+0x14b1>
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x732520,0x6b(%esi),%ebp
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f207 <_IO_stdin_used+0x1483>
arpl   %bp,0x70(%edi)
jns    805f20c <_IO_stdin_used+0x1488>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f224 <_IO_stdin_used+0x14a0>
and    %ah,0x69202c73
outsb  %ds:(%esi),(%dx)
je     805f270 <_IO_stdin_used+0x14ec>
and    %ch,0x74(%ecx)
jae    805f26b <_IO_stdin_used+0x14e7>
insb   (%dx),%es:(%edi)
data16
sub    $0x20,%al
and    $0x73,%eax
add    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     805f239 <_IO_stdin_used+0x14b5>
arpl   %si,0x65(%edx)
popa
je     805f284 <_IO_stdin_used+0x1500>
and    %ch,0x61(%eax)
jb     805f288 <_IO_stdin_used+0x1504>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    805f24d <_IO_stdin_used+0x14c9>
je     805f29e <_IO_stdin_used+0x151a>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f25a <_IO_stdin_used+0x14d6>
and    $0x73,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f267 <_IO_stdin_used+0x14e3>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805f2b0 <_IO_stdin_used+0x152c>
and    %ah,0x6f742073
and    %ah,0x20(%ecx)
jae    805f2cb <_IO_stdin_used+0x1547>
bound  %esp,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805f281 <_IO_stdin_used+0x14fd>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x74(%ecx)
jae    805f2cd <_IO_stdin_used+0x1549>
insb   (%dx),%es:(%edi)
data16
sub    $0x20,%al
and    $0x69000073,%eax
outsb  %ds:(%esi),(%dx)
je     805f2d9 <_IO_stdin_used+0x1555>
jb     805f2a3 <_IO_stdin_used+0x151f>
fs
gs
jbe    805f2e3 <_IO_stdin_used+0x155f>
arpl   %sp,0x20(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805f2e6 <_IO_stdin_used+0x1562>
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
and    %dh,0x20(%edi,%ebp,2)
and    $0x75203b73,%eax
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     805f30c <_IO_stdin_used+0x1588>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805f309 <_IO_stdin_used+0x1585>
and    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     805f2ac <_IO_stdin_used+0x1528>
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    805f31d <_IO_stdin_used+0x1599>
je     805f2da <_IO_stdin_used+0x1556>
fs
gs
popaw
jne    805f32c <_IO_stdin_used+0x15a8>
je     805f2e2 <_IO_stdin_used+0x155e>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     805f336 <_IO_stdin_used+0x15b2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805f33a <_IO_stdin_used+0x15b6>
js     805f34b <_IO_stdin_used+0x15c7>
and    %dh,0x20(%edi,%ebp,2)
and    $0x73,%eax
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     805f30e <_IO_stdin_used+0x158a>
jae    805f355 <_IO_stdin_used+0x15d1>
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     805f372 <_IO_stdin_used+0x15ee>
and    %ch,0x66(%edi)
and    %ah,0x73
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f32f <_IO_stdin_used+0x15ab>
arpl   %si,0x65(%edx)
popa
je     805f37a <_IO_stdin_used+0x15f6>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x6f742073
and    %ah,0x73
add    %dh,0x6b(%ebx)
imul   $0x20676e69,0x70(%eax),%esi
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
sub    $0x20,%al
popa
jae    805f365 <_IO_stdin_used+0x15e1>
imul   $0x72207361,0x77(%eax,%eiz,1),%esi
gs
jo     805f3bc <_IO_stdin_used+0x1638>
popa
arpl   %sp,0x64(%ebp)
and    %dh,0x68(%edi)
imul   $0x6e696562,0x20(%ebp,%eiz,2),%ebp
and    %ah,0x6f(%bp,%di)
jo     805f3ce <_IO_stdin_used+0x164a>
gs add %ah,%fs:%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     805f396 <_IO_stdin_used+0x1612>
imul   $0x7973,0x20(%ebp,%eiz,2),%bp
jae    805f3f3 <_IO_stdin_used+0x166f>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x72(%ebx)
gs
popa
je     805f3ed <_IO_stdin_used+0x1669>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805f3f3 <_IO_stdin_used+0x166f>
js     805f404 <_IO_stdin_used+0x1680>
add    %al,(%eax)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    805f405 <_IO_stdin_used+0x1681>
je     805f3c2 <_IO_stdin_used+0x163e>
je     805f40c <_IO_stdin_used+0x1688>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     805f42a <_IO_stdin_used+0x16a6>
and    %ch,0x66(%edi)
and    %ah,0x6f742073
and    %ah,0x6e000073
outsl  %ds:(%esi),(%dx)
je     805f3e8 <_IO_stdin_used+0x1664>
ja     805f43c <_IO_stdin_used+0x16b8>
imul   $0x68742067,0x6e(%ecx,%ebp,2),%esi
jb     805f443 <_IO_stdin_used+0x16bf>
jne    805f43d <_IO_stdin_used+0x16b9>
push   $0x6e616420
insb   (%dx),%es:(%di)
imul   $0x6d797320,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x732520,0x6b(%esi),%ebp
and    $0x66203a73,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     805f41e <_IO_stdin_used+0x169a>
gs
js     805f475 <_IO_stdin_used+0x16f1>
outsb  %gs:(%esi),(%dx)
je     805f478 <_IO_stdin_used+0x16f4>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f433 <_IO_stdin_used+0x16af>
arpl   %si,0x65(%edx)
popa
je     805f47e <_IO_stdin_used+0x16fa>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x63000073
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f453 <_IO_stdin_used+0x16cf>
arpl   %bp,0x70(%edi)
jns    805f458 <_IO_stdin_used+0x16d4>
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x626d7973,0x20(%ebx),%esp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x73250073
cmp    (%eax),%ah
arpl   %sp,0x6e(%ecx)
and    %ch,0x61(%ebp)
imul   $0x72,0x20(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
popa
je     805f4cc <_IO_stdin_used+0x1748>
jbe    805f4ca <_IO_stdin_used+0x1746>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    805f495 <_IO_stdin_used+0x1711>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    805f49a <_IO_stdin_used+0x1716>
imul   $0x72727563,0x20(%esi),%ebp
outsb  %gs:(%esi),(%dx)
je     805f4a5 <_IO_stdin_used+0x1721>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805f48f <_IO_stdin_used+0x170b>
add    %ch,(%eax)
sub    %dh,0x6e(%ebp)
jae    805f4ff <_IO_stdin_used+0x177b>
outsb  %ds:(%si),(%dx)
gs and %ch,%fs:%gs:0x6e(%ecx)
je     805f4c8 <_IO_stdin_used+0x1744>
and    %ch,(%eax)
arpl   %bp,0x2d(%edi)
bound  %esp,%ds:0x63(%ecx)
imul   $0x5f,0x70(%ebp),%esi
je     805f527 <_IO_stdin_used+0x17a3>
jo     805f515 <_IO_stdin_used+0x1791>
sub    %esp,(%eax)
cmp    $0x3d,%al
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs
fs
pop    %edi
bound  %esp,0x63(%ecx)
imul   $0x73,0x70(%ebp),%esi
sub    %eax,(%eax)
add    %ch,(%eax)
sub    %ah,0x6f(%ebx)
sub    $0x6170733e,%eax
jb     805f546 <_IO_stdin_used+0x17c2>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %esp,%fs:%gs:(%eax)
cmp    $0x5053203d,%eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
dec    %esi
inc    %ebp
push   %esi
inc    %ebp
push   %edx
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6170733e,%eax
jb     805f56b <_IO_stdin_used+0x17e7>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %esp,%fs:%gs:(%eax)
cmp    $0x5053203d,%eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %ecx
push   %ebp
push   %esp
dec    %edi
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6170733e,%eax
jb     805f58f <_IO_stdin_used+0x180b>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs sub %esp,%fs:%gs:(%eax)
cmp    $0x5053203d,%eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %ecx
dec    %esp
push   %edi
inc    %ecx
pop    %ecx
push   %ebx
sub    %eax,(%eax)
add    %al,(%eax)
sub    %ch,(%eax)
arpl   %bp,0x2d(%edi)
jb,pt  805f5a5 <_IO_stdin_used+0x1821>
data16
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
sub    %esp,%gs:(%eax)
cmp    $0x4552203d,%eax
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
dec    %esi
inc    %ebp
push   %esi
inc    %ebp
push   %edx
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6665723e,%eax
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
sub    %esp,%gs:(%eax)
cmp    $0x4552203d,%eax
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
inc    %ecx
push   %ebp
push   %esp
dec    %edi
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x6f(%ebx)
sub    $0x6665723e,%eax
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
sub    %esp,%gs:(%eax)
cmp    $0x4552203d,%eax
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
inc    %ecx
dec    %esp
push   %edi
inc    %ecx
pop    %ecx
push   %ebx
sub    %eax,(%eax)
and    %ebp,(%eax)
arpl   %bp,0x2d(%edi)
ds
push   $0x5f647261
insb   (%dx),%es:(%edi)
imul   $0x20262620,0x6b(%esi),%ebp
arpl   %bp,0x2d(%edi)
jae,pt 805f63e <_IO_stdin_used+0x18ba>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x5f(%ebx),%esp
sub    %eax,(%eax)
add    %al,(%eax)
and    %esp,(%eax)
sub    %ah,0x6f(%ebx)
sub    $0x6665723e,%eax
insb   (%dx),%es:(%edi)
imul   $0x646f6d5f,0x6b(%esi),%ebp
and    %bh,%gs:0x4552203d
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
inc    %ecx
dec    %esp
push   %edi
inc    %ecx
pop    %ecx
push   %ebx
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
sub    $0x6170733e,%eax
jb     805f679 <_IO_stdin_used+0x18f5>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:(%ecx)
cmp    $0x41505320,%eax
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %ecx
push   %ebp
push   %esp
dec    %edi
sub    %eax,(%eax)
jbe    805f680 <_IO_stdin_used+0x18fc>
insb   (%dx),%es:(%edi)
imul   $0x6f697470,0x6f(%edi,%ebx,2),%esp
outsb  %ds:(%esi),(%dx)
jae    805f62b <_IO_stdin_used+0x18a7>
jae    805f69f <_IO_stdin_used+0x191b>
arpl   %bp,(%edi)
gs
js     805f6a6 <_IO_stdin_used+0x1922>
outsb  %gs:(%esi),(%dx)
je     805f663 <_IO_stdin_used+0x18df>
jae    805f69b <_IO_stdin_used+0x1917>
popa
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
add    %dh,0x63(%ebx)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x5f69653e,%eax
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     805f66f <_IO_stdin_used+0x18eb>
cmp    $0x3d,%al
and    %ch,(%eax)
xor    $0x32,%al
cmp    %esi,(%ecx,%edi,1)
ss
aaa
xor    (%ecx),%bh
xor    $0x2d202955,%eax
and    %ah,0x69(%esi)
gs
insl   (%dx),%es:(%edi)
popa
jo     805f696 <_IO_stdin_used+0x1912>
ds
insw   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     805f6e1 <_IO_stdin_used+0x195d>
gs
fs
pop    %edi
gs
js     805f6eb <_IO_stdin_used+0x1967>
outsb  %gs:(%esi),(%dx)
je     805f6ee <_IO_stdin_used+0x196a>
add    %ah,0x6d(%esi)
pop    %edi
gs
js     805f6f6 <_IO_stdin_used+0x1972>
outsb  %gs:(%esi),(%dx)
je     805f6f9 <_IO_stdin_used+0x1975>
pop    %ebx
imul   $0x6c5f6566,0x2e(%ebp),%ebx
outsl  %ds:(%esi),(%dx)
imul   $0x3d3c206c,0x61(%bp,%di),%esp
and    %ch,(%eax)
sub    %ch,0x66(%edi)
pop    %di
je     805f6c9 <_IO_stdin_used+0x1945>
and    %ch,(%eax)
and    %esp,(%eax)
sub    %ah,(%ecx)
and    %ch,(%eax)
sub    %ch,0x66(%edi)
pop    %di
je     805f6d8 <_IO_stdin_used+0x1954>
and    %dh,(%eax)
and    %bh,(%eax,%eiz,1)
sub    %ch,0x66(%edi)
pop    %di
je     805f6e4 <_IO_stdin_used+0x1960>
and    %ch,0x20292931
aas
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     805f6f3 <_IO_stdin_used+0x196f>
and    %ch,0x203a2031
sub    %ch,(%eax)
sub    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     805f703 <_IO_stdin_used+0x197f>
and    %dh,(%ecx)
and    %bh,(%esp,%edi,1)
and    %ch,(%eax)
jae    805f74c <_IO_stdin_used+0x19c8>
jp     805f74a <_IO_stdin_used+0x19c6>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data32 pop %di
je     805f718 <_IO_stdin_used+0x1994>
and    %ch,(%edx)
and    %bh,(%eax)
and    %ch,0x29293220
and    %ch,0x20293120
sub    (%eax),%ah
xor    (%eax),%ah
sub    (%eax),%esp
xor    %ebp,(%ecx)
sub    %ebp,(%ecx)
and    %ch,0x5f6d6620
gs
js     805f786 <_IO_stdin_used+0x1a02>
outsb  %gs:(%esi),(%dx)
je     805f789 <_IO_stdin_used+0x1a05>
pop    %ebx
imul   $0x6c5f6566,0x2e(%ebp),%ebx
outsb  %gs:(%esi),(%dx)
addr16 je 805f78b <_IO_stdin_used+0x1a07>
add    %ah,0x78(%ebp)
je     805f78d <_IO_stdin_used+0x1a09>
outsb  %ds:(%esi),(%dx)
je     805f78a <_IO_stdin_used+0x1a06>
jae    805f790 <_IO_stdin_used+0x1a0c>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     805f797 <_IO_stdin_used+0x1a13>
popa
add    %bh,%fs:(%eax)
xor    %cs:(%ecx),%dh
add    %ah,(%esi,%edx,2)
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x66(%edi)
data16
add    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     805f7c5 <_IO_stdin_used+0x1a41>
add    %ch,%gs:0x65(%esi)
jbe    805f7c4 <_IO_stdin_used+0x1a40>
jb     805f761 <_IO_stdin_used+0x19dd>
gs
js     805f7cd <_IO_stdin_used+0x1a49>
jae    805f7da <_IO_stdin_used+0x1a56>
imul   $0x6c696e00,0x67(%esi),%ebp
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs add %bh,%fs:%gs:0x0(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,-0x9(%ebx)
add    $0x5f75008,%eax
or     %dl,0x5(%edi,%esi,8)
or     %bl,-0x9(%ebx)
add    $0x5f76108,%eax
or     %ch,-0x9(%edx)
add    $0x5f76e08,%eax
or     %cl,0x5(%eax,%edi,8)
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x72(%ebp)
jb     805f837 <_IO_stdin_used+0x1ab3>
jb     805f7ea <_IO_stdin_used+0x1a66>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6c696620,0x67(%esi),%ebp
add    %ah,%gs:0x25203a73
jae    805f7de <_IO_stdin_used+0x1a5a>
ja     805f852 <_IO_stdin_used+0x1ace>
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     805f7ea <_IO_stdin_used+0x1a66>
jb     805f851 <_IO_stdin_used+0x1acd>
addr16 jne 805f85b <_IO_stdin_used+0x1ad7>
popa
jb     805f812 <_IO_stdin_used+0x1a8e>
gs
insl   (%dx),%es:(%edi)
jo     805f86a <_IO_stdin_used+0x1ae6>
jns    805f818 <_IO_stdin_used+0x1a94>
imul   $0x6572,0x0(%ebp,%eiz,2),%bp
addr16 jne 805f86e <_IO_stdin_used+0x1aea>
popa
jb     805f825 <_IO_stdin_used+0x1aa1>
imul   $0x6c62,0x0(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
jae    805f882 <_IO_stdin_used+0x1afe>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x68(%ebx)
popa
jb     805f883 <_IO_stdin_used+0x1aff>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsw  %ds:(%esi),(%dx)
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
add    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805f84e <_IO_stdin_used+0x1aca>
ja     805f8b5 <_IO_stdin_used+0x1b31>
imul   $0x6c696620,0x64(%edx),%esi
add    %ah,%gs:(%ebx)
and    %ah,0x6e(%ebp)
je     805f8d1 <_IO_stdin_used+0x1b4d>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     805f8ad <_IO_stdin_used+0x1b29>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 805f902 <_IO_stdin_used+0x1b7e>
cmp    (%eax),%ah
and    $0xa756c,%eax
add    %al,(%eax)
add    %ah,(%ebx)
and    %ah,0x75(%edx)
arpl   %bp,0x65(%ebx)
je     805f920 <_IO_stdin_used+0x1b9c>
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
enter  $0x42,$0x0
orb    $0x20,0x41(%edi)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 805f957 <_IO_stdin_used+0x1bd3>
xor    %bl,0x20(%ebp)
ja     805f962 <_IO_stdin_used+0x1bde>
jae    805f923 <_IO_stdin_used+0x1b9f>
jo     805f966 <_IO_stdin_used+0x1be2>
jae    805f97a <_IO_stdin_used+0x1bf6>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    805f977 <_IO_stdin_used+0x1bf3>
push   $0x206e6120
gs
js     805f97d <_IO_stdin_used+0x1bf9>
arpl   %sp,(%eax)
jae    805f995 <_IO_stdin_used+0x1c11>
jae    805f992 <_IO_stdin_used+0x1c0e>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2200af(%ecx)
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     805f9b0 <_IO_stdin_used+0x1c2c>
jb     805f9ae <_IO_stdin_used+0x1c2a>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    805f9d4 <_IO_stdin_used+0x1c50>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    805f9ca <_IO_stdin_used+0x1c46>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %bh,0x5420808(,%eax,1)
or     %bh,(%eax)
inc    %edx
add    $0x540f808,%eax
or     %bh,(%eax)
inc    %ecx
add    $0x5416808,%eax
or     %dl,-0x6ff7fabf(%eax)
inc    %ecx
add    $0x5419008,%eax
or     %dh,(%eax)
aas
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x53fa808,%eax
or     %cl,(%eax)
aas
add    $0x53f2808,%eax
or     %ah,(%eax)
aas
add    $0x53f1808,%eax
or     %dl,(%eax)
aas
add    $0x53ee008,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %ch,(%eax)
inc    %eax
add    $0x5402808,%eax
or     %bl,0x3e(%ecx)
add    $0x53e5908,%eax
or     %bl,0x3e(%ecx)
add    $0x53e5108,%eax
or     %bl,0x3e(%ecx)
add    $0x53dc808,%eax
or     %bl,0x3e(%ecx)
add    $0x53fd808,%eax
or     %bl,0x3e(%ecx)
add    $0x53e5908,%eax
or     %bl,0x3e(%ecx)
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %bl,0x3e(%ecx)
add    $0x53e5908,%eax
or     %bl,0x3e(%ecx)
add    $0x53e5908,%eax
or     %bl,(%eax)
cmp    $0x40280805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3e590805,%eax
add    $0x53fb808,%eax
or     %cl,%al
cmp    $0x3e590805,%eax
add    $0x53dc808,%eax
or     %bl,0x3e(%ecx)
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3dc80805,%eax
add    $0x53dc808,%eax
or     %cl,%al
cmp    $0x3e300805,%eax
add    $0x53e5908,%eax
or     %dh,(%eax)
ds
add    $0x53e5108,%eax
or     %dl,0x44(%eax)
add    $0x5445008,%eax
or     %ch,%al
inc    %ebx
add    $0x5445008,%eax
or     %ch,%al
inc    %ebx
add    $0x5445008,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x543e808,%eax
or     %ch,%al
inc    %ebx
add    $0x5445008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,-0x7(%edi)
add    $0x5f94f08,%eax
or     %dl,-0x7(%ebp)
add    $0x5ea2308,%eax
or     %ah,-0x7(%edx)
add    $0x5f96a08,%eax
or     %ch,%bh
fldl   0x5f97108
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
das
jne    805fcfe <_IO_stdin_used+0x1f7a>
imul   $0x632e736e,0x65(%ebp),%ebp
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    805fd08 <_IO_stdin_used+0x1f84>
arpl   %ax,%gs:(%eax)
jbe    805fcfe <_IO_stdin_used+0x1f7a>
insb   (%dx),%es:(%edi)
imul   $0x69745f65,0x74(%ecx,%eiz,2),%esp
insl   (%dx),%es:(%edi)
gs
jae    805fd1a <_IO_stdin_used+0x1f96>
arpl   %ax,%gs:(%eax)
add    %al,(%eax)
add    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     805fd28 <_IO_stdin_used+0x1fa4>
and    %ah,0x73(%ecx,%ebp,2)
jo     805fd2b <_IO_stdin_used+0x1fa7>
popa
jns    805fce2 <_IO_stdin_used+0x1f5e>
gs
jb     805fd37 <_IO_stdin_used+0x1fb3>
outsl  %ds:(%esi),(%dx)
jb     805fce8 <_IO_stdin_used+0x1f64>
insl   (%dx),%es:(%edi)
gs
jae    805fd3f <_IO_stdin_used+0x1fbb>
popa
add    %ah,%gs:(%di)
jae    805fcf3 <_IO_stdin_used+0x1f6f>
sub    %ah,0x25202973
jae    805fce5 <_IO_stdin_used+0x1f61>
add    %ah,0x73252073
or     (%eax),%al
sub    %al,0x29(%ebx)
add    %dl,0x72(%edi)
imul   $0x7962206e,0x65(%esp,%esi,2),%esi
and    %ah,0xa2e73
push   %edi
jb     805fd63 <_IO_stdin_used+0x1fdf>
je     805fd70 <_IO_stdin_used+0x1fec>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     805fd7a <_IO_stdin_used+0x1ff6>
je     805fd87 <_IO_stdin_used+0x2003>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805fd4c <_IO_stdin_used+0x1fc8>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     805fd9e <_IO_stdin_used+0x201a>
jb     805fda5 <_IO_stdin_used+0x2021>
and    %ah,0x75(%edx)
addr16 jae 805fd57 <_IO_stdin_used+0x1fd3>
je     805fda8 <_IO_stdin_used+0x2024>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    805fdad <_IO_stdin_used+0x2029>
and    %al,0x50(%edi)
dec    %esp
jbe    805fd81 <_IO_stdin_used+0x1ffd>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     805fdd0 <_IO_stdin_used+0x204c>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     805fd86 <_IO_stdin_used+0x2002>
insb   (%dx),%es:(%edi)
popa
je     805fdcf <_IO_stdin_used+0x204b>
jb     805fd8c <_IO_stdin_used+0x2008>
cmp    $0x68,%al
je     805fde4 <_IO_stdin_used+0x2060>
jo     805fdac <_IO_stdin_used+0x2028>
das
das
outsb  %ds:(%si),(%dx)
jne    805fda6 <_IO_stdin_used+0x2022>
outsl  %ds:(%esi),(%dx)
jb     805fde2 <_IO_stdin_used+0x205e>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 805fdf4 <_IO_stdin_used+0x2070>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    805fdb5 <_IO_stdin_used+0x2031>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     805fe19 <_IO_stdin_used+0x2095>
popa
jb     805fe0a <_IO_stdin_used+0x2086>
cmp    (%eax),%ah
jns    805fe18 <_IO_stdin_used+0x2094>
jne    805fdcb <_IO_stdin_used+0x2047>
popa
jb     805fe13 <_IO_stdin_used+0x208f>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     805fe33 <_IO_stdin_used+0x20af>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     805fe3d <_IO_stdin_used+0x20b9>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     805fe5a <_IO_stdin_used+0x20d6>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     805fe59 <_IO_stdin_used+0x20d5>
outsb  %ds:(%esi),(%dx)
je     805fe17 <_IO_stdin_used+0x2093>
jo     805fe5e <_IO_stdin_used+0x20da>
jb     805fe68 <_IO_stdin_used+0x20e4>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     805fe78 <_IO_stdin_used+0x20f4>
je     805fe85 <_IO_stdin_used+0x2101>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805fe4a <_IO_stdin_used+0x20c6>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805fe98 <_IO_stdin_used+0x2114>
je     805fea5 <_IO_stdin_used+0x2121>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805fe6a <_IO_stdin_used+0x20e6>
and    %ah,0x250a2c73
jae    805fe72 <_IO_stdin_used+0x20ee>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805febc <_IO_stdin_used+0x2138>
je     805fec9 <_IO_stdin_used+0x2145>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805fe8e <_IO_stdin_used+0x210a>
and    %ah,0x250a2c73
jae    805fe96 <_IO_stdin_used+0x2112>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805fee4 <_IO_stdin_used+0x2160>
je     805fef1 <_IO_stdin_used+0x216d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805feb6 <_IO_stdin_used+0x2132>
and    %ah,0x250a2c73
jae    805febe <_IO_stdin_used+0x213a>
and    %ah,0x25202c73
jae    805fec6 <_IO_stdin_used+0x2142>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805ff10 <_IO_stdin_used+0x218c>
je     805ff1d <_IO_stdin_used+0x2199>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805fee2 <_IO_stdin_used+0x215e>
and    %ah,0x250a2c73
jae    805feea <_IO_stdin_used+0x2166>
and    %ah,0x25202c73
jae    805fef2 <_IO_stdin_used+0x216e>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805ff40 <_IO_stdin_used+0x21bc>
je     805ff4d <_IO_stdin_used+0x21c9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805ff12 <_IO_stdin_used+0x218e>
and    %ah,0x250a2c73
jae    805ff1a <_IO_stdin_used+0x2196>
and    %ah,0x25202c73
jae    805ff22 <_IO_stdin_used+0x219e>
and    %ah,0x250a2c73
jae    805ff2a <_IO_stdin_used+0x21a6>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805ff74 <_IO_stdin_used+0x21f0>
je     805ff81 <_IO_stdin_used+0x21fd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805ff46 <_IO_stdin_used+0x21c2>
and    %ah,0x250a2c73
jae    805ff4e <_IO_stdin_used+0x21ca>
and    %ah,0x25202c73
jae    805ff56 <_IO_stdin_used+0x21d2>
and    %ah,0x250a2c73
jae    805ff5e <_IO_stdin_used+0x21da>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
adc    %ah,0x5(%edi)
or     %bl,(%eax)
addr16 add $0x5675808,%eax
or     %ah,-0x7f7fa99(%eax)
addr16 add $0x5685008,%eax
or     %bh,0x30080568(%eax)
imul   $0x5666808,0x565d008,%eax
05
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     805fffd <_IO_stdin_used+0x2279>
jb     805ffef <_IO_stdin_used+0x226b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8060011 <_IO_stdin_used+0x228d>
popa
jb     8060002 <_IO_stdin_used+0x227e>
and    %al,0x6f(%esi)
jne    8060010 <_IO_stdin_used+0x228c>
fs
popa
je     806000f <_IO_stdin_used+0x228b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806002e <_IO_stdin_used+0x22aa>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:0x62(%ecx,%ebp,2)
das
js     806002c <_IO_stdin_used+0x22a8>
je     806003b <_IO_stdin_used+0x22b7>
arpl   %ax,%cs:(%eax)
sub    %ch,(%edx)
pop    %edi
pop    %edi
gs
jb     8060044 <_IO_stdin_used+0x22c0>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x29292820,0x6e(%edi),%ebp
and    %ah,(%ecx)
cmp    $0x323220,%eax
js     8060050 <_IO_stdin_used+0x22cc>
je     806005f <_IO_stdin_used+0x22db>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     8060055 <_IO_stdin_used+0x22d1>
outsb  %ds:(%esi),(%dx)
add    %ch,(%esi)
add    %al,%cs:(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pusha
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
jne    80600a0 <_IO_stdin_used+0x231c>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
gs add %ch,%fs:%gs:0x6e(%ecx)
jbe    806009f <_IO_stdin_used+0x231b>
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     806006b <_IO_stdin_used+0x22e7>
and    $0x6f662073,%eax
jb     8060072 <_IO_stdin_used+0x22ee>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    80600cb <_IO_stdin_used+0x2347>
jne    80600d1 <_IO_stdin_used+0x234d>
and    %ah,0x72(%ecx)
addr16 jne 80600d1 <_IO_stdin_used+0x234d>
outsb  %gs:(%esi),(%dx)
je     8060088 <_IO_stdin_used+0x2304>
and    $0x6f662073,%eax
jb     806008f <_IO_stdin_used+0x230b>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     80600f4 <_IO_stdin_used+0x2370>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x696c0073,%eax
bound  %ebp,(%edi)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
sub    $0x63656863,%eax
imul   $0x63,(%esi),%ebp
add    %dh,0x74(%ebx)
popa
je     8060110 <_IO_stdin_used+0x238c>
sub    $0x67616d3e,%eax
imul   $0x39203d3d,0x20(%ebx),%esp
cmp    %dh,(%edx)
aaa
cmp    %dh,(%esi)
xor    (%eax),%al
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x0(%ebx)
das
jne    8060140 <_IO_stdin_used+0x23bc>
jb     80600fe <_IO_stdin_used+0x237a>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %dh,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     806016c <_IO_stdin_used+0x23e8>
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x75(%ebx)
jb     806017b <_IO_stdin_used+0x23f7>
outsb  %gs:(%esi),(%dx)
je     806012d <_IO_stdin_used+0x23a9>
ja     806017e <_IO_stdin_used+0x23fa>
jb     806017c <_IO_stdin_used+0x23f8>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806011f <_IO_stdin_used+0x239b>
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8060191 <_IO_stdin_used+0x240d>
je     80601a3 <_IO_stdin_used+0x241f>
jb     806019e <_IO_stdin_used+0x241a>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6c616974,0x69(%esi),%ebp
and    %dh,0x6f(%edi)
jb     80601ab <_IO_stdin_used+0x2427>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806014e <_IO_stdin_used+0x23ca>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x69646863,0x2f(%edx),%esp
jb     8060187 <_IO_stdin_used+0x2403>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%bx,%si)
and    %esp,(%eax)
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
popaw
imul   $0x6c203c20,0x30(%eax,%eax,1),%ebp
outsb  %gs:(%esi),(%dx)
add    %dh,(%eax,%esi,1)
cmp    %esi,(%esi)
and    %bh,0x6e656c20(,%edi,1)
add    %ch,(%edx)
imul   $0x27203d21,%fs:0x20(%edx),%esi
das
daa
add    %ah,0x72(%ecx,%ebp,2)
and    %bh,0x72696420(,%edi,1)
pop    %edi
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x6c(%ebx)
popa
jae    806020a <_IO_stdin_used+0x2486>
and    %ch,0x72696420
and    %bh,(%eax,%eiz,1)
xor    $0x30,%al
cmp    %esi,(%esi)
add    %ah,0x64(%ebx)
bound  %ebx,0x66(%edi)
jb     806021c <_IO_stdin_used+0x2498>
add    %ah,%gs:0x68(%ebx)
imul   $0x676e6f6c,%fs:0x5f(%edx),%esi
add    %ch,(%edi)
jo     8060239 <_IO_stdin_used+0x24b5>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8060231 <_IO_stdin_used+0x24ad>
insb   (%dx),%es:(%edi)
data16
das
data16
add    %ch,%fs:(%esi)
cs
das
data16
add    %ch,%fs:(%edi)
jo     806024d <_IO_stdin_used+0x24c9>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8060245 <_IO_stdin_used+0x24c1>
insb   (%dx),%es:(%edi)
data16
das
data16
fs
das
and    $0x73252f64,%eax
add    %cl,-0x41(%eax)
add    $0x5be1808,%eax
or     %cl,(%eax)
mov    $0xbdd80805,%esp
add    $0x5bda808,%eax
or     %cl,-0x77f7fa49(%eax)
mov    $0x5,%bh
or     %cl,-0x77f7fa49(%eax)
mov    $0x5,%bh
or     %dh,%al
mov    $0xb8f00805,%eax
add    $0x5bd2008,%eax
or     %al,-0x42(%eax)
add    $0x5b98008,%eax
or     %al,-0x77f7fa47(%eax)
mov    $0x5,%bh
or     %cl,-0x77f7fa49(%eax)
mov    $0x5,%bh
or     %bh,%al
ret
add    $0x5c41008,%eax
or     %ah,%al
mov    $0xbee00805,%esi
add    $0x5c3d808,%eax
or     %dl,0x7008049c(%eax)
pushf
add    $0x8,%al
pusha
lcall  $0x0,$0x804
sub    %cl,0x55(%esi)
dec    %esp
dec    %esp
sub    %eax,(%eax)
add    %dl,0x280805cf(%eax)
iret
add    $0x5cf2808,%eax
or     %bl,(%eax)
iret
add    $0x5cf1808,%eax
or     %dh,%al
into
add    $0x5cef008,%eax
or     %dh,%al
into
add    $0x5cef008,%eax
or     %cl,(%eax)
iret
add    $0x5cf0808,%eax
or     %bh,(%eax)
iret
add    $0x5cf4808,%eax
or     %dh,%al
into
add    $0x5cef008,%eax
or     %bl,-0x31(%eax)
add    $0x5cf7008,%eax
or     %dh,%al
into
add    $0x5cef008,%eax
or     %dh,%al
into
add    $0x5cef008,%eax
or     %dh,%al
into
add    $0x5cef008,%eax
or     %ch,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
push   %ebp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%esi)
roll   %cl,0x5d7d408
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %ah,-0x2a(%ebx)
add    $0x5d7d408,%eax
or     %dl,-0x2a(%ecx)
add    $0x5d7d408,%eax
or     %ah,-0x2a(%ebx)
add    $0x5d66308,%eax
or     %ah,-0x2a(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %bh,(%edi)
(bad)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d67d08,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %ah,-0x2a(%ebx)
add    $0x5d7d408,%eax
or     %ch,(%eax)
(bad)
add    $0x5d5e008,%eax
or     %ah,-0x2a(%ebx)
add    $0x5d66308,%eax
or     %ah,-0x2a(%ebx)
add    $0x5d7d408,%eax
or     %ah,%al
aad    $0x5
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %cl,-0x2982f7fb(%ebp,%edx,8)
add    $0x5d2a408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d7d408,%eax
or     %dh,-0x2b(%ebp)
add    $0x5d7d408,%eax
or     %bh,-0x2a(%ebp)
add    $0x5d7d408,%eax
or     %dl,%ah
xlat   %ds:(%ebx)
add    $0x5d67d08,%eax
.byte 0x8
add    %ebx,(%ebx)
add    (%ebx),%edi
cmp    %cl,(%eax)
add    %al,(%eax)
push   %es
add    %eax,(%eax)
add    %bl,-0x6b(%eax)
(bad)
call   *0x0(%eax,%ecx,1)
add    %bl,-0xf000163(%eax)
or     %al,(%eax)
add    %cl,0x78fffea6(%eax)
or     %al,(%eax)
add    %bl,%al
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
call   *%eax
or     %al,(%eax)
add    %ch,-0x55(%eax)
(bad)
call   *(%eax)
or     %eax,(%eax)
add    %ch,-0x6b000153(%eax)
or     %eax,(%eax)
add    %cl,-0x52(%eax)
(bad)
inc    %eax
or     %eax,(%eax)
add    %bl,%al
mov    $0xfe,%dl
lcall  *(%eax)
or     (%eax),%al
add    %ch,-0x46(%eax)
(bad)
lcall  *0xa(%eax)
add    %al,(%eax)
js     8060438 <_IO_stdin_used+0x26b4>
(bad)
ljmp   *0x0(%edx,%ecx,1)
add    %cl,-0x7f000146(%eax)
or     (%eax),%al
add    %bl,%al
mov    $0xaacfffe,%edx
add    %al,(%eax)
mov    $0x4fffebb,%eax
or     (%eax),%eax
add    %bh,%al
mov    $0xb5cfffe,%ebp
add    %al,(%eax)
sub    %bh,0xb7cfffe(%esi)
add    %al,(%eax)
or     %bh,0xbb4fffe(%edi)
add    %al,(%eax)
pop    %eax
mov    $0xbd4fffe,%edi
add    %al,(%eax)
mov    %bh,0xbecfffe(%edi)
add    %al,(%eax)
dec    %eax
sar    $0xff,%dh
and    $0xc,%al
add    %al,(%eax)
clc
sar    $0xff,%esi
jl     80604de <_IO_stdin_used+0x275a>
add    %al,(%eax)
pop    %eax
ret    $0xfffe
mov    0x6800000c,%al
ret
(bad)
(bad)
fmuls  (%eax,%eax,1)
add    %ch,-0xf00013d(%eax)
or     $0x0,%al
add    %ch,%al
ret
(bad)
decl   (%eax)
or     $0xc4680000,%eax
(bad)
(bad)
cmp    %cl,0xc4980000
(bad)
call   *0xd(%eax)
add    %al,(%eax)
mov    $0xa8fffec6,%eax
or     $0xc6f80000,%eax
(bad)
dec    %eax
or     $0x7180000,%eax
(bad)
(bad)
cld
or     $0x8b80000,%eax
(bad)
pushl  (%esi,%ecx,1)
add    %al,(%eax)
call   55060431 <_end+0x4cffab99>
push   %cs
add    %al,(%eax)
sub    %cl,(%ecx)
(bad)
(bad)
jl     8060540 <_IO_stdin_used+0x27bc>
add    %al,(%eax)
dec    %eax
or     %edi,%edi
lcall  *0x9a80000(%esi,%ecx,1)
(bad)
inc    %eax
push   %cs
add    %al,(%eax)
clc
or     %edi,%edi
(bad)
fmull  (%esi)
add    %al,(%eax)
cwtl
or     %bh,%bh
call   *(%edi,%ecx,1)
add    %al,(%eax)
call   39060463 <_end+0x30ffabcb>
sldt   (%eax)
or     %cl,(%ebx)
(bad)
decl   0xf(%eax)
add    %al,(%eax)
dec    %eax
or     %edi,%edi
lcall  *0x0(%edi,%ecx,1)
add    %bl,0xf(%eax)
(bad)
jmp    *-0x77fffff1(%eax)
(bad)
pushl  0x10780000(%edi,%ecx,1)
(bad)
decl   (%eax,%edx,1)
add    %al,(%eax)
clc
adc    %bh,%bh
incl   0x10(%eax)
add    %al,(%eax)
sub    %dl,(%ebx)
(bad)
inc    %esp
adc    %al,(%eax)
add    %bh,%al
adc    %edi,%edi
decl   (%ecx,%edx,1)
add    %al,(%eax)
mov    %dl,(%edi,%edi,8)
call   *0x0(%ecx,%edx,1)
add    %ch,%al
adc    $0xff,%al
pushl  0x0(%ecx,%edx,1)
add    %cl,%al
adc    $0x11e0ffff,%eax
add    %al,(%eax)
or     %dl,(%esi)
(bad)
(bad)
clc
adc    %eax,(%eax)
add    %ch,0x19(%eax)
(bad)
call   *0x12(%eax)
add    %al,(%eax)
mov    %bl,(%ecx)
(bad)
jmp    *0x0(%edx,%edx,1)
add    %bl,%al
sbb    %edi,%edi
decl   0x48000012(%eax)
sbb    %bh,%bh
inc    %eax
adc    (%eax),%al
add    %bl,0x1a(%eax)
(bad)
call   *%esp
adc    (%eax),%al
add    %cl,0x4ffff1b(%eax)
adc    (%eax),%eax
add    %bl,0x18ffff1b(%eax)
adc    (%eax),%eax
add    %ch,0x2cffff1b(%eax)
adc    (%eax),%eax
add    %bh,0x1c(%eax)
(bad)
lcall  *0x13(%eax)
add    %al,(%eax)
sbb    %bl,0x13acffff
add    %al,(%eax)
cmp    %bl,0x13c8ffff
add    %al,(%eax)
mov    %bl,0x13f4ffff
add    %al,(%eax)
clc
sbb    $0x1434ffff,%eax
add    %al,(%eax)
pop    %eax
push   %ds
(bad)
call   *0x0(%esp,%edx,1)
add    %bl,0x78ffff1e(%eax)
adc    $0x0,%al
add    %cl,%al
push   %ds
(bad)
lcall  *-0x27ffffec(%eax)
push   %ds
(bad)
ljmp   *0x1f280000(%esp,%edx,1)
(bad)
inc    %esp
adc    $0x0,%al
add    %ch,0x1f(%eax)
(bad)
(bad)
fcoml  (%eax,%eax,1)
add    %ch,%al
pop    %ds
(bad)
pushl  0x20380000(,%edx,1)
(bad)
lcall  *0x15(%eax)
add    %al,(%eax)
test   $0x21,%al
(bad)
incl   -0x77ffffeb(%eax)
and    %edi,%edi
ljmp   *-0x67ffffeb(%eax)
and    %edi,%edi
(bad)
mov    $0xc8000015,%esp
and    %edi,%edi
(bad)
fcoms  0x24b80000
(bad)
lcall  *(%eax)
push   %ss
add    %al,(%eax)
sub    %ah,0x166cffff
add    %al,(%eax)
mov    $0xa8ffff25,%eax
push   %ss
add    %al,(%eax)
enter  $0xff25,$0xff
mov    $0xd8000016,%esp
and    $0x16d0ffff,%eax
add    %al,(%eax)
or     %ah,(%esi)
(bad)
push   %esp
push   %ss
add    %al,(%eax)
enter  $0xff26,$0xff
pusha
pop    %ss
add    %al,(%eax)
js     80606e5 <_IO_stdin_used+0x2961>
(bad)
pushl  0x0(%edi,%edx,1)
add    %cl,-0x370000d8(%eax)
pop    %ss
add    %al,(%eax)
cwtl
sub    %bh,%bh
(bad)
fcoml  (%edi)
add    %al,(%eax)
test   $0x28,%al
(bad)
push   %eax
pop    %ss
add    %al,(%eax)
mov    $0x4ffff28,%eax
sbb    %al,(%eax)
add    %cl,(%eax)
sub    %edi,%edi
ljmp   *(%eax)
sbb    %al,(%eax)
add    %ch,0x29(%eax)
(bad)
jmp    *0x0(%eax,%ebx,1)
add    %bh,0x2a(%eax)
(bad)
jmp    *-0x27ffffe8(%eax)
sub    %bh,%bh
(bad)
call   2006071d <_end+0x17ffae85>
sub    %edi,%edi
decl   (%eax)
sbb    %eax,(%eax)
add    %bh,0x2b(%eax)
(bad)
incl   0x0(%ecx,%ebx,1)
add    %bl,%al
sub    %edi,%edi
(bad)
jl     8060733 <_IO_stdin_used+0x29af>
add    %al,(%eax)
pop    %eax
sub    $0xff,%al
(bad)
mov    $0x98000019,%eax
sub    $0xff,%al
(bad)
fcompl (%ecx)
add    %al,(%eax)
enter  $0xff2c,$0xff
lock sbb %eax,(%eax)
add    %cl,(%eax)
cs
(bad)
decl   0x1a(%eax)
add    %al,(%eax)
cwtl
cs
(bad)
(bad)
jl     806075c <_IO_stdin_used+0x29d8>
add    %al,(%eax)
push   $0xb4ffff2f
sbb    (%eax),%al
add    %bh,%al
xor    %bh,%bh
jmp    *(%ebx,%ebx,1)
add    %al,(%eax)
enter  $0xff32,$0xff
sbbb   $0x0,(%ebx)
add    %bl,%al
xor    %bh,%bh
call   *0x33180000(%ebx,%ebx,1)
(bad)
(bad)
mov    $0x8800001b,%eax
xor    $0xff,%al
(bad)
clc
sbb    (%eax),%eax
add    %cl,%al
xor    $0xff,%al
jmp    *(%esp,%ebx,1)
add    %al,(%eax)
clc
xor    $0xff,%al
(bad)
cmp    $0x1c,%al
add    %al,(%eax)
dec    %eax
xor    $0x1c60ffff,%eax
add    %al,(%eax)
cwtl
xor    $0x1c8cffff,%eax
add    %al,(%eax)
mov    $0xacffff35,%eax
sbb    $0x0,%al
add    %ch,0x36(%eax)
(bad)
(bad)
in     (%dx),%al
sbb    $0x0,%al
add    %bl,0x18ffff36(%eax)
sbb    $0x37880000,%eax
(bad)
call   *0x1d(%eax)
add    %al,(%eax)
mov    $0x94ffff41,%eax
sbb    $0x43580000,%eax
(bad)
call   *%esp
sbb    $0x43980000,%eax
(bad)
decl   (%eax)
push   %ds
add    %al,(%eax)
mov    $0x1cffff43,%eax
push   %ds
add    %al,(%eax)
fadds  -0x1(%ebx)
pushl  (%eax)
push   %ds
add    %al,(%eax)
sbb    %al,-0x1(%edi,%edi,8)
push   %esp
push   %ds
add    %al,(%eax)
cmp    %al,-0x1(%edi,%edi,8)
push   $0x7800001e
inc    %esp
(bad)
decl   0x44d80000(%esi,%ebx,1)
(bad)
inc    %eax
push   %ds
add    %al,(%eax)
mov    $0xfcffff45,%eax
push   %ds
add    %al,(%eax)
call   1d06074e <_end+0x14ffaeb6>
pop    %ds
add    %al,(%eax)
js     8060854 <_IO_stdin_used+0x2ad0>
(bad)
decl   0x1f(%eax)
add    %al,(%eax)
cwtl
inc    %esi
(bad)
lcall  *0x0(%edi,%ebx,1)
add    %bh,0x70ffff46(%eax)
pop    %ds
add    %al,(%eax)
fadds  -0x1(%esi)
incl   0x46f80000(%edi,%ebx,1)
(bad)
lcall  *0x2800001f(%eax)
inc    %edi
(bad)
(bad)
mov    $0x5800001f,%eax
inc    %edi
(bad)
(bad)
fcomps (%edi)
add    %al,(%eax)
mov    %al,-0x1(%edi)
push   %eax
pop    %ds
add    %al,(%eax)
mov    $0x8ffff47,%eax
and    %al,(%eax)
add    %ch,0x48(%eax)
(bad)
ljmp   *(%eax,%eiz,1)
add    %al,(%eax)
cwtl
dec    %eax
(bad)
incl   0x0(%eax,%eiz,1)
add    %cl,%al
dec    %eax
(bad)
lcall  *0x0(%eax,%eiz,1)
add    %bh,%al
dec    %eax
(bad)
pushl  0x0(%eax,%eiz,1)
add    %ch,-0x670000b7(%eax)
and    %al,(%eax)
add    %ch,%al
dec    %ecx
(bad)
pushl  0x28000020(%eax)
dec    %edx
(bad)
dec    %eax
and    %al,(%eax)
add    %ch,0x4a(%eax)
(bad)
jmp    *%eax
and    %al,(%eax)
add    %cl,-0xb0000b6(%eax)
and    %al,(%eax)
add    %ch,0x8ffff4a(%eax)
and    %eax,(%eax)
add    %cl,%al
dec    %edx
(bad)
lcall  *(%ecx,%eiz,1)
add    %al,(%eax)
call   390607fb <_end+0x30ffaf63>
and    %eax,(%eax)
add    %cl,0x4b(%eax)
(bad)
lcall  *0x0(%ecx,%eiz,1)
add    %ch,-0x670000b5(%eax)
and    %eax,(%eax)
add    %bl,(%eax)
dec    %ebp
(bad)
push   %eax
and    %eax,(%eax)
add    %bl,0x4e(%eax)
(bad)
pushl  (%eax)
and    (%eax),%al
add    %bh,0x78ffff4e(%eax)
and    (%eax),%al
add    %bl,%al
dec    %esi
(bad)
call   *-0x7ffffde(%eax)
dec    %esi
(bad)
ljmp   *0x28000022(%eax)
dec    %edi
(bad)
inc    %eax
and    (%eax),%al
add    %ch,0x4f(%eax)
(bad)
(bad)
cld
and    (%eax),%al
add    %bl,0x14ffff4f(%eax)
and    (%eax),%eax
add    %bh,0x28ffff4f(%eax)
and    (%eax),%eax
add    %cl,(%eax)
push   %edi
(bad)
ljmp   *0x0(%ebx,%eiz,1)
add    %bl,%al
push   %edi
(bad)
jmp    *0x58b80000(%ebx,%eiz,1)
(bad)
jmp    *%esp
and    (%eax),%eax
add    %ch,%al
pop    %eax
(bad)
(bad)
cld
and    (%eax),%eax
add    %bh,0x5d(%eax)
(bad)
incl   0x5da80000(%esp)
(bad)
lcall  *0x5fb80000(%esp)
(bad)
(bad)
call   a0060969 <_end+0x97ffb0d1>
pusha
(bad)
incl   0x25(%eax)
add    %al,(%eax)
fsubs  -0x1(%eax)
lcall  *0x25(%eax)
add    %al,(%eax)
dec    %eax
data16
(bad)
push   %esp
and    $0x66980000,%eax
(bad)
decl   (%esi,%eiz,1)
add    %al,(%eax)
clc
data16
(bad)
pushl  (%eax)
add    %al,%es:(%eax)
cmp    %ah,-0x1(%edi)
decl   0x26(%eax)
add    %al,(%eax)
call   750608e0 <_end+0x6cffb048>
add    %al,%es:(%eax)
sub    %ch,-0x1(%eax)
incl   0x68580000(%esi,%eiz,1)
(bad)
ljmp   *-0x77ffffda(%eax)
push   $0x26ccffff
add    %al,(%eax)
cwtl
push   $0x26e0ffff
add    %al,(%eax)
call   19060909 <_end+0x10ffb071>
daa
add    %al,(%eax)
sub    %ch,-0x1(%ecx)
(bad)
cmp    $0x27,%al
add    %al,(%eax)
mov    %ch,-0x1(%ecx)
ljmp   *0x0(%edi,%eiz,1)
add    %bl,%al
imul   $0x2790ff,%edi,%edi
add    %cl,(%eax)
push   $0xffffffff
pushl  0x38000027(%eax)
push   $0xffffffff
dec    %esp
daa
add    %al,(%eax)
push   $0xecffff6a
daa
add    %al,(%eax)
cwtl
push   $0xffffffff
decl   (%eax,%ebp,1)
add    %al,(%eax)
call   2906094b <_end+0x20ffb0b3>
sub    %al,(%eax)
add    %bl,0x6b(%eax)
(bad)
(bad)
cmp    $0x28,%al
add    %al,(%eax)
mov    %ch,-0x1(%ebx)
call   *0x28(%eax)
add    %al,(%eax)
pop    %eax
insb   (%dx),%es:(%edi)
(bad)
call   *-0x17ffffd8(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
fsubrs (%eax)
add    %al,(%eax)
pop    %eax
insl   (%dx),%es:(%edi)
(bad)
(bad)
cld
sub    %al,(%eax)
add    %bh,0x6e(%eax)
(bad)
incl   0x0(%ecx,%ebp,1)
add    %bl,%al
outsb  %ds:(%esi),(%dx)
(bad)
pushl  0x29(%eax)
add    %al,(%eax)
or     %ch,-0x1(%edi)
incl   0x6f980000(%ecx,%ebp,1)
(bad)
(bad)
fsubrl (%ecx)
add    %al,(%eax)
fsubrs -0x1(%edi)
decl   (%edx,%ebp,1)
add    %al,(%eax)
or     %dh,-0x1(%eax)
jmp    *(%edx,%ebp,1)
add    %al,(%eax)
cmp    %dh,-0x1(%eax)
(bad)
cmp    $0x2a,%al
add    %al,(%eax)
pop    %eax
jo     8060a46 <_IO_stdin_used+0x2cc2>
call   *0x2a(%eax)
add    %al,(%eax)
enter  $0xff70,$0xff
test   %ch,(%edx)
add    %al,(%eax)
test   $0x71,%al
(bad)
(bad)
fsubrl (%edx)
add    %al,(%eax)
sub    %dh,-0x1(%edx)
lcall  *(%eax)
sub    (%eax),%eax
add    %ch,0x72(%eax)
(bad)
incl   0x0(%ebx,%ebp,1)
add    %ch,0x68ffff72(%eax)
sub    (%eax),%eax
add    %cl,(%eax)
jae    8060a76 <_IO_stdin_used+0x2cf2>
jmp    *0x73680000(%ebx,%ebp,1)
(bad)
(bad)
fsubrl (%ebx)
add    %al,(%eax)
cmp    %dh,-0x1(%ebp)
pushl  (%esp,%ebp,1)
add    %al,(%eax)
mov    $0x64ffff75,%eax
sub    $0x0,%al
add    %ch,(%eax)
jbe    8060a96 <_IO_stdin_used+0x2d12>
call   *-0x67ffffd4(%eax)
jbe    8060a9e <_IO_stdin_used+0x2d1a>
inc    %eax
sub    $0x0,%al
add    %bh,0xffff78(%eax)
sub    $0x79980000,%eax
(bad)
ljmp   *0x0(%ebp,%ebp,1)
add    %ch,0x7a(%eax)
(bad)
ljmp   *-0x77ffffd3(%eax)
cmp    $0xffffffff,%edi
dec    %eax
add    %al,%cs:(%eax)
or     %al,0x2eb8ffff(%edi)
add    %al,(%eax)
cwtl
mov    %bh,%bh
push   %eax
add    %al,%cs:(%eax)
test   $0x90,%al
(bad)
jmp    *0x2f(%eax)
add    %al,(%eax)
call   89060a71 <_end+0x80ffb1d9>
das
add    %al,(%eax)
dec    %eax
xchg   %eax,%edx
(bad)
incl   (%eax,%esi,1)
add    %al,(%eax)
test   $0x92,%al
(bad)
(bad)
cmp    $0x30,%al
add    %al,(%eax)
enter  $0xff92,$0xff
pop    %esp
xor    %al,(%eax)
add    %bh,%al
xchg   %eax,%edx
(bad)
(bad)
jl     8060b32 <_IO_stdin_used+0x2dae>
add    %al,(%eax)
sub    %dl,0x309cffff(%ebx)
add    %al,(%eax)
test   $0x95,%al
(bad)
decl   (%eax)
xor    %eax,(%eax)
add    %bl,(%eax)
cwtl
(bad)
decl   0x31(%eax)
add    %al,(%eax)
fcomps 0x31b8ffff(%ecx)
add    %al,(%eax)
cmp    %bl,0x31d4ffff(%edx)
add    %al,(%eax)
js     8060ac8 <_IO_stdin_used+0x2d44>
(bad)
(bad)
in     (%dx),%al
xor    %eax,(%eax)
add    %bl,0x4ffff9a(%eax)
xor    (%eax),%al
add    %bl,0x5cffff9b(%eax)
xor    (%eax),%al
add    %bh,(%eax)
pushf
(bad)
decl   -0x62a80000(%edx,%esi,1)
(bad)
jmp    *%eax
xor    (%eax),%al
add    %cl,%al
popf
(bad)
jmp    *(%eax)
xor    (%eax),%eax
add    %bl,(%eax)
sahf
(bad)
lcall  *0x0(%ebx,%esi,1)
add    %cl,-0x62(%eax)
(bad)
(bad)
js     8060b9d <_IO_stdin_used+0x2e19>
add    %al,(%eax)
sub    %ah,0x33b8ffff(%eax)
add    %al,(%eax)
cwtl
mov    0x33f0ffff,%al
add    %al,(%eax)
enter  $0xffa0,$0xff
or     %dh,(%eax,%eax,1)
add    %cl,-0x5f(%eax)
(bad)
jmp    *0x34(%eax)
add    %al,(%eax)
push   $0x74ffffa1
xor    $0x0,%al
add    %bl,-0x5e(%eax)
(bad)
dec    %esp
xor    $0x0,%al
add    %ch,-0xf00005e(%eax)
xor    $0x0,%al
add    %bl,%al
mov    %al,0x3504ffff
add    %al,(%eax)
or     %ah,0x3518ffff(%ebx)
add    %al,(%eax)
sbb    %ah,0x352cffff(%ebx)
add    %al,(%eax)
pop    %eax
mov    %eax,0x3558ffff
add    %al,(%eax)
cwtl
mov    %eax,0x3594ffff
add    %al,(%eax)
pop    %eax
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
call   *%esp
xor    $0xa7980000,%eax
(bad)
(bad)
call   e0060c12 <_end+0xd7ffb37a>
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
(bad)
cld
xor    $0xa8180000,%eax
(bad)
call   *(%esi,%esi,1)
add    %al,(%eax)
mov    %ch,0x3640ffff(%eax)
add    %al,(%eax)
mov    $0x54ffffa8,%eax
add    %al,%ss:(%eax)
call   7d060ba9 <_end+0x74ffb311>
add    %al,%ss:(%eax)
sub    %ch,0x3690ffff(%ecx)
add    %al,(%eax)
push   $0xbcffffa9
add    %al,%ss:(%eax)
sbb    %ch,0x372cff(%edi,%edi,8)
add    %bh,0x74ffffac(%eax)
aaa
add    %al,(%eax)
or     %ch,0x37b4ffff(%esi)
add    %al,(%eax)
cmp    %cl,%dl
(bad)
jmp    *%esp
aaa
add    %al,(%eax)
cwtl
lret   $0xffff
or     %bh,(%eax)
add    %al,(%eax)
js     8060c09 <_IO_stdin_used+0x2e85>
(bad)
incl   0x0(%eax,%edi,1)
add    %bl,(%eax)
xlat   %ds:(%ebx)
(bad)
incl   -0x27880000(%eax,%edi,1)
(bad)
push   %eax
cmp    %al,(%eax)
add    %ch,%al
fdivr  %st(7),%st
ljmp   *(%ecx,%edi,1)
add    %al,(%eax)
clc
fdivr  %st(7),%st
incl   0x39(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8060c7b <_IO_stdin_used+0x2ef7>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cld
mov    %?,%esi
incl   0x8(%eax)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8060c9b <_IO_stdin_used+0x2f17>
js     8060c99 <_IO_stdin_used+0x2f15>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
push   %esp
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
or     %bl,0x144fffe(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x78600e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %al,(%eax)
lahf
(bad)
decl   0x3(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xa0000000,%eax
xchg   %eax,%esp
(bad)
push   %esi
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x80,%eax
fadds  (%eax)
add    %al,(%eax)
push   %eax
mov    %al,0x23ffffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
dec    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
sahf
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,0x0(%ecx,%eax,1)
add    %cl,(%esp,%eiz,4)
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dl,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,-0x7fffffff(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
incl   0x4(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
inc    %esp
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
loopne 8060e47 <_IO_stdin_used+0x30c3>
add    %al,(%eax)
mov    $0x85fffea8,%eax
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff89,0x3500e43
add    $0xa,%al
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %cl,(%eax)
mov    $0xfe,%al
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%edx,%eax,1)
add    %al,(%eax)
add    $0xb0,%al
(bad)
decl   0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
add    %dh,0x4efffe(%eax)
add    %al,(%eax)
add    %cl,0xe(%edi)
or     %al,0x200e4502(%ebx)
dec    %esp
or     (%esi),%cl
or     %al,-0x3d(%esi)
push   %cs
add    $0x42,%al
or     0xe(%eax),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x0(%edx,%eax,1)
add    %ah,(%eax,%esi,4)
(bad)
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e45
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%al
add    %ch,0x232fffe(%eax,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x18,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
and    $0x3,%al
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xfe,%dl
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %esp
add    (%eax),%eax
add    %ah,0xd5fffe(%edx,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x410c0e0a(%esi),%cl
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,0x0(%ebx,%eax,1)
add    %cl,-0x2(%ebx,%esi,4)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xa(%edi)
push   %cs
add    $0x46,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pushf
add    (%eax),%eax
add    %bh,-0x2(%ebx,%esi,4)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edx)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
mov    $0x3,%ah
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xfe,%bl
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0x41100e0a(%ebp),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,%ah
add    (%eax),%eax
add    %bl,(%esp,%esi,4)
(bad)
ljmp   *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffab,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
nop
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %dh,-0x2(%ebp,%esi,4)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x8(%esi,%ecx,1),%cl
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
push   $0xb0000004
mov    $0xfe,%ch
decl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x400e4504(%ebx)
add    0xa(%edx),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    0x88000004,%al
mov    $0xfe,%dh
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0xb0000004,%eax
mov    $0xfe,%dh
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%esi)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
rolb   (%eax,%eax,1)
add    %bl,%al
mov    $0xfe,%dh
pushl  0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x43,(%ebx)
push   %cs
adc    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,0xb7280000
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xe(%ebp)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bl,(%eax)
add    $0xb7400000,%eax
(bad)
call   *(%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x55,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     80611db <_IO_stdin_used+0x3457>
add    %al,(%eax)
or     %bh,0x36fffe(%ecx)
add    %al,(%eax)
add    %dl,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dl,0x28000005(%eax)
mov    $0x4020fffe,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ecx,%ecx,2)
addl   $0xffffffc3,0xa073103
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
les    0xf9140000,%eax
(bad)
lcall  *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%ecx),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cld
add    $0xfa7c0000,%eax
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
adc    $0x6,%al
add    %al,(%eax)
xchg   %eax,%esp
cli
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x57,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
push   %es
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cli
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,0x0(%esi,%eax,1)
add    %ah,0x5ffffe(%edx,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
add    0xe(%ecx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    %al,(%esi)
add    %al,(%eax)
loopne 80612ec <_IO_stdin_used+0x3568>
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
jg     8061308 <_IO_stdin_used+0x3584>
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %es
add    %al,(%eax)
adc    $0xfb,%al
(bad)
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,%ah
push   %es
add    %al,(%eax)
jl     8061341 <_IO_stdin_used+0x35bd>
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xa(%eax)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
clc
push   %es
add    %al,(%eax)
mov    $0xfb,%al
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
adc    %al,(%edi)
add    %al,(%eax)
mov    $0x36fffefb,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
and    $0x7,%al
add    %al,(%eax)
in     $0xfb,%al
(bad)
decl   (%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
test   $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   $0xb0000007
(bad)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,0x0(%edi,%eax,1)
add    %cl,%ah
(bad)
(bad)
(bad)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
aam    $0x7
add    %al,(%eax)
fs
add    %bh,%bh
(bad)
js     8061442 <_IO_stdin_used+0x36be>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%ch
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %cl,(%eax)
or     %al,(%eax)
add    %dh,0x22ffff00(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
jno    80614ca <_IO_stdin_used+0x3746>
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %cl,0x25c0000(%eax,%ecx,1)
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x43100e0a(%edx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%eax),%esi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,%ah
or     %al,(%eax)
add    %ah,%ah
add    %bh,%bh
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    $0x9,%al
add    %al,(%eax)
sub    $0x3,%al
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%edx
push   %cs
add    $0x43,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
cmp    $0x9,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %edi,%edi
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2400e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
test   $0x9,%al
add    %al,(%eax)
loopne 8061615 <_IO_stdin_used+0x3891>
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%eax)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,%al
or     %eax,(%eax)
add    %cl,(%eax)
add    $0xff,%al
call   *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x60,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
sbb    %cl,(%edx)
add    %al,(%eax)
adc    %al,(%edi)
(bad)
lcall  *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,(%edx,%ecx,1)
add    %al,(%eax)
sbb    $0x7,%al
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edx,%ecx,1)
add    $0x49,%al
or     0xa(%ebp),%ebx
push   %cs
add    $0x43,%al
or     0xe(%ebp),%eax
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
push   %eax
or     (%eax),%al
add    %cl,0x7(%eax)
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec30a61
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %cl,-0x7ffffff6(%eax)
pop    %es
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pushf
or     (%eax),%al
add    %bh,-0x1(%edi,%eax,1)
pushl  (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
clc
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
or     (%eax),%al
add    %bh,-0x1(%eax,%ecx,1)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
or     (%eax),%al
add    %bh,0x8(%eax)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,%ah
or     (%eax),%al
add    %dh,-0x1(%eax,%ecx,1)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%edx
add    %al,(%eax)
and    %cl,(%ebx)
add    %al,(%eax)
sbb    %cl,(%ecx)
(bad)
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x62300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dh,0x0(%ebx,%ecx,1)
add    %ah,-0x1(%ecx,%ecx,1)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x6800000b(%eax)
or     %edi,%edi
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x8c00000b,%esp
or     %edi,%edi
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
cld
or     (%eax),%eax
add    %bh,0x57ffff(%ecx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%esp,%ecx,1)
add    %al,(%eax)
cld
or     %edi,%edi
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
or     $0x0,%al
add    %bl,(%eax)
or     %bh,%bh
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,0xc(%eax)
add    %al,(%eax)
sub    %cl,(%edx)
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
je     80618e6 <_IO_stdin_used+0x3b62>
add    %al,(%eax)
and    $0xa,%al
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ebx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,0xa5c0000(%esp,%ecx,1)
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,0xa840000(%esp,%ecx,1)
(bad)
(bad)
jge    8061912 <_IO_stdin_used+0x3b8e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cld
or     $0x0,%al
add    %ch,0x4fffff(%edx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4502(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
and    %cl,0xad80000
(bad)
jmp    *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
jo     80619a1 <_IO_stdin_used+0x3c1d>
push   %cs
add    $0x45,%al
or     0xa(%edi),%esp
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
dec    %eax
or     $0xc200000,%eax
(bad)
call   *%edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x1380302(%ebx)
or     %bl,%al
push   %cs
add    $0x47,%al
or     0xa(%edx),%ebx
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0xd(%eax)
add    %al,(%eax)
fmuls  0x10ffff
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
test   %cl,0xdd40000
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    0xe800000d,%al
or     $0xe4ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ah,%al
or     $0xe980000,%eax
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7b300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
xor    $0xe,%al
add    %al,(%eax)
mov    $0xe,%ah
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jo     8061ae4 <_IO_stdin_used+0x3d60>
add    %al,(%eax)
or     %cl,(%edi)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0xf040000(%esi,%ecx,1)
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cwtl
push   %cs
add    %al,(%eax)
add    %cl,(%edi)
(bad)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0xbc000000
push   %cs
add    %al,(%eax)
or     $0xf,%al
(bad)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
sub    %cl,(%edi)
add    %al,(%eax)
pusha
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
cmp    $0xf,%al
add    %al,(%eax)
cld
(bad)
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
nop
sldt   (%eax)
mov    $0x8ffff10,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x10b40000(%edi,%ecx,1)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x4ffffff1(%eax)
adc    %bh,%bh
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%ah
sldt   (%eax)
lods   %ds:(%esi),%al
adc    %bh,%bh
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,%al
sldt   (%eax)
fcoms  (%eax)
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %ch,(%eax,%edx,1)
add    %al,(%eax)
cld
adc    %bh,%bh
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ch,0x10(%eax)
add    %al,(%eax)
rclb   (%ecx)
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x10,%al
add    %al,(%eax)
call   45061c2e <_end+0x3cffc396>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,%al
adc    %al,(%eax)
add    %cl,(%eax)
adc    %bh,%bh
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa450204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,(%ecx,%edx,1)
add    %al,(%eax)
sub    $0x12,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx,%edx,1)
add    %dl,-0x1(%edx,%edx,1)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %al,-0x67ffffef(%eax)
adc    %bh,%bh
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %eax,(%eax)
add    %dh,0x24ffff(%edx,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,-0x2fffffef(%eax)
adc    %bh,%bh
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
adc    (%eax),%al
add    %bh,-0x740000ed(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
inc    %esp
adc    (%eax),%al
add    %dl,(%esp,%edx,1)
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %bh,0x0(%edx,%edx,1)
add    %ch,0x18affff(%esp,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %ch,%ah
adc    (%eax),%al
add    %cl,%ah
adc    $0x1c6ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jnp    8061f7b <_IO_stdin_used+0x41f7>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    8061f8e <_IO_stdin_used+0x420a>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x13(%eax)
add    %al,(%eax)
inc    %eax
pop    %ss
(bad)
incl   0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebx,%edx,1)
add    %bh,(%edi,%edx,1)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
adcb   $0x0,(%ebx)
add    %bl,0x17(%eax)
(bad)
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
rclb   $0x0,(%ebx)
add    %cl,0x3fffff18(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
adc    (%eax),%eax
add    %bl,0x2dffff(%eax,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
add    $0x14,%al
add    %al,(%eax)
mov    $0x18,%ah
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5a4fe(%ebx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    %dl,(%eax,%eax,1)
add    %ah,%al
sbb    %bh,%bh
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
push   %esp
adc    $0x0,%al
add    %al,(%ecx,%ebx,1)
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,0x0(%esp,%edx,1)
add    %al,(%ecx,%ebx,1)
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x14,%ah
add    %al,(%eax)
je     8062137 <_IO_stdin_used+0x43b3>
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
loopne 806215a <_IO_stdin_used+0x43d6>
add    %al,(%eax)
js     8062163 <_IO_stdin_used+0x43df>
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,(%eax)
adc    $0x1a300000,%eax
(bad)
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
adc    $0x241c0000,%eax
(bad)
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bl,0x257c0000(%ebp,%edx,1)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
adc    $0x25880000,%eax
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
adc    $0x25940000,%eax
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%al
adc    $0x25a00000,%eax
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    $0x16,%al
add    %al,(%eax)
mov    $0x19ffff25,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
push   %ss
add    %al,(%eax)
enter  $0xff25,$0xff
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
push   %esp
push   %ss
add    %al,(%eax)
in     $0x25,%al
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    %dl,(%esi)
add    %al,(%eax)
adc    %ah,(%esi)
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,%ah
push   %ss
add    %al,(%eax)
mov    $0x26,%ah
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
fcoml  (%esi)
add    %al,(%eax)
int3
es
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
adc    %dl,(%edi)
add    %al,(%eax)
sub    %ah,(%edi)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%edi,%edx,1)
add    %al,(%eax)
xor    $0x27,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
pop    %ss
add    %al,(%eax)
inc    %eax
daa
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi,%edx,1)
add    %cl,-0x1(%edi,%eiz,1)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pusha
pop    %ss
add    %al,(%eax)
pop    %eax
daa
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x68000017(%eax)
daa
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,0x78000017(%eax)
daa
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x90000017,%eax
daa
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
rclb   (%edi)
add    %al,(%eax)
test   $0x27,%al
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
hlt
pop    %ss
add    %al,(%eax)
xor    $0x28,%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     $0x18,%al
add    %al,(%eax)
dec    %esp
sub    %bh,%bh
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    $0x18,%al
add    %al,(%eax)
fs
sub    %bh,%bh
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cmp    $0x18,%al
add    %al,(%eax)
jl     80624ce <_IO_stdin_used+0x474a>
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pusha
sbb    %al,(%eax)
add    %cl,(%eax)
sub    %edi,%edi
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
js     80624f6 <_IO_stdin_used+0x4772>
add    %al,(%eax)
xor    %ch,(%ecx)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
nop
sbb    %al,(%eax)
add    %bl,0x29(%eax)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   $0x18,%al
add    %al,(%eax)
subb   $0xff,(%ecx)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x298c0000(%eax,%ebx,1)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
sbb    %al,(%eax)
add    %bl,0x1affff29(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
sbb    %al,(%eax)
add    %ah,0x18ffff(%ecx,%ebp,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
clc
sbb    %al,(%eax)
add    %dh,0x57ffff29(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x7ff1bcfe(%ebx)
add    %eax,(%edx)
inc    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,(%ecx,%ebx,1)
add    %al,(%eax)
in     $0x29,%al
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ah,0x19(%eax)
add    %al,(%eax)
or     %ch,(%edx)
(bad)
ljmp   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x1f00e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x20000019,%eax
sub    %edi,%edi
(bad)
cmp    %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x16,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,%al
sbb    %eax,(%eax)
add    %ah,(%eax)
sub    $0xff,%al
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
sbb    (%eax),%al
add    %bh,(%eax)
sub    $0xff,%al
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
sbb    (%eax),%al
add    %al,0x2c(%eax)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jo     80626f0 <_IO_stdin_used+0x496c>
add    %al,(%eax)
dec    %eax
sub    $0xff,%al
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    %bl,(%edx)
add    %al,(%eax)
pusha
sub    $0xff,%al
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
les    (%edx),%ebx
add    %al,(%eax)
fs
sub    $0xff,%al
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
fcompl (%edx)
add    %al,(%eax)
jl     8062772 <_IO_stdin_used+0x49ee>
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
lock sbb (%eax),%al
add    %cl,0x43ffff2c(%eax)
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1f00e46
or     $0x1,%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
xor    $0x1b,%al
add    %al,(%eax)
xchg   %eax,%esp
xor    %edi,%edi
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sbb    (%eax),%eax
add    %ch,(%esp,%esi,1)
(bad)
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    (%eax),%eax
add    %cl,%ah
xor    $0xff,%al
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
test   %al,(%eax)
add    %al,(%eax)
les    (%ebx),%ebx
add    %al,(%eax)
in     $0x34,%al
(bad)
incl   0x4(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jge    8062872 <_IO_stdin_used+0x4aee>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
sbb    $0x0,%al
add    %ch,%ah
cmp    %bh,%bh
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %ah,0x0(%esp,%ebx,1)
add    %al,(%ecx,%edi,1)
(bad)
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%ebx)
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,-0x37ffffe4(%eax)
cmp    %bh,%bh
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5d,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
or     %bl,0x3b500000
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %ah,(%eax)
sbb    $0x3b780000,%eax
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x4c00001d,%esp
inc    %eax
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,%ah
sbb    $0x40840000,%eax
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
clc
sbb    $0x40c00000,%eax
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
adc    %bl,(%esi)
add    %al,(%eax)
call   b00629bd <_end+0xa7ffd125>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    $0x1e,%al
add    %al,(%eax)
je     8062adf <_IO_stdin_used+0x4d5b>
(bad)
pushl  0x0
pop    %ebx
push   %cs
adc    %bl,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
push   %ds
add    %al,(%eax)
pushf
inc    %ecx
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
jo     8062af4 <_IO_stdin_used+0x4d70>
add    %al,(%eax)
test   $0x41,%al
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
push   %ds
add    %al,(%eax)
mov    $0x41,%ah
(bad)
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
test   $0x1e,%al
add    %al,(%eax)
mov    $0x41,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fcomps (%esi)
add    %al,(%eax)
rolb   -0x1(%ecx)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
add    $0x1f,%al
add    %al,(%eax)
in     $0x41,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xor    $0x1f,%al
add    %al,(%eax)
adc    $0x42,%al
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
pop    %eax
pop    %ds
add    %al,(%eax)
inc    %eax
inc    %edx
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bh,0x1f(%eax)
add    %al,(%eax)
push   %eax
inc    %edx
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
pop    %ds
add    %al,(%eax)
fs
inc    %edx
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,0x42740000(%edi,%ebx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,%ah
pop    %ds
add    %al,(%eax)
test   %al,-0x1(%edx)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,(%eax)
add    %al,(%eax)
add    %ch,%al
pop    %ds
add    %al,(%eax)
rolb   $0xff,-0x1(%edx)
add    %al,%fs:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xa(%esi)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eiz,1)
add    %al,(%eax)
adc    $0x43,%al
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %ah,(%eax)
add    %al,(%eax)
xor    %al,-0x1(%ebx)
dec    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9c,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %bl,0x20(%eax)
add    %al,(%eax)
rolb   $0xff,-0x1(%ebx)
mov    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ah,0x8000020(%eax)
inc    %esp
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4502(%ebx)
add    0xe(%edx),%ah
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,%ah
and    %al,(%eax)
add    %dl,-0x1(%esp,%eax,2)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %cl,(%ecx,%eiz,1)
add    %al,(%eax)
sub    $0x45,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
and    %eax,(%eax)
add    %ah,0x45(%eax)
(bad)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,0x0(%ecx,%eiz,1)
add    %bh,-0x1(%ebp,%eax,2)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %eax,(%eax)
add    %dh,0x32ffff(%ebp,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x59,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%ebx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x21
add    %al,(%eax)
les    -0x1(%ebp),%eax
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
and    %eax,(%eax)
add    %bl,%ah
inc    %ebp
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    $0x22,%al
add    %al,(%eax)
hlt
inc    %ebp
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
and    (%eax),%al
add    %al,(%eax)
inc    %esi
(bad)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x6f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x0(%edx,%eiz,1)
add    %bh,(%esi,%eax,2)
(bad)
(bad)
fild   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x71,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,0x46c40000(%edx,%eiz,1)
(bad)
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,%al
and    (%eax),%al
add    %cl,(%eax)
inc    %edi
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     $0x23,%al
add    %al,(%eax)
sbb    $0x47,%al
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
xor    %ah,(%ebx)
add    %al,(%eax)
cmp    %al,-0x1(%edi)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ah,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
and    (%eax),%eax
add    %bl,-0x1(%edi,%eax,2)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xa(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%eax),%esp
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,0x47840000(%ebx,%eiz,1)
(bad)
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff96,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
cld
and    (%eax),%eax
add    %bh,%ah
dec    %eax
(bad)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
imul   $0xe,(%edx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ebx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    $0x24,%al
add    %al,(%eax)
dec    %esp
dec    %ecx
(bad)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
jge    80630b1 <_IO_stdin_used+0x532d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ecx),%esp
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
and    $0x0,%al
add    %dl,0x70ffff49(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x48,(%ebx)
push   %cs
and    %al,(%edx)
dec    %esp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %ah,(%eax,%eax,1)
add    %dl,%al
dec    %ecx
(bad)
lcall  *0x2
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
push   %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
enter  $0x24,$0x0
mov    $0x4b,%al
(bad)
call   *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%ebx),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%esp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
xor    $0x25,%al
add    %al,(%eax)
and    $0x4c,%al
(bad)
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jnp    80631be <_IO_stdin_used+0x543a>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
pushf
add    %al,(%eax)
add    %dh,0x25(%eax)
add    %al,(%eax)
mov    $0x19ffff4c,%eax
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
push   $0x3
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jmp    806321e <_IO_stdin_used+0x549a>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %esp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
rolb   %cl,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
pop    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,%es:(%eax)
cmp    %dl,-0x1(%ebp)
(bad)
jnp    8063281 <_IO_stdin_used+0x54fd>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x3400e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
andb   $0x0,(%esi)
add    %cl,0x58(%eax)
(bad)
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %al,%ah
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %bh,-0x5fffffda(%eax)
pop    %ecx
(bad)
incl   0x8
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
push   %es
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    8063366 <_IO_stdin_used+0x55e2>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    %ah,(%edi)
add    %al,(%eax)
inc    %eax
popa
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%edx
add    $0x0,%al
add    %al,(%eax)
addb   $0x0,(%eax)
add    %cl,0x27(%eax)
add    %al,(%eax)
pusha
popa
(bad)
call   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
int3
daa
add    %al,(%eax)
cmp    $0x62,%al
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
dec    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x28,%al
add    %al,(%eax)
fs
(bad)
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,(%eax,%ebp,1)
add    %al,(%eax)
fs
(bad)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x0(%eax,%ebp,1)
add    %dh,-0x1(%edx,%eiz,2)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %ah,0x0(%eax,%ebp,1)
add    %al,0x275ffff(%edx,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
dec    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
nop
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
shrb   (%eax)
add    %al,(%eax)
cwtl
fs
(bad)
jmp    *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20900e48
fisttpl (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %dl,(%eax)
sub    %eax,(%eax)
add    %cl,%al
data16
(bad)
(bad)
mov    $0x1,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
jns    80635a6 <_IO_stdin_used+0x5822>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorl   $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
subb   $0x0,(%ecx)
add    %bl,(%eax)
push   $0x60ffff
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pushf
sub    %eax,(%eax)
add    %bl,-0x1(%eax,%ebp,2)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x29,%ah
add    %al,(%eax)
test   %ch,-0x1(%eax)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,%ah
sub    %eax,(%eax)
add    %cl,0xf3ffff(%eax,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
and    $0x2a,%al
add    %al,(%eax)
xor    $0x69,%al
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     80636af <_IO_stdin_used+0x592b>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,0x0(%edx,%ebp,1)
add    %ah,0x11effff(%ecx,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
test   $0x2a,%al
add    %al,(%eax)
jo     806377c <_IO_stdin_used+0x59f8>
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%al
sub    (%eax),%al
add    %ah,0x4dffff6a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
and    $0x2b,%al
add    %al,(%eax)
mov    $0x6a,%ah
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xa(%edx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
sub    (%eax),%eax
add    %cl,%al
push   $0xffffffff
call   *%esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
cli
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
subb   $0x0,(%ebx)
add    %ch,0x6c(%eax)
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xa000002b,%eax
insb   (%dx),%es:(%edi)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,%al
sub    (%eax),%eax
add    %bh,0x78ffff6c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     806385f <_IO_stdin_used+0x5adb>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
sub    $0x0,%al
add    %ah,%al
insb   (%dx),%es:(%edi)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%esp,%ebp,1)
add    %al,(%eax)
in     (%dx),%al
insb   (%dx),%es:(%edi)
(bad)
jmp    *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
sub    $0x0,%al
add    %al,0x46ffff(%ebp,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%eax),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xb000002c,%eax
insl   (%dx),%es:(%edi)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
sub    $0x0,%al
add    %cl,%ah
insl   (%dx),%es:(%edi)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
sub    $0x0,%al
add    %ch,%al
insl   (%dx),%es:(%edi)
(bad)
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,%ah
sub    $0x0,%al
add    %ah,%ah
insl   (%dx),%es:(%edi)
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37804(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,(%eax)
sub    $0x6df80000,%eax
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
sub    $0x6dfc0000,%eax
(bad)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x717c0000(%ebp,%ebp,1)
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x57ffffd3(%eax)
jno    8063a1a <_IO_stdin_used+0x5c96>
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax,%eax,1)
add    %al,(%eax)
les    0x71d40000,%ebp
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%ebp)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
fsubrl 0x71fc0000
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     8063a61 <_IO_stdin_used+0x5cdd>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ebx
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,%cs:(%eax)
inc    %eax
jb     8063a72 <_IO_stdin_used+0x5cee>
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    $0x2e,%al
add    %al,(%eax)
pop    %esp
jb     8063a86 <_IO_stdin_used+0x5d02>
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bh,(%esi,%ebp,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jb     8063aa6 <_IO_stdin_used+0x5d22>
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
and    %cl,0xe(%edi)
add    $0x42,%al
push   %cs
and    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x2e(%eax)
add    %al,(%eax)
nop
jb     8063ac2 <_IO_stdin_used+0x5d3e>
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %al,0x72a40000(%esi,%ebp,1)
(bad)
jmp    *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
add    %al,(%ecx)
or     (%esi),%cl
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,%ah
add    %al,%cs:(%eax)
in     $0x74,%al
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
cmp    $0x2f,%al
add    %al,(%eax)
cmp    $0x75,%al
(bad)
incl   0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
jl     8063c11 <_IO_stdin_used+0x5e8d>
add    %al,(%eax)
dec    %esp
jbe    8063be6 <_IO_stdin_used+0x5e62>
ljmp   *(%edx)
sbb    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ch,-0x6db40000(%edi,%ebp,1)
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
shrb   (%edi)
add    %al,(%eax)
mov    %dl,0xd9ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,(%eax,%esi,1)
add    %al,(%eax)
sub    $0x93,%al
(bad)
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   $0x4c000000
xor    %al,(%eax)
add    %cl,0x157ffff(%esi,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8063cdb <_IO_stdin_used+0x5f57>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8063d12 <_IO_stdin_used+0x5f8e>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,-0x7fffffd0(%eax)
lahf
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,%ah
xor    %al,(%eax)
add    %dh,0x2ffff(%edi,%ebx,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     %dh,(%ecx)
add    %al,(%eax)
mov    $0x9f,%al
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0x80
stos   %al,%es:(%edi)
add    $0x8,%al
pusha
stos   %al,%es:(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
roll   %cl,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,0xc0000(%ecx,%eax,1)
add    %al,(%eax)
push   %eax
cltd
add    $0x8,%al
or     $0x5c000000,%eax
fldl   0x1908
add    %dh,%al
dec    %esi
push   %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
hlt
dec    %esi
push   %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
xor    %cl,0x608(%esp,%eax,1)
add    %al,0xa080482(%eax)
add    %al,(%eax)
add    %ah,0xb000006(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bh,(%eax)
xchg   %eax,%ebp
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
clc
xchg   %eax,%esp
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x8(%edi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x2e(%edi)
xchg   %eax,%edx
add    $0x8,%al
add    %al,(%eax)
cld
dec    %esi
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x59f7fb67(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    8064fe0 <_IO_stdin_used+0x725c>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    8065021 <_IO_stdin_used+0x729d>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    8065062 <_IO_stdin_used+0x72de>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    80650a3 <_IO_stdin_used+0x731f>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    80650e4 <_IO_stdin_used+0x7360>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
es
lahf
add    $0x8,%al
ss
lahf
add    $0x8,%al
inc    %esi
lahf
add    $0x8,%al
push   %esi
lahf
add    $0x8,%al
data16
lahf
add    $0x8,%al
jbe    8065125 <_IO_stdin_used+0x73a1>
add    $0x8,%al
xchg   %bl,-0x6069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lahf
add    $0x8,%al
mov    $0x9f,%dh
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
out    %al,$0x9f
add    $0x8,%al
negb   -0x5ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    0xa0260804,%al
add    $0x8,%al
mov    %ss:0xa0460804,%al
add    $0x8,%al
push   %esi
mov    0xa0660804,%al
add    $0x8,%al
jbe    8065166 <_IO_stdin_used+0x73e2>
add    $0x8,%al
xchg   %ah,-0x5f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa0b60804,%al
add    $0x8,%al
(bad)
mov    0xa0d60804,%al
add    $0x8,%al
out    %al,$0xa0
add    $0x8,%al
mulb   -0x5ef9f7fc(%eax)
add    $0x8,%al
push   %ss
mov    0xa1260804,%eax
add    $0x8,%al
mov    %ss:0xa1460804,%eax
add    $0x8,%al
push   %esi
mov    0xa1660804,%eax
add    $0x8,%al
jbe    80651a7 <_IO_stdin_used+0x7423>
add    $0x8,%al
xchg   %ah,-0x5e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa1b60804,%eax
add    $0x8,%al
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%ecx)
add    %dh,0x770805f7
testl  $0x0,0x108
00
add    %al,(%esi)
add    %al,(%eax)
add    %dh,0x6(%edx,%edx,2)
or     %al,(%eax)
add    %eax,(%eax)
add    %al,0x57(%eax)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
.byte 0x0
.byte 0xa0
sahf
.byte 0x5
.byte 0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
jbe    3 <_init-0x804994d>
add    %dl,%bh
fldl   (%esi)
.byte 0xbb
