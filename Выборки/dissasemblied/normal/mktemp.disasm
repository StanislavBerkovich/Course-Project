das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dl,0x44(%ecx)
add    $0x74,%al
ljmp   $0x18e7,$0x427c127
xor    (%edi),%al
movsb  %ds:(%esi),%es:(%edi)
add    %cl,0x706c30eb(%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax,%eax,2)
dec    %eax
add    %ah,0x47121d(,%ebp,2)
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
sub    %ebx,0x50bc1c8c
jbe    8048176 <freopen64@plt-0xc8a>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804818d <freopen64@plt-0xc73>
dec    %ebx
jecxz  80481a4 <freopen64@plt-0xc5c>
xchg   %eax,%esi
mov    0x62e59789,%al
inc    %ecx
cmc
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
mov    (%ecx),%es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,%fs:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  80483b8 <freopen64@plt-0xa48>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add (%eax),%al
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%ah
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    80484c8 <freopen64@plt-0x938>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %es,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edi)
add    %al,(%eax)
add    %ah,(%edx)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,%al
add    (%eax),%al
add    %ah,0x4080521(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %al,(%edx)
add    (%eax),%al
add    %ah,0x40805(%ecx,%eiz,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
roll   %cl,(%edx)
add    %al,(%eax)
shlb   $0x5,(%ecx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
(bad)
fldl   (%eax,%ecx,1)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
lldt   %sp
add    %al,(%eax)
add    %al,%al
and    %eax,0x408
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %dl,0x2(%ecx)
add    %al,(%eax)
mov    0x4080521,%al
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bl,0x0(%ebx)
add    %al,(%eax)
loopne 80486fb <freopen64@plt-0x705>
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,%al
add    %eax,(%eax)
add    %al,(%edx,%eiz,1)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    804876b <freopen64@plt-0x695>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048779 <freopen64@plt-0x687>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048786 <freopen64@plt-0x67a>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jb     8048781 <freopen64@plt-0x67f>
ja     804878f <freopen64@plt-0x671>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jo     804879e <freopen64@plt-0x662>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     80487a5 <freopen64@plt-0x65b>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     80487b7 <freopen64@plt-0x649>
outsl  %ds:(%esi),(%dx)
ja     80487a9 <freopen64@plt-0x657>
add    %dh,0x74(%ebx)
jb     80487b9 <freopen64@plt-0x647>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     80487bc <freopen64@plt-0x644>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     80487cc <freopen64@plt-0x634>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     80487d8 <freopen64@plt-0x628>
gs
js     80487db <freopen64@plt-0x625>
add    %ah,0x70(%esi)
jne    80487e0 <freopen64@plt-0x620>
arpl   %bx,0x75(%edi)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%ebp)
jb     80487ea <freopen64@plt-0x616>
jb     804877d <freopen64@plt-0x683>
pop    %edi
pop    %edi
jb     80487e6 <freopen64@plt-0x61a>
popa
fs
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x75(%eax)
je     80487ff <freopen64@plt-0x601>
add    %bl,0x5f(%edi)
jae    8048805 <freopen64@plt-0x5fb>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x646b6d00,0x74(%esi),%ebp
imul   $0x6c616572,0x0(%edx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     80487bb <freopen64@plt-0x645>
pop    %edi
gs
js     8048828 <freopen64@plt-0x5d8>
je     80487c1 <freopen64@plt-0x63f>
addr16
gs
je     8048835 <freopen64@plt-0x5cb>
imul   $0x72676f72,0x70(%eax,%eax,1),%esp
popa
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048858 <freopen64@plt-0x5a8>
gs
jb     804885c <freopen64@plt-0x5a4>
pop    %edi
popaw
imul   $0x7974635f,0x5f(%eax,%eax,1),%ebp
jo     804885a <freopen64@plt-0x5a6>
pop    %edi
addr16
gs
je     8048859 <freopen64@plt-0x5a7>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048872 <freopen64@plt-0x58e>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048805 <freopen64@plt-0x5fb>
addr16
gs
je     8048879 <freopen64@plt-0x587>
jo     8048874 <freopen64@plt-0x58c>
add    %ah,%fs:0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804888a <freopen64@plt-0x576>
jb     8048884 <freopen64@plt-0x57c>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048884 <freopen64@plt-0x57c>
add    %ah,0x72(%esi)
gs
popa
fs
pop    %edi
jne    8048898 <freopen64@plt-0x568>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    804889b <freopen64@plt-0x565>
je     8048838 <freopen64@plt-0x5c8>
pop    %edi
pop    %edi
gs
jb     80488af <freopen64@plt-0x551>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     80488b8 <freopen64@plt-0x548>
jo     80488d0 <freopen64@plt-0x530>
add    %ah,0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
jo     80488d4 <freopen64@plt-0x52c>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     80488d2 <freopen64@plt-0x52e>
outsl  %ds:(%esi),(%dx)
jne    80488e5 <freopen64@plt-0x51b>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x72(%esi)
outsl  %gs:(%esi),(%dx)
jo     80488ed <freopen64@plt-0x513>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
data16
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jb     8048901 <freopen64@plt-0x4ff>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048905 <freopen64@plt-0x4fb>
add    %ch,0x62(%ebp)
jae    804890e <freopen64@plt-0x4f2>
outsb  %ds:(%esi),(%dx)
imul   $0x69677465,0x67(%eax,%eax,1),%esi
add    %bl,%fs:0x5f(%edi)
insb   (%dx),%es:(%edi)
js     8048928 <freopen64@plt-0x4d8>
je     8048918 <freopen64@plt-0x4e8>
je     80488ef <freopen64@plt-0x511>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8048925 <freopen64@plt-0x4db>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80488c3 <freopen64@plt-0x53d>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048946 <freopen64@plt-0x4ba>
outsb  %ds:(%esi),(%dx)
jbe    80488e4 <freopen64@plt-0x51c>
outsl  %ds:(%esi),(%dx)
jo     804895b <freopen64@plt-0x4a5>
popa
jb     8048951 <freopen64@plt-0x4af>
add    %bl,0x5f(%edi)
data16
jb     8048955 <freopen64@plt-0x4ab>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     804896e <freopen64@plt-0x492>
add    %ah,0x65(%edi)
je     8048976 <freopen64@plt-0x48a>
imul   $0x6e616373,0x66(%eax,%eax,1),%esp
data16
add    %ah,0x65(%edi)
je     804897e <freopen64@plt-0x482>
jo     8048985 <freopen64@plt-0x47b>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x77(%esi)
jb     804898b <freopen64@plt-0x475>
je     8048989 <freopen64@plt-0x477>
add    %ah,0x65(%edi)
je     804899d <freopen64@plt-0x463>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    8048932 <freopen64@plt-0x4ce>
pop    %edi
pop    %edi
data16
jo     804899c <freopen64@plt-0x464>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 80489ac <freopen64@plt-0x454>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     80489d1 <freopen64@plt-0x42f>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     80489cd <freopen64@plt-0x433>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%ebx)
je     80489e4 <freopen64@plt-0x41c>
bound  %esi,0x66(%ebp)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     80489e3 <freopen64@plt-0x41d>
add    %ah,0x6f(%esi)
jo     80489e1 <freopen64@plt-0x41f>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     80489eb <freopen64@plt-0x415>
js     80489fc <freopen64@plt-0x404>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x63727473,0x0(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     8048996 <freopen64@plt-0x46a>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048a16 <freopen64@plt-0x3ea>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x74757066,0x0(%esi),%ebp
jae    8048a0d <freopen64@plt-0x3f3>
jne    8048a1e <freopen64@plt-0x3e2>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     8048a32 <freopen64@plt-0x3ce>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048a3d <freopen64@plt-0x3c3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8048a41 <freopen64@plt-0x3bf>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048a45 <freopen64@plt-0x3bb>
js     8048a4b <freopen64@plt-0x3b5>
je     80489e4 <freopen64@plt-0x41c>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048a61 <freopen64@plt-0x39f>
popa
jb     8048a64 <freopen64@plt-0x39c>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000000
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
pop    %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
incl   (%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8048b1b <freopen64@plt-0x2e5>
imul   $0x70000,(%ecx),%ecx
or     %eax,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8048b31 <freopen64@plt-0x2cf>
imul   $0x60000,(%ecx),%ecx
adc    $0x10000003,%eax
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x50000,0xd(%ecx),%ebp
and    %eax,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x32b,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
xor    $0x10000003,%eax
add    %al,(%eax)
add    %dl,(%ecx)
imul   $0x20000,0xd(%ecx),%ebp
aas
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
cld
pop    %ds
add    $0x240608,%eax
add    %ah,0x5080521(%eax)
dec    %eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %eax,0x490508
add    %al,%al
and    %eax,0x4a0508
add    %ah,%al
and    %eax,0x4e0508
add    %al,(%eax)
and    0x470508,%al
add    %al,(%edx,%eiz,1)
add    $0x4f0508,%eax
or     $0x20,%al
add    $0x10708,%eax
add    %dl,(%eax)
and    %al,0x20708
add    %dl,(%eax,%eiz,1)
add    $0x30708,%eax
add    %bl,(%eax)
and    %al,0x40708
add    %bl,(%eax,%eiz,1)
add    $0x50708,%eax
add    %ah,(%eax)
and    %al,0x60708
add    %ah,(%eax,%eiz,1)
add    $0x70708,%eax
add    %ch,(%eax)
and    %al,0x80708
add    %ch,(%eax,%eiz,1)
add    $0x90708,%eax
add    %dh,(%eax)
and    %al,0xa0708
add    %dh,(%eax,%eiz,1)
add    $0xb0708,%eax
add    %bh,(%eax)
and    %al,0xc0708
add    %bh,(%eax,%eiz,1)
add    $0xd0708,%eax
add    %al,0x20(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%eiz,1)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
and    %al,0x100708
add    %cl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x20(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x20(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    $0x20600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%eiz,1)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080520
sbb    %al,(%eax)
add    %ch,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x20(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x20(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    $0x20800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%eiz,1)
add    %al,(%eax)
mov    %ah,(%eax)
add    $0x200708,%eax
add    %cl,0x21070805(%eax,%eiz,1)
add    %al,(%eax)
nop
and    %al,0x220708
add    %dl,0x23070805(%eax,%eiz,1)
add    %al,(%eax)
cwtl
and    %al,0x240708
add    %bl,0x25070805(%eax,%eiz,1)
add    %al,(%eax)
mov    0x7080520,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %al,0x270708
add    %ch,0x7080520(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%eiz,1)
add    %al,(%eax)
mov    $0x20,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%eiz,1)
add    %al,(%eax)
mov    $0x7080520,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%eiz,1)
add    %al,(%eax)
shlb   $0x5,(%eax)
or     %al,(%edi)
add    %al,%cs:(%eax)
les    (%eax),%esp
add    $0x2f0708,%eax
add    %cl,%al
and    %al,0x300708
add    %cl,%ah
and    %al,0x310708
add    %dl,%al
and    %al,0x320708
add    %dl,%ah
and    %al,0x330708
add    %bl,%al
and    %al,0x340708
add    %bl,%ah
and    %al,0x350708
add    %ah,%al
and    %al,0x360708
add    %ah,%ah
and    %al,0x370708
add    %ch,%al
and    %al,0x380708
add    %ch,%ah
and    %al,0x390708
add    %dh,%al
and    %al,0x3a0708
add    %dh,%ah
and    %al,0x3b0708
add    %bh,%al
and    %al,0x3c0708
add    %bh,%ah
and    %al,0x3d0708
add    %al,(%eax)
and    %eax,0x3e0708
add    %al,(%ecx,%eiz,1)
add    $0x3f0708,%eax
add    %cl,(%eax)
and    %eax,0x400708
add    %cl,(%ecx,%eiz,1)
add    $0x410708,%eax
add    %dl,(%eax)
and    %eax,0x420708
add    %dl,(%ecx,%eiz,1)
add    $0x430708,%eax
add    %bl,(%eax)
and    %eax,0x440708
add    %bl,(%ecx,%eiz,1)
add    $0x450708,%eax
add    %ah,(%eax)
and    %eax,0x460708
push   %ebx
sub    $0x8,%esp
call   80499b0 <calloc@plt+0x760>
add    $0x922f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048de6 <freopen64@plt-0x1a>
call   8049030 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8052004
jmp    *0x8052008
add    %al,(%eax)
jmp    *0x805200c
push   $0x0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052010
push   $0x8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052014
push   $0x10
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052018
push   $0x18
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805201c
push   $0x20
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052020
push   $0x28
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052024
push   $0x30
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052028
push   $0x38
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805202c
push   $0x40
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052030
push   $0x48
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052034
push   $0x50
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052038
push   $0x58
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805203c
push   $0x60
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052040
push   $0x68
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052044
push   $0x70
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052048
push   $0x78
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805204c
push   $0x80
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052050
push   $0x88
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052054
push   $0x90
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052058
push   $0x98
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805205c
push   $0xa0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052060
push   $0xa8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052064
push   $0xb0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052068
push   $0xb8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805206c
push   $0xc0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052070
push   $0xc8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052074
push   $0xd0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052078
push   $0xd8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805207c
push   $0xe0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052080
push   $0xe8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052084
push   $0xf0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052088
push   $0xf8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805208c
push   $0x100
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052090
push   $0x108
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052094
push   $0x110
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052098
push   $0x118
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805209c
push   $0x120
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520a0
push   $0x128
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520a4
push   $0x130
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520a8
push   $0x138
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520ac
push   $0x140
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520b0
push   $0x148
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520b4
push   $0x150
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520b8
push   $0x158
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520bc
push   $0x160
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520c0
push   $0x168
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520c4
push   $0x170
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520c8
push   $0x178
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520cc
push   $0x180
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520d0
push   $0x188
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520d4
push   $0x190
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520d8
push   $0x198
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520dc
push   $0x1a0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520e0
push   $0x1a8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520e4
push   $0x1b0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520e8
push   $0x1b8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520ec
push   $0x1c0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520f0
push   $0x1c8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520f4
push   $0x1d0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520f8
push   $0x1d8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x80520fc
push   $0x1e0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052100
push   $0x1e8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052104
push   $0x1f0
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052108
push   $0x1f8
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805210c
push   $0x200
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052110
push   $0x208
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052114
push   $0x210
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052118
push   $0x218
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x805211c
push   $0x220
jmp    8048df0 <freopen64@plt-0x10>
jmp    *0x8052120
push   $0x228
jmp    8048df0 <freopen64@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x40,%esp
mov    0xc(%ebp),%ebx
mov    0x8(%ebp),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a380 <calloc@plt+0x1130>
movl   $0x804ec18,0x4(%esp)
movl   $0x6,(%esp)
call   8049180 <setlocale@plt>
movl   $0x804e631,0x4(%esp)
movl   $0x804e60f,(%esp)
call   80491e0 <bindtextdomain@plt>
movl   $0x804e60f,(%esp)
call   8048f20 <textdomain@plt>
movl   $0x8049a80,(%esp)
call   804dd70 <calloc@plt+0x4b20>
movb   $0x0,0x3e(%esp)
movb   $0x0,0x3d(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x0,0x3f(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x10(%esp)
movl   $0x804e700,0xc(%esp)
movl   $0x804e662,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049070 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     80493fa <calloc@plt+0x1aa>
cmp    $0x70,%eax
je     804937a <calloc@plt+0x12a>
jle    8049340 <calloc@plt+0xf0>
cmp    $0x75,%eax
je     8049450 <calloc@plt+0x200>
nop
jg     8049368 <calloc@plt+0x118>
cmp    $0x71,%eax
je     804938d <calloc@plt+0x13d>
cmp    $0x74,%eax
jne    8049444 <calloc@plt+0x1f4>
movb   $0x1,0x3c(%esp)
movb   $0x1,0x3f(%esp)
jmp    80492e2 <calloc@plt+0x92>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffff7e,%eax
je     804945a <calloc@plt+0x20a>
jle    80493a5 <calloc@plt+0x155>
cmp    $0x56,%eax
je     80493b0 <calloc@plt+0x160>
cmp    $0x64,%eax
jne    8049444 <calloc@plt+0x1f4>
movb   $0x1,0x3d(%esp)
jmp    80492e2 <calloc@plt+0x92>
lea    0x0(%esi),%esi
cmp    $0x80,%eax
je     8049397 <calloc@plt+0x147>
cmp    $0x81,%eax
jne    8049444 <calloc@plt+0x1f4>
mov    0x8052204,%eax
movb   $0x1,0x3f(%esp)
mov    %eax,0x38(%esp)
jmp    80492e2 <calloc@plt+0x92>
mov    $0x1,%edi
jmp    80492e2 <calloc@plt+0x92>
mov    0x8052204,%eax
mov    %eax,0x34(%esp)
jmp    80492e2 <calloc@plt+0x92>
cmp    $0xffffff7d,%eax
jne    8049444 <calloc@plt+0x1f4>
mov    0x8052148,%eax
movl   $0x0,0x18(%esp)
movl   $0x804e643,0x14(%esp)
movl   $0x804e64e,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x8052200,%eax
movl   $0x804e60b,0x8(%esp)
movl   $0x804e65b,0x4(%esp)
mov    %eax,(%esp)
call   804c170 <calloc@plt+0x2f20>
movl   $0x0,(%esp)
call   8049040 <exit@plt>
mov    %edi,%eax
test   %al,%al
jne    8049721 <calloc@plt+0x4d1>
mov    0x80521e0,%eax
sub    %eax,%esi
cmp    $0x1,%esi
jbe    8049466 <calloc@plt+0x216>
movl   $0x5,0x8(%esp)
movl   $0x804e677,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048fc0 <error@plt>
movl   $0x1,(%esp)
call   8049ac0 <calloc@plt+0x870>
movb   $0x1,0x3e(%esp)
jmp    80492e2 <calloc@plt+0x92>
movl   $0x0,(%esp)
call   8049ac0 <calloc@plt+0x870>
test   %esi,%esi
je     8049784 <calloc@plt+0x534>
mov    (%ebx,%eax,4),%edx
cmpl   $0x0,0x34(%esp)
je     8049912 <calloc@plt+0x6c2>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
not    %ecx
sub    $0x1,%ecx
mov    %ecx,%esi
je     8049495 <calloc@plt+0x245>
cmpb   $0x58,-0x1(%edx,%ecx,1)
je     80494df <calloc@plt+0x28f>
mov    %edx,(%esp)
mov    %edx,0x30(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e4ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048ef0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048fc0 <error@plt>
mov    0x30(%esp),%edx
mov    0x34(%esp),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,0x28(%esp)
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%ecx),%eax
mov    %eax,0x30(%esp)
lea    0x1(%eax,%esi,1),%eax
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
call   804c260 <calloc@plt+0x3010>
mov    0x28(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8048e80 <memcpy@plt>
mov    0x2c(%esp),%ecx
add    %ebx,%esi
mov    0x34(%esp),%edi
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
call   8048e80 <memcpy@plt>
cmpl   $0x0,0x30(%esp)
je     804958c <calloc@plt+0x33c>
mov    %esi,(%esp)
call   8049fd0 <calloc@plt+0xd80>
cmp    %esi,%eax
je     804958c <calloc@plt+0x33c>
mov    %esi,(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e4d8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8048ef0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048fc0 <error@plt>
sub    %ebx,%esi
xor    %edi,%edi
lea    (%ebx,%esi,1),%edx
jmp    80495a3 <calloc@plt+0x353>
mov    %edi,%eax
neg    %eax
cmpb   $0x58,-0x1(%edx,%eax,1)
jne    80495a7 <calloc@plt+0x357>
add    $0x1,%edi
cmp    %edi,%esi
jne    8049595 <calloc@plt+0x345>
cmp    $0x2,%edi
jbe    80497d7 <calloc@plt+0x587>
cmpb   $0x0,0x3f(%esp)
je     8049621 <calloc@plt+0x3d1>
cmpb   $0x0,0x3c(%esp)
jne    804986f <calloc@plt+0x61f>
mov    0x38(%esp),%eax
test   %eax,%eax
je     80495cf <calloc@plt+0x37f>
cmpb   $0x0,(%eax)
jne    80495f4 <calloc@plt+0x3a4>
movl   $0x804e6a5,(%esp)
call   8048fe0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ecx
je     8049969 <calloc@plt+0x719>
cmpb   $0x0,(%eax)
mov    $0x804e62c,%eax
cmovne %ecx,%eax
mov    %eax,0x38(%esp)
cmpb   $0x2f,(%ebx)
je     804994a <calloc@plt+0x6fa>
mov    0x38(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804a070 <calloc@plt+0xe20>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8048e70 <free@plt>
mov    %esi,%ebx
mov    %ebx,(%esp)
call   804c4a0 <calloc@plt+0x3250>
cmpb   $0x0,0x3d(%esp)
mov    %eax,%esi
je     8049793 <calloc@plt+0x543>
cmpb   $0x1,0x3e(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0x8(%esp)
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804b8b0 <calloc@plt+0x2660>
test   %eax,%eax
jne    804981e <calloc@plt+0x5ce>
mov    %esi,(%esp)
call   8049010 <puts@plt>
cmpb   $0x0,0x3e(%esp)
je     80496c5 <calloc@plt+0x475>
xor    %eax,%eax
mov    %eax,(%esp)
call   8049040 <exit@plt>
mov    0x30(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804b8b0 <calloc@plt+0x2660>
test   %eax,%eax
js     80498f3 <calloc@plt+0x6a3>
mov    %eax,(%esp)
call   8049220 <close@plt>
test   %eax,%eax
jne    80498f3 <calloc@plt+0x6a3>
mov    %esi,(%esp)
call   8049010 <puts@plt>
mov    0x8052200,%eax
movb   $0x1,0x8052209
mov    %eax,(%esp)
call   8049e60 <calloc@plt+0xc10>
test   %eax,%eax
je     8049677 <calloc@plt+0x427>
call   8049110 <__errno_location@plt>
mov    (%eax),%ebx
mov    %esi,(%esp)
call   80491a0 <remove@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e6ac,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048fc0 <error@plt>
jmp    8049677 <calloc@plt+0x427>
mov    0x80521a4,%eax
movl   $0x804e66a,0x4(%esp)
movl   $0x804e66d,(%esp)
mov    %eax,0x8(%esp)
call   804a1e0 <calloc@plt+0xf90>
test   %eax,%eax
jne    8049404 <calloc@plt+0x1b4>
movl   $0x5,0x8(%esp)
movl   $0x804e484,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %eax,%edi
call   8049110 <__errno_location@plt>
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048fc0 <error@plt>
jmp    8049404 <calloc@plt+0x1b4>
movb   $0x1,0x3f(%esp)
mov    $0x804e61d,%edx
jmp    8049471 <calloc@plt+0x221>
cmpb   $0x0,0x3e(%esp)
je     8049681 <calloc@plt+0x431>
mov    0x30(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x2,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804b8b0 <calloc@plt+0x2660>
test   %eax,%eax
js     80498f3 <calloc@plt+0x6a3>
mov    %esi,(%esp)
call   8049010 <puts@plt>
jmp    8049677 <calloc@plt+0x427>
mov    %ebx,(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e68a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048ef0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048fc0 <error@plt>
jmp    80495b0 <calloc@plt+0x360>
mov    %ebx,(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e578,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %eax,%ebx
call   8049110 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048fc0 <error@plt>
mov    $0x1,%eax
jmp    8049679 <calloc@plt+0x429>
movl   $0x804e6a5,(%esp)
call   8048fe0 <getenv@plt>
test   %eax,%eax
je     80498df <calloc@plt+0x68f>
cmpb   $0x0,(%eax)
je     80498df <calloc@plt+0x68f>
mov    %eax,0x38(%esp)
mov    %ebx,(%esp)
call   8049fd0 <calloc@plt+0xd80>
cmp    %ebx,%eax
je     80495fd <calloc@plt+0x3ad>
mov    %ebx,(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e508,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048fc0 <error@plt>
jmp    80495fd <calloc@plt+0x3ad>
mov    0x38(%esp),%ecx
mov    $0x804e62c,%eax
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %eax,0x38(%esp)
jmp    8049888 <calloc@plt+0x638>
mov    %ebx,(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e5a4,0x4(%esp)
mov    %eax,%esi
jmp    8049838 <calloc@plt+0x5e8>
mov    %edx,(%esp)
call   804c4a0 <calloc@plt+0x3250>
movl   $0x58,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8049190 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%esi
je     8049976 <calloc@plt+0x726>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %esi,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%ecx),%eax
mov    %eax,0x30(%esp)
jmp    8049537 <calloc@plt+0x2e7>
mov    %ebx,(%esp)
call   804b890 <calloc@plt+0x2640>
movl   $0x5,0x8(%esp)
movl   $0x804e53c,0x4(%esp)
mov    %eax,%esi
jmp    80498b2 <calloc@plt+0x662>
movl   $0x804e62c,0x38(%esp)
jmp    80495f4 <calloc@plt+0x3a4>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049160 <__rawmemchr@plt>
mov    %eax,%esi
jmp    8049933 <calloc@plt+0x6e3>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804dd60
push   $0x804dcf0
push   %ecx
push   %esi
push   $0x8049260
call   80490a0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80521a3,%eax
sub    $0x80521a0,%eax
cmp    $0x6,%eax
ja     80499d0 <calloc@plt+0x780>
ret
mov    $0x0,%eax
test   %eax,%eax
je     80499cf <calloc@plt+0x77f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80521a0,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80521a0,%eax
sub    $0x80521a0,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049a09 <calloc@plt+0x7b9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049a08 <calloc@plt+0x7b8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80521a0,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8052208
jne    8049a4c <calloc@plt+0x7fc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   80499c0 <calloc@plt+0x770>
movb   $0x1,0x8052208
leave
repz ret
xchg   %ax,%ax
mov    0x8051f10,%eax
test   %eax,%eax
je     8049a78 <calloc@plt+0x828>
mov    $0x0,%eax
test   %eax,%eax
je     8049a78 <calloc@plt+0x828>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8051f10,(%esp)
call   *%eax
leave
jmp    80499f0 <calloc@plt+0x7a0>
nop
jmp    80499f0 <calloc@plt+0x7a0>
xchg   %ax,%ax
nop
cmpb   $0x0,0x8052209
je     8049aa8 <calloc@plt+0x858>
sub    $0x1c,%esp
mov    0x80521a4,%eax
mov    %eax,(%esp)
call   8049e60 <calloc@plt+0xc10>
test   %eax,%eax
jne    8049aad <calloc@plt+0x85d>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
jmp    8049f00 <calloc@plt+0xcb0>
movl   $0x1,(%esp)
call   8048e60 <_exit@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8052214,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     8049b14 <calloc@plt+0x8c4>
movl   $0x804ddc8,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80521a4,%eax
mov    %eax,(%esp)
call   80491d0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049040 <exit@plt>
movl   $0x804ddf0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804de14,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804dee8,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <fputc_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804df34,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e000,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e09c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <fputc_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e204,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <fputc_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e328,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e358,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
mov    0x8052214,%eax
mov    %eax,(%esp)
call   8049fd0 <calloc@plt+0xd80>
movl   $0x5,0x8(%esp)
movl   $0x804e5ca,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048ef0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x804e5e1,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e5f7,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
movl   $0x804e390,0xc(%esp)
movl   $0x804e60b,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
mov    0x8052200,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e3b8,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8049180 <setlocale@plt>
test   %eax,%eax
je     8049dd0 <calloc@plt+0xb80>
movl   $0x3,0x8(%esp)
movl   $0x804e619,0x4(%esp)
mov    %eax,(%esp)
call   80491f0 <strncmp@plt>
test   %eax,%eax
jne    8049e14 <calloc@plt+0xbc4>
mov    0x8052214,%eax
mov    %eax,(%esp)
call   8049fd0 <calloc@plt+0xd80>
movl   $0x5,0x8(%esp)
movl   $0x804e440,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048ef0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
jmp    8049b0c <calloc@plt+0x8bc>
mov    0x8052214,%eax
mov    %eax,(%esp)
call   8049fd0 <calloc@plt+0xd80>
movl   $0x5,0x8(%esp)
movl   $0x804e3f8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048ef0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
jmp    8049dd0 <calloc@plt+0xb80>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8048f80 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804c520 <calloc@plt+0x32d0>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    8049ea0 <calloc@plt+0xc50>
test   %dl,%dl
je     8049e97 <calloc@plt+0xc47>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     8049ec0 <calloc@plt+0xc70>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    8049e97 <calloc@plt+0xc47>
call   8049110 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049110 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    %eax,0x8052210
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x805220c
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8052200,%eax
mov    %eax,(%esp)
call   8049e60 <calloc@plt+0xc10>
test   %eax,%eax
je     8049f29 <calloc@plt+0xcd9>
cmpb   $0x0,0x805220c
je     8049f40 <calloc@plt+0xcf0>
call   8049110 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8049f40 <calloc@plt+0xcf0>
mov    0x80521a4,%eax
mov    %eax,(%esp)
call   8049e60 <calloc@plt+0xc10>
test   %eax,%eax
jne    8049f98 <calloc@plt+0xd48>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x804e6ac,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8052210,%eax
test   %eax,%eax
je     8049fa5 <calloc@plt+0xd55>
mov    %eax,(%esp)
call   804b660 <calloc@plt+0x2410>
mov    %eax,%esi
call   8049110 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x804e785,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048fc0 <error@plt>
mov    0x805214c,%eax
mov    %eax,(%esp)
call   8048e60 <_exit@plt>
call   8049110 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x804e789,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048fc0 <error@plt>
jmp    8049f98 <calloc@plt+0xd48>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    8049feb <calloc@plt+0xd9b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8049fe0 <calloc@plt+0xd90>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     804a019 <calloc@plt+0xdc9>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     804a019 <calloc@plt+0xdc9>
cmp    $0x2f,%cl
je     804a020 <calloc@plt+0xdd0>
test   %bl,%bl
je     8049ff8 <calloc@plt+0xda8>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    804a002 <calloc@plt+0xdb2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8049ff8 <calloc@plt+0xda8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049090 <strlen@plt>
cmp    $0x1,%eax
jbe    804a04f <calloc@plt+0xdff>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     804a058 <calloc@plt+0xe08>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    804a045 <calloc@plt+0xdf5>
nop
jmp    804a04f <calloc@plt+0xdff>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a0a0 <calloc@plt+0xe50>
test   %eax,%eax
je     804a097 <calloc@plt+0xe47>
add    $0x1c,%esp
ret
call   804c4d0 <calloc@plt+0x3280>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049fd0 <calloc@plt+0xd80>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a030 <calloc@plt+0xde0>
mov    %ebx,%ebp
sub    0x30(%esp),%ebp
add    %eax,%ebp
test   %eax,%eax
je     804a0d8 <calloc@plt+0xe88>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x34(%esp),%edi
cmpb   $0x2f,(%edi)
je     804a160 <calloc@plt+0xf10>
mov    %edi,(%esp)
call   8049090 <strlen@plt>
mov    %eax,%edx
mov    %eax,0xc(%esp)
lea    0x1(%ebp,%esi,1),%eax
add    %edx,%eax
mov    %eax,(%esp)
call   8049000 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a180 <calloc@plt+0xf30>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049140 <mempcpy@plt>
add    %eax,%esi
movb   $0x2f,(%eax)
mov    0x38(%esp),%eax
test   %eax,%eax
je     804a13d <calloc@plt+0xeed>
mov    0x34(%esp),%eax
mov    %esi,%ecx
cmpb   $0x2f,(%eax)
sete   %al
movzbl %al,%eax
sub    %eax,%ecx
mov    %ecx,%eax
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049140 <mempcpy@plt>
movb   $0x0,(%eax)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    804a0e1 <calloc@plt+0xe91>
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    804a0e1 <calloc@plt+0xe91>
jmp    804a160 <calloc@plt+0xf10>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804a156 <calloc@plt+0xf06>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x0,0x4(%esp)
movl   $0x804e66d,(%esp)
call   8048e30 <open64@plt>
cmp    %eax,%ebx
je     804a1d0 <calloc@plt+0xf80>
xor    %ebx,%ebx
test   %eax,%eax
js     804a1c7 <calloc@plt+0xf77>
mov    %eax,(%esp)
call   8049220 <close@plt>
call   8049110 <__errno_location@plt>
movl   $0x9,(%eax)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
mov    $0x1,%ebx
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    %ebx,(%esp)
call   8049120 <fileno@plt>
cmp    $0x1,%eax
je     804a370 <calloc@plt+0x1120>
cmp    $0x2,%eax
je     804a368 <calloc@plt+0x1118>
test   %eax,%eax
je     804a2e0 <calloc@plt+0x1090>
movl   $0x2,0x4(%esp)
movl   $0x2,(%esp)
call   8048e10 <dup2@plt>
cmp    $0x2,%eax
setne  %al
mov    %eax,%esi
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   8048e10 <dup2@plt>
cmp    $0x1,%eax
setne  %al
mov    %eax,%edi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e10 <dup2@plt>
test   %eax,%eax
je     804a2e4 <calloc@plt+0x1094>
xor    %eax,%eax
call   804a190 <calloc@plt+0xf40>
movb   $0x1,0x1b(%esp)
test   %al,%al
je     804a301 <calloc@plt+0x10b1>
mov    %edi,%eax
test   %al,%al
jne    804a2ef <calloc@plt+0x109f>
mov    %esi,%eax
test   %al,%al
je     804a293 <calloc@plt+0x1043>
mov    $0x2,%eax
call   804a190 <calloc@plt+0xf40>
test   %al,%al
je     804a340 <calloc@plt+0x10f0>
mov    0x44(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8048e00 <freopen64@plt>
mov    %eax,%ebx
call   8049110 <__errno_location@plt>
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    %esi,%eax
test   %al,%al
jne    804a350 <calloc@plt+0x1100>
mov    %edi,%eax
test   %al,%al
jne    804a330 <calloc@plt+0x10e0>
cmpb   $0x0,0x1b(%esp)
jne    804a308 <calloc@plt+0x10b8>
test   %ebx,%ebx
je     804a318 <calloc@plt+0x10c8>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %esi,%esi
xor    %edi,%edi
mov    %edi,%eax
test   %al,%al
movb   $0x0,0x1b(%esp)
je     804a27b <calloc@plt+0x102b>
mov    $0x1,%eax
call   804a190 <calloc@plt+0xf40>
test   %al,%al
jne    804a27b <calloc@plt+0x102b>
xor    %ebx,%ebx
jmp    804a2ad <calloc@plt+0x105d>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   8049220 <close@plt>
test   %ebx,%ebx
jne    804a2d5 <calloc@plt+0x1085>
mov    0x1c(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8049220 <close@plt>
jmp    804a2ca <calloc@plt+0x107a>
xchg   %ax,%ax
call   8049110 <__errno_location@plt>
xor    %ebx,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
nop
movl   $0x2,(%esp)
call   8049220 <close@plt>
jmp    804a2c4 <calloc@plt+0x1074>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    804a229 <calloc@plt+0xfd9>
nop
xor    %esi,%esi
xor    %edi,%edi
jmp    804a245 <calloc@plt+0xff5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804a403 <calloc@plt+0x11b3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049190 <strrchr@plt>
test   %eax,%eax
je     804a3ef <calloc@plt+0x119f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804a3ef <calloc@plt+0x119f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x804e7c4,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804a3ef <calloc@plt+0x119f>
mov    $0x3,%ecx
mov    $0x804e7cc,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804a3ef <calloc@plt+0x119f>
lea    0x4(%eax),%ebx
mov    %ebx,0x80521a0
mov    %ebx,0x8052214
mov    %ebx,0x80521c0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80521a4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804e78c,(%esp)
mov    %eax,0xc(%esp)
call   8048f50 <fwrite@plt>
call   8049200 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     804a451 <calloc@plt+0x1201>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8049200 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     804a490 <calloc@plt+0x1240>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804c6b0 <calloc@plt+0x3460>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    804a4f8 <calloc@plt+0x12a8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    804a4e0 <calloc@plt+0x1290>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x2d,0x3(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x38,0x4(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x0,0x5(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x60,(%esi)
mov    $0x804e7df,%eax
mov    $0x804e7d0,%edx
cmovne %edx,%eax
jmp    804a488 <calloc@plt+0x1238>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804e7d9,%eax
cmp    $0x7,%edi
mov    $0x804e7d7,%edx
cmovne %edx,%eax
jmp    804a488 <calloc@plt+0x1238>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    804a4e0 <calloc@plt+0x1290>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x31,0x2(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x38,0x3(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x30,0x4(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x33,0x5(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x30,0x6(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x0,0x7(%eax)
jne    804a4e0 <calloc@plt+0x1290>
cmpb   $0x60,(%esi)
mov    $0x804e7db,%eax
mov    $0x804e7d4,%edx
cmovne %edx,%eax
jmp    804a488 <calloc@plt+0x1238>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8048f60 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804ae28 <calloc@plt+0x1bd8>
mov    0x94(%esp),%eax
jmp    *0x804e820(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804ac30 <calloc@plt+0x19e0>
test   %al,%al
je     804ac43 <calloc@plt+0x19f3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804ac18 <calloc@plt+0x19c8>
cmpb   $0x0,0x58(%esp)
je     804ac18 <calloc@plt+0x19c8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804ac18 <calloc@plt+0x19c8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8048ec0 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804acb0 <calloc@plt+0x1a60>
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804a9c8 <calloc@plt+0x1778>
movzbl %bl,%eax
jmp    *0x804e844(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     804a808 <calloc@plt+0x15b8>
cmpl   $0x3,0x94(%esp)
jne    804a768 <calloc@plt+0x1518>
testb  $0x4,0x98(%esp)
je     804a768 <calloc@plt+0x1518>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    804a768 <calloc@plt+0x1518>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    804a768 <calloc@plt+0x1518>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     804a768 <calloc@plt+0x1518>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     804a768 <calloc@plt+0x1518>
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
cmp    %edi,%ebp
jae    804a72e <calloc@plt+0x14de>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804a73e <calloc@plt+0x14ee>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a74e <calloc@plt+0x14fe>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    804a75e <calloc@plt+0x150e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     804a776 <calloc@plt+0x1526>
cmpb   $0x0,0x5a(%esp)
jne    804a79b <calloc@plt+0x154b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     804a79b <calloc@plt+0x154b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    804a7a2 <calloc@plt+0x1552>
cmpb   $0x0,0x24(%esp)
je     804a7b8 <calloc@plt+0x1568>
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
cmp    %edi,%ebp
jae    804a7b5 <calloc@plt+0x1565>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    804a7c6 <calloc@plt+0x1576>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    804a608 <calloc@plt+0x13b8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804ae18 <calloc@plt+0x1bc8>
test   %al,%al
jne    804a768 <calloc@plt+0x1518>
test   %esi,%esi
jne    804a768 <calloc@plt+0x1518>
cmpl   $0x2,0x94(%esp)
jne    804a768 <calloc@plt+0x1518>
nop
cmpb   $0x0,0x2f(%esp)
je     804a768 <calloc@plt+0x1518>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804a550 <calloc@plt+0x1300>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804af42 <calloc@plt+0x1cf2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804ae8b <calloc@plt+0x1c3b>
cmpb   $0x0,0x58(%esp)
je     804a768 <calloc@plt+0x1518>
mov    %eax,%ebx
jmp    804a7a2 <calloc@plt+0x1552>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    804a893 <calloc@plt+0x1643>
nop
mov    $0x66,%eax
jmp    804a893 <calloc@plt+0x1643>
nop
mov    $0x76,%eax
jmp    804a893 <calloc@plt+0x1643>
nop
mov    $0x6e,%eax
jmp    804a885 <calloc@plt+0x1635>
nop
mov    $0x74,%eax
jmp    804a885 <calloc@plt+0x1635>
nop
cmpb   $0x0,0x58(%esp)
je     804ae00 <calloc@plt+0x1bb0>
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
cmp    %edi,%ebp
jae    804a8f2 <calloc@plt+0x16a2>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    804a938 <calloc@plt+0x16e8>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804a938 <calloc@plt+0x16e8>
cmp    %eax,%edi
ja     804aea0 <calloc@plt+0x1c50>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a92e <calloc@plt+0x16de>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    804a776 <calloc@plt+0x1526>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    804a893 <calloc@plt+0x1643>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804a96e <calloc@plt+0x171e>
cmpb   $0x0,0x2f(%esp)
je     804a96e <calloc@plt+0x171e>
test   %dl,%dl
jne    804a7b8 <calloc@plt+0x1568>
mov    %ebx,%eax
jmp    804a885 <calloc@plt+0x1635>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    804a768 <calloc@plt+0x1518>
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
cmp    %edi,%ebp
jae    804a99d <calloc@plt+0x174d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804a9ad <calloc@plt+0x175d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a9bd <calloc@plt+0x176d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    804a768 <calloc@plt+0x1518>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804acc0 <calloc@plt+0x1a70>
call   8049240 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     804a768 <calloc@plt+0x1518>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804aa74 <calloc@plt+0x1824>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
cmp    %edi,%ebp
jae    804aa23 <calloc@plt+0x17d3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804aa36 <calloc@plt+0x17e6>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804aa4c <calloc@plt+0x17fc>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    804a7bb <calloc@plt+0x156b>
cmp    %edi,%ebp
jae    804aa69 <calloc@plt+0x1819>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804aa10 <calloc@plt+0x17c0>
cmpb   $0x0,0x24(%esp)
je     804aa55 <calloc@plt+0x1805>
cmp    %edi,%ebp
jae    804aa87 <calloc@plt+0x1837>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804aa55 <calloc@plt+0x1805>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804af47 <calloc@plt+0x1cf7>
test   %edi,%edi
je     804ae4d <calloc@plt+0x1bfd>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e7d9,0x3c(%esp)
movb   $0x22,(%eax)
jmp    804a5e8 <calloc@plt+0x1398>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e7d9,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    804a5e8 <calloc@plt+0x1398>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    804a5e8 <calloc@plt+0x1398>
lea    0x0(%esi,%eiz,1),%esi
je     804ab5c <calloc@plt+0x190c>
mov    0x94(%esp),%edx
mov    $0x804e7e3,%eax
call   804a460 <calloc@plt+0x1210>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x804e7d7,%eax
call   804a460 <calloc@plt+0x1210>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804ab8a <calloc@plt+0x193a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804ab8a <calloc@plt+0x193a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804ab7f <calloc@plt+0x192f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804ab78 <calloc@plt+0x1928>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8049090 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    804a5e8 <calloc@plt+0x1398>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e7d7,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    804a5e8 <calloc@plt+0x1398>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804af63 <calloc@plt+0x1d13>
test   %edi,%edi
je     804ae6c <calloc@plt+0x1c1c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e7d7,0x3c(%esp)
movb   $0x27,(%eax)
jmp    804a5e8 <calloc@plt+0x1398>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    804a6a0 <calloc@plt+0x1450>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    804a628 <calloc@plt+0x13d8>
test   %ebp,%ebp
jne    804ac5c <calloc@plt+0x1a0c>
cmpl   $0x2,0x94(%esp)
jne    804ac5c <calloc@plt+0x1a0c>
cmpb   $0x0,0x2f(%esp)
jne    804a818 <calloc@plt+0x15c8>
cmpb   $0x0,0x2f(%esp)
jne    804ac92 <calloc@plt+0x1a42>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804ac92 <calloc@plt+0x1a42>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804ac92 <calloc@plt+0x1a42>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804ac87 <calloc@plt+0x1a37>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804ac80 <calloc@plt+0x1a30>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    804a862 <calloc@plt+0x1612>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    804a862 <calloc@plt+0x1612>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    804a6a0 <calloc@plt+0x1450>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804ae2d <calloc@plt+0x1bdd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048fa0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804aead <calloc@plt+0x1c5d>
cmp    $0xffffffff,%eax
je     804aec8 <calloc@plt+0x1c78>
cmp    $0xfffffffe,%eax
je     804aee3 <calloc@plt+0x1c93>
cmpb   $0x0,0x2f(%esp)
je     804ad8f <calloc@plt+0x1b3f>
cmpl   $0x2,0x94(%esp)
jne    804ad8f <calloc@plt+0x1b3f>
cmp    $0x1,%eax
je     804ad8f <calloc@plt+0x1b3f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804ad88 <calloc@plt+0x1b38>
movzbl %al,%eax
jmp    *0x804ea40(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804ad70 <calloc@plt+0x1b20>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048f30 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048e90 <mbsinit@plt>
test   %eax,%eax
je     804ad01 <calloc@plt+0x1ab1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804a9f3 <calloc@plt+0x17a3>
and    0x58(%esp),%dl
jmp    804a9fd <calloc@plt+0x17ad>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    804a818 <calloc@plt+0x15c8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     804a768 <calloc@plt+0x1518>
add    $0x1,%esi
jmp    804a608 <calloc@plt+0x13b8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    804a7e9 <calloc@plt+0x1599>
call   8049200 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8049090 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804acde <calloc@plt+0x1a8e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e7d9,0x3c(%esp)
jmp    804a5e8 <calloc@plt+0x1398>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e7d7,0x3c(%esp)
jmp    804a5e8 <calloc@plt+0x1398>
cmpb   $0x0,0x2f(%esp)
je     804a893 <calloc@plt+0x1643>
jmp    804a818 <calloc@plt+0x15c8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    804a91e <calloc@plt+0x16ce>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804add5 <calloc@plt+0x1b85>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804add5 <calloc@plt+0x1b85>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804af38 <calloc@plt+0x1ce8>
cmpb   $0x0,(%eax)
je     804af38 <calloc@plt+0x1ce8>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804af26 <calloc@plt+0x1cd6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804af30 <calloc@plt+0x1ce0>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804af20 <calloc@plt+0x1cd0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804add5 <calloc@plt+0x1b85>
call   8048f00 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e7d9,0x3c(%esp)
jmp    804a5e8 <calloc@plt+0x1398>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e7d7,0x3c(%esp)
jmp    804a5e8 <calloc@plt+0x1398>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049110 <__errno_location@plt>
test   %edi,%edi
mov    0x8052190,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804b10c <calloc@plt+0x1ebc>
cmp    0x805219c,%edi
jb     804b018 <calloc@plt+0x1dc8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804b111 <calloc@plt+0x1ec1>
cmp    $0x8052194,%esi
lea    0x0(,%ebp,8),%eax
je     804b0e0 <calloc@plt+0x1e90>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804c2d0 <calloc@plt+0x3080>
mov    %eax,%esi
mov    %eax,0x8052190
mov    0x805219c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80490e0 <memset@plt>
mov    %ebp,0x805219c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804a550 <calloc@plt+0x1300>
cmp    %eax,%ebp
ja     804b0c7 <calloc@plt+0x1e77>
lea    0x1(%eax),%ebp
cmp    $0x8052220,%esi
mov    %ebp,(%edi)
je     804b082 <calloc@plt+0x1e32>
mov    %esi,(%esp)
call   8048e70 <free@plt>
mov    %ebp,(%esp)
call   804c260 <calloc@plt+0x3010>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804a550 <calloc@plt+0x1300>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804c2d0 <calloc@plt+0x3080>
mov    0x8052198,%edx
mov    %eax,%esi
mov    %eax,0x8052190
mov    0x8052194,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804afef <calloc@plt+0x1d9f>
call   8049200 <abort@plt>
call   804c4d0 <calloc@plt+0x3280>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049110 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8052320,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804c470 <calloc@plt+0x3220>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8052320,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804b180 <calloc@plt+0x1f30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8052320,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8052320,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8052320,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8052320,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804b233 <calloc@plt+0x1fe3>
test   %ecx,%ecx
je     804b233 <calloc@plt+0x1fe3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049200 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8052320,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049110 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804a550 <calloc@plt+0x1300>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8052320,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049110 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   804a550 <calloc@plt+0x1300>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804c260 <calloc@plt+0x3010>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   804a550 <calloc@plt+0x1300>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804b368 <calloc@plt+0x2118>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b2a0 <calloc@plt+0x2050>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805219c,%edi
mov    0x8052190,%esi
cmp    $0x1,%edi
jbe    804b3e3 <calloc@plt+0x2193>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048e70 <free@plt>
cmp    %edi,%ebx
jne    804b3d0 <calloc@plt+0x2180>
mov    0x4(%esi),%eax
cmp    $0x8052220,%eax
je     804b409 <calloc@plt+0x21b9>
mov    %eax,(%esp)
call   8048e70 <free@plt>
movl   $0x100,0x8052194
00
movl   $0x8052220,0x8052198
08
cmp    $0x8052194,%esi
je     804b423 <calloc@plt+0x21d3>
mov    %esi,(%esp)
call   8048e70 <free@plt>
movl   $0x8052194,0x8052190
08
movl   $0x1,0x805219c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8052320,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8052320,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8052320,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8052320,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804a430 <calloc@plt+0x11e0>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804af80 <calloc@plt+0x1d30>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804a430 <calloc@plt+0x11e0>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804af80 <calloc@plt+0x1d30>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804b4c0 <calloc@plt+0x2270>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804b4f0 <calloc@plt+0x22a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x8052320,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x8052324,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x8052328,%eax
mov    %eax,0x18(%esp)
mov    0x805232c,%eax
mov    %eax,0x1c(%esp)
mov    0x8052330,%eax
mov    %eax,0x20(%esp)
mov    0x8052334,%eax
mov    %eax,0x24(%esp)
mov    0x8052338,%eax
mov    %eax,0x28(%esp)
mov    0x805233c,%eax
mov    %eax,0x2c(%esp)
mov    0x8052340,%eax
mov    %eax,0x30(%esp)
mov    0x8052344,%eax
mov    %eax,0x34(%esp)
mov    0x8052348,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805234c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804af80 <calloc@plt+0x1d30>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b580 <calloc@plt+0x2330>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804b580 <calloc@plt+0x2330>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b580 <calloc@plt+0x2330>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x8052320,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x8052324,%eax
mov    %eax,0x14(%esp)
mov    0x8052328,%eax
mov    %eax,0x18(%esp)
mov    0x805232c,%eax
mov    %eax,0x1c(%esp)
mov    0x8052330,%eax
mov    %eax,0x20(%esp)
mov    0x8052334,%eax
mov    %eax,0x24(%esp)
mov    0x8052338,%eax
mov    %eax,0x28(%esp)
mov    0x805233c,%eax
mov    %eax,0x2c(%esp)
mov    0x8052340,%eax
mov    %eax,0x30(%esp)
mov    0x8052344,%eax
mov    %eax,0x34(%esp)
mov    0x8052348,%eax
mov    %eax,0x38(%esp)
mov    0x805234c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804b200 <calloc@plt+0x1fb0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804af80 <calloc@plt+0x1d30>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804b6c0 <calloc@plt+0x2470>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804b6c0 <calloc@plt+0x2470>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804b6c0 <calloc@plt+0x2470>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8052160,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8052160,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8052160,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8052160,0x4(%esp)
jmp    804af80 <calloc@plt+0x1d30>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
call   8049110 <__errno_location@plt>
mov    0xa4(%esp),%ebx
mov    %eax,0x10(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0xa0(%esp),%eax
mov    %eax,(%esp)
call   8049090 <strlen@plt>
mov    0xb0(%esp),%edx
add    %ebx,%edx
cmp    %edx,%eax
jb     804bac6 <calloc@plt+0x2876>
sub    0xb0(%esp),%eax
sub    %ebx,%eax
add    0xa0(%esp),%eax
mov    %eax,%edi
xor    %eax,%eax
cmpb   $0x58,(%edi)
jne    804b919 <calloc@plt+0x26c9>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmpb   $0x58,(%edi,%eax,1)
je     804b910 <calloc@plt+0x26c0>
cmp    %eax,0xb0(%esp)
ja     804bac6 <calloc@plt+0x2876>
mov    0xb0(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804cab0 <calloc@plt+0x3860>
test   %eax,%eax
mov    %eax,%esi
je     804bb05 <calloc@plt+0x28b5>
mov    0xa8(%esp),%eax
movl   $0x3a2f8,0x14(%esp)
and    $0x3c,%al
mov    %eax,0x18(%esp)
orl    $0xc2,0x18(%esp)
mov    0xb0(%esp),%eax
test   %eax,%eax
je     804b9a9 <calloc@plt+0x2759>
mov    0xb0(%esp),%ebx
mov    %edi,%ebp
add    %edi,%ebx
lea    0x0(%esi),%esi
movl   $0x3d,0x4(%esp)
add    $0x1,%ebp
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
call   804cb20 <calloc@plt+0x38d0>
movzbl 0x804eb80(%eax),%eax
mov    %al,-0x1(%ebp)
cmp    %ebx,%ebp
jne    804b980 <calloc@plt+0x2730>
cmpl   $0x1,0xac(%esp)
je     804b9f0 <calloc@plt+0x27a0>
cmpl   $0x2,0xac(%esp)
je     804ba70 <calloc@plt+0x2820>
mov    0xac(%esp),%edx
test   %edx,%edx
je     804ba48 <calloc@plt+0x27f8>
movl   $0x804eb60,0xc(%esp)
movl   $0x124,0x8(%esp)
movl   $0x804eb24,0x4(%esp)
movl   $0x804eb34,(%esp)
call   8049230 <__assert_fail@plt>
mov    0xa0(%esp),%eax
movl   $0x1c0,0x4(%esp)
mov    %eax,(%esp)
call   8049100 <mkdir@plt>
test   %eax,%eax
jns    804baf5 <calloc@plt+0x28a5>
mov    0x10(%esp),%eax
mov    (%eax),%ebx
cmp    $0x11,%ebx
jne    804baee <calloc@plt+0x289e>
subl   $0x1,0x14(%esp)
jne    804b964 <calloc@plt+0x2714>
mov    %esi,(%esp)
call   804ce20 <calloc@plt+0x3bd0>
mov    0x10(%esp),%eax
movl   $0x11,(%eax)
mov    $0xffffffff,%eax
jmp    804babb <calloc@plt+0x286b>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
movl   $0x180,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa0(%esp),%eax
mov    %eax,(%esp)
call   8048e30 <open64@plt>
jmp    804ba07 <calloc@plt+0x27b7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xa0(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049210 <__lxstat64@plt>
test   %eax,%eax
jns    804ba1e <calloc@plt+0x27ce>
mov    0x10(%esp),%eax
mov    $0xffffffff,%edx
mov    (%eax),%ebx
cmp    $0x2,%ebx
je     804bae0 <calloc@plt+0x2890>
mov    %esi,(%esp)
mov    %edx,0x14(%esp)
call   804ce20 <calloc@plt+0x3bd0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %ebx,(%eax)
mov    %edx,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%eax
movl   $0x16,(%eax)
add    $0x8c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,%ecx
mov    0x1c(%esp),%eax
xor    %edx,%edx
mov    %eax,(%ecx)
mov    %eax,%ebx
jmp    804baa3 <calloc@plt+0x2853>
mov    $0xffffffff,%edx
jmp    804baa3 <calloc@plt+0x2853>
mov    %eax,%edx
mov    0x10(%esp),%ecx
mov    0x1c(%esp),%eax
mov    %eax,(%ecx)
mov    %eax,%ebx
jmp    804baa3 <calloc@plt+0x2853>
mov    $0xffffffff,%eax
jmp    804babb <calloc@plt+0x286b>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x6,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804b8b0 <calloc@plt+0x2660>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804c008 <calloc@plt+0x2db8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x804ebbf,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80491d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ebd2,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x804ee60,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80491d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ec30,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804c030 <calloc@plt+0x2de0>
jmp    *0x804ee34(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ed94,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   80491d0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804edc4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80491d0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049200 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ebd6,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80491d0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ebe6,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80491d0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ebfd,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80491d0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ecfc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   80491d0 <__fprintf_chk@plt>
jmp    804bcaf <calloc@plt+0x2a5f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ed1c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80491d0 <__fprintf_chk@plt>
jmp    804bcaf <calloc@plt+0x2a5f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ed40,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80491d0 <__fprintf_chk@plt>
jmp    804bcaf <calloc@plt+0x2a5f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ed68,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80491d0 <__fprintf_chk@plt>
jmp    804bcaf <calloc@plt+0x2a5f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x804ebcb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80491d0 <__fprintf_chk@plt>
jmp    804bba1 <calloc@plt+0x2951>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804edf8,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804bd3a <calloc@plt+0x2aea>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804c0da <calloc@plt+0x2e8a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804c0d0 <calloc@plt+0x2e80>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804bb50 <calloc@plt+0x2900>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804c132 <calloc@plt+0x2ee2>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804c120 <calloc@plt+0x2ed0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804bb50 <calloc@plt+0x2900>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c110 <calloc@plt+0x2ec0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x804ec19,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
movl   $0x804e5e1,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e5f7,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
movl   $0x804e390,0xc(%esp)
movl   $0x804e60b,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049130 <__printf_chk@plt>
mov    0x8052200,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e3b8,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049060 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049000 <malloc@plt>
test   %eax,%eax
je     804c279 <calloc@plt+0x3029>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804c274 <calloc@plt+0x3024>
lea    0x0(%esi),%esi
call   804c4d0 <calloc@plt+0x3280>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804c2b9 <calloc@plt+0x3069>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804c260 <calloc@plt+0x3010>
call   804c4d0 <calloc@plt+0x3280>
xchg   %ax,%ax
jmp    804c260 <calloc@plt+0x3010>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804c2f8 <calloc@plt+0x30a8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048ff0 <realloc@plt>
test   %eax,%eax
je     804c30b <calloc@plt+0x30bb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804c2e0 <calloc@plt+0x3090>
mov    %eax,(%esp)
call   8048e70 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804c2f0 <calloc@plt+0x30a0>
call   804c4d0 <calloc@plt+0x3280>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804c353 <calloc@plt+0x3103>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804c2d0 <calloc@plt+0x3080>
call   804c4d0 <calloc@plt+0x3280>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804c3a0 <calloc@plt+0x3150>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804c3b8 <calloc@plt+0x3168>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804c2d0 <calloc@plt+0x3080>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804c389 <calloc@plt+0x3139>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804c389 <calloc@plt+0x3139>
call   804c4d0 <calloc@plt+0x3280>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804c3f8 <calloc@plt+0x31a8>
cmp    $0xaaaaaaa9,%eax
ja     804c404 <calloc@plt+0x31b4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804c2d0 <calloc@plt+0x3080>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804c3e0 <calloc@plt+0x3190>
call   804c4d0 <calloc@plt+0x3280>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804c260 <calloc@plt+0x3010>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049250 <calloc@plt>
test   %eax,%eax
je     804c45f <calloc@plt+0x320f>
add    $0x1c,%esp
ret
nop
call   804c4d0 <calloc@plt+0x3280>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804c260 <calloc@plt+0x3010>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048e80 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049090 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804c470 <calloc@plt+0x3220>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x804ee8f,0x4(%esp)
movl   $0x0,(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x805214c,%edx
movl   $0x804e789,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8048fc0 <error@plt>
call   8049200 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049120 <fileno@plt>
test   %eax,%eax
js     804c5a8 <calloc@plt+0x3358>
mov    %ebx,(%esp)
call   8049020 <__freading@plt>
test   %eax,%eax
jne    804c578 <calloc@plt+0x3328>
mov    %ebx,(%esp)
call   804c5c0 <calloc@plt+0x3370>
test   %eax,%eax
je     804c5a8 <calloc@plt+0x3358>
call   8049110 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048ea0 <fclose@plt>
test   %edi,%edi
je     804c56a <calloc@plt+0x331a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049120 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80491c0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804c542 <calloc@plt+0x32f2>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048ea0 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804c5d8 <calloc@plt+0x3388>
mov    %ebx,(%esp)
call   8049020 <__freading@plt>
test   %eax,%eax
jne    804c5e8 <calloc@plt+0x3398>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048e40 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804c5d8 <calloc@plt+0x3388>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804c620 <calloc@plt+0x33d0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048e40 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804c660 <calloc@plt+0x3410>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048eb0 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804c63f <calloc@plt+0x33ef>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804c63f <calloc@plt+0x33ef>
mov    %ebx,(%esp)
call   8049120 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   80491c0 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804c6a7 <calloc@plt+0x3457>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804c69f <calloc@plt+0x344f>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049170 <nl_langinfo@plt>
mov    0x8052350,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x804ec18,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804c77c <calloc@plt+0x352c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804c747 <calloc@plt+0x34f7>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804c720 <calloc@plt+0x34d0>
nop
mov    %ebp,(%esp)
call   8049090 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049090 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804c778 <calloc@plt+0x3528>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048e20 <strcmp@plt>
test   %eax,%eax
je     804c73b <calloc@plt+0x34eb>
cmp    $0x2a,%bl
jne    804c700 <calloc@plt+0x34b0>
cmpb   $0x0,0x1(%ebp)
jne    804c700 <calloc@plt+0x34b0>
mov    %ebp,(%esp)
call   8049090 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x804eea9,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804ca3d <calloc@plt+0x37ed>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804c747 <calloc@plt+0x34f7>
movl   $0x804eeaf,(%esp)
call   8048fe0 <getenv@plt>
test   %eax,%eax
je     804c795 <calloc@plt+0x3545>
cmpb   $0x0,(%eax)
jne    804c9a3 <calloc@plt+0x3753>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x804eea0,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804c994 <calloc@plt+0x3744>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049000 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804ca33 <calloc@plt+0x37e3>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048e80 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804c7fc <calloc@plt+0x35ac>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804c978 <calloc@plt+0x3728>
movl   $0x804e6dc,0x4(%esp)
mov    %eax,(%esp)
call   8049050 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c970 <calloc@plt+0x3720>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804c956 <calloc@plt+0x3706>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804c860 <calloc@plt+0x3610>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804c860 <calloc@plt+0x3610>
cmp    $0x23,%eax
je     804c9cd <calloc@plt+0x377d>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490f0 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x804eebf,0x4(%esp)
mov    %esi,(%esp)
call   8049080 <fscanf@plt>
cmp    $0x1,%eax
jle    804c9f0 <calloc@plt+0x37a0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049090 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049090 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804ca0e <calloc@plt+0x37be>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049000 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804ca42 <calloc@plt+0x37f2>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8048f70 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8048f70 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804c86c <calloc@plt+0x361c>
mov    %esi,(%esp)
call   8049150 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804c9f0 <calloc@plt+0x37a0>
jmp    804c875 <calloc@plt+0x3625>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049220 <close@plt>
mov    $0x804ec18,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048e70 <free@plt>
mov    %ebp,0x8052350
jmp    804c6ef <calloc@plt+0x349f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804c7bb <calloc@plt+0x356b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049090 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804c994 <calloc@plt+0x3744>
lea    -0x1(%eax),%eax
jmp    804c7a4 <calloc@plt+0x3554>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804c9e7 <calloc@plt+0x3797>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804ca5c <calloc@plt+0x380c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804c9c8 <calloc@plt+0x3778>
cmp    $0xffffffff,%eax
jne    804c860 <calloc@plt+0x3610>
mov    %esi,(%esp)
call   804c520 <calloc@plt+0x32d0>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804c978 <calloc@plt+0x3728>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804c97d <calloc@plt+0x372d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8048ff0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804c90c <calloc@plt+0x36bc>
mov    $0x804ec18,%ebp
jmp    804c989 <calloc@plt+0x3739>
call   8048f00 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x804ec18,%ebp
call   8048e70 <free@plt>
mov    %esi,(%esp)
call   804c520 <calloc@plt+0x32d0>
jmp    804c97d <calloc@plt+0x372d>
mov    %esi,(%esp)
call   8049150 <__uflow@plt>
jmp    804c9e2 <calloc@plt+0x3792>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x14,(%esp)
call   804c260 <calloc@plt+0x3010>
mov    0x20(%esp),%edx
mov    %edx,(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ced0 <calloc@plt+0x3c80>
test   %eax,%eax
mov    %eax,%ebx
je     804cb00 <calloc@plt+0x38b0>
movl   $0x14,(%esp)
call   804c260 <calloc@plt+0x3010>
mov    %ebx,(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804caf8 <calloc@plt+0x38a8>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
mov    0x74(%esp),%edi
mov    0x78(%esp),%ebp
mov    %eax,0x3c(%esp)
mov    0xc(%eax),%esi
mov    %edi,%edx
mov    %edi,0x10(%esp)
mov    %ebp,%ecx
mov    %gs:0x14,%edi
mov    %edi,0x4c(%esp)
xor    %edi,%edi
mov    (%eax),%edi
mov    %ebp,0x14(%esp)
mov    0x8(%eax),%ebp
mov    %edi,0x38(%esp)
mov    0x4(%eax),%edi
mov    %ebp,0x1c(%esp)
mov    0x1c(%esp),%ebx
lea    0x44(%esp),%ebp
mov    %edi,0x18(%esp)
mov    0x10(%eax),%edi
mov    %edx,%eax
mov    %ecx,%edx
mov    0x18(%esp),%ecx
add    $0x1,%eax
adc    $0x0,%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
cmp    0x14(%esp),%edi
ja     804cc31 <calloc@plt+0x39e1>
jb     804cb9e <calloc@plt+0x394e>
cmp    0x10(%esp),%esi
jae    804cc31 <calloc@plt+0x39e1>
mov    %esi,%eax
mov    %edi,%edx
movl   $0x0,0x18(%esp)
lea    0x0(%esi),%esi
shld   $0x8,%eax,%edx
shl    $0x8,%eax
add    $0xff,%eax
adc    $0x0,%edx
addl   $0x1,0x18(%esp)
cmp    %edx,0x14(%esp)
jae    804cd50 <calloc@plt+0x3b00>
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x28(%esp)
mov    %ebx,0x2c(%esp)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804d200 <calloc@plt+0x3fb0>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%ebx
mov    %ebp,0x18(%esp)
mov    %ebx,%edx
mov    0x18(%esp),%ebx
mov    %ecx,%eax
shld   $0x8,%ecx,%edx
shl    $0x8,%eax
movzbl (%ebx),%ecx
xor    %ebx,%ebx
add    %eax,%ecx
adc    %edx,%ebx
shld   $0x8,%esi,%edi
shl    $0x8,%esi
add    $0xff,%esi
adc    $0x0,%edi
addl   $0x1,0x18(%esp)
cmp    %edi,0x14(%esp)
jae    804cd68 <calloc@plt+0x3b18>
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     804cd8c <calloc@plt+0x3b3c>
mov    %ecx,0x28(%esp)
mov    0x20(%esp),%ecx
mov    %esi,%eax
mov    %ebx,0x2c(%esp)
mov    0x24(%esp),%ebx
mov    %edi,%edx
sub    0x10(%esp),%eax
sbb    0x14(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
call   804db90 <calloc@plt+0x4940>
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
mov    %ecx,0x8(%esp)
mov    0x28(%esp),%ecx
mov    %ebx,0xc(%esp)
mov    0x2c(%esp),%ebx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   804db90 <calloc@plt+0x4940>
mov    0x2c(%esp),%ebx
sub    0x18(%esp),%esi
sbb    0x1c(%esp),%edi
mov    0x28(%esp),%ecx
cmp    %edi,%ebx
ja     804cdc8 <calloc@plt+0x3b78>
jae    804cdc0 <calloc@plt+0x3b70>
mov    0x20(%esp),%edi
mov    %ebx,%esi
mov    0x24(%esp),%ebp
mov    %ecx,(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
call   804da60 <calloc@plt+0x4810>
mov    0x3c(%esp),%ebx
mov    %eax,0x4(%ebx)
mov    %edx,0x8(%ebx)
mov    %edi,0x8(%esp)
mov    0x30(%esp),%edi
mov    %ebp,0xc(%esp)
mov    0x34(%esp),%ebp
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   804da60 <calloc@plt+0x4810>
mov    %eax,0xc(%ebx)
mov    0x10(%esp),%eax
mov    %edx,0x10(%ebx)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jne    804cddf <calloc@plt+0x3b8f>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
ja     804cbb0 <calloc@plt+0x3960>
cmp    %eax,0x10(%esp)
ja     804cbb0 <calloc@plt+0x3960>
jmp    804cbce <calloc@plt+0x397e>
lea    0x0(%esi),%esi
ja     804cbfa <calloc@plt+0x39aa>
cmp    %esi,0x10(%esp)
ja     804cbfa <calloc@plt+0x39aa>
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
jne    804cc45 <calloc@plt+0x39f5>
mov    0x3c(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %ebx,0x1c(%esp)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
jmp    804cd29 <calloc@plt+0x3ad9>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ecx
jbe    804ccc7 <calloc@plt+0x3a77>
mov    0x18(%esp),%esi
mov    %eax,%ecx
mov    %edx,%ebx
mov    0x1c(%esp),%edi
add    $0xffffffff,%esi
adc    $0xffffffff,%edi
jmp    804cb88 <calloc@plt+0x3938>
call   8048f00 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
jmp    8048e70 <free@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804d340 <calloc@plt+0x40f0>
mov    %eax,%edi
call   8049110 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
call   804cdf0 <calloc@plt+0x3ba0>
mov    %edi,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     804cec3 <calloc@plt+0x3c73>
mov    %eax,(%esp)
call   804b660 <calloc@plt+0x2410>
mov    %eax,%esi
call   8049110 <__errno_location@plt>
mov    $0x804eec9,%edx
mov    %eax,%ebx
mov    (%eax),%eax
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
test   %eax,%eax
mov    $0x804eed9,%eax
cmovne %eax,%edx
mov    %edx,0x4(%esp)
call   8048ef0 <dcgettext@plt>
mov    0x805214c,%edx
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048fc0 <error@plt>
call   8049200 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%ebx
mov    0x50(%esp),%esi
test   %ebx,%ebx
je     804cf58 <calloc@plt+0x3d08>
test   %esi,%esi
je     804cf80 <calloc@plt+0x3d30>
movl   $0x804eee8,0x4(%esp)
mov    %esi,(%esp)
call   804d860 <calloc@plt+0x4610>
test   %eax,%eax
mov    %eax,%ebp
je     804d121 <calloc@plt+0x3ed1>
movl   $0x81c,(%esp)
call   804c260 <calloc@plt+0x3010>
cmp    $0x800,%ebx
mov    %ebp,(%eax)
mov    %eax,%edi
movl   $0x804ce60,0x4(%eax)
mov    %esi,0x8(%eax)
mov    $0x800,%eax
cmovbe %ebx,%eax
mov    %eax,0xc(%esp)
lea    0xc(%edi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   80490c0 <setvbuf@plt>
mov    %edi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x81c,(%esp)
call   804c260 <calloc@plt+0x3010>
movl   $0x0,(%eax)
movl   $0x804ce60,0x4(%eax)
movl   $0x0,0x8(%eax)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x81c,(%esp)
call   804c260 <calloc@plt+0x3010>
movl   $0x0,(%eax)
mov    %eax,%edi
movl   $0x804ce60,0x4(%eax)
lea    0x10(%eax),%ebp
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x4(%esp)
movl   $0x804eeeb,(%esp)
call   8048e30 <open64@plt>
test   %eax,%eax
mov    %eax,%edx
js     804d028 <calloc@plt+0x3dd8>
cmp    $0x400,%ebx
mov    $0x400,%eax
cmova  %eax,%ebx
mov    %ebx,0x8(%esp)
mov    %edx,(%esp)
movl   $0x80c,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x18(%esp)
call   8048e50 <__read_chk@plt>
mov    0x18(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebx
call   8049220 <close@plt>
test   %ebx,%ebx
mov    %esi,%edx
cmovns %ebx,%edx
cmp    $0x3ff,%edx
jbe    804d128 <calloc@plt+0x3ed8>
mov    %ebp,(%esp)
call   804d5f0 <calloc@plt+0x43a0>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8048ed0 <gettimeofday@plt>
mov    0x28(%esp),%eax
mov    %eax,0x10(%edi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%ebp)
call   8048f90 <getpid@plt>
movl   $0xc,0x18(%esp)
mov    %eax,0x28(%esp)
mov    %eax,0x18(%edi)
mov    $0x400,%esi
mov    $0x4,%ecx
sub    0x18(%esp),%esi
cmp    $0x4,%esi
cmova  %ecx,%esi
call   80491b0 <getppid@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x28(%esp)
mov    0x18(%esp),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   8048e80 <memcpy@plt>
mov    0x18(%esp),%eax
lea    (%esi,%eax,1),%edx
cmp    $0x3ff,%edx
ja     804d011 <calloc@plt+0x3dc1>
mov    $0x400,%esi
mov    $0x4,%eax
sub    %edx,%esi
cmp    $0x4,%esi
cmova  %eax,%esi
mov    %edx,0x18(%esp)
call   8048f10 <getuid@plt>
mov    0x18(%esp),%edx
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x28(%esp)
lea    0x0(%ebp,%edx,1),%eax
mov    %eax,(%esp)
call   8048e80 <memcpy@plt>
mov    0x18(%esp),%edx
add    %edx,%esi
cmp    $0x3ff,%esi
ja     804d011 <calloc@plt+0x3dc1>
call   80490d0 <getgid@plt>
mov    $0x400,%edx
mov    $0x4,%ecx
sub    %esi,%edx
cmp    $0x4,%edx
cmova  %ecx,%edx
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x28(%esp)
lea    0x0(%ebp,%esi,1),%eax
mov    %eax,(%esp)
call   8048e80 <memcpy@plt>
jmp    804d011 <calloc@plt+0x3dc1>
xor    %eax,%eax
jmp    804cf4a <calloc@plt+0x3cfa>
mov    $0x400,%ecx
mov    $0x8,%eax
sub    %edx,%ecx
cmp    $0x8,%ecx
lea    0x28(%esp),%ebx
cmova  %eax,%ecx
movl   $0x0,0x4(%esp)
lea    (%ecx,%edx,1),%esi
mov    %ebx,(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
call   8048ed0 <gettimeofday@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%ecx
mov    %ebx,0x4(%esp)
add    %ebp,%edx
mov    %ecx,0x8(%esp)
mov    %edx,(%esp)
call   8048e80 <memcpy@plt>
cmp    $0x3ff,%esi
ja     804d011 <calloc@plt+0x3dc1>
mov    $0x400,%edx
mov    $0x4,%eax
sub    %esi,%edx
cmp    $0x4,%edx
cmova  %eax,%edx
mov    %edx,0x18(%esp)
call   8048f90 <getpid@plt>
mov    0x18(%esp),%edx
mov    %ebx,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x28(%esp)
lea    0x0(%ebp,%esi,1),%eax
mov    %eax,(%esp)
call   8048e80 <memcpy@plt>
mov    0x18(%esp),%edx
lea    (%edx,%esi,1),%eax
cmp    $0x3ff,%eax
mov    %eax,0x18(%esp)
jbe    804d05e <calloc@plt+0x3e0e>
jmp    804d011 <calloc@plt+0x3dc1>
jmp    804d1e0 <calloc@plt+0x3f90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x4(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x8(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
mov    0x44(%esp),%esi
mov    0x48(%esp),%ebx
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
mov    %ecx,0x1c(%esp)
je     804d278 <calloc@plt+0x4028>
call   8049110 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804d24c <calloc@plt+0x3ffc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
testb  $0x20,(%eax)
mov    $0x0,%eax
cmove  %eax,%ecx
mov    0x8(%ebp),%eax
mov    %ecx,(%edi)
mov    %eax,(%esp)
call   *0x4(%ebp)
mov    0x0(%ebp),%ecx
mov    %ecx,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
movl   $0x1,0x4(%esp)
call   8048fd0 <fread_unlocked@plt>
mov    (%edi),%ecx
add    %eax,%esi
sub    %eax,%ebx
jne    804d230 <calloc@plt+0x3fe0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebp),%edx
cmp    %edx,%ebx
jbe    804d327 <calloc@plt+0x40d7>
mov    %ebp,%eax
sub    %edx,%eax
add    $0x81c,%eax
mov    %edx,0x8(%esp)
lea    0x10(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   8048e80 <memcpy@plt>
mov    0x1c(%esp),%edx
add    %edx,%esi
sub    %edx,%ebx
jmp    804d2ca <calloc@plt+0x407a>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
add    $0x400,%esi
mov    %edi,(%esp)
call   804d3d0 <calloc@plt+0x4180>
sub    $0x400,%ebx
je     804d318 <calloc@plt+0x40c8>
cmp    $0x3ff,%ebx
ja     804d2b0 <calloc@plt+0x4060>
lea    0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   804d3d0 <calloc@plt+0x4180>
mov    0x1c(%esp),%eax
mov    $0x400,%edx
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8048e80 <memcpy@plt>
mov    0x1c(%esp),%edx
mov    %edx,%eax
sub    %ebx,%eax
mov    %eax,0xc(%ebp)
jmp    804d26c <calloc@plt+0x401c>
lea    0x0(%esi),%esi
movl   $0x0,0xc(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%eax
sub    %edx,%eax
add    $0x81c,%eax
jmp    804d2f1 <calloc@plt+0x40a1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    $0x81c,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%edx
test   $0x1,%dl
mov    (%edx),%esi
mov    %edx,%edi
jne    804d3c0 <calloc@plt+0x4170>
test   $0x2,%edi
jne    804d3b0 <calloc@plt+0x4160>
mov    %ebx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%bl
rep stos %eax,%es:(%edi)
je     804d377 <calloc@plt+0x4127>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%ebx
je     804d37f <calloc@plt+0x412f>
movb   $0x0,(%edi)
mov    %edx,(%esp)
call   8048e70 <free@plt>
test   %esi,%esi
je     804d3a0 <calloc@plt+0x4150>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804c520 <calloc@plt+0x32d0>
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%ebx
jmp    804d360 <calloc@plt+0x4110>
xchg   %ax,%ax
movb   $0x0,(%edx)
lea    0x1(%edx),%edi
mov    $0x1b,%bl
jmp    804d358 <calloc@plt+0x4108>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x18(%esp),%edx
mov    0x408(%edx),%eax
mov    0x400(%edx),%ecx
lea    0x1(%eax),%edi
mov    %edi,0x408(%edx)
lea    0x200(%edx),%eax
add    0x404(%edx),%edi
mov    %eax,(%esp)
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ebp
mov    %ecx,%esi
shl    $0xd,%esi
xor    %ecx,%esi
add    0x200(%eax),%esi
mov    %ebp,%ecx
and    $0x3fc,%ecx
mov    (%edx,%ecx,1),%ebx
mov    %esi,%ecx
shr    $0x6,%ecx
xor    %esi,%ecx
add    %esi,%ebx
add    %ebx,%edi
mov    0x1c(%esp),%ebx
mov    %edi,(%eax)
shr    $0x8,%edi
and    $0x3fc,%edi
add    (%edx,%edi,1),%ebp
mov    %ebp,(%ebx)
mov    0x4(%eax),%edi
add    0x204(%eax),%ecx
mov    %edi,%esi
and    $0x3fc,%esi
mov    (%edx,%esi,1),%ebx
lea    0x0(,%ecx,4),%esi
xor    %ecx,%esi
add    %ecx,%ebx
add    %ebx,%ebp
mov    0x1c(%esp),%ebx
mov    %ebp,0x4(%eax)
shr    $0x8,%ebp
and    $0x3fc,%ebp
add    (%edx,%ebp,1),%edi
mov    %edi,0x4(%ebx)
mov    0x8(%eax),%ebp
add    0x208(%eax),%esi
mov    %ebp,%ecx
and    $0x3fc,%ecx
mov    (%edx,%ecx,1),%ebx
mov    %esi,%ecx
shr    $0x10,%ecx
xor    %esi,%ecx
add    %esi,%ebx
add    %ebx,%edi
mov    0x1c(%esp),%ebx
mov    %edi,0x8(%eax)
shr    $0x8,%edi
and    $0x3fc,%edi
add    (%edx,%edi,1),%ebp
mov    %ebp,0x8(%ebx)
mov    0xc(%eax),%edi
add    0x20c(%eax),%ecx
mov    %edi,%esi
and    $0x3fc,%esi
mov    (%edx,%esi,1),%ebx
add    %ecx,%ebx
add    %ebx,%ebp
mov    0x1c(%esp),%ebx
mov    %ebp,0xc(%eax)
shr    $0x8,%ebp
and    $0x3fc,%ebp
add    $0x10,%eax
add    (%edx,%ebp,1),%edi
addl   $0x10,0x1c(%esp)
cmp    (%esp),%eax
mov    %edi,0xc(%ebx)
jb     804d408 <calloc@plt+0x41b8>
lea    0x400(%edx),%esi
mov    %esi,(%esp)
lea    0x0(%esi),%esi
mov    (%eax),%ebp
mov    %ecx,%esi
shl    $0xd,%esi
xor    %ecx,%esi
add    -0x200(%eax),%esi
mov    %ebp,%ecx
and    $0x3fc,%ecx
mov    (%edx,%ecx,1),%ebx
mov    %esi,%ecx
shr    $0x6,%ecx
xor    %esi,%ecx
add    %esi,%ebx
add    %ebx,%edi
mov    0x1c(%esp),%ebx
mov    %edi,(%eax)
shr    $0x8,%edi
and    $0x3fc,%edi
add    (%edx,%edi,1),%ebp
mov    %ebp,(%ebx)
mov    0x4(%eax),%edi
add    -0x1fc(%eax),%ecx
mov    %edi,%esi
and    $0x3fc,%esi
mov    (%edx,%esi,1),%ebx
lea    0x0(,%ecx,4),%esi
xor    %ecx,%esi
add    %ecx,%ebx
add    %ebx,%ebp
mov    0x1c(%esp),%ebx
mov    %ebp,0x4(%eax)
shr    $0x8,%ebp
and    $0x3fc,%ebp
add    (%edx,%ebp,1),%edi
mov    %edi,0x4(%ebx)
mov    0x8(%eax),%ebp
add    -0x1f8(%eax),%esi
mov    %ebp,%ecx
and    $0x3fc,%ecx
mov    (%edx,%ecx,1),%ebx
mov    %esi,%ecx
shr    $0x10,%ecx
xor    %esi,%ecx
add    %esi,%ebx
add    %ebx,%edi
mov    0x1c(%esp),%ebx
mov    %edi,0x8(%eax)
shr    $0x8,%edi
and    $0x3fc,%edi
add    (%edx,%edi,1),%ebp
mov    %ebp,0x8(%ebx)
mov    0xc(%eax),%edi
add    -0x1f4(%eax),%ecx
mov    %edi,%esi
and    $0x3fc,%esi
mov    (%edx,%esi,1),%ebx
add    %ecx,%ebx
add    %ebx,%ebp
mov    0x1c(%esp),%ebx
mov    %ebp,0xc(%eax)
shr    $0x8,%ebp
and    $0x3fc,%ebp
add    $0x10,%eax
add    (%edx,%ebp,1),%edi
addl   $0x10,0x1c(%esp)
cmp    (%esp),%eax
mov    %edi,0xc(%ebx)
jb     804d4f8 <calloc@plt+0x42a8>
mov    %ecx,0x400(%edx)
mov    %edi,0x404(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
mov    $0xf421ad8,%ebp
push   %edi
mov    $0xc3163e4b,%ecx
push   %esi
mov    $0x95d90059,%edx
push   %ebx
mov    $0x30609119,%esi
sub    $0x1c,%esp
mov    $0x1367df5a,%ebx
mov    0x30(%esp),%eax
movl   $0x0,0x18(%esp)
movl   $0xc4efea1b,0x8(%esp)
movl   $0xa51a3c49,0x4(%esp)
movl   $0xd92a4a78,(%esp)
mov    %ebp,0xc(%esp)
nop
add    0x4(%eax),%edx
add    0x8(%eax),%ecx
add    (%eax),%ebx
mov    %edx,%edi
shl    $0xb,%edi
mov    %edi,0x10(%esp)
xor    %ebx,0x10(%esp)
mov    0x10(%esp),%edi
lea    (%ecx,%edx,1),%ebx
mov    %ecx,%edx
add    0xc(%eax),%edi
add    0xc(%esp),%edi
shr    $0x2,%edx
mov    %edx,0x14(%esp)
xor    %ebx,0x14(%esp)
lea    (%edi,%ecx,1),%ebx
mov    %edi,%ecx
mov    0x14(%esp),%ebp
shl    $0x8,%ecx
xor    %ebx,%ecx
mov    0x14(%eax),%ebx
add    0x10(%eax),%ebp
add    (%esp),%ebp
add    %ecx,%ebx
mov    %ebp,%edx
add    %ebp,%edi
add    0x4(%esp),%ebx
shr    $0x10,%edx
mov    %edx,0xc(%esp)
xor    %edi,0xc(%esp)
mov    %ebx,%edx
mov    0xc(%esp),%edi
shl    $0xa,%edx
add    %ebx,%ebp
add    0x18(%eax),%edi
add    0x8(%esp),%edi
mov    %edx,(%esp)
xor    %ebp,(%esp)
mov    (%esp),%ebp
mov    %edi,%edx
add    %edi,%ebx
add    0x1c(%eax),%ebp
shr    $0x4,%edx
mov    %edx,0x4(%esp)
xor    %ebx,0x4(%esp)
add    %ebp,%esi
mov    0x10(%esp),%ebx
mov    %esi,%edx
add    %esi,%edi
add    0x4(%esp),%ebx
shl    $0x8,%edx
mov    %edx,0x8(%esp)
mov    0x14(%esp),%edx
xor    %edi,0x8(%esp)
mov    %ebx,%edi
add    0x8(%esp),%edx
add    %ebx,%esi
shr    $0x9,%edi
mov    (%esp),%ebp
add    $0x20,%eax
xor    %edi,%esi
mov    0xc(%esp),%edi
add    %esi,%ecx
add    %edx,%ebx
addl   $0x8,0x18(%esp)
mov    %edi,-0x14(%eax)
mov    0x4(%esp),%edi
mov    %ebx,-0x20(%eax)
mov    %edx,-0x1c(%eax)
mov    %ecx,-0x18(%eax)
mov    %edi,-0xc(%eax)
mov    0x8(%esp),%edi
mov    %ebp,-0x10(%eax)
mov    %esi,-0x4(%eax)
mov    %edi,-0x8(%eax)
cmpl   $0x100,0x18(%esp)
jne    804d638 <calloc@plt+0x43e8>
mov    0x30(%esp),%eax
movl   $0x0,0x18(%esp)
add    0x4(%eax),%edx
add    (%eax),%ebx
add    0x8(%eax),%ecx
mov    %edx,%edi
shl    $0xb,%edi
mov    %edi,0x10(%esp)
mov    0xc(%esp),%edi
add    %ecx,%edx
xor    %ebx,0x10(%esp)
mov    0x10(%esp),%ebx
add    0xc(%eax),%ebx
lea    (%edi,%ebx,1),%ebp
mov    %ecx,%edi
mov    0x4(%esp),%ebx
shr    $0x2,%edi
mov    %edi,0x14(%esp)
xor    %edx,0x14(%esp)
lea    0x0(%ebp,%ecx,1),%edx
mov    %ebp,%ecx
mov    0x14(%esp),%edi
shl    $0x8,%ecx
xor    %edx,%ecx
mov    0x14(%eax),%edx
add    0x10(%eax),%edi
add    (%esp),%edi
add    %ecx,%edx
add    %edx,%ebx
lea    (%edi,%ebp,1),%edx
mov    %edi,%ebp
shr    $0x10,%ebp
add    %ebx,%edi
mov    %ebp,0xc(%esp)
mov    %ebx,%ebp
xor    %edx,0xc(%esp)
shl    $0xa,%ebp
mov    0xc(%esp),%edx
mov    %ebp,(%esp)
xor    %edi,(%esp)
add    0x18(%eax),%edx
mov    (%esp),%edi
add    0x8(%esp),%edx
add    0x1c(%eax),%edi
mov    %edx,%ebp
add    %edx,%ebx
add    %edi,%esi
shr    $0x4,%ebp
add    %esi,%edx
mov    %ebp,0x4(%esp)
mov    %esi,%ebp
xor    %ebx,0x4(%esp)
shl    $0x8,%ebp
mov    0x10(%esp),%ebx
add    0x4(%esp),%ebx
mov    %ebp,0x8(%esp)
mov    0xc(%esp),%edi
xor    %edx,0x8(%esp)
mov    0x14(%esp),%edx
mov    %ebx,%ebp
add    %ebx,%esi
add    0x8(%esp),%edx
mov    %edi,0xc(%eax)
mov    (%esp),%edi
shr    $0x9,%ebp
xor    %ebp,%esi
add    $0x20,%eax
add    %esi,%ecx
add    %edx,%ebx
addl   $0x8,0x18(%esp)
mov    %edi,-0x10(%eax)
mov    0x4(%esp),%edi
mov    %ebx,-0x20(%eax)
mov    %edx,-0x1c(%eax)
mov    %ecx,-0x18(%eax)
mov    %edi,-0xc(%eax)
mov    0x8(%esp),%edi
mov    %esi,-0x4(%eax)
mov    %edi,-0x8(%eax)
cmpl   $0x100,0x18(%esp)
jne    804d738 <calloc@plt+0x44e8>
mov    0x30(%esp),%eax
movl   $0x0,0x408(%eax)
00
movl   $0x0,0x404(%eax)
00
movl   $0x0,0x400(%eax)
00
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%edi
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048f40 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d891 <calloc@plt+0x4641>
mov    %eax,(%esp)
mov    %ebx,%esi
call   8049120 <fileno@plt>
cmp    $0x2,%eax
jbe    804d8a0 <calloc@plt+0x4650>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   804d910 <calloc@plt+0x46c0>
test   %eax,%eax
mov    %eax,%ebx
js     804d8d5 <calloc@plt+0x4685>
mov    %esi,(%esp)
call   804c520 <calloc@plt+0x32d0>
test   %eax,%eax
jne    804d8f0 <calloc@plt+0x46a0>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8049050 <fdopen@plt>
test   %eax,%eax
je     804d8f0 <calloc@plt+0x46a0>
add    $0x10,%esp
mov    %eax,%esi
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049110 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
xor    %esi,%esi
call   804c520 <calloc@plt+0x32d0>
mov    %edi,(%ebx)
jmp    804d891 <calloc@plt+0x4641>
lea    0x0(%esi,%eiz,1),%esi
call   8049110 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049220 <close@plt>
mov    %edi,(%esi)
xor    %esi,%esi
jmp    804d891 <calloc@plt+0x4641>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d940 <calloc@plt+0x46f0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    804d9a0 <calloc@plt+0x4750>
mov    0x8052354,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     804da48 <calloc@plt+0x47f8>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   80490b0 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804d9c0 <calloc@plt+0x4770>
movl   $0x1,0x8052354
00
test   %ebx,%ebx
js     804d997 <calloc@plt+0x4747>
cmpl   $0xffffffff,0x8052354
je     804d9f0 <calloc@plt+0x47a0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80490b0 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049110 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    804d980 <calloc@plt+0x4730>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804d940 <calloc@plt+0x46f0>
test   %eax,%eax
mov    %eax,%ebx
js     804d997 <calloc@plt+0x4747>
movl   $0xffffffff,0x8052354
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80490b0 <fcntl@plt>
test   %eax,%eax
js     804da24 <calloc@plt+0x47d4>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   80490b0 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    804d997 <calloc@plt+0x4747>
call   8049110 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049220 <close@plt>
mov    %edi,(%esi)
jmp    804d997 <calloc@plt+0x4747>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804d940 <calloc@plt+0x46f0>
mov    %eax,%ebx
jmp    804d98a <calloc@plt+0x473a>
nop
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    804dab0 <calloc@plt+0x4860>
cmp    %ebp,%ecx
ja     804dae8 <calloc@plt+0x4898>
test   %ecx,%ecx
mov    %ecx,%esi
jne    804da98 <calloc@plt+0x4848>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     804dad8 <calloc@plt+0x4888>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    804daf8 <calloc@plt+0x48a8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    804db68 <calloc@plt+0x4918>
cmp    %edx,%eax
jb     804db68 <calloc@plt+0x4918>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     804db78 <calloc@plt+0x4928>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    804db59 <calloc@plt+0x4909>
cmp    (%esp),%esi
je     804db78 <calloc@plt+0x4928>
mov    %edi,%eax
xor    %edx,%edx
jmp    804dadc <calloc@plt+0x488c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    804dadc <calloc@plt+0x488c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    804dbd8 <calloc@plt+0x4988>
cmp    %edi,%esi
jbe    804dc10 <calloc@plt+0x49c0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     804dc30 <calloc@plt+0x49e0>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    804dc40 <calloc@plt+0x49f0>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     804dcd8 <calloc@plt+0x4a88>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    804dc21 <calloc@plt+0x49d1>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    804dbcb <calloc@plt+0x497b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     804dcc4 <calloc@plt+0x4a74>
cmp    %eax,0xc(%esp)
jb     804dcc0 <calloc@plt+0x4a70>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    804dc9e <calloc@plt+0x4a4e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    804dc9e <calloc@plt+0x4a4e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     804dbf1 <calloc@plt+0x49a1>
jmp    804dc01 <calloc@plt+0x49b1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   80499b0 <calloc@plt+0x760>
add    $0x4305,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048dc8 <freopen64@plt-0x38>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804dd49 <calloc@plt+0x4af9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804dd28 <calloc@plt+0x4ad8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804dd60 <calloc@plt+0x4b10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   80499b0 <calloc@plt+0x760>
add    $0x428a,%ebx
sub    $0x18,%esp
lea    0x144(%ebx),%eax
test   %eax,%eax
je     804dda8 <calloc@plt+0x4b58>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048fb0 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    804dd8b <calloc@plt+0x4b3b>
push   %ebx
sub    $0x8,%esp
call   80499b0 <calloc@plt+0x760>
add    $0x424b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %esp
jb     804de44 <_IO_stdin_used+0x80>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     804ddfc <_IO_stdin_used+0x38>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804de45 <_IO_stdin_used+0x81>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     804de54 <_IO_stdin_used+0x90>
popa
je     804de53 <_IO_stdin_used+0x8f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bl,%cs:0x54(%ebx)
inc    %ebp
dec    %ebp
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
pop    %ebp
or     (%eax),%al
add    %al,(%eax)
inc    %ebx
jb     804de7c <_IO_stdin_used+0xb8>
popa
je     804de7f <_IO_stdin_used+0xbb>
and    %ah,0x20(%ecx)
je     804de84 <_IO_stdin_used+0xc0>
insl   (%dx),%es:(%edi)
jo     804de91 <_IO_stdin_used+0xcd>
jb     804de85 <_IO_stdin_used+0xc1>
jb     804de9f <_IO_stdin_used+0xdb>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804de65 <_IO_stdin_used+0xa1>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    804de6d <_IO_stdin_used+0xa9>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%eax)
imul   $0x73746920,0x74(%esi),%ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:0x4d(%ebp,%eax,2),%dl
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ch,0x75(%ebp)
jae    804ded7 <_IO_stdin_used+0x113>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     804deca <_IO_stdin_used+0x106>
imul   $0x6c207461,0x20(%esi),%ebp
gs
popa
jae    804dee8 <_IO_stdin_used+0x124>
and    %dh,(%ebx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    804dee1 <_IO_stdin_used+0x11d>
arpl   %si,0x74(%ebp)
imul   $0x27582720,0x65(%esi),%esi
jae    804dea8 <_IO_stdin_used+0xe4>
imul   $0x7473616c,0x20(%esi),%ebp
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804df04 <_IO_stdin_used+0x140>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804dec8 <_IO_stdin_used+0x104>
or     0x66(%ecx),%cl
and    %dl,0x4d(%ebp,%eax,2)
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     804dece <_IO_stdin_used+0x10a>
jae    804df20 <_IO_stdin_used+0x15c>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x7375202c,0x64(%ebp),%esp
and    %dh,%gs:0x70(%ebp,%ebp,2)
cs
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x706d742d
imul   $0x69207369,%fs:0x20(%edx),%esi
insl   (%dx),%es:(%edi)
jo     804df4d <_IO_stdin_used+0x189>
imul   $0xa2e,0x64(%ebp),%esp
inc    %esi
imul   $0x65726120,0x73(%ebp,%eiz,2),%ebp
and    %ah,0x72(%ebx)
gs
popa
je     804df5d <_IO_stdin_used+0x199>
and    %dh,%fs:0x2b(%ebp)
jb     804df75 <_IO_stdin_used+0x1b1>
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x722b7520,0x73(%ebp),%esp
ja     804df8d <_IO_stdin_used+0x1c9>
sub    $0x20,%al
insl   (%dx),%es:(%edi)
imul   $0x6d752073,0x75(%esi),%ebp
popa
jae    804df8d <_IO_stdin_used+0x1c9>
and    %dh,0x65(%edx)
jae    804df9b <_IO_stdin_used+0x1d7>
jb     804df92 <_IO_stdin_used+0x1ce>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    804df5e <_IO_stdin_used+0x19a>
or     (%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c64,%eax
sub    $0x65726964,%eax
arpl   %si,0x72(%edi,%ebp,2)
jns    804df66 <_IO_stdin_used+0x1a2>
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %si,0x65(%edx)
popa
je     804dfb5 <_IO_stdin_used+0x1f1>
and    %ah,0x20(%ecx)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    804df89 <_IO_stdin_used+0x1c5>
and    %ch,0x6f(%esi)
je     804df82 <_IO_stdin_used+0x1be>
popa
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x2d202c75
sub    $0x2d797264,%eax
jb     804dfec <_IO_stdin_used+0x228>
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804dfa6 <_IO_stdin_used+0x1e2>
arpl   %si,0x65(%edx)
popa
je     804dff1 <_IO_stdin_used+0x22d>
and    %ah,0x6e(%ecx)
jns    804e005 <_IO_stdin_used+0x241>
push   $0x3b676e69
and    %ch,0x65(%ebp)
jb     804e000 <_IO_stdin_used+0x23c>
insb   (%dx),%es:(%edi)
jns    804dfbe <_IO_stdin_used+0x1fa>
jo     804e012 <_IO_stdin_used+0x24e>
imul   $0x6e206120,0x74(%esi),%ebp
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
jne    804e01c <_IO_stdin_used+0x258>
jae    804e011 <_IO_stdin_used+0x24d>
sub    %cx,%gs:(%edx)
and    %ah,(%eax)
sub    $0x2d202c71,%eax
sub    $0x65697571,%eax
je     804dfe2 <_IO_stdin_used+0x21e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    804e041 <_IO_stdin_used+0x27d>
jo     804e03e <_IO_stdin_used+0x27a>
jb     804e035 <_IO_stdin_used+0x271>
jae    804e045 <_IO_stdin_used+0x281>
and    %ah,0x61(%ecx,%ebp,2)
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jae    804e04f <_IO_stdin_used+0x28b>
imul   $0x6f626120,0x73(%ebx),%esp
jne    804e058 <_IO_stdin_used+0x294>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
das
imul   $0x61657263,%fs:0x2d(%edx),%esi
je     804e05d <_IO_stdin_used+0x299>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
imul   $0x20000a65,0x72(%ebp,%esi,2),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6675732d
imul   $0x5553,0x3d(%eax),%di
inc    %esi
inc    %esi
and    %ah,(%eax)
and    %ah,0x70(%ecx)
jo     804e07f <_IO_stdin_used+0x2bb>
outsb  %ds:(%esi),(%dx)
and    %dl,%fs:0x55(%ebx)
inc    %esi
inc    %esi
and    %dh,0x20(%edi,%ebp,2)
push   %esp
inc    %ebp
dec    %ebp
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ah,%cs:(%eax)
push   %ebx
push   %ebp
inc    %esi
inc    %esi
and    %ch,0x75(%ebp)
jae    804e0ad <_IO_stdin_used+0x2e9>
and    %ch,0x6f(%esi)
je     804e05e <_IO_stdin_used+0x29a>
arpl   %bp,0x6e(%edi)
je     804e0a4 <_IO_stdin_used+0x2e0>
imul   $0x73616c73,0x20(%esi),%ebp
push   $0x20200a2e
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esp
push   $0x6f207369
jo     804e0e1 <_IO_stdin_used+0x31d>
imul   $0x20736920,0x6e(%edi),%ebp
imul   $0x6465696c,0x70(%ebp),%ebp
and    %ch,0x66(%ecx)
and    %dl,0x4d(%ebp,%eax,2)
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ah,0x65(%edi,%ebp,2)
jae    804e0ad <_IO_stdin_used+0x2e9>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e0b1 <_IO_stdin_used+0x2ed>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx)
and    %bl,0x2e(%eax)
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x706d742d,%eax
imul   $0x5249443d,%fs:0x5b(%edx),%esi
pop    %ebp
and    %ah,(%eax)
imul   $0x72707265,0x74(%esi),%ebp
gs
je     804e0dc <_IO_stdin_used+0x318>
push   %esp
inc    %ebp
dec    %ebp
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     804e134 <_IO_stdin_used+0x370>
jbe    804e132 <_IO_stdin_used+0x36e>
and    %dh,0x20(%edi,%ebp,2)
inc    %esp
dec    %ecx
push   %edx
and    %ah,%cs:(%eax)
dec    %ecx
data16
and    %al,0x52(%ecx,%ecx,2)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     804e0ef <_IO_stdin_used+0x32b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    804e16f <_IO_stdin_used+0x3ab>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x7375202c,0x64(%ebp),%esp
and    %ah,%gs:(%esp,%edx,2)
dec    %ebp
push   %eax
inc    %esp
dec    %ecx
push   %edx
and    %ch,0x66(%ecx)
and    %dh,0x65(%ebx)
je     804e147 <_IO_stdin_used+0x383>
and    %ah,0x6c(%ebp)
jae    804e185 <_IO_stdin_used+0x3c1>
and    %ch,(%edi)
je     804e191 <_IO_stdin_used+0x3cd>
jo     804e154 <_IO_stdin_used+0x390>
and    %ah,(%eax)
push   %edi
imul   $0x20202020,0xa(%eax,%ebp,2),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     804e1af <_IO_stdin_used+0x3eb>
imul   $0x6974706f,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
push   %esp
inc    %ebp
dec    %ebp
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ch,0x75(%ebp)
jae    804e1d3 <_IO_stdin_used+0x40f>
and    %ch,0x6f(%esi)
je     804e184 <_IO_stdin_used+0x3c0>
bound  %esp,0x20(%ebp)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
jae    804e1dd <_IO_stdin_used+0x419>
insb   (%dx),%es:(%edi)
jne    804e1e5 <_IO_stdin_used+0x421>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6e(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x74697720,0x65(%ebx),%ebp
push   $0x2c742d20
and    %dl,0x4d(%ebp,%eax,2)
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ch,0x61(%ebp)
jns    804e1ce <_IO_stdin_used+0x40a>
arpl   %bp,0x6e(%edi)
je     804e214 <_IO_stdin_used+0x450>
imul   $0x73616c73,0x20(%esi),%ebp
push   $0x202c7365
bound  %esi,0x74(%ebp)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6b(%ebp)
je     804e244 <_IO_stdin_used+0x480>
insl   (%dx),%es:(%edi)
jo     804e202 <_IO_stdin_used+0x43e>
arpl   %si,0x65(%edx)
popa
je     804e24d <_IO_stdin_used+0x489>
jae    804e20a <_IO_stdin_used+0x446>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    804e20f <_IO_stdin_used+0x44b>
je     804e259 <_IO_stdin_used+0x495>
and    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804e26d <_IO_stdin_used+0x4a9>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804e20d <_IO_stdin_used+0x449>
add    %ah,(%eax)
and    %ch,0x49442070
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    804e28f <_IO_stdin_used+0x4cb>
and    %al,%gs:0x52(%ecx,%ecx,2)
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
jo     804e29b <_IO_stdin_used+0x4d7>
imul   $0x6920,%gs:0x3b(%eax),%di
insl   (%dx),%es:(%edi)
jo     804e29f <_IO_stdin_used+0x4db>
imul   $0x20742d20,0x73(%ebp),%esp
pop    %ebx
fs
gs
jo     804e2b1 <_IO_stdin_used+0x4ed>
arpl   %sp,%gs:0x74(%ecx)
gs
fs
pop    %ebp
or     (%eax),%ah
and    %ch,0x20202074
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e(%ecx)
je     804e2c6 <_IO_stdin_used+0x502>
jb     804e2d3 <_IO_stdin_used+0x50f>
jb     804e2ca <_IO_stdin_used+0x506>
je     804e287 <_IO_stdin_used+0x4c3>
push   %esp
inc    %ebp
dec    %ebp
push   %eax
dec    %esp
inc    %ecx
push   %esp
inc    %ebp
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    804e2e0 <_IO_stdin_used+0x51c>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804e2fa <_IO_stdin_used+0x536>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804e2bc <_IO_stdin_used+0x4f8>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     804e318 <_IO_stdin_used+0x554>
jbe    804e316 <_IO_stdin_used+0x552>
and    %dh,0x20(%edi,%ebp,2)
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804e2fb <_IO_stdin_used+0x537>
and    %ah,(%esp,%edx,2)
dec    %ebp
push   %eax
inc    %esp
dec    %ecx
push   %edx
sub    $0x20,%al
imul   $0x3b746573,0x20(%esi),%esp
and    %ah,0x6c(%ebp)
jae    804e33c <_IO_stdin_used+0x578>
and    %dh,0x65(%eax,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804e31e <_IO_stdin_used+0x55a>
jae    804e370 <_IO_stdin_used+0x5ac>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x61697620,0x64(%ebp),%esp
and    %ch,0x65203b70
insb   (%dx),%es:(%edi)
jae    804e379 <_IO_stdin_used+0x5b5>
and    %ch,(%edi)
je     804e385 <_IO_stdin_used+0x5c1>
jo     804e33a <_IO_stdin_used+0x576>
pop    %ebx
fs
gs
jo     804e391 <_IO_stdin_used+0x5cd>
arpl   %sp,%gs:0x74(%ecx)
gs
fs
pop    %ebp
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     804e355 <_IO_stdin_used+0x591>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     804e3ab <_IO_stdin_used+0x5e7>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    804e3ce <_IO_stdin_used+0x60a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    804e3e0 <_IO_stdin_used+0x61c>
jo     804e3e3 <_IO_stdin_used+0x61f>
je     804e390 <_IO_stdin_used+0x5cc>
jbe    804e3d7 <_IO_stdin_used+0x613>
jb     804e3e7 <_IO_stdin_used+0x623>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804e3eb <_IO_stdin_used+0x627>
popa
je     804e3ea <_IO_stdin_used+0x626>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x74680000,0x0(%edx,%ecx,1),%esi
je     804e404 <_IO_stdin_used+0x640>
cmp    (%edi),%ch
das
ja     804e410 <_IO_stdin_used+0x64c>
ja     804e3c9 <_IO_stdin_used+0x605>
outsb  %ds:(%si),(%dx)
jne    804e3cd <_IO_stdin_used+0x609>
outsl  %ds:(%esi),(%dx)
jb     804e409 <_IO_stdin_used+0x645>
das
jae    804e414 <_IO_stdin_used+0x650>
data16
je     804e41f <_IO_stdin_used+0x65b>
popa
jb     804e410 <_IO_stdin_used+0x64c>
das
arpl   %bp,0x72(%edi)
gs
jne    804e426 <_IO_stdin_used+0x662>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     804e41f <_IO_stdin_used+0x65b>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804e3e5 <_IO_stdin_used+0x621>
jne    804e43a <_IO_stdin_used+0x676>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     804e44b <_IO_stdin_used+0x687>
popa
jb     804e43c <_IO_stdin_used+0x678>
cmp    (%eax),%ah
cmp    $0x68,%al
je     804e451 <_IO_stdin_used+0x68d>
jo     804e419 <_IO_stdin_used+0x655>
das
das
ja     804e45a <_IO_stdin_used+0x696>
ja     804e413 <_IO_stdin_used+0x64f>
outsb  %ds:(%si),(%dx)
jne    804e417 <_IO_stdin_used+0x653>
outsl  %ds:(%esi),(%dx)
jb     804e453 <_IO_stdin_used+0x68f>
das
addr16
gs
je     804e459 <_IO_stdin_used+0x695>
gs
insb   (%dx),%es:(%edi)
jo     804e424 <_IO_stdin_used+0x660>
or     %ds:(%eax),%al
push   %edx
gs
jo     804e46b <_IO_stdin_used+0x6a7>
jb     804e472 <_IO_stdin_used+0x6ae>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    804e474 <_IO_stdin_used+0x6b0>
popa
je     804e474 <_IO_stdin_used+0x6b0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 804e433 <_IO_stdin_used+0x66f>
je     804e484 <_IO_stdin_used+0x6c0>
and    %bh,(%eax,%ebp,2)
je     804e48e <_IO_stdin_used+0x6ca>
jo     804e456 <_IO_stdin_used+0x692>
das
das
je     804e492 <_IO_stdin_used+0x6ce>
popa
outsb  %ds:(%esi),(%dx)
jae    804e490 <_IO_stdin_used+0x6cc>
popa
je     804e490 <_IO_stdin_used+0x6cc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     804e49d <_IO_stdin_used+0x6d9>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     804e49b <_IO_stdin_used+0x6d7>
das
je     804e49c <_IO_stdin_used+0x6d8>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     804e464 <_IO_stdin_used+0x6a0>
arpl   %bp,0x6d(%edi)
jo     804e4b5 <_IO_stdin_used+0x6f1>
gs
je     804e4b1 <_IO_stdin_used+0x6ed>
and    %ah,0x63(%edi,%ebp,2)
jne    804e4bf <_IO_stdin_used+0x6fb>
outsb  %gs:(%esi),(%dx)
je     804e4b7 <_IO_stdin_used+0x6f3>
je     804e4c1 <_IO_stdin_used+0x6fd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     804e4d3 <_IO_stdin_used+0x70f>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     804e4cf <_IO_stdin_used+0x70b>
jne    804e4e0 <_IO_stdin_used+0x71c>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     804e4f5 <_IO_stdin_used+0x731>
imul   $0x73207463,%fs:0x65(%edx),%esi
je     804e4fe <_IO_stdin_used+0x73a>
gs
jb     804e50f <_IO_stdin_used+0x74b>
and    %dh,0x20(%edi,%ebp,2)
das
fs
gs
jbe    804e4d5 <_IO_stdin_used+0x711>
outsb  %ds:(%esi),(%dx)
jne    804e515 <_IO_stdin_used+0x751>
insb   (%dx),%es:(%edi)
add    %al,(%eax)
ja     804e517 <_IO_stdin_used+0x753>
je     804e518 <_IO_stdin_used+0x754>
and    %ch,0x6675732d
imul   $0x7420,0x2c(%eax),%di
gs
insl   (%dx),%es:(%edi)
jo     804e52c <_IO_stdin_used+0x768>
popa
je     804e528 <_IO_stdin_used+0x764>
and    %ah,0x756d2073
jae    804e53f <_IO_stdin_used+0x77b>
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x6e(%ecx)
and    %bl,0x0(%eax)
add    %al,(%eax)
add    %ch,0x6e(%ecx)
jbe    804e53d <_IO_stdin_used+0x779>
insb   (%dx),%es:(%edi)
imul   $0x69666675,0x73(%eax,%eiz,1),%esp
js     804e507 <_IO_stdin_used+0x743>
and    $0x63202c73,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     804e551 <_IO_stdin_used+0x78d>
imul   $0x72696420,0x73(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804e51e <_IO_stdin_used+0x75a>
jae    804e565 <_IO_stdin_used+0x7a1>
jo     804e563 <_IO_stdin_used+0x79f>
jb     804e565 <_IO_stdin_used+0x7a1>
je     804e575 <_IO_stdin_used+0x7b1>
jb     804e508 <_IO_stdin_used+0x744>
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x6d(%ebp,%eiz,2)
jo     804e581 <_IO_stdin_used+0x7bd>
popa
je     804e57d <_IO_stdin_used+0x7b9>
sub    $0x20,%al
and    $0x63202c73,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     804e584 <_IO_stdin_used+0x7c0>
imul   $0x72696420,0x73(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804e551 <_IO_stdin_used+0x78d>
jae    804e598 <_IO_stdin_used+0x7d4>
jo     804e596 <_IO_stdin_used+0x7d2>
jb     804e598 <_IO_stdin_used+0x7d4>
je     804e5a8 <_IO_stdin_used+0x7e4>
jb     804e53b <_IO_stdin_used+0x777>
add    %ch,0x6e(%ecx)
jbe    804e5a1 <_IO_stdin_used+0x7dd>
insb   (%dx),%es:(%edi)
imul   $0x6c706d65,0x74(%eax,%eiz,1),%esp
popa
je     804e5b1 <_IO_stdin_used+0x7ed>
sub    $0x20,%al
and    $0x77203b73,%eax
imul   $0x6d742d2d,0x20(%eax,%ebp,2),%esi
jo     804e5c1 <_IO_stdin_used+0x7fd>
imul   $0x20746920,0x2c(%edx),%esi
insl   (%dx),%es:(%edi)
popa
jns    804e588 <_IO_stdin_used+0x7c4>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e58c <_IO_stdin_used+0x7c8>
bound  %esp,0x20(%ebp)
popa
bound  %esi,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    804e5ea <_IO_stdin_used+0x826>
add    %ah,%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     804e5ed <_IO_stdin_used+0x829>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804e5b3 <_IO_stdin_used+0x7ef>
jbe    804e5fe <_IO_stdin_used+0x83a>
popa
and    %dh,0x6d(%ebp,%eiz,2)
jo     804e608 <_IO_stdin_used+0x844>
popa
je     804e604 <_IO_stdin_used+0x840>
and    %ah,0x66000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     804e619 <_IO_stdin_used+0x855>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%esi)
popa
and    %dh,0x6d(%ebp,%eiz,2)
jo     804e62f <_IO_stdin_used+0x86b>
popa
je     804e62b <_IO_stdin_used+0x867>
and    %ah,0x520a0073
gs
jo     804e63e <_IO_stdin_used+0x87a>
jb     804e645 <_IO_stdin_used+0x881>
and    %ah,0x75622073
addr16 jae 804e5fa <_IO_stdin_used+0x836>
je     804e64b <_IO_stdin_used+0x887>
and    %ah,0x62000a73
jne    804e64b <_IO_stdin_used+0x887>
sub    $0x65726f63,%eax
jne    804e65f <_IO_stdin_used+0x89b>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     804e65d <_IO_stdin_used+0x899>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    804e647 <_IO_stdin_used+0x883>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     804e678 <_IO_stdin_used+0x8b4>
jne    804e689 <_IO_stdin_used+0x8c5>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
je     804e68c <_IO_stdin_used+0x8c8>
jo     804e64f <_IO_stdin_used+0x88b>
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
add    %ch,(%edi)
je     804e69c <_IO_stdin_used+0x8d8>
jo     804e631 <_IO_stdin_used+0x86d>
das
jne    804e6a7 <_IO_stdin_used+0x8e3>
jb     804e665 <_IO_stdin_used+0x8a1>
jae    804e6a0 <_IO_stdin_used+0x8dc>
popa
jb     804e6a0 <_IO_stdin_used+0x8dc>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x72(%ebp)
imul   $0x6b616c42,0x20(%ebx),%esp
add    %cl,%gs:0x69(%edx)
insl   (%dx),%es:(%edi)
and    %cl,0x65(%ebp)
jns    804e6bb <_IO_stdin_used+0x8f7>
jb     804e6c1 <_IO_stdin_used+0x8fd>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6b(%di)
je     804e6c4 <_IO_stdin_used+0x900>
insl   (%dx),%es:(%edi)
jo     804e662 <_IO_stdin_used+0x89e>
fs
jo     804e69f <_IO_stdin_used+0x8db>
jno    804e6db <_IO_stdin_used+0x917>
jne    804e6bf <_IO_stdin_used+0x8fb>
add    %dh,0x62(%edi)
add    %ch,(%edi)
fs
gs
jbe    804e6a1 <_IO_stdin_used+0x8dd>
outsb  %ds:(%esi),(%dx)
jne    804e6e1 <_IO_stdin_used+0x91d>
insb   (%dx),%es:(%edi)
add    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    804e6a0 <_IO_stdin_used+0x8dc>
je     804e6e7 <_IO_stdin_used+0x923>
insl   (%dx),%es:(%edi)
jo     804e6f1 <_IO_stdin_used+0x92d>
popa
je     804e6ed <_IO_stdin_used+0x929>
jae    804e68a <_IO_stdin_used+0x8c6>
je     804e6fb <_IO_stdin_used+0x937>
outsl  %ds:(%esi),(%dx)
and    %ah,0x65(%esi)
ja     804e6b2 <_IO_stdin_used+0x8ee>
pop    %eax
daa
jae    804e6b6 <_IO_stdin_used+0x8f2>
imul   $0x706d6574,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
popa
je     804e706 <_IO_stdin_used+0x942>
and    %ah,0x4d540073
push   %eax
inc    %esp
dec    %ecx
push   %edx
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     804e6b8 <_IO_stdin_used+0x8f4>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    804e6c2 <_IO_stdin_used+0x8fe>
jno    804e739 <_IO_stdin_used+0x975>
imul   $0x79726400,0x74(%ebp),%esp
sub    $0x6e7572,%eax
jae    804e747 <_IO_stdin_used+0x983>
data32 imul $0x6d74,0x0(%eax),%di
jo     804e73f <_IO_stdin_used+0x97b>
imul   $0x706c6568,0x0(%edx),%esi
add    %dh,0x65(%esi)
jb     804e75a <_IO_stdin_used+0x996>
imul   $0x0,0x6e(%edi),%ebp
add    %al,(%eax)
mov    $0x804e6,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %al,%dl
out    %al,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
enter  $0x4e6,$0x8
jne    804e72e <_IO_stdin_used+0x96a>
add    %al,(%eax)
shl    %dh
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %dl,%bh
out    %al,$0x4
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x22000000(%ecx)
out    %al,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%esi)
(bad)
jmp    *%ebx
out    %al,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%ebp)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,(%eax)
xor    %cs:(%ecx),%dh
add    %ah,0x25203a73
jae    804e78c <_IO_stdin_used+0x9c8>
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 804e7f3 <_IO_stdin_used+0xa2f>
xor    %bl,0x20(%ebp)
ja     804e7fe <_IO_stdin_used+0xa3a>
jae    804e7bf <_IO_stdin_used+0x9fb>
jo     804e802 <_IO_stdin_used+0xa3e>
jae    804e816 <_IO_stdin_used+0xa52>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    804e813 <_IO_stdin_used+0xa4f>
push   $0x206e6120
gs
js     804e819 <_IO_stdin_used+0xa55>
arpl   %sp,(%eax)
jae    804e831 <_IO_stdin_used+0xa6d>
jae    804e82e <_IO_stdin_used+0xa6a>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     804e84e <_IO_stdin_used+0xa8a>
jb     804e84c <_IO_stdin_used+0xa88>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    804e872 <_IO_stdin_used+0xaae>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    804e868 <_IO_stdin_used+0xaa4>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
enter  $0x4a5,$0x8
test   $0xab,%al
add    $0x8,%al
fsubrs -0x5567f7fc(%ebx)
add    $0x8,%al
fsubrs -0x54f7f7fc(%edx)
add    $0x8,%al
xor    %ch,-0x54cff7fc(%ebx)
add    $0x8,%al
xor    %ch,-0x572ff7fc(%ebx)
add    $0x8,%al
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
dec    %eax
test   $0xa8a80804,%eax
add    $0x8,%al
enter  $0x4a8,$0x8
shrb   $0x4,-0x5747f7fc(%eax)
or     %dh,-0x7ff7fb58(%eax)
test   $0x4,%al
or     %cl,%al
test   $0xa9c80804,%eax
add    $0x8,%al
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
enter  $0x4a9,$0x8
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
icebp
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0xf90804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
js     804e88b <_IO_stdin_used+0xac7>
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    $0xc80804a6,%eax
test   $0xa7680804,%eax
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0xf90804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
pop    %eax
test   $0xa7680804,%eax
add    $0x8,%al
stc
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0xf90804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   $0x680804a7
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
shlb   -0x5806f7fc(%edi)
add    $0x8,%al
shlb   -0x580ef7fc(%edi)
add    $0x8,%al
lock lods %ds:(%esi),%eax
add    $0x8,%al
lock lods %ds:(%esi),%eax
add    $0x8,%al
mov    %ch,-0x520ff7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x520ff7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x5277f7fc(%ebp)
add    $0x8,%al
mov    %ch,-0x520ff7fc(%ebp)
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %ah,%ch
out    %eax,$0x4
or     %ch,%ch
out    %eax,$0x4
or     %dh,%bl
out    %eax,$0x4
or     %dh,(%ecx)
jmp    804eb13 <_IO_stdin_used+0xd4f>
or     %al,(%eax)
call   f00cf31a <optarg+0xe807d116>
add    $0x8,%al
cmp    $0xe6,%al
add    $0x8,%al
psubsb (%eax,%ecx,1),%mm0
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x706d6574,0x2f(%edx),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs arpl %ax,%cs:%gs:(%eax)
add    %ah,(%ecx)
and    %ah,(%edx)
imul   $0x64696c61,0x76(%esi),%ebp
and    %cl,0x49(%ebx)
dec    %esi
inc    %esp
and    %ch,0x6e(%ecx)
and    %bl,0x5f(%edi)
outsb  %gs:(%si),(%dx)
pop    %edi
je     804ebb4 <_IO_stdin_used+0xdf0>
insl   (%dx),%es:(%edi)
jo     804ebc0 <_IO_stdin_used+0xdfc>
popa
insl   (%dx),%es:(%edi)
and    %gs:(%eax),%al
add    %ah,0x65(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
je     804ebcb <_IO_stdin_used+0xe07>
insl   (%dx),%es:(%edi)
jo     804ebd7 <_IO_stdin_used+0xe13>
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
bound  %esp,0x64(%ebx)
gs
addr16 pushw $0x6a69
imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
jo     804ec02 <_IO_stdin_used+0xe3e>
jb     804ec06 <_IO_stdin_used+0xe42>
je     804ec0a <_IO_stdin_used+0xe46>
jbe    804ec0e <_IO_stdin_used+0xe4a>
js     804ec12 <_IO_stdin_used+0xe4e>
jp     804ebdc <_IO_stdin_used+0xe18>
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
dec    %edx
dec    %ebx
dec    %esp
dec    %ebp
dec    %esi
dec    %edi
push   %eax
push   %ecx
push   %edx
push   %ebx
push   %esp
push   %ebp
push   %esi
push   %edi
pop    %eax
pop    %ecx
pop    %edx
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
add    %ah,0x25282073
jae    804ebef <_IO_stdin_used+0xe2b>
and    %ah,0x25000a73
jae    804ebee <_IO_stdin_used+0xe2a>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     804ec42 <_IO_stdin_used+0xe7e>
je     804ec4f <_IO_stdin_used+0xe8b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     804ec52 <_IO_stdin_used+0xe8e>
je     804ec5f <_IO_stdin_used+0xe9b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     804ec69 <_IO_stdin_used+0xea5>
je     804ec76 <_IO_stdin_used+0xeb2>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804ec3b <_IO_stdin_used+0xe77>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     804ec8d <_IO_stdin_used+0xec9>
jb     804ec94 <_IO_stdin_used+0xed0>
and    %ah,0x75(%edx)
addr16 jae 804ec46 <_IO_stdin_used+0xe82>
je     804ec97 <_IO_stdin_used+0xed3>
cmp    (%eax),%ah
and    $0xa73,%eax
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    804ec71 <_IO_stdin_used+0xead>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     804ecc0 <_IO_stdin_used+0xefc>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     804ec76 <_IO_stdin_used+0xeb2>
insb   (%dx),%es:(%edi)
popa
je     804ecbf <_IO_stdin_used+0xefb>
jb     804ec7c <_IO_stdin_used+0xeb8>
cmp    $0x68,%al
je     804ecd4 <_IO_stdin_used+0xf10>
jo     804ec9c <_IO_stdin_used+0xed8>
das
das
outsb  %ds:(%si),(%dx)
jne    804ec96 <_IO_stdin_used+0xed2>
outsl  %ds:(%esi),(%dx)
jb     804ecd2 <_IO_stdin_used+0xf0e>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 804ece4 <_IO_stdin_used+0xf20>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    804eca5 <_IO_stdin_used+0xee1>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     804ed09 <_IO_stdin_used+0xf45>
popa
jb     804ecfa <_IO_stdin_used+0xf36>
cmp    (%eax),%ah
jns    804ed08 <_IO_stdin_used+0xf44>
jne    804ecbb <_IO_stdin_used+0xef7>
popa
jb     804ed03 <_IO_stdin_used+0xf3f>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     804ed23 <_IO_stdin_used+0xf5f>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     804ed2d <_IO_stdin_used+0xf69>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     804ed4a <_IO_stdin_used+0xf86>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     804ed49 <_IO_stdin_used+0xf85>
outsb  %ds:(%esi),(%dx)
je     804ed07 <_IO_stdin_used+0xf43>
jo     804ed4e <_IO_stdin_used+0xf8a>
jb     804ed58 <_IO_stdin_used+0xf94>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     804ed68 <_IO_stdin_used+0xfa4>
je     804ed75 <_IO_stdin_used+0xfb1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804ed3a <_IO_stdin_used+0xf76>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804ed88 <_IO_stdin_used+0xfc4>
je     804ed95 <_IO_stdin_used+0xfd1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804ed5a <_IO_stdin_used+0xf96>
and    %ah,0x250a2c73
jae    804ed62 <_IO_stdin_used+0xf9e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804edac <_IO_stdin_used+0xfe8>
je     804edb9 <_IO_stdin_used+0xff5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804ed7e <_IO_stdin_used+0xfba>
and    %ah,0x250a2c73
jae    804ed86 <_IO_stdin_used+0xfc2>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804edd4 <_IO_stdin_used+0x1010>
je     804ede1 <_IO_stdin_used+0x101d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804eda6 <_IO_stdin_used+0xfe2>
and    %ah,0x250a2c73
jae    804edae <_IO_stdin_used+0xfea>
and    %ah,0x25202c73
jae    804edb6 <_IO_stdin_used+0xff2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804ee00 <_IO_stdin_used+0x103c>
je     804ee0d <_IO_stdin_used+0x1049>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804edd2 <_IO_stdin_used+0x100e>
and    %ah,0x250a2c73
jae    804edda <_IO_stdin_used+0x1016>
and    %ah,0x25202c73
jae    804ede2 <_IO_stdin_used+0x101e>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804ee30 <_IO_stdin_used+0x106c>
je     804ee3d <_IO_stdin_used+0x1079>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804ee02 <_IO_stdin_used+0x103e>
and    %ah,0x250a2c73
jae    804ee0a <_IO_stdin_used+0x1046>
and    %ah,0x25202c73
jae    804ee12 <_IO_stdin_used+0x104e>
and    %ah,0x250a2c73
jae    804ee1a <_IO_stdin_used+0x1056>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804ee64 <_IO_stdin_used+0x10a0>
je     804ee71 <_IO_stdin_used+0x10ad>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804ee36 <_IO_stdin_used+0x1072>
and    %ah,0x250a2c73
jae    804ee3e <_IO_stdin_used+0x107a>
and    %ah,0x25202c73
jae    804ee46 <_IO_stdin_used+0x1082>
and    %ah,0x250a2c73
jae    804ee4e <_IO_stdin_used+0x108a>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
pusha
mov    $0xbd680804,%ebp
add    $0x8,%al
test   $0xbd,%al
add    $0x8,%al
lock mov $0xbe480804,%ebp
add    $0x8,%al
mov    0x80804be,%al
mov    $0xbf800804,%edi
add    $0x8,%al
and    %bh,0x4bcb808(%esp,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     804eedd <_IO_stdin_used+0x1119>
jb     804eecf <_IO_stdin_used+0x110b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     804eef1 <_IO_stdin_used+0x112d>
popa
jb     804eee2 <_IO_stdin_used+0x111e>
and    %al,0x6f(%esi)
jne    804eef0 <_IO_stdin_used+0x112c>
fs
popa
je     804eeef <_IO_stdin_used+0x112b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804ef0e <_IO_stdin_used+0x114a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:(%edi)
jne    804ef16 <_IO_stdin_used+0x1152>
jb     804eed4 <_IO_stdin_used+0x1110>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
and    $0x65203a73,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x72203a73
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     804ef55 <_IO_stdin_used+0x1191>
jb     804eee8 <_IO_stdin_used+0x1124>
jb     804ef4c <_IO_stdin_used+0x1188>
add    %ch,(%edi)
fs
gs
jbe    804ef1f <_IO_stdin_used+0x115b>
jne    804ef64 <_IO_stdin_used+0x11a0>
popa
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %ebx,(%ebx)
add    (%ebx),%edi
clc
add    (%eax),%al
add    %bl,0x0(%esi)
add    %al,(%eax)
clc
sahf
(bad)
call   *(%ebx,%eax,1)
add    %al,(%eax)
push   $0x74ffffa3
add    (%eax),%eax
add    %cl,0x38ffffab(%eax)
add    (%eax),%eax
add    %cl,%al
stos   %eax,%es:(%edi)
(bad)
call   *0x0(%ebx,%eax,1)
add    %ch,-0x51(%eax)
(bad)
lcall  *-0x17fffffd(%eax)
scas   %es:(%edi),%eax
(bad)
push   %eax
add    (%eax),%eax
add    %bh,%al
scas   %es:(%edi),%eax
(bad)
incl   (%esp,%eax,1)
add    %al,(%eax)
or     %dh,0x418ffff(%eax)
add    %al,(%eax)
fdivs  0x444ffff(%eax)
add    %al,(%eax)
cmp    %dh,0x464ffff(%ecx)
add    %al,(%eax)
js     804ef07 <_IO_stdin_used+0x1143>
(bad)
decl   -0x57fffffc(%eax)
mov    $0xff,%cl
jmp    *-0x4d680000(%esp,%eax,1)
(bad)
jmp    *%esp
add    $0x0,%al
add    %ch,%al
mov    $0xff,%dl
call   *(%eax)
add    $0xb4880000,%eax
(bad)
ljmp   *0x5(%eax)
add    %al,(%eax)
cmp    %dh,0x5a8ffff(%ebp)
add    %al,(%eax)
push   $0xd4ffffb5
add    $0xb6580000,%eax
(bad)
decl   (%esi,%eax,1)
add    %al,(%eax)
mov    %al,%al
(bad)
call   *0x6(%eax)
add    %al,(%eax)
sub    %al,%dl
(bad)
call   *0x68000006(%eax)
ret    $0xffff
les    (%esi),%eax
add    %al,(%eax)
mov    %al,%dl
(bad)
(bad)
fadds  (%esi)
add    %al,(%eax)
test   $0xc2,%al
(bad)
(bad)
in     (%dx),%al
push   %es
add    %al,(%eax)
call   1904ef83 <optarg+0x10ffcd7f>
pop    %es
add    %al,(%eax)
or     %al,%bl
(bad)
jmp    *(%edi,%eax,1)
add    %al,(%eax)
dec    %eax
ret
(bad)
decl   0x7(%eax)
add    %al,(%eax)
test   $0xc3,%al
(bad)
(bad)
jl     804efe1 <_IO_stdin_used+0x121d>
add    %al,(%eax)
mov    %al,%ah
(bad)
(bad)
mov    $0xb8000007,%eax
(bad)
(bad)
call   *%eax
pop    %es
add    %al,(%eax)
dec    %eax
(bad)
add    $0x8,%al
add    %al,(%eax)
push   $0x18ffffc5
or     %al,(%eax)
add    %cl,0x2cffffc5(%eax)
or     %al,(%eax)
add    %ch,0x40ffffc5(%eax)
or     %al,(%eax)
add    %cl,%al
(bad)
push   %esp
or     %al,(%eax)
add    %bh,%al
(bad)
je     804f022 <_IO_stdin_used+0x125e>
add    %al,(%eax)
sub    %al,%dh
(bad)
call   *-0x39a80000(%eax,%ecx,1)
(bad)
ljmp   *-0x39780000(%eax,%ecx,1)
(bad)
inc    %esp
or     %al,(%eax)
add    %bh,(%eax)
(bad)
(bad)
(bad)
call   7004f045 <optarg+0x67ffce41>
(bad)
(bad)
incl   (%eax)
or     %eax,(%eax)
add    %bl,0x18ffffc7(%eax)
or     %eax,(%eax)
add    %cl,%al
(bad)
(bad)
pushl  (%eax)
or     %eax,(%eax)
add    %bh,-0x38(%eax)
(bad)
call   *0x0(%ecx,%ecx,1)
add    %bh,0x6cffffc8(%eax)
or     %eax,(%eax)
add    %bh,%al
enter  $0xffff,$0x84
or     %eax,(%eax)
add    %bh,(%eax)
leave
(bad)
lcall  *-0x36a80000(%ecx,%ecx,1)
(bad)
pushl  0x78000009(%eax)
leave
(bad)
inc    %esp
or     %eax,(%eax)
add    %bl,-0x27000037(%eax)
or     %eax,(%eax)
add    %bh,-0x13000037(%eax)
or     %eax,(%eax)
add    %bl,(%eax)
int3
(bad)
incl   0x0(%edx,%ecx,1)
add    %bl,-0x34(%eax)
(bad)
lcall  *0x0(%edx,%ecx,1)
add    %cl,%al
sar    %edi
(bad)
clc
or     (%eax),%al
add    %bl,(%eax)
sar    %cl,%bh
call   *(%eax)
or     (%eax),%eax
add    %bh,-0x2e(%eax)
(bad)
pushl  (%ebx,%ecx,1)
add    %al,(%eax)
mov    $0x4cffffd2,%eax
or     (%eax),%eax
add    %ch,-0x2d(%eax)
(bad)
pushl  0xb(%eax)
add    %al,(%eax)
cwtl
sar    %cl,%edi
call   *-0x2c380000(%ebx,%ecx,1)
(bad)
(bad)
mov    $0xd800000b,%eax
sar    %cl,%edi
dec    %esp
or     (%eax),%eax
add    %ch,(%eax)
aam    $0xff
(bad)
cld
or     (%eax),%eax
add    %ch,-0x2c(%eax)
(bad)
ljmp   *(%eax)
or     $0x0,%al
add    %cl,%al
aam    $0xff
lcall  *0xc(%eax)
add    %al,(%eax)
sbb    %dl,%ch
(bad)
(bad)
jl     804f10e <_IO_stdin_used+0x134a>
add    %al,(%eax)
dec    %eax
aad    $0xff
lcall  *-0x2a880000(%esp,%ecx,1)
(bad)
(bad)
mov    $0xa800000c,%eax
aad    $0xff
(bad)
fmuls  (%eax,%eax,1)
add    %bl,%al
aad    $0xff
(bad)
clc
or     $0x0,%al
add    %ch,(%eax)
(bad)
(bad)
decl   -0x29380000(,%ecx,1)
(bad)
call   *0x0(%ebp,%ecx,1)
add    %ch,(%eax)
xlat   %ds:(%ebx)
(bad)
incl   -0x47fffff3(%eax)
xlat   %ds:(%ebx)
(bad)
(bad)
fmuls  0xdb780000
(bad)
lcall  *(%eax)
push   %cs
add    %al,(%eax)
mov    $0x30ffffdb,%eax
push   %cs
add    %al,(%eax)
sbb    %bl,%ah
(bad)
call   *0x0(%esi,%ecx,1)
add    %ch,(%eax)
fdivr  %st,%st(7)
ljmp   *0xe(%eax)
add    %al,(%eax)
clc
fdivrp %st,%st(7)
ljmp   *0x2800000e(%eax)
(bad)
(bad)
mov    $0x6800000e,%esp
(bad)
(bad)
clc
push   %cs
add    %al,(%eax)
fcomp  %st(7)
(bad)
lcall  *(%eax)
sldt   (%eax)
call   8d04f16b <optarg+0x84ffcf67>
sldt   (%eax)
clc
loop   804f18e <_IO_stdin_used+0x13ca>
lcall  *0x800000f(%eax)
jecxz  804f196 <_IO_stdin_used+0x13d2>
ljmp   *-0x1bb80000(%edi,%ecx,1)
(bad)
incl   (%eax,%edx,1)
add    %al,(%eax)
fsub   %st(4),%st
(bad)
decl   0x0(%eax,%edx,1)
add    %bh,%al
out    %al,$0xff
decl   -0x16980000(%eax,%edx,1)
(bad)
dec    %esp
adc    %al,(%eax)
add    %bl,(%eax)
ljmp   $0x0,$0x1114ffff
dec    %eax
ljmp   $0x0,$0x112cffff
push   $0x74ffffeb
adc    %eax,(%eax)
add    %bl,-0x1f000014(%eax)
adc    %eax,(%eax)
add    %bh,%al
in     (%dx),%eax
(bad)
decl   0x0(%edx,%edx,1)
add    %ch,-0x12(%eax)
(bad)
decl   0x78000012(%eax)
out    %al,(%dx)
(bad)
.byte 0xff
pushf
adc    (%eax),%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     804f20b <_IO_stdin_used+0x1447>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
fcompl 0x470ffff(%ebx)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     804f22b <_IO_stdin_used+0x1467>
js     804f229 <_IO_stdin_used+0x1465>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,-0x58(%eax)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %cl,0x20(%esi,%ecx,1)
push   %esp
push   %cs
add    $0x4d,%al
push   %cs
and    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
add    %al,(%eax)
add    %ch,-0x1(%eax,%ebp,4)
lcall  *0x3(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %ch,%ah
lahf
(bad)
ljmp   *(%edx)
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
dec    %edx
xchg   %al,(%ebx,%eax,4)
add    $0x54000000,%eax
add    %al,(%eax)
add    %ah,-0x38000000(%eax)
stos   %eax,%es:(%edi)
(bad)
(bad)
js     804f29e <_IO_stdin_used+0x14da>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     804f2bf <_IO_stdin_used+0x14fb>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%al
add    %al,(%eax)
add    %dh,%al
stos   %eax,%es:(%edi)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%ecx,%eax,1)
add    %al,(%eax)
in     (%dx),%al
stos   %eax,%es:(%edi)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %eax,(%eax)
add    %ch,%al
stos   %eax,%es:(%edi)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
dec    %esp
add    %eax,(%eax)
add    %cl,0x57ffff(%esp,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %cl,%ah
lods   %ds:(%esi),%al
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
nop
add    %eax,(%eax)
add    %ch,%al
lods   %ds:(%esi),%al
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %eax,(%eax)
add    %bh,%ah
lods   %ds:(%esi),%al
(bad)
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
add    %eax,(%eax)
add    %ch,0x4cffff(%ebp,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
je     804f401 <_IO_stdin_used+0x163d>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bl,(%eax)
add    (%eax),%al
add    %dl,%al
lods   %ds:(%esi),%eax
(bad)
lcall  *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff1,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jo     804f468 <_IO_stdin_used+0x16a4>
add    %al,(%eax)
sbb    %ch,0xadffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x2,%al
add    %al,(%eax)
mov    %ch,0x26ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
faddl  (%edx)
add    %al,(%eax)
mov    %gs,0xe2ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ebx,%eax,1)
add    %al,(%eax)
inc    %esp
mov    $0xff,%al
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %eax
add    (%eax),%eax
add    %dh,(%eax)
mov    $0x196ffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bl,-0x6ffffffd(%eax)
mov    $0x36ffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%eax
add    %bl,0x11ffff(%ebx,%edi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
loopne 804f5d9 <_IO_stdin_used+0x1815>
add    %al,(%eax)
test   $0xbb,%al
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,%ah
add    (%eax),%eax
add    %dh,0x3fffff(%ebx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax,%eax,1)
add    %dl,%al
mov    $0x19ffff,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sub    $0x4,%al
add    %al,(%eax)
fdivrl 0x38ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
push   %eax
add    $0x0,%al
add    %bh,%al
mov    $0x60ffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
test   %al,(%eax,%eax,1)
add    %ah,(%esp,%edi,4)
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,%al
add    $0x0,%al
add    %cl,%al
mov    $0x2bffff,%esp
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
fadds  (%eax,%eax,1)
add    %ah,%al
mov    $0x84ffff,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
or     $0x5,%al
add    %al,(%eax)
cmp    $0xbd,%al
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    $0xbd480000,%eax
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x42ac0000(,%eax,1)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x5(%eax)
add    %al,(%eax)
pusha
mov    $0x17ffff,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
pop    %esp
add    $0xbd6c0000,%eax
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,0x0(%ebp,%eax,1)
add    %bh,-0x1(%ebp,%edi,4)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,-0x42740000(%ebp,%eax,1)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x5,%ah
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x2bffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
int3
add    $0xbdbc0000,%eax
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
lock add $0xbe480000,%eax
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     %al,(%esi)
add    %al,(%eax)
pusha
mov    $0x23ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    %al,(%esi)
add    %al,(%eax)
js     804f7d8 <_IO_stdin_used+0x1a14>
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%esi)
add    %al,(%eax)
nop
mov    $0xa5ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
push   %es
add    %al,(%eax)
sbb    $0xbf,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
je     804f870 <_IO_stdin_used+0x1aac>
add    %al,(%eax)
inc    %esp
mov    $0x33ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %es,(%esi)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x33ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %es
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x19ffff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xa0000006,%eax
mov    $0x17ffff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
push   %es
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0x1affff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
loopne 804f8dc <_IO_stdin_used+0x1b18>
add    %al,(%eax)
mov    $0x18ffffbf,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,%ah
push   %es
add    %al,(%eax)
les    0x25cffff(%edi),%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
pop    %es
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
dec    %esp
pop    %es
add    %al,(%eax)
int3
sar    $0xff,%edi
xor    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %ah,0x0(%edi,%eax,1)
add    %dh,%ah
sar    $0xff,%edi
addr16 add $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
enter  $0xffc6,$0xff
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bl,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cmp    $0x8,%al
add    %al,(%eax)
cmp    $0xc7,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %ah,-0x1(%edi,%eax,8)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
js     804fa76 <_IO_stdin_used+0x1cb2>
add    %al,(%eax)
lock (bad)
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
pushf
or     %al,(%eax)
add    %bh,%ah
(bad)
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
rorb   $0x0,(%eax)
add    %cl,(%eax)
enter  $0xffff,$0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x8
add    %al,(%eax)
add    $0xc8,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    $0x9,%al
add    %al,(%eax)
and    $0xc8,%al
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
xor    %cl,(%ecx)
add    %al,(%eax)
cmp    %cl,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
pusha
or     %eax,(%eax)
add    %ch,-0x38(%eax)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
test   %cl,(%ecx)
add    %al,(%eax)
xchg   %eax,%esp
enter  $0xffff,$0x29
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ah,-0x375c0000(%ecx,%ecx,1)
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
rorb   $0x0,(%ecx)
add    %bh,0x29ffffc8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,%al
or     %eax,(%eax)
add    %cl,%al
enter  $0xffff,$0x24
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%al
add    %bl,%al
enter  $0xffff,$0x46
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x0(%eax,%eax,1)
add    %dl,(%edx,%ecx,1)
add    %al,(%eax)
adc    $0xc9,%al
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
or     (%eax),%al
add    %ch,-0x1(%ecx,%ecx,8)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %cl,-0x5ffffff6(%eax)
leave
(bad)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
loopne 804fce0 <_IO_stdin_used+0x1f1c>
add    %al,(%eax)
fmul   %st(1),%st
(bad)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
and    %cl,(%ebx)
add    %al,(%eax)
pop    %eax
int    $0xff
pushl  0x0
inc    %ebx
push   %cs
and    %dh,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cmp    %cl,(%ebx)
add    %al,(%eax)
or     $0xff,%ch
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x0(%ebx,%ecx,1)
add    %bh,0x7ffff(%ebp,%ecx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     804fd71 <_IO_stdin_used+0x1fad>
add    %al,(%eax)
mov    $0xc4ffffcd,%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1e,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,0x4800000b(%eax)
sar    %bh
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,%ah
or     (%eax),%eax
add    %ah,-0x1(%eax,%edx,8)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x68300e43
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %ch,-0x30(%eax)
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
and    %cl,(%eax,%eax,1)
add    %bh,0x1ffffd0(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pushf
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %cl,-0x2ca40000(%esp,%ecx,1)
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    0x5800000c,%al
sar    %cl,%edi
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,-0x2cac0000(%esp,%ecx,1)
(bad)
pushl  (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
stos   %al,%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %cl,-0x2bc40000(,%ecx,1)
(bad)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   %esp
or     $0xd4840000,%eax
(bad)
jmp    *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3180e43
add    (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
or     $0xd6640000,%eax
(bad)
ljmp   *0x0(%edx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x4c,0x3300e48
add    (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,%ah
or     $0xd8940000,%eax
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebp
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
sbb    $0xe,%al
add    %al,(%eax)
cld
fdivr  %st(7),%st
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %dh,(%esi,%ecx,1)
add    %al,(%eax)
adc    $0xd9,%al
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
jl     8050080 <_IO_stdin_used+0x22bc>
add    %al,(%eax)
in     (%dx),%al
fcos
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
call   b80500ef <optarg+0xafffdeeb>
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8050107 <_IO_stdin_used+0x2343>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    805013e <_IO_stdin_used+0x237a>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,0x0(%edi,%ecx,1)
add    %ah,0x61ffff(%ebx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0x27fffff1(%eax)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,-0x242c0000(%edi,%ecx,1)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
.byte 0x9a
add    $0x8,%al
.byte 0x30
.byte 0x9a
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
enter  $0x48d,$0x8
or     $0xac000000,%eax
fldl   (%eax,%ecx,1)
sbb    %eax,(%eax)
add    %al,(%eax)
or     %bl,(%edi)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x1f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
hlt
xchg   %al,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %dh,%ah
addl   $0xa,(%eax,%ecx,1)
dec    %ecx
add    (%eax),%eax
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
and    %al,0x208
add    %dh,(%eax)
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,0x1108048b(%eax)
add    %al,(%eax)
add    %ah,-0x75(%eax)
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x20(%edi)
mov    (%eax,%ecx,1),%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x3e(%edi)
mov    (%eax,%ecx,1),%al
add    %al,(%eax)
adc    $0x1f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
mov    %es:(%eax,%ecx,1),%es
mov    %ss:(%eax,%ecx,1),%es
inc    %esi
mov    (%eax,%ecx,1),%es
push   %esi
mov    (%eax,%ecx,1),%es
data16
mov    (%eax,%ecx,1),%es
jbe    8051fb8 <_IO_stdin_used+0x41f4>
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8051ff9 <_IO_stdin_used+0x4235>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    805203a <_IO_stdin_used+0x4276>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    805207b <_IO_stdin_used+0x42b7>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
and    $0x4,%bh
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,0x1000805(%ecx,%eiz,1)
add    %al,(%eax)
and    %ah,(%edx)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x70,0x6d(%ebp,%eiz,2),%esi
add    %al,(%eax)
.byte 0x68
ret    $0x244
