das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %ah,%ch
jne    80481db <_init-0x1add>
popl   0x7f10aa9d(%ecx)
loopne 804820b <_init-0x1aad>
divb   0x5de446fd(%esi,%ecx,2)
push   %cs
.byte 0x7d
add    (%eax),%eax
add    %al,(%eax)
lahf
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%al
and    %ecx,0x1080438(%edi,%ecx,1)
mov    %al,0x9f00(%eax,%eax,1)
add    %ah,0xa90000(%eax,%eax,1)
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0x287c92e3,%edx
sbb    $0x89c41c8c,%eax
add    $0xa3dda790,%eax
imul   $0xffffffb9,%esp,%eax
pushf
inc    %eax
cmp    %dh,%dl
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  80481b8 <_init-0x1b00>
fdivs  0x58(%ecx)
sbb    $0xb9,%al
(bad)
icebp
push   %cs
out    %al,(%dx)
and    %esp,0xf(%ebx)
ljmp   $0xf7c4,$0x320eefd3
.byte 0x12
mov    $0xa2,%bl
notl   (%edx)
popa
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
syscall
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%dh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sldt   (%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x3
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %al,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x7(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x7(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x7(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     8048417 <_init-0x18a1>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jnp    8048425 <_init-0x1893>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x6(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x6(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x6(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x6,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,$0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x6,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ss
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    80485c3 <_init-0x16f5>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
das
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x7(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esi
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,0x0
00
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x7,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x7(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jge    80486f8 <_init-0x15c0>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cwtl
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aad    $0x4
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x6,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%eax
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    80487a9 <_init-0x150f>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testb  $0x0,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    804883b <_init-0x147d>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x7(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stc
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addr16 add $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x6(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  8048955 <_init-0x1363>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
hlt
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
je     8048996 <_init-0x1322>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%edi),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testb  $0x0,(%ebx)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     80489e5 <_init-0x12d3>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
gs
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loope  8048a27 <_init-0x1291>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%ch
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
iret
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebp
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%esi),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x5
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    8048b87 <_init-0x1131>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popf
pop    %es
add    %al,(%eax)
dec    %eax
in     $0x5,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %dh,-0x13fffff9(%eax)
testb  $0x0,0x8
adc    %al,(%eax)
sbb    %eax,(%eax)
pop    %esi
add    $0xe5a00000,%eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %al,0x60000007(%edi)
in     $0x5,%eax
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
pusha
in     $0x5,%eax
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
xchg   %al,(%edi)
add    %al,(%eax)
pusha
in     $0x5,%eax
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
out    %eax,(%dx)
add    $0xe5640000,%eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x7dc40000(%ebx,%eax,1)
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ah,-0x1ab80000(%edi,%eax,1)
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %bl,-0x47ffffff(%ebx)
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
jb     8048ca9 <_init-0x100f>
add    %al,(%eax)
loopne 8048ce0 <_init-0xfd8>
add    $0x5108,%eax
add    %dl,(%edx)
add    %cl,0x1fd00
add    %bl,0x805(%ebp,%edi,2)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %dl,(%edx)
add    $0x0,%al
add    %al,0x40805e5(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,%al
add    $0xe5a40000,%eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
jae,pn 8048d5b <_init-0xf5d>
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048d5d <_init-0xf5b>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048d88 <_init-0xf30>
popa
jb     8048d8b <_init-0xf2d>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048d7d <_init-0xf3b>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048d9e <_init-0xf1a>
gs
jae    8048d2e <_init-0xf8a>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048d9a <_init-0xf1e>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8048dc2 <_init-0xef6>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
jbe    8048dbe <_init-0xefa>
insb   (%dx),%es:(%edi)
jne    8048dc5 <_init-0xef3>
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     8048dde <_init-0xeda>
je     8048dca <_init-0xeee>
arpl   %sp,0x63(%ecx)
push   $0x6c620065
imul   $0x5f,0x64(%ecx),%ebp
outsb  %ds:(%esi),(%dx)
gs
ja     8048dda <_init-0xede>
jo     8048def <_init-0xec9>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8048dfb <_init-0xebd>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8048e0b <_init-0xead>
jo     8048dfd <_init-0xebb>
jb     8048dfc <_init-0xebc>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
outsl  %fs:(%esi),(%dx)
pop    %edi
jae    8048e0c <_init-0xeac>
data16
gs
jo     8048e21 <_init-0xe97>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
gs
jbe    8048e1d <_init-0xe9b>
insb   (%dx),%es:(%edi)
jne    8048e20 <_init-0xe98>
je     8048e26 <_init-0xe92>
pop    %edi
je     8048e25 <_init-0xe93>
add    %ah,0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jae    8048e49 <_init-0xe6f>
jns    8048e47 <_init-0xe71>
add    %ah,%gs:0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     8048e42 <_init-0xe76>
jb     8048e56 <_init-0xe62>
gs
pop    %edi
je     8048e48 <_init-0xe70>
addr16 pop %edi
jae    8048e5f <_init-0xe59>
jb     8048e56 <_init-0xe62>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
jo     8048e6a <_init-0xe4e>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8048e63 <_init-0xe55>
je     8048e5f <_init-0xe59>
jae    8048e77 <_init-0xe41>
jo     8048e69 <_init-0xe4f>
jb     8048e68 <_init-0xe50>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
pop    %edi
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8048e12 <_init-0xea6>
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
gs
jbe    8048e7c <_init-0xe3c>
insb   (%dx),%es:(%edi)
jne    8048e7f <_init-0xe39>
je     8048e85 <_init-0xe33>
pop    %edi
jae    8048e93 <_init-0xe25>
arpl   %ax,%gs:(%eax)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
data16
jb     8048e94 <_init-0xe24>
gs
pop    %edi
jo     8048ea5 <_init-0xe13>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8048eb1 <_init-0xe07>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8048eaa <_init-0xe0e>
je     8048ea6 <_init-0xe12>
fs
gs
jbe    8048eb4 <_init-0xe04>
arpl   %sp,0x0(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x6e696c65,0x73(%edx),%esp
jne    8048ed0 <_init-0xde8>
jae,pn 8048eca <_init-0xdee>
xor    %eax,%cs:(%eax)
jae    8048ec5 <_init-0xdf3>
insb   (%dx),%es:(%edi)
imul   $0x72745f78,0x75(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
jae    8048ecb <_init-0xded>
je     8048edd <_init-0xddb>
pop    %edi
jb     8048ed2 <_init-0xde6>
ja     8048ed2 <_init-0xde6>
arpl   %bp,0x6e(%edi)
je     8048edd <_init-0xddb>
js     8048eee <_init-0xdca>
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x65735f73,0x69(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x5f746567,0x5f(%ecx,%edi,2),%esi
imul   $0x6c616974,0x69(%esi),%ebp
pop    %edi
arpl   %bp,0x6e(%edi)
je     8048f13 <_init-0xda5>
js     8048f24 <_init-0xd94>
add    %ah,0x65(%edi)
je     8048f1b <_init-0xd9d>
imul   $0x73006e6f,0x63(%ebp,%eiz,2),%ebp
gs
insb   (%dx),%es:(%edi)
imul   $0x69665f78,0x75(%esi),%ebp
insb   (%dx),%es:(%edi)
gs
pop    %edi
arpl   %bp,0x6e(%edi)
je     8048f33 <_init-0xd85>
js     8048f44 <_init-0xd74>
pop    %edi
arpl   %bp,0x70(%ebp)
add    %ah,0x72(%esi)
gs arpl %bp,%gs:0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8048f58 <_init-0xd60>
je     8048f1a <_init-0xd9e>
jae    8048f5d <_init-0xd5b>
xor    %eax,%cs:(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048f54 <_init-0xd64>
outsb  %ds:(%esi),(%dx)
gs
ja     8048f58 <_init-0xd60>
jne    8048f6b <_init-0xd4d>
fs
popa
je     8048f64 <_init-0xd54>
add    %ch,0x6e(%ebp)
je     8048f63 <_init-0xd55>
data16
jae    8048f66 <_init-0xd52>
jae    8048f6e <_init-0xd4a>
je     8048f6a <_init-0xd4e>
data16
jae    8048f82 <_init-0xd36>
jns    8048f80 <_init-0xd38>
add    %ch,%gs:0x6e(%ebp)
je     8048f75 <_init-0xd43>
data16
jb     8048f7e <_init-0xd3a>
gs
pop    %edi
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
je     8048f87 <_init-0xd31>
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
gs
js     8048fa2 <_init-0xd16>
pop    %edi
data16
jae    8048f32 <_init-0xd86>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048f95 <_init-0xd23>
data16
jb     8048f9e <_init-0xd1a>
gs
pop    %edi
je     8048f9e <_init-0xd1a>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048fa4 <_init-0xd14>
jne    8048fb7 <_init-0xd01>
fs
popa
je     8048fb0 <_init-0xd08>
pop    %edi
addr16
gs
je     8048faf <_init-0xd09>
insl   (%dx),%es:(%edi)
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8048f57 <_init-0xd61>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048fba <_init-0xcfe>
data16
jb     8048fc3 <_init-0xcf5>
gs
pop    %edi
jne    8048fd2 <_init-0xce6>
fs
popa
je     8048fcb <_init-0xced>
add    %ch,0x6e(%ebp)
je     8048fca <_init-0xcee>
outsb  %ds:(%esi),(%dx)
gs
ja     8048fce <_init-0xcea>
je     8048fd2 <_init-0xce6>
bound  %ebp,0x5f(%ebp,%eiz,2)
data16
jb     8048fe7 <_init-0xcd1>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x6e6d,0x0(%ebp,%eiz,2),%bp
je     8048fe2 <_init-0xcd6>
data16
jae    8048fe5 <_init-0xcd3>
jae    8048fed <_init-0xccb>
je     8048fe9 <_init-0xccf>
outsl  %ds:(%esi),(%dx)
jo     8049001 <_init-0xcb7>
imul   $0x6e6d0073,0x6e(%edi),%ebp
je     8048ff5 <_init-0xcc3>
outsb  %ds:(%esi),(%dx)
gs
ja     8048ff9 <_init-0xcbf>
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
jne    8049015 <_init-0xca3>
fs
popa
je     804900e <_init-0xcaa>
pop    %edi
outsw  %ds:(%esi),(%dx)
jb     8049011 <_init-0xca7>
gs
pop    %edi
jb     8049016 <_init-0xca2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8048fb7 <_init-0xd01>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     804901a <_init-0xc9e>
outsb  %ds:(%esi),(%dx)
gs
ja     804901e <_init-0xc9a>
je     8049022 <_init-0xc96>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8049028 <_init-0xc90>
imul   $0x65645f74,0x69(%esi),%ebp
bound  %esi,0x67(%ebp)
add    %ch,0x6e(%ebp)
je     8049037 <_init-0xc81>
jne    804904a <_init-0xc6e>
fs
popa
je     8049043 <_init-0xc75>
pop    %edi
jae    8049046 <_init-0xc72>
je     8049042 <_init-0xc76>
data16
jae    8048fe6 <_init-0xcd2>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8049049 <_init-0xc6f>
data16
jb     8049052 <_init-0xc66>
gs
pop    %edi
data16
jae    8048ff2 <_init-0xcc6>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8049055 <_init-0xc63>
data16
jae    8049058 <_init-0xc60>
jae    8049060 <_init-0xc58>
je     804905c <_init-0xc5c>
jae    804906e <_init-0xc4a>
jne    8049073 <_init-0xc45>
arpl   %sp,0x0(%ebp)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8049067 <_init-0xc51>
data16
jae    804906a <_init-0xc4e>
jae    8049072 <_init-0xc46>
je     804906e <_init-0xc4a>
je     8049072 <_init-0xc46>
jb     804907a <_init-0xc3e>
gs
je     8049016 <_init-0xca2>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8049079 <_init-0xc3f>
je     804907d <_init-0xc3b>
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x6d5f7366,0x5f(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jne    8049098 <_init-0xc20>
je     8049091 <_init-0xc27>
add    %ch,%fs:0x6e(%ebp)
je     8049091 <_init-0xc27>
jne    80490a4 <_init-0xc14>
fs
popa
je     804909d <_init-0xc1b>
pop    %edi
je     804909c <_init-0xc1c>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     80490a2 <_init-0xc16>
data16
jae    80490a5 <_init-0xc13>
je     80490b7 <_init-0xc01>
pop    %edi
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     80490b2 <_init-0xc06>
outsb  %ds:(%esi),(%dx)
je     8049050 <_init-0xc68>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     80490b3 <_init-0xc05>
outsb  %ds:(%esi),(%dx)
gs
ja     80490b7 <_init-0xc01>
data16
jae    804905b <_init-0xc5d>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     80490be <_init-0xbfa>
je     80490c2 <_init-0xbf6>
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     80490c8 <_init-0xbf0>
jb     80490dc <_init-0xbdc>
gs
pop    %edi
insl   (%dx),%es:(%edi)
je     80490cf <_init-0xbe9>
bound  %eax,(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     80490d3 <_init-0xbe5>
data16
jae    80490d6 <_init-0xbe2>
addr16
gs
je     80490da <_init-0xbde>
data16
jae    80490f2 <_init-0xbc6>
jns    80490f0 <_init-0xbc8>
add    %ch,%gs:0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    80490f8 <_init-0xbc0>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8049106 <_init-0xbb2>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8049114 <_init-0xba4>
imul   $0x73756c66,0x66(%eax,%eax,1),%esp
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jb     8049115 <_init-0xba3>
ja     8049123 <_init-0xb95>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8049139 <_init-0xb7f>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8049138 <_init-0xb80>
arpl   %si,0x0(%esi)
jae    804913d <_init-0xb7b>
je     8049146 <_init-0xb72>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     8049157 <_init-0xb61>
imul   $0x73006c61,0x6e(%edi),%esp
je     804915f <_init-0xb59>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     804915f <_init-0xb59>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     804916f <_init-0xb49>
arpl   %bp,0x72(%eax)
add    %dh,0x61(%edi)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
fs
jne    804917e <_init-0xb3a>
add    %dh,0x65(%eax)
jb     8049185 <_init-0xb33>
outsl  %ds:(%esi),(%dx)
jb     8049116 <_init-0xba2>
arpl   %sp,%fs:0x65(%edi)
je     8049190 <_init-0xb28>
gs
js     8049193 <_init-0xb25>
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jo     804918a <_init-0xb2e>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x5f,%al
xor    (%eax),%al
addr16
gs
je     804919f <_init-0xb19>
ja     80491a6 <_init-0xb12>
imul   $0x65736f6c,0x63(%eax,%eax,1),%esp
imul   $0x6f6e616e,%fs:0x0(%edx),%esi
jae    80491af <_init-0xb09>
gs
gs
jo     8049147 <_init-0xb71>
jae    80491bd <_init-0xafb>
jb     80491b9 <_init-0xaff>
arpl   %si,0x79(%eax)
add    %dh,0x75(%eax)
je     80491c6 <_init-0xaf2>
add    %ah,0x6f(%esi)
jb     80491c3 <_init-0xaf5>
add    %dh,0x69(%ebx)
addr16 jo 80491d0 <_init-0xae8>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    80491cf <_init-0xae9>
add    %dh,0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     8049170 <_init-0xb48>
pop    %edi
pop    %edi
jae    80491e8 <_init-0xad0>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x70,(%eax),%eax
jne    80491ff <_init-0xab9>
arpl   %bp,0x61(%eax)
jb     8049190 <_init-0xb28>
jb     80491f7 <_init-0xac1>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804920e <_init-0xaaa>
jb     8049210 <_init-0xaa8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     8049214 <_init-0xaa4>
imul   $0x6f747274,0x73(%eax,%eax,1),%esp
imul   $0x73,(%eax),%eax
je     8049223 <_init-0xa95>
je     8049222 <_init-0xa96>
insb   (%dx),%es:(%edi)
add    %ah,0x65(%esi)
outsl  %ds:(%esi),(%dx)
data16
add    %ah,0x67(%esi)
gs
je     8049232 <_init-0xa86>
add    %ah,0x65(%edi)
je     8049234 <_init-0xa84>
ja     8049234 <_init-0xa84>
popa
insl   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8049239 <_init-0xa7f>
outsb  %gs:(%esi),(%dx)
add    %dh,0x72(%eax)
arpl   %si,0x0(%esp,%ebp,2)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    8049240 <_init-0xa78>
je     80491dd <_init-0xadb>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
arpl   %bp,%gs:0x6e(%edi)
jbe    80491e8 <_init-0xad0>
jae    804925e <_init-0xa5a>
jb     804925f <_init-0xa59>
je     8049260 <_init-0xa58>
add    %dh,0x74(%ebp)
imul   $0x7461736e,0x65(%ebp),%ebp
add    %bl,0x5f(%edi)
gs
jb     8049270 <_init-0xa48>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65736600,0x6e(%edi),%ebp
imul   $0x72,%gs:(%eax),%eax
gs
popa
add    %bl,%fs:0x5f(%edi)
data16
js     804928d <_init-0xa2b>
je     804927d <_init-0xa3b>
je     8049254 <_init-0xa64>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8049297 <_init-0xa21>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     8049299 <_init-0xa1f>
jb     80492a2 <_init-0xa16>
popa
insl   (%dx),%es:(%edi)
add    %ah,0x63(%esi)
push   $0x6e776f
jae    80492b4 <_init-0xa04>
outsl  %fs:(%esi),(%dx)
jne    80492b8 <_init-0xa00>
add    %ah,0x70(%esi)
jne    80492bd <_init-0x9fb>
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80492bd <_init-0x9fb>
add    %dh,0x74(%ebx)
jb     80492d1 <_init-0x9e7>
outsl  %ds:(%esi),(%dx)
jne    80492cc <_init-0x9ec>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80492dc <_init-0x9dc>
popa
jae    80492e2 <_init-0x9d6>
add    %dh,0x74(%ebx)
jb     80492d7 <_init-0x9e1>
popa
je     8049277 <_init-0xa41>
jne    80492e6 <_init-0x9d2>
popa
jae    80492e7 <_init-0x9d1>
add    %dh,0x74(%ebx)
jb     80492e4 <_init-0x9d4>
popa
jae    80492e9 <_init-0x9cf>
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     80492f3 <_init-0x9c5>
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esp
je     80492f7 <_init-0x9c1>
je     80492ce <_init-0x9ea>
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     8049302 <_init-0x9b6>
outsb  %ds:(%esi),(%dx)
imul   $0x73785f5f,%fs:0x0(%edx),%esi
je     8049309 <_init-0x9af>
je     80492e0 <_init-0x9d8>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8049323 <_init-0x995>
outsb  %ds:(%esi),(%dx)
jbe    80492c1 <_init-0x9f7>
jae    8049336 <_init-0x982>
arpl   %sp,0x6e(%ecx)
data16
add    %ch,0x70(%edi)
je     804932d <_init-0x98b>
jb     8049335 <_init-0x983>
add    %dh,0x74(%ebx)
fs
gs
jb     8049347 <_init-0x971>
add    %dh,0x69(%ebx)
addr16
fs
gs
insb   (%dx),%es:(%edi)
jae    8049343 <_init-0x975>
je     80492e0 <_init-0x9d8>
imul   $0x61006c74,0x63(%edi),%ebp
insb   (%dx),%es:(%edi)
popa
jb     8049358 <_init-0x960>
add    %bl,0x5f(%edi)
jae    804935e <_init-0x95a>
jo     8049364 <_init-0x954>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     8049366 <_init-0x952>
jb     8049370 <_init-0x948>
jne    8049373 <_init-0x945>
jae    8049305 <_init-0x9b3>
addr16
gs
je     804937e <_init-0x93a>
imul   $0x6c646165,0x72(%eax,%eax,1),%esp
imul   $0x74656700,0x6b(%esi),%ebp
imul   $0x6f746567,%gs:0x0(%si),%esp
6f
jo     8049397 <_init-0x921>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8049397 <_init-0x921>
ja     804939a <_init-0x91e>
add    %ah,0x65(%edi)
je     80493af <_init-0x909>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    8049344 <_init-0x974>
jb     80493ab <_init-0x90d>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     80493be <_init-0x8fa>
jne    80493c4 <_init-0x8f4>
add    %bl,%fs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x69(%ebx)
imul   $0x65626d65,0x6d(%bp,%di),%esi
jb     8049376 <_init-0x942>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x61(%edi)
imul   $0x736c0064,0x69(%eax,%esi,2),%esi
gs imul $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     80493f6 <_init-0x8c2>
push   $0x5f5f0072
jbe    8049400 <_init-0x8b8>
jo     804940e <_init-0x8aa>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     8049428 <_init-0x890>
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     804942e <_init-0x88a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8049428 <_init-0x890>
jb     8049424 <_init-0x894>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
arpl   %bp,0x74(%esi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
jae    8049443 <_init-0x875>
jb     804943e <_init-0x87a>
outsb  %ds:(%esi),(%dx)
je     804943e <_init-0x87a>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x6f(%ebp)
jne    804944f <_init-0x869>
je     80493e3 <_init-0x8d5>
gs
jb     8049458 <_init-0x860>
js     80493e8 <_init-0x8d0>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8049454 <_init-0x864>
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%esi)
jo     804945f <_init-0x859>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     8049469 <_init-0x84f>
js     804947a <_init-0x83e>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8049486 <_init-0x832>
add    %dh,0x65(%ebx)
je     804947f <_init-0x839>
imul   $0x6d637274,0x73(%eax,%eax,1),%esp
jo     8049422 <_init-0x896>
pop    %edi
pop    %edi
jae    804949a <_init-0x81e>
jb     804949c <_init-0x81c>
outsl  %ds:(%esi),(%dx)
jne    8049497 <_init-0x821>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     804949f <_init-0x819>
jb     80494ae <_init-0x80a>
outsl  %ds:(%esi),(%dx)
jb     804943f <_init-0x879>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80494bf <_init-0x7f9>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8049458 <_init-0x860>
jae    80494c8 <_init-0x7f0>
jo     80494ce <_init-0x7ea>
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
outsb  %gs:(%esi),(%dx)
jbe    80494d5 <_init-0x7e3>
jb     80494dd <_init-0x7db>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     80494de <_init-0x7da>
js     80494e4 <_init-0x7d4>
je     804947d <_init-0x83b>
pop    %edi
gs
fs
popa
je     80494e4 <_init-0x7d4>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8049500 <_init-0x7b8>
popa
jb     8049503 <_init-0x7b5>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edx
dec    %esp
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    (%eax),%dh
add    %al,0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %esi,0x494c4700
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
dec    %ebp
dec    %edi
push   %ebp
dec    %esi
push   %esp
pop    %edi
xor    (%esi),%ch
xor    (%eax),%dh
add    %cl,0x4f(%ebp)
push   %ebp
dec    %esi
push   %esp
pop    %edi
xor    (%esi),%ch
xor    %edi,(%ecx)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    $0x2000000,%eax
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
push   %es
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%edx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edi)
add    %cl,(%edx)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
or     (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %cl,0x3000300
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %cl,(%esi)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
sldt   (%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,0x6000000
add    %cl,0x3000300
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%al
or     $0x3000300,%eax
add    %cl,0x3000300
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %dl,(%eax)
add    %dl,(%eax)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,(%eax)
fimull %gs:(%edi)
add    %al,(%eax)
or     (%eax),%eax
mov    $0x7,%ch
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    0xda641,%al
add    %cl,(%ecx)
add    %bh,0x10000007(%edi)
add    %al,(%eax)
add    %dh,0xda641(%edi)
add    %cl,(%eax)
add    %cl,%dl
pop    %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x41,%ch
cmpsb  %es:(%edi),%ds:(%esi)
or     $0x70000,%eax
aad    $0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
or     %eax,(%eax)
mov    %al,0x10000003
add    %al,(%eax)
add    %ah,0x13000000(%eax)
imul   $0x100000,0xd(%ecx),%ebp
loopne 8049701 <_init-0x5b7>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %ss
imul   $0xf0000,0xd(%ecx),%ebp
ljmp   $0x0,$0x10000007
add    %dh,0x1f(%ebx)
imul   $0xe0000,(%ecx),%ecx
hlt
pop    %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0xd0000,%eax
add    %cl,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x80a,0xc0000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x60000,%eax
adc    $0x8,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %ss
imul   $0x50000,0xd(%ecx),%ebp
push   %ds
or     %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%eax,%eax,1)
sub    %cl,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
xor    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    (%eax),%al
add    (%edx),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lock jne 804973a <_init-0x57e>
add    (%eax),%eax
add    %cl,(%edx)
add    %bh,(%esi)
or     %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%cl
jne    804974a <_init-0x56e>
add    (%eax),%eax
add    %al,(%edx)
add    %cl,0x8(%ecx)
add    %al,(%eax)
add    %al,(%eax)
cld
fild   0x4f0608
add    %ah,-0x1b(%eax)
add    $0xa40508,%eax
add    %ah,0x5(%ebp,%eiz,8)
or     %al,0x800000a5
in     $0x5,%eax
or     %al,0xa00000ab
in     $0x5,%eax
or     %al,0xa40000a1
in     $0x5,%eax
.byte 0x8
.byte 0x5
lods   %ds:(%esi),%al
or     $0xe0,%al
add    $0x10708,%eax
add    %dl,(%eax)
loopne 80497f0 <_init-0x4c8>
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%eiz,8)
add    $0x30708,%eax
add    %bl,(%eax)
loopne 8049800 <_init-0x4b8>
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%eiz,8)
add    $0x50708,%eax
add    %ah,(%eax)
loopne 8049810 <_init-0x4a8>
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0xe0,%al
add    $0x70708,%eax
add    %ch,(%eax)
loopne 8049820 <_init-0x498>
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%eiz,8)
add    $0x90708,%eax
add    %dh,(%eax)
loopne 8049830 <_init-0x488>
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax,%eiz,8)
add    $0xb0708,%eax
add    %bh,(%eax)
loopne 8049840 <_init-0x478>
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%eiz,8)
add    $0xe0708,%eax
add    %al,-0x20(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,-0x20(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,-0x20(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,-0x20(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%eiz,8)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
loopne 8049890 <_init-0x428>
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
fs
loopne 8049898 <_init-0x420>
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,-0x20(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,-0x20(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,-0x20(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%eiz,8)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
and    $0x5,%al
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
test   %ah,%al
add    $0x200708,%eax
add    %cl,0x70805e0(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%eiz,8)
add    %al,(%eax)
nop
loopne 80498f0 <_init-0x3c8>
or     %al,(%edi)
and    (%eax),%eax
add    %dl,0x24070805(%eax,%eiz,8)
add    %al,(%eax)
cwtl
loopne 8049900 <_init-0x3b8>
or     %al,(%edi)
and    $0xe09c0000,%eax
add    $0x260708,%eax
add    %ah,0x70805e0(%eax)
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
loopne 8049918 <_init-0x3a0>
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x70805e0(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070805(%eax,%eiz,8)
add    %al,(%eax)
mov    $0xe0,%al
add    $0x2b0708,%eax
add    %dh,0x2c070805(%eax,%eiz,8)
add    %al,(%eax)
mov    $0x70805e0,%eax
sub    $0xe0bc0000,%eax
add    $0x2e0708,%eax
add    %al,%al
loopne 8049950 <_init-0x368>
or     %al,(%edi)
das
add    %al,(%eax)
(bad)
loopne 8049958 <_init-0x360>
or     %al,(%edi)
xor    %al,(%eax)
add    %cl,%al
loopne 8049960 <_init-0x358>
or     %al,(%edi)
xor    %eax,(%eax)
add    %cl,%ah
loopne 8049968 <_init-0x350>
or     %al,(%edi)
xor    (%eax),%al
add    %dl,%al
loopne 8049970 <_init-0x348>
or     %al,(%edi)
xor    (%eax),%eax
add    %dl,%ah
loopne 8049978 <_init-0x340>
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%al
loopne 8049980 <_init-0x338>
or     %al,(%edi)
xor    $0xe0dc0000,%eax
add    $0x360708,%eax
add    %ah,%al
loopne 8049990 <_init-0x328>
or     %al,(%edi)
aaa
add    %al,(%eax)
in     $0xe0,%al
add    $0x380708,%eax
add    %ch,%al
loopne 80499a0 <_init-0x318>
or     %al,(%edi)
cmp    %eax,(%eax)
add    %ch,%ah
loopne 80499a8 <_init-0x310>
or     %al,(%edi)
cmp    (%eax),%al
add    %dh,%al
loopne 80499b0 <_init-0x308>
or     %al,(%edi)
cmp    (%eax),%eax
add    %dh,%ah
loopne 80499b8 <_init-0x300>
or     %al,(%edi)
cmp    $0x0,%al
add    %bh,%al
loopne 80499c0 <_init-0x2f8>
or     %al,(%edi)
cmp    $0xe0fc0000,%eax
add    $0x3e0708,%eax
add    %al,(%eax)
loope  80499d0 <_init-0x2e8>
or     %al,(%edi)
aas
add    %al,(%eax)
add    $0xe1,%al
add    $0x400708,%eax
add    %cl,(%eax)
loope  80499e0 <_init-0x2d8>
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
or     $0xe1,%al
add    $0x420708,%eax
add    %dl,(%eax)
loope  80499f0 <_init-0x2c8>
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
adc    $0xe1,%al
add    $0x440708,%eax
add    %bl,(%eax)
loope  8049a00 <_init-0x2b8>
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
sbb    $0xe1,%al
add    $0x460708,%eax
add    %ah,(%eax)
loope  8049a10 <_init-0x2a8>
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
and    $0xe1,%al
add    $0x480708,%eax
add    %ch,(%eax)
loope  8049a20 <_init-0x298>
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
sub    $0xe1,%al
add    $0x4a0708,%eax
add    %dh,(%eax)
loope  8049a30 <_init-0x288>
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
xor    $0xe1,%al
add    $0x4c0708,%eax
add    %bh,(%eax)
loope  8049a40 <_init-0x278>
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
cmp    $0xe1,%al
add    $0x4e0708,%eax
add    %al,-0x1f(%eax)
add    $0x4f0708,%eax
add    %al,0x5(%ecx,%eiz,8)
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %eax
loope  8049a60 <_init-0x258>
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
dec    %esp
loope  8049a68 <_init-0x250>
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %eax
loope  8049a70 <_init-0x248>
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
push   %esp
loope  8049a78 <_init-0x240>
or     %al,(%edi)
push   %esp
add    %al,(%eax)
pop    %eax
loope  8049a80 <_init-0x238>
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pop    %esp
loope  8049a88 <_init-0x230>
or     %al,(%edi)
push   %esi
add    %al,(%eax)
pusha
loope  8049a90 <_init-0x228>
or     %al,(%edi)
push   %edi
add    %al,(%eax)
fs
loope  8049a98 <_init-0x220>
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
push   $0x70805e1
pop    %ecx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
loope  8049aa8 <_init-0x210>
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
jo     8049a8b <_init-0x22d>
add    $0x5b0708,%eax
add    %dh,0x5(%ecx,%eiz,8)
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
js     8049a9b <_init-0x21d>
add    $0x5d0708,%eax
add    %bh,0x5(%ecx,%eiz,8)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
and    $0x5,%cl
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
test   %ah,%cl
add    $0x600708,%eax
add    %cl,0x70805e1(%eax)
popa
add    %al,(%eax)
mov    %fs,%ecx
add    $0x620708,%eax
add    %dl,0x70805e1(%eax)
arpl   %ax,(%eax)
add    %dl,0x64070805(%ecx,%eiz,8)
add    %al,(%eax)
cwtl
loope  8049b00 <_init-0x1b8>
or     %al,(%edi)
add    %al,%gs:(%eax)
pushf
loope  8049b08 <_init-0x1b0>
or     %al,(%edi)
data16
add    %al,(%eax)
mov    0x70805e1,%al
add    %al,(%bx,%si)
movsb  %ds:(%esi),%es:(%edi)
loope  8049b18 <_init-0x1a0>
or     %al,(%edi)
push   $0xe1a80000
add    $0x690708,%eax
add    %ch,0x6a070805(%ecx,%eiz,8)
add    %al,(%eax)
mov    $0xe1,%al
add    $0x6b0708,%eax
add    %dh,0x6c070805(%ecx,%eiz,8)
add    %al,(%eax)
mov    $0x70805e1,%eax
insl   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x70805e1,%esp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
shl    $0x5,%cl
or     %al,(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
(bad)
add    $0x700708,%eax
add    %cl,%al
loope  8049b60 <_init-0x158>
or     %al,(%edi)
jno    8049b5f <_init-0x159>
add    %cl,%ah
loope  8049b68 <_init-0x150>
or     %al,(%edi)
jb     8049b67 <_init-0x151>
add    %dl,%al
loope  8049b70 <_init-0x148>
or     %al,(%edi)
jae    8049b6f <_init-0x149>
add    %dl,%ah
loope  8049b78 <_init-0x140>
or     %al,(%edi)
je     8049b77 <_init-0x141>
add    %bl,%al
loope  8049b80 <_init-0x138>
or     %al,(%edi)
jne    8049b7f <_init-0x139>
add    %bl,%ah
loope  8049b88 <_init-0x130>
or     %al,(%edi)
jbe    8049b87 <_init-0x131>
add    %ah,%al
loope  8049b90 <_init-0x128>
or     %al,(%edi)
ja     8049b8f <_init-0x129>
add    %ah,%ah
loope  8049b98 <_init-0x120>
or     %al,(%edi)
js     8049b97 <_init-0x121>
add    %ch,%al
loope  8049ba0 <_init-0x118>
or     %al,(%edi)
jns    8049b9f <_init-0x119>
add    %ch,%ah
loope  8049ba8 <_init-0x110>
or     %al,(%edi)
jp     8049ba7 <_init-0x111>
add    %dh,%al
loope  8049bb0 <_init-0x108>
or     %al,(%edi)
jnp    8049baf <_init-0x109>
add    %dh,%ah
loope  8049bb8 <_init-0x100>
or     %al,(%edi)
jl     8049bb7 <_init-0x101>
add    %bh,%al
loope  8049bc0 <_init-0xf8>
or     %al,(%edi)
jge    8049bbf <_init-0xf9>
add    %bh,%ah
loope  8049bc8 <_init-0xf0>
or     %al,(%edi)
jle    8049bc7 <_init-0xf1>
add    %al,(%eax)
loop   8049bd0 <_init-0xe8>
or     %al,(%edi)
jg     8049bcf <_init-0xe9>
add    %al,(%edx,%eiz,8)
add    $0x800708,%eax
add    %cl,(%eax)
loop   8049be0 <_init-0xd8>
or     %al,(%edi)
addl   $0x5e20c00,(%eax)
or     %al,(%edi)
(bad)
add    %al,(%eax)
adc    %ah,%dl
add    $0x830708,%eax
add    %dl,(%edx,%eiz,8)
add    $0x840708,%eax
add    %bl,(%eax)
loop   8049c00 <_init-0xb8>
or     %al,(%edi)
xchg   %al,(%eax)
add    %bl,(%edx,%eiz,8)
add    $0x870708,%eax
add    %ah,(%eax)
loop   8049c10 <_init-0xa8>
or     %al,(%edi)
mov    %al,(%eax)
add    %ah,(%edx,%eiz,8)
add    $0x890708,%eax
add    %ch,(%eax)
loop   8049c20 <_init-0x98>
or     %al,(%edi)
mov    (%eax),%al
add    %ch,(%edx,%eiz,8)
add    $0x8b0708,%eax
add    %dh,(%eax)
loop   8049c30 <_init-0x88>
or     %al,(%edi)
mov    %es,(%eax)
add    %dh,(%edx,%eiz,8)
add    $0x8d0708,%eax
add    %bh,(%eax)
loop   8049c40 <_init-0x78>
or     %al,(%edi)
mov    (%eax),%es
add    %bh,(%edx,%eiz,8)
add    $0x900708,%eax
add    %al,-0x1e(%eax)
add    $0x910708,%eax
add    %al,0x5(%edx,%eiz,8)
or     %al,(%edi)
xchg   %eax,%edx
add    %al,(%eax)
dec    %eax
loop   8049c60 <_init-0x58>
or     %al,(%edi)
xchg   %eax,%ebx
add    %al,(%eax)
dec    %esp
loop   8049c68 <_init-0x50>
or     %al,(%edi)
xchg   %eax,%esp
add    %al,(%eax)
push   %eax
loop   8049c70 <_init-0x48>
or     %al,(%edi)
xchg   %eax,%ebp
add    %al,(%eax)
push   %esp
loop   8049c78 <_init-0x40>
or     %al,(%edi)
xchg   %eax,%esi
add    %al,(%eax)
pop    %eax
loop   8049c80 <_init-0x38>
or     %al,(%edi)
xchg   %eax,%edi
add    %al,(%eax)
pop    %esp
loop   8049c88 <_init-0x30>
or     %al,(%edi)
cwtl
add    %al,(%eax)
pusha
loop   8049c90 <_init-0x28>
or     %al,(%edi)
cltd
add    %al,(%eax)
fs
loop   8049c98 <_init-0x20>
or     %al,(%edi)
lcall  $0x805,$0xe2680000
pop    %es
fwait
add    %al,(%eax)
insb   (%dx),%es:(%edi)
loop   8049ca8 <_init-0x10>
or     %al,(%edi)
pushf
add    %al,(%eax)
jo     8049c8c <_init-0x2c>
add    $0x9d0708,%eax
add    %dh,0x5(%edx,%eiz,8)
or     %al,(%edi)
sahf
push   %ebx
sub    $0x8,%esp
call   804b510 <fchmod@plt+0xe80>
add    $0x1433f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8049cd6 <_init+0x1e>
call   804a1c0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x805e004
jmp    *0x805e008
add    %al,(%eax)
jmp    *0x805e00c
push   $0x0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e010
push   $0x8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e014
push   $0x10
jmp    8049ce0 <_init+0x28>
jmp    *0x805e018
push   $0x18
jmp    8049ce0 <_init+0x28>
jmp    *0x805e01c
push   $0x20
jmp    8049ce0 <_init+0x28>
jmp    *0x805e020
push   $0x28
jmp    8049ce0 <_init+0x28>
jmp    *0x805e024
push   $0x30
jmp    8049ce0 <_init+0x28>
jmp    *0x805e028
push   $0x38
jmp    8049ce0 <_init+0x28>
jmp    *0x805e02c
push   $0x40
jmp    8049ce0 <_init+0x28>
jmp    *0x805e030
push   $0x48
jmp    8049ce0 <_init+0x28>
jmp    *0x805e034
push   $0x50
jmp    8049ce0 <_init+0x28>
jmp    *0x805e038
push   $0x58
jmp    8049ce0 <_init+0x28>
jmp    *0x805e03c
push   $0x60
jmp    8049ce0 <_init+0x28>
jmp    *0x805e040
push   $0x68
jmp    8049ce0 <_init+0x28>
jmp    *0x805e044
push   $0x70
jmp    8049ce0 <_init+0x28>
jmp    *0x805e048
push   $0x78
jmp    8049ce0 <_init+0x28>
jmp    *0x805e04c
push   $0x80
jmp    8049ce0 <_init+0x28>
jmp    *0x805e050
push   $0x88
jmp    8049ce0 <_init+0x28>
jmp    *0x805e054
push   $0x90
jmp    8049ce0 <_init+0x28>
jmp    *0x805e058
push   $0x98
jmp    8049ce0 <_init+0x28>
jmp    *0x805e05c
push   $0xa0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e060
push   $0xa8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e064
push   $0xb0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e068
push   $0xb8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e06c
push   $0xc0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e070
push   $0xc8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e074
push   $0xd0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e078
push   $0xd8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e07c
push   $0xe0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e080
push   $0xe8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e084
push   $0xf0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e088
push   $0xf8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e08c
push   $0x100
jmp    8049ce0 <_init+0x28>
jmp    *0x805e090
push   $0x108
jmp    8049ce0 <_init+0x28>
jmp    *0x805e094
push   $0x110
jmp    8049ce0 <_init+0x28>
jmp    *0x805e098
push   $0x118
jmp    8049ce0 <_init+0x28>
jmp    *0x805e09c
push   $0x120
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0a0
push   $0x128
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0a4
push   $0x130
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0a8
push   $0x138
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0ac
push   $0x140
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0b0
push   $0x148
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0b4
push   $0x150
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0b8
push   $0x158
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0bc
push   $0x160
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0c0
push   $0x168
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0c4
push   $0x170
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0c8
push   $0x178
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0cc
push   $0x180
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0d0
push   $0x188
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0d4
push   $0x190
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0d8
push   $0x198
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0dc
push   $0x1a0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0e0
push   $0x1a8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0e4
push   $0x1b0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0e8
push   $0x1b8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0ec
push   $0x1c0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0f0
push   $0x1c8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0f4
push   $0x1d0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0f8
push   $0x1d8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e0fc
push   $0x1e0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e100
push   $0x1e8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e104
push   $0x1f0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e108
push   $0x1f8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e10c
push   $0x200
jmp    8049ce0 <_init+0x28>
jmp    *0x805e110
push   $0x208
jmp    8049ce0 <_init+0x28>
jmp    *0x805e114
push   $0x210
jmp    8049ce0 <_init+0x28>
jmp    *0x805e118
push   $0x218
jmp    8049ce0 <_init+0x28>
jmp    *0x805e11c
push   $0x220
jmp    8049ce0 <_init+0x28>
jmp    *0x805e120
push   $0x228
jmp    8049ce0 <_init+0x28>
jmp    *0x805e124
push   $0x230
jmp    8049ce0 <_init+0x28>
jmp    *0x805e128
push   $0x238
jmp    8049ce0 <_init+0x28>
jmp    *0x805e12c
push   $0x240
jmp    8049ce0 <_init+0x28>
jmp    *0x805e130
push   $0x248
jmp    8049ce0 <_init+0x28>
jmp    *0x805e134
push   $0x250
jmp    8049ce0 <_init+0x28>
jmp    *0x805e138
push   $0x258
jmp    8049ce0 <_init+0x28>
jmp    *0x805e13c
push   $0x260
jmp    8049ce0 <_init+0x28>
jmp    *0x805e140
push   $0x268
jmp    8049ce0 <_init+0x28>
jmp    *0x805e144
push   $0x270
jmp    8049ce0 <_init+0x28>
jmp    *0x805e148
push   $0x278
jmp    8049ce0 <_init+0x28>
jmp    *0x805e14c
push   $0x280
jmp    8049ce0 <_init+0x28>
jmp    *0x805e150
push   $0x288
jmp    8049ce0 <_init+0x28>
jmp    *0x805e154
push   $0x290
jmp    8049ce0 <_init+0x28>
jmp    *0x805e158
push   $0x298
jmp    8049ce0 <_init+0x28>
jmp    *0x805e15c
push   $0x2a0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e160
push   $0x2a8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e164
push   $0x2b0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e168
push   $0x2b8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e16c
push   $0x2c0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e170
push   $0x2c8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e174
push   $0x2d0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e178
push   $0x2d8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e17c
push   $0x2e0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e180
push   $0x2e8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e184
push   $0x2f0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e188
push   $0x2f8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e18c
push   $0x300
jmp    8049ce0 <_init+0x28>
jmp    *0x805e190
push   $0x308
jmp    8049ce0 <_init+0x28>
jmp    *0x805e194
push   $0x310
jmp    8049ce0 <_init+0x28>
jmp    *0x805e198
push   $0x318
jmp    8049ce0 <_init+0x28>
jmp    *0x805e19c
push   $0x320
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1a0
push   $0x328
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1a4
push   $0x330
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1a8
push   $0x338
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1ac
push   $0x340
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1b0
push   $0x348
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1b4
push   $0x350
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1b8
push   $0x358
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1bc
push   $0x360
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1c0
push   $0x368
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1c4
push   $0x370
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1c8
push   $0x378
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1cc
push   $0x380
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1d0
push   $0x388
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1d4
push   $0x390
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1d8
push   $0x398
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1dc
push   $0x3a0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1e0
push   $0x3a8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1e4
push   $0x3b0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1e8
push   $0x3b8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1ec
push   $0x3c0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1f0
push   $0x3c8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1f4
push   $0x3d0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1f8
push   $0x3d8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e1fc
push   $0x3e0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e200
push   $0x3e8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e204
push   $0x3f0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e208
push   $0x3f8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e20c
push   $0x400
jmp    8049ce0 <_init+0x28>
jmp    *0x805e210
push   $0x408
jmp    8049ce0 <_init+0x28>
jmp    *0x805e214
push   $0x410
jmp    8049ce0 <_init+0x28>
jmp    *0x805e218
push   $0x418
jmp    8049ce0 <_init+0x28>
jmp    *0x805e21c
push   $0x420
jmp    8049ce0 <_init+0x28>
jmp    *0x805e220
push   $0x428
jmp    8049ce0 <_init+0x28>
jmp    *0x805e224
push   $0x430
jmp    8049ce0 <_init+0x28>
jmp    *0x805e228
push   $0x438
jmp    8049ce0 <_init+0x28>
jmp    *0x805e22c
push   $0x440
jmp    8049ce0 <_init+0x28>
jmp    *0x805e230
push   $0x448
jmp    8049ce0 <_init+0x28>
jmp    *0x805e234
push   $0x450
jmp    8049ce0 <_init+0x28>
jmp    *0x805e238
push   $0x458
jmp    8049ce0 <_init+0x28>
jmp    *0x805e23c
push   $0x460
jmp    8049ce0 <_init+0x28>
jmp    *0x805e240
push   $0x468
jmp    8049ce0 <_init+0x28>
jmp    *0x805e244
push   $0x470
jmp    8049ce0 <_init+0x28>
jmp    *0x805e248
push   $0x478
jmp    8049ce0 <_init+0x28>
jmp    *0x805e24c
push   $0x480
jmp    8049ce0 <_init+0x28>
jmp    *0x805e250
push   $0x488
jmp    8049ce0 <_init+0x28>
jmp    *0x805e254
push   $0x490
jmp    8049ce0 <_init+0x28>
jmp    *0x805e258
push   $0x498
jmp    8049ce0 <_init+0x28>
jmp    *0x805e25c
push   $0x4a0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e260
push   $0x4a8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e264
push   $0x4b0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e268
push   $0x4b8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e26c
push   $0x4c0
jmp    8049ce0 <_init+0x28>
jmp    *0x805e270
push   $0x4c8
jmp    8049ce0 <_init+0x28>
jmp    *0x805e274
push   $0x4d0
jmp    8049ce0 <_init+0x28>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x140,%esp
mov    0xc(%ebp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x13c(%esp)
xor    %eax,%eax
mov    0x8(%ebp),%esi
call   8056030 <error+0x2550>
movl   $0x8057f22,0x4(%esp)
movl   $0x6,(%esp)
call   804a480 <setlocale@plt>
movl   $0x8058165,0x4(%esp)
movl   $0x8058177,(%esp)
call   804a5a0 <bindtextdomain@plt>
movl   $0x8058177,(%esp)
call   8049ff0 <textdomain@plt>
mov    (%ebx),%eax
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x805f6e0
call   804a4b0 <strrchr@plt>
test   %eax,%eax
je     804a720 <fchmod@plt+0x90>
add    $0x1,%eax
mov    %eax,0x805f6e0
movl   $0x12,(%esp)
call   804a5e0 <umask@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x4(%esp)
movl   $0x8058182,(%esp)
call   8049d80 <open64@plt>
cmp    $0x2,%eax
jbe    804a730 <fchmod@plt+0xa0>
jg     804aa7d <fchmod@plt+0x3ed>
nop
call   8056780 <error+0x2ca0>
xor    %edi,%edi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8056b00 <error+0x3020>
movl   $0x0,0x38(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x3c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x805e2a0,0xc(%esp)
movl   $0x805819e,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804a200 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804aa10 <fchmod@plt+0x380>
cmp    $0x90,%eax
ja     804aa6e <fchmod@plt+0x3de>
jmp    *0x8059db0(,%eax,4)
movl   $0x1,0x805f6e8
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x24000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x44000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x84000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x104000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x20000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x40000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x80000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x100000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a4,%eax
mov    %eax,(%esp)
call   8056880 <error+0x2da0>
test   %eax,%eax
je     804adb6 <fchmod@plt+0x726>
mov    %eax,(%esp)
call   804a190 <puts@plt>
xor    %eax,%eax
mov    %eax,(%esp)
call   804a1d0 <exit@plt>
movl   $0x1,0x805e60c
00
movl   $0x0,0x805e614
00
jmp    804a790 <fchmod@plt+0x100>
addl   $0x1,0x805e5ac
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a4,%eax
mov    %eax,0x38(%esp)
jmp    804a790 <fchmod@plt+0x100>
movl   $0x1,0x805e610
00
jmp    804a790 <fchmod@plt+0x100>
movl   $0x1,0x805e614
00
movl   $0x0,0x805e60c
00
jmp    804a790 <fchmod@plt+0x100>
call   804a670 <__ctype_b_loc@plt>
mov    0x805e5a4,%edx
movsbl (%edx),%ecx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%ecx,2)
je     804aa8a <fchmod@plt+0x3fa>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804a5f0 <strtol@plt>
mov    %eax,0x805e530
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a4,%edx
xor    %ecx,%ecx
mov    0x3c(%esp),%eax
call   804c160 <fchmod@plt+0x1ad0>
mov    %eax,0x3c(%esp)
jmp    804a790 <fchmod@plt+0x100>
addl   $0x1,0x805e618
jmp    804a790 <fchmod@plt+0x100>
movl   $0x1,0x805e600
00
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a4,%eax
mov    %eax,0x2c(%esp)
jmp    804a790 <fchmod@plt+0x100>
movl   $0x0,0x805e53c
00
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a0,%eax
xor    %edx,%edx
call   804bee0 <fchmod@plt+0x1850>
addl   $0x1,0x805e61c
jmp    804a790 <fchmod@plt+0x100>
addl   $0x1,0x805e608
jmp    804a790 <fchmod@plt+0x100>
movl   $0x805818c,0x8(%esp)
movl   $0x8059990,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
movl   $0x0,(%esp)
call   804a1d0 <exit@plt>
mov    0x805e5a4,%edi
jmp    804a790 <fchmod@plt+0x100>
movl   $0x5000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a4,%edx
xor    %ecx,%ecx
mov    0x34(%esp),%eax
call   804c160 <fchmod@plt+0x1ad0>
mov    %eax,0x34(%esp)
jmp    804a790 <fchmod@plt+0x100>
movl   $0x2000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
mov    0x805e5a4,%eax
mov    %eax,0x30(%esp)
jmp    804a790 <fchmod@plt+0x100>
addl   $0x1,0x805e604
jmp    804a790 <fchmod@plt+0x100>
movl   $0x1000,0x805e5fc
00
jmp    804a790 <fchmod@plt+0x100>
cmpl   $0x2,0x805e5ac
jg     804ae9d <fchmod@plt+0x80d>
movl   $0x0,(%esp)
call   804a2b0 <mnt_init_debug@plt>
mov    0x805e580,%eax
test   %edi,%edi
mov    %eax,%ecx
mov    %eax,0x24(%esp)
setne  %al
cmpl   $0x0,0x30(%esp)
mov    %al,0x1b(%esp)
setne  0x28(%esp)
sub    %ecx,%esi
or     %al,0x28(%esp)
movzbl 0x28(%esp),%eax
add    %eax,%esi
mov    %eax,0x1c(%esp)
jne    804aac1 <fchmod@plt+0x431>
cmpl   $0x0,0x805e608
jne    804aac1 <fchmod@plt+0x431>
cmpl   $0x0,0x3c(%esp)
je     804ae2c <fchmod@plt+0x79c>
mov    0x805e564,%eax
mov    $0x1,%edx
call   804bee0 <fchmod@plt+0x1850>
mov    %eax,(%esp)
call   804a620 <close@plt>
jmp    804a74f <fchmod@plt+0xbf>
movl   $0x5,0x8(%esp)
movl   $0x805995c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
mov    0x805e5a4,%edx
jmp    804a8e4 <fchmod@plt+0x254>
call   8049f90 <getuid@plt>
mov    %eax,0x20(%esp)
call   8049fb0 <geteuid@plt>
mov    0x20(%esp),%edx
test   %edx,%edx
mov    %eax,%ecx
sete   %al
cmp    %ecx,%edx
jne    804abeb <fchmod@plt+0x55b>
test   %al,%al
je     804abeb <fchmod@plt+0x55b>
movl   $0x0,0x805e534
00
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804ab45 <fchmod@plt+0x4b5>
movl   $0x805e5ec,0x8(%esp)
movl   $0x805aa1e,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <sscanf@plt>
sub    $0x1,%eax
je     804ab45 <fchmod@plt+0x4b5>
movl   $0x5,0x8(%esp)
movl   $0x8059aec,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
mov    0x24(%esp),%eax
movl   $0x8050730,(%esp)
lea    (%ebx,%eax,4),%ebx
call   8057d60 <error+0x4280>
cmp    $0x1,%esi
je     804b01d <fchmod@plt+0x98d>
cmp    $0x2,%esi
je     804adcc <fchmod@plt+0x73c>
test   %esi,%esi
jne    804aa6e <fchmod@plt+0x3de>
movl   $0x0,0x60(%esp)
call   804fd10 <fchmod@plt+0x5680>
mov    %eax,0x30(%esp)
mov    (%eax),%ebx
lea    0x50(%esp),%eax
mov    %eax,0x28(%esp)
cmp    %ebx,0x30(%esp)
je     804af4c <fchmod@plt+0x8bc>
test   %ebx,%ebx
je     804af4c <fchmod@plt+0x8bc>
mov    0x14(%ebx),%esi
test   %esi,%esi
je     804abcc <fchmod@plt+0x53c>
movl   $0x805828f,0x4(%esp)
mov    %esi,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
je     804abcc <fchmod@plt+0x53c>
cmp    %eax,%esi
je     804ae82 <fchmod@plt+0x7f2>
cmpb   $0x2c,-0x1(%eax)
je     804ae82 <fchmod@plt+0x7f2>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8053c00 <error+0x120>
test   %eax,%eax
jne    804ac7e <fchmod@plt+0x5ee>
mov    (%ebx),%ebx
jmp    804ab8d <fchmod@plt+0x4fd>
cmpl   $0x0,0x805e534
je     804aaf4 <fchmod@plt+0x464>
cmpl   $0x0,0x38(%esp)
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x3c(%esp)
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x805e60c
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x805e618
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x805e608
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x805f6e8
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x805e61c
jne    804ac45 <fchmod@plt+0x5b5>
cmpl   $0x0,0x805e5fc
jne    804ac45 <fchmod@plt+0x5b5>
cmp    $0x1,%esi
je     804aaf4 <fchmod@plt+0x464>
test   %ecx,%ecx
jne    804b117 <fchmod@plt+0xa87>
movl   $0x5,0x8(%esp)
movl   $0x8058272,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804aaf4 <fchmod@plt+0x464>
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8053d60 <error+0x280>
test   %eax,%eax
je     804abe7 <fchmod@plt+0x557>
mov    0xc(%ebx),%edi
cmpb   $0x2f,(%edi)
jne    804acab <fchmod@plt+0x61b>
cmpb   $0x0,0x1(%edi)
je     804abe7 <fchmod@plt+0x557>
movl   $0x8058008,0x4(%esp)
mov    %edi,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804abe7 <fchmod@plt+0x557>
mov    0x8(%ebx),%eax
mov    %ebx,%ecx
mov    %edi,%edx
mov    0x805e5ac,%esi
call   804b5e0 <fchmod@plt+0xf50>
test   %eax,%eax
jne    804ad6d <fchmod@plt+0x6dd>
mov    0x14(%ebx),%eax
test   %eax,%eax
je     804b30d <fchmod@plt+0xc7d>
movl   $0x8057de7,0x4(%esp)
mov    %eax,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
je     804b30d <fchmod@plt+0xc7d>
movl   $0x8058296,0x4(%esp)
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8050d30 <fchmod@plt+0x66a0>
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
test   %eax,%eax
mov    %eax,%edi
je     804ad41 <fchmod@plt+0x6b1>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8056d00 <error+0x3220>
test   %eax,%eax
jne    804b3b8 <fchmod@plt+0xd28>
mov    %edi,(%esp)
call   8049e40 <free@plt>
mov    0x8(%ebx),%edi
mov    0x48(%esp),%edx
mov    0x4c(%esp),%ecx
mov    0xc(%ebx),%eax
mov    %edx,(%esp)
mov    %edi,%edx
mov    %ecx,0x4(%esp)
call   804b770 <fchmod@plt+0x10e0>
test   %eax,%eax
je     804b346 <fchmod@plt+0xcb6>
test   %esi,%esi
je     804abe7 <fchmod@plt+0x557>
mov    0xc(%ebx),%edi
mov    0x8(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8059b50,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
mov    (%ebx),%ebx
jmp    804ab8d <fchmod@plt+0x4fd>
movl   $0x8057f07,(%esp)
call   804a190 <puts@plt>
mov    $0x20,%eax
jmp    804a866 <fchmod@plt+0x1d6>
cmpl   $0x0,0x1c(%esp)
je     804b16d <fchmod@plt+0xadd>
cmpb   $0x0,0x1b(%esp)
je     804b2c9 <fchmod@plt+0xc39>
mov    %edi,(%esp)
call   80568b0 <error+0x2dd0>
mov    %eax,%esi
mov    (%ebx),%ebx
test   %esi,%esi
je     804b247 <fchmod@plt+0xbb7>
mov    0x3c(%esp),%eax
mov    %ebx,%edx
mov    0x38(%esp),%ecx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   804f420 <fchmod@plt+0x4d90>
mov    %eax,%esi
cmp    $0x40,%esi
mov    $0x0,%eax
cmove  %eax,%esi
call   80567a0 <error+0x2cc0>
mov    %esi,(%esp)
call   804a1d0 <exit@plt>
cmpl   $0x0,0x805e5fc
jne    804aa6e <fchmod@plt+0x3de>
call   804fce0 <fchmod@plt+0x5650>
mov    0x38(%esp),%edi
mov    (%eax),%ebx
mov    %eax,%esi
cmp    %ebx,%esi
je     804b1cb <fchmod@plt+0xb3b>
test   %ebx,%ebx
je     804b1cb <fchmod@plt+0xb3b>
mov    %edi,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8053c00 <error+0x120>
test   %eax,%eax
je     804ae72 <fchmod@plt+0x7e2>
cmpl   $0x0,0x805f6e4
je     804ae76 <fchmod@plt+0x7e6>
mov    (%ebx),%ebx
jmp    804ae46 <fchmod@plt+0x7b6>
lea    0x8(%ebx),%eax
call   804bf30 <fchmod@plt+0x18a0>
mov    (%ebx),%ebx
jmp    804ae46 <fchmod@plt+0x7b6>
movzbl 0x6(%eax),%eax
cmp    $0x2c,%al
je     804abe7 <fchmod@plt+0x557>
test   %al,%al
jne    804abcc <fchmod@plt+0x53c>
mov    (%ebx),%ebx
jmp    804ab8d <fchmod@plt+0x4fd>
movl   $0x80581bc,0x8(%esp)
movl   $0x80581c7,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
movl   $0x8057ffb,0x8(%esp)
movl   $0x80581e0,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
movl   $0x80581f9,0x8(%esp)
movl   $0x8058204,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
movl   $0x805821d,0x8(%esp)
movl   $0x805822b,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
call   8049f90 <getuid@plt>
movl   $0x8058244,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a410 <__printf_chk@plt>
call   8049fb0 <geteuid@plt>
movl   $0x805825b,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a410 <__printf_chk@plt>
jmp    804aa1d <fchmod@plt+0x38d>
mov    0x60(%esp),%edi
xor    %esi,%esi
test   %edi,%edi
je     804afe1 <fchmod@plt+0x951>
cmpl   $0x0,0x805e604
movl   $0xffffffff,0x34(%esp)
jne    804afc5 <fchmod@plt+0x935>
mov    0x8(%edi),%ebx
test   %ebx,%ebx
je     804afa6 <fchmod@plt+0x916>
mov    0x3c(%esp),%eax
mov    %edi,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x38(%esp),%edi
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    %edi,0x4(%esp)
mov    0x14(%ebx),%edi
mov    %edi,(%esp)
call   804f420 <fchmod@plt+0x4d90>
mov    (%ebx),%ebx
or     %eax,%esi
test   %ebx,%ebx
jne    804af7e <fchmod@plt+0x8ee>
mov    0x30(%esp),%edi
mov    %esi,%eax
or     $0x40,%eax
cmpl   $0x0,0x805e5b8
cmovne %eax,%esi
cmpl   $0x0,0x34(%esp)
je     804ae24 <fchmod@plt+0x794>
mov    0x10(%edi),%edi
jmp    804af52 <fchmod@plt+0x8c2>
call   804a450 <fork@plt>
mov    %eax,%ecx
add    $0x1,%ecx
mov    %eax,0x34(%esp)
je     804b0d9 <fchmod@plt+0xa49>
test   %eax,%eax
je     804af6b <fchmod@plt+0x8db>
mov    %eax,(%edi)
jmp    804afc0 <fchmod@plt+0x930>
lea    0xc4(%esp),%edi
mov    0x60(%esp),%ebx
jmp    804affc <fchmod@plt+0x96c>
cmpl   $0x0,(%ebx)
mov    0x10(%ebx),%eax
jne    804b091 <fchmod@plt+0xa01>
mov    %eax,%ebx
test   %ebx,%ebx
jne    804afee <fchmod@plt+0x95e>
cmpl   $0x0,0x805e5b8
movl   $0x0,0x60(%esp)
je     804b177 <fchmod@plt+0xae7>
or     $0x40,%esi
jmp    804ae14 <fchmod@plt+0x784>
cmpl   $0x0,0x38(%esp)
jne    804aa6e <fchmod@plt+0x3de>
cmpb   $0x0,0x28(%esp)
je     804b1e9 <fchmod@plt+0xb59>
mov    0x30(%esp),%ecx
xor    %eax,%eax
mov    %edi,%edx
call   804b8c0 <fchmod@plt+0x1230>
test   %eax,%eax
mov    %eax,%esi
je     804b2dc <fchmod@plt+0xc4c>
mov    0x10(%esi),%eax
mov    0x14(%esi),%ebx
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%edi
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x38(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edi,%ecx
call   804f420 <fchmod@plt+0x4d90>
mov    %eax,%esi
jmp    804ae14 <fchmod@plt+0x784>
mov    %eax,0x60(%esp)
jmp    804b0a5 <fchmod@plt+0xa15>
call   804a390 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    804b15c <fchmod@plt+0xacc>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a0b0 <waitpid@plt>
add    $0x1,%eax
je     804b097 <fchmod@plt+0xa07>
mov    0xc4(%esp),%eax
test   $0x7f,%al
jne    804b1c3 <fchmod@plt+0xb33>
movzbl %ah,%eax
or     %eax,%esi
jmp    804afe8 <fchmod@plt+0x958>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8057ea2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804af6b <fchmod@plt+0x8db>
test   %al,%al
je     804ac4d <fchmod@plt+0x5bd>
movl   $0x5,0x8(%esp)
movl   $0x8059ab8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x20(%esp)
call   8049f60 <dcgettext@plt>
mov    0x20(%esp),%ecx
movl   $0x1,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804ac4d <fchmod@plt+0x5bd>
movl   $0x80582a2,(%esp)
call   804a090 <perror@plt>
jmp    804afe8 <fchmod@plt+0x958>
mov    (%ebx),%esi
mov    0x4(%ebx),%ebx
jmp    804adee <fchmod@plt+0x75e>
test   %esi,%esi
jne    804ae14 <fchmod@plt+0x784>
cmpl   $0x0,0x805e5ac
je     804b191 <fchmod@plt+0xb01>
cmpl   $0x0,0x805e61c
je     804b198 <fchmod@plt+0xb08>
xor    %esi,%esi
jmp    804ae1f <fchmod@plt+0x78f>
movl   $0x5,0x8(%esp)
xor    %esi,%esi
movl   $0x80582aa,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804ae1f <fchmod@plt+0x78f>
or     $0x2,%esi
jmp    804afe8 <fchmod@plt+0x958>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804fc20 <fchmod@plt+0x5590>
test   %eax,%eax
je     804b278 <fchmod@plt+0xbe8>
movl   $0x0,(%esp)
call   804a1d0 <exit@plt>
mov    (%ebx),%eax
xor    %ecx,%ecx
xor    %edx,%edx
call   804b8c0 <fchmod@plt+0x1230>
test   %eax,%eax
mov    %eax,%esi
jne    804b04a <fchmod@plt+0x9ba>
mov    (%ebx),%ebx
xor    %esi,%esi
movl   $0x5,0x8(%esp)
movl   $0x8059b94,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x8057ffb,0x10(%esp)
movl   $0x80581bc,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804b04a <fchmod@plt+0x9ba>
movl   $0x5,0x8(%esp)
movl   $0x8059b74,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804adf6 <fchmod@plt+0x766>
call   804fc50 <fchmod@plt+0x55c0>
test   %eax,%eax
nop
jne    804b1dd <fchmod@plt+0xb4d>
mov    $0x8057ffb,%eax
call   804c060 <fchmod@plt+0x19d0>
test   %eax,%eax
je     804b1dd <fchmod@plt+0xb4d>
movl   $0x5,0x8(%esp)
movl   $0x80599c4,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804b1dd <fchmod@plt+0xb4d>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80568e0 <error+0x2e00>
mov    %eax,%esi
jmp    804adec <fchmod@plt+0x75c>
movl   $0x5,0x8(%esp)
movl   $0x8059b74,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804b1fe <fchmod@plt+0xb6e>
lea    0xc4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8(%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804b346 <fchmod@plt+0xcb6>
mov    0xd4(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804ad00 <fchmod@plt+0x670>
movl   $0x20,(%esp)
mov    %ebx,%esi
call   8054130 <error+0x650>
mov    $0x8,%ecx
cmpl   $0x0,0x805e604
mov    %eax,%edi
mov    %eax,0x2c(%esp)
rep movsl %ds:(%esi),%es:(%edi)
movl   $0x0,(%eax)
jne    804b3fa <fchmod@plt+0xd6a>
xor    %esi,%esi
movl   $0x14,(%esp)
call   8054130 <error+0x650>
mov    %eax,%edi
movl   $0x0,0x10(%eax)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%edi)
mov    %eax,0x8(%edi)
mov    %esi,(%esp)
call   80541a0 <error+0x6c0>
mov    (%ebx),%ebx
movl   $0x0,(%edi)
mov    %eax,0x4(%edi)
mov    0x28(%esp),%eax
mov    %edi,0x28(%esp)
mov    %edi,0x10(%eax)
jmp    804ab8d <fchmod@plt+0x4fd>
test   %esi,%esi
je     804abe7 <fchmod@plt+0x557>
mov    0x8(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8059b20,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
mov    (%ebx),%ebx
jmp    804ab8d <fchmod@plt+0x4fd>
lea    0x64(%esp),%eax
xor    %esi,%esi
mov    %eax,0x8(%esp)
mov    0x8(%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804b467 <fchmod@plt+0xdd7>
mov    0x74(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
jne    804b467 <fchmod@plt+0xdd7>
mov    0x84(%esp),%eax
lea    0x126(%esp),%esi
movl   $0x805829e,0xc(%esp)
movl   $0x16,0x8(%esp)
movl   $0x1,0x4(%esp)
and    $0xfffffff0,%eax
mov    %eax,0x10(%esp)
lea    0x126(%esp),%eax
mov    %eax,(%esp)
call   804a680 <__sprintf_chk@plt>
mov    0x10(%ebx),%eax
cmpb   $0x6e,(%eax)
jne    804b481 <fchmod@plt+0xdf1>
cmpb   $0x66,0x1(%eax)
jne    804b481 <fchmod@plt+0xdf1>
cmpb   $0x73,0x2(%eax)
jne    804b481 <fchmod@plt+0xdf1>
cmpb   $0x0,0x3(%eax)
je     804b4c4 <fchmod@plt+0xe34>
test   %esi,%esi
je     804b376 <fchmod@plt+0xce6>
mov    0x60(%esp),%edi
jmp    804b492 <fchmod@plt+0xe02>
mov    0x10(%edi),%edi
test   %edi,%edi
je     804b376 <fchmod@plt+0xce6>
mov    0x4(%edi),%eax
test   %eax,%eax
je     804b48f <fchmod@plt+0xdff>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804b48f <fchmod@plt+0xdff>
mov    0xc(%edi),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
mov    (%ebx),%ebx
mov    %ecx,0xc(%edi)
jmp    804ab8d <fchmod@plt+0x4fd>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   804a240 <strchr@plt>
test   %eax,%eax
je     804b481 <fchmod@plt+0xdf1>
movb   $0x0,(%eax)
jmp    804b481 <fchmod@plt+0xdf1>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8057d50
push   $0x8057ce0
push   %ecx
push   %esi
push   $0x804a6a0
call   804a280 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x805e54b,%eax
sub    $0x805e548,%eax
cmp    $0x6,%eax
ja     804b530 <fchmod@plt+0xea0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804b52f <fchmod@plt+0xe9f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805e548,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x805e548,%eax
sub    $0x805e548,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804b569 <fchmod@plt+0xed9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804b568 <fchmod@plt+0xed8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x805e548,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x805e5a8
jne    804b5ac <fchmod@plt+0xf1c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804b520 <fchmod@plt+0xe90>
movb   $0x1,0x805e5a8
leave
repz ret
xchg   %ax,%ax
mov    0x805def8,%eax
test   %eax,%eax
je     804b5d8 <fchmod@plt+0xf48>
mov    $0x0,%eax
test   %eax,%eax
je     804b5d8 <fchmod@plt+0xf48>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805def8,(%esp)
call   *%eax
leave
jmp    804b550 <fchmod@plt+0xec0>
nop
jmp    804b550 <fchmod@plt+0xec0>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x1c,%esp
test   %ecx,%ecx
je     804b601 <fchmod@plt+0xf71>
mov    0x14(%ecx),%eax
test   %eax,%eax
je     804b601 <fchmod@plt+0xf71>
call   804fc50 <fchmod@plt+0x55c0>
test   %eax,%eax
jne    804b680 <fchmod@plt+0xff0>
mov    %esi,(%esp)
call   8053830 <fchmod@plt+0x91a0>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     804b678 <fchmod@plt+0xfe8>
mov    %edi,(%esp)
call   8054090 <error+0x5b0>
mov    %eax,%ebp
call   804fce0 <fchmod@plt+0x5650>
mov    (%eax),%ebx
mov    %eax,%edi
cmp    %ebx,%eax
jne    804b660 <fchmod@plt+0xfd0>
jmp    804b664 <fchmod@plt+0xfd4>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804b65a <fchmod@plt+0xfca>
mov    0xc(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804b740 <fchmod@plt+0x10b0>
mov    (%ebx),%ebx
cmp    %ebx,%edi
je     804b664 <fchmod@plt+0xfd4>
test   %ebx,%ebx
jne    804b630 <fchmod@plt+0xfa0>
xor    %ebx,%ebx
mov    %esi,(%esp)
call   8049e40 <free@plt>
mov    %ebp,(%esp)
call   8049e40 <free@plt>
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x805832d,0x4(%esp)
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
je     804b601 <fchmod@plt+0xf71>
call   804a4a0 <mnt_new_fs@plt>
mov    $0xffffffff,%edx
test   %eax,%eax
mov    %eax,%ebp
je     804b716 <fchmod@plt+0x1086>
mov    0x10(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a130 <mnt_fs_set_fstype@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804b716 <fchmod@plt+0x1086>
mov    0x8(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a640 <mnt_fs_set_source@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804b716 <fchmod@plt+0x1086>
mov    0xc(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049df0 <mnt_fs_set_target@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804b716 <fchmod@plt+0x1086>
mov    0x14(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804a4f0 <mnt_fs_set_options@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804b716 <fchmod@plt+0x1086>
mov    0x805e5b0,%eax
test   %eax,%eax
je     804b74a <fchmod@plt+0x10ba>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049f00 <mnt_table_is_fs_mounted@plt>
mov    %eax,%edx
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
call   804a500 <mnt_free_fs@plt>
mov    0xc(%esp),%edx
mov    $0x1,%eax
cmp    $0x1,%edx
jne    804b601 <fchmod@plt+0xf71>
jmp    804b678 <fchmod@plt+0xfe8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    804b666 <fchmod@plt+0xfd6>
movl   $0x8057dc8,(%esp)
call   8049d90 <mnt_new_table_from_file@plt>
test   %eax,%eax
mov    %eax,0x805e5b0
jne    804b708 <fchmod@plt+0x1078>
mov    %ebp,(%esp)
call   804a500 <mnt_free_fs@plt>
jmp    804b601 <fchmod@plt+0xf71>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ecx
mov    %edx,0x14(%esp)
mov    0x40(%esp),%edx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
call   8054090 <error+0x5b0>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   804fea0 <fchmod@plt+0x5810>
test   %eax,%eax
mov    %eax,%ebx
jne    804b848 <fchmod@plt+0x11b8>
jmp    804b8b2 <fchmod@plt+0x1222>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebx),%eax
test   %eax,%eax
je     804b890 <fchmod@plt+0x1200>
movl   $0x8057de7,0x4(%esp)
mov    %eax,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
je     804b890 <fchmod@plt+0x1200>
add    $0x5,%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
movl   $0x2c,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   804a240 <strchr@plt>
test   %eax,%eax
je     804b7ff <fchmod@plt+0x116f>
movb   $0x0,(%eax)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8052960 <fchmod@plt+0x82d0>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049e40 <free@plt>
test   %edi,%edi
sete   %al
mov    %eax,%esi
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   804fea0 <fchmod@plt+0x5810>
test   %eax,%eax
mov    %eax,%ebx
je     804b8a0 <fchmod@plt+0x1210>
mov    %esi,%eax
test   %al,%al
je     804b8a0 <fchmod@plt+0x1210>
mov    0x8(%ebx),%eax
mov    $0x8057ddd,%edi
mov    $0x9,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b7b8 <fchmod@plt+0x1128>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x14(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x4(%esp)
call   8052960 <fchmod@plt+0x82d0>
test   %eax,%eax
mov    %eax,%edi
sete   %al
mov    %eax,%esi
jmp    804b830 <fchmod@plt+0x11a0>
lea    0x0(%esi),%esi
mov    $0x1,%esi
xor    %edi,%edi
jmp    804b830 <fchmod@plt+0x11a0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049e40 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,(%esp)
call   8049e40 <free@plt>
xor    %eax,%eax
jmp    804b8aa <fchmod@plt+0x121a>
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
test   %eax,%eax
sete   %al
test   %edx,%edx
sete   0xc(%esp)
test   %al,%al
mov    %eax,%esi
je     804b8e6 <fchmod@plt+0x1256>
cmpb   $0x0,0xc(%esp)
jne    804b902 <fchmod@plt+0x1272>
test   %ebp,%ebp
je     804ba7c <fchmod@plt+0x13ec>
mov    %ebp,(%esp)
call   8050520 <fchmod@plt+0x5e90>
test   %eax,%eax
je     804b91e <fchmod@plt+0x128e>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %ecx,%ecx
je     804ba45 <fchmod@plt+0x13b5>
mov    %edi,(%esp)
call   80505a0 <fchmod@plt+0x5f10>
test   %eax,%eax
jne    804b8fa <fchmod@plt+0x126a>
test   %ebp,%ebp
je     804b9e4 <fchmod@plt+0x1354>
mov    %ebp,(%esp)
call   80568b0 <error+0x2dd0>
mov    %eax,%ebp
test   %ebp,%ebp
je     804b9fb <fchmod@plt+0x136b>
mov    %ebp,(%esp)
call   8050430 <fchmod@plt+0x5da0>
test   %eax,%eax
mov    %eax,%edx
jne    804b9cd <fchmod@plt+0x133d>
test   %edi,%edi
je     804ba4c <fchmod@plt+0x13bc>
xor    %edi,%edi
xor    %edx,%edx
test   %edx,%edx
jne    804b99b <fchmod@plt+0x130b>
cmpb   $0x0,0xc(%esp)
je     804b99b <fchmod@plt+0x130b>
mov    %esi,%eax
test   %al,%al
jne    804b97f <fchmod@plt+0x12ef>
movl   $0x5,0x8(%esp)
movl   $0x8057df4,0x4(%esp)
mov    %ebx,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
je     804ba34 <fchmod@plt+0x13a4>
mov    %ebp,(%esp)
call   8056870 <error+0x2d90>
test   %eax,%eax
mov    %eax,%edi
je     804ba34 <fchmod@plt+0x13a4>
mov    %eax,(%esp)
call   8050520 <fchmod@plt+0x5e90>
mov    %eax,%edx
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049e40 <free@plt>
mov    0xc(%esp),%edx
test   %edx,%edx
je     804ba3c <fchmod@plt+0x13ac>
mov    0x8(%edx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebp,(%esp)
call   80541a0 <error+0x6c0>
mov    0xc(%esp),%edx
mov    %eax,0x8(%edx)
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
call   8049e40 <free@plt>
mov    0xc(%esp),%edx
mov    %edx,%eax
jmp    804b8fa <fchmod@plt+0x126a>
test   %edi,%edi
je     804baa6 <fchmod@plt+0x1416>
mov    %edi,(%esp)
call   80568e0 <error+0x2e00>
mov    %eax,%ebp
jmp    804b928 <fchmod@plt+0x1298>
xor    %edx,%edx
test   %ebx,%ebx
setne  %cl
je     804b9cd <fchmod@plt+0x133d>
mov    %ebx,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   804fdf0 <fchmod@plt+0x5760>
test   %eax,%eax
mov    %eax,%edx
jne    804b9cd <fchmod@plt+0x133d>
mov    0xc(%esp),%ecx
test   %cl,%cl
je     804b9cd <fchmod@plt+0x133d>
mov    %ebx,(%esp)
call   804fff0 <fchmod@plt+0x5960>
mov    %eax,%edx
jmp    804b9cd <fchmod@plt+0x133d>
mov    %edi,(%esp)
call   8049e40 <free@plt>
test   %ebx,%ebx
mov    %ebp,%eax
setne  %cl
jmp    804ba06 <fchmod@plt+0x1376>
xor    %eax,%eax
jmp    804b8fa <fchmod@plt+0x126a>
mov    %esi,%eax
test   %al,%al
jne    804bab5 <fchmod@plt+0x1425>
movl   $0x6,0x8(%esp)
movl   $0x8057ded,0x4(%esp)
mov    %ebx,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    804bab5 <fchmod@plt+0x1425>
cmpb   $0x0,0xc(%esp)
je     804ba3c <fchmod@plt+0x13ac>
xor    %edi,%edi
jmp    804b95f <fchmod@plt+0x12cf>
test   %edi,%edi
xchg   %ax,%ax
jne    804b90a <fchmod@plt+0x127a>
mov    %ebx,(%esp)
call   8050330 <fchmod@plt+0x5ca0>
test   %eax,%eax
jne    804b8fa <fchmod@plt+0x126a>
mov    %ebx,(%esp)
call   8050620 <fchmod@plt+0x5f90>
test   %eax,%eax
jne    804b8fa <fchmod@plt+0x126a>
mov    %ebx,(%esp)
call   8053830 <fchmod@plt+0x91a0>
mov    %eax,%ebp
jmp    804b928 <fchmod@plt+0x1298>
mov    %ebp,(%esp)
call   8056860 <error+0x2d80>
test   %eax,%eax
mov    %eax,%edi
je     804bad2 <fchmod@plt+0x1442>
mov    %eax,(%esp)
call   80505a0 <fchmod@plt+0x5f10>
mov    %eax,%edx
jmp    804b94e <fchmod@plt+0x12be>
xor    %edx,%edx
jmp    804b94e <fchmod@plt+0x12be>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8056d00 <error+0x3220>
test   %eax,%eax
mov    %eax,%esi
jne    804bb58 <fchmod@plt+0x14c8>
movl   $0x20,(%esp)
call   8054130 <error+0x650>
mov    0x4(%edi),%edx
movl   $0x8057dfa,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,%ebp
mov    (%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x14(%esp)
call   8049d10 <__snprintf_chk@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebp,(%ebx)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%esi
jmp    804bb4e <fchmod@plt+0x14be>
nop
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
sub    $0x2c,%esp
call   804a4a0 <mnt_new_fs@plt>
mov    %eax,%ebx
mov    0x805e5f8,%eax
test   %eax,%eax
je     804bc18 <fchmod@plt+0x1588>
test   %ebx,%ebx
je     804bc30 <fchmod@plt+0x15a0>
mov    %esi,(%esp)
call   8053f10 <error+0x430>
test   %eax,%eax
je     804bc58 <fchmod@plt+0x15c8>
mov    %edi,(%esp)
call   8054090 <error+0x5b0>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%edi
call   804a640 <mnt_fs_set_source@plt>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <mnt_fs_set_target@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a130 <mnt_fs_set_fstype@plt>
mov    0x40(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a4f0 <mnt_fs_set_options@plt>
mov    0x44(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x805e5f8,%eax
mov    %eax,(%esp)
call   804a420 <mnt_update_set_fs@plt>
mov    %eax,%esi
mov    %edi,(%esp)
call   8049e40 <free@plt>
mov    %ebx,(%esp)
call   804a500 <mnt_free_fs@plt>
test   %esi,%esi
jne    804bc38 <fchmod@plt+0x15a8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049de0 <mnt_new_update@plt>
test   %eax,%eax
mov    %eax,0x805e5f8
jne    804bb81 <fchmod@plt+0x14f1>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804a500 <mnt_free_fs@plt>
mov    0x805e5f8,%eax
mov    %eax,(%esp)
call   8049db0 <mnt_free_update@plt>
movl   $0x0,0x805e5f8
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebp,(%esp)
call   8054090 <error+0x5b0>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8054090 <error+0x5b0>
mov    0x1c(%esp),%edx
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%edi
call   804a640 <mnt_fs_set_source@plt>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8049df0 <mnt_fs_set_target@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a130 <mnt_fs_set_fstype@plt>
mov    0x40(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a4f0 <mnt_fs_set_options@plt>
mov    0x44(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x805e5f8,%eax
mov    %eax,(%esp)
call   804a420 <mnt_update_set_fs@plt>
mov    0x1c(%esp),%edx
cmp    %edx,%ebp
mov    %eax,%esi
je     804bbfa <fchmod@plt+0x156a>
mov    %edx,(%esp)
call   8049e40 <free@plt>
jmp    804bbfa <fchmod@plt+0x156a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0xe0,%esp
mov    %gs:0x14,%eax
mov    %eax,0xdc(%esp)
xor    %eax,%eax
lea    0x14(%esp),%ebx
lea    0x78(%esp),%esi
lea    0x0(%esi),%esi
mov    %edi,0x8(%esp)
movl   $0x64,0x4(%esp)
mov    %ebx,(%esp)
call   8049ea0 <fgets@plt>
test   %eax,%eax
je     804bd6a <fchmod@plt+0x16da>
mov    %esi,0x8(%esp)
movl   $0x8057dfe,0x4(%esp)
mov    %ebx,(%esp)
call   804a4e0 <sscanf@plt>
cmp    $0x1,%eax
je     804bd18 <fchmod@plt+0x1688>
mov    %esi,0x8(%esp)
movl   $0x8057e0c,0x4(%esp)
mov    %ebx,(%esp)
call   804a4e0 <sscanf@plt>
cmp    $0x1,%eax
jne    804bd18 <fchmod@plt+0x1688>
mov    %esi,(%esp)
call   80541a0 <error+0x6c0>
mov    0xdc(%esp),%edx
xor    %gs:0x14,%edx
jne    804bd84 <fchmod@plt+0x16f4>
add    $0xe0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
movl   $0x8058444,0x4(%esp)
movl   $0x8057e16,(%esp)
call   804a070 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804bdc8 <fchmod@plt+0x1738>
jmp    804bdef <fchmod@plt+0x175f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804bde8 <fchmod@plt+0x1758>
mov    %ebx,%eax
call   804bcf0 <fchmod@plt+0x1660>
test   %eax,%eax
jne    804bdb8 <fchmod@plt+0x1728>
xor    %esi,%esi
mov    %ebx,(%esp)
call   8049ed0 <fclose@plt>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    $0x1,%esi
jmp    804bdd5 <fchmod@plt+0x1745>
mov    $0xffffffff,%esi
jmp    804bddd <fchmod@plt+0x174d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   8054010 <error+0x530>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8054090 <error+0x5b0>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804fd70 <fchmod@plt+0x56e0>
test   %eax,%eax
je     804be78 <fchmod@plt+0x17e8>
mov    0x8(%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x80584c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    $0x1,%esi
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    %ebp,(%esp)
call   8049e40 <free@plt>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %ebp,%ebp
je     804be8c <fchmod@plt+0x17fc>
mov    $0x8057e28,%edi
mov    $0x5,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804be90 <fchmod@plt+0x1800>
xor    %esi,%esi
jmp    804be5d <fchmod@plt+0x17cd>
mov    %ebp,(%esp)
call   804fd70 <fchmod@plt+0x56e0>
test   %eax,%eax
je     804be8c <fchmod@plt+0x17fc>
mov    0xc(%eax),%esi
movl   $0x5,0x8(%esp)
movl   $0x8058500,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    $0x1,%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804be5d <fchmod@plt+0x17cd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x5,0x8(%esp)
movl   $0x8058530,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   804a580 <__fprintf_chk@plt>
call   8050730 <fchmod@plt+0x60a0>
mov    %esi,(%esp)
call   804a1d0 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    $0x9,%ecx
push   %esi
mov    $0x8057ddd,%edi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    (%eax),%eax
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804bfb8 <fchmod@plt+0x1928>
mov    0x4(%ebx),%edx
mov    %eax,0x8(%esp)
movl   $0x8057e2d,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
call   804a410 <__printf_chk@plt>
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804bf79 <fchmod@plt+0x18e9>
cmpb   $0x0,(%eax)
jne    804c040 <fchmod@plt+0x19b0>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     804bf98 <fchmod@plt+0x1908>
mov    %eax,0x8(%esp)
movl   $0x8057e3f,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
mov    0x805e600,%eax
test   %eax,%eax
jne    804bfe0 <fchmod@plt+0x1950>
movl   $0xa,(%esp)
call   804a380 <putchar@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8052660 <fchmod@plt+0x7fd0>
test   %eax,%eax
mov    (%ebx),%eax
je     804bf4a <fchmod@plt+0x18ba>
mov    %eax,(%esp)
call   80524f0 <fchmod@plt+0x7e60>
test   %eax,%eax
jne    804bf4a <fchmod@plt+0x18ba>
mov    (%ebx),%eax
jmp    804bf4a <fchmod@plt+0x18ba>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8053f10 <error+0x430>
test   %eax,%eax
jne    804bfa1 <fchmod@plt+0x1911>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8053830 <fchmod@plt+0x91a0>
test   %eax,%eax
mov    %eax,%ebx
je     804bfa1 <fchmod@plt+0x1911>
mov    %eax,(%esp)
call   8056860 <error+0x2d80>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049e40 <free@plt>
test   %esi,%esi
je     804bfa1 <fchmod@plt+0x1911>
mov    %esi,0x8(%esp)
movl   $0x8057e45,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
mov    %esi,(%esp)
call   8049e40 <free@plt>
jmp    804bfa1 <fchmod@plt+0x1911>
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
movl   $0x8057e36,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
jmp    804bf79 <fchmod@plt+0x18e9>
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x20,%esp
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804a3e0 <access@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804c093 <fchmod@plt+0x1a03>
call   804a390 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%edi
cmp    $0x1e,%edx
je     804c0a0 <fchmod@plt+0x1a10>
xor    %ebx,%ebx
cmp    $0xd,%edx
je     804c0b0 <fchmod@plt+0x1a20>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x10(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
movl   $0x3fffffff,0x14(%esp)
movl   $0x3ffffffe,0x1c(%esp)
call   8049d30 <utimensat@plt>
cmp    $0xffffffff,%eax
jne    804c093 <fchmod@plt+0x1a03>
xor    %ebx,%ebx
cmpl   $0x1e,(%edi)
sete   %bl
jmp    804c093 <fchmod@plt+0x1a03>
nop
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804a260 <strlen@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   804a260 <strlen@plt>
lea    -0xa(%ebx,%eax,1),%eax
mov    %eax,(%esp)
call   8054130 <error+0x650>
mov    %edi,%edx
add    $0xb,%edi
sub    %esi,%edx
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a3b0 <strncpy@plt>
mov    0xc(%esp),%edx
mov    %ebp,0x4(%esp)
add    %ebx,%edx
mov    %edx,(%esp)
call   804a0f0 <strcpy@plt>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0c0 <strcat@plt>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edx,%edx
je     804c18a <fchmod@plt+0x1afa>
sub    $0x1c,%esp
test   %eax,%eax
je     804c190 <fchmod@plt+0x1b00>
test   %ecx,%ecx
je     804c1b0 <fchmod@plt+0x1b20>
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x8057e4b,0x4(%esp)
mov    %eax,(%esp)
call   8053940 <fchmod@plt+0x92b0>
add    $0x1c,%esp
repz ret
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     804c1c8 <fchmod@plt+0x1b38>
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
call   8053880 <fchmod@plt+0x91f0>
jmp    804c187 <fchmod@plt+0x1af7>
lea    0x0(%esi),%esi
mov    %edx,0x8(%esp)
movl   $0x8057e4b,0x4(%esp)
mov    %eax,(%esp)
call   8053880 <fchmod@plt+0x91f0>
jmp    804c187 <fchmod@plt+0x1af7>
xchg   %ax,%ax
mov    %edx,(%esp)
call   80541a0 <error+0x6c0>
jmp    804c187 <fchmod@plt+0x1af7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    $0x8057e56,%edx
push   %ebx
mov    $0x8057e59,%eax
sub    $0x1c,%esp
test   $0x1,%edi
cmove  %edx,%eax
mov    $0x8057e4d,%esi
mov    %eax,(%esp)
mov    $0x805a000,%ebx
mov    %ecx,0xc(%esp)
call   80541a0 <error+0x6c0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
jne    804c238 <fchmod@plt+0x1ba8>
mov    0x8(%ebx),%edx
test   %edx,%edx
jne    804c238 <fchmod@plt+0x1ba8>
mov    0xc(%ebx),%edx
test   %edx,%edx
je     804c238 <fchmod@plt+0x1ba8>
mov    %edx,%ecx
and    %edi,%ecx
cmp    %ecx,%edx
je     804c2b0 <fchmod@plt+0x1c20>
lea    0x0(%esi),%esi
add    $0x10,%ebx
mov    (%ebx),%esi
test   %esi,%esi
jne    804c218 <fchmod@plt+0x1b88>
mov    0x805e4a0,%edx
test   %edx,%edx
je     804c26e <fchmod@plt+0x1bde>
mov    $0x805e4a0,%ebx
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
jne    804c265 <fchmod@plt+0x1bd5>
mov    0x8(%ebx),%ecx
mov    (%ecx),%ecx
test   %ecx,%ecx
je     804c265 <fchmod@plt+0x1bd5>
call   804c160 <fchmod@plt+0x1ad0>
add    $0xc,%ebx
mov    (%ebx),%edx
test   %edx,%edx
jne    804c250 <fchmod@plt+0x1bc0>
test   %ebp,%ebp
je     804c278 <fchmod@plt+0x1be8>
cmpb   $0x0,0x0(%ebp)
jne    804c2a0 <fchmod@plt+0x1c10>
mov    0xc(%esp),%ecx
test   %ecx,%ecx
je     804c298 <fchmod@plt+0x1c08>
add    $0x1c,%esp
mov    $0x8057e5c,%edx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804c160 <fchmod@plt+0x1ad0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ecx,%ecx
mov    %ebp,%edx
call   804c160 <fchmod@plt+0x1ad0>
jmp    804c278 <fchmod@plt+0x1be8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
xor    %ecx,%ecx
call   804c160 <fchmod@plt+0x1ad0>
mov    0xc(%ebx),%edx
not    %edx
and    %edx,%edi
jmp    804c238 <fchmod@plt+0x1ba8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18c,%esp
mov    %eax,0x1c(%esp)
mov    0x1a4(%esp),%eax
mov    %edx,0x20(%esp)
movl   $0x6962732f,0xcc(%esp)
69
movl   $0x732f3a6e,0xd0(%esp)
73
mov    %eax,0x24(%esp)
mov    0x1a8(%esp),%eax
movl   $0x2f6e6962,0xd4(%esp)
2f
movl   $0x642e7366,0xd8(%esp)
64
movl   $0x62732f3a,0xdc(%esp)
62
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x17c(%esp)
xor    %eax,%eax
mov    $0x73,%eax
mov    %ax,0xe4(%esp)
mov    0x805e53c,%eax
movl   $0x662f6e69,0xe0(%esp)
66
test   %eax,%eax
je     804c375 <fchmod@plt+0x1ce5>
test   %ecx,%ecx
mov    %ecx,%ebx
je     804c375 <fchmod@plt+0x1ce5>
mov    $0x8057e28,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804c398 <fchmod@plt+0x1d08>
xor    %eax,%eax
mov    0x17c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804c74c <fchmod@plt+0x20bc>
add    $0x18c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0xcc(%esp),%eax
movl   $0x80581ba,0x4(%esp)
mov    %eax,(%esp)
call   804a430 <strtok@plt>
test   %eax,%eax
mov    %eax,%edi
je     804c375 <fchmod@plt+0x1ce5>
lea    0xe6(%esp),%ebp
jmp    804c3c4 <fchmod@plt+0x1d34>
xchg   %ax,%ax
test   %edi,%edi
je     804c375 <fchmod@plt+0x1ce5>
mov    %edi,0x14(%esp)
mov    %ebx,0x18(%esp)
movl   $0x8057e62,0x10(%esp)
movl   $0x96,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x96,0x4(%esp)
mov    %ebp,(%esp)
call   8049d10 <__snprintf_chk@plt>
movl   $0x80581ba,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804a430 <strtok@plt>
cmp    $0x95,%esi
mov    %eax,%edi
ja     804c3c0 <fchmod@plt+0x1d30>
lea    0x6c(%esp),%eax
xor    %esi,%esi
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804c620 <fchmod@plt+0x1f90>
test   %eax,%eax
jne    804c3c0 <fchmod@plt+0x1d30>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804c608 <fchmod@plt+0x1f78>
call   804a450 <fork@plt>
cmp    $0xffffffff,%eax
je     804c5c8 <fchmod@plt+0x1f38>
test   %eax,%eax
mov    %esi,0x2c(%esp)
jne    804c680 <fchmod@plt+0x1ff0>
call   804a320 <getgid@plt>
mov    %eax,(%esp)
call   804a180 <setgid@plt>
test   %eax,%eax
js     804c706 <fchmod@plt+0x2076>
call   8049f90 <getuid@plt>
mov    %eax,(%esp)
call   804a510 <setuid@plt>
test   %eax,%eax
js     804c6c0 <fchmod@plt+0x2030>
mov    0x24(%esp),%edx
xor    %ecx,%ecx
mov    0x1a0(%esp),%eax
call   804c1e0 <fchmod@plt+0x1b50>
mov    0x805e610,%edi
mov    $0x3,%edx
mov    %ebp,0x3c(%esp)
test   %edi,%edi
mov    %eax,0x24(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x44(%esp)
je     804c4eb <fchmod@plt+0x1e5b>
mov    $0x3,%ecx
mov    %ebx,%esi
mov    $0x8057e8c,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%eax
cmp    %cl,%al
jne    804c4eb <fchmod@plt+0x1e5b>
movl   $0x8057e90,0x48(%esp)
mov    $0x4,%dl
mov    0x805e61c,%esi
test   %esi,%esi
je     804c500 <fchmod@plt+0x1e70>
movl   $0x8057e93,0x3c(%esp,%edx,4)
add    $0x1,%edx
mov    0x805e618,%ecx
test   %ecx,%ecx
je     804c515 <fchmod@plt+0x1e85>
movl   $0x8057e96,0x3c(%esp,%edx,4)
add    $0x1,%edx
mov    0x805e5ac,%ecx
test   %ecx,%ecx
jne    804c6b0 <fchmod@plt+0x2020>
mov    0x24(%esp),%eax
test   %eax,%eax
je     804c542 <fchmod@plt+0x1eb2>
cmpb   $0x0,(%eax)
je     804c542 <fchmod@plt+0x1eb2>
lea    0x1(%edx),%esi
movl   $0x8057e9c,0x3c(%esp,%edx,4)
add    $0x2,%edx
mov    %eax,0x3c(%esp,%esi,4)
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804c55c <fchmod@plt+0x1ecc>
lea    0x1(%edx),%eax
movl   $0x8057e9f,0x3c(%esp,%edx,4)
add    $0x2,%edx
mov    %ebx,0x3c(%esp,%eax,4)
cmp    $0x2,%ecx
movl   $0x0,0x3c(%esp,%edx,4)
lea    0x3c(%esp),%esi
jle    804c5ab <fchmod@plt+0x1f1b>
mov    0x3c(%esp),%eax
xor    %ebx,%ebx
test   %eax,%eax
je     804c59e <fchmod@plt+0x1f0e>
nop
mov    %ebx,0x8(%esp)
add    $0x1,%ebx
mov    %eax,0xc(%esp)
movl   $0x8058b38,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
mov    (%esi,%ebx,4),%eax
test   %eax,%eax
jne    804c578 <fchmod@plt+0x1ee8>
mov    0x805e5a0,%eax
mov    %eax,(%esp)
call   8049e00 <fflush@plt>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a2d0 <execv@plt>
movl   $0x1,(%esp)
call   804a1d0 <exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8057ea2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804c3c0 <fchmod@plt+0x1d30>
xchg   %ax,%ax
mov    0x805e5a0,%eax
mov    %eax,(%esp)
call   8049e00 <fflush@plt>
jmp    804c448 <fchmod@plt+0x1db8>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804c3c0 <fchmod@plt+0x1d30>
movl   $0x2e,0x4(%esp)
mov    %ebx,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     804c3c0 <fchmod@plt+0x1d30>
movl   $0x2e,0x4(%esp)
mov    $0x1,%si
mov    %ebp,(%esp)
call   804a4b0 <strrchr@plt>
movb   $0x0,(%eax)
lea    0x6c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
jmp    804c437 <fchmod@plt+0x1da7>
lea    0x0(%esi),%esi
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049fa0 <wait@plt>
mov    0x3c(%esp),%edx
mov    $0x2,%eax
test   $0x7f,%dl
jne    804c69d <fchmod@plt+0x200d>
movzbl %dh,%eax
mov    0x28(%esp),%edx
mov    %eax,(%edx)
mov    $0x1,%eax
jmp    804c377 <fchmod@plt+0x1ce7>
lea    0x0(%esi),%esi
movl   $0x8057e99,0x3c(%esp,%edx,4)
add    $0x1,%edx
jmp    804c523 <fchmod@plt+0x1e93>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8057e6e,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804c48c <fchmod@plt+0x1dfc>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8058b18,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804c477 <fchmod@plt+0x1de7>
call   8049f80 <__stack_chk_fail@plt>
jmp    804c760 <fchmod@plt+0x20d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x38(%esp),%eax
mov    0x8(%ebx),%ecx
mov    0x4(%ebx),%edx
mov    %eax,0x8(%esp)
mov    0x10(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
mov    (%ebx),%eax
call   804c2d0 <fchmod@plt+0x1c40>
test   %eax,%eax
je     804c7a8 <fchmod@plt+0x2118>
mov    0x34(%esp),%eax
movl   $0x1,(%eax)
addl   $0x1,0x805e5b8
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    0x805e5f0,%eax
mov    0x8(%ebx),%ecx
mov    0x4(%ebx),%edx
mov    %eax,0x4(%esp)
mov    0x805e5f4,%eax
mov    %eax,(%esp)
mov    (%ebx),%eax
call   804bb60 <fchmod@plt+0x14d0>
mov    0xc(%ebx),%eax
test   $0xffff0000,%eax
mov    %eax,%esi
jne    804c7d9 <fchmod@plt+0x2149>
or     $0xc0ed0000,%eax
mov    %eax,%esi
cmpl   $0x2,0x805e5ac
jg     804c810 <fchmod@plt+0x2180>
mov    0x10(%ebx),%eax
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a490 <mount@plt>
test   %eax,%eax
je     804c799 <fchmod@plt+0x2109>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x10(%ebx),%edx
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
movl   $0x8058b60,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a410 <__printf_chk@plt>
jmp    804c7e2 <fchmod@plt+0x2152>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
movl   $0x0,0x2c(%esp)
call   8049d40 <is_selinux_enabled@plt>
cmp    $0x1,%eax
je     804c880 <fchmod@plt+0x21f0>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804c958 <fchmod@plt+0x22c8>
movzbl (%ebx),%eax
test   %al,%al
je     804c958 <fchmod@plt+0x22c8>
test   %edi,%edi
je     804c958 <fchmod@plt+0x22c8>
cmp    $0x22,%al
je     804c968 <fchmod@plt+0x22d8>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a080 <selinux_trans_to_raw_context@plt>
cmp    $0xffffffff,%eax
je     804c958 <fchmod@plt+0x22c8>
mov    0x2c(%esp),%ebp
test   %ebp,%ebp
je     804c958 <fchmod@plt+0x22c8>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804c918 <fchmod@plt+0x2288>
mov    (%esi),%eax
xor    %ecx,%ecx
mov    %edi,%edx
call   804c160 <fchmod@plt+0x1ad0>
mov    0x2c(%esp),%edx
movl   $0x8057eb9,0xc(%esp)
movl   $0x8057eb9,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esi)
mov    %eax,(%esp)
call   8053940 <fchmod@plt+0x92b0>
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a530 <freecon@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8058bf4,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebp,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804c8d1 <fchmod@plt+0x2241>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    804c871 <fchmod@plt+0x21e1>
lea    0x0(%esi),%esi
movl   $0x22,0x4(%esp)
mov    %ebx,(%esp)
call   804a4b0 <strrchr@plt>
cmp    %eax,%ebx
mov    %eax,%ebp
je     804c98e <fchmod@plt+0x22fe>
test   %eax,%eax
je     804c98e <fchmod@plt+0x22fe>
movb   $0x0,0x0(%ebp)
add    $0x1,%ebx
jmp    804c8a3 <fchmod@plt+0x2213>
movl   $0x5,0x8(%esp)
movl   $0x8058bc8,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804c982 <fchmod@plt+0x22f2>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%ebx
mov    %ebx,0x5c(%esp)
xor    %ebx,%ebx
movl   $0x0,(%edx)
movl   $0x0,(%ecx)
mov    0x805e4a0,%ebx
mov    %edx,0x24(%esp)
mov    $0x805e4a0,%edx
mov    %ecx,0x2c(%esp)
test   %ebx,%ebx
je     804ca0a <fchmod@plt+0x237a>
nop
mov    0x8(%edx),%ecx
add    $0xc,%edx
movl   $0x0,(%ecx)
mov    (%edx),%ecx
test   %ecx,%ecx
jne    804c9f8 <fchmod@plt+0x2368>
test   %eax,%eax
je     804cb0f <fchmod@plt+0x247f>
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804cafd <fchmod@plt+0x246d>
mov    0x28(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     804cafd <fchmod@plt+0x246d>
xor    %edx,%edx
cmp    $0x22,%al
mov    %ecx,0x20(%esp)
mov    %ecx,%ebx
je     804cae8 <fchmod@plt+0x2458>
lea    0x0(%esi),%esi
test   %edx,%edx
jne    804caf1 <fchmod@plt+0x2461>
cmp    $0x2c,%al
je     804cb68 <fchmod@plt+0x24d8>
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax)
je     804ca6d <fchmod@plt+0x23dd>
mov    0x20(%esp),%eax
xor    %edx,%edx
cmpb   $0x0,0x1(%eax)
jne    804cac7 <fchmod@plt+0x2437>
mov    0x805e4a0,%esi
mov    $0x805e4a0,%edi
test   %esi,%esi
jne    804ca95 <fchmod@plt+0x2405>
jmp    804cb88 <fchmod@plt+0x24f8>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%edi
mov    (%edi),%esi
test   %esi,%esi
je     804cb88 <fchmod@plt+0x24f8>
mov    %esi,(%esp)
call   804a260 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    804ca88 <fchmod@plt+0x23f8>
lea    (%ebx,%ebp,1),%edx
mov    0x8(%edi),%esi
xor    %ebx,%ebx
mov    %edx,(%esp)
call   80541a0 <error+0x6c0>
xor    %edx,%edx
mov    %eax,(%esi)
addl   $0x1,0x20(%esp)
je     804cafd <fchmod@plt+0x246d>
mov    0x20(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804cafd <fchmod@plt+0x246d>
test   %ebx,%ebx
cmove  0x20(%esp),%ebx
cmp    $0x22,%al
jne    804ca48 <fchmod@plt+0x23b8>
cmp    $0x1,%edx
je     804ca58 <fchmod@plt+0x23c8>
addl   $0x1,0x20(%esp)
mov    $0x1,%edx
jne    804cace <fchmod@plt+0x243e>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x24(%esp),%eax
mov    (%eax),%eax
mov    0x805e614,%ebx
test   %ebx,%ebx
je     804cb22 <fchmod@plt+0x2492>
mov    0x24(%esp),%ecx
or     $0x1,%eax
mov    %eax,(%ecx)
mov    0x805e60c,%ecx
mov    %eax,%edx
and    $0xfffffffe,%edx
test   %ecx,%ecx
cmovne %edx,%eax
or     0x805e5fc,%eax
mov    %eax,%edx
and    $0x1e0000,%edx
cmove  %eax,%edx
mov    0x24(%esp),%eax
mov    %edx,(%eax)
mov    0x5c(%esp),%eax
xor    %gs:0x14,%eax
jne    804ce65 <fchmod@plt+0x27d5>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    $0x805e4a0,%edi
movb   $0x0,(%eax)
mov    0x805e4a0,%esi
test   %esi,%esi
jne    804ca95 <fchmod@plt+0x2405>
lea    0x0(%esi),%esi
mov    $0x805a000,%esi
mov    $0x8057e4d,%eax
jmp    804cba5 <fchmod@plt+0x2515>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esi
mov    (%esi),%eax
test   %eax,%eax
je     804cc48 <fchmod@plt+0x25b8>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804cb98 <fchmod@plt+0x2508>
mov    0x8(%esi),%eax
test   %eax,%eax
mov    0xc(%esi),%eax
je     804cd75 <fchmod@plt+0x26e5>
mov    0x24(%esp),%ecx
not    %eax
and    %eax,(%ecx)
mov    0xc(%esi),%edx
cmp    $0x40000000,%edx
je     804cbe0 <fchmod@plt+0x2550>
cmp    $0x20000000,%edx
mov    %edx,%eax
jne    804cbf3 <fchmod@plt+0x2563>
mov    0x8(%esi),%ebp
mov    %edx,%eax
test   %ebp,%ebp
jne    804cbf3 <fchmod@plt+0x2563>
mov    0x24(%esp),%eax
orl    $0xe,(%eax)
mov    0xc(%esi),%eax
cmp    $0x8000000,%eax
je     804cc01 <fchmod@plt+0x2571>
cmp    $0x10000000,%eax
jne    804cc12 <fchmod@plt+0x2582>
mov    0x8(%esi),%edi
test   %edi,%edi
jne    804cc12 <fchmod@plt+0x2582>
mov    0x24(%esp),%eax
orl    $0x6,(%eax)
mov    0xc(%esi),%eax
cmp    $0x8000,%eax
je     804cd9e <fchmod@plt+0x270e>
mov    $0x8057ebb,%edi
mov    $0x7,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cd95 <fchmod@plt+0x2705>
movl   $0x1,0x805e5e8
00
xor    %edx,%edx
xor    %ebx,%ebx
jmp    804cac7 <fchmod@plt+0x2437>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8057ec2,%edi
mov    %ebx,%esi
mov    $0x4,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804ccc0 <fchmod@plt+0x2630>
call   804a670 <__ctype_b_loc@plt>
movsbl 0x4(%ebx),%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
jne    804ccc0 <fchmod@plt+0x2630>
lea    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049d00 <getpwnam@plt>
test   %eax,%eax
je     804ccc0 <fchmod@plt+0x2630>
mov    0x8(%eax),%eax
mov    0x2c(%esp),%edi
mov    (%edi),%ebx
mov    %eax,0x14(%esp)
lea    0x3c(%esp),%eax
movl   $0x8058156,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <__snprintf_chk@plt>
lea    0x3c(%esp),%ecx
mov    $0x8057ec2,%edx
jmp    804ce17 <fchmod@plt+0x2787>
mov    $0x8057ec7,%edi
mov    %ebx,%esi
mov    $0x4,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cce6 <fchmod@plt+0x2656>
call   804a670 <__ctype_b_loc@plt>
movsbl 0x4(%ebx),%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
je     804cdc2 <fchmod@plt+0x2732>
mov    $0x8057eda,%edi
mov    $0x8,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cd00 <fchmod@plt+0x2670>
cmpb   $0x0,0x8(%ebx)
jne    804ce29 <fchmod@plt+0x2799>
mov    $0x8057ecc,%edi
mov    $0xa,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cd1a <fchmod@plt+0x268a>
cmpb   $0x0,0xa(%ebx)
jne    804ce47 <fchmod@plt+0x27b7>
mov    $0x8057ed7,%edi
mov    $0xb,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cd30 <fchmod@plt+0x26a0>
cmpb   $0x0,0xb(%ebx)
jne    804cd80 <fchmod@plt+0x26f0>
mov    $0x8057ee3,%edi
mov    $0xc,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804cd5b <fchmod@plt+0x26cb>
cmpb   $0x0,0xc(%ebx)
je     804cd5b <fchmod@plt+0x26cb>
mov    0x2c(%esp),%ecx
lea    0xc(%ebx),%edx
mov    $0x8057ee3,%eax
call   804c850 <fchmod@plt+0x21c0>
test   %eax,%eax
je     804cd95 <fchmod@plt+0x2705>
mov    %ebx,%edx
mov    0x2c(%esp),%ebx
xor    %ecx,%ecx
mov    (%ebx),%eax
call   804c160 <fchmod@plt+0x1ad0>
xor    %edx,%edx
mov    %eax,(%ebx)
xor    %ebx,%ebx
jmp    804cac7 <fchmod@plt+0x2437>
mov    0x24(%esp),%ecx
or     %eax,(%ecx)
jmp    804cbcb <fchmod@plt+0x253b>
mov    0x2c(%esp),%ecx
lea    0xb(%ebx),%edx
mov    $0x8057ed7,%eax
call   804c850 <fchmod@plt+0x21c0>
test   %eax,%eax
jne    804cd30 <fchmod@plt+0x26a0>
xor    %edx,%edx
xor    %ebx,%ebx
jmp    804cac7 <fchmod@plt+0x2437>
mov    0x8(%esi),%esi
test   %esi,%esi
je     804cc1d <fchmod@plt+0x258d>
movl   $0x1,0x805f6e4
00
movl   $0x0,0x805e5ac
00
jmp    804cc1d <fchmod@plt+0x258d>
lea    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804a610 <getgrnam@plt>
test   %eax,%eax
je     804cce6 <fchmod@plt+0x2656>
mov    0x8(%eax),%eax
mov    0x2c(%esp),%edi
mov    (%edi),%ebx
mov    %eax,0x14(%esp)
lea    0x3c(%esp),%eax
movl   $0x8058156,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <__snprintf_chk@plt>
lea    0x3c(%esp),%ecx
mov    $0x8057ec7,%edx
mov    %ebx,%eax
xor    %ebx,%ebx
call   804c160 <fchmod@plt+0x1ad0>
xor    %edx,%edx
mov    %eax,(%edi)
jmp    804cac7 <fchmod@plt+0x2437>
mov    0x2c(%esp),%ecx
lea    0x8(%ebx),%edx
mov    $0x8057eda,%eax
call   804c850 <fchmod@plt+0x21c0>
test   %eax,%eax
jne    804cd00 <fchmod@plt+0x2670>
jmp    804cd95 <fchmod@plt+0x2705>
mov    0x2c(%esp),%ecx
lea    0xa(%ebx),%edx
mov    $0x8057ecc,%eax
call   804c850 <fchmod@plt+0x21c0>
test   %eax,%eax
jne    804cd1a <fchmod@plt+0x268a>
jmp    804cd95 <fchmod@plt+0x2705>
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x10c,%esp
cmpl   $0x2,0x805e5ac
mov    %eax,0x44(%esp)
mov    %edx,0x48(%esp)
mov    %ecx,0x40(%esp)
movl   $0x0,0x7c(%esp)
movl   $0x0,0x80(%esp)
00
jg     804d2f0 <fchmod@plt+0x2c60>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x34(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x38(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x3c(%esp)
mov    0x120(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
lea    0x84(%esp),%edx
lea    0x88(%esp),%ecx
mov    %eax,0x4c(%esp)
call   804c9c0 <fchmod@plt+0x2330>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    0x805e608,%edx
test   %edx,%edx
mov    %eax,0x8c(%esp)
mov    0x84(%esp),%eax
je     804cf2b <fchmod@plt+0x289b>
test   %eax,%eax
js     804d204 <fchmod@plt+0x2b74>
mov    0x805e534,%ebp
movl   $0x0,0x50(%esp)
test   %ebp,%ebp
je     804cf78 <fchmod@plt+0x28e8>
test   $0x18000000,%eax
je     804cf5a <fchmod@plt+0x28ca>
mov    0x34(%esp),%esi
mov    $0x8057f5f,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d450 <fchmod@plt+0x2dc0>
test   $0x60000000,%eax
je     804d828 <fchmod@plt+0x3198>
test   $0x20000000,%eax
movl   $0x0,0x50(%esp)
jne    804d3f8 <fchmod@plt+0x2d68>
mov    %eax,%edx
and    $0xe7ffffff,%edx
test   $0x20,%al
mov    %edx,0x84(%esp)
je     804d030 <fchmod@plt+0x29a0>
mov    0x805e5d0,%eax
test   %eax,%eax
je     804cff4 <fchmod@plt+0x2964>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a5f0 <strtol@plt>
movl   $0x800,0x4(%esp)
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804d410 <fchmod@plt+0x2d80>
mov    %esi,0x8(%esp)
movl   $0x5322,0x4(%esp)
mov    %ebx,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     804d968 <fchmod@plt+0x32d8>
mov    %ebx,(%esp)
call   804a620 <close@plt>
mov    0x84(%esp),%edx
mov    %edx,%eax
and    $0x20,%eax
je     804d368 <fchmod@plt+0x2cd8>
test   $0x1e3000,%edx
je     804f3fd <fchmod@plt+0x4d6d>
mov    0x34(%esp),%ebx
movl   $0x0,0x58(%esp)
movl   $0x0,0x68(%esp)
mov    %ebx,0x54(%esp)
jmp    804d52b <fchmod@plt+0x2e9b>
nop
mov    0x805e61c,%edi
test   %edi,%edi
je     804cf8f <fchmod@plt+0x28ff>
mov    0x38(%esp),%edx
xor    %ecx,%ecx
mov    0x34(%esp),%eax
call   804b5e0 <fchmod@plt+0xf50>
test   %eax,%eax
je     804cf8f <fchmod@plt+0x28ff>
movl   $0x5,0x8(%esp)
movl   $0x8058c3c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ebx
mov    0x34(%esp),%edi
movl   $0x1,(%esp)
mov    %ebx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804cf8f <fchmod@plt+0x28ff>
movl   $0x5,0x8(%esp)
movl   $0x8058fec,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ebx
movl   $0x1,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
mov    0x805e61c,%ebx
andl   $0xfffffffe,0x84(%esp)
test   %ebx,%ebx
je     804e788 <fchmod@plt+0x40f8>
mov    0x84(%esp),%edx
mov    %edx,%eax
mov    0x50(%esp),%ecx
mov    0x88(%esp),%edx
and    $0x1fffffdf,%eax
call   804c1e0 <fchmod@plt+0x1b50>
test   %ebp,%ebp
mov    0x84(%esp),%esi
mov    %eax,%ebx
mov    $0x8057f07,%eax
cmove  %eax,%ebp
mov    0x805e5f8,%eax
test   %eax,%eax
je     804d151 <fchmod@plt+0x2ac1>
mov    %eax,(%esp)
call   8049cf0 <mnt_update_get_mflags@plt>
xor    %esi,%eax
test   $0x1,%al
jne    804e270 <fchmod@plt+0x3be0>
mov    0x805e618,%ecx
test   %ecx,%ecx
je     804e290 <fchmod@plt+0x3c00>
mov    0x805e5f8,%eax
mov    %eax,(%esp)
call   8049db0 <mnt_free_update@plt>
movl   $0x0,0x805e5f8
00
mov    0x805e5ac,%eax
test   %eax,%eax
je     804d1f0 <fchmod@plt+0x2b60>
mov    0x68(%esp),%eax
mov    %ebp,(%esp)
test   %eax,%eax
mov    0x58(%esp),%eax
cmove  0x54(%esp),%eax
mov    %eax,%edi
mov    %eax,0x54(%esp)
call   8053f10 <error+0x430>
mov    %edi,%edx
test   %eax,%eax
jne    804d18f <fchmod@plt+0x2aff>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8054090 <error+0x5b0>
mov    %eax,%edx
mov    0x38(%esp),%eax
mov    %edx,0xa0(%esp)
mov    %eax,(%esp)
call   8054090 <error+0x5b0>
mov    %ebp,0xa8(%esp)
mov    %ebx,0xac(%esp)
mov    %eax,0xa4(%esp)
mov    0x805f6e4,%eax
test   %eax,%eax
jne    804d1cc <fchmod@plt+0x2b3c>
lea    0xa0(%esp),%eax
call   804bf30 <fchmod@plt+0x18a0>
mov    0xa0(%esp),%eax
cmp    %eax,0x54(%esp)
je     804d1e1 <fchmod@plt+0x2b51>
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0xa4(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
movl   $0x1,(%esp)
call   8053a80 <fchmod@plt+0x93f0>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
xor    %esi,%esi
mov    0x805e5ac,%edx
test   %edx,%edx
jne    804d270 <fchmod@plt+0x2be0>
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
add    $0x10c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049d40 <is_selinux_enabled@plt>
test   %eax,%eax
jle    804d210 <fchmod@plt+0x2b80>
lea    0x90(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
movl   $0x0,0x90(%esp)
00
movl   $0x0,0x98(%esp)
00
mov    %eax,(%esp)
call   804a210 <getfilecon@plt>
test   %eax,%eax
jle    804d2c9 <fchmod@plt+0x2c39>
lea    0x98(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x8058126,(%esp)
call   804a400 <security_get_initial_context@plt>
test   %eax,%eax
je     804e1d8 <fchmod@plt+0x3b48>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   804a530 <freecon@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   804a530 <freecon@plt>
jmp    804d210 <fchmod@plt+0x2b80>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
movl   $0x8057f0f,0x4(%esp)
movl   $0x1,(%esp)
call   804a410 <__printf_chk@plt>
mov    0x48(%esp),%eax
movl   $0x8057f23,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a410 <__printf_chk@plt>
mov    0x40(%esp),%eax
movl   $0x8057f37,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a410 <__printf_chk@plt>
mov    0x120(%esp),%eax
movl   $0x8057f4b,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a410 <__printf_chk@plt>
jmp    804cea6 <fchmod@plt+0x2816>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%edi
movl   $0x0,0x90(%esp)
00
mov    0x805e5e4,%ebx
movl   $0x0,0x94(%esp)
00
movl   $0x0,0x98(%esp)
00
test   %edi,%edi
movl   $0x0,0x9c(%esp)
00
je     804d4c0 <fchmod@plt+0x2e30>
mov    $0x8057f81,%esi
mov    $0x3,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d878 <fchmod@plt+0x31e8>
cmpl   $0x0,0x805e5e0
je     804d3ec <fchmod@plt+0x2d5c>
movl   $0x5,0x8(%esp)
movl   $0x8057f85,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
mov    0x84(%esp),%edx
mov    %edx,%eax
mov    0x3c(%esp),%ebp
jmp    804d4c8 <fchmod@plt+0x2e38>
nop
call   8051a50 <fchmod@plt+0x73c0>
mov    %eax,0x50(%esp)
mov    0x84(%esp),%eax
jmp    804cf78 <fchmod@plt+0x28e8>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8058c74,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x34(%esp),%edi
movl   $0x20,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804cfd0 <fchmod@plt+0x2940>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
lea    0xa0(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
mov    0x84(%esp),%eax
jne    804cf5a <fchmod@plt+0x28ca>
test   $0x10000000,%eax
jne    804e7df <fchmod@plt+0x414f>
test   $0x8000000,%eax
je     804cf5a <fchmod@plt+0x28ca>
call   804a320 <getgid@plt>
cmp    0xbc(%esp),%eax
jne    804e911 <fchmod@plt+0x4281>
mov    0x84(%esp),%eax
or     $0x20000000,%eax
mov    %eax,0x84(%esp)
jmp    804cf5a <fchmod@plt+0x28ca>
xchg   %ax,%ax
mov    0x805e5e0,%ebp
mov    %edx,%eax
test   $0x10000,%edx
jne    804d4d8 <fchmod@plt+0x2e48>
test   %ebx,%ebx
je     804e670 <fchmod@plt+0x3fe0>
or     $0x10000,%eax
mov    %eax,%edx
mov    %eax,0x84(%esp)
mov    0x805e61c,%eax
test   %eax,%eax
je     804dfc8 <fchmod@plt+0x3938>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804e238 <fchmod@plt+0x3ba8>
mov    0x34(%esp),%eax
mov    %eax,0x54(%esp)
mov    %edx,%eax
mov    %ebx,0x805e5e4
and    $0x20,%eax
movl   $0x1,0x68(%esp)
test   $0x1e3000,%edx
je     804d540 <fchmod@plt+0x2eb0>
mov    0x34(%esp),%edi
mov    %edi,0x58(%esp)
test   %eax,%eax
mov    $0x8057e28,%ebp
jne    804d550 <fchmod@plt+0x2ec0>
jmp    804d6bc <fchmod@plt+0x302c>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     804d698 <fchmod@plt+0x3008>
mov    0x34(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x8c(%esp),%eax
mov    %eax,%edi
mov    %eax,0x64(%esp)
xor    %eax,%eax
test   %edi,%edi
je     804d6c3 <fchmod@plt+0x3033>
mov    %edi,(%esp)
call   80541a0 <error+0x6c0>
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     804d722 <fchmod@plt+0x3092>
movzbl (%eax),%ecx
mov    %eax,%ebx
test   %cl,%cl
je     804d722 <fchmod@plt+0x3092>
xor    %edi,%edi
cmp    $0x22,%cl
movl   $0x0,0x60(%esp)
mov    %ebp,0x6c(%esp)
je     804d687 <fchmod@plt+0x2ff7>
nop
test   %edi,%edi
jne    804d690 <fchmod@plt+0x3000>
cmp    $0x2c,%cl
je     804d700 <fchmod@plt+0x3070>
cmpb   $0x0,0x1(%eax)
jne    804d6f8 <fchmod@plt+0x3068>
mov    %eax,%ebp
add    $0x1,%ebp
je     804d708 <fchmod@plt+0x3078>
mov    $0x8057eda,%edi
mov    %ebx,%esi
mov    $0x8,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d610 <fchmod@plt+0x2f80>
mov    $0x8057ecc,%edi
mov    %ebx,%esi
mov    $0xa,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d610 <fchmod@plt+0x2f80>
mov    $0x8057ed7,%edi
mov    $0xb,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d610 <fchmod@plt+0x2f80>
mov    $0x8057ee3,%edi
mov    $0xc,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804db58 <fchmod@plt+0x34c8>
lea    0x0(%esi),%esi
cmp    %ebx,0x5c(%esp)
je     804d750 <fchmod@plt+0x30c0>
cmpb   $0x2c,-0x1(%ebx)
je     804d750 <fchmod@plt+0x30c0>
mov    %ebp,(%esp)
call   804a260 <strlen@plt>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   8049e20 <memmove@plt>
cmpb   $0x0,(%ebx)
jne    804d64e <fchmod@plt+0x2fbe>
cmpb   $0x2c,-0x1(%ebx)
je     804d910 <fchmod@plt+0x3280>
mov    %ebx,%eax
xor    %edi,%edi
movl   $0x1,0x60(%esp)
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
add    $0x1,%esi
je     804d708 <fchmod@plt+0x3078>
movzbl 0x1(%eax),%ecx
test   %cl,%cl
je     804d708 <fchmod@plt+0x3078>
test   %ebx,%ebx
mov    %esi,%eax
cmove  %esi,%ebx
cmp    $0x22,%cl
jne    804d5a0 <fchmod@plt+0x2f10>
cmp    $0x1,%edi
je     804d5b1 <fchmod@plt+0x2f21>
mov    $0x1,%edi
jmp    804d660 <fchmod@plt+0x2fd0>
nop
test   %ebp,%ebp
je     804db20 <fchmod@plt+0x3490>
mov    $0x8057fc0,%edi
mov    $0x6,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d8c0 <fchmod@plt+0x3230>
mov    0x34(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
lea    0x7c(%esp),%ebx
mov    %edx,(%esp)
mov    0x38(%esp),%edx
mov    %ebp,%ecx
mov    %ebx,0x8(%esp)
call   804c2d0 <fchmod@plt+0x1c40>
test   %eax,%eax
je     804d760 <fchmod@plt+0x30d0>
mov    0x7c(%esp),%esi
cmp    $0x20,%esi
jne    804d206 <fchmod@plt+0x2b76>
jmp    804d210 <fchmod@plt+0x2b80>
nop
xor    %edi,%edi
jmp    804d660 <fchmod@plt+0x2fd0>
nop
mov    %eax,%ebp
jmp    804d5c6 <fchmod@plt+0x2f36>
nop
mov    0x60(%esp),%esi
mov    0x6c(%esp),%ebp
test   %esi,%esi
je     804d722 <fchmod@plt+0x3092>
mov    0x805e5ac,%ebx
test   %ebx,%ebx
jne    804e1a0 <fchmod@plt+0x3b10>
mov    0x5c(%esp),%eax
mov    %eax,0x8c(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x8c(%esp),%eax
mov    0x84(%esp),%edx
jmp    804d6c3 <fchmod@plt+0x3033>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x2c,0x0(%ebp)
sete   %al
add    %eax,%ebp
jmp    804d624 <fchmod@plt+0x2f94>
mov    0x84(%esp),%eax
mov    0x50(%esp),%ecx
mov    0x88(%esp),%edx
and    $0x1fffffdf,%eax
call   804c1e0 <fchmod@plt+0x1b50>
mov    0x805e61c,%ecx
mov    0x84(%esp),%edx
test   %ecx,%ecx
mov    %edx,0x805e5f0
mov    %eax,0x805e5f4
jne    804db00 <fchmod@plt+0x3470>
movl   $0x0,(%esp)
xor    %esi,%esi
call   8053a80 <fchmod@plt+0x93f0>
mov    0x805e61c,%edx
test   %edx,%edx
je     804d9b0 <fchmod@plt+0x3320>
test   %edx,%edx
jne    804d0e0 <fchmod@plt+0x2a50>
test   %esi,%esi
je     804d0e0 <fchmod@plt+0x2a50>
call   804a390 <__errno_location@plt>
mov    %eax,%ebx
mov    (%eax),%edi
mov    0x68(%esp),%eax
test   %eax,%eax
jne    804db75 <fchmod@plt+0x34e5>
movl   $0x1,(%esp)
call   8053a80 <fchmod@plt+0x93f0>
test   %ebp,%ebp
je     804e83a <fchmod@plt+0x41aa>
cmp    $0xffffffff,%esi
je     804db86 <fchmod@plt+0x34f6>
movl   $0x5,0x8(%esp)
movl   $0x8058029,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
mov    $0x20,%esi
jmp    804d210 <fchmod@plt+0x2b80>
mov    0x38(%esp),%edx
mov    0x34(%esp),%eax
call   804be00 <fchmod@plt+0x1770>
movl   $0x5,0x8(%esp)
test   %eax,%eax
je     804d928 <fchmod@plt+0x3298>
movl   $0x8058030,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
mov    0x84(%esp),%eax
jmp    804cf65 <fchmod@plt+0x28d5>
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     804d8a7 <fchmod@plt+0x3217>
movl   $0x5,0x8(%esp)
movl   $0x8058c9c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
mov    0x84(%esp),%edx
mov    0x3c(%esp),%edi
mov    %edx,%eax
mov    0x805e5e0,%ebp
lea    0x3(%edi),%ebx
jmp    804d4c8 <fchmod@plt+0x2e38>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049d40 <is_selinux_enabled@plt>
test   %eax,%eax
jle    804db38 <fchmod@plt+0x34a8>
mov    0x8c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x8057eda,(%esp)
mov    %ebx,0x4(%esp)
call   8050ca0 <fchmod@plt+0x6610>
test   %eax,%eax
je     804e9dc <fchmod@plt+0x434c>
mov    0x34(%esp),%ebx
mov    0x8c(%esp),%eax
mov    0x84(%esp),%edx
mov    %ebx,0x58(%esp)
jmp    804d6c3 <fchmod@plt+0x3033>
nop
movb   $0x0,-0x1(%ebx)
mov    %ebx,%eax
xor    %edi,%edi
movl   $0x1,0x60(%esp)
xor    %ebx,%ebx
jmp    804d660 <fchmod@plt+0x2fd0>
nop
movl   $0x8058c18,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,0xc(%esp)
mov    0x34(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,0x8(%esp)
call   8053b40 <error+0x60>
mov    0x84(%esp),%eax
jmp    804cf65 <fchmod@plt+0x28d5>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8057f65,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804cfec <fchmod@plt+0x295c>
xchg   %ax,%ax
mov    0x84(%esp),%eax
mov    0x54(%esp),%edi
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0x90(%esp)
00
mov    %eax,0x5c(%esp)
and    $0x1dfeffff,%eax
test   %ebp,%ebp
mov    %edi,0xa0(%esp)
mov    0x38(%esp),%edi
mov    %eax,0xac(%esp)
mov    0x8c(%esp),%eax
mov    %edi,0xa4(%esp)
mov    %eax,0xb0(%esp)
je     804db98 <fchmod@plt+0x3508>
movl   $0x8058291,0x4(%esp)
mov    %ebp,(%esp)
call   804a2c0 <strcasecmp@plt>
test   %eax,%eax
je     804db98 <fchmod@plt+0x3508>
mov    $0x805812b,%edi
mov    $0x2,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804e410 <fchmod@plt+0x3d80>
lea    0xa0(%esp),%esi
lea    0x80(%esp),%eax
mov    %esi,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,0xa8(%esp)
call   804c760 <fchmod@plt+0x20d0>
mov    %eax,%esi
mov    0x80(%esp),%edi
test   %edi,%edi
jne    804e731 <fchmod@plt+0x40a1>
mov    0x805e61c,%edx
mov    %esi,%eax
or     %edx,%eax
jne    804d7b8 <fchmod@plt+0x3128>
mov    0x84(%esp),%edx
mov    %edx,%eax
and    $0x1001,%eax
cmp    $0x1001,%eax
je     804e777 <fchmod@plt+0x40e7>
test   $0x1e2001,%edx
jne    804d0e7 <fchmod@plt+0x2a57>
mov    0x38(%esp),%eax
call   804c060 <fchmod@plt+0x19d0>
mov    0x84(%esp),%edx
test   %eax,%eax
je     804d0e7 <fchmod@plt+0x2a57>
movl   $0x5,0x8(%esp)
movl   $0x8059020,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
orl    $0x1,0x84(%esp)
mov    0x84(%esp),%edx
jmp    804d0e7 <fchmod@plt+0x2a57>
mov    %edx,0x4(%esp)
mov    0x38(%esp),%edx
mov    %ebp,%ecx
mov    %eax,(%esp)
mov    0x54(%esp),%eax
call   804bb60 <fchmod@plt+0x14d0>
jmp    804d79c <fchmod@plt+0x310c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
mov    0x8c(%esp),%eax
mov    %ebx,0x58(%esp)
jmp    804d6c3 <fchmod@plt+0x3033>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edi
mov    0x8c(%esp),%eax
mov    0x84(%esp),%edx
mov    %edi,0x58(%esp)
jmp    804d6c3 <fchmod@plt+0x3033>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8057fb7,%edi
mov    %ebx,%esi
mov    $0x8,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804d610 <fchmod@plt+0x2f80>
xor    %edi,%edi
xor    %ebx,%ebx
jmp    804d660 <fchmod@plt+0x2fd0>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80536d0 <fchmod@plt+0x9040>
jmp    804d7dd <fchmod@plt+0x314d>
cmp    $0x7b,%edi
ja     804dfa4 <fchmod@plt+0x3914>
nop
jmp    *0x8059bc0(,%edi,4)
nop
testb  $0x20,0x5c(%esp)
lea    0xa0(%esp),%esi
je     804dbad <fchmod@plt+0x351d>
xor    %ebp,%ebp
jmp    804da3c <fchmod@plt+0x33ac>
lea    0x90(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8056890 <error+0x2db0>
mov    %eax,%ebp
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804ec11 <fchmod@plt+0x4581>
test   %ebp,%ebp
je     804f117 <fchmod@plt+0x4a87>
movl   $0x8057fd0,0x5c(%esp)
mov    0x5c(%esp),%edi
mov    $0x5,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804ebdb <fchmod@plt+0x454b>
movl   $0x5,0x8(%esp)
movl   $0x8058f14,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
xor    %ebp,%ebp
mov    $0x1,%esi
jmp    804da5c <fchmod@plt+0x33cc>
movl   $0x5,0x8(%esp)
movl   $0x80580ff,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
testb  $0x20,0x84(%esp)
jne    804edf5 <fchmod@plt+0x4765>
mov    $0x8058069,%edi
mov    $0x5,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804dc99 <fchmod@plt+0x3609>
mov    0x38(%esp),%eax
movl   $0x8058068,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804f356 <fchmod@plt+0x4cc6>
movl   $0x5,0x8(%esp)
movl   $0x8059194,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ebx
mov    0x54(%esp),%edi
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    %ebx,%edx
mov    %edi,%eax
call   804be00 <fchmod@plt+0x1770>
jmp    804d81e <fchmod@plt+0x318e>
mov    0x805e5e8,%ebp
test   %ebp,%ebp
jne    804d204 <fchmod@plt+0x2b74>
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804f029 <fchmod@plt+0x4999>
mov    0xb0(%esp),%eax
movl   $0x5,0x8(%esp)
and    $0xf000,%eax
cmp    $0x6000,%eax
je     804f3bc <fchmod@plt+0x4d2c>
cmp    $0x8000,%eax
je     804f2ea <fchmod@plt+0x4c5a>
movl   $0x8059660,0x4(%esp)
jmp    804dc3e <fchmod@plt+0x35ae>
nop
mov    0x68(%esp),%esi
mov    $0x8057f22,%ebx
test   %esi,%esi
jne    804dd73 <fchmod@plt+0x36e3>
movl   $0x5,0x8(%esp)
movl   $0x80580f1,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,%ebx
mov    0x124(%esp),%ecx
test   %ecx,%ecx
jne    804dd8d <fchmod@plt+0x36fd>
mov    0x84(%esp),%eax
test   $0x1,%al
je     804ef62 <fchmod@plt+0x48d2>
movl   $0x5,0x8(%esp)
movl   $0x80596a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%edi
mov    %ebx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
mov    0x805e5e8,%edi
test   %edi,%edi
jne    804d204 <fchmod@plt+0x2b74>
movl   $0x5,0x8(%esp)
movl   $0x8059680,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
movl   $0x5,0x8(%esp)
movl   $0x80594cc,0x4(%esp)
jmp    804dc3e <fchmod@plt+0x35ae>
mov    0x38(%esp),%edi
lea    0xa0(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %edi,0x4(%esp)
call   804a600 <__lxstat64@plt>
test   %eax,%eax
je     804ed6c <fchmod@plt+0x46dc>
movl   $0x5,0x8(%esp)
movl   $0x80591bc,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
call   8049fb0 <geteuid@plt>
test   %eax,%eax
je     804ee0a <fchmod@plt+0x477a>
movl   $0x5,0x8(%esp)
movl   $0x805916c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
movl   $0x5,0x8(%esp)
movl   $0x8058098,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
mov    0x38(%esp),%eax
lea    0xa0(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804df03 <fchmod@plt+0x3873>
mov    0xb0(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804f236 <fchmod@plt+0x4ba6>
movl   $0x5,0x8(%esp)
movl   $0x8059140,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
mov    %ebp,%eax
call   804bd90 <fchmod@plt+0x1700>
cmp    $0x1,%eax
xchg   %ax,%ax
je     804df56 <fchmod@plt+0x38c6>
mov    $0x8057f01,%edi
mov    $0x6,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804ee71 <fchmod@plt+0x47e1>
movl   $0x5,0x8(%esp)
movl   $0x80580a9,0x4(%esp)
jmp    804dde0 <fchmod@plt+0x3750>
testb  $0x20,0x84(%esp)
movl   $0x0,0x98(%esp)
00
movl   $0x0,0x9c(%esp)
00
movl   $0x5,0x8(%esp)
je     804ece5 <fchmod@plt+0x4655>
movl   $0x8059294,0x4(%esp)
jmp    804df13 <fchmod@plt+0x3883>
mov    %edi,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x805811c,(%esp)
mov    %eax,0x4(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xa0(%esp)
00
call   80561e0 <error+0x2700>
cmp    $0x20624,%eax
jle    804e798 <fchmod@plt+0x4108>
mov    0x805e5ac,%eax
test   %eax,%eax
jne    804e809 <fchmod@plt+0x4179>
movl   $0x2,0xa0(%esp)
00
testb  $0x1,0x84(%esp)
je     804e00d <fchmod@plt+0x397d>
orl    $0x1,0xa0(%esp)
mov    0x805e5dc,%edi
test   %edi,%edi
je     804e030 <fchmod@plt+0x39a0>
lea    0x90(%esp),%edx
mov    $0x805e5dc,%eax
call   804bae0 <fchmod@plt+0x1450>
test   %eax,%eax
jne    804e870 <fchmod@plt+0x41e0>
mov    0x805e5d8,%esi
test   %esi,%esi
je     804e053 <fchmod@plt+0x39c3>
lea    0x98(%esp),%edx
mov    $0x805e5d8,%eax
call   804bae0 <fchmod@plt+0x1450>
test   %eax,%eax
jne    804e88b <fchmod@plt+0x41fb>
mov    0x90(%esp),%eax
mov    0x94(%esp),%edx
mov    %eax,(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x4(%esp)
mov    0x34(%esp),%edx
call   804b770 <fchmod@plt+0x10e0>
test   %eax,%eax
jne    804e8ad <fchmod@plt+0x421d>
test   %ebx,%ebx
lea    0xa0(%esp),%esi
je     804e08d <fchmod@plt+0x39fd>
cmpb   $0x0,(%ebx)
jne    804e09c <fchmod@plt+0x3a0c>
call   8052a00 <fchmod@plt+0x8370>
test   %eax,%eax
mov    %eax,%ebx
je     804ec07 <fchmod@plt+0x4577>
mov    0x805e5ac,%ecx
test   %ecx,%ecx
jne    804e742 <fchmod@plt+0x40b2>
mov    0x805e5ec,%eax
test   %eax,%eax
jne    804e0da <fchmod@plt+0x3a4a>
mov    0x805e5c0,%edx
test   %edx,%edx
je     804e0da <fchmod@plt+0x3a4a>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804a230 <strtoul@plt>
mov    %eax,0x805e5ec
mov    0x805e5bc,%edx
test   %edx,%edx
je     804e8eb <fchmod@plt+0x425b>
movl   $0x0,0x805e538
00
xor    %edx,%edx
mov    %eax,0x24(%esp)
mov    0x805e530,%eax
mov    %edx,0x28(%esp)
mov    0x9c(%esp),%edx
mov    %esi,0x20(%esp)
mov    %ebx,(%esp)
mov    %eax,0x1c(%esp)
mov    0x805e5d4,%eax
mov    %edx,0x14(%esp)
mov    0x94(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x98(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   8052b60 <fchmod@plt+0x84d0>
test   %eax,%eax
je     804e60b <fchmod@plt+0x3f7b>
cmp    $0x2,%eax
jne    804eda1 <fchmod@plt+0x4711>
mov    0x805e5e4,%eax
test   %eax,%eax
je     804e8f6 <fchmod@plt+0x4266>
movl   $0x5,0x8(%esp)
movl   $0x8057fa1,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8058e44,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804d722 <fchmod@plt+0x3092>
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   804a1e0 <selinux_file_context_cmp@plt>
test   %eax,%eax
jne    804d2c9 <fchmod@plt+0x2c39>
movl   $0x5,0x8(%esp)
movl   $0x8059778,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ebx
movl   $0x1,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804d2c9 <fchmod@plt+0x2c39>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8058cc0,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
mov    0x84(%esp),%edx
jmp    804d500 <fchmod@plt+0x2e70>
mov    0x805e5f8,%eax
and    $0x1,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804a3f0 <mnt_update_force_rdonly@plt>
jmp    804d12c <fchmod@plt+0x2a9c>
lea    0x0(%esi,%eiz,1),%esi
call   804fc20 <fchmod@plt+0x5590>
test   %eax,%eax
je     804e3f6 <fchmod@plt+0x3d66>
cmpl   $0x1,0x805e5ac
jle    804e2da <fchmod@plt+0x3c4a>
movl   $0x5,0x8(%esp)
movl   $0x8059054,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x8057ffb,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
call   8050780 <fchmod@plt+0x60f0>
movl   $0x8058005,0x4(%esp)
movl   $0x8057ffb,(%esp)
call   8051460 <fchmod@plt+0x6dd0>
test   %eax,%eax
mov    %eax,%edi
je     804eab8 <fchmod@plt+0x4428>
mov    (%eax),%edx
test   %edx,%edx
je     804eab8 <fchmod@plt+0x4428>
movl   $0x805815a,(%esp)
call   8050330 <fchmod@plt+0x5ca0>
test   %eax,%eax
mov    %eax,%esi
je     804eb3d <fchmod@plt+0x44ad>
mov    0x14(%esi),%eax
lea    0x98(%esp),%ecx
lea    0x90(%esp),%edx
call   804c9c0 <fchmod@plt+0x2330>
mov    0x8(%esi),%eax
movl   $0x805815a,0xa4(%esp)
08
mov    %eax,(%esp)
call   8053830 <fchmod@plt+0x91a0>
mov    0x98(%esp),%edx
xor    %ecx,%ecx
mov    %eax,0xa0(%esp)
mov    0x10(%esi),%eax
mov    %eax,0xa8(%esp)
mov    0x90(%esp),%eax
call   804c1e0 <fchmod@plt+0x1b50>
movl   $0x0,0xb4(%esp)
00
movl   $0x0,0xb0(%esp)
00
mov    %eax,0xac(%esp)
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0xa0(%esp),%eax
test   %eax,%eax
je     804e3c2 <fchmod@plt+0x3d32>
lea    0xa0(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8051510 <fchmod@plt+0x6e80>
cmp    $0x1,%eax
je     804eb8d <fchmod@plt+0x44fd>
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a3c0 <fileno@plt>
movl   $0x1a4,0x4(%esp)
mov    %eax,(%esp)
call   804a690 <fchmod@plt>
test   %eax,%eax
js     804e964 <fchmod@plt+0x42d4>
mov    %edi,(%esp)
call   80514d0 <fchmod@plt+0x6e40>
call   8050730 <fchmod@plt+0x60a0>
call   804fc10 <fchmod@plt+0x5580>
mov    0x805e5f8,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049f50 <mnt_update_table@plt>
jmp    804d13a <fchmod@plt+0x2aaa>
movl   $0x2c,0x4(%esp)
mov    %ebp,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     804da35 <fchmod@plt+0x33a5>
mov    %ebp,(%esp)
lea    0xa0(%esp),%esi
call   804a360 <__strdup@plt>
mov    %eax,%ebp
jmp    804e46c <fchmod@plt+0x3ddc>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x80(%esp),%eax
movb   $0x0,(%edi)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %ebp,0xa8(%esp)
call   804c760 <fchmod@plt+0x20d0>
test   %eax,%eax
je     804e8a6 <fchmod@plt+0x4216>
lea    0x1(%edi),%ebp
movl   $0x2c,0x4(%esp)
mov    %ebp,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
mov    %eax,%edi
jne    804e440 <fchmod@plt+0x3db0>
test   %ebp,%ebp
jne    804da3c <fchmod@plt+0x33ac>
testb  $0x20,0x5c(%esp)
jne    804dba6 <fchmod@plt+0x3516>
lea    0x9c(%esp),%eax
mov    %eax,0x60(%esp)
mov    $0x8057ef0,%eax
movl   $0x8057ef0,0x98(%esp)
08
movl   $0x8057e16,0x9c(%esp)
08
mov    %esi,0x5c(%esp)
movl   $0x8058444,0x4(%esp)
mov    %eax,(%esp)
call   804a070 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     804ea96 <fchmod@plt+0x4406>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   804bcf0 <fchmod@plt+0x1660>
test   %eax,%eax
mov    %eax,%esi
je     804eb06 <fchmod@plt+0x4476>
cmpb   $0x2a,(%esi)
jne    804e500 <fchmod@plt+0x3e70>
cmpb   $0x0,0x1(%esi)
je     804ea8e <fchmod@plt+0x43fe>
mov    0x805e5b4,%ebp
test   %ebp,%ebp
je     804e52a <fchmod@plt+0x3e9a>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804e4e0 <fchmod@plt+0x3e50>
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
jne    804e510 <fchmod@plt+0x3e80>
movl   $0x8,(%esp)
call   8054130 <error+0x650>
mov    %eax,%ebp
mov    0x805e5b4,%eax
mov    %eax,0x0(%ebp)
mov    %esi,(%esp)
call   80541a0 <error+0x6c0>
mov    %ebp,0x805e5b4
mov    %eax,0x4(%ebp)
mov    0x805e5ac,%eax
mov    %esi,0xa8(%esp)
test   %eax,%eax
jne    804e7aa <fchmod@plt+0x411a>
lea    0x80(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   804c760 <fchmod@plt+0x20d0>
test   %eax,%eax
je     804ecd0 <fchmod@plt+0x4640>
call   804a390 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,%ebp
je     804e4e0 <fchmod@plt+0x3e50>
mov    %esi,%eax
call   804bd90 <fchmod@plt+0x1700>
cmp    $0x1,%eax
jne    804e4e0 <fchmod@plt+0x3e50>
mov    0x0(%ebp),%eax
mov    $0x8057f01,%ebp
mov    %edi,0x5c(%esp)
or     $0xffffffff,%edi
mov    %eax,0x60(%esp)
mov    0x805e5b4,%esi
test   %esi,%esi
jne    804e5ca <fchmod@plt+0x3f3a>
jmp    804e5e3 <fchmod@plt+0x3f53>
nop
mov    %ebx,%esi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
call   8049e40 <free@plt>
test   %ebx,%ebx
jne    804e5c8 <fchmod@plt+0x3f38>
mov    0x5c(%esp),%eax
mov    %edi,%esi
movl   $0x0,0x805e5b4
00
mov    %eax,(%esp)
call   8049ed0 <fclose@plt>
call   804a390 <__errno_location@plt>
mov    0x60(%esp),%ebx
mov    %ebx,(%eax)
jmp    804da5c <fchmod@plt+0x33cc>
cmpl   $0x1,0x805e5ac
jle    804e640 <fchmod@plt+0x3fb0>
movl   $0x5,0x8(%esp)
movl   $0x8058e1c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
mov    0xa0(%esp),%eax
test   $0x1,%al
je     804e653 <fchmod@plt+0x3fc3>
orl    $0x1,0x84(%esp)
test   $0x2,%al
mov    0x84(%esp),%edx
jne    804f141 <fchmod@plt+0x4ab1>
mov    %ebx,0x54(%esp)
jmp    804d508 <fchmod@plt+0x2e78>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e5dc,%esi
test   %esi,%esi
jne    804d4d8 <fchmod@plt+0x2e48>
mov    0x805e5d8,%ecx
test   %ecx,%ecx
jne    804d4d8 <fchmod@plt+0x2e48>
cmpl   $0x0,0x805e5d4
jne    804d4d8 <fchmod@plt+0x2e48>
cmpl   $0x0,0x805e5c0
jne    804d4d8 <fchmod@plt+0x2e48>
test   $0x1e3000,%edx
jne    804e717 <fchmod@plt+0x4087>
test   %ebp,%ebp
je     804e6c2 <fchmod@plt+0x4032>
mov    $0x8058291,%edi
mov    $0x5,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804e704 <fchmod@plt+0x4074>
mov    0x34(%esp),%eax
lea    0xa0(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804e710 <fchmod@plt+0x4080>
mov    0xb0(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804e710 <fchmod@plt+0x4080>
mov    0x84(%esp),%eax
jmp    804d4d8 <fchmod@plt+0x2e48>
mov    %ebp,(%esp)
call   8056850 <error+0x2d70>
test   %eax,%eax
jne    804e6c2 <fchmod@plt+0x4032>
mov    0x84(%esp),%edx
mov    0x34(%esp),%edi
mov    %edx,%eax
and    $0x20,%eax
movl   $0x0,0x68(%esp)
mov    %edi,0x54(%esp)
jmp    804d51b <fchmod@plt+0x2e8b>
movl   $0x1,(%esp)
call   8053a80 <fchmod@plt+0x93f0>
jmp    804d6e5 <fchmod@plt+0x3055>
movl   $0x5,0x8(%esp)
movl   $0x8058da4,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804e0aa <fchmod@plt+0x3a1a>
mov    0x38(%esp),%eax
call   804c060 <fchmod@plt+0x19d0>
test   %eax,%eax
je     804d096 <fchmod@plt+0x2a06>
mov    0x84(%esp),%edx
jmp    804da94 <fchmod@plt+0x3404>
lea    0x0(%esi,%eiz,1),%esi
call   804fc80 <fchmod@plt+0x55f0>
test   %eax,%eax
je     804dfe3 <fchmod@plt+0x3953>
jmp    804dffb <fchmod@plt+0x396b>
movl   $0x5,0x8(%esp)
movl   $0x8057ff0,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804e565 <fchmod@plt+0x3ed5>
call   8049f90 <getuid@plt>
cmp    0xb8(%esp),%eax
mov    0x84(%esp),%eax
jne    804d489 <fchmod@plt+0x2df9>
or     $0x20000000,%eax
mov    %eax,0x84(%esp)
jmp    804d489 <fchmod@plt+0x2df9>
movl   $0x5,0x8(%esp)
movl   $0x8058cec,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804dff0 <fchmod@plt+0x3960>
mov    0x805e534,%eax
movl   $0x5,0x8(%esp)
test   %eax,%eax
je     804e9bb <fchmod@plt+0x432b>
movl   $0x80590c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
mov    0x805e5dc,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8058d14,0x4(%esp)
jmp    804e17c <fchmod@plt+0x3aec>
mov    0x805e5d8,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8058d3c,0x4(%esp)
jmp    804e17c <fchmod@plt+0x3aec>
xor    %esi,%esi
jmp    804da5c <fchmod@plt+0x33cc>
movl   $0x5,0x8(%esp)
mov    $0x20,%esi
movl   $0x8058d64,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ebx
mov    %ebx,0x8(%esp)
mov    0x34(%esp),%ebx
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   8053ae0 <error>
jmp    804d210 <fchmod@plt+0x2b80>
mov    0x805e538,%edx
jmp    804e0f4 <fchmod@plt+0x3a64>
mov    0x805e5ac,%edi
test   %edi,%edi
jne    804eb58 <fchmod@plt+0x44c8>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
jmp    804e08d <fchmod@plt+0x39fd>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804a4c0 <getgroups@plt>
test   %eax,%eax
mov    %eax,%ebx
jle    804e958 <fchmod@plt+0x42c8>
lea    0x0(,%eax,4),%eax
mov    %eax,(%esp)
call   8054130 <error+0x650>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%esi
call   804a4c0 <getgroups@plt>
cmp    %eax,%ebx
je     804eca2 <fchmod@plt+0x4612>
mov    %esi,(%esp)
call   8049e40 <free@plt>
mov    0x84(%esp),%eax
jmp    804cf5a <fchmod@plt+0x28ca>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x1e,%eax
je     804e3e4 <fchmod@plt+0x3d54>
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80590a0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x8057ffb,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804e3e4 <fchmod@plt+0x3d54>
movl   $0x8059114,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x8057ecc,(%esp)
call   8050ca0 <fchmod@plt+0x6610>
test   %eax,%eax
jne    804d8f4 <fchmod@plt+0x3264>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x8057ed7,(%esp)
call   8050ca0 <fchmod@plt+0x6610>
test   %eax,%eax
jne    804d8f4 <fchmod@plt+0x3264>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x8057ee3,(%esp)
call   8050ca0 <fchmod@plt+0x6610>
test   %eax,%eax
jne    804d8f4 <fchmod@plt+0x3264>
mov    0x38(%esp),%eax
lea    0xa0(%esp),%esi
mov    %esi,0x4(%esp)
movl   $0x0,0xa0(%esp)
00
mov    %eax,(%esp)
call   804a210 <getfilecon@plt>
test   %eax,%eax
jle    804eb31 <fchmod@plt+0x44a1>
mov    0xa0(%esp),%eax
mov    $0x8057fc6,%esi
mov    $0xa,%ecx
mov    %eax,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804eb1e <fchmod@plt+0x448e>
mov    %eax,(%esp)
call   804a530 <freecon@plt>
jmp    804d8f4 <fchmod@plt+0x3264>
mov    %edi,(%esp)
call   8049ed0 <fclose@plt>
mov    0x5c(%esp),%eax
cmp    %eax,0x60(%esp)
je     804dc22 <fchmod@plt+0x3592>
mov    0x60(%esp),%eax
addl   $0x4,0x60(%esp)
mov    (%eax),%eax
jmp    804e4bf <fchmod@plt+0x3e2f>
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059078,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x8057ffb,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804e307 <fchmod@plt+0x3c77>
mov    %edi,0x5c(%esp)
mov    %eax,%ebp
mov    $0x1,%edi
movl   $0x0,0x60(%esp)
jmp    804e5bb <fchmod@plt+0x3f2b>
mov    %eax,%edx
mov    $0x8057ee3,%eax
lea    0x8c(%esp),%ecx
call   804c850 <fchmod@plt+0x21c0>
mov    0xa0(%esp),%eax
jmp    804ea81 <fchmod@plt+0x43f1>
movl   $0x8058008,(%esp)
call   8050330 <fchmod@plt+0x5ca0>
test   %eax,%eax
mov    %eax,%esi
jne    804e31d <fchmod@plt+0x3c8d>
jmp    804e3c2 <fchmod@plt+0x3d32>
movl   $0x5,0x8(%esp)
movl   $0x8058dcc,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804e904 <fchmod@plt+0x4274>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805800d,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049f60 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x8057ffb,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    804e3c2 <fchmod@plt+0x3d32>
lea    0x80(%esp),%eax
mov    %eax,0x4(%esp)
lea    0xa0(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %ebp,0xa8(%esp)
call   804c760 <fchmod@plt+0x20d0>
mov    %eax,%esi
jmp    804da5c <fchmod@plt+0x33cc>
mov    $0x2,%esi
jmp    804d206 <fchmod@plt+0x2b76>
movl   $0x5,0x8(%esp)
movl   $0x8058e80,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
test   %ebp,%ebp
je     804f0db <fchmod@plt+0x4a4b>
mov    $0x8057fd0,%edi
mov    $0x5,%ecx
mov    %ebp,%esi
mov    %edi,0x5c(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x5,0x8(%esp)
seta   %dl
setb   %al
cmp    %al,%dl
je     804f03e <fchmod@plt+0x49ae>
movl   $0x8057fd5,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804dbe3 <fchmod@plt+0x3553>
mov    0xbc(%esp),%eax
xor    %edx,%edx
jmp    804ecbb <fchmod@plt+0x462b>
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebx,%edx
je     804e950 <fchmod@plt+0x42c0>
cmp    %eax,(%esi,%edx,4)
jne    804ecb0 <fchmod@plt+0x4620>
orl    $0x20000000,0x84(%esp)
20
jmp    804e950 <fchmod@plt+0x42c0>
mov    %edi,0x5c(%esp)
mov    %esi,%ebp
xor    %edi,%edi
movl   $0x0,0x60(%esp)
jmp    804e5bb <fchmod@plt+0x3f2b>
movl   $0x80592b8,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
js     804f0a9 <fchmod@plt+0x4a19>
mov    0xb0(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     804f157 <fchmod@plt+0x4ac7>
movl   $0x5,0x8(%esp)
movl   $0x8059474,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
mov    0x38(%esp),%edi
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %edi,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
je     804f067 <fchmod@plt+0x49d7>
movl   $0x5,0x8(%esp)
movl   $0x80591e4,0x4(%esp)
jmp    804de4d <fchmod@plt+0x37bd>
cmpl   $0x0,0x805e5ac
je     804edd6 <fchmod@plt+0x4746>
movl   $0x5,0x8(%esp)
movl   $0x8058df4,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
cmpl   $0x0,0x805e5e4
mov    $0x20,%esi
jne    804d210 <fchmod@plt+0x2b80>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
jmp    804d210 <fchmod@plt+0x2b80>
movl   $0x5,0x8(%esp)
movl   $0x8058056,0x4(%esp)
jmp    804df13 <fchmod@plt+0x3883>
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804df03 <fchmod@plt+0x3873>
mov    0xb0(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804df03 <fchmod@plt+0x3873>
movl   $0x5,0x8(%esp)
movl   $0x805803d,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
test   %eax,%eax
movl   $0x5,0x8(%esp)
jne    804ef35 <fchmod@plt+0x48a5>
movl   $0x80594f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    %ebp,(%esp)
call   80541a0 <error+0x6c0>
movzbl (%eax),%edx
mov    %eax,%ebx
test   %dl,%dl
mov    %edx,0x40(%esp)
je     804eee6 <fchmod@plt+0x4856>
call   804a660 <__ctype_tolower_loc@plt>
mov    0x40(%esp),%edx
mov    %ebx,%ecx
xor    %edi,%edi
movsbl %dl,%esi
mov    (%eax),%edx
mov    (%edx,%esi,4),%edx
cmp    %esi,%edx
je     804eed4 <fchmod@plt+0x4844>
mov    %dl,(%ecx)
add    $0x1,%edi
add    $0x1,%ecx
movzbl (%ecx),%edx
test   %dl,%dl
jne    804eec3 <fchmod@plt+0x4833>
test   %edi,%edi
jne    804f319 <fchmod@plt+0x4c89>
movl   $0x3,0x8(%esp)
movl   $0x80580e0,0x4(%esp)
mov    %ebx,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
je     804f2ae <fchmod@plt+0x4c1e>
movl   $0x3,0x8(%esp)
movl   $0x80580ed,0x4(%esp)
mov    %ebx,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
je     804f272 <fchmod@plt+0x4be2>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
xchg   %ax,%ax
jmp    804d81e <fchmod@plt+0x318e>
movl   $0x8059558,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x54(%esp),%ebx
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
cmpl   $0x0,0x805e60c
jne    804f3e8 <fchmod@plt+0x4d58>
test   $0x20,%al
jne    804f3d3 <fchmod@plt+0x4d43>
cmpl   $0x0,0x120(%esp)
je     804f3c9 <fchmod@plt+0x4d39>
mov    0x120(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
xor    %ecx,%ecx
mov    $0x8057e59,%edx
call   804c160 <fchmod@plt+0x1ad0>
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %esi,0x4c(%esp)
mov    0x40(%esp),%edi
test   %edi,%edi
je     804efd8 <fchmod@plt+0x4948>
movl   $0x8057f01,0x4(%esp)
mov    %edi,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
mov    $0x0,%eax
cmovne %edi,%eax
mov    %eax,0x40(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8059744,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x44(%esp),%edi
mov    %ebx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    0x40(%esp),%ecx
mov    %edi,%eax
mov    0x48(%esp),%edx
mov    %esi,(%esp)
movl   $0x1,0x4(%esp)
call   804ce70 <fchmod@plt+0x27e0>
mov    %eax,%esi
jmp    804d6e9 <fchmod@plt+0x3059>
movl   $0x5,0x8(%esp)
movl   $0x8059598,0x4(%esp)
jmp    804dde0 <fchmod@plt+0x3750>
movl   $0x8058ee8,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804dbe3 <fchmod@plt+0x3553>
mov    0x54(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
je     804f1b4 <fchmod@plt+0x4b24>
cmpl   $0x0,0x805e5e8
jne    804d204 <fchmod@plt+0x2b74>
movl   $0x5,0x8(%esp)
movl   $0x8059218,0x4(%esp)
jmp    804dc3e <fchmod@plt+0x35ae>
cmpl   $0x2,(%ebx)
jne    804ed43 <fchmod@plt+0x46b3>
movl   $0x5,0x8(%esp)
movl   $0x805932c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804ed43 <fchmod@plt+0x46b3>
movl   $0x5,0x8(%esp)
movl   $0x8058eb4,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x8057e16,0xc(%esp)
movl   $0x8057ef0,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
cmpl   $0x0,0x90(%esp)
lea    0xa0(%esp),%esi
je     804e495 <fchmod@plt+0x3e05>
movl   $0x5,0x8(%esp)
movl   $0x8058f3c,0x4(%esp)
jmp    804dc06 <fchmod@plt+0x3576>
mov    %edx,%eax
and    $0x20,%eax
mov    %ebx,0x54(%esp)
movl   $0x0,0x68(%esp)
jmp    804d51b <fchmod@plt+0x2e8b>
mov    0x54(%esp),%eax
movl   $0x800,0x4(%esp)
mov    %eax,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804ed43 <fchmod@plt+0x46b3>
lea    0x98(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8056430 <error+0x2950>
test   %eax,%eax
jne    804ed43 <fchmod@plt+0x46b3>
mov    0x9c(%esp),%eax
or     0x98(%esp),%eax
jne    804f1ef <fchmod@plt+0x4b5f>
cmpl   $0x0,0x68(%esp)
je     804f1cb <fchmod@plt+0x4b3b>
mov    %ebx,(%esp)
call   804a620 <close@plt>
jmp    804ed43 <fchmod@plt+0x46b3>
movl   $0x2,(%ebx)
movl   $0x8058429,(%esp)
call   804a090 <perror@plt>
jmp    804d81e <fchmod@plt+0x318e>
movl   $0x5,0x8(%esp)
movl   $0x8059398,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
mov    0x98(%esp),%eax
mov    0x9c(%esp),%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    $0x0,%edx
ja     804f1a7 <fchmod@plt+0x4b17>
cmp    $0x1,%eax
ja     804f1a7 <fchmod@plt+0x4b17>
movl   $0x5,0x8(%esp)
movl   $0x8059408,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804f1a7 <fchmod@plt+0x4b17>
mov    0x54(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
je     804f25b <fchmod@plt+0x4bcb>
cmpl   $0x14,(%ebx)
je     804f2f7 <fchmod@plt+0x4c67>
movl   $0x14,(%ebx)
movl   $0x8058429,(%esp)
call   804a090 <perror@plt>
jmp    804d81e <fchmod@plt+0x318e>
mov    $0x80580ec,%eax
call   804bd90 <fchmod@plt+0x1700>
sub    $0x1,%eax
jne    804ef26 <fchmod@plt+0x4896>
movl   $0x5,0x8(%esp)
movl   $0x8059538,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804ef26 <fchmod@plt+0x4896>
mov    $0x80580e4,%eax
call   804bd90 <fchmod@plt+0x1700>
sub    $0x1,%eax
jne    804ef06 <fchmod@plt+0x4876>
movl   $0x5,0x8(%esp)
movl   $0x8059514,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804ef26 <fchmod@plt+0x4896>
movl   $0x8059628,0x4(%esp)
jmp    804dde0 <fchmod@plt+0x3750>
cmpl   $0x0,0x805e5e8
jne    804d204 <fchmod@plt+0x2b74>
movl   $0x5,0x8(%esp)
movl   $0x8059240,0x4(%esp)
jmp    804dc3e <fchmod@plt+0x35ae>
mov    %ebx,%eax
call   804bd90 <fchmod@plt+0x1700>
sub    $0x1,%eax
jne    804eee6 <fchmod@plt+0x4856>
movl   $0x5,0x8(%esp)
movl   $0x80580c3,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804ef26 <fchmod@plt+0x4896>
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805806e,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    804edf5 <fchmod@plt+0x4765>
cmpl   $0x0,0x805e608
je     804f393 <fchmod@plt+0x4d03>
cmpl   $0x0,0x805e5ac
je     804d81e <fchmod@plt+0x318e>
movl   $0x5,0x8(%esp)
movl   $0x805807c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    804d81e <fchmod@plt+0x318e>
movl   $0x80595cc,0x4(%esp)
jmp    804dc3e <fchmod@plt+0x35ae>
mov    $0x8057e59,%esi
jmp    804efb2 <fchmod@plt+0x4922>
movl   $0x5,0x8(%esp)
movl   $0x8059708,0x4(%esp)
jmp    804dd9d <fchmod@plt+0x370d>
movl   $0x5,0x8(%esp)
movl   $0x80596cc,0x4(%esp)
jmp    804dd9d <fchmod@plt+0x370d>
mov    0x34(%esp),%eax
mov    0x3c(%esp),%ebp
movl   $0x0,0x58(%esp)
movl   $0x0,0x68(%esp)
mov    %eax,0x54(%esp)
jmp    804d550 <fchmod@plt+0x2ec0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0xbc,%esp
mov    0xd0(%esp),%esi
mov    %eax,0x14(%esp)
mov    0xd4(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0xac(%esp)
xor    %eax,%eax
mov    %edx,0x18(%esp)
test   %esi,%esi
je     804f648 <fchmod@plt+0x4fb8>
movl   $0x8058133,0x4(%esp)
mov    %esi,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804f4b6 <fchmod@plt+0x4e26>
call   8049f90 <getuid@plt>
lea    0x84(%esp),%ecx
mov    %ecx,(%esp)
movl   $0x805813f,0xc(%esp)
movl   $0x28,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x10(%esp)
call   804a680 <__sprintf_chk@plt>
mov    0x1c(%esp),%ecx
mov    %esi,%eax
mov    %ebp,%edx
call   804c0f0 <fchmod@plt+0x1a60>
test   %eax,%eax
mov    %eax,%esi
je     804f50f <fchmod@plt+0x4e7f>
movl   $0x8058146,0x4(%esp)
mov    %esi,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804f50f <fchmod@plt+0x4e7f>
call   804a320 <getgid@plt>
lea    0x84(%esp),%ecx
mov    %ecx,(%esp)
movl   $0x8058152,0xc(%esp)
movl   $0x28,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x10(%esp)
call   804a680 <__sprintf_chk@plt>
mov    0x1c(%esp),%ecx
mov    %esi,%eax
mov    %ebp,%edx
call   804c0f0 <fchmod@plt+0x1a60>
mov    %eax,%esi
mov    %esi,(%esp)
call   80541a0 <error+0x6c0>
xor    %ecx,%ecx
mov    %edi,%edx
call   804c160 <fchmod@plt+0x1ad0>
test   %ebx,%ebx
mov    %eax,%ebp
je     804f5c0 <fchmod@plt+0x4f30>
mov    $0x8058162,%edi
mov    $0x2,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x8057e8c,%edi
seta   %dl
setb   %al
cmp    %al,%dl
je     804f587 <fchmod@plt+0x4ef7>
mov    $0x3,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f587 <fchmod@plt+0x4ef7>
mov    $0x805812e,%edi
mov    $0x4,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f587 <fchmod@plt+0x4ef7>
mov    $0x805815c,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f587 <fchmod@plt+0x4ef7>
mov    0x14(%esp),%edi
mov    %edi,(%esp)
call   8053830 <fchmod@plt+0x91a0>
test   %eax,%eax
cmove  %edi,%eax
mov    %eax,0x14(%esp)
mov    0x18(%esp),%edx
mov    %ebx,%ecx
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   804ce70 <fchmod@plt+0x27e0>
mov    0xac(%esp),%ebx
xor    %gs:0x14,%ebx
jne    804f68e <fchmod@plt+0x4ffe>
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x805e5fc,%ecx
test   %ecx,%ecx
jne    804f572 <fchmod@plt+0x4ee2>
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
je     804f572 <fchmod@plt+0x4ee2>
mov    0x14(%esp),%eax
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     804f64f <fchmod@plt+0x4fbf>
mov    0x805e5ac,%edx
mov    $0x8057e8c,%edi
mov    %edi,%ebx
test   %edx,%edx
je     804f547 <fchmod@plt+0x4eb7>
movl   $0x5,0x8(%esp)
movl   $0x80598d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    804f547 <fchmod@plt+0x4eb7>
xor    %eax,%eax
jmp    804f517 <fchmod@plt+0x4e87>
mov    0x14(%esp),%esi
mov    $0x8058159,%edi
mov    $0x2,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804f572 <fchmod@plt+0x4ee2>
mov    0x805e5ac,%eax
mov    $0x805812e,%ebx
mov    $0x8057e8c,%edi
test   %eax,%eax
je     804f547 <fchmod@plt+0x4eb7>
movl   $0x5,0x8(%esp)
movl   $0x8059914,0x4(%esp)
jmp    804f627 <fchmod@plt+0x4f97>
call   8049f80 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049fe0 <mnt_new_table@plt>
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049eb0 <mnt_new_iter@plt>
movl   $0x1,0x805e630
00
movl   $0x0,0x805f684
00
movl   $0x0,0x805f680
00
test   %eax,%eax
mov    %eax,%ebp
je     804f6f8 <fchmod@plt+0x5068>
mov    0xc(%esp),%eax
test   %eax,%eax
jne    804f750 <fchmod@plt+0x50c0>
mov    $0x805f680,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805a307,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   804a5c0 <mnt_free_table@plt>
mov    %ebp,(%esp)
call   804a370 <mnt_free_iter@plt>
movl   $0x0,0x4(%ebx)
movl   $0x0,(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
mov    $0x805f680,%ebx
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ee0 <mnt_table_parse_mtab@plt>
test   %eax,%eax
jne    804f6f8 <fchmod@plt+0x5068>
lea    0x0(%esi),%esi
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049e60 <mnt_table_next_fs@plt>
test   %eax,%eax
jne    804f820 <fchmod@plt+0x5190>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049d50 <mnt_fs_get_fstype@plt>
movl   $0x0,0x1c(%esp)
test   %eax,%eax
je     804f7b8 <fchmod@plt+0x5128>
mov    $0x805a300,%edi
mov    %eax,%esi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804f770 <fchmod@plt+0x50e0>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049e30 <mnt_fs_to_mntent@plt>
test   %eax,%eax
jne    804f6fd <fchmod@plt+0x506d>
movl   $0x20,(%esp)
call   8054130 <error+0x650>
mov    0x1c(%esp),%edx
mov    (%edx),%ecx
mov    %eax,(%ebx)
mov    %ebx,0x4(%eax)
mov    %eax,%ebx
mov    %ecx,0x8(%eax)
mov    0x4(%edx),%ecx
mov    %ecx,0xc(%eax)
mov    0x8(%edx),%ecx
mov    %ecx,0x10(%eax)
mov    0xc(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    0x10(%edx),%ecx
mov    %ecx,0x18(%eax)
mov    0x14(%edx),%edx
movl   $0x805f680,(%eax)
mov    %edx,0x1c(%eax)
jmp    804f770 <fchmod@plt+0x50e0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x805f684
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %ecx,0x14(%esp)
jmp    804f85d <fchmod@plt+0x51cd>
nop
mov    0x8(%ebx),%esi
mov    $0x805a300,%edi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804f8e8 <fchmod@plt+0x5258>
mov    %ebp,(%esp)
call   8051610 <fchmod@plt+0x6f80>
test   %eax,%eax
mov    %eax,%ebx
jne    804f848 <fchmod@plt+0x51b8>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ecx
mov    %ecx,0x4(%eax)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049e90 <ferror@plt>
test   %eax,%eax
je     804f8d7 <fchmod@plt+0x5247>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a324,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    0x1c(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    0x18(%esp),%eax
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
mov    %ebp,(%esp)
call   80514d0 <fchmod@plt+0x6e40>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x20,(%esp)
call   8054130 <error+0x650>
mov    (%ebx),%edx
mov    0x14(%esp),%edi
mov    0x18(%esp),%ecx
mov    %eax,(%edi)
mov    %edx,0x8(%eax)
mov    0x4(%ebx),%edx
mov    %edi,0x4(%eax)
mov    %eax,0x14(%esp)
mov    %edx,0xc(%eax)
mov    0x8(%ebx),%edx
mov    %edx,0x10(%eax)
mov    0xc(%ebx),%edx
mov    %edx,0x14(%eax)
mov    0x10(%ebx),%edx
mov    %edx,0x18(%eax)
mov    0x14(%ebx),%edx
mov    %ecx,(%eax)
mov    %edx,0x1c(%eax)
jmp    804f85d <fchmod@plt+0x51cd>
nop
push   %ebx
sub    $0x18,%esp
movl   $0x8058444,0x4(%esp)
movl   $0x80581bc,(%esp)
movl   $0x1,0x805e62c
00
movl   $0x0,0x805f6a4
00
movl   $0x0,0x805f6a0
00
call   8051460 <fchmod@plt+0x6dd0>
test   %eax,%eax
je     804f988 <fchmod@plt+0x52f8>
mov    (%eax),%edx
test   %edx,%edx
je     804f988 <fchmod@plt+0x52f8>
add    $0x18,%esp
mov    $0x805f6a0,%ecx
pop    %ebx
mov    $0x80581bc,%edx
jmp    804f830 <fchmod@plt+0x51a0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a342,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x80581bc,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x8058444,0x4(%esp)
movl   $0x805a35d,(%esp)
movl   $0x1,0x805e628
00
movl   $0x0,0x805f6c4
00
movl   $0x0,0x805f6c0
00
call   8051460 <fchmod@plt+0x6dd0>
test   %eax,%eax
je     804fa28 <fchmod@plt+0x5398>
mov    (%eax),%edx
test   %edx,%edx
je     804fa28 <fchmod@plt+0x5398>
add    $0x18,%esp
mov    $0x805f6c0,%ecx
pop    %ebx
mov    $0x805a35d,%edx
jmp    804f830 <fchmod@plt+0x51a0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a342,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x805a35d,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
test   %eax,%eax
je     804faae <fchmod@plt+0x541e>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4,%esp
mov    (%eax),%eax
cmp    %eax,%esi
je     804faef <fchmod@plt+0x545f>
test   %eax,%eax
jne    804fae4 <fchmod@plt+0x5454>
jmp    804faef <fchmod@plt+0x545f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
lea    0x0(%esi),%esi
je     804faef <fchmod@plt+0x545f>
mov    %ebx,%eax
mov    (%eax),%ebx
call   804fa70 <fchmod@plt+0x53e0>
cmp    %ebx,%esi
jne    804fad8 <fchmod@plt+0x5448>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a000 <strsignal@plt>
movl   $0x805aa2c,0x4(%esp)
movl   $0x8,(%esp)
mov    %eax,0x8(%esp)
call   8053b40 <error+0x60>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x7c,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8057ffb,0x4(%esp)
movl   $0x3,(%esp)
movl   $0x0,0x805e638
00
movl   $0x0,0x805e634
00
call   804a600 <__lxstat64@plt>
test   %eax,%eax
je     804fb80 <fchmod@plt+0x54f0>
movl   $0x1,0x805e638
00
movl   $0x1,0x805e63c
00
add    $0x7c,%esp
ret
nop
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804fb71 <fchmod@plt+0x54e1>
movl   $0x1,0x805e634
00
movl   $0x1,0x805e63c
00
add    $0x7c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movzbl (%eax),%eax
cmp    $0x27,%al
je     804fbe0 <fchmod@plt+0x5550>
cmp    $0x22,%al
je     804fbe0 <fchmod@plt+0x5550>
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x14,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
add    $0x1,%ebx
call   804a260 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
sub    $0x2,%eax
mov    %eax,0x8(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
sete   %al
add    $0x14,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x805e63c
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e63c,%eax
test   %eax,%eax
je     804fc30 <fchmod@plt+0x55a0>
mov    0x805e638,%eax
ret
nop
sub    $0xc,%esp
call   804fb30 <fchmod@plt+0x54a0>
mov    0x805e638,%eax
add    $0xc,%esp
ret
jmp    804fc50 <fchmod@plt+0x55c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x805e63c,%eax
test   %eax,%eax
je     804fc60 <fchmod@plt+0x55d0>
mov    0x805e634,%eax
ret
nop
sub    $0xc,%esp
call   804fb30 <fchmod@plt+0x54a0>
mov    0x805e634,%eax
add    $0xc,%esp
ret
jmp    804fc80 <fchmod@plt+0x55f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x805e63c,%edx
test   %edx,%edx
je     804fcd8 <fchmod@plt+0x5648>
mov    0x805e634,%eax
test   %eax,%eax
je     804fca0 <fchmod@plt+0x5610>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1a4,0x8(%esp)
movl   $0x42,0x4(%esp)
movl   $0x8057ffb,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
js     804fc96 <fchmod@plt+0x5606>
mov    %eax,(%esp)
call   804a620 <close@plt>
mov    $0x1,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804fb30 <fchmod@plt+0x54a0>
jmp    804fc8d <fchmod@plt+0x55fd>
nop
mov    0x805e630,%eax
test   %eax,%eax
je     804fcf0 <fchmod@plt+0x5660>
mov    $0x805f680,%eax
ret
nop
sub    $0xc,%esp
call   804f6b0 <fchmod@plt+0x5020>
mov    $0x805f680,%eax
add    $0xc,%esp
ret
jmp    804fd10 <fchmod@plt+0x5680>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x805e62c,%eax
test   %eax,%eax
je     804fd20 <fchmod@plt+0x5690>
mov    $0x805f6a0,%eax
ret
nop
sub    $0xc,%esp
call   804f930 <fchmod@plt+0x52a0>
mov    $0x805f6a0,%eax
add    $0xc,%esp
ret
jmp    804fd40 <fchmod@plt+0x56b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x805e628,%eax
test   %eax,%eax
je     804fd50 <fchmod@plt+0x56c0>
mov    $0x805f6c0,%eax
ret
nop
sub    $0xc,%esp
call   804f9d0 <fchmod@plt+0x5340>
mov    $0x805f6c0,%eax
add    $0xc,%esp
ret
jmp    804fd70 <fchmod@plt+0x56e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805e630,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     804fde0 <fchmod@plt+0x5750>
mov    0x805f680,%ebx
cmp    $0x805f680,%ebx
jne    804fdc8 <fchmod@plt+0x5738>
jmp    804fdcc <fchmod@plt+0x573c>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804fdd8 <fchmod@plt+0x5748>
mov    %esi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804fdd8 <fchmod@plt+0x5748>
mov    (%ebx),%ebx
cmp    $0x805f680,%ebx
je     804fdcc <fchmod@plt+0x573c>
test   %ebx,%ebx
jne    804fd98 <fchmod@plt+0x5708>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
call   804f6b0 <fchmod@plt+0x5020>
jmp    804fd82 <fchmod@plt+0x56f2>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e630,%eax
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebx
test   %eax,%eax
je     804fe80 <fchmod@plt+0x57f0>
test   %ebx,%ebx
mov    $0x805f680,%eax
cmove  %eax,%ebx
mov    0x4(%ebx),%esi
cmp    %eax,%esi
je     804fe88 <fchmod@plt+0x57f8>
test   %esi,%esi
je     804fe88 <fchmod@plt+0x57f8>
mov    %esi,%ebx
jmp    804fe2f <fchmod@plt+0x579f>
mov    0x4(%ebx),%ebx
cmp    $0x805f680,%ebx
je     804fe5f <fchmod@plt+0x57cf>
test   %ebx,%ebx
je     804fe5f <fchmod@plt+0x57cf>
mov    %edi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804fe20 <fchmod@plt+0x5790>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%esi
cmp    $0x805f680,%esi
je     804fe88 <fchmod@plt+0x57f8>
test   %esi,%esi
je     804fe88 <fchmod@plt+0x57f8>
mov    %edi,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804fe50 <fchmod@plt+0x57c0>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804f6b0 <fchmod@plt+0x5020>
jmp    804fe07 <fchmod@plt+0x5777>
nop
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    804fea0 <fchmod@plt+0x5810>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805e630,%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
test   %eax,%eax
je     804ff08 <fchmod@plt+0x5878>
test   %ebx,%ebx
mov    $0x805f680,%eax
cmove  %eax,%ebx
mov    0x4(%ebx),%ebx
cmp    %eax,%ebx
jne    804feee <fchmod@plt+0x585e>
jmp    804fef2 <fchmod@plt+0x5862>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     804ff00 <fchmod@plt+0x5870>
mov    0x4(%ebx),%ebx
cmp    $0x805f680,%ebx
je     804fef2 <fchmod@plt+0x5862>
test   %ebx,%ebx
jne    804fed0 <fchmod@plt+0x5840>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
call   804f6b0 <fchmod@plt+0x5020>
jmp    804feb6 <fchmod@plt+0x5826>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e630,%eax
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebx
test   %eax,%eax
je     804ffd0 <fchmod@plt+0x5940>
test   %ebx,%ebx
mov    $0x805f680,%eax
cmove  %eax,%ebx
mov    0x4(%ebx),%esi
cmp    %eax,%esi
je     804ffe0 <fchmod@plt+0x5950>
test   %esi,%esi
je     804ffe0 <fchmod@plt+0x5950>
mov    %esi,%ebx
jmp    804ff5f <fchmod@plt+0x58cf>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ebx
cmp    $0x805f680,%ebx
je     804ff97 <fchmod@plt+0x5907>
test   %ebx,%ebx
je     804ff97 <fchmod@plt+0x5907>
mov    %edi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804ff50 <fchmod@plt+0x58c0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049e40 <free@plt>
mov    0x4(%esi),%esi
cmp    $0x805f680,%esi
je     804ffe0 <fchmod@plt+0x5950>
test   %esi,%esi
je     804ffe0 <fchmod@plt+0x5950>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8054010 <error+0x530>
test   %eax,%eax
mov    %eax,%ebx
je     804ff80 <fchmod@plt+0x58f0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    804ff80 <fchmod@plt+0x58f0>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804f6b0 <fchmod@plt+0x5020>
jmp    804ff2b <fchmod@plt+0x589b>
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805e628,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     8050050 <fchmod@plt+0x59c0>
mov    0x805f6c0,%ebx
cmp    $0x805f6c0,%ebx
jne    8050035 <fchmod@plt+0x59a5>
jmp    8050039 <fchmod@plt+0x59a9>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     8050048 <fchmod@plt+0x59b8>
mov    (%ebx),%ebx
cmp    $0x805f6c0,%ebx
je     8050039 <fchmod@plt+0x59a9>
test   %ebx,%ebx
jne    8050018 <fchmod@plt+0x5988>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
call   804f9d0 <fchmod@plt+0x5340>
jmp    8050002 <fchmod@plt+0x5972>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e630,%eax
mov    0x20(%esp),%edi
test   %eax,%eax
je     80500d8 <fchmod@plt+0x5a48>
mov    0x805f684,%ebx
cmp    $0x805f680,%ebx
je     80500e0 <fchmod@plt+0x5a50>
test   %ebx,%ebx
je     80500e0 <fchmod@plt+0x5a50>
xor    %esi,%esi
jmp    8050094 <fchmod@plt+0x5a04>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80500c8 <fchmod@plt+0x5a38>
mov    %edi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
je     80500ba <fchmod@plt+0x5a2a>
mov    %edi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    80500bd <fchmod@plt+0x5a2d>
add    $0x1,%esi
mov    0x4(%ebx),%ebx
cmp    $0x805f680,%ebx
jne    8050090 <fchmod@plt+0x5a00>
xor    %eax,%eax
cmp    $0x1,%esi
sete   %al
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804f6b0 <fchmod@plt+0x5020>
jmp    8050073 <fchmod@plt+0x59e3>
nop
xor    %eax,%eax
jmp    80500d0 <fchmod@plt+0x5a40>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
test   %edx,%edx
je     80501a0 <fchmod@plt+0x5b10>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a260 <strlen@plt>
mov    %eax,%edi
mov    0x805e630,%eax
test   %eax,%eax
je     80501b0 <fchmod@plt+0x5b20>
mov    0x805f680,%ebx
test   %ebx,%ebx
je     80501a0 <fchmod@plt+0x5b10>
cmp    $0x805f680,%ebx
jne    8050146 <fchmod@plt+0x5ab6>
jmp    80501a0 <fchmod@plt+0x5b10>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
cmp    $0x805f680,%ebx
je     80501a0 <fchmod@plt+0x5b10>
test   %ebx,%ebx
je     80501a0 <fchmod@plt+0x5b10>
mov    0x14(%ebx),%esi
test   %esi,%esi
je     8050138 <fchmod@plt+0x5aa8>
movl   $0x8057de7,0x4(%esp)
mov    %esi,(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8050138 <fchmod@plt+0x5aa8>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x5(%ebp),%eax
mov    %eax,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    8050138 <fchmod@plt+0x5aa8>
cmp    %esi,%ebp
je     8050188 <fchmod@plt+0x5af8>
cmpb   $0x2c,-0x1(%ebp)
jne    8050138 <fchmod@plt+0x5aa8>
movzbl 0x5(%ebp,%edi,1),%eax
cmp    $0x2c,%al
je     8050195 <fchmod@plt+0x5b05>
test   %al,%al
jne    8050138 <fchmod@plt+0x5aa8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804f6b0 <fchmod@plt+0x5020>
jmp    805011e <fchmod@plt+0x5a8e>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e62c,%eax
test   %eax,%eax
je     8050320 <fchmod@plt+0x5c90>
mov    0x805f6a0,%ebx
cmp    $0x805f6a0,%ebx
jne    8050246 <fchmod@plt+0x5bb6>
jmp    80502ba <fchmod@plt+0x5c2a>
nop
mov    $0x8057ded,%edi
mov    %ebp,%esi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050300 <fchmod@plt+0x5c70>
mov    $0x8057df4,%edi
mov    %ebp,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80502c8 <fchmod@plt+0x5c38>
mov    0x30(%esp),%eax
add    $0x5,%ebp
mov    %eax,(%esp)
call   8056870 <error+0x2d90>
test   %eax,%eax
mov    %eax,%edi
je     805023c <fchmod@plt+0x5bac>
mov    %edi,%edx
mov    %ebp,%eax
call   804fbb0 <fchmod@plt+0x5520>
mov    %edi,(%esp)
mov    %eax,%esi
call   8049e40 <free@plt>
test   %esi,%esi
jne    805027c <fchmod@plt+0x5bec>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
je     80502ba <fchmod@plt+0x5c2a>
test   %ebx,%ebx
je     80502ba <fchmod@plt+0x5c2a>
mov    0xc(%ebx),%esi
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    8050288 <fchmod@plt+0x5bf8>
mov    0x8(%ebx),%ebp
mov    0x30(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    80501e8 <fchmod@plt+0x5b58>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8054090 <error+0x5b0>
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049e40 <free@plt>
test   %edi,%edi
je     8050261 <fchmod@plt+0x5bd1>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
jne    8050246 <fchmod@plt+0x5bb6>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8054010 <error+0x530>
mov    %eax,%edi
mov    0x30(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
mov    %edi,(%esp)
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%esi
call   8049e40 <free@plt>
jmp    8050238 <fchmod@plt+0x5ba8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
add    $0x6,%ebp
mov    %eax,(%esp)
call   8056860 <error+0x2d80>
test   %eax,%eax
mov    %eax,%edi
jne    8050225 <fchmod@plt+0x5b95>
jmp    805023c <fchmod@plt+0x5bac>
xchg   %ax,%ax
call   804f930 <fchmod@plt+0x52a0>
jmp    80501d4 <fchmod@plt+0x5b44>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e62c,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     8050420 <fchmod@plt+0x5d90>
mov    0x805f6a0,%ebx
test   %ebx,%ebx
je     8050390 <fchmod@plt+0x5d00>
cmp    $0x805f6a0,%ebx
jne    805036e <fchmod@plt+0x5cde>
jmp    8050390 <fchmod@plt+0x5d00>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
je     8050390 <fchmod@plt+0x5d00>
test   %ebx,%ebx
je     8050390 <fchmod@plt+0x5d00>
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    8050360 <fchmod@plt+0x5cd0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8054090 <error+0x5b0>
mov    0x805f6a0,%ebx
test   %ebx,%ebx
mov    %eax,%edi
je     805040e <fchmod@plt+0x5d7e>
cmp    $0x805f6a0,%ebx
je     805040e <fchmod@plt+0x5d7e>
mov    0xc(%ebx),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    80503d0 <fchmod@plt+0x5d40>
mov    %edi,(%esp)
call   8049e40 <free@plt>
mov    %ebx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
call   8054090 <error+0x5b0>
test   %eax,%eax
mov    %eax,%esi
je     80503f8 <fchmod@plt+0x5d68>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    80503f8 <fchmod@plt+0x5d68>
mov    %esi,(%esp)
call   8049e40 <free@plt>
jmp    80503bf <fchmod@plt+0x5d2f>
mov    %esi,(%esp)
call   8049e40 <free@plt>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
je     805040e <fchmod@plt+0x5d7e>
test   %ebx,%ebx
jne    80503ac <fchmod@plt+0x5d1c>
mov    %edi,(%esp)
call   8049e40 <free@plt>
xor    %eax,%eax
jmp    80503c9 <fchmod@plt+0x5d39>
lea    0x0(%esi),%esi
call   804f930 <fchmod@plt+0x52a0>
jmp    8050347 <fchmod@plt+0x5cb7>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e62c,%eax
mov    0x30(%esp),%ebp
test   %eax,%eax
je     8050508 <fchmod@plt+0x5e78>
mov    0x805f6a0,%ebx
cmp    $0x805f6a0,%ebx
je     80504f8 <fchmod@plt+0x5e68>
test   %ebx,%ebx
mov    %ebx,%esi
jne    8050476 <fchmod@plt+0x5de6>
jmp    80504f8 <fchmod@plt+0x5e68>
lea    0x0(%esi),%esi
mov    (%esi),%esi
cmp    $0x805f6a0,%esi
je     80504c8 <fchmod@plt+0x5e38>
test   %esi,%esi
je     80504c8 <fchmod@plt+0x5e38>
mov    %ebp,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    8050468 <fchmod@plt+0x5dd8>
mov    %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8054010 <error+0x530>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8049d60 <strcmp@plt>
mov    %esi,(%esp)
test   %eax,%eax
je     8050512 <fchmod@plt+0x5e82>
call   8049e40 <free@plt>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
je     80504f8 <fchmod@plt+0x5e68>
test   %ebx,%ebx
je     80504f8 <fchmod@plt+0x5e68>
mov    0x8(%ebx),%eax
mov    $0x8057ded,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80504ba <fchmod@plt+0x5e2a>
mov    $0x8057df4,%edi
mov    %eax,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8050498 <fchmod@plt+0x5e08>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
jne    80504c4 <fchmod@plt+0x5e34>
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804f930 <fchmod@plt+0x52a0>
jmp    8050448 <fchmod@plt+0x5db8>
call   8049e40 <free@plt>
mov    %ebx,%eax
jmp    805048b <fchmod@plt+0x5dfb>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x805e62c,%eax
test   %eax,%eax
je     8050598 <fchmod@plt+0x5f08>
mov    0x805f6a0,%ebx
cmp    $0x805f6a0,%ebx
je     805057e <fchmod@plt+0x5eee>
test   %ebx,%ebx
je     805057e <fchmod@plt+0x5eee>
mov    $0x8057df4,%ebp
jmp    8050554 <fchmod@plt+0x5ec4>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     805057e <fchmod@plt+0x5eee>
mov    0x8(%ebx),%eax
mov    %ebp,%edi
mov    $0x5,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8050574 <fchmod@plt+0x5ee4>
mov    0x20(%esp),%edx
add    $0x5,%eax
call   804fbb0 <fchmod@plt+0x5520>
test   %eax,%eax
jne    8050588 <fchmod@plt+0x5ef8>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
jne    8050550 <fchmod@plt+0x5ec0>
add    $0xc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0xc,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804f930 <fchmod@plt+0x52a0>
jmp    8050530 <fchmod@plt+0x5ea0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x805e62c,%eax
test   %eax,%eax
je     8050618 <fchmod@plt+0x5f88>
mov    0x805f6a0,%ebx
cmp    $0x805f6a0,%ebx
je     80505fe <fchmod@plt+0x5f6e>
test   %ebx,%ebx
je     80505fe <fchmod@plt+0x5f6e>
mov    $0x8057ded,%ebp
jmp    80505d4 <fchmod@plt+0x5f44>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80505fe <fchmod@plt+0x5f6e>
mov    0x8(%ebx),%eax
mov    %ebp,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80505f4 <fchmod@plt+0x5f64>
mov    0x20(%esp),%edx
add    $0x6,%eax
call   804fbb0 <fchmod@plt+0x5520>
test   %eax,%eax
jne    8050608 <fchmod@plt+0x5f78>
mov    (%ebx),%ebx
cmp    $0x805f6a0,%ebx
jne    80505d0 <fchmod@plt+0x5f40>
add    $0xc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0xc,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804f930 <fchmod@plt+0x52a0>
jmp    80505b0 <fchmod@plt+0x5f20>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     80506e8 <fchmod@plt+0x6058>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80567d0 <error+0x2cf0>
test   %eax,%eax
jne    80506e8 <fchmod@plt+0x6058>
mov    0x18(%esp),%eax
test   %eax,%eax
je     80506f8 <fchmod@plt+0x6068>
mov    $0x805a36d,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80506d0 <fchmod@plt+0x6040>
mov    $0x5,%ecx
mov    $0x805a373,%edi
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %ebx,%ebx
cmp    %dl,%cl
je     80506b8 <fchmod@plt+0x6028>
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebx,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8050520 <fchmod@plt+0x5e90>
mov    %eax,%ebx
mov    0x18(%esp),%eax
jmp    8050698 <fchmod@plt+0x6008>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80505a0 <fchmod@plt+0x5f10>
mov    %eax,%ebx
mov    0x18(%esp),%eax
jmp    8050698 <fchmod@plt+0x6008>
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8054010 <error+0x530>
mov    %eax,(%esp)
mov    %eax,%esi
call   8050430 <fchmod@plt+0x5da0>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049e40 <free@plt>
test   %edi,%edi
mov    %edi,%eax
jne    80506ae <fchmod@plt+0x601e>
mov    %ebx,(%esp)
call   8050430 <fchmod@plt+0x5da0>
jmp    80506ae <fchmod@plt+0x601e>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x805e624,%eax
test   %eax,%eax
jne    8050740 <fchmod@plt+0x60b0>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x805e540,%eax
mov    %eax,(%esp)
call   804a620 <close@plt>
movl   $0x80581f9,(%esp)
movl   $0xffffffff,0x805e540
ff
call   8049fc0 <unlink@plt>
movl   $0x0,0x805e624
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
mov    0x805e620,%ebx
mov    %gs:0x14,%eax
mov    %eax,0xec(%esp)
xor    %eax,%eax
test   %ebx,%ebx
je     8050ba0 <fchmod@plt+0x6510>
call   804a100 <getpid@plt>
lea    0xcd(%esp),%esi
movl   $0x805a378,0xc(%esp)
movl   $0x1f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
call   804a680 <__sprintf_chk@plt>
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %esi,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8050c20 <fchmod@plt+0x6590>
mov    %ebx,(%esp)
lea    0x40(%esp),%ebp
call   804a620 <close@plt>
lea    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049f10 <gettimeofday@plt>
mov    0x805e624,%eax
addl   $0x1e,0x30(%esp)
movl   $0x0,0x28(%esp)
movl   $0x4c4b40,0x2c(%esp)
jmp    80508cb <fchmod@plt+0x623b>
movl   $0x1,0x805e624
00
movl   $0x1,0x4(%esp)
movl   $0x80581f9,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,0x805e540
js     8050a88 <fchmod@plt+0x63f8>
xor    %ecx,%ecx
mov    $0x1,%edx
test   %ebx,%ebx
mov    %dx,0x40(%esp)
mov    %cx,0x42(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x50(%esp)
jne    8050970 <fchmod@plt+0x62e0>
mov    0x805e540,%eax
mov    %ebp,0x8(%esp)
movl   $0xd,0x4(%esp)
mov    %eax,(%esp)
call   804a2f0 <fcntl@plt>
cmp    $0xffffffff,%eax
je     8050a30 <fchmod@plt+0x63a0>
mov    %esi,(%esp)
call   8049fc0 <unlink@plt>
mov    0x805e624,%eax
test   %eax,%eax
jne    8050b20 <fchmod@plt+0x6490>
movl   $0x80581f9,0x4(%esp)
mov    %esi,(%esp)
call   804a3a0 <link@plt>
mov    %eax,%ebx
call   804a390 <__errno_location@plt>
test   %ebx,%ebx
mov    %eax,%edi
mov    (%eax),%edx
je     8050838 <fchmod@plt+0x61a8>
cmp    $0x11,%edx
mov    %edx,0x1c(%esp)
je     8050842 <fchmod@plt+0x61b2>
mov    %ebx,%eax
shr    $0x1f,%eax
test   %al,%al
je     8050842 <fchmod@plt+0x61b2>
mov    %esi,(%esp)
call   8049fc0 <unlink@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a43c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8049f60 <dcgettext@plt>
mov    0x1c(%esp),%edx
movl   $0x80581f9,0x8(%esp)
movl   $0x10,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    8050842 <fchmod@plt+0x61b2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049f10 <gettimeofday@plt>
mov    0x38(%esp),%eax
mov    0x30(%esp),%edx
cmp    %edx,%eax
jge    80509f0 <fchmod@plt+0x6360>
sub    %eax,%edx
mov    %edx,(%esp)
call   8049f40 <alarm@plt>
mov    0x805e540,%eax
mov    %ebp,0x8(%esp)
movl   $0xe,0x4(%esp)
mov    %eax,(%esp)
call   804a2f0 <fcntl@plt>
cmp    $0xffffffff,%eax
je     8050b40 <fchmod@plt+0x64b0>
movl   $0x0,(%esp)
call   8049f40 <alarm@plt>
lea    0x28(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a570 <nanosleep@plt>
mov    0x805e540,%eax
mov    %eax,(%esp)
call   804a620 <close@plt>
jmp    80508c6 <fchmod@plt+0x6236>
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049fc0 <unlink@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a4ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x80581f9,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    80509dc <fchmod@plt+0x634c>
xchg   %ax,%ax
mov    0x805e5ac,%eax
test   %eax,%eax
je     80508be <fchmod@plt+0x622e>
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a385,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x80581f9,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    80508be <fchmod@plt+0x622e>
xchg   %ax,%ax
mov    (%edi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049f10 <gettimeofday@plt>
cmpl   $0x2,(%edi)
jne    8050ac0 <fchmod@plt+0x6430>
mov    0x30(%esp),%eax
cmp    %eax,0x38(%esp)
jge    8050ac0 <fchmod@plt+0x6430>
movl   $0x0,0x805e624
00
jmp    80508d3 <fchmod@plt+0x6243>
mov    %esi,(%esp)
call   8049fc0 <unlink@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a474,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8049f60 <dcgettext@plt>
mov    0x1c(%esp),%edx
movl   $0x80581f9,0x8(%esp)
movl   $0x10,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    8050863 <fchmod@plt+0x61d3>
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
xor    %gs:0x14,%eax
jne    8050c8d <fchmod@plt+0x65fd>
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    (%edi),%ebx
mov    %esi,(%esp)
call   8049fc0 <unlink@plt>
cmpl   $0x4,(%edi)
je     8050c6a <fchmod@plt+0x65da>
mov    %ebx,(%esp)
call   804a1a0 <strerror@plt>
mov    %eax,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805a3ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x80581f9,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    80509bc <fchmod@plt+0x632c>
lea    0x0(%esi),%esi
lea    0x44(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    $0x804fb00,%ebp
movl   $0x804fb00,0x40(%esp)
lea    0x40(%esp),%edi
movl   $0x0,0xc4(%esp)
00
call   804a300 <sigfillset@plt>
jmp    8050bf3 <fchmod@plt+0x6563>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804f6a0,%eax
cmp    $0xe,%ebx
cmovne %ebp,%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x40(%esp)
call   804a590 <sigaction@plt>
add    $0x1,%ebx
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049fd0 <sigismember@plt>
cmp    $0xffffffff,%eax
je     8050c0c <fchmod@plt+0x657c>
cmp    $0x11,%ebx
jne    8050bd0 <fchmod@plt+0x6540>
movl   $0x1,0x805e620
00
jmp    80507a7 <fchmod@plt+0x6117>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a404,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049f60 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
jmp    80507f9 <fchmod@plt+0x6169>
movl   $0x5,0x8(%esp)
movl   $0x805a3a2,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,%ebx
jmp    8050b5d <fchmod@plt+0x64cd>
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
test   %esi,%esi
je     8050d20 <fchmod@plt+0x6690>
mov    0x20(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049d20 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8050d20 <fchmod@plt+0x6690>
movl   $0x2c,0x4(%esp)
mov    %eax,(%esp)
call   804a240 <strchr@plt>
cmp    %ebx,%eax
jbe    8050d08 <fchmod@plt+0x6678>
test   %eax,%eax
je     8050d08 <fchmod@plt+0x6678>
sub    %ebx,%eax
test   %edi,%edi
je     8050ce8 <fchmod@plt+0x6658>
mov    %eax,(%edi)
cmp    %esi,%ebx
je     8050cf2 <fchmod@plt+0x6662>
cmpb   $0x2c,-0x1(%ebx)
jne    8050d20 <fchmod@plt+0x6690>
movzbl (%ebx,%eax,1),%eax
cmp    $0x2c,%al
jne    8050d18 <fchmod@plt+0x6688>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
jmp    8050ce2 <fchmod@plt+0x6652>
lea    0x0(%esi),%esi
test   %al,%al
je     8050cfa <fchmod@plt+0x666a>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
mov    0x20(%esp),%ebx
mov    %esi,(%esp)
call   804a260 <strlen@plt>
mov    %eax,%edi
test   %ebx,%ebx
je     8050d79 <fchmod@plt+0x66e9>
cmpb   $0x0,(%ebx)
je     8050d79 <fchmod@plt+0x66e9>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    8050d72 <fchmod@plt+0x66e2>
jmp    8050d82 <fchmod@plt+0x66f2>
nop
add    $0x1,%ebx
cmp    $0x2c,%dl
xchg   %ax,%ax
je     8050d48 <fchmod@plt+0x66b8>
movzbl (%ebx),%edx
test   %dl,%dl
jne    8050d68 <fchmod@plt+0x66d8>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
add    %edi,%ebx
movzbl (%ebx),%edx
cmp    $0x2c,%dl
je     8050da9 <fchmod@plt+0x6719>
test   %dl,%dl
je     8050da9 <fchmod@plt+0x6719>
mov    %ebx,%eax
jmp    8050d9c <fchmod@plt+0x670c>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     8050da7 <fchmod@plt+0x6717>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2c,%dl
jne    8050d98 <fchmod@plt+0x6708>
sub    %ebx,%eax
mov    %ebx,0x20(%esp)
mov    %eax,0x24(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8053b90 <error+0xb0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0x805e63c,%ebx
test   %ebx,%ebx
je     8050df0 <fchmod@plt+0x6760>
mov    0x805e638,%ecx
test   %ecx,%ecx
je     8050dff <fchmod@plt+0x676f>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804fb30 <fchmod@plt+0x54a0>
mov    0x805e638,%ecx
test   %ecx,%ecx
jne    8050dde <fchmod@plt+0x674e>
call   804fc80 <fchmod@plt+0x55f0>
test   %eax,%eax
je     8050dde <fchmod@plt+0x674e>
call   8050780 <fchmod@plt+0x60f0>
movl   $0x8058444,0x4(%esp)
movl   $0x8057ffb,(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
call   8051460 <fchmod@plt+0x6dd0>
test   %eax,%eax
je     8051148 <fchmod@plt+0x6ab8>
mov    (%eax),%edx
test   %edx,%edx
je     8051148 <fchmod@plt+0x6ab8>
lea    0x20(%esp),%esi
mov    $0x8057ffb,%edx
mov    %esi,%ecx
call   804f830 <fchmod@plt+0x51a0>
mov    0xc0(%esp),%ebp
test   %ebp,%ebp
je     8051088 <fchmod@plt+0x69f8>
mov    0x24(%esp),%ebx
test   %ebx,%ebx
setne  %dl
je     8051088 <fchmod@plt+0x69f8>
cmp    %esi,%ebx
jne    8050e9a <fchmod@plt+0x680a>
jmp    8051078 <fchmod@plt+0x69e8>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
setne  %al
cmp    %esi,%ebx
mov    %eax,%edx
je     8051078 <fchmod@plt+0x69e8>
test   %al,%al
je     8051088 <fchmod@plt+0x69f8>
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    8050e80 <fchmod@plt+0x67f0>
cmp    %esi,%ebx
je     8051088 <fchmod@plt+0x69f8>
mov    0xc4(%esp),%edi
test   %edi,%edi
je     8051329 <fchmod@plt+0x6c99>
mov    0xc4(%esp),%eax
mov    0xc(%ebx),%edi
mov    0x4(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049d60 <strcmp@plt>
test   %eax,%eax
jne    8051307 <fchmod@plt+0x6c77>
mov    0xc4(%esp),%eax
mov    0x14(%ebx),%edi
mov    0xc(%eax),%edx
test   %edi,%edi
sete   %al
test   %edx,%edx
je     805140c <fchmod@plt+0x6d7c>
test   %al,%al
jne    8051446 <fchmod@plt+0x6db6>
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
call   804a260 <strlen@plt>
mov    0x18(%esp),%edx
test   %edx,%edx
mov    %eax,%ebp
je     80513fa <fchmod@plt+0x6d6a>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   804a260 <strlen@plt>
lea    0x2(%ebp,%eax,1),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x18(%esp)
call   8054130 <error+0x650>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%ecx
cmpb   $0x0,(%edx)
mov    %eax,%ebp
jne    80513a7 <fchmod@plt+0x6d17>
movb   $0x0,0x0(%ebp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x8057de7,(%esp)
call   8050ca0 <fchmod@plt+0x6610>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8050f9f <fchmod@plt+0x690f>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x8057de7,(%esp)
call   8050ca0 <fchmod@plt+0x6610>
mov    0x18(%esp),%edx
test   %eax,%eax
je     80513bc <fchmod@plt+0x6d2c>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebp,0x14(%ebx)
lea    0x0(%esi),%esi
movl   $0x8057e57,0x4(%esp)
movl   $0x805821d,(%esp)
call   8051460 <fchmod@plt+0x6dd0>
test   %eax,%eax
mov    %eax,%edi
je     80511f8 <fchmod@plt+0x6b68>
mov    (%eax),%eax
test   %eax,%eax
je     80511f8 <fchmod@plt+0x6b68>
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8051198 <fchmod@plt+0x6b08>
cmp    %esi,%ebx
jne    8051006 <fchmod@plt+0x6976>
jmp    8051198 <fchmod@plt+0x6b08>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
cmp    %esi,%ebx
je     8051198 <fchmod@plt+0x6b08>
test   %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
je     8051198 <fchmod@plt+0x6b08>
lea    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8051510 <fchmod@plt+0x6e80>
cmp    $0x1,%eax
jne    8050ff0 <fchmod@plt+0x6960>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8058014,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x805821d,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    %esi,%eax
call   804fac0 <fchmod@plt+0x5430>
movl   $0x805821d,(%esp)
call   8049fc0 <unlink@plt>
call   8050730 <fchmod@plt+0x60a0>
jmp    8050dde <fchmod@plt+0x674e>
test   %dl,%dl
lea    0x0(%esi),%esi
jne    8050eb4 <fchmod@plt+0x6824>
xchg   %ax,%ax
mov    0xc4(%esp),%ecx
test   %ecx,%ecx
je     8050fb0 <fchmod@plt+0x6920>
movl   $0x20,(%esp)
call   8054130 <error+0x650>
mov    %eax,%ebx
mov    0xc4(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x8(%ebx)
mov    0xc4(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0xc(%ebx)
mov    0xc4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x10(%ebx)
mov    0xc4(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0x14(%ebx)
mov    0xc4(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x18(%ebx)
mov    0xc4(%esp),%eax
mov    0x14(%eax),%eax
mov    %esi,(%ebx)
mov    %eax,0x1c(%ebx)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8051341 <fchmod@plt+0x6cb1>
mov    %eax,0x4(%ebx)
mov    0x24(%esp),%eax
mov    %ebx,(%eax)
mov    0x20(%esp),%edx
mov    %ebx,0x24(%esp)
test   %edx,%edx
jne    8050fb0 <fchmod@plt+0x6920>
mov    %ebx,0x20(%esp)
jmp    8050fb0 <fchmod@plt+0x6920>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
lea    0x20(%esp),%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a4e8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x8057ffb,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    805105b <fchmod@plt+0x69cb>
lea    0x0(%esi),%esi
mov    %esi,%eax
call   804fac0 <fchmod@plt+0x5430>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049e00 <fflush@plt>
test   %eax,%eax
je     8051220 <fchmod@plt+0x6b90>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a3c8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x805821d,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
jmp    8051062 <fchmod@plt+0x69d2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a4e8,0x4(%esp)
mov    %eax,%ebx
jmp    805103b <fchmod@plt+0x69ab>
xchg   %ax,%ax
mov    (%edi),%eax
mov    %eax,(%esp)
call   804a3c0 <fileno@plt>
movl   $0x1a4,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a690 <fchmod@plt>
test   %eax,%eax
js     8051349 <fchmod@plt+0x6cb9>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8057ffb,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    8051284 <fchmod@plt+0x6bf4>
mov    0x5c(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
call   804a270 <fchown@plt>
test   %eax,%eax
js     805141d <fchmod@plt+0x6d8d>
mov    %edi,(%esp)
call   80514d0 <fchmod@plt+0x6e40>
movl   $0x8057ffb,0x4(%esp)
movl   $0x805821d,(%esp)
call   804a220 <rename@plt>
test   %eax,%eax
jns    8051062 <fchmod@plt+0x69d2>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a3e6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x8057ffb,0x10(%esp)
movl   $0x805821d,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
jmp    8051062 <fchmod@plt+0x69d2>
mov    %edi,(%esp)
call   8049e40 <free@plt>
mov    0xc4(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,0xc(%ebx)
jmp    8050fb0 <fchmod@plt+0x6920>
mov    0x4(%ebx),%eax
mov    (%ebx),%edx
mov    %edx,(%eax)
mov    (%ebx),%edx
mov    %eax,0x4(%edx)
mov    %ebx,%eax
call   804fa70 <fchmod@plt+0x53e0>
jmp    8050fb0 <fchmod@plt+0x6920>
mov    %esi,0x4(%ebx)
jmp    8051129 <fchmod@plt+0x6a99>
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a510,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x10(%esp)
movl   $0x805821d,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
jmp    8051062 <fchmod@plt+0x69d2>
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a3b0 <strncpy@plt>
jmp    8050f5b <fchmod@plt+0x68cb>
cmpb   $0x0,0x0(%ebp)
mov    %ebp,%edi
je     80513d5 <fchmod@plt+0x6d45>
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%ebp,%ecx,1),%eax
lea    0x1(%eax),%edi
movb   $0x2c,(%eax)
mov    0x40(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
mov    %ecx,0x18(%esp)
call   8049e80 <memcpy@plt>
mov    0x18(%esp),%ecx
movb   $0x0,(%edi,%ecx,1)
jmp    8050f9f <fchmod@plt+0x690f>
add    $0x2,%ebp
mov    %ebp,(%esp)
call   8054130 <error+0x650>
mov    %eax,%ebp
jmp    8050f57 <fchmod@plt+0x68c7>
test   %al,%al
je     8050f0e <fchmod@plt+0x687e>
xor    %eax,%eax
xor    %ebp,%ebp
jmp    8050fa2 <fchmod@plt+0x6912>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a530,0x4(%esp)
mov    %eax,%ebx
jmp    8051371 <fchmod@plt+0x6ce1>
mov    %edx,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%ebp
mov    0x14(%ebx),%eax
jmp    8050fa2 <fchmod@plt+0x6912>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x14,(%esp)
mov    0x20(%esp),%esi
call   8054130 <error+0x650>
movl   $0x3f,(%esp)
mov    %eax,%ebx
call   804a5e0 <umask@plt>
mov    %esi,(%esp)
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   804a070 <fopen64@plt>
mov    %eax,(%ebx)
mov    %edi,(%esp)
call   804a5e0 <umask@plt>
mov    %esi,(%esp)
call   80541a0 <error+0x6c0>
mov    (%ebx),%edx
movl   $0x0,0x10(%ebx)
movl   $0x0,0x8(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    %eax,0xc(%ebx)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8051508 <fchmod@plt+0x6e78>
mov    (%ebx),%eax
test   %eax,%eax
je     80514ea <fchmod@plt+0x6e5a>
mov    %eax,(%esp)
call   8049ed0 <fclose@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049e40 <free@plt>
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
movl   $0x2,0x8(%esp)
mov    0x54(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a030 <fseek@plt>
mov    $0x1,%edx
test   %eax,%eax
je     8051550 <fchmod@plt+0x6ec0>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8056910 <error+0x2e30>
mov    %eax,%ebp
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8056910 <error+0x2e30>
mov    %eax,%edi
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8056910 <error+0x2e30>
mov    $0x8057e56,%edx
mov    %eax,0x28(%esp)
mov    0xc(%ebx),%eax
test   %eax,%eax
je     805158e <fchmod@plt+0x6efe>
mov    %eax,(%esp)
call   8056910 <error+0x2e30>
mov    %eax,%edx
mov    0x14(%ebx),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x20(%esp)
mov    0x10(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
movl   $0x805a550,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
mov    %ebp,(%esp)
mov    %eax,%esi
call   8049e40 <free@plt>
mov    %edi,(%esp)
call   8049e40 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     80515ff <fchmod@plt+0x6f6f>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   8049e40 <free@plt>
shr    $0x1f,%esi
add    $0x3c,%esp
mov    %esi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0xc(%ebx),%ebp
test   %ebp,%ebp
jne    80518c9 <fchmod@plt+0x7239>
cmpl   $0x4,0x10(%ebx)
jg     80518c9 <fchmod@plt+0x7239>
lea    0x2c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
movl   $0x1000,0x4(%esp)
movl   $0x805e660,(%esp)
mov    %eax,0x8(%esp)
call   8049ea0 <fgets@plt>
test   %eax,%eax
je     80518c9 <fchmod@plt+0x7239>
addl   $0x1,0x8(%ebx)
movl   $0xa,0x4(%esp)
movl   $0x805e660,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     80518e1 <fchmod@plt+0x7251>
movb   $0x0,(%eax)
mov    0x2c(%esp),%edx
lea    -0x1(%edx),%eax
cmp    $0x805e660,%eax
mov    %eax,0x2c(%esp)
jb     805169d <fchmod@plt+0x700d>
cmpb   $0xd,-0x1(%edx)
je     80518d8 <fchmod@plt+0x7248>
movzbl 0x805e660,%edx
mov    $0x805e660,%eax
cmp    $0x9,%dl
jne    80516bb <fchmod@plt+0x702b>
xchg   %ax,%ax
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     80516b0 <fchmod@plt+0x7020>
cmp    $0x20,%dl
je     80516b0 <fchmod@plt+0x7020>
cmp    $0x23,%dl
mov    %eax,0x2c(%esp)
je     8051638 <fchmod@plt+0x6fa8>
test   %dl,%dl
je     8051638 <fchmod@plt+0x6fa8>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8056a70 <error+0x2f90>
mov    %eax,0x805e640
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    8051703 <fchmod@plt+0x7073>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     80516f8 <fchmod@plt+0x7068>
cmp    $0x20,%dl
je     80516f8 <fchmod@plt+0x7068>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8056a70 <error+0x2f90>
mov    %eax,0x805e644
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    805173b <fchmod@plt+0x70ab>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     8051730 <fchmod@plt+0x70a0>
cmp    $0x20,%dl
je     8051730 <fchmod@plt+0x70a0>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8056a70 <error+0x2f90>
mov    %eax,0x805e648
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    8051773 <fchmod@plt+0x70e3>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     8051768 <fchmod@plt+0x70d8>
cmp    $0x20,%dl
je     8051768 <fchmod@plt+0x70d8>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8056a70 <error+0x2f90>
mov    0x2c(%esp),%esi
mov    %eax,0x805e64c
movzbl (%esi),%eax
cmp    $0x9,%al
jne    80517a2 <fchmod@plt+0x7112>
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x9,%al
je     8051798 <fchmod@plt+0x7108>
cmp    $0x20,%al
je     8051798 <fchmod@plt+0x7108>
mov    0x805e640,%edi
mov    %esi,0x2c(%esp)
test   %edi,%edi
je     8051847 <fchmod@plt+0x71b7>
mov    0x805e644,%ecx
test   %ecx,%ecx
je     8051847 <fchmod@plt+0x71b7>
mov    0x805e648,%edx
test   %edx,%edx
je     8051847 <fchmod@plt+0x71b7>
call   804a670 <__ctype_b_loc@plt>
mov    %eax,%edi
mov    %eax,0x1c(%esp)
mov    (%edi),%ecx
movsbl (%esi),%eax
testb  $0x8,0x1(%ecx,%eax,2)
jne    8051976 <fchmod@plt+0x72e6>
movl   $0x0,0x805e650
00
movzbl (%esi),%edx
test   %dl,%dl
je     8051816 <fchmod@plt+0x7186>
cmp    $0x9,%dl
jne    80519ce <fchmod@plt+0x733e>
lea    0x0(%esi),%esi
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x9,%al
je     8051808 <fchmod@plt+0x7178>
cmp    $0x20,%al
je     8051808 <fchmod@plt+0x7178>
mov    %esi,0x2c(%esp)
movsbl (%esi),%eax
testb  $0x8,0x1(%ecx,%eax,2)
jne    80519dc <fchmod@plt+0x734c>
movl   $0x0,0x805e654
00
movzbl (%esi),%edx
test   $0xdf,%dl
je     8051a37 <fchmod@plt+0x73a7>
cmp    $0x9,%dl
je     8051a37 <fchmod@plt+0x73a7>
mov    0x10(%ebx),%edi
mov    0xc(%ebx),%eax
lea    0x1(%edi),%edx
test   %eax,%eax
mov    %edx,0x10(%ebx)
jne    8051953 <fchmod@plt+0x72c3>
cmp    $0x4,%edx
mov    $0x8057f22,%esi
jg     8051953 <fchmod@plt+0x72c3>
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%edi
movl   $0x5,0x8(%esp)
movl   $0x805a5b4,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x1c(%esp)
call   8049f60 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    %esi,0x14(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
mov    0xc(%ebx),%eax
test   %eax,%eax
jne    80518c9 <fchmod@plt+0x7239>
cmpl   $0x4,0x10(%ebx)
jle    8051638 <fchmod@plt+0x6fa8>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,-0x1(%edx)
jmp    805169d <fchmod@plt+0x700d>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a1f0 <feof@plt>
test   %eax,%eax
je     8051948 <fchmod@plt+0x72b8>
mov    0x4(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x805a57c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x805e660,(%esp)
call   804a470 <__rawmemchr@plt>
mov    %eax,0x2c(%esp)
jmp    805167e <fchmod@plt+0x6fee>
addl   $0x1,0x10(%ebx)
movl   $0x1,0xc(%ebx)
movl   $0x5,0x8(%esp)
movl   $0x805a563,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,%esi
jmp    8051869 <fchmod@plt+0x71d9>
mov    %esi,(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804a5f0 <strtol@plt>
mov    %eax,0x805e650
mov    0x1c(%esp),%eax
mov    (%eax),%ecx
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
movsbl %dl,%esi
testb  $0x8,0x1(%ecx,%esi,2)
je     8051a30 <fchmod@plt+0x73a0>
add    $0x1,%eax
mov    %eax,0x2c(%esp)
movzbl (%eax),%edx
mov    %eax,%edi
add    $0x1,%eax
movsbl %dl,%esi
testb  $0x8,0x1(%ecx,%esi,2)
jne    80519b1 <fchmod@plt+0x7321>
mov    %edi,%esi
jmp    80517f8 <fchmod@plt+0x7168>
cmp    $0x20,%dl
je     8051808 <fchmod@plt+0x7178>
jmp    8051847 <fchmod@plt+0x71b7>
mov    %esi,(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804a5f0 <strtol@plt>
mov    %eax,0x805e654
mov    0x1c(%esp),%eax
mov    (%eax),%esi
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
movsbl %dl,%ecx
testb  $0x8,0x1(%esi,%ecx,2)
je     8051835 <fchmod@plt+0x71a5>
add    $0x1,%eax
mov    %eax,0x2c(%esp)
movzbl (%eax),%edx
add    $0x1,%eax
movsbl %dl,%ecx
testb  $0x8,0x1(%esi,%ecx,2)
jne    8051a17 <fchmod@plt+0x7387>
jmp    8051835 <fchmod@plt+0x71a5>
mov    %eax,%esi
jmp    80517f8 <fchmod@plt+0x7168>
mov    $0x805e640,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    80518cb <fchmod@plt+0x723b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
call   8049f90 <getuid@plt>
mov    %eax,(%esp)
call   8049dc0 <getpwuid@plt>
test   %eax,%eax
je     8051a70 <fchmod@plt+0x73e0>
mov    (%eax),%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8051a66 <fchmod@plt+0x73d6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%ecx
mov    0x8(%esp),%eax
mov    (%eax),%edx
xor    %eax,%eax
cmp    %edx,%ecx
setl   %dl
setg   %al
movzbl %dl,%edx
sub    %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x1090,%esp
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x108c(%esp)
xor    %edi,%edi
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
jne    8051bd8 <fchmod@plt+0x7548>
mov    0x3c(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
jne    8051bd8 <fchmod@plt+0x7548>
mov    0x4c(%esp),%eax
mov    0x50(%esp),%edx
movl   $0x805a5d8,0x10(%esp)
movl   $0x1000,0xc(%esp)
mov    %eax,%ecx
movzbl %al,%ebx
shrd   $0xc,%edx,%ecx
xor    %cl,%cl
or     %ebx,%ecx
shrd   $0x8,%edx,%eax
mov    %ecx,0x18(%esp)
mov    %edx,%ecx
and    $0xfff,%eax
and    $0xfffff000,%ecx
or     %eax,%ecx
lea    0x8c(%esp),%ebx
mov    %ecx,0x14(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebx,(%esp)
call   8049d10 <__snprintf_chk@plt>
movl   $0x8058444,0x4(%esp)
mov    %ebx,(%esp)
call   804a070 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     8051bd8 <fchmod@plt+0x7548>
mov    %eax,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebx,(%esp)
call   8049ea0 <fgets@plt>
test   %eax,%eax
je     8051be0 <fchmod@plt+0x7550>
mov    %ebx,%ecx
mov    (%ecx),%esi
add    $0x4,%ecx
lea    -0x1010101(%esi),%edx
not    %esi
and    %esi,%edx
and    $0x80808080,%edx
je     8051b7c <fchmod@plt+0x74ec>
mov    %edx,%eax
shr    $0x10,%eax
test   $0x8080,%edx
cmove  %eax,%edx
lea    0x2(%ecx),%eax
cmove  %eax,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
xor    %esi,%esi
sub    %ebx,%ecx
jne    8051be8 <fchmod@plt+0x7558>
mov    %edi,(%esp)
call   8049ed0 <fclose@plt>
mov    %esi,%eax
mov    0x108c(%esp),%esi
xor    %gs:0x14,%esi
jne    8051bfc <fchmod@plt+0x756c>
add    $0x1090,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    8051bbc <fchmod@plt+0x752c>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    8051bb2 <fchmod@plt+0x7522>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x8b(%esp,%ecx,1)
mov    %ebx,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%esi
jmp    8051bb2 <fchmod@plt+0x7522>
call   8049f80 <__stack_chk_fail@plt>
jmp    8051c10 <fchmod@plt+0x7580>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     8051c30 <fchmod@plt+0x75a0>
mov    %eax,(%esp)
call   8049ed0 <fclose@plt>
movl   $0x0,0xc(%ebx)
movl   $0x0,0x4(%ebx)
movl   $0xffffffff,0x8(%ebx)
orl    $0x8,(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    $0x9c,%edx
sub    $0x70,%esp
test   $0x1,%al
mov    %eax,%ebx
jne    8051d70 <fchmod@plt+0x76e0>
test   $0x2,%edi
jne    8051d58 <fchmod@plt+0x76c8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8051c8c <fchmod@plt+0x75fc>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8051c94 <fchmod@plt+0x7604>
movb   $0x0,(%edi)
mov    %esi,(%ebx)
lea    0x10(%esp),%esi
movl   $0xffffffff,0x8(%ebx)
mov    %esi,0x8(%esp)
movl   $0x8057f5f,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     8051cf7 <fchmod@plt+0x7667>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8051d48 <fchmod@plt+0x76b8>
mov    %esi,0x8(%esp)
movl   $0x8057ddd,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
je     8051d00 <fchmod@plt+0x7670>
mov    (%ebx),%eax
test   $0x2,%al
jne    8051d20 <fchmod@plt+0x7690>
or     $0x40,%eax
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8051cea <fchmod@plt+0x765a>
mov    (%ebx),%eax
or     $0x20,%eax
test   $0x2,%al
mov    %eax,(%ebx)
je     8051cf0 <fchmod@plt+0x7660>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
movl   $0x805a7fc,0x4(%esp)
movl   $0x3,(%esp)
call   804a5d0 <__xstat64@plt>
test   %eax,%eax
mov    (%ebx),%eax
jne    8051cf0 <fchmod@plt+0x7660>
or     $0x10,%eax
jmp    8051cf0 <fchmod@plt+0x7660>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x70,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    8051c75 <fchmod@plt+0x75e5>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x9b,%dl
jmp    8051c69 <fchmod@plt+0x75d9>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x20,%esp
test   %eax,%eax
je     8051da7 <fchmod@plt+0x7717>
mov    %edx,%esi
mov    $0x8057de2,%edi
mov    $0x4,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %al
add    $0x4,%ebx
cmp    %al,%dl
jne    8051de8 <fchmod@plt+0x7758>
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a5f0 <strtol@plt>
mov    0x1c(%esp),%edx
test   %edx,%edx
je     8051de8 <fchmod@plt+0x7758>
cmp    %edx,%ebx
je     8051de8 <fchmod@plt+0x7758>
cmpb   $0x0,(%edx)
jne    8051de8 <fchmod@plt+0x7758>
mov    $0xffffffff,%edx
test   %eax,%eax
cmovns %eax,%edx
add    $0x20,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%edx
jmp    8051dda <fchmod@plt+0x774a>
nop
test   %eax,%eax
je     8051ee1 <fchmod@plt+0x7851>
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %edx,%edx
je     8051ef2 <fchmod@plt+0x7862>
mov    %eax,(%esp)
mov    %ecx,%edi
call   804a650 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8051ef2 <fchmod@plt+0x7862>
movl   $0x0,0x0(%ebp)
xor    %esi,%esi
movl   $0x0,0x18(%esp)
xchg   %ax,%ax
mov    %ebx,(%esp)
call   804a550 <readdir64@plt>
test   %eax,%eax
je     8051e7a <fchmod@plt+0x77ea>
movzbl 0x12(%eax),%edx
cmp    $0x6,%dl
je     8051e4e <fchmod@plt+0x77be>
test   %dl,%dl
je     8051e4e <fchmod@plt+0x77be>
cmp    $0xa,%dl
jne    8051e30 <fchmod@plt+0x77a0>
lea    0x13(%eax),%edx
mov    %edi,%eax
call   8051d80 <fchmod@plt+0x76f0>
cmp    $0x7,%eax
mov    %eax,%edx
jle    8051e30 <fchmod@plt+0x77a0>
cmp    0x18(%esp),%esi
jge    8051e90 <fchmod@plt+0x7800>
mov    0x0(%ebp),%eax
mov    %edx,(%eax,%esi,4)
add    $0x1,%esi
mov    %ebx,(%esp)
call   804a550 <readdir64@plt>
test   %eax,%eax
jne    8051e3c <fchmod@plt+0x77ac>
test   %esi,%esi
jne    8051ec0 <fchmod@plt+0x7830>
mov    %ebx,(%esp)
call   804a630 <closedir@plt>
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
addl   $0x1,0x18(%esp)
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804a150 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8051ee7 <fchmod@plt+0x7857>
mov    %eax,0x0(%ebp)
jmp    8051e68 <fchmod@plt+0x77d8>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8051a80,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804a560 <qsort@plt>
jmp    8051e7e <fchmod@plt+0x77ee>
mov    $0xffffffff,%eax
ret
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    $0xffffffff,%eax
jmp    8051e88 <fchmod@plt+0x77f8>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x805a81a,%ecx
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x110,%esp
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
mov    $0x805a80d,%eax
testb  $0x20,(%esi)
lea    0x14(%esi),%ebx
mov    %edx,0x14(%esp)
cmove  %ecx,%eax
mov    %eax,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ebx,(%esp)
call   8049d10 <__snprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049d80 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8051ff8 <fchmod@plt+0x7968>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a0a0 <__fxstat64@plt>
cmp    $0xffffffff,%eax
je     8052048 <fchmod@plt+0x79b8>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
jne    8052048 <fchmod@plt+0x79b8>
mov    0x44(%esp),%ebx
mov    0x40(%esp),%ecx
mov    %ebx,%eax
shrd   $0x8,%ebx,%ecx
and    $0xfffff000,%eax
and    $0xfff,%ecx
or     %ecx,%eax
cmp    $0x7,%eax
jne    8052048 <fchmod@plt+0x79b8>
addl   $0x1,0x98(%esi)
testb  $0x6,(%esi)
jne    8052010 <fchmod@plt+0x7980>
mov    0x10c(%esp),%edx
xor    %gs:0x14,%edx
mov    %edi,%eax
jne    8052072 <fchmod@plt+0x79e2>
add    $0x110,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
cmpl   $0xd,(%eax)
jne    8051fd5 <fchmod@plt+0x7945>
addl   $0x1,0x94(%esi)
jmp    8051fd5 <fchmod@plt+0x7945>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebx
lea    0x80(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %edi,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     8052060 <fchmod@plt+0x79d0>
testb  $0x2,(%esi)
jne    8051fd5 <fchmod@plt+0x7945>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%edi
call   804a620 <close@plt>
jmp    8051fd5 <fchmod@plt+0x7945>
lea    0x0(%esi),%esi
cmpl   $0x6,(%ebx)
jne    805203c <fchmod@plt+0x79ac>
testb  $0x4,(%esi)
jne    8051fd5 <fchmod@plt+0x7945>
xchg   %ax,%ax
jmp    8052048 <fchmod@plt+0x79b8>
call   8049f80 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x20c0,%esp
mov    %gs:0x14,%eax
mov    %eax,0x20bc(%esp)
xor    %eax,%eax
mov    (%ebx),%eax
test   $0x8,%al
jne    805221f <fchmod@plt+0x7b8f>
mov    %eax,%esi
and    $0x10,%esi
je     8052168 <fchmod@plt+0x7ad8>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     8052229 <fchmod@plt+0x7b99>
lea    0xbc(%esp),%esi
lea    0x3c(%esp),%edi
jmp    80520cb <fchmod@plt+0x7a3b>
nop
mov    0x4(%ebx),%eax
test   %eax,%eax
je     80521a0 <fchmod@plt+0x7b10>
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %esi,(%esp)
call   8049ea0 <fgets@plt>
test   %eax,%eax
je     80521a0 <fchmod@plt+0x7b10>
lea    0x30(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %edi,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x805a826,0x4(%esp)
mov    %esi,(%esp)
call   804a4e0 <sscanf@plt>
cmp    $0x4,%eax
jne    80520c8 <fchmod@plt+0x7a38>
cmpl   $0x7,0x2c(%esp)
jne    80520c8 <fchmod@plt+0x7a38>
mov    %edi,%edx
mov    $0x1,%al
call   8051d80 <fchmod@plt+0x76f0>
mov    %eax,0x28(%esp)
mov    %eax,%edx
mov    %ebx,%eax
call   8051f00 <fchmod@plt+0x7870>
cmp    $0xffffffff,%eax
je     80520c8 <fchmod@plt+0x7a38>
lea    0x0(%esi),%esi
mov    0x20bc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8052245 <fchmod@plt+0x7bb5>
add    $0x20c0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
test   $0x40,%al
je     80521b7 <fchmod@plt+0x7b27>
mov    0x8(%ebx),%ecx
lea    0x1(%ecx),%edx
cmp    $0x7,%edx
mov    %edx,0x8(%ebx)
jle    805218e <fchmod@plt+0x7afe>
jmp    80521b2 <fchmod@plt+0x7b22>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%eax
lea    0x1(%eax),%edx
cmp    $0x7,%edx
mov    %edx,0x8(%ebx)
jg     80521b0 <fchmod@plt+0x7b20>
mov    %ebx,%eax
call   8051f00 <fchmod@plt+0x7870>
cmp    $0xffffffff,%eax
je     8052180 <fchmod@plt+0x7af0>
jmp    8052148 <fchmod@plt+0x7ab8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   8051c10 <fchmod@plt+0x7580>
mov    $0xffffffff,%eax
jmp    8052148 <fchmod@plt+0x7ab8>
xchg   %ax,%ax
mov    (%ebx),%eax
and    $0xffffffbf,%eax
mov    %eax,(%ebx)
mov    0xc(%ebx),%eax
test   %eax,%eax
je     80521f5 <fchmod@plt+0x7b65>
mov    0x8(%ebx),%eax
lea    0x1(%eax),%esi
mov    0x10(%ebx),%eax
cmp    %esi,%eax
mov    %esi,0x8(%ebx)
jg     80521de <fchmod@plt+0x7b4e>
jmp    80521a0 <fchmod@plt+0x7b10>
mov    0x8(%ebx),%eax
lea    0x1(%eax),%esi
cmp    %esi,0x10(%ebx)
mov    %esi,0x8(%ebx)
jle    80521a0 <fchmod@plt+0x7b10>
mov    0xc(%ebx),%eax
mov    (%eax,%esi,4),%edx
mov    %ebx,%eax
call   8051f00 <fchmod@plt+0x7870>
cmp    $0xffffffff,%eax
je     80521d0 <fchmod@plt+0x7b40>
jmp    8052148 <fchmod@plt+0x7ab8>
testb  $0x20,(%ebx)
lea    0xc(%ebx),%edx
jne    8052211 <fchmod@plt+0x7b81>
mov    $0x1,%ecx
mov    $0x8057f5f,%eax
call   8051df0 <fchmod@plt+0x7760>
mov    %eax,0x10(%ebx)
jmp    80521c7 <fchmod@plt+0x7b37>
xor    %ecx,%ecx
mov    $0x8057ddd,%eax
call   8051df0 <fchmod@plt+0x7760>
jmp    805220c <fchmod@plt+0x7b7c>
mov    $0xffffffff,%eax
jmp    8052148 <fchmod@plt+0x7ab8>
movl   $0x8058444,0x4(%esp)
movl   $0x805a7fc,(%esp)
call   804a070 <fopen64@plt>
mov    %eax,0x4(%ebx)
jmp    80520ba <fchmod@plt+0x7a2a>
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0xc(%esp)
jns    805229f <fchmod@plt+0x7c0f>
jmp    8052301 <fchmod@plt+0x7c71>
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
lea    (%edi,%ebx,1),%ebp
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049da0 <read@plt>
cmp    $0x1,%eax
jne    80522e8 <fchmod@plt+0x7c58>
movzbl 0x0(%ebp),%eax
cmp    $0xa,%al
je     80522e8 <fchmod@plt+0x7c58>
test   %al,%al
je     80522e8 <fchmod@plt+0x7c58>
add    $0x1,%ebx
lea    -0x1(%esi),%eax
cmp    %eax,%ebx
jl     8052270 <fchmod@plt+0x7be0>
sub    $0xffffff80,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804a150 <realloc@plt>
test   %eax,%eax
je     80522bd <fchmod@plt+0x7c2d>
mov    %eax,%edi
jmp    8052270 <fchmod@plt+0x7be0>
movl   $0x5,0x8(%esp)
movl   $0x805a600,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   8053ae0 <error>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     80522fa <fchmod@plt+0x7c6a>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x8057f22,%eax
jmp    80522f2 <fchmod@plt+0x7c62>
mov    %edx,(%esp)
call   804a2a0 <getpass@plt>
jmp    80522f2 <fchmod@plt+0x7c62>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x198,%esp
mov    %gs:0x14,%eax
mov    %eax,0x18c(%esp)
xor    %eax,%eax
lea    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c05,0x4(%esp)
mov    %ebx,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
jne    8052370 <fchmod@plt+0x7ce0>
mov    0xd8(%esp),%eax
shr    $0x2,%eax
and    $0x1,%eax
mov    0x18c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805239c <fchmod@plt+0x7d0c>
add    $0x198,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %ebx,(%esp)
call   804a060 <ioctl@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    8052354 <fchmod@plt+0x7cc4>
mov    0x34(%esp),%eax
shr    $0x2,%eax
and    $0x1,%eax
jmp    8052354 <fchmod@plt+0x7cc4>
call   8049f80 <__stack_chk_fail@plt>
jmp    80523b0 <fchmod@plt+0x7d20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x1fc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x1ec(%esp)
xor    %eax,%eax
lea    0x1c(%esp),%eax
mov    0x210(%esp),%edi
mov    %eax,0x8(%esp)
mov    0x214(%esp),%esi
movl   $0x4c05,0x4(%esp)
mov    %ebp,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
jne    8052458 <fchmod@plt+0x7dc8>
mov    (%ebx),%edx
mov    0x4(%ebx),%ecx
xor    0x20(%esp),%ecx
xor    0x1c(%esp),%edx
or     %edx,%ecx
je     8052428 <fchmod@plt+0x7d98>
mov    0x1ec(%esp),%esi
xor    %gs:0x14,%esi
jne    80524dd <fchmod@plt+0x7e4d>
add    $0x1fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%ebx),%edx
mov    0x5c(%ebx),%ecx
xor    0x28(%esp),%ecx
xor    0x24(%esp),%edx
or     %edx,%ecx
jne    8052408 <fchmod@plt+0x7d78>
mov    0x218(%esp),%ecx
mov    $0x1,%al
test   %ecx,%ecx
je     8052408 <fchmod@plt+0x7d78>
xor    0x34(%esp),%edi
xor    %eax,%eax
xor    0x38(%esp),%esi
or     %esi,%edi
sete   %al
jmp    8052408 <fchmod@plt+0x7d78>
lea    0x104(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %ebp,(%esp)
call   804a060 <ioctl@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    8052408 <fchmod@plt+0x7d78>
mov    (%ebx),%edx
mov    0x4(%ebx),%ecx
xor    0x108(%esp),%ecx
xor    0x104(%esp),%edx
or     %edx,%ecx
jne    8052408 <fchmod@plt+0x7d78>
mov    0x58(%ebx),%edx
mov    0x5c(%ebx),%ecx
xor    0x110(%esp),%ecx
xor    0x10c(%esp),%edx
or     %edx,%ecx
jne    8052408 <fchmod@plt+0x7d78>
mov    0x218(%esp),%edx
mov    $0x1,%al
test   %edx,%edx
je     8052408 <fchmod@plt+0x7d78>
xor    0x11c(%esp),%edi
xor    %eax,%eax
xor    0x120(%esp),%esi
or     %esi,%edi
sete   %al
jmp    8052408 <fchmod@plt+0x7d78>
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x190,%esp
mov    0x1a0(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x18c(%esp)
xor    %eax,%eax
mov    %esi,%eax
call   8051aa0 <fchmod@plt+0x7410>
test   %eax,%eax
mov    %eax,%ebx
je     8052540 <fchmod@plt+0x7eb0>
mov    0x18c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    80525e5 <fchmod@plt+0x7f55>
add    $0x190,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     805251c <fchmod@plt+0x7e8c>
lea    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c05,0x4(%esp)
mov    %esi,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
je     80525a8 <fchmod@plt+0x7f18>
lea    0x18(%esp),%eax
mov    %ebx,%edi
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %esi,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
je     80525cb <fchmod@plt+0x7f3b>
mov    %esi,(%esp)
mov    %edi,%ebx
call   804a620 <close@plt>
jmp    805251c <fchmod@plt+0x7e8c>
lea    0x0(%esi),%esi
lea    0xdc(%esp),%eax
mov    %eax,(%esp)
movb   $0x2a,0x11a(%esp)
movb   $0x0,0x11b(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%edi
jmp    8052593 <fchmod@plt+0x7f03>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
movb   $0x2a,0x76(%esp)
movb   $0x0,0x77(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%edi
jmp    8052593 <fchmod@plt+0x7f03>
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
sub    $0x7c,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
xor    %edx,%edx
test   %eax,%eax
jne    8052628 <fchmod@plt+0x7f98>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     8052630 <fchmod@plt+0x7fa0>
mov    %edx,%eax
add    $0x7c,%esp
ret
xchg   %ax,%ax
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%ecx
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
xor    %edx,%edx
or     %eax,%ecx
cmp    $0x7,%ecx
sete   %dl
add    $0x7c,%esp
mov    %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049d80 <open64@plt>
mov    %eax,%ebx
xor    %eax,%eax
test   %ebx,%ebx
js     8052694 <fchmod@plt+0x8004>
mov    %ebx,%eax
call   8052310 <fchmod@plt+0x7c80>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a620 <close@plt>
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x11c,%esp
mov    0x130(%esp),%ebx
lea    0x10(%esp),%esi
mov    0x134(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
call   804a5d0 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     80527b8 <fchmod@plt+0x8128>
mov    $0x2,%edx
lea    0x70(%esp),%eax
call   8051c50 <fchmod@plt+0x75c0>
cmp    $0xffffffff,%eax
je     80527f3 <fchmod@plt+0x8163>
xor    %edi,%edi
xor    %ebx,%ebx
jmp    805271d <fchmod@plt+0x808d>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   804a620 <close@plt>
cmp    $0x1,%ebx
jg     8052766 <fchmod@plt+0x80d6>
lea    0x70(%esp),%eax
call   8052080 <fchmod@plt+0x79f0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     80527a0 <fchmod@plt+0x8110>
movl   $0x0,0x8(%esp)
mov    %esi,%edx
mov    %ebp,%eax
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   80523b0 <fchmod@plt+0x7d20>
cmp    $0x1,%eax
jne    8052710 <fchmod@plt+0x8080>
test   %edi,%edi
je     80527c8 <fchmod@plt+0x8138>
add    $0x1,%ebx
mov    %ebp,(%esp)
call   804a620 <close@plt>
cmp    $0x1,%ebx
jle    805271d <fchmod@plt+0x808d>
lea    0x70(%esp),%eax
call   8051c10 <fchmod@plt+0x7580>
mov    %edi,(%esp)
call   8049e40 <free@plt>
mov    $0x2,%eax
mov    0x10c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805282b <fchmod@plt+0x819b>
add    $0x11c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x70(%esp),%eax
call   8051c10 <fchmod@plt+0x7580>
cmp    $0x1,%ebx
jne    80527e0 <fchmod@plt+0x8150>
mov    0xc(%esp),%eax
mov    %edi,(%eax)
xor    %eax,%eax
jmp    805277c <fchmod@plt+0x80ec>
mov    %ebx,(%esp)
call   804a090 <perror@plt>
mov    $0x1,%eax
jmp    805277c <fchmod@plt+0x80ec>
nop
lea    0x84(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%edi
jmp    8052756 <fchmod@plt+0x80c6>
xchg   %ax,%ax
mov    %edi,(%esp)
call   8049e40 <free@plt>
test   %ebx,%ebx
jne    8052777 <fchmod@plt+0x80e7>
mov    $0x1,%eax
jmp    805277c <fchmod@plt+0x80ec>
movl   $0x5,0x8(%esp)
mov    0x805f6e0,%ebx
movl   $0x805a628,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
mov    $0x1,%eax
jmp    805277c <fchmod@plt+0x80ec>
call   8049f80 <__stack_chk_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x11c,%esp
mov    0x130(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
lea    0x10(%esp),%eax
mov    0x134(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x138(%esp),%edi
movl   $0x3,(%esp)
mov    %ebx,0x4(%esp)
call   804a5d0 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     8052913 <fchmod@plt+0x8283>
mov    $0x2,%edx
lea    0x70(%esp),%eax
call   8051c50 <fchmod@plt+0x75c0>
cmp    $0xffffffff,%eax
jne    80528c1 <fchmod@plt+0x8231>
jmp    805291f <fchmod@plt+0x828f>
nop
lea    0x10(%esp),%edx
mov    %ebp,%eax
movl   $0x1,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   80523b0 <fchmod@plt+0x7d20>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   804a620 <close@plt>
cmp    $0x1,%ebx
je     8052900 <fchmod@plt+0x8270>
lea    0x70(%esp),%eax
call   8052080 <fchmod@plt+0x79f0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
jne    8052898 <fchmod@plt+0x8208>
xor    %ebx,%ebx
lea    0x70(%esp),%eax
call   8051c10 <fchmod@plt+0x7580>
mov    %ebx,%eax
mov    0x10c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8052951 <fchmod@plt+0x82c1>
add    $0x11c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x84(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%ebx
jmp    80528d3 <fchmod@plt+0x8243>
mov    %ebx,(%esp)
call   804a090 <perror@plt>
xor    %eax,%eax
jmp    80528de <fchmod@plt+0x824e>
movl   $0x5,0x8(%esp)
mov    0x805f6e0,%ebx
movl   $0x805a628,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
xor    %eax,%eax
jmp    80528de <fchmod@plt+0x824e>
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%ebx
mov    0x98(%esp),%esi
mov    0x9c(%esp),%edi
mov    %ebx,(%esp)
call   80525f0 <fchmod@plt+0x7f60>
test   %eax,%eax
jne    8052998 <fchmod@plt+0x8308>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x94(%esp),%eax
lea    0x10(%esp),%ebp
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a5d0 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     8052988 <fchmod@plt+0x82f8>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   8049d80 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     8052988 <fchmod@plt+0x82f8>
mov    %esi,(%esp)
mov    %ebp,%edx
mov    %edi,0x4(%esp)
movl   $0x1,0x8(%esp)
call   80523b0 <fchmod@plt+0x7d20>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a620 <close@plt>
add    $0x7c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
mov    $0x4,%edx
push   %ebx
sub    $0xb4,%esp
mov    %gs:0x14,%eax
mov    %eax,0xac(%esp)
xor    %eax,%eax
lea    0x10(%esp),%eax
call   8051c50 <fchmod@plt+0x75c0>
cmp    $0xffffffff,%eax
je     8052af0 <fchmod@plt+0x8460>
lea    0x10(%esp),%eax
call   8052080 <fchmod@plt+0x79f0>
cmp    $0xffffffff,%eax
je     8052a80 <fchmod@plt+0x83f0>
mov    %eax,(%esp)
call   804a620 <close@plt>
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   80541a0 <error+0x6c0>
mov    %eax,%ebx
lea    0x10(%esp),%eax
call   8051c10 <fchmod@plt+0x7580>
test   %ebx,%ebx
je     8052a89 <fchmod@plt+0x83f9>
mov    %ebx,%eax
mov    0xac(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8052b53 <fchmod@plt+0x84c3>
add    $0xb4,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    0x10(%esp),%eax
call   8051c10 <fchmod@plt+0x7580>
mov    0xa8(%esp),%edx
test   %edx,%edx
jne    8052ad8 <fchmod@plt+0x8448>
mov    0xa4(%esp),%eax
test   %eax,%eax
jne    8052b08 <fchmod@plt+0x8478>
mov    0x805f6e0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805a6a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
xor    %eax,%eax
jmp    8052a61 <fchmod@plt+0x83d1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805f6e0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805a678,0x4(%esp)
jmp    8052ab5 <fchmod@plt+0x8425>
mov    0x805f6e0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805a628,0x4(%esp)
jmp    8052ab5 <fchmod@plt+0x8425>
testb  $0x20,0x10(%esp)
mov    $0x8057f22,%eax
mov    $0x805815a,%ebx
mov    0x805f6e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a64c,0x4(%esp)
cmove  %eax,%ebx
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8053ae0 <error>
xor    %eax,%eax
jmp    8052a61 <fchmod@plt+0x83d1>
call   8049f80 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1dc,%esp
mov    0x1f0(%esp),%eax
mov    0x1fc(%esp),%edx
mov    0x208(%esp),%esi
mov    %eax,0x40(%esp)
mov    0x1f4(%esp),%eax
mov    %edx,0x34(%esp)
mov    0x204(%esp),%edx
mov    %eax,0x24(%esp)
mov    0x1f8(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %eax,0x30(%esp)
mov    0x200(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x210(%esp),%eax
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x1cc(%esp)
xor    %eax,%eax
mov    0x805e5ac,%eax
test   %eax,%eax
jne    8052db8 <fchmod@plt+0x8728>
mov    0x28(%esp),%eax
mov    (%eax),%eax
and    $0x1,%eax
cmp    $0x1,%eax
mov    0x24(%esp),%eax
sbb    %edi,%edi
and    $0x2,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a2e0 <__open64_2@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8052e20 <fchmod@plt+0x8790>
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a2e0 <__open64_2@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     80531e0 <fchmod@plt+0x8b50>
xor    %eax,%eax
mov    $0x3a,%ecx
lea    0xe4(%esp),%edi
rep stos %eax,%es:(%edi)
mov    0x24(%esp),%edi
mov    %edi,(%esp)
call   8054090 <error+0x5b0>
movl   $0x3f,0x8(%esp)
test   %eax,%eax
mov    %eax,%ebp
cmove  %edi,%ebp
lea    0x11c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804a3b0 <strncpy@plt>
test   %esi,%esi
movb   $0x0,0x15b(%esp)
je     8052c76 <fchmod@plt+0x85e6>
movzbl (%esi),%edx
test   %dl,%dl
jne    8052fe8 <fchmod@plt+0x8958>
mov    0x110(%esp),%eax
mov    0x30(%esp),%esi
test   %eax,%eax
mov    0x34(%esp),%edi
mov    %esi,0xfc(%esp)
mov    0x38(%esp),%esi
mov    %edi,0x100(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0x104(%esp)
mov    %edi,0x108(%esp)
jne    8052fc8 <fchmod@plt+0x8938>
mov    0x214(%esp),%edi
mov    $0x100,%edx
test   %edi,%edi
cmovne 0x214(%esp),%edx
test   %eax,%eax
mov    %edx,0x214(%esp)
je     8052e68 <fchmod@plt+0x87d8>
cmp    $0x1,%eax
jne    8052d60 <fchmod@plt+0x86d0>
movl   $0x5,0x8(%esp)
movl   $0x805a844,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %eax,(%esp)
call   804a2a0 <getpass@plt>
lea    0x19c(%esp),%ecx
xor    %edx,%edx
mov    %eax,%esi
movl   $0x0,(%ecx,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     8052d0e <fchmod@plt+0x867e>
mov    %ecx,(%esp)
movl   $0x1f,0x8(%esp)
mov    %esi,0x4(%esp)
call   804a3b0 <strncpy@plt>
mov    %esi,(%esp)
call   804a260 <strlen@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804a330 <memset@plt>
movl   $0x20,0x114(%esp)
00
jmp    8052e73 <fchmod@plt+0x87e3>
lea    0x0(%esi),%esi
mov    0x218(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x805a844,0x4(%esp)
movl   $0x0,(%esp)
test   %esi,%esi
jne    80530e8 <fchmod@plt+0x8a58>
call   8049f60 <dcgettext@plt>
mov    %eax,%edx
mov    0x20c(%esp),%eax
call   8052250 <fchmod@plt+0x7bc0>
lea    0x19c(%esp),%ecx
xor    %edx,%edx
mov    %eax,%esi
movl   $0x0,(%ecx,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     8052da4 <fchmod@plt+0x8714>
jmp    8052d1d <fchmod@plt+0x868d>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    0x24(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   8052830 <fchmod@plt+0x81a0>
test   %eax,%eax
mov    %eax,%ebx
je     8052bda <fchmod@plt+0x854a>
movl   $0x5,0x8(%esp)
movl   $0x805a72c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
mov    %ebx,(%esp)
call   8049e40 <free@plt>
jmp    8052bda <fchmod@plt+0x854a>
nop
mov    0x28(%esp),%eax
testb  $0x1,(%eax)
je     8053098 <fchmod@plt+0x8a08>
mov    0x24(%esp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
call   804a090 <perror@plt>
xchg   %ax,%ax
mov    0x1cc(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8053671 <fchmod@plt+0x8fe1>
add    $0x1dc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x114(%esp)
00
mov    0x2c(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x4c00,0x4(%esp)
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     8052f88 <fchmod@plt+0x88f8>
mov    %ebx,(%esp)
call   804a620 <close@plt>
mov    0x28(%esp),%eax
testb  $0x2,(%eax)
je     8052eaf <fchmod@plt+0x881f>
movl   $0x4,0x118(%esp)
00
lea    0xe4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x4c04,0x4(%esp)
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8053258 <fchmod@plt+0x8bc8>
mov    0x28(%esp),%eax
testb  $0x2,(%eax)
jne    8053238 <fchmod@plt+0x8ba8>
xor    %eax,%eax
mov    $0x3a,%ecx
lea    0xe4(%esp),%edi
test   %ebx,%ebx
rep stos %eax,%es:(%edi)
jne    8053200 <fchmod@plt+0x8b70>
mov    0x28(%esp),%eax
testb  $0x2,(%eax)
je     8053508 <fchmod@plt+0x8e78>
cmpl   $0x1,0x805e5ac
jle    8052f6b <fchmod@plt+0x88db>
movl   $0x5,0x8(%esp)
movl   $0x805a7b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%ebx
mov    %ebp,0xc(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x18(%esp)
mov    0x30(%esp),%ecx
mov    %ebx,0x1c(%esp)
mov    0x34(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    0x40(%esp),%ecx
mov    %ebx,0x14(%esp)
mov    %ecx,0x8(%esp)
call   804a410 <__printf_chk@plt>
xor    %ebx,%ebx
cmp    %ebp,0x24(%esp)
je     8052e40 <fchmod@plt+0x87b0>
mov    %ebp,(%esp)
call   8049e40 <free@plt>
jmp    8052e40 <fchmod@plt+0x87b0>
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
cmpl   $0x10,(%eax)
je     8053040 <fchmod@plt+0x89b0>
movl   $0x805a86d,(%esp)
mov    $0x1,%esi
call   804a090 <perror@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a620 <close@plt>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   804a620 <close@plt>
cmp    %ebp,0x24(%esp)
jne    8052f77 <fchmod@plt+0x88e7>
jmp    8052e40 <fchmod@plt+0x87b0>
movl   $0x3,(%esp)
call   804a160 <mlockall@plt>
test   %eax,%eax
jne    8053676 <fchmod@plt+0x8fe6>
mov    0x110(%esp),%eax
jmp    8052cb1 <fchmod@plt+0x8621>
mov    %edx,0x44(%esp)
call   804a670 <__ctype_b_loc@plt>
mov    0x44(%esp),%edx
mov    (%eax),%ecx
mov    %esi,%eax
lea    0x0(%esi,%eiz,1),%esi
movsbl %dl,%edx
add    $0x1,%eax
testb  $0x8,0x1(%ecx,%edx,2)
je     80534c8 <fchmod@plt+0x8e38>
movzbl (%eax),%edx
test   %dl,%dl
jne    8053000 <fchmod@plt+0x8970>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804a5f0 <strtol@plt>
mov    %eax,0x110(%esp)
jmp    8052c7d <fchmod@plt+0x85ed>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e5ac,%ecx
mov    $0x2,%esi
test   %ecx,%ecx
je     8052fa7 <fchmod@plt+0x8917>
movl   $0x10,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a84f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049f60 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    8052fa7 <fchmod@plt+0x8917>
xchg   %ax,%ax
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0xd,%eax
je     80530ad <fchmod@plt+0x8a1d>
cmp    $0x1e,%eax
jne    8052e2d <fchmod@plt+0x879d>
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8052e2d <fchmod@plt+0x879d>
mov    0x805e5ac,%ebp
test   %ebp,%ebp
jne    8053520 <fchmod@plt+0x8e90>
mov    0x28(%esp),%eax
xor    %edi,%edi
orl    $0x1,(%eax)
jmp    8052c05 <fchmod@plt+0x8575>
nop
call   8049f60 <dcgettext@plt>
mov    %eax,%edx
mov    0x20c(%esp),%eax
call   8052250 <fchmod@plt+0x7bc0>
mov    %eax,(%esp)
mov    %eax,%edi
call   804a260 <strlen@plt>
mov    %eax,0x44(%esp)
add    $0x2,%eax
mov    %eax,(%esp)
call   804a170 <malloc@plt>
mov    %eax,%esi
movb   $0x41,(%eax)
lea    0x1(%eax),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804a0f0 <strcpy@plt>
mov    0x44(%esp),%eax
lea    0x58(%esp),%edx
mov    %edx,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x4c(%esp)
mov    %eax,0x8(%esp)
call   8055e70 <error+0x2390>
mov    0x44(%esp),%eax
mov    %esi,0x4(%esp)
lea    0x1(%eax),%ecx
lea    0x6c(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x48(%esp)
call   8055e70 <error+0x2390>
mov    0x44(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804a330 <memset@plt>
mov    0x48(%esp),%ecx
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x8(%esp)
call   804a330 <memset@plt>
mov    %esi,(%esp)
call   8049e40 <free@plt>
mov    0x214(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x30,0xc(%esp)
test   %eax,%eax
lea    0x7(%eax),%esi
cmovns %eax,%esi
sar    $0x3,%esi
lea    0x19c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804a1b0 <__memcpy_chk@plt>
mov    %esi,0x114(%esp)
jmp    8052e73 <fchmod@plt+0x87e3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804a090 <perror@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   804a620 <close@plt>
jmp    8052e40 <fchmod@plt+0x87b0>
xchg   %ax,%ax
mov    0x2c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x4c01,0x4(%esp)
mov    %ebx,(%esp)
call   804a060 <ioctl@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   804a620 <close@plt>
cmp    %ebp,0x24(%esp)
jne    8052f77 <fchmod@plt+0x88e7>
jmp    8052e40 <fchmod@plt+0x87b0>
mov    0x2c(%esp),%eax
call   8052310 <fchmod@plt+0x7c80>
test   %eax,%eax
jne    8052ee5 <fchmod@plt+0x8855>
mov    0x28(%esp),%eax
andl   $0xfffffffd,(%eax)
jmp    8052ee5 <fchmod@plt+0x8855>
lea    0x0(%esi),%esi
lea    0x58(%esp),%esi
xor    %eax,%eax
mov    0xe4(%esp),%edx
mov    $0x23,%ecx
mov    %esi,%edi
mov    0xf4(%esp),%ebx
rep stos %eax,%es:(%edi)
mov    0x100(%esp),%edi
mov    0x10c(%esp),%eax
cmpl   $0x12,0x110(%esp)
mov    0xe8(%esp),%ecx
mov    %edi,0x4c(%esp)
mov    0x110(%esp),%edi
mov    %eax,0x58(%esp)
mov    0xf0(%esp),%eax
mov    %dx,0x5c(%esp)
mov    %bx,0x64(%esp)
mov    %edi,0x6c(%esp)
mov    0x114(%esp),%edi
mov    %eax,0x48(%esp)
mov    0xec(%esp),%eax
mov    %edi,0x70(%esp)
mov    0x118(%esp),%edi
mov    %eax,0x60(%esp)
mov    0xf8(%esp),%eax
mov    %edi,0x74(%esp)
mov    0x1bc(%esp),%edi
mov    %eax,0x44(%esp)
mov    0xfc(%esp),%eax
mov    %edi,0xd8(%esp)
mov    0x1c4(%esp),%edi
mov    %eax,0x68(%esp)
mov    %edi,0xdc(%esp)
je     8053580 <fchmod@plt+0x8ef0>
mov    0x11c(%esp),%edi
mov    %edi,0x78(%esp)
mov    0x120(%esp),%edi
mov    %edi,0x7c(%esp)
mov    0x124(%esp),%edi
mov    %edi,0x80(%esp)
mov    0x128(%esp),%edi
mov    %edi,0x84(%esp)
mov    0x12c(%esp),%edi
mov    %edi,0x88(%esp)
mov    0x130(%esp),%edi
mov    %edi,0x8c(%esp)
mov    0x134(%esp),%edi
mov    %edi,0x90(%esp)
mov    0x138(%esp),%edi
mov    %edi,0x94(%esp)
mov    0x13c(%esp),%edi
mov    %edi,0x98(%esp)
mov    0x140(%esp),%edi
mov    %edi,0x9c(%esp)
mov    0x144(%esp),%edi
mov    %edi,0xa0(%esp)
mov    0x148(%esp),%edi
mov    %edi,0xa4(%esp)
mov    0x14c(%esp),%edi
mov    %edi,0xa8(%esp)
mov    0x150(%esp),%edi
mov    %edi,0xac(%esp)
mov    0x154(%esp),%edi
mov    %edi,0xb0(%esp)
mov    0x158(%esp),%edi
mov    %edi,0xb4(%esp)
mov    0x19c(%esp),%edi
xor    %dx,%dx
or     %edx,%ecx
mov    %edi,0xb8(%esp)
mov    0x1a0(%esp),%edi
mov    %edi,0xbc(%esp)
mov    0x1a4(%esp),%edi
mov    %edi,0xc0(%esp)
mov    0x1a8(%esp),%edi
mov    %edi,0xc4(%esp)
mov    0x1ac(%esp),%edi
mov    %edi,0xc8(%esp)
mov    0x1b0(%esp),%edi
mov    %edi,0xcc(%esp)
mov    0x1b4(%esp),%edi
mov    %edi,0xd0(%esp)
mov    0x1b8(%esp),%edi
mov    %edi,0xd4(%esp)
jne    8053560 <fchmod@plt+0x8ed0>
mov    0x44(%esp),%ecx
xor    %bx,%bx
or     %ebx,%ecx
jne    8053560 <fchmod@plt+0x8ed0>
mov    0x48(%esp),%edx
test   %edx,%edx
jne    8053560 <fchmod@plt+0x8ed0>
test   %eax,%eax
js     8053560 <fchmod@plt+0x8ed0>
cltd
cmp    %edx,0x4c(%esp)
jne    8053560 <fchmod@plt+0x8ed0>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x4c02,0x4(%esp)
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8053660 <fchmod@plt+0x8fd0>
mov    $0x23,%ecx
xor    %eax,%eax
mov    %esi,%edi
rep stos %eax,%es:(%edi)
jmp    8052ed8 <fchmod@plt+0x8848>
lea    0x15c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x805aa2c,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
movl   $0x12,0x110(%esp)
00
call   804a340 <snprintf@plt>
mov    0x110(%esp),%eax
jmp    8052c7d <fchmod@plt+0x85ed>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a620 <close@plt>
jmp    8052f0a <fchmod@plt+0x887a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x805a758,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    0x24(%esp),%ecx
movl   $0x1,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
jmp    80530d9 <fchmod@plt+0x8a49>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    $0xffffffb5,%ebx
andl   $0xfffffffd,(%eax)
movl   $0x805a897,(%esp)
call   804a090 <perror@plt>
jmp    80534b8 <fchmod@plt+0x8e28>
lea    0x0(%esi),%esi
mov    0x15c(%esp),%edi
mov    %edi,0x78(%esp)
mov    0x160(%esp),%edi
mov    %edi,0x7c(%esp)
mov    0x164(%esp),%edi
mov    %edi,0x80(%esp)
mov    0x168(%esp),%edi
mov    %edi,0x84(%esp)
mov    0x16c(%esp),%edi
mov    %edi,0x88(%esp)
mov    0x170(%esp),%edi
mov    %edi,0x8c(%esp)
mov    0x174(%esp),%edi
mov    %edi,0x90(%esp)
mov    0x178(%esp),%edi
mov    %edi,0x94(%esp)
mov    0x17c(%esp),%edi
mov    %edi,0x98(%esp)
mov    0x180(%esp),%edi
mov    %edi,0x9c(%esp)
mov    0x184(%esp),%edi
mov    %edi,0xa0(%esp)
mov    0x188(%esp),%edi
mov    %edi,0xa4(%esp)
mov    0x18c(%esp),%edi
mov    %edi,0xa8(%esp)
mov    0x190(%esp),%edi
mov    %edi,0xac(%esp)
mov    0x194(%esp),%edi
mov    %edi,0xb0(%esp)
mov    0x198(%esp),%edi
mov    %edi,0xb4(%esp)
jmp    80533ed <fchmod@plt+0x8d5d>
nop
movl   $0x805a880,(%esp)
call   804a090 <perror@plt>
jmp    80534b8 <fchmod@plt+0x8e28>
call   8049f80 <__stack_chk_fail@plt>
movl   $0x805a83c,(%esp)
call   804a090 <perror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a78c,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804a1d0 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     80537c8 <fchmod@plt+0x9138>
movl   $0x0,0x8(%esp)
movl   $0x4c01,0x4(%esp)
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     8053760 <fchmod@plt+0x90d0>
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   804a620 <close@plt>
cmpl   $0x1,0x805e5ac
jle    80537bb <fchmod@plt+0x912b>
movl   $0x5,0x8(%esp)
movl   $0x805a8b0,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804a410 <__printf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a7d8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049f60 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   804a620 <close@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804a1a0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a7d8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049f60 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    $0x1,%ebx
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   804a580 <__fprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8053870 <fchmod@plt+0x91e0>
mov    0x805f6e8,%eax
test   %eax,%eax
jne    8053851 <fchmod@plt+0x91c1>
mov    %ebx,(%esp)
call   8053f10 <error+0x430>
test   %eax,%eax
je     8053860 <fchmod@plt+0x91d0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80541a0 <error+0x6c0>
xchg   %ax,%ax
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8056830 <error+0x2d50>
lea    0x0(%esi),%esi
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%esi
test   %ebx,%ebx
je     8053900 <fchmod@plt+0x9270>
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
test   %edi,%edi
mov    %eax,%ebp
je     8053908 <fchmod@plt+0x9278>
mov    %edi,(%esp)
call   804a260 <strlen@plt>
add    %eax,%ebp
test   %esi,%esi
je     8053910 <fchmod@plt+0x9280>
mov    %esi,(%esp)
call   804a260 <strlen@plt>
add    %eax,%ebp
je     8053918 <fchmod@plt+0x9288>
add    $0x1,%ebp
test   %ebx,%ebx
je     8053928 <fchmod@plt+0x9298>
mov    %ebx,(%esp)
mov    %ebp,0x4(%esp)
call   8054160 <error+0x680>
mov    %eax,%ebx
test   %edi,%edi
je     80538e4 <fchmod@plt+0x9254>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0c0 <strcat@plt>
test   %esi,%esi
je     80538f4 <fchmod@plt+0x9264>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0c0 <strcat@plt>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %ebp,%ebp
test   %edi,%edi
jne    80538a5 <fchmod@plt+0x9215>
xchg   %ax,%ax
xor    %eax,%eax
add    %eax,%ebp
test   %esi,%esi
jne    80538b3 <fchmod@plt+0x9223>
xor    %eax,%eax
add    %eax,%ebp
jne    80538bf <fchmod@plt+0x922f>
xchg   %ax,%ax
add    $0x1c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8054130 <error+0x650>
mov    %eax,%ebx
movb   $0x0,(%eax)
jmp    80538d4 <fchmod@plt+0x9244>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
mov    0x3c(%esp),%esi
test   %ebx,%ebx
je     8053a10 <fchmod@plt+0x9380>
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
test   %ebp,%ebp
mov    %eax,%edx
je     8053a20 <fchmod@plt+0x9390>
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
call   804a260 <strlen@plt>
mov    0xc(%esp),%edx
add    %edx,%eax
test   %edi,%edi
mov    %eax,0xc(%esp)
je     8053a30 <fchmod@plt+0x93a0>
mov    %edi,(%esp)
call   804a260 <strlen@plt>
add    0xc(%esp),%eax
test   %esi,%esi
mov    %eax,0xc(%esp)
je     8053a48 <fchmod@plt+0x93b8>
mov    %esi,(%esp)
call   804a260 <strlen@plt>
add    0xc(%esp),%eax
je     8053a58 <fchmod@plt+0x93c8>
add    $0x1,%eax
test   %ebx,%ebx
je     8053a68 <fchmod@plt+0x93d8>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8054160 <error+0x680>
mov    %eax,%ebx
test   %ebp,%ebp
je     80539e2 <fchmod@plt+0x9352>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804a0c0 <strcat@plt>
test   %edi,%edi
je     80539f2 <fchmod@plt+0x9362>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0c0 <strcat@plt>
test   %esi,%esi
je     8053a02 <fchmod@plt+0x9372>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a0c0 <strcat@plt>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
test   %ebp,%ebp
jne    8053971 <fchmod@plt+0x92e1>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    %edx,%eax
test   %edi,%edi
mov    %eax,0xc(%esp)
jne    805398f <fchmod@plt+0x92ff>
xor    %eax,%eax
add    0xc(%esp),%eax
test   %esi,%esi
mov    %eax,0xc(%esp)
jne    80539a7 <fchmod@plt+0x9317>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    0xc(%esp),%eax
jne    80539b9 <fchmod@plt+0x9329>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8054130 <error+0x650>
mov    %eax,%ebx
movb   $0x0,(%eax)
jmp    80539d2 <fchmod@plt+0x9342>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x98,%esp
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
call   804a300 <sigfillset@plt>
mov    %ebx,(%esp)
movl   $0x5,0x4(%esp)
call   804a290 <sigdelset@plt>
mov    %ebx,(%esp)
movl   $0xb,0x4(%esp)
call   804a290 <sigdelset@plt>
mov    0xa0(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049e10 <sigprocmask@plt>
add    $0x98,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805f6e4,%eax
test   %eax,%eax
je     8053af0 <error+0x10>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   8049d70 <__vfprintf_chk@plt>
mov    0x805e564,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804a4d0 <fputc@plt>
add    $0x1c,%esp
ret
jmp    8053b40 <error+0x60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e564,%eax
mov    %eax,(%esp)
call   8049d70 <__vfprintf_chk@plt>
mov    0x805e564,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804a4d0 <fputc@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a1d0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebx
test   %edi,%edi
je     8053bcc <error+0xec>
lea    0x1(%ebx),%eax
mov    %eax,(%esp)
call   8054130 <error+0x650>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   804a3b0 <strncpy@plt>
mov    %esi,%eax
movb   $0x0,(%esi,%ebx,1)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x5,0x8(%esp)
movl   $0x805a8c7,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x5,%ecx
push   %edi
mov    $0x8057fd0,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %eax,%eax
cmp    %dl,%cl
je     8053d01 <error+0x221>
test   %ebx,%ebx
je     8053d4f <error+0x26f>
mov    $0x2,%ecx
mov    %ebx,%esi
mov    $0x805812b,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x0,0x18(%esp)
seta   %dl
setb   %al
sub    %eax,%edx
movsbl %dl,%edx
test   %edx,%edx
je     8053d10 <error+0x230>
mov    0x40(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804a260 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %eax,%ebp
jmp    8053c94 <error+0x1b4>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
mov    $0x805812b,%edi
mov    %ebx,%esi
mov    $0x2,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %al
sub    %eax,%edx
movsbl %dl,%edx
test   %edx,%edx
jne    8053cc1 <error+0x1e1>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x2(%ebx),%eax
mov    %eax,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    8053cc1 <error+0x1e1>
movzbl 0x2(%ebx,%ebp,1),%edx
cmp    $0x2c,%dl
je     8053d01 <error+0x221>
test   %dl,%dl
je     8053d01 <error+0x221>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    8053ce5 <error+0x205>
movzbl (%ebx,%ebp,1),%eax
cmp    $0x2c,%al
je     8053d40 <error+0x260>
test   %al,%al
je     8053d40 <error+0x260>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
jne    8053c78 <error+0x198>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x2,%ebx
mov    $0x2,%ecx
mov    %ebx,%esi
mov    $0x805812b,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x1,0x18(%esp)
seta   %dl
setb   %al
sub    %eax,%edx
movsbl %dl,%edx
jmp    8053c5c <error+0x17c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
xor    $0x1,%eax
pop    %ebp
ret
mov    $0x1,%eax
jmp    8053d01 <error+0x221>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x8(%ebp),%eax
mov    0xc(%ebp),%ebx
mov    %eax,-0x44(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
test   %ebx,%ebx
je     8053eb6 <error+0x3d6>
mov    -0x44(%ebp),%ecx
mov    $0x8057f22,%eax
mov    %ebx,(%esp)
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %eax,-0x44(%ebp)
call   804a260 <strlen@plt>
lea    0x1f(%eax),%edx
add    %ebx,%eax
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x1b(%esp),%ecx
mov    %ecx,-0x38(%ebp)
andl   $0xfffffff0,-0x38(%ebp)
cmp    %eax,%ebx
mov    %eax,-0x34(%ebp)
jb     8053dcc <error+0x2ec>
jmp    8053eb6 <error+0x3d6>
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ebx,-0x34(%ebp)
jbe    8053eb6 <error+0x3d6>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     8053ee0 <error+0x400>
sub    %ebx,%eax
mov    %eax,-0x2c(%ebp)
mov    -0x2c(%ebp),%eax
test   %eax,%eax
je     8053dc0 <error+0x2e0>
mov    -0x2c(%ebp),%edi
mov    -0x38(%ebp),%esi
mov    %ebx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
call   804a3b0 <strncpy@plt>
mov    $0x2,%ecx
mov    -0x38(%ebp),%eax
movb   $0x0,(%esi,%edi,1)
mov    $0x805812b,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8053ef0 <error+0x410>
add    $0x2,%eax
mov    %eax,-0x30(%ebp)
movl   $0x1,-0x3c(%ebp)
mov    -0x30(%ebp),%eax
mov    %eax,(%esp)
call   804a260 <strlen@plt>
mov    -0x44(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,%esi
call   804a260 <strlen@plt>
mov    %eax,%ecx
add    %edi,%ecx
cmp    %ecx,%edi
jae    8053ea0 <error+0x3c0>
mov    %ebx,-0x40(%ebp)
mov    %edi,%ebx
mov    %ecx,%edi
jmp    8053e5f <error+0x37f>
lea    0x0(%esi),%esi
lea    0x1(%edx),%ebx
cmp    %edi,%ebx
jae    8053e9d <error+0x3bd>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     8053ed0 <error+0x3f0>
sub    %ebx,%eax
cmp    %eax,%esi
lea    (%ebx,%eax,1),%edx
jne    8053e58 <error+0x378>
mov    -0x30(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
je     8053f00 <error+0x420>
lea    (%ebx,%esi,1),%edx
lea    0x1(%edx),%ebx
cmp    %edi,%ebx
jb     8053e5f <error+0x37f>
mov    -0x40(%ebp),%ebx
mov    -0x3c(%ebp),%eax
test   %eax,%eax
je     8053ebb <error+0x3db>
add    -0x2c(%ebp),%ebx
add    $0x1,%ebx
cmp    %ebx,-0x34(%ebp)
ja     8053dcc <error+0x2ec>
mov    $0x1,%eax
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    8053f0b <error+0x42b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
jmp    8053e75 <error+0x395>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
mov    %eax,-0x2c(%ebp)
jmp    8053de9 <error+0x309>
mov    %eax,-0x30(%ebp)
movl   $0x0,-0x3c(%ebp)
jmp    8053e2c <error+0x34c>
nop
mov    -0x3c(%ebp),%eax
mov    -0x40(%ebp),%ebx
xor    $0x1,%eax
jmp    8053ea3 <error+0x3c3>
call   8049f80 <__stack_chk_fail@plt>
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
test   %edx,%edx
je     8054000 <error+0x520>
cmpb   $0x2f,(%edx)
je     8054000 <error+0x520>
mov    $0x5,%ecx
mov    $0x8057e28,%edi
mov    %edx,%esi
mov    $0x1,%eax
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %bl
setb   %cl
cmp    %cl,%bl
je     8053ff8 <error+0x518>
mov    $0x8058069,%edi
mov    $0x5,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x8057fc0,%edi
mov    $0x6,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a8dc,%edi
mov    $0x6,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a8e2,%edi
mov    $0x6,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a8e8,%edi
mov    $0x7,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a8ef,%edi
mov    $0x7,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a8f6,%edi
mov    $0xb,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a901,%edi
mov    $0x7,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a908,%edi
mov    $0xb,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8053ff8 <error+0x518>
mov    $0x805a913,%edi
mov    $0x8,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
lea    0x0(%esi),%esi
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8054058 <error+0x578>
mov    0x805f6e8,%eax
test   %eax,%eax
jne    8054031 <error+0x551>
mov    %ebx,(%esp)
call   8053f10 <error+0x430>
test   %eax,%eax
je     8054040 <error+0x560>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80541a0 <error+0x6c0>
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8054330 <error+0x850>
test   %eax,%eax
je     805405c <error+0x57c>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805404c <error+0x56c>
movl   $0x5,0x8(%esp)
movl   $0x805a91b,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     80540c0 <error+0x5e0>
mov    0x805f6e8,%edx
test   %edx,%edx
jne    80540b8 <error+0x5d8>
mov    %eax,(%esp)
call   8054330 <error+0x850>
test   %eax,%eax
je     80540c4 <error+0x5e4>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
jmp    80541a0 <error+0x6c0>
xor    %eax,%eax
jmp    80540b1 <error+0x5d1>
movl   $0x5,0x8(%esp)
movl   $0x805a91b,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x805a91b,0x4(%esp)
movl   $0x0,(%esp)
call   8049f60 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8053b40 <error+0x60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x20(%esp),%edx
test   %edx,%edx
je     8054149 <error+0x669>
mov    %edx,(%esp)
call   804a170 <malloc@plt>
test   %eax,%eax
je     8054150 <error+0x670>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
call   80540f0 <error+0x610>
mov    0xc(%esp),%eax
jmp    8054149 <error+0x669>
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a150 <realloc@plt>
test   %eax,%eax
je     8054180 <error+0x6a0>
add    $0x1c,%esp
ret
nop
mov    %eax,0xc(%esp)
call   80540f0 <error+0x610>
mov    0xc(%esp),%eax
add    $0x1c,%esp
ret
jmp    80541a0 <error+0x6c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     80541d0 <error+0x6f0>
mov    %eax,(%esp)
call   804a360 <__strdup@plt>
test   %eax,%eax
je     80541c0 <error+0x6e0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
call   80540f0 <error+0x610>
mov    0xc(%esp),%eax
jmp    80541b7 <error+0x6d7>
nop
xor    %eax,%eax
jmp    80541b7 <error+0x6d7>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x250(%esp),%eax
lea    0x2c(%esp),%esi
movl   $0x805a92d,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
call   8049d10 <__snprintf_chk@plt>
movl   $0x8058444,0x4(%esp)
mov    %esi,(%esp)
call   804a070 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8054318 <error+0x838>
lea    0x12c(%esp),%ebp
mov    %eax,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebp,(%esp)
call   8049ea0 <fgets@plt>
test   %eax,%eax
je     8054310 <error+0x830>
mov    %ebp,%ecx
mov    (%ecx),%eax
add    $0x4,%ecx
lea    -0x1010101(%eax),%edx
not    %eax
and    %eax,%edx
and    $0x80808080,%edx
je     805426f <error+0x78f>
mov    %edx,%eax
shr    $0x10,%eax
test   $0x8080,%edx
cmove  %eax,%edx
lea    0x2(%ecx),%eax
cmove  %eax,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
xor    %edi,%edi
sub    %ebp,%ecx
cmp    $0x1,%ecx
jbe    80542e6 <error+0x806>
movb   $0x0,0x12b(%esp,%ecx,1)
mov    %ebp,0x14(%esp)
movl   $0x805a943,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
call   8049d10 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   804a360 <__strdup@plt>
mov    %eax,%edi
mov    %ebx,(%esp)
call   8049ed0 <fclose@plt>
mov    %edi,%eax
mov    0x22c(%esp),%edi
xor    %gs:0x14,%edi
jne    805431c <error+0x83c>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    80542e6 <error+0x806>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    80542f0 <error+0x810>
lea    0x0(%esi,%eiz,1),%esi
call   8049f80 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
mov    0x2050(%esp),%eax
mov    %gs:0x14,%edx
mov    %edx,0x202c(%esp)
xor    %edx,%edx
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x10(%esp)
je     8054657 <error+0xb77>
cmpb   $0x2f,(%eax)
je     8054590 <error+0xab0>
lea    0x102a(%esp),%ebp
movl   $0xfff,0x4(%esp)
mov    %ebp,(%esp)
call   804a250 <getcwd@plt>
test   %eax,%eax
je     80543ff <error+0x91f>
mov    %ebp,(%esp)
call   804a260 <strlen@plt>
add    %ebp,%eax
cmpb   $0x2f,-0x1(%eax)
je     80545cd <error+0xaed>
lea    0x1(%eax),%esi
movb   $0x2f,(%eax)
movzbl (%ebx),%eax
xor    %edx,%edx
movl   $0x0,0xc(%esp)
test   %al,%al
je     80545d8 <error+0xaf8>
cmp    $0x2f,%al
je     8054508 <error+0xa28>
cmp    $0x2e,%al
jne    80543dc <error+0x8fc>
xchg   %ax,%ax
jmp    8054514 <error+0xa34>
lea    0x0(%esi),%esi
add    $0x1,%esi
add    $0x1,%ebx
mov    %al,-0x1(%esi)
movzbl (%ebx),%eax
cmp    $0x2f,%al
je     8054430 <error+0x950>
test   %al,%al
je     8054430 <error+0x950>
mov    %esi,%ecx
sub    %ebp,%ecx
cmp    $0xfff,%ecx
jle    80543c8 <error+0x8e8>
call   804a390 <__errno_location@plt>
movl   $0x24,(%eax)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   804a360 <__strdup@plt>
mov    0x202c(%esp),%edx
xor    %gs:0x14,%edx
jne    805467e <error+0xb9e>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%edx),%eax
cmp    $0x100,%edx
mov    %ebx,0x18(%esp)
mov    %eax,0x14(%esp)
jg     8054665 <error+0xb85>
lea    0x29(%esp),%eax
movb   $0x0,(%esi)
movl   $0x1000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804a020 <readlink@plt>
test   %eax,%eax
mov    %eax,%ecx
js     80545b8 <error+0xad8>
movb   $0x0,0x29(%esp,%eax,1)
mov    %ebp,%edi
cmpb   $0x2f,0x29(%esp)
je     8054488 <error+0x9a8>
mov    %esi,%edi
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    8054480 <error+0x9a0>
mov    %ebx,(%esp)
mov    %ecx,0x1c(%esp)
call   804a260 <strlen@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%esi
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,(%esp)
call   804a170 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80543f3 <error+0x913>
mov    0x1c(%esp),%ecx
lea    0x29(%esp),%eax
add    $0x1,%esi
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x8(%esp)
call   8049e80 <memcpy@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
add    %ebx,%ecx
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049e80 <memcpy@plt>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8049e40 <free@plt>
mov    %ebx,0xc(%esp)
lea    0x1(%edi),%esi
movzbl (%ebx),%eax
movb   $0x2f,(%edi)
mov    0x14(%esp),%edx
jmp    80543aa <error+0x8ca>
nop
movzbl 0x1(%ebx),%eax
add    $0x1,%ebx
jmp    80543aa <error+0x8ca>
movzbl 0x1(%ebx),%ecx
cmp    $0x2f,%cl
je     8054580 <error+0xaa0>
test   %cl,%cl
je     8054580 <error+0xaa0>
cmp    $0x2e,%cl
jne    80543dc <error+0x8fc>
movzbl 0x2(%ebx),%ecx
cmp    $0x2f,%cl
je     805453b <error+0xa5b>
test   %cl,%cl
jne    80543dc <error+0x8fc>
lea    0x102b(%esp),%eax
add    $0x2,%ebx
cmp    %eax,%esi
jbe    8054574 <error+0xa94>
cmpb   $0x2f,-0x2(%esi)
lea    -0x1(%esi),%edi
je     8054675 <error+0xb95>
mov    %edi,%esi
jmp    8054569 <error+0xa89>
lea    0x0(%esi),%esi
sub    $0x1,%esi
cmpb   $0x2f,-0x1(%esi)
je     8054574 <error+0xa94>
lea    0x102b(%esp),%eax
cmp    %eax,%esi
jne    8054560 <error+0xa80>
mov    %ecx,%eax
jmp    80543aa <error+0x8ca>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    %ecx,%eax
jmp    80543aa <error+0x8ca>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
lea    0x102b(%esp),%esi
movb   $0x2f,0x102a(%esp)
lea    0x102a(%esp),%ebp
lea    0x1(%eax),%ebx
jmp    805439d <error+0x8bd>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    80543f3 <error+0x913>
mov    %esi,%edi
jmp    80544f5 <error+0xa15>
mov    %eax,%esi
mov    0x10(%esp),%ebx
jmp    805439d <error+0x8bd>
lea    0x102b(%esp),%eax
cmp    %eax,%esi
je     80545ee <error+0xb0e>
xor    %eax,%eax
cmpb   $0x2f,-0x1(%esi)
sete   %al
sub    %eax,%esi
mov    0xc(%esp),%eax
movb   $0x0,(%esi)
mov    %eax,(%esp)
call   8049e40 <free@plt>
movl   $0x2f,0x4(%esp)
mov    %ebp,(%esp)
call   804a4b0 <strrchr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8054635 <error+0xb55>
mov    $0x805a952,%edi
mov    $0x4,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8054635 <error+0xb55>
call   804a670 <__ctype_b_loc@plt>
movsbl 0x4(%ebx),%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
jne    8054642 <error+0xb62>
mov    %ebp,(%esp)
call   804a360 <__strdup@plt>
jmp    805440b <error+0x92b>
add    $0x1,%ebx
mov    %ebx,(%esp)
call   80541e0 <error+0x700>
test   %eax,%eax
jne    805440b <error+0x92b>
jmp    8054635 <error+0xb55>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    805440b <error+0x92b>
call   804a390 <__errno_location@plt>
movl   $0x28,(%eax)
jmp    80543f3 <error+0x913>
mov    %ecx,%eax
mov    %edi,%esi
jmp    80543aa <error+0x8ca>
call   8049f80 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x74,%esp
mov    (%edx),%edi
mov    0xc(%edx),%ebx
mov    0x10(%edx),%esi
mov    %eax,0x50(%esp)
mov    0x14(%edx),%eax
mov    %edi,%ecx
mov    0x4(%edx),%edi
mov    %ebx,0x8(%esp)
mov    0x1c(%edx),%ebx
mov    %esi,0xc(%esp)
mov    0x20(%edx),%esi
mov    %eax,0x10(%esp)
mov    0x24(%edx),%eax
mov    %edi,%ebp
mov    0x8(%edx),%edi
mov    %ebx,0x18(%esp)
mov    0x2c(%edx),%ebx
mov    %esi,0x1c(%esp)
mov    0x30(%edx),%esi
mov    %eax,0x20(%esp)
mov    %edi,0x4(%esp)
mov    0x18(%edx),%edi
mov    %ebx,0x28(%esp)
mov    0x38(%edx),%ebx
mov    %esi,0x2c(%esp)
mov    %edi,0x14(%esp)
mov    0x28(%edx),%edi
mov    %edi,0x24(%esp)
mov    0x34(%edx),%edi
mov    %edi,0x30(%esp)
mov    %ebx,0x34(%esp)
mov    0x3c(%edx),%edx
mov    %ecx,(%esp)
mov    %ebp,0x3c(%esp)
mov    %edx,0x38(%esp)
mov    0x50(%esp),%edx
mov    (%edx),%eax
mov    0xc(%edx),%edi
mov    %eax,0x4c(%esp)
mov    0x4(%edx),%eax
mov    %edi,0x40(%esp)
mov    %eax,%esi
mov    0x8(%edx),%eax
mov    0x10(%edx),%edx
mov    %esi,0x48(%esp)
mov    %eax,%ebx
xor    %esi,%ebx
xor    %edi,%ebx
mov    %eax,%edi
add    0x4c(%esp),%ebx
mov    %edx,0x44(%esp)
mov    %eax,0x58(%esp)
add    %ecx,%ebx
mov    $0xb,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%edi
mov    %edi,%edx
mov    0x44(%esp),%edi
mov    $0xe,%cl
mov    %edx,0x54(%esp)
xor    %esi,%edx
mov    %edx,%eax
mov    0x40(%esp),%edx
xor    %ebx,%eax
add    %ebp,%edi
add    %eax,%edi
mov    %ebx,%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %edx,%edi
rol    %cl,%esi
mov    %esi,%ebp
mov    0x4(%esp),%esi
xor    %edi,%eax
xor    %ebp,%eax
mov    $0xf,%cl
mov    %ebp,0x60(%esp)
add    %edx,%esi
mov    0x54(%esp),%edx
add    %eax,%esi
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%ebx
mov    %edi,%ecx
add    0x8(%esp),%edx
xor    %esi,%ecx
mov    %ecx,%eax
mov    $0xc,%ecx
xor    %ebx,%eax
add    %edx,%eax
rol    %cl,%eax
mov    $0xa,%cl
add    %ebp,%eax
rol    %cl,%edi
mov    0xc(%esp),%ecx
add    %ebp,%ecx
mov    %esi,%ebp
xor    %eax,%ebp
mov    %ebp,%edx
mov    0x18(%esp),%ebp
xor    %edi,%edx
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
add    0x10(%esp),%ebx
mov    %eax,%ecx
xor    %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x8,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%eax
add    0x14(%esp),%edi
mov    %edx,%ecx
xor    %ebx,%ecx
xor    %eax,%ecx
add    %ecx,%edi
mov    $0x7,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%edx
mov    %ebx,%ecx
add    %ebp,%esi
xor    %edi,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
add    0x1c(%esp),%eax
mov    %edi,%ecx
xor    %esi,%ecx
xor    %ebx,%ecx
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
add    0x20(%esp),%edx
mov    %esi,%ecx
xor    %eax,%ecx
xor    %edi,%ecx
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
add    0x24(%esp),%ebx
mov    %eax,%ecx
xor    %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%eax
add    0x28(%esp),%edi
mov    %edx,%ecx
xor    %ebx,%ecx
xor    %eax,%ecx
add    %ecx,%edi
mov    $0xf,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%edx
add    0x2c(%esp),%esi
mov    %ebx,%ecx
xor    %edi,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x6,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
add    0x30(%esp),%eax
mov    %edi,%ecx
xor    %esi,%ecx
xor    %ebx,%ecx
add    %ecx,%eax
mov    $0x7,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
add    0x34(%esp),%edx
mov    %esi,%ecx
xor    %eax,%ecx
xor    %edi,%ecx
add    %ecx,%edx
mov    $0x9,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
add    0x38(%esp),%ebx
mov    %eax,%ecx
xor    %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x8,%ecx
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
rol    %cl,%eax
mov    %ebx,%ecx
lea    0x5a827999(%ebp,%edi,1),%edi
not    %ecx
mov    %ebx,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
add    %ecx,%edi
mov    $0x7,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%edx
mov    0xc(%esp),%ecx
mov    %edi,%ebp
and    %ebx,%ebp
lea    0x5a827999(%ecx,%esi,1),%esi
mov    %edi,%ecx
not    %ecx
and    %edx,%ecx
or     %ebp,%ecx
add    %ecx,%esi
mov    $0x6,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
mov    0x30(%esp),%ecx
mov    %esi,%ebp
and    %edi,%ebp
lea    0x5a827999(%ecx,%eax,1),%ecx
mov    %esi,%eax
not    %eax
and    %ebx,%eax
or     %ebp,%eax
add    %ecx,%eax
mov    $0x8,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
mov    0x3c(%esp),%ecx
mov    %eax,%ebp
and    %esi,%ebp
lea    0x5a827999(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
and    %edi,%edx
or     %ebp,%edx
mov    0x24(%esp),%ebp
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
add    %ebx,%edx
mov    $0xa,%cl
lea    0x5a827999(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
rol    %cl,%esi
mov    %ebp,%ecx
mov    %edx,%ebp
and    %eax,%ebp
and    %esi,%ecx
or     %ebp,%ecx
mov    0x14(%esp),%ebp
add    %ecx,%ebx
mov    $0xb,%ecx
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
lea    0x5a827999(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
rol    %cl,%eax
mov    %ebp,%ecx
mov    %ebx,%ebp
and    %edx,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x38(%esp),%ebp
add    %ecx,%edi
mov    $0x9,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
lea    0x5a827999(%ebp,%esi,1),%esi
mov    %edi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
mov    %edi,%ebp
and    %ebx,%ebp
and    %edx,%ecx
or     %ebp,%ecx
mov    0x8(%esp),%ebp
add    %ecx,%esi
mov    $0x7,%ecx
rol    %cl,%esi
add    %eax,%esi
mov    $0xa,%cl
rol    %cl,%ebx
lea    0x5a827999(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    %esi,%ebp
not    %eax
and    %edi,%ebp
and    %ebx,%eax
or     %ebp,%eax
mov    0x2c(%esp),%ebp
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
add    %edx,%eax
mov    $0xa,%cl
rol    %cl,%edi
lea    0x5a827999(%ebp,%edx,1),%ecx
mov    %eax,%edx
mov    %eax,%ebp
not    %edx
and    %esi,%ebp
and    %edi,%edx
or     %ebp,%edx
mov    (%esp),%ebp
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
add    %ebx,%edx
mov    $0xa,%cl
rol    %cl,%esi
mov    %edx,%ecx
lea    0x5a827999(%ebp,%ebx,1),%ebx
not    %ecx
mov    %edx,%ebp
and    %esi,%ecx
and    %eax,%ebp
or     %ebp,%ecx
mov    0x20(%esp),%ebp
add    %ecx,%ebx
mov    $0xc,%ecx
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
rol    %cl,%eax
mov    %ebx,%ecx
lea    0x5a827999(%ebp,%edi,1),%edi
not    %ecx
mov    %ebx,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
mov    0x10(%esp),%ebp
add    %ecx,%edi
mov    $0xf,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
rol    %cl,%edx
mov    %edi,%ecx
lea    0x5a827999(%ebp,%esi,1),%esi
not    %ecx
mov    %edi,%ebp
and    %edx,%ecx
and    %ebx,%ebp
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
add    %eax,%esi
mov    $0xa,%cl
rol    %cl,%ebx
lea    0x5a827999(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    %esi,%ebp
not    %eax
and    %ebx,%eax
and    %edi,%ebp
or     %ebp,%eax
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
mov    0x34(%esp),%ecx
mov    %eax,%ebp
and    %esi,%ebp
lea    0x5a827999(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
and    %edi,%edx
or     %ebp,%edx
mov    %esi,%ebp
mov    0x28(%esp),%esi
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
add    %ebx,%edx
mov    $0xa,%cl
lea    0x5a827999(%esi,%ebx,1),%ebx
mov    %edx,%esi
not    %esi
rol    %cl,%ebp
mov    %esi,%ecx
mov    %edx,%esi
and    %eax,%esi
and    %ebp,%ecx
or     %esi,%ecx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%eax
mov    0x1c(%esp),%ecx
mov    %ebx,%esi
not    %esi
lea    0x5a827999(%ecx,%edi,1),%edi
mov    %esi,%ecx
mov    %edi,0x5c(%esp)
mov    %ebx,%edi
and    %eax,%ecx
and    %edx,%edi
or     %edi,%ecx
mov    0x5c(%esp),%edi
add    %ecx,%edi
mov    $0xc,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %ebp,%edi
rol    %cl,%edx
mov    0x8(%esp),%ecx
or     %edi,%esi
xor    %edx,%esi
lea    0x6ed9eba1(%ecx,%ebp,1),%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
mov    0x24(%esp),%ecx
lea    0x6ed9eba1(%ecx,%eax,1),%ecx
mov    %edi,%eax
not    %eax
or     %esi,%eax
xor    %ebx,%eax
add    %ecx,%eax
mov    $0xd,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
mov    0x34(%esp),%ecx
mov    %eax,%ebp
lea    0x6ed9eba1(%ecx,%edx,1),%ecx
mov    %esi,%edx
not    %edx
or     %eax,%edx
xor    %edi,%edx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
mov    0xc(%esp),%ecx
lea    0x6ed9eba1(%ecx,%ebx,1),%ebx
mov    %eax,%ecx
mov    0x20(%esp),%eax
not    %ecx
or     %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x7,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%ebp
lea    0x6ed9eba1(%eax,%edi,1),%ecx
mov    %edx,%edi
not    %edi
mov    %edi,%eax
mov    0x38(%esp),%edi
or     %ebx,%eax
xor    %ebp,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
add    %esi,%eax
mov    $0xa,%cl
lea    0x6ed9eba1(%edi,%esi,1),%esi
mov    %ebx,%edi
not    %edi
rol    %cl,%edx
mov    %edi,%ecx
mov    %ebx,%edi
mov    0x1c(%esp),%ebx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebp,%esi
rol    %cl,%edi
mov    %eax,%ecx
not    %ecx
or     %esi,%ecx
xor    %edi,%ecx
lea    0x6ed9eba1(%ebx,%ebp,1),%ebx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%eax
mov    0x3c(%esp),%ecx
lea    0x6ed9eba1(%ecx,%edx,1),%ebp
mov    %esi,%edx
not    %edx
mov    $0xf,%ecx
or     %ebx,%edx
xor    %eax,%edx
add    %edx,%ebp
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
mov    0x4(%esp),%ecx
lea    0x6ed9eba1(%ecx,%edi,1),%ecx
mov    %ebx,%edi
not    %edi
mov    %edi,%edx
mov    0x18(%esp),%edi
or     %ebp,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xe,%ecx
lea    0x6ed9eba1(%edi,%eax,1),%edi
rol    %cl,%edx
add    %eax,%edx
mov    %ebp,%eax
not    %eax
mov    $0xa,%cl
or     %edx,%eax
rol    %cl,%ebx
xor    %ebx,%eax
mov    $0x8,%cl
add    %eax,%edi
mov    (%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
lea    0x6ed9eba1(%eax,%esi,1),%ecx
mov    %edx,%esi
not    %esi
mov    %esi,%eax
mov    0x14(%esp),%esi
or     %edi,%eax
xor    %ebp,%eax
add    %ecx,%eax
mov    $0xd,%ecx
lea    0x6ed9eba1(%esi,%ebx,1),%esi
rol    %cl,%eax
add    %ebx,%eax
mov    %edi,%ebx
not    %ebx
mov    $0xa,%cl
rol    %cl,%edx
mov    %ebx,%ecx
mov    0x30(%esp),%ebx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x6,%ecx
lea    0x6ed9eba1(%ebx,%ebp,1),%ebx
rol    %cl,%esi
add    %ebp,%esi
mov    %eax,%ebp
not    %ebp
mov    $0xa,%cl
rol    %cl,%edi
mov    %ebp,%ecx
mov    0x28(%esp),%ebp
or     %esi,%ecx
xor    %edi,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
lea    0x6ed9eba1(%ebp,%edx,1),%ebp
rol    %cl,%ebx
add    %edx,%ebx
mov    %esi,%edx
not    %edx
mov    $0xa,%cl
or     %ebx,%edx
rol    %cl,%eax
xor    %eax,%edx
mov    $0xc,%cl
add    %edx,%ebp
mov    0x10(%esp),%edx
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
lea    0x6ed9eba1(%edx,%edi,1),%ecx
mov    %ebx,%edi
not    %edi
mov    %edi,%edx
mov    0x2c(%esp),%edi
or     %ebp,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0x7,%ecx
lea    0x6ed9eba1(%edi,%eax,1),%edi
rol    %cl,%edx
add    %eax,%edx
mov    %ebp,%eax
not    %eax
mov    $0xa,%cl
or     %edx,%eax
rol    %cl,%ebx
mov    $0x5,%cl
xor    %ebx,%eax
add    %eax,%edi
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
mov    0x3c(%esp),%ecx
lea    -0x70e44324(%ecx,%esi,1),%ecx
mov    %ebp,%esi
not    %esi
mov    %esi,%eax
mov    %edi,%esi
and    %ebp,%esi
and    %edx,%eax
or     %esi,%eax
mov    0x20(%esp),%esi
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x70e44324(%esi,%ebx,1),%esi
mov    %edx,%ebx
not    %ebx
mov    %ebx,%ecx
mov    %eax,%ebx
and    %edx,%ebx
and    %edi,%ecx
or     %ebx,%ecx
mov    0x28(%esp),%ebx
add    %ecx,%esi
mov    $0xc,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebp,%esi
rol    %cl,%edi
lea    -0x70e44324(%ebx,%ebp,1),%ebx
mov    %edi,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x24(%esp),%ebp
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%eax
lea    -0x70e44324(%ebp,%edx,1),%ebp
mov    %eax,%edx
mov    %ebx,%ecx
not    %edx
and    %eax,%ecx
and    %esi,%edx
or     %ecx,%edx
mov    $0xf,%ecx
add    %edx,%ebp
mov    (%esp),%edx
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
lea    -0x70e44324(%edx,%edi,1),%ecx
mov    %esi,%edi
not    %edi
mov    %edi,%edx
mov    %ebp,%edi
and    %esi,%edi
and    %ebx,%edx
or     %edi,%edx
mov    0x1c(%esp),%edi
add    %ecx,%edx
mov    $0xe,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %eax,%edx
rol    %cl,%ebx
lea    -0x70e44324(%edi,%eax,1),%edi
mov    %ebx,%eax
mov    %edx,%ecx
not    %eax
and    %ebx,%ecx
and    %ebp,%eax
or     %ecx,%eax
mov    $0xf,%ecx
add    %eax,%edi
mov    0x2c(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
lea    -0x70e44324(%eax,%esi,1),%ecx
mov    %ebp,%esi
not    %esi
mov    %esi,%eax
mov    %edi,%esi
and    %edx,%eax
and    %ebp,%esi
or     %esi,%eax
mov    0xc(%esp),%esi
add    %ecx,%eax
mov    $0x9,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x70e44324(%esi,%ebx,1),%esi
mov    %edx,%ebx
not    %ebx
mov    %ebx,%ecx
mov    %eax,%ebx
and    %edx,%ebx
and    %edi,%ecx
or     %ebx,%ecx
mov    0x30(%esp),%ebx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebp,%esi
rol    %cl,%edi
lea    -0x70e44324(%ebx,%ebp,1),%ebx
mov    %edi,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x8(%esp),%ebp
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%eax
lea    -0x70e44324(%ebp,%edx,1),%ebp
mov    %eax,%edx
mov    %ebx,%ecx
not    %edx
and    %eax,%ecx
and    %esi,%edx
or     %ecx,%edx
mov    $0xe,%ecx
add    %edx,%ebp
mov    0x18(%esp),%edx
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
lea    -0x70e44324(%edx,%edi,1),%ecx
mov    %esi,%edi
not    %edi
mov    %edi,%edx
mov    %ebp,%edi
and    %esi,%edi
and    %ebx,%edx
or     %edi,%edx
mov    0x38(%esp),%edi
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %eax,%edx
lea    -0x70e44324(%edi,%eax,1),%edi
rol    %cl,%ebx
mov    %ebx,%eax
mov    %edx,%ecx
not    %eax
and    %ebx,%ecx
and    %ebp,%eax
or     %ecx,%eax
mov    $0x6,%ecx
add    %eax,%edi
mov    0x34(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
lea    -0x70e44324(%eax,%esi,1),%ecx
mov    %ebp,%esi
not    %esi
mov    %esi,%eax
mov    %edi,%esi
and    %ebp,%esi
and    %edx,%eax
or     %esi,%eax
mov    0x10(%esp),%esi
add    %ecx,%eax
mov    $0x8,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x70e44324(%esi,%ebx,1),%ebx
mov    %edx,%esi
not    %esi
mov    %esi,%ecx
mov    %eax,%esi
and    %edx,%esi
and    %edi,%ecx
or     %esi,%ecx
mov    0x14(%esp),%esi
add    %ecx,%ebx
mov    $0x6,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %ebp,%ebx
rol    %cl,%edi
lea    -0x70e44324(%esi,%ebp,1),%esi
mov    %edi,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %ebx,%ebp
and    %edi,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%esi
mov    $0x5,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%eax
lea    -0x70e44324(%ebp,%edx,1),%ecx
mov    %eax,%ebp
not    %ebp
mov    %ebp,%edx
mov    %esi,%ebp
and    %eax,%ebp
and    %ebx,%edx
or     %ebp,%edx
mov    0xc(%esp),%ebp
add    %ecx,%edx
mov    $0xc,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    %ebx,%ecx
lea    -0x56ac02b2(%ebp,%edi,1),%edi
not    %ecx
mov    (%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x9,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %eax,%edi
rol    %cl,%esi
lea    -0x56ac02b2(%ebp,%eax,1),%ecx
mov    %esi,%eax
not    %eax
or     %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
mov    0x10(%esp),%ecx
lea    -0x56ac02b2(%ecx,%ebx,1),%ebx
mov    %edx,%ecx
not    %ecx
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %esi,%ebx
rol    %cl,%edi
mov    0x20(%esp),%ecx
lea    -0x56ac02b2(%ecx,%esi,1),%esi
mov    %edi,%ecx
not    %ecx
or     %eax,%ecx
xor    %ebx,%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%eax
mov    0x18(%esp),%ecx
lea    -0x56ac02b2(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
or     %ebx,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x2c(%esp),%ecx
mov    %ebx,%ebp
not    %ebp
lea    -0x56ac02b2(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    0x4(%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x8,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %eax,%edi
rol    %cl,%esi
lea    -0x56ac02b2(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    0x24(%esp),%ebp
not    %eax
or     %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xd,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x56ac02b2(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%ebx
mov    $0xc,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %esi,%ebx
rol    %cl,%edi
mov    0x34(%esp),%ecx
mov    %edi,%ebp
not    %ebp
lea    -0x56ac02b2(%ecx,%esi,1),%esi
mov    %ebp,%ecx
or     %eax,%ecx
xor    %ebx,%ecx
add    %ecx,%esi
mov    $0x5,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%eax
mov    0x3c(%esp),%ecx
lea    -0x56ac02b2(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
or     %ebx,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xc,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x8(%esp),%ecx
lea    -0x56ac02b2(%ecx,%edi,1),%ebp
mov    %ebx,%edi
not    %edi
mov    %edi,%ecx
mov    0x1c(%esp),%edi
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebp
mov    $0xd,%ecx
lea    -0x56ac02b2(%edi,%eax,1),%edi
rol    %cl,%ebp
mov    $0xa,%cl
add    %eax,%ebp
rol    %cl,%esi
mov    %esi,%eax
mov    $0xe,%cl
not    %eax
or     %edx,%eax
xor    %ebp,%eax
add    %eax,%edi
mov    0x28(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %ebx,%edi
rol    %cl,%edx
lea    -0x56ac02b2(%eax,%ebx,1),%ecx
mov    %edx,%ebx
not    %ebx
mov    %ebx,%eax
mov    0x14(%esp),%ebx
or     %ebp,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %esi,%eax
rol    %cl,%ebp
lea    -0x56ac02b2(%ebx,%esi,1),%esi
mov    %ebp,%ebx
not    %ebx
mov    %ebx,%ecx
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%edi
mov    %edi,%ebx
mov    0x38(%esp),%edi
mov    %ebx,0x64(%esp)
lea    -0x56ac02b2(%edi,%edx,1),%ecx
mov    %ebx,%edi
not    %edi
mov    %edi,%edx
mov    0x30(%esp),%edi
or     %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
lea    (%edx,%ebp,1),%ebx
mov    $0xa,%cl
mov    %ebx,%edx
mov    %eax,%ebx
rol    %cl,%ebx
mov    %ebx,0x68(%esp)
not    %ebx
mov    $0x6,%cl
mov    %ebx,%eax
mov    0x48(%esp),%ebx
or     %esi,%eax
lea    -0x56ac02b2(%edi,%ebp,1),%edi
mov    0x40(%esp),%ebp
xor    %edx,%eax
add    %eax,%edi
mov    0x58(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
rol    %cl,%esi
mov    %esi,0x70(%esp)
mov    %ebp,%esi
mov    $0x8,%cl
not    %esi
or     %esi,%eax
mov    0x4c(%esp),%esi
xor    %ebx,%eax
mov    %edi,0x6c(%esp)
mov    %edx,0x5c(%esp)
mov    0x54(%esp),%edx
lea    0x50a28be6(%esi,%eax,1),%edi
mov    0x44(%esp),%esi
add    0x10(%esp),%edi
rol    %cl,%edi
mov    $0x9,%cl
add    %esi,%edi
mov    %esi,%eax
mov    0x34(%esp),%esi
lea    0x50a28be6(%eax,%esi,1),%esi
mov    %edx,%eax
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %eax,%esi
mov    0x18(%esp),%eax
rol    %cl,%esi
add    %ebp,%esi
lea    0x50a28be6(%ebp,%eax,1),%ebx
mov    0x60(%esp),%ebp
mov    %ebp,%eax
not    %eax
or     %edi,%eax
xor    %esi,%eax
add    %eax,%ebx
mov    (%esp),%eax
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%edi
lea    0x50a28be6(%eax,%edx,1),%edx
mov    %edi,%eax
not    %eax
mov    $0xb,%cl
or     %esi,%eax
xor    %ebx,%eax
add    %edx,%eax
mov    %ebp,%edx
rol    %cl,%eax
add    %ebp,%eax
mov    0x20(%esp),%ebp
mov    $0xa,%cl
rol    %cl,%esi
lea    0x50a28be6(%ebp,%edx,1),%ecx
mov    %esi,%edx
mov    0x4(%esp),%ebp
not    %edx
or     %ebx,%edx
xor    %eax,%edx
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
lea    0x50a28be6(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
mov    %ebp,%ecx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0xf,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x28(%esp),%ecx
mov    %eax,%ebp
not    %ebp
lea    0x50a28be6(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    0xc(%esp),%ebp
or     %edx,%ecx
xor    %edi,%ecx
add    %ecx,%esi
mov    $0xf,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
lea    0x50a28be6(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    0x30(%esp),%ebp
or     %edi,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x50a28be6(%ebp,%eax,1),%ecx
mov    %edi,%eax
mov    0x14(%esp),%ebp
not    %eax
or     %esi,%eax
xor    %ebx,%eax
add    %ecx,%eax
mov    $0x7,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x50a28be6(%ebp,%edx,1),%ecx
mov    %esi,%edx
not    %edx
or     %ebx,%edx
xor    %eax,%edx
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x38(%esp),%ecx
lea    0x50a28be6(%ecx,%edi,1),%edi
mov    %ebx,%ecx
not    %ecx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x8,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x1c(%esp),%ecx
lea    0x50a28be6(%ecx,%esi,1),%esi
mov    %eax,%ecx
not    %ecx
or     %edx,%ecx
xor    %edi,%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x3c(%esp),%ecx
lea    0x50a28be6(%ecx,%ebx,1),%ebx
mov    %edx,%ecx
not    %ecx
or     %edi,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x24(%esp),%ecx
lea    0x50a28be6(%ecx,%eax,1),%ecx
mov    %edi,%eax
not    %eax
or     %esi,%eax
xor    %ebx,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x8(%esp),%ecx
lea    0x50a28be6(%ecx,%edx,1),%ecx
mov    %esi,%edx
not    %edx
or     %ebx,%edx
xor    %eax,%edx
add    %ecx,%edx
mov    $0xc,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x2c(%esp),%ecx
lea    0x50a28be6(%ecx,%edi,1),%edi
mov    %ebx,%ecx
not    %ecx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x6,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
lea    0x5c4dd124(%ebp,%esi,1),%esi
mov    %eax,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ebp
and    %edx,%ecx
or     %ebp,%ecx
mov    0x28(%esp),%ebp
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
lea    0x5c4dd124(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edx,%ebp
and    %edi,%ecx
or     %ebp,%ecx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x8(%esp),%ecx
mov    %ebx,%ebp
and    %edi,%ebp
lea    0x5c4dd124(%ecx,%eax,1),%ecx
mov    %edi,%eax
not    %eax
and    %esi,%eax
or     %ebp,%eax
mov    0x18(%esp),%ebp
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x5c4dd124(%ebp,%edx,1),%ecx
mov    %esi,%edx
mov    %eax,%ebp
not    %edx
and    %esi,%ebp
and    %ebx,%edx
or     %ebp,%edx
mov    (%esp),%ebp
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
lea    0x5c4dd124(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edx,%ebp
and    %ebx,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x30(%esp),%ebp
add    %ecx,%edi
mov    $0xc,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
lea    0x5c4dd124(%ebp,%esi,1),%esi
mov    %eax,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ebp
and    %edx,%ecx
or     %ebp,%ecx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x10(%esp),%ecx
mov    %edx,%ebp
not    %ebp
lea    0x5c4dd124(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ecx
and    %edx,%ebp
or     %ebp,%ecx
mov    0x24(%esp),%ebp
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x5c4dd124(%ebp,%eax,1),%ecx
mov    %edi,%eax
mov    %ebx,%ebp
not    %eax
and    %edi,%ebp
and    %esi,%eax
or     %ebp,%eax
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x34(%esp),%ecx
mov    %eax,%ebp
and    %esi,%ebp
lea    0x5c4dd124(%ecx,%edx,1),%ecx
mov    %esi,%edx
not    %edx
and    %ebx,%edx
or     %ebp,%edx
mov    0x38(%esp),%ebp
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
lea    0x5c4dd124(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edx,%ebp
and    %ebx,%ebp
and    %eax,%ecx
or     %ebp,%ecx
add    %ecx,%edi
mov    $0x7,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x1c(%esp),%ecx
mov    %eax,%ebp
not    %ebp
lea    0x5c4dd124(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    %edi,%ebp
and    %edx,%ecx
and    %eax,%ebp
or     %ebp,%ecx
mov    0x2c(%esp),%ebp
add    %ecx,%esi
mov    $0xc,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
lea    0x5c4dd124(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edx,%ebp
and    %edi,%ecx
or     %ebp,%ecx
mov    0xc(%esp),%ebp
add    %ecx,%ebx
mov    $0x7,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x5c4dd124(%ebp,%eax,1),%ecx
mov    %edi,%eax
mov    %ebx,%ebp
not    %eax
and    %edi,%ebp
and    %esi,%eax
or     %ebp,%eax
mov    0x20(%esp),%ebp
add    %ecx,%eax
mov    $0x6,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x5c4dd124(%ebp,%edx,1),%ecx
mov    %esi,%edx
mov    %eax,%ebp
not    %edx
and    %esi,%ebp
and    %ebx,%edx
or     %ebp,%edx
add    %ecx,%edx
mov    $0xf,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x3c(%esp),%ecx
mov    %ebx,%ebp
not    %ebp
lea    0x5c4dd124(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    %edx,%ebp
and    %eax,%ecx
and    %ebx,%ebp
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%edi
mov    $0xd,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
lea    0x5c4dd124(%ebp,%esi,1),%esi
mov    %eax,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edi,%ebp
and    %edx,%ecx
and    %eax,%ebp
or     %ebp,%ecx
mov    %edi,%ebp
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
not    %ebp
rol    %cl,%edx
mov    0x38(%esp),%ecx
add    %ebx,%esi
lea    0x6d703ef3(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x10(%esp),%ecx
lea    0x6d703ef3(%ecx,%eax,1),%ecx
mov    %esi,%eax
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0x7,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x3c(%esp),%ecx
mov    %eax,%ebp
not    %ebp
lea    0x6d703ef3(%ecx,%edx,1),%ecx
mov    %ebx,%edx
not    %edx
or     %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xf,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x8(%esp),%ecx
lea    0x6d703ef3(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    0x18(%esp),%ebp
or     %edx,%ecx
xor    %ebx,%ecx
add    %ecx,%edi
mov    $0xb,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%esi,1),%esi
mov    %edx,%ebp
not    %ebp
rol    %cl,%eax
mov    %ebp,%ecx
mov    %edi,%ebp
or     %edi,%ecx
not    %ebp
xor    %eax,%ecx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x34(%esp),%ecx
lea    0x6d703ef3(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
mov    0x20(%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x6,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x14(%esp),%ecx
lea    0x6d703ef3(%ecx,%eax,1),%ecx
mov    %esi,%eax
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0x6,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x6d703ef3(%ebp,%edx,1),%ecx
mov    %ebx,%edx
not    %edx
mov    %eax,%ebp
or     %eax,%edx
not    %ebp
xor    %esi,%edx
add    %ecx,%edx
mov    $0xe,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x28(%esp),%ecx
lea    0x6d703ef3(%ecx,%edi,1),%edi
mov    %ebp,%ecx
or     %edx,%ecx
mov    %edx,%ebp
xor    %ebx,%ecx
not    %ebp
add    %ecx,%edi
mov    $0xc,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x1c(%esp),%ecx
lea    0x6d703ef3(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    0x2c(%esp),%ebp
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%esi
mov    $0xd,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%ebx,1),%ebx
mov    %edi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
mov    0x4(%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x6d703ef3(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    (%esp),%ebp
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x24(%esp),%ecx
lea    0x6d703ef3(%ecx,%edx,1),%ecx
mov    %ebx,%edx
not    %edx
or     %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
add    %edi,%edx
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%edi,1),%edi
mov    %eax,%ebp
not    %ebp
rol    %cl,%ebx
mov    %ebp,%ecx
mov    0xc(%esp),%ebp
or     %edx,%ecx
xor    %ebx,%ecx
add    %ecx,%edi
mov    $0xd,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%esi,1),%esi
mov    %edx,%ebp
not    %ebp
rol    %cl,%eax
mov    %ebp,%ecx
mov    0x30(%esp),%ebp
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%esi
mov    $0x7,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%ebx,1),%ebx
mov    %edi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x1c(%esp),%ecx
mov    %ebx,%ebp
and    %esi,%ebp
lea    0x7a6d76e9(%ecx,%eax,1),%ecx
mov    %ebx,%eax
not    %eax
and    %edi,%eax
or     %ebp,%eax
mov    0x14(%esp),%ebp
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
add    %edx,%eax
mov    $0xa,%cl
rol    %cl,%esi
lea    0x7a6d76e9(%ebp,%edx,1),%ecx
mov    %eax,%edx
mov    %eax,%ebp
not    %edx
and    %ebx,%ebp
and    %esi,%edx
or     %ebp,%edx
mov    0xc(%esp),%ebp
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
add    %edi,%edx
mov    $0xa,%cl
lea    0x7a6d76e9(%ebp,%edi,1),%edi
mov    %edx,%ebp
not    %ebp
rol    %cl,%ebx
mov    %ebp,%ecx
mov    %edx,%ebp
and    %eax,%ebp
and    %ebx,%ecx
or     %ebp,%ecx
add    %ecx,%edi
mov    $0x8,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x3c(%esp),%ecx
mov    %edi,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x8(%esp),%ecx
mov    %esi,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edx,%ecx
and    %edi,%ebp
or     %ebp,%ecx
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x28(%esp),%ecx
mov    %ebx,%ebp
and    %esi,%ebp
lea    0x7a6d76e9(%ecx,%eax,1),%ecx
mov    %ebx,%eax
not    %eax
and    %edi,%eax
or     %ebp,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x38(%esp),%ecx
mov    %eax,%ebp
and    %ebx,%ebp
lea    0x7a6d76e9(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
and    %esi,%edx
or     %ebp,%edx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    (%esp),%ecx
mov    %edx,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    %edx,%ebp
and    %ebx,%ecx
and    %eax,%ebp
or     %ebp,%ecx
add    %ecx,%edi
mov    $0xe,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x10(%esp),%ecx
mov    %edi,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
mov    0x2c(%esp),%ebp
add    %ecx,%esi
mov    $0x6,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x7a6d76e9(%ebp,%ebx,1),%ebx
mov    %esi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ebp
and    %edx,%ecx
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
add    %eax,%ebx
mov    $0xa,%cl
rol    %cl,%edi
lea    0x7a6d76e9(%ebp,%eax,1),%ecx
mov    %ebx,%eax
mov    %ebx,%ebp
not    %eax
and    %esi,%ebp
and    %edi,%eax
or     %ebp,%eax
mov    0x30(%esp),%ebp
add    %ecx,%eax
mov    $0xc,%ecx
rol    %cl,%eax
add    %edx,%eax
mov    $0xa,%cl
rol    %cl,%esi
lea    0x7a6d76e9(%ebp,%edx,1),%ecx
mov    %eax,%edx
mov    %eax,%ebp
not    %edx
and    %ebx,%ebp
and    %esi,%edx
or     %ebp,%edx
mov    0x20(%esp),%ebp
add    %ecx,%edx
mov    $0x9,%ecx
rol    %cl,%edx
add    %edi,%edx
mov    $0xa,%cl
lea    0x7a6d76e9(%ebp,%edi,1),%ebp
mov    %edx,%edi
not    %edi
rol    %cl,%ebx
mov    %edi,%ecx
mov    %edx,%edi
and    %eax,%edi
and    %ebx,%ecx
or     %edi,%ecx
mov    0x18(%esp),%edi
add    %ecx,%ebp
mov    $0xc,%ecx
rol    %cl,%ebp
add    %esi,%ebp
mov    $0xa,%cl
lea    0x7a6d76e9(%edi,%esi,1),%esi
mov    %ebp,%edi
not    %edi
rol    %cl,%eax
mov    %edi,%ecx
mov    %ebp,%edi
and    %edx,%edi
and    %eax,%ecx
or     %edi,%ecx
mov    0x24(%esp),%edi
add    %ecx,%esi
mov    $0x5,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x7a6d76e9(%edi,%ebx,1),%ebx
mov    %esi,%edi
not    %edi
rol    %cl,%edx
mov    %edi,%ecx
mov    %esi,%edi
and    %ebp,%edi
and    %edx,%ecx
or     %edi,%ecx
mov    0x34(%esp),%edi
add    %ecx,%ebx
mov    $0xf,%ecx
rol    %cl,%ebx
add    %eax,%ebx
mov    $0xa,%cl
lea    0x7a6d76e9(%edi,%eax,1),%edi
mov    %ebx,%eax
rol    %cl,%ebp
not    %eax
mov    %ebx,%ecx
and    %esi,%ecx
and    %ebp,%eax
or     %ecx,%eax
mov    $0x8,%ecx
add    %eax,%edi
mov    %ebx,%eax
rol    %cl,%edi
add    %edx,%edi
mov    $0xa,%cl
add    0x2c(%esp),%edx
xor    %edi,%eax
rol    %cl,%esi
xor    %esi,%eax
mov    $0x8,%cl
add    %eax,%edx
mov    %edi,%eax
rol    %cl,%edx
add    %ebp,%edx
mov    $0xa,%cl
add    0x38(%esp),%ebp
xor    %edx,%eax
rol    %cl,%ebx
xor    %ebx,%eax
mov    $0x5,%cl
add    %eax,%ebp
mov    %edx,%eax
rol    %cl,%ebp
add    %esi,%ebp
mov    $0xa,%cl
add    0x24(%esp),%esi
xor    %ebp,%eax
rol    %cl,%edi
xor    %edi,%eax
mov    $0xc,%cl
add    %eax,%esi
mov    %ebp,%eax
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
add    0xc(%esp),%ebx
xor    %esi,%eax
rol    %cl,%edx
xor    %edx,%eax
mov    $0x9,%cl
add    %eax,%ebx
mov    %esi,%eax
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
add    0x3c(%esp),%edi
xor    %ebx,%eax
rol    %cl,%ebp
xor    %ebp,%eax
mov    $0xc,%cl
add    %eax,%edi
mov    %ebx,%eax
rol    %cl,%edi
add    %edx,%edi
mov    $0xa,%cl
add    0x10(%esp),%edx
xor    %edi,%eax
rol    %cl,%esi
xor    %esi,%eax
mov    $0x5,%cl
add    %eax,%edx
mov    %edi,%eax
rol    %cl,%edx
add    %ebp,%edx
mov    $0xa,%cl
add    0x1c(%esp),%ebp
xor    %edx,%eax
rol    %cl,%ebx
mov    $0xe,%cl
xor    %ebx,%eax
add    %eax,%ebp
mov    %edx,%eax
rol    %cl,%ebp
mov    $0xa,%cl
add    %esi,%ebp
rol    %cl,%edi
add    0x18(%esp),%esi
xor    %ebp,%eax
xor    %edi,%eax
mov    $0x6,%cl
add    %eax,%esi
mov    $0xa,%eax
rol    %cl,%esi
mov    %eax,%ecx
add    %ebx,%esi
rol    %cl,%edx
add    0x14(%esp),%ebx
mov    %ebp,%ecx
xor    %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x8,%ecx
rol    %cl,%ebx
mov    %eax,%ecx
add    %edi,%ebx
rol    %cl,%ebp
add    0x4(%esp),%edi
mov    %esi,%ecx
xor    %ebx,%ecx
xor    %ebp,%ecx
add    %ecx,%edi
mov    $0xd,%ecx
rol    %cl,%edi
mov    %eax,%ecx
add    %edx,%edi
rol    %cl,%esi
add    0x30(%esp),%edx
mov    %ebx,%ecx
xor    %edi,%ecx
xor    %esi,%ecx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    %eax,%ecx
add    %ebp,%edx
rol    %cl,%ebx
add    0x34(%esp),%ebp
mov    %edi,%ecx
xor    %edx,%ecx
xor    %ebx,%ecx
add    %ecx,%ebp
mov    $0x5,%ecx
rol    %cl,%ebp
mov    %eax,%ecx
add    %esi,%ebp
rol    %cl,%edi
add    (%esp),%esi
mov    %edx,%ecx
xor    %ebp,%ecx
xor    %edi,%ecx
add    %ecx,%esi
mov    $0xf,%ecx
rol    %cl,%esi
mov    %eax,%ecx
add    %ebx,%esi
rol    %cl,%edx
add    0x8(%esp),%ebx
mov    %ebp,%ecx
xor    %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    %eax,%ecx
add    %edi,%ebx
rol    %cl,%ebp
add    0x20(%esp),%edi
mov    %esi,%ecx
xor    %ebx,%ecx
xor    %ebp,%ecx
add    %ecx,%edi
mov    $0xb,%ecx
rol    %cl,%edi
mov    %eax,%ecx
add    %edx,%edi
rol    %cl,%esi
add    0x28(%esp),%edx
mov    %ebx,%ecx
xor    %edi,%ecx
xor    %esi,%ecx
add    %ecx,%edx
mov    $0xb,%ecx
rol    %cl,%edx
mov    %eax,%ecx
rol    %cl,%ebx
mov    0x50(%esp),%ecx
add    0x70(%esp),%esi
add    0x58(%esp),%esi
mov    %esi,0x4(%ecx)
mov    0x68(%esp),%eax
mov    0x64(%esp),%esi
add    %ebp,%eax
add    0x40(%esp),%eax
mov    %eax,0x8(%ecx)
lea    (%esi,%ebp,1),%eax
add    0x44(%esp),%eax
add    0x48(%esp),%ebx
add    0x5c(%esp),%ebx
add    %eax,%edx
mov    0x6c(%esp),%eax
mov    %edx,0xc(%ecx)
mov    %ebx,(%ecx)
add    %esi,%eax
add    0x4c(%esp),%eax
add    %eax,%edi
mov    %edi,0x10(%ecx)
add    $0x74,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    0x58(%eax),%edx
lea    0x18(%eax),%ebp
cmp    $0x40,%edx
je     8055dab <error+0x22cb>
test   %edi,%edi
je     8055dc8 <error+0x22e8>
mov    0x58(%ebx),%edx
test   %edx,%edx
je     8055dd0 <error+0x22f0>
test   %esi,%esi
je     8055da2 <error+0x22c2>
cmp    $0x3f,%edx
jg     8055e50 <error+0x2370>
lea    -0x40(%edx,%esi,1),%eax
lea    0x1(%edx),%ecx
mov    %eax,0xc(%esp)
jmp    8055d8d <error+0x22ad>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmp    0xc(%esp),%esi
je     8055e50 <error+0x2370>
add    $0x1,%edi
sub    $0x1,%esi
mov    %ecx,0x58(%ebx)
movzbl -0x1(%edi),%eax
mov    %ecx,%edx
mov    %al,0x17(%ebx,%ecx,1)
jne    8055d80 <error+0x22a0>
xor    %edi,%edi
xor    %esi,%esi
cmp    $0x40,%edx
jne    8055d58 <error+0x2278>
mov    %ebp,%edx
mov    %ebx,%eax
call   8054690 <error+0xbb0>
addl   $0x1,0x14(%ebx)
test   %edi,%edi
movl   $0x0,0x58(%ebx)
jne    8055d5c <error+0x227c>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,0xc(%esp)
mov    0xc(%esp),%eax
mov    %edi,%ebp
cmp    $0x3f,%eax
mov    %eax,%esi
mov    %eax,%ecx
jbe    8055e1a <error+0x233a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edx
mov    %ebx,%eax
sub    $0x40,%esi
add    $0x40,%ebp
call   8054690 <error+0xbb0>
addl   $0x1,0x14(%ebx)
cmp    $0x3f,%esi
movl   $0x0,0x58(%ebx)
ja     8055de8 <error+0x2308>
mov    0xc(%esp),%esi
mov    %esi,%ecx
sub    $0x40,%esi
and    $0xffffffc0,%esi
and    $0x3f,%ecx
lea    0x40(%edi,%esi,1),%edi
test   %ecx,%ecx
je     8055dc8 <error+0x22e8>
mov    0x58(%ebx),%edx
cmp    $0x3f,%edx
jg     8055dc8 <error+0x22e8>
lea    0x1(%edx),%eax
add    %edx,%ecx
sub    %edx,%edi
jmp    8055e38 <error+0x2358>
nop
add    $0x1,%eax
cmp    $0x41,%eax
je     8055dc8 <error+0x22e8>
mov    %eax,0x58(%ebx)
movzbl -0x1(%edi,%eax,1),%edx
cmp    %ecx,%eax
mov    %dl,0x17(%ebx,%eax,1)
jne    8055e30 <error+0x2350>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ecx,%ecx
xor    %edx,%edx
mov    %ebx,%eax
mov    %esi,0xc(%esp)
call   8055d40 <error+0x2260>
jmp    8055dd4 <error+0x22f4>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x88(%esp),%ecx
mov    0x84(%esp),%edx
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    %esp,%eax
mov    0x80(%esp),%ebx
movl   $0x67452301,(%esp)
movl   $0xefcdab89,0x4(%esp)
movl   $0x98badcfe,0x8(%esp)
movl   $0x10325476,0xc(%esp)
movl   $0xc3d2e1f0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x58(%esp)
call   8055d40 <error+0x2260>
xor    %ecx,%ecx
xor    %edx,%edx
mov    %esp,%eax
call   8055d40 <error+0x2260>
mov    0x14(%esp),%edx
xor    %eax,%eax
mov    %edx,%ebp
shl    $0x6,%ebp
cmp    %ebp,%edx
seta   %al
shr    $0x1a,%edx
add    %eax,%edx
mov    0x58(%esp),%eax
add    %eax,%ebp
lea    0x0(,%ebp,8),%esi
adc    $0x0,%edx
cmp    %ebp,%esi
adc    $0x0,%edx
shr    $0x1d,%ebp
lea    0x1(%eax),%ecx
add    %edx,%ebp
cmp    $0x37,%eax
movb   $0x80,0x18(%esp,%eax,1)
lea    0x19(%esp,%eax,1),%eax
mov    %ecx,0x58(%esp)
jg     8055fe0 <error+0x2500>
cmp    $0x38,%ecx
lea    0x50(%esp),%edx
je     8055f4a <error+0x246a>
lea    0x0(%esi),%esi
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    8055f38 <error+0x2458>
movl   $0x38,0x58(%esp)
lea    0x18(%esp),%edx
mov    %esi,%eax
mov    %al,0x50(%esp)
mov    %esi,%eax
shr    $0x8,%eax
mov    %al,0x51(%esp)
mov    %esi,%eax
shr    $0x10,%eax
mov    %al,0x52(%esp)
mov    %esi,%eax
shr    $0x18,%eax
mov    %al,0x53(%esp)
mov    %ebp,%eax
mov    %al,0x54(%esp)
mov    %ebp,%eax
shr    $0x8,%eax
mov    %al,0x55(%esp)
mov    %esp,%eax
movb   $0x0,0x56(%esp)
movb   $0x0,0x57(%esp)
call   8054690 <error+0xbb0>
mov    0x10(%esp),%eax
mov    (%esp),%ebp
mov    0x4(%esp),%esi
mov    0x8(%esp),%ecx
mov    %eax,0x28(%esp)
mov    0xc(%esp),%edx
mov    %eax,0x10(%ebx)
mov    0x5c(%esp),%eax
xor    %gs:0x14,%eax
mov    %ebp,0x18(%esp)
mov    %esi,0x1c(%esp)
mov    %ecx,0x20(%esp)
mov    %edx,0x24(%esp)
mov    %ebp,(%ebx)
mov    %esi,0x4(%ebx)
mov    %ecx,0x8(%ebx)
mov    %edx,0xc(%ebx)
jne    8056021 <error+0x2541>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%ecx
lea    0x58(%esp),%edx
jg     8056002 <error+0x2522>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    8055ff0 <error+0x2510>
movl   $0x40,0x58(%esp)
xor    %ecx,%ecx
xor    %edx,%edx
mov    %esp,%eax
call   8055d40 <error+0x2260>
lea    0x18(%esp),%edx
mov    $0xe,%ecx
xor    %eax,%eax
mov    %edx,%edi
rep stos %eax,%es:(%edi)
jmp    8055f4e <error+0x246e>
call   8049f80 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e560,%edi
mov    (%edi),%esi
test   %esi,%esi
je     8056121 <error+0x2641>
mov    %edi,0xc(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x6,%eax
mov    $0x805a957,%ebp
mov    $0x805a9e0,%ebx
jmp    805607d <error+0x259d>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebx
mov    (%ebx),%ebp
test   %ebp,%ebp
je     8056148 <error+0x2668>
mov    %ebp,(%esp)
call   804a260 <strlen@plt>
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    8056068 <error+0x2588>
mov    0xc(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     80560b3 <error+0x25d3>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    80560a0 <error+0x25c0>
mov    0xc(%esp),%eax
mov    (%eax),%esi
subl   $0x4,0xc(%esp)
addl   $0x4,0xc(%esp)
test   %esi,%esi
jne    8056050 <error+0x2570>
mov    (%edi),%ebx
test   %ebx,%ebx
je     8056121 <error+0x2641>
nop
mov    $0x5,%eax
mov    $0x805a95e,%esi
mov    $0x805a9c0,%ebp
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a5b0 <strncmp@plt>
test   %eax,%eax
jne    8056130 <error+0x2650>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     8056130 <error+0x2650>
mov    (%edi),%ebx
test   %ebx,%ebx
je     8056117 <error+0x2637>
mov    %edi,%eax
nop
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    8056108 <error+0x2628>
mov    (%edi),%ebx
sub    $0x4,%edi
add    $0x4,%edi
test   %ebx,%ebx
jne    80560c8 <error+0x25e8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
mov    0x0(%ebp),%esi
test   %esi,%esi
je     8056154 <error+0x2674>
mov    %esi,(%esp)
call   804a260 <strlen@plt>
jmp    80560d7 <error+0x25f7>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
jmp    80560b8 <error+0x25d8>
mov    0x4(%edi),%ebx
jmp    805611a <error+0x263a>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
call   8049f90 <getuid@plt>
test   %eax,%eax
jne    80561d0 <error+0x26f0>
call   8049fb0 <geteuid@plt>
test   %eax,%eax
jne    80561d0 <error+0x26f0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a320 <getgid@plt>
mov    %eax,%esi
call   804a050 <getegid@plt>
cmp    %eax,%esi
jne    80561d0 <error+0x26f0>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3,(%esp)
call   804a3d0 <prctl@plt>
test   %eax,%eax
je     80561d0 <error+0x26f0>
mov    %ebx,0x30(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804a140 <getenv@plt>
xchg   %ax,%ax
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x1c8,%esp
mov    0x805e544,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x1bc(%esp)
xor    %eax,%eax
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
cmp    $0xffffffff,%ebx
movl   $0x0,0x30(%esp)
je     8056238 <error+0x2758>
mov    0x1bc(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    80562bf <error+0x27df>
add    $0x1c8,%esp
pop    %ebx
ret
nop
lea    0x36(%esp),%eax
mov    %eax,(%esp)
call   8049f70 <uname@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8056258 <error+0x2778>
movl   $0x0,0x805e544
00
xor    %ebx,%ebx
jmp    8056219 <error+0x2739>
lea    0x30(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0xb8(%esp),%eax
movl   $0x805aa18,0x4(%esp)
mov    %eax,(%esp)
call   804a4e0 <sscanf@plt>
sub    $0x1,%eax
cmp    $0x2,%eax
ja     80562b0 <error+0x27d0>
mov    0x28(%esp),%ebx
mov    0x2c(%esp),%eax
shl    $0x10,%ebx
shl    $0x8,%eax
add    %eax,%ebx
add    0x30(%esp),%ebx
mov    %ebx,0x805e544
jmp    8056219 <error+0x2739>
xchg   %ax,%ax
movl   $0x0,0x805e544
00
jmp    8056219 <error+0x2739>
call   8049f80 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x28,%esp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   804a540 <lseek64@plt>
xor    %eax,%eax
test   %edx,%edx
js     8056314 <error+0x2834>
lea    0x1f(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049da0 <read@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edi,%edi
push   %esi
mov    $0x400,%esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
jmp    8056364 <error+0x2884>
lea    0x0(%esi),%esi
jb     805634f <error+0x286f>
cmp    $0xfffffffe,%esi
ja     8056388 <error+0x28a8>
mov    %esi,%eax
mov    %edi,%edx
shld   $0x1,%esi,%edx
add    %esi,%eax
mov    %esi,(%esp)
mov    %eax,%esi
mov    %edi,0x4(%esp)
mov    %edx,%edi
mov    %esi,%edx
mov    %edi,%ecx
mov    %ebx,%eax
call   80562d0 <error+0x27f0>
test   %eax,%eax
je     8056398 <error+0x28b8>
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     8056410 <error+0x2930>
cmp    $0x7fffffff,%edi
jbe    8056348 <error+0x2868>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
jmp    8056359 <error+0x2879>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    %edx,0x4(%esp)
jb     80563dd <error+0x28fd>
jbe    80563d8 <error+0x28f8>
xor    %edx,%edx
xor    %ecx,%ecx
mov    %ebx,%eax
call   80562d0 <error+0x27f0>
mov    (%esp),%eax
mov    0x4(%esp),%edx
add    $0x1,%eax
adc    $0x0,%edx
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmp    %eax,(%esp)
jae    80563b6 <error+0x28d6>
mov    (%esp),%esi
mov    %ebx,%eax
mov    0x4(%esp),%edi
add    0x8(%esp),%esi
adc    0xc(%esp),%edi
shrd   $0x1,%edi,%esi
shr    %edi
mov    %esi,%edx
mov    %edi,%ecx
call   80562d0 <error+0x27f0>
test   %eax,%eax
je     8056398 <error+0x28b8>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
jmp    80563a0 <error+0x28c0>
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    $0xffffffff,%eax
pop    %ebx
mov    $0xffffffff,%edx
pop    %esi
pop    %edi
ret
jmp    8056430 <error+0x2950>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x80(%esp),%esi
mov    0x84(%esp),%ebx
call   80561e0 <error+0x2700>
lea    -0x20412(%eax),%edx
cmp    $0xed,%edx
jbe    8056498 <error+0x29b8>
cmp    $0x205ff,%eax
jg     8056498 <error+0x29b8>
lea    0x10(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x1260,0x4(%esp)
mov    %esi,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     80564c0 <error+0x29e0>
mov    0x10(%esp),%eax
xor    %edx,%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,(%ebx)
xor    %eax,%eax
mov    %edx,0x4(%ebx)
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,0x8(%esp)
movl   $0x80041272,0x4(%esp)
mov    %esi,(%esp)
call   804a060 <ioctl@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
js     805645e <error+0x297e>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x801c0204,0x4(%esp)
mov    %esi,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     80564f8 <error+0x2a18>
mov    0x10(%esp),%eax
movl   $0x0,0x4(%ebx)
shl    $0x9,%eax
mov    %eax,(%ebx)
add    $0x70,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804a0a0 <__fxstat64@plt>
mov    0x20(%esp),%edx
and    $0xf000,%edx
test   %eax,%eax
jne    8056522 <error+0x2a42>
cmp    $0x8000,%edx
je     8056547 <error+0x2a67>
cmp    $0x6000,%edx
mov    $0xffffffff,%eax
jne    805648e <error+0x29ae>
mov    %esi,(%esp)
call   8056320 <error+0x2840>
mov    %eax,(%ebx)
xor    %eax,%eax
mov    %edx,0x4(%ebx)
jmp    805648e <error+0x29ae>
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %esi,(%ebx)
mov    %edi,0x4(%ebx)
jmp    805648e <error+0x29ae>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8056430 <error+0x2950>
test   %eax,%eax
jne    80565a0 <error+0x2ac0>
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%ecx
mov    0x34(%esp),%edx
shrd   $0x9,%ebx,%ecx
shr    $0x9,%ebx
mov    %ecx,(%edx)
mov    %ebx,0x4(%edx)
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    8056594 <error+0x2ab4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x1268,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
add    $0x1c,%esp
sar    $0x1f,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x127b,0x4(%esp)
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
add    $0x1c,%esp
sar    $0x1f,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x127a,0x4(%esp)
mov    %eax,(%esp)
call   804a060 <ioctl@plt>
test   %eax,%eax
js     8056648 <error+0x2b68>
mov    0x1c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
test   %edx,%edx
movl   $0x0,0x2c(%esp)
je     80566e0 <error+0x2c00>
test   %eax,%eax
mov    %eax,%esi
je     80566e0 <error+0x2c00>
movl   $0x0,0x4(%esp)
mov    %ecx,%edi
mov    %edx,(%esp)
call   8049d80 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     80566e0 <error+0x2c00>
mov    0x805f660,%eax
test   %eax,%eax
je     8056760 <error+0x2c80>
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049f30 <blkid_probe_set_device@plt>
test   %eax,%eax
je     80566f0 <error+0x2c10>
mov    %ebx,(%esp)
call   804a620 <close@plt>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     80566e0 <error+0x2c00>
mov    %eax,(%esp)
call   804a360 <__strdup@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x805f660,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049e50 <blkid_probe_enable_superblocks@plt>
mov    0x805f660,%eax
movl   $0x2a,0x4(%esp)
mov    %eax,(%esp)
call   804a110 <blkid_probe_set_superblocks_flags@plt>
mov    0x805f660,%eax
mov    %eax,(%esp)
call   8049ef0 <blkid_do_safeprobe@plt>
test   %edi,%edi
je     8056735 <error+0x2c55>
xor    %edx,%edx
cmp    $0xfffffffe,%eax
sete   %dl
mov    %edx,(%edi)
test   %eax,%eax
jne    80566bd <error+0x2bdd>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x805f660,%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049dd0 <blkid_probe_lookup_value@plt>
jmp    80566bd <error+0x2bdd>
nop
call   804a310 <blkid_new_probe@plt>
test   %eax,%eax
mov    %eax,0x805f660
je     80566bd <error+0x2bdd>
jmp    805668d <error+0x2bad>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x0,0x805f664
00
movl   $0x0,0x805f660
00
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805f660,%eax
test   %eax,%eax
je     80567b4 <error+0x2cd4>
mov    %eax,(%esp)
call   804a440 <blkid_free_probe@plt>
mov    0x805f664,%eax
test   %eax,%eax
je     80567c5 <error+0x2ce5>
mov    %eax,(%esp)
call   8049f20 <blkid_put_cache@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
movl   $0x0,(%esi)
movl   $0x0,(%edi)
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
call   804a240 <strchr@plt>
test   %eax,%eax
je     8056820 <error+0x2d40>
mov    %edi,0x28(%esp)
mov    %esi,0x24(%esp)
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804a350 <blkid_parse_tag_string@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x805f664,0x4(%esp)
mov    %eax,(%esp)
call   8049e70 <blkid_evaluate_spec@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804a040 <blkid_known_fstype@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
xor    %ecx,%ecx
mov    $0x805a36d,%eax
jmp    8056650 <error+0x2b70>
mov    0x4(%esp),%edx
xor    %ecx,%ecx
mov    $0x805a373,%eax
jmp    8056650 <error+0x2b70>
mov    0x4(%esp),%edx
xor    %ecx,%ecx
mov    $0x805aa21,%eax
jmp    8056650 <error+0x2b70>
mov    0x8(%esp),%ecx
mov    $0x805aa21,%eax
mov    0x4(%esp),%edx
jmp    8056650 <error+0x2b70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x805f664,0x8(%esp)
movl   $0x805a373,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <blkid_evaluate_tag@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x805f664,0x8(%esp)
movl   $0x805a36d,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <blkid_evaluate_tag@plt>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80569ac <error+0x2ecc>
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
lea    0x1(,%eax,4),%eax
mov    %eax,(%esp)
call   804a170 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     80569ac <error+0x2ecc>
mov    %eax,%ecx
jmp    805694d <error+0x2e6d>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    %esi,%ecx
movzbl (%ebx),%edx
movsbl %dl,%esi
cmp    $0x20,%esi
je     8056978 <error+0x2e98>
lea    -0x9(%edx),%eax
cmp    $0x1,%al
jbe    8056978 <error+0x2e98>
cmp    $0x5c,%esi
je     8056978 <error+0x2e98>
mov    %dl,(%ecx)
lea    0x1(%ecx),%esi
cmpb   $0x0,(%ebx)
jne    8056948 <error+0x2e68>
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movb   $0x5c,(%ecx)
movsbl (%ebx),%eax
lea    0x4(%ecx),%esi
and    $0xc0,%eax
sar    $0x6,%eax
add    $0x30,%eax
mov    %al,0x1(%ecx)
movzbl (%ebx),%eax
and    $0x38,%eax
sar    $0x3,%eax
add    $0x30,%eax
mov    %al,0x2(%ecx)
movzbl (%ebx),%eax
and    $0x7,%eax
add    $0x30,%eax
mov    %al,0x3(%ecx)
jmp    8056948 <error+0x2e68>
xor    %eax,%eax
jmp    8056970 <error+0x2e90>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18,%esp
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8056a5b <error+0x2f7b>
mov    0x30(%esp),%eax
xor    %ebx,%ebx
mov    0x34(%esp),%edi
mov    %ebx,(%esp)
add    $0x1,%eax
sub    $0x1,%edi
jmp    80569e5 <error+0x2f05>
addl   $0x1,(%esp)
add    $0x1,%ecx
mov    %dl,-0x1(%eax)
add    $0x1,%eax
movzbl (%ecx),%edx
lea    -0x1(%eax),%esi
test   %dl,%dl
je     8056a58 <error+0x2f78>
cmp    %edi,(%esp)
jae    8056a58 <error+0x2f78>
cmp    $0x5c,%dl
jne    80569d8 <error+0x2ef8>
mov    (%esp),%esi
add    $0x4,%esi
cmp    %esi,%edi
jbe    80569d8 <error+0x2ef8>
movzbl 0x1(%ecx),%ebx
mov    %bl,0x7(%esp)
and    $0xfffffff8,%ebx
cmp    $0x30,%bl
jne    80569d8 <error+0x2ef8>
movzbl 0x2(%ecx),%ebx
mov    %bl,0x8(%esp)
and    $0xfffffff8,%ebx
cmp    $0x30,%bl
jne    80569d8 <error+0x2ef8>
movzbl 0x3(%ecx),%ebp
mov    %ebp,%ebx
and    $0xfffffff8,%ebx
cmp    $0x30,%bl
jne    80569d8 <error+0x2ef8>
mov    0x8(%esp),%ebx
add    $0x4,%ecx
movzbl 0x7(%esp),%edx
mov    %esi,(%esp)
and    $0x7,%ebx
lea    (%ebx,%edx,8),%ebx
mov    %ebp,%edx
and    $0x7,%edx
lea    (%edx,%ebx,8),%edx
mov    %dl,-0x1(%eax)
jmp    80569e2 <error+0x2f02>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%esi)
add    $0x18,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%ecx
test   %ebx,%ebx
je     8056ae0 <error+0x3000>
movzbl (%ebx),%eax
test   $0xdf,%al
je     8056ae9 <error+0x3009>
cmp    $0x9,%al
mov    %ebx,%eax
jne    8056a9d <error+0x2fbd>
nop
jmp    8056af2 <error+0x3012>
lea    0x0(%esi),%esi
cmp    $0x9,%dl
je     8056aa8 <error+0x2fc8>
add    $0x1,%eax
movzbl (%eax),%edx
test   $0xdf,%dl
jne    8056a98 <error+0x2fb8>
mov    %eax,%edi
sub    %ebx,%edi
add    $0x1,%edi
test   %ecx,%ecx
je     8056ab5 <error+0x2fd5>
mov    %eax,(%ecx)
cmp    %eax,%ebx
je     8056ae0 <error+0x3000>
mov    %edi,(%esp)
call   804a170 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8056ae0 <error+0x3000>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80569b0 <error+0x2ed0>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %ebx,%eax
mov    $0x1,%edi
jmp    8056aaf <error+0x2fcf>
mov    $0x1,%edi
jmp    8056aaf <error+0x2fcf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e560,%edi
mov    (%edi),%ecx
test   %ecx,%ecx
je     8056bb0 <error+0x30d0>
xor    %eax,%eax
add    $0x1,%eax
mov    (%edi,%eax,4),%edx
test   %edx,%edx
jne    8056b18 <error+0x3038>
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   804a170 <malloc@plt>
test   %eax,%eax
mov    %eax,0x805e560
je     8056b6f <error+0x308f>
mov    (%edi),%edx
test   %edx,%edx
je     8056bba <error+0x30da>
mov    %eax,%esi
xor    %ecx,%ecx
xor    %ebx,%ebx
jmp    8056b5f <error+0x307f>
add    $0x1,%ebx
mov    (%edi,%ebx,4),%edx
lea    0x0(,%ebx,4),%ecx
test   %edx,%edx
je     8056b78 <error+0x3098>
mov    0x805e560,%esi
mov    %edx,(%esp)
add    %ecx,%esi
call   804a360 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%esi)
jne    8056b48 <error+0x3068>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x805e560,%eax
movl   $0x0,(%eax,%ecx,1)
mov    0x24(%esp),%eax
mov    -0x4(%edi,%ebx,4),%ebx
mov    %eax,0x805f66c
mov    %ebx,(%esp)
call   804a260 <strlen@plt>
mov    0x24(%esp),%edi
add    %ebx,%eax
sub    (%edi),%eax
mov    %eax,0x805f668
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    $0x4,%eax
jmp    8056b29 <error+0x3049>
movl   $0x0,(%eax)
mov    0x24(%esp),%eax
mov    0x24(%esp),%edi
mov    %eax,0x805f66c
mov    0x20(%esp),%eax
mov    -0x4(%edi,%eax,4),%ebx
jmp    8056b91 <error+0x30b1>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x830,%esp
mov    %gs:0x14,%eax
mov    %eax,0x82c(%esp)
xor    %eax,%eax
mov    0x805f66c,%eax
mov    0x840(%esp),%esi
mov    0x844(%esp),%ebx
test   %eax,%eax
je     8056c2c <error+0x314c>
mov    %esi,(%esp)
call   804a260 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%edi
call   804a260 <strlen@plt>
lea    0x5(%edi,%eax,1),%eax
cmp    $0x800,%eax
jbe    8056c50 <error+0x3170>
mov    0x82c(%esp),%eax
xor    %gs:0x14,%eax
jne    8056cf5 <error+0x3215>
add    $0x830,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,0x14(%esp)
lea    0x2c(%esp),%ebx
mov    %esi,0x10(%esp)
movl   $0x805aa26,0xc(%esp)
movl   $0x800,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a680 <__sprintf_chk@plt>
mov    %ebx,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8056c7e <error+0x319e>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
mov    0x805f668,%eax
sbb    $0x3,%edx
sub    %ebx,%edx
lea    -0x1(%eax),%ecx
cmp    %ecx,%edx
jl     8056cbf <error+0x31df>
movb   $0x0,0x2a(%esp,%eax,1)
mov    0x805f66c,%esi
mov    (%esi),%edx
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804a330 <memset@plt>
mov    %ebx,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804a0f0 <strcpy@plt>
movl   $0x0,0x4(%esi)
jmp    8056c2c <error+0x314c>
call   8049f80 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
mov    0x54(%esp),%eax
test   %esi,%esi
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
je     8056e1a <error+0x333a>
movzbl (%esi),%ebx
test   %bl,%bl
je     8056e1a <error+0x333a>
mov    %esi,0x2c(%esp)
call   804a670 <__ctype_b_loc@plt>
mov    (%eax),%edi
lea    0x1(%esi),%eax
jmp    8056d4b <error+0x326b>
nop
mov    %eax,0x2c(%esp)
add    $0x1,%eax
movzbl -0x1(%eax),%ebx
movzbl %bl,%edx
testb  $0x20,0x1(%edi,%edx,2)
jne    8056d40 <error+0x3260>
cmp    $0x2d,%bl
je     8056e1a <error+0x333a>
movl   $0x0,0x2c(%esp)
call   804a390 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049ec0 <__strtoull_internal@plt>
mov    0x2c(%esp),%ecx
cmp    %esi,%ecx
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
je     8056e1a <error+0x333a>
mov    (%edi),%ebx
test   %ebx,%ebx
je     8056dc0 <error+0x32e0>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    $0xffffffff,%edx
jb     8056dc0 <error+0x32e0>
cmp    $0xfffffffd,%eax
ja     8056e1a <error+0x333a>
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     8056dcb <error+0x32eb>
movzbl (%ecx),%eax
test   %al,%al
jne    8056de8 <error+0x3308>
xor    %eax,%eax
mov    0x54(%esp),%esi
mov    0x14(%esp),%ebx
mov    0x10(%esp),%ecx
mov    %ebx,0x4(%esi)
mov    %ecx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movzbl 0x1(%ecx),%edx
cmp    $0x69,%dl
je     8056e10 <error+0x3330>
cmp    $0x42,%dl
je     8056e27 <error+0x3347>
test   %dl,%dl
jne    8056e1a <error+0x333a>
mov    $0x400,%esi
sub    $0x45,%eax
cmp    $0x2f,%al
ja     8056e1a <error+0x333a>
movzbl %al,%eax
jmp    *0x805aa30(,%eax,4)
cmpb   $0x42,0x2(%ecx)
je     8057315 <error+0x3835>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x2(%ecx)
jne    8056e1a <error+0x333a>
mov    $0x3e8,%esi
jmp    8056dff <error+0x331f>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     8056eb0 <error+0x33d0>
jb     8056e69 <error+0x3389>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x6,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jae    8057325 <error+0x3845>
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    $0xfffffffe,%eax
jmp    8056dcd <error+0x32ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     8056eb0 <error+0x33d0>
jb     8056eef <error+0x340f>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8056eb0 <error+0x33d0>
ja     8056f27 <error+0x3447>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8056eb0 <error+0x33d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8056eb0 <error+0x33d0>
ja     8056f67 <error+0x3487>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8056eb0 <error+0x33d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
jb     8056fa7 <error+0x34c7>
mov    0x18(%esp),%eax
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
imul   %esi,%edx
imul   %edi,%eax
lea    (%eax,%edx,1),%ebp
mov    %ecx,%eax
mul    %esi
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %edx,0x14(%esp)
add    %ebp,0x14(%esp)
jmp    8056dcd <error+0x32ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     8056eb0 <error+0x33d0>
jb     8057010 <error+0x3530>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8056eb0 <error+0x33d0>
ja     8057050 <error+0x3570>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8056eb0 <error+0x33d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8056eb0 <error+0x33d0>
ja     8056fa7 <error+0x34c7>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8056eb0 <error+0x33d0>
jmp    8056fa7 <error+0x34c7>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     8056eb0 <error+0x33d0>
jb     80570d6 <error+0x35f6>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x5,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jb     8056ea8 <error+0x33c8>
ja     8057121 <error+0x3641>
cmp    %eax,0x1c(%esp)
jb     8056ea8 <error+0x33c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    805710d <error+0x362d>
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %edx,0x14(%esp)
jmp    8056dcd <error+0x32ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
ja     8056eb0 <error+0x33d0>
jb     8056fa7 <error+0x34c7>
jmp    8056f9d <error+0x34bd>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebp
ja     8056eb0 <error+0x33d0>
jb     80571ba <error+0x36da>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
imul   %esi,%edx
imul   %edi,%eax
add    %edx,%eax
mov    %eax,0x18(%esp)
mov    %ecx,%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x14(%esp)
add    %eax,0x14(%esp)
mov    $0x7,%eax
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
nop
cmp    %edx,%ebp
jb     8056ea8 <error+0x33c8>
ja     805720c <error+0x372c>
cmp    %eax,0x1c(%esp)
jb     8056ea8 <error+0x33c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    80571f8 <error+0x3718>
jmp    8057138 <error+0x3658>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     8056eb0 <error+0x33d0>
jb     8057265 <error+0x3785>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x4,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jb     8056ea8 <error+0x33c8>
ja     80572b0 <error+0x37d0>
cmp    %eax,0x1c(%esp)
jb     8056ea8 <error+0x33c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    805729c <error+0x37bc>
jmp    8057138 <error+0x3658>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8057bb0 <error+0x40d0>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     8056eb0 <error+0x33d0>
jb     8057050 <error+0x3570>
cmp    %eax,0x10(%esp)
ja     8056eb0 <error+0x33d0>
lea    0x0(%esi),%esi
jmp    8057050 <error+0x3570>
cmpb   $0x0,0x3(%ecx)
je     8056dfa <error+0x331a>
nop
jmp    8056e1a <error+0x333a>
ja     8057336 <error+0x3856>
cmp    %eax,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
jb     8056ea8 <error+0x33c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    8056ea0 <error+0x33c0>
jmp    8057138 <error+0x3658>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%esi
test   %esi,%esi
je     80573a8 <error+0x38c8>
movzbl (%esi),%ebx
test   %bl,%bl
je     80573a8 <error+0x38c8>
call   804a670 <__ctype_b_loc@plt>
mov    (%eax),%edx
mov    %esi,%eax
jmp    805738c <error+0x38ac>
nop
add    $0x1,%eax
je     80573a8 <error+0x38c8>
movzbl (%eax),%ebx
test   %bl,%bl
je     8057393 <error+0x38b3>
testb  $0x8,0x1(%edx,%ebx,2)
jne    8057380 <error+0x38a0>
cmp    %eax,%esi
jae    80573a8 <error+0x38c8>
cmpb   $0x0,(%eax)
sete   %al
add    $0x4,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x4,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ecx
mov    0x10(%esp),%eax
mov    0x18(%esp),%edx
test   %ecx,%ecx
lea    -0x1(%ecx),%edi
je     80573ef <error+0x390f>
movzbl (%eax),%ecx
test   %cl,%cl
je     80573ef <error+0x390f>
cmp    %dl,%cl
mov    %edx,%esi
je     80573f1 <error+0x3911>
xor    %edx,%edx
jmp    80573e8 <error+0x3908>
nop
movzbl (%eax),%ecx
test   %cl,%cl
je     80573ef <error+0x390f>
mov    %esi,%ebx
add    $0x1,%edx
cmp    %bl,%cl
je     80573f1 <error+0x3911>
add    $0x1,%eax
cmp    %edi,%edx
jne    80573d8 <error+0x38f8>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     805741a <error+0x393a>
cmpb   $0x0,(%ebx)
jne    8057448 <error+0x3968>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    8057473 <error+0x3993>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805aaf0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a460 <errx@plt>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a5f0 <strtol@plt>
mov    (%esi),%edx
test   %edx,%edx
je     8057498 <error+0x39b8>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805aaf0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
je     8057425 <error+0x3945>
test   %edx,%edx
je     80574ad <error+0x39cd>
cmpb   $0x0,(%edx)
jne    8057425 <error+0x3945>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     80574da <error+0x39fa>
cmpb   $0x0,(%ebx)
jne    8057508 <error+0x3a28>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    8057533 <error+0x3a53>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805aaf0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a460 <errx@plt>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a0e0 <strtoll@plt>
mov    (%esi),%ecx
test   %ecx,%ecx
je     8057558 <error+0x3a78>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805aaf0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ecx
cmp    %ecx,%ebx
je     80574e5 <error+0x3a05>
test   %ecx,%ecx
je     805756d <error+0x3a8d>
cmpb   $0x0,(%ecx)
jne    80574e5 <error+0x3a05>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     805759a <error+0x3aba>
cmpb   $0x0,(%ebx)
jne    80575c8 <error+0x3ae8>
call   804a390 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    80575f3 <error+0x3b13>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805aaf0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a460 <errx@plt>
lea    0x0(%esi),%esi
call   804a390 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a230 <strtoul@plt>
mov    (%esi),%edx
test   %edx,%edx
je     8057618 <error+0x3b38>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805aaf0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
je     80575a5 <error+0x3ac5>
test   %edx,%edx
je     805762d <error+0x3b4d>
cmpb   $0x0,(%edx)
jne    80575a5 <error+0x3ac5>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %eax,%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     80576a8 <error+0x3bc8>
cmp    $0xa000,%ecx
je     80577a8 <error+0x3cc8>
cmp    $0x2000,%ecx
je     80577b0 <error+0x3cd0>
cmp    $0x6000,%ecx
je     80577c0 <error+0x3ce0>
cmp    $0xc000,%ecx
je     80577b8 <error+0x3cd8>
cmp    $0x1000,%ecx
je     80577c8 <error+0x3ce8>
cmp    $0x8000,%ecx
jne    80576ab <error+0x3bcb>
movb   $0x2d,(%edx)
jmp    80576ab <error+0x3bcb>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x64,(%edx)
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
je     8057778 <error+0x3c98>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     80577a0 <error+0x3cc0>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x7(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x8(%edx)
je     8057788 <error+0x3ca8>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x9(%edx)
movb   $0x0,0xa(%edx)
ret
lea    0x0(%esi),%esi
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80576f0 <error+0x3c10>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x9(%edx)
movb   $0x0,0xa(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    805772e <error+0x3c4e>
movb   $0x6c,(%edx)
jmp    80576ab <error+0x3bcb>
movb   $0x63,(%edx)
jmp    80576ab <error+0x3bcb>
movb   $0x73,(%edx)
jmp    80576ab <error+0x3bcb>
movb   $0x62,(%edx)
jmp    80576ab <error+0x3bcb>
movb   $0x70,(%edx)
jmp    80576ab <error+0x3bcb>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x94(%esp),%esi
testb  $0x2,0x90(%esp)
mov    0x98(%esp),%edi
je     8057a10 <error+0x3f30>
lea    0x47(%esp),%eax
movb   $0x20,0x47(%esp)
lea    0x48(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0xa,%ebx
mov    %ebx,%ecx
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
setne  %dl
sete   %al
shl    %cl,%edx
shl    %cl,%eax
cmp    %edx,%edi
ja     80578a4 <error+0x3dc4>
jae    80578a0 <error+0x3dc0>
mov    %ecx,%ebx
sub    $0xa,%ecx
jne    80578b4 <error+0x3dd4>
mov    %esi,0x2c(%esp)
movb   $0x42,0x0(%ebp)
movb   $0x0,0x1(%ebp)
mov    0x38(%esp),%eax
lea    0x4c(%esp),%ebx
movl   $0x805ab0d,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
call   8049d10 <__snprintf_chk@plt>
mov    %ebx,(%esp)
call   804a360 <__strdup@plt>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    8057a3a <error+0x3f5a>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %eax,%esi
jb     805782e <error+0x3d4e>
add    $0xa,%ecx
cmp    $0x46,%ecx
jne    8057817 <error+0x3d37>
mov    %ecx,%ebx
mov    $0x3c,%cl
mov    %ecx,%eax
mov    $0x66666667,%edx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
movzbl 0x805aafb(%edx),%eax
mov    %edi,%edx
mov    %al,0x3f(%esp)
mov    %esi,%eax
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     80578e2 <error+0x3e02>
mov    %edx,%eax
xor    %edx,%edx
mov    %eax,0x2c(%esp)
xor    %eax,%eax
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,%ecx
movzbl 0x3f(%esp),%eax
and    %esi,%ecx
and    %edi,%edx
testb  $0x1,0x90(%esp)
mov    %ecx,0x30(%esp)
lea    0x1(%ebp),%ecx
mov    %edx,0x34(%esp)
mov    %al,0x0(%ebp)
jne    80579f8 <error+0x3f18>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
movb   $0x0,(%ecx)
mov    %edx,%edi
or     %eax,%edi
je     8057841 <error+0x3d61>
lea    -0x14(%ebx),%ecx
xor    %ebx,%ebx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebx,%edx
add    $0x32,%eax
adc    $0x0,%edx
movl   $0x64,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8057bb0 <error+0x40d0>
mov    %eax,%edi
xor    $0xa,%eax
or     %edx,%eax
mov    %edx,%ebx
je     8057a20 <error+0x3f40>
mov    %edx,%eax
or     %edi,%eax
je     8057841 <error+0x3d61>
call   804a520 <localeconv@plt>
test   %eax,%eax
xchg   %ax,%ax
je     8057a30 <error+0x3f50>
mov    (%eax),%ecx
test   %ecx,%ecx
je     8057a30 <error+0x3f50>
cmpb   $0x0,(%ecx)
mov    $0x805aaf9,%eax
cmove  %eax,%ecx
mov    0x38(%esp),%eax
mov    %ebx,0x20(%esp)
lea    0x4c(%esp),%ebx
mov    %edi,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x24(%esp)
mov    0x2c(%esp),%eax
movl   $0x805ab03,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049d10 <__snprintf_chk@plt>
jmp    805787d <error+0x3d9d>
cmp    $0x42,%al
je     8057924 <error+0x3e44>
movb   $0x69,0x1(%ebp)
lea    0x3(%ebp),%ecx
movb   $0x42,0x2(%ebp)
jmp    8057924 <error+0x3e44>
lea    0x47(%esp),%eax
mov    %eax,0x38(%esp)
mov    %eax,%ebp
jmp    8057810 <error+0x3d30>
nop
addl   $0x1,0x2c(%esp)
jmp    8057841 <error+0x3d61>
lea    0x0(%esi),%esi
mov    $0x805aaf9,%ecx
jmp    80579ab <error+0x3ecb>
call   8049f80 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
test   %edx,%edx
je     8057af0 <error+0x4010>
movzbl (%edx),%eax
test   %al,%al
je     8057af0 <error+0x4010>
mov    0x34(%esp),%esi
test   %esi,%esi
je     8057af0 <error+0x4010>
mov    0x38(%esp),%ebx
test   %ebx,%ebx
je     8057af0 <error+0x4010>
mov    0x3c(%esp),%ecx
test   %ecx,%ecx
je     8057af0 <error+0x4010>
mov    %edx,%ebx
xor    %ebp,%ebp
xor    %edi,%edi
jmp    8057a94 <error+0x3fb4>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
test   %al,%al
je     8057adf <error+0x3fff>
test   %edx,%edx
cmove  %ebx,%edx
cmp    $0x2c,%al
mov    %edi,%esi
cmove  %ebx,%esi
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%eax
cmove  %eax,%esi
test   %esi,%esi
je     8057ada <error+0x3ffa>
cmp    %esi,%edx
jae    8057af0 <error+0x4010>
mov    %esi,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *0x3c(%esp)
cmp    $0xffffffff,%eax
je     8057af0 <error+0x4010>
mov    0x34(%esp),%ecx
lea    0x1(%ebp),%edx
cmp    %edx,0x38(%esp)
mov    %eax,(%ecx,%ebp,4)
jbe    8057afd <error+0x401d>
cmpb   $0x0,(%esi)
mov    %edx,%ebp
je     8057adf <error+0x3fff>
xor    %edx,%edx
add    $0x1,%ebx
jne    8057a88 <error+0x3fa8>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0xfffffffe,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
test   %ebx,%ebx
je     8057ba7 <error+0x40c7>
mov    0x38(%esp),%eax
test   %eax,%eax
je     8057ba7 <error+0x40c7>
test   %esi,%esi
je     8057ba7 <error+0x40c7>
xor    %eax,%eax
xor    %edi,%edi
nop
movzbl (%ebx),%ecx
test   %cl,%cl
je     8057b90 <error+0x40b0>
test   %eax,%eax
mov    %edi,%ebp
cmove  %ebx,%eax
cmp    $0x2c,%cl
cmove  %ebx,%ebp
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%ecx
cmove  %ecx,%ebp
test   %ebp,%ebp
je     8057b8b <error+0x40ab>
cmp    %ebp,%eax
jae    8057b9a <error+0x40ba>
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   *0x38(%esp)
mov    %eax,%ecx
test   %ecx,%ecx
js     8057b92 <error+0x40b2>
sar    $0x3,%eax
and    $0x7,%ecx
mov    $0x1,%edx
shl    %cl,%edx
or     %dl,(%esi,%eax,1)
cmpb   $0x0,0x0(%ebp)
je     8057b90 <error+0x40b0>
xor    %eax,%eax
add    $0x1,%ebx
jne    8057b38 <error+0x4058>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffea,%eax
jmp    8057b92 <error+0x40b2>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    8057c00 <error+0x4120>
cmp    %ebp,%ecx
ja     8057c38 <error+0x4158>
test   %ecx,%ecx
mov    %ecx,%esi
jne    8057be8 <error+0x4108>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     8057c28 <error+0x4148>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8057c48 <error+0x4168>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    8057cb8 <error+0x41d8>
cmp    %edx,%eax
jb     8057cb8 <error+0x41d8>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     8057cc8 <error+0x41e8>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8057ca9 <error+0x41c9>
cmp    (%esp),%esi
je     8057cc8 <error+0x41e8>
mov    %edi,%eax
xor    %edx,%edx
jmp    8057c2c <error+0x414c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    8057c2c <error+0x414c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804b510 <fchmod@plt+0xe80>
add    $0x6315,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x10c(%ebx),%esi
call   8049cb8 <_init>
lea    -0x110(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8057d39 <error+0x4259>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x110(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8057d18 <error+0x4238>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8057d50 <error+0x4270>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b510 <fchmod@plt+0xe80>
add    $0x629a,%ebx
sub    $0x18,%esp
lea    0x284(%ebx),%eax
test   %eax,%eax
je     8057d98 <error+0x42b8>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a120 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    8057d7b <error+0x429b>
push   %ebx
sub    $0x8,%esp
call   804b510 <fchmod@plt+0xe80>
add    $0x625b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
das
jo     8057e3d <_IO_stdin_used+0x79>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    8057e35 <_IO_stdin_used+0x71>
insb   (%dx),%es:(%edi)
data16
das
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8057e45 <_IO_stdin_used+0x81>
je     8057e42 <_IO_stdin_used+0x7e>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %ch,(%edi)
fs
gs
jbe    8057e11 <_IO_stdin_used+0x4d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8057de7 <_IO_stdin_used+0x23>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8057e29 <_IO_stdin_used+0x65>
add    %cl,0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
cmp    $0x49555500,%eax
inc    %esp
cmp    $0x646a2500,%eax
add    %ch,0x6f(%esi)
fs
gs
jbe    8057e24 <_IO_stdin_used+0x60>
and    $0xa235e5b,%eax
pop    %ebp
or     (%eax),%al
and    %ah,0x20235e5b
or     0xa(%ebp),%bl
add    %ch,(%edi)
jo     8057e8b <_IO_stdin_used+0xc7>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     8057e8a <_IO_stdin_used+0xc6>
insl   (%dx),%es:(%edi)
jae    8057e28 <_IO_stdin_used+0x64>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x6e6f2073
and    %ah,0x74200073
jns    8057eaa <_IO_stdin_used+0xe6>
and    %ah,%gs:0x28200073
and    $0x20002973,%eax
pop    %ebx
and    $0x2c005d73,%eax
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    8057ebf <_IO_stdin_used+0xfb>
je     8057ec8 <_IO_stdin_used+0x104>
add    %dh,0x77(%edx)
add    %dh,0x6f(%edx)
add    %dh,0x73(%ebp)
gs
jb     8057e9e <_IO_stdin_used+0xda>
add    %ah,0x6f6d2f73
jne    8057ed7 <_IO_stdin_used+0x113>
je     8057e99 <_IO_stdin_used+0xd5>
and    $0x6f6d0073,%eax
jne    8057ee0 <_IO_stdin_used+0x11c>
je     8057eae <_IO_stdin_used+0xea>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8057e9c <_IO_stdin_used+0xd8>
jae    8057ee3 <_IO_stdin_used+0x11f>
je     8057ea0 <_IO_stdin_used+0xdc>
jne    8057ef5 <_IO_stdin_used+0x131>
gs
jb     8057ea5 <_IO_stdin_used+0xe1>
imul   $0x6e007325,0x20(%edx,%edi,1),%esp
data16
jae    8057e90 <_IO_stdin_used+0xcc>
sub    $0x662d0073,%eax
add    %ch,0x762d006e
add    %ch,0x742d006f
add    %ch,0x6f(%ebp)
jne    8057f14 <_IO_stdin_used+0x150>
je     8057ee2 <_IO_stdin_used+0x11e>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8057ed0 <_IO_stdin_used+0x10c>
outsw  %ds:(%esi),(%dx)
jb     8057f1f <_IO_stdin_used+0x15b>
cmp    (%eax),%ah
and    $0x220073,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
popaw
imul   $0x3d6469,0x75(%eax,%eax,1),%ebp
imul   $0x63736600,0x3d(%si),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8057f38 <_IO_stdin_used+0x174>
js     8057f49 <_IO_stdin_used+0x185>
cmp    $0x66656400,%eax
arpl   %bp,0x6e(%edi)
je     8057f44 <_IO_stdin_used+0x180>
js     8057f55 <_IO_stdin_used+0x191>
cmp    $0x6f6f7200,%eax
je     8057f4b <_IO_stdin_used+0x187>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8057f51 <_IO_stdin_used+0x18d>
js     8057f62 <_IO_stdin_used+0x19e>
cmp    $0x74652f00,%eax
arpl   %bp,(%edi)
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     8057f63 <_IO_stdin_used+0x19f>
insl   (%dx),%es:(%edi)
jae    8057f01 <_IO_stdin_used+0x13d>
addr16 jne 8057f69 <_IO_stdin_used+0x1a5>
jae    8057f79 <_IO_stdin_used+0x1b5>
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%ebp)
jne    8057f81 <_IO_stdin_used+0x1bd>
je     8057f4f <_IO_stdin_used+0x18b>
and    %dh,0x70(%ebx)
arpl   %di,%gs:(%edx)
and    %ah,(%eax)
and    0xa2273,%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8057f95 <_IO_stdin_used+0x1d1>
je     8057f63 <_IO_stdin_used+0x19f>
and    %ch,0x6f(%esi)
fs cmp %fs:%gs:(%eax),%ah
and    %ah,(%edx)
and    $0xa2273,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8057fa9 <_IO_stdin_used+0x1e5>
je     8057f77 <_IO_stdin_used+0x1b3>
and    %dh,0x70(%ecx,%edi,2)
gs
jae    8057f7e <_IO_stdin_used+0x1ba>
and    %ah,(%edx)
and    $0xa2273,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8057fbd <_IO_stdin_used+0x1f9>
je     8057f8b <_IO_stdin_used+0x1c7>
and    %ch,0x70(%edi)
je     8057fc9 <_IO_stdin_used+0x205>
cmp    (%eax),%ah
and    %ah,(%edx)
and    $0xa2273,%eax
das
fs
gs
jbe    8057f93 <_IO_stdin_used+0x1cf>
add    %ch,0x6f(%ebp)
jne    8057fd7 <_IO_stdin_used+0x213>
je     8057fa5 <_IO_stdin_used+0x1e1>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8057f93 <_IO_stdin_used+0x1cf>
jae    8057fda <_IO_stdin_used+0x216>
je     8057f97 <_IO_stdin_used+0x1d3>
jae    8057fe9 <_IO_stdin_used+0x225>
gs gs cmp %fs:%gs:(%eax),%ah
and    $0x6f6c0073,%eax
inc    %eax
add    %ch,0x6f(%ebp)
jne    8057ff7 <_IO_stdin_used+0x233>
je     8057fc5 <_IO_stdin_used+0x201>
and    %dh,0x70(%ecx,%edi,2)
and    %dh,%gs:0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x69777420,0x64(%ebp),%esp
arpl   %sp,0x0(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058013 <_IO_stdin_used+0x24f>
je     8057fe1 <_IO_stdin_used+0x21d>
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %ch,0x6f(%edi,%ebp,2)
jo     8057ff1 <_IO_stdin_used+0x22d>
and    $0x65730073,%eax
arpl   %bp,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
add    %dh,0x70(%ebp,%ebp,2)
data16
jae    8057fc6 <_IO_stdin_used+0x202>
jne    8058036 <_IO_stdin_used+0x272>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
gs add %dh,%fs:%gs:0x77(%ebx)
popa
jo     8057fd5 <_IO_stdin_used+0x211>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x20(%ecx)
ja     8058049 <_IO_stdin_used+0x285>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x79(%edx,%esi,2)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x54000a73
jb     805806c <_IO_stdin_used+0x2a8>
imul   $0xa732520,0x67(%esi),%ebp
add    %ch,(%edi)
gs
je     8058062 <_IO_stdin_used+0x29e>
das
insl   (%dx),%es:(%edi)
je     8058064 <_IO_stdin_used+0x2a0>
bound  %eax,(%eax)
popa
sub    (%eax),%eax
jb     8058079 <_IO_stdin_used+0x2b5>
outsl  %ds:(%esi),(%dx)
je     805800d <_IO_stdin_used+0x249>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805807f <_IO_stdin_used+0x2bb>
je     805804d <_IO_stdin_used+0x289>
and    %ah,0x72(%ebp)
jb     8058087 <_IO_stdin_used+0x2c3>
jb     805803a <_IO_stdin_used+0x276>
ja     805808e <_IO_stdin_used+0x2ca>
imul   $0x73252067,0x6e(%ecx,%ebp,2),%esi
cmp    (%eax),%ah
and    $0x6f6d0073,%eax
jne    805809b <_IO_stdin_used+0x2d7>
je     8058069 <_IO_stdin_used+0x2a5>
and    %ch,0x6f(%ebp)
jne    80580a2 <_IO_stdin_used+0x2de>
je     8058056 <_IO_stdin_used+0x292>
popaw
imul   $0x756f6d00,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
je     805807d <_IO_stdin_used+0x2b9>
and    %dh,0x65(%eax)
jb     80580b5 <_IO_stdin_used+0x2f1>
imul   $0x206e6f69,0x73(%ebx),%esi
fs outsb %fs:%gs:(%esi),(%dx)
imul   $0x756f6d00,0x64(%ebp),%esp
outsb  %ds:(%esi),(%dx)
je     8058096 <_IO_stdin_used+0x2d2>
and    %ah,0x73692073
and    %ah,0x75(%edx)
jae    80580e0 <_IO_stdin_used+0x31c>
add    %ch,(%edi)
jo     80580dd <_IO_stdin_used+0x319>
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
das
jo     80580e3 <_IO_stdin_used+0x31f>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jbe    80580db <_IO_stdin_used+0x317>
jb     80580eb <_IO_stdin_used+0x327>
imul   $0x756f6d00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
je     80580bc <_IO_stdin_used+0x2f8>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
popa
insb   (%dx),%es:(%edi)
jb     80580f1 <_IO_stdin_used+0x32d>
popa
fs
jns    80580b0 <_IO_stdin_used+0x2ec>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058102 <_IO_stdin_used+0x33e>
je     80580fb <_IO_stdin_used+0x337>
add    %ch,%fs:0x6f(%ebp)
jne    805810a <_IO_stdin_used+0x346>
je     80580be <_IO_stdin_used+0x2fa>
je     8058101 <_IO_stdin_used+0x33d>
bound  %ebp,0x20(%ebp,%eiz,2)
data16
jne    8058113 <_IO_stdin_used+0x34f>
insb   (%dx),%es:(%edi)
add    %ch,0x6f(%ebp)
jne    805811b <_IO_stdin_used+0x357>
je     80580e9 <_IO_stdin_used+0x325>
and    %ah,0x75203a73
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x756f6d00,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
je     8058103 <_IO_stdin_used+0x33f>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x62(%ecx)
insb   (%dx),%es:(%edi)
jns    80580f3 <_IO_stdin_used+0x32f>
jns    8058144 <_IO_stdin_used+0x380>
jne    80580f7 <_IO_stdin_used+0x333>
insl   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
je     80580fd <_IO_stdin_used+0x339>
and    $0x73690073,%eax
outsl  %ds:(%esi),(%dx)
add    %ch,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
cmp    %esi,(%esi)
xor    %al,%ss:(%eax)
jbe    8058154 <_IO_stdin_used+0x390>
popa
je     80580f1 <_IO_stdin_used+0x32d>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x64,(%eax),%esp
gs
jbe    8058164 <_IO_stdin_used+0x3a0>
arpl   %sp,0x20(%ebp)
add    %ch,0x6f(%ebp)
jne    8058171 <_IO_stdin_used+0x3ad>
je     805813f <_IO_stdin_used+0x37b>
and    %ch,0x6f(%esi)
and    %ch,0x65(%ebp)
imul   $0x756f6620,%fs:0x6d(%ebp),%esi
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%edi)
and    %ah,0x6f6d0073
jne    805818e <_IO_stdin_used+0x3ca>
je     805815c <_IO_stdin_used+0x398>
and    %ah,0x69660073
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
add    %ah,0x69(%ebx)
data16
jae    8058133 <_IO_stdin_used+0x36f>
jne    805819e <_IO_stdin_used+0x3da>
fs
cmp    $0x72657375,%eax
jne    80581a6 <_IO_stdin_used+0x3e2>
add    %dh,%fs:0x69(%ebp)
fs
cmp    $0x67007525,%eax
imul   $0x67726573,0x75(%ebp,%edi,1),%esp
imul   $0x253d6469,0x67(%eax,%eax,1),%esp
jne    8058159 <_IO_stdin_used+0x395>
das
das
add    %dh,0x6d(%ebx)
bound  %esp,0x73(%esi)
add    %bh,(%ecx)
jo     8058165 <_IO_stdin_used+0x3a1>
das
jne    80581db <_IO_stdin_used+0x417>
jb     8058199 <_IO_stdin_used+0x3d5>
jae    80581d4 <_IO_stdin_used+0x410>
popa
jb     80581d4 <_IO_stdin_used+0x410>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebp)
imul   $0x78756e69,0x6c(%ebp,%ebp,1),%ebp
add    %ch,(%edi)
fs
gs
jbe    80581b6 <_IO_stdin_used+0x3f2>
outsb  %ds:(%esi),(%dx)
jne    80581f6 <_IO_stdin_used+0x432>
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebp)
imul   $0x78756e69,0x6c(%ebp,%ebp,1),%ebp
and    %dh,(%edx)
xor    %cs:(%eax),%dh
xor    %eax,%cs:(%eax)
popa
inc    %edx
inc    %si
push   $0x6c3a6b69
dec    %esp
cmp    0x6e(%ebp),%cl
outsl  %ds:(%esi),(%dx)
cmp    0x3a(%edi),%cl
jo     80581eb <_IO_stdin_used+0x427>
jb     8058205 <_IO_stdin_used+0x441>
jae    805820a <_IO_stdin_used+0x446>
cmp    0x56(%esi),%dh
ja     805822e <_IO_stdin_used+0x46a>
cmp    (%eax),%al
das
gs
je     8058223 <_IO_stdin_used+0x45f>
das
data16
jae    8058238 <_IO_stdin_used+0x474>
popa
bound  %eax,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058239 <_IO_stdin_used+0x475>
je     8058207 <_IO_stdin_used+0x443>
and    %ah,0x73(%esi)
je     8058233 <_IO_stdin_used+0x46f>
bound  %esp,(%eax)
jo     8058237 <_IO_stdin_used+0x473>
je     8058240 <_IO_stdin_used+0x47c>
cmp    (%eax),%ah
and    0xa2273,%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058252 <_IO_stdin_used+0x48e>
je     8058220 <_IO_stdin_used+0x45c>
and    %ch,0x74(%ebp)
popa
bound  %esp,(%eax)
jo     805824f <_IO_stdin_used+0x48b>
je     8058258 <_IO_stdin_used+0x494>
cmp    (%eax),%ah
and    %ah,(%edx)
and    $0xa2273,%eax
das
gs
je     8058260 <_IO_stdin_used+0x49c>
das
insl   (%dx),%es:(%edi)
je     8058262 <_IO_stdin_used+0x49e>
bound  %edi,0x0(%esi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058276 <_IO_stdin_used+0x4b2>
je     8058244 <_IO_stdin_used+0x480>
and    %ch,0x63(%edi,%ebp,2)
imul   $0x70,(%eax),%esp
popa
je     805827c <_IO_stdin_used+0x4b8>
cmp    (%eax),%ah
and    %ah,(%edx)
and    $0xa2273,%eax
das
gs
je     8058284 <_IO_stdin_used+0x4c0>
das
insl   (%dx),%es:(%edi)
je     8058286 <_IO_stdin_used+0x4c2>
bound  %ebp,(%esi)
je     8058296 <_IO_stdin_used+0x4d2>
jo     805822b <_IO_stdin_used+0x467>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805829d <_IO_stdin_used+0x4d9>
je     805826b <_IO_stdin_used+0x4a7>
and    %dh,0x6d(%ebp,%eiz,2)
jo     8058257 <_IO_stdin_used+0x493>
jo     805829a <_IO_stdin_used+0x4d6>
je     80582a3 <_IO_stdin_used+0x4df>
cmp    (%eax),%ah
and    %ah,(%edx)
and    $0xa2273,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80582b6 <_IO_stdin_used+0x4f2>
je     8058284 <_IO_stdin_used+0x4c0>
and    %dl,0x49(%ebp)
inc    %esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6d000a75
outsl  %ds:(%esi),(%dx)
jne    80582cd <_IO_stdin_used+0x509>
je     805829b <_IO_stdin_used+0x4d7>
and    %ah,0x55(%ebp)
dec    %ecx
inc    %esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x6d000a75,%eax
outsl  %ds:(%esi),(%dx)
jne    80582e4 <_IO_stdin_used+0x520>
je     80582b2 <_IO_stdin_used+0x4ee>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    805829e <_IO_stdin_used+0x4da>
jb     80582ef <_IO_stdin_used+0x52b>
outsl  %ds:(%esi),(%dx)
je     80582a3 <_IO_stdin_used+0x4df>
arpl   %sp,0x6e(%ecx)
and    %ah,0x20(%edi,%ebp,2)
je     80582f4 <_IO_stdin_used+0x530>
popa
je     805828f <_IO_stdin_used+0x4cb>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
popa
jne    8058308 <_IO_stdin_used+0x544>
outsl  %ds:(%esi),(%dx)
add    %ch,0x66(%edi)
data16
jae    8058300 <_IO_stdin_used+0x53c>
je     80582da <_IO_stdin_used+0x516>
add    %ah,(%ebx)
and    $0x61770078,%eax
imul   $0x6f6e0064,0x69(%eax,%esi,2),%esi
je     8058316 <_IO_stdin_used+0x552>
imul   $0x73617720,0x67(%esi),%ebp
and    %ch,0x6f(%ebp)
jne    8058328 <_IO_stdin_used+0x564>
je     8058321 <_IO_stdin_used+0x55d>
add    %ah,%fs:0x61(%esi)
imul   $0x66,0x0(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jb     8058332 <_IO_stdin_used+0x56e>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     80582cd <_IO_stdin_used+0x509>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6261746d,%eax
add    %dh,0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
add    %dh,0x65(%esi)
jb     8058345 <_IO_stdin_used+0x581>
outsl  %ds:(%esi),(%dx)
jae    805834b <_IO_stdin_used+0x587>
add    %dh,0x65(%edx)
popa
fs
sub    $0x74697277,%eax
add    %ch,%gs:0x70(%edi)
je     805835f <_IO_stdin_used+0x59b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80582fa <_IO_stdin_used+0x536>
je     8058361 <_IO_stdin_used+0x59d>
jae    8058372 <_IO_stdin_used+0x5ae>
sub    $0x7374706f,%eax
add    %dh,0x61(%eax)
jae    805837b <_IO_stdin_used+0x5b7>
sub    $0x6b006466,%eax
gs
jns    8058372 <_IO_stdin_used+0x5ae>
imul   $0x65707974,0x0(%ebx,%esi,2),%esi
jae    805831a <_IO_stdin_used+0x556>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8058383 <_IO_stdin_used+0x5bf>
add    %ah,0x75(%edi)
gs
jae    8058397 <_IO_stdin_used+0x5d3>
sub    $0x79747366,%eax
jo     8058390 <_IO_stdin_used+0x5cc>
add    %dh,0x62(%edx)
imul   $0x6b616d00,0x64(%esi),%ebp
gs
sub    $0x72616873,%eax
gs add %ch,%fs:%gs:0x61(%ebp)
imul   $0x73,0x2d(%ebp),%esp
insb   (%dx),%es:(%edi)
popa
jbe    80583ad <_IO_stdin_used+0x5e9>
add    %ch,0x61(%ebp)
imul   $0x70,0x2d(%ebp),%esp
jb     80583ba <_IO_stdin_used+0x5f6>
jbe    80583b4 <_IO_stdin_used+0x5f0>
je     80583ba <_IO_stdin_used+0x5f6>
add    %ch,0x61(%ebp)
imul   $0x75,0x2d(%ebp),%esp
outsb  %ds:(%esi),(%dx)
bound  %ebp,0x6e(%ecx)
fs
popa
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
popa
imul   $0x72,0x2d(%ebp),%esp
jae    80583d6 <_IO_stdin_used+0x612>
popa
jb     80583d6 <_IO_stdin_used+0x612>
add    %ch,%fs:0x61(%ebp)
imul   $0x72,0x2d(%ebp),%esp
jae    80583e7 <_IO_stdin_used+0x623>
popa
jbe    80583e3 <_IO_stdin_used+0x61f>
add    %ch,0x61(%ebp)
imul   $0x72,0x2d(%ebp),%esp
jo     80583f9 <_IO_stdin_used+0x635>
imul   $0x6d006574,0x61(%esi),%esi
popa
imul   $0x72,0x2d(%ebp),%esp
jne    8058403 <_IO_stdin_used+0x63f>
bound  %ebp,0x6e(%ecx)
fs
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6f6e6163,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
add    %ch,0x6e(%ecx)
je     8058417 <_IO_stdin_used+0x653>
jb     8058422 <_IO_stdin_used+0x65e>
popa
insb   (%dx),%es:(%edi)
sub    $0x796c6e6f,%eax
add    %dh,0x66(%esi)
jae    80583fd <_IO_stdin_used+0x639>
add    %dh,0x69(%ebx)
jp     805842a <_IO_stdin_used+0x666>
insb   (%dx),%es:(%edi)
imul   $0x65003d74,0x69(%ebp),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %si,0x79(%edx)
jo     8058447 <_IO_stdin_used+0x683>
imul   $0x656b003d,0x6e(%edi),%ebp
jns    805843e <_IO_stdin_used+0x67a>
imul   $0x686f6e00,0x3d(%ebx,%esi,2),%esi
popa
jae    805844f <_IO_stdin_used+0x68b>
jo     805844a <_IO_stdin_used+0x686>
jae    805845e <_IO_stdin_used+0x69a>
add    %dh,0x70(%ebx)
gs
gs
fs
cmp    $0x6d6f6300,%eax
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8058438 <_IO_stdin_used+0x674>
add    %dh,0x68(%ebp)
gs
insb   (%dx),%es:(%edi)
jo     8058467 <_IO_stdin_used+0x6a3>
jb     8058441 <_IO_stdin_used+0x67d>
add    %ch,0x6f(%esi)
gs
js     805846f <_IO_stdin_used+0x6ab>
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    8058485 <_IO_stdin_used+0x6c1>
imul   $0x7665646f,0x6e(%eax,%eax,1),%esp
add    %ah,0x73(%ecx)
jns    805848b <_IO_stdin_used+0x6c7>
arpl   %ax,(%eax)
imul   $0x636e79,%fs:0x73(%edx),%esi
jb     805848e <_IO_stdin_used+0x6ca>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805849b <_IO_stdin_used+0x6d7>
je     805842f <_IO_stdin_used+0x66b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    80584a6 <_IO_stdin_used+0x6e2>
gs
jb     80584a9 <_IO_stdin_used+0x6e5>
add    %ch,0x6f(%esi)
jne    80584ae <_IO_stdin_used+0x6ea>
gs
jb     805843e <_IO_stdin_used+0x67a>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     80584b1 <_IO_stdin_used+0x6ed>
gs
jb     8058446 <_IO_stdin_used+0x682>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
addr16 jb 80584ba <_IO_stdin_used+0x6f6>
jne    80584bd <_IO_stdin_used+0x6f9>
add    %bl,0x6e(%edi)
gs
je     80584b7 <_IO_stdin_used+0x6f3>
gs
jbe    8058456 <_IO_stdin_used+0x692>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805845e <_IO_stdin_used+0x69a>
jae    80584c9 <_IO_stdin_used+0x705>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8058465 <_IO_stdin_used+0x6a1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80584cd <_IO_stdin_used+0x709>
add    %ch,0x6f(%esi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x6f(%esi)
popa
je     80584df <_IO_stdin_used+0x71b>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
imul   $0x6f697372,0x65(%esi),%esi
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
imul   $0x656d6974,%fs:0x61(%edx),%esi
add    %ch,0x6f(%esi)
jb     80584f8 <_IO_stdin_used+0x734>
insb   (%dx),%es:(%edi)
popa
je     8058500 <_IO_stdin_used+0x73c>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
jae    8058512 <_IO_stdin_used+0x74e>
jb     8058509 <_IO_stdin_used+0x745>
arpl   %si,0x74(%ecx,%eiz,2)
imul   $0x626f6e00,0x65(%ebp),%ebp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058526 <_IO_stdin_used+0x762>
popa
imul   $0x6f697470,0x6f(%eax,%eax,1),%esi
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8058535 <_IO_stdin_used+0x771>
push   $0x67756f72
push   $0x756f6d00
outsb  %ds:(%esi),(%dx)
je     8058508 <_IO_stdin_used+0x744>
and    %ah,0x63(%ecx)
arpl   %bp,0x72(%edi)
imul   $0x206f7420,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
je     8058540 <_IO_stdin_used+0x77c>
bound  %ebp,(%eax,%eiz,1)
and    $0x73692073,%eax
and    %ah,0x6c(%ecx)
jb     8058551 <_IO_stdin_used+0x78d>
popa
fs
jns    8058510 <_IO_stdin_used+0x74c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058562 <_IO_stdin_used+0x79e>
je     805855b <_IO_stdin_used+0x797>
and    %ch,%fs:0x6e(%edi)
and    %ah,0x73
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058572 <_IO_stdin_used+0x7ae>
je     8058540 <_IO_stdin_used+0x77c>
and    %ah,0x63(%ecx)
arpl   %bp,0x72(%edi)
imul   $0x206f7420,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
je     8058578 <_IO_stdin_used+0x7b4>
bound  %ebp,(%eax,%eiz,1)
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    8058592 <_IO_stdin_used+0x7ce>
je     805858b <_IO_stdin_used+0x7c7>
and    %ch,%fs:0x6e(%edi)
and    %ah,0x73
push   %ebp
jae    8058594 <_IO_stdin_used+0x7d0>
cmp    %gs:(%bx,%si),%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80585a9 <_IO_stdin_used+0x7e5>
je     805855d <_IO_stdin_used+0x799>
sub    $0x20202056,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
jo     80585c6 <_IO_stdin_used+0x802>
imul   $0x72657620,0x74(%esi),%ebp
jae    80585c6 <_IO_stdin_used+0x802>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80585d9 <_IO_stdin_used+0x815>
je     805858d <_IO_stdin_used+0x7c9>
sub    $0x20202068,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
jo     80585f6 <_IO_stdin_used+0x832>
imul   $0x69687420,0x74(%esi),%ebp
jae    80585ad <_IO_stdin_used+0x7e9>
push   $0xa706c65
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jne    805860b <_IO_stdin_used+0x847>
je     80585bf <_IO_stdin_used+0x7fb>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ch,0x73(%ecx,%ebp,2)
je     80585d9 <_IO_stdin_used+0x815>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805862b <_IO_stdin_used+0x867>
je     8058624 <_IO_stdin_used+0x860>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8058640 <_IO_stdin_used+0x87c>
jae    805863d <_IO_stdin_used+0x879>
gs
insl   (%dx),%es:(%edi)
jae    80585d7 <_IO_stdin_used+0x813>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jne    8058646 <_IO_stdin_used+0x882>
je     80585fa <_IO_stdin_used+0x836>
sub    $0x2020206c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
imul   $0x6e69202c,0x6d(%ebp,%eiz,2),%esp
arpl   %bp,0x64(%ebp,%esi,2)
imul   $0x6c6f7620,0x67(%esi),%ebp
jne    8058671 <_IO_stdin_used+0x8ad>
and    %ch,%gs:0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
jae    8058617 <_IO_stdin_used+0x853>
push   %ebx
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
jb     8058634 <_IO_stdin_used+0x870>
je     805867e <_IO_stdin_used+0x8ba>
and    %ch,%gs:0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     805868b <_IO_stdin_used+0x8c7>
popa
je     805868a <_IO_stdin_used+0x8c6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
jb     805869e <_IO_stdin_used+0x8da>
and    %cl,%cs:0x65(%esi)
js     80586a4 <_IO_stdin_used+0x8e0>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6f(%ebp)
jne    80586a7 <_IO_stdin_used+0x8e3>
je     80586a4 <_IO_stdin_used+0x8e0>
outsb  %ds:(%esi),(%dx)
or     %cs:0x68(%si),%dl
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx)
and    %ah,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
jne    80586c1 <_IO_stdin_used+0x8fd>
je     8058675 <_IO_stdin_used+0x8b1>
pop    %ebx
sub    $0x73662074,%eax
je     80586d6 <_IO_stdin_used+0x912>
jo     80586c4 <_IO_stdin_used+0x900>
pop    %ebp
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
je     80586cf <_IO_stdin_used+0x90b>
imul   $0x6d6f7320,0x67(%esi),%ebp
gs
ja     80586d9 <_IO_stdin_used+0x915>
gs
jb     80586d9 <_IO_stdin_used+0x915>
daa
or     %cs:0x74(%ebp,%eiz,2),%al
popa
imul   $0x6e756f66,0x20(%ebx,%esi,2),%ebp
and    %ch,%fs:0x6e(%ecx)
and    %ch,(%edi)
gs
je     80586ef <_IO_stdin_used+0x92b>
das
data16
jae    8058704 <_IO_stdin_used+0x940>
popa
bound  %esp,(%eax)
insl   (%dx),%es:(%edi)
popa
jns    80586b7 <_IO_stdin_used+0x8f3>
bound  %esp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
imul   $0x200a2e64,0x65(%esp,%esi,2),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805871c <_IO_stdin_used+0x958>
je     80586d0 <_IO_stdin_used+0x90c>
sub    $0x2d5b2061,%eax
je     8058733 <_IO_stdin_used+0x96f>
sub    $0x2e205d4f,%eax
cs and %ah,%cs:(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ch,0x6f(%ebp)
jne    8058737 <_IO_stdin_used+0x973>
je     80586eb <_IO_stdin_used+0x927>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
jne    8058739 <_IO_stdin_used+0x975>
data16
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,(%edi)
gs
je     8058741 <_IO_stdin_used+0x97d>
das
data16
jae    8058756 <_IO_stdin_used+0x992>
popa
bound  %ecx,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jne    805875e <_IO_stdin_used+0x99a>
je     8058712 <_IO_stdin_used+0x94e>
fs
gs
jbe    805875f <_IO_stdin_used+0x99b>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058779 <_IO_stdin_used+0x9b5>
je     805872d <_IO_stdin_used+0x969>
fs
gs
jbe    805877a <_IO_stdin_used+0x9b6>
arpl   %sp,0x20(%ebp)
popa
je     8058737 <_IO_stdin_used+0x973>
je     8058781 <_IO_stdin_used+0x9bd>
and    %ch,%gs:0x6e(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805878e <_IO_stdin_used+0x9ca>
and    %dh,0x6c(%eax)
popa
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jne    80587a0 <_IO_stdin_used+0x9dc>
je     8058754 <_IO_stdin_used+0x990>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805875e <_IO_stdin_used+0x99a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ch,0x6f(%ebp)
jne    80587bb <_IO_stdin_used+0x9f7>
je     805876f <_IO_stdin_used+0x9ab>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x72656820,0x65(%ebx),%esp
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80587da <_IO_stdin_used+0xa16>
je     805878e <_IO_stdin_used+0x9ca>
sub    $0x79742074,%eax
jo     80587da <_IO_stdin_used+0xa16>
and    %ah,0x76(%ebp,%eiz,2)
and    %ah,0x72(%ecx,%ebp,2)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jb     80587ea <_IO_stdin_used+0xa26>
imul   $0x6d207972,0x61(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    80587fe <_IO_stdin_used+0xa3a>
je     80587b2 <_IO_stdin_used+0x9ee>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:0x6f(%esi),%cl
je     8058803 <_IO_stdin_used+0xa3f>
and    %dh,0x61(%eax,%ebp,2)
je     80587c4 <_IO_stdin_used+0xa00>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x65(%edi,%ebp,2)
jae    80587cd <_IO_stdin_used+0xa09>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80587d1 <_IO_stdin_used+0xa0d>
jb     8058818 <_IO_stdin_used+0xa54>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    80587d8 <_IO_stdin_used+0xa14>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805882a <_IO_stdin_used+0xa66>
je     80587de <_IO_stdin_used+0xa1a>
popa
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6e6f202c,0x65(%ebx),%esp
and    %ch,%gs:0x6f(%ebp)
jne    805883e <_IO_stdin_used+0xa7a>
je     8058845 <_IO_stdin_used+0xa81>
or     0x20(%ecx),%ah
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     8058843 <_IO_stdin_used+0xa7f>
insl   (%dx),%es:(%edi)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    8058851 <_IO_stdin_used+0xa8d>
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
sub    %esp,%gs:(%eax)
outsw  %ds:(%esi),(%dx)
jne    8058866 <_IO_stdin_used+0xaa2>
and    %ch,%fs:0x6e(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6e4f0a2e,0x65(%ebx),%esp
and    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ecx)
jae    8058884 <_IO_stdin_used+0xac0>
and    %ch,0x6f(%ebp)
jne    8058888 <_IO_stdin_used+0xac4>
je     805883c <_IO_stdin_used+0xa78>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ecx)
jb     8058888 <_IO_stdin_used+0xac4>
popa
fs
jns    8058847 <_IO_stdin_used+0xa83>
jbe    8058892 <_IO_stdin_used+0xace>
jae    8058894 <_IO_stdin_used+0xad0>
bound  %ebp,0x20(%ebp,%eiz,2)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8058859 <_IO_stdin_used+0xa95>
je     80588ad <_IO_stdin_used+0xae9>
gs and %ah,%gs:0x6c(%ebp)
jae    80588a7 <_IO_stdin_used+0xae3>
ja     80588ac <_IO_stdin_used+0xae8>
gs
jb     80588ac <_IO_stdin_used+0xae8>
cmp    (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jne    80588c2 <_IO_stdin_used+0xafe>
je     8058876 <_IO_stdin_used+0xab2>
sub    $0x6e69622d,%eax
and    %ch,%fs:0x6c(%edi)
fs imul $0x6477656e,%fs:0x20(%edx),%esi
64
imul   $0x6d20726f,0xa(%edx),%esi
outsl  %ds:(%esi),(%dx)
jbe    80588d7 <_IO_stdin_used+0xb13>
and    %ah,0x20(%ecx)
jae    80588ec <_IO_stdin_used+0xb28>
bound  %esi,0x65(%edx,%esi,2)
cmp    %gs:(%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
jne    80588f7 <_IO_stdin_used+0xb33>
je     80588ab <_IO_stdin_used+0xae7>
sub    $0x766f6d2d,%eax
and    %ch,%gs:0x6c(%edi)
fs imul $0x6477656e,%fs:0x20(%edx),%esi
64
imul   $0x20656e4f,0xa(%edx),%esi
arpl   %sp,0x6e(%ecx)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x68(%si)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ch,%gs:0x66(%edi)
and    %ch,0x6f(%ebp)
jne    805892d <_IO_stdin_used+0xb69>
je     80588e1 <_IO_stdin_used+0xb1d>
arpl   %bp,0x6e(%edi)
je     8058927 <_IO_stdin_used+0xb63>
imul   $0x7420676e,0x69(%esi),%ebp
push   $0x69642065
jb     8058939 <_IO_stdin_used+0xb75>
arpl   %si,0x72(%edi,%ebp,2)
jns    80588fa <_IO_stdin_used+0xb36>
imul   $0x2020200a,%fs:0x3a(%edx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058958 <_IO_stdin_used+0xb94>
je     805890c <_IO_stdin_used+0xb48>
sub    $0x6b616d2d,%eax
gs
sub    $0x72616873,%eax
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058977 <_IO_stdin_used+0xbb3>
je     805892b <_IO_stdin_used+0xb67>
sub    $0x6b616d2d,%eax
gs
sub    $0x76616c73,%eax
and    %ah,%gs:0x72(%ecx,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058995 <_IO_stdin_used+0xbd1>
je     8058949 <_IO_stdin_used+0xb85>
sub    $0x6b616d2d,%eax
gs
sub    $0x76697270,%eax
popa
je     805899c <_IO_stdin_used+0xbd8>
and    %ah,0x72(%ecx,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80589b5 <_IO_stdin_used+0xbf1>
je     8058969 <_IO_stdin_used+0xba5>
sub    $0x6b616d2d,%eax
gs
sub    $0x69626e75,%eax
outsb  %ds:(%esi),(%dx)
fs
popa
bound  %ebp,0x20(%ebp,%eiz,2)
imul   $0x20656e4f,%fs:0xa(%edx),%esi
arpl   %sp,0x6e(%ecx)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x68(%si)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ch,%gs:0x66(%edi)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6f(%ebp)
jne    80589f4 <_IO_stdin_used+0xc30>
je     80589fb <_IO_stdin_used+0xc37>
and    %ch,0x6e(%ecx)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058a00 <_IO_stdin_used+0xc3c>
je     80589b4 <_IO_stdin_used+0xbf0>
jae    8058a0b <_IO_stdin_used+0xc47>
bound  %esi,0x65(%edx,%esi,2)
or     %gs:0x6f(%ebx),%ah
outsb  %ds:(%esi),(%dx)
je     8058a02 <_IO_stdin_used+0xc3e>
imul   $0x7420676e,0x69(%esi),%ebp
push   $0x69642065
jb     8058a14 <_IO_stdin_used+0xc50>
arpl   %si,0x72(%edi,%ebp,2)
jns    80589d5 <_IO_stdin_used+0xc11>
imul   $0x2020200a,%fs:0x3a(%edx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058a33 <_IO_stdin_used+0xc6f>
je     80589e7 <_IO_stdin_used+0xc23>
sub    $0x6b616d2d,%eax
gs
sub    $0x61687372,%eax
jb     8058a39 <_IO_stdin_used+0xc75>
and    %ah,%fs:0x72(%ecx,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058a53 <_IO_stdin_used+0xc8f>
je     8058a07 <_IO_stdin_used+0xc43>
sub    $0x6b616d2d,%eax
gs
sub    $0x616c7372,%eax
jbe    8058a59 <_IO_stdin_used+0xc95>
and    %ah,0x72(%ecx,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058a72 <_IO_stdin_used+0xcae>
je     8058a26 <_IO_stdin_used+0xc62>
sub    $0x6b616d2d,%eax
gs
sub    $0x69727072,%eax
jbe    8058a74 <_IO_stdin_used+0xcb0>
je     8058a7a <_IO_stdin_used+0xcb6>
and    %ah,0x72(%ecx,%ebp,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058a93 <_IO_stdin_used+0xccf>
je     8058a47 <_IO_stdin_used+0xc83>
sub    $0x6b616d2d,%eax
gs
sub    $0x626e7572,%eax
imul   $0x656c6261,0x64(%esi),%ebp
and    %ah,0x72(%ecx,%ebp,2)
or     0x20(%ecx),%al
fs
gs
jbe    8058aad <_IO_stdin_used+0xce9>
arpl   %sp,0x20(%ebp)
arpl   %sp,0x6e(%ecx)
and    %ah,0x65(%edx)
and    %ah,0x69(%edi)
jbe    8058ab7 <_IO_stdin_used+0xcf3>
outsb  %ds:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
sub    $0x20,%al
jae    8058ac0 <_IO_stdin_used+0xcfc>
jns    8058a81 <_IO_stdin_used+0xcbd>
das
fs
gs
jbe    8058a95 <_IO_stdin_used+0xcd1>
push   $0x20316164
outsl  %ds:(%esi),(%dx)
jb     8058a8e <_IO_stdin_used+0xcca>
das
fs
gs
jbe    8058aa2 <_IO_stdin_used+0xcde>
arpl   %sp,0x6f(%edx,%esi,2)
insl   (%dx),%es:(%edi)
sub    $0xa,%al
outsl  %ds:(%esi),(%dx)
jb     8058a9d <_IO_stdin_used+0xcd9>
bound  %edi,0x20(%ecx)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
sub    $0x20,%al
jne    8058afc <_IO_stdin_used+0xd38>
imul   $0x4c2d2020,0x67(%esi),%ebp
and    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8058abb <_IO_stdin_used+0xcf7>
bound  %edi,0x20(%ecx)
jne    8058b15 <_IO_stdin_used+0xd51>
imul   $0x6e697375,0x20(%esp,%ebp,1),%esp
and    %ah,(%bx,%si)
sub    $0x75752055,%eax
imul   $0x68744f0a,0x2e(%eax,%eiz,1),%esp
gs
jb     8058adb <_IO_stdin_used+0xd17>
outsl  %ds:(%esi),(%dx)
jo     8058b32 <_IO_stdin_used+0xd6e>
imul   $0x5b203a73,0x6e(%edi),%ebp
sub    $0x7246666e,%eax
jae    8058b42 <_IO_stdin_used+0xd7e>
ja     8058b2b <_IO_stdin_used+0xd67>
and    %bl,0x2d(%ebx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     8058b40 <_IO_stdin_used+0xd7c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8058b38 <_IO_stdin_used+0xd74>
and    %bl,0x2d(%ebx)
jo     8058b00 <_IO_stdin_used+0xd3c>
jo     8058b43 <_IO_stdin_used+0xd7f>
jae    8058b57 <_IO_stdin_used+0xd93>
ja     8058b4a <_IO_stdin_used+0xd86>
data16
fs
pop    %ebp
or     %cs:0x6f(%esi),%al
jb     8058b0f <_IO_stdin_used+0xd4b>
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
jns    8058b14 <_IO_stdin_used+0xd50>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8058b5d <_IO_stdin_used+0xd99>
and    %ah,0x74(%ebp,%eiz,2)
popa
imul   $0x79617320,0x2c(%ebx,%esi,2),%ebp
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %bh,(%eax)
and    %ch,0x6f(%ebp)
jne    8058b7f <_IO_stdin_used+0xdbb>
je     8058b33 <_IO_stdin_used+0xd6f>
or     %cs:(%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058b8a <_IO_stdin_used+0xdc6>
je     8058b58 <_IO_stdin_used+0xd94>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058b46 <_IO_stdin_used+0xd82>
jae    8058b8d <_IO_stdin_used+0xdc9>
je     8058b4a <_IO_stdin_used+0xd86>
addr16 jb 8058b9c <_IO_stdin_used+0xdd8>
jne    8058b9f <_IO_stdin_used+0xddb>
and    %ch,0x64(%ecx)
cmp    (%eax),%ah
and    $0x6d000073,%eax
outsl  %ds:(%esi),(%dx)
jne    8058baa <_IO_stdin_used+0xde6>
je     8058b78 <_IO_stdin_used+0xdb4>
and    %ah,0x78(%ebp)
je     8058ba8 <_IO_stdin_used+0xde4>
jb     8058bb3 <_IO_stdin_used+0xdef>
popa
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
jne    8058bba <_IO_stdin_used+0xdf6>
je     8058b88 <_IO_stdin_used+0xdc4>
and    %ah,0x72(%ecx)
addr16 jbe 8058baf <_IO_stdin_used+0xdeb>
and    $0x3d205d64,%eax
and    %ah,(%edx)
and    $0xa2273,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058bd2 <_IO_stdin_used+0xe0e>
je     8058ba0 <_IO_stdin_used+0xddc>
and    %ch,0x6f(%ebp)
jne    8058bd9 <_IO_stdin_used+0xe15>
je     8058b95 <_IO_stdin_used+0xdd1>
xor    (%ecx),%ch
and    %dh,0x79(%ebx)
jae    8058bd7 <_IO_stdin_used+0xe13>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cmp    (%eax),%ah
jae    8058bea <_IO_stdin_used+0xe26>
jne    8058bef <_IO_stdin_used+0xe2b>
arpl   %sp,0x3a(%ebp)
and    %ah,(%edx)
and    $0x202c2273,%eax
je     8058bea <_IO_stdin_used+0xe26>
jb     8058bf2 <_IO_stdin_used+0xe2e>
gs
je     8058bc8 <_IO_stdin_used+0xe04>
and    %ah,(%edx)
and    $0x202c2273,%eax
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     8058c03 <_IO_stdin_used+0xe3f>
insl   (%dx),%es:(%edi)
je     8058c1a <_IO_stdin_used+0xe56>
jo     8058c08 <_IO_stdin_used+0xe44>
cmp    (%eax),%ah
and    0x202c2273,%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058c1d <_IO_stdin_used+0xe59>
je     8058c17 <_IO_stdin_used+0xe53>
insb   (%dx),%es:(%edi)
popa
addr16 jae 8058bf0 <_IO_stdin_used+0xe2c>
and    %ah,0x64202c64
popa
je     8058c20 <_IO_stdin_used+0xe5c>
cmp    (%eax),%ah
and    $0xa73,%eax
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058c3a <_IO_stdin_used+0xe76>
je     8058c08 <_IO_stdin_used+0xe44>
and    %ch,0x6d(%ecx)
jo     8058c45 <_IO_stdin_used+0xe81>
outsl  %ds:(%esi),(%dx)
jo     8058c3b <_IO_stdin_used+0xe77>
jb     8058c44 <_IO_stdin_used+0xe80>
jns    8058bfa <_IO_stdin_used+0xe36>
jno    8058c51 <_IO_stdin_used+0xe8d>
outsl  %ds:(%esi),(%dx)
je     8058c44 <_IO_stdin_used+0xe80>
and    %ch,%fs:0x70(%edi)
je     8058c4e <_IO_stdin_used+0xe8a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%ebx)
jb     8058c55 <_IO_stdin_used+0xe91>
outsb  %ds:(%esi),(%dx)
and    %ah,(%bx)
and    $0x6d002773,%eax
outsl  %ds:(%esi),(%dx)
jne    8058c66 <_IO_stdin_used+0xea2>
je     8058c34 <_IO_stdin_used+0xe70>
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    8058c6d <_IO_stdin_used+0xea9>
popa
je     8058c69 <_IO_stdin_used+0xea5>
and    %ah,%fs:0x25272073
jae    8058c34 <_IO_stdin_used+0xe70>
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
add    %ch,0x6f(%ebp)
jne    8058c8a <_IO_stdin_used+0xec6>
je     8058c58 <_IO_stdin_used+0xe94>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8058c44 <_IO_stdin_used+0xe80>
jb     8058c95 <_IO_stdin_used+0xed1>
outsl  %ds:(%esi),(%dx)
je     8058c49 <_IO_stdin_used+0xe85>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6f(%ebp)
jne    8058c9f <_IO_stdin_used+0xedb>
je     8058c53 <_IO_stdin_used+0xe8f>
and    $0x6e6f2073,%eax
and    %ah,0x6f6d0073
jne    8058cae <_IO_stdin_used+0xeea>
je     8058c7c <_IO_stdin_used+0xeb8>
and    %ah,0x63(%ecx)
arpl   %bp,0x72(%edi)
imul   $0x206f7420,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
je     8058cb4 <_IO_stdin_used+0xef0>
bound  %ebp,(%eax,%eiz,1)
and    $0x73692073,%eax
and    %ah,0x6c(%ecx)
jb     8058cc5 <_IO_stdin_used+0xf01>
popa
fs
jns    8058c84 <_IO_stdin_used+0xec0>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058cd6 <_IO_stdin_used+0xf12>
je     8058ccf <_IO_stdin_used+0xf0b>
and    %ch,%fs:0x6e(%edi)
and    %ah,0xa73
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058ce6 <_IO_stdin_used+0xf22>
je     8058cb4 <_IO_stdin_used+0xef0>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058ca2 <_IO_stdin_used+0xede>
outsl  %ds:(%esi),(%dx)
jo     8058cea <_IO_stdin_used+0xf26>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f662073
jb     8058cae <_IO_stdin_used+0xeea>
jae    8058cf5 <_IO_stdin_used+0xf31>
je     8058d06 <_IO_stdin_used+0xf42>
imul   $0x65707320,0x67(%esi),%ebp
gs add %ch,%fs:%gs:0x6f(%ebp)
jne    8058d0e <_IO_stdin_used+0xf4a>
je     8058cdc <_IO_stdin_used+0xf18>
and    %ch,0x6f(%edi,%ebp,2)
jo     8058cc8 <_IO_stdin_used+0xf04>
fs
gs
jbe    8058d15 <_IO_stdin_used+0xf51>
arpl   %sp,0x20(%ebp)
jae    8058d21 <_IO_stdin_used+0xf5d>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x69777420,0x64(%ebp),%esp
arpl   %sp,0x0(%ebp)
add    %ch,0x6f(%ebp)
jne    8058d32 <_IO_stdin_used+0xf6e>
je     8058d00 <_IO_stdin_used+0xf3c>
and    %dh,0x6b(%ebx)
imul   $0x20676e69,0x70(%eax),%esi
je     8058d3a <_IO_stdin_used+0xf76>
and    %dh,%gs:0x65(%ebx)
je     8058d4d <_IO_stdin_used+0xf89>
jo     8058cfa <_IO_stdin_used+0xf36>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8058d04 <_IO_stdin_used+0xf40>
fs
gs
jbe    8058d51 <_IO_stdin_used+0xf8d>
arpl   %sp,0xa(%ebp)
add    %ch,0x6f(%ebp)
jne    8058d5e <_IO_stdin_used+0xf9a>
je     8058d2c <_IO_stdin_used+0xf68>
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x6e(%ecx,%ebp,2)
and    %ah,0x75(%bx,%di)
je     8058d6f <_IO_stdin_used+0xfab>
arpl   %bp,0x61(%ebp,%eiz,2)
jb     8058d26 <_IO_stdin_used+0xf62>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8058d6f <_IO_stdin_used+0xfab>
gs
jbe    8058d2e <_IO_stdin_used+0xf6a>
data16
insb   (%dx),%es:(%edi)
popa
or     (%bx,%si),%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058d86 <_IO_stdin_used+0xfc2>
je     8058d54 <_IO_stdin_used+0xf90>
and    %ch,0x6e(%ecx)
jbe    8058d80 <_IO_stdin_used+0xfbc>
insb   (%dx),%es:(%edi)
imul   $0x65736666,0x6f(%eax,%eiz,1),%esp
je     8058d4a <_IO_stdin_used+0xf86>
daa
and    $0x73202773,%eax
jo     8058d97 <_IO_stdin_used+0xfd3>
arpl   %bp,0x66(%ecx)
imul   $0x0,0x64(%ebp),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058dae <_IO_stdin_used+0xfea>
je     8058d7c <_IO_stdin_used+0xfb8>
and    %ch,0x6e(%ecx)
jbe    8058da8 <_IO_stdin_used+0xfe4>
insb   (%dx),%es:(%edi)
imul   $0x6c657a69,0x73(%eax,%eiz,1),%esp
imul   $0x25272074,0x69(%ebp),%ebp
jae    8058d80 <_IO_stdin_used+0xfbc>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x756f6d00,0x64(%ebp),%esp
outsb  %ds:(%esi),(%dx)
je     8058da4 <_IO_stdin_used+0xfe0>
and    %ah,0x63(%ecx)
arpl   %bp,0x72(%edi)
imul   $0x206f7420,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
je     8058ddc <_IO_stdin_used+0x1018>
bound  %esp,(%eax)
and    $0x73692073,%eax
and    %ah,0x6c(%ecx)
jb     8058dec <_IO_stdin_used+0x1028>
popa
fs
jns    8058dab <_IO_stdin_used+0xfe7>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058dfd <_IO_stdin_used+0x1039>
je     8058df6 <_IO_stdin_used+0x1032>
and    %ch,%fs:0x6e(%edi)
and    %ah,0x73612073
and    %ch,0x6f(%edi,%ebp,2)
jo     8058da1 <_IO_stdin_used+0xfdd>
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8058e16 <_IO_stdin_used+0x1052>
je     8058de4 <_IO_stdin_used+0x1020>
and    %ah,0x6f(%edi)
imul   $0x206f7420,0x67(%esi),%ebp
jne    8058e29 <_IO_stdin_used+0x1065>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ch,0x6f(%edi,%ebp,2)
jo     8058de1 <_IO_stdin_used+0x101d>
fs
gs
jbe    8058e2e <_IO_stdin_used+0x106a>
arpl   %sp,0x20(%ebp)
and    $0x6d000a73,%eax
outsl  %ds:(%esi),(%dx)
jne    8058e3e <_IO_stdin_used+0x107a>
je     8058e0c <_IO_stdin_used+0x1048>
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %ch,0x6f(%edi,%ebp,2)
jo     8058e1c <_IO_stdin_used+0x1058>
and    $0x2e2e2073,%eax
je,pn  8058e59 <_IO_stdin_used+0x1095>
jns    8058e52 <_IO_stdin_used+0x108e>
outsb  %ds:(%esi),(%dx)
and    %ah,0x67(%bx,%di)
popa
imul   $0x6f6d0000,0xa(%esi),%ebp
jne    8058e66 <_IO_stdin_used+0x10a2>
je     8058e34 <_IO_stdin_used+0x1070>
and    %ah,0x61(%esi)
imul   $0x74657320,0x64(%ebp,%eiz,2),%ebp
je     8058e70 <_IO_stdin_used+0x10ac>
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%di)
and    %ch,0x6f(%edi,%ebp,2)
jo     8058e32 <_IO_stdin_used+0x106e>
fs
gs
jbe    8058e7f <_IO_stdin_used+0x10bb>
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8058e8e <_IO_stdin_used+0x10ca>
je     8058e5c <_IO_stdin_used+0x1098>
and    %dh,0x65(%ebx)
je     8058e9c <_IO_stdin_used+0x10d8>
jo     8058e49 <_IO_stdin_used+0x1085>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8058e4e <_IO_stdin_used+0x108a>
fs
gs
jbe    8058e9b <_IO_stdin_used+0x10d7>
arpl   %sp,0x20(%ebp)
jae    8058eac <_IO_stdin_used+0x10e8>
arpl   %sp,0x65(%ebx)
jae    8058eaf <_IO_stdin_used+0x10eb>
data16
jne    8058eab <_IO_stdin_used+0x10e7>
insb   (%dx),%es:(%edi)
jns    8058e4c <_IO_stdin_used+0x1088>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058eb6 <_IO_stdin_used+0x10f2>
je     8058e84 <_IO_stdin_used+0x10c0>
and    %dl,0x45(%ebx)
dec    %esp
imul   $0x632a2078,0x75(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8058ebe <_IO_stdin_used+0x10fa>
js     8058ecf <_IO_stdin_used+0x110b>
cmp    $0x74706f20,%eax
imul   $0x72612073,0x6e(%edi),%ebp
and    %ch,%gs:0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8058ed4 <_IO_stdin_used+0x1110>
and    %ch,0x6e(%edi)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058ee7 <_IO_stdin_used+0x1123>
je     8058ea9 <_IO_stdin_used+0x10e5>
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8058ef2 <_IO_stdin_used+0x112e>
je     8058ec0 <_IO_stdin_used+0x10fc>
and    %bh,0x6f(%ecx)
jne    8058eab <_IO_stdin_used+0x10e7>
imul   $0x70732074,%fs:0x27(%esi,%ebp,2),%esp
70
arpl   %bp,%gs:0x66(%ecx)
jns    8058eba <_IO_stdin_used+0x10f6>
popa
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8058f1b <_IO_stdin_used+0x1157>
jae    8058f18 <_IO_stdin_used+0x1154>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x6f(%esi)
jb     8058ed0 <_IO_stdin_used+0x110c>
and    $0x20000a73,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x79(%edx,%esi,2)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
gs
jae    8058ef0 <_IO_stdin_used+0x112c>
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8058f3e <_IO_stdin_used+0x117a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ah,0x726f2073
and    %ah,0xa73
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x74(%ecx)
and    %ch,0x6f(%edi,%ebp,2)
imul   $0x6c,0x20(%ebx),%esi
imul   $0x69687420,0x65(%ebx),%ebp
jae    8058f26 <_IO_stdin_used+0x1162>
imul   $0x70617773,0x20(%ebx),%esi
jae    8058f7f <_IO_stdin_used+0x11bb>
popa
arpl   %sp,0xa(%ebp)
add    %ah,0x6f6c2073
outsl  %ds:(%esi),(%dx)
imul   $0x6c,0x20(%ebx),%esi
imul   $0x61777320,0x65(%ebx),%ebp
jo     8058f9a <_IO_stdin_used+0x11d6>
jo     8058f8a <_IO_stdin_used+0x11c6>
arpl   %sp,0x20(%ebp)
sub    $0x746f6e20,%eax
and    %ch,0x6f(%ebp)
jne    8058fa4 <_IO_stdin_used+0x11e0>
je     8058f9d <_IO_stdin_used+0x11d9>
add    %al,%fs:(%eax)
add    %ch,0x6f(%ebp)
jne    8058fae <_IO_stdin_used+0x11ea>
je     8058f7c <_IO_stdin_used+0x11b8>
and    %ah,0x6d203a73
outsl  %ds:(%esi),(%dx)
jb     8058fb0 <_IO_stdin_used+0x11ec>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8058fcb <_IO_stdin_used+0x1207>
jae    8058fc8 <_IO_stdin_used+0x1204>
gs
insl   (%dx),%es:(%edi)
jae    8058f78 <_IO_stdin_used+0x11b4>
fs
gs
je     8058fc1 <_IO_stdin_used+0x11fd>
arpl   %si,0x64(%ebp,%eiz,2)
and    %dl,%cs:0x69(%eax,%ebp,2)
jae    8058f87 <_IO_stdin_used+0x11c3>
jae    8058fd1 <_IO_stdin_used+0x120d>
outsl  %ds:(%esi),(%dx)
jne    8058fd8 <_IO_stdin_used+0x1214>
and    %ch,%fs:0x6f(%esi)
je     8058f92 <_IO_stdin_used+0x11ce>
push   $0x65707061
outsb  %ds:(%esi),(%dx)
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x743c2074
jns    8058ffc <_IO_stdin_used+0x1238>
gs and %dh,%ds:%gs:0x20(%edi,%ebp,2)
gs
js     8059005 <_IO_stdin_used+0x1241>
insb   (%dx),%es:(%edi)
imul   $0x20796c74,0x69(%ebx),%esp
jae    805900f <_IO_stdin_used+0x124b>
arpl   %bp,%gs:0x66(%ecx)
jns    8058fc5 <_IO_stdin_used+0x1201>
je     805900f <_IO_stdin_used+0x124b>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8059028 <_IO_stdin_used+0x1264>
jae    8059025 <_IO_stdin_used+0x1261>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x72(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8059038 <_IO_stdin_used+0x1274>
and    %dh,%gs:0x69(%edi)
jo     8059030 <_IO_stdin_used+0x126c>
data16
jae    8058ff6 <_IO_stdin_used+0x1232>
cmp    %ch,(%ecx)
and    %dh,0x20(%edi,%ebp,2)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ebp)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0xa2e,0x65(%ebx),%esp
add    %ch,0x6f(%ebp)
jne    805905e <_IO_stdin_used+0x129a>
je     805902c <_IO_stdin_used+0x1268>
and    %dh,0x61(%edi)
jb     8059065 <_IO_stdin_used+0x12a1>
imul   $0x7325203a,0x67(%esi),%ebp
and    %dh,0x65(%ebx)
gs
insl   (%dx),%es:(%edi)
jae    8059025 <_IO_stdin_used+0x1261>
je     8059076 <_IO_stdin_used+0x12b2>
and    %ah,0x65(%edx)
and    %ch,0x6f(%ebp)
jne    805907d <_IO_stdin_used+0x12b9>
je     8059076 <_IO_stdin_used+0x12b2>
and    %dh,%fs:0x65(%edx)
popa
fs
sub    $0x74697277,%eax
gs or  %cs:%gs:(%eax),%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059092 <_IO_stdin_used+0x12ce>
je     8059060 <_IO_stdin_used+0x129c>
and    %dh,0x61(%edi)
jb     8059099 <_IO_stdin_used+0x12d5>
imul   $0x7325203a,0x67(%esi),%ebp
and    %dh,0x65(%ebx)
gs
insl   (%dx),%es:(%edi)
jae    8059059 <_IO_stdin_used+0x1295>
je     80590aa <_IO_stdin_used+0x12e6>
and    %ah,0x65(%edx)
and    %ch,0x6f(%ebp)
jne    80590b1 <_IO_stdin_used+0x12ed>
je     80590aa <_IO_stdin_used+0x12e6>
and    %dh,%fs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
or     %cs:(%eax),%al
add    %ch,0x6f(%ebp)
jne    80590c6 <_IO_stdin_used+0x1302>
je     8059094 <_IO_stdin_used+0x12d0>
and    %ch,0x6f(%esi)
and    %ah,0x6f662073
jne    80590d3 <_IO_stdin_used+0x130f>
and    %ch,%fs:0x65726320
popa
je     80590d8 <_IO_stdin_used+0x1314>
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%bx,%di)
cs or  %cs:(%eax),%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80590ea <_IO_stdin_used+0x1326>
je     80590b8 <_IO_stdin_used+0x12f4>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     80590a5 <_IO_stdin_used+0x12e1>
outsl  %ds:(%esi),(%dx)
jo     80590ed <_IO_stdin_used+0x1329>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f662073
jb     80590b1 <_IO_stdin_used+0x12ed>
ja     8059105 <_IO_stdin_used+0x1341>
imul   $0x25203a67,0x6e(%ecx,%ebp,2),%esi
jae    805909d <_IO_stdin_used+0x12d9>
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8059112 <_IO_stdin_used+0x134e>
je     80590e0 <_IO_stdin_used+0x131c>
and    %ah,0x72(%ebp)
jb     805911a <_IO_stdin_used+0x1356>
jb     80590cd <_IO_stdin_used+0x1309>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x646f6d20,0x67(%bp),%ebp
and    %ch,%gs:0x66(%edi)
and    %ah,0x25203a73
jae    80590c5 <_IO_stdin_used+0x1301>
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    805913a <_IO_stdin_used+0x1376>
je     8059108 <_IO_stdin_used+0x1344>
and    %cl,0x20(%ecx)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     80590fb <_IO_stdin_used+0x1337>
fs
gs
je     8059144 <_IO_stdin_used+0x1380>
jb     805914e <_IO_stdin_used+0x138a>
imul   $0x65687420,0x65(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8059168 <_IO_stdin_used+0x13a4>
jae    8059165 <_IO_stdin_used+0x13a1>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
gs
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x61(%edi)
jae    8059127 <_IO_stdin_used+0x1363>
jae    8059179 <_IO_stdin_used+0x13b5>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x0,0x64(%ebp),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059186 <_IO_stdin_used+0x13c2>
je     8059154 <_IO_stdin_used+0x1390>
and    %bh,0x6f(%ecx)
jne    805913f <_IO_stdin_used+0x137b>
insl   (%dx),%es:(%edi)
jne    8059195 <_IO_stdin_used+0x13d1>
je     8059144 <_IO_stdin_used+0x1380>
jae    8059196 <_IO_stdin_used+0x13d2>
arpl   %bp,%gs:0x66(%ecx)
jns    805914c <_IO_stdin_used+0x1388>
je     8059196 <_IO_stdin_used+0x13d2>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80591af <_IO_stdin_used+0x13eb>
jae    80591ac <_IO_stdin_used+0x13e8>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
add    %ch,%gs:0x6f(%ebp)
jne    80591b2 <_IO_stdin_used+0x13ee>
je     8059180 <_IO_stdin_used+0x13bc>
and    %ch,0x6f(%ebp)
jne    80591b9 <_IO_stdin_used+0x13f5>
je     805916d <_IO_stdin_used+0x13a9>
jo     80591be <_IO_stdin_used+0x13fa>
imul   $0x20732520,0x74(%esi),%ebp
imul   $0x20746f6e,0x20(%ebx),%esi
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8059169 <_IO_stdin_used+0x13a5>
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    80591de <_IO_stdin_used+0x141a>
je     80591ac <_IO_stdin_used+0x13e8>
and    %ch,0x75(%ebp)
jae    80591eb <_IO_stdin_used+0x1427>
and    %ah,0x65(%edx)
and    %dh,0x75(%ebx)
jo     80591e4 <_IO_stdin_used+0x1420>
jb     80591f6 <_IO_stdin_used+0x1432>
jae    80591e8 <_IO_stdin_used+0x1424>
jb     80591a5 <_IO_stdin_used+0x13e1>
je     80591f6 <_IO_stdin_used+0x1432>
and    %dh,0x73(%ebp)
and    %ch,%gs:0x6f(%ebp)
jne    80591fe <_IO_stdin_used+0x143a>
je     8059192 <_IO_stdin_used+0x13ce>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059206 <_IO_stdin_used+0x1442>
je     80591d4 <_IO_stdin_used+0x1410>
and    %ah,0x6c612073
jb     8059207 <_IO_stdin_used+0x1443>
popa
fs
jns    80591c6 <_IO_stdin_used+0x1402>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059218 <_IO_stdin_used+0x1454>
je     8059211 <_IO_stdin_used+0x144d>
and    %ch,%fs:0x72(%edi)
and    %ah,0x75622073
jae    8059231 <_IO_stdin_used+0x146d>
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805922e <_IO_stdin_used+0x146a>
je     80591fc <_IO_stdin_used+0x1438>
and    %ch,0x6f(%ebp)
jne    8059235 <_IO_stdin_used+0x1471>
je     80591e9 <_IO_stdin_used+0x1425>
jo     805923a <_IO_stdin_used+0x1476>
imul   $0x20732520,0x74(%esi),%ebp
outsl  %fs:(%esi),(%dx)
gs
jae    80591f7 <_IO_stdin_used+0x1433>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80591fb <_IO_stdin_used+0x1437>
gs
js     8059247 <_IO_stdin_used+0x1483>
jae    8059254 <_IO_stdin_used+0x1490>
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059256 <_IO_stdin_used+0x1492>
je     8059224 <_IO_stdin_used+0x1460>
and    %ch,0x6f(%ebp)
jne    805925d <_IO_stdin_used+0x1499>
je     8059211 <_IO_stdin_used+0x144d>
jo     8059262 <_IO_stdin_used+0x149e>
imul   $0x20732520,0x74(%esi),%ebp
imul   $0x79732061,0x20(%ebx),%esi
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %dh,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     805927c <_IO_stdin_used+0x14b8>
gs
jb     805927c <_IO_stdin_used+0x14b8>
add    %ch,0x6f(%ebp)
jne    805928a <_IO_stdin_used+0x14c6>
je     8059258 <_IO_stdin_used+0x1494>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
outsl  %fs:(%esi),(%dx)
gs
jae    8059256 <_IO_stdin_used+0x1492>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805925a <_IO_stdin_used+0x1496>
gs
js     80592a6 <_IO_stdin_used+0x14e2>
jae    80592b3 <_IO_stdin_used+0x14ef>
add    %ch,0x6f(%ebp)
jne    80592b2 <_IO_stdin_used+0x14ee>
je     8059280 <_IO_stdin_used+0x14bc>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
outsl  %fs:(%esi),(%dx)
gs
jae    805927e <_IO_stdin_used+0x14ba>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059282 <_IO_stdin_used+0x14be>
gs
js     80592ce <_IO_stdin_used+0x150a>
jae    80592db <_IO_stdin_used+0x1517>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    %ah,0x20(%ecx)
jo     80592d5 <_IO_stdin_used+0x1511>
je     80592de <_IO_stdin_used+0x151a>
and    %dh,0x72(%eax)
imul   $0x7369,%gs:0x20(%eax),%di
and    %ch,0x6f(%esi)
je     80592a5 <_IO_stdin_used+0x14e1>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80592ba <_IO_stdin_used+0x14f6>
or     (%eax),%al
add    %ch,0x6f(%ebp)
jne    8059306 <_IO_stdin_used+0x1542>
je     80592d4 <_IO_stdin_used+0x1510>
and    %ah,0x6f6e2073
je     80592c2 <_IO_stdin_used+0x14fe>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059314 <_IO_stdin_used+0x1550>
je     805930d <_IO_stdin_used+0x1549>
and    %ch,%fs:0x72(%edi)
and    %ah,0x61(%edx)
and    %ch,%fs:0x70(%edi)
je     805931e <_IO_stdin_used+0x155a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%ebp)
jne    805932a <_IO_stdin_used+0x1566>
je     80592f8 <_IO_stdin_used+0x1534>
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%bp)
and    %dh,0x70(%ecx,%edi,2)
gs
sub    $0x20,%al
bound  %esp,0x64(%ecx)
and    %ch,0x70(%edi)
je     805933f <_IO_stdin_used+0x157b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
bound  %esp,0x64(%ecx)
and    %dh,0x75(%ebx)
jo     8059347 <_IO_stdin_used+0x1583>
jb     8059346 <_IO_stdin_used+0x1582>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x200a2c73
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
arpl   %bp,0x64(%edi)
gs
jo     8059366 <_IO_stdin_used+0x15a2>
and    %ch,%gs:0x72(%bx)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8059375 <_IO_stdin_used+0x15b1>
jb     8059332 <_IO_stdin_used+0x156e>
jo     8059386 <_IO_stdin_used+0x15c2>
outsl  %ds:(%esi),(%dx)
addr16 jb 8059379 <_IO_stdin_used+0x15b5>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     805933e <_IO_stdin_used+0x157a>
outsl  %ds:(%esi),(%dx)
je     8059389 <_IO_stdin_used+0x15c5>
gs
jb     8059344 <_IO_stdin_used+0x1580>
gs
jb     8059399 <_IO_stdin_used+0x15d5>
outsl  %ds:(%esi),(%dx)
jb     805932a <_IO_stdin_used+0x1566>
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
outsw  %ds:(%esi),(%dx)
jb     8059358 <_IO_stdin_used+0x1594>
jae    805939f <_IO_stdin_used+0x15db>
jbe    80593a1 <_IO_stdin_used+0x15dd>
jb     805939f <_IO_stdin_used+0x15db>
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80593bf <_IO_stdin_used+0x15fb>
jae    80593bc <_IO_stdin_used+0x15f8>
gs
insl   (%dx),%es:(%edi)
jae    805936c <_IO_stdin_used+0x15a8>
sub    %ah,0x2e(%ebp)
and    %ch,%cs:0x66(%bp)
jae    8059382 <_IO_stdin_used+0x15be>
and    %ah,0x69(%ebx)
data16
jae    8059385 <_IO_stdin_used+0x15c1>
and    %bh,0x6f(%ecx)
jne    8059381 <_IO_stdin_used+0x15bd>
insl   (%dx),%es:(%edi)
imul   $0x20200a74,0x68(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
gs and %ah,%fs:%gs:0x20(%ecx)
das
jae    80593da <_IO_stdin_used+0x1616>
imul   $0x6e756f6d,0x2f(%esi),%ebp
je     80593af <_IO_stdin_used+0x15eb>
cmp    $0x74,%al
jns    80593f5 <_IO_stdin_used+0x1631>
gs and %ch,%ds:%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     80593f2 <_IO_stdin_used+0x162e>
jb     80593af <_IO_stdin_used+0x15eb>
jo     8059403 <_IO_stdin_used+0x163f>
outsl  %ds:(%esi),(%dx)
addr16 jb 80593f6 <_IO_stdin_used+0x1632>
insl   (%dx),%es:(%edi)
sub    %eax,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    80593cb <_IO_stdin_used+0x1607>
bound  %esp,0x20(%ebp)
je     8059418 <_IO_stdin_used+0x1654>
and    %cl,%gs:0x44(%ecx)
inc    %ebp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x65687720,0x65(%ebx),%esp
jb     8059427 <_IO_stdin_used+0x1663>
and    %bh,0x6f(%ecx)
jne    80593e7 <_IO_stdin_used+0x1623>
imul   $0x74636166,0x20(%esi),%ebp
and    %dh,0x73(%ebp)
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x69736373,0x2d(%ebp,%eiz,2),%esp
and    %dh,0x6f(%ebx)
and    %dh,0x61(%eax,%ebp,2)
je     805940b <_IO_stdin_used+0x1647>
jae    805945f <_IO_stdin_used+0x169b>
xor    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8059412 <_IO_stdin_used+0x164e>
jae    8059458 <_IO_stdin_used+0x1694>
popa
and    %ch,0x72(%edi)
and    %dh,0x6f(%ebx)
and    %ch,0x73(%ecx)
and    %ch,0x65(%esi)
gs
fs
gs
fs
aas
sub    %eax,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
popa
jb     8059478 <_IO_stdin_used+0x16b4>
outsb  %ds:(%esi),(%dx)
daa
je     8059437 <_IO_stdin_used+0x1673>
jns    8059488 <_IO_stdin_used+0x16c4>
jne    805943b <_IO_stdin_used+0x1677>
je     805948f <_IO_stdin_used+0x16cb>
jns    8059488 <_IO_stdin_used+0x16c4>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%si)
and    %ch,0x6f(%ebp)
jne    8059497 <_IO_stdin_used+0x16d3>
je     805944b <_IO_stdin_used+0x1687>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
je     8059497 <_IO_stdin_used+0x16d3>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x61(%eax)
jb     80594af <_IO_stdin_used+0x16eb>
imul   $0x200a2c6e,0x6f(%ecx,%ebp,2),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x67(%edi,%ebp,2)
imul   $0x6170206c,0x61(%ebx),%esp
jb     80594d9 <_IO_stdin_used+0x1715>
imul   $0x6e69206e,0x6f(%ecx,%ebp,2),%esi
jae    80594d8 <_IO_stdin_used+0x1714>
fs
gs
aas
sub    %eax,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x6e(%ecx)
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%ebx)
jae    80594ec <_IO_stdin_used+0x1728>
jae    80594a9 <_IO_stdin_used+0x16e5>
jne    80594fe <_IO_stdin_used+0x173a>
gs
data16
jne    80594fb <_IO_stdin_used+0x1737>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x6f(%esi)
jne    805950a <_IO_stdin_used+0x1746>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x79(%ebx)
jae    8059511 <_IO_stdin_used+0x174d>
outsl  %ds:(%esi),(%dx)
and    %ch,(%di)
and    %dh,0x79(%edx,%esi,2)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
fs
insl   (%dx),%es:(%edi)
gs
jae    8059521 <_IO_stdin_used+0x175d>
and    %bh,0x74(%eax,%eiz,1)
popa
imul   $0x7320726f,0x20(%eax,%eiz,1),%ebp
outsl  %ds:(%esi),(%dx)
or     (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805953e <_IO_stdin_used+0x177a>
je     805950c <_IO_stdin_used+0x1748>
and    %ah,0x63203a73
popa
outsb  %ds:(%esi),(%dx)
daa
je     80594fd <_IO_stdin_used+0x1739>
jb     8059544 <_IO_stdin_used+0x1780>
popa
and    %dh,%fs:0x75(%ebx)
jo     805954b <_IO_stdin_used+0x1787>
jb     805954a <_IO_stdin_used+0x1786>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8059562 <_IO_stdin_used+0x179e>
je     8059530 <_IO_stdin_used+0x176c>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    805957e <_IO_stdin_used+0x17ba>
jae    805957b <_IO_stdin_used+0x17b7>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:(%edi)
and    $0x6d002773,%eax
outsl  %ds:(%esi),(%dx)
jne    8059586 <_IO_stdin_used+0x17c2>
je     8059554 <_IO_stdin_used+0x1790>
and    %ch,0x61(%ebp)
jns    8059581 <_IO_stdin_used+0x17bd>
and    %bh,%gs:0x6f(%ecx)
jne    8059545 <_IO_stdin_used+0x1781>
insl   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
je     805954b <_IO_stdin_used+0x1787>
daa
imul   $0x30363639,0x6f(%ebx),%esi
daa
aas
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    80595aa <_IO_stdin_used+0x17e6>
je     8059578 <_IO_stdin_used+0x17b4>
and    %ch,0x61(%ebp)
jns    80595a5 <_IO_stdin_used+0x17e1>
and    %bh,%gs:0x6f(%ecx)
jne    8059569 <_IO_stdin_used+0x17a5>
insl   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
je     805956f <_IO_stdin_used+0x17ab>
daa
jbe    80595b8 <_IO_stdin_used+0x17f4>
popa
je     805957c <_IO_stdin_used+0x17b8>
aas
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80595ca <_IO_stdin_used+0x1806>
je     8059598 <_IO_stdin_used+0x17d4>
and    %ah,0x61682073
jae    8059586 <_IO_stdin_used+0x17c2>
ja     80595da <_IO_stdin_used+0x1816>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    80595d9 <_IO_stdin_used+0x1815>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    80595e3 <_IO_stdin_used+0x181f>
bound  %esp,0x72(%ebp)
and    %ch,0x72(%edi)
and    %ah,0x73(%esi)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x6f6e2073
je     80595ac <_IO_stdin_used+0x17e8>
jae    8059603 <_IO_stdin_used+0x183f>
jo     8059600 <_IO_stdin_used+0x183c>
outsl  %ds:(%esi),(%dx)
jb     8059607 <_IO_stdin_used+0x1843>
gs add %al,%fs:%gs:(%eax)
add    %ch,0x6f(%ebp)
jne    805960a <_IO_stdin_used+0x1846>
je     80595d8 <_IO_stdin_used+0x1814>
and    %ah,0x73692073
and    %ch,0x6f(%esi)
je     80595c9 <_IO_stdin_used+0x1805>
popa
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    805961e <_IO_stdin_used+0x185a>
arpl   %sp,0x2c(%ebp)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x74(%ebx)
popa
je     80595e2 <_IO_stdin_used+0x181e>
popaw
imul   $0x0,0x3f(%ebx,%esi,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805963e <_IO_stdin_used+0x187a>
je     805960c <_IO_stdin_used+0x1848>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jb     8059649 <_IO_stdin_used+0x1885>
gs
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edi,%ebp,2)
jae    8059603 <_IO_stdin_used+0x183f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059607 <_IO_stdin_used+0x1843>
jb     805964e <_IO_stdin_used+0x188a>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x20732520,0x65(%edx),%edi
popa
jae    8059617 <_IO_stdin_used+0x1853>
popa
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    805966c <_IO_stdin_used+0x18a8>
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
popa
jns    8059674 <_IO_stdin_used+0x18b0>
and    %ah,%gs:0x6d(%eax)
outsl  %ds:(%esi),(%dx)
fs
jo     805968c <_IO_stdin_used+0x18c8>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
fs
jb     805968a <_IO_stdin_used+0x18c6>
jbe    8059688 <_IO_stdin_used+0x18c4>
jb     805964c <_IO_stdin_used+0x1888>
aas
sub    %eax,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805969a <_IO_stdin_used+0x18d6>
je     8059668 <_IO_stdin_used+0x18a4>
and    %ah,0x73692073
and    %ch,0x6f(%esi)
je     8059659 <_IO_stdin_used+0x1895>
popa
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    80596ae <_IO_stdin_used+0x18ea>
arpl   %sp,0x20(%ebp)
sub    %ch,0x61(%ebp)
jns    80596af <_IO_stdin_used+0x18eb>
and    %dh,%gs:0x79(%edx,%esi,2)
and    %ah,0x2d(%eax)
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%edi,%ebp,2)
jo     8059683 <_IO_stdin_used+0x18bf>
aas
sub    %eax,(%eax)
add    %ch,0x6f(%ebp)
jne    80596d2 <_IO_stdin_used+0x190e>
je     80596a0 <_IO_stdin_used+0x18dc>
and    %ah,0x73692073
and    %ch,0x6f(%esi)
je     8059691 <_IO_stdin_used+0x18cd>
popa
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    80596e6 <_IO_stdin_used+0x1922>
arpl   %sp,0x0(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80596f2 <_IO_stdin_used+0x192e>
je     80596c0 <_IO_stdin_used+0x18fc>
and    %ah,0x73692073
and    %ch,0x6f(%esi)
je     80596b1 <_IO_stdin_used+0x18ed>
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x6b636f6c,0x62(%eax,%eiz,1),%esp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6d000000,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jne    805971a <_IO_stdin_used+0x1956>
je     80596e8 <_IO_stdin_used+0x1924>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80596d6 <_IO_stdin_used+0x1912>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059728 <_IO_stdin_used+0x1964>
je     80596dc <_IO_stdin_used+0x1918>
and    $0x20732573,%eax
jb     8059728 <_IO_stdin_used+0x1964>
popa
fs
sub    $0x796c6e6f,%eax
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805973e <_IO_stdin_used+0x197a>
je     805970c <_IO_stdin_used+0x1948>
and    %ah,0x20732573
imul   $0x74697277,0x20(%ebx),%esi
gs
sub    $0x746f7270,%eax
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     805970f <_IO_stdin_used+0x194b>
gs
js     8059762 <_IO_stdin_used+0x199e>
insb   (%dx),%es:(%edi)
imul   $0x2d602074,0x69(%ebx),%esp
ja     8059723 <_IO_stdin_used+0x195f>
and    %ah,0x6c(%esi)
popa
and    %ah,0x69(%bx)
jbe    805976b <_IO_stdin_used+0x19a7>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%ebp)
jne    805977a <_IO_stdin_used+0x19b6>
je     8059748 <_IO_stdin_used+0x1984>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059736 <_IO_stdin_used+0x1972>
jb     805977d <_IO_stdin_used+0x19b9>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805978a <_IO_stdin_used+0x19c6>
je     805973e <_IO_stdin_used+0x197a>
and    $0x20732573,%eax
jb     805978a <_IO_stdin_used+0x19c6>
popa
fs
sub    $0x74697277,%eax
gs
sub    $0x20,%al
imul   $0x74697277,0x20(%ebx),%esi
gs
sub    $0x746f7270,%eax
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    80597b6 <_IO_stdin_used+0x19f2>
je     8059784 <_IO_stdin_used+0x19c0>
and    %ah,0x20732573
imul   $0x74697277,0x20(%ebx),%esi
gs
sub    $0x746f7270,%eax
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    $0x20,%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80597d6 <_IO_stdin_used+0x1a12>
je     80597d3 <_IO_stdin_used+0x1a0f>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bp,%si)
popa
fs
sub    $0x796c6e6f,%eax
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80597ea <_IO_stdin_used+0x1a26>
je     80597b8 <_IO_stdin_used+0x19f4>
and    %ah,0x6f642073
gs
jae    80597a7 <_IO_stdin_used+0x19e3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80597ab <_IO_stdin_used+0x19e7>
arpl   %bp,0x6e(%edi)
je     80597f1 <_IO_stdin_used+0x1a2d>
imul   $0x694c4553,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jne    8059812 <_IO_stdin_used+0x1a4e>
and    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
jae    80597d0 <_IO_stdin_used+0x1a0c>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    80597ce <_IO_stdin_used+0x1a0a>
push   $0x75
jae    8059826 <_IO_stdin_used+0x1a62>
and    %ch,0x6f(%ebp)
jne    8059825 <_IO_stdin_used+0x1a61>
je     805981e <_IO_stdin_used+0x1a5a>
and    %ah,%fs:0x6e(%ecx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805983b <_IO_stdin_used+0x1a77>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x61(%eax,%ebp,2)
je     80597ef <_IO_stdin_used+0x1a2b>
jae    8059846 <_IO_stdin_used+0x1a82>
jo     8059843 <_IO_stdin_used+0x1a7f>
outsl  %ds:(%esi),(%dx)
jb     805984a <_IO_stdin_used+0x1a86>
jae    80597f8 <_IO_stdin_used+0x1a34>
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
jae    80597ff <_IO_stdin_used+0x1a3b>
ja     8059849 <_IO_stdin_used+0x1a85>
imul   $0x656f6420,0x68(%ebx),%esp
jae    805980a <_IO_stdin_used+0x1a46>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80597f8 <_IO_stdin_used+0x1a34>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805985b <_IO_stdin_used+0x1a97>
imul   $0x6562616c,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
jae    8059830 <_IO_stdin_used+0x1a6c>
and    %ch,0x6e(%edi)
je     8059878 <_IO_stdin_used+0x1ab4>
and    %ah,0x6e(%ecx)
and    %dl,0x45(%ebx)
dec    %esp
imul   $0x6f622078,0x75(%esi),%ebp
js     8059847 <_IO_stdin_used+0x1a83>
and    %cl,0x74(%ecx)
and    %ch,0x73(%ecx)
and    %ch,0x6b(%ecx,%ebp,2)
gs
insb   (%dx),%es:(%edi)
jns    8059847 <_IO_stdin_used+0x1a83>
je     8059891 <_IO_stdin_used+0x1acd>
popa
je     805984c <_IO_stdin_used+0x1a88>
arpl   %bp,0x6e(%edi)
imul   $0xa64,0x65(%esi),%bp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x70(%ecx)
jo     80598ac <_IO_stdin_used+0x1ae8>
imul   $0x6e6f6974,0x61(%ebx),%esp
jae    8059869 <_IO_stdin_used+0x1aa5>
ja     80598b4 <_IO_stdin_used+0x1af0>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     80598b5 <_IO_stdin_used+0x1af1>
je     80598bb <_IO_stdin_used+0x1af7>
and    %al,0x56(%ecx)
inc    %ebx
and    %ch,0x65(%ebp)
jae    80598d2 <_IO_stdin_used+0x1b0e>
popa
addr16
gs
jae    8059884 <_IO_stdin_used+0x1ac0>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%esi)
je     805988c <_IO_stdin_used+0x1ac8>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80598da <_IO_stdin_used+0x1b16>
and    %ah,%fs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    805989e <_IO_stdin_used+0x1ada>
je     80598ef <_IO_stdin_used+0x1b2b>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     80598f2 <_IO_stdin_used+0x1b2e>
imul   $0x656c6966,0x20(%ebx),%esi
and    %dh,0x79(%ebx)
jae    805990a <_IO_stdin_used+0x1b46>
gs
insl   (%dx),%es:(%edi)
and    %ah,%cs:(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     80598bf <_IO_stdin_used+0x1afb>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8059908 <_IO_stdin_used+0x1b44>
and    %ah,0x74(%ebp,%eiz,2)
popa
imul   $0x20656573,0x20(%ebx,%esi,2),%ebp
jb     8059917 <_IO_stdin_used+0x1b53>
jae    8059928 <_IO_stdin_used+0x1b64>
outsl  %ds:(%esi),(%dx)
jb     805991c <_IO_stdin_used+0x1b58>
arpl   %bp,0x6e(%edi)
sub    %bh,(%eax)
sub    %esp,(%eax)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%ebp)
jne    8059934 <_IO_stdin_used+0x1b70>
je     80598f0 <_IO_stdin_used+0x1b2c>
cmp    %ch,(%ecx)
or     %cs:(%eax),%al
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8059942 <_IO_stdin_used+0x1b7e>
je     8059910 <_IO_stdin_used+0x1b4c>
and    %ch,0x6f(%esi)
and    %dh,0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    8059903 <_IO_stdin_used+0x1b3f>
imul   $0x202d206e,0x65(%bp),%esi
dec    %ecx
daa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x73(%ecx)
jae    8059969 <_IO_stdin_used+0x1ba5>
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%esi)
jae    805991b <_IO_stdin_used+0x1b57>
bound  %esp,0x63(%ebp)
popa
jne    8059974 <_IO_stdin_used+0x1bb0>
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8059986 <_IO_stdin_used+0x1bc2>
je     8059954 <_IO_stdin_used+0x1b90>
and    %ch,0x6f(%esi)
and    %dh,0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    8059947 <_IO_stdin_used+0x1b83>
imul   $0x202d206e,0x65(%bp),%esi
dec    %ecx
daa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x73(%ecx)
jae    80599ad <_IO_stdin_used+0x1be9>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%ebx)
data16
jae    8059960 <_IO_stdin_used+0x1b9c>
bound  %esp,0x63(%ebp)
popa
jne    80599b9 <_IO_stdin_used+0x1bf5>
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
das
and    %dh,0x72(%eax)
imul   $0x0,%gs:0xa(%eax),%di
add    %ch,0x6f(%ebp)
jne    80599ce <_IO_stdin_used+0x1c0a>
je     805999c <_IO_stdin_used+0x1bd8>
and    %ah,0x72(%ecx)
addr16 jne 80599d5 <_IO_stdin_used+0x1c11>
outsb  %gs:(%esi),(%dx)
je     805998c <_IO_stdin_used+0x1bc8>
je     80599dd <_IO_stdin_used+0x1c19>
and    %ch,0x726f2070
and    %ch,0x7361702d
jae    80599a9 <_IO_stdin_used+0x1be5>
data16
and    %ch,%fs:0x75(%ebp)
jae    80599f7 <_IO_stdin_used+0x1c33>
and    %ah,0x65(%edx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
jne    80599f9 <_IO_stdin_used+0x1c35>
bound  %esp,0x72(%ebp)
add    %ch,0x6f(%ebp)
jne    8059a02 <_IO_stdin_used+0x1c3e>
je     80599b6 <_IO_stdin_used+0x1bf2>
data16
jb     8059a08 <_IO_stdin_used+0x1c44>
insl   (%dx),%es:(%edi)
and    %ah,0x77282073
imul   $0x6262696c,0x20(%eax,%ebp,2),%esi
insb   (%dx),%es:(%edi)
imul   $0x20,0x64(%ecx),%ebp
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x75732078,0x75(%esi),%ebp
jo     8059a2d <_IO_stdin_used+0x1c69>
outsl  %ds:(%esi),(%dx)
jb     8059a34 <_IO_stdin_used+0x1c70>
sub    %ecx,(%edx)
add    %al,(%eax)
or     0x6f(%ebp),%ch
jne    8059a37 <_IO_stdin_used+0x1c73>
je     8059a05 <_IO_stdin_used+0x1c41>
and    %dh,0x61(%edi)
jb     8059a3e <_IO_stdin_used+0x1c7a>
imul   $0x652f203a,0x67(%esi),%ebp
je     8059a3c <_IO_stdin_used+0x1c78>
das
insl   (%dx),%es:(%edi)
je     8059a3e <_IO_stdin_used+0x1c7a>
bound  %esp,(%eax)
imul   $0x20746f6e,0x20(%ebx),%esi
ja     8059a5a <_IO_stdin_used+0x1c96>
imul   $0x2820656c,0x62(%ecx,%eiz,2),%esi
gs cs and %dh,%cs:%gs:0x65(%bp,%si)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8059a7e <_IO_stdin_used+0x1cba>
jae    8059a7b <_IO_stdin_used+0x1cb7>
gs
insl   (%dx),%es:(%edi)
sub    %ebp,(%esi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
je     8059a3d <_IO_stdin_used+0x1c79>
jae    8059a38 <_IO_stdin_used+0x1c74>
jo     8059a89 <_IO_stdin_used+0x1cc5>
jae    8059a8f <_IO_stdin_used+0x1ccb>
imul   $0x68742065,0x6c(%edx),%esp
popa
je     8059a46 <_IO_stdin_used+0x1c82>
imul   $0x616d726f,0x66(%esi),%ebp
je     8059a98 <_IO_stdin_used+0x1cd4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
jo     8059aa5 <_IO_stdin_used+0x1ce1>
jb     8059aac <_IO_stdin_used+0x1ce8>
gs and %ah,%fs:%gs:0x79(%edx)
and    %ch,0x6f(%ebp)
jne    8059ab0 <_IO_stdin_used+0x1cec>
je     8059a6c <_IO_stdin_used+0x1ca8>
cmp    %ch,(%ecx)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     8059a58 <_IO_stdin_used+0x1c94>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x70(%ebp)
and    %dh,0x20(%edi,%ebp,2)
fs
popa
je     8059ac4 <_IO_stdin_used+0x1d00>
and    %al,%cs:0x6f(%esi)
jb     8059a85 <_IO_stdin_used+0x1cc1>
popa
arpl   %si,0x61(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8059adf <_IO_stdin_used+0x1d1b>
popa
je     8059ade <_IO_stdin_used+0x1d1a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    8059af1 <_IO_stdin_used+0x1d2d>
and    %dh,0x79(%ebx)
jae    8059af6 <_IO_stdin_used+0x1d32>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
jne    8059af7 <_IO_stdin_used+0x1d33>
je     8059aab <_IO_stdin_used+0x1ce7>
jo     8059afc <_IO_stdin_used+0x1d38>
imul   $0x20200a73,0x74(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
je     8059b09 <_IO_stdin_used+0x1d45>
and    %ch,%gs:(%edi)
jo     8059b18 <_IO_stdin_used+0x1d54>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059b1b <_IO_stdin_used+0x1d57>
je     8059b22 <_IO_stdin_used+0x1d5e>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs or  %cs:%gs:(%edx),%cl
add    %ch,0x6f(%ebp)
jne    8059b2a <_IO_stdin_used+0x1d66>
je     8059af8 <_IO_stdin_used+0x1d34>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8059ae4 <_IO_stdin_used+0x1d20>
jb     8059b35 <_IO_stdin_used+0x1d71>
outsl  %ds:(%esi),(%dx)
je     8059ae9 <_IO_stdin_used+0x1d25>
arpl   %sp,0x6e(%ecx)
and    %ah,0x20(%edi,%ebp,2)
je     8059b3a <_IO_stdin_used+0x1d76>
popa
je     8059af5 <_IO_stdin_used+0x1d31>
sub    %ah,0x66(%ebp)
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %dl,%gs:0x49(%ebp)
inc    %esp
and    %ch,0x73(%ecx)
and    %ah,0x2975
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059b5e <_IO_stdin_used+0x1d9a>
je     8059b2c <_IO_stdin_used+0x1d68>
and    %ah,0x72(%ecx)
addr16 jne 8059b65 <_IO_stdin_used+0x1da1>
outsb  %gs:(%esi),(%dx)
je     8059b1c <_IO_stdin_used+0x1d58>
je     8059b6d <_IO_stdin_used+0x1da9>
and    %ch,0x79656b2d
bound  %ebp,0x74(%ecx)
jae    8059b29 <_IO_stdin_used+0x1d65>
outsl  %ds:(%esi),(%dx)
jb     8059b2c <_IO_stdin_used+0x1d68>
sub    $0x756d206b,%eax
jae    8059b87 <_IO_stdin_used+0x1dc3>
and    %ah,0x65(%edx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
jne    8059b89 <_IO_stdin_used+0x1dc5>
bound  %esp,0x72(%ebp)
add    %ch,0x6f(%ebp)
jne    8059b92 <_IO_stdin_used+0x1dce>
je     8059b60 <_IO_stdin_used+0x1d9c>
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8059b92 <_IO_stdin_used+0x1dce>
and    %ah,0x75282073
outsb  %ds:(%esi),(%dx)
jo     8059b97 <_IO_stdin_used+0x1dd3>
jb     8059bab <_IO_stdin_used+0x1de7>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
data16
data16
jae    8059ba7 <_IO_stdin_used+0x1de3>
je     8059b81 <_IO_stdin_used+0x1dbd>
and    %ch,0x70(%edi)
je     8059bb2 <_IO_stdin_used+0x1dee>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %ecx,(%edx)
add    %al,(%eax)
add    %ch,0x6f(%ebp)
jne    8059bc2 <_IO_stdin_used+0x1dfe>
je     8059b90 <_IO_stdin_used+0x1dcc>
and    %ah,0x6c612073
jb     8059bc3 <_IO_stdin_used+0x1dff>
popa
fs
jns    8059b82 <_IO_stdin_used+0x1dbe>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059bd4 <_IO_stdin_used+0x1e10>
je     8059bcd <_IO_stdin_used+0x1e09>
and    %ch,%fs:0x6e(%edi)
and    %ah,0xa73
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059be6 <_IO_stdin_used+0x1e22>
je     8059bb4 <_IO_stdin_used+0x1df0>
and    %ch,0x6f(%esi)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
jo     8059be6 <_IO_stdin_used+0x1e22>
jb     8059bfb <_IO_stdin_used+0x1e37>
imul   $0x6f66206e,0x6f(%ecx,%ebp,2),%esi
jne    8059bff <_IO_stdin_used+0x1e3b>
add    %al,%fs:(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059c06 <_IO_stdin_used+0x1e42>
je     8059bd4 <_IO_stdin_used+0x1e10>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8059bc1 <_IO_stdin_used+0x1dfd>
imul   $0x2520,0x64(%esi),%bp
jae    8059bc9 <_IO_stdin_used+0x1e05>
imul   $0x6f207325,0x20(%esi),%ebp
jb     8059bd2 <_IO_stdin_used+0x1e0e>
and    $0x73,%eax
add    %ah,-0x2195f7fc(%edi,%ebx,8)
add    $0x8,%al
push   %ss
fiadd  (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
add    %ebx,%esi
add    $0x8,%al
ret    $0x4dd
or     %ah,-0x205bf7fc(%edi,%ebx,8)
add    $0x8,%al
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
dec    %eax
fldl   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
fcmovnu %st(4),%st
add    $0x8,%al
pop    %edi
faddl  (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
xor    $0xdf,%al
add    $0x8,%al
leave
fiadd  (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
imul   $0x4,%edi,%ebx
or     %ah,-0x215ff7fc(%edi,%ebx,8)
add    $0x8,%al
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
dec    %eax
fldl   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
movsb  %ds:(%esi),%es:(%edi)
fild   (%eax,%ecx,1)
faddl  %cs:(%eax,%ecx,1)
nop
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
add    %ebp,-0x5591f7fc(%edx)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
cmc
test   $0xaa6e0804,%eax
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
out    %eax,$0xa9
add    $0x8,%al
fsubrs -0x5591f7fc(%ecx)
add    $0x8,%al
mov    $0x6e0804a9,%esi
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
scas   %es:(%edi),%eax
test   $0xaa6e0804,%eax
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
movsb  %ds:(%esi),%es:(%edi)
test   $0xa97c0804,%eax
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
jo     8059edf <_IO_stdin_used+0x211b>
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
fs
test   $0xaa6e0804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9490804,%eax
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
cmp    -0x56d3f7fc(%ecx),%ebp
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
and    %ch,-0x56f9f7fc(%ecx)
add    $0x8,%al
leave
test   $0x4,%al
or     %ch,-0x56(%esi)
add    $0x8,%al
mov    $0xa8,%al
add    $0x8,%al
mov    0x930804a8,%eax
test   $0x4,%al
or     %ch,-0x56(%esi)
add    $0x8,%al
xchg   %ebp,-0x5791f7fc(%eax)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
stos   %al,%es:(%edi)
add    $0x8,%al
inc    %edi
test   $0x4,%al
or     %ch,-0x56(%esi)
add    $0x8,%al
cmp    %ch,-0x57d6f7fc(%eax)
add    $0x8,%al
sbb    -0x57f4f7fc(%eax),%ch
add    $0x8,%al
jmp    *-0x580cf7fc(%edi)
add    $0x8,%al
out    %eax,$0xa7
add    $0x8,%al
(bad)  -0x5830f7fc(%edi)
add    $0x8,%al
dec    %ebp
jle    805a008 <_IO_stdin_used+0x2244>
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x7e(%ecx)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,0x7e(%esi)
add    $0x108,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edi)
test   %al,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x80584
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%esi)
test   %al,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %cl,(%esp,%eax,4)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %dl,0x80584
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    0x8(%ebp,%eax,1),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    0x8(%ebp,%eax,1),%al
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%ecx)
test   %al,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%edi)
test   %al,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x27000000(%eax)
test   %al,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x80583
adc    %al,(%eax)
add    %ch,(%ebx,%eax,4)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
xchg   %eax,%ecx
(bad)
add    $0x8,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
orb    $0x0,0x80582(%edi)
add    %al,0x8058431(%eax)
add    %al,(%eax)
add    %al,0x2f(%eax)
test   %al,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
cmp    %eax,0x8(%ebp,%eax,1)
and    %dh,(%edi)
test   %al,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,-0x7c(%eax)
add    $0x8,%eax
adc    %bh,(%esi)
test   %al,0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %ch,%cl
test   $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
or     %al,-0x7c(%esi)
add    $0x8,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %cl,-0x7c(%esi)
add    $0x8,%eax
add    -0x7c(%esi),%dl
add    $0x8,%eax
add    -0x7c(%esi),%bl
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
test   %al,%gs:0x8
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
insb   (%dx),%es:(%edi)
test   %al,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
push   $0xffffff84
add    $0x8,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
loop   805a26f <_IO_stdin_used+0x24ab>
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %dl,0x805(%esp,%eax,4)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %dh,-0x7c(%ecx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %bh,-0x7c(%ebx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x5847900(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x5848600(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,0x805(%esp,%eax,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
xchg   %eax,%ecx
test   %al,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %cl,0x80584(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %bl,0x805(%esp,%eax,4)
add    %al,(%ecx)
lcall  $0x0,$0x80584
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x8057e(%ebx)
add    %al,(%eax)
add    0x80584(%edx),%ch
add    %al,(%eax)
add    0x80584(%eax),%ch
add    %al,(%eax)
add    0x80584(%ebx),%dh
add    %al,(%eax)
add    0x805(%esp,%eax,4),%bh
add    %al,(%edx)
imul   $0x65726f,0x6e(%edi),%esp
ja     805a36a <_IO_stdin_used+0x25a6>
jb     805a379 <_IO_stdin_used+0x25b5>
imul   $0x6166203a,0x67(%esi),%ebp
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     805a381 <_IO_stdin_used+0x25bd>
popa
and    %ch,%fs:0x74(%ebp)
popa
bound  %eax,(%eax)
ja     805a387 <_IO_stdin_used+0x25c3>
jb     805a396 <_IO_stdin_used+0x25d2>
imul   $0x7265203a,0x67(%esi),%ebp
jb     805a3a0 <_IO_stdin_used+0x25dc>
jb     805a353 <_IO_stdin_used+0x258f>
jb     805a39a <_IO_stdin_used+0x25d6>
popa
imul   $0x3a732520,%fs:0x67(%esi),%ebp
and    %ah,0x61770073
jb     805a3b4 <_IO_stdin_used+0x25f0>
imul   $0x6163203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
daa
je     805a371 <_IO_stdin_used+0x25ad>
outsl  %ds:(%esi),(%dx)
jo     805a3b9 <_IO_stdin_used+0x25f5>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25203a73
jae    805a35d <_IO_stdin_used+0x2599>
das
insb   (%dx),%es:(%edi)
imul   $0x74696e69,0x2f(%edx),%esp
das
data16
jae    805a3de <_IO_stdin_used+0x261a>
popa
bound  %eax,(%eax)
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
add    %dl,0x55(%ebp)
dec    %ecx
inc    %esp
add    %ch,(%edi)
gs
je     805a3df <_IO_stdin_used+0x261b>
das
insl   (%dx),%es:(%edi)
je     805a3e1 <_IO_stdin_used+0x261d>
bound  %edi,0x25(%esi)
add    %al,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     805a3ab <_IO_stdin_used+0x25e7>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
cmp    (%eax),%ah
and    $0x74000a73,%eax
imul   $0x756f2064,0x65(%ebp),%ebp
je     805a3ac <_IO_stdin_used+0x25e8>
arpl   %sp,0x6e(%ecx)
daa
je     805a3d2 <_IO_stdin_used+0x260e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
cmp    (%eax),%ah
and    $0x73250073,%eax
cmp    (%eax),%ah
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a3f3 <_IO_stdin_used+0x262f>
data16
data16
insb   (%dx),%es:(%edi)
jne    805a44b <_IO_stdin_used+0x2687>
push   $0x61686320
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    805a41c <_IO_stdin_used+0x2658>
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
daa
je     805a40c <_IO_stdin_used+0x2648>
jb     805a453 <_IO_stdin_used+0x268f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f742073
and    %ah,0x25203a73
jae    805a40a <_IO_stdin_used+0x2646>
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
daa
je     805a42a <_IO_stdin_used+0x2666>
arpl   %si,0x65(%edx)
popa
je     805a475 <_IO_stdin_used+0x26b1>
and    %ch,0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x203a7325,0x20(%ebp,%eiz,2),%ebp
and    $0x75282073,%eax
jae    805a48b <_IO_stdin_used+0x26c7>
and    %ch,0x6c66206e
popa
and    %dh,0x6f(%si)
and    %ch,0x76(%edi)
gs
jb     805a4a9 <_IO_stdin_used+0x26e5>
imul   $0x6e616300,0x29(%ebp,%eiz,2),%esp
daa
je     805a462 <_IO_stdin_used+0x269e>
insb   (%dx),%es:(%edi)
imul   $0x636f6c20,0x6b(%esi),%ebp
imul   $0x66,(%eax),%esp
imul   $0x203a7325,0x20(%ebp,%eiz,2),%ebp
and    $0x75282073,%eax
jae    805a4c1 <_IO_stdin_used+0x26fd>
and    %ch,0x6c66206e
popa
and    %dh,0x6f(%si)
and    %ch,0x76(%edi)
gs
jb     805a4df <_IO_stdin_used+0x271b>
imul   $0x63000000,0x29(%ebp,%eiz,2),%esp
popa
outsb  %ds:(%esi),(%dx)
daa
je     805a49a <_IO_stdin_used+0x26d6>
outsl  %ds:(%esi),(%dx)
jo     805a4e2 <_IO_stdin_used+0x271e>
outsb  %ds:(%esi),(%dx)
and    %ch,0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x203a7325,0x20(%ebp,%eiz,2),%ebp
and    $0x75282073,%eax
jae    805a4f9 <_IO_stdin_used+0x2735>
and    %ch,0x6c66206e
popa
and    %dh,0x6f(%si)
and    %ch,0x76(%edi)
gs
jb     805a517 <_IO_stdin_used+0x2753>
imul   $0x43000000,0x29(%ebp,%eiz,2),%esp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a4d3 <_IO_stdin_used+0x270f>
arpl   %si,0x65(%edx)
popa
je     805a51e <_IO_stdin_used+0x275a>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    805a4cc <_IO_stdin_used+0x2708>
push   %eax
gs
jb     805a52e <_IO_stdin_used+0x276a>
popa
jo     805a53c <_IO_stdin_used+0x2778>
and    %dh,0x65(%eax,%ebp,2)
jb     805a534 <_IO_stdin_used+0x2770>
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    805a54b <_IO_stdin_used+0x2787>
popa
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x6300000a,0x3f(%ebp,%eiz,2),%ebp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a50f <_IO_stdin_used+0x274b>
outsl  %ds:(%esi),(%dx)
jo     805a557 <_IO_stdin_used+0x2793>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25282073
jae    805a524 <_IO_stdin_used+0x2760>
and    %ch,0x61746d20
bound  %esp,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a527 <_IO_stdin_used+0x2763>
jne    805a579 <_IO_stdin_used+0x27b5>
fs
popa
je     805a572 <_IO_stdin_used+0x27ae>
add    %al,%fs:(%eax)
gs
jb     805a585 <_IO_stdin_used+0x27c1>
outsl  %ds:(%esi),(%dx)
jb     805a536 <_IO_stdin_used+0x2772>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x646f6d20,0x67(%bp),%ebp
and    %ch,%gs:0x66(%edi)
and    %ah,0x25203a73
jae    805a538 <_IO_stdin_used+0x2774>
add    %al,(%eax)
gs
jb     805a5a5 <_IO_stdin_used+0x27e1>
outsl  %ds:(%esi),(%dx)
jb     805a556 <_IO_stdin_used+0x2792>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x6e776f20,0x67(%bp),%ebp
gs
jb     805a565 <_IO_stdin_used+0x27a1>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x25203a73
jae    805a559 <_IO_stdin_used+0x2795>
add    %ah,0x73252073
and    %ah,0x73252073
and    %ah,0x64252064
or     (%eax),%al
cmp    (%eax),%esp
jb     805a5cc <_IO_stdin_used+0x2808>
jae    805a5dd <_IO_stdin_used+0x2819>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     805a5dd <_IO_stdin_used+0x2819>
add    %al,%fs:(%eax)
add    %bl,0x6d(%ebx)
outsb  %ds:(%esi),(%dx)
je     805a5e6 <_IO_stdin_used+0x2822>
outsb  %ds:(%esi),(%dx)
je     805a5e1 <_IO_stdin_used+0x281d>
cmp    (%eax),%ah
ja     805a5e9 <_IO_stdin_used+0x2825>
jb     805a5f8 <_IO_stdin_used+0x2834>
imul   $0x6f6e203a,0x67(%esi),%ebp
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x65(%esi)
ja     805a608 <_IO_stdin_used+0x2844>
imul   $0x20746120,0x65(%esi),%ebp
je     805a60d <_IO_stdin_used+0x2849>
and    %ah,%gs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0xa73
add    %bl,0x6d(%ebx)
outsb  %ds:(%esi),(%dx)
je     805a61e <_IO_stdin_used+0x285a>
outsb  %ds:(%esi),(%dx)
je     805a619 <_IO_stdin_used+0x2855>
cmp    (%eax),%ah
insb   (%dx),%es:(%edi)
imul   $0x20642520,0x65(%esi),%ebp
imul   $0x69207325,0x20(%esi),%ebp
jae    805a5ef <_IO_stdin_used+0x282b>
bound  %esp,0x64(%ecx)
and    $0xa73,%eax
add    %ch,(%edi)
jae    805a654 <_IO_stdin_used+0x2890>
jae    805a60c <_IO_stdin_used+0x2848>
fs
gs
jbe    805a610 <_IO_stdin_used+0x284c>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%edi),%ebp
cmp    %fs:0x6f6c2f64,%ah
outsl  %ds:(%esi),(%dx)
jo     805a621 <_IO_stdin_used+0x285d>
bound  %esp,0x63(%ecx)
imul   $0x67,0x6e(%ecx),%ebp
pop    %edi
imul   $0x4f00,0x0(%ebp,%eiz,2),%bp
jne    805a677 <_IO_stdin_used+0x28b3>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805a686 <_IO_stdin_used+0x28c2>
and    %dh,0x68(%edi)
imul   $0x64616572,0x20(%ebp,%eiz,2),%ebp
imul   $0x73617020,0x67(%esi),%ebp
jae    805a691 <_IO_stdin_used+0x28cd>
push   $0x65736172
add    %al,(%eax)
and    $0x2f203a73,%eax
fs
gs
jbe    805a651 <_IO_stdin_used+0x288d>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805a65b <_IO_stdin_used+0x2897>
outsl  %fs:(%esi),(%dx)
gs
jae    805a660 <_IO_stdin_used+0x289c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a664 <_IO_stdin_used+0x28a0>
gs
js     805a6b0 <_IO_stdin_used+0x28ec>
jae    805a6bd <_IO_stdin_used+0x28f9>
add    %al,%cs:(%eax)
and    $0x6e203a73,%eax
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%eax)
jb     805a6c4 <_IO_stdin_used+0x2900>
imul   $0x206e6f69,0x73(%ebx),%esi
je     805a6cf <_IO_stdin_used+0x290b>
and    %ch,0x6f(%edi,%ebp,2)
imul   $0x61,(%eax),%esp
je     805a689 <_IO_stdin_used+0x28c5>
das
fs
gs
jbe    805a69d <_IO_stdin_used+0x28d9>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a698 <_IO_stdin_used+0x28d4>
jae    805a6b1 <_IO_stdin_used+0x28ed>
dec    %esi
add    %ah,%ds:0x63203a73
outsl  %ds:(%esi),(%dx)
jne    805a6ec <_IO_stdin_used+0x2928>
and    %ch,%fs:0x6f(%esi)
je     805a6a6 <_IO_stdin_used+0x28e2>
imul   $0x6120,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
jns    805a6af <_IO_stdin_used+0x28eb>
data16
jb     805a6f7 <_IO_stdin_used+0x2933>
and    %ch,%gs:0x6f(%edi,%ebp,2)
jo     805a6b9 <_IO_stdin_used+0x28f5>
fs
gs
jbe    805a706 <_IO_stdin_used+0x2942>
arpl   %sp,0x0(%ebp)
and    $0x43203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    805a714 <_IO_stdin_used+0x2950>
and    %ch,%fs:0x6f(%esi)
je     805a6ce <_IO_stdin_used+0x290a>
imul   $0x6120,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
jns    805a6d7 <_IO_stdin_used+0x2913>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a6dc <_IO_stdin_used+0x2918>
fs
gs
jbe    805a729 <_IO_stdin_used+0x2965>
arpl   %sp,0x2e(%ebp)
and    %cl,0x61(%ebp)
jns    805a72a <_IO_stdin_used+0x2966>
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    805a6ef <_IO_stdin_used+0x292b>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edi,%ebp,2)
jae    805a6fb <_IO_stdin_used+0x2937>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a6ff <_IO_stdin_used+0x293b>
imul   $0x77,0x6f(%esi),%ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
bound  %ebp,0x75(%edi)
je     805a711 <_IO_stdin_used+0x294d>
je     805a75b <_IO_stdin_used+0x2997>
and    %ch,%gs:0x6f(%edi,%ebp,2)
jo     805a71a <_IO_stdin_used+0x2956>
fs
gs
jbe    805a767 <_IO_stdin_used+0x29a3>
arpl   %sp,0x3f(%ebp)
and    %ch,(%eax)
dec    %ecx
data16
and    %dh,0x6f(%ebx)
sub    $0x20,%al
jb     805a771 <_IO_stdin_used+0x29ad>
arpl   %bp,0x6d(%edi)
jo     805a77a <_IO_stdin_used+0x29b6>
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %ah,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
fs
jo     805a78f <_IO_stdin_used+0x29cb>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a74d <_IO_stdin_used+0x2989>
sub    %eax,%cs:(%eax)
add    %al,(%eax)
add    %dh,0x61(%edi)
jb     805a79e <_IO_stdin_used+0x29da>
imul   $0x7325203a,0x67(%esi),%ebp
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     805a7a4 <_IO_stdin_used+0x29e0>
popa
fs
jns    805a763 <_IO_stdin_used+0x299f>
popa
jae    805a7b9 <_IO_stdin_used+0x29f5>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ecx)
je     805a7b1 <_IO_stdin_used+0x29ed>
and    %dh,%fs:0x69(%edi)
je     805a7ba <_IO_stdin_used+0x29f6>
and    %ah,0xa73
ja     805a7bb <_IO_stdin_used+0x29f7>
jb     805a7ca <_IO_stdin_used+0x2a06>
imul   $0x7325203a,0x67(%esi),%ebp
cmp    (%eax),%ah
imul   $0x74697277,0x20(%ebx),%esi
gs
sub    $0x746f7270,%eax
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    $0x20,%al
jne    805a7ee <_IO_stdin_used+0x2a2a>
imul   $0x61657220,0x67(%esi),%ebp
fs
sub    $0x796c6e6f,%eax
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    805a7fc <_IO_stdin_used+0x2a38>
outsb  %fs:(%esi),(%dx)
daa
je     805a7b5 <_IO_stdin_used+0x29f1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x656d206f,0x74(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805a81e <_IO_stdin_used+0x2a5a>
sub    $0x20,%al
gs
js     805a813 <_IO_stdin_used+0x2a4f>
je     805a815 <_IO_stdin_used+0x2a51>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
add    %dh,0x65(%ebx)
je     805a817 <_IO_stdin_used+0x2a53>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a7e5 <_IO_stdin_used+0x2a21>
and    $0x73252c73,%eax
sub    $0x25,%al
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    805a7f4 <_IO_stdin_used+0x2a30>
and    $0x29756c6c,%eax
cmp    (%eax),%ah
jae    805a846 <_IO_stdin_used+0x2a82>
arpl   %sp,0x65(%ebx)
jae    805a849 <_IO_stdin_used+0x2a85>
or     (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a817 <_IO_stdin_used+0x2a53>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     805a804 <_IO_stdin_used+0x2a40>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     805a84f <_IO_stdin_used+0x2a8b>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x3a732520,0x65(%ebx),%esp
and    %ah,0xa73
add    %ch,(%edi)
jo     805a871 <_IO_stdin_used+0x2aad>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jo     805a865 <_IO_stdin_used+0x2aa1>
jb     805a87a <_IO_stdin_used+0x2ab6>
imul   $0x2f00736e,0x6f(%ecx,%ebp,2),%esi
fs
gs
jbe    805a841 <_IO_stdin_used+0x2a7d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a846 <_IO_stdin_used+0x2a82>
and    $0x642f0064,%eax
gs
jbe    805a84e <_IO_stdin_used+0x2a8a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a849 <_IO_stdin_used+0x2a85>
add    %ah,%fs:(%eax)
and    $0x64252064,%eax
and    %ah,0x20756c6c
and    $0x5b383231,%eax
pop    %esi
or     (%eax),%ah
pop    %ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %eax
popa
jae    805a8bb <_IO_stdin_used+0x2af7>
ja     805a8b9 <_IO_stdin_used+0x2af5>
jb     805a8b0 <_IO_stdin_used+0x2aec>
cmp    (%eax),%ah
add    %ch,0x6f(%ecx)
arpl   %si,0x20(%esp,%ebp,2)
dec    %esp
dec    %edi
dec    %edi
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
inc    %esi
inc    %esp
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
imul   $0x203a6c74,0x63(%edi),%ebp
dec    %esp
dec    %edi
dec    %edi
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
inc    %esi
inc    %esp
add    %ch,0x6f(%ecx)
arpl   %si,0x3a(%esp,%ebp,2)
and    %cl,0x4f(%edi,%ecx,2)
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %esp
push   %ebp
push   %ebx
add    %ch,0x6f(%ecx)
arpl   %si,0x3a(%esp,%ebp,2)
and    %cl,0x4f(%edi,%ecx,2)
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %esp
push   %ebp
push   %ebx
ss
xor    $0x0,%al
fs
gs
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805a8e1 <_IO_stdin_used+0x2b1d>
and    $0x203a2973,%eax
jae    805a935 <_IO_stdin_used+0x2b71>
arpl   %sp,0x65(%ebx)
jae    805a938 <_IO_stdin_used+0x2b74>
or     (%eax),%al
bound  %esi,0x67(%ebp)
and    %ch,0x6e(%ecx)
and    %bh,0x73(%eax)
je     805a944 <_IO_stdin_used+0x2b80>
outsb  %ds:(%esi),(%dx)
fs
jne    805a946 <_IO_stdin_used+0x2b82>
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x79(%ebx)
jae    805a946 <_IO_stdin_used+0x2b82>
jae    805a8e2 <_IO_stdin_used+0x2b1e>
jne    805a957 <_IO_stdin_used+0x2b93>
bound  %esp,0x73(%esi)
add    %ah,0x67(%ebx)
jb     805a95b <_IO_stdin_used+0x2b97>
jne    805a95e <_IO_stdin_used+0x2b9a>
add    %ah,0x70(%ebx)
jne    805a966 <_IO_stdin_used+0x2ba2>
gs
je     805a8f6 <_IO_stdin_used+0x2b32>
jb     805a968 <_IO_stdin_used+0x2ba4>
arpl   %bx,0x70(%edi)
imul   $0x64007366,0x65(%eax),%esi
gs
jbe    805a975 <_IO_stdin_used+0x2bb1>
je     805a97a <_IO_stdin_used+0x2bb6>
add    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x65640073,0x66(%ecx,%edi,2),%esi
bound  %esi,0x67(%ebp)
data16
jae    805a91b <_IO_stdin_used+0x2b57>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a93f <_IO_stdin_used+0x2b7b>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    805a98b <_IO_stdin_used+0x2bc7>
push   $0x6d656d20
outsl  %ds:(%esi),(%dx)
jb     805a9a5 <_IO_stdin_used+0x2be1>
add    %ch,(%edi)
jae    805a9a9 <_IO_stdin_used+0x2be5>
jae    805a961 <_IO_stdin_used+0x2b9d>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%edi),%ebp
jae    805a96a <_IO_stdin_used+0x2ba6>
fs
insl   (%dx),%es:(%edi)
das
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:(%edi)
fs
gs
jbe    805a977 <_IO_stdin_used+0x2bb3>
insl   (%dx),%es:(%edi)
popa
jo     805a9bc <_IO_stdin_used+0x2bf8>
gs
jb     805a97e <_IO_stdin_used+0x2bba>
and    $0x642f0073,%eax
insl   (%dx),%es:(%edi)
sub    $0x4c525f00,%eax
inc    %esp
pop    %edi
cmp    $0x4e414c00,%eax
inc    %edi
cmp    $0x4e414c00,%eax
inc    %edi
push   %ebp
inc    %ecx
inc    %edi
inc    %ebp
cmp    $0x5f434c00,%eax
add    %al,0x41(%edx)
push   %ebx
dec    %eax
pop    %edi
inc    %ebp
dec    %esi
push   %esi
cmp    $0x4d4f4800,%eax
inc    %ebp
cmp    $0x53464900,%eax
cmp    $0x42524b00,%eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
inc    %esi
cmp    $0x5f444c00,%eax
add    %cl,0x42(%ecx,%ecx,2)
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x49414d00,%eax
dec    %esp
cmp    $0x534c4e00,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x45485300,%eax
dec    %esp
dec    %esp
cmp    $0x4c485300,%eax
dec    %ecx
inc    %edx
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x5a95e00,%eax
or     %ah,0x5(%ecx,%ebp,4)
or     %ch,-0x57(%esi)
add    $0x8,%eax
add    %dl,-0x57(%edi)
add    $0x5a97208,%eax
or     %dh,-0x57(%edi)
add    $0x5a97c08,%eax
or     %al,-0x78f7fa57(%edx)
test   $0xa9910805,%eax
add    $0x5a99508,%eax
or     %bl,-0x5bf7fa57(%esi)
test   $0xa9980805,%eax
add    $0x5a9ad08,%eax
or     %dh,0x805(%ecx,%ebp,4)
add    %al,(%eax)
and    $0x64252e64,%eax
cs
and    $0x59540064,%eax
push   %eax
inc    %ebp
add    %ah,0x2d2d2073
and    %ah,0x99000073
jo     805aa38 <_IO_stdin_used+0x2c74>
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56fd308,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x5714708,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x572cc08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %ch,(%eax)
jb     805aa64 <_IO_stdin_used+0x2ca0>
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56eba08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bh,0x71(%ebp)
add    $0x56e3408,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,0x1a080570(%ecx)
outsb  %ds:(%esi),(%dx)
add    $0x56fd308,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x5714708,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x572cc08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %ch,(%eax)
jb     805aae4 <_IO_stdin_used+0x2d20>
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56e1a08,%eax
or     %bl,(%edx)
outsb  %ds:(%esi),(%dx)
add    $0x56eba08,%eax
or     %ah,0x27203a73
and    $0x2e002773,%eax
add    %al,0x4b(%edx)
dec    %ebp
inc    %edi
push   %esp
push   %eax
inc    %ebp
add    %ah,0x25732564
push   $0x64
and    $0x64250073,%eax
.byte 0x25
jae    805ab12 <_IO_stdin_used+0x2d4e>
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    %al,(%eax,%eax,1)
add    %dl,-0x34000000(%eax)
icebp
(bad)
jmp    *-0x4740000(%esp,%eax,1)
(bad)
(bad)
mov    $0xcc000009,%eax
or     %bh,%bh
dec    %eax
add    $0x0,%al
add    %bl,-0x1(%esp,%ecx,1)
decl   (%eax)
add    $0xdac0000,%eax
(bad)
decl   0x5(%eax)
add    %al,(%eax)
int3
(bad)
decl   0x4c000005(%eax)
adc    %bh,%bh
dec    %eax
add    $0x11dc0000,%eax
(bad)
jmp    *(%eax)
push   %es
add    %al,(%eax)
jl     805ab74 <_IO_stdin_used+0x2db0>
(bad)
lcall  *0x6(%eax)
add    %al,(%eax)
in     (%dx),%al
adc    %bh,%bh
decl   -0x33fffffa(%eax)
adc    %edi,%edi
dec    %eax
push   %es
add    %al,(%eax)
sbb    $0x14,%al
(bad)
(bad)
call   5405ab87 <_end+0x4bffb49b>
adc    $0x720ffff,%eax
add    %al,(%eax)
fcoml  0x768ffff
add    %al,(%eax)
dec    %esp
push   %ss
(bad)
jmp    *0x16cc0000(%edi,%eax,1)
(bad)
inc    %eax
pop    %es
add    %al,(%eax)
mov    $0x18ffff17,%esp
or     %al,(%eax)
add    %cl,-0x1(%esp,%ebx,1)
lcall  *0x8(%eax)
add    %al,(%eax)
cmp    $0x1d,%al
(bad)
call   *0x1eac0000(%eax,%ecx,1)
(bad)
(bad)
in     (%dx),%al
or     %al,(%eax)
add    %bl,-0x1(%ebx,%eiz,1)
pushl  (%eax)
or     %eax,(%eax)
add    %cl,(%ecx,%ecx,2)
(bad)
pushl  0x0(%ecx,%ecx,1)
add    %cl,0x9d8ffff(%ebx,%ecx,2)
add    %al,(%eax)
pushf
dec    %ebx
(bad)
(bad)
in     (%dx),%al
or     %eax,(%eax)
add    %bl,0xa40ffff(,%ecx,2)
add    %al,(%eax)
sbb    $0x4e,%al
(bad)
incl   -0x43fffff6(%eax)
dec    %esi
(bad)
ljmp   *0x4f5c0000(%edx,%ecx,1)
(bad)
(bad)
fmuls  (%edx)
add    %al,(%eax)
lods   %ds:(%esi),%al
dec    %edi
(bad)
(bad)
clc
or     (%eax),%al
add    %ch,%ah
dec    %edi
(bad)
jmp    *(%ebx,%ecx,1)
add    %al,(%eax)
sbb    $0x50,%al
(bad)
(bad)
cmp    $0xb,%al
add    %al,(%eax)
pushf
push   %eax
(bad)
lcall  *0x0(%ebx,%ecx,1)
add    %bh,%ah
push   %eax
(bad)
call   *0x510c0000(%ebx,%ecx,1)
(bad)
ljmp   *0x3c00000b(%eax)
push   %ecx
(bad)
inc    %eax
or     (%eax),%eax
add    %ch,-0x1(%ecx,%edx,2)
(bad)
fmuls  (%ebx)
add    %al,(%eax)
int3
push   %ecx
(bad)
(bad)
clc
or     (%eax),%eax
add    %bh,%ah
push   %ecx
(bad)
call   *(%eax)
or     $0x0,%al
add    %ch,(%edx,%edx,2)
(bad)
ljmp   *(%eax)
or     $0x0,%al
add    %bl,-0x1(%edx,%edx,2)
incl   0xc(%eax)
add    %al,(%eax)
fcoml  -0x1(%edx)
(bad)
jl     805ac72 <_IO_stdin_used+0x2eae>
add    %al,(%eax)
mov    %ss,-0x1(%ebx)
call   *%esp
or     $0x0,%al
add    %bh,%ah
push   %ebx
(bad)
call   *(%eax)
or     $0x54dc0000,%eax
(bad)
ljmp   *0xd(%eax)
add    %al,(%eax)
dec    %esp
push   %ebp
(bad)
jmp    *0x55dc0000(%ebp,%ecx,1)
(bad)
(bad)
fmull  0x56ac0000
(bad)
pushl  (%esi,%ecx,1)
add    %al,(%eax)
sbb    $0x58,%al
(bad)
decl   0x591c0000(%esi,%ecx,1)
(bad)
call   *%esp
push   %cs
add    %al,(%eax)
or     $0x5a,%al
(bad)
ljmp   *(%edi,%ecx,1)
add    %al,(%eax)
mov    %ds,-0x1(%edx)
incl   0x5b0c0000(%edi,%ecx,1)
(bad)
(bad)
fmull  (%edi)
add    %al,(%eax)
sbb    $0x5c,%al
(bad)
jmp    *(%eax,%edx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %esp
(bad)
(bad)
cmp    $0x10,%al
add    %al,(%eax)
mov    %fs,-0x1(%ecx)
incl   0x1c000010(%eax)
(bad)
(bad)
dec    %eax
adc    %al,(%eax)
add    %ch,0x1110ffff(%edx,%eiz,2)
add    %al,(%eax)
dec    %esp
imul   $0x1150ff,%edi,%edi
add    %bh,0x1184ffff(%ecx,%ebp,2)
add    %al,(%eax)
cld
imul   $0x11b0ff,%edi,%edi
add    %bh,%ah
push   $0xffffffff
incl   (%edx,%edx,1)
add    %al,(%eax)
cmp    $0x6f,%al
(bad)
incl   0x0(%edx,%edx,1)
add    %ch,-0x1(%edi,%ebp,2)
jmp    *0x12(%eax)
add    %al,(%eax)
mov    %gs,-0x1(%edi)
pushl  0x0(%edx,%edx,1)
add    %bh,%ah
jo     805ad22 <_IO_stdin_used+0x2f5e>
ljmp   *0x713c0000(%edx,%edx,1)
(bad)
dec    %esp
adc    (%eax),%al
add    %ch,-0x1(%edx,%esi,2)
lcall  *(%eax)
adc    (%eax),%eax
add    %bl,%ah
jb     805ad3a <_IO_stdin_used+0x2f76>
call   *0x13(%eax)
add    %al,(%eax)
in     (%dx),%al
jae    805ad42 <_IO_stdin_used+0x2f7e>
jmp    *0x756c0000(%ebx,%edx,1)
(bad)
(bad)
fcoml  (%ebx)
add    %al,(%eax)
cmp    $0x77,%al
(bad)
call   *(%esp,%edx,1)
add    %al,(%eax)
cld
ja     805ad5a <_IO_stdin_used+0x2f96>
call   *0x0(%esp,%edx,1)
add    %bl,0x147cffff(%eax,%edi,2)
add    %al,(%eax)
fdivrl -0x1(%ecx)
(bad)
mov    $0xdc000014,%esp
jp     805ad72 <_IO_stdin_used+0x2fae>
push   %esp
adc    $0x0,%al
add    %cl,-0x1(%ebx,%edi,2)
call   *0x7b8c0000(,%edx,1)
(bad)
incl   0x15(%eax)
add    %al,(%eax)
sbb    $0x7d,%al
(bad)
incl   0x4c000015(%eax)
jle    805ad92 <_IO_stdin_used+0x2fce>
inc    %eax
adc    $0x7eec0000,%eax
(bad)
call   *(%esi,%edx,1)
add    %al,(%eax)
dec    %esp
cmp    $0xff,%bh
inc    %esp
push   %ss
add    %al,(%eax)
mov    $0x88ffff8b,%esp
push   %ss
add    %al,(%eax)
sbb    $0x8d,%al
(bad)
jmp    *%esp
push   %ss
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
lcall  *(%eax)
pop    %ss
add    %al,(%eax)
sub    $0x8e,%al
(bad)
pushl  0x17(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
dec    %eax
pop    %ss
add    %al,(%eax)
int3
(bad)
(bad)
(bad)
in     (%dx),%al
pop    %ss
add    %al,(%eax)
sub    $0x90,%al
(bad)
incl   (%eax,%ebx,1)
add    %al,(%eax)
jl     805ad72 <_IO_stdin_used+0x2fae>
(bad)
lcall  *(%eax)
sbb    %al,(%eax)
add    %ch,%ah
nop
(bad)
call   *0x18(%eax)
add    %al,(%eax)
dec    %esp
xchg   %eax,%edx
(bad)
ljmp   *-0x3ffffe8(%eax)
xchg   %eax,%ebx
(bad)
(bad)
fcomps (%eax)
add    %al,(%eax)
cld
xchg   %eax,%esp
(bad)
call   *(%ecx,%ebx,1)
add    %al,(%eax)
jl     805ad9f <_IO_stdin_used+0x2fdb>
(bad)
incl   0x0(%ecx,%ebx,1)
add    %bl,%ah
xchg   %eax,%ebp
(bad)
jmp    *0x0(%ecx,%ebx,1)
add    %bl,(%esi,%edx,4)
(bad)
(bad)
jl     805ae37 <_IO_stdin_used+0x3073>
add    %al,(%eax)
dec    %esp
xchg   %eax,%esi
(bad)
lcall  *-0x73ffffe7(%eax)
xchg   %eax,%esi
(bad)
(bad)
mov    $0xcc000019,%eax
xchg   %eax,%esi
(bad)
call   *%esp
sbb    %eax,(%eax)
add    %bl,(%eax,%ebx,4)
(bad)
lcall  *(%eax)
sbb    (%eax),%al
add    %bh,-0x1(%ebx,%ebx,4)
lcall  *0x1a(%eax)
add    %al,(%eax)
sub    $0xb2,%al
(bad)
lcall  *0x5c00001a(%eax)
mov    $0xff,%bl
push   %eax
sbb    (%eax),%al
add    %bl,0x1b34ffff(,%esi,4)
add    %al,(%eax)
dec    %esp
mov    $0xff,%dh
pushl  0x0(%ebx,%ebx,1)
add    %cl,%ah
mov    $0xff,%dh
ljmp   *-0x48440000(%ebx,%ebx,1)
(bad)
call   *%esp
sbb    (%eax),%eax
add    %cl,(%eax,%edi,4)
(bad)
(bad)
clc
sbb    (%eax),%eax
add    %bl,(%ecx,%edi,4)
(bad)
incl   0x1c(%eax)
add    %al,(%eax)
dec    %esp
mov    $0x1c9cffff,%edx
add    %al,(%eax)
pushf
mov    $0x1cc0ffff,%edx
add    %al,(%eax)
int3
mov    $0x1cd8ffff,%edx
add    %al,(%eax)
cld
mov    $0x1cf0ffff,%edx
add    %al,(%eax)
cmp    $0xbb,%al
(bad)
call   *(%eax)
sbb    $0xbc6c0000,%eax
(bad)
lcall  *0x1d(%eax)
add    %al,(%eax)
mov    %?,0x1d6cff(%edi,%edi,8)
add    %bh,0x1d84ffff(%esp,%edi,4)
add    %al,(%eax)
sbb    $0xbd,%al
(bad)
dec    %eax
sbb    $0xbd3c0000,%eax
(bad)
jmp    *%eax
sbb    $0xbd4c0000,%eax
(bad)
push   %esp
sbb    $0xbd5c0000,%eax
(bad)
decl   (%eax)
push   %ds
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x1e1cffff,%ebp
add    %al,(%eax)
jl     805aeaf <_IO_stdin_used+0x30eb>
(bad)
pushl  (%eax)
push   %ds
add    %al,(%eax)
pushf
mov    $0x1e44ffff,%ebp
add    %al,(%eax)
int3
mov    $0x1e5cffff,%ebp
add    %al,(%eax)
cld
mov    $0x1e74ffff,%ebp
add    %al,(%eax)
pushf
mov    $0x1eacffff,%esi
add    %al,(%eax)
pop    %esp
mov    $0x1ee8ffff,%edi
add    %al,(%eax)
in     (%dx),%al
mov    $0x1f30ffff,%edi
add    %al,(%eax)
int3
sar    $0xff,%bh
js     805af4d <_IO_stdin_used+0x3189>
add    %al,(%eax)
in     (%dx),%al
sar    $0xff,%edi
mov    $0x1f,%al
add    %al,(%eax)
dec    %esp
enter  $0xffff,$0x8
and    %al,(%eax)
add    %bl,0x2040ffff(%eax,%ecx,8)
add    %al,(%eax)
in     (%dx),%al
enter  $0xffff,$0x6c
and    %al,(%eax)
add    %ch,0x2098ffff(%ecx,%ecx,8)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
lret   $0xffff
les    (%eax),%esp
add    %al,(%eax)
sub    $0xcb,%al
(bad)
push   %eax
and    %al,(%eax)
add    %bh,0x2104ffff(%esp,%ecx,8)
add    %al,(%eax)
sub    $0xcf,%al
(bad)
incl   0x0(%ecx,%eiz,1)
add    %bh,%ah
iret
(bad)
ljmp   *-0x2f640000(%ecx,%eiz,1)
(bad)
incl   (%edx,%eiz,1)
add    %al,(%eax)
int3
sar    %edi
pushl  0x22(%eax)
add    %al,(%eax)
cmp    $0xd2,%al
(bad)
ljmp   *-0x2db40000(%edx,%eiz,1)
(bad)
inc    %eax
and    (%eax),%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805afb7 <_IO_stdin_used+0x31f3>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    %ch,%ch
(bad)
inc    %eax
or     %eax,(%eax)
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805afd7 <_IO_stdin_used+0x3213>
js     805afd5 <_IO_stdin_used+0x3211>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,%ah
add    $0x18cffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff8e,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
addb   $0x0,(%eax)
add    %cl,-0x1(%edi,%eax,1)
decl   0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x36,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %bl,-0x1(%eax,%ecx,1)
lcall  *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70300e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
cmp    $0xa,%al
(bad)
(bad)
jg     805b0aa <_IO_stdin_used+0x32e6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,0x1(%eax)
add    %al,(%eax)
jl     805b0f0 <_IO_stdin_used+0x332c>
(bad)
incl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffa4,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cwtl
add    %eax,(%eax)
add    %dh,0x99ffff(%ebx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0xff1b9fc(%ebx)
add    %eax,(%edx)
test   %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
sbb    $0xc,%al
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
pop    %esp
or     $0xff,%al
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x2300e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
add    (%eax),%al
add    %bh,%ah
or     $0xff,%al
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
add    (%eax),%al
add    %ch,0x12dffff(,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%esi),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bl,0x24000002(%eax)
push   %cs
(bad)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4304(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
loopne 805b284 <_IO_stdin_used+0x34c0>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %cs
(bad)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
mov    0x72ffff0e,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
push   %cs
and    %ah,0xe(%ebx)
add    $0x46,%al
push   %cs
and    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
add    (%eax),%eax
add    %al,(%edi,%ecx,1)
(bad)
jmp    *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xffffff8e,0x2300e48
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
add    (%eax),%eax
add    %bl,0x481ffff(%edi,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x3a00e46
mov    $0xa,%bh
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,%al
add    (%eax),%eax
add    %ch,%ah
adc    %edi,%edi
jmp    *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%esi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
or     %fs:(%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,(%esp,%eax,1)
add    %al,(%eax)
mov    0x70ffff14,%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x57500e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
(bad)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0x0(%esp,%eax,1)
add    %bh,-0x550000eb(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
xchg   %eax,%esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x24000004(%eax)
sbb    %bh,%bh
ljmp   *0x25(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2a00e46
ljmp   $0xc343,$0x140e0a03
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,%ah
add    $0x0,%al
add    %dl,0x73ffff3f(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e48
popl   (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xor    %al,0xf1cc0000
(bad)
decl   0xe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x10,%eax
push   %eax
add    $0x41ac0000,%eax
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
fs
add    $0x41a80000,%eax
(bad)
(bad)
jle    805b50f <_IO_stdin_used+0x374b>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
(bad)  (%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
mov    $0xd4000005,%eax
inc    %edx
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
clc
add    $0x43940000,%eax
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     805b5b9 <_IO_stdin_used+0x37f5>
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x4f,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
and    $0x6,%al
add    %al,(%eax)
or     %al,-0x1(%edi,%edi,8)
sahf
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     805b5e5 <_IO_stdin_used+0x3821>
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x4f,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
push   %eax
push   %es
add    %al,(%eax)
jl     805b63a <_IO_stdin_used+0x3876>
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jnp    805b615 <_IO_stdin_used+0x3851>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,0x6(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
inc    %esp
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pushf
push   %es
add    %al,(%eax)
rolb   $0x2b,-0x1(%edi,%edi,8)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x6,%ah
add    %al,(%eax)
fadds  -0x1(%edi,%edi,8)
js     805b65e <_IO_stdin_used+0x389a>
add    %al,(%eax)
add    %al,0xe(%ebx)
addb   $0x2,(%ecx)
dec    %ebx
or     (%esi),%cl
add    $0x42,%al
or     0xe(%edi),%esp
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
aam    $0x6
add    %al,(%eax)
cmp    %al,-0x1(%ebp)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%esp
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
or     $0x7,%al
add    %al,(%eax)
pusha
inc    %ebp
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%edi)
add    %al,(%eax)
pop    %esp
inc    %ebp
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    %al,(%edi)
add    %al,(%eax)
je     805b723 <_IO_stdin_used+0x395f>
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
push   %eax
pop    %es
add    %al,(%eax)
mov    %es,-0x1(%ebp)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%eax)
push   %cs
add    $0x45,%al
or     0xa(%eax),%esi
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
jo     805b719 <_IO_stdin_used+0x3955>
add    %al,(%eax)
int3
inc    %ebp
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
in     $0x45,%al
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    0xfc000007,%al
inc    %ebp
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x14000007,%eax
inc    %esi
(bad)
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %edx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,%ah
pop    %es
add    %al,(%eax)
pop    %eax
inc    %esi
(bad)
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
dec    %esp
or     %al,(%eax)
add    %dh,0x6fffff46(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %eax
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,-0x1bfffff8(%eax)
inc    %esi
(bad)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%edx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,%al
or     %al,(%eax)
add    %ch,-0x1(%edi,%eax,2)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
sbb    $0x9,%al
add    %al,(%eax)
mov    0x84ffff47,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x0(%ecx,%ecx,1)
add    %bh,%al
inc    %edi
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,0x48700000(%ecx,%ecx,1)
(bad)
ljmp   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,(%edx,%ecx,1)
add    %al,(%eax)
mov    %cl,-0x1(%ecx)
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%edi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,0x0(%edx,%ecx,1)
add    %al,0x4a(%eax)
(bad)
(bad)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x4ad80000(%edx,%ecx,1)
(bad)
(bad)
jg     805ba4e <_IO_stdin_used+0x3c8a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2200e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%ah
or     (%eax),%al
add    %al,(%eax)
dec    %ebx
(bad)
(bad)
jg     805baa6 <_IO_stdin_used+0x3ce2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2200e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x0(%ebx,%ecx,1)
add    %ch,(%eax)
dec    %ebx
(bad)
incl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x41100e0a(%ebx),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
pushf
or     (%eax),%eax
add    %dh,%al
dec    %ebx
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
push   %ebx
push   %cs
and    %dh,0xe(%eax)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %dh,0x4c280000(%ebx,%ecx,1)
(bad)
call   *(%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e46
mov    $0x3,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,%al
or     (%eax),%eax
add    %al,(%ecx,%edx,2)
(bad)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ebx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,0xc(%eax)
add    %al,(%eax)
dec    %esp
push   %ecx
(bad)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %cl,(%eax,%eax,1)
add    %dl,0x698ffff(%ecx,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
enter  $0xc,$0x0
hlt
push   %edi
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
cld
or     $0x0,%al
add    %dh,(%eax)
pop    %eax
(bad)
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x4b,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
sub    %cl,0x58440000
(bad)
(bad)
incb   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6e500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0xe,%ch
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jl     805bd2b <_IO_stdin_used+0x3f67>
add    %al,(%eax)
lock pop %eax
(bad)
pushl  0x4
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %bh,0x5cf00000(%ebp,%ecx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%al
or     $0x5d040000,%eax
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
or     $0x5d100000,%eax
(bad)
jmp    *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
and    %eax,(%ebx)
sub    %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
and    $0xe,%al
add    %al,(%eax)
dec    %eax
pop    %esi
(bad)
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
jne    805bde9 <_IO_stdin_used+0x4025>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
add    %al,(%eax)
add    %al,0x0(%esi,%ecx,1)
add    %ch,0x5e(%eax)
(bad)
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x7ff1b7fc(%ebx)
add    %eax,(%edx)
fwait
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
nop
push   %cs
add    %al,(%eax)
dec    %esp
pop    %edi
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4504(%ebx)
add    0xa(%ebp),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
enter  $0xe,$0x0
test   %bl,-0x1(%edi)
decl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %ecx
push   %cs
add    $0xc3,%al
(bad)
inc    %esi
push   %cs
inc    %eax
addl   $0xffffff87,0x4860285
add    (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0xf,%al
add    %al,(%eax)
inc    %eax
pusha
(bad)
pushl  0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    (%edx),%al
loope  805bee9 <_IO_stdin_used+0x4125>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
push   %esp
sldt   (%eax)
mov    %ah,-0x1(%ecx)
dec    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x2ff1b7fc(%ebx)
inc    %ecx
add    %bh,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    %cs,(%edi)
add    %al,(%eax)
and    %ah,-0x1(%ebx)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff98,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
int3
sldt   (%eax)
mov    0x91ffff63,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x5ff1b7fe(%ebx)
add    (%edx),%eax
push   %ecx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
hlt
sldt   (%eax)
sbb    %ah,-0x1(%edi,%edi,8)
xor    (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4900e48
or     %fs:(%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
xor    $0x10,%al
add    %al,(%eax)
sbb    %ah,-0x1(%ebp)
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    0xa(%edi),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %al,(%eax)
add    %ah,%al
gs
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
addb   $0x7a,(%ecx)
or     (%esi),%cl
add    $0x43,%al
or     0xe(%esi),%esp
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x66300000(%eax,%edx,1)
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x44000010,%eax
data16
(bad)
call   *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2b00e46
in     (%dx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
clc
adc    %al,(%eax)
add    %dl,0x126ffff(%edi,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2b00e46
mov    $0x41140e0a,%edx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax),%edx
add    %al,(%eax)
cmp    %dl,(%ecx)
add    %al,(%eax)
test   %ch,-0x1(%eax)
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x1900e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
mov    %ss,(%ecx)
add    %al,(%eax)
shrb   -0x1(%eax)
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x46,(%ebx)
push   %cs
rolb   $0x2,(%ecx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0x11,%esp
push   $0xffffffff
jmp    *0xb(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3f00e46
repnz add (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %ch,0x154ffff(,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
pop    %esp
adc    (%eax),%al
add    %dh,(%eax)
jbe    805c202 <_IO_stdin_used+0x443e>
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     %fs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dl,0x4c000012(%eax)
jbe    805c236 <_IO_stdin_used+0x4472>
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,%al
adc    (%eax),%al
add    %dh,0x13affff(%esi,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbe,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x13(%eax)
add    %al,(%eax)
pushf
ja     805c2e6 <_IO_stdin_used+0x4522>
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x5ff1b9fe(%ebx)
add    %eax,(%edx)
dec    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %fs:(%eax),%eax
add    %bl,%al
ja     805c30a <_IO_stdin_used+0x4546>
call   *0x0(%ecx)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %bh,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
jl     805c331 <_IO_stdin_used+0x456d>
add    %al,(%eax)
and    %bh,-0x1(%eax)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,(%eax,%eax,1)
add    %al,(%eax)
nop
adc    (%eax),%eax
add    %bl,-0x1(%eax,%edi,2)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     805c35b <_IO_stdin_used+0x4597>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,%al
adc    (%eax),%eax
add    %dl,0x156ffff(%eax,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%ebp,%eax,8)
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
and    %dl,(%eax,%eax,1)
add    %bl,0x1b0ffff(%ecx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %esi
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa016203,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,0x14(%eax)
add    %al,(%eax)
sbb    $0x7b,%al
(bad)
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xae60204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %cl,0x7be00000(%esp,%edx,1)
(bad)
(bad)
js     805c436 <_IO_stdin_used+0x4672>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     %fs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x30000014,%esp
jl     805c462 <_IO_stdin_used+0x469e>
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
fcoml  (%eax,%eax,1)
add    %dh,0x7c(%eax)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edi)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
hlt
adc    $0x0,%al
add    %bl,0x2fffff7c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    %dl,0x7cac0000
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
xor    %dl,0x7ccc0000
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%edi)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
dec    %esp
adc    $0x7cf00000,%eax
(bad)
incl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4d00e46
sbb    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
adc    $0x7dfc0000,%eax
(bad)
call   *0x3(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x40d00e46
jmp    805c562 <_IO_stdin_used+0x479e>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rclb   0x811c0000
(bad)
jmp    *0x16(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1880e43
xchg   %eax,%esi
push   %ss
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%eax)
push   %ss
add    %al,(%eax)
mov    %ss,0x124ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jnp    805c5f8 <_IO_stdin_used+0x4834>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
push   $0x64000016
cwtl
(bad)
pushl  0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
pop    %ebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %ss
add    %al,(%eax)
loopne 805c5eb <_IO_stdin_used+0x4827>
(bad)
ljmp   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
push   %ss
add    %al,(%eax)
rcrb   0x78ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
bound  %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x24,%al
add    %al,(%eax)
add    %ah,(%edi,%edx,1)
add    %al,(%eax)
sbb    %bl,0xe4ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x2ff1b9fe(%ebx)
add    (%edx),%eax
dec    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
pop    %ss
add    %al,(%eax)
loopne 805c68d <_IO_stdin_used+0x48c9>
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
add    0xe(%ecx),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,0x17(%eax)
add    %al,(%eax)
or     $0x9c,%al
(bad)
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%edi
adc    %al,-0x3d(%esi)
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bh,-0x2bffffe9(%eax)
pushf
(bad)
ljmp   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
pop    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    $0x18,%al
add    %al,(%eax)
test   $0x9d,%al
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jae    805c7d5 <_IO_stdin_used+0x4a11>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
cmp    %bl,(%eax)
add    %al,(%eax)
aam    $0x9d
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
push   %eax
sbb    %al,(%eax)
add    %ch,%ah
popf
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
push   $0x4000018
sahf
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,0x24000018(%eax)
sahf
(bad)
jmp    *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%edx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,%al
sbb    %al,(%eax)
add    %cl,(%edi,%ebx,4)
(bad)
call   *0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x18,%al
add    %al,(%eax)
sbb    %bl,0x29ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%ebp)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bh,%ah
sbb    %al,(%eax)
add    %dh,(%eax)
lahf
(bad)
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jnp    805c8c7 <_IO_stdin_used+0x4b03>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4c,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x19(%eax)
add    %al,(%eax)
dec    %esp
lahf
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
sbb    %eax,(%eax)
add    %dl,-0x1(%edi,%ebx,4)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx,%ebx,1)
add    %dl,-0x61(%eax)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x4c000019(%eax)
lahf
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x60b80000(%ecx,%ebx,1)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x44000019(%eax)
lahf
(bad)
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x50000019,%esp
lahf
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0x19
add    %al,(%eax)
push   $0x23ffff9f
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
sbb    %eax,(%eax)
add    %al,-0x5f000061(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,(%edx,%ebx,1)
add    %al,(%eax)
call   bc05c96c <_end+0xb3ffd280>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x22c0e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ah,0x1a(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    0x89ffff,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %ch,-0x4bffffe6(%eax)
mov    0xd7ffff,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
lock sbb (%eax),%al
add    %cl,-0x1(%ecx,%eiz,4)
lcall  *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3ff1b9fc(%ebx)
adc    %al,(%edx)
pop    %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,(%eax)
sbb    (%eax),%eax
add    %dh,(%edx,%eiz,4)
(bad)
call   *0x6(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
sbbb   $0x0,(%ebx)
add    %bh,(%eax,%ebp,4)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %bh,0xa(%ebx)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x5400001b,%eax
test   $0xff,%al
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37f04(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,%ah
sbb    (%eax),%eax
add    %bh,-0x58(%eax)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
sbb    $0x0,%al
add    %cl,(%ecx,%ebp,4)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,(%esp,%ebx,1)
add    %al,(%eax)
mov    0xb3ffffa9,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x1c(%eax)
add    %al,(%eax)
xor    $0xaa,%al
(bad)
call   *0x1(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jl     805cc3a <_IO_stdin_used+0x4e76>
add    %al,(%eax)
mov    $0xab,%al
(bad)
ljmp   *0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
ret    $0xe0a
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%esp
add    %bh,-0x52200000(%esp,%ebx,1)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ah,-0x51b80000(,%ebx,1)
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x7c000000
sbb    $0xae900000,%eax
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%al
sbb    $0xaf540000,%eax
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,(%esi,%ebx,1)
add    %al,(%eax)
mov    %ch,0x2ffff(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cmp    %bl,(%esi)
add    %al,(%eax)
test   %ch,0x3cffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
mov    $0xb5,%al
add    $0x8,%al
nop
mov    $0x4,%ch
.byte 0x8
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    (%eax),%al
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,0xc000003(%edx)
add    %al,(%eax)
add    %bh,0xd08049c(%eax)
add    %al,(%eax)
add    %bl,0x190805(%ebp,%edi,2)
add    %al,(%eax)
lock fiadd 0x1b08
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
hlt
fiadd  0x1c08
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
loopne 805dee6 <_IO_stdin_used+0x6122>
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %dl,(%eax)
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
loopne 805df88 <_IO_stdin_used+0x61c4>
or     %al,(%edx)
add    %al,(%eax)
add    %bl,%al
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ah,%al
xchg   %eax,%edi
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
mov    $0x97,%al
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x70(%edi)
xchg   %eax,%esi
add    $0x8,%al
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x34(%edi)
xchg   %eax,%ebp
add    $0x8,%al
add    %al,(%eax)
cld
fiadd  0x8
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%dh
pushf
add    $0x8,%al
push   %es
popf
add    $0x8,%al
push   %ss
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    805dfcb <_IO_stdin_used+0x6207>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    805e00c <_IO_stdin_used+0x6248>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
es
lahf
add    $0x8,%al
ss
lahf
add    $0x8,%al
inc    %esi
lahf
add    $0x8,%al
push   %esi
lahf
add    $0x8,%al
data16
lahf
add    $0x8,%al
jbe    805e04d <_IO_stdin_used+0x6289>
add    $0x8,%al
xchg   %bl,-0x6069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lahf
add    $0x8,%al
mov    $0x9f,%dh
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
out    %al,$0x9f
add    $0x8,%al
negb   -0x5ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    0xa0260804,%al
add    $0x8,%al
mov    %ss:0xa0460804,%al
add    $0x8,%al
push   %esi
mov    0xa0660804,%al
add    $0x8,%al
jbe    805e08e <_IO_stdin_used+0x62ca>
add    $0x8,%al
xchg   %ah,-0x5f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa0b60804,%al
add    $0x8,%al
(bad)
mov    0xa0d60804,%al
add    $0x8,%al
out    %al,$0xa0
add    $0x8,%al
mulb   -0x5ef9f7fc(%eax)
add    $0x8,%al
push   %ss
mov    0xa1260804,%eax
add    $0x8,%al
mov    %ss:0xa1460804,%eax
add    $0x8,%al
push   %esi
mov    0xa1660804,%eax
add    $0x8,%al
jbe    805e0cf <_IO_stdin_used+0x630b>
add    $0x8,%al
xchg   %ah,-0x5e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa1b60804,%eax
add    $0x8,%al
(bad)
mov    0xa1d60804,%eax
add    $0x8,%al
out    %al,$0xa1
add    $0x8,%al
mulb   -0x5df9f7fc(%ecx)
add    $0x8,%al
push   %ss
mov    %al,0xa2260804
add    $0x8,%al
mov    %al,%ss:0xa2460804
add    $0x8,%al
push   %esi
mov    %al,0xa2660804
add    $0x8,%al
jbe    805e110 <_IO_stdin_used+0x634c>
add    $0x8,%al
xchg   %ah,-0x5d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    %al,0xa2b60804
add    $0x8,%al
(bad)
mov    %al,0xa2d60804
add    $0x8,%al
out    %al,$0xa2
add    $0x8,%al
mulb   -0x5cf9f7fc(%edx)
add    $0x8,%al
push   %ss
mov    %eax,0xa3260804
add    $0x8,%al
mov    %eax,%ss:0xa3460804
add    $0x8,%al
push   %esi
mov    %eax,0xa3660804
add    $0x8,%al
jbe    805e151 <_IO_stdin_used+0x638d>
add    $0x8,%al
xchg   %ah,-0x5c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    %eax,0xa3b60804
add    $0x8,%al
(bad)
mov    %eax,0xa3d60804
add    $0x8,%al
out    %al,$0xa3
add    $0x8,%al
mulb   -0x5bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsb  %es:(%esi),%es:(%edi)
add    $0x8,%al
movsb  %ss:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
push   %esi
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
data16
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
jbe    805e192 <_IO_stdin_used+0x63ce>
add    $0x8,%al
xchg   %ah,0x4a49608(%esp,%eax,1)
or     %ah,-0x49f7fb5c(%esi)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa4
add    $0x8,%al
mulb   0x4a50608(%esp,%eax,1)
or     %dl,(%esi)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %es:(%esi),%es:(%edi)
add    $0x8,%al
movsl  %ss:(%esi),%es:(%edi)
add    $0x8,%al
inc    %esi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
push   %esi
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
movsw  %ds:(%esi),%es:(%edi)
add    $0x8,%al
jbe    805e1d3 <_IO_stdin_used+0x640f>
add    $0x8,%al
xchg   %ah,-0x5a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
mov    $0xa5,%dh
add    $0x8,%al
(bad)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
(bad)
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
out    %al,$0xa5
add    $0x8,%al
mulb   -0x59f9f7fc(%ebp)
add    $0x8,%al
push   %ss
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%es:(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ss:(%esi)
add    $0x8,%al
inc    %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
push   %esi
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
data16
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
jbe    805e214 <_IO_stdin_used+0x6450>
add    $0x8,%al
xchg   %ah,-0x5969f7fc(%esi)
add    $0x8,%al
fsubrs 0x805(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popa
add    %al,(%eax)
add    %bh,0x80582(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
ret
(bad)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
enter  $0x582,$0x8
push   $0xcd000000
(bad)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
aad    $0x82
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
pop    %ecx
jle    805e308 <_IO_stdin_used+0x6544>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
fild   0x805(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    805e31e <_IO_stdin_used+0x655a>
add    %al,(%eax)
je     805e2a2 <_IO_stdin_used+0x64de>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
out    %eax,$0x82
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
push   %esi
jle    805e348 <_IO_stdin_used+0x6584>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
repnz (bad)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
cli
(bad)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
add    $0x83,%al
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
or     $0x83,%al
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
adc    $0x83,%al
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %ch,0x80583
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
sbb    0x805(%ebx),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
add    %al,(%eax)
add    %bl,(%edi)
addl   $0x0,0x108
add    %al,(%eax)
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
sub    $0x83,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
xor    0x805(%ebx),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
addl   $0x0,%ds:0x8
add    %al,(%eax)
add    %al,(%eax)
mov    %eax,(%eax)
add    %al,(%eax)
dec    %ecx
addl   $0x0,0x8
add    %al,(%eax)
add    %al,(%eax)
mov    (%eax),%al
add    %al,(%eax)
push   %esi
addl   $0x0,0x8
add    %al,(%eax)
add    %al,(%eax)
mov    (%eax),%eax
add    %al,(%eax)
addw   $0x0,0x8
add    %al,(%eax)
add    %al,(%eax)
mov    %es,(%eax)
add    %al,(%eax)
jae    805e3b5 <_IO_stdin_used+0x65f1>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x7f000000(%ebp)
addl   $0x0,0x8
add    %al,(%eax)
add    %al,(%eax)
mov    (%eax),%es
add    %al,(%eax)
lea    0x805(%ebx),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popl   (%eax)
add    %al,(%eax)
sahf
addl   $0x0,0x8
add    %al,(%eax)
add    %al,(%eax)
nop
add    %al,(%eax)
add    %ch,0x80583(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
out    %eax,$0x7d
add    $0x8,%eax
add    %ah,%ah
in     $0x5,%eax
or     %bh,0x10805(%ebx,%eax,4)
add    %al,(%eax)
loopne 805e49b <_IO_stdin_used+0x66d7>
add    $0x5829608,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%ah
in     $0x5,%eax
or     %al,%cl
addl   $0x0,0x8
fsub   %st(5),%st
add    $0x583cc08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%ah
in     $0x5,%eax
or     %bl,%al
addl   $0x0,0x8
shl    $0x5,%ch
or     %ah,%cl
addl   $0x0,0x8
mov    $0xec0805e5,%esp
addl   $0x0,0x8
shl    %ch
add    $0x583f308,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,%ah
in     $0x5,%eax
or     %bh,%ah
addl   $0x0,0x8
enter  $0x5e5,$0x8
std
addl   $0x0,0x8
(bad)
in     $0x5,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
incl   (%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
.byte 0xff
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    72 <_init-0x8049c46>
je     6 <_init-0x8049cb2>
add    %al,(%eax)
push   %eax
mov    %esi,%edi
push   %esi
