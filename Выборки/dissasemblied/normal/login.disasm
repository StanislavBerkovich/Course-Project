das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %cl,-0x210780ce(%ecx)
test   $0x6b4b7d22,%eax
cmp    -0x5da7d9e(%ecx),%edx
cli
jbe    804821a <_init-0x138e>
.byte 0xd9
adc    %eax,(%eax)
add    %al,(%eax)
jae    80481b2 <_init-0x13f6>
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
lock and %ecx,-0x5ef7fbc8(%ebx,%ecx,1)
enter  $0x2414,$0x6a
add    %al,(%eax)
add    %al,(%eax)
jae    80481d2 <_init-0x13d6>
add    %al,(%eax)
jne    80481d6 <_init-0x13d2>
add    %al,(%eax)
js     80481da <_init-0x13ce>
add    %al,(%eax)
jns    80481de <_init-0x13ca>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jnp    80481e6 <_init-0x13c2>
add    %al,(%eax)
jge    80481ea <_init-0x13be>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
(bad)
add    %al,(%eax)
add    %al,-0x7c000000(%ebx)
add    %al,(%eax)
add    %al,-0x7a000000(%ebp)
add    %al,(%eax)
add    %ch,%dl
shr    %cl,%edi
push   %cs
in     (%dx),%eax
rcr    %ecx
fbstp  (%edx)
(bad)
notl   (%edx)
fdivrl -0x2f(%ecx)
mov    $0xb9,%dh
(bad)
icebp
push   %cs
fnstenv 0x58(%ecx)
sbb    $0xac,%al
dec    %ebx
jecxz  80481ec <_init-0x13bc>
mov    $0xc47c92e3,%ebx
mov    $0xd2df409c,%ecx
iret
sbb    $0x1c8bf238,%eax
inc    %edx
inc    %ebp
aad    $0xec
clc
mov    (%ebx),%gs
lret   $0x89c4
add    $0xdbaf7b90,%eax
jmp    *%edi
mov    %bl,%bl
pushl  -0x58ed085e(%ebx)
frstor 0x6041876b(%ebx)
hlt
jae    80481e3 <_init-0x13c5>
icebp
.byte 0x12
addb   $0x0,(%edx)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loopne 8048393 <_init-0x1215>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fldl   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%dh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     8048576 <_init-0x1032>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%bl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    8048736 <_init-0xe72>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loop   8048764 <_init-0xe44>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esp
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esp,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
data16
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %cs:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    $0x0,%al
add    %dh,%ah
stc
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %cl,%bl
add    %eax,(%eax)
add    %dl,%al
repz add $0x8,%al
push   %esi
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x19200
add    %ah,0x34(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,0x3(%esi)
repnz add $0x8,%al
xor    (%eax),%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x4ca00,%eax
add    %ch,0x80495(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %dl,%bh
add    $0x0,%al
add    %al,0x34(%eax)
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,(%edi)
add    %eax,(%eax)
add    %ah,(%edx,%edi,8)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
hlt
add    %al,(%eax)
add    %ah,0x805(%ebp,%esi,1)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
mov    $0x40000004,%edx
xor    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
inc    %ebx
add    (%eax),%al
add    %ah,-0x3ef7fb0b(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x38b00
add    %al,0x5(%esp,%esi,1)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
rolb   (%eax,%eax,1)
add    %al,0x34(%eax)
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%eax)
add    %bh,(%esp,%eax,1)
add    %al,(%eax)
inc    %eax
repnz add $0x8,%al
mov    (%ecx),%es
add    %al,(%eax)
adc    (%eax),%al
or     $0x4bb00,%eax
add    %al,0x34(%eax)
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %cl,%al
add    (%eax),%eax
add    %ah,-0xb(%eax)
add    $0x8,%al
xor    $0x12000000,%eax
add    %cl,0x1cc00
add    %dh,(%eax)
cmc
add    $0x8,%al
add    %al,%cs:(%eax)
add    %dl,(%edx)
add    %cl,0x38400
add    %ah,0x5(%esp,%esi,1)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x40000004,%esp
xor    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
sbb    (%ecx),%eax
add    %al,(%eax)
push   %eax
cwtl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0xc0000002,%eax
icebp
add    $0x8,%al
xor    $0x12000000,%eax
.byte 0x0
.byte 0xd
add    %ch,0x62(%ecx,%ebp,2)
jo     8048b37 <_init-0xa71>
insl   (%dx),%es:(%edi)
jae,pn 8048b49 <_init-0xa5f>
xor    %al,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048b4b <_init-0xa5d>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048b76 <_init-0xa32>
popa
jb     8048b79 <_init-0xa2f>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048b6b <_init-0xa3d>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048b8c <_init-0xa1c>
gs
jae    8048b1c <_init-0xa8c>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048b88 <_init-0xa20>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jo     8048b99 <_init-0xa0f>
insl   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     8048ba2 <_init-0xa06>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048ba6 <_init-0xa02>
jae    8048bb6 <_init-0x9f2>
imul   $0x6d617000,0x6e(%edi),%ebp
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
jae    8048bb8 <_init-0x9f0>
jae    8048bc8 <_init-0x9e0>
imul   $0x6d617000,0x6e(%edi),%ebp
pop    %edi
jae    8048bc4 <_init-0x9e4>
je     8048bc0 <_init-0x9e8>
imul   $0x6d617000,0x6d(%ebp,%eiz,2),%esi
pop    %edi
addr16
gs
je     8048bcd <_init-0x9db>
imul   $0x6d617000,0x6d(%ebp,%eiz,2),%esi
pop    %edi
jae    8048bde <_init-0x9ca>
je     8048bde <_init-0x9ca>
jb     8048be2 <_init-0x9c6>
add    %dh,%fs:0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
jae    8048bf9 <_init-0x9af>
popa
jb     8048bfc <_init-0x9ac>
add    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
jae    8048c03 <_init-0x9a5>
jb     8048bf6 <_init-0x9b2>
jb     8048c05 <_init-0x9a3>
outsl  %ds:(%esi),(%dx)
jb     8048b96 <_init-0xa12>
jo     8048bf9 <_init-0x9af>
insl   (%dx),%es:(%edi)
pop    %edi
popa
arpl   %sp,0x74(%ebx)
pop    %edi
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%di)
je     8048ba4 <_init-0xa04>
jo     8048c07 <_init-0x9a1>
insl   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048c11 <_init-0x997>
outsb  %ds:(%esi),(%dx)
jbe    8048c1b <_init-0x98d>
imul   $0x6d617000,0x74(%ebx),%esi
pop    %edi
arpl   %bp,0x61(%eax)
jne    8048c30 <_init-0x978>
push   $0x6b6f74
jo     8048c24 <_init-0x984>
insl   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
popa
jne    8048c44 <_init-0x964>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
add    %ch,%gs:0x62(%ecx,%ebp,2)
jo     8048c40 <_init-0x968>
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%ebx),%esi
xor    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x6e6f635f,0x63(%ebx),%esi
jbe    8048bf5 <_init-0x9b3>
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048c79 <_init-0x92f>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8048c87 <_init-0x921>
imul   $0x6f6f7268,0x63(%eax,%eax,1),%esp
je     8048c1c <_init-0x98c>
jae    8048c92 <_init-0x916>
jb     8048c83 <_init-0x925>
jo     8048c9b <_init-0x90d>
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8048ca0 <_init-0x908>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048ca3 <_init-0x905>
je     8048c3c <_init-0x96c>
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
jo     8048cb7 <_init-0x8f1>
je     8048ca7 <_init-0x901>
add    %dh,0x65(%ebx)
je     8048cb5 <_init-0x8f3>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     8048cc1 <_init-0x8e7>
arpl   %bp,0x70(%ebp)
add    %ah,0x6e(%ebx,%eiz,2)
addr16
gs
je     8048cd2 <_init-0x8d6>
gs
js     8048cd5 <_init-0x8d3>
add    %ch,0x70(%edi)
je     8048ccf <_init-0x8d9>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048cdf <_init-0x8c9>
arpl   %bp,0x72(%eax)
add    %dh,0x61(%edi)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
fs
jne    8048cee <_init-0x8ba>
add    %dh,0x65(%eax)
jb     8048cf5 <_init-0x8b3>
outsl  %ds:(%esi),(%dx)
jb     8048c86 <_init-0x922>
arpl   %sp,%fs:0x65(%edi)
je     8048d00 <_init-0x8a8>
gs
js     8048d03 <_init-0x8a5>
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jo     8048cfa <_init-0x8ae>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x5f,%al
xor    (%eax),%al
data16
addr16
gs
je     8048d13 <_init-0x895>
outsb  %gs:(%si),(%dx)
je     8048ca5 <_init-0x903>
imul   $0x6f726774,0x69(%esi),%ebp
jne    8048d1e <_init-0x88a>
jae    8048cb0 <_init-0x8f8>
jae    8048d1b <_init-0x88d>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048d29 <_init-0x87f>
arpl   %si,0x79(%eax)
add    %ah,0x6f(%esi)
jb     8048d2e <_init-0x87a>
add    %bl,0x5f(%edi)
jae    8048d3c <_init-0x86c>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6c6c6165,0x72(%eax,%eax,1),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048d53 <_init-0x855>
jb     8048d55 <_init-0x853>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x65(%ebx)
je     8048d5c <_init-0x84c>
outsb  %gs:(%si),(%dx)
je     8048cee <_init-0x8ba>
addr16
gs
je     8048d62 <_init-0x846>
imul   $0x74667274,0x73(%eax,%eax,1),%esp
imul   $0x615f5f00,0x65(%ebp),%ebp
jae    8048d76 <_init-0x832>
gs
jb     8048d7a <_init-0x82e>
pop    %edi
popaw
imul   $0x6e697765,0x72(%eax,%eax,1),%ebp
add    %dh,%fs:0x75(%eax)
je     8048d8a <_init-0x81e>
outsb  %gs:(%si),(%dx)
je     8048d1c <_init-0x88c>
outsb  %gs:(%esi),(%dx)
fs
jo     8048d98 <_init-0x810>
outsb  %gs:(%esi),(%dx)
je     8048d25 <_init-0x883>
jae    8048d9b <_init-0x80d>
jb     8048d9d <_init-0x80b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     8048da5 <_init-0x803>
jns    8048d33 <_init-0x875>
addr16
gs
je     8048d9e <_init-0x80a>
jb     8048da7 <_init-0x801>
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     8048d3e <_init-0x86a>
outsw  %gs:(%esi),(%dx)
data16
add    %ah,0x78(%ebp)
arpl   %bp,%gs:0x0(%ebp,%eiz,2)
data16
addr16
gs
je     8048dc2 <_init-0x7e6>
add    %ah,0x65(%edi)
je     8048dc4 <_init-0x7e4>
ja     8048dc4 <_init-0x7e4>
popa
insl   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     8048dcd <_init-0x7db>
jo     8048dc8 <_init-0x7e0>
add    %dh,%fs:0x74(%ebx)
jb     8048dd1 <_init-0x7d7>
outsb  %gs:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%bx)
je     8048dd5 <_init-0x7d3>
fs
fs
jb     8048de1 <_init-0x7c7>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048de6 <_init-0x7c2>
je     8048d83 <_init-0x825>
jae    8048dea <_init-0x7be>
je     8048dfc <_init-0x7ac>
je     8048dee <_init-0x7ba>
outsb  %ds:(%esi),(%dx)
je     8048d8c <_init-0x81c>
pop    %edi
pop    %edi
gs
jb     8048e03 <_init-0x7a5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x73637400,0x6e(%edi),%ebp
gs
je     8048e04 <_init-0x7a4>
je     8048e19 <_init-0x78f>
jb     8048da7 <_init-0x801>
arpl   %bp,0x64(%eax)
imul   $0x64616572,0x0(%edx),%esi
add    %bl,0x5f(%edi)
jae    8048e2f <_init-0x779>
jae    8048e24 <_init-0x784>
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x6e(%ebp)
fs
addr16 jb 8048e2a <_init-0x77e>
outsb  %ds:(%esi),(%dx)
je     8048dc8 <_init-0x7e0>
je     8048e3e <_init-0x76a>
jns    8048e3a <_init-0x76e>
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     8048e43 <_init-0x765>
jo     8048e4a <_init-0x75e>
add    %bl,0x5f(%edi)
data16
jo     8048e4e <_init-0x75a>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
arpl   %bp,0x6f(%eax)
ja     8048e59 <_init-0x74f>
add    %ah,0x65(%edi)
je     8048e63 <_init-0x745>
imul   $0x73747570,0x66(%eax,%eax,1),%esp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048e6b <_init-0x73d>
add    %ah,0x6e(%ebp)
fs
jae    8048e7c <_init-0x72c>
outsb  %gs:(%esi),(%dx)
je     8048e10 <_init-0x798>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048e8d <_init-0x71b>
jb     8048e7e <_init-0x72a>
popa
jae    8048e83 <_init-0x725>
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
jae    8048e9a <_init-0x70e>
jb     8048e96 <_init-0x712>
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048ea7 <_init-0x701>
outsb  %ds:(%esi),(%dx)
jbe    8048e45 <_init-0x763>
jae    8048eba <_init-0x6ee>
arpl   %sp,0x6e(%ecx)
data16
add    %dh,0x75(%edx)
jae    8048eb5 <_init-0x6f3>
jb     8048ec1 <_init-0x6e7>
imul   $0x6f,(%eax),%eax
jo     8048ecb <_init-0x6dd>
popa
jb     8048ec1 <_init-0x6e7>
add    %dh,0x74(%ebx)
fs
gs
jb     8048ed3 <_init-0x6d5>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
popa
insb   (%dx),%es:(%edi)
popa
jb     8048eda <_init-0x6ce>
add    %ah,0x6e(%ebp)
fs
jae    8048eda <_init-0x6ce>
outsb  %gs:(%esi),(%dx)
je     8048e77 <_init-0x731>
pop    %edi
pop    %edi
jae    8048ee9 <_init-0x6bf>
jo     8048eef <_init-0x6b9>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     8048eff <_init-0x6a9>
imul   $0x77707465,0x67(%eax,%eax,1),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     8048e98 <_init-0x710>
addr16
gs
je     8048f0f <_init-0x699>
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     8048f0d <_init-0x69b>
outsl  %ds:(%esi),(%dx)
jae    8048f1c <_init-0x68c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     8048f25 <_init-0x683>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    8048eba <_init-0x6ee>
addr16
gs
je     8048f23 <_init-0x685>
jne    8048f29 <_init-0x67f>
add    %ah,%fs:0x6e(%ebp)
fs
jne    8048f3b <_init-0x66d>
outsb  %gs:(%esi),(%dx)
je     8048ecb <_init-0x6dd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
je     8048f3b <_init-0x66d>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%ebx,%esi,2)
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048f44 <_init-0x664>
push   $0x63740072
addr16
gs
je     8048f4b <_init-0x65d>
je     8048f60 <_init-0x648>
jb     8048eee <_init-0x6ba>
data16
jb     8048f56 <_init-0x652>
gs
popa
fs
fs
jb     8048f60 <_init-0x648>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %dh,0x65(%ebx)
je     8048f72 <_init-0x636>
imul   $0x74757475,0x70(%eax,%eax,1),%esp
insb   (%dx),%es:(%edi)
imul   $0x65677300,0x65(%esi),%ebp
je     8048f84 <_init-0x624>
outsb  %gs:(%si),(%dx)
je     8048f16 <_init-0x692>
addr16
gs
je     8048f8f <_init-0x619>
je     8048f81 <_init-0x627>
outsb  %ds:(%esi),(%dx)
je     8048f1f <_init-0x689>
addr16
gs
je     8048f8a <_init-0x61e>
jb     8048f8c <_init-0x61c>
imul   $0x706f6600,0x72(%edi,%ebx,2),%esp
outsb  %gs:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     8048f9d <_init-0x60b>
js     8048fae <_init-0x5fa>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8048fba <_init-0x5ee>
add    %dh,0x65(%ebx)
je     8048fb3 <_init-0x5f5>
imul   $0x6d637274,0x73(%eax,%eax,1),%esp
jo     8048f56 <_init-0x652>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048fd6 <_init-0x5d2>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8048f6f <_init-0x639>
jae    8048fe5 <_init-0x5c3>
jo     8048fd6 <_init-0x5d2>
jo     8048fee <_init-0x5ba>
add    %dh,0x72(%edi)
imul   $0x736f6c63,0x0(%ebp,%eiz,2),%esi
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x72(%bp)
gs add %bl,%gs:0x5f(%edi)
outsb  %gs:(%esi),(%dx)
jbe    8048ff9 <_init-0x5af>
jb     8049001 <_init-0x5a7>
outsb  %ds:(%esi),(%dx)
add    %bl,0x66(%edi)
imul   $0x6e695f00,0x69(%esi),%ebp
imul   $0x74616465,0x5f(%eax,%eax,1),%esi
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8049023 <_init-0x585>
popa
jb     8049026 <_init-0x582>
add    %cl,0x42(%ecx,%ecx,2)
push   %eax
inc    %ecx
dec    %ebp
pop    %edi
dec    %ebp
dec    %ecx
push   %ebx
inc    %ebx
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
dec    %esp
dec    %ecx
inc    %edx
push   %eax
inc    %ecx
dec    %ebp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    $0x200,%eax
add    %al,0x2000200
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,0x7000200
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000200
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000200
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
or     %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x200
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000400
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,0x6000500
add    %al,0x2000200
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%ebx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%ecx)
add    %eax,(%eax)
add    %eax,(%eax)
or     (%ecx),%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
shrb   0x93f(%eax)
or     %al,(%eax)
jecxz  804914e <_init-0x45a>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pusha
das
push   $0x5000004
add    %dh,%bl
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %cl,(%eax)
add    %ah,0x10000001
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0xb0000,0xd(%ecx),%ebp
incb   (%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0xa0000,0xd(%ecx),%ebp
or     %al,0x100000
add    %al,(%eax)
pop    %ss
imul   $0x90000,0xd(%ecx),%ebp
adc    0x100000,%al
add    %al,(%eax)
adc    $0x69,%al
imul   $0x51c,0x70000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
jb     80491e1 <_init-0x3c7>
imul   $0x60000,(%ecx),%ecx
es
add    $0x100000,%eax
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
xor    0x100000,%al
add    %al,(%eax)
je     80491fb <_init-0x3ad>
imul   $0x30000,(%ecx),%ecx
cmp    $0x5,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x20000,%eax
dec    %eax
add    $0x0,%eax
cld
das
add    $0x340608,%eax
add    %al,0x34(%eax)
add    $0x7b0508,%eax
add    %al,0x5(%esp,%esi,1)
or     %al,0x6000007d
xor    $0x5,%al
or     %al,0x64000075
xor    $0x5,%al
.byte 0x8
.byte 0x5
addl   $0x0,(%eax)
or     $0x30,%al
add    $0x10708,%eax
add    %dl,(%eax)
xor    %al,0x20708
add    %dl,(%eax,%esi,1)
add    $0x30708,%eax
add    %bl,(%eax)
xor    %al,0x40708
add    %bl,(%eax,%esi,1)
add    $0x50708,%eax
add    %ah,(%eax)
xor    %al,0x60708
add    %ah,(%eax,%esi,1)
add    $0x70708,%eax
add    %ch,(%eax)
xor    %al,0x90708
add    %ch,(%eax,%esi,1)
add    $0xa0708,%eax
add    %dh,(%eax)
xor    %al,0xb0708
add    %dh,(%eax,%esi,1)
add    $0xc0708,%eax
add    %bh,(%eax)
xor    %al,0xd0708
add    %bh,(%eax,%esi,1)
add    $0xe0708,%eax
add    %al,0x30(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%esi,1)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x30(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%esi,1)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x30(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%esi,1)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x30(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%esi,1)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
xor    %al,0x170708
add    %ah,0x5(%eax,%esi,1)
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,0x30(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%esi,1)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x30(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%esi,1)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x30(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%esi,1)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
xorb   $0x5,(%eax)
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
test   %dh,(%eax)
add    $0x200708,%eax
add    %cl,0x7080530(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%esi,1)
add    %al,(%eax)
nop
xor    %al,0x230708
add    %dl,0x24070805(%eax,%esi,1)
add    %al,(%eax)
cwtl
xor    %al,0x250708
add    %bl,0x26070805(%eax,%esi,1)
add    %al,(%eax)
mov    0x7080530,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %al,0x280708
add    %ch,0x7080530(%eax)
test   %eax,(%eax)
add    %ch,0x29070805(%eax,%esi,1)
add    %al,(%eax)
mov    $0x30,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%esi,1)
add    %al,(%eax)
mov    $0x7080530,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%esi,1)
add    %al,(%eax)
(bad)
xor    %al,0x2e0708
add    %al,%ah
xor    %al,0x2f0708
add    %cl,%al
xor    %al,0x300708
add    %cl,%ah
xor    %al,0x310708
add    %dl,%al
xor    %al,0x320708
add    %dl,%ah
xor    %al,0x330708
add    %bl,%al
xor    %al,0x340708
add    %bl,%ah
xor    %al,0x350708
add    %ah,%al
xor    %al,0x360708
add    %ah,%ah
xor    %al,0x370708
add    %ch,%al
xor    %al,0x380708
add    %ch,%ah
xor    %al,0x390708
add    %dh,%al
xor    %al,0x3a0708
add    %dh,%ah
xor    %al,0x3b0708
add    %bh,%al
xor    %al,0x3c0708
add    %bh,%ah
xor    %al,0x3d0708
add    %al,(%eax)
xor    %eax,0x3e0708
add    %al,(%ecx,%esi,1)
add    $0x3f0708,%eax
add    %cl,(%eax)
xor    %eax,0x400708
add    %cl,(%ecx,%esi,1)
add    $0x410708,%eax
add    %dl,(%eax)
xor    %eax,0x420708
add    %dl,(%ecx,%esi,1)
add    $0x430708,%eax
add    %bl,(%eax)
xor    %eax,0x440708
add    %bl,(%ecx,%esi,1)
add    $0x450708,%eax
add    %ah,(%eax)
xor    %eax,0x460708
add    %ah,(%ecx,%esi,1)
add    $0x470708,%eax
add    %ch,(%eax)
xor    %eax,0x480708
add    %ch,(%ecx,%esi,1)
add    $0x490708,%eax
add    %dh,(%eax)
xor    %eax,0x4a0708
add    %dh,(%ecx,%esi,1)
add    $0x4b0708,%eax
add    %bh,(%eax)
xor    %eax,0x4c0708
add    %bh,(%ecx,%esi,1)
add    $0x4d0708,%eax
add    %al,0x31(%eax)
add    $0x4e0708,%eax
add    %al,0x5(%ecx,%esi,1)
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
dec    %eax
xor    %eax,0x500708
add    %cl,0x5(%ecx,%esi,1)
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
push   %eax
xor    %eax,0x520708
add    %dl,0x5(%ecx,%esi,1)
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
pop    %eax
xor    %eax,0x540708
add    %bl,0x5(%ecx,%esi,1)
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pusha
xor    %eax,0x560708
add    %ah,0x5(%ecx,%esi,1)
or     %al,(%edi)
push   %edi
add    %al,(%eax)
push   $0x7080531
pop    %eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xor    %eax,0x590708
add    %dh,0x31(%eax)
add    $0x5b0708,%eax
add    %dh,0x5(%ecx,%esi,1)
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
js     8049533 <_init-0x75>
add    $0x5d0708,%eax
add    %bh,0x5(%ecx,%esi,1)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
xorb   $0x5,(%ecx)
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
test   %dh,(%ecx)
add    $0x600708,%eax
add    %cl,0x7080531(%eax)
popa
add    %al,(%eax)
mov    %?,(%ecx)
add    $0x620708,%eax
add    %dl,0x7080531(%eax)
add    %al,%fs:(%eax)
xchg   %eax,%esp
xor    %eax,0x650708
add    %bl,0x7080531(%eax)
data16
add    %al,(%eax)
pushf
xor    %eax,0x670708
add    %ah,0x7080531(%eax)
push   $0x31a40000
add    $0x690708,%eax
add    %ch,0x7080531(%eax)
push   $0x0
add    %ch,0x6b070805(%ecx,%esi,1)
add    %al,(%eax)
mov    $0x31,%al
add    $0x6c0708,%eax
add    %dh,0x6d070805(%ecx,%esi,1)
add    %al,(%eax)
mov    $0x7080531,%eax
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
mov    $0x7080531,%esp
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
(bad)
xor    %eax,0x700708
add    %al,%ah
xor    %eax,0x710708
add    %cl,%al
xor    %eax,0x720708
push   %ebx
sub    $0x8,%esp
call   804b7f0 <fchmod@plt+0x1b20>
add    $0x9a4f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     80495c6 <_init+0x1e>
call   8049910 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8053004
jmp    *0x8053008
add    %al,(%eax)
jmp    *0x805300c
push   $0x0
jmp    80495d0 <_init+0x28>
jmp    *0x8053010
push   $0x8
jmp    80495d0 <_init+0x28>
jmp    *0x8053014
push   $0x10
jmp    80495d0 <_init+0x28>
jmp    *0x8053018
push   $0x18
jmp    80495d0 <_init+0x28>
jmp    *0x805301c
push   $0x20
jmp    80495d0 <_init+0x28>
jmp    *0x8053020
push   $0x28
jmp    80495d0 <_init+0x28>
jmp    *0x8053024
push   $0x30
jmp    80495d0 <_init+0x28>
jmp    *0x8053028
push   $0x38
jmp    80495d0 <_init+0x28>
jmp    *0x805302c
push   $0x40
jmp    80495d0 <_init+0x28>
jmp    *0x8053030
push   $0x48
jmp    80495d0 <_init+0x28>
jmp    *0x8053034
push   $0x50
jmp    80495d0 <_init+0x28>
jmp    *0x8053038
push   $0x58
jmp    80495d0 <_init+0x28>
jmp    *0x805303c
push   $0x60
jmp    80495d0 <_init+0x28>
jmp    *0x8053040
push   $0x68
jmp    80495d0 <_init+0x28>
jmp    *0x8053044
push   $0x70
jmp    80495d0 <_init+0x28>
jmp    *0x8053048
push   $0x78
jmp    80495d0 <_init+0x28>
jmp    *0x805304c
push   $0x80
jmp    80495d0 <_init+0x28>
jmp    *0x8053050
push   $0x88
jmp    80495d0 <_init+0x28>
jmp    *0x8053054
push   $0x90
jmp    80495d0 <_init+0x28>
jmp    *0x8053058
push   $0x98
jmp    80495d0 <_init+0x28>
jmp    *0x805305c
push   $0xa0
jmp    80495d0 <_init+0x28>
jmp    *0x8053060
push   $0xa8
jmp    80495d0 <_init+0x28>
jmp    *0x8053064
push   $0xb0
jmp    80495d0 <_init+0x28>
jmp    *0x8053068
push   $0xb8
jmp    80495d0 <_init+0x28>
jmp    *0x805306c
push   $0xc0
jmp    80495d0 <_init+0x28>
jmp    *0x8053070
push   $0xc8
jmp    80495d0 <_init+0x28>
jmp    *0x8053074
push   $0xd0
jmp    80495d0 <_init+0x28>
jmp    *0x8053078
push   $0xd8
jmp    80495d0 <_init+0x28>
jmp    *0x805307c
push   $0xe0
jmp    80495d0 <_init+0x28>
jmp    *0x8053080
push   $0xe8
jmp    80495d0 <_init+0x28>
jmp    *0x8053084
push   $0xf0
jmp    80495d0 <_init+0x28>
jmp    *0x8053088
push   $0xf8
jmp    80495d0 <_init+0x28>
jmp    *0x805308c
push   $0x100
jmp    80495d0 <_init+0x28>
jmp    *0x8053090
push   $0x108
jmp    80495d0 <_init+0x28>
jmp    *0x8053094
push   $0x110
jmp    80495d0 <_init+0x28>
jmp    *0x8053098
push   $0x118
jmp    80495d0 <_init+0x28>
jmp    *0x805309c
push   $0x120
jmp    80495d0 <_init+0x28>
jmp    *0x80530a0
push   $0x128
jmp    80495d0 <_init+0x28>
jmp    *0x80530a4
push   $0x130
jmp    80495d0 <_init+0x28>
jmp    *0x80530a8
push   $0x138
jmp    80495d0 <_init+0x28>
jmp    *0x80530ac
push   $0x140
jmp    80495d0 <_init+0x28>
jmp    *0x80530b0
push   $0x148
jmp    80495d0 <_init+0x28>
jmp    *0x80530b4
push   $0x150
jmp    80495d0 <_init+0x28>
jmp    *0x80530b8
push   $0x158
jmp    80495d0 <_init+0x28>
jmp    *0x80530bc
push   $0x160
jmp    80495d0 <_init+0x28>
jmp    *0x80530c0
push   $0x168
jmp    80495d0 <_init+0x28>
jmp    *0x80530c4
push   $0x170
jmp    80495d0 <_init+0x28>
jmp    *0x80530c8
push   $0x178
jmp    80495d0 <_init+0x28>
jmp    *0x80530cc
push   $0x180
jmp    80495d0 <_init+0x28>
jmp    *0x80530d0
push   $0x188
jmp    80495d0 <_init+0x28>
jmp    *0x80530d4
push   $0x190
jmp    80495d0 <_init+0x28>
jmp    *0x80530d8
push   $0x198
jmp    80495d0 <_init+0x28>
jmp    *0x80530dc
push   $0x1a0
jmp    80495d0 <_init+0x28>
jmp    *0x80530e0
push   $0x1a8
jmp    80495d0 <_init+0x28>
jmp    *0x80530e4
push   $0x1b0
jmp    80495d0 <_init+0x28>
jmp    *0x80530e8
push   $0x1b8
jmp    80495d0 <_init+0x28>
jmp    *0x80530ec
push   $0x1c0
jmp    80495d0 <_init+0x28>
jmp    *0x80530f0
push   $0x1c8
jmp    80495d0 <_init+0x28>
jmp    *0x80530f4
push   $0x1d0
jmp    80495d0 <_init+0x28>
jmp    *0x80530f8
push   $0x1d8
jmp    80495d0 <_init+0x28>
jmp    *0x80530fc
push   $0x1e0
jmp    80495d0 <_init+0x28>
jmp    *0x8053100
push   $0x1e8
jmp    80495d0 <_init+0x28>
jmp    *0x8053104
push   $0x1f0
jmp    80495d0 <_init+0x28>
jmp    *0x8053108
push   $0x1f8
jmp    80495d0 <_init+0x28>
jmp    *0x805310c
push   $0x200
jmp    80495d0 <_init+0x28>
jmp    *0x8053110
push   $0x208
jmp    80495d0 <_init+0x28>
jmp    *0x8053114
push   $0x210
jmp    80495d0 <_init+0x28>
jmp    *0x8053118
push   $0x218
jmp    80495d0 <_init+0x28>
jmp    *0x805311c
push   $0x220
jmp    80495d0 <_init+0x28>
jmp    *0x8053120
push   $0x228
jmp    80495d0 <_init+0x28>
jmp    *0x8053124
push   $0x230
jmp    80495d0 <_init+0x28>
jmp    *0x8053128
push   $0x238
jmp    80495d0 <_init+0x28>
jmp    *0x805312c
push   $0x240
jmp    80495d0 <_init+0x28>
jmp    *0x8053130
push   $0x248
jmp    80495d0 <_init+0x28>
jmp    *0x8053134
push   $0x250
jmp    80495d0 <_init+0x28>
jmp    *0x8053138
push   $0x258
jmp    80495d0 <_init+0x28>
jmp    *0x805313c
push   $0x260
jmp    80495d0 <_init+0x28>
jmp    *0x8053140
push   $0x268
jmp    80495d0 <_init+0x28>
jmp    *0x8053144
push   $0x270
jmp    80495d0 <_init+0x28>
jmp    *0x8053148
push   $0x278
jmp    80495d0 <_init+0x28>
jmp    *0x805314c
push   $0x280
jmp    80495d0 <_init+0x28>
jmp    *0x8053150
push   $0x288
jmp    80495d0 <_init+0x28>
jmp    *0x8053154
push   $0x290
jmp    80495d0 <_init+0x28>
jmp    *0x8053158
push   $0x298
jmp    80495d0 <_init+0x28>
jmp    *0x805315c
push   $0x2a0
jmp    80495d0 <_init+0x28>
jmp    *0x8053160
push   $0x2a8
jmp    80495d0 <_init+0x28>
jmp    *0x8053164
push   $0x2b0
jmp    80495d0 <_init+0x28>
jmp    *0x8053168
push   $0x2b8
jmp    80495d0 <_init+0x28>
jmp    *0x805316c
push   $0x2c0
jmp    80495d0 <_init+0x28>
jmp    *0x8053170
push   $0x2c8
jmp    80495d0 <_init+0x28>
jmp    *0x8053174
push   $0x2d0
jmp    80495d0 <_init+0x28>
jmp    *0x8053178
push   $0x2d8
jmp    80495d0 <_init+0x28>
jmp    *0x805317c
push   $0x2e0
jmp    80495d0 <_init+0x28>
jmp    *0x8053180
push   $0x2e8
jmp    80495d0 <_init+0x28>
jmp    *0x8053184
push   $0x2f0
jmp    80495d0 <_init+0x28>
jmp    *0x8053188
push   $0x2f8
jmp    80495d0 <_init+0x28>
jmp    *0x805318c
push   $0x300
jmp    80495d0 <_init+0x28>
jmp    *0x8053190
push   $0x308
jmp    80495d0 <_init+0x28>
jmp    *0x8053194
push   $0x310
jmp    80495d0 <_init+0x28>
jmp    *0x8053198
push   $0x318
jmp    80495d0 <_init+0x28>
jmp    *0x805319c
push   $0x320
jmp    80495d0 <_init+0x28>
jmp    *0x80531a0
push   $0x328
jmp    80495d0 <_init+0x28>
jmp    *0x80531a4
push   $0x330
jmp    80495d0 <_init+0x28>
jmp    *0x80531a8
push   $0x338
jmp    80495d0 <_init+0x28>
jmp    *0x80531ac
push   $0x340
jmp    80495d0 <_init+0x28>
jmp    *0x80531b0
push   $0x348
jmp    80495d0 <_init+0x28>
jmp    *0x80531b4
push   $0x350
jmp    80495d0 <_init+0x28>
jmp    *0x80531b8
push   $0x358
jmp    80495d0 <_init+0x28>
jmp    *0x80531bc
push   $0x360
jmp    80495d0 <_init+0x28>
jmp    *0x80531c0
push   $0x368
jmp    80495d0 <_init+0x28>
jmp    *0x80531c4
push   $0x370
jmp    80495d0 <_init+0x28>
jmp    *0x80531c8
push   $0x378
jmp    80495d0 <_init+0x28>
push   %ebp
mov    $0x1f,%ecx
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x24c0,%esp
mov    0xc(%ebp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x24bc(%esp)
xor    %eax,%eax
lea    0x40(%esp),%edi
mov    0x8(%ebp),%esi
movl   $0x0,0x3c(%esp)
movl   $0x0,0x38(%esp)
rep stos %eax,%es:(%edi)
mov    0x8053440,%eax
mov    %eax,0x28(%esp)
call   804c1f0 <fchmod@plt+0x2520>
movl   $0x804fbfa,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
movl   $0x804fa9b,0x4(%esp)
movl   $0x8050881,(%esp)
call   8049be0 <bindtextdomain@plt>
movl   $0x8050881,(%esp)
call   80497e0 <textdomain@plt>
call   804bdb0 <fchmod@plt+0x20e0>
call   8049790 <getuid@plt>
test   %eax,%eax
mov    (%ebx),%eax
sete   0x8053488
mov    %eax,(%esp)
call   804bbe0 <fchmod@plt+0x1f10>
mov    %eax,0x80535a0
call   80497d0 <geteuid@plt>
test   %eax,%eax
jne    804b7af <fchmod@plt+0x1adf>
cmp    $0x1,%esi
mov    $0x1,%edi
jle    8049dd8 <fchmod@plt+0x108>
mov    %esi,%edx
mov    %ebx,%esi
jmp    8049da7 <fchmod@plt+0xd7>
add    $0x1,%edi
cmp    %edx,%edi
je     8049dd4 <fchmod@plt+0x104>
mov    (%esi,%edi,4),%ebx
cmpb   $0x2d,(%ebx)
jne    8049da0 <fchmod@plt+0xd0>
mov    %ebx,(%esp)
mov    %edx,0x2c(%esp)
call   80499a0 <strlen@plt>
mov    0x2c(%esp),%edx
cmp    $0x2,%eax
ja     8049e60 <fchmod@plt+0x190>
cmpb   $0x2d,0x1(%ebx)
jne    8049da0 <fchmod@plt+0xd0>
cmpb   $0x0,0x2(%ebx)
jne    8049da0 <fchmod@plt+0xd0>
mov    %esi,%ebx
mov    %edx,%esi
movl   $0x804faad,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   80499e0 <getopt@plt>
cmp    $0xffffffff,%eax
je     8049e65 <fchmod@plt+0x195>
sub    $0x64,%eax
cmp    $0xe,%eax
ja     8049e60 <fchmod@plt+0x190>
jmp    *0x804fef0(,%eax,4)
mov    0x8053464,%eax
movb   $0x1,0x805348b
movl   $0xca,0x80531e8
00
mov    %eax,0x80531ec
jmp    8049dd8 <fchmod@plt+0x108>
lea    0x0(%esi),%esi
movb   $0x1,0x805348d
jmp    8049dd8 <fchmod@plt+0x108>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053464,%eax
movb   $0x1,0x805348a
movl   $0xc9,0x80531e8
00
mov    %eax,0x80531ec
jmp    8049dd8 <fchmod@plt+0x108>
lea    0x0(%esi),%esi
movb   $0x1,0x805348c
jmp    8049dd8 <fchmod@plt+0x108>
lea    0x0(%esi,%eiz,1),%esi
call   804b960 <fchmod@plt+0x1c90>
cmpb   $0x0,0x805348b
je     804a9cb <fchmod@plt+0xcfb>
cmpb   $0x0,0x805348a
jne    8049e60 <fchmod@plt+0x190>
cmpb   $0x0,0x805348c
jne    8049e60 <fchmod@plt+0x190>
cmpb   $0x0,0x8053488
je     804b76b <fchmod@plt+0x1a9b>
mov    0x8053460,%eax
cmp    %eax,%esi
jle    8049ee8 <fchmod@plt+0x218>
cmpl   $0x0,0x8053490
jne    804b747 <fchmod@plt+0x1a77>
mov    (%ebx,%eax,4),%eax
mov    %eax,(%esp)
call   804e510 <fchmod@plt+0x4840>
or     $0xffffffff,%ecx
mov    %eax,0x8053490
mov    0x8053460,%eax
mov    (%ebx,%eax,4),%edx
xor    %eax,%eax
mov    %edx,%edi
repnz scas %es:(%edi),%al
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
not    %ecx
sub    $0x1,%ecx
mov    %ecx,0x8(%esp)
call   8049a20 <memset@plt>
addl   $0x1,0x8053460
cmpb   $0x0,0x805348b
je     8049efe <fchmod@plt+0x22e>
cmpl   $0x0,0x8053490
jne    8049e60 <fchmod@plt+0x190>
cmpb   $0x0,0x805348c
je     8049f14 <fchmod@plt+0x244>
cmpl   $0x0,0x8053490
je     8049e60 <fchmod@plt+0x190>
movl   $0x0,(%esp)
call   8049c00 <isatty@plt>
test   %eax,%eax
je     804b5a8 <fchmod@plt+0x18d8>
movl   $0x1,(%esp)
call   8049c00 <isatty@plt>
test   %eax,%eax
je     804b5a8 <fchmod@plt+0x18d8>
movl   $0x2,(%esp)
call   8049c00 <isatty@plt>
test   %eax,%eax
je     804b5a8 <fchmod@plt+0x18d8>
call   804db80 <fchmod@plt+0x3eb0>
cmpb   $0x0,0x8053488
mov    %eax,0x20(%esp)
jne    8049f6a <fchmod@plt+0x29a>
test   %eax,%eax
je     804b6e6 <fchmod@plt+0x1a16>
movl   $0x0,(%esp)
call   8049990 <ttyname@plt>
mov    $0x804fa28,%edx
movl   $0x1fff,0x8(%esp)
test   %eax,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
lea    0x4bc(%esp),%eax
mov    %eax,(%esp)
call   8049a70 <strncpy@plt>
cmpb   $0x0,0x805348b
movb   $0x0,0x24bb(%esp)
jne    804a517 <fchmod@plt+0x847>
cmpb   $0x0,0x805348a
jne    804a517 <fchmod@plt+0x847>
cmpb   $0x0,0x805348c
je     8049fcd <fchmod@plt+0x2fd>
movb   $0x1,0x8053489
cmpb   $0x0,0x805348a
je     8049fe0 <fchmod@plt+0x310>
movl   $0xca,0x80531e8
00
cmpb   $0x0,0x805348b
je     804a043 <fchmod@plt+0x373>
cmpl   $0x0,0x8053490
jne    804b6c2 <fchmod@plt+0x19f2>
movl   $0x21,(%esp)
call   804e490 <fchmod@plt+0x47c0>
lea    0x3c(%esp),%edx
movb   $0x0,0x20(%eax)
mov    %eax,0x8053490
mov    %eax,0x4(%esp)
mov    0x80531ec,%eax
movl   $0x80,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x20,0x8(%esp)
mov    %eax,(%esp)
call   804cf40 <fchmod@plt+0x3270>
test   %eax,%eax
je     804adbf <fchmod@plt+0x10ef>
movb   $0x1,0x8053489
movl   $0x50,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804faf1,(%esp)
call   8049b70 <openlog@plt>
lea    0x2bc(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c10 <tcgetattr@plt>
test   %eax,%eax
je     804aa0a <fchmod@plt+0xd3a>
cmpb   $0x0,0x805348d
je     804a0a6 <fchmod@plt+0x3d6>
mov    0x28(%esp),%edi
jmp    804a0a0 <fchmod@plt+0x3d0>
movl   $0x0,0x4(%esp)
add    $0x4,%edi
mov    %eax,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    (%edi),%eax
test   %eax,%eax
jne    804a08d <fchmod@plt+0x3bd>
cmpb   $0x0,0x3c(%esp)
jne    804aacf <fchmod@plt+0xdff>
cmpb   $0x0,0x805348d
je     804ad96 <fchmod@plt+0x10c6>
movl   $0x804fb0f,(%esp)
call   80498b0 <getenv@plt>
test   %eax,%eax
je     804a0de <fchmod@plt+0x40e>
mov    %eax,0x4(%esp)
movl   $0x804fb0f,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
movl   $0x804fb14,(%esp)
call   80498b0 <getenv@plt>
test   %eax,%eax
je     804a0fe <fchmod@plt+0x42e>
mov    %eax,0x4(%esp)
movl   $0x804fb14,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
movl   $0x804fb17,(%esp)
call   80498b0 <getenv@plt>
test   %eax,%eax
je     804a11e <fchmod@plt+0x44e>
mov    %eax,0x4(%esp)
movl   $0x804fb17,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    0x8053460,%eax
cmp    %eax,%esi
jg     804aab9 <fchmod@plt+0xde9>
cmpb   $0x0,0x805348b
jne    804a141 <fchmod@plt+0x471>
cmpb   $0x0,0x805348a
je     804a9ea <fchmod@plt+0xd1a>
mov    0x80531ec,%eax
cmpb   $0x0,(%eax)
je     804a98c <fchmod@plt+0xcbc>
mov    %eax,0x18(%esp)
lea    0x4bc(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x2bc(%esp),%eax
movl   $0x804fb1a,0x10(%esp)
movl   $0x200,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__snprintf_chk@plt>
xor    %esi,%esi
nop
movl   $0x804b910,0x4(%esp)
movl   $0xe,(%esp)
call   80496f0 <signal@plt>
movl   $0x3c,0x4(%esp)
movl   $0x804fb42,(%esp)
call   804ec10 <fchmod@plt+0x4f40>
test   %eax,%eax
mov    %eax,0x8053484
jne    804a830 <fchmod@plt+0xb60>
mov    0x8053498,%eax
movl   $0x3,0x4(%esp)
movl   $0x804fb50,(%esp)
mov    %eax,0x8053440
call   804ec10 <fchmod@plt+0x4f40>
movl   $0x8053494,0xc(%esp)
movl   $0x80531f0,0x8(%esp)
movl   $0x804faf1,(%esp)
mov    %eax,0x24(%esp)
mov    0x8053490,%eax
mov    %eax,0x4(%esp)
call   8049630 <pam_start@plt>
test   %eax,%eax
jne    804b37a <fchmod@plt+0x16aa>
mov    0x80531ec,%eax
movl   $0x4,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053494,%eax
mov    %eax,(%esp)
call   8049650 <pam_set_item@plt>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
lea    0x4bc(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053494,%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <pam_set_item@plt>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
cmpb   $0x0,0x805348c
jne    804a6b4 <fchmod@plt+0x9e4>
lea    0xbc(%esp),%eax
movl   $0x100,0x4(%esp)
mov    %eax,(%esp)
call   80498a0 <gethostname@plt>
movl   $0x5,0x8(%esp)
test   %eax,%eax
jne    804a83d <fchmod@plt+0xb6d>
movl   $0x804fb7a,0x4(%esp)
lea    0x1bc(%esp),%ebx
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
lea    0xbc(%esp),%edx
mov    %edx,0x14(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
call   8049600 <__snprintf_chk@plt>
mov    0x8053494,%eax
mov    %ebx,0x8(%esp)
movl   $0x9,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <pam_set_item@plt>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
lea    0x38(%esp),%eax
call   804ba40 <fchmod@plt+0x1d70>
mov    0x38(%esp),%eax
test   %eax,%eax
je     804a31b <fchmod@plt+0x64b>
cmpb   $0x0,(%eax)
je     804a88b <fchmod@plt+0xbbb>
movl   $0x0,0x2c(%esp)
jmp    804a415 <fchmod@plt+0x745>
test   %esi,%esi
je     804a348 <fchmod@plt+0x678>
movl   $0x804fb85,(%esp)
mov    %ecx,0x28(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
mov    0x28(%esp),%ecx
test   %al,%al
jne    804a538 <fchmod@plt+0x868>
test   %cl,%cl
je     804a6a8 <fchmod@plt+0x9d8>
movl   $0x804fbfa,(%esp)
call   80498f0 <puts@plt>
movl   $0x5,0x8(%esp)
movl   $0x804fb92,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <puts@plt>
test   %esi,%esi
je     804a398 <fchmod@plt+0x6c8>
movl   $0x804fb85,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %al,%al
jne    804a628 <fchmod@plt+0x958>
movl   $0x804fba2,(%esp)
call   804eab0 <fchmod@plt+0x4de0>
test   %eax,%eax
je     804a3e2 <fchmod@plt+0x712>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x80531ec,%eax
mov    %eax,0x8(%esp)
lea    0x4bc(%esp),%eax
mov    %eax,0x4(%esp)
call   804dd60 <fchmod@plt+0x4090>
mov    %ebx,(%esp)
mov    %eax,%edi
mov    %eax,0x4(%esp)
call   804caf0 <fchmod@plt+0x2e20>
mov    %edi,(%esp)
call   8049670 <free@plt>
mov    0x2c(%esp),%eax
cmp    %eax,0x24(%esp)
jbe    804adec <fchmod@plt+0x111c>
mov    0x8053494,%eax
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <pam_set_item@plt>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
mov    0x8053494,%eax
movl   $0x0,0x4(%esp)
addl   $0x1,0x2c(%esp)
mov    %eax,(%esp)
call   8049c40 <pam_authenticate@plt>
mov    %eax,%edi
lea    0x38(%esp),%eax
call   804ba40 <fchmod@plt+0x1d70>
mov    0x38(%esp),%eax
call   804b8c0 <fchmod@plt+0x1bf0>
cmp    $0xb,%edi
mov    %eax,%ebx
je     804b049 <fchmod@plt+0x1379>
cmp    $0x1a,%edi
je     804aee8 <fchmod@plt+0x1218>
xor    %ecx,%ecx
test   %edi,%edi
je     804a328 <fchmod@plt+0x658>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804a650 <fchmod@plt+0x980>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804a650 <fchmod@plt+0x980>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x8053494,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
mov    %ebx,0x14(%esp)
movl   $0x804fe38,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5,(%esp)
mov    %eax,0x18(%esp)
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    0x28(%esp),%ecx
movl   $0x6,(%esp)
mov    %ecx,0x4(%esp)
call   8049b10 <setlocale@plt>
mov    0x28(%esp),%ecx
mov    %ecx,(%esp)
call   8049670 <free@plt>
mov    $0x1,%ecx
jmp    804a328 <fchmod@plt+0x658>
mov    0x80531ec,%eax
movl   $0x804fae6,(%esp)
mov    %eax,0x4(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    8049fbd <fchmod@plt+0x2ed>
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %eax,0x8(%esp)
movl   $0x805346c,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804c690 <fchmod@plt+0x29c0>
mov    0x28(%esp),%ecx
test   %eax,%eax
jne    804a348 <fchmod@plt+0x678>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804a800 <fchmod@plt+0xb30>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804a800 <fchmod@plt+0xb30>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x804fe5c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049670 <free@plt>
movl   $0x804fbfa,(%esp)
call   80498f0 <puts@plt>
movl   $0x5,0x8(%esp)
movl   $0x804fb92,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <puts@plt>
movl   $0x804fb85,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %al,%al
je     804a398 <fchmod@plt+0x6c8>
nop
lea    0x4bc(%esp),%eax
movl   $0x805346c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804c320 <fchmod@plt+0x2650>
jmp    804a398 <fchmod@plt+0x6c8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053494,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
mov    %ebx,0x14(%esp)
movl   $0x804fe38,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5,(%esp)
mov    %eax,0x18(%esp)
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    $0x1,%ecx
jmp    804a328 <fchmod@plt+0x658>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   8049730 <alarm@plt>
mov    0x8053494,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049b90 <pam_acct_mgmt@plt>
cmp    $0xc,%eax
je     804a871 <fchmod@plt+0xba1>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
lea    0x38(%esp),%eax
call   804ba40 <fchmod@plt+0x1d70>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804cd70 <fchmod@plt+0x30a0>
cmp    $0x1,%al
sbb    %eax,%eax
not    %eax
and    $0x8000,%eax
mov    %eax,0x4(%esp)
mov    0x8053494,%eax
mov    %eax,(%esp)
call   8049c60 <pam_open_session@plt>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
lea    0x38(%esp),%eax
call   804ba40 <fchmod@plt+0x1d70>
mov    0x8053490,%eax
test   %eax,%eax
je     804a72d <fchmod@plt+0xa5d>
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804e510 <fchmod@plt+0x4840>
mov    %eax,0x8053490
call   804b8c0 <fchmod@plt+0x1bf0>
mov    %eax,%ebx
mov    0x8053490,%eax
mov    %eax,(%esp)
call   804e100 <fchmod@plt+0x4430>
test   %eax,%eax
mov    %eax,%esi
je     804b5b4 <fchmod@plt+0x18e4>
mov    %eax,(%esp)
call   804d0e0 <fchmod@plt+0x3410>
test   %eax,%eax
jne    804b5a8 <fchmod@plt+0x18d8>
mov    0x8053494,%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <pam_setcred@plt>
test   %eax,%eax
jne    804a8b0 <fchmod@plt+0xbe0>
mov    0x8053490,%eax
test   %eax,%eax
je     804b679 <fchmod@plt+0x19a9>
movl   $0x0,(%esp)
call   8049730 <alarm@plt>
movl   $0x804fbef,(%esp)
call   80498b0 <getenv@plt>
test   %eax,%eax
je     804a7c6 <fchmod@plt+0xaf6>
movl   $0x0,0x4(%esp)
movl   $0x804fbf3,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    0x18(%esi),%eax
cmpb   $0x2a,(%eax)
jne    804aae8 <fchmod@plt+0xe18>
add    $0x1,%eax
mov    %eax,0x18(%esi)
mov    %esi,(%esp)
call   804d820 <fchmod@plt+0x3b50>
call   8049b30 <endpwent@plt>
call   80495f0 <endgrent@plt>
call   8049a80 <endspent@plt>
nop
call   804f200 <endsgent>
jmp    804a190 <fchmod@plt+0x4c0>
lea    0x0(%esi),%esi
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x804fe5c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804a5e3 <fchmod@plt+0x913>
mov    %eax,(%esp)
call   8049730 <alarm@plt>
jmp    804a1c5 <fchmod@plt+0x4f5>
movl   $0x804fb7d,0x4(%esp)
lea    0x1bc(%esp),%ebx
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
movl   $0x100,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <strncpy@plt>
jmp    804a2e0 <fchmod@plt+0x610>
mov    0x8053494,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049720 <pam_chauthtok@plt>
jmp    804a6d2 <fchmod@plt+0xa02>
mov    0x8053494,%eax
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8049650 <pam_set_item@plt>
test   %eax,%eax
je     804a31b <fchmod@plt+0x64b>
mov    %eax,0x4(%esp)
mov    %eax,%ebx
mov    0x8053494,%eax
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fa94,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b2f7 <fchmod@plt+0x1627>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b2f7 <fchmod@plt+0x1627>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x8053494,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fb77,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
mov    0x8053494,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049750 <pam_end@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
lea    0x4bc(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x2bc(%esp),%eax
movl   $0x804fb35,0x10(%esp)
movl   $0x200,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__snprintf_chk@plt>
jmp    804a18d <fchmod@plt+0x4bd>
cmpb   $0x0,0x805348c
jne    8049e84 <fchmod@plt+0x1b4>
cmpb   $0x0,0x805348a
je     8049e91 <fchmod@plt+0x1c1>
jmp    8049e84 <fchmod@plt+0x1b4>
mov    0x20(%esp),%esi
test   %esi,%esi
je     804b115 <fchmod@plt+0x1445>
cmpb   $0x0,0x4c(%esi)
mov    $0x804fbfa,%eax
lea    0x4c(%esi),%edx
cmovne %edx,%eax
jmp    804a146 <fchmod@plt+0x476>
mov    0x2c8(%esp),%eax
movl   $0x804faf7,(%esp)
orl    $0x100,0x2bc(%esp)
00
orl    $0x4,0x2c0(%esp)
and    $0xfffffa7f,%eax
or     $0xa1b,%eax
mov    %eax,0x2c8(%esp)
movzbl 0x2cf(%esp),%eax
mov    %eax,0x4(%esp)
call   804eb50 <fchmod@plt+0x4e80>
movl   $0x804fb01,(%esp)
mov    %eax,0x2c(%esp)
movzbl 0x2d0(%esp),%eax
mov    %eax,0x4(%esp)
call   804eb50 <fchmod@plt+0x4e80>
mov    0x2c(%esp),%edx
mov    %dl,0x2cf(%esp)
mov    %eax,%edi
mov    %al,0x2d0(%esp)
movzbl %dl,%eax
cmp    %eax,%edx
jne    804b716 <fchmod@plt+0x1a46>
mov    %edi,%eax
movzbl %al,%eax
cmp    %eax,%edi
jne    804b567 <fchmod@plt+0x1897>
lea    0x2bc(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049890 <tcsetattr@plt>
jmp    804a07e <fchmod@plt+0x3ae>
lea    (%ebx,%eax,4),%edx
sub    %eax,%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804c020 <fchmod@plt+0x2350>
jmp    804a12b <fchmod@plt+0x45b>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x804fb0a,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    804a0be <fchmod@plt+0x3ee>
mov    %esi,(%esp)
call   804bc10 <fchmod@plt+0x1f40>
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   80496f0 <signal@plt>
call   8049ae0 <fork@plt>
test   %eax,%eax
js     804b50e <fchmod@plt+0x183e>
jne    804b4fd <fchmod@plt+0x182d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
call   8049b80 <getppid@plt>
sub    $0x1,%eax
je     804b154 <fchmod@plt+0x1484>
mov    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x80531ec,%eax
mov    %eax,0x8(%esp)
lea    0x4bc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8053490,%eax
mov    %eax,(%esp)
call   804dd60 <fchmod@plt+0x4090>
mov    %eax,%ebx
mov    %eax,(%esp)
call   804e0b0 <fchmod@plt+0x43e0>
mov    %ebx,(%esp)
call   8049670 <free@plt>
call   8049b30 <endpwent@plt>
call   80495f0 <endgrent@plt>
call   8049a80 <endspent@plt>
call   804f200 <endsgent>
mov    %esi,(%esp)
call   804d2d0 <fchmod@plt+0x3600>
test   %eax,%eax
jne    804b5a8 <fchmod@plt+0x18d8>
mov    %esi,(%esp)
call   804d400 <fchmod@plt+0x3730>
mov    0x8053494,%eax
mov    %eax,(%esp)
call   80497f0 <pam_getenvlist@plt>
mov    %eax,%ebx
jmp    804abbf <fchmod@plt+0xeef>
mov    (%ebx),%eax
test   %eax,%eax
je     804abc3 <fchmod@plt+0xef3>
movl   $0x0,0x4(%esp)
add    $0x4,%ebx
mov    %eax,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
test   %ebx,%ebx
jne    804aba6 <fchmod@plt+0xed6>
movl   $0x804fbfa,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
movl   $0x804fa9b,0x4(%esp)
movl   $0x8050881,(%esp)
call   8049be0 <bindtextdomain@plt>
movl   $0x8050881,(%esp)
call   80497e0 <textdomain@plt>
mov    0x8053490,%eax
mov    %eax,(%esp)
call   804cd70 <fchmod@plt+0x30a0>
movl   $0x0,0x4(%esp)
test   %al,%al
jne    804addb <fchmod@plt+0x110b>
movl   $0x804fc2a,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
movl   $0x804fb85,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %al,%al
je     804ac3e <fchmod@plt+0xf6e>
cmpw   $0x0,0x805346c
jne    804b1c2 <fchmod@plt+0x14f2>
lea    0x4bc(%esp),%eax
mov    %eax,(%esp)
call   804da00 <fchmod@plt+0x3d30>
movl   $0x0,0x4(%esp)
movl   $0x3,(%esp)
call   80496f0 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0xf,(%esp)
call   80496f0 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0xe,(%esp)
call   80496f0 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   80496f0 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   80496f0 <signal@plt>
cmpl   $0x0,0x8(%esi)
jne    804afbe <fchmod@plt+0x12ee>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b32d <fchmod@plt+0x165d>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b32d <fchmod@plt+0x165d>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
lea    0x2bc(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x804fc49,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
call   8049970 <closelog@plt>
movl   $0x804fc77,(%esp)
call   804eab0 <fchmod@plt+0x4de0>
test   %eax,%eax
je     804b29e <fchmod@plt+0x15ce>
mov    0x8053498,%edx
mov    %edx,0x8(%esp)
mov    0x18(%esi),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d680 <fchmod@plt+0x39b0>
cmp    $0x2,%eax
sete   %al
movzbl %al,%eax
add    $0x7e,%eax
mov    0x24bc(%esp),%edx
xor    %gs:0x14,%edx
jne    804b4c3 <fchmod@plt+0x17f3>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x804fb0a,(%esp)
call   80498b0 <getenv@plt>
test   %eax,%eax
je     804a0be <fchmod@plt+0x3ee>
mov    %eax,0x4(%esp)
movl   $0x804fb0a,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    804a0be <fchmod@plt+0x3ee>
mov    0x8053490,%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
movl   $0x0,0x8053490
00
jmp    804a043 <fchmod@plt+0x373>
movl   $0x804fc3a,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    804ac3e <fchmod@plt+0xf6e>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b2bf <fchmod@plt+0x15ef>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b2bf <fchmod@plt+0x15ef>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %ebx,0x14(%esp)
movl   $0x804fd9c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x5,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x804fdc4,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    0x2c(%esp),%edx
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x8053494,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049a40 <pam_close_session@plt>
mov    %eax,0x4(%esp)
mov    0x8053494,%eax
mov    %eax,(%esp)
call   8049750 <pam_end@plt>
movl   $0x0,(%esp)
call   8049920 <exit@plt>
movl   $0x5,0x8(%esp)
mov    0x8053444,%ebx
movl   $0x804fdec,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c80 <fputs@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b359 <fchmod@plt+0x1689>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b359 <fchmod@plt+0x1689>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
movl   $0x804fe0c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
mov    0x8053494,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049a40 <pam_close_session@plt>
mov    %eax,0x4(%esp)
mov    0x8053494,%eax
mov    %eax,(%esp)
call   8049750 <pam_end@plt>
movl   $0x63,(%esp)
call   8049920 <exit@plt>
movl   $0x804fc57,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %al,%al
je     804ad3c <fchmod@plt+0x106c>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b458 <fchmod@plt+0x1788>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b458 <fchmod@plt+0x1788>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x8053490,%eax
movl   $0x804fc65,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x6,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804ad24 <fchmod@plt+0x1054>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b11f <fchmod@plt+0x144f>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804b11f <fchmod@plt+0x144f>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %ebx,0x14(%esp)
movl   $0x804fd9c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x5,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049670 <free@plt>
test   %esi,%esi
je     804ae79 <fchmod@plt+0x11a9>
movl   $0x804fb85,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %al,%al
je     804ae79 <fchmod@plt+0x11a9>
lea    0x4bc(%esp),%eax
movl   $0x805346c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804c320 <fchmod@plt+0x2650>
jmp    804ae79 <fchmod@plt+0x11a9>
mov    $0x804fbfa,%eax
jmp    804a146 <fchmod@plt+0x476>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %ebx,0x14(%esp)
movl   $0x804fd9c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x5,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804b0d6 <fchmod@plt+0x1406>
call   8049930 <setsid@plt>
movl   $0x1,0x8(%esp)
movl   $0x540e,0x4(%esp)
movl   $0x0,(%esp)
call   8049810 <ioctl@plt>
test   %eax,%eax
je     804ab2e <fchmod@plt+0xe5e>
movl   $0x5,0x8(%esp)
movl   $0x804fc13,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
lea    0x4bc(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    804ab2e <fchmod@plt+0xe5e>
movl   $0x805346c,(%esp)
call   804ca10 <fchmod@plt+0x2d40>
movzwl 0x805346e,%eax
test   %ax,%ax
je     804ac3e <fchmod@plt+0xf6e>
cmp    0x805346c,%ax
jg     804ac3e <fchmod@plt+0xf6e>
movl   $0x5,0x8(%esp)
movl   $0x804fe80,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <puts@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b4c8 <fchmod@plt+0x17f8>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b4c8 <fchmod@plt+0x17f8>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
movswl 0x805346c,%eax
movl   $0x804feb4,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0x10(%esp)
mov    0x8053490,%eax
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
jmp    804ac3e <fchmod@plt+0xf6e>
mov    0x8053498,%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804d680 <fchmod@plt+0x39b0>
jmp    804ad6e <fchmod@plt+0x109e>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %ebx,0x14(%esp)
movl   $0x804fd9c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x5,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804ae79 <fchmod@plt+0x11a9>
mov    0x8053494,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fb77,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804a96f <fchmod@plt+0xc9f>
lea    0x2bc(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x804fc49,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804ad3c <fchmod@plt+0x106c>
movl   $0x804fe0c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804af8c <fchmod@plt+0x12bc>
mov    %eax,0x4(%esp)
mov    %eax,%ebx
mov    0x8053494,%eax
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x804fd78,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049740 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b48d <fchmod@plt+0x17bd>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b48d <fchmod@plt+0x17bd>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x8053494,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fb5e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
jmp    804afb2 <fchmod@plt+0x12e2>
lea    0x2bc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x8053490,%eax
movl   $0x804fc65,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x6,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804ad3c <fchmod@plt+0x106c>
mov    0x8053494,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fb5e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804afb2 <fchmod@plt+0x12e2>
call   8049770 <__stack_chk_fail@plt>
movswl 0x805346c,%eax
movl   $0x804feb4,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0x10(%esp)
mov    0x8053490,%eax
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804ac3e <fchmod@plt+0xf6e>
movl   $0x0,(%esp)
call   80497c0 <wait@plt>
jmp    804aeb6 <fchmod@plt+0x11e6>
call   8049a60 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049900 <strerror@plt>
mov    0x80535a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fbfb,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049740 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    804aeb6 <fchmod@plt+0x11e6>
movl   $0x5,0x8(%esp)
movl   $0x804fd44,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %edi,0x10(%esp)
movl   $0x804fb01,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804b69d <fchmod@plt+0x19cd>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b69d <fchmod@plt+0x19cd>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,0xc(%esp)
movl   $0x804fbac,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
movl   $0x5,0x8(%esp)
mov    0x8053490,%ebx
movl   $0x804fbc0,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
movl   $0x804ff47,0xc(%esp)
movl   $0x45b,0x8(%esp)
movl   $0x804fa70,0x4(%esp)
movl   $0x804fbd7,(%esp)
call   8049cb0 <__assert_fail@plt>
mov    %ebx,0xc(%esp)
movl   $0x804fbac,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804b62e <fchmod@plt+0x195e>
movl   $0x804ff47,0xc(%esp)
movl   $0x267,0x8(%esp)
movl   $0x804fa70,0x4(%esp)
movl   $0x804face,(%esp)
call   8049cb0 <__assert_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x804fd00,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <puts@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x804fd44,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    0x2c(%esp),%edx
movl   $0x804faf7,0xc(%esp)
mov    %edx,0x10(%esp)
jmp    804b58f <fchmod@plt+0x18bf>
movl   $0x804ff39,0xc(%esp)
movl   $0x160,0x8(%esp)
movl   $0x804fa70,0x4(%esp)
movl   $0x804face,(%esp)
call   8049cb0 <__assert_fail@plt>
mov    0x80535a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fab6,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
jmp    804b5a8 <fchmod@plt+0x18d8>
mov    0x80535a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fccc,0x4(%esp)
jmp    804b781 <fchmod@plt+0x1ab1>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804f9f0
push   $0x804f980
push   %ecx
push   %esi
push   $0x8049ce0
call   80499c0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8053443,%eax
sub    $0x8053440,%eax
cmp    $0x6,%eax
ja     804b810 <fchmod@plt+0x1b40>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804b80f <fchmod@plt+0x1b3f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8053440,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8053440,%eax
sub    $0x8053440,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804b849 <fchmod@plt+0x1b79>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804b848 <fchmod@plt+0x1b78>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8053440,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8053468
jne    804b88c <fchmod@plt+0x1bbc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804b800 <fchmod@plt+0x1b30>
movb   $0x1,0x8053468
leave
repz ret
xchg   %ax,%ax
mov    0x8052f00,%eax
test   %eax,%eax
je     804b8b8 <fchmod@plt+0x1be8>
mov    $0x0,%eax
test   %eax,%eax
je     804b8b8 <fchmod@plt+0x1be8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8052f00,(%esp)
call   *%eax
leave
jmp    804b830 <fchmod@plt+0x1b60>
nop
jmp    804b830 <fchmod@plt+0x1b60>
xchg   %ax,%ax
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x804fa30,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %ebx,%ebx
je     804b900 <fchmod@plt+0x1c30>
cmpb   $0x0,(%ebx)
je     804b900 <fchmod@plt+0x1c30>
test   %al,%al
lea    0x0(%esi),%esi
je     804b8f0 <fchmod@plt+0x1c20>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80495e0 <getpwnam@plt>
test   %eax,%eax
jne    804b8e2 <fchmod@plt+0x1c12>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804fa28,%ebx
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x8053484,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fc84,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,(%esp)
call   8049920 <exit@plt>
nop
push   %ebx
sub    $0x18,%esp
mov    0x80535a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fa41,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
cmpb   $0x0,0x8053488
je     804ba2a <fchmod@plt+0x1d5a>
movl   $0x5,0x8(%esp)
mov    0x80535a0,%ebx
movl   $0x804fca8,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x80535a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fa58,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x24,%esp
test   %eax,%eax
je     804bb7e <fchmod@plt+0x1eae>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053494,%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8049b50 <pam_get_item@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804baa4 <fchmod@plt+0x1dd4>
mov    (%ebx),%eax
test   %eax,%eax
je     804ba80 <fchmod@plt+0x1db0>
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804ba98 <fchmod@plt+0x1dc8>
mov    %eax,(%esp)
call   804e510 <fchmod@plt+0x4840>
mov    %eax,(%ebx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x0,(%ebx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    %eax,0x4(%esp)
mov    0x8053494,%eax
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fa94,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804bba2 <fchmod@plt+0x1ed2>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804bba2 <fchmod@plt+0x1ed2>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x8053494,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fb77,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
mov    0x8053494,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049750 <pam_end@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
movl   $0x804ff2c,0xc(%esp)
movl   $0x1b2,0x8(%esp)
movl   $0x804fa70,0x4(%esp)
movl   $0x804fa78,(%esp)
call   8049cb0 <__assert_fail@plt>
mov    0x8053494,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80497a0 <pam_strerror@plt>
movl   $0x804fb77,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804bb61 <fchmod@plt+0x1e91>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049b20 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %ebx,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x804ff4c,(%esp)
mov    0x30(%esp),%esi
call   804eab0 <fchmod@plt+0x4de0>
mov    %eax,(%esp)
call   804cd00 <fchmod@plt+0x3030>
test   %eax,%eax
je     804bd88 <fchmod@plt+0x20b8>
mov    0x8(%eax),%eax
mov    %eax,0x8(%esp)
mov    0x8(%esi),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80499b0 <fchown@plt>
test   %eax,%eax
jne    804bc80 <fchmod@plt+0x1fb0>
movl   $0x180,0x4(%esp)
movl   $0x804ff55,(%esp)
call   804eb50 <fchmod@plt+0x4e80>
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049cd0 <fchmod@plt>
test   %eax,%eax
je     804bd4f <fchmod@plt+0x207f>
call   8049a60 <__errno_location@plt>
mov    (%eax),%ebx
mov    %ebx,(%esp)
call   8049900 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ff60,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049740 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804bd58 <fchmod@plt+0x2088>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804bd58 <fchmod@plt+0x2088>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x10(%esp)
mov    (%esi),%eax
movl   $0x804ff90,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049670 <free@plt>
cmp    $0x1e,%ebx
jne    804bd90 <fchmod@plt+0x20c0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x10(%esp)
mov    (%esi),%eax
movl   $0x804ff90,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804bd4a <fchmod@plt+0x207a>
mov    0xc(%esi),%eax
jmp    804bc39 <fchmod@plt+0x1f69>
call   8049970 <closelog@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x40,(%esp)
call   804e490 <fchmod@plt+0x47c0>
mov    %eax,0x8053498
movl   $0x0,(%eax)
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%ebx
mov    0x50(%esp),%edi
test   %ebx,%ebx
mov    %edi,(%esp)
je     804bf58 <fchmod@plt+0x2288>
call   80499a0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   80499a0 <strlen@plt>
lea    (%esi,%eax,1),%ebp
lea    0x2(%ebp),%edx
add    $0x1,%ebp
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   804e490 <fchmod@plt+0x47c0>
mov    0x24(%esp),%edx
mov    %ebx,0x18(%esp)
mov    %edi,0x14(%esp)
movl   $0x804ffcf,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   8049600 <__snprintf_chk@plt>
cmp    %eax,%ebp
jne    804bff2 <fchmod@plt+0x2322>
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
je     804bf6b <fchmod@plt+0x229b>
sub    %esi,%eax
mov    %eax,%ebx
mov    0x805349c,%eax
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804bf7b <fchmod@plt+0x22ab>
mov    0x8053498,%eax
xor    %ebp,%ebp
mov    %ebp,%edi
mov    %eax,0x28(%esp)
lea    0x0(%esi),%esi
lea    0x0(,%edi,4),%eax
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    (%eax,%edi,4),%ebp
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x4(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    804bebb <fchmod@plt+0x21eb>
movzbl 0x0(%ebp,%ebx,1),%eax
test   %al,%al
je     804bf30 <fchmod@plt+0x2260>
cmp    $0x3d,%al
je     804bf30 <fchmod@plt+0x2260>
add    $0x1,%edi
cmp    0x24(%esp),%edi
jne    804be88 <fchmod@plt+0x21b8>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%ebx
lea    0x1(%ecx),%edx
mov    %ecx,%eax
shl    $0x2,%eax
test   $0xf,%dl
mov    %edx,0x805349c
mov    %esi,(%ebx,%ecx,4)
je     804bef8 <fchmod@plt+0x2228>
mov    0x8053498,%eax
movl   $0x0,(%eax,%edx,4)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x44,%eax
mov    %eax,0x4(%esp)
mov    0x8053498,%eax
mov    %eax,(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
je     804bf96 <fchmod@plt+0x22c6>
mov    0x8053498,%ecx
cmp    %ecx,0x8053440
je     804bf64 <fchmod@plt+0x2294>
mov    %eax,0x8053498
mov    0x805349c,%edx
jmp    804bee7 <fchmod@plt+0x2217>
nop
mov    %edi,%eax
mov    %ebp,%edi
cmp    %eax,0x24(%esp)
jbe    804bec4 <fchmod@plt+0x21f4>
mov    %edi,(%esp)
call   8049670 <free@plt>
mov    0x8053498,%eax
mov    0x2c(%esp),%ecx
mov    %esi,(%eax,%ecx,1)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804e510 <fchmod@plt+0x4840>
mov    %eax,%esi
jmp    804be48 <fchmod@plt+0x2178>
mov    %eax,0x8053440
jmp    804bf22 <fchmod@plt+0x2252>
mov    %esi,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049670 <free@plt>
mov    0x8053498,%eax
mov    $0x1,%edx
movl   $0x1,0x805349c
00
mov    %esi,(%eax)
jmp    804bee2 <fchmod@plt+0x2212>
movl   $0x5,0x8(%esp)
mov    0x8053444,%ebx
movl   $0x804fff0,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c80 <fputs@plt>
mov    0x805349c,%eax
mov    0x8053498,%edx
sub    $0x1,%eax
mov    %eax,0x805349c
mov    (%edx,%eax,4),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x8053498,%eax
mov    0x805349c,%edx
jmp    804bee7 <fchmod@plt+0x2217>
movl   $0x80500b1,0xc(%esp)
movl   $0x64,0x8(%esp)
movl   $0x804ffd5,0x4(%esp)
movl   $0x804ffdb,(%esp)
call   8049cb0 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x450(%esp),%eax
mov    0x454(%esp),%edi
movl   $0x1,0x1c(%esp)
test   %eax,%eax
jle    804c135 <fchmod@plt+0x2465>
nop
mov    (%edi),%ebx
mov    %ebx,(%esp)
call   80499a0 <strlen@plt>
cmp    $0x3ff,%eax
ja     804c124 <fchmod@plt+0x2454>
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804c162 <fchmod@plt+0x2492>
mov    0x8053220,%ebp
mov    $0x8053220,%esi
test   %ebp,%ebp
jne    804c0ad <fchmod@plt+0x23dd>
jmp    804c150 <fchmod@plt+0x2480>
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    (%esi),%ebp
test   %ebp,%ebp
je     804c150 <fchmod@plt+0x2480>
mov    %ebp,(%esp)
call   80499a0 <strlen@plt>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    804c0a0 <fchmod@plt+0x23d0>
mov    0x18(%esp),%ebp
lea    0x2c(%esp),%eax
movl   $0x400,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
sub    %ebx,%ebp
mov    %ebp,0x8(%esp)
call   8049a90 <__strncpy_chk@plt>
movb   $0x0,0x2c(%esp,%ebp,1)
movl   $0x5,0x8(%esp)
movl   $0x8050028,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ab0 <__printf_chk@plt>
add    $0x4,%edi
subl   $0x1,0x450(%esp)
jne    804c058 <fchmod@plt+0x2388>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    804c1b9 <fchmod@plt+0x24e9>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    804c124 <fchmod@plt+0x2454>
mov    0x1c(%esp),%eax
movl   $0x8050006,0x10(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
lea    0x2c(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__snprintf_chk@plt>
cmp    $0x3ff,%eax
jg     804c1be <fchmod@plt+0x24ee>
mov    (%edi),%eax
addl   $0x1,0x1c(%esp)
mov    %eax,0x4(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    804c124 <fchmod@plt+0x2454>
call   8049770 <__stack_chk_fail@plt>
movl   $0x80500a9,0xc(%esp)
movl   $0xce,0x8(%esp)
movl   $0x804ffd5,0x4(%esp)
movl   $0x805000a,(%esp)
call   8049cb0 <__assert_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8053440,%edi
mov    (%edi),%esi
test   %esi,%esi
je     804c2e9 <fchmod@plt+0x2619>
mov    %edi,0xc(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053220,%ebx
mov    $0x8053220,%ebp
test   %ebx,%ebx
jne    804c236 <fchmod@plt+0x2566>
jmp    804c308 <fchmod@plt+0x2638>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
mov    0x0(%ebp),%ebx
test   %ebx,%ebx
je     804c308 <fchmod@plt+0x2638>
mov    %ebx,(%esp)
call   80499a0 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    804c228 <fchmod@plt+0x2558>
mov    0xc(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     804c273 <fchmod@plt+0x25a3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    804c260 <fchmod@plt+0x2590>
mov    0xc(%esp),%eax
mov    (%eax),%esi
subl   $0x4,0xc(%esp)
addl   $0x4,0xc(%esp)
test   %esi,%esi
jne    804c210 <fchmod@plt+0x2540>
mov    (%edi),%esi
test   %esi,%esi
je     804c2e9 <fchmod@plt+0x2619>
nop
mov    0x8053200,%ebx
mov    $0x8053200,%ebp
test   %ebx,%ebx
je     804c302 <fchmod@plt+0x2632>
mov    %ebx,(%esp)
call   80499a0 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    804c2f8 <fchmod@plt+0x2628>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
je     804c2f8 <fchmod@plt+0x2628>
mov    (%edi),%esi
test   %esi,%esi
je     804c2df <fchmod@plt+0x260f>
mov    %edi,%eax
nop
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    804c2d0 <fchmod@plt+0x2600>
mov    (%edi),%esi
sub    $0x4,%edi
add    $0x4,%edi
test   %esi,%esi
jne    804c288 <fchmod@plt+0x25b8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
mov    0x0(%ebp),%ebx
test   %ebx,%ebx
jne    804c297 <fchmod@plt+0x25c7>
mov    0x4(%edi),%esi
jmp    804c2e2 <fchmod@plt+0x2612>
nop
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
jmp    804c278 <fchmod@plt+0x25a8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x0,0x4(%esp)
mov    0x48(%esp),%ebx
movl   $0x80500b8,(%esp)
mov    %eax,0x14(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x18(%esp)
call   8049aa0 <access@plt>
test   %eax,%eax
je     804c360 <fchmod@plt+0x2690>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x4(%esp)
movl   $0x80500b8,(%esp)
call   8049620 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     804c528 <fchmod@plt+0x2858>
mov    0x14(%esp),%eax
xor    %edx,%edx
mov    %edx,%edi
movl   $0x0,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,%esi
shld   $0x3,%eax,%edi
shld   $0x5,%eax,%edx
shl    $0x3,%esi
shl    $0x5,%eax
sub    %esi,%eax
sbb    %edi,%edx
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    %edx,%esi
mov    %edx,0x8(%esp)
call   8049ba0 <lseek64@plt>
xor    %esi,%edx
xor    %edi,%eax
or     %eax,%edx
je     804c500 <fchmod@plt+0x2830>
test   $0x1,%bl
mov    %ebx,%edx
mov    $0x18,%ecx
jne    804c660 <fchmod@plt+0x2990>
test   $0x2,%dl
jne    804c670 <fchmod@plt+0x29a0>
mov    %ecx,%eax
and    $0xfffffffc,%eax
mov    %eax,0x1c(%esp)
xor    %eax,%eax
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    0x1c(%esp),%eax
jb     804c3e6 <fchmod@plt+0x2716>
add    %eax,%edx
test   $0x2,%cl
je     804c406 <fchmod@plt+0x2736>
xor    %eax,%eax
add    $0x2,%edx
mov    %ax,-0x2(%edx)
and    $0x1,%ecx
je     804c40e <fchmod@plt+0x273e>
movb   $0x0,(%edx)
movzwl (%ebx),%eax
test   %ax,%ax
js     804c41c <fchmod@plt+0x274c>
add    $0x1,%eax
mov    %ax,(%ebx)
mov    0x18(%esp),%eax
movl   $0xc,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049a70 <strncpy@plt>
lea    0x10(%ebx),%eax
mov    %eax,(%esp)
call   80496e0 <time@plt>
movl   $0x0,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %ebp,(%esp)
call   8049ba0 <lseek64@plt>
xor    %esi,%edx
xor    %edi,%eax
or     %eax,%edx
je     804c5f0 <fchmod@plt+0x2920>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804c5b8 <fchmod@plt+0x28e8>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804c5b8 <fchmod@plt+0x28e8>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x14(%esp),%eax
movl   $0x80500b8,0x10(%esp)
movl   $0x80500cc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
mov    %ebp,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049ca0 <close@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x18,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8049640 <read@plt>
cmp    $0x18,%eax
jne    804c3c2 <fchmod@plt+0x26f2>
jmp    804c40e <fchmod@plt+0x273e>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804c628 <fchmod@plt+0x2958>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804c628 <fchmod@plt+0x2958>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x14(%esp),%eax
movl   $0x80500b8,0x10(%esp)
movl   $0x80500cc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049670 <free@plt>
xchg   %ax,%ax
mov    0x14(%esp),%eax
movl   $0x80500b8,0x10(%esp)
movl   $0x80500cc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804c4ec <fchmod@plt+0x281c>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x18,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   80499d0 <write@plt>
cmp    $0x18,%eax
jne    804c466 <fchmod@plt+0x2796>
mov    %ebp,(%esp)
call   8049ca0 <close@plt>
test   %eax,%eax
jne    804c466 <fchmod@plt+0x2796>
lea    0x0(%esi),%esi
jmp    804c353 <fchmod@plt+0x2683>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
movl   $0x80500b8,0x10(%esp)
movl   $0x80500cc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804c353 <fchmod@plt+0x2683>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
lea    0x1(%ebx),%edx
mov    $0x17,%cl
jmp    804c3d2 <fchmod@plt+0x2702>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2,%edx
mov    %ax,-0x2(%edx)
sub    $0x2,%ecx
jmp    804c3db <fchmod@plt+0x270b>
jmp    804c690 <fchmod@plt+0x29c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x80500b8,(%esp)
mov    %eax,0x24(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
call   8049aa0 <access@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804c76e <fchmod@plt+0x2a9e>
cmpb   $0x1,0x20(%esp)
movl   $0x80500b8,(%esp)
sbb    %eax,%eax
and    $0x2,%eax
mov    %eax,0x4(%esp)
call   8049a00 <__open64_2@plt>
test   %eax,%eax
mov    %eax,%esi
js     804c790 <fchmod@plt+0x2ac0>
mov    0x70(%esp),%eax
xor    %edx,%edx
mov    %edx,%ebp
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,%edi
shld   $0x3,%eax,%ebp
shld   $0x5,%eax,%edx
shl    $0x3,%edi
shl    $0x5,%eax
sub    %edi,%eax
sbb    %ebp,%edx
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    %edx,%ebp
mov    %edx,0x8(%esp)
call   8049ba0 <lseek64@plt>
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
xor    %edx,%ebp
xor    %edi,%eax
or     %eax,%ebp
jne    804c766 <fchmod@plt+0x2a96>
mov    0x24(%esp),%eax
movl   $0x18,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8049640 <read@plt>
mov    0x2c(%esp),%ecx
cmp    $0x18,%eax
je     804c820 <fchmod@plt+0x2b50>
mov    %esi,(%esp)
call   8049ca0 <close@plt>
mov    $0x1,%ebx
mov    0x4c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    804ca05 <fchmod@plt+0x2d35>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804c968 <fchmod@plt+0x2c98>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804c968 <fchmod@plt+0x2c98>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x70(%esp),%eax
movl   $0x80500b8,0xc(%esp)
movl   $0x80500fc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   8049670 <free@plt>
jmp    804c773 <fchmod@plt+0x2aa3>
mov    0x24(%esp),%edx
movzwl 0x2(%edx),%eax
test   %ax,%ax
je     804c868 <fchmod@plt+0x2b98>
cmp    (%edx),%ax
jg     804c868 <fchmod@plt+0x2b98>
mov    0x14(%edx),%edx
test   %edx,%edx
jne    804c846 <fchmod@plt+0x2b76>
mov    %esi,(%esp)
call   8049ca0 <close@plt>
jmp    804c773 <fchmod@plt+0x2aa3>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   80496e0 <time@plt>
mov    0x24(%esp),%ecx
mov    0x10(%ecx),%eax
add    0x14(%ecx),%eax
cmp    0x30(%esp),%eax
mov    0x2c(%esp),%ecx
jge    804c839 <fchmod@plt+0x2b69>
xchg   %ax,%ax
cmpb   $0x0,0x20(%esp)
jne    804c766 <fchmod@plt+0x2a96>
mov    0x24(%esp),%edx
mov    0x28(%esp),%edi
mov    %ecx,0x20(%esp)
mov    (%edx),%eax
mov    %eax,0x34(%esp)
mov    0x4(%edx),%eax
mov    %eax,0x38(%esp)
mov    0x8(%edx),%eax
mov    %eax,0x3c(%esp)
mov    0xc(%edx),%eax
mov    %eax,0x40(%esp)
mov    0x10(%edx),%eax
mov    %eax,0x44(%esp)
mov    0x14(%edx),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x48(%esp)
xor    %eax,%eax
mov    %esi,(%esp)
mov    %ax,0x34(%esp)
call   8049ba0 <lseek64@plt>
mov    0x20(%esp),%ecx
xor    %edi,%eax
xor    %ecx,%edx
or     %eax,%edx
je     804c9cf <fchmod@plt+0x2cff>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804c99e <fchmod@plt+0x2cce>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804c99e <fchmod@plt+0x2cce>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    0x70(%esp),%eax
movl   $0x80500b8,0x10(%esp)
movl   $0x8050148,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
jmp    804c766 <fchmod@plt+0x2a96>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
mov    $0x1,%ebx
movl   $0x80500b8,0xc(%esp)
movl   $0x80500fc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804c773 <fchmod@plt+0x2aa3>
mov    0x70(%esp),%eax
movl   $0x80500b8,0x10(%esp)
movl   $0x8050148,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804c766 <fchmod@plt+0x2a96>
lea    0x34(%esp),%eax
movl   $0x18,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80499d0 <write@plt>
cmp    $0x18,%eax
jne    804c8d7 <fchmod@plt+0x2c07>
mov    %esi,(%esp)
call   8049ca0 <close@plt>
test   %eax,%eax
jne    804c8d7 <fchmod@plt+0x2c07>
jmp    804c76e <fchmod@plt+0x2a9e>
call   8049770 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x130,%esp
mov    0x140(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
cmpw   $0x0,(%ebx)
jne    804ca58 <fchmod@plt+0x2d88>
mov    0x12c(%esp),%eax
xor    %gs:0x14,%eax
jne    804cae1 <fchmod@plt+0x2e11>
add    $0x130,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%ebx),%eax
add    $0x4,%ebx
mov    %eax,(%esp)
lea    0x2c(%esp),%edi
call   8049960 <localtime@plt>
mov    %eax,%esi
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   80496e0 <time@plt>
mov    %esi,0xc(%esp)
movl   $0x80500c9,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %edi,(%esp)
call   8049950 <strftime@plt>
movswl -0x4(%ebx),%esi
movl   $0x5,0x10(%esp)
movl   $0x8050178,0x8(%esp)
movl   $0x80501ac,0x4(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,(%esp)
call   8049c90 <dcngettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ab0 <__printf_chk@plt>
jmp    804ca35 <fchmod@plt+0x2d65>
call   8049770 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x804fba2,(%esp)
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
call   804eab0 <fchmod@plt+0x4de0>
test   %eax,%eax
mov    %eax,%ebx
je     804cb25 <fchmod@plt+0x2e55>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049aa0 <access@plt>
test   %eax,%eax
je     804cb30 <fchmod@plt+0x2e60>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x401,0x4(%esp)
mov    %ebx,(%esp)
call   8049620 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     804cc10 <fchmod@plt+0x2f40>
movl   $0x180,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80499d0 <write@plt>
cmp    $0x180,%eax
je     804cbf8 <fchmod@plt+0x2f28>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804cc98 <fchmod@plt+0x2fc8>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804cc98 <fchmod@plt+0x2fc8>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80501e0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049670 <free@plt>
mov    %ebp,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049ca0 <close@plt>
mov    %ebp,(%esp)
call   8049ca0 <close@plt>
test   %eax,%eax
jne    804cb6a <fchmod@plt+0x2e9a>
jmp    804cb25 <fchmod@plt+0x2e55>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804ccc8 <fchmod@plt+0x2ff8>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804ccc8 <fchmod@plt+0x2ff8>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80501e0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049670 <free@plt>
xchg   %ax,%ax
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80501e0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804cbe8 <fchmod@plt+0x2f18>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80501e0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804cb25 <fchmod@plt+0x2e55>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804cd68 <fchmod@plt+0x3098>
call   8049a60 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049840 <strtoll@plt>
cmpb   $0x0,(%ebx)
je     804cd49 <fchmod@plt+0x3079>
mov    0x1c(%esp),%ecx
cmpb   $0x0,(%ecx)
jne    804cd49 <fchmod@plt+0x3079>
cmpl   $0x22,(%esi)
je     804cd49 <fchmod@plt+0x3079>
test   %edx,%edx
je     804cd58 <fchmod@plt+0x3088>
mov    %ebx,(%esp)
call   804e230 <fchmod@plt+0x4560>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %eax,(%esp)
call   804e360 <fchmod@plt+0x4690>
jmp    804cd51 <fchmod@plt+0x3081>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804cd51 <fchmod@plt+0x3081>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
movl   $0x8050207,(%esp)
mov    0x2050(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x202c(%esp)
xor    %eax,%eax
call   804eab0 <fchmod@plt+0x4de0>
test   %eax,%eax
mov    %eax,%ebx
je     804ced8 <fchmod@plt+0x3208>
mov    %esi,(%esp)
call   80495e0 <getpwnam@plt>
test   %eax,%eax
mov    %eax,%esi
je     804ced8 <fchmod@plt+0x3208>
cmpb   $0x2f,(%ebx)
je     804ce28 <fchmod@plt+0x3158>
mov    %ebx,0x18(%esp)
mov    0x14(%eax),%eax
lea    0x2c(%esp),%ebx
movl   $0x8050216,0x10(%esp)
movl   $0x2000,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049600 <__snprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049aa0 <access@plt>
test   %eax,%eax
sete   %al
mov    0x202c(%esp),%edi
xor    %gs:0x14,%edi
jne    804cee4 <fchmod@plt+0x3214>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x804fa92,0x4(%esp)
mov    %ebx,(%esp)
call   8049820 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     804ced8 <fchmod@plt+0x3208>
lea    0x2c(%esp),%ebx
jmp    804ce5a <fchmod@plt+0x318a>
mov    (%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049610 <strcmp@plt>
test   %eax,%eax
je     804cebe <fchmod@plt+0x31ee>
mov    %edi,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   80496c0 <fgets@plt>
cmp    %ebx,%eax
jne    804cee0 <fchmod@plt+0x3210>
mov    %ebx,%ecx
mov    (%ecx),%ebp
add    $0x4,%ecx
lea    -0x1010101(%ebp),%edx
not    %ebp
and    %ebp,%edx
and    $0x80808080,%edx
je     804ce74 <fchmod@plt+0x31a4>
mov    %edx,%ebp
shr    $0x10,%ebp
test   $0x8080,%edx
cmove  %ebp,%edx
lea    0x2(%ecx),%ebp
cmove  %ebp,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
sub    %eax,%ecx
movb   $0x0,0x2b(%esp,%ecx,1)
mov    0x18(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049610 <strcmp@plt>
test   %eax,%eax
jne    804ce48 <fchmod@plt+0x3178>
mov    $0x1,%ebx
mov    %edi,(%esp)
call   80496d0 <fclose@plt>
mov    %ebx,%eax
jmp    804ce09 <fchmod@plt+0x3139>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804ce09 <fchmod@plt+0x3139>
nop
xor    %ebx,%ebx
jmp    804cec3 <fchmod@plt+0x31f3>
call   8049770 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
jmp    804cf09 <fchmod@plt+0x3239>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%esi
cmp    $0x1,%esi
sbb    $0xffffffff,%ebx
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8049640 <read@plt>
cmp    $0x1,%eax
jne    804cf31 <fchmod@plt+0x3261>
cmpb   $0x0,(%ebx)
jne    804cf00 <fchmod@plt+0x3230>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x1,(%esp)
call   8049920 <exit@plt>
lea    0x0(%esi),%esi
push   %ebp
mov    $0x20,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
mov    0xa4(%esp),%ebx
lea    0x20(%esp),%eax
mov    0xac(%esp),%edi
mov    0xa0(%esp),%esi
movl   $0x2580,0x1c(%esp)
call   804cef0 <fchmod@plt+0x3220>
mov    0xa8(%esp),%edx
mov    %ebx,%eax
call   804cef0 <fchmod@plt+0x3220>
mov    0xb0(%esp),%edx
mov    %edi,%eax
call   804cef0 <fchmod@plt+0x3220>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
je     804d0b8 <fchmod@plt+0x33e8>
movb   $0x0,(%eax)
lea    0x1c(%esp),%edx
add    $0x1,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804eeb0 <fchmod@plt+0x51e0>
test   %eax,%eax
jne    804d0b8 <fchmod@plt+0x33e8>
movl   $0x2580,0x1c(%esp)
mov    $0x2580,%ecx
xor    %edx,%edx
jmp    804cff6 <fchmod@plt+0x3326>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x8050220(,%edx,8)
je     804d0d0 <fchmod@plt+0x3400>
add    $0x1,%edx
cmp    %ecx,0x8050224(,%edx,8)
jne    804cfe8 <fchmod@plt+0x3318>
mov    0x8050220(,%edx,8),%edi
cmp    $0xffffffff,%edi
je     804d0d0 <fchmod@plt+0x3400>
lea    0x40(%esp),%ebp
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
call   8049c10 <tcgetattr@plt>
mov    0x48(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
and    $0xffffeff0,%eax
or     %edi,%eax
orl    $0x500,0x40(%esp)
orl    $0x5,0x44(%esp)
orl    $0x1a,0x4c(%esp)
mov    %eax,0x48(%esp)
call   8049890 <tcsetattr@plt>
mov    %ebx,(%esp)
call   80495e0 <getpwnam@plt>
xor    %edx,%edx
test   %eax,%eax
je     804d097 <fchmod@plt+0x33c7>
mov    %ebx,0xc(%esp)
lea    0x20(%esp),%ebx
mov    %ebx,0x8(%esp)
mov    0x8(%eax),%eax
mov    %esi,(%esp)
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x4(%esp)
call   8049bd0 <ruserok@plt>
xor    %edx,%edx
test   %eax,%eax
sete   %dl
mov    0x7c(%esp),%esi
xor    %gs:0x14,%esi
mov    %edx,%eax
jne    804d0da <fchmod@plt+0x340a>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ecx
cmp    $0x32,%ecx
jne    804cfe0 <fchmod@plt+0x3310>
xor    %edx,%edx
jmp    804d002 <fchmod@plt+0x3332>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xd,%edi
jmp    804d012 <fchmod@plt+0x3342>
call   8049770 <__stack_chk_fail@plt>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <setgid@plt>
cmp    $0xffffffff,%eax
je     804d11d <fchmod@plt+0x344d>
mov    0xc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80497b0 <initgroups@plt>
cmp    $0xffffffff,%eax
je     804d1ce <fchmod@plt+0x34fe>
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049a60 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x80502a0,(%esp)
call   8049830 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804d256 <fchmod@plt+0x3586>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d256 <fchmod@plt+0x3586>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0xc(%ebx),%eax
movl   $0x80502bc,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
call   8049970 <closelog@plt>
mov    $0xffffffff,%eax
jmp    804d116 <fchmod@plt+0x3446>
call   8049a60 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x80502a7,(%esp)
call   8049830 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804d290 <fchmod@plt+0x35c0>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d290 <fchmod@plt+0x35c0>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
movl   $0x80502e4,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d1a7 <fchmod@plt+0x34d7>
mov    %edi,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0xc(%ebx),%eax
movl   $0x80502bc,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d1bf <fchmod@plt+0x34ef>
mov    %edi,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
movl   $0x80502e4,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d1bf <fchmod@plt+0x34ef>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049b60 <setuid@plt>
test   %eax,%eax
jne    804d2f0 <fchmod@plt+0x3620>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049a60 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x80502b2,(%esp)
call   8049830 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804d399 <fchmod@plt+0x36c9>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d399 <fchmod@plt+0x36c9>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %edi,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
movl   $0x805030c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
call   8049970 <closelog@plt>
mov    $0xffffffff,%eax
jmp    804d2e9 <fchmod@plt+0x3619>
mov    %edi,(%esp)
call   8049900 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
movl   $0x805030c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d38a <fchmod@plt+0x36ba>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804d0e0 <fchmod@plt+0x3410>
test   %eax,%eax
js     804d3f8 <fchmod@plt+0x3728>
mov    %ebx,(%esp)
call   804d2d0 <fchmod@plt+0x3600>
sar    $0x1f,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    804d3ef <fchmod@plt+0x371f>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049710 <chdir@plt>
cmp    $0xffffffff,%eax
je     804d4e8 <fchmod@plt+0x3818>
mov    0x14(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x805070c,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     804d4d0 <fchmod@plt+0x3800>
cmpb   $0x0,(%eax)
je     804d4d0 <fchmod@plt+0x3800>
mov    %eax,0x4(%esp)
movl   $0x804fc7c,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    (%ebx),%eax
movl   $0x805037a,(%esp)
mov    %eax,0x4(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    (%ebx),%eax
movl   $0x805037f,(%esp)
mov    %eax,0x4(%esp)
call   804bdd0 <fchmod@plt+0x2100>
mov    0x8(%ebx),%ecx
mov    $0x805033b,%edx
mov    $0x8050330,%eax
test   %ecx,%ecx
cmovne %edx,%eax
mov    %eax,(%esp)
call   804eab0 <fchmod@plt+0x4de0>
test   %eax,%eax
mov    %eax,%esi
je     804d560 <fchmod@plt+0x3890>
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
je     804d548 <fchmod@plt+0x3878>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   804bdd0 <fchmod@plt+0x2100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x8053258,0x18(%ebx)
mov    $0x8053258,%eax
jmp    804d444 <fchmod@plt+0x3774>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8050357,(%esp)
call   804eaf0 <fchmod@plt+0x4e20>
test   %al,%al
je     804d588 <fchmod@plt+0x38b8>
movl   $0x80504fc,(%esp)
call   8049710 <chdir@plt>
cmp    $0xffffffff,%eax
je     804d588 <fchmod@plt+0x38b8>
movl   $0x5,0x8(%esp)
movl   $0x80503d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <puts@plt>
mov    $0x8053262,%eax
movl   $0x8053262,0x14(%ebx)
jmp    804d420 <fchmod@plt+0x3750>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
movl   $0x8050336,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%ebx),%edx
mov    $0x8050388,%eax
movl   $0x0,0x4(%esp)
test   %edx,%edx
mov    $0x8050344,%edx
cmovne %edx,%eax
mov    %eax,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x14(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8050364,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804d650 <fchmod@plt+0x3980>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d650 <fchmod@plt+0x3980>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x80503ac,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
call   8049970 <closelog@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x80503ac,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d63f <fchmod@plt+0x396f>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x450(%esp),%ebx
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
mov    0x454(%esp),%eax
mov    0x458(%esp),%edx
test   %ebx,%ebx
je     804d778 <fchmod@plt+0x3aa8>
test   %eax,%eax
lea    0x2c(%esp),%edi
je     804d7c8 <fchmod@plt+0x3af8>
mov    %edx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x1c(%esp)
call   8049af0 <execle@plt>
call   8049a60 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
movl   $0x5,0x4(%esp)
mov    %ebx,(%esp)
call   8049aa0 <access@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804d790 <fchmod@plt+0x3ac0>
movl   $0x5,0x8(%esp)
movl   $0x8050405,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   8049600 <__snprintf_chk@plt>
mov    %esi,0x0(%ebp)
mov    %edi,(%esp)
call   8049830 <perror@plt>
mov    %esi,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804d813 <fchmod@plt+0x3b43>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049a60 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x16,%eax
jmp    804d755 <fchmod@plt+0x3a85>
lea    0x0(%esi),%esi
mov    %edx,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x80503f9,0x8(%esp)
movl   $0x8050402,0x4(%esp)
movl   $0x80503fb,(%esp)
call   8049af0 <execle@plt>
mov    0x0(%ebp),%esi
jmp    804d704 <fchmod@plt+0x3a34>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %edx,0x1c(%esp)
call   804bbe0 <fchmod@plt+0x1f10>
movl   $0x80503f5,0x10(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
call   8049600 <__snprintf_chk@plt>
mov    %edi,%eax
mov    0x1c(%esp),%edx
movb   $0x0,0x42b(%esp)
jmp    804d6c3 <fchmod@plt+0x39f3>
call   8049770 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x14(%ebx),%esi
cmpb   $0x2f,(%esi)
jne    804d91d <fchmod@plt+0x3c4d>
mov    %esi,(%esp)
call   8049710 <chdir@plt>
test   %eax,%eax
jne    804d856 <fchmod@plt+0x3b86>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049870 <chroot@plt>
test   %eax,%eax
jne    804d856 <fchmod@plt+0x3b86>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x14(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8050458,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ab0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804d9a1 <fchmod@plt+0x3cd1>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d9a1 <fchmod@plt+0x3cd1>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x8050480,0x8(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
call   8049970 <closelog@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x8050417,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ab0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804d9cf <fchmod@plt+0x3cff>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d9cf <fchmod@plt+0x3cff>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x8050434,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    804d8e0 <fchmod@plt+0x3c10>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x8050480,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d90c <fchmod@plt+0x3c3c>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x8050434,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804d90c <fchmod@plt+0x3c3c>
xchg   %ax,%ax
nop
push   %ebp
mov    $0xff,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x282c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x281c(%esp)
xor    %eax,%eax
lea    0x20(%esp),%edi
mov    0x2840(%esp),%ebx
movl   $0x0,0x1c(%esp)
rep stos %eax,%es:(%edi)
movl   $0x804fb0a,(%esp)
call   80498b0 <getenv@plt>
test   %eax,%eax
je     804da68 <fchmod@plt+0x3d98>
mov    0x281c(%esp),%eax
xor    %gs:0x14,%eax
jne    804db77 <fchmod@plt+0x3ea7>
add    $0x282c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x80504a6,(%esp)
call   804eab0 <fchmod@plt+0x4de0>
test   %eax,%eax
mov    %eax,%esi
je     804da43 <fchmod@plt+0x3d73>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049aa0 <access@plt>
test   %eax,%eax
jne    804da43 <fchmod@plt+0x3d73>
movl   $0x804fa92,0x4(%esp)
mov    %esi,(%esp)
call   8049820 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     804db6a <fchmod@plt+0x3e9a>
lea    0x81c(%esp),%esi
lea    0x41c(%esp),%ebp
xchg   %ax,%ax
mov    %edi,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %esi,(%esp)
call   80496c0 <fgets@plt>
cmp    %esi,%eax
jne    804db28 <fchmod@plt+0x3e58>
cmpb   $0x23,0x81c(%esp)
je     804dab8 <fchmod@plt+0x3de8>
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
je     804daf1 <fchmod@plt+0x3e21>
movb   $0x0,(%eax)
lea    0x1c(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x80504b3,0x4(%esp)
mov    %esi,(%esp)
call   8049b40 <sscanf@plt>
cmp    $0x2,%eax
jne    804dab8 <fchmod@plt+0x3de8>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   8049610 <strcmp@plt>
test   %eax,%eax
jne    804dab8 <fchmod@plt+0x3de8>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049940 <feof@plt>
test   %eax,%eax
je     804db41 <fchmod@plt+0x3e71>
mov    %edi,(%esp)
call   80496d0 <fclose@plt>
jmp    804da43 <fchmod@plt+0x3d73>
mov    %edi,(%esp)
call   80496b0 <ferror@plt>
test   %eax,%eax
jne    804db34 <fchmod@plt+0x3e64>
cmpb   $0x0,0x1c(%esp)
je     804db34 <fchmod@plt+0x3e64>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x804fb0a,(%esp)
call   804bdd0 <fchmod@plt+0x2100>
jmp    804db34 <fchmod@plt+0x3e64>
mov    %esi,(%esp)
call   8049830 <perror@plt>
jmp    804da43 <fchmod@plt+0x3d73>
call   8049770 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0xf0,%esp
mov    %gs:0x14,%eax
mov    %eax,0xec(%esp)
xor    %eax,%eax
call   8049a50 <setutent@plt>
lea    0x0(%esi),%esi
call   8049a10 <getutent@plt>
test   %eax,%eax
mov    %eax,%esi
je     804dc80 <fchmod@plt+0x3fb0>
mov    0x4(%esi),%ebx
call   8049880 <getpid@plt>
cmp    %eax,%ebx
jne    804dba0 <fchmod@plt+0x3ed0>
cmpb   $0x0,0x28(%esi)
je     804dba0 <fchmod@plt+0x3ed0>
movzwl (%esi),%eax
sub    $0x6,%eax
cmp    $0x1,%ax
ja     804dba0 <fchmod@plt+0x3ed0>
cmpb   $0x2f,0x8(%esi)
lea    0x8(%esi),%ebx
je     804dc0a <fchmod@plt+0x3f3a>
lea    0x24(%esp),%eax
mov    %ebx,0x14(%esp)
lea    0x24(%esp),%ebx
movl   $0x80504c1,0x10(%esp)
movl   $0xc8,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xc8,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__snprintf_chk@plt>
cmpb   $0x0,0x80534a0
je     804dcb8 <fchmod@plt+0x3fe8>
movl   $0xc9,0x8(%esp)
movl   $0x80534a0,0x4(%esp)
mov    %ebx,(%esp)
call   8049bf0 <strncmp@plt>
test   %eax,%eax
jne    804dba0 <fchmod@plt+0x3ed0>
movl   $0x180,(%esp)
call   804e490 <fchmod@plt+0x47c0>
mov    %eax,%ebx
mov    %eax,%edi
test   $0x1,%bl
mov    $0x180,%eax
jne    804dd28 <fchmod@plt+0x4058>
test   $0x2,%edi
jne    804dd3d <fchmod@plt+0x406d>
mov    %eax,%ecx
xor    %edx,%edx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
jne    804dca7 <fchmod@plt+0x3fd7>
test   $0x1,%al
je     804dc82 <fchmod@plt+0x3fb2>
movzbl (%esi,%edx,1),%eax
mov    %al,(%edi,%edx,1)
jmp    804dc82 <fchmod@plt+0x3fb2>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
call   8049660 <endutent@plt>
mov    %ebx,%eax
mov    0xec(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804dd52 <fchmod@plt+0x4082>
add    $0xf0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movzwl (%esi),%edx
test   $0x1,%al
mov    %dx,(%edi)
mov    $0x2,%edx
je     804dc82 <fchmod@plt+0x3fb2>
jmp    804dc72 <fchmod@plt+0x3fa2>
movl   $0x0,(%esp)
call   8049990 <ttyname@plt>
test   %eax,%eax
je     804dce7 <fchmod@plt+0x4017>
movl   $0xc9,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x80534a0,(%esp)
call   8049a70 <strncpy@plt>
movb   $0x0,0x8053568
cmpb   $0x0,0x80534a0
jne    804dc17 <fchmod@plt+0x3f47>
movl   $0x5,0x8(%esp)
movl   $0x8050510,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <puts@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%esi),%eax
lea    0x1(%ebx),%edi
add    $0x1,%esi
mov    %al,(%ebx)
mov    $0x17f,%eax
jmp    804dc55 <fchmod@plt+0x3f85>
movzwl (%esi),%edx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %dx,-0x2(%edi)
jmp    804dc61 <fchmod@plt+0x3f91>
call   8049770 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebx
mov    0x48(%esp),%esi
test   %eax,%eax
je     804e07f <fchmod@plt+0x43af>
test   %ebx,%ebx
je     804e05b <fchmod@plt+0x438b>
test   %esi,%esi
je     804dd90 <fchmod@plt+0x40c0>
cmpb   $0x0,(%esi)
jne    804df68 <fchmod@plt+0x4298>
mov    0x4c(%esp),%eax
xor    %ebp,%ebp
test   %eax,%eax
je     804dda8 <fchmod@plt+0x40d8>
mov    0x4c(%esp),%eax
cmpb   $0x0,0x4c(%eax)
jne    804df90 <fchmod@plt+0x42c0>
mov    %ebx,%esi
mov    $0x80504f8,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
lea    0x5(%ebx),%eax
movl   $0x180,(%esp)
setb   %dl
seta   %cl
cmp    %dl,%cl
cmove  %eax,%ebx
call   804e490 <fchmod@plt+0x47c0>
mov    $0x180,%edx
test   $0x1,%al
mov    %eax,%esi
mov    %eax,%edi
jne    804dff8 <fchmod@plt+0x4328>
test   $0x2,%edi
jne    804dfe0 <fchmod@plt+0x4310>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    804df28 <fchmod@plt+0x4258>
and    $0x1,%edx
jne    804df20 <fchmod@plt+0x4250>
mov    $0x7,%eax
mov    %ax,(%esi)
call   8049880 <getpid@plt>
mov    %eax,0x4(%esi)
lea    0x8(%esi),%eax
movl   $0x20,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <strncpy@plt>
mov    0x4c(%esp),%edx
movl   $0x4,0x8(%esp)
test   %edx,%edx
je     804dfc8 <fchmod@plt+0x42f8>
mov    0x4c(%esp),%eax
add    $0x28,%eax
mov    %eax,0x4(%esp)
lea    0x28(%esi),%eax
mov    %eax,(%esp)
call   8049a70 <strncpy@plt>
mov    0x40(%esp),%eax
lea    0x2c(%esi),%ebx
mov    %ebx,(%esp)
movl   $0x20,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <strncpy@plt>
mov    0x40(%esp),%eax
mov    %ebx,(%esp)
lea    0x18(%esp),%ebx
movl   $0x20,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <strncpy@plt>
test   %ebp,%ebp
je     804dedb <fchmod@plt+0x420b>
lea    0x4c(%esi),%eax
movl   $0x100,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x18(%esp)
call   8049a70 <strncpy@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8049bb0 <getaddrinfo@plt>
test   %eax,%eax
je     804df40 <fchmod@plt+0x4270>
mov    %ebp,(%esp)
call   8049670 <free@plt>
movl   $0x0,(%esp)
call   8049ac0 <getsid@plt>
mov    %eax,0x150(%esi)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049700 <gettimeofday@plt>
test   %eax,%eax
jne    804df15 <fchmod@plt+0x4245>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edx
mov    %eax,0x158(%esi)
mov    %edx,0x154(%esi)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movb   $0x0,(%edi)
jmp    804de08 <fchmod@plt+0x4138>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
and    $0x1,%edx
je     804de08 <fchmod@plt+0x4138>
jmp    804df20 <fchmod@plt+0x4250>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
cmp    $0x2,%edx
je     804e008 <fchmod@plt+0x4338>
cmp    $0xa,%edx
je     804e028 <fchmod@plt+0x4358>
mov    %eax,(%esp)
call   8049b00 <freeaddrinfo@plt>
jmp    804ded3 <fchmod@plt+0x4203>
xchg   %ax,%ax
mov    %esi,(%esp)
call   80499a0 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   804e490 <fchmod@plt+0x47c0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049860 <strcpy@plt>
jmp    804dda8 <fchmod@plt+0x40d8>
xchg   %ax,%ax
movl   $0x101,(%esp)
call   804e490 <fchmod@plt+0x47c0>
movl   $0x100,0x8(%esp)
mov    %eax,%ebp
mov    0x4c(%esp),%eax
mov    %ebp,(%esp)
add    $0x4c,%eax
mov    %eax,0x4(%esp)
call   8049a70 <strncpy@plt>
movb   $0x0,0x100(%ebp)
jmp    804dda8 <fchmod@plt+0x40d8>
lea    0x0(%esi),%esi
add    $0x3,%ebx
lea    0x28(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a70 <strncpy@plt>
jmp    804de59 <fchmod@plt+0x4189>
nop
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    804dded <fchmod@plt+0x411d>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x7f,%dl
jmp    804dde1 <fchmod@plt+0x4111>
lea    0x0(%esi),%esi
mov    0x14(%eax),%eax
mov    0x4(%eax),%edx
mov    %edx,0x15c(%esi)
mov    0x4(%eax),%eax
mov    %eax,0x15c(%esi)
mov    0x18(%esp),%eax
jmp    804df59 <fchmod@plt+0x4289>
xchg   %ax,%ax
mov    0x14(%eax),%ecx
lea    0x8(%ecx),%eax
mov    0x8(%ecx),%ecx
mov    %ecx,0x15c(%esi)
mov    0x4(%eax),%ecx
mov    %ecx,0x160(%esi)
mov    0x8(%eax),%ecx
mov    %ecx,0x164(%esi)
mov    0xc(%eax),%eax
mov    %eax,0x168(%esi)
mov    0x18(%esp),%eax
jmp    804df59 <fchmod@plt+0x4289>
movl   $0x805053b,0xc(%esp)
movl   $0xc3,0x8(%esp)
movl   $0x80504c9,0x4(%esp)
movl   $0x80504e4,(%esp)
call   8049cb0 <__assert_fail@plt>
movl   $0x805053b,0xc(%esp)
movl   $0xc2,0x8(%esp)
movl   $0x80504c9,0x4(%esp)
movl   $0x80504d0,(%esp)
call   8049cb0 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804e0dc <fchmod@plt+0x440c>
call   8049a50 <setutent@plt>
mov    %ebx,(%esp)
call   8049690 <pututline@plt>
mov    %eax,%ebx
call   8049660 <endutent@plt>
xor    %eax,%eax
test   %ebx,%ebx
sete   %al
add    $0x18,%esp
pop    %ebx
ret
movl   $0x8050533,0xc(%esp)
movl   $0x136,0x8(%esp)
movl   $0x80504c9,0x4(%esp)
movl   $0x80504fe,(%esp)
call   8049cb0 <__assert_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x1c,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e1e4 <fchmod@plt+0x4514>
mov    $0x100,%ebx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0x2c(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804e1e4 <fchmod@plt+0x4514>
call   8049a60 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049680 <getpwnam_r@plt>
test   %eax,%eax
jne    804e17d <fchmod@plt+0x44ad>
cmp    %esi,0x2c(%esp)
je     804e1c0 <fchmod@plt+0x44f0>
cmpl   $0x22,(%edi)
jne    804e1a0 <fchmod@plt+0x44d0>
cmp    $0x3fffffff,%ebx
ja     804e190 <fchmod@plt+0x44c0>
shl    $0x2,%ebx
jmp    804e128 <fchmod@plt+0x4458>
nop
cmp    $0xffffffff,%ebx
je     804e1a0 <fchmod@plt+0x44d0>
mov    $0xffffffff,%ebx
jmp    804e128 <fchmod@plt+0x4458>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804f770 <putsgent+0x1d0>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x8050548,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
movl   $0x805055b,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   8049920 <exit@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x10,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e314 <fchmod@plt+0x4644>
mov    $0x100,%ebx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0x2c(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804e314 <fchmod@plt+0x4644>
call   8049a60 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049c50 <getgrnam_r@plt>
test   %eax,%eax
jne    804e2ad <fchmod@plt+0x45dd>
cmp    %esi,0x2c(%esp)
je     804e2f0 <fchmod@plt+0x4620>
cmpl   $0x22,(%edi)
jne    804e2d0 <fchmod@plt+0x4600>
cmp    $0x3fffffff,%ebx
ja     804e2c0 <fchmod@plt+0x45f0>
shl    $0x2,%ebx
jmp    804e258 <fchmod@plt+0x4588>
nop
cmp    $0xffffffff,%ebx
je     804e2d0 <fchmod@plt+0x4600>
mov    $0xffffffff,%ebx
jmp    804e258 <fchmod@plt+0x4588>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804ef10 <fchmod@plt+0x5240>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x8050548,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
movl   $0x8050565,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   8049920 <exit@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x10,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e444 <fchmod@plt+0x4774>
mov    $0x100,%ebx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0x2c(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804e444 <fchmod@plt+0x4774>
call   8049a60 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049c20 <getgrgid_r@plt>
test   %eax,%eax
jne    804e3dd <fchmod@plt+0x470d>
cmp    %esi,0x2c(%esp)
je     804e420 <fchmod@plt+0x4750>
cmpl   $0x22,(%edi)
jne    804e400 <fchmod@plt+0x4730>
cmp    $0x3fffffff,%ebx
ja     804e3f0 <fchmod@plt+0x4720>
shl    $0x2,%ebx
jmp    804e388 <fchmod@plt+0x46b8>
nop
cmp    $0xffffffff,%ebx
je     804e400 <fchmod@plt+0x4730>
mov    $0xffffffff,%ebx
jmp    804e388 <fchmod@plt+0x46b8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804ef10 <fchmod@plt+0x5240>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x8050548,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
movl   $0x805056f,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   8049920 <exit@plt>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
je     804e4ab <fchmod@plt+0x47db>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049a60 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049900 <strerror@plt>
mov    0x80535a0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805057c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049740 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   8049920 <exit@plt>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80499a0 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   804e490 <fchmod@plt+0x47c0>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049860 <strcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x80532a0,%edx
test   %edx,%edx
je     804e580 <fchmod@plt+0x48b0>
mov    $0x80532a0,%ebx
jmp    804e561 <fchmod@plt+0x4891>
add    $0x8,%ebx
mov    (%ebx),%edx
test   %edx,%edx
je     804e580 <fchmod@plt+0x48b0>
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   8049610 <strcmp@plt>
test   %eax,%eax
jne    804e558 <fchmod@plt+0x4888>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80505a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804e638 <fchmod@plt+0x4968>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804e638 <fchmod@plt+0x4968>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,0xc(%esp)
movl   $0x80505e0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0xc(%esp)
movl   $0x80505e0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   8049ad0 <__syslog_chk@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x8053569
je     804e6b0 <fchmod@plt+0x49e0>
mov    0x20(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
je     804e77a <fchmod@plt+0x4aaa>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e6b8 <fchmod@plt+0x49e8>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804e6a2 <fchmod@plt+0x49d2>
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    %esi,0x4(%ebx)
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   804e790 <fchmod@plt+0x4ac0>
jmp    804e66e <fchmod@plt+0x499e>
nop
movl   $0x5,0x8(%esp)
mov    0x8053444,%ebx
movl   $0x8050600,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c80 <fputs@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804e75e <fchmod@plt+0x4a8e>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804e75e <fchmod@plt+0x4a8e>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
movl   $0x805062c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
mov    $0xffffffff,%eax
jmp    804e6a7 <fchmod@plt+0x49d7>
movl   $0x805062c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    $0xffffffff,%eax
jmp    804e6a7 <fchmod@plt+0x49d7>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
movl   $0x804fa92,0x4(%esp)
movl   $0x8053280,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
call   8049820 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e93d <fchmod@plt+0x4c6d>
movb   $0x1,0x8053569
lea    0x2c(%esp),%edi
lea    0x0(%esi),%esi
mov    %esi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   80496c0 <fgets@plt>
test   %eax,%eax
je     804e906 <fchmod@plt+0x4c36>
mov    %edi,%ebx
mov    (%ebx),%edx
add    $0x4,%ebx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     804e7f6 <fchmod@plt+0x4b26>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ebx),%edx
cmove  %edx,%ebx
add    %al,%al
sbb    $0x3,%ebx
sub    %edi,%ebx
sub    $0x1,%ebx
js     804e84b <fchmod@plt+0x4b7b>
call   8049cc0 <__ctype_b_loc@plt>
mov    (%eax),%edx
jmp    804e840 <fchmod@plt+0x4b70>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
cmp    $0xffffffff,%ebx
je     804e84b <fchmod@plt+0x4b7b>
movsbl (%edi,%ebx,1),%eax
testb  $0x20,0x1(%edx,%eax,2)
jne    804e838 <fchmod@plt+0x4b68>
movb   $0x0,0x2d(%esp,%ebx,1)
mov    %edi,%edx
jmp    804e85b <fchmod@plt+0x4b8b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movzbl (%edx),%eax
mov    %edx,%ebx
movsbl %al,%ecx
cmp    $0x20,%ecx
je     804e858 <fchmod@plt+0x4b88>
cmp    $0x9,%ecx
je     804e858 <fchmod@plt+0x4b88>
cmp    $0x23,%al
je     804e7d8 <fchmod@plt+0x4b08>
test   %al,%al
je     804e7d8 <fchmod@plt+0x4b08>
cmp    $0x20,%ecx
je     804e8aa <fchmod@plt+0x4bda>
cmp    $0x9,%ecx
je     804e8aa <fchmod@plt+0x4bda>
lea    0x1(%edx),%eax
jmp    804e898 <fchmod@plt+0x4bc8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x9,%ecx
je     804e8aa <fchmod@plt+0x4bda>
movsbl (%eax),%ecx
mov    %eax,%ebx
test   %cl,%cl
je     804e7d8 <fchmod@plt+0x4b08>
cmp    $0x20,%ecx
jne    804e890 <fchmod@plt+0x4bc0>
movb   $0x0,(%ebx)
lea    0x1(%ebx),%eax
jmp    804e8bb <fchmod@plt+0x4beb>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%ecx
mov    %eax,%ebp
mov    %ecx,%ebx
and    $0xfffffffd,%ebx
cmp    $0x20,%bl
je     804e8b8 <fchmod@plt+0x4be8>
cmp    $0x9,%cl
je     804e8b8 <fchmod@plt+0x4be8>
test   %cl,%cl
je     804e8f1 <fchmod@plt+0x4c21>
cmp    $0x22,%cl
je     804e8f1 <fchmod@plt+0x4c21>
lea    0x1(%eax),%ecx
jmp    804e8e8 <fchmod@plt+0x4c18>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmp    $0x22,%bl
je     804e8f1 <fchmod@plt+0x4c21>
movzbl (%ecx),%ebx
mov    %ecx,%ebp
test   %bl,%bl
jne    804e8e0 <fchmod@plt+0x4c10>
movb   $0x0,0x0(%ebp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804e660 <fchmod@plt+0x4990>
jmp    804e7d8 <fchmod@plt+0x4b08>
mov    %esi,(%esp)
call   80496b0 <ferror@plt>
test   %eax,%eax
jne    804e9df <fchmod@plt+0x4d0f>
mov    %esi,(%esp)
call   80496d0 <fclose@plt>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    804e9da <fchmod@plt+0x4d0a>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049a60 <__errno_location@plt>
mov    (%eax),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804ea41 <fchmod@plt+0x4d71>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804ea41 <fchmod@plt+0x4d71>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049900 <strerror@plt>
movl   $0x8053280,0xc(%esp)
movl   $0x8050658,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   8049ad0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
movl   $0x1,(%esp)
call   8049920 <exit@plt>
call   8049770 <__stack_chk_fail@plt>
call   8049a60 <__errno_location@plt>
mov    (%eax),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
test   %eax,%eax
je     804ea76 <fchmod@plt+0x4da6>
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804ea76 <fchmod@plt+0x4da6>
movl   $0x804fa99,0x4(%esp)
movl   $0x6,(%esp)
call   8049b10 <setlocale@plt>
mov    %esi,(%esp)
call   8049900 <strerror@plt>
movl   $0x8053280,0xc(%esp)
movl   $0x8050680,0x8(%esp)
mov    %eax,0x10(%esp)
jmp    804e9a2 <fchmod@plt+0x4cd2>
mov    %esi,(%esp)
call   8049900 <strerror@plt>
movl   $0x8053280,0xc(%esp)
movl   $0x8050658,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804e9ce <fchmod@plt+0x4cfe>
mov    %esi,(%esp)
call   8049900 <strerror@plt>
movl   $0x8053280,0xc(%esp)
movl   $0x8050680,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   8049ad0 <__syslog_chk@plt>
jmp    804e9ce <fchmod@plt+0x4cfe>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
cmpb   $0x0,0x8053569
je     804ead0 <fchmod@plt+0x4e00>
mov    0x10(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
je     804ead8 <fchmod@plt+0x4e08>
mov    0x4(%eax),%eax
add    $0xc,%esp
ret
call   804e790 <fchmod@plt+0x4ac0>
jmp    804eabc <fchmod@plt+0x4dec>
nop
xor    %eax,%eax
lea    0x0(%esi),%esi
jmp    804eacc <fchmod@plt+0x4dfc>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
cmpb   $0x0,0x8053569
je     804eb30 <fchmod@plt+0x4e60>
mov    0x20(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
je     804eb48 <fchmod@plt+0x4e78>
mov    0x4(%eax),%eax
test   %eax,%eax
je     804eb48 <fchmod@plt+0x4e78>
movl   $0x80506dc,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <strcasecmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804e790 <fchmod@plt+0x4ac0>
mov    0x20(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
jne    804eb09 <fchmod@plt+0x4e39>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebx
sub    $0x38,%esp
cmpb   $0x0,0x8053569
je     804eb98 <fchmod@plt+0x4ec8>
mov    0x40(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
je     804ebac <fchmod@plt+0x4edc>
mov    0x4(%eax),%eax
mov    0x44(%esp),%edx
test   %eax,%eax
je     804eb8f <fchmod@plt+0x4ebf>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ee50 <fchmod@plt+0x5180>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804ebb8 <fchmod@plt+0x4ee8>
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
call   804e790 <fchmod@plt+0x4ac0>
mov    0x40(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
jne    804eb6c <fchmod@plt+0x4e9c>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
nop
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80506a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
cmpb   $0x0,0x8053569
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
je     804ecb8 <fchmod@plt+0x4fe8>
mov    %esi,%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
je     804ec95 <fchmod@plt+0x4fc5>
mov    0x4(%eax),%eax
mov    %edi,%edx
test   %eax,%eax
je     804ec97 <fchmod@plt+0x4fc7>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ee50 <fchmod@plt+0x5180>
test   %eax,%eax
jne    804eca0 <fchmod@plt+0x4fd0>
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80506a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    %edi,%edx
add    $0x30,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x2c(%esp),%edx
test   %edx,%edx
js     804ec55 <fchmod@plt+0x4f85>
add    $0x30,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804e790 <fchmod@plt+0x4ac0>
jmp    804ec2b <fchmod@plt+0x4f5b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
cmpb   $0x0,0x8053569
je     804ed18 <fchmod@plt+0x5048>
mov    0x40(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
je     804ed2c <fchmod@plt+0x505c>
mov    0x4(%eax),%eax
mov    0x44(%esp),%edx
test   %eax,%eax
je     804ed0f <fchmod@plt+0x503f>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ee50 <fchmod@plt+0x5180>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804ed38 <fchmod@plt+0x5068>
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
call   804e790 <fchmod@plt+0x4ac0>
mov    0x40(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
jne    804ecec <fchmod@plt+0x501c>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
nop
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80506a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
cmpb   $0x0,0x8053569
je     804edd8 <fchmod@plt+0x5108>
mov    0x40(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
je     804edec <fchmod@plt+0x511c>
mov    0x4(%eax),%eax
mov    0x44(%esp),%edx
test   %eax,%eax
je     804edcf <fchmod@plt+0x50ff>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804eeb0 <fchmod@plt+0x51e0>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804edf8 <fchmod@plt+0x5128>
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
call   804e790 <fchmod@plt+0x4ac0>
mov    0x40(%esp),%eax
call   804e540 <fchmod@plt+0x4870>
test   %eax,%eax
mov    %eax,%ebx
jne    804edac <fchmod@plt+0x50dc>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
nop
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80506a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049740 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8053444,%eax
mov    %eax,(%esp)
call   8049bc0 <__fprintf_chk@plt>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049a60 <__errno_location@plt>
mov    0x30(%esp),%ebx
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049c70 <strtol@plt>
xor    %edx,%edx
cmpb   $0x0,(%ebx)
je     804ee9e <fchmod@plt+0x51ce>
mov    0x1c(%esp),%ecx
cmpb   $0x0,(%ecx)
jne    804ee9e <fchmod@plt+0x51ce>
cmpl   $0x22,(%esi)
je     804ee9e <fchmod@plt+0x51ce>
mov    0x34(%esp),%edx
mov    %eax,(%edx)
mov    $0x1,%edx
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049a60 <__errno_location@plt>
mov    0x30(%esp),%ebx
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049840 <strtoll@plt>
xor    %ecx,%ecx
cmpb   $0x0,(%ebx)
je     804eef7 <fchmod@plt+0x5227>
mov    0x1c(%esp),%ebx
cmpb   $0x0,(%ebx)
jne    804eef7 <fchmod@plt+0x5227>
cmpl   $0x22,(%esi)
je     804eef7 <fchmod@plt+0x5227>
test   %edx,%edx
je     804ef00 <fchmod@plt+0x5230>
add    $0x24,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x34(%esp),%edx
mov    $0x1,%cl
mov    %eax,(%edx)
add    $0x24,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movl   $0x10,(%esp)
mov    0x30(%esp),%edi
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804f053 <fchmod@plt+0x5383>
mov    0x8(%edi),%eax
mov    %eax,0x8(%esi)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%esi)
je     804f022 <fchmod@plt+0x5352>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x4(%esi)
je     804f018 <fchmod@plt+0x5348>
mov    0xc(%edi),%ecx
xor    %edx,%edx
mov    (%ecx),%eax
test   %eax,%eax
je     804f049 <fchmod@plt+0x5379>
lea    0x0(%esi),%esi
add    $0x1,%edx
mov    (%ecx,%edx,4),%ebp
test   %ebp,%ebp
jne    804ef78 <fchmod@plt+0x52a8>
lea    0x4(,%edx,4),%eax
mov    %eax,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
mov    %eax,0xc(%esi)
je     804f057 <fchmod@plt+0x5387>
mov    0xc(%edi),%eax
xor    %ebp,%ebp
xor    %ebx,%ebx
mov    (%eax),%eax
test   %eax,%eax
jne    804efc4 <fchmod@plt+0x52f4>
jmp    804f038 <fchmod@plt+0x5368>
mov    0xc(%edi),%eax
add    $0x1,%ebx
lea    0x0(,%ebx,4),%ebp
mov    (%eax,%ebx,4),%eax
test   %eax,%eax
je     804f038 <fchmod@plt+0x5368>
lea    (%edx,%ebp,1),%ecx
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   8049a30 <__strdup@plt>
mov    0xc(%esp),%ecx
mov    %eax,(%ecx)
mov    0xc(%esi),%edx
mov    (%edx,%ebp,1),%eax
test   %eax,%eax
jne    804efb0 <fchmod@plt+0x52e0>
test   %ebx,%ebx
je     804f005 <fchmod@plt+0x5335>
xor    %edi,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx,%edi,4),%eax
add    $0x1,%edi
mov    %eax,(%esp)
call   8049670 <free@plt>
cmp    %ebx,%edi
mov    0xc(%esi),%edx
jne    804eff0 <fchmod@plt+0x5320>
mov    %edx,(%esp)
call   8049670 <free@plt>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    %esi,(%esp)
call   8049670 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%edx,%ebp,1)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x4,%eax
jmp    804ef89 <fchmod@plt+0x52b9>
xor    %eax,%eax
jmp    804f02c <fchmod@plt+0x535c>
mov    %ebx,(%esp)
jmp    804f013 <fchmod@plt+0x5343>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     804f0a1 <fchmod@plt+0x53d1>
mov    %ebx,(%esp)
call   80499a0 <strlen@plt>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049a20 <memset@plt>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0xc(%esi),%edx
test   %edx,%edx
je     804f0d5 <fchmod@plt+0x5405>
mov    (%edx),%eax
test   %eax,%eax
je     804f0cd <fchmod@plt+0x53fd>
mov    $0x4,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0xc(%esi),%edx
mov    (%edx,%ebx,1),%eax
add    $0x4,%ebx
test   %eax,%eax
jne    804f0b8 <fchmod@plt+0x53e8>
mov    %edx,(%esp)
call   8049670 <free@plt>
mov    %esi,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8049670 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    (%ecx),%ebp
mov    (%edx),%eax
mov    %ecx,0x1c(%esp)
lea    0x0(,%ebp,4),%ecx
mov    %ecx,0x14(%esp)
test   %ebx,%ebx
je     804f184 <fchmod@plt+0x54b4>
cmpb   $0x0,(%ebx)
je     804f184 <fchmod@plt+0x54b4>
mov    0x14(%esp),%edx
lea    0x1(%ebp),%ecx
mov    %ecx,0x18(%esp)
lea    0x4(%edx),%edi
jmp    804f12f <fchmod@plt+0x545f>
nop
cmpb   $0x0,(%ebx)
mov    (%esi),%eax
je     804f190 <fchmod@plt+0x54c0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
je     804f128 <fchmod@plt+0x5458>
mov    %eax,%edx
mov    0x14(%esp),%eax
mov    0x18(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %ebx,(%edx,%eax,1)
mov    0x1c(%esp),%eax
mov    %edx,(%esi)
mov    %ecx,(%eax)
mov    %ebx,(%esp)
movl   $0x2c,0x4(%esp)
call   8049980 <strchr@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
mov    %eax,%ebx
je     804f1b1 <fchmod@plt+0x54e1>
movb   $0x0,(%eax)
mov    (%esi),%eax
add    $0x1,%ebx
mov    0x18(%esp),%ebp
mov    %edi,0x14(%esp)
jmp    804f10e <fchmod@plt+0x543e>
lea    0x4(,%ebp,4),%edi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
je     804f1a9 <fchmod@plt+0x54d9>
movl   $0x0,(%eax,%ebp,4)
mov    %eax,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
jmp    804f17a <fchmod@plt+0x54aa>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805359c,%eax
test   %eax,%eax
je     804f1d8 <setsgent+0x18>
mov    %eax,(%esp)
call   8049780 <rewind@plt>
add    $0x1c,%esp
ret
movl   $0x804fa92,0x4(%esp)
movl   $0x805087b,(%esp)
call   8049820 <fopen64@plt>
mov    %eax,0x805359c
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805359c,%eax
test   %eax,%eax
je     804f228 <endsgent+0x28>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   80496d0 <fclose@plt>
movl   $0x0,0x805359c
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x805359c
00
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    %edi,(%esp)
call   80499a0 <strlen@plt>
mov    0x8053574,%esi
lea    0x1(%eax),%ebx
mov    %eax,%ebp
cmp    0x8053578,%ebx
jbe    804f28c <sgetsgent+0x4c>
mov    0x8053574,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
je     804f370 <sgetsgent+0x130>
mov    %eax,0x8053574
mov    %eax,%esi
mov    %ebx,0x8053578
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049a70 <strncpy@plt>
movb   $0x0,(%esi,%ebp,1)
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   8049b20 <strrchr@plt>
test   %eax,%eax
je     804f2b7 <sgetsgent+0x77>
movb   $0x0,(%eax)
test   %esi,%esi
je     804f370 <sgetsgent+0x130>
xor    %ebx,%ebx
mov    %esi,0x10(%esp,%ebx,4)
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   8049980 <strchr@plt>
test   %eax,%eax
je     804f368 <sgetsgent+0x128>
movb   $0x0,(%eax)
add    $0x1,%ebx
add    $0x1,%eax
mov    %eax,%esi
setne  %al
je     804f2f8 <sgetsgent+0xb8>
cmp    $0x3,%ebx
jle    804f2c1 <sgetsgent+0x81>
lea    0x0(%esi),%esi
cmp    $0x4,%ebx
jne    804f370 <sgetsgent+0x130>
test   %al,%al
nop
jne    804f370 <sgetsgent+0x130>
mov    0x10(%esp),%eax
mov    0x805358c,%edx
mov    %eax,0x805357c
mov    0x14(%esp),%eax
test   %edx,%edx
mov    %eax,0x8053580
jne    804f3a8 <sgetsgent+0x168>
mov    0x8053594,%eax
test   %eax,%eax
jne    804f380 <sgetsgent+0x140>
mov    0x18(%esp),%eax
mov    $0x805358c,%ecx
mov    $0x8053590,%edx
call   804f0f0 <fchmod@plt+0x5420>
mov    $0x8053594,%ecx
mov    $0x8053598,%edx
mov    %eax,0x8053584
mov    0x1c(%esp),%eax
call   804f0f0 <fchmod@plt+0x5420>
mov    %eax,0x8053588
add    $0x2c,%esp
mov    $0x805357c,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%ebx
xor    %eax,%eax
jmp    804f2f8 <sgetsgent+0xb8>
nop
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8053598,%eax
movl   $0x0,0x8053594
00
mov    %eax,(%esp)
call   8049670 <free@plt>
movl   $0x0,0x8053598
00
jmp    804f32b <sgetsgent+0xeb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053590,%eax
movl   $0x0,0x805358c
00
mov    %eax,(%esp)
call   8049670 <free@plt>
movl   $0x0,0x8053590
00
jmp    804f322 <sgetsgent+0xe2>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x8053570,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     804f4e8 <fgetsgent+0x118>
test   %esi,%esi
je     804f4d8 <fgetsgent+0x108>
mov    0x8053570,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x805356c,%eax
mov    %eax,(%esp)
call   804f8b0 <putsgent+0x310>
cmp    0x805356c,%eax
mov    %eax,%ebx
je     804f4ad <fgetsgent+0xdd>
jmp    804f4d8 <fgetsgent+0x108>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049940 <feof@plt>
test   %eax,%eax
jne    804f510 <fgetsgent+0x140>
mov    0x8053570,%eax
mov    %ebx,(%esp)
lea    (%eax,%eax,1),%edi
mov    %edi,0x4(%esp)
call   80498c0 <realloc@plt>
test   %eax,%eax
je     804f4d8 <fgetsgent+0x108>
mov    %eax,0x805356c
mov    %eax,%ebx
mov    %edi,0x8053570
mov    (%ebx),%ecx
add    $0x4,%ebx
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804f459 <fgetsgent+0x89>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%ebx),%ecx
cmove  %ecx,%ebx
add    %dl,%dl
sbb    $0x3,%ebx
sub    %eax,%ebx
add    %ebx,%eax
sub    %ebx,%edi
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804f8b0 <putsgent+0x310>
mov    0x805356c,%edx
add    %edx,%ebx
cmp    %ebx,%eax
jne    804f4d8 <fgetsgent+0x108>
mov    %edx,%ebx
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   8049b20 <strrchr@plt>
test   %eax,%eax
je     804f420 <fgetsgent+0x50>
movb   $0x0,(%eax)
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804f240 <sgetsgent>
nop
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2000,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x805356c
je     804f4d8 <fgetsgent+0x108>
movl   $0x2000,0x8053570
00
jmp    804f3e7 <fgetsgent+0x17>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   8049b20 <strrchr@plt>
test   %eax,%eax
jne    804f4c5 <fgetsgent+0xf5>
jmp    804f4c8 <fgetsgent+0xf8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805359c,%eax
test   %eax,%eax
je     804f548 <getsgent+0x18>
mov    %eax,(%esp)
call   804f3d0 <fgetsgent>
add    $0x1c,%esp
ret
call   804f1c0 <setsgent>
mov    0x805359c,%eax
mov    %eax,(%esp)
call   804f3d0 <fgetsgent>
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804f1c0 <setsgent>
jmp    804f582 <getsgnam+0x22>
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049610 <strcmp@plt>
test   %eax,%eax
je     804f58d <getsgnam+0x2d>
call   804f530 <getsgent>
test   %eax,%eax
mov    %eax,%ebx
jne    804f570 <getsgnam+0x10>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebx
test   %eax,%eax
je     804f748 <putsgent+0x1a8>
test   %ebx,%ebx
je     804f748 <putsgent+0x1a8>
mov    (%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   80499a0 <strlen@plt>
mov    %eax,%edi
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   80499a0 <strlen@plt>
mov    0x8(%ebx),%ebp
test   %ebp,%ebp
lea    (%eax,%edi,1),%ecx
lea    0xa(%ecx),%esi
je     804f61e <putsgent+0x7e>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     804f61e <putsgent+0x7e>
mov    %eax,(%esp)
add    $0x4,%ebp
mov    %ecx,0x1c(%esp)
call   80499a0 <strlen@plt>
mov    0x1c(%esp),%ecx
lea    0xb(%ecx,%eax,1),%esi
jmp    804f614 <putsgent+0x74>
nop
mov    %eax,(%esp)
call   80499a0 <strlen@plt>
lea    0x1(%esi,%eax,1),%esi
add    $0x4,%ebp
mov    -0x4(%ebp),%eax
test   %eax,%eax
jne    804f608 <putsgent+0x68>
mov    0xc(%ebx),%ebp
test   %ebp,%ebp
je     804f656 <putsgent+0xb6>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     804f656 <putsgent+0xb6>
mov    %eax,(%esp)
add    $0x4,%ebp
call   80499a0 <strlen@plt>
lea    0x1(%esi,%eax,1),%esi
jmp    804f64c <putsgent+0xac>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   80499a0 <strlen@plt>
lea    0x1(%esi,%eax,1),%esi
add    $0x4,%ebp
mov    -0x4(%ebp),%eax
test   %eax,%eax
jne    804f640 <putsgent+0xa0>
mov    %esi,(%esp)
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804f748 <putsgent+0x1a8>
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
add    %esi,%edi
mov    %esi,(%esp)
add    $0x1,%edi
mov    %eax,0x4(%esp)
call   80496a0 <memcpy@plt>
movb   $0x3a,-0x1(%edi)
mov    0x4(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049760 <stpcpy@plt>
movb   $0x3a,(%eax)
lea    0x1(%eax),%ecx
mov    0x8(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
je     804f6d8 <putsgent+0x138>
xor    %edi,%edi
lea    0x0(%esi),%esi
mov    %edx,0x4(%esp)
add    $0x1,%edi
mov    %ecx,(%esp)
call   8049760 <stpcpy@plt>
mov    0x8(%ebx),%edx
mov    (%edx,%edi,4),%ebp
mov    %eax,%ecx
test   %ebp,%ebp
je     804f6d8 <putsgent+0x138>
movb   $0x2c,(%eax)
lea    0x1(%eax),%ecx
mov    0x8(%ebx),%eax
mov    (%eax,%edi,4),%edx
jmp    804f6a8 <putsgent+0x108>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x3a,(%ecx)
mov    0xc(%ebx),%edx
lea    0x1(%ecx),%eax
mov    (%edx),%edx
test   %edx,%edx
je     804f718 <putsgent+0x178>
xor    %edi,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x4(%esp)
add    $0x1,%edi
mov    %eax,(%esp)
call   8049760 <stpcpy@plt>
mov    0xc(%ebx),%edx
mov    (%edx,%edi,4),%edx
test   %edx,%edx
je     804f718 <putsgent+0x178>
movb   $0x2c,(%eax)
mov    0xc(%ebx),%edx
add    $0x1,%eax
mov    (%edx,%edi,4),%edx
jmp    804f6f0 <putsgent+0x150>
nop
movb   $0xa,(%eax)
movb   $0x0,0x1(%eax)
mov    0x44(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804f930 <putsgent+0x390>
cmp    $0xffffffff,%eax
je     804f74f <putsgent+0x1af>
mov    %esi,(%esp)
call   8049670 <free@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    804f73e <putsgent+0x19e>
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   8049670 <free@plt>
mov    0x18(%esp),%eax
jmp    804f73e <putsgent+0x19e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x1c,(%esp)
mov    0x20(%esp),%esi
call   80498d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804f82e <putsgent+0x28e>
mov    0x8(%esi),%eax
mov    %eax,0x8(%ebx)
mov    0xc(%esi),%eax
mov    %eax,0xc(%ebx)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%ebx)
je     804f826 <putsgent+0x286>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     804f81c <putsgent+0x27c>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x10(%ebx)
je     804f811 <putsgent+0x271>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x14(%ebx)
je     804f806 <putsgent+0x266>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049a30 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%ebx)
je     804f7fb <putsgent+0x25b>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    %ebx,(%esp)
call   8049670 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x4(%ebx),%esi
test   %esi,%esi
je     804f881 <putsgent+0x2e1>
mov    %esi,(%esp)
call   80499a0 <strlen@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049a20 <memset@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8049670 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8049670 <free@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebx
mov    0x30(%esp),%edi
mov    0x38(%esp),%esi
test   %ebx,%ebx
jle    804f918 <putsgent+0x378>
mov    %edi,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   80496c0 <fgets@plt>
cmp    %eax,%ebp
jne    804f910 <putsgent+0x370>
movl   $0x5c,0x4(%esp)
mov    %ebp,(%esp)
call   8049b20 <strrchr@plt>
test   %eax,%eax
je     804f918 <putsgent+0x378>
cmpb   $0xa,0x1(%eax)
jne    804f918 <putsgent+0x378>
sub    %eax,%ebp
add    %ebp,%ebx
test   %ebx,%ebx
jle    804f918 <putsgent+0x378>
movb   $0x0,(%eax)
mov    %eax,%ebp
jmp    804f8d0 <putsgent+0x330>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
je     804f922 <putsgent+0x382>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    804f91a <putsgent+0x37a>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movsbl (%ebx),%eax
test   %al,%al
jne    804f952 <putsgent+0x3b2>
jmp    804f970 <putsgent+0x3d0>
xchg   %ax,%ax
add    $0x1,%ebx
movsbl (%ebx),%eax
test   %al,%al
je     804f970 <putsgent+0x3d0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049800 <_IO_putc@plt>
cmp    $0xffffffff,%eax
jne    804f948 <putsgent+0x3a8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804b7f0 <fchmod@plt+0x1b20>
add    $0x3675,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x104(%ebx),%esi
call   80495a8 <_init>
lea    -0x108(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804f9d9 <putsgent+0x439>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x108(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804f9b8 <putsgent+0x418>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804f9f0 <putsgent+0x450>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
push   %ebx
sub    $0x8,%esp
call   804b7f0 <fchmod@plt+0x1b20>
add    $0x3603,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %cl,0x47(%edi,%ecx,2)
pop    %edi
push   %ebp
dec    %esi
dec    %ebx
inc    %esi
inc    %ecx
dec    %ecx
dec    %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x2d5b2073,%eax
jo     804faac <_IO_stdin_used+0x88>
and    %bl,0x6e(%ebx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %ebp
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x2d5b2073
jo     804fac3 <_IO_stdin_used+0x9f>
and    %ch,0x6f682072
jae    804fae2 <_IO_stdin_used+0xbe>
or     (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x28280063,0x2e(%bp),%ebp
jbe    804faeb <_IO_stdin_used+0xc7>
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
and    %edi,0x72747020
pop    %edi
jo     804faee <_IO_stdin_used+0xca>
insl   (%dx),%es:(%edi)
pop    %edi
jne    804fb04 <_IO_stdin_used+0xe0>
gs
jb     804fa94 <_IO_stdin_used+0x70>
or     0x43000a73,%ah
add    %ch,(%edi)
jne    804fb11 <_IO_stdin_used+0xed>
jb     804facf <_IO_stdin_used+0xab>
jae    804fb0a <_IO_stdin_used+0xe6>
popa
jb     804fb0a <_IO_stdin_used+0xe6>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x66(%edx,%edi,1)
push   $0x3a72703a
add    %ah,0x50203a73
gs
jb     804fb2b <_IO_stdin_used+0x107>
imul   $0x206e6f69,0x73(%ebx),%esi
fs outsb %fs:%gs:(%esi),(%dx)
imul   $0x28000a2e,0x64(%ebp),%esp
sub    %dh,0x6f(%esi)
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
cmp    $0x7375203d,%eax
gs
jb     804fb50 <_IO_stdin_used+0x12c>
popa
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x45(%edx)
dec    %ebp
dec    %edi
push   %esp
inc    %ebp
dec    %eax
dec    %edi
push   %ebx
push   %esp
add    %ch,0x67(%edi,%ebp,2)
imul   $0x53415245,0x0(%esi),%ebp
inc    %ebp
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
add    %cl,0x49(%ebx)
dec    %esp
dec    %esp
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
add    %dl,0x52(%ebp,%eax,2)
dec    %ebp
add    %cl,0x4e(%ecx,%eax,2)
inc    %edi
add    %dl,0x0(%edx,%ebx,2)
dec    %eax
pop    %edx
add    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x3030312e,%eax
jae    804fb4d <_IO_stdin_used+0x129>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x3030322e,%eax
jae    804fb5b <_IO_stdin_used+0x137>
add    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x3030312e,%eax
jae    804fb68 <_IO_stdin_used+0x144>
add    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
pop    %edi
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
dec    %edi
push   %ebp
push   %esp
add    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
pop    %edi
push   %edx
inc    %ebp
push   %esp
push   %edx
dec    %ecx
inc    %ebp
push   %ebx
add    %al,0x6f(%ebx)
jne    804fbce <_IO_stdin_used+0x1aa>
outsb  %fs:(%esi),(%dx)
daa
je     804fb87 <_IO_stdin_used+0x163>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x4d415020,0x65(%edx),%edi
cmp    (%eax),%ah
and    $0x73250073,%eax
and    %ch,0x67(%edi,%ebp,2)
imul   $0x41460020,0x3a(%esi),%ebp
dec    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %edi
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %cl,0x67(%edi,%ebp,2)
imul   $0x6f636e69,0x20(%esi),%ebp
jb     804fc10 <_IO_stdin_used+0x1ec>
arpl   %si,%gs:0x46(%eax,%eax,1)
push   %esp
dec    %ebp
push   %eax
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fbd3 <_IO_stdin_used+0x1af>
imul   $0x7520,0x64(%esi),%bp
jae    804fc20 <_IO_stdin_used+0x1fc>
jb     804fbdd <_IO_stdin_used+0x1b9>
and    $0x61430073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fbe7 <_IO_stdin_used+0x1c3>
imul   $0x7520,0x64(%esi),%bp
jae    804fc34 <_IO_stdin_used+0x210>
jb     804fbf1 <_IO_stdin_used+0x1cd>
sub    %ah,0xa2973
sub    %ch,(%eax)
jbe    804fc4a <_IO_stdin_used+0x226>
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
and    %edi,0x65737520
jb     804fc59 <_IO_stdin_used+0x235>
popa
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x46(%ecx)
push   %ebx
add    %cl,0x46(%ecx)
push   %ebx
cmp    $0xa0920,%eax
and    $0x66203a73,%eax
popa
imul   $0x6f662065,0x72(%ebp,%esi,2),%ebp
jb     804fc76 <_IO_stdin_used+0x252>
imul   $0x7325203a,0x67(%esi),%ebp
add    %dl,0x4f(%ecx,%ecx,2)
inc    %ebx
push   %ebx
inc    %ebx
push   %esp
push   %esp
pop    %ecx
and    %ah,0x61(%esi)
imul   $0x206e6f20,0x64(%ebp,%eiz,2),%ebp
and    $0x55480073,%eax
push   %ebx
dec    %eax
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
cmp    $0x534c4146,%eax
inc    %ebp
add    %cl,0x55(%eax)
push   %ebx
dec    %eax
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
cmp    $0x45555254,%eax
add    %dl,0x4f(%edx)
dec    %edi
push   %esp
and    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
and    %ah,0x4f4c0073
inc    %edi
pop    %edi
dec    %edi
dec    %ebx
pop    %edi
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
push   %ebx
add    %ah,(%edi)
and    $0x6c202773,%eax
outsl  %ds:(%esi),(%dx)
addr32 gs and %ch,%fs:%gs:0x6e(%bx,%di)
and    %ah,0x41460073
dec    %ebx
inc    %ebp
pop    %edi
push   %ebx
dec    %eax
inc    %ebp
dec    %esp
dec    %esp
add    %al,(%eax)
add    %cl,(%edx)
dec    %esp
outsl  %ds:(%esi),(%dx)
imul   $0x656d6974,0x20(%bp),%ebp
and    %ch,%fs:0x75(%edi)
je     804fcb5 <_IO_stdin_used+0x291>
popa
data16
je     804fcfe <_IO_stdin_used+0x2da>
jb     804fcbb <_IO_stdin_used+0x297>
and    $0x65732075,%eax
arpl   %bp,0x6e(%edi)
fs
jae    804fcd4 <_IO_stdin_used+0x2b0>
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x2d5b2073
jo     804fd13 <_IO_stdin_used+0x2ef>
and    %bl,0x2d(%ebx)
push   $0x736f6820
je     804fd1d <_IO_stdin_used+0x2f9>
and    %bl,0x2d(%ebx)
data16
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
pop    %ebp
or     (%eax),%al
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fcf7 <_IO_stdin_used+0x2d3>
jo     804fd48 <_IO_stdin_used+0x324>
jae    804fd4e <_IO_stdin_used+0x32a>
imul   $0x6f772079,0x6c(%edx),%esp
jb     804fd4f <_IO_stdin_used+0x32b>
and    %dh,0x69(%edi)
je     804fd51 <_IO_stdin_used+0x32d>
outsl  %ds:(%esi),(%dx)
jne    804fd60 <_IO_stdin_used+0x33c>
and    %ah,0x66(%ebp)
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %dh,%gs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     804fd06 <_IO_stdin_used+0x2e2>
add    %al,(%eax)
add    %al,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x74(%ebp)
insl   (%dx),%es:(%edi)
jo     804fd28 <_IO_stdin_used+0x304>
outsb  %gs:(%esi),(%dx)
je     804fd7e <_IO_stdin_used+0x35a>
jns    804fd3c <_IO_stdin_used+0x318>
and    %ah,(%eax)
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    804fd34 <_IO_stdin_used+0x310>
insl   (%dx),%es:(%edi)
jne    804fd8a <_IO_stdin_used+0x366>
je     804fd39 <_IO_stdin_used+0x315>
gs
js     804fd81 <_IO_stdin_used+0x35d>
arpl   %sp,(%eax)
and    0x67(%edi,%ebp,2),%ch
imul   $0x6f726620,0x22(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x77(%edi,%ebp,2)
gs
jae    804fda9 <_IO_stdin_used+0x385>
and    %ch,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ah,(%edx)
jae    804fda7 <_IO_stdin_used+0x383>
and    (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     804fdb8 <_IO_stdin_used+0x394>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     804fdc5 <_IO_stdin_used+0x3a1>
jb     804fd78 <_IO_stdin_used+0x354>
sub    $0x6e616320,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fd81 <_IO_stdin_used+0x35d>
jo     804fdc4 <_IO_stdin_used+0x3a0>
jb     804fdd8 <_IO_stdin_used+0x3b4>
and    %ah,%gs:0x61762073
insb   (%dx),%es:(%edi)
jne    804fdd4 <_IO_stdin_used+0x3b0>
cmp    (%eax),%ah
daa
and    $0x2764,%eax
add    %ch,0x67(%edi,%ebp,2)
imul   $0x4d415020,0x3a(%esi),%ebp
and    %al,0x61(%esi)
imul   $0x61202c65,0x72(%ebp,%esi,2),%ebp
bound  %ebp,0x72(%edi)
je     804fdfb <_IO_stdin_used+0x3d7>
outsb  %ds:(%esi),(%dx)
cmp    (%bx,%si),%ah
and    $0xa73,%eax
add    %dl,0x4f(%edi,%ecx,2)
and    %cl,0x41(%ebp)
dec    %esi
pop    %ecx
and    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
and    %dl,0x49(%edx,%edx,2)
inc    %ebp
push   %ebx
and    %ch,(%eax)
and    $0x73252975,%eax
and    %al,0x4f(%esi)
push   %edx
and    %ah,(%edi)
and    $0x2773,%eax
add    %al,(%eax)
dec    %ebp
popa
js     804fe31 <_IO_stdin_used+0x40d>
insl   (%dx),%es:(%edi)
jne    804fe38 <_IO_stdin_used+0x414>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x69(%edx,%esi,2)
gs
jae    804fdfc <_IO_stdin_used+0x3d8>
gs
js     804fe42 <_IO_stdin_used+0x41e>
gs gs fs gs and %ch,%fs:%gs:(%eax)
and    $0xa2975,%eax
add    %ch,0x67(%edi,%ebp,2)
imul   $0x6f626120,0x3a(%esi),%ebp
jb     804fe6c <_IO_stdin_used+0x448>
and    %dh,0x65(%edx)
jno    804fe72 <_IO_stdin_used+0x44e>
gs
jae    804fe74 <_IO_stdin_used+0x450>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dl,0x41(%eax)
dec    %ebp
or     (%eax),%al
add    %dl,0x41(%eax)
dec    %ebp
pop    %edi
inc    %ecx
inc    %edx
dec    %edi
push   %edx
push   %esp
and    %dh,0x65(%edx)
je     804fe8f <_IO_stdin_used+0x46b>
jb     804fe8a <_IO_stdin_used+0x466>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
popa
jne    804fe9f <_IO_stdin_used+0x47b>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
sub    %ch,%gs:(%ecx)
add    %al,(%eax)
inc    %esi
inc    %ecx
dec    %ecx
dec    %esp
inc    %ebp
inc    %esp
and    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
and    %ch,(%eax)
and    $0x73252975,%eax
and    %al,0x4f(%esi)
push   %edx
and    %ah,(%edi)
and    $0x202c2773,%eax
and    $0x73,%eax
add    %ah,0x78(%ebp)
arpl   %sp,0x65(%ebp)
fs gs and %ah,%fs:%gs:0x61(%esi)
imul   $0x696c2065,0x72(%ebp,%esi,2),%ebp
insl   (%dx),%es:(%edi)
imul   $0x6020726f,0x66(%eax,%eiz,1),%esi
and    $0x25202773,%eax
jae    804fe7f <_IO_stdin_used+0x45b>
add    %dl,0x61(%edi)
jb     804fef2 <_IO_stdin_used+0x4ce>
imul   $0x6f6c203a,0x67(%esi),%ebp
imul   $0x652d6572,0x20(%bp),%ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ah,0x66(%ecx)
je     804ff03 <_IO_stdin_used+0x4df>
jb     804fec0 <_IO_stdin_used+0x49c>
je     804ff07 <_IO_stdin_used+0x4e3>
insl   (%dx),%es:(%edi)
jo     804ff14 <_IO_stdin_used+0x4f0>
jb     804ff08 <_IO_stdin_used+0x4e4>
jb     804ff22 <_IO_stdin_used+0x4fe>
and    %ch,0x63(%edi,%ebp,2)
imul   $0x74,0x75(%edi),%ebp
add    %al,%cs:(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x27732527,0x20(%bp),%ebp
and    %dh,0x65(%edx)
sub    $0x62616e65,%eax
insb   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x66(%ecx)
je     804ff33 <_IO_stdin_used+0x50f>
jb     804fef0 <_IO_stdin_used+0x4cc>
je     804ff37 <_IO_stdin_used+0x513>
insl   (%dx),%es:(%edi)
jo     804ff44 <_IO_stdin_used+0x520>
jb     804ff38 <_IO_stdin_used+0x514>
jb     804ff52 <_IO_stdin_used+0x52e>
and    %ch,0x63(%edi,%ebp,2)
imul   $0x74,0x75(%edi),%ebp
and    %ch,(%eax)
and    $0x61662064,%eax
imul   $0x297365,0x72(%ebp,%esi,2),%ebp
fcomps -0x619ff7fc(%ebp)
add    $0x8,%al
push   %eax
sahf
add    $0x8,%al
pusha
sahf
add    $0x8,%al
xor    %bl,-0x619ff7fc(%esi)
add    $0x8,%al
pusha
sahf
add    $0x8,%al
pusha
sahf
add    $0x8,%al
pusha
sahf
add    $0x8,%al
pusha
sahf
add    $0x8,%al
pusha
sahf
add    $0x8,%al
pusha
sahf
add    $0x8,%al
and    %bl,-0x619ff7fc(%esi)
add    $0x8,%al
add    %bl,0x65670804(%esi)
je     804ff8f <_IO_stdin_used+0x56b>
jo     804ff93 <_IO_stdin_used+0x56f>
insl   (%dx),%es:(%edi)
pop    %edi
jne    804ffa9 <_IO_stdin_used+0x585>
gs
jb     804ff39 <_IO_stdin_used+0x515>
jo     804ffad <_IO_stdin_used+0x589>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    804ffa0 <_IO_stdin_used+0x57c>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 804ff47 <_IO_stdin_used+0x523>
insl   (%dx),%es:(%edi)
popa
imul   $0x47595454,0x0(%esi),%ebp
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %dl,0x59(%esp,%edx,2)
push   %eax
inc    %ebp
push   %edx
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     804ffd8 <_IO_stdin_used+0x5b4>
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x77(%bx)
outsb  %ds:(%esi),(%dx)
gs
jb     804ff97 <_IO_stdin_used+0x573>
outsl  %ds:(%esi),(%dx)
jb     804ff9a <_IO_stdin_used+0x576>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x66(%edi)
and    %dh,0x79(%esp,%esi,2)
and    %dh,0x74(%ebx)
imul   $0x732520,%fs:0x3a(%esi),%ebp
jne    8050000 <_IO_stdin_used+0x5dc>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8050008 <_IO_stdin_used+0x5e4>
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x77(%bx)
outsb  %ds:(%esi),(%dx)
gs
jb     804ffc7 <_IO_stdin_used+0x5a3>
outsl  %ds:(%esi),(%dx)
jb     804ffca <_IO_stdin_used+0x5a6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x66(%edi)
and    %dh,0x79(%esp,%esi,2)
and    %dh,0x74(%ebx)
imul   $0x20726f66,%fs:0x20(%esi),%ebp
jne    8050035 <_IO_stdin_used+0x611>
gs
jb     804ffe5 <_IO_stdin_used+0x5c1>
pusha
and    $0x203a2773,%eax
and    $0x25000a73,%eax
jae    805000f <_IO_stdin_used+0x5eb>
and    $0x6e650073,%eax
jbe    8050007 <_IO_stdin_used+0x5e3>
arpl   %ax,(%eax)
ja     8050049 <_IO_stdin_used+0x625>
outsb  %gs:(%esi),(%dx)
and    %bh,0x6928203d
outsb  %ds:(%esi),(%dx)
je     8050011 <_IO_stdin_used+0x5ed>
and    %ch,0x6e(%ebp,%eiz,2)
and    %ch,0x6e450031
jbe    805005d <_IO_stdin_used+0x639>
jb     8050065 <_IO_stdin_used+0x641>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805001c <_IO_stdin_used+0x5f8>
outsl  %ds:(%esi),(%dx)
jbe    8050064 <_IO_stdin_used+0x640>
jb     8050067 <_IO_stdin_used+0x643>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805000f <_IO_stdin_used+0x5eb>
add    %cl,0x64(%ebp,%eiz,1)
add    %dh,0x6c(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%eax,%eiz,1)
sub    %ch,0x6e(%ecx)
je     805003f <_IO_stdin_used+0x61b>
and    %dh,0x69(%ebx)
jp     8050080 <_IO_stdin_used+0x65c>
outsl  %ds:(%esi),(%dx)
data16
sub    %dh,0x61(%esi)
jb     805008b <_IO_stdin_used+0x667>
popa
bound  %ebp,0x29(%ebp,%eiz,2)
add    %bl,0x6f(%ecx)
jne    805004c <_IO_stdin_used+0x628>
insl   (%dx),%es:(%edi)
popa
jns    8050050 <_IO_stdin_used+0x62c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8050054 <_IO_stdin_used+0x630>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%si)
and    $0x4c000a73,%eax
inc    %ecx
dec    %esi
inc    %edi
cmp    $0x4e414c00,%eax
inc    %edi
push   %ebp
inc    %ecx
inc    %edi
inc    %ebp
cmp    $0x5f434c00,%eax
add    %bl,0x52(%edi)
dec    %esp
inc    %esp
pop    %edi
cmp    $0x53414200,%eax
dec    %eax
pop    %edi
inc    %ebp
dec    %esi
push   %esi
cmp    $0x4d4f4800,%eax
inc    %ebp
cmp    $0x53464900,%eax
cmp    $0x42524b00,%eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
inc    %esi
cmp    $0x5f444c00,%eax
add    %cl,0x42(%ecx,%ecx,2)
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x49414d00,%eax
dec    %esp
cmp    $0x534c4e00,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x45485300,%eax
dec    %esp
dec    %esp
cmp    $0x4c485300,%eax
dec    %ecx
inc    %edx
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x74657300,%eax
pop    %edi
outsb  %gs:(%esi),(%dx)
jbe    80500b1 <_IO_stdin_used+0x68d>
popa
fs fs outsb %fs:%gs:(%esi),(%dx)
jbe    80500b8 <_IO_stdin_used+0x694>
das
jbe    805011c <_IO_stdin_used+0x6f8>
jb     80500ec <_IO_stdin_used+0x6c8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 das
popaw
imul   $0x63250067,0x6f(%esp,%ebp,2),%ebp
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     80500f2 <_IO_stdin_used+0x6ce>
ja     8050146 <_IO_stdin_used+0x722>
imul   $0x6c696166,0x20(%ebp,%eiz,2),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ah,0x6e(%di)
je     8050156 <_IO_stdin_used+0x732>
jns    8050106 <_IO_stdin_used+0x6e2>
outsw  %ds:(%esi),(%dx)
jb     805010a <_IO_stdin_used+0x6e6>
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x6920756c
outsb  %ds:(%esi),(%dx)
and    %ah,0x2e73
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     8050122 <_IO_stdin_used+0x6fe>
outsl  %ds:(%esi),(%dx)
jo     805016a <_IO_stdin_used+0x746>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x61(%esi)
imul   $0x69662067,0x6f(%esp,%ebp,2),%ebp
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
and    $0x74202973,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x202e756c
push   %ebp
jae    8050197 <_IO_stdin_used+0x773>
jb     8050154 <_IO_stdin_used+0x730>
popa
arpl   %sp,0x65(%ebx)
jae    80501ad <_IO_stdin_used+0x789>
and    %ah,0x75(%ecx)
je     80501a7 <_IO_stdin_used+0x783>
outsl  %ds:(%esi),(%dx)
jb     80501ab <_IO_stdin_used+0x787>
jp     80501a9 <_IO_stdin_used+0x785>
fs add %al,%cs:%fs:(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     805016e <_IO_stdin_used+0x74a>
jb     80501b5 <_IO_stdin_used+0x791>
jae    80501b7 <_IO_stdin_used+0x793>
je     8050174 <_IO_stdin_used+0x750>
popaw
imul   $0x6e652067,0x6f(%esp,%ebp,2),%ebp
je     80501d2 <_IO_stdin_used+0x7ae>
jns    8050182 <_IO_stdin_used+0x75e>
outsw  %ds:(%esi),(%dx)
jb     8050186 <_IO_stdin_used+0x762>
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x6920756c
outsb  %ds:(%esi),(%dx)
and    %ah,0x2e73
add    %al,(%eax)
and    $0x61662064,%eax
imul   $0x73207365,0x72(%ebp,%esi,2),%ebp
imul   $0x616c2065,0x63(%esi),%ebp
jae    8050202 <_IO_stdin_used+0x7de>
and    %ch,0x67(%edi,%ebp,2)
imul   $0x73614c0a,0x2e(%esi),%ebp
je     80501bb <_IO_stdin_used+0x797>
ja     80501fe <_IO_stdin_used+0x7da>
jae    80501bf <_IO_stdin_used+0x79b>
and    $0x6e6f2073,%eax
and    %ah,0xa2e73
add    %al,(%eax)
and    $0x61662064,%eax
imul   $0x69732065,0x72(%ebp,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
insb   (%dx),%es:(%edi)
popa
jae    8050235 <_IO_stdin_used+0x811>
and    %ch,0x67(%edi,%ebp,2)
imul   $0x73614c0a,0x2e(%esi),%ebp
je     80501ee <_IO_stdin_used+0x7ca>
ja     8050231 <_IO_stdin_used+0x80d>
jae    80501f2 <_IO_stdin_used+0x7ce>
and    $0x6e6f2073,%eax
and    %ah,0xa2e73
add    %al,(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8050206 <_IO_stdin_used+0x7e2>
popa
jo     8050259 <_IO_stdin_used+0x835>
outsb  %gs:(%esi),(%dx)
and    %ah,%fs:0x61(%esi)
imul   $0x666f2065,0x72(%ebp,%esi,2),%ebp
and    %dh,0x73(%ebp)
gs
jb     805021d <_IO_stdin_used+0x7f9>
and    $0x6f742073,%eax
and    %ah,0x48002e73
push   %ebp
push   %ebx
dec    %eax
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,0x73252f73
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
add    $0x96000000,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %ch,(%ecx,%eax,1)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %eax
add    (%eax),%al
add    %cl,(%ecx)
add    %al,(%eax)
add    %dh,0xa000004(%eax)
add    %al,(%eax)
add    %cl,(%eax)
pop    %es
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
pusha
or     %eax,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
rclb   $0x0,(%edx)
add    %cl,0x80000000
and    $0xe0000,%eax
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %cl,(%edi)
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pushl  0x65(%ebx)
je     805030b <_IO_stdin_used+0x8e7>
imul   $0x6774696e,0x69(%eax,%eax,1),%esp
jb     805031d <_IO_stdin_used+0x8f9>
jne    8050320 <_IO_stdin_used+0x8fc>
jae    80502b2 <_IO_stdin_used+0x88e>
jae    8050319 <_IO_stdin_used+0x8f5>
je     805032b <_IO_stdin_used+0x907>
imul   $0x61620000,0x0(%eax,%eax,1),%esp
and    %ah,%fs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8050335 <_IO_stdin_used+0x911>
and    %cl,0x44(%ecx)
and    %ah,0x25(%eax)
fs
daa
and    %ah,0x6f(%esi)
jb     80502f2 <_IO_stdin_used+0x8ce>
jne    8050347 <_IO_stdin_used+0x923>
gs
jb     80502f7 <_IO_stdin_used+0x8d3>
pusha
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %al,(%eax)
imul   $0x6f726774,0x69(%esi),%ebp
jne    805035d <_IO_stdin_used+0x939>
jae    805030f <_IO_stdin_used+0x8eb>
popaw
imul   $0x726f6620,0x64(%ebp,%eiz,2),%ebp
and    %dh,0x73(%ebp)
gs
jb     805031f <_IO_stdin_used+0x8fb>
pusha
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %al,(%eax)
bound  %esp,0x64(%ecx)
and    %dh,0x73(%ebp)
gs
jb     8050335 <_IO_stdin_used+0x911>
dec    %ecx
inc    %esp
and    %ah,0x25(%eax)
fs
daa
and    %ah,0x6f(%esi)
jb     8050341 <_IO_stdin_used+0x91d>
jne    8050396 <_IO_stdin_used+0x972>
gs
jb     8050346 <_IO_stdin_used+0x922>
pusha
and    $0x203a2773,%eax
and    $0x45000a73,%eax
dec    %esi
push   %esi
pop    %edi
push   %ebx
push   %ebp
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %al,0x4e(%ebp)
push   %esi
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %dl,0x41(%eax)
push   %esp
dec    %eax
cmp    $0x6e69622f,%eax
cmp    (%edi),%ch
jne    80503c4 <_IO_stdin_used+0x9a0>
jb     8050382 <_IO_stdin_used+0x95e>
bound  %ebp,0x6e(%ecx)
add    %al,0x46(%ebp,%eax,2)
inc    %ecx
push   %ebp
dec    %esp
push   %esp
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80503dc <_IO_stdin_used+0x9b8>
and    %ah,0x64(%ebx)
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %cl,0x47(%edi,%ecx,2)
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %al,(%eax)
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x6962732f,%eax
outsb  %ds:(%esi),(%dx)
cmp    (%edi),%ch
bound  %ebp,0x6e(%ecx)
cmp    (%edi),%ch
jne    805040e <_IO_stdin_used+0x9ea>
jb     80503cc <_IO_stdin_used+0x9a8>
jae    8050401 <_IO_stdin_used+0x9dd>
imul   $0x7273752f,0x3a(%esi),%ebp
das
bound  %ebp,0x6e(%ecx)
add    %al,(%eax)
jne    805041c <_IO_stdin_used+0x9f8>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8050424 <_IO_stdin_used+0xa00>
and    %ah,0x64(%ebx)
and    %dh,0x20(%edi,%ebp,2)
pusha
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     80503e5 <_IO_stdin_used+0x9c1>
jne    805043a <_IO_stdin_used+0xa16>
gs
jb     80503ea <_IO_stdin_used+0x9c6>
pusha
and    $0xa2773,%eax
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8050409 <_IO_stdin_used+0x9e5>
and    %ch,0x67(%edi,%ebp,2)
imul   $0x206e6920,0x67(%bp),%ebp
ja     8050454 <_IO_stdin_used+0xa30>
je     8050455 <_IO_stdin_used+0xa31>
and    %cl,0x4f(%eax)
dec    %ebp
inc    %ebp
cmp    $0x252d002f,%eax
jae    80503f9 <_IO_stdin_used+0x9d5>
sub    $0x69622f00,%eax
outsb  %ds:(%esi),(%dx)
das
bound  %esp,0x73(%ecx)
push   $0x6e614300
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805042c <_IO_stdin_used+0xa08>
gs
js     8050474 <_IO_stdin_used+0xa50>
arpl   %si,0x74(%ebp)
and    %ah,%gs:0x6e490073
jbe    805047c <_IO_stdin_used+0xa58>
insb   (%dx),%es:(%edi)
imul   $0x20746f6f,0x72(%eax,%eiz,1),%esp
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805044e <_IO_stdin_used+0xa2a>
daa
and    $0xa2773,%eax
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     8050461 <_IO_stdin_used+0xa3d>
pusha
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     805046a <_IO_stdin_used+0xa46>
jne    80504bf <_IO_stdin_used+0xa9b>
gs
jb     805046f <_IO_stdin_used+0xa4b>
pusha
and    $0xa2773,%eax
add    %al,(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     805047e <_IO_stdin_used+0xa5a>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x6f(%bp,%si)
outsl  %ds:(%esi),(%dx)
je     805048a <_IO_stdin_used+0xa66>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8050494 <_IO_stdin_used+0xa70>
je     80504e5 <_IO_stdin_used+0xac1>
and    %ah,(%edi)
and    $0xa2773,%eax
add    %al,(%eax)
add    %ch,0x6f(%esi)
and    %dh,0x75(%ebx)
bound  %esi,0x79(%ebx)
jae    80504fe <_IO_stdin_used+0xada>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     80504b2 <_IO_stdin_used+0xa8e>
pusha
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     80504bb <_IO_stdin_used+0xa97>
jne    8050510 <_IO_stdin_used+0xaec>
gs
jb     80504c0 <_IO_stdin_used+0xa9c>
pusha
and    $0xa2773,%eax
push   %esp
push   %esp
pop    %ecx
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,0x33323031
jae    80504da <_IO_stdin_used+0xab6>
and    $0x33323031,%eax
jae    80504c1 <_IO_stdin_used+0xa9d>
das
fs
gs
jbe    80504f5 <_IO_stdin_used+0xad1>
and    $0x74750073,%eax
insl   (%dx),%es:(%edi)
jo     80504fc <_IO_stdin_used+0xad8>
arpl   %ax,(%eax)
sub    %ch,(%eax)
jbe    8050543 <_IO_stdin_used+0xb1f>
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
and    %edi,0x6d616e20
add    %ch,%gs:(%eax)
sub    %dh,0x6f(%esi)
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
and    %edi,0x6e696c20
add    %ch,%gs:(%edi)
fs
gs
jbe    805052c <_IO_stdin_used+0xb08>
add    %ch,(%eax)
sub    %dh,0x6f(%esi)
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
and    %edi,0x747520
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8050588 <_IO_stdin_used+0xb64>
and    %ah,0x74(%ebp,%eiz,2)
gs
jb     805058d <_IO_stdin_used+0xb69>
imul   $0x756f7920,0x65(%esi),%ebp
jb     8050549 <_IO_stdin_used+0xb25>
je     805059f <_IO_stdin_used+0xb7b>
jns    805054d <_IO_stdin_used+0xb29>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs add %dh,%cs:%gs:0x65(%ebx)
je     80505ac <_IO_stdin_used+0xb88>
je     80505a6 <_IO_stdin_used+0xb82>
jo     805053b <_IO_stdin_used+0xb17>
jo     80505af <_IO_stdin_used+0xb8b>
gs
jo     80505a1 <_IO_stdin_used+0xb7d>
jb     80505a7 <_IO_stdin_used+0xb83>
pop    %edi
jne    80505b9 <_IO_stdin_used+0xb95>
insl   (%dx),%es:(%edi)
jo     8050548 <_IO_stdin_used+0xb24>
and    $0x6f203a73,%eax
jne    80505c3 <_IO_stdin_used+0xb9f>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80505d2 <_IO_stdin_used+0xbae>
or     (%eax),%al
js     80505c4 <_IO_stdin_used+0xba0>
gs
je     80505d0 <_IO_stdin_used+0xbac>
ja     80505d0 <_IO_stdin_used+0xbac>
popa
insl   (%dx),%es:(%edi)
add    %bh,0x67(%eax)
gs
je     80505d1 <_IO_stdin_used+0xbad>
jb     80505da <_IO_stdin_used+0xbb6>
popa
insl   (%dx),%es:(%edi)
add    %bh,0x67(%eax)
gs
je     80505db <_IO_stdin_used+0xbb7>
jb     80505dd <_IO_stdin_used+0xbb9>
imul   $0x73250000,0x0(%eax,%eax,1),%esp
cmp    (%eax),%ah
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8050612 <_IO_stdin_used+0xbee>
cmp    (%eax),%ah
and    $0xa73,%eax
arpl   %bp,0x6e(%edi)
imul   $0x6172,0x75(%edi),%sp
je     8050614 <_IO_stdin_used+0xbf0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     8050621 <_IO_stdin_used+0xbfd>
jb     80505d4 <_IO_stdin_used+0xbb0>
sub    $0x6b6e7520,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     805062b <_IO_stdin_used+0xc07>
and    %ch,0x74(%ecx)
gs
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x28202773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8050636 <_IO_stdin_used+0xc12>
data16
jns    80505f0 <_IO_stdin_used+0xbcc>
popa
fs
insl   (%dx),%es:(%edi)
imul   $0x61727473,0x69(%esi),%ebp
je     805064b <_IO_stdin_used+0xc27>
jb     8050607 <_IO_stdin_used+0xbe3>
or     (%eax),%al
jne    8050650 <_IO_stdin_used+0xc2c>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     805065c <_IO_stdin_used+0xc38>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%ecx)
gs
insl   (%dx),%es:(%edi)
and    %ah,0x25(%eax)
jae    8050626 <_IO_stdin_used+0xc02>
add    %al,0x6f(%ebx)
jne    8050670 <_IO_stdin_used+0xc4c>
and    %ch,%fs:0x6f(%esi)
je     805062a <_IO_stdin_used+0xc06>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     805063d <_IO_stdin_used+0xc19>
arpl   %bp,0x6e(%edi)
imul   $0x6e69,0x20(%edi),%sp
outsw  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,0x6f(%ebx)
jne    805069c <_IO_stdin_used+0xc78>
and    %ch,%fs:0x6f(%esi)
je     8050656 <_IO_stdin_used+0xc32>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     8050669 <_IO_stdin_used+0xc45>
arpl   %bp,0x6e(%edi)
imul   $0x6e69,0x20(%edi),%sp
outsw  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805067f <_IO_stdin_used+0xc5b>
outsl  %ds:(%esi),(%dx)
jo     80506c7 <_IO_stdin_used+0xca3>
outsb  %ds:(%esi),(%dx)
and    %ch,0x67(%edi,%ebp,2)
imul   $0x69666564,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x2520736e,0x6f(%ecx,%ebp,2),%esi
jae    8050699 <_IO_stdin_used+0xc75>
pop    %ebx
and    $0x5d73,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80506a7 <_IO_stdin_used+0xc83>
jb     80506ee <_IO_stdin_used+0xcca>
popa
and    %ch,%fs:0x67(%edi,%ebp,2)
imul   $0x69666564,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x2520736e,0x6f(%ecx,%ebp,2),%esi
jae    80506c1 <_IO_stdin_used+0xc9d>
pop    %ebx
and    $0x5d73,%eax
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     805071c <_IO_stdin_used+0xcf8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     8050729 <_IO_stdin_used+0xd05>
jb     80506dc <_IO_stdin_used+0xcb8>
sub    $0x6e616320,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80506e5 <_IO_stdin_used+0xcc1>
jo     8050728 <_IO_stdin_used+0xd04>
jb     805073c <_IO_stdin_used+0xd18>
and    %ah,%gs:0x61762073
insb   (%dx),%es:(%edi)
jne    8050738 <_IO_stdin_used+0xd14>
cmp    (%eax),%ah
daa
and    $0x2773,%eax
add    %bh,0x65(%ecx)
jae    80506e0 <_IO_stdin_used+0xcbc>
inc    %ebx
dec    %eax
inc    %esi
dec    %esi
pop    %edi
push   %edx
inc    %ebp
push   %ebx
push   %esp
push   %edx
dec    %ecx
inc    %ebx
push   %esp
add    %al,0x4f(%ebx)
dec    %esi
push   %ebx
dec    %edi
dec    %esp
inc    %ebp
pop    %edi
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
push   %ebx
add    %al,0x4f(%ebx)
dec    %esi
push   %ebx
dec    %edi
dec    %esp
inc    %ebp
add    %al,0x52(%ebx)
inc    %ebp
inc    %ecx
push   %esp
inc    %ebp
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %al,0x4e(%ebp)
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
pop    %edi
dec    %ebp
inc    %ebp
push   %esp
dec    %eax
dec    %edi
inc    %esp
add    %cl,0x41(%ebp)
dec    %ecx
dec    %esp
pop    %edi
inc    %esp
dec    %ecx
push   %edx
add    %cl,0x41(%ebp)
dec    %ecx
dec    %esp
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x41(%ebp)
pop    %eax
pop    %edi
dec    %ebp
inc    %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
push   %ebx
pop    %edi
push   %eax
inc    %ebp
push   %edx
pop    %edi
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %cl,0x44(%ebp)
xor    $0x5952435f,%eax
push   %eax
push   %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %dl,0x41(%eax)
push   %ebx
push   %ebx
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
inc    %esp
inc    %ecx
pop    %ecx
push   %ebx
add    %dl,0x41(%eax)
push   %ebx
push   %ebx
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
pop    %edi
inc    %esp
inc    %ecx
pop    %ecx
push   %ebx
add    %dl,0x41(%eax)
push   %ebx
push   %ebx
pop    %edi
push   %edi
inc    %ecx
push   %edx
dec    %esi
pop    %edi
inc    %ecx
inc    %edi
inc    %ebp
add    %dl,0x48(%ebx)
inc    %ecx
pop    %edi
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
push   %edx
dec    %edi
push   %ebp
dec    %esi
inc    %esp
push   %ebx
add    %dl,0x48(%ebx)
inc    %ecx
pop    %edi
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
pop    %edi
push   %edx
dec    %edi
push   %ebp
dec    %esi
inc    %esp
push   %ebx
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
inc    %ebx
dec    %edi
push   %ebp
dec    %esi
push   %esp
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
inc    %ebx
dec    %edi
push   %ebp
dec    %esi
push   %esp
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x55(%ebx)
dec    %esp
dec    %edi
inc    %edi
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %dl,0x55(%ebx)
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x4d(%ebp)
inc    %ecx
push   %ebx
dec    %ebx
add    %dl,0x53(%ebp)
inc    %ebp
push   %edx
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
inc    %ebx
dec    %ebp
inc    %esp
add    %dl,0x53(%ebp)
inc    %ebp
push   %edx
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
push   %ebx
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %dl,0x59(%ebx)
push   %ebx
dec    %esp
dec    %edi
inc    %edi
pop    %edi
push   %ebx
inc    %edi
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %dl,0x59(%ebx)
push   %ebx
dec    %esp
dec    %edi
inc    %edi
pop    %edi
push   %ebx
push   %ebp
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %ch,(%edi)
gs
je     80508e2 <_IO_stdin_used+0xebe>
das
addr16 jae 80508eb <_IO_stdin_used+0xec7>
popa
outsl  %fs:(%esi),(%dx)
ja     8050888 <_IO_stdin_used+0xe64>
add    %ebx,(%ebx)
add    (%ebx),%edi
clc
add    %eax,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %cl,-0x73(%eax)
(bad)
call   *(%edx,%eax,1)
add    %al,(%eax)
pop    %eax
xchg   %eax,%esp
(bad)
(bad)
fadds  (%edx)
add    %al,(%eax)
cmp    %dh,0x238ffff(%eax)
add    %al,(%eax)
mov    %dh,0x264ffff(%eax)
add    %al,(%eax)
fdivs  0x280ffff(%eax)
add    %al,(%eax)
mov    $0x9cffffb1,%eax
add    (%eax),%al
add    %bl,-0x4d(%eax)
(bad)
decl   (%eax)
add    (%eax),%eax
add    %cl,0x28ffffb3(%eax)
add    (%eax),%eax
add    %ch,(%eax)
mov    $0xff,%ch
jmp    *0x3(%eax)
add    %al,(%eax)
dec    %eax
mov    $0xff,%ch
(bad)
js     80508e5 <_IO_stdin_used+0xec1>
add    %al,(%eax)
cwtl
mov    $0xff,%bh
(bad)
call   700508f0 <_end+0x67ffd34c>
mov    $0x42cffff,%ecx
add    %al,(%eax)
cwtl
mov    $0x46cffff,%edx
add    %al,(%eax)
or     %bh,0x4dcffff(%esi)
add    %al,(%eax)
mov    %al,%cl
(bad)
lcall  *-0x3d980000(,%eax,1)
(bad)
call   *0x0(%ebp,%eax,1)
add    %bh,-0x3c(%eax)
(bad)
inc    %eax
add    $0xc4e80000,%eax
(bad)
push   %eax
add    $0xc6680000,%eax
(bad)
pushl  (%eax)
push   %es
add    %al,(%eax)
mov    $0x5cffffc6,%eax
push   %es
add    %al,(%eax)
pop    %eax
enter  $0xffff,$0xa0
push   %es
add    %al,(%eax)
dec    %eax
lret   $0xffff
fadds  (%esi)
add    %al,(%eax)
dec    %eax
lret
(bad)
call   *(%eax)
pop    %es
add    %al,(%eax)
js     8050919 <_IO_stdin_used+0xef5>
(bad)
pushl  (%edi,%eax,1)
add    %al,(%eax)
clc
int    $0xff
incl   -0x67fffff9(%eax)
iret
(bad)
inc    %eax
pop    %es
add    %al,(%eax)
js     8050937 <_IO_stdin_used+0xf13>
(bad)
(bad)
in     (%dx),%al
pop    %es
add    %al,(%eax)
clc
sar    %cl,%bh
ljmp   *(%eax,%ecx,1)
add    %al,(%eax)
fcom   %st(4)
(bad)
jmp    *0x0(%eax,%ecx,1)
add    %ch,(%eax)
fdivr  %st(7),%st
jmp    *-0x27880000(%eax,%ecx,1)
(bad)
dec    %eax
or     %al,(%eax)
add    %ch,0x20ffffd9(%eax)
or     %eax,(%eax)
add    %bl,%al
(bad)
(bad)
js     80509a3 <_IO_stdin_used+0xf7f>
add    %al,(%eax)
or     %bl,%ah
(bad)
call   *%eax
or     %eax,(%eax)
add    %cl,-0x3000024(%eax)
or     %eax,(%eax)
add    %bh,0x1cffffdc(%eax)
or     (%eax),%al
add    %bl,%al
(bad)
jmp    *0x0(%edx,%ecx,1)
add    %cl,(%eax)
(bad)
call   *-0x1dd80000(%edx,%ecx,1)
(bad)
(bad)
fmuls  (%edx)
add    %al,(%eax)
push   $0xf4ffffe2
or     (%eax),%al
add    %cl,%al
loop   80509d6 <_IO_stdin_used+0xfb2>
call   *(%ebx,%ecx,1)
add    %al,(%eax)
mov    %ah,%bl
(bad)
decl   0x0(%ebx,%ecx,1)
add    %cl,-0x1c(%eax)
(bad)
call   *-0x1af80000(%ebx,%ecx,1)
(bad)
dec    %esp
or     (%eax),%eax
add    %cl,%al
in     $0xff,%eax
incl   (%esp,%ecx,1)
add    %al,(%eax)
sub    %ah,%dh
(bad)
pushl  (%eax)
or     $0x0,%al
add    %cl,0x68ffffe6(%eax)
or     $0x0,%al
add    %bl,%al
out    %eax,$0xff
inc    %eax
or     $0x0,%al
add    %ch,-0x18(%eax)
(bad)
(bad)
in     (%dx),%al
or     $0x0,%al
add    %bh,(%eax)
jmp    15320a21 <_end+0xd2cd47d>
add    %al,(%eax)
js     8050a0f <_IO_stdin_used+0xfeb>
(bad)
decl   0x0(%ebp,%ecx,1)
add    %bh,0x64ffffe9(%eax)
or     $0xeb480000,%eax
(bad)
(bad)
mov    $0xa800000d,%esp
in     (%dx),%al
(bad)
incl   (%esi,%ecx,1)
add    %al,(%eax)
fsubr  %st(4),%st
(bad)
jmp    *(%esi,%ecx,1)
add    %al,(%eax)
sbb    %ch,%ch
(bad)
call   *0xe(%eax)
add    %al,(%eax)
call   99050a47 <_end+0x90ffd4a3>
push   %cs
add    %al,(%eax)
mov    $0xc8ffffef,%eax
push   %cs
add    %al,(%eax)
sub    %dh,%al
(bad)
push   %esp
push   %cs
add    %al,(%eax)
test   $0xf0,%al
(bad)
pushl  (%edi,%ecx,1)
add    %al,(%eax)
clc
lock (bad)
ljmp   *0x0(%edi,%ecx,1)
add    %ch,-0xf(%eax)
(bad)
.byte 0xff
test   $0xf,%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8050a9b <_IO_stdin_used+0x1077>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x8b,%al
(bad)
call   *(%eax)
pop    %es
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8050abb <_IO_stdin_used+0x1097>
js     8050ab9 <_IO_stdin_used+0x1095>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,%al
lods   %ds:(%esi),%eax
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x48,%al
or     0xe(%eax),%ebx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %bl,(%esi,%ebp,4)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x50000000(%eax)
scas   %es:(%edi),%al
(bad)
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,-0x50ec0000(%eax,%eax,1)
(bad)
call   *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %esi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
loopne 8050b66 <_IO_stdin_used+0x1142>
add    %al,(%eax)
js     8050afb <_IO_stdin_used+0x10d7>
(bad)
jmp    *%edi
sbb    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4702(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa109e03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
adc    %al,(%ecx)
add    %al,(%eax)
dec    %eax
mov    $0xff,%al
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %bl,-0x50(%eax)
(bad)
call   *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    (%ecx,%eax,1),%edi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
push   $0xc0000001
mov    $0xff,%cl
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,-0x37ffffff(%eax)
mov    $0xff,%cl
incl   0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1a,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%al
add    %eax,(%eax)
add    %ch,-0x3d00004d(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
and    %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x2,%al
add    %al,(%eax)
xor    $0xb5,%al
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff5,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dh,0x0(%edx,%eax,1)
add    %ah,(%esi,%esi,4)
(bad)
jmp    *0x3(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6f400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
xchg   %eax,%ebx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
lods   %ds:(%esi),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     $0x2,%al
add    %al,(%eax)
and    $0xb9,%al
(bad)
(bad)
jp     8050d75 <_IO_stdin_used+0x1351>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
and    $0x3,%al
add    %al,(%eax)
fs
mov    $0xd6ffff,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3ff1b9fc(%ebx)
add    0xa(%esi),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
pop    %esp
add    (%eax),%eax
add    %cl,0x201ffff(,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x71400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    $0x41140e0a,%edi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
xchg   %eax,%ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
enter  $0x3,$0x0
mov    $0xbe,%al
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
clc
add    (%eax),%eax
add    %dh,%al
mov    $0x179ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x40d00e46
test   $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,(%eax)
add    $0x0,%al
add    %dh,(%eax)
sar    $0xff,%bh
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %dh,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
fs
add    $0x0,%al
add    %dl,-0x1(%eax,%eax,8)
lcall  *0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
pop    %ebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
test   $0x4,%al
add    %al,(%eax)
mov    $0xc1,%al
(bad)
jmp    *%ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jae    8050f57 <_IO_stdin_used+0x1533>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
loopne 8050f6a <_IO_stdin_used+0x1546>
add    %al,(%eax)
push   $0xffffc3
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
push   %esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sbb    %al,0xc4300000
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %bh,-0x3bc40000(,%eax,1)
(bad)
(bad)
jnp    8050fcc <_IO_stdin_used+0x15a8>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
ret    $0xe0a
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    (%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    %al,0xc6700000
(bad)
lcall  *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
in     $0xa,%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %cl,%al
add    $0xc7d00000,%eax
(bad)
(bad)
fldl   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
hlt
add    $0xc9840000,%eax
(bad)
(bad)
jl     8051083 <_IO_stdin_used+0x165f>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x50c00e46
dec    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
xor    $0x6,%al
add    %al,(%eax)
(bad)
lret   $0xffff
xlat   %ds:(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1b9fc(%ebx)
add    (%ebx),%al
sbb    (%ecx),%al
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %es
add    %al,(%eax)
insb   (%dx),%es:(%edi)
int3
(bad)
incl   0x3(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb1,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ch,-0x30840000(%esi,%eax,1)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,%al
push   %es
add    %al,(%eax)
test   $0xcf,%al
(bad)
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%eax)
pop    %es
add    %al,(%eax)
adc    $0xff,%al
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,0x58000007(%eax)
sar    %edi
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fadds  (%edi)
add    %al,(%eax)
xor    %dl,%dl
(bad)
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
add    $0x8,%al
add    %al,(%eax)
test   %dl,%dl
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ah,(%eax,%ecx,1)
add    %al,(%eax)
xchg   %eax,%esp
sar    %cl,%bh
jmp    *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%esp
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     %al,(%eax)
add    %ch,-0x1(%ebx,%edx,8)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,-0x2b940000(%eax,%ecx,1)
(bad)
lcall  *(%ebx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
sahf
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
loopne 805136e <_IO_stdin_used+0x194a>
add    %al,(%eax)
dec    %eax
xlat   %ds:(%ebx)
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cld
or     %al,(%eax)
add    %ch,-0x1(%edi,%edx,8)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%ebx
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
sbb    $0x9,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
xlat   %ds:(%ebx)
(bad)
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
jle    80513c1 <_IO_stdin_used+0x199d>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x0(%ecx,%ecx,1)
add    %dh,(%eax,%ebx,8)
(bad)
pushl  0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
pushf
or     %eax,(%eax)
add    %ch,0xb7ffff(%eax,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
jle    8051441 <_IO_stdin_used+0x1a1d>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
aam    $0x9
add    %al,(%eax)
xor    $0xd9,%al
(bad)
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
jle    8051479 <_IO_stdin_used+0x1a55>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
or     $0xa,%al
add    %al,(%eax)
mov    $0x56ffffd9,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %esp
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cmp    %cl,(%edx)
add    %al,(%eax)
lock fcos
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dh,0xa(%eax)
add    %al,(%eax)
sbb    %bl,%dl
(bad)
decl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x18,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%al
or     (%eax),%al
add    %dl,(%eax)
(bad)
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
ja     8051577 <_IO_stdin_used+0x1b53>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
hlt
or     (%eax),%al
add    %dh,-0x1(%ebx,%ebx,8)
inc    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb1,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
xor    $0xb,%al
add    %al,(%eax)
add    $0xdc,%al
(bad)
pushl  0x0
inc    %ebx
push   %cs
and    %dl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0x4(%esi,%ecx,1),%ebx
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
or     (%eax),%eax
add    %ah,(%esp,%ebx,8)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
dec    %esp
push   %cs
and    %dl,0xe(%ebp)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,0x0(%ebx,%ecx,1)
add    %cl,-0x1(%esp,%ebx,8)
decl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x17,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %al,%ah
or     (%eax),%eax
add    %al,0x156ffff(%ebp,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %cl,%bh
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
or     $0xc,%al
add    %al,(%eax)
pushf
fdivrp %st,%st(7)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%ebp),%edx
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    $0xc,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
fdivrp %st,%st(7)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %eax
or     $0x0,%al
add    %al,%al
fdivrp %st,%st(7)
inc    %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9a,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
cwtl
or     $0x0,%al
add    %dl,-0x20(%eax)
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
orl    $0xc3430c0e,(%edx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,%al
or     $0x0,%al
add    %ch,%al
loopne 805175a <_IO_stdin_used+0x1d36>
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
fs
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cld
or     $0x0,%al
add    %ch,(%ecx,%eiz,8)
(bad)
pushl  0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
cmp    $0xd,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
loope  80517c6 <_IO_stdin_used+0x1da2>
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
je     8051807 <_IO_stdin_used+0x1de3>
add    %al,(%eax)
test   %ah,%cl
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,-0x47fffff3(%eax)
loope  805183a <_IO_stdin_used+0x1e16>
incl   (%edx)
nop
.byte 0xb8
add    $0x8,%al
jo     8052eb6 <_IO_stdin_used+0x3492>
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     (%ecx),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
and    $0xc000001,%eax
add    %al,(%eax)
add    %ch,0xd080495(%eax)
add    %al,(%eax)
add    %dh,%ah
stc
add    $0x8,%al
sbb    %eax,(%eax)
add    %al,(%eax)
clc
cs
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
cld
cs
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
rorb   0x60804(%edx)
add    %al,(%eax)
pusha
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
push   %edx
add    $0xb0000,%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,0x208
add    %al,0x14000003(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %ch,(%eax)
xchg   %eax,%edx
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
add    %dl,0x120804(%edx)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x30(%edi)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x22(%edi)
nop
add    $0x8,%al
add    %al,(%eax)
add    $0x2f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%dh
xchg   %eax,%ebp
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    8052fc8 <_IO_stdin_used+0x35a4>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    8053009 <_IO_stdin_used+0x35e5>
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    805304a <_IO_stdin_used+0x3626>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
negb   -0x66f9f7fc(%eax)
add    $0x8,%al
push   %ss
cltd
add    $0x8,%al
es
cltd
add    $0x8,%al
ss
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
push   %esi
cltd
add    $0x8,%al
cwtd
add    $0x8,%al
jbe    805308b <_IO_stdin_used+0x3667>
add    $0x8,%al
xchg   %bl,-0x6669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    80530cc <_IO_stdin_used+0x36a8>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    805310d <_IO_stdin_used+0x36e9>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    805314e <_IO_stdin_used+0x372a>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
add    (%eax),%al
add    %al,(%eax)
cli
sti
add    $0x8,%al
push   %eax
cwtl
add    $0x8,%al
inc    %eax
add    %al,0x5004608
or     %dl,0x0(%eax)
add    $0x8,%eax
add    %dl,0x5(%eax,%eax,1)
or     %bl,0x0(%ebx)
add    $0x5006008,%eax
or     %ah,0x0(%ebp)
add    $0x5006b08,%eax
or     %dh,0x0(%eax)
add    $0x5007a08,%eax
or     %bh,0x0(%esi)
add    $0x5008708,%eax
or     %cl,-0x7ef7fb00(%ebp)
add    %al,0x5009608
or     %bl,0x80500(%ebp)
add    %al,(%eax)
add    %ch,(%edi)
bound  %ebp,0x6e(%ecx)
das
bound  %esp,0x73(%ecx)
push   $0x2f00
add    %al,(%eax)
add    %ch,(%edi)
gs
je     80532e7 <_IO_stdin_used+0x38c3>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x73666564,0x2e(%bp),%ebp
add    %ah,%al
push   %es
add    $0x8,%eax
add    %ch,%dh
push   %es
add    $0x8,%eax
add    %bh,%ch
push   %es
add    $0x8,%eax
add    %al,0x80507
add    %al,(%eax)
add    %dl,0x3(%edi)
add    $0x8,%eax
add    %dl,(%ecx)
pop    %es
add    $0x8,%eax
add    %bh,(%ebx)
add    0x8,%eax
add    %dh,(%eax)
add    0x8,%eax
add    %dh,%bh
cli
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
test   %edi,%ebx
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
ja     80532ee <_IO_stdin_used+0x38ca>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
mov    %al,0x804fb
add    %al,(%eax)
add    %bh,0x80507(%esi)
add    %al,(%eax)
add    %cl,%dl
pop    %es
add    $0x8,%eax
add    %al,(%edi)
add    0x8,%al
add    %al,(%ecx)
sti
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
push   %eax
sti
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %edx
sti
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
push   %edi
cld
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
xor    %bh,%dl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%edi)
add    $0x8,%eax
add    %ch,(%ecx)
pop    %es
add    $0x8,%eax
add    %dh,(%ebx)
pop    %es
add    $0x8,%eax
add    %cl,0x7(%ecx)
add    $0x8,%eax
add    %bl,0x7(%eax)
add    $0x8,%eax
add    %ah,0x7(%esi)
add    $0x8,%eax
add    %dh,0x5(%edi,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x80507(%edx)
add    %al,(%eax)
add    %dl,0x80507(%edi)
add    %al,(%eax)
add    %ch,0x805(%edi,%eax,1)
add    %al,(%eax)
mov    $0x80507,%edx
add    %al,(%eax)
add    %al,%dh
pop    %es
add    $0x8,%eax
add    %dl,%dl
pop    %es
add    $0x8,%eax
add    %ah,%al
pop    %es
add    $0x8,%eax
add    %ch,%ah
pop    %es
add    $0x8,%eax
add    %bh,%al
pop    %es
add    $0x8,%eax
add    %al,(%ebx)
or     %al,0x8
add    %cl,(%ebx)
or     %al,0x8
add    %dl,(%edi)
or     %al,0x8
add    %ah,(%ebx)
or     %al,0x8
add    %ch,(%edi)
or     %al,0x8
add    %cl,0x4(%edi,%edi,8)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x1(%ebp)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%ah
pop    %es
add    $0x8,%eax
add    %dh,%al
pop    %es
add    $0x8,%eax
add    %bh,(%ebx)
or     %al,0x8
add    %al,0x8(%ecx)
add    $0x8,%eax
add    %cl,0x8(%ebp)
add    $0x8,%eax
add    %bl,0x8(%ebp)
add    $0x8,%eax
add    %ch,0x5(%eax,%ecx,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0xd3630000,0x0(%bp),%ebp
.byte 0x8b
.byte 0x76
