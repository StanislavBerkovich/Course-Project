das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %ch,%bh
or     $0xf5143a78,%eax
insb   (%dx),%es:(%edi)
stos   %eax,%es:(%edi)
mov    $0xcfb2183f,%esp
xchg   %eax,%ebx
cmp    %esi,%esi
xchg   %eax,%ecx
.byte 0xb8
push   $0xffffffdc
add    (%eax),%eax
add    %al,(%eax)
aaa
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x80000000
sub    (%edx),%eax
and    (%edi),%dh
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%ecx)
sbb    $0xf2381c8c,%eax
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  8048198 <pathconf@plt-0x928>
addr16 push %ebp
popa
.byte 0x10
xor    (%eax),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x1
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
call   8048491 <pathconf@plt-0x62f>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
je     80484bf <pathconf@plt-0x601>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loopne 80484de <pathconf@plt-0x5e2>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int    $0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x1,%al
add    %al,(%eax)
mov    0x4080531,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bh,0x0(%ecx,%eax,1)
add    %al,0x4080531(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,(%ebx)
add    %al,(%eax)
add    %al,0x40804(%eax,%edi,8)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
mov    $0x0,%bl
add    %al,(%eax)
test   %dh,(%ecx)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    8048603 <pathconf@plt-0x4bd>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048611 <pathconf@plt-0x4af>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    804861e <pathconf@plt-0x4a2>
push   $0x705f5f00
jb     804861b <pathconf@plt-0x4a5>
outsb  %ds:(%esi),(%dx)
je     804861b <pathconf@plt-0x4a5>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x78(%ebp)
imul   $0x63687461,0x70(%eax,%eax,1),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
add    %bl,0x49(%edi)
dec    %edi
pop    %edi
jo     8048643 <pathconf@plt-0x47d>
je     8048633 <pathconf@plt-0x48d>
add    %dh,0x65(%ebx)
je     8048641 <pathconf@plt-0x47f>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x6f(%esi)
jo     8048644 <pathconf@plt-0x47c>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     8048653 <pathconf@plt-0x46d>
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
addr16 push $0x6d
jo     8048652 <pathconf@plt-0x46e>
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%edx)
addr16
gs
js     8048662 <pathconf@plt-0x45e>
arpl   %ax,(%eax)
data16
je     8048667 <pathconf@plt-0x459>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048677 <pathconf@plt-0x449>
arpl   %si,0x79(%eax)
add    %dh,0x75(%eax)
je     8048684 <pathconf@plt-0x43c>
add    %dh,0x69(%ebx)
addr16 jo 8048689 <pathconf@plt-0x437>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    8048688 <pathconf@plt-0x438>
add    %dh,0x65(%edx)
addr16
data16
jb     8048689 <pathconf@plt-0x437>
add    %bl,%gs:0x5f(%edi)
jae    804869e <pathconf@plt-0x422>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6c6c6165,0x72(%eax,%eax,1),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80486b5 <pathconf@plt-0x40b>
imul   $0x636d656d,%fs:0x0(%esi),%ebp
push   $0x6f700072
jo     80486b5 <pathconf@plt-0x40b>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     80486ca <pathconf@plt-0x3f6>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     80486d2 <pathconf@plt-0x3ee>
jns    8048660 <pathconf@plt-0x460>
outsw  %gs:(%esi),(%dx)
data16
add    %dh,0x74(%ebx)
jb     80486d5 <pathconf@plt-0x3eb>
outsb  %gs:(%esi),(%dx)
add    %dh,0x70(%ebp,%ebp,2)
imul   $0x6973,0x0(%ebp,%eiz,2),%bp
addr16
gs
insl   (%dx),%es:(%edi)
jo     80486ef <pathconf@plt-0x3d1>
jns    80486f0 <pathconf@plt-0x3d0>
gs
je     8048680 <pathconf@plt-0x440>
pop    %edi
pop    %edi
gs
jb     80486f7 <pathconf@plt-0x3c9>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65736600,0x6e(%edi),%ebp
imul   $0x63,%gs:(%eax),%eax
insb   (%dx),%es:(%edi)
gs
popa
jb     8048702 <pathconf@plt-0x3be>
jb     8048711 <pathconf@plt-0x3af>
add    %bl,0x73(%edi)
gs
je     804870f <pathconf@plt-0x3b1>
insl   (%dx),%es:(%edi)
jo     80486a8 <pathconf@plt-0x418>
pop    %edi
pop    %edi
data16
jo     804871f <pathconf@plt-0x3a1>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
imul   $0x65736464,0x61(%edi),%esp
je     80486c0 <pathconf@plt-0x400>
jae    8048736 <pathconf@plt-0x38a>
outsl  %fs:(%esi),(%dx)
jne    804873a <pathconf@plt-0x386>
add    %ah,0x70(%esi)
jne    804873f <pathconf@plt-0x381>
arpl   %ax,(%eax)
jb     8048734 <pathconf@plt-0x38c>
addr16
gs
jb     8048745 <pathconf@plt-0x37b>
outsl  %ds:(%esi),(%dx)
jb     80486d6 <pathconf@plt-0x3ea>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048748 <pathconf@plt-0x378>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048762 <pathconf@plt-0x35e>
outsb  %ds:(%esi),(%dx)
jbe    8048700 <pathconf@plt-0x3c0>
jb     8048767 <pathconf@plt-0x359>
arpl   %bp,0x6d(%bx)
jo     8048708 <pathconf@plt-0x3b8>
jae    804877e <pathconf@plt-0x342>
fs
gs
jb     8048780 <pathconf@plt-0x340>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
jae    8048790 <pathconf@plt-0x330>
jae    804878d <pathconf@plt-0x333>
gs
insl   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
data16
js     8048794 <pathconf@plt-0x32c>
je     8048784 <pathconf@plt-0x33c>
je     8048725 <pathconf@plt-0x39b>
jo     804878a <pathconf@plt-0x336>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048790 <pathconf@plt-0x330>
add    %ah,0x77(%esi)
jb     8048799 <pathconf@plt-0x327>
je     8048797 <pathconf@plt-0x329>
add    %ah,0x72(%esi)
gs
popa
add    %dh,%fs:0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     80487aa <pathconf@plt-0x316>
push   $0x65730072
je     80487c4 <pathconf@plt-0x2fc>
bound  %esi,0x66(%ebp)
add    %bl,0x49(%edi)
dec    %edi
pop    %edi
addr16
gs
je     80487bd <pathconf@plt-0x303>
add    %dh,0x74(%ebx)
jb     80487c4 <pathconf@plt-0x2fc>
jb     80487d3 <pathconf@plt-0x2ed>
outsl  %ds:(%esi),(%dx)
jb     8048764 <pathconf@plt-0x35c>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80487e4 <pathconf@plt-0x2dc>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804877d <pathconf@plt-0x343>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80487fa <pathconf@plt-0x2c6>
popa
jb     80487fd <pathconf@plt-0x2c3>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%ecx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x6000500,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,0x2000200
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%edx)
add    %eax,(%eax)
push   %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x70000,0xd(%ecx),%ebp
add    %al,(%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%ecx
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
push   %es
add    %cl,(%edx)
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,0x21500
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x221,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
sub    (%edx),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x20000,%eax
xor    $0x2,%eax
add    %al,(%eax)
cld
das
add    $0x190608,%eax
add    %al,0x5080531(%eax)
cmp    %al,(%eax)
add    %al,0x3a050805(%ecx,%esi,1)
add    %al,(%eax)
mov    0x5080531,%al
aaa
or     $0x30,%al
add    $0x10708,%eax
add    %dl,(%eax)
xor    %al,0x20708
add    %dl,(%eax,%esi,1)
add    $0x30708,%eax
add    %bl,(%eax)
xor    %al,0x40708
add    %bl,(%eax,%esi,1)
add    $0x50708,%eax
add    %ah,(%eax)
xor    %al,0x60708
add    %ah,(%eax,%esi,1)
add    $0x70708,%eax
add    %ch,(%eax)
xor    %al,0x80708
add    %ch,(%eax,%esi,1)
add    $0x90708,%eax
add    %dh,(%eax)
xor    %al,0xa0708
add    %dh,(%eax,%esi,1)
add    $0xb0708,%eax
add    %bh,(%eax)
xor    %al,0xc0708
add    %bh,(%eax,%esi,1)
add    $0xd0708,%eax
add    %al,0x30(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%esi,1)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
xor    %al,0x100708
add    %cl,0x5(%eax,%esi,1)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x30(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%esi,1)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x30(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%esi,1)
or     %al,(%edi)
adc    $0x30600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%esi,1)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080530
sbb    %al,(%eax)
add    %ch,0x5(%eax,%esi,1)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x30(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%esi,1)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x30(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%esi,1)
or     %al,(%edi)
sbb    $0x30800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%esi,1)
add    %al,(%eax)
mov    %dh,(%eax)
add    $0x200708,%eax
add    %cl,0x21070805(%eax,%esi,1)
add    %al,(%eax)
nop
xor    %al,0x220708
add    %dl,0x23070805(%eax,%esi,1)
add    %al,(%eax)
cwtl
xor    %al,0x240708
add    %bl,0x25070805(%eax,%esi,1)
add    %al,(%eax)
mov    0x7080530,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %al,0x270708
add    %ch,0x7080530(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%esi,1)
add    %al,(%eax)
mov    $0x30,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%esi,1)
add    %al,(%eax)
mov    $0x7080530,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%esi,1)
add    %al,(%eax)
(bad)
xor    %al,0x2e0708
add    %al,%ah
xor    %al,0x2f0708
add    %cl,%al
xor    %al,0x300708
add    %cl,%ah
xor    %al,0x310708
add    %dl,%al
xor    %al,0x320708
add    %dl,%ah
xor    %al,0x330708
add    %bl,%al
xor    %al,0x340708
add    %bl,%ah
xor    %al,0x350708
add    %ah,%al
xor    %al,0x360708
push   %ebx
sub    $0x8,%esp
call   8049200 <__ctype_b_loc@plt+0x3f0>
add    $0xa573,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048aa2 <pathconf@plt-0x1e>
call   8048c40 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8053004
jmp    *0x8053008
add    %al,(%eax)
jmp    *0x805300c
push   $0x0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053010
push   $0x8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053014
push   $0x10
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053018
push   $0x18
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805301c
push   $0x20
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053020
push   $0x28
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053024
push   $0x30
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053028
push   $0x38
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805302c
push   $0x40
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053030
push   $0x48
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053034
push   $0x50
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053038
push   $0x58
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805303c
push   $0x60
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053040
push   $0x68
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053044
push   $0x70
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053048
push   $0x78
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805304c
push   $0x80
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053050
push   $0x88
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053054
push   $0x90
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053058
push   $0x98
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805305c
push   $0xa0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053060
push   $0xa8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053064
push   $0xb0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053068
push   $0xb8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805306c
push   $0xc0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053070
push   $0xc8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053074
push   $0xd0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053078
push   $0xd8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805307c
push   $0xe0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053080
push   $0xe8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053084
push   $0xf0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053088
push   $0xf8
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805308c
push   $0x100
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053090
push   $0x108
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053094
push   $0x110
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x8053098
push   $0x118
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x805309c
push   $0x120
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530a0
push   $0x128
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530a4
push   $0x130
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530a8
push   $0x138
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530ac
push   $0x140
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530b0
push   $0x148
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530b4
push   $0x150
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530b8
push   $0x158
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530bc
push   $0x160
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530c0
push   $0x168
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530c4
push   $0x170
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530c8
push   $0x178
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530cc
push   $0x180
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530d0
push   $0x188
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530d4
push   $0x190
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530d8
push   $0x198
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530dc
push   $0x1a0
jmp    8048ab0 <pathconf@plt-0x10>
jmp    *0x80530e0
push   $0x1a8
jmp    8048ab0 <pathconf@plt-0x10>
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x94,%esp
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
movl   $0x0,0x80537b0
00
call   8048d60 <sigemptyset@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8048cb0 <sigaddset@plt>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   8048ae0 <sigprocmask@plt>
movl   $0xffffffff,0x4(%esp)
movl   $0x80537c0,(%esp)
call   8048d50 <__longjmp_chk@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    $0x1e,%ecx
mov    %esp,%ebp
push   %edi
push   %esi
mov    $0x80500e0,%esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xb0,%esp
mov    0xc(%ebp),%eax
lea    0x38(%esp),%edi
rep movsl %ds:(%esi),%es:(%edi)
lea    0x28(%esp),%ebx
mov    (%eax),%edx
mov    %eax,0x8(%esp)
mov    0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
mov    %ebx,(%esp)
mov    %edx,0x8053244
lea    0x38(%esp),%edx
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   804a720 <__ctype_b_loc@plt+0x1910>
test   %al,%al
je     8048f7a <__ctype_b_loc@plt+0x16a>
mov    %ebx,(%esp)
call   804ad90 <__ctype_b_loc@plt+0x1f80>
test   %eax,%eax
je     8048f04 <__ctype_b_loc@plt+0xf4>
mov    %ebx,(%esp)
call   804ad90 <__ctype_b_loc@plt+0x1f80>
mov    $0x1,%edx
call   804bc30 <__ctype_b_loc@plt+0x2e20>
mov    $0x1,%eax
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x1c(%esp)
xor    %esi,%esi
mov    %ebx,(%esp)
call   804ada0 <__ctype_b_loc@plt+0x1f90>
cmp    %eax,%esi
jge    80490a5 <__ctype_b_loc@plt+0x295>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804adb0 <__ctype_b_loc@plt+0x1fa0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%edi
call   804ade0 <__ctype_b_loc@plt+0x1fd0>
test   %edi,%edi
je     80490a5 <__ctype_b_loc@plt+0x295>
cmp    $0x6c,%edi
je     804903d <__ctype_b_loc@plt+0x22d>
jle    8048f90 <__ctype_b_loc@plt+0x180>
cmp    $0x72,%edi
xchg   %ax,%ax
je     804901f <__ctype_b_loc@plt+0x20f>
jle    8048fbd <__ctype_b_loc@plt+0x1ad>
cmp    $0x73,%edi
nop
lea    0x0(%esi,%eiz,1),%esi
je     804902e <__ctype_b_loc@plt+0x21e>
cmp    $0x76,%edi
jne    8048fa7 <__ctype_b_loc@plt+0x197>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804de90 <__ctype_b_loc@plt+0x5080>
add    $0x1,%esi
jmp    8048f0e <__ctype_b_loc@plt+0xfe>
mov    $0x804fae8,%eax
xor    %edx,%edx
call   804bc30 <__ctype_b_loc@plt+0x2e20>
mov    $0x1,%eax
jmp    8048efc <__ctype_b_loc@plt+0xec>
cmp    $0x56,%edi
je     8048fcc <__ctype_b_loc@plt+0x1bc>
cmp    $0x68,%edi
je     8049059 <__ctype_b_loc@plt+0x249>
cmp    $0x47,%edi
je     804904a <__ctype_b_loc@plt+0x23a>
mov    $0x80500a0,%eax
xor    %edx,%edx
call   804bc30 <__ctype_b_loc@plt+0x2e20>
mov    $0x3,%eax
jmp    8048efc <__ctype_b_loc@plt+0xec>
cmp    $0x70,%edi
jne    8048fa7 <__ctype_b_loc@plt+0x197>
mov    %eax,(%esp)
call   804de50 <__ctype_b_loc@plt+0x5040>
jmp    8048f75 <__ctype_b_loc@plt+0x165>
movl   $0x804fb39,0xc(%esp)
movl   $0x804fafa,0x8(%esp)
movl   $0x804fb3d,0x4(%esp)
movl   $0x1,(%esp)
call   8048d40 <__printf_chk@plt>
movl   $0x804fb44,0x8(%esp)
movl   $0x804ff80,0x4(%esp)
movl   $0x1,(%esp)
call   8048d40 <__printf_chk@plt>
movl   $0x804ffd8,(%esp)
call   8048c00 <puts@plt>
xor    %eax,%eax
jmp    8048efc <__ctype_b_loc@plt+0xec>
movl   $0x1,0x8053240
00
jmp    8048f75 <__ctype_b_loc@plt+0x165>
movl   $0x1,0x805323c
00
jmp    8048f75 <__ctype_b_loc@plt+0x165>
movl   $0x1,0x1c(%esp)
jmp    8048f75 <__ctype_b_loc@plt+0x165>
movl   $0x1,0x8053238
00
jmp    8048f75 <__ctype_b_loc@plt+0x165>
movl   $0x804fafa,0x8(%esp)
movl   $0x804fb01,0x4(%esp)
movl   $0x1,(%esp)
call   8048d40 <__printf_chk@plt>
mov    0x8053244,%eax
movl   $0x804fb1c,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048d40 <__printf_chk@plt>
movl   $0x804fbcc,(%esp)
call   8048c00 <puts@plt>
xor    %eax,%eax
jmp    8048efc <__ctype_b_loc@plt+0xec>
movl   $0x804f9e3,0x4(%esp)
movl   $0x6,(%esp)
call   8048d70 <setlocale@plt>
call   8049640 <__ctype_b_loc@plt+0x830>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
je     8048efc <__ctype_b_loc@plt+0xec>
mov    %ebx,(%esp)
call   804ada0 <__ctype_b_loc@plt+0x1f90>
cmp    %eax,%esi
jge    804913e <__ctype_b_loc@plt+0x32e>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804ade0 <__ctype_b_loc@plt+0x1fd0>
cmpb   $0x2d,(%eax)
mov    %eax,%edx
jne    8049101 <__ctype_b_loc@plt+0x2f1>
cmpb   $0x0,0x1(%eax)
jne    8049101 <__ctype_b_loc@plt+0x2f1>
movl   $0x1,0x805323c
00
add    $0x1,%esi
jmp    80490cd <__ctype_b_loc@plt+0x2bd>
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   804bdc0 <__ctype_b_loc@plt+0x2fb0>
mov    0x18(%esp),%edx
test   %eax,%eax
je     8049157 <__ctype_b_loc@plt+0x347>
mov    %edx,(%esp)
movl   $0x0,0x4(%esp)
call   804b5e0 <__ctype_b_loc@plt+0x27d0>
mov    0x18(%esp),%edx
test   %eax,%eax
js     80491b1 <__ctype_b_loc@plt+0x3a1>
cmpb   $0x21,(%edx)
je     804913e <__ctype_b_loc@plt+0x32e>
mov    %edx,(%esp)
call   804dde0 <__ctype_b_loc@plt+0x4fd0>
mov    %ebx,(%esp)
call   804ad50 <__ctype_b_loc@plt+0x1f40>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804df00 <__ctype_b_loc@plt+0x50f0>
jmp    8048efc <__ctype_b_loc@plt+0xec>
mov    0x8053180,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80502b0,(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x18(%esp)
call   8048ba0 <fwrite@plt>
mov    0x18(%esp),%edx
cmpb   $0x0,(%edx)
jne    80491a3 <__ctype_b_loc@plt+0x393>
movl   $0x0,(%esp)
call   804bd70 <__ctype_b_loc@plt+0x2f60>
test   %eax,%eax
je     804913e <__ctype_b_loc@plt+0x32e>
mov    $0x2,%eax
jmp    8048efc <__ctype_b_loc@plt+0xec>
movl   $0x804fb49,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
jmp    8049189 <__ctype_b_loc@plt+0x379>
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
call   804bd70 <__ctype_b_loc@plt+0x2f60>
mov    0x18(%esp),%edx
test   %eax,%eax
jne    8049199 <__ctype_b_loc@plt+0x389>
jmp    8049131 <__ctype_b_loc@plt+0x321>
xchg   %ax,%ax
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804f860
push   $0x804f7f0
push   %ecx
push   %esi
push   $0x8048e80
call   8048ca0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x805317b,%eax
sub    $0x8053178,%eax
cmp    $0x6,%eax
ja     8049220 <__ctype_b_loc@plt+0x410>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804921f <__ctype_b_loc@plt+0x40f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8053178,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8053178,%eax
sub    $0x8053178,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049259 <__ctype_b_loc@plt+0x449>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049258 <__ctype_b_loc@plt+0x448>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8053178,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80531a4
jne    804929c <__ctype_b_loc@plt+0x48c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049210 <__ctype_b_loc@plt+0x400>
movb   $0x1,0x80531a4
leave
repz ret
xchg   %ax,%ax
mov    0x8052f10,%eax
test   %eax,%eax
je     80492c8 <__ctype_b_loc@plt+0x4b8>
mov    $0x0,%eax
test   %eax,%eax
je     80492c8 <__ctype_b_loc@plt+0x4b8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8052f10,(%esp)
call   *%eax
leave
jmp    8049240 <__ctype_b_loc@plt+0x430>
nop
jmp    8049240 <__ctype_b_loc@plt+0x430>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80531cc,%esi
call   804f420 <__ctype_b_loc@plt+0x6610>
cmp    $0x80531cc,%esi
jne    80492f2 <__ctype_b_loc@plt+0x4e2>
jmp    804930c <__ctype_b_loc@plt+0x4fc>
lea    0x0(%esi),%esi
mov    %ebx,%esi
mov    (%esi),%ebx
mov    0x4(%esi),%eax
mov    %ebx,(%eax)
mov    %eax,0x4(%ebx)
mov    %esi,(%esp)
call   8048b00 <free@plt>
cmp    $0x80531cc,%ebx
jne    80492f0 <__ctype_b_loc@plt+0x4e0>
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    804f3d0 <__ctype_b_loc@plt+0x65c0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x10,(%esp)
call   8048bf0 <malloc@plt>
test   %eax,%eax
je     804934b <__ctype_b_loc@plt+0x53b>
test   %ebx,%ebx
je     8049346 <__ctype_b_loc@plt+0x536>
mov    0x8(%ebx),%edx
mov    %edx,0x8(%eax)
mov    0xc(%ebx),%edx
mov    %edx,0xc(%eax)
add    $0x18,%esp
pop    %ebx
ret
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    8049346 <__ctype_b_loc@plt+0x536>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8053208,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8053208,%eax
mov    0x8053204,%edx
add    $0x1,%eax
cmp    %edx,%eax
mov    %eax,0x8053208
jle    80493af <__ctype_b_loc@plt+0x59f>
mov    %edx,0x8053208
mov    %edx,%eax
repz ret
jmp    80493c0 <__ctype_b_loc@plt+0x5b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
mov    %eax,0x8053208
ret
lea    0x0(%esi),%esi
mov    0x8053204,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8053200,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x1,0x8053200
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80531fc,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    %eax,0x80531fc
ret
lea    0x0(%esi),%esi
mov    0x80531f8,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x1,0x80531f8
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    $0x0,%edx
add    $0x1,%eax
cmp    0x8053204,%eax
cmovg  %edx,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
sub    $0x1,%eax
cmovs  0x8053204,%eax
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%ecx
cmp    $0x80531dc,%ecx
je     80494ad <__ctype_b_loc@plt+0x69d>
mov    0x80531dc,%edx
xor    %eax,%eax
cmp    $0x80531dc,%edx
jne    80494a2 <__ctype_b_loc@plt+0x692>
jmp    80494a9 <__ctype_b_loc@plt+0x699>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%edx
cmp    $0x80531dc,%edx
je     80494b8 <__ctype_b_loc@plt+0x6a8>
add    $0x1,%eax
cmp    %edx,%ecx
jne    8049498 <__ctype_b_loc@plt+0x688>
add    $0x1c,%esp
ret
xor    %eax,%eax
nop
jmp    80494a9 <__ctype_b_loc@plt+0x699>
lea    0x0(%esi),%esi
movl   $0x804f899,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
jmp    80494a9 <__ctype_b_loc@plt+0x699>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
cmp    $0x80531dc,%ebx
je     80495a3 <__ctype_b_loc@plt+0x793>
mov    0x8(%ebx),%eax
cmp    0x80531ec,%eax
movl   $0x1,0x80531f4
00
je     804951b <__ctype_b_loc@plt+0x70b>
mov    %eax,0x80531ec
mov    %eax,0x4(%esp)
mov    0x80531f0,%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8048b80 <fseek@plt>
test   %eax,%eax
jne    8049580 <__ctype_b_loc@plt+0x770>
mov    0xc(%ebx),%ebx
movl   $0x80531b4,0x4(%esp)
movl   $0x80531b8,(%esp)
lea    0x1(%ebx),%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     80495a3 <__ctype_b_loc@plt+0x793>
mov    0x80531f0,%eax
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80531b8,%eax
mov    %eax,(%esp)
call   8048bc0 <fread@plt>
cmp    %ebx,%eax
jne    80495b0 <__ctype_b_loc@plt+0x7a0>
mov    0x80531b8,%edx
add    %eax,0x80531ec
movb   $0x0,(%edx,%eax,1)
mov    0x80531b8,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f8a9,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f8bf,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    8049578 <__ctype_b_loc@plt+0x768>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x0,0x80531f8
00
movl   $0x0,0x8053200
00
call   8048db0 <tmpfile@plt>
mov    %eax,%edx
test   %edx,%edx
mov    %eax,0x80531f0
mov    $0x1,%eax
je     8049610 <__ctype_b_loc@plt+0x800>
add    $0x1c,%esp
ret
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f8d5,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8053184,%eax
movl   $0x0,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048cd0 <setvbuf@plt>
call   80495e0 <__ctype_b_loc@plt+0x7d0>
xor    %edx,%edx
test   %eax,%eax
je     804969d <__ctype_b_loc@plt+0x88d>
movl   $0x80531dc,0x80531dc
08
mov    $0x1,%dl
movl   $0x80531dc,0x80531e0
08
movl   $0x80531cc,0x80531cc
08
movl   $0x80531cc,0x80531d0
08
mov    %edx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x804f8eb,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8048d00 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
movl   $0x4,0x4(%esp)
mov    %ebx,(%esp)
call   8048ac0 <pathconf@plt>
test   %eax,%eax
js     80496f8 <__ctype_b_loc@plt+0x8e8>
cmp    $0xff,%eax
jg     80496f0 <__ctype_b_loc@plt+0x8e0>
mov    $0x100,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    (%esi),%edx
mov    $0x400,%eax
test   %edx,%edx
jne    80496eb <__ctype_b_loc@plt+0x8db>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x80531a8,%eax
cmp    %ebx,%eax
jge    8049780 <__ctype_b_loc@plt+0x970>
mov    0x8053204,%ecx
lea    (%ebx,%ebx,1),%edx
lea    (%eax,%ecx,1),%esi
cmp    %edx,%esi
jge    80497f0 <__ctype_b_loc@plt+0x9e0>
mov    0x80531e0,%edx
cmp    %ecx,%ebx
mov    %ecx,0x80531a8
mov    %edx,0x8053108
jge    804976e <__ctype_b_loc@plt+0x95e>
sub    %ebx,%ecx
xor    %eax,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    0x4(%edx),%edx
cmp    %ecx,%eax
jne    8049758 <__ctype_b_loc@plt+0x948>
mov    %ebx,0x80531a8
mov    %edx,0x8053108
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    0x8053108,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    (%ebx,%ebx,1),%edx
cmp    %edx,%eax
jg     80497a8 <__ctype_b_loc@plt+0x998>
cmp    %ebx,%eax
jle    804976e <__ctype_b_loc@plt+0x95e>
mov    0x8053108,%edx
sub    %ebx,%eax
mov    %eax,%ecx
xor    %eax,%eax
nop
add    $0x1,%eax
mov    0x4(%edx),%edx
cmp    %ecx,%eax
jne    8049798 <__ctype_b_loc@plt+0x988>
jmp    8049762 <__ctype_b_loc@plt+0x952>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
movl   $0x80531dc,0x8053108
08
movl   $0x0,0x80531a8
00
jle    804976e <__ctype_b_loc@plt+0x95e>
xor    %eax,%eax
mov    $0x80531dc,%edx
nop
add    $0x1,%eax
mov    (%edx),%edx
cmp    %ebx,%eax
jne    80497c8 <__ctype_b_loc@plt+0x9b8>
mov    %eax,0x80531a8
mov    %edx,0x8053108
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    0x8053108,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053108,%edx
mov    %ebx,%ecx
sub    %eax,%ecx
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    (%edx),%edx
cmp    %ecx,%eax
jne    8049800 <__ctype_b_loc@plt+0x9f0>
jmp    8049762 <__ctype_b_loc@plt+0x952>
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    %edx,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
addl   $0x1,0x8053204
mov    (%eax),%edx
mov    %edx,(%ebx)
mov    %ebx,0x4(%edx)
mov    %ebx,(%eax)
mov    %eax,0x4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   8049320 <__ctype_b_loc@plt+0x510>
movl   $0xa,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   8048d10 <memchr@plt>
test   %esi,%esi
je     8049990 <__ctype_b_loc@plt+0xb80>
test   %eax,%eax
mov    %eax,%ebp
je     8049997 <__ctype_b_loc@plt+0xb87>
mov    0x80531f4,%ecx
mov    %eax,%ebx
sub    %edi,%ebx
test   %ecx,%ecx
jne    80498e0 <__ctype_b_loc@plt+0xad0>
mov    0x80531f0,%eax
mov    %ebx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
cmp    %ebx,%eax
jne    8049928 <__ctype_b_loc@plt+0xb18>
mov    0x80531ec,%eax
mov    0x38(%esp),%edx
mov    %ebx,0xc(%esi)
mov    %eax,0x8(%esi)
mov    %esi,%eax
call   8049810 <__ctype_b_loc@plt+0xa00>
lea    0x1(%ebp),%eax
addl   $0x1,0x8053208
add    %ebx,0x80531ec
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80531f0,%eax
movl   $0x2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048b80 <fseek@plt>
test   %eax,%eax
jne    8049960 <__ctype_b_loc@plt+0xb50>
mov    0x80531f0,%eax
mov    %eax,(%esp)
call   8048cc0 <ftell@plt>
movl   $0x0,0x80531f4
00
mov    %eax,0x80531ec
jmp    804988c <__ctype_b_loc@plt+0xa7c>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x80531ec
ff
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f8fb,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f8a9,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    80498d3 <__ctype_b_loc@plt+0xac3>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80498d3 <__ctype_b_loc@plt+0xac3>
movl   $0x804f8ed,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    80498d3 <__ctype_b_loc@plt+0xac3>
lea    0x0(%esi),%esi
push   %ebp
mov    $0x0,%edx
push   %edi
mov    $0x80531cc,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
add    $0x1,%eax
cmp    0x8053204,%eax
cmovg  %edx,%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,%ebp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,%esi
call   80492d0 <__ctype_b_loc@plt+0x4c0>
cmp    %esi,%ebp
jne    8049a11 <__ctype_b_loc@plt+0xc01>
jmp    8049a38 <__ctype_b_loc@plt+0xc28>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %eax,(%ebx)
mov    %ebx,0x4(%eax)
mov    %ebx,(%edi)
mov    (%esi),%esi
mov    %edi,0x4(%ebx)
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
cmp    %esi,%ebp
je     8049a38 <__ctype_b_loc@plt+0xc28>
mov    %ebx,%edi
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    %esi,%eax
call   8049320 <__ctype_b_loc@plt+0x510>
test   %eax,%eax
mov    %eax,%ebx
jne    80499f8 <__ctype_b_loc@plt+0xbe8>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x80531c0,%eax
mov    0x80531c8,%ebp
sub    $0x1,%eax
lea    (%eax,%eax,2),%edx
lea    0x0(%ebp,%edx,4),%edx
jmp    8049a7d <__ctype_b_loc@plt+0xc6d>
xchg   %ax,%ax
mov    %edx,%ecx
sub    $0x1,%eax
sub    $0xc,%edx
cmpl   $0x1,(%ecx)
je     8049ab8 <__ctype_b_loc@plt+0xca8>
cmp    $0xffffffff,%eax
mov    %eax,%esi
jne    8049a70 <__ctype_b_loc@plt+0xc60>
mov    0x8053208,%eax
movl   $0x0,0x80531c0
00
mov    %eax,0x8053110
mov    0x8053204,%eax
mov    %eax,0x805310c
mov    0x80531fc,%eax
mov    %eax,0x80531bc
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ecx),%eax
mov    0x4(%ecx),%ebx
mov    %esi,0x80531c0
mov    (%eax),%edi
cmp    %ebx,%edi
jne    8049ad2 <__ctype_b_loc@plt+0xcc2>
jmp    8049af8 <__ctype_b_loc@plt+0xce8>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    (%ebx),%esi
mov    %ebx,(%esp)
call   804dea0 <__ctype_b_loc@plt+0x5090>
mov    %ebx,(%esp)
call   8048b00 <free@plt>
cmp    %esi,%edi
jne    8049ad0 <__ctype_b_loc@plt+0xcc0>
mov    0x80531c0,%eax
mov    0x80531c8,%ebp
jmp    8049a62 <__ctype_b_loc@plt+0xc52>
mov    %esi,%eax
jmp    8049a62 <__ctype_b_loc@plt+0xc52>
nop
sub    $0x1c,%esp
call   80492d0 <__ctype_b_loc@plt+0x4c0>
call   8049a50 <__ctype_b_loc@plt+0xc40>
mov    0x80531f0,%eax
test   %eax,%eax
je     8049b2c <__ctype_b_loc@plt+0xd1c>
mov    %eax,(%esp)
call   8048b30 <fclose@plt>
test   %eax,%eax
jne    8049b50 <__ctype_b_loc@plt+0xd40>
movl   $0x0,0x80531f0
00
movl   $0x0,0x80531ec
00
mov    $0x1,%eax
movl   $0x0,0x80531f4
00
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f912,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
call   8049a50 <__ctype_b_loc@plt+0xc40>
movl   $0xffffffff,0x805310c
ff
movl   $0xffffffff,0x8053110
ff
movl   $0x0,0x80531bc
00
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x80531c0,%eax
movl   $0x80531c4,0x4(%esp)
movl   $0x80531c8,(%esp)
lea    0x3(%eax,%eax,2),%eax
shl    $0x2,%eax
mov    %eax,0x8(%esp)
call   804f6c0 <__ctype_b_loc@plt+0x68b0>
test   %eax,%eax
je     8049c48 <__ctype_b_loc@plt+0xe38>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    0x80531c0,%eax
lea    (%eax,%eax,2),%edx
mov    0x80531c8,%eax
lea    (%eax,%edx,4),%ebx
mov    0x20(%esp),%eax
mov    %eax,(%ebx)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,0x8(%ebx)
mov    0x80531c0,%eax
lea    (%eax,%eax,2),%edx
mov    0x80531c8,%eax
lea    (%eax,%edx,4),%ebx
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,0x4(%ebx)
mov    0x80531c0,%eax
lea    0x1(%eax),%edx
mov    %edx,0x80531c0
lea    (%eax,%eax,2),%edx
mov    0x80531c8,%eax
add    $0x18,%esp
pop    %ebx
lea    (%eax,%edx,4),%eax
ret
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    0x80531c8,%ebx
test   %ebx,%ebx
je     8049cb9 <__ctype_b_loc@plt+0xea9>
call   8049a50 <__ctype_b_loc@plt+0xc40>
mov    0x80531c8,%eax
mov    %eax,(%esp)
call   8048b00 <free@plt>
movl   $0x0,0x80531c8
00
movl   $0x0,0x80531c0
00
movl   $0x0,0x80531c4
00
movl   $0xffffffff,0x805310c
ff
movl   $0xffffffff,0x8053110
ff
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
lea    0x1c(%esp),%ebp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %edi,%edi
mov    %eax,0x8053208
je     8049d89 <__ctype_b_loc@plt+0xf79>
xchg   %ax,%ax
mov    (%ebx),%edx
mov    $0x1,%eax
cmpb   $0x0,(%edx)
je     8049dc2 <__ctype_b_loc@plt+0xfb2>
mov    %eax,0x1c(%esp)
mov    %eax,%ecx
add    $0x1,%eax
cmpb   $0xa,-0x2(%edx,%eax,1)
jne    8049d10 <__ctype_b_loc@plt+0xf00>
cmp    $0x2,%ecx
jne    8049d30 <__ctype_b_loc@plt+0xf20>
mov    (%ebx),%eax
cmpb   $0x2e,(%eax)
je     8049df9 <__ctype_b_loc@plt+0xfe9>
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x8053208,%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049840 <__ctype_b_loc@plt+0xa30>
test   %eax,%eax
je     8049dea <__ctype_b_loc@plt+0xfda>
test   %esi,%esi
mov    0x8053208,%eax
je     8049dd0 <__ctype_b_loc@plt+0xfc0>
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,0x8(%esi)
mov    0x1c(%esp),%eax
add    %eax,(%ebx)
movl   $0x1,0x80531fc
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
test   %edi,%edi
jne    8049d00 <__ctype_b_loc@plt+0xef0>
mov    %ebp,(%esp)
call   804b2c0 <__ctype_b_loc@plt+0x24b0>
test   %eax,%eax
mov    %eax,(%ebx)
je     8049e0b <__ctype_b_loc@plt+0xffb>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     8049daa <__ctype_b_loc@plt+0xf9a>
cmpb   $0xa,-0x1(%eax,%ecx,1)
je     8049d20 <__ctype_b_loc@plt+0xf10>
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048da0 <clearerr@plt>
mov    0x1c(%esp),%esi
xor    %eax,%eax
test   %esi,%esi
sete   %al
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
mov    %eax,%esi
jne    8049d6c <__ctype_b_loc@plt+0xf5c>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x2,%eax
mov    %eax,(%ebx)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x38(%esp),%esi
mov    0x34(%esp),%ebp
mov    %edi,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
cmp    %edi,%esi
mov    %esi,0x8053208
mov    %eax,%ebx
jl     8049e4f <__ctype_b_loc@plt+0x103f>
cmp    %ebp,%esi
jl     8049eef <__ctype_b_loc@plt+0x10df>
sub    %edi,%ebp
lea    0x1(%ebp),%eax
movl   $0x0,0xc(%esp)
test   %eax,%eax
jle    8049f2f <__ctype_b_loc@plt+0x111f>
xor    %edi,%edi
test   %eax,%eax
lea    -0x1(%eax),%esi
jg     8049e94 <__ctype_b_loc@plt+0x1084>
jmp    8049f08 <__ctype_b_loc@plt+0x10f8>
lea    0x0(%esi),%esi
mov    %ebp,0x8(%edi)
sub    $0x1,%esi
movl   $0x1,0x80531fc
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
cmp    $0xffffffff,%esi
mov    (%ebx),%ebx
je     8049f08 <__ctype_b_loc@plt+0x10f8>
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    %ebx,%eax
call   8049320 <__ctype_b_loc@plt+0x510>
test   %eax,%eax
mov    %eax,%ebp
je     8049ee0 <__ctype_b_loc@plt+0x10d0>
mov    0x8053208,%edx
lea    0x1(%edx),%eax
mov    %eax,0x8053208
mov    %ebp,%eax
call   8049810 <__ctype_b_loc@plt+0xa00>
test   %edi,%edi
jne    8049e78 <__ctype_b_loc@plt+0x1068>
mov    0x8053208,%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
mov    %eax,%edi
jne    8049e7b <__ctype_b_loc@plt+0x106b>
xchg   %ax,%ax
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%eax
sub    %esi,%ebp
sub    %edi,%eax
add    $0x1,%eax
mov    %ebp,0xc(%esp)
jmp    8049e5c <__ctype_b_loc@plt+0x104c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053208,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,%ebx
mov    0xc(%esp),%eax
test   %eax,%eax
jle    8049f2f <__ctype_b_loc@plt+0x111f>
movl   $0x0,0xc(%esp)
jmp    8049e66 <__ctype_b_loc@plt+0x1056>
mov    $0x1,%eax
jmp    8049ee7 <__ctype_b_loc@plt+0x10d7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
call   80499b0 <__ctype_b_loc@plt+0xba0>
test   %eax,%eax
jne    8049f70 <__ctype_b_loc@plt+0x1160>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
je     804a008 <__ctype_b_loc@plt+0x11f8>
lea    0x1(%esi),%eax
cmp    0x8053204,%eax
lea    -0x1(%ebx),%ebp
cmovg  %edi,%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %ebp,(%esp)
mov    %eax,%edi
call   8049710 <__ctype_b_loc@plt+0x900>
mov    0x38(%esp),%edx
test   %edx,%edx
jne    8049ff0 <__ctype_b_loc@plt+0x11e0>
mov    %edi,(%eax)
sub    %ebx,%esi
mov    %eax,0x4(%edi)
not    %esi
mov    $0x1,%edi
add    %esi,0x8053204
mov    %ebp,0x8053208
movl   $0x1,0x80531fc
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    (%eax),%edx
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   804af60 <__ctype_b_loc@plt+0x2150>
mov    0xc(%esp),%eax
jmp    8049fb6 <__ctype_b_loc@plt+0x11a6>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
lea    0x0(%esi),%esi
jmp    8049f61 <__ctype_b_loc@plt+0x1151>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x0,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
add    $0x1,%eax
cmp    0x8053204,%eax
cmovg  %edx,%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
cmp    %eax,%esi
mov    %eax,%ebp
je     804a17d <__ctype_b_loc@plt+0x136d>
xor    %ebx,%ebx
jmp    804a0a5 <__ctype_b_loc@plt+0x1295>
mov    0xc(%ebp),%eax
movl   $0x80531ac,0x4(%esp)
movl   $0x80531b0,(%esp)
add    %ebx,%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804a0b3 <__ctype_b_loc@plt+0x12a3>
mov    0x80531b0,%eax
mov    0xc(%ebp),%edx
mov    %edi,0x4(%esp)
add    %ebx,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
add    0xc(%ebp),%ebx
mov    0x0(%ebp),%ebp
cmp    %ebp,%esi
je     804a0c0 <__ctype_b_loc@plt+0x12b0>
mov    %ebp,(%esp)
call   80494d0 <__ctype_b_loc@plt+0x6c0>
test   %eax,%eax
mov    %eax,%edi
jne    804a060 <__ctype_b_loc@plt+0x1250>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x2(%ebx),%esi
mov    %esi,0x8(%esp)
movl   $0x80531ac,0x4(%esp)
movl   $0x80531b0,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804a0b3 <__ctype_b_loc@plt+0x12a3>
mov    0x38(%esp),%eax
mov    $0xa,%ecx
add    0x80531b0,%ebx
mov    %cx,(%ebx)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049f40 <__ctype_b_loc@plt+0x1130>
test   %eax,%eax
je     804a0b3 <__ctype_b_loc@plt+0x12a3>
mov    0x30(%esp),%eax
lea    -0x1(%eax),%edi
mov    %edi,0x8053208
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x8053208,%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80531b0,%eax
mov    %eax,(%esp)
call   8049840 <__ctype_b_loc@plt+0xa30>
test   %eax,%eax
je     804a173 <__ctype_b_loc@plt+0x1363>
mov    0x8053208,%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
je     804a173 <__ctype_b_loc@plt+0x1363>
movl   $0x1,0x80531fc
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    $0x1,%eax
jmp    804a0b5 <__ctype_b_loc@plt+0x12a5>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
jmp    804a0b3 <__ctype_b_loc@plt+0x12a3>
mov    $0x2,%esi
xor    %ebx,%ebx
jmp    804a0c3 <__ctype_b_loc@plt+0x12b3>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
mov    0x38(%esp),%ebx
lea    0x1(%eax),%esi
mov    0x30(%esp),%eax
cmp    0x8053204,%esi
lea    -0x1(%eax),%edi
cmovg  %ebp,%esi
call   804f420 <__ctype_b_loc@plt+0x6610>
cmp    %ebx,%edi
je     804a278 <__ctype_b_loc@plt+0x1468>
cmp    0x34(%esp),%ebx
je     804a278 <__ctype_b_loc@plt+0x1468>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x2,(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
je     804a300 <__ctype_b_loc@plt+0x14f0>
lea    0x1(%ebx),%eax
cmp    0x8053204,%eax
mov    %ebx,0x4(%esp)
movl   $0x2,(%esp)
cmovg  %ebp,%eax
mov    %eax,0x8(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
je     804a300 <__ctype_b_loc@plt+0x14f0>
mov    %esi,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
cmp    %ebx,0x30(%esp)
mov    %eax,0xc(%esp)
jg     804a2c0 <__ctype_b_loc@plt+0x14b0>
mov    %ebx,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %edi,(%esp)
mov    %eax,%ebp
call   8049710 <__ctype_b_loc@plt+0x900>
mov    0xc(%esp),%ecx
mov    0x0(%ebp),%edx
mov    (%eax),%esi
mov    %esi,0x0(%ebp)
mov    %ebp,0x4(%esi)
mov    0x4(%ecx),%esi
mov    %edx,(%esi)
mov    %esi,0x4(%edx)
xor    %esi,%esi
mov    %ecx,(%eax)
mov    %eax,0x4(%ecx)
add    %esi,%ebx
mov    %ebx,0x8053208
mov    0x3c(%esp),%ebx
test   %ebx,%ebx
je     804a2a3 <__ctype_b_loc@plt+0x1493>
mov    %edx,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804af60 <__ctype_b_loc@plt+0x2150>
jmp    804a2a3 <__ctype_b_loc@plt+0x1493>
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    0x3c(%esp),%ebx
mov    0xc(%esp),%edx
test   %ebx,%ebx
mov    %eax,%ebp
mov    0x34(%esp),%eax
mov    %eax,0x8053208
jne    804a265 <__ctype_b_loc@plt+0x1455>
movl   $0x1,0x80531fc
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8049710 <__ctype_b_loc@plt+0x900>
mov    0xc(%esp),%ecx
mov    0x34(%esp),%esi
sub    0x30(%esp),%esi
add    $0x1,%esi
mov    (%eax),%edx
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,0x0(%ebp)
mov    %ebp,0x4(%eax)
mov    0x4(%ecx),%eax
mov    %edx,(%eax)
mov    %eax,0x4(%edx)
mov    %ecx,(%edi)
mov    %edi,0x4(%ecx)
jmp    804a255 <__ctype_b_loc@plt+0x1445>
nop
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x80531cc,%ebx
cmp    $0x80531cc,%ebx
je     804a3bc <__ctype_b_loc@plt+0x15ac>
mov    0x20(%esp),%eax
xor    %edi,%edi
mov    %eax,0x8053208
jmp    804a354 <__ctype_b_loc@plt+0x1544>
lea    0x0(%esi),%esi
mov    %esi,0x8(%edi)
mov    (%ebx),%ebx
movl   $0x1,0x80531fc
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
cmp    $0x80531cc,%ebx
je     804a3b0 <__ctype_b_loc@plt+0x15a0>
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    %ebx,%eax
call   8049320 <__ctype_b_loc@plt+0x510>
test   %eax,%eax
mov    %eax,%esi
je     804a3a0 <__ctype_b_loc@plt+0x1590>
mov    0x8053208,%edx
lea    0x1(%edx),%eax
mov    %eax,0x8053208
mov    %esi,%eax
call   8049810 <__ctype_b_loc@plt+0xa00>
test   %edi,%edi
jne    804a338 <__ctype_b_loc@plt+0x1528>
mov    0x8053208,%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
mov    %eax,%edi
jne    804a33b <__ctype_b_loc@plt+0x152b>
xchg   %ax,%ax
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x804f929,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804a3a7 <__ctype_b_loc@plt+0x1597>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8053208,%eax
mov    %eax,0x10(%esp)
mov    0x8053204,%eax
mov    %eax,0x14(%esp)
mov    0x80531fc,%eax
mov    %eax,0x18(%esp)
mov    0x80531c0,%eax
test   %eax,%eax
jle    804a570 <__ctype_b_loc@plt+0x1760>
mov    0x8053110,%eax
test   %eax,%eax
js     804a570 <__ctype_b_loc@plt+0x1760>
mov    0x805310c,%ebp
test   %ebp,%ebp
js     804a570 <__ctype_b_loc@plt+0x1760>
movl   $0x0,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x80531c0,%eax
mov    0x80531c8,%ecx
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x1c(%esp)
jns    804a498 <__ctype_b_loc@plt+0x1688>
jmp    804a517 <__ctype_b_loc@plt+0x1707>
lea    0x0(%esi),%esi
jb     804a588 <__ctype_b_loc@plt+0x1778>
cmp    $0x3,%ebx
lea    0x0(%esi,%eiz,1),%esi
ja     804a48e <__ctype_b_loc@plt+0x167e>
mov    0x4(%edx),%edi
lea    -0xc(%esi,%ecx,1),%ebx
sub    $0x1,%eax
mov    0x4(%ebx),%esi
mov    0x8(%edx),%edx
mov    (%edi),%ebp
mov    %ebp,(%esi)
mov    %esi,0x4(%ebp)
mov    0x8(%ebx),%esi
mov    0x4(%edx),%ebp
mov    %esi,0x0(%ebp)
mov    %ebp,0x4(%esi)
mov    %edx,(%edi)
mov    %edi,0x4(%edx)
mov    %ebx,%edx
mov    (%ebx),%ebx
xor    $0x1,%ebx
sub    $0x1,%eax
mov    %ebx,(%edx)
js     804a4c2 <__ctype_b_loc@plt+0x16b2>
lea    (%eax,%eax,2),%esi
shl    $0x2,%esi
lea    (%ecx,%esi,1),%edx
mov    (%edx),%ebx
cmp    $0x1,%ebx
jne    804a450 <__ctype_b_loc@plt+0x1640>
mov    0x4(%edx),%esi
xor    $0x1,%ebx
sub    $0x1,%eax
mov    0x4(%esi),%edi
mov    %esi,(%edi)
mov    0x8(%edx),%esi
mov    (%esi),%edi
mov    %esi,0x4(%edi)
mov    %ebx,(%edx)
jns    804a498 <__ctype_b_loc@plt+0x1688>
mov    0x1c(%esp),%edi
test   %edi,%edi
jle    804a517 <__ctype_b_loc@plt+0x1707>
mov    0xc(%esp),%edi
lea    0xc(%ecx),%edx
lea    -0x2(%edi),%ebx
shr    %ebx
lea    (%ebx,%ebx,2),%ebx
lea    (%edi,%edi,2),%eax
lea    (%edx,%ebx,4),%ebp
lea    (%ecx,%eax,4),%eax
mov    %ebp,0xc(%esp)
jmp    804a4eb <__ctype_b_loc@plt+0x16db>
add    $0xc,%edx
mov    -0xc(%eax),%ebp
sub    $0xc,%eax
mov    (%ecx),%edi
mov    0x4(%ecx),%esi
mov    0x8(%ecx),%ebx
mov    %ebp,(%ecx)
mov    0x4(%eax),%ebp
mov    %ebp,0x4(%ecx)
mov    0x8(%eax),%ebp
mov    %ebp,0x8(%ecx)
mov    %edx,%ecx
mov    %edi,(%eax)
mov    %esi,0x4(%eax)
mov    %ebx,0x8(%eax)
cmp    0xc(%esp),%edx
jne    804a4e8 <__ctype_b_loc@plt+0x16d8>
mov    0x40(%esp),%esi
test   %esi,%esi
jne    804a5a0 <__ctype_b_loc@plt+0x1790>
mov    0x8053110,%eax
mov    %eax,0x8053208
mov    0x10(%esp),%eax
mov    %eax,0x8053110
mov    0x805310c,%eax
mov    %eax,0x8053204
mov    0x14(%esp),%eax
mov    %eax,0x805310c
mov    0x80531bc,%eax
mov    %eax,0x80531fc
mov    0x18(%esp),%eax
mov    %eax,0x80531bc
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x804f938,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8(%edx),%esi
mov    0x4(%edx),%edi
mov    (%esi),%esi
mov    0x4(%edi),%edi
mov    %esi,(%edi)
mov    %edi,0x4(%esi)
jmp    804a48e <__ctype_b_loc@plt+0x167e>
lea    0x0(%esi),%esi
call   804ae10 <__ctype_b_loc@plt+0x2000>
jmp    804a523 <__ctype_b_loc@plt+0x1713>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
test   %eax,%eax
je     804a5c8 <__ctype_b_loc@plt+0x17b8>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048be0 <realloc@plt>
add    $0x1c,%esp
ret
nop
mov    %edx,(%esp)
call   8048bf0 <malloc@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x10,%esp
mov    (%edx),%eax
test   %eax,%eax
jle    804a60d <__ctype_b_loc@plt+0x17fd>
lea    0x0(%esi),%esi
mov    (%edi),%ecx
mov    0x4(%ecx,%ebx,8),%ecx
add    $0x1,%ebx
mov    %ecx,(%esp)
call   8048b00 <free@plt>
cmp    (%esi),%ebx
jl     804a5f8 <__ctype_b_loc@plt+0x17e8>
mov    (%edi),%eax
test   %eax,%eax
je     804a621 <__ctype_b_loc@plt+0x1811>
mov    %eax,(%esp)
call   8048b00 <free@plt>
movl   $0x0,(%edi)
movl   $0x0,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    %ecx,(%esp)
call   8048c90 <strlen@plt>
mov    (%ebx),%edx
mov    %eax,%esi
add    %eax,%edx
mov    (%edi),%eax
add    $0x1,%edx
call   804a5b0 <__ctype_b_loc@plt+0x17a0>
test   %eax,%eax
je     804a680 <__ctype_b_loc@plt+0x1870>
mov    %eax,(%edi)
lea    0x1(%esi),%edx
add    (%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048d20 <strncpy@plt>
mov    $0x1,%eax
add    %esi,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8048c90 <strlen@plt>
mov    %eax,%ebp
mov    (%ebx),%eax
lea    0x8(,%eax,8),%edx
mov    (%esi),%eax
call   804a5b0 <__ctype_b_loc@plt+0x17a0>
test   %eax,%eax
je     804a708 <__ctype_b_loc@plt+0x18f8>
mov    (%ebx),%edx
add    $0x1,%ebp
mov    %eax,(%esi)
lea    (%eax,%edx,8),%esi
mov    %edi,(%esi)
movl   $0x0,0x4(%esi)
mov    %ebp,(%esp)
call   8048bf0 <malloc@plt>
test   %eax,%eax
je     804a708 <__ctype_b_loc@plt+0x18f8>
mov    0x30(%esp),%ecx
mov    %eax,0x4(%esi)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048d20 <strncpy@plt>
mov    $0x1,%eax
addl   $0x1,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
movzbl 0x80(%esp),%eax
cmpl   $0x1,0x74(%esp)
mov    %al,0x37(%esp)
mov    0x70(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
jle    804a9d9 <__ctype_b_loc@plt+0x1bc9>
mov    0x78(%esp),%ebp
test   %ebp,%ebp
je     804a9d9 <__ctype_b_loc@plt+0x1bc9>
mov    0x7c(%esp),%edi
test   %edi,%edi
je     804a9d9 <__ctype_b_loc@plt+0x1bc9>
mov    0x70(%esp),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
add    $0x8,%eax
mov    %eax,0x18(%esp)
mov    0x70(%esp),%eax
add    $0x4,%eax
mov    %eax,0x24(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x78(%esp),%ebx
shl    $0x2,%eax
add    %eax,%ebx
mov    (%ebx),%ebp
movzbl 0x0(%ebp),%ecx
test   %cl,%cl
je     804aa68 <__ctype_b_loc@plt+0x1c58>
movzbl 0x1(%ebp),%edx
test   %dl,%dl
je     804aa68 <__ctype_b_loc@plt+0x1c58>
cmp    $0x2d,%cl
jne    804aa68 <__ctype_b_loc@plt+0x1c58>
mov    0xc(%esp),%edi
movl   $0x0,0x1c(%esp)
add    $0x1,%edi
cmp    %edi,0x74(%esp)
mov    %edi,0x2c(%esp)
jle    804a7fd <__ctype_b_loc@plt+0x19ed>
mov    0x78(%esp),%edi
mov    0x4(%edi,%eax,1),%eax
mov    %eax,0x1c(%esp)
cmp    $0x2d,%dl
mov    $0x1,%ebx
jne    804a932 <__ctype_b_loc@plt+0x1b22>
movzbl 0x2(%ebp),%eax
test   %al,%al
mov    %al,0x36(%esp)
je     804ad3c <__ctype_b_loc@plt+0x1f2c>
lea    0x2(%ebp),%edi
mov    %edi,0x20(%esp)
xor    %edi,%edi
cmp    $0x3d,%al
jne    804a834 <__ctype_b_loc@plt+0x1a24>
jmp    804a844 <__ctype_b_loc@plt+0x1a34>
lea    0x0(%esi),%esi
test   %al,%al
je     804a840 <__ctype_b_loc@plt+0x1a30>
add    $0x1,%edi
movzbl 0x2(%ebp,%edi,1),%eax
cmp    $0x3d,%al
jne    804a830 <__ctype_b_loc@plt+0x1a20>
mov    %al,0x36(%esp)
mov    0x7c(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     804ac69 <__ctype_b_loc@plt+0x1e59>
lea    0xc(%eax),%ebx
mov    %edi,0x10(%esp)
mov    %ebx,%edi
mov    %eax,%ebx
movb   $0x0,0x35(%esp)
movl   $0x0,0x14(%esp)
movl   $0xffffffff,0x28(%esp)
mov    %ebp,0x3c(%esp)
jmp    804a8a4 <__ctype_b_loc@plt+0x1a94>
mov    0x7c(%esp),%ecx
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
cmp    %esi,(%eax)
je     804aaa8 <__ctype_b_loc@plt+0x1c98>
movb   $0x1,0x35(%esp)
mov    %edi,%ebx
add    $0xc,%edi
mov    -0xc(%edi),%esi
addl   $0x1,0x14(%esp)
test   %esi,%esi
je     804aaf0 <__ctype_b_loc@plt+0x1ce0>
mov    0x4(%ebx),%ebp
test   %ebp,%ebp
je     804a88f <__ctype_b_loc@plt+0x1a7f>
mov    0x10(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8048de0 <strncmp@plt>
test   %eax,%eax
jne    804a88f <__ctype_b_loc@plt+0x1a7f>
mov    %ebp,(%esp)
call   8048c90 <strlen@plt>
cmp    %eax,0x10(%esp)
je     804ab75 <__ctype_b_loc@plt+0x1d65>
mov    0x28(%esp),%eax
cmp    $0xffffffff,%eax
jne    804a878 <__ctype_b_loc@plt+0x1a68>
mov    0x14(%esp),%eax
mov    %eax,0x28(%esp)
jmp    804a88f <__ctype_b_loc@plt+0x1a7f>
mov    0x7c(%esp),%esi
add    $0x1,%ebx
lea    0x0(%ebp,%ebx,1),%eax
cmpb   $0x0,(%eax)
jne    804aa38 <__ctype_b_loc@plt+0x1c28>
mov    0x8(%esi),%eax
addl   $0x1,0xc(%esp)
test   %eax,%eax
jne    804a9e8 <__ctype_b_loc@plt+0x1bd8>
xor    %ebx,%ebx
mov    0x18(%esp),%edx
mov    0x70(%esp),%eax
movl   $0x804f9e3,(%esp)
call   804a690 <__ctype_b_loc@plt+0x1880>
test   %al,%al
je     804aa27 <__ctype_b_loc@plt+0x1c17>
test   %ebx,%ebx
je     804a995 <__ctype_b_loc@plt+0x1b85>
movzbl 0x0(%ebp,%ebx,1),%ecx
movb   $0x0,0x4f(%esp)
test   %cl,%cl
mov    %cl,0x4e(%esp)
je     804a96f <__ctype_b_loc@plt+0x1b5f>
mov    0x7c(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     804a96f <__ctype_b_loc@plt+0x1b5f>
cmp    %eax,%ecx
je     804a8ec <__ctype_b_loc@plt+0x1adc>
mov    0x7c(%esp),%eax
add    $0xc,%eax
jmp    804a967 <__ctype_b_loc@plt+0x1b57>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%eax
cmp    %edx,%ecx
je     804a8f0 <__ctype_b_loc@plt+0x1ae0>
mov    (%eax),%edx
mov    %eax,%esi
test   %edx,%edx
jne    804a960 <__ctype_b_loc@plt+0x1b50>
mov    0x70(%esp),%eax
mov    $0x804f9ab,%ecx
lea    0xc(%eax),%ebx
mov    0x24(%esp),%edi
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
lea    0x4e(%esp),%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    0x70(%esp),%eax
mov    0x4(%eax),%ebx
test   %ebx,%ebx
jne    804a9bd <__ctype_b_loc@plt+0x1bad>
mov    0xc(%esp),%eax
cmp    0x74(%esp),%eax
jl     804a7a8 <__ctype_b_loc@plt+0x1998>
mov    0x70(%esp),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     804ac20 <__ctype_b_loc@plt+0x1e10>
mov    0x70(%esp),%eax
lea    0x8(%eax),%edx
call   804a5e0 <__ctype_b_loc@plt+0x17d0>
mov    0x38(%esp),%eax
test   %eax,%eax
je     804a9d9 <__ctype_b_loc@plt+0x1bc9>
mov    %eax,(%esp)
call   8048b00 <free@plt>
add    $0x5c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x1,%eax
jne    804a910 <__ctype_b_loc@plt+0x1b00>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804ab87 <__ctype_b_loc@plt+0x1d77>
cmpb   $0x0,(%eax)
je     804ab87 <__ctype_b_loc@plt+0x1d77>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edx
addl   $0x1,0xc(%esp)
mov    %eax,(%esp)
mov    0x70(%esp),%eax
call   804a690 <__ctype_b_loc@plt+0x1880>
test   %al,%al
jne    804a995 <__ctype_b_loc@plt+0x1b85>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%esi
test   %esi,%esi
je     804a912 <__ctype_b_loc@plt+0x1b02>
mov    %eax,(%esp)
mov    0x18(%esp),%edx
mov    0x70(%esp),%eax
call   804a690 <__ctype_b_loc@plt+0x1880>
test   %al,%al
je     804aa27 <__ctype_b_loc@plt+0x1c17>
addl   $0x1,0xc(%esp)
jmp    804a995 <__ctype_b_loc@plt+0x1b85>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x37(%esp)
jne    804aac8 <__ctype_b_loc@plt+0x1cb8>
addl   $0x1,0x30(%esp)
mov    0x30(%esp),%eax
lea    0x0(,%eax,4),%esi
mov    0x38(%esp),%eax
mov    %esi,%edx
call   804a5b0 <__ctype_b_loc@plt+0x17a0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x38(%esp)
je     804aa27 <__ctype_b_loc@plt+0x1c17>
mov    (%ebx),%eax
addl   $0x1,0xc(%esp)
mov    %eax,-0x4(%edi,%esi,1)
jmp    804a9a0 <__ctype_b_loc@plt+0x1b90>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x35(%esp),%esi
mov    0x8(%ebx),%ebx
cmp    %ebx,0x8(%eax)
mov    $0x1,%eax
cmovne %eax,%esi
mov    %esi,%eax
mov    %al,0x35(%esp)
jmp    804a88f <__ctype_b_loc@plt+0x1a7f>
xchg   %ax,%ax
mov    0x18(%esp),%edx
xor    %ecx,%ecx
mov    0x70(%esp),%eax
mov    %ebp,(%esp)
addl   $0x1,0xc(%esp)
call   804a690 <__ctype_b_loc@plt+0x1880>
test   %al,%al
jne    804a9a0 <__ctype_b_loc@plt+0x1b90>
xor    %eax,%eax
jmp    804aa29 <__ctype_b_loc@plt+0x1c19>
xchg   %ax,%ax
cmpb   $0x0,0x35(%esp)
mov    0x3c(%esp),%ebp
mov    0x10(%esp),%edi
jne    804ab98 <__ctype_b_loc@plt+0x1d88>
cmpl   $0xffffffff,0x28(%esp)
je     804ac69 <__ctype_b_loc@plt+0x1e59>
mov    0x28(%esp),%eax
cmpb   $0x0,0x36(%esp)
lea    (%eax,%eax,2),%eax
je     804ab5f <__ctype_b_loc@plt+0x1d4f>
mov    0x7c(%esp),%esi
lea    (%esi,%eax,4),%ebx
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804aca0 <__ctype_b_loc@plt+0x1e90>
cmp    $0x1,%eax
lea    0x3(%ebp,%edi,1),%eax
jne    804ab40 <__ctype_b_loc@plt+0x1d30>
cmpb   $0x0,(%eax)
je     804abe0 <__ctype_b_loc@plt+0x1dd0>
mov    %eax,(%esp)
mov    (%ebx),%ecx
mov    0x18(%esp),%edx
mov    0x70(%esp),%eax
call   804a690 <__ctype_b_loc@plt+0x1880>
mov    0x2c(%esp),%edi
mov    %edi,0xc(%esp)
jmp    804aa1f <__ctype_b_loc@plt+0x1c0f>
mov    0x7c(%esp),%edi
lea    (%edi,%eax,4),%ebx
cmpl   $0x1,0x8(%ebx)
je     804abcf <__ctype_b_loc@plt+0x1dbf>
movl   $0x804f9e3,(%esp)
jmp    804ab43 <__ctype_b_loc@plt+0x1d33>
mov    0x14(%esp),%eax
mov    0x3c(%esp),%ebp
mov    0x10(%esp),%edi
mov    %eax,0x28(%esp)
jmp    804ab0e <__ctype_b_loc@plt+0x1cfe>
mov    0x70(%esp),%eax
mov    $0x804f9c0,%ecx
lea    0xc(%eax),%ebx
jmp    804a97b <__ctype_b_loc@plt+0x1b6b>
mov    0x70(%esp),%eax
mov    $0x804f964,%ecx
mov    0x24(%esp),%edi
lea    0xc(%eax),%ebx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    %ebp,%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    $0x804f948,%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
jmp    804a995 <__ctype_b_loc@plt+0x1b85>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804abe0 <__ctype_b_loc@plt+0x1dd0>
cmpb   $0x0,(%eax)
jne    804accf <__ctype_b_loc@plt+0x1ebf>
mov    0x70(%esp),%eax
mov    $0x804f96d,%ecx
mov    0x24(%esp),%edi
lea    0xc(%eax),%esi
mov    %esi,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    0x4(%ebx),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    $0x804f994,%ecx
mov    %esi,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
jmp    804a995 <__ctype_b_loc@plt+0x1b85>
mov    0x30(%esp),%edx
xor    %ebx,%ebx
lea    0x8(%eax),%esi
test   %edx,%edx
je     804acef <__ctype_b_loc@plt+0x1edf>
mov    0x38(%esp),%edi
mov    0x70(%esp),%ebp
jmp    804ac4d <__ctype_b_loc@plt+0x1e3d>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    0x30(%esp),%ebx
je     804acef <__ctype_b_loc@plt+0x1edf>
mov    (%edi,%ebx,4),%eax
xor    %ecx,%ecx
mov    %esi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   804a690 <__ctype_b_loc@plt+0x1880>
test   %al,%al
jne    804ac40 <__ctype_b_loc@plt+0x1e30>
xor    %eax,%eax
jmp    804aa29 <__ctype_b_loc@plt+0x1c19>
mov    0x70(%esp),%eax
mov    $0x804f957,%ecx
mov    0x24(%esp),%edi
lea    0xc(%eax),%ebx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    %ebp,%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    $0x804f96b,%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
jmp    804a995 <__ctype_b_loc@plt+0x1b85>
mov    0x70(%esp),%eax
mov    $0x804f96d,%ecx
mov    0x24(%esp),%edi
lea    0xc(%eax),%esi
mov    %esi,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    0x4(%ebx),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   804a630 <__ctype_b_loc@plt+0x1820>
mov    $0x804f978,%ecx
jmp    804ac0a <__ctype_b_loc@plt+0x1dfa>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edx
addl   $0x2,0xc(%esp)
mov    %eax,(%esp)
mov    0x70(%esp),%eax
mov    (%ebx),%ecx
call   804a690 <__ctype_b_loc@plt+0x1880>
jmp    804aa1f <__ctype_b_loc@plt+0x1c0f>
mov    0x70(%esp),%eax
lea    0x8(%eax),%ebx
mov    0xc(%esp),%eax
cmp    %eax,0x74(%esp)
jle    804a9c9 <__ctype_b_loc@plt+0x1bb9>
mov    0xc(%esp),%esi
mov    0x74(%esp),%edi
mov    0x78(%esp),%ebp
jmp    804ad1a <__ctype_b_loc@plt+0x1f0a>
cmp    %edi,%esi
je     804a9c9 <__ctype_b_loc@plt+0x1bb9>
add    $0x1,%esi
xor    %ecx,%ecx
mov    -0x4(%ebp,%esi,4),%eax
mov    %ebx,%edx
mov    %eax,(%esp)
mov    0x70(%esp),%eax
call   804a690 <__ctype_b_loc@plt+0x1880>
test   %al,%al
jne    804ad12 <__ctype_b_loc@plt+0x1f02>
xor    %eax,%eax
jmp    804aa29 <__ctype_b_loc@plt+0x1c19>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
jmp    804a9ae <__ctype_b_loc@plt+0x1b9e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,%eax
lea    0x8(%ebx),%edx
call   804a5e0 <__ctype_b_loc@plt+0x17d0>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804ad78 <__ctype_b_loc@plt+0x1f68>
mov    %eax,(%esp)
call   8048b00 <free@plt>
movl   $0x0,0x4(%ebx)
movl   $0x0,0xc(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
xor    %eax,%eax
mov    0x4(%esp),%ecx
test   %edx,%edx
js     804add0 <__ctype_b_loc@plt+0x1fc0>
cmp    0x8(%ecx),%edx
jge    804add0 <__ctype_b_loc@plt+0x1fc0>
mov    (%ecx),%eax
mov    (%eax,%edx,8),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    $0x804f9e3,%eax
mov    0x4(%esp),%ecx
test   %edx,%edx
js     804ae00 <__ctype_b_loc@plt+0x1ff0>
cmp    0x8(%ecx),%edx
jge    804ae00 <__ctype_b_loc@plt+0x1ff0>
mov    (%ecx),%eax
mov    0x4(%eax,%edx,8),%eax
ret
lea    0x0(%esi),%esi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x805321c,%eax
test   %eax,%eax
je     804ae29 <__ctype_b_loc@plt+0x2019>
mov    %eax,(%esp)
call   8048b00 <free@plt>
movl   $0x0,0x805321c
00
movl   $0x0,0x805320c
00
movl   $0x0,0x8053210
00
movl   $0x0,0x8053214
00
movl   $0x0,0x8053218
00
add    $0x1c,%esp
jmp    804f3d0 <__ctype_b_loc@plt+0x65c0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    0x8053214,%ecx
mov    0x8053210,%esi
push   %ebx
cmp    %ecx,%esi
jge    804aeaf <__ctype_b_loc@plt+0x209f>
mov    0x805321c,%ebx
mov    (%ebx,%esi,4),%eax
test   %eax,%eax
jne    804aeb8 <__ctype_b_loc@plt+0x20a8>
lea    0x1(%esi),%edx
jmp    804aea3 <__ctype_b_loc@plt+0x2093>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
mov    -0x4(%ebx,%edx,4),%eax
test   %eax,%eax
jne    804aeb8 <__ctype_b_loc@plt+0x20a8>
cmp    %ecx,%edx
mov    %edx,%esi
jne    804ae98 <__ctype_b_loc@plt+0x2088>
mov    %edx,0x8053210
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
mov    %esi,0x8053210
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x8053214,%eax
movl   $0x8053218,0x4(%esp)
movl   $0x805321c,(%esp)
lea    0x4(,%eax,4),%eax
mov    %eax,0x8(%esp)
call   804f610 <__ctype_b_loc@plt+0x6800>
test   %eax,%eax
je     804af30 <__ctype_b_loc@plt+0x2120>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    0x8053214,%eax
mov    0x20(%esp),%ecx
lea    0x1(%eax),%edx
mov    %edx,0x8053214
mov    0x805321c,%edx
mov    %ecx,(%edx,%eax,4)
mov    $0x1,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%ebp
cmp    %ebp,%esi
je     804afc6 <__ctype_b_loc@plt+0x21b6>
mov    0x8053214,%ecx
mov    0x805320c,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
jle    804afbb <__ctype_b_loc@plt+0x21ab>
mov    0x805321c,%edi
xor    %edx,%edx
jmp    804afa4 <__ctype_b_loc@plt+0x2194>
xchg   %ax,%ax
lea    0x0(,%eax,4),%ebx
add    %edi,%ebx
cmp    %esi,(%ebx)
je     804afb5 <__ctype_b_loc@plt+0x21a5>
add    $0x1,%edx
cmp    %ecx,%edx
je     804afbb <__ctype_b_loc@plt+0x21ab>
add    $0x1,%eax
cmp    %ecx,%eax
jl     804af90 <__ctype_b_loc@plt+0x2180>
xor    %ebx,%ebx
xor    %eax,%eax
add    %edi,%ebx
cmp    %esi,(%ebx)
jne    804af9d <__ctype_b_loc@plt+0x218d>
movl   $0x0,(%ebx)
mov    (%esi),%esi
cmp    %esi,%ebp
jne    804af80 <__ctype_b_loc@plt+0x2170>
mov    %eax,0x805320c
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x74(%esp),%eax
mov    0x70(%esp),%edi
mov    0x78(%esp),%ebx
mov    %eax,(%esp)
call   8049440 <__ctype_b_loc@plt+0x630>
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %edi,(%esp)
mov    %eax,%esi
mov    %eax,0x28(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
test   %edi,%edi
mov    %eax,%ecx
mov    %eax,0x20(%esp)
je     804b29c <__ctype_b_loc@plt+0x248c>
mov    %ebx,%eax
and    $0x2,%ebx
and    $0x4,%eax
cmp    %ecx,%esi
mov    %eax,0x2c(%esp)
mov    %ebx,%ebp
je     804b27e <__ctype_b_loc@plt+0x246e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80494d0 <__ctype_b_loc@plt+0x6c0>
test   %eax,%eax
mov    %eax,%esi
je     804b298 <__ctype_b_loc@plt+0x2488>
lea    0x1(%edi),%eax
mov    %edi,(%esp)
xor    %edi,%edi
mov    %eax,0x24(%esp)
call   80493c0 <__ctype_b_loc@plt+0x5b0>
mov    0xc(%ebx),%eax
movl   $0xa0c0807,0x3a(%esp)
movl   $0x5c0b090d,0x3e(%esp)
movb   $0x0,0x42(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
movl   $0x6e666261,0x43(%esp)
movl   $0x5c767472,0x47(%esp)
movb   $0x0,0x4b(%esp)
test   %eax,%eax
jne    804b258 <__ctype_b_loc@plt+0x2448>
lea    0x0(%esi,%eiz,1),%esi
subl   $0x1,0x18(%esp)
js     804b140 <__ctype_b_loc@plt+0x2330>
add    $0x1,%esi
test   %ebp,%ebp
movzbl -0x1(%esi),%ebx
je     804b1a8 <__ctype_b_loc@plt+0x2398>
call   804f4a0 <__ctype_b_loc@plt+0x6690>
add    $0x1,%edi
cmp    %eax,%edi
jg     804b228 <__ctype_b_loc@plt+0x2418>
lea    -0x20(%ebx),%eax
cmp    $0x5e,%al
jbe    804b198 <__ctype_b_loc@plt+0x2388>
movzbl %bl,%eax
mov    %eax,0x4(%esp)
lea    0x3a(%esp),%eax
mov    %eax,(%esp)
call   8048c80 <strchr@plt>
movl   $0x5c,(%esp)
mov    %eax,0x1c(%esp)
mov    0x80531a0,%eax
mov    %eax,0x4(%esp)
call   8048b70 <_IO_putc@plt>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     804b1c8 <__ctype_b_loc@plt+0x23b8>
test   %bl,%bl
je     804b1c8 <__ctype_b_loc@plt+0x23b8>
mov    0x80531a0,%eax
add    $0x1,%edi
mov    %eax,0x4(%esp)
lea    0x3a(%esp),%eax
sub    %eax,%ecx
movsbl 0x43(%esp,%ecx,1),%eax
mov    %eax,(%esp)
call   8048b70 <_IO_putc@plt>
subl   $0x1,0x18(%esp)
jns    804b0ab <__ctype_b_loc@plt+0x229b>
nop
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
jne    804b162 <__ctype_b_loc@plt+0x2352>
test   %ebp,%ebp
je     804b162 <__ctype_b_loc@plt+0x2352>
mov    0x80531a0,%eax
movl   $0x24,(%esp)
mov    %eax,0x4(%esp)
call   8048b70 <_IO_putc@plt>
mov    0x80531a0,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048b70 <_IO_putc@plt>
mov    0x20(%esp),%eax
mov    (%eax),%eax
cmp    %eax,0x28(%esp)
mov    %eax,0x20(%esp)
je     804b27e <__ctype_b_loc@plt+0x246e>
mov    0x24(%esp),%edi
jmp    804b038 <__ctype_b_loc@plt+0x2228>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5c,%bl
je     804b0d5 <__ctype_b_loc@plt+0x22c5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80531a0,%eax
movzbl %bl,%edx
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048b70 <_IO_putc@plt>
jmp    804b0a0 <__ctype_b_loc@plt+0x2290>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80531a0,%eax
add    $0x3,%edi
mov    %eax,0x4(%esp)
mov    %ebx,%eax
shr    $0x6,%al
movzbl %al,%eax
add    $0x30,%eax
mov    %eax,(%esp)
call   8048b70 <_IO_putc@plt>
mov    0x80531a0,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
shr    $0x3,%al
and    $0x7,%eax
add    $0x30,%eax
mov    %eax,(%esp)
call   8048b70 <_IO_putc@plt>
mov    0x80531a0,%eax
mov    %ebx,%edx
and    $0x7,%edx
add    $0x30,%edx
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048b70 <_IO_putc@plt>
jmp    804b0a0 <__ctype_b_loc@plt+0x2290>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80531a0,%eax
mov    $0x1,%edi
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804f9e4,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
jmp    804b0ca <__ctype_b_loc@plt+0x22ba>
nop
call   8049380 <__ctype_b_loc@plt+0x570>
mov    $0x8,%di
movl   $0x804f9e0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048d40 <__printf_chk@plt>
jmp    804b0a0 <__ctype_b_loc@plt+0x2290>
mov    $0x1,%eax
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804b2ac <__ctype_b_loc@plt+0x249c>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    804b283 <__ctype_b_loc@plt+0x2473>
movl   $0x804f899,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804b283 <__ctype_b_loc@plt+0x2473>
call   8048b50 <__stack_chk_fail@plt>
jmp    804b2c0 <__ctype_b_loc@plt+0x24b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
mov    $0x2,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048b60 <_IO_getc@plt>
mov    %edi,0x8(%esp)
movl   $0x8053228,0x4(%esp)
movl   $0x805322c,(%esp)
mov    %eax,%ebx
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804b3d0 <__ctype_b_loc@plt+0x25c0>
cmp    $0xffffffff,%ebx
je     804b358 <__ctype_b_loc@plt+0x2548>
mov    0x805322c,%eax
test   %ebx,%ebx
lea    0x1(%esi),%edi
mov    %bl,(%eax,%esi,1)
je     804b328 <__ctype_b_loc@plt+0x2518>
cmp    $0xa,%ebx
je     804b338 <__ctype_b_loc@plt+0x2528>
mov    %edi,%esi
lea    0x2(%edi),%edi
jmp    804b2d2 <__ctype_b_loc@plt+0x24c2>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%esi
call   80493f0 <__ctype_b_loc@plt+0x5e0>
lea    0x2(%edi),%edi
jmp    804b2d2 <__ctype_b_loc@plt+0x24c2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805322c,%eax
test   %ebp,%ebp
movb   $0x0,(%eax,%edi,1)
je     804b348 <__ctype_b_loc@plt+0x2538>
mov    %edi,0x0(%ebp)
mov    0x805322c,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048b20 <ferror@plt>
test   %eax,%eax
jne    804b39d <__ctype_b_loc@plt+0x258d>
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048c70 <feof@plt>
test   %eax,%eax
je     804b2d2 <__ctype_b_loc@plt+0x24c2>
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048da0 <clearerr@plt>
mov    0x805322c,%eax
test   %ebp,%ebp
movb   $0x0,(%eax,%esi,1)
je     804b348 <__ctype_b_loc@plt+0x2538>
mov    %esi,0x0(%ebp)
jmp    804b348 <__ctype_b_loc@plt+0x2538>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x804f9f3,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f9e7,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048da0 <clearerr@plt>
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     804b3db <__ctype_b_loc@plt+0x25cb>
movl   $0x0,0x0(%ebp)
xor    %eax,%eax
jmp    804b34d <__ctype_b_loc@plt+0x253d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    (%eax),%edx
jmp    804b40a <__ctype_b_loc@plt+0x25fa>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edi
lea    0x1(%edi),%ebx
cmpb   $0xa,-0x1(%edx,%ebx,1)
jne    804b408 <__ctype_b_loc@plt+0x25f8>
cmp    $0x1,%ebx
je     804b445 <__ctype_b_loc@plt+0x2635>
lea    -0x1(%edi),%esi
cmp    $0xffffffff,%esi
je     804b445 <__ctype_b_loc@plt+0x2635>
cmpb   $0x5c,-0x1(%edx,%edi,1)
jne    804b445 <__ctype_b_loc@plt+0x2635>
mov    %esi,%eax
xor    %ecx,%ecx
jmp    804b436 <__ctype_b_loc@plt+0x2626>
xchg   %ax,%ax
cmpb   $0x5c,(%edx,%eax,1)
jne    804b441 <__ctype_b_loc@plt+0x2631>
sub    $0x1,%eax
xor    $0x1,%ecx
cmp    $0xffffffff,%eax
jne    804b430 <__ctype_b_loc@plt+0x2620>
test   %ecx,%ecx
jne    804b468 <__ctype_b_loc@plt+0x2658>
mov    0x44(%esp),%esi
test   %esi,%esi
je     804b5b8 <__ctype_b_loc@plt+0x27a8>
mov    0x44(%esp),%eax
mov    %ebx,(%eax)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
movl   $0x8053230,0x4(%esp)
movl   $0x8053234,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
jne    804b48e <__ctype_b_loc@plt+0x267e>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x40(%esp),%eax
mov    (%eax),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8053234,%eax
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
mov    0x48(%esp),%ebx
mov    0x8053234,%eax
test   %ebx,%ebx
movb   $0xa,-0x1(%eax,%edi,1)
cmove  %edi,%esi
lea    0x1c(%esp),%ebx
mov    %ebx,(%esp)
call   804b2c0 <__ctype_b_loc@plt+0x24b0>
test   %eax,%eax
mov    %eax,%edi
je     804b484 <__ctype_b_loc@plt+0x2674>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804b5c5 <__ctype_b_loc@plt+0x27b5>
cmpb   $0xa,-0x1(%edi,%eax,1)
jne    804b5c5 <__ctype_b_loc@plt+0x27b5>
add    %esi,%eax
mov    %eax,0x8(%esp)
movl   $0x8053230,0x4(%esp)
movl   $0x8053234,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804b484 <__ctype_b_loc@plt+0x2674>
mov    0x8053234,%eax
mov    0x1c(%esp),%edx
mov    %edi,0x4(%esp)
add    %esi,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
mov    0x1c(%esp),%eax
cmp    $0x1,%eax
lea    (%esi,%eax,1),%edi
jle    804b570 <__ctype_b_loc@plt+0x2760>
mov    %edi,%ebp
mov    0x8053234,%ecx
sub    $0x2,%ebp
lea    -0x1(%edi),%esi
js     804b570 <__ctype_b_loc@plt+0x2760>
cmpb   $0x5c,-0x2(%ecx,%edi,1)
jne    804b570 <__ctype_b_loc@plt+0x2760>
mov    %ebp,%eax
xor    %edx,%edx
jmp    804b54e <__ctype_b_loc@plt+0x273e>
nop
cmpb   $0x5c,(%ecx,%eax,1)
jne    804b559 <__ctype_b_loc@plt+0x2749>
sub    $0x1,%eax
xor    $0x1,%edx
cmp    $0xffffffff,%eax
jne    804b548 <__ctype_b_loc@plt+0x2738>
test   %edx,%edx
je     804b570 <__ctype_b_loc@plt+0x2760>
movb   $0xa,-0x1(%ecx,%esi,1)
mov    0x48(%esp),%ecx
test   %ecx,%ecx
cmovne %ebp,%esi
jmp    804b4c0 <__ctype_b_loc@plt+0x26b0>
lea    0x1(%edi),%eax
mov    %eax,0x8(%esp)
movl   $0x8053230,0x4(%esp)
movl   $0x8053234,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804b484 <__ctype_b_loc@plt+0x2674>
mov    0x8053234,%eax
mov    0x44(%esp),%edx
mov    0x40(%esp),%esi
movb   $0x0,(%eax,%edi,1)
mov    0x8053234,%eax
test   %edx,%edx
mov    %eax,(%esi)
je     804b5b8 <__ctype_b_loc@plt+0x27a8>
mov    0x44(%esp),%eax
mov    %edi,(%eax)
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x804f9f9,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804b486 <__ctype_b_loc@plt+0x2676>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
cmpb   $0x21,(%eax)
je     804b8b0 <__ctype_b_loc@plt+0x2aa0>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804f770 <__ctype_b_loc@plt+0x6960>
movl   $0x805016d,0x4(%esp)
mov    %eax,(%esp)
call   8048ce0 <fopen@plt>
mov    %eax,%esi
test   %esi,%esi
je     804b8ca <__ctype_b_loc@plt+0x2aba>
mov    0x54(%esp),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,%edi
call   80493e0 <__ctype_b_loc@plt+0x5d0>
mov    %eax,0x28(%esp)
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    %eax,0x2c(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80493c0 <__ctype_b_loc@plt+0x5b0>
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
xor    %ebx,%ebx
lea    0x0(%esi),%esi
lea    0x2(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x8053220,0x4(%esp)
movl   $0x8053224,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804b738 <__ctype_b_loc@plt+0x2928>
mov    %esi,(%esp)
call   8048b60 <_IO_getc@plt>
cmp    $0xffffffff,%eax
je     804b748 <__ctype_b_loc@plt+0x2938>
mov    0x8053224,%edx
add    $0x1,%ebx
test   %eax,%eax
mov    %al,-0x1(%edx,%ebx,1)
je     804b708 <__ctype_b_loc@plt+0x28f8>
cmp    $0xa,%eax
jne    804b660 <__ctype_b_loc@plt+0x2850>
mov    0x8053224,%eax
movb   $0x0,(%eax,%ebx,1)
mov    0x8053224,%edx
test   %edx,%edx
mov    %edx,0x1c(%esp)
je     804b738 <__ctype_b_loc@plt+0x2928>
add    %ebx,0x20(%esp)
call   804f420 <__ctype_b_loc@plt+0x6610>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    0x1c(%esp),%edx
add    0x24(%esp),%ebx
mov    %edx,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
call   8049840 <__ctype_b_loc@plt+0xa30>
test   %eax,%eax
je     804b87b <__ctype_b_loc@plt+0x2a6b>
test   %ebp,%ebp
mov    (%edi),%edi
je     804b851 <__ctype_b_loc@plt+0x2a41>
mov    %edi,0x8(%ebp)
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
jmp    804b658 <__ctype_b_loc@plt+0x2848>
xchg   %ax,%ax
call   80493f0 <__ctype_b_loc@plt+0x5e0>
lea    0x0(%esi),%esi
jmp    804b660 <__ctype_b_loc@plt+0x2850>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804fa27,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8053224,%eax
movb   $0x0,(%eax,%ebx,1)
mov    %esi,(%esp)
call   8048b20 <ferror@plt>
test   %eax,%eax
jne    804b715 <__ctype_b_loc@plt+0x2905>
test   %ebx,%ebx
jne    804b885 <__ctype_b_loc@plt+0x2a75>
mov    0x8053224,%ebp
test   %ebp,%ebp
je     804b738 <__ctype_b_loc@plt+0x2928>
mov    0x2c(%esp),%eax
cmp    %eax,0x54(%esp)
sete   %al
test   %al,%al
movzbl %al,%ebx
je     804b795 <__ctype_b_loc@plt+0x2985>
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     804b795 <__ctype_b_loc@plt+0x2985>
mov    0x20(%esp),%edx
test   %edx,%edx
jne    804b960 <__ctype_b_loc@plt+0x2b50>
mov    0x24(%esp),%eax
test   %eax,%eax
je     804b7cf <__ctype_b_loc@plt+0x29bf>
test   %ebx,%ebx
je     804b7aa <__ctype_b_loc@plt+0x299a>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
jne    804b7cf <__ctype_b_loc@plt+0x29bf>
mov    0x8053180,%eax
movl   $0x11,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804fa50,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804b8f8 <__ctype_b_loc@plt+0x2ae8>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    804b8f8 <__ctype_b_loc@plt+0x2ae8>
mov    0x24(%esp),%eax
test   %eax,%eax
je     804b8f8 <__ctype_b_loc@plt+0x2ae8>
test   %ebx,%ebx
je     804b9d4 <__ctype_b_loc@plt+0x2bc4>
mov    0x20(%esp),%edi
test   %edi,%edi
jne    804b918 <__ctype_b_loc@plt+0x2b08>
call   8049430 <__ctype_b_loc@plt+0x620>
mov    0x20(%esp),%ebx
mov    0x50(%esp),%eax
cmpb   $0x21,(%eax)
mov    %esi,(%esp)
je     804b92b <__ctype_b_loc@plt+0x2b1b>
call   8048b30 <fclose@plt>
test   %eax,%eax
jne    804b9a7 <__ctype_b_loc@plt+0x2b97>
xchg   %ax,%ax
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
je     804b93a <__ctype_b_loc@plt+0x2b2a>
lea    0x0(%esi),%esi
call   8049380 <__ctype_b_loc@plt+0x570>
sub    0x54(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%ebx
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %ebx,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
mov    %eax,%ebp
jne    804b6fc <__ctype_b_loc@plt+0x28ec>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
jmp    804b738 <__ctype_b_loc@plt+0x2928>
mov    0x8053224,%eax
movb   $0xa,(%eax,%ebx,1)
mov    0x8053224,%eax
movb   $0x0,0x1(%eax,%ebx,1)
call   80493e0 <__ctype_b_loc@plt+0x5d0>
movl   $0x1,0x24(%esp)
cmp    $0x1,%eax
adc    $0x0,%ebx
jmp    804b6b3 <__ctype_b_loc@plt+0x28a3>
add    $0x1,%eax
movl   $0x805016d,0x4(%esp)
mov    %eax,(%esp)
call   8048b40 <popen@plt>
mov    %eax,%esi
jmp    804b612 <__ctype_b_loc@plt+0x2802>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804fa10,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
jmp    804b73d <__ctype_b_loc@plt+0x292d>
nop
mov    0x20(%esp),%eax
test   %eax,%eax
jne    804b910 <__ctype_b_loc@plt+0x2b00>
test   %ebx,%ebx
jne    804b808 <__ctype_b_loc@plt+0x29f8>
jmp    804b811 <__ctype_b_loc@plt+0x2a01>
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     804b80d <__ctype_b_loc@plt+0x29fd>
mov    0x24(%esp),%eax
test   %eax,%eax
xchg   %ax,%ax
je     804b80d <__ctype_b_loc@plt+0x29fd>
jmp    804b808 <__ctype_b_loc@plt+0x29f8>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8048c60 <pclose@plt>
jmp    804b826 <__ctype_b_loc@plt+0x2a16>
mov    0x8053180,%eax
mov    %ebx,0xc(%esp)
movl   $0x804fa7a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
jmp    804b83d <__ctype_b_loc@plt+0x2a2d>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804b795 <__ctype_b_loc@plt+0x2985>
lea    0x0(%esi,%eiz,1),%esi
call   8049420 <__ctype_b_loc@plt+0x610>
test   %eax,%eax
je     804b795 <__ctype_b_loc@plt+0x2985>
mov    0x8053180,%eax
movl   $0x11,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804fa3e,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
jmp    804b7cf <__ctype_b_loc@plt+0x29bf>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804fa62,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
jmp    804b73d <__ctype_b_loc@plt+0x292d>
addl   $0x1,0x20(%esp)
jmp    804b80d <__ctype_b_loc@plt+0x29fd>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
cmpb   $0x21,(%eax)
je     804bb50 <__ctype_b_loc@plt+0x2d40>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804f770 <__ctype_b_loc@plt+0x6960>
mov    0x44(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048ce0 <fopen@plt>
mov    %eax,%esi
test   %esi,%esi
je     804bc02 <__ctype_b_loc@plt+0x2df2>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    0x48(%esp),%ebx
test   %ebx,%ebx
setne  %dl
mov    %eax,%edi
mov    0x4c(%esp),%eax
cmp    %eax,0x48(%esp)
setle  %al
and    %al,%dl
mov    %dl,0x1f(%esp)
je     804bbfb <__ctype_b_loc@plt+0x2deb>
mov    0x48(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   80494d0 <__ctype_b_loc@plt+0x6c0>
test   %eax,%eax
mov    %eax,%ebp
je     804bb43 <__ctype_b_loc@plt+0x2d33>
mov    0xc(%edi),%ebx
call   80493d0 <__ctype_b_loc@plt+0x5c0>
cmp    0x10(%esp),%eax
je     804bb70 <__ctype_b_loc@plt+0x2d60>
lea    0x1(%ebx),%eax
mov    %eax,0x14(%esp)
movb   $0xa,0x0(%ebp,%ebx,1)
mov    0x14(%esp),%ebx
jmp    804baa8 <__ctype_b_loc@plt+0x2c98>
xchg   %ax,%ax
add    $0x1,%ebp
mov    %esi,0x4(%esp)
movsbl -0x1(%ebp),%eax
mov    %eax,(%esp)
call   8048d80 <fputc@plt>
cmp    $0xffffffff,%eax
je     804bb20 <__ctype_b_loc@plt+0x2d10>
sub    $0x1,%ebx
jns    804ba90 <__ctype_b_loc@plt+0x2c80>
mov    0x14(%esp),%eax
addl   $0x1,0x10(%esp)
add    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %eax,0x4c(%esp)
mov    (%edi),%edi
jl     804baca <__ctype_b_loc@plt+0x2cba>
test   %eax,%eax
jne    804ba58 <__ctype_b_loc@plt+0x2c48>
mov    0x18(%esp),%ebx
test   %ebx,%ebx
js     804bb43 <__ctype_b_loc@plt+0x2d33>
mov    0x40(%esp),%eax
cmpb   $0x21,(%eax)
mov    %esi,(%esp)
je     804bb98 <__ctype_b_loc@plt+0x2d88>
call   8048b30 <fclose@plt>
test   %eax,%eax
jne    804bbce <__ctype_b_loc@plt+0x2dbe>
nop
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
je     804bba8 <__ctype_b_loc@plt+0x2d98>
xor    %eax,%eax
cmpb   $0x0,0x1f(%esp)
je     804bb48 <__ctype_b_loc@plt+0x2d38>
mov    0x4c(%esp),%eax
sub    0x48(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
add    $0x1,%eax
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804fa99,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%eax
movl   $0x804fa7f,0x4(%esp)
mov    %eax,(%esp)
call   8048b40 <popen@plt>
mov    %eax,%esi
jmp    804ba12 <__ctype_b_loc@plt+0x2c02>
lea    0x0(%esi),%esi
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804ba7c <__ctype_b_loc@plt+0x2c6c>
lea    0x0(%esi),%esi
call   8049420 <__ctype_b_loc@plt+0x610>
test   %eax,%eax
je     804ba7c <__ctype_b_loc@plt+0x2c6c>
mov    %ebx,0x14(%esp)
jmp    804ba88 <__ctype_b_loc@plt+0x2c78>
xchg   %ax,%ax
call   8048c60 <pclose@plt>
lea    0x0(%esi),%esi
jmp    804bae7 <__ctype_b_loc@plt+0x2cd7>
lea    0x0(%esi),%esi
mov    0x8053180,%eax
mov    %ebx,0xc(%esp)
movl   $0x804fa7a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
jmp    804bafd <__ctype_b_loc@plt+0x2ced>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804faab,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
jmp    804bb48 <__ctype_b_loc@plt+0x2d38>
xor    %ebx,%ebx
jmp    804bad2 <__ctype_b_loc@plt+0x2cc2>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804fa81,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    $0xffffffff,%eax
jmp    804bb48 <__ctype_b_loc@plt+0x2d38>
nop
sub    $0x2c,%esp
test   %eax,%eax
je     804bc3c <__ctype_b_loc@plt+0x2e2c>
cmpb   $0x0,(%eax)
jne    804bc6a <__ctype_b_loc@plt+0x2e5a>
test   %edx,%edx
je     804bc66 <__ctype_b_loc@plt+0x2e56>
mov    0x8053244,%eax
movl   $0x804fba4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8053180,%eax
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
mov    %eax,0x10(%esp)
mov    0x8053180,%eax
movl   $0x80502d3,0xc(%esp)
movl   $0x804fac4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   8048dc0 <__fprintf_chk@plt>
mov    0x8053180,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <fputc@plt>
mov    0x1c(%esp),%edx
jmp    804bc3c <__ctype_b_loc@plt+0x2e2c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8053240,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805323c,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8053238,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805323c,%edx
mov    0x20(%esp),%eax
test   %edx,%edx
jne    804bd37 <__ctype_b_loc@plt+0x2f27>
test   %eax,%eax
je     804bd0a <__ctype_b_loc@plt+0x2efa>
cmpb   $0x0,(%eax)
jne    804bd40 <__ctype_b_loc@plt+0x2f30>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8048c30 <strerror@plt>
movl   $0x80502e7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8053180,%eax
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    0x8053180,%eax
movl   $0x804facb,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
jmp    804bd0a <__ctype_b_loc@plt+0x2efa>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x7c,%esp
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8048c10 <__fxstat@plt>
mov    $0x1,%edx
test   %eax,%eax
jne    804bdae <__ctype_b_loc@plt+0x2f9e>
mov    0x28(%esp),%eax
xor    %edx,%edx
and    $0xf000,%eax
cmp    $0x8000,%eax
sete   %dl
mov    %edx,%eax
add    $0x7c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x8053240,%ecx
mov    $0x1,%eax
mov    0x20(%esp),%edx
test   %ecx,%ecx
je     804bdfb <__ctype_b_loc@plt+0x2feb>
movzbl (%edx),%eax
cmp    $0x21,%al
je     804bded <__ctype_b_loc@plt+0x2fdd>
cmp    $0x2e,%al
jne    804be00 <__ctype_b_loc@plt+0x2ff0>
cmpb   $0x2e,0x1(%edx)
jne    804be00 <__ctype_b_loc@plt+0x2ff0>
cmpb   $0x0,0x2(%edx)
jne    804be00 <__ctype_b_loc@plt+0x2ff0>
movl   $0x804fad0,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
add    $0x1c,%esp
ret
nop
movl   $0x2f,0x4(%esp)
mov    %edx,(%esp)
call   8048c80 <strchr@plt>
test   %eax,%eax
jne    804bded <__ctype_b_loc@plt+0x2fdd>
mov    $0x1,%eax
jmp    804bdfb <__ctype_b_loc@plt+0x2feb>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
mov    %eax,%ebx
sub    $0x8,%esp
call   8048e10 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    804be37 <__ctype_b_loc@plt+0x3027>
nop
cmp    $0xa,%al
je     804be44 <__ctype_b_loc@plt+0x3034>
add    $0x1,%ebx
movzbl (%ebx),%eax
movzbl %al,%edx
testb  $0x20,0x1(%ecx,%edx,2)
jne    804be30 <__ctype_b_loc@plt+0x3020>
add    $0x8,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
call   8049380 <__ctype_b_loc@plt+0x570>
mov    (%ebx),%esi
mov    %eax,0x8053310
mov    %eax,0x8053314
call   8048e10 <__ctype_b_loc@plt>
movl   $0x0,0x18(%esp)
mov    %eax,0x14(%esp)
mov    %esi,%eax
lea    0x0(%esi),%esi
call   804be20 <__ctype_b_loc@plt+0x3010>
mov    $0x1,%ebp
mov    %eax,(%ebx)
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
mov    (%ebx),%ecx
mov    %eax,0x28(%esp)
mov    0x14(%esp),%eax
mov    (%eax),%eax
movzbl (%ecx),%edx
movzbl %dl,%edi
testb  $0x8,0x1(%eax,%edi,2)
je     804bf10 <__ctype_b_loc@plt+0x3100>
test   %ebp,%ebp
jne    804c0fa <__ctype_b_loc@plt+0x32ea>
movl   $0x50,0x8(%esp)
movl   $0x804f899,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%ecx
movb   $0x0,0x805336f
cmpl   $0x1,0x18(%esp)
mov    0x8053310,%eax
je     804bef0 <__ctype_b_loc@plt+0x30e0>
cmp    %eax,%ecx
je     804bef5 <__ctype_b_loc@plt+0x30e5>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8053314
cmp    $0xfffffffe,%ecx
mov    $0xffffffff,%eax
cmovne 0x18(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x9(%edx),%eax
cmp    $0x36,%al
ja     804bfb0 <__ctype_b_loc@plt+0x31a0>
movzbl %al,%eax
jmp    *0x80502ec(,%eax,4)
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     804beb4 <__ctype_b_loc@plt+0x30a4>
xor    %eax,%eax
cmp    $0x2f,%dl
sete   %al
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804e9c0 <__ctype_b_loc@plt+0x5bb0>
test   %eax,%eax
mov    %eax,0x28(%esp)
js     804c0dc <__ctype_b_loc@plt+0x32cc>
mov    (%ebx),%ecx
movsbl (%ecx),%eax
cmp    %eax,%edi
je     804c0e8 <__ctype_b_loc@plt+0x32d8>
mov    0x14(%esp),%eax
mov    (%eax),%eax
xor    %ebp,%ebp
jmp    804be9f <__ctype_b_loc@plt+0x308f>
xchg   %ax,%ax
test   %ebp,%ebp
je     804beb4 <__ctype_b_loc@plt+0x30a4>
lea    0x2(%ecx),%eax
mov    %eax,(%ebx)
movsbl 0x1(%ecx),%eax
sub    $0x61,%eax
cmp    $0x19,%eax
ja     804c15a <__ctype_b_loc@plt+0x334a>
mov    0x80532a0(,%eax,4),%eax
mov    %eax,(%esp)
call   8049470 <__ctype_b_loc@plt+0x660>
test   %eax,%eax
mov    %eax,0x28(%esp)
js     804c0dc <__ctype_b_loc@plt+0x32cc>
mov    (%ebx),%ecx
jmp    804bf59 <__ctype_b_loc@plt+0x3149>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
jne    804c187 <__ctype_b_loc@plt+0x3377>
cmp    %ecx,%esi
je     804c146 <__ctype_b_loc@plt+0x3336>
mov    0x28(%esp),%eax
test   %eax,%eax
js     804beb4 <__ctype_b_loc@plt+0x30a4>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    0x28(%esp),%ecx
cmp    %ecx,%eax
jl     804beb4 <__ctype_b_loc@plt+0x30a4>
addl   $0x1,0x18(%esp)
test   %ecx,%ecx
js     804bedc <__ctype_b_loc@plt+0x30cc>
mov    0x8053310,%eax
mov    %ecx,0x8053310
mov    %eax,0x8053314
mov    (%ebx),%eax
movzbl (%eax),%edx
cmp    $0x3b,%dl
jne    804c0a0 <__ctype_b_loc@plt+0x3290>
cmp    $0x3b,%dl
je     804c090 <__ctype_b_loc@plt+0x3280>
add    $0x1,%eax
mov    %eax,(%ebx)
jmp    804be80 <__ctype_b_loc@plt+0x3070>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     804beb4 <__ctype_b_loc@plt+0x30a4>
add    $0x1,%ecx
cmp    $0x2e,%dl
mov    %ecx,(%ebx)
je     804c150 <__ctype_b_loc@plt+0x3340>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    %eax,0x28(%esp)
mov    0x14(%esp),%eax
xor    %ebp,%ebp
mov    (%ebx),%ecx
mov    (%eax),%eax
jmp    804be9f <__ctype_b_loc@plt+0x308f>
xchg   %ax,%ax
lea    0x1(%ecx),%eax
mov    %eax,(%ebx)
mov    %edx,0x1c(%esp)
call   804be20 <__ctype_b_loc@plt+0x3010>
mov    0x1c(%esp),%edx
mov    %eax,(%ebx)
mov    %eax,%ecx
mov    0x14(%esp),%eax
movzbl (%ecx),%edi
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edi,2)
jne    804c0c0 <__ctype_b_loc@plt+0x32b0>
cmp    $0x2b,%dl
je     804c119 <__ctype_b_loc@plt+0x3309>
cmp    $0x2d,%dl
jne    804bf5f <__ctype_b_loc@plt+0x314f>
subl   $0x1,0x28(%esp)
xor    %ebp,%ebp
jmp    804be9f <__ctype_b_loc@plt+0x308f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   80493c0 <__ctype_b_loc@plt+0x5b0>
mov    (%ebx),%eax
jmp    804c009 <__ctype_b_loc@plt+0x31f9>
nop
cmp    $0x2c,%dl
je     804c000 <__ctype_b_loc@plt+0x31f0>
cmpl   $0x1,0x18(%esp)
mov    %ecx,%eax
jne    804bef5 <__ctype_b_loc@plt+0x30e5>
jmp    804bef0 <__ctype_b_loc@plt+0x30e0>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804f4c0 <__ctype_b_loc@plt+0x66b0>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    804c125 <__ctype_b_loc@plt+0x3315>
mov    $0xfffffffe,%ecx
jmp    804bedc <__ctype_b_loc@plt+0x30cc>
xchg   %ax,%ax
mov    0x14(%esp),%eax
add    $0x1,%ecx
xor    %ebp,%ebp
mov    %ecx,(%ebx)
mov    (%eax),%eax
jmp    804be9f <__ctype_b_loc@plt+0x308f>
lea    0x28(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804f4c0 <__ctype_b_loc@plt+0x66b0>
test   %eax,%eax
je     804c0dc <__ctype_b_loc@plt+0x32cc>
mov    (%ebx),%ecx
jmp    804bf59 <__ctype_b_loc@plt+0x3149>
addl   $0x1,0x28(%esp)
xor    %ebp,%ebp
jmp    804be9f <__ctype_b_loc@plt+0x308f>
mov    0x2c(%esp),%eax
mov    %eax,%ecx
neg    %ecx
cmp    $0x2d,%dl
cmove  %ecx,%eax
mov    (%ebx),%ecx
xor    %ebp,%ebp
add    %eax,0x28(%esp)
mov    0x14(%esp),%eax
mov    (%eax),%eax
jmp    804be9f <__ctype_b_loc@plt+0x308f>
mov    $0xffffffff,%ecx
jmp    804bedc <__ctype_b_loc@plt+0x30cc>
call   8049380 <__ctype_b_loc@plt+0x570>
jmp    804c033 <__ctype_b_loc@plt+0x3223>
movl   $0x50,0x8(%esp)
movl   $0x8050158,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%ecx
movb   $0x0,0x805336f
jmp    804bedc <__ctype_b_loc@plt+0x30cc>
add    $0x1,%ecx
mov    $0x1,%eax
addl   $0x1,0x18(%esp)
cmp    $0x3b,%dl
mov    %ecx,(%ebx)
jne    804c1a0 <__ctype_b_loc@plt+0x3390>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,0x8053310
jmp    804c02e <__ctype_b_loc@plt+0x321e>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
test   %ecx,%ecx
je     804c1f8 <__ctype_b_loc@plt+0x33e8>
mov    0x8053314,%eax
test   %eax,%eax
jle    804c1c8 <__ctype_b_loc@plt+0x33b8>
cmp    %eax,0x8053310
jge    804c208 <__ctype_b_loc@plt+0x33f8>
movl   $0x50,0x8(%esp)
movl   $0x804f899,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0x805336f
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8053314
mov    %edx,0x8053310
jmp    804c1bc <__ctype_b_loc@plt+0x33ac>
lea    0x0(%esi),%esi
call   80493d0 <__ctype_b_loc@plt+0x5c0>
cmp    0x8053310,%eax
jl     804c1c8 <__ctype_b_loc@plt+0x33b8>
mov    $0x1,%eax
jmp    804c1ed <__ctype_b_loc@plt+0x33dd>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %eax,%edi
push   %esi
sub    $0x4,%esp
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
add    $0x4,%esp
mov    %edi,%ecx
mov    %esi,%edx
pop    %esi
pop    %edi
jmp    804c1b0 <__ctype_b_loc@plt+0x33a0>
jmp    804c250 <__ctype_b_loc@plt+0x3440>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
call   804bcc0 <__ctype_b_loc@plt+0x2eb0>
test   %eax,%eax
jne    804c55f <__ctype_b_loc@plt+0x374f>
lea    0x1c(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804b3f0 <__ctype_b_loc@plt+0x25e0>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    0x1c(%esp),%eax
movl   $0x805326c,0x4(%esp)
mov    (%esi),%edi
movl   $0x8053270,(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    0x8053270,%eax
mov    $0x1,%ebx
movb   $0x21,(%eax)
mov    (%esi),%ecx
xchg   %ax,%ax
movzbl (%ecx),%eax
cmp    $0xa,%al
je     804c375 <__ctype_b_loc@plt+0x3565>
cmp    $0x21,%al
je     804c450 <__ctype_b_loc@plt+0x3640>
cmp    $0x25,%al
jne    804c3f0 <__ctype_b_loc@plt+0x35e0>
cmpb   $0x0,0x8053380
je     804c58c <__ctype_b_loc@plt+0x377c>
movl   $0x8053380,(%esp)
call   804f770 <__ctype_b_loc@plt+0x6960>
mov    %eax,(%esp)
mov    %eax,%edi
call   8048c90 <strlen@plt>
movl   $0x805326c,0x4(%esp)
movl   $0x8053270,(%esp)
lea    (%ebx,%eax,1),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x1c(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    0x1c(%esp),%edx
lea    -0x1(%edx),%eax
test   %edx,%edx
mov    %eax,0x1c(%esp)
mov    %ebx,%edx
je     804c361 <__ctype_b_loc@plt+0x3551>
mov    %edi,%eax
sub    %ebx,%eax
lea    0x0(%esi),%esi
add    $0x1,%edx
mov    0x8053270,%ebx
movzbl -0x1(%eax,%edx,1),%ecx
mov    %cl,-0x1(%ebx,%edx,1)
mov    0x1c(%esp),%ecx
lea    -0x1(%ecx),%ebx
test   %ecx,%ecx
mov    %ebx,0x1c(%esp)
jne    804c340 <__ctype_b_loc@plt+0x3530>
mov    (%esi),%edi
mov    %edx,%ebx
lea    0x1(%edi),%ecx
mov    %ecx,(%esi)
movzbl (%ecx),%eax
cmp    $0xa,%al
jne    804c2cb <__ctype_b_loc@plt+0x34bb>
add    $0x1,%ecx
mov    %ecx,(%esi)
add    $0x1,%ecx
cmpb   $0xa,-0x1(%ecx)
je     804c378 <__ctype_b_loc@plt+0x3568>
lea    0x1(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x8053260,0x4(%esp)
movl   $0x8053268,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    0x8053270,%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8053268,%eax
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
mov    0x8053268,%eax
mov    %ebx,0x8053264
movb   $0x0,(%eax,%ebx,1)
movzbl (%edi),%eax
and    $0xfffffffb,%eax
cmp    $0x21,%al
je     804c54a <__ctype_b_loc@plt+0x373a>
mov    0x8053268,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x2(%ebx),%ebp
mov    %ebp,0x8(%esp)
movl   $0x805326c,0x4(%esp)
movl   $0x8053270,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    (%esi),%eax
movzbl (%eax),%edx
mov    0x8053270,%eax
mov    %dl,(%eax,%ebx,1)
mov    (%esi),%eax
add    $0x1,%ebx
lea    0x1(%eax),%ecx
mov    %ecx,(%esi)
cmpb   $0x5c,(%eax)
jne    804c2c0 <__ctype_b_loc@plt+0x34b0>
lea    0x2(%eax),%edx
add    0x8053270,%ebx
mov    %edx,(%esi)
movzbl 0x1(%eax),%eax
mov    %al,(%ebx)
mov    %ebp,%ebx
mov    (%esi),%ecx
jmp    804c2c0 <__ctype_b_loc@plt+0x34b0>
lea    0x0(%esi),%esi
cmp    %ecx,%edi
je     804c498 <__ctype_b_loc@plt+0x3688>
lea    0x1(%ebx),%ebp
mov    %ebp,0x8(%esp)
movl   $0x805326c,0x4(%esp)
movl   $0x8053270,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    (%esi),%eax
add    0x8053270,%ebx
lea    0x1(%eax),%edx
mov    %edx,(%esi)
movzbl (%eax),%eax
mov    %al,(%ebx)
mov    %ebp,%ebx
mov    (%esi),%ecx
jmp    804c2c0 <__ctype_b_loc@plt+0x34b0>
lea    0x0(%esi),%esi
mov    0x8053268,%edx
test   %edx,%edx
je     804c51c <__ctype_b_loc@plt+0x370c>
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
je     804c4b6 <__ctype_b_loc@plt+0x36a6>
mov    0x8053268,%eax
cmpb   $0x0,0x1(%eax)
je     804c51c <__ctype_b_loc@plt+0x370c>
mov    0x8053264,%eax
movl   $0x805326c,0x4(%esp)
movl   $0x8053270,(%esp)
add    %ebx,%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c540 <__ctype_b_loc@plt+0x3730>
mov    0x8053268,%edx
mov    0x8053264,%edi
lea    0x1(%edx),%eax
add    %edi,%edx
cmp    %edx,%eax
jae    804c510 <__ctype_b_loc@plt+0x3700>
xchg   %ax,%ax
add    $0x1,%eax
movzbl -0x1(%eax),%edx
add    $0x1,%ebx
mov    0x8053270,%ecx
mov    %dl,-0x1(%ecx,%ebx,1)
mov    0x8053268,%edx
add    %edi,%edx
cmp    %edx,%eax
jb     804c4f0 <__ctype_b_loc@plt+0x36e0>
mov    (%esi),%edi
lea    0x1(%edi),%ecx
mov    %ecx,(%esi)
jmp    804c2c0 <__ctype_b_loc@plt+0x34b0>
movl   $0x50,0x8(%esp)
movl   $0x805016f,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
nop
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8053268,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   8048c00 <puts@plt>
jmp    804c3dd <__ctype_b_loc@plt+0x35cd>
movl   $0x50,0x8(%esp)
movl   $0x804fad0,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0x805336f
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x50,0x8(%esp)
movl   $0x8050183,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0x805336f
jmp    804c542 <__ctype_b_loc@plt+0x3732>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
movl   $0x0,(%esp)
call   80496b0 <__ctype_b_loc@plt+0x8a0>
mov    %eax,%edi
mov    (%ebx),%eax
call   804be20 <__ctype_b_loc@plt+0x3010>
mov    %eax,(%ebx)
cmpb   $0xa,(%eax)
je     804c6c8 <__ctype_b_loc@plt+0x38b8>
lea    0x1c(%esp),%eax
xor    %esi,%esi
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x0,0x1c(%esp)
call   804b3f0 <__ctype_b_loc@plt+0x25e0>
test   %eax,%eax
je     804c6aa <__ctype_b_loc@plt+0x389a>
mov    (%ebx),%eax
cmpb   $0x21,(%eax)
je     804c740 <__ctype_b_loc@plt+0x3930>
cmp    0x1c(%esp),%edi
jl     804c710 <__ctype_b_loc@plt+0x3900>
add    $0x1,%edi
mov    %edi,0x8(%esp)
movl   $0x8053274,0x4(%esp)
movl   $0x8053278,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c6b8 <__ctype_b_loc@plt+0x38a8>
mov    (%ebx),%eax
xor    %edx,%edx
movzbl (%eax),%eax
cmp    $0xa,%al
je     804c673 <__ctype_b_loc@plt+0x3863>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053278,%ecx
mov    %al,(%ecx,%edx,1)
mov    (%ebx),%eax
add    $0x1,%edx
lea    0x1(%eax),%ecx
mov    %ecx,(%ebx)
movzbl 0x1(%eax),%eax
cmp    $0xa,%al
jne    804c658 <__ctype_b_loc@plt+0x3848>
mov    0x8053278,%eax
movb   $0x0,(%eax,%edx,1)
mov    (%ebx),%eax
cmpb   $0xa,(%eax)
lea    0x1(%eax),%edx
jne    804c693 <__ctype_b_loc@plt+0x3883>
xchg   %ax,%ax
mov    %edx,(%ebx)
add    $0x1,%edx
cmpb   $0xa,-0x1(%edx)
je     804c688 <__ctype_b_loc@plt+0x3878>
mov    0x8053278,%eax
mov    %eax,(%esp)
call   804bdc0 <__ctype_b_loc@plt+0x2fb0>
mov    0x8053278,%esi
test   %eax,%eax
je     804c6b8 <__ctype_b_loc@plt+0x38a8>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %esi,%esi
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
jne    804c627 <__ctype_b_loc@plt+0x3817>
cmpb   $0x0,0x8053380
jne    804c627 <__ctype_b_loc@plt+0x3817>
movl   $0x50,0x8(%esp)
xor    %esi,%esi
movl   $0x8050183,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804c6aa <__ctype_b_loc@plt+0x389a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x50,0x8(%esp)
movl   $0x8050197,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    %esi,%eax
movb   $0x0,0x805336f
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    %eax,(%ebx)
mov    %ebx,%eax
call   804c250 <__ctype_b_loc@plt+0x3440>
mov    %eax,%esi
jmp    804c6aa <__ctype_b_loc@plt+0x389a>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
call   8048e10 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%ebx,2)
je     804c780 <__ctype_b_loc@plt+0x3970>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x50,0x8(%esp)
movl   $0x80501a9,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0x1,%eax
movb   $0x0,0x805336f
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8053314,%edi
mov    0x8053310,%esi
call   804be50 <__ctype_b_loc@plt+0x3040>
mov    %eax,%ebx
xor    %eax,%eax
test   %ebx,%ebx
js     804c80f <__ctype_b_loc@plt+0x39ff>
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
je     804c7e2 <__ctype_b_loc@plt+0x39d2>
test   %ebx,%ebx
lea    0x0(%esi),%esi
je     804c848 <__ctype_b_loc@plt+0x3a38>
mov    0x8053310,%ecx
test   %ecx,%ecx
js     804c818 <__ctype_b_loc@plt+0x3a08>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    0x8053310,%edx
cmp    %edx,%eax
jl     804c818 <__ctype_b_loc@plt+0x3a08>
mov    %edx,0x0(%ebp)
mov    $0x1,%eax
mov    %edi,0x8053314
mov    %esi,0x8053310
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x50,0x8(%esp)
movl   $0x804f899,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0x805336f
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x50,0x8(%esp)
movl   $0x80501c3,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0x805336f
jmp    804c80f <__ctype_b_loc@plt+0x39ff>
nop
push   %ebx
sub    $0x18,%esp
mov    (%eax),%ecx
jmp    804c88a <__ctype_b_loc@plt+0x3a7a>
cmp    $0x6e,%bl
je     804c898 <__ctype_b_loc@plt+0x3a88>
cmp    $0x70,%bl
jne    804c8a0 <__ctype_b_loc@plt+0x3a90>
orl    $0x8,(%edx)
add    $0x1,%ecx
mov    %ecx,(%eax)
movzbl (%ecx),%ebx
cmp    $0x6c,%bl
jne    804c878 <__ctype_b_loc@plt+0x3a68>
orl    $0x2,(%edx)
jmp    804c885 <__ctype_b_loc@plt+0x3a75>
nop
orl    $0x4,(%edx)
jmp    804c885 <__ctype_b_loc@plt+0x3a75>
lea    0x0(%esi),%esi
lea    0x1(%ecx),%edx
mov    %edx,(%eax)
mov    $0x1,%eax
cmpb   $0xa,(%ecx)
je     804c8d4 <__ctype_b_loc@plt+0x3ac4>
movl   $0x50,0x8(%esp)
movl   $0x80501d8,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0x805336f
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x50,0x8(%esp)
movl   $0x80501ef,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0x1,%eax
movb   $0x0,0x805336f
add    $0x1c,%esp
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    %ecx,0x14(%esp)
movl   $0x0,0x24(%esp)
call   804be50 <__ctype_b_loc@plt+0x3040>
test   %eax,%eax
mov    %eax,%edi
js     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%eax
call   804be20 <__ctype_b_loc@plt+0x3010>
lea    0x1(%eax),%esi
mov    %eax,%ebp
mov    %esi,(%ebx)
movzbl (%eax),%eax
lea    -0xa(%eax),%edx
movsbl %al,%ecx
cmp    $0x70,%dl
mov    %ecx,0x18(%esp)
ja     804d630 <__ctype_b_loc@plt+0x4820>
movzbl %dl,%edx
jmp    *0x80503c8(,%edx,4)
cmp    $0x1,%edx
je     804da60 <__ctype_b_loc@plt+0x4c50>
cmp    $0x2,%edx
jne    804da6f <__ctype_b_loc@plt+0x4c5f>
cmpb   $0x26,(%eax)
jne    804da6f <__ctype_b_loc@plt+0x4c5f>
cmpb   $0xa,0x1(%eax)
jne    804da6f <__ctype_b_loc@plt+0x4c5f>
cmpb   $0x0,0x2(%eax)
jne    804da6f <__ctype_b_loc@plt+0x4c5f>
test   %edi,%edi
jne    804cfbf <__ctype_b_loc@plt+0x41af>
movl   $0x50,0x8(%esp)
movl   $0x805016f,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
mov    $0xfffffffe,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %edi,%edi
je     804c9dd <__ctype_b_loc@plt+0x3bcd>
call   804c8e0 <__ctype_b_loc@plt+0x3ad0>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%eax
movzbl (%eax),%eax
call   804c760 <__ctype_b_loc@plt+0x3950>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    %ebx,%eax
call   804c5c0 <__ctype_b_loc@plt+0x37b0>
test   %eax,%eax
mov    %eax,%ebx
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    0x14(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049f40 <__ctype_b_loc@plt+0x1130>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   8049b00 <__ctype_b_loc@plt+0xcf0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   80495e0 <__ctype_b_loc@plt+0x7d0>
test   %eax,%eax
je     804dc46 <__ctype_b_loc@plt+0x4e36>
movzbl (%ebx),%eax
cmp    $0x21,%al
jne    804d984 <__ctype_b_loc@plt+0x4b74>
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
je     804d878 <__ctype_b_loc@plt+0x4a68>
cmpb   $0x0,(%ebx)
jne    804ca5e <__ctype_b_loc@plt+0x3c4e>
cmpb   $0x0,0x8053380
je     804dd04 <__ctype_b_loc@plt+0x4ef4>
mov    $0x8053380,%ebx
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804b5e0 <__ctype_b_loc@plt+0x27d0>
test   %eax,%eax
js     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   8049b80 <__ctype_b_loc@plt+0xd70>
movl   $0x0,(%esp)
call   8049410 <__ctype_b_loc@plt+0x600>
nop
mov    0x24(%esp),%ebx
xor    %eax,%eax
test   %ebx,%ebx
je     804c9c5 <__ctype_b_loc@plt+0x3bb5>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804afd0 <__ctype_b_loc@plt+0x21c0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x2,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%ebx)
add    $0x1,%ebp
cmpb   $0xa,-0x2(%ebp)
jne    804cad0 <__ctype_b_loc@plt+0x3cc0>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
lea    0x0(%esi),%esi
test   %edi,%edi
je     804caf1 <__ctype_b_loc@plt+0x3ce1>
call   804c8e0 <__ctype_b_loc@plt+0x3ad0>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    %ebx,%eax
call   804c250 <__ctype_b_loc@plt+0x3440>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
add    $0x1,%eax
mov    %eax,(%esp)
call   8048c20 <system@plt>
test   %eax,%eax
js     804dcd7 <__ctype_b_loc@plt+0x4ec7>
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
movl   $0x805029d,(%esp)
call   8048c00 <puts@plt>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
test   %edi,%edi
mov    0x8053310,%eax
je     804d9ea <__ctype_b_loc@plt+0x4bda>
mov    %eax,0x8(%esp)
movl   $0x805027e,0x4(%esp)
movl   $0x1,(%esp)
call   8048d40 <__printf_chk@plt>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
lea    0x0(%esi),%esi
movl   $0x1,0x8053314
00
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%ebx
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
mov    $0x1,%edx
test   %eax,%eax
jne    804cba2 <__ctype_b_loc@plt+0x3d92>
mov    0x14(%esp),%esi
xor    %edx,%edx
test   %esi,%esi
sete   %dl
mov    0x8053314,%eax
add    %ebx,%edx
mov    %edi,%ecx
call   804c1b0 <__ctype_b_loc@plt+0x33a0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x8053310,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %eax,(%esp)
call   804afd0 <__ctype_b_loc@plt+0x21c0>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
xchg   %ax,%ax
test   %edi,%edi
je     804cbf1 <__ctype_b_loc@plt+0x3de1>
call   804c8e0 <__ctype_b_loc@plt+0x3ad0>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804a3d0 <__ctype_b_loc@plt+0x15c0>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi),%esi
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x2c(%esp),%edx
mov    %ebx,%eax
call   804c7b0 <__ctype_b_loc@plt+0x39a0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
test   %eax,%eax
je     804db54 <__ctype_b_loc@plt+0x4d44>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
mov    %eax,0x4(%esp)
mov    0x8053314,%eax
mov    %eax,(%esp)
call   8049e20 <__ctype_b_loc@plt+0x1010>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi,%eiz,1),%esi
call   8048e10 <__ctype_b_loc@plt>
movzbl 0x1(%ebp),%edx
xor    %ebp,%ebp
mov    %edi,0x18(%esp)
mov    %ebx,%edi
mov    %eax,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
movzbl %dl,%eax
testb  $0x8,0x1(%ecx,%eax,2)
jne    804d660 <__ctype_b_loc@plt+0x4850>
cmp    $0x67,%dl
je     804d838 <__ctype_b_loc@plt+0x4a28>
jle    804d690 <__ctype_b_loc@plt+0x4880>
cmp    $0x70,%dl
je     804d848 <__ctype_b_loc@plt+0x4a38>
cmp    $0x72,%dl
jne    804d800 <__ctype_b_loc@plt+0x49f0>
add    $0x1,%esi
or     $0x4,%ebp
mov    %esi,(%edi)
movzbl (%esi),%edx
cmp    $0xa,%dl
jne    804cca8 <__ctype_b_loc@plt+0x3e98>
mov    %edi,%ebx
mov    0x18(%esp),%edi
jmp    804d6a2 <__ctype_b_loc@plt+0x4892>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%ebp),%eax
call   804c760 <__ctype_b_loc@plt+0x3950>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
test   %edi,%edi
je     804d9c7 <__ctype_b_loc@plt+0x4bb7>
mov    %ebx,%eax
call   804c5c0 <__ctype_b_loc@plt+0x37b0>
test   %eax,%eax
mov    %eax,%ebx
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
test   %eax,%eax
je     804d9e0 <__ctype_b_loc@plt+0x4bd0>
cmpb   $0x0,0x8053380
jne    804cd5b <__ctype_b_loc@plt+0x3f4b>
cmpb   $0x21,(%ebx)
je     804cd5b <__ctype_b_loc@plt+0x3f4b>
movl   $0x400,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x8053380,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805377f
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
je     804d890 <__ctype_b_loc@plt+0x4a80>
cmpb   $0x0,(%ebx)
jne    804db0e <__ctype_b_loc@plt+0x4cfe>
cmpb   $0x0,0x8053380
je     804dd04 <__ctype_b_loc@plt+0x4ef4>
mov    0x8053310,%edx
mov    $0x8053380,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804b5e0 <__ctype_b_loc@plt+0x27d0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     804c9c0 <__ctype_b_loc@plt+0x3bb0>
je     804ca88 <__ctype_b_loc@plt+0x3c78>
movl   $0x1,(%esp)
call   8049410 <__ctype_b_loc@plt+0x600>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x8053310,%eax
mov    %eax,0x4(%esp)
mov    0x8053314,%eax
mov    %eax,(%esp)
call   80499b0 <__ctype_b_loc@plt+0xba0>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi),%esi
mov    0x8053310,%eax
test   %eax,%eax
js     804dbb8 <__ctype_b_loc@plt+0x4da8>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    0x8053310,%esi
cmp    %esi,%eax
jl     804dbb8 <__ctype_b_loc@plt+0x4da8>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
test   %eax,%eax
je     804da4a <__ctype_b_loc@plt+0x4c3a>
mov    %esi,(%esp)
call   804a310 <__ctype_b_loc@plt+0x1500>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
nop
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi),%esi
test   %edi,%edi
lea    0x0(%esi),%esi
je     804ce6f <__ctype_b_loc@plt+0x405f>
call   804c8e0 <__ctype_b_loc@plt+0x3ad0>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
cmpl   $0x48,0x18(%esp)
je     804dadb <__ctype_b_loc@plt+0x4ccb>
cmpl   $0x68,0x18(%esp)
mov    0x8053308,%eax
je     804cea1 <__ctype_b_loc@plt+0x4091>
test   %eax,%eax
je     804ca88 <__ctype_b_loc@plt+0x3c78>
cmpb   $0x0,0x8053320
je     804ca88 <__ctype_b_loc@plt+0x3c78>
mov    0x8053180,%eax
movl   $0x8053320,0xc(%esp)
movl   $0x80502e7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
jne    804dca0 <__ctype_b_loc@plt+0x4e90>
mov    0x18(%esp),%ebp
cmp    $0x47,%ebp
sete   %cl
and    $0xffffffdf,%eax
cmp    $0x47,%al
mov    %ecx,%esi
sete   %al
movzbl %al,%eax
mov    %eax,0x28(%esp)
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    %edi,%ecx
mov    %eax,%edx
mov    $0x1,%eax
call   804c1b0 <__ctype_b_loc@plt+0x33a0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x28(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x8053310,%eax
mov    %eax,0x8(%esp)
mov    0x8053314,%eax
mov    %eax,0x4(%esp)
call   804e620 <__ctype_b_loc@plt+0x5810>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
cmp    $0x56,%ebp
sete   %al
or     %esi,%eax
movzbl %al,%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804d8e1 <__ctype_b_loc@plt+0x4ad1>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x28(%esp),%ebp
mov    0x24(%esp),%eax
test   %ebp,%ebp
mov    %eax,0x14(%esp)
je     804d8e9 <__ctype_b_loc@plt+0x4ad9>
xor    %edi,%edi
call   8049a50 <__ctype_b_loc@plt+0xc40>
lea    0x2c(%esp),%esi
call   804ae70 <__ctype_b_loc@plt+0x2060>
test   %eax,%eax
je     804ca88 <__ctype_b_loc@plt+0x3c78>
mov    %eax,(%esp)
call   8049470 <__ctype_b_loc@plt+0x660>
mov    %eax,(%esp)
call   80493c0 <__ctype_b_loc@plt+0x5b0>
call   8049380 <__ctype_b_loc@plt+0x570>
test   %eax,%eax
js     804c9c0 <__ctype_b_loc@plt+0x3bb0>
test   %ebp,%ebp
jne    804d929 <__ctype_b_loc@plt+0x4b19>
mov    %edi,(%ebx)
mov    %edi,%eax
jmp    804cfca <__ctype_b_loc@plt+0x41ba>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
cmpb   $0x0,(%eax)
je     804cf8d <__ctype_b_loc@plt+0x417d>
xor    %edx,%edx
mov    $0x1,%ecx
mov    %ebx,%eax
call   804c910 <__ctype_b_loc@plt+0x3b00>
test   %eax,%eax
jns    804cfc8 <__ctype_b_loc@plt+0x41b8>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
xchg   %ax,%ax
movl   $0x1,0x8053314
00
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%esi
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
mov    $0x1,%edx
test   %eax,%eax
jne    804d012 <__ctype_b_loc@plt+0x4202>
mov    0x14(%esp),%ebp
xor    %edx,%edx
test   %ebp,%ebp
sete   %dl
mov    0x8053314,%eax
add    %esi,%edx
mov    %edi,%ecx
call   804c1b0 <__ctype_b_loc@plt+0x33a0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%eax
movzbl (%eax),%edi
lea    -0x31(%edi),%edx
cmp    $0x8,%dl
ja     804d05d <__ctype_b_loc@plt+0x424d>
mov    %eax,0x4(%esp)
lea    0x28(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   804f4c0 <__ctype_b_loc@plt+0x66b0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804f490 <__ctype_b_loc@plt+0x6680>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x24(%esp),%ebx
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    %eax,%esi
call   804f4b0 <__ctype_b_loc@plt+0x66a0>
add    0x8053310,%eax
cmp    %eax,%esi
jge    804d917 <__ctype_b_loc@plt+0x4b07>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    0x8053310,%edx
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804afd0 <__ctype_b_loc@plt+0x21c0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
xor    %eax,%eax
jmp    804cabc <__ctype_b_loc@plt+0x3cac>
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x2c(%esp),%edx
mov    %ebx,%eax
call   804c7b0 <__ctype_b_loc@plt+0x39a0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x2c(%esp),%eax
mov    0x8053314,%esi
cmp    %esi,%eax
jl     804d0f4 <__ctype_b_loc@plt+0x42e4>
cmp    0x8053310,%eax
jl     804dd2c <__ctype_b_loc@plt+0x4f1c>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
je     804daf2 <__ctype_b_loc@plt+0x4ce2>
mov    0x14(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
mov    %eax,0x4(%esp)
call   804a190 <__ctype_b_loc@plt+0x1380>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053314,%eax
test   %eax,%eax
nop
jne    804d15c <__ctype_b_loc@plt+0x434c>
movl   $0x1,0x8053314
00
mov    0x8053310,%ebp
test   %ebp,%ebp
jne    804d170 <__ctype_b_loc@plt+0x4360>
movl   $0x1,0x8053310
00
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%esi
test   %esi,%esi
je     804da23 <__ctype_b_loc@plt+0x4c13>
mov    0x8053310,%eax
mov    0x14(%esp),%edi
mov    %eax,0x4(%esp)
mov    0x8053314,%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049f40 <__ctype_b_loc@plt+0x1130>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049cd0 <__ctype_b_loc@plt+0xec0>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
xchg   %ax,%ax
mov    0x8053310,%ebp
test   %ebp,%ebp
jne    804d1fc <__ctype_b_loc@plt+0x43ec>
movl   $0x1,0x8053310
00
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%edi
test   %edi,%edi
je     804d9bd <__ctype_b_loc@plt+0x4bad>
mov    0x14(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
sub    $0x1,%eax
jmp    804d1cd <__ctype_b_loc@plt+0x43bd>
lea    0x0(%esi),%esi
movzbl 0x1(%ebp),%edx
movsbl %dl,%eax
and    $0xffffffdf,%edx
cmp    $0x51,%dl
mov    %eax,0x28(%esp)
jne    804d248 <__ctype_b_loc@plt+0x4438>
lea    0x2(%ebp),%esi
mov    %esi,(%ebx)
movzbl (%esi),%eax
call   804c760 <__ctype_b_loc@plt+0x3950>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    %ebx,%eax
call   804c5c0 <__ctype_b_loc@plt+0x37b0>
test   %eax,%eax
mov    %eax,%ebx
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
test   %edi,%edi
jne    804d858 <__ctype_b_loc@plt+0x4a48>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
test   %eax,%eax
jne    804d858 <__ctype_b_loc@plt+0x4a48>
movl   $0x0,0x8053310
00
movl   $0x0,0x8053314
00
cmpb   $0x0,0x8053380
jne    804d2bf <__ctype_b_loc@plt+0x44af>
cmpb   $0x21,(%ebx)
je     804d2bf <__ctype_b_loc@plt+0x44af>
movl   $0x400,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x8053380,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805377f
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
movzbl (%ebx),%ecx
test   %eax,%eax
je     804d2de <__ctype_b_loc@plt+0x44ce>
test   %cl,%cl
jne    804d2de <__ctype_b_loc@plt+0x44ce>
cmpb   $0x0,0x8053380
je     804dd04 <__ctype_b_loc@plt+0x4ef4>
xor    %ecx,%ecx
cmpl   $0x57,0x18(%esp)
mov    $0x804fa7f,%eax
mov    $0x8050205,%edx
cmovne %eax,%edx
test   %cl,%cl
mov    0x8053310,%ecx
mov    $0x8053380,%eax
cmovne %ebx,%eax
mov    %edx,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    0x8053314,%ecx
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   804b9e0 <__ctype_b_loc@plt+0x2bd0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
cmp    0x2c(%esp),%eax
je     804db1b <__ctype_b_loc@plt+0x4d0b>
call   8049400 <__ctype_b_loc@plt+0x5f0>
test   %eax,%eax
jne    804db8b <__ctype_b_loc@plt+0x4d7b>
mov    0x28(%esp),%eax
and    $0xffffffdf,%eax
cmp    $0x51,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
mov    $0xffffffff,%eax
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2(%ebp),%eax
mov    0x8053310,%esi
mov    %eax,(%ebx)
movsbl 0x1(%ebp),%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
je     804dbb8 <__ctype_b_loc@plt+0x4da8>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x28(%esp),%ebx
mov    %esi,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
lea    -0x61(%ebx),%edx
cmp    $0x19,%edx
ja     804db5e <__ctype_b_loc@plt+0x4d4e>
mov    0x80532a0(,%edx,4),%ebx
test   %ebx,%ebx
je     804dc3a <__ctype_b_loc@plt+0x4e2a>
mov    %eax,0x80532a0(,%edx,4)
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
lea    0x0(%esi,%eiz,1),%esi
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
lea    0x1(%esi),%edx
mov    %edi,%ecx
call   804c1b0 <__ctype_b_loc@plt+0x33a0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%esi
test   %esi,%esi
je     804da2d <__ctype_b_loc@plt+0x4c1d>
mov    0x8053314,%eax
mov    0x8053310,%edx
cmp    %edx,%eax
je     804ca88 <__ctype_b_loc@plt+0x3c78>
mov    0x14(%esp),%edi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %edi,0x8(%esp)
call   804a020 <__ctype_b_loc@plt+0x1210>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
test   %eax,%eax
je     804d9d6 <__ctype_b_loc@plt+0x4bc6>
mov    0x14(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
jmp    804d1cd <__ctype_b_loc@plt+0x43bd>
lea    0x0(%esi,%eiz,1),%esi
call   8049400 <__ctype_b_loc@plt+0x5f0>
test   %eax,%eax
je     804c9d0 <__ctype_b_loc@plt+0x3bc0>
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jne    804c9d0 <__ctype_b_loc@plt+0x3bc0>
cmpl   $0xfffffffd,0x1c(%esp)
je     804c9d0 <__ctype_b_loc@plt+0x3bc0>
mov    $0xfffffffd,%eax
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     804d4c1 <__ctype_b_loc@plt+0x46b1>
call   804c8e0 <__ctype_b_loc@plt+0x3ad0>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
cmpl   $0x50,0x18(%esp)
jne    804d8ab <__ctype_b_loc@plt+0x4a9b>
mov    0x805330c,%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    %eax,0x805330c
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
xchg   %ax,%ax
cmpl   $0x6c,0x18(%esp)
je     804d9b0 <__ctype_b_loc@plt+0x4ba0>
xor    %eax,%eax
cmpl   $0x6e,0x18(%esp)
setne  %al
lea    0x4(,%eax,4),%eax
mov    %eax,0x28(%esp)
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x28(%esp),%eax
or     0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
mov    %eax,0x4(%esp)
mov    0x8053314,%eax
mov    %eax,(%esp)
call   804afd0 <__ctype_b_loc@plt+0x21c0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
xor    %eax,%eax
jmp    804cabc <__ctype_b_loc@plt+0x3cac>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     804d583 <__ctype_b_loc@plt+0x4773>
call   804c8e0 <__ctype_b_loc@plt+0x3ad0>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%esi
movzbl (%esi),%eax
call   804c760 <__ctype_b_loc@plt+0x3950>
test   %eax,%eax
jne    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    %ebx,%eax
call   804c5c0 <__ctype_b_loc@plt+0x37b0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
movzbl (%eax),%edx
cmp    $0x21,%dl
je     804dd59 <__ctype_b_loc@plt+0x4f49>
test   %dl,%dl
jne    804db30 <__ctype_b_loc@plt+0x4d20>
movl   $0x8053380,(%esp)
call   804f770 <__ctype_b_loc@plt+0x6960>
mov    %eax,(%esp)
call   8048c00 <puts@plt>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
nop
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%ebx
test   %ebx,%ebx
je     804da3a <__ctype_b_loc@plt+0x4c2a>
mov    0x14(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
mov    %eax,0x4(%esp)
mov    0x8053314,%eax
mov    %eax,(%esp)
call   8049f40 <__ctype_b_loc@plt+0x1130>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
call   8049390 <__ctype_b_loc@plt+0x580>
jmp    804ca88 <__ctype_b_loc@plt+0x3c78>
xchg   %ax,%ax
movl   $0x50,0x8(%esp)
movl   $0x805029f,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
lea    0x0(%esi),%esi
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x8053280,(%esp)
call   804f4c0 <__ctype_b_loc@plt+0x66b0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
or     $0x8,%ebp
mov    (%edi),%esi
andl   $0xffffffef,0x805327c
jmp    804cce1 <__ctype_b_loc@plt+0x3ed1>
lea    0x0(%esi),%esi
cmp    $0xa,%dl
mov    %edi,%ebx
mov    0x18(%esp),%edi
jne    804d806 <__ctype_b_loc@plt+0x49f6>
or     $0x8,%ebp
call   804e610 <__ctype_b_loc@plt+0x5800>
test   %eax,%eax
je     804dc78 <__ctype_b_loc@plt+0x4e68>
mov    %ebp,%ecx
and    $0x1,%ecx
je     804ddcf <__ctype_b_loc@plt+0x4fbf>
mov    (%ebx),%esi
mov    $0x1,%ecx
movl   $0x0,0x8053280
00
movzbl (%esi),%edx
xchg   %ax,%ax
cmp    $0xa,%dl
je     804d6df <__ctype_b_loc@plt+0x48cf>
cmpb   $0xa,0x1(%esi)
je     804dc50 <__ctype_b_loc@plt+0x4e40>
test   %ebp,%ebp
je     804dd86 <__ctype_b_loc@plt+0x4f76>
test   $0x4,%ebp
je     804d709 <__ctype_b_loc@plt+0x48f9>
mov    %ebx,(%esp)
mov    %ecx,0x18(%esp)
call   804eac0 <__ctype_b_loc@plt+0x5cb0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%esi
mov    0x18(%esp),%ecx
mov    0x14(%esp),%eax
test   %eax,%eax
je     804db02 <__ctype_b_loc@plt+0x4cf2>
orl    $0x1,0x805327c
test   %ecx,%ecx
je     804d727 <__ctype_b_loc@plt+0x4917>
xorl   $0x10,0x805327c
and    $0x2,%ebp
je     804d73c <__ctype_b_loc@plt+0x492c>
mov    0x805327c,%eax
xor    $0x8,%eax
and    $0xfffffff9,%eax
mov    %eax,0x805327c
movzbl (%esi),%eax
cmp    $0x6e,%al
je     804dc18 <__ctype_b_loc@plt+0x4e08>
cmp    $0x70,%al
je     804dc29 <__ctype_b_loc@plt+0x4e19>
cmp    $0x6c,%al
jne    804d75f <__ctype_b_loc@plt+0x494f>
add    $0x1,%esi
orl    $0x2,0x805327c
mov    %esi,(%ebx)
mov    %edi,%eax
call   804c220 <__ctype_b_loc@plt+0x3410>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x24(%esp),%edx
mov    %ebx,%eax
call   804c870 <__ctype_b_loc@plt+0x3a60>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
test   %eax,%eax
je     804dccd <__ctype_b_loc@plt+0x4ebd>
mov    0x14(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x8053280,%eax
mov    %eax,0xc(%esp)
mov    0x805327c,%eax
mov    %eax,0x8(%esp)
mov    0x8053310,%eax
mov    %eax,0x4(%esp)
mov    0x8053314,%eax
mov    %eax,(%esp)
call   804eb20 <__ctype_b_loc@plt+0x5d10>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x805327c,%ebx
test   $0xe,%bl
je     804ca88 <__ctype_b_loc@plt+0x3c78>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804afd0 <__ctype_b_loc@plt+0x21c0>
test   %eax,%eax
jne    804ca88 <__ctype_b_loc@plt+0x3c78>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x18(%esp),%edi
xor    %ecx,%ecx
test   %ebp,%ebp
je     804d6d0 <__ctype_b_loc@plt+0x48c0>
movl   $0x50,0x8(%esp)
movl   $0x80501d8,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
add    $0x1,%esi
or     $0x1,%ebp
mov    %esi,(%edi)
jmp    804cce1 <__ctype_b_loc@plt+0x3ed1>
lea    0x0(%esi),%esi
add    $0x1,%esi
or     $0x2,%ebp
mov    %esi,(%edi)
jmp    804cce1 <__ctype_b_loc@plt+0x3ed1>
lea    0x0(%esi),%esi
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    %edi,%ecx
mov    %eax,%edx
mov    $0x1,%eax
call   804c1b0 <__ctype_b_loc@plt+0x33a0>
test   %eax,%eax
jne    804d292 <__ctype_b_loc@plt+0x4482>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
cmpb   $0x0,(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
je     804ca59 <__ctype_b_loc@plt+0x3c49>
jmp    804ca5e <__ctype_b_loc@plt+0x3c4e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
mov    $0x8053380,%eax
mov    0x8053310,%edx
je     804cd89 <__ctype_b_loc@plt+0x3f79>
mov    %ebx,%eax
jmp    804cd89 <__ctype_b_loc@plt+0x3f79>
call   8049400 <__ctype_b_loc@plt+0x5f0>
test   %eax,%eax
je     804d352 <__ctype_b_loc@plt+0x4542>
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
nop
jne    804d352 <__ctype_b_loc@plt+0x4542>
cmpl   $0x71,0x18(%esp)
jne    804d352 <__ctype_b_loc@plt+0x4542>
cmpl   $0xfffffffd,0x1c(%esp)
je     804d352 <__ctype_b_loc@plt+0x4542>
jmp    804d4a1 <__ctype_b_loc@plt+0x4691>
mov    0x24(%esp),%eax
mov    %eax,0x14(%esp)
call   804bce0 <__ctype_b_loc@plt+0x2ed0>
test   %eax,%eax
je     804d9fa <__ctype_b_loc@plt+0x4bea>
mov    (%ebx),%eax
cmpb   $0xa,(%eax)
jne    804d9fa <__ctype_b_loc@plt+0x4bea>
cmpb   $0x0,0x1(%eax)
jne    804d9fa <__ctype_b_loc@plt+0x4bea>
xor    %ebp,%ebp
mov    $0x8050202,%edi
jmp    804cf84 <__ctype_b_loc@plt+0x4174>
call   804f4b0 <__ctype_b_loc@plt+0x66a0>
mov    0x8053310,%edx
add    %edx,%eax
jmp    804d099 <__ctype_b_loc@plt+0x4289>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,0x18(%esp)
call   8049380 <__ctype_b_loc@plt+0x570>
mov    0x14(%esp),%ecx
mov    0x18(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804afd0 <__ctype_b_loc@plt+0x21c0>
test   %eax,%eax
jne    804d971 <__ctype_b_loc@plt+0x4b61>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x2c(%esp),%edx
cmp    $0x0,%edx
nop
jle    804dbe5 <__ctype_b_loc@plt+0x4dd5>
cmpb   $0xa,-0x1(%eax,%edx,1)
je     804c966 <__ctype_b_loc@plt+0x3b56>
mov    %esi,(%esp)
call   804b2c0 <__ctype_b_loc@plt+0x24b0>
test   %eax,%eax
mov    %eax,(%ebx)
jne    804d958 <__ctype_b_loc@plt+0x4b48>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
test   %al,%al
je     804ca3a <__ctype_b_loc@plt+0x3c2a>
movl   $0x400,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x8053380,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805377f
jmp    804ca3a <__ctype_b_loc@plt+0x3c2a>
movl   $0x2,0x28(%esp)
jmp    804d518 <__ctype_b_loc@plt+0x4708>
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804d21b <__ctype_b_loc@plt+0x440b>
call   80493d0 <__ctype_b_loc@plt+0x5c0>
mov    %eax,0x8053310
jmp    804cd11 <__ctype_b_loc@plt+0x3f01>
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804d45f <__ctype_b_loc@plt+0x464f>
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804cd2e <__ctype_b_loc@plt+0x3f1e>
lea    0x0(%esi),%esi
call   80493d0 <__ctype_b_loc@plt+0x5c0>
jmp    804cb58 <__ctype_b_loc@plt+0x3d48>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804b3f0 <__ctype_b_loc@plt+0x25e0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%edi
xor    %ebp,%ebp
jmp    804cf84 <__ctype_b_loc@plt+0x4174>
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804d19e <__ctype_b_loc@plt+0x438e>
lea    0x0(%esi),%esi
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804d405 <__ctype_b_loc@plt+0x45f5>
lea    0x0(%esi),%esi
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804d5fe <__ctype_b_loc@plt+0x47ee>
lea    0x0(%esi),%esi
call   8049a50 <__ctype_b_loc@plt+0xc40>
mov    0x8053310,%esi
jmp    804ce3f <__ctype_b_loc@plt+0x402f>
cmpb   $0xa,(%eax)
jne    804da6f <__ctype_b_loc@plt+0x4c5f>
cmpb   $0x0,0x1(%eax)
je     804cf8d <__ctype_b_loc@plt+0x417d>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804b3f0 <__ctype_b_loc@plt+0x25e0>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x2c(%esp),%eax
movl   $0x8053284,0x4(%esp)
movl   $0x8053288,(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x2c(%esp),%eax
lea    0x1(%eax),%edx
mov    (%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8053288,%eax
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
mov    0x8053288,%edi
jmp    804cfbf <__ctype_b_loc@plt+0x41af>
mov    0x8053308,%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    %eax,0x8053308
jmp    804ce99 <__ctype_b_loc@plt+0x4089>
call   8049a50 <__ctype_b_loc@plt+0xc40>
mov    0x8053314,%esi
jmp    804d113 <__ctype_b_loc@plt+0x4303>
andl   $0xfffffffe,0x805327c
jmp    804d71c <__ctype_b_loc@plt+0x490c>
mov    0x8053310,%edx
mov    %ebx,%eax
jmp    804cd89 <__ctype_b_loc@plt+0x3f79>
movl   $0x0,(%esp)
call   8049410 <__ctype_b_loc@plt+0x600>
mov    0x28(%esp),%eax
jmp    804d346 <__ctype_b_loc@plt+0x4536>
movl   $0x400,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x8053380,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805377f
jmp    804d5b6 <__ctype_b_loc@plt+0x47a6>
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804cc61 <__ctype_b_loc@plt+0x3e51>
movl   $0x50,0x8(%esp)
movl   $0x8050158,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
mov    0x28(%esp),%eax
jne    804d346 <__ctype_b_loc@plt+0x4536>
cmpl   $0xfffffffd,0x1c(%esp)
je     804d346 <__ctype_b_loc@plt+0x4536>
cmp    $0x71,%eax
jne    804d346 <__ctype_b_loc@plt+0x4536>
jmp    804d4a1 <__ctype_b_loc@plt+0x4691>
lea    0x0(%esi),%esi
movl   $0x50,0x8(%esp)
movl   $0x804f899,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
jne    804c966 <__ctype_b_loc@plt+0x3b56>
movl   $0x50,0x8(%esp)
movl   $0x804f9f9,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
orl    $0x4,0x805327c
mov    %esi,(%ebx)
jmp    804d75f <__ctype_b_loc@plt+0x494f>
add    $0x1,%esi
orl    $0x8,0x805327c
mov    %esi,(%ebx)
jmp    804d75f <__ctype_b_loc@plt+0x494f>
addl   $0x1,0x805328c
jmp    804d3b5 <__ctype_b_loc@plt+0x45a5>
mov    $0xfffffffc,%eax
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
movl   $0x50,0x8(%esp)
movl   $0x8050264,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
movl   $0x50,0x8(%esp)
movl   $0x805024b,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
movl   $0x50,0x8(%esp)
movl   $0x805021b,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
call   8049a50 <__ctype_b_loc@plt+0xc40>
jmp    804d78d <__ctype_b_loc@plt+0x497d>
movl   $0x50,0x8(%esp)
movl   $0x8050282,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
movl   $0x50,0x8(%esp)
movl   $0x8050183,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
movl   $0x50,0x8(%esp)
movl   $0x8050237,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
movl   $0x50,0x8(%esp)
movl   $0x8050207,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
mov    $0xfffffffe,%eax
movb   $0x0,0x805336f
jmp    804c9c5 <__ctype_b_loc@plt+0x3bb5>
mov    %ebx,(%esp)
mov    %ecx,0x18(%esp)
call   804eac0 <__ctype_b_loc@plt+0x5cb0>
mov    0x18(%esp),%ecx
test   %eax,%eax
je     804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    0x14(%esp),%eax
movl   $0x8053280,0x8(%esp)
movl   $0x805327c,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    %ecx,0x18(%esp)
call   804e750 <__ctype_b_loc@plt+0x5940>
test   %eax,%eax
jne    804d703 <__ctype_b_loc@plt+0x48f3>
jmp    804c9c0 <__ctype_b_loc@plt+0x3bb0>
mov    (%ebx),%esi
movzbl (%esi),%edx
jmp    804d6d0 <__ctype_b_loc@plt+0x48c0>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x400,0x8(%esp)
movl   $0x8053380,(%esp)
mov    %eax,0x4(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805377f
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    $0x804f9e3,%edx
mov    0x20(%esp),%eax
movl   $0x50,0x8(%esp)
movl   $0x8053320,(%esp)
test   %eax,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x50,0x8(%esp)
movl   $0x8053120,(%esp)
movl   $0x1,0x805330c
00
mov    %eax,0x4(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805316f
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
movl   $0x1,0x8053308
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805328c,%ecx
xor    %eax,%eax
push   %ebx
mov    0x8(%esp),%ebx
test   %ecx,%ecx
mov    %ecx,%edx
jne    804dec6 <__ctype_b_loc@plt+0x50b6>
jmp    804def2 <__ctype_b_loc@plt+0x50e2>
lea    0x0(%esi),%esi
add    $0x1,%eax
test   %edx,%edx
je     804dee8 <__ctype_b_loc@plt+0x50d8>
cmp    $0x1a,%eax
je     804def8 <__ctype_b_loc@plt+0x50e8>
mov    %edx,%ecx
cmp    %ebx,0x80532a0(,%eax,4)
jne    804deb8 <__ctype_b_loc@plt+0x50a8>
lea    -0x1(%ecx),%edx
movl   $0x0,0x80532a0(,%eax,4)
00
add    $0x1,%eax
test   %edx,%edx
jne    804debf <__ctype_b_loc@plt+0x50af>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x805328c
00
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x805328c
pop    %ebx
ret
push   %esi
push   %ebx
sub    $0x34,%esp
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
call   804f420 <__ctype_b_loc@plt+0x6610>
call   804f430 <__ctype_b_loc@plt+0x6620>
movl   $0x80537c0,(%esp)
call   8048af0 <_setjmp@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804e150 <__ctype_b_loc@plt+0x5340>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
lea    0x2c(%esp),%esi
mov    0x80531a0,%eax
mov    %eax,(%esp)
call   8048ad0 <fflush@plt>
test   %ebx,%ebx
js     804e078 <__ctype_b_loc@plt+0x5268>
mov    0x805330c,%edx
test   %edx,%edx
jne    804dfb0 <__ctype_b_loc@plt+0x51a0>
mov    %esi,(%esp)
call   804b2c0 <__ctype_b_loc@plt+0x24b0>
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,0x20(%esp)
je     804e1f8 <__ctype_b_loc@plt+0x53e8>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804dfe0 <__ctype_b_loc@plt+0x51d0>
cmpb   $0xa,-0x1(%ecx,%eax,1)
je     804e0c0 <__ctype_b_loc@plt+0x52b0>
movl   $0x50,0x8(%esp)
mov    $0xfffffffe,%ebx
movl   $0x804f9f9,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804df3e <__ctype_b_loc@plt+0x512e>
movl   $0x8053120,0x8(%esp)
movl   $0x804fac8,0x4(%esp)
movl   $0x1,(%esp)
call   8048d40 <__printf_chk@plt>
mov    0x80531a0,%eax
mov    %eax,(%esp)
call   8048ad0 <fflush@plt>
jmp    804df5d <__ctype_b_loc@plt+0x514d>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049400 <__ctype_b_loc@plt+0x5f0>
test   %eax,%eax
je     804e1f8 <__ctype_b_loc@plt+0x53e8>
lea    0x0(%esi),%esi
call   804bcd0 <__ctype_b_loc@plt+0x2ec0>
test   %eax,%eax
jne    804e1f8 <__ctype_b_loc@plt+0x53e8>
mov    0x8053180,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80502b0,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
movl   $0x50,0x8(%esp)
movl   $0x80502bd,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movl   $0x0,(%esp)
movb   $0x0,0x805336f
call   804bd70 <__ctype_b_loc@plt+0x2f60>
test   %eax,%eax
je     804e1a8 <__ctype_b_loc@plt+0x5398>
mov    0x8053308,%eax
mov    $0x2,%ebx
test   %eax,%eax
jne    804e1c0 <__ctype_b_loc@plt+0x53b0>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053308,%ecx
test   %ecx,%ecx
je     804df53 <__ctype_b_loc@plt+0x5143>
mov    0x8053180,%eax
movl   $0x8053320,0xc(%esp)
movl   $0x80502e7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
mov    0x8053180,%eax
mov    %eax,(%esp)
call   8048ad0 <fflush@plt>
jmp    804df53 <__ctype_b_loc@plt+0x5143>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
xor    %ecx,%ecx
mov    %ebx,%edx
add    $0x1,%eax
mov    %eax,0x28(%esp)
lea    0x20(%esp),%eax
call   804c910 <__ctype_b_loc@plt+0x3b00>
test   %eax,%eax
mov    %eax,%ebx
je     804df3e <__ctype_b_loc@plt+0x512e>
cmp    $0xffffffff,%eax
je     804e1f8 <__ctype_b_loc@plt+0x53e8>
cmp    $0xfffffffd,%eax
je     804e208 <__ctype_b_loc@plt+0x53f8>
cmp    $0xfffffffc,%eax
je     804e277 <__ctype_b_loc@plt+0x5467>
mov    0x8053180,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80502b0,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
movl   $0x0,(%esp)
call   804bd70 <__ctype_b_loc@plt+0x2f60>
test   %eax,%eax
jne    804e264 <__ctype_b_loc@plt+0x5454>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    804df3e <__ctype_b_loc@plt+0x512e>
movl   $0x1,0x24(%esp)
jmp    804df3e <__ctype_b_loc@plt+0x512e>
nop
mov    0x8053180,%eax
mov    $0xffffffff,%ebx
movl   $0x3,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80502af,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
movl   $0x50,0x8(%esp)
movl   $0x80502b3,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movb   $0x0,0x805336f
jmp    804df3a <__ctype_b_loc@plt+0x512a>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
mov    $0xfffffffd,%ebx
call   8049410 <__ctype_b_loc@plt+0x600>
jmp    804df3e <__ctype_b_loc@plt+0x512e>
xchg   %ax,%ax
mov    0x28(%esp),%eax
movl   $0x8053320,0x10(%esp)
movl   $0x80502d6,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8053180,%eax
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%ebx
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8053180,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80502b0,(%esp)
mov    %eax,0xc(%esp)
call   8048ba0 <fwrite@plt>
movl   $0x50,0x8(%esp)
movl   $0x80502bd,0x4(%esp)
movl   $0x8053320,(%esp)
call   8048d20 <strncpy@plt>
movl   $0x0,(%esp)
movb   $0x0,0x805336f
call   804bd70 <__ctype_b_loc@plt+0x2f60>
test   %eax,%eax
je     804e136 <__ctype_b_loc@plt+0x5326>
mov    0x8053308,%eax
test   %eax,%eax
jne    804e2bf <__ctype_b_loc@plt+0x54af>
mov    $0x1,%ebx
jmp    804e06b <__ctype_b_loc@plt+0x525b>
mov    0x8053308,%eax
test   %eax,%eax
je     804e26d <__ctype_b_loc@plt+0x545d>
movl   $0x0,(%esp)
call   804bd70 <__ctype_b_loc@plt+0x2f60>
test   %eax,%eax
jne    804e2bf <__ctype_b_loc@plt+0x54af>
mov    0x8053180,%eax
mov    $0x1,%ebx
movl   $0x8053320,0xc(%esp)
movl   $0x80502e7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
jmp    804e06b <__ctype_b_loc@plt+0x525b>
mov    0x28(%esp),%eax
movl   $0x8053320,0x10(%esp)
movl   $0x80502d6,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8053180,%eax
mov    %eax,(%esp)
call   8048dc0 <__fprintf_chk@plt>
jmp    804e26d <__ctype_b_loc@plt+0x545d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x8c,%esp
mov    (%esi),%edx
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
movzbl (%edx),%eax
cmp    $0x20,%al
mov    %al,0x1f(%esp)
je     804e5c7 <__ctype_b_loc@plt+0x57b7>
movzbl 0x1f(%esp),%eax
cmp    $0xa,%al
je     804e346 <__ctype_b_loc@plt+0x5536>
lea    0x1(%edx),%ebp
mov    %ebp,(%esi)
movzbl 0x1(%edx),%edx
cmp    $0xa,%dl
je     804e346 <__ctype_b_loc@plt+0x5536>
cmp    %dl,%al
mov    %ebp,%ecx
jne    804e393 <__ctype_b_loc@plt+0x5583>
mov    0x8053788,%eax
test   %eax,%eax
je     804e58c <__ctype_b_loc@plt+0x577c>
mov    0x7c(%esp),%esi
xor    %gs:0x14,%esi
jne    804e5e1 <__ctype_b_loc@plt+0x57d1>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpb   $0xa,0x1(%ecx)
lea    0x1(%ecx),%edx
je     804e5b4 <__ctype_b_loc@plt+0x57a4>
mov    %edx,%ecx
movzbl 0x1(%ecx),%edx
lea    0x1(%ecx),%edi
cmp    %dl,0x1f(%esp)
je     804e3ae <__ctype_b_loc@plt+0x559e>
cmp    $0xa,%dl
je     804e3ae <__ctype_b_loc@plt+0x559e>
mov    %edi,%ecx
cmp    $0x5b,%dl
je     804e490 <__ctype_b_loc@plt+0x5680>
cmp    $0x5c,%dl
je     804e370 <__ctype_b_loc@plt+0x5560>
movzbl 0x1(%ecx),%edx
lea    0x1(%ecx),%edi
cmp    %dl,0x1f(%esp)
jne    804e38c <__ctype_b_loc@plt+0x557c>
mov    %edi,%ebx
sub    %ebp,%ebx
lea    0x1(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x8053780,0x4(%esp)
movl   $0x8053784,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804e4e4 <__ctype_b_loc@plt+0x56d4>
mov    (%esi),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8053784,%eax
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
mov    0x8053784,%eax
movb   $0x0,(%eax,%ebx,1)
mov    %edi,(%esi)
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804e41f <__ctype_b_loc@plt+0x560f>
test   %ebx,%ebx
mov    0x8053784,%eax
jle    804e5da <__ctype_b_loc@plt+0x57ca>
lea    (%eax,%ebx,1),%edx
cmpb   $0x0,(%eax)
jne    804e418 <__ctype_b_loc@plt+0x5608>
movb   $0xa,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    804e410 <__ctype_b_loc@plt+0x5600>
mov    0x8053784,%ebx
test   %ebx,%ebx
je     804e4e4 <__ctype_b_loc@plt+0x56d4>
mov    0x8053788,%eax
test   %eax,%eax
je     804e444 <__ctype_b_loc@plt+0x5634>
mov    0x80537a0,%edx
test   %edx,%edx
je     804e5a2 <__ctype_b_loc@plt+0x5792>
movl   $0x20,(%esp)
call   8048bf0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x8053788
je     804e5e6 <__ctype_b_loc@plt+0x57d6>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x80537a0
00
call   8048d90 <regcomp@plt>
test   %eax,%eax
jne    804e544 <__ctype_b_loc@plt+0x5734>
mov    0x8053788,%eax
jmp    804e353 <__ctype_b_loc@plt+0x5543>
lea    0x0(%esi),%esi
movzbl 0x1(%ecx),%eax
cmp    $0x5e,%al
je     804e528 <__ctype_b_loc@plt+0x5718>
lea    0x1(%ecx),%edx
mov    %eax,%ecx
cmp    $0x5d,%cl
je     804e538 <__ctype_b_loc@plt+0x5728>
cmp    $0x5d,%cl
je     804e4cd <__ctype_b_loc@plt+0x56bd>
cmp    $0xa,%cl
je     804e4cd <__ctype_b_loc@plt+0x56bd>
mov    %ecx,%eax
xchg   %ax,%ax
cmp    $0x5b,%al
movzbl 0x1(%edx),%eax
je     804e4f0 <__ctype_b_loc@plt+0x56e0>
add    $0x1,%edx
cmp    $0xa,%al
je     804e4cb <__ctype_b_loc@plt+0x56bb>
cmp    $0x5d,%al
jne    804e4b8 <__ctype_b_loc@plt+0x56a8>
mov    %eax,%ecx
cmp    $0x5d,%cl
je     804e37d <__ctype_b_loc@plt+0x556d>
xchg   %ax,%ax
movl   $0x80505b7,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804e353 <__ctype_b_loc@plt+0x5543>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2e,%al
je     804e4fc <__ctype_b_loc@plt+0x56ec>
cmp    $0x3a,%al
je     804e4fc <__ctype_b_loc@plt+0x56ec>
cmp    $0x3d,%al
jne    804e4c0 <__ctype_b_loc@plt+0x56b0>
movzbl 0x2(%edx),%edi
lea    0x2(%edx),%ecx
mov    %edi,%edx
jmp    804e515 <__ctype_b_loc@plt+0x5705>
nop
cmp    $0xa,%dl
je     804e4d8 <__ctype_b_loc@plt+0x56c8>
add    $0x1,%ecx
mov    %edx,%edi
movzbl (%ecx),%edx
cmp    $0x5d,%dl
jne    804e508 <__ctype_b_loc@plt+0x56f8>
mov    %edi,%ebx
cmp    %bl,%al
jne    804e50d <__ctype_b_loc@plt+0x56fd>
movzbl 0x1(%ecx),%eax
mov    %ecx,%edx
jmp    804e4c0 <__ctype_b_loc@plt+0x56b0>
lea    0x2(%ecx),%edx
movzbl 0x2(%ecx),%ecx
cmp    $0x5d,%cl
jne    804e4aa <__ctype_b_loc@plt+0x569a>
movzbl 0x1(%edx),%ecx
add    $0x1,%edx
jmp    804e4aa <__ctype_b_loc@plt+0x569a>
mov    0x8053788,%edx
lea    0x2c(%esp),%ebx
movl   $0x50,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8048cf0 <regerror@plt>
mov    %ebx,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    0x8053788,%eax
mov    %eax,(%esp)
call   8048b00 <free@plt>
xor    %eax,%eax
movl   $0x0,0x8053788
00
jmp    804e353 <__ctype_b_loc@plt+0x5543>
movl   $0x805058c,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    0x8053788,%eax
jmp    804e353 <__ctype_b_loc@plt+0x5543>
mov    %eax,(%esp)
call   8048bb0 <regfree@plt>
mov    0x8053788,%eax
jmp    804e45d <__ctype_b_loc@plt+0x564d>
movl   $0x80505a0,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804e353 <__ctype_b_loc@plt+0x5543>
movl   $0x8050264,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804e353 <__ctype_b_loc@plt+0x5543>
mov    %eax,%ebx
jmp    804e425 <__ctype_b_loc@plt+0x5615>
call   8048b50 <__stack_chk_fail@plt>
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804e353 <__ctype_b_loc@plt+0x5543>
mov    0x80537a4,%ecx
xor    %eax,%eax
test   %ecx,%ecx
setne  %al
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
mov    (%ebx),%eax
movzbl (%eax),%edx
cmp    $0xa,%dl
je     804e728 <__ctype_b_loc@plt+0x5918>
cmp    $0x20,%dl
je     804e728 <__ctype_b_loc@plt+0x5918>
mov    %ebx,%eax
mov    %edx,0x1c(%esp)
call   804e300 <__ctype_b_loc@plt+0x54f0>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     804e71c <__ctype_b_loc@plt+0x590c>
mov    (%ebx),%eax
cmp    %dl,(%eax)
je     804e73e <__ctype_b_loc@plt+0x592e>
call   804ae10 <__ctype_b_loc@plt+0x2000>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    0x44(%esp),%esi
cmp    0x48(%esp),%esi
mov    %eax,%ebx
jg     804e6fc <__ctype_b_loc@plt+0x58ec>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   80494d0 <__ctype_b_loc@plt+0x6c0>
test   %eax,%eax
mov    %eax,%edi
je     804e71c <__ctype_b_loc@plt+0x590c>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804e6bf <__ctype_b_loc@plt+0x58af>
mov    0xc(%ebx),%eax
test   %eax,%eax
jle    804e6bf <__ctype_b_loc@plt+0x58af>
add    %edi,%eax
mov    %edi,%edx
xchg   %ax,%ax
cmpb   $0x0,(%edx)
jne    804e6b8 <__ctype_b_loc@plt+0x58a8>
movb   $0xa,(%edx)
add    $0x1,%edx
cmp    %eax,%edx
jne    804e6b0 <__ctype_b_loc@plt+0x58a0>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8048d30 <regexec@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
cmp    0x4c(%esp),%eax
je     804e710 <__ctype_b_loc@plt+0x5900>
add    $0x1,%esi
mov    (%ebx),%ebx
cmp    %esi,0x48(%esp)
jge    804e688 <__ctype_b_loc@plt+0x5878>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804aed0 <__ctype_b_loc@plt+0x20c0>
test   %eax,%eax
jne    804e6f1 <__ctype_b_loc@plt+0x58e1>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x8050264,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%eax
mov    %eax,(%ebx)
jmp    804e665 <__ctype_b_loc@plt+0x5855>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x48(%esp),%edi
mov    (%esi),%edx
movzbl (%edx),%eax
movl   $0x0,(%edi)
mov    0x44(%esp),%edi
cmp    $0xa,%al
mov    %al,0xf(%esp)
movl   $0x0,(%edi)
je     804e8a0 <__ctype_b_loc@plt+0x5a90>
movl   $0x0,0x1c(%esp)
movzbl (%edx),%eax
mov    %al,0xe(%esp)
lea    0x1(%edx),%eax
mov    %eax,(%esi)
movzbl 0x1(%edx),%eax
cmp    $0x25,%al
je     804e930 <__ctype_b_loc@plt+0x5b20>
xor    %ebx,%ebx
cmp    %al,0xe(%esp)
je     804e7ff <__ctype_b_loc@plt+0x59ef>
lea    0x2(%ebx),%edi
mov    %edi,0x8(%esp)
movl   $0x8053798,0x4(%esp)
movl   $0x805379c,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804e8f8 <__ctype_b_loc@plt+0x5ae8>
mov    (%esi),%eax
lea    0x1(%ebx),%edx
mov    0x805379c,%ecx
lea    0x1(%eax),%ebp
mov    %ebp,(%esi)
movzbl (%eax),%eax
add    %ebx,%ecx
cmp    $0xa,%al
mov    %al,(%ecx)
je     804e888 <__ctype_b_loc@plt+0x5a78>
cmp    $0x5c,%al
je     804e908 <__ctype_b_loc@plt+0x5af8>
mov    (%esi),%eax
movzbl (%eax),%eax
cmp    %al,0xe(%esp)
mov    %edx,%ebx
jne    804e7a8 <__ctype_b_loc@plt+0x5998>
lea    0x1(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x8053798,0x4(%esp)
movl   $0x805379c,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804e8f8 <__ctype_b_loc@plt+0x5ae8>
mov    0x805379c,%eax
mov    %ebx,0x8053794
movb   $0x0,(%eax,%ebx,1)
mov    0x805379c,%eax
test   %eax,%eax
je     804e8f8 <__ctype_b_loc@plt+0x5ae8>
mov    (%esi),%ecx
movzbl (%ecx),%edx
cmp    $0xa,%dl
je     804e988 <__ctype_b_loc@plt+0x5b78>
cmp    %dl,0xf(%esp)
je     804e978 <__ctype_b_loc@plt+0x5b68>
lea    -0x31(%edx),%eax
cmp    $0x8,%al
jbe    804e99f <__ctype_b_loc@plt+0x5b8f>
cmp    $0x67,%dl
mov    $0x1,%eax
jne    804e8b5 <__ctype_b_loc@plt+0x5aa5>
mov    0x44(%esp),%edi
add    $0x1,%ecx
mov    %ecx,(%esi)
movl   $0x10,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%esi),%ecx
movzbl (%ecx),%eax
test   %al,%al
jne    804e7f7 <__ctype_b_loc@plt+0x59e7>
sub    $0x1,%ecx
mov    %ecx,(%esi)
jmp    804e802 <__ctype_b_loc@plt+0x59f2>
nop
movl   $0x0,0x8053794
00
mov    $0x1,%eax
movl   $0x8,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%edx
cmp    $0x0,%edx
je     804e8d2 <__ctype_b_loc@plt+0x5ac2>
jle    804e920 <__ctype_b_loc@plt+0x5b10>
cmpb   $0xa,-0x1(%eax,%edx,1)
je     804e920 <__ctype_b_loc@plt+0x5b10>
mov    0x8053184,%eax
mov    %eax,(%esp)
call   8048da0 <clearerr@plt>
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804b2c0 <__ctype_b_loc@plt+0x24b0>
test   %eax,%eax
mov    %eax,(%esi)
jne    804e8c0 <__ctype_b_loc@plt+0x5ab0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
add    0x805379c,%edx
lea    0x1(%eax),%ecx
mov    %ecx,(%esi)
movzbl (%eax),%eax
cmp    $0xa,%al
mov    %al,(%edx)
je     804e968 <__ctype_b_loc@plt+0x5b58>
mov    (%esi),%eax
movzbl (%eax),%eax
mov    %edi,%ebx
jmp    804e7a2 <__ctype_b_loc@plt+0x5992>
lea    0x0(%esi),%esi
movzbl 0xe(%esp),%ecx
cmp    0x2(%edx),%cl
jne    804e7a0 <__ctype_b_loc@plt+0x5990>
add    $0x2,%edx
mov    %edx,(%esi)
mov    0x805379c,%eax
test   %eax,%eax
jne    804e836 <__ctype_b_loc@plt+0x5a26>
movl   $0x805024b,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
mov    0x805379c,%eax
jmp    804e836 <__ctype_b_loc@plt+0x5a26>
xchg   %ax,%ax
mov    0x4c(%esp),%ebx
test   %ebx,%ebx
jne    804e91e <__ctype_b_loc@plt+0x5b0e>
jmp    804e8df <__ctype_b_loc@plt+0x5acf>
lea    0x0(%esi),%esi
lea    0x1(%ecx),%eax
mov    %eax,(%esi)
movzbl 0x1(%ecx),%edx
mov    %eax,%ecx
jmp    804e856 <__ctype_b_loc@plt+0x5a46>
mov    0x44(%esp),%eax
movl   $0x8,(%eax)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x48(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804f4c0 <__ctype_b_loc@plt+0x66b0>
jmp    804e8b5 <__ctype_b_loc@plt+0x5aa5>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%esi
call   804e300 <__ctype_b_loc@plt+0x54f0>
mov    %eax,%edi
mov    %eax,0x1c(%esp)
call   8049380 <__ctype_b_loc@plt+0x570>
test   %edi,%edi
mov    %eax,%ebx
je     804ea8c <__ctype_b_loc@plt+0x5c7c>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
mov    %ebx,(%esp)
je     804eaa0 <__ctype_b_loc@plt+0x5c90>
call   8049440 <__ctype_b_loc@plt+0x630>
mov    %eax,%ebx
test   %ebx,%ebx
je     804ea73 <__ctype_b_loc@plt+0x5c63>
mov    %ebx,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,(%esp)
mov    %eax,%ebp
call   80494d0 <__ctype_b_loc@plt+0x6c0>
test   %eax,%eax
mov    %eax,%edi
je     804ea8c <__ctype_b_loc@plt+0x5c7c>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804ea47 <__ctype_b_loc@plt+0x5c37>
mov    0xc(%ebp),%eax
test   %eax,%eax
jle    804ea47 <__ctype_b_loc@plt+0x5c37>
add    %edi,%eax
mov    %edi,%edx
lea    0x0(%esi),%esi
cmpb   $0x0,(%edx)
jne    804ea40 <__ctype_b_loc@plt+0x5c30>
movb   $0xa,(%edx)
add    $0x1,%edx
cmp    %eax,%edx
jne    804ea38 <__ctype_b_loc@plt+0x5c28>
mov    0x1c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048d30 <regexec@plt>
test   %eax,%eax
je     804eaac <__ctype_b_loc@plt+0x5c9c>
call   8049380 <__ctype_b_loc@plt+0x570>
cmp    %eax,%ebx
jne    804e9f0 <__ctype_b_loc@plt+0x5be0>
movl   $0x80505d0,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__ctype_b_loc@plt+0x650>
mov    %eax,%ebx
jmp    804ea02 <__ctype_b_loc@plt+0x5bf2>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804f420 <__ctype_b_loc@plt+0x6610>
mov    0x20(%esp),%eax
call   804e300 <__ctype_b_loc@plt+0x54f0>
test   %eax,%eax
mov    %eax,%ebx
je     804eb0a <__ctype_b_loc@plt+0x5cfa>
mov    0x80537a4,%eax
cmp    %eax,%ebx
je     804eb0a <__ctype_b_loc@plt+0x5cfa>
test   %eax,%eax
je     804eafa <__ctype_b_loc@plt+0x5cea>
mov    %eax,(%esp)
call   8048bb0 <regfree@plt>
mov    0x80537a4,%eax
mov    %eax,(%esp)
call   8048b00 <free@plt>
mov    %ebx,0x80537a4
movl   $0x1,0x80537a0
00
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
test   %ebx,%ebx
setne  %al
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x13c,%esp
mov    0x150(%esp),%ebx
lea    -0x1(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <__ctype_b_loc@plt+0x5b0>
mov    0x154(%esp),%eax
sub    %ebx,%eax
mov    %eax,0x38(%esp)
js     804f0f3 <__ctype_b_loc@plt+0x62e3>
mov    0x158(%esp),%eax
movl   $0x0,0x3c(%esp)
movl   $0x0,0x30(%esp)
and    $0x10,%eax
mov    %eax,0x28(%esp)
lea    0x0(%esi),%esi
call   8049390 <__ctype_b_loc@plt+0x580>
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,(%esp)
mov    %eax,%ebx
call   80494d0 <__ctype_b_loc@plt+0x6c0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     804ef10 <__ctype_b_loc@plt+0x6100>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804ebbf <__ctype_b_loc@plt+0x5daf>
mov    0xc(%ebx),%edx
test   %edx,%edx
jle    804f11c <__ctype_b_loc@plt+0x630c>
mov    0x2c(%esp),%eax
add    %eax,%edx
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
jne    804ebb8 <__ctype_b_loc@plt+0x5da8>
movb   $0xa,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    804ebb0 <__ctype_b_loc@plt+0x5da0>
mov    0xc(%ebx),%eax
mov    %eax,0x34(%esp)
lea    0x40(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x1e,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80537a4,%eax
mov    %eax,(%esp)
call   8048d30 <regexec@plt>
test   %eax,%eax
jne    804f0d8 <__ctype_b_loc@plt+0x62c8>
mov    0x15c(%esp),%esi
xor    %edi,%edi
xor    %ebx,%ebx
mov    0x2c(%esp),%ebp
movl   $0x0,0x20(%esp)
test   %esi,%esi
mov    %ebp,0x18(%esp)
je     804ed22 <__ctype_b_loc@plt+0x5f12>
xchg   %ax,%ax
addl   $0x1,0x20(%esp)
mov    0x20(%esp),%eax
cmp    %eax,0x15c(%esp)
je     804ed22 <__ctype_b_loc@plt+0x5f12>
mov    0x44(%esp),%esi
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
lea    (%ebx,%esi,1),%ebp
mov    %ebp,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804ec90 <__ctype_b_loc@plt+0x5e80>
test   %esi,%esi
jle    804ec90 <__ctype_b_loc@plt+0x5e80>
mov    0x18(%esp),%eax
lea    (%eax,%esi,1),%ecx
jmp    804ec7f <__ctype_b_loc@plt+0x5e6f>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    %ecx,%eax
je     804ec90 <__ctype_b_loc@plt+0x5e80>
cmpb   $0xa,(%eax)
jne    804ec78 <__ctype_b_loc@plt+0x5e68>
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %ecx,%eax
jne    804ec7f <__ctype_b_loc@plt+0x5e6f>
xchg   %ax,%ax
mov    0x18(%esp),%eax
add    0x8053790,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8048b10 <memcpy@plt>
mov    0x44(%esp),%eax
add    %eax,0x18(%esp)
mov    0x18(%esp),%esi
cmpb   $0x0,(%esi)
je     804f10d <__ctype_b_loc@plt+0x62fd>
test   %edi,%edi
je     804ecdc <__ctype_b_loc@plt+0x5ecc>
mov    0x28(%esp),%edx
test   %edx,%edx
je     804ef61 <__ctype_b_loc@plt+0x6151>
test   %eax,%eax
je     804ef61 <__ctype_b_loc@plt+0x6151>
mov    $0x1,%edi
lea    0x40(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
movl   $0x1,0x10(%esp)
movl   $0x1e,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80537a4,%eax
mov    %eax,(%esp)
call   8048d30 <regexec@plt>
test   %eax,%eax
jne    804f10d <__ctype_b_loc@plt+0x62fd>
mov    0x15c(%esp),%esi
mov    %ebp,%ebx
test   %esi,%esi
jne    804ec20 <__ctype_b_loc@plt+0x5e10>
mov    0x40(%esp),%esi
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
lea    (%esi,%ebx,1),%ebp
mov    %ebp,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804ed80 <__ctype_b_loc@plt+0x5f70>
mov    0x44(%esp),%ecx
test   %ecx,%ecx
jle    804ed80 <__ctype_b_loc@plt+0x5f70>
mov    0x18(%esp),%eax
add    %eax,%ecx
jmp    804ed6f <__ctype_b_loc@plt+0x5f5f>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %ecx,%eax
je     804ed80 <__ctype_b_loc@plt+0x5f70>
cmpb   $0xa,(%eax)
jne    804ed68 <__ctype_b_loc@plt+0x5f58>
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %ecx,%eax
jne    804ed6f <__ctype_b_loc@plt+0x5f5f>
xchg   %ax,%ax
mov    0x18(%esp),%eax
add    0x8053790,%ebx
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048b10 <memcpy@plt>
mov    0x80537a4,%eax
mov    0x8053794,%ecx
mov    0x805379c,%ebx
mov    0x18(%eax),%eax
test   %ecx,%ecx
mov    %eax,0x1c(%esp)
jg     804ee18 <__ctype_b_loc@plt+0x6008>
jmp    804ef20 <__ctype_b_loc@plt+0x6110>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x30,%eax
mov    %edi,%ebx
cmp    %eax,0x1c(%esp)
jge    804eea0 <__ctype_b_loc@plt+0x6090>
nop
lea    0x1(%ebp),%edi
mov    %edi,0x8(%esp)
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
movzbl (%ebx),%eax
mov    0x8053790,%edx
mov    %al,(%edx,%ebp,1)
mov    %edi,%ebp
add    $0x1,%ebx
mov    %ebx,%eax
sub    0x805379c,%eax
cmp    0x8053794,%eax
jge    804ef20 <__ctype_b_loc@plt+0x6110>
movzbl (%ebx),%eax
cmp    $0x26,%al
je     804ee38 <__ctype_b_loc@plt+0x6028>
cmp    $0x5c,%al
jne    804edd0 <__ctype_b_loc@plt+0x5fc0>
movsbl 0x1(%ebx),%eax
lea    0x1(%ebx),%edi
lea    -0x31(%eax),%edx
cmp    $0x8,%dl
jbe    804edc0 <__ctype_b_loc@plt+0x5fb0>
mov    %edi,%ebx
jmp    804edd0 <__ctype_b_loc@plt+0x5fc0>
xchg   %ax,%ax
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
lea    (%edi,%ebp,1),%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
cmp    %edi,%esi
jge    804ee01 <__ctype_b_loc@plt+0x5ff1>
sub    %esi,%edi
sub    %ebp,%esi
mov    %esi,%edx
mov    0x18(%esp),%esi
add    %ebp,%edi
mov    %ebp,%eax
lea    (%esi,%edx,1),%ebp
lea    0x0(%esi),%esi
movzbl 0x0(%ebp,%eax,1),%edx
mov    0x8053790,%ecx
mov    %dl,(%ecx,%eax,1)
add    $0x1,%eax
cmp    %edi,%eax
jne    804ee80 <__ctype_b_loc@plt+0x6070>
mov    %eax,%ebp
jmp    804ee01 <__ctype_b_loc@plt+0x5ff1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp,%eax,8),%eax
mov    0x4(%eax),%ecx
mov    (%eax),%esi
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
lea    0x0(%ebp,%ecx,1),%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x24(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
mov    0x24(%esp),%ecx
cmp    %ecx,%esi
jge    804ee01 <__ctype_b_loc@plt+0x5ff1>
mov    0x18(%esp),%edx
sub    %esi,%ecx
sub    %ebp,%esi
add    %ebp,%ecx
add    %esi,%edx
nop
movzbl (%edx,%ebp,1),%eax
mov    0x8053790,%ebx
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
cmp    %ecx,%ebp
jne    804eee8 <__ctype_b_loc@plt+0x60d8>
mov    %edi,%ebx
jmp    804ee01 <__ctype_b_loc@plt+0x5ff1>
movl   $0x80505d9,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
nop
xor    %eax,%eax
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%ebp),%eax
mov    %eax,0x8(%esp)
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
mov    0x8053790,%eax
test   %ebp,%ebp
movb   $0x0,(%eax,%ebp,1)
js     804ef10 <__ctype_b_loc@plt+0x6100>
mov    0x44(%esp),%eax
add    %eax,0x18(%esp)
mov    0x18(%esp),%esi
cmpb   $0x0,(%esi)
jne    804ecc3 <__ctype_b_loc@plt+0x5eb3>
mov    %ebp,%esi
mov    0x18(%esp),%ebp
movl   $0x1,0x1c(%esp)
mov    0x2c(%esp),%ebx
add    0x34(%esp),%ebx
movl   $0x805378c,0x4(%esp)
movl   $0x8053790,(%esp)
sub    %ebp,%ebx
lea    (%ebx,%esi,1),%edi
lea    0x2(%edi),%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804ef10 <__ctype_b_loc@plt+0x6100>
test   %ebx,%ebx
jle    804efb7 <__ctype_b_loc@plt+0x61a7>
mov    0x44(%esp),%eax
test   %eax,%eax
jne    804efb7 <__ctype_b_loc@plt+0x61a7>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    804ef03 <__ctype_b_loc@plt+0x60f3>
call   80493e0 <__ctype_b_loc@plt+0x5d0>
test   %eax,%eax
je     804efe6 <__ctype_b_loc@plt+0x61d6>
test   %ebx,%ebx
jle    804efe6 <__ctype_b_loc@plt+0x61d6>
lea    0x0(%ebp,%ebx,1),%edx
mov    %ebp,%eax
jmp    804efd7 <__ctype_b_loc@plt+0x61c7>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    %edx,%eax
je     804efe6 <__ctype_b_loc@plt+0x61d6>
cmpb   $0xa,(%eax)
jne    804efd0 <__ctype_b_loc@plt+0x61c0>
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    804efd7 <__ctype_b_loc@plt+0x61c7>
add    0x8053790,%esi
mov    %ebp,0x4(%esp)
mov    $0xa,%ebp
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
call   8048b10 <memcpy@plt>
mov    0x8053790,%eax
add    %edi,%eax
mov    %bp,(%eax)
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804f0d8 <__ctype_b_loc@plt+0x62c8>
add    $0x1,%edi
js     804ef10 <__ctype_b_loc@plt+0x6100>
je     804f0d8 <__ctype_b_loc@plt+0x62c8>
mov    0x8053790,%ebx
call   804f420 <__ctype_b_loc@plt+0x6610>
call   8049380 <__ctype_b_loc@plt+0x570>
lea    (%ebx,%edi,1),%ebp
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
mov    0x160(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   8049f40 <__ctype_b_loc@plt+0x1130>
test   %eax,%eax
je     804f0b9 <__ctype_b_loc@plt+0x62a9>
xor    %esi,%esi
jmp    804f074 <__ctype_b_loc@plt+0x6264>
nop
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,(%esp)
call   8049710 <__ctype_b_loc@plt+0x900>
mov    %eax,0x8(%esi)
cmp    %ebp,%ebx
je     804f0cb <__ctype_b_loc@plt+0x62bb>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
call   8049840 <__ctype_b_loc@plt+0xa30>
test   %eax,%eax
mov    %eax,%ebx
je     804f0b9 <__ctype_b_loc@plt+0x62a9>
test   %esi,%esi
jne    804f060 <__ctype_b_loc@plt+0x6250>
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %eax,%esi
call   8049380 <__ctype_b_loc@plt+0x570>
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049bb0 <__ctype_b_loc@plt+0xda0>
test   %eax,%eax
mov    %eax,%esi
jne    804f070 <__ctype_b_loc@plt+0x6260>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
add    $0x13c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
movl   $0x1,0x3c(%esp)
addl   $0x1,0x30(%esp)
mov    0x38(%esp),%eax
cmp    %eax,0x30(%esp)
jle    804eb70 <__ctype_b_loc@plt+0x5d60>
mov    0x3c(%esp),%esi
test   %esi,%esi
jne    804f0fd <__ctype_b_loc@plt+0x62ed>
testb  $0x1,0x158(%esp)
je     804f125 <__ctype_b_loc@plt+0x6315>
add    $0x13c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%esi
mov    0x18(%esp),%ebp
mov    %edi,0x1c(%esp)
jmp    804ef6f <__ctype_b_loc@plt+0x615f>
mov    %edx,0x34(%esp)
jmp    804ebc6 <__ctype_b_loc@plt+0x5db6>
movl   $0x80505d0,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
jmp    804ef12 <__ctype_b_loc@plt+0x6102>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x2c,%esp
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x0,(%esp)
call   8048b90 <ioctl@plt>
test   %eax,%eax
js     804f191 <__ctype_b_loc@plt+0x6381>
movzwl 0x18(%esp),%eax
lea    -0x3(%eax),%edx
cmp    $0x254,%dx
ja     804f17a <__ctype_b_loc@plt+0x636a>
sub    $0x2,%eax
mov    %eax,0x8053174
movzwl 0x1a(%esp),%eax
lea    -0x9(%eax),%edx
cmp    $0x6fe,%dx
ja     804f191 <__ctype_b_loc@plt+0x6381>
sub    $0x8,%eax
mov    %eax,0x8053170
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xa4,%esp
lea    0x18(%esp),%eax
lea    0x14(%esp),%esi
mov    %eax,(%esp)
mov    %edx,0x14(%esp)
call   8048d60 <sigemptyset@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x10000000,0x98(%esp)
10
call   8048dd0 <sigaction@plt>
add    $0xa4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    $0x7075,%eax
movl   $0x682e6465,0x25(%esp)
mov    %ax,0x29(%esp)
movb   $0x0,0x2b(%esp)
movl   $0x0,0x80537b4
00
call   80493d0 <__ctype_b_loc@plt+0x5c0>
test   %eax,%eax
je     804f339 <__ctype_b_loc@plt+0x6529>
call   8049400 <__ctype_b_loc@plt+0x5f0>
test   %eax,%eax
je     804f339 <__ctype_b_loc@plt+0x6529>
xchg   %ax,%ax
call   80493d0 <__ctype_b_loc@plt+0x5c0>
movl   $0x1,0x8(%esp)
movl   $0x804fa7f,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x25(%esp),%eax
mov    %eax,(%esp)
call   804b9e0 <__ctype_b_loc@plt+0x2bd0>
test   %eax,%eax
jns    804f339 <__ctype_b_loc@plt+0x6529>
movl   $0x80505f4,(%esp)
call   8048bd0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804f360 <__ctype_b_loc@plt+0x6550>
mov    %eax,(%esp)
call   8048c90 <strlen@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804f348 <__ctype_b_loc@plt+0x6538>
xor    %eax,%eax
cmpb   $0x2f,-0x1(%ebp,%ebx,1)
setne  %al
lea    (%ebx,%eax,1),%edx
mov    %eax,%esi
mov    %edx,0x1c(%esp)
lea    0x7(%edx),%edi
movl   $0x0,(%esp)
call   80496b0 <__ctype_b_loc@plt+0x8a0>
cmp    %edi,%eax
jg     804f2c8 <__ctype_b_loc@plt+0x64b8>
movl   $0x1,(%esp)
call   8048c50 <exit@plt>
nop
mov    0x1c(%esp),%eax
add    $0x7,%eax
mov    %eax,(%esp)
call   8048bf0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804f2bb <__ctype_b_loc@plt+0x64ab>
test   %ebx,%ebx
je     804f2bb <__ctype_b_loc@plt+0x64ab>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8048b10 <memcpy@plt>
test   %esi,%esi
je     804f2f9 <__ctype_b_loc@plt+0x64e9>
movb   $0x2f,(%edi,%ebx,1)
mov    0x25(%esp),%eax
add    %edi,%esi
add    %esi,%ebx
mov    %eax,(%ebx)
movzwl 0x29(%esp),%eax
mov    %ax,0x4(%ebx)
movzbl 0x2b(%esp),%eax
mov    %al,0x6(%ebx)
call   80493d0 <__ctype_b_loc@plt+0x5c0>
movl   $0x1,0x8(%esp)
movl   $0x804fa7f,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   804b9e0 <__ctype_b_loc@plt+0x2bd0>
test   %eax,%eax
js     804f2bb <__ctype_b_loc@plt+0x64ab>
movl   $0x0,(%esp)
call   8048c50 <exit@plt>
lea    0x0(%esi),%esi
mov    $0x8,%edi
mov    $0x1,%esi
movl   $0x1,0x1c(%esp)
jmp    804f2ab <__ctype_b_loc@plt+0x649b>
nop
mov    $0x8,%edi
xor    %ebx,%ebx
movl   $0x1,0x1c(%esp)
mov    $0x1,%esi
jmp    804f2ab <__ctype_b_loc@plt+0x649b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80537b8,%edx
test   %edx,%edx
je     804f398 <__ctype_b_loc@plt+0x6588>
movl   $0x1,0x80537b4
00
ret
lea    0x0(%esi),%esi
sub    $0xc,%esp
call   804f1f0 <__ctype_b_loc@plt+0x63e0>
mov    0x80537b8,%ecx
test   %ecx,%ecx
je     804f3b5 <__ctype_b_loc@plt+0x65a5>
movl   $0x1,0x80537b0
00
ret
sub    $0xc,%esp
mov    0x10(%esp),%eax
call   8048e20 <__ctype_b_loc@plt+0x10>
jmp    804f3d0 <__ctype_b_loc@plt+0x65c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0xc,%esp
mov    0x80537b8,%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x80537b8
jle    804f3e8 <__ctype_b_loc@plt+0x65d8>
add    $0xc,%esp
ret
mov    0x80537b4,%eax
movl   $0x0,0x80537b8
00
test   %eax,%eax
jne    804f40e <__ctype_b_loc@plt+0x65fe>
mov    0x80537b0,%eax
test   %eax,%eax
je     804f3e4 <__ctype_b_loc@plt+0x65d4>
mov    $0x2,%eax
call   8048e20 <__ctype_b_loc@plt+0x10>
call   804f1f0 <__ctype_b_loc@plt+0x63e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
addl   $0x1,0x80537b8
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x1c,(%esp)
call   804f140 <__ctype_b_loc@plt+0x6330>
movl   $0x0,(%esp)
call   8048df0 <isatty@plt>
test   %eax,%eax
je     804f45e <__ctype_b_loc@plt+0x664e>
mov    $0x804f140,%edx
mov    $0x1c,%eax
call   804f1a0 <__ctype_b_loc@plt+0x6390>
mov    $0x804f380,%edx
mov    $0x1,%eax
call   804f1a0 <__ctype_b_loc@plt+0x6390>
mov    $0x1,%edx
mov    $0x3,%eax
call   804f1a0 <__ctype_b_loc@plt+0x6390>
mov    $0x804f3a0,%edx
mov    $0x2,%eax
add    $0x1c,%esp
jmp    804f1a0 <__ctype_b_loc@plt+0x6390>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    %eax,0x8053174
ret
lea    0x0(%esi),%esi
mov    0x8053170,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8053174,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8048d00 <__errno_location@plt>
mov    0x44(%esp),%ebx
mov    0x40(%esp),%ebp
mov    0x48(%esp),%edi
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8048e00 <strtol@plt>
test   %edi,%edi
mov    %eax,0x0(%ebp)
mov    0x1c(%esp),%eax
je     804f505 <__ctype_b_loc@plt+0x66f5>
mov    %eax,(%edi)
cmp    %eax,%ebx
je     804f540 <__ctype_b_loc@plt+0x6730>
cmpl   $0x22,(%esi)
mov    $0x1,%eax
je     804f520 <__ctype_b_loc@plt+0x6710>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805060e,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
movl   $0x0,0x0(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x80505f9,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
xor    %eax,%eax
movl   $0x0,0x0(%ebp)
jmp    804f513 <__ctype_b_loc@plt+0x6703>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x28(%esp),%edx
mov    0x20(%esp),%esi
cmp    %edx,(%ebx)
jge    804f5b8 <__ctype_b_loc@plt+0x67a8>
cmp    $0x1ff,%edx
jg     804f5c0 <__ctype_b_loc@plt+0x67b0>
mov    $0x200,%edx
mov    $0x200,%edi
mov    (%esi),%eax
addl   $0x1,0x80537b8
test   %eax,%eax
je     804f5d0 <__ctype_b_loc@plt+0x67c0>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048be0 <realloc@plt>
test   %eax,%eax
je     804f5e0 <__ctype_b_loc@plt+0x67d0>
mov    %edi,(%ebx)
mov    %eax,(%esi)
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edx,%edi
sar    $0x9,%edi
shl    $0xa,%edi
mov    %edi,%edx
jmp    804f58d <__ctype_b_loc@plt+0x677d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   8048bf0 <malloc@plt>
jmp    804f5a6 <__ctype_b_loc@plt+0x6796>
lea    0x0(%esi),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
jmp    804f5b8 <__ctype_b_loc@plt+0x67a8>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x28(%esp),%edx
mov    0x20(%esp),%esi
cmp    %edx,(%ebx)
jge    804f668 <__ctype_b_loc@plt+0x6858>
cmp    $0x1ff,%edx
jg     804f670 <__ctype_b_loc@plt+0x6860>
mov    $0x200,%edx
mov    $0x200,%edi
mov    (%esi),%eax
addl   $0x1,0x80537b8
test   %eax,%eax
je     804f680 <__ctype_b_loc@plt+0x6870>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048be0 <realloc@plt>
test   %eax,%eax
je     804f690 <__ctype_b_loc@plt+0x6880>
mov    %edi,(%ebx)
mov    %eax,(%esi)
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edx,%edi
sar    $0x9,%edi
shl    $0xa,%edi
mov    %edi,%edx
jmp    804f63d <__ctype_b_loc@plt+0x682d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   8048bf0 <malloc@plt>
jmp    804f656 <__ctype_b_loc@plt+0x6846>
lea    0x0(%esi),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
jmp    804f668 <__ctype_b_loc@plt+0x6858>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x28(%esp),%edx
mov    0x20(%esp),%esi
cmp    %edx,(%ebx)
jge    804f718 <__ctype_b_loc@plt+0x6908>
cmp    $0x1ff,%edx
jg     804f720 <__ctype_b_loc@plt+0x6910>
mov    $0x200,%edx
mov    $0x200,%edi
mov    (%esi),%eax
addl   $0x1,0x80537b8
test   %eax,%eax
je     804f730 <__ctype_b_loc@plt+0x6920>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048be0 <realloc@plt>
test   %eax,%eax
je     804f740 <__ctype_b_loc@plt+0x6930>
mov    %edi,(%ebx)
mov    %eax,(%esi)
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edx,%edi
sar    $0x9,%edi
shl    $0xa,%edi
mov    %edi,%edx
jmp    804f6ed <__ctype_b_loc@plt+0x68dd>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   8048bf0 <malloc@plt>
jmp    804f706 <__ctype_b_loc@plt+0x68f6>
lea    0x0(%esi),%esi
call   8048d00 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   804bcf0 <__ctype_b_loc@plt+0x2ee0>
movl   $0x804f888,(%esp)
call   804de10 <__ctype_b_loc@plt+0x5000>
call   804f3d0 <__ctype_b_loc@plt+0x65c0>
xor    %eax,%eax
jmp    804f718 <__ctype_b_loc@plt+0x6908>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048c90 <strlen@plt>
movl   $0x80537a8,0x4(%esp)
movl   $0x80537ac,(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   804f560 <__ctype_b_loc@plt+0x6750>
test   %eax,%eax
je     804f7dd <__ctype_b_loc@plt+0x69cd>
xor    %edx,%edx
jmp    804f7b4 <__ctype_b_loc@plt+0x69a4>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
test   %al,%al
mov    %al,(%ecx)
je     804f7d3 <__ctype_b_loc@plt+0x69c3>
add    $0x1,%ebx
mov    0x80537ac,%ecx
movzbl (%ebx),%eax
add    %edx,%ecx
cmp    $0x5c,%al
jne    804f7a8 <__ctype_b_loc@plt+0x6998>
movzbl 0x1(%ebx),%eax
add    $0x1,%edx
add    $0x1,%ebx
test   %al,%al
mov    %al,(%ecx)
jne    804f7b1 <__ctype_b_loc@plt+0x69a1>
mov    0x80537ac,%eax
add    $0x18,%esp
pop    %ebx
ret
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049200 <__ctype_b_loc@plt+0x3f0>
add    $0x3805,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048a84 <pathconf@plt-0x3c>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804f849 <__ctype_b_loc@plt+0x6a39>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804f828 <__ctype_b_loc@plt+0x6a18>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804f860 <__ctype_b_loc@plt+0x6a50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
push   %ebx
sub    $0x8,%esp
call   8049200 <__ctype_b_loc@plt+0x3f0>
add    $0x3793,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
dec    %ebp
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804f907 <_IO_stdin_used+0x83>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %cl,%fs:%gs:0x6e(%ecx)
jbe    804f8fe <_IO_stdin_used+0x7a>
insb   (%dx),%es:(%edi)
imul   $0x65726464,0x61(%eax,%eiz,1),%esp
jae    804f91b <_IO_stdin_used+0x97>
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f8d0 <_IO_stdin_used+0x4c>
jae    804f917 <_IO_stdin_used+0x93>
imul   $0x74,%gs:(%eax),%esp
gs
insl   (%dx),%es:(%edi)
jo     804f8da <_IO_stdin_used+0x56>
imul   $0x6143,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f8e6 <_IO_stdin_used+0x62>
jb     804f92d <_IO_stdin_used+0xa9>
popa
and    %dh,%fs:0x6d(%ebp,%eiz,2)
jo     804f8f0 <_IO_stdin_used+0x6c>
imul   $0x6143,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f8fc <_IO_stdin_used+0x78>
outsl  %ds:(%esi),(%dx)
jo     804f944 <_IO_stdin_used+0xc0>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ebp,%eiz,2)
jo     804f906 <_IO_stdin_used+0x82>
imul   $0x2f,0x0(%ebp,%eiz,2),%bp
dec    %esp
imul   $0x6f6f7420,0x65(%esi),%ebp
and    %ch,0x6e(%edi,%ebp,2)
add    %al,0x61(%bp,%di)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f922 <_IO_stdin_used+0x9e>
ja     804f976 <_IO_stdin_used+0xf2>
imul   $0x706d6574,0x20(%ebp,%eiz,2),%esi
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f939 <_IO_stdin_used+0xb5>
arpl   %bp,0x73(%edi,%ebp,2)
and    %dh,%gs:0x6d(%ebp,%eiz,2)
jo     804f944 <_IO_stdin_used+0xc0>
imul   $0x6f4e,0x0(%ebp,%eiz,2),%bp
je     804f995 <_IO_stdin_used+0x111>
imul   $0x206f7420,0x67(%esi),%ebp
jo     804f9ab <_IO_stdin_used+0x127>
je     804f938 <_IO_stdin_used+0xb4>
dec    %esi
outsl  %ds:(%esi),(%dx)
je     804f9a4 <_IO_stdin_used+0x120>
imul   $0x206f7420,0x67(%esi),%ebp
jne    804f9b3 <_IO_stdin_used+0x12f>
outsl  %fs:(%esi),(%dx)
add    %ah,(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x6d(%ecx)
bound  %ebp,0x67(%ecx)
jne    804f9c3 <_IO_stdin_used+0x13f>
jne    804f9c9 <_IO_stdin_used+0x145>
add    %dh,0x6e(%ebp)
jb     804f9c0 <_IO_stdin_used+0x13c>
arpl   %bp,0x67(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x706f2064,0x65(%edx),%edi
je     804f9d1 <_IO_stdin_used+0x14d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
add    %ch,0x70(%edi)
je     804f9da <_IO_stdin_used+0x156>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
sub    $0x2027002d,%eax
outsl  %fs:(%esi),(%dx)
gs
jae    804f9ed <_IO_stdin_used+0x169>
daa
je     804f9a2 <_IO_stdin_used+0x11e>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804f9a8 <_IO_stdin_used+0x124>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 804f9fd <_IO_stdin_used+0x179>
outsb  %gs:(%esi),(%dx)
je     804f994 <_IO_stdin_used+0x110>
daa
and    %dh,0x65(%edx)
jno    804fa0f <_IO_stdin_used+0x18b>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 804fa14 <_IO_stdin_used+0x190>
outsb  %gs:(%esi),(%dx)
je     804f9ab <_IO_stdin_used+0x127>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x70(%edi)
je     804fa20 <_IO_stdin_used+0x19c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x202d
add    %ch,0x70(%edi)
je     804fa2d <_IO_stdin_used+0x1a9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
jno    804fa40 <_IO_stdin_used+0x1bc>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 804fa45 <_IO_stdin_used+0x1c1>
outsb  %gs:(%esi),(%dx)
je     804f9fc <_IO_stdin_used+0x178>
sub    $0x2500202d,%eax
or     %eax,%fs:(%eax)
pop    %esp
or     (%eax),%al
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fa0e <_IO_stdin_used+0x18a>
jb     804fa55 <_IO_stdin_used+0x1d1>
popa
and    %dh,%fs:0x74(%ebx)
imul   $0x78656e55,%fs:0x0(%esi),%ebp
jo     804fa64 <_IO_stdin_used+0x1e0>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x6e(%ebp)
fs
sub    $0x662d666f,%eax
imul   $0x6e6e6143,0x0(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
je     804fa37 <_IO_stdin_used+0x1b3>
outsl  %ds:(%esi),(%dx)
jo     804fa7f <_IO_stdin_used+0x1fb>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
jo     804fa95 <_IO_stdin_used+0x211>
je     804fa42 <_IO_stdin_used+0x1be>
imul   $0x6143,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fa4e <_IO_stdin_used+0x1ca>
jb     804fa95 <_IO_stdin_used+0x211>
popa
and    %ch,%fs:0x6e(%ecx)
jo     804faac <_IO_stdin_used+0x228>
je     804fa59 <_IO_stdin_used+0x1d5>
imul   $0x654e,0x0(%ebp,%eiz,2),%bp
ja     804faae <_IO_stdin_used+0x22a>
imul   $0x736e6920,0x65(%esi),%ebp
gs
jb     804fac0 <_IO_stdin_used+0x23c>
gs or  %fs:%gs:(%eax),%al
dec    %esi
gs
ja     804fac0 <_IO_stdin_used+0x23c>
imul   $0x70706120,0x65(%esi),%ebp
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:(%eax),%al
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fa89 <_IO_stdin_used+0x205>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ch,%gs:0x6e(%ecx)
jo     804fae8 <_IO_stdin_used+0x264>
je     804fa95 <_IO_stdin_used+0x211>
imul   $0x6c25,0x0(%ebp,%eiz,2),%bp
jne    804fa88 <_IO_stdin_used+0x204>
add    %dh,0x0(%edi)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804faa8 <_IO_stdin_used+0x224>
outsl  %ds:(%esi),(%dx)
jo     804faf0 <_IO_stdin_used+0x26c>
outsb  %ds:(%esi),(%dx)
and    %ch,0x75(%edi)
je     804fb01 <_IO_stdin_used+0x27d>
jne    804fb07 <_IO_stdin_used+0x283>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fac0 <_IO_stdin_used+0x23c>
ja     804fb14 <_IO_stdin_used+0x290>
imul   $0x656c6966,0x20(%ebp,%eiz,2),%esi
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fad2 <_IO_stdin_used+0x24e>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ch,%gs:0x75(%edi)
je     804fb2c <_IO_stdin_used+0x2a8>
jne    804fb32 <_IO_stdin_used+0x2ae>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x25203a73
jae    804facb <_IO_stdin_used+0x247>
and    $0x203a73,%eax
push   %ebx
push   $0x206c6c65
popa
arpl   %sp,0x65(%ebx)
jae    804fb4f <_IO_stdin_used+0x2cb>
and    %dh,0x65(%edx)
jae    804fb55 <_IO_stdin_used+0x2d1>
jb     804fb4c <_IO_stdin_used+0x2c8>
arpl   %si,0x64(%ebp,%eiz,2)
add    %cl,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804fb67 <_IO_stdin_used+0x2e3>
and    %ah,0x78(%ebp)
push   $0x74737561
gs fs add %al,%cs:%fs:%gs:0x4e(%edi)
push   %ebp
and    %al,0x64(%ebp)
add    %ah,0x202d2073
push   %esp
push   $0x4e472065
push   %ebp
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x64(%ebp)
imul   $0xa000a2e,0x72(%edi,%ebp,2),%esi
push   %ebp
jae    804fb81 <_IO_stdin_used+0x2fd>
cmp    %gs:(%bx,%si),%ah
and    $0x6f5b2073,%eax
jo     804fb9f <_IO_stdin_used+0x31b>
imul   $0x5b205d73,0x6e(%edi),%ebp
imul   $0xa,0x5d(%ebp,%eiz,2),%bp
xor    %ebp,(%esi)
cmp    %eax,(%eax)
and    $0x73252073,%eax
or     (%eax),%al
xor    (%eax),%dh
xor    %esi,(%ebx)
add    %cl,0x6e(%ecx)
jbe    804fbae <_IO_stdin_used+0x32a>
insb   (%dx),%es:(%edi)
imul   $0x6e656c69,0x66(%eax,%eiz,1),%esp
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x61(%edx,%esi,2)
imul   $0x6c616e,%fs:0x6f(%ecx,%ebp,2),%esi
00
push   $0x706c65
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    804fbd5 <_IO_stdin_used+0x351>
sub    $0x74697865,%eax
sub    $0x74617473,%eax
jne    804fbef <_IO_stdin_used+0x36b>
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     804fbf7 <_IO_stdin_used+0x373>
add    %dh,0x75(%ecx)
imul   $0x6c697300,0x74(%ebp),%esp
outsb  %gs:(%esi),(%dx)
je     804fb91 <_IO_stdin_used+0x30d>
jbe    804fbf8 <_IO_stdin_used+0x374>
jb     804fbf7 <_IO_stdin_used+0x373>
outsl  %ds:(%esi),(%dx)
jae    804fbfd <_IO_stdin_used+0x379>
add    %dh,0x65(%esi)
jb     804fc10 <_IO_stdin_used+0x38c>
imul   $0x0,0x6e(%edi),%ebp
push   %esp
jb     804fc20 <_IO_stdin_used+0x39c>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     804fbd8 <_IO_stdin_used+0x354>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804fc21 <_IO_stdin_used+0x39d>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     804fc30 <_IO_stdin_used+0x3ac>
popa
je     804fc2f <_IO_stdin_used+0x3ab>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %cl,(%edx)
dec    %edi
jo     804fc44 <_IO_stdin_used+0x3c0>
imul   $0x200a3a73,0x6e(%edi),%ebp
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     804fc64 <_IO_stdin_used+0x3e0>
popa
jns    804fc1b <_IO_stdin_used+0x397>
je     804fc65 <_IO_stdin_used+0x3e1>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x2c562d20,0x20(%edx,%ecx,1),%esi
and    %ch,0x7265762d
jae    804fc84 <_IO_stdin_used+0x400>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    804fca2 <_IO_stdin_used+0x41e>
jo     804fca5 <_IO_stdin_used+0x421>
je     804fc52 <_IO_stdin_used+0x3ce>
jbe    804fc99 <_IO_stdin_used+0x415>
jb     804fca9 <_IO_stdin_used+0x425>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804fcad <_IO_stdin_used+0x429>
popa
je     804fcac <_IO_stdin_used+0x428>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x2c472d20,0x20(%edx,%ecx,1),%esi
and    %ch,0x6172742d
imul   $0x206c616e,%fs:0x6f(%ecx,%ebp,2),%esi
20
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804fcd9 <_IO_stdin_used+0x455>
je     804fce3 <_IO_stdin_used+0x45f>
bound  %ebp,0x6c(%ecx)
imul   $0x65646f6d,0x20(%ecx,%edi,2),%esi
or     (%eax),%ah
and    %ch,0x2d202c6c
sub    $0x736f6f6c,%eax
gs
sub    $0x74697865,%eax
sub    $0x74617473,%eax
jne    804fd12 <_IO_stdin_used+0x48e>
and    %ah,(%eax)
and    %ah,(%eax)
gs
js     804fd0f <_IO_stdin_used+0x48b>
je     804fcc8 <_IO_stdin_used+0x444>
ja     804fd13 <_IO_stdin_used+0x48f>
je     804fd14 <_IO_stdin_used+0x490>
and    %dh,(%eax)
and    %dh,0x74(%ebx)
popa
je     804fd29 <_IO_stdin_used+0x4a5>
jae    804fcd6 <_IO_stdin_used+0x452>
gs
jbe    804fd1e <_IO_stdin_used+0x49a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ah,0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x61(%esi)
imul   $0x702d2020,0xa(%ebx,%esi,2),%ebp
sub    $0x20,%al
sub    $0x6f72702d,%eax
insl   (%dx),%es:(%edi)
jo     804fd50 <_IO_stdin_used+0x4cc>
cmp    $0x49525453,%eax
dec    %esi
inc    %edi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    804fd60 <_IO_stdin_used+0x4dc>
and    %dl,%gs:0x54(%ebx)
push   %edx
dec    %ecx
dec    %esi
inc    %edi
and    %ah,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ch,0x6e(%ecx)
je     804fd65 <_IO_stdin_used+0x4e1>
jb     804fd63 <_IO_stdin_used+0x4df>
arpl   %si,0x76(%ecx,%ebp,2)
and    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     804fd82 <_IO_stdin_used+0x4fe>
or     (%eax),%ah
and    %ch,0x2d202c72
sub    $0x74736572,%eax
jb     804fd86 <_IO_stdin_used+0x502>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%edx)
jae    804fdab <_IO_stdin_used+0x527>
jb     804fda2 <_IO_stdin_used+0x51e>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x6f(%ebp)
fs or  %fs:%gs:(%eax),%ah
and    %ch,0x2d202c73
sub    $0x65697571,%eax
je     804fd7d <_IO_stdin_used+0x4f9>
and    %ch,0x6c69732d
outsb  %gs:(%esi),(%dx)
je     804fd7b <_IO_stdin_used+0x4f7>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     804fdd4 <_IO_stdin_used+0x550>
jb     804fdcb <_IO_stdin_used+0x547>
jae    804fddb <_IO_stdin_used+0x557>
and    %ah,0x61(%ecx,%ebp,2)
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jae    804fde5 <_IO_stdin_used+0x561>
imul   $0x2d20200a,0x73(%ebx),%esp
jbe    804fda6 <_IO_stdin_used+0x522>
and    %ch,0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
bound  %esp,0x20(%ebp)
jbe    804fdfc <_IO_stdin_used+0x578>
jb     804fdfb <_IO_stdin_used+0x577>
outsl  %ds:(%esi),(%dx)
jae    804fe01 <_IO_stdin_used+0x57d>
or     0x74(%ebx),%dl
popa
jb     804fe16 <_IO_stdin_used+0x592>
and    %ah,0x64(%ebp)
imul   $0x65722079,0x62(%eax,%eiz,1),%esi
popa
imul   $0x206e6920,%fs:0x67(%esi),%ebp
daa
imul   $0x6920,0x27(%ebp,%eiz,2),%bp
data16
and    %ah,0x69(%edi)
jbe    804fe29 <_IO_stdin_used+0x5a5>
outsb  %ds:(%esi),(%dx)
or     %cs:0x66(%ecx),%cl
and    %ah,(%edi)
imul   $0x6220,0x27(%ebp,%eiz,2),%bp
imul   $0x74697720,%gs:0x73(%bp),%ebp
74
push   $0x27206120
and    %esp,(%edi)
sub    $0x20,%al
jb     804fe4b <_IO_stdin_used+0x5c7>
popa
and    %ch,%fs:0x75(%edi)
je     804fe5d <_IO_stdin_used+0x5d9>
jne    804fe63 <_IO_stdin_used+0x5df>
and    %ch,0x66(%edi)
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%edx),%cl
inc    %ebp
js     804fe6f <_IO_stdin_used+0x5eb>
je     804fe28 <_IO_stdin_used+0x5a4>
jae    804fe7e <_IO_stdin_used+0x5fa>
popa
je     804fe82 <_IO_stdin_used+0x5fe>
jae    804fe49 <_IO_stdin_used+0x5c5>
and    %dh,(%eax)
and    %ah,0x6f(%esi)
jb     804fe36 <_IO_stdin_used+0x5b2>
popa
and    %ch,0x6f(%esi)
jb     804fe89 <_IO_stdin_used+0x605>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x78(%ebp)
imul   $0x6f662031,0x20(%esp,%ebp,1),%esi
jb     804fe4b <_IO_stdin_used+0x5c7>
outsb  %gs:(%esi),(%dx)
jbe    804fe98 <_IO_stdin_used+0x614>
jb     804fea0 <_IO_stdin_used+0x61c>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804fe98 <_IO_stdin_used+0x614>
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
jae    804fe62 <_IO_stdin_used+0x5de>
sub    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:0x6f(%esi),%ch
je     804fe6c <_IO_stdin_used+0x5e8>
outsw  %ds:(%esi),(%dx)
jne    804febe <_IO_stdin_used+0x63a>
fs
sub    $0x20,%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x6c(%esi)
popa
addr16 jae 804fe8d <_IO_stdin_used+0x609>
and    %cl,0x2f(%ecx)
dec    %edi
and    %ah,0x72(%ebp)
jb     804fed9 <_IO_stdin_used+0x655>
jb     804fedf <_IO_stdin_used+0x65b>
sub    $0x20,%al
gs
je     804fed4 <_IO_stdin_used+0x650>
sub    %ebp,(%eax,%eiz,1)
xor    (%eax),%ah
je     804fee7 <_IO_stdin_used+0x663>
and    %ch,0x6e(%ecx)
imul   $0x61206574,%fs:0x61(%ebx),%esp
and    %ah,0x6f(%ebx)
jb     804fefa <_IO_stdin_used+0x676>
jne    804fefa <_IO_stdin_used+0x676>
je     804feac <_IO_stdin_used+0x628>
outsl  %ds:(%esi),(%dx)
jb     804fe99 <_IO_stdin_used+0x615>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6e(%ecx)
jo     804ff10 <_IO_stdin_used+0x68c>
je     804febd <_IO_stdin_used+0x639>
imul   $0x3320,0x2c(%ebp,%eiz,2),%bp
and    %ah,0x6f(%esi)
jb     804fec9 <_IO_stdin_used+0x645>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
je     804ff15 <_IO_stdin_used+0x691>
jb     804ff20 <_IO_stdin_used+0x69c>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    804ff23 <_IO_stdin_used+0x69f>
jae    804ff30 <_IO_stdin_used+0x6ac>
outsb  %gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
gs
jb     804ff36 <_IO_stdin_used+0x6b2>
outsl  %ds:(%esi),(%dx)
jb     804fee7 <_IO_stdin_used+0x663>
sub    %ah,0x67(%ebp)
sub    $0x20,%al
bound  %esi,0x67(%ebp)
sub    %esp,(%eax)
ja     804ff3b <_IO_stdin_used+0x6b7>
imul   $0x7561630a,0x68(%ebx),%esp
jae    804ff41 <_IO_stdin_used+0x6bd>
and    %ah,%fs:0x64(%ebp)
and    %dh,0x20(%edi,%ebp,2)
jo     804ff47 <_IO_stdin_used+0x6c3>
outsb  %ds:(%esi),(%dx)
imul   $0x65520a0a,0x2e(%ebx),%esp
jo     804ff5f <_IO_stdin_used+0x6db>
jb     804ff66 <_IO_stdin_used+0x6e2>
and    %ah,0x75(%edx)
addr16 jae 804ff18 <_IO_stdin_used+0x694>
je     804ff69 <_IO_stdin_used+0x6e5>
and    %bh,(%edx,%eiz,2)
jne    804ff66 <_IO_stdin_used+0x6e2>
sub    $0x67406465,%eax
outsb  %ds:(%esi),(%dx)
jne    804ff35 <_IO_stdin_used+0x6b1>
outsl  %ds:(%esi),(%dx)
jb     804ff71 <_IO_stdin_used+0x6ed>
ds or  %cs:%ds:0x64(%ebp),%al
and    %ch,0x6f(%eax)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
push   $0x3a707474
das
das
ja     804ff9b <_IO_stdin_used+0x717>
ja     804ff54 <_IO_stdin_used+0x6d0>
outsb  %ds:(%si),(%dx)
jne    804ff58 <_IO_stdin_used+0x6d4>
outsl  %ds:(%esi),(%dx)
jb     804ff94 <_IO_stdin_used+0x710>
das
jae    804ff9f <_IO_stdin_used+0x71b>
data16
je     804ffaa <_IO_stdin_used+0x726>
popa
jb     804ff9b <_IO_stdin_used+0x717>
das
gs
fs
das
gs
fs
cs
push   $0xa6c6d74
inc    %edi
outsb  %gs:(%esi),(%dx)
gs
jb     804ffa9 <_IO_stdin_used+0x725>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804ff6f <_IO_stdin_used+0x6eb>
jne    804ffc4 <_IO_stdin_used+0x740>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     804ffd5 <_IO_stdin_used+0x751>
popa
jb     804ffc6 <_IO_stdin_used+0x742>
cmp    (%eax),%ah
push   $0x3a707474
das
das
ja     804ffe3 <_IO_stdin_used+0x75f>
ja     804ff9c <_IO_stdin_used+0x718>
outsb  %ds:(%si),(%dx)
jne    804ffa0 <_IO_stdin_used+0x71c>
outsl  %ds:(%esi),(%dx)
jb     804ffdc <_IO_stdin_used+0x758>
das
addr16
gs
je     804ffe2 <_IO_stdin_used+0x75e>
gs
insb   (%dx),%es:(%edi)
jo     804ff7e <_IO_stdin_used+0x6fa>
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     804fffd <_IO_stdin_used+0x779>
jb     804ffef <_IO_stdin_used+0x76b>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    %edi,(%ecx)
cmp    %esi,(%eax,%eiz,1)
inc    %ecx
outsb  %ds:(%esi),(%dx)
fs
jb     804fffd <_IO_stdin_used+0x779>
ja     804ffba <_IO_stdin_used+0x736>
dec    %esp
and    %cl,%cs:0x6f(%ebp)
outsl  %ds:(%esi),(%dx)
jb     8050007 <_IO_stdin_used+0x783>
or     %cs:0x6f(%ebx),%al
jo     8050021 <_IO_stdin_used+0x79d>
jb     8050013 <_IO_stdin_used+0x78f>
addr16 push $0x43282074
sub    %esp,(%eax)
and    $0x72462073,%eax
gs and %dl,%gs:0x6f(%ebx)
data16
je     8050036 <_IO_stdin_used+0x7b2>
popa
jb     8050027 <_IO_stdin_used+0x7a3>
and    %al,0x6f(%esi)
jne    8050035 <_IO_stdin_used+0x7b1>
fs
popa
je     8050034 <_IO_stdin_used+0x7b0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    8050044 <_IO_stdin_used+0x7c0>
and    %al,0x50(%edi)
dec    %esp
jbe    8050018 <_IO_stdin_used+0x794>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     8050067 <_IO_stdin_used+0x7e3>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     805001d <_IO_stdin_used+0x799>
insb   (%dx),%es:(%edi)
popa
je     8050066 <_IO_stdin_used+0x7e2>
jb     8050023 <_IO_stdin_used+0x79f>
cmp    $0x68,%al
je     805007b <_IO_stdin_used+0x7f7>
jo     8050043 <_IO_stdin_used+0x7bf>
das
das
outsb  %ds:(%si),(%dx)
jne    805003d <_IO_stdin_used+0x7b9>
outsl  %ds:(%esi),(%dx)
jb     8050079 <_IO_stdin_used+0x7f5>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 805008b <_IO_stdin_used+0x807>
cs
push   $0x3e6c6d74
or     0x69(%eax,%ebp,2),%dl
jae    805004b <_IO_stdin_used+0x7c7>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     80500af <_IO_stdin_used+0x82b>
popa
jb     80500a0 <_IO_stdin_used+0x81c>
cmp    (%eax),%ah
jns    80500ae <_IO_stdin_used+0x82a>
jne    8050061 <_IO_stdin_used+0x7dd>
popa
jb     80500a9 <_IO_stdin_used+0x825>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     80500c9 <_IO_stdin_used+0x845>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     80500d3 <_IO_stdin_used+0x84f>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     80500f0 <_IO_stdin_used+0x86c>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     80500ef <_IO_stdin_used+0x86b>
outsb  %ds:(%esi),(%dx)
je     80500ad <_IO_stdin_used+0x829>
jo     80500f4 <_IO_stdin_used+0x870>
jb     80500fe <_IO_stdin_used+0x87a>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
add    %al,%cs:(%eax)
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     805011c <_IO_stdin_used+0x898>
jb     80500e9 <_IO_stdin_used+0x865>
and    %dh,0x6e(%ebp)
arpl   %sp,0x75(%ecx)
addr16 push $0x706f2074
je     8050126 <_IO_stdin_used+0x8a2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,%cs:(%eax)
add    %al,(%eax)
inc    %edi
add    %al,(%eax)
add    %bl,-0x5(%edx)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
push   $0x66000000
sti
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,-0x5(%ebx)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jo     8050106 <_IO_stdin_used+0x882>
add    %al,(%eax)
jge    8050105 <_IO_stdin_used+0x881>
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
jb     8050112 <_IO_stdin_used+0x88e>
add    %al,(%eax)
(bad)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jae    805011e <_IO_stdin_used+0x89a>
add    %al,(%eax)
test   %bh,%bl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jae    805012a <_IO_stdin_used+0x8a6>
add    %al,(%eax)
mov    %bl,%bh
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jbe    8050136 <_IO_stdin_used+0x8b2>
add    %al,(%eax)
xchg   %eax,%ecx
sti
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
push   %esi
add    %al,(%eax)
add    %bl,0x804fb(%ecx)
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    80501bd <_IO_stdin_used+0x939>
insb   (%dx),%es:(%edi)
imul   $0x206b7261,0x6d(%eax,%eiz,1),%esp
arpl   %bp,0x61(%eax)
jb     80501cb <_IO_stdin_used+0x947>
arpl   %si,0x72(%ebp,%eiz,2)
add    %cl,0x6f(%esi)
and    %dh,0x72(%eax)
gs
jbe    80501e0 <_IO_stdin_used+0x95c>
outsl  %ds:(%esi),(%dx)
jne    80501ed <_IO_stdin_used+0x969>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %cl,%fs:0x6f(%esi)
and    %ah,0x75(%ebx)
jb     80501fc <_IO_stdin_used+0x978>
outsb  %gs:(%esi),(%dx)
je     80501ae <_IO_stdin_used+0x92a>
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
add    %al,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
add    %dl,0x6e(%di)
gs
js     805021e <_IO_stdin_used+0x99a>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x75(%ebx)
data32 imul $0x6544,0x0(%eax),%di
jae    805023b <_IO_stdin_used+0x9b7>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x78(%ebp)
jo     8050238 <_IO_stdin_used+0x9b4>
arpl   %si,0x64(%ebp,%eiz,2)
add    %cl,0x6e(%ecx)
jbe    805023d <_IO_stdin_used+0x9b9>
insb   (%dx),%es:(%edi)
imul   $0x616d6d6f,0x63(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x75(%ebx)
data32 imul $0x6e55,0x0(%eax),%di
gs
js     8050264 <_IO_stdin_used+0x9e0>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x64(%ecx)
fs
jb     8050264 <_IO_stdin_used+0x9e0>
jae    8050274 <_IO_stdin_used+0x9f0>
add    %dh,0xa(%eax)
add    %ah,0x0(%ecx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    805026c <_IO_stdin_used+0x9e8>
insb   (%dx),%es:(%edi)
imul   $0x72696465,0x72(%eax,%eiz,1),%esp
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8050242 <_IO_stdin_used+0x9be>
outsb  %ds:(%esi),(%dx)
gs
jae    805029a <_IO_stdin_used+0xa16>
and    %ah,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    8050237 <_IO_stdin_used+0x9b3>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    805029c <_IO_stdin_used+0xa18>
insb   (%dx),%es:(%edi)
imul   $0x69747365,0x64(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
popa
je     80502b1 <_IO_stdin_used+0xa2d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6f(%esi)
and    %dh,0x72(%eax)
gs
jbe    80502bc <_IO_stdin_used+0xa38>
outsl  %ds:(%esi),(%dx)
jne    80502c9 <_IO_stdin_used+0xa45>
and    %dh,0x75(%ebx)
bound  %esi,0x74(%ebx)
imul   $0x6e6f69,0x74(%ebp,%esi,2),%esi
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    80502c9 <_IO_stdin_used+0xa45>
insb   (%dx),%es:(%edi)
imul   $0x65747461,0x70(%eax,%eiz,1),%esp
jb     80502e1 <_IO_stdin_used+0xa5d>
and    %ah,0x6c(%ebp,%eiz,2)
imul   $0x726574,0x69(%ebp),%ebp
and    $0x43000a64,%eax
popa
outsb  %ds:(%esi),(%dx)
daa
je     80502a8 <_IO_stdin_used+0xa24>
arpl   %si,0x65(%edx)
popa
je     80502f3 <_IO_stdin_used+0xa6f>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    805029d <_IO_stdin_used+0xa19>
and    %eax,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %cl,%fs:(%edx)
aas
or     (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     805031c <_IO_stdin_used+0xa98>
jb     805032b <_IO_stdin_used+0xaa7>
jne    805032b <_IO_stdin_used+0xaa7>
je     80502bd <_IO_stdin_used+0xa39>
push   %edi
popa
jb     805032f <_IO_stdin_used+0xaab>
imul   $0x7562203a,0x67(%esi),%ebp
data16
data16
gs
jb     80502ed <_IO_stdin_used+0xa69>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x73006465,%fs:0x69(%esi),%esp
arpl   %si,0x69(%edx)
jo     8050350 <_IO_stdin_used+0xacc>
sub    $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0x3a642520,0x65(%esi),%ebp
and    %ah,0xa73
dec    %eax
rolb   $0xb0,(%eax,%ecx,1)
mov    $0xbfb00804,%edi
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
dec    %eax
rolb   $0xb0,(%eax,%ecx,1)
mov    $0xbfb00804,%edi
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
sbb    %al,%al
add    $0x8,%al
test   $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
push   $0xb00804bf
mov    $0xbfb00804,%edi
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
dec    %eax
rolb   $0xa8,(%eax,%ecx,1)
mov    $0xc0480804,%edi
add    $0x8,%al
sbb    %al,%al
add    $0x8,%al
sub    %bh,-0x404ff7fc(%edi)
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
test   $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
mov    $0xbf,%al
add    $0x8,%al
sub    %bh,-0x3487f7fc(%edi)
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
loopne 80503f0 <_IO_stdin_used+0xb6c>
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
enter  $0x4ca,$0x8
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
cmp    %cl,%bl
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
ror    %cl
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
fmul   %st(6),%st
add    $0x8,%al
pop    %eax
into
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
mov    $0xd4,%al
add    $0x8,%al
mov    $0xd4,%al
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
fmul   %st(6),%st
add    $0x8,%al
xor    %dl,%dl
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
xor    %dl,%dh
add    $0x8,%al
inc    %eax
aam    $0x4
or     %dh,(%eax)
(bad)
add    $0x8,%al
dec    %eax
roll   (%eax,%ecx,1)
rcl    %ch
add    $0x8,%al
js     805050a <_IO_stdin_used+0xc86>
add    $0x8,%al
jo     805050f <_IO_stdin_used+0xc8b>
add    $0x8,%al
fmul   %st(6),%st
add    $0x8,%al
pop    %eax
into
add    $0x8,%al
call   d00d0a1a <stdout+0xc807d87a>
roll   %cl,(%eax,%ecx,1)
pusha
roll   %cl,(%eax,%ecx,1)
clc
aam    $0x4
or     %bh,-0x7f7fb30(%eax)
aam    $0x4
or     %dh,(%eax)
(bad)
add    $0x8,%al
clc
aam    $0x4
or     %dh,-0x7f7fb2c(%eax)
int3
add    $0x8,%al
nop
int3
add    $0x8,%al
and    %cl,%ah
add    $0x8,%al
loopne 8050541 <_IO_stdin_used+0xcbd>
add    $0x8,%al
fmul   %st(6),%st
add    $0x8,%al
xor    %dl,%dl
add    $0x8,%al
add    %cl,%dh
add    $0x8,%al
mov    $0xe80804cd,%eax
iret
add    $0x8,%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
gs
jbe    80505fd <_IO_stdin_used+0xd79>
outsl  %ds:(%esi),(%dx)
jne    805060a <_IO_stdin_used+0xd86>
and    %dh,0x61(%eax)
je     8050610 <_IO_stdin_used+0xd8c>
gs
jb     805060d <_IO_stdin_used+0xd89>
add    %dl,0x61(%edx,%esi,2)
imul   $0x61622067,0x6e(%ecx,%ebp,2),%ebp
arpl   %bp,0x73(%ebx)
insb   (%dx),%es:(%edi)
popa
jae    805061a <_IO_stdin_used+0xd96>
and    %ch,(%eax)
pop    %esp
sub    %eax,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     805063d <_IO_stdin_used+0xdb9>
and    %ch,(%eax)
pop    %ebx
pop    %ebp
sub    %eax,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     805063a <_IO_stdin_used+0xdb6>
push   $0x666e4900
imul   $0x73206574,0x69(%esi),%ebp
jne    8050647 <_IO_stdin_used+0xdc3>
jae    805065b <_IO_stdin_used+0xdd7>
imul   $0x206e6f69,0x74(%ebp,%esi,2),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     80505f4 <_IO_stdin_used+0xd70>
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %al,0x61(%edx)
and    %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     805066c <_IO_stdin_used+0xde8>
arpl   %sp,0x6c(%ecx)
and    %dh,0x65(%edx)
jae    8050680 <_IO_stdin_used+0xdfc>
insb   (%dx),%es:(%edi)
je     805060e <_IO_stdin_used+0xd8a>
dec    %esi
jne    805067e <_IO_stdin_used+0xdfa>
gs
jb     805067d <_IO_stdin_used+0xdf9>
arpl   %sp,0x6c(%ecx)
and    %dh,0x65(%edx)
jae    8050691 <_IO_stdin_used+0xe0d>
insb   (%dx),%es:(%edi)
je     805063f <_IO_stdin_used+0xdbb>
outsl  %ds:(%esi),(%dx)
jne    8050696 <_IO_stdin_used+0xe12>
and    %ch,0x66(%edi)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
addr16
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
push   %eax
add    (%eax),%eax
add    %ch,0x0(%ecx)
add    %al,(%eax)
test   %al,0x36cff(%edi,%edi,8)
add    %dh,%ah
xchg   %edi,%edi
ljmp   *0x14(%eax)
add    %al,(%eax)
push   %esp
mov    %bh,%bh
pushl  (%esi,%ecx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    %?,%edi
call   *-0xbfffffd(%eax)
mov    %?,%edi
(bad)
mov    $0x54000003,%esp
(bad)
(bad)
jmp    *%eax
add    (%eax),%eax
add    %ah,-0x1(%ebp,%ecx,4)
push   %esp
add    (%eax),%eax
add    %dl,0x408ffff(%ebp,%ecx,4)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
lcall  *(%esp,%eax,1)
add    %al,(%eax)
mov    $0x8d,%ah
(bad)
pushl  (%eax)
add    $0x0,%al
add    %al,%ah
(bad)
(bad)
incl   0x0(%esp,%eax,1)
add    %dl,%ah
(bad)
(bad)
lcall  *0x4(%eax)
add    %al,(%eax)
in     $0x8d,%al
(bad)
ljmp   *0x0(%esp,%eax,1)
add    %dh,%ah
(bad)
(bad)
incl   0x4000004(%eax)
mov    %edi,%?
call   *-0x71ec0000(%esp,%eax,1)
(bad)
ljmp   *0x34000004(%eax)
mov    %edi,%?
(bad)
mov    $0x44000004,%esp
mov    %edi,%?
call   *%eax
add    $0x0,%al
add    %ah,0x4ecffff(%esi,%ecx,4)
add    %al,(%eax)
mov    $0x8f,%ah
(bad)
lcall  *-0x6fec0000(,%eax,1)
(bad)
(bad)
cmp    $0x5,%al
add    %al,(%eax)
test   %dl,0x554ffff(%eax)
add    %al,(%eax)
in     $0x90,%al
(bad)
decl   -0x6e1c0000(%ebp,%eax,1)
(bad)
dec    %eax
add    $0x92140000,%eax
(bad)
(bad)
call   8c050706 <stdout+0x83ffd566>
xchg   %eax,%ebx
(bad)
incl   0x6(%eax)
add    %al,(%eax)
and    $0x94,%al
(bad)
call   *-0x6b2c0000(%esi,%eax,1)
(bad)
call   *%esp
push   %es
add    %al,(%eax)
push   %esp
xchg   %eax,%ebp
(bad)
push   %esp
push   %es
add    %al,(%eax)
test   %dl,0x70cffff(%ebp)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xchg   %eax,%esi
(bad)
(bad)
cmp    %al,(%edi)
add    %al,(%eax)
hlt
xchg   %eax,%edi
(bad)
(bad)
mov    $0x14000007,%eax
cltd
(bad)
(bad)
clc
pop    %es
add    %al,(%eax)
hlt
cltd
(bad)
call   *0x8(%eax)
add    %al,(%eax)
fwait
fwait
(bad)
call   *-0x1bfffff8(%eax)
pushf
(bad)
jmp    *%esp
or     %al,(%eax)
add    %ah,0x92cffff(%ebp,%ebx,4)
add    %al,(%eax)
test   %bl,0x984ffff(%edi)
add    %al,(%eax)
mov    $0x9f,%ah
(bad)
jmp    *-0x5ffc0000(%ecx,%ecx,1)
(bad)
(bad)
fmuls  (%ecx)
add    %al,(%eax)
mov    %fs:0xa2cffff,%al
add    %al,(%eax)
hlt
mov    0xa80ffff,%al
add    %al,(%eax)
and    $0xa7,%al
(bad)
(bad)
fmuls  (%edx)
add    %al,(%eax)
cmpsl  %es:(%edi),%fs:(%esi)
(bad)
(bad)
clc
or     (%eax),%al
add    %dh,-0x1(%edi,%eiz,4)
decl   (%ebx,%ecx,1)
add    %al,(%eax)
test   %ah,0xb20ffff(%edi)
add    %al,(%eax)
mov    $0xa7,%ah
(bad)
pushl  (%ebx,%ecx,1)
add    %al,(%eax)
in     $0xa7,%al
(bad)
decl   0xb(%eax)
add    %al,(%eax)
inc    %esp
test   $0xff,%al
jmp    *0xb(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
test   $0xff,%al
call   *0x3400000b(%eax)
test   $0xbb0ffff,%eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
test   $0xbe8ffff,%eax
add    %al,(%eax)
xchg   %eax,%esp
lods   %ds:(%esi),%al
(bad)
ljmp   *(%eax)
or     $0x0,%al
add    %al,%ah
lods   %ds:(%esi),%eax
(bad)
ljmp   *0xc(%eax)
add    %al,(%eax)
mov    $0xaf,%ah
(bad)
(bad)
fmuls  (%eax,%eax,1)
add    %dh,0xd30ffff(%ebx,%esi,4)
add    %al,(%eax)
add    $0xb6,%al
(bad)
decl   -0x6bfffff3(%eax)
mov    $0xff,%dh
jmp    *-0x495c0000(%ebp,%ecx,1)
(bad)
(bad)
mov    $0xb400000d,%eax
mov    $0xff,%dh
dec    %esp
or     $0xb6c40000,%eax
(bad)
jmp    *%eax
or     $0xb7440000,%eax
(bad)
(bad)
cld
or     $0xb7940000,%eax
(bad)
lcall  *(%eax)
push   %cs
add    %al,(%eax)
hlt
mov    $0xff,%bh
jmp    *0x0(%esi,%ecx,1)
add    %ah,(%eax,%edi,4)
(bad)
incl   -0x447c0000(%esi,%ecx,1)
(bad)
inc    %esp
push   %cs
add    %al,(%eax)
hlt
mov    $0xee0ffff,%ebx
add    %al,(%eax)
and    $0xbc,%al
(bad)
decl   (%edi,%ecx,1)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xf7cffff,%edi
add    %al,(%eax)
xor    $0xc1,%al
(bad)
(bad)
fmuls  (%edi)
add    %al,(%eax)
test   %al,%cl
(bad)
incl   (%eax,%edx,1)
add    %al,(%eax)
inc    %esp
ret    $0xffff
pop    %esp
adc    %al,(%eax)
add    %dh,0x1080ffff(%edx,%eax,8)
add    %al,(%eax)
in     $0xc2,%al
(bad)
lcall  *-0x4bfffff0(%eax)
xlat   %ds:(%ebx)
(bad)
push   %eax
adc    %al,(%eax)
add    %ah,%ah
xlat   %ds:(%ebx)
(bad)
decl   (%eax)
adc    %eax,(%eax)
add    %ah,(%eax,%ebx,8)
(bad)
jmp    *(%eax)
adc    %eax,(%eax)
add    %ah,-0x1(%eax,%ebx,8)
(bad)
cmp    %dl,(%ecx)
add    %al,(%eax)
je     8050882 <_IO_stdin_used+0xffe>
(bad)
decl   0x0(%ecx,%edx,1)
add    %dl,%ah
fdivr  %st(7),%st
pushl  0x11(%eax)
add    %al,(%eax)
aam    $0xdc
(bad)
(bad)
mov    $0xe4000011,%esp
(bad)
(bad)
cld
adc    %eax,(%eax)
add    %dh,%ah
(bad)
call   *(%eax)
adc    (%eax),%al
add    %ah,(%ecx,%eiz,8)
(bad)
(bad)
jl     80508e8 <_IO_stdin_used+0x1064>
add    %al,(%eax)
xchg   %eax,%esp
jecxz  80508da <_IO_stdin_used+0x1056>
incl   (%eax)
adc    (%eax),%eax
add    %dl,0x1354ffff(%esp,%eiz,8)
add    %al,(%eax)
hlt
in     $0xff,%al
(bad)
js     8050901 <_IO_stdin_used+0x107d>
add    %al,(%eax)
adc    $0xeb,%al
(bad)
(bad)
call   7c05090c <stdout+0x73ffd76c>
jmp    80508fa <_IO_stdin_used+0x1076>
incl   (%eax)
adc    $0x0,%al
add    %al,%ah
jmp    8050902 <_IO_stdin_used+0x107e>
ljmp   *(%esp,%edx,1)
add    %al,(%eax)
push   %esp
in     (%dx),%eax
(bad)
call   *0x0(%esp,%edx,1)
add    %dh,-0x1(%ebp,%ebp,8)
decl   -0x5bffffec(%eax)
in     (%dx),%eax
(bad)
lcall  *-0x120c0000(%esp,%edx,1)
(bad)
(bad)
mov    $0x4000014,%eax
out    %al,(%dx)
(bad)
dec    %esp
adc    $0x0,%al
add    %ah,-0x1(%esi,%ebp,8)
jmp    *%esp
adc    $0x0,%al
add    %dh,-0x1(%esi,%ebp,8)
(bad)
clc
adc    $0x0,%al
add    %al,0x150cffff(%esi,%ebp,8)
add    %al,(%eax)
xchg   %eax,%esp
out    %al,(%dx)
(bad)
jmp    *(%eax)
adc    $0xef340000,%eax
(bad)
(bad)
js     805096b <_IO_stdin_used+0x10e7>
add    %al,(%eax)
in     $0xef,%al
(bad)
pushl  -0x6bffffeb(%eax)
lock (bad)
(bad)
call   4c05097e <stdout+0x43ffd7de>
icebp
(bad)
jmp    *(%eax)
push   %ss
add    %al,(%eax)
(bad)
icebp
(bad)
decl   0x0(%esi,%edx,1)
add    %dh,(%edx,%esi,8)
(bad)
.byte 0xff
mov    %dl,(%esi)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8050997 <_IO_stdin_used+0x1113>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    %al,0x370ffff(%ecx)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     80509b7 <_IO_stdin_used+0x1133>
js     80509b5 <_IO_stdin_used+0x1131>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,(%ecx,%ecx,4)
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dh,(%eax)
mov    %edi,%edi
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
nop
add    %al,(%eax)
add    %ch,-0x1(%ecx,%ecx,4)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x76980000(%eax,%eax,1)
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x7c000000(%eax)
mov    %edi,%edi
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
add    %al,(%eax)
add    %al,0x6ffff89(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
add    %al,(%eax)
add    %bh,-0x1(%ecx,%ecx,4)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
add    %al,(%eax)
add    %bh,-0x77(%eax)
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %eax,(%eax)
add    %dh,-0x1(%ecx,%ecx,4)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%ecx,%eax,1)
add    %al,(%eax)
jo     8050a2b <_IO_stdin_used+0x11a7>
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %ch,-0x1(%ecx,%ecx,4)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx,%eax,1)
add    %ch,-0x77(%eax)
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
fs
mov    %edi,%edi
call   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %dh,-0x77(%eax)
(bad)
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x6c000001(%eax)
mov    %edi,%edi
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xa(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pushf
add    %eax,(%eax)
add    %dh,0x7ffff89(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0x41080e0a(%edi),%ah
ret
push   %cs
add    $0x44,%al
or     0xa(%esi),%esp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
int3
add    %eax,(%eax)
add    %dl,0x59ffff8a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
add    %eax,(%eax)
add    %dl,%al
mov    %bh,%bh
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
pop    %edi
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %al,(%edx,%eax,1)
add    %al,(%eax)
sub    %cl,0x59ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cmp    $0x2,%al
add    %al,(%eax)
push   %eax
mov    %edi,%edi
(bad)
incb   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %al,(%edx)
data16
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xc3410c0e,(%edx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
js     8050bfc <_IO_stdin_used+0x1378>
add    %al,(%eax)
adc    $0x8c,%al
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bl,0x24000002(%eax)
mov    %?,%edi
ljmp   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8d,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
js     8050c60 <_IO_stdin_used+0x13dc>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
lock add (%eax),%al
add    %bh,0x95ffff(,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
add    (%eax),%eax
add    %cl,-0x50000073(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
test   %al,(%ebx)
add    %al,(%eax)
clc
(bad)
(bad)
(bad)
jns    8050d0e <_IO_stdin_used+0x148a>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
inc    %ebp
or     (%esi),%cl
add    $0x48,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%eax
add    %bl,-0x72(%eax)
(bad)
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xe(%esi)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x70000003,%esp
mov    %edi,%?
call   *0x1
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0x41080e0a(%edi),%cl
ret
push   %cs
add    $0x44,%al
or     (%edx),%eax
jns    8050d6d <_IO_stdin_used+0x14e9>
or     %al,-0x3d(%ebx)
push   %cs
add    $0x7c,%al
add    %al,(%eax)
add    %ch,%al
add    (%eax),%eax
add    %ah,-0x1(%edi,%ecx,4)
incl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffec,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   $0x34000004
nop
(bad)
call   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,0x14000004(%eax)
xchg   %eax,%ecx
(bad)
call   *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5b300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jb     8050e6f <_IO_stdin_used+0x15eb>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0x919c0000
(bad)
ljmp   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
int3
xchg   %eax,%edx
(bad)
(bad)
jg     8050ecb <_IO_stdin_used+0x1647>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1c,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %dl,-0x6c080000(%ebp,%eax,1)
(bad)
(bad)
mov    $0x0,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%dl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,%ah
add    $0x94700000,%eax
(bad)
(bad)
fiaddl (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xor    $0x6,%al
add    %al,(%eax)
clc
xchg   %eax,%ebp
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
push   %esp
push   %es
add    %al,(%eax)
or     %dl,0x4effff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
jle    8051003 <_IO_stdin_used+0x177f>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    %al,(%esi)
add    %al,(%eax)
and    $0x96,%al
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7d300e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bl,%ah
push   %es
add    %al,(%eax)
xor    %dl,0x82ffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x63,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,(%eax)
pop    %es
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%esi
(bad)
ljmp   *(%ecx)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb5,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
inc    %esp
pushf
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,0x64000007(%eax)
pushf
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x63a00000(%edi,%eax,1)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
pop    %es
add    %al,(%eax)
pop    %esp
pushf
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
pop    %es
add    %al,(%eax)
js     8051106 <_IO_stdin_used+0x1882>
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
clc
pop    %es
add    %al,(%eax)
xchg   %eax,%esp
pushf
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
dec    %ebx
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %dl,(%eax)
or     %al,(%eax)
add    %bl,%ah
pushf
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4d02(%esi)
addl   $0x74,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     -0x3d(%edx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
or     %al,(%eax)
add    %cl,0x8effff(,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
push   %ebp
or     (%esi),%cl
add    $0x48,%al
or     0xe(%ebp),%ebp
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
or     %al,(%eax)
add    %bh,-0x1(%ebp,%ebx,4)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec36302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cwtl
or     %al,(%eax)
add    %dh,0x2e1ffff(%ebp,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbc,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fmuls  (%eax)
add    %al,(%eax)
mov    %fs:0x122ffff,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff82,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bl,(%eax)
or     %eax,(%eax)
add    %dl,-0x1(%ecx,%eiz,4)
(bad)
call   80512a6 <_IO_stdin_used+0x1a22>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
sub    $0x140e0a01,%eax
inc    %esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,-0x2bfffff7(%eax)
mov    %al,0x3feffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
add    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,%al
or     %eax,(%eax)
add    %bh,-0x1(%esi,%eiz,4)
decl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2a,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
or     (%eax),%al
add    %dh,-0x1(%eax,%ebp,4)
incl   0x0(%edx)
inc    %ebx
push   %cs
xor    %dh,0xa(%esi)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx,%ecx,1)
add    %ch,%al
test   $0xff,%al
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0xa(%eax)
add    %al,(%eax)
in     $0xa8,%al
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx,%ecx,1)
add    %ah,%al
test   $0xff,%al
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,-0x23fffff6(%eax)
test   $0xff,%al
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
inc    %edi
or     (%esi),%cl
add    $0x46,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
or     (%eax),%al
add    %al,-0x57(%eax)
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
addb   $0x2,(%ecx)
inc    %eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
enter  $0xa,$0x0
je     80513f7 <_IO_stdin_used+0x1b73>
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xa(%ebx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
in     $0xa,%al
add    %al,(%eax)
sbb    %bh,-0x1(%edx)
decl   0x3(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4702(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%edi,%ecx,2)
addl   $0x41,0xc30a6702
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
adc    $0xb,%al
add    %al,(%eax)
mov    %ch,0x2bffff(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4502(%ebx)
popa
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,(%ebx,%ecx,1)
add    %al,(%eax)
cwtl
test   $0x35affff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
je     8051501 <_IO_stdin_used+0x1c7d>
add    %al,(%eax)
mov    $0x6cffffac,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bh,0xa(%ebp)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0xc00000b(%eax)
lods   %ds:(%esi),%eax
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %cl,0xe(%edi)
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x52f00000(%ebx,%ecx,1)
(bad)
jmp    *0x3(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff8c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
push   %ebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
sub    $0xc,%al
add    %al,(%eax)
adc    %dh,0x193ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4504(%ebx)
add    %ch,%ah
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jo     80515fd <_IO_stdin_used+0x1d79>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
mov    %cl,(%eax,%eax,1)
add    %dl,-0x1(%ecx,%esi,4)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
push   %ecx
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,-0x4e880000(%esp,%ecx,1)
(bad)
(bad)
mov    $0x0,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     $0xd,%al
add    %al,(%eax)
loopne 8051643 <_IO_stdin_used+0x1dbf>
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebx),%ah
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    %cl,0xb22c0000
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebx)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,0xd(%eax)
add    %al,(%eax)
inc    %esp
mov    $0xff,%dl
dec    %ecx
adc    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaf,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
out    %eax,(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    0xbc00000d,%al
(bad)
(bad)
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%esi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0xd400000d,%eax
(bad)
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
rorb   0xc6fc0000
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
call   2c05177a <stdout+0x23ffe5da>
(bad)
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%ah
or     $0xc7200000,%eax
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %cl,0xe(%ecx)
or     %al,0xa4a0202(%ebx)
ret
push   %cs
add    $0x45,%al
or     -0x3d(%edi),%eax
push   %cs
add    $0x0,%al
add    %cl,0x0(%eax)
add    %al,(%eax)
and    %cl,(%esi)
add    %al,(%eax)
pop    %esp
(bad)
(bad)
push   %ecx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x1(%ecx),%ebp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
js     80517ce <_IO_stdin_used+0x1f4a>
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %cs
add    %al,(%eax)
adc    %cl,%bl
(bad)
call   *(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1a00e46
pop    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,-0x32200000(%esi,%ecx,1)
(bad)
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
rorb   $0x0,(%esi)
add    %bl,%ah
int    $0xff
ljmp   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd8,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
addb   $0x0,(%eax)
add    %ch,(%edi,%ecx,1)
add    %al,(%eax)
mov    0x68ffffce,%al
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x26,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
lea    (%edx),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %dh,-0x73fffff1(%eax)
sar    %bh
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc8,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%eax,%edx,1)
add    %al,(%eax)
cmp    %dl,%cl
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebp),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,(%eax)
adc    %al,(%eax)
add    %dh,-0x1(%ecx,%edx,8)
lcall  *(%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e46
out    %al,(%dx)
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
movsb  %ds:(%esi),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
cwtl
adc    %al,(%eax)
add    %ah,(%edi,%edx,8)
(bad)
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %ecx
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,0x6c000010(%eax)
xlat   %ds:(%ebx)
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x48,(%ebx)
push   %cs
mov    $0x1,%al
jns    8051a5b <_IO_stdin_used+0x21d7>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
fcoml  (%eax)
add    %al,(%eax)
nop
xlat   %ds:(%ebx)
(bad)
decl   0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x10500e43
add    %al,(%eax)
add    $0x11,%al
add    %al,(%eax)
clc
fdivr  %st(7),%st
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %ebx
push   %cs
adc    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %dl,(%ecx)
add    %al,(%eax)
test   %dh,-0x1(%ebx)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x46,(%ebx)
push   %cs
mov    0x100001,%al
add    %al,(%eax)
cmp    %dl,(%ecx)
add    %al,(%eax)
in     $0xd8,%al
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
push   %cs
adc    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ecx,%edx,1)
add    %al,(%eax)
fcos
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x11(%eax)
add    %al,(%eax)
xor    $0xd9,%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
jl     8051b0f <_IO_stdin_used+0x228b>
add    %al,(%eax)
xor    %bl,%cl
(bad)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
push   %esi
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0x26880000(%ecx,%edx,1)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x74000011(%eax)
fcos
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x26900000(%ecx,%edx,1)
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,%al
adc    %eax,(%eax)
add    %ch,-0x1(%ecx,%ebx,8)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
sub    %dl,(%edx)
add    %al,(%eax)
mov    $0xd9,%ah
(bad)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
adc    (%eax),%al
add    %ch,(%edx,%ebx,8)
(bad)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cwtl
adc    (%eax),%al
add    %ah,0xacffff(%edx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,%al
adc    (%eax),%al
add    %bl,(%ebx,%ebx,8)
(bad)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cld
adc    (%eax),%al
add    %dh,-0x25(%eax)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%eax)
adc    (%eax),%eax
add    %ah,0x2ffff(%ebx,%ebx,8)
.byte 0xa0
xchg   %eax,%edx
add    $0x8,%al
.byte 0x80
xchg   %eax,%edx
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
test   %cl,0xd0804(%edx)
add    %al,(%eax)
fs
clc
add    $0x8,%al
sbb    %eax,(%eax)
add    %al,(%eax)
or     %ch,(%edi)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x2f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
mov    %es,0x60804(%ebp)
add    %al,(%eax)
faddl  0xa0804(%ecx)
add    %al,(%eax)
aas
add    (%eax),%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,0x208
add    %dh,0x14000001(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %dl,%ah
mov    %al,(%eax,%ecx,1)
adc    %eax,(%eax)
add    %al,(%eax)
mov    $0x88,%ah
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x44(%edi)
mov    %al,(%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x34(%edi)
xchg   %eax,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0x2f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,%dh
mov    (%eax,%ecx,1),%al
(bad)
mov    (%eax,%ecx,1),%al
out    %al,$0x8a
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%al
push   %es
mov    (%eax,%ecx,1),%eax
push   %ss
mov    (%eax,%ecx,1),%eax
mov    %es:(%eax,%ecx,1),%eax
mov    %ss:(%eax,%ecx,1),%eax
inc    %esi
mov    (%eax,%ecx,1),%eax
push   %esi
mov    (%eax,%ecx,1),%eax
mov    (%eax,%ecx,1),%ax
jbe    8052fc5 <_IO_stdin_used+0x3741>
add    $0x8,%al
xchg   %cl,-0x7469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%eax
mov    $0x8b,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%eax
(bad)
mov    (%eax,%ecx,1),%eax
out    %al,$0x8b
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%eax
push   %es
mov    %es,(%eax,%ecx,1)
push   %ss
mov    %es,(%eax,%ecx,1)
mov    %es,%es:(%eax,%ecx,1)
mov    %es,%ss:(%eax,%ecx,1)
inc    %esi
mov    %es,(%eax,%ecx,1)
push   %esi
mov    %es,(%eax,%ecx,1)
data16
mov    %es,(%eax,%ecx,1)
jbe    8053006 <_IO_stdin_used+0x3782>
add    $0x8,%al
xchg   %cl,0x48c9608(%esp,%eax,1)
or     %ah,-0x49f7fb74(%esi)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
out    %al,$0x8c
add    $0x8,%al
(bad)
mov    %es,(%eax,%ecx,1)
push   %es
lea    (%eax,%ecx,1),%eax
push   %ss
lea    (%eax,%ecx,1),%eax
lea    %es:(%eax,%ecx,1),%eax
lea    %ss:(%eax,%ecx,1),%eax
inc    %esi
lea    (%eax,%ecx,1),%eax
push   %esi
lea    (%eax,%ecx,1),%eax
lea    (%eax,%ecx,1),%ax
jbe    8053047 <_IO_stdin_used+0x37c3>
add    $0x8,%al
xchg   %cl,-0x7269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lea    (%eax,%ecx,1),%eax
mov    $0x8d,%dh
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
(bad)
lea    (%eax,%ecx,1),%eax
out    %al,$0x8d
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
push   %es
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
fdivl  (%ecx)
add    $0xffffff08,%eax
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %ch,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
push   %ss
add    %al,(%eax)
add    %al,(%eax)
gs add %al,%fs:%gs:(%eax)
mov    $0x7d,%cl
pop    %es
movsb  %ds:(%esi),%es:(%edi)
