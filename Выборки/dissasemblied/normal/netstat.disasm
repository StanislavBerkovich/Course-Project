das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dl,-0x63f5b169(%ebp,%esi,1)
repz in $0xc1,%eax
(bad)
imul   $0x31113c14,%edi,%edx
dec    %esp
.byte 0x3
movsb  %ds:(%esi),%es:(%edi)
.byte 0xbb
add    (%eax),%eax
add    %al,(%eax)
popa
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x0
and    (%esi),%esp
and    0x0(%ecx),%ah
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %ch,(%ecx)
sbb    $0xf2381c8c,%eax
mov    -0x4c3f1cb5(,%ebp,4),%ebx
.byte 0xa2
notl   (%edx)
mov    $0x2,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fldl   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%bh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%edx),%es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     8048391 <__ctype_toupper_loc@plt-0xcef>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jl     804854f <__ctype_toupper_loc@plt-0xb31>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    804858e <__ctype_toupper_loc@plt-0xaf2>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    80485a1 <__ctype_toupper_loc@plt-0xadf>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %es,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
iret
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %es
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edi
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret   $0x1
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,%ds:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x60000001(%ebp)
inc    %edi
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
and    $0x40000002,%eax
inc    %edi
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
mov    %eax,%fs:0x40805
add    %al,(%eax)
adc    %eax,(%eax)
ltr    (%esi)
add    (%eax),%al
add    %ah,0x6(%edi,%eax,2)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    80488a3 <__ctype_toupper_loc@plt-0x7dd>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80488b1 <__ctype_toupper_loc@plt-0x7cf>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     804884d <__ctype_toupper_loc@plt-0x833>
jae    80488c3 <__ctype_toupper_loc@plt-0x7bd>
jb     80488b4 <__ctype_toupper_loc@plt-0x7cc>
jo     80488cc <__ctype_toupper_loc@plt-0x7b4>
add    %bl,0x5f(%edi)
jo     80488ca <__ctype_toupper_loc@plt-0x7b6>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     80488cd <__ctype_toupper_loc@plt-0x7b3>
je     8048866 <__ctype_toupper_loc@plt-0x81a>
outsb  %gs:(%esi),(%dx)
fs
jo     80488dd <__ctype_toupper_loc@plt-0x7a3>
outsl  %ds:(%esi),(%dx)
je     80488dd <__ctype_toupper_loc@plt-0x7a3>
outsb  %gs:(%esi),(%dx)
je     8048872 <__ctype_toupper_loc@plt-0x80e>
jb     80488d9 <__ctype_toupper_loc@plt-0x7a7>
popa
fs imul $0x5f4f495f,%fs:0x0(%edx),%esi
5f
jo     80488f5 <__ctype_toupper_loc@plt-0x78b>
je     80488e5 <__ctype_toupper_loc@plt-0x79b>
add    %dh,0x65(%ebx)
je     80488f3 <__ctype_toupper_loc@plt-0x78d>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x6f(%esi)
jo     80488f6 <__ctype_toupper_loc@plt-0x78a>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     8048905 <__ctype_toupper_loc@plt-0x77b>
arpl   %bp,0x70(%ebp)
add    %ch,0x6e(%ecx)
gs
je     80488ff <__ctype_toupper_loc@plt-0x781>
popa
je     8048912 <__ctype_toupper_loc@plt-0x76e>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%ebx)
je     804891c <__ctype_toupper_loc@plt-0x764>
gs
jb     8048922 <__ctype_toupper_loc@plt-0x75e>
outsb  %gs:(%esi),(%dx)
je     80488b0 <__ctype_toupper_loc@plt-0x7d0>
jae    8048926 <__ctype_toupper_loc@plt-0x75a>
jb     8048926 <__ctype_toupper_loc@plt-0x75a>
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jae    8048930 <__ctype_toupper_loc@plt-0x750>
jb     8048922 <__ctype_toupper_loc@plt-0x75e>
jne    8048930 <__ctype_toupper_loc@plt-0x750>
add    %dh,0x65(%eax)
jb     8048937 <__ctype_toupper_loc@plt-0x749>
outsl  %ds:(%esi),(%dx)
jb     80488c8 <__ctype_toupper_loc@plt-0x7b8>
addr16
gs
je     804893a <__ctype_toupper_loc@plt-0x746>
gs
je     8048931 <__ctype_toupper_loc@plt-0x74f>
jns    8048932 <__ctype_toupper_loc@plt-0x74e>
fs
fs
jb     80488d5 <__ctype_toupper_loc@plt-0x7ab>
addr16
gs
je     8048949 <__ctype_toupper_loc@plt-0x737>
ja     8048950 <__ctype_toupper_loc@plt-0x730>
imul   $0x65736f6c,0x63(%eax,%eax,1),%esp
imul   $0x74656e69,%fs:0x0(%edx),%esi
pop    %edi
outsb  %ds:(%esi),(%dx)
je     804895e <__ctype_toupper_loc@plt-0x722>
popa
add    %ch,0x6e(%ecx)
gs
je     8048955 <__ctype_toupper_loc@plt-0x72b>
outsb  %ds:(%esi),(%dx)
je     8048968 <__ctype_toupper_loc@plt-0x718>
jo     80488fb <__ctype_toupper_loc@plt-0x785>
jae    8048971 <__ctype_toupper_loc@plt-0x70f>
jb     804896d <__ctype_toupper_loc@plt-0x713>
arpl   %si,0x79(%eax)
add    %ah,0x65(%edi)
je     804897b <__ctype_toupper_loc@plt-0x705>
gs
js     804897e <__ctype_toupper_loc@plt-0x702>
add    %bl,0x5f(%edi)
jae    8048983 <__ctype_toupper_loc@plt-0x6fd>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x68637475,0x70(%eax,%eax,1),%ebp
popa
jb     8048924 <__ctype_toupper_loc@plt-0x75c>
jb     804898b <__ctype_toupper_loc@plt-0x6f5>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048932 <__ctype_toupper_loc@plt-0x74e>
jae    80489a8 <__ctype_toupper_loc@plt-0x6d8>
jb     80489a6 <__ctype_toupper_loc@plt-0x6da>
bound  %esi,0x6b(%edx)
add    %ch,0x6e(%ecx)
gs
je     804899e <__ctype_toupper_loc@plt-0x6e2>
jo     80489b5 <__ctype_toupper_loc@plt-0x6cb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     80489b6 <__ctype_toupper_loc@plt-0x6ca>
gs
je     80489ad <__ctype_toupper_loc@plt-0x6d3>
jns    80489bb <__ctype_toupper_loc@plt-0x6c5>
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x65(%edx)
ja     80489be <__ctype_toupper_loc@plt-0x6c2>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     80489d0 <__ctype_toupper_loc@plt-0x6b0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x65(%esi)
outsl  %ds:(%esi),(%dx)
data16
add    %ah,0x67(%esi)
gs
je     80489dc <__ctype_toupper_loc@plt-0x6a4>
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80489e7 <__ctype_toupper_loc@plt-0x699>
jb     80489e1 <__ctype_toupper_loc@plt-0x69f>
outsb  %gs:(%esi),(%dx)
add    %ah,0x65(%edi)
je     80489dd <__ctype_toupper_loc@plt-0x6a3>
fs
fs
jb     80489e9 <__ctype_toupper_loc@plt-0x697>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     80489fb <__ctype_toupper_loc@plt-0x685>
je     80489fc <__ctype_toupper_loc@plt-0x684>
add    %bl,0x5f(%edi)
gs
jb     8048a02 <__ctype_toupper_loc@plt-0x67e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x61657200,0x6e(%edi),%ebp
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8048a1c <__ctype_toupper_loc@plt-0x664>
popa
addr16
gs
jae    8048a1a <__ctype_toupper_loc@plt-0x666>
jp     8048a18 <__ctype_toupper_loc@plt-0x668>
add    %ah,0x65(%edi)
je     8048a26 <__ctype_toupper_loc@plt-0x65a>
popa
insl   (%dx),%es:(%edi)
imul   $0x6573006f,%gs:0x66(%esi),%ebp
je     8048a34 <__ctype_toupper_loc@plt-0x64c>
jb     8048a35 <__ctype_toupper_loc@plt-0x64b>
je     8048a37 <__ctype_toupper_loc@plt-0x649>
outsb  %gs:(%esi),(%dx)
je     80489cc <__ctype_toupper_loc@plt-0x6b4>
push   $0x6f727265
jb     80489d3 <__ctype_toupper_loc@plt-0x6ad>
pop    %edi
pop    %edi
data16
jo     8048a4a <__ctype_toupper_loc@plt-0x636>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     8048a48 <__ctype_toupper_loc@plt-0x638>
outsl  %ds:(%esi),(%dx)
jne    8048a5b <__ctype_toupper_loc@plt-0x625>
add    %ah,0x65(%edi)
je     8048a54 <__ctype_toupper_loc@plt-0x62c>
outsl  %ds:(%esi),(%dx)
jae    8048a63 <__ctype_toupper_loc@plt-0x61d>
bound  %edi,0x61(%ecx)
fs
fs
jb     80489f6 <__ctype_toupper_loc@plt-0x68a>
data16
jo     8048a6e <__ctype_toupper_loc@plt-0x612>
je     8048a5e <__ctype_toupper_loc@plt-0x622>
add    %ah,0x70(%esi)
jne    8048a74 <__ctype_toupper_loc@plt-0x60c>
jae    8048a02 <__ctype_toupper_loc@plt-0x67e>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048a74 <__ctype_toupper_loc@plt-0x60c>
add    %dh,0x74(%ebx)
jb     8048a88 <__ctype_toupper_loc@plt-0x5f8>
outsl  %ds:(%esi),(%dx)
jne    8048a83 <__ctype_toupper_loc@plt-0x5fd>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    8048a97 <__ctype_toupper_loc@plt-0x5e9>
jb     8048a93 <__ctype_toupper_loc@plt-0x5ed>
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
imul   $0x74635f5f,%fs:0x0(%edx),%esi
jns    8048aab <__ctype_toupper_loc@plt-0x5d5>
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048ab8 <__ctype_toupper_loc@plt-0x5c8>
arpl   %sp,0x6e(%ecx)
data16
add    %ch,0x70(%edi)
je     8048aaf <__ctype_toupper_loc@plt-0x5d1>
jb     8048ab7 <__ctype_toupper_loc@plt-0x5c9>
add    %dh,0x74(%ebx)
fs
gs
jb     8048ac9 <__ctype_toupper_loc@plt-0x5b7>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
addr16
gs
je     8048aca <__ctype_toupper_loc@plt-0x5b6>
outsl  %ds:(%esi),(%dx)
jae    8048ad9 <__ctype_toupper_loc@plt-0x5a7>
bound  %edi,0x6e(%ecx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jae    8048ade <__ctype_toupper_loc@plt-0x5a2>
jo     8048ae4 <__ctype_toupper_loc@plt-0x59c>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048aff <__ctype_toupper_loc@plt-0x581>
jb     8048b00 <__ctype_toupper_loc@plt-0x580>
je     8048b02 <__ctype_toupper_loc@plt-0x57e>
outsb  %gs:(%esi),(%dx)
je     8048a97 <__ctype_toupper_loc@plt-0x5e9>
addr16
gs
je     8048b0a <__ctype_toupper_loc@plt-0x576>
jo     8048b11 <__ctype_toupper_loc@plt-0x56f>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
data16
js     8048b1b <__ctype_toupper_loc@plt-0x565>
je     8048b0b <__ctype_toupper_loc@plt-0x575>
je     8048aac <__ctype_toupper_loc@plt-0x5d4>
imul   $0x6f,0x6e(%ebp,%eiz,2),%bp
data16
ja     8048b28 <__ctype_toupper_loc@plt-0x558>
imul   $0x65746567,0x0(%ebp,%eiz,2),%esi
jne    8048b29 <__ctype_toupper_loc@plt-0x557>
add    %bl,%fs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     8048b36 <__ctype_toupper_loc@plt-0x54a>
push   $0x69720072
outsb  %ds:(%esi),(%dx)
fs
gs
js     8048add <__ctype_toupper_loc@plt-0x5a3>
jno    8048b52 <__ctype_toupper_loc@plt-0x52e>
outsl  %ds:(%esi),(%dx)
jb     8048b56 <__ctype_toupper_loc@plt-0x52a>
add    %dh,0x6c(%ebx)
gs
gs
jo     8048ae9 <__ctype_toupper_loc@plt-0x597>
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8048b62 <__ctype_toupper_loc@plt-0x51e>
jne    8048b65 <__ctype_toupper_loc@plt-0x51b>
jo     8048b5c <__ctype_toupper_loc@plt-0x524>
jb     8048b58 <__ctype_toupper_loc@plt-0x528>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    8048b75 <__ctype_toupper_loc@plt-0x50b>
jb     8048b66 <__ctype_toupper_loc@plt-0x51a>
jo     8048b7e <__ctype_toupper_loc@plt-0x502>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x72(%esi)
gs
gs
popa
fs
fs
jb     8048b7c <__ctype_toupper_loc@plt-0x504>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %dh,0x65(%ebx)
je     8048b91 <__ctype_toupper_loc@plt-0x4ef>
bound  %esi,0x66(%ebp)
add    %bl,0x5f(%edi)
jae    8048b93 <__ctype_toupper_loc@plt-0x4ed>
jb     8048b8e <__ctype_toupper_loc@plt-0x4f2>
outsb  %ds:(%esi),(%dx)
je     8048b8e <__ctype_toupper_loc@plt-0x4f2>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
push   $0x7272655f
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x616e7500,0x6e(%edi),%ebp
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6e(%ebp)
fs
jae    8048bb0 <__ctype_toupper_loc@plt-0x4d0>
jb     8048bc3 <__ctype_toupper_loc@plt-0x4bd>
outsb  %gs:(%esi),(%dx)
je     8048b51 <__ctype_toupper_loc@plt-0x52f>
bound  %ebp,0x6e(%ecx)
fs
je     8048bbc <__ctype_toupper_loc@plt-0x4c4>
js     8048bcd <__ctype_toupper_loc@plt-0x4b3>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8048bd9 <__ctype_toupper_loc@plt-0x4a7>
add    %bl,0x5f(%edi)
jae    8048bdf <__ctype_toupper_loc@plt-0x4a1>
jb     8048bd0 <__ctype_toupper_loc@plt-0x4b0>
popa
je     8048bcf <__ctype_toupper_loc@plt-0x4b1>
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     8048bdb <__ctype_toupper_loc@plt-0x4a5>
insl   (%dx),%es:(%edi)
jo     8048b7b <__ctype_toupper_loc@plt-0x505>
jae    8048bf1 <__ctype_toupper_loc@plt-0x48f>
jb     8048be4 <__ctype_toupper_loc@plt-0x49c>
jb     8048bf3 <__ctype_toupper_loc@plt-0x48d>
outsl  %ds:(%esi),(%dx)
jb     8048b84 <__ctype_toupper_loc@plt-0x4fc>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048c04 <__ctype_toupper_loc@plt-0x47c>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8048b9d <__ctype_toupper_loc@plt-0x4e3>
jae    8048c0d <__ctype_toupper_loc@plt-0x473>
jo     8048c13 <__ctype_toupper_loc@plt-0x46d>
imul   $0x65670066,0x74(%esi),%ebp
je     8048c1d <__ctype_toupper_loc@plt-0x463>
gs
jb     8048c23 <__ctype_toupper_loc@plt-0x45d>
outsb  %gs:(%esi),(%dx)
je     8048bb1 <__ctype_toupper_loc@plt-0x4cf>
data16
jb     8048c19 <__ctype_toupper_loc@plt-0x467>
add    %bl,%gs:0x5f(%edi)
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048c33 <__ctype_toupper_loc@plt-0x44d>
popa
jb     8048c36 <__ctype_toupper_loc@plt-0x44a>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x4000400,%eax
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
push   %es
add    %al,(%eax,%eax,1)
add    $0x4000400,%eax
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x4000400,%eax
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    $0x100,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x399,0x60000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
mov    %eax,0x10000003
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x40000,0xd(%ecx),%ebp
lods   %ds:(%esi),%eax
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%ebx)
add    %dh,0x10000003(%edi)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x20000,0xd(%ecx),%ebp
ret
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
cld
das
push   %es
or     %al,(%esi)
sub    (%eax),%eax
add    %al,0x47(%eax)
push   %es
or     %al,0x60000062
inc    %edi
push   %es
or     %al,0x64000061
inc    %edi
push   %es
.byte 0x8
.byte 0x5
add    %al,%fs:(%eax)
or     $0x30,%al
push   %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
xor    %al,(%esi)
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%esi,1)
push   %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
xor    %al,(%esi)
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%esi,1)
push   %es
or     %al,(%edi)
add    $0x30200000,%eax
push   %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0x30,%al
push   %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
sub    %dh,(%eax)
push   %es
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%esi,1)
push   %es
or     %al,(%edi)
or     %eax,(%eax)
add    %dh,(%eax)
xor    %al,(%esi)
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax,%esi,1)
push   %es
or     %al,(%edi)
or     (%eax),%eax
add    %bh,(%eax)
xor    %al,(%esi)
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%esi,1)
push   %es
or     %al,(%edi)
or     $0x30400000,%eax
push   %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %esp
xor    %al,(%esi)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
xor    %al,(%esi)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x6(%eax,%esi,1)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x30(%eax)
push   %es
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x6(%eax,%esi,1)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x30(%eax)
push   %es
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x6(%eax,%esi,1)
or     %al,(%edi)
adc    $0x30600000,%eax
push   %es
or     %al,(%edi)
push   %ss
add    %al,(%eax)
xor    %al,%fs:(%esi)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080630
sbb    %al,(%eax)
add    %ch,0x6(%eax,%esi,1)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x30(%eax)
push   %es
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x6(%eax,%esi,1)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x30(%eax)
push   %es
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x6(%eax,%esi,1)
or     %al,(%edi)
sbb    $0x30800000,%eax
push   %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
test   %dh,(%eax)
push   %es
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
mov    %dh,(%eax)
push   %es
or     %al,(%edi)
and    %al,(%eax)
add    %cl,0x21070806(%eax,%esi,1)
add    %al,(%eax)
nop
xor    %al,(%esi)
or     %al,(%edi)
and    (%eax),%al
add    %dl,0x23070806(%eax,%esi,1)
add    %al,(%eax)
cwtl
xor    %al,(%esi)
or     %al,(%edi)
and    $0x0,%al
add    %bl,0x25070806(%eax,%esi,1)
add    %al,(%eax)
mov    0x7080630,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %al,(%esi)
or     %al,(%edi)
daa
add    %al,(%eax)
test   $0x30,%al
push   %es
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x29070806(%eax,%esi,1)
add    %al,(%eax)
mov    $0x30,%al
push   %es
or     %al,(%edi)
sub    (%eax),%al
add    %dh,0x2b070806(%eax,%esi,1)
add    %al,(%eax)
mov    $0x7080630,%eax
sub    $0x0,%al
add    %bh,0x2d070806(%eax,%esi,1)
add    %al,(%eax)
(bad)
xor    %al,(%esi)
or     %al,(%edi)
add    %al,%cs:(%eax)
les    (%eax),%esi
push   %es
or     %al,(%edi)
das
add    %al,(%eax)
enter  $0x630,$0x8
pop    %es
xor    %al,(%eax)
add    %cl,%ah
xor    %al,(%esi)
or     %al,(%edi)
xor    %eax,(%eax)
add    %dl,%al
xor    %al,(%esi)
or     %al,(%edi)
xor    (%eax),%al
add    %dl,%ah
xor    %al,(%esi)
or     %al,(%edi)
xor    (%eax),%eax
add    %bl,%al
xor    %al,(%esi)
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%ah
xor    %al,(%esi)
or     %al,(%edi)
xor    $0x30e00000,%eax
push   %es
or     %al,(%edi)
add    %al,%ss:(%eax)
in     $0x30,%al
push   %es
or     %al,(%edi)
aaa
add    %al,(%eax)
call   f0c9531 <optarg+0x7064dcd>
cmp    %al,(%eax)
add    %ch,%ah
xor    %al,(%esi)
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dh,%al
xor    %al,(%esi)
or     %al,(%edi)
cmp    (%eax),%al
add    %dh,%ah
xor    %al,(%esi)
or     %al,(%edi)
cmp    (%eax),%eax
add    %bh,%al
xor    %al,(%esi)
or     %al,(%edi)
cmp    $0x0,%al
add    %bh,%ah
xor    %al,(%esi)
or     %al,(%edi)
cmp    $0x31000000,%eax
push   %es
or     %al,(%edi)
add    %al,%ds:(%eax)
add    $0x31,%al
push   %es
or     %al,(%edi)
aas
add    %al,(%eax)
or     %dh,(%ecx)
push   %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
or     $0x31,%al
push   %es
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
adc    %dh,(%ecx)
push   %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
adc    $0x31,%al
push   %es
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
sbb    %dh,(%ecx)
push   %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
sbb    $0x31,%al
push   %es
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
and    %dh,(%ecx)
push   %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
and    $0x31,%al
push   %es
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
sub    %dh,(%ecx)
push   %es
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
sub    $0x31,%al
push   %es
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
xor    %dh,(%ecx)
push   %es
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
xor    $0x31,%al
push   %es
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
cmp    %dh,(%ecx)
push   %es
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
cmp    $0x31,%al
push   %es
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
inc    %eax
xor    %eax,(%esi)
or     %al,(%edi)
dec    %esi
add    %al,(%eax)
inc    %esp
xor    %eax,(%esi)
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
dec    %eax
xor    %eax,(%esi)
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %esp
xor    %eax,(%esi)
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
push   %eax
xor    %eax,(%esi)
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %esp
xor    %eax,(%esi)
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
pop    %eax
xor    %eax,(%esi)
or     %al,(%edi)
push   %esp
add    %al,(%eax)
pop    %esp
xor    %eax,(%esi)
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pusha
xor    %eax,(%esi)
or     %al,(%edi)
push   %esi
add    %al,(%eax)
xor    %eax,%fs:(%esi)
or     %al,(%edi)
push   %edi
add    %al,(%eax)
push   $0x7080631
pop    %eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xor    %eax,(%esi)
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
jo     804903f <__ctype_toupper_loc@plt-0x41>
push   %es
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
je     8049047 <__ctype_toupper_loc@plt-0x39>
push   %es
or     %al,(%edi)
pop    %ebx
add    %al,(%eax)
js     804904f <__ctype_toupper_loc@plt-0x31>
push   %es
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
jl     8049057 <__ctype_toupper_loc@plt-0x29>
push   %es
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
xorb   $0x6,(%ecx)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
test   %dh,(%ecx)
push   %es
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
mov    %dh,(%ecx)
push   %es
or     %al,(%edi)
pusha
push   %ebx
sub    $0x8,%esp
call   804ae70 <__sprintf_chk@plt+0x1800>
add    $0x19fb3,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8049062 <__ctype_toupper_loc@plt-0x1e>
call   8049320 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8063004
jmp    *0x8063008
add    %al,(%eax)
jmp    *0x806300c
push   $0x0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063010
push   $0x8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063014
push   $0x10
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063018
push   $0x18
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806301c
push   $0x20
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063020
push   $0x28
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063024
push   $0x30
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063028
push   $0x38
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806302c
push   $0x40
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063030
push   $0x48
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063034
push   $0x50
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063038
push   $0x58
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806303c
push   $0x60
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063040
push   $0x68
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063044
push   $0x70
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063048
push   $0x78
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806304c
push   $0x80
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063050
push   $0x88
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063054
push   $0x90
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063058
push   $0x98
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806305c
push   $0xa0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063060
push   $0xa8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063064
push   $0xb0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063068
push   $0xb8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806306c
push   $0xc0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063070
push   $0xc8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063074
push   $0xd0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063078
push   $0xd8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806307c
push   $0xe0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063080
push   $0xe8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063084
push   $0xf0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063088
push   $0xf8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806308c
push   $0x100
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063090
push   $0x108
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063094
push   $0x110
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063098
push   $0x118
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806309c
push   $0x120
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630a0
push   $0x128
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630a4
push   $0x130
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630a8
push   $0x138
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630ac
push   $0x140
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630b0
push   $0x148
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630b4
push   $0x150
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630b8
push   $0x158
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630bc
push   $0x160
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630c0
push   $0x168
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630c4
push   $0x170
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630c8
push   $0x178
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630cc
push   $0x180
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630d0
push   $0x188
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630d4
push   $0x190
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630d8
push   $0x198
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630dc
push   $0x1a0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630e0
push   $0x1a8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630e4
push   $0x1b0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630e8
push   $0x1b8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630ec
push   $0x1c0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630f0
push   $0x1c8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630f4
push   $0x1d0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630f8
push   $0x1d8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x80630fc
push   $0x1e0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063100
push   $0x1e8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063104
push   $0x1f0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063108
push   $0x1f8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806310c
push   $0x200
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063110
push   $0x208
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063114
push   $0x210
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063118
push   $0x218
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806311c
push   $0x220
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063120
push   $0x228
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063124
push   $0x230
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063128
push   $0x238
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806312c
push   $0x240
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063130
push   $0x248
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063134
push   $0x250
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063138
push   $0x258
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806313c
push   $0x260
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063140
push   $0x268
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063144
push   $0x270
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063148
push   $0x278
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806314c
push   $0x280
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063150
push   $0x288
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063154
push   $0x290
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063158
push   $0x298
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806315c
push   $0x2a0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063160
push   $0x2a8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063164
push   $0x2b0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063168
push   $0x2b8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806316c
push   $0x2c0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063170
push   $0x2c8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063174
push   $0x2d0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063178
push   $0x2d8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x806317c
push   $0x2e0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063180
push   $0x2e8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063184
push   $0x2f0
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
jmp    *0x8063188
push   $0x2f8
jmp    8049070 <__ctype_toupper_loc@plt-0x10>
sub    $0x1c,%esp
mov    0x8064740,%eax
movl   $0x805f0c0,(%esp)
mov    %eax,0x4(%esp)
call   8049600 <fputs@plt>
movl   $0x2,(%esp)
call   8049340 <exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x240,%esp
mov    0x8(%ebp),%edi
movl   $0x805f00a,0x4(%esp)
mov    0xc(%ebp),%esi
lea    0x54(%esp),%ebx
movl   $0x6,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x23c(%esp)
xor    %eax,%eax
call   8049510 <setlocale@plt>
movl   $0x805b5a0,0x4(%esp)
movl   $0x805b5b2,(%esp)
call   80495b0 <bindtextdomain@plt>
movl   $0x805b5b2,(%esp)
call   8049230 <textdomain@plt>
call   804ffd0 <__sprintf_chk@plt+0x6960>
movb   $0x0,0x8064b60
mov    %ebx,0x10(%esp)
movl   $0x80631c0,0xc(%esp)
movl   $0x805b5fe,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049380 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049951 <__sprintf_chk@plt+0x2e1>
cmp    $0x78,%eax
ja     8049718 <__sprintf_chk@plt+0xa8>
jmp    *0x805b9cc(,%eax,4)
addl   $0x1,0x80647a0
jmp    8049718 <__sprintf_chk@plt+0xa8>
orl    $0x100,0x8064780
00
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x8064798
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x806479c
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647c0
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647c8
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x8064788
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647a4
jmp    8049718 <__sprintf_chk@plt+0xa8>
orl    $0x1c,0x80647ac
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647b8
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647cc
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x8064794
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x8063430
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647b0
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647b4
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647bc
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x806478c
jmp    8049718 <__sprintf_chk@plt+0xa8>
mov    0x8063434,%eax
movl   $0x805ac68,0x14(%esp)
movl   $0x805b5f1,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x8063438,%eax
mov    %eax,0xc(%esp)
mov    0x806343c,%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x5,(%esp)
call   8049340 <exit@plt>
orl    $0x20,0x80647ac
jmp    8049718 <__sprintf_chk@plt+0xa8>
addl   $0x1,0x80647c4
jmp    8049718 <__sprintf_chk@plt+0xa8>
orl    $0x80,0x80647a8
00
jmp    8049718 <__sprintf_chk@plt+0xa8>
orl    $0x40,0x80647a8
jmp    8049718 <__sprintf_chk@plt+0xa8>
mov    0x8064764,%eax
mov    %eax,(%esp)
call   804f540 <__sprintf_chk@plt+0x5ed0>
test   %eax,%eax
je     8049718 <__sprintf_chk@plt+0xa8>
jmp    804a097 <__sprintf_chk@plt+0xa27>
orl    $0x8,0x80647ac
jmp    8049718 <__sprintf_chk@plt+0xa8>
call   804af40 <__sprintf_chk@plt+0x18d0>
movl   $0x805dbcb,(%esp)
call   804f540 <__sprintf_chk@plt+0x5ed0>
test   %eax,%eax
je     8049718 <__sprintf_chk@plt+0xa8>
jmp    804a097 <__sprintf_chk@plt+0xa27>
movl   $0x805b231,(%esp)
call   804f540 <__sprintf_chk@plt+0x5ed0>
test   %eax,%eax
je     8049718 <__sprintf_chk@plt+0xa8>
jmp    804a097 <__sprintf_chk@plt+0xa27>
orl    $0x10,0x80647ac
xchg   %ax,%ax
jmp    8049718 <__sprintf_chk@plt+0xa8>
orl    $0x4,0x80647ac
jmp    8049718 <__sprintf_chk@plt+0xa8>
mov    0x54(%esp),%eax
cmp    $0xa,%eax
jbe    8049acd <__sprintf_chk@plt+0x45d>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b5d6,0x10(%esp)
movl   $0x805b5e7,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    8049718 <__sprintf_chk@plt+0xa8>
movl   $0x805b4f5,(%esp)
call   804f540 <__sprintf_chk@plt+0x5ed0>
test   %eax,%eax
je     8049718 <__sprintf_chk@plt+0xa8>
jmp    804a097 <__sprintf_chk@plt+0xa27>
mov    0x80647c8,%ecx
mov    %eax,%edx
mov    0x80647cc,%eax
mov    0x80647c4,%ebx
mov    0x80647c0,%edi
mov    %ecx,0x48(%esp)
mov    %eax,0x4c(%esp)
add    %ecx,%eax
add    %ebx,%eax
add    %edi,%eax
sub    $0x1,%eax
jg     80498a0 <__sprintf_chk@plt+0x230>
mov    0x80656a8,%esi
test   %esi,%esi
jne    80499c1 <__sprintf_chk@plt+0x351>
cmpl   $0x0,0x80656a4
jne    80499c1 <__sprintf_chk@plt+0x351>
test   %edi,%edi
jne    80499c1 <__sprintf_chk@plt+0x351>
mov    0x806479c,%ecx
test   %ecx,%ecx
jne    80499df <__sprintf_chk@plt+0x36f>
cmpl   $0x0,0x8064798
jne    80499d6 <__sprintf_chk@plt+0x366>
xor    %ecx,%ecx
cmpl   $0x0,0x80647a0
jne    80499d2 <__sprintf_chk@plt+0x362>
cmpl   $0x0,0x8064794
je     80499f3 <__sprintf_chk@plt+0x383>
jmp    80499d2 <__sprintf_chk@plt+0x362>
mov    0x806479c,%eax
test   %eax,%eax
mov    %eax,%ecx
je     8049b4d <__sprintf_chk@plt+0x4dd>
mov    %eax,%ecx
test   %esi,%esi
jne    80499f3 <__sprintf_chk@plt+0x383>
cmpl   $0x0,0x80656a4
jne    80499f3 <__sprintf_chk@plt+0x383>
movl   $0x1,0x80656a4
00
movl   $0x1,0x80656a8
00
add    0x8064798,%ecx
add    0x80647a0,%ecx
add    0x80656b0,%ecx
add    0x806569c,%ecx
add    0x80656b4,%ecx
add    0x80656ac,%ecx
add    0x8064794,%ecx
add    0x8064c60,%ecx
test   %ebx,%ebx
mov    %ecx,0x8064784
jne    8049b0a <__sprintf_chk@plt+0x49a>
test   %edi,%edi
je     8049ba5 <__sprintf_chk@plt+0x535>
cmpb   $0x0,0x8064b60
je     804ae16 <__sprintf_chk@plt+0x17a6>
lea    0x13c(%esp),%ebx
movl   $0x100,0x8(%esp)
movl   $0x8064b60,0x4(%esp)
mov    %ebx,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   8049260 <index@plt>
test   %eax,%eax
jne    804ae05 <__sprintf_chk@plt+0x1795>
movl   $0x5,0x8(%esp)
movl   $0x805dbcb,0x4(%esp)
mov    %ebx,(%esp)
call   80495c0 <strncmp@plt>
test   %eax,%eax
jne    804a08b <__sprintf_chk@plt+0xa1b>
call   804f2b0 <__sprintf_chk@plt+0x5c40>
mov    0x8064798,%eax
mov    %eax,0x8(%esp)
mov    0x806479c,%eax
mov    %eax,0x4(%esp)
mov    0x80647a0,%eax
mov    %eax,(%esp)
call   804f140 <__sprintf_chk@plt+0x5ad0>
movl   $0x0,(%esp)
call   8049340 <exit@plt>
shl    $0x4,%eax
mov    0x80631c0(%eax),%eax
mov    %eax,(%esp)
call   804f540 <__sprintf_chk@plt+0x5ed0>
test   %eax,%eax
je     8049718 <__sprintf_chk@plt+0xa8>
jmp    804a097 <__sprintf_chk@plt+0xa27>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80647b4,%edx
test   %edx,%edx
je     8049ba1 <__sprintf_chk@plt+0x531>
movl   $0x1,(%esp)
call   8049190 <sleep@plt>
mov    0x80647ac,%eax
mov    0x8063430,%edx
mov    %edx,0x8(%esp)
mov    %eax,%edx
and    $0x4,%eax
and    $0x8,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8056d70 <__sprintf_chk@plt+0xd700>
test   %eax,%eax
je     8049af0 <__sprintf_chk@plt+0x480>
mov    0x23c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804ae00 <__sprintf_chk@plt+0x1790>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x0,0x8064798
jne    80499d2 <__sprintf_chk@plt+0x362>
cmpl   $0x0,0x80647a0
jne    80499ab <__sprintf_chk@plt+0x33b>
movl   $0x1,0x80647a0
00
mov    $0x1,%al
movl   $0x1,0x8064798
00
movl   $0x1,0x806479c
00
jmp    80499d0 <__sprintf_chk@plt+0x360>
mov    %esi,(%esp)
call   8049160 <fclose@plt>
cmpl   $0x0,0x80647b4
jne    804a8f7 <__sprintf_chk@plt+0x1287>
xor    %eax,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
cmpl   $0x0,0x48(%esp)
jne    804a0a3 <__sprintf_chk@plt+0xa33>
cmpl   $0x0,0x4c(%esp)
jne    804a045 <__sprintf_chk@plt+0x9d5>
mov    %edx,%ebx
cmpl   $0x0,0x8064784
je     804a167 <__sprintf_chk@plt+0xaf7>
cmpl   $0x0,0x806479c
jne    804a167 <__sprintf_chk@plt+0xaf7>
cmpl   $0x0,0x8064798
jne    804a167 <__sprintf_chk@plt+0xaf7>
cmpl   $0x0,0x80647a0
jne    804a167 <__sprintf_chk@plt+0xaf7>
cmpl   $0x0,0x8064798
je     8049c12 <__sprintf_chk@plt+0x5a2>
call   804d4b0 <__sprintf_chk@plt+0x3e40>
test   %eax,%eax
mov    %eax,%ebx
jne    804a9d3 <__sprintf_chk@plt+0x1363>
cmpl   $0x0,0x8064784
je     8049c1b <__sprintf_chk@plt+0x5ab>
cmpl   $0x0,0x80647a0
je     8049c2a <__sprintf_chk@plt+0x5ba>
call   804dfa0 <__sprintf_chk@plt+0x4930>
test   %eax,%eax
mov    %eax,%ebx
jne    804a9d3 <__sprintf_chk@plt+0x1363>
cmpl   $0x0,0x8064794
jne    804a96c <__sprintf_chk@plt+0x12fc>
cmpl   $0x0,0x8064784
je     8049c49 <__sprintf_chk@plt+0x5d9>
cmpl   $0x0,0x80656b0
je     8049c66 <__sprintf_chk@plt+0x5f6>
call   804b920 <__sprintf_chk@plt+0x22b0>
call   804e180 <__sprintf_chk@plt+0x4b10>
test   %eax,%eax
mov    %eax,%ebx
jne    804a9d3 <__sprintf_chk@plt+0x1363>
cmpl   $0x0,0x8064784
je     8049c73 <__sprintf_chk@plt+0x603>
cmpl   $0x0,0x806569c
je     804a273 <__sprintf_chk@plt+0xc03>
movl   $0x805b6dd,(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x40(%esp)
je     804aaef <__sprintf_chk@plt+0x147f>
movl   $0x805ae58,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x1,0x8063430
jle    8049cdc <__sprintf_chk@plt+0x66c>
movl   $0x805b707,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
movl   $0x4,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,0x48(%esp)
je     804ad8b <__sprintf_chk@plt+0x171b>
mov    0x40(%esp),%eax
movl   $0xff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x13c(%esp),%eax
mov    %eax,(%esp)
call   8049150 <fgets@plt>
jmp    8049eee <__sprintf_chk@plt+0x87e>
movl   $0x1,0x44(%esp)
mov    0x60(%esp),%eax
cmp    $0x1,%eax
je     804a154 <__sprintf_chk@plt+0xae4>
cmp    $0x7,%eax
mov    $0x805f00a,%edi
je     8049d51 <__sprintf_chk@plt+0x6e1>
movl   $0x805b744,(%esp)
call   8049360 <gettext@plt>
mov    %eax,%edi
mov    0x48(%esp),%eax
lea    0xc8(%esp),%esi
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x4,(%esp)
call   *0x18(%eax)
mov    0x80647ac,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
call   *0x14(%eax)
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x13c(%esp),%eax
mov    %eax,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x68(%esp),%eax
movl   $0x805b749,0x10(%esp)
movl   $0x32,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x18(%esp)
lea    0x13c(%esp),%eax
mov    %eax,0x14(%esp)
movl   $0x32,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    0x44(%esp),%eax
test   %eax,%eax
jne    804a125 <__sprintf_chk@plt+0xab5>
mov    0x4c(%esp),%eax
mov    0x48(%esp),%ecx
mov    %esi,0x8(%esp)
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ecx)
mov    0x80647ac,%eax
mov    0x48(%esp),%ecx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x14(%ecx)
lea    0x13c(%esp),%ecx
mov    %ecx,(%esp)
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x6c(%esp),%eax
lea    0x13c(%esp),%ecx
mov    %ecx,0x14(%esp)
movl   $0x805b749,0x10(%esp)
movl   $0x32,0xc(%esp)
mov    %eax,0x18(%esp)
mov    0x4c(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x32,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    0x4c(%esp),%eax
mov    %edi,0x18(%esp)
mov    %ebx,0x10(%esp)
movl   $0x805af10,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x5c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x1,0x8063430
jle    8049ee2 <__sprintf_chk@plt+0x872>
testb  $0x10,0x80647ac
jne    804a133 <__sprintf_chk@plt+0xac3>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   80490f0 <getpwuid@plt>
test   %eax,%eax
je     804a133 <__sprintf_chk@plt+0xac3>
mov    (%eax),%eax
movl   $0x805b751,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
mov    0x40(%esp),%eax
movl   $0xff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x13c(%esp),%eax
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804a25c <__sprintf_chk@plt+0xbec>
lea    0x64(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x60(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x58(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x10a(%esp),%esi
lea    0xd8(%esp),%ebx
lea    0x13c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805b71c,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,0x4c(%esp)
call   8049540 <sscanf@plt>
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   80491f0 <rindex@plt>
test   %eax,%eax
je     804aa46 <__sprintf_chk@plt+0x13d6>
movb   $0x0,(%eax)
lea    0x68(%esp),%edx
add    $0x1,%eax
mov    %edx,0x8(%esp)
mov    $0x805b730,%edi
movl   $0x805b2ad,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
movzwl 0x68(%esp),%eax
mov    $0xe,%ecx
ror    $0x8,%ax
movzwl %ax,%eax
mov    %eax,0x68(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
je     8049d24 <__sprintf_chk@plt+0x6b4>
mov    0x4c(%esp),%eax
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   80491f0 <rindex@plt>
test   %eax,%eax
je     804ad03 <__sprintf_chk@plt+0x1693>
movb   $0x0,(%eax)
lea    0x6c(%esp),%edx
add    $0x1,%eax
mov    %edx,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
movzwl 0x6c(%esp),%eax
ror    $0x8,%ax
movzwl %ax,%eax
mov    %eax,0x6c(%esp)
movl   $0x0,0x44(%esp)
jmp    8049d2c <__sprintf_chk@plt+0x6bc>
mov    0x8064304,%eax
mov    %eax,(%esp)
call   8049610 <close@plt>
movl   $0xffffffff,0x8064304
ff
cmpl   $0x0,0x80647b4
je     8049ba1 <__sprintf_chk@plt+0x531>
movl   $0x1,(%esp)
call   8049190 <sleep@plt>
cmpl   $0x0,0x8064304
js     804aaae <__sprintf_chk@plt+0x143e>
cmpl   $0x1,0x8063430
jle    804aa83 <__sprintf_chk@plt+0x1413>
movl   $0x80647bc,0x4(%esp)
movl   $0x8056710,(%esp)
call   8054700 <__sprintf_chk@plt+0xb090>
test   %eax,%eax
js     804ade0 <__sprintf_chk@plt+0x1770>
cmpl   $0x0,0x80647b4
je     804a015 <__sprintf_chk@plt+0x9a5>
call   8053ff0 <__sprintf_chk@plt+0xa980>
jmp    804a02c <__sprintf_chk@plt+0x9bc>
movl   $0x805ad5c,(%esp)
call   80492e0 <puts@plt>
movl   $0x1,(%esp)
call   8049340 <exit@plt>
cmpb   $0x0,0x8064b60
je     804ad2d <__sprintf_chk@plt+0x16bd>
mov    0x8063430,%eax
cmp    $0x2,%eax
je     804ad1c <__sprintf_chk@plt+0x16ac>
cmp    $0x1,%eax
jne    804a0cf <__sprintf_chk@plt+0xa5f>
movl   $0x2,0x8063430
00
mov    $0x2,%al
mov    0x80647a8,%edx
and    $0x3,%eax
mov    0x80647ac,%ebx
or     %edx,%ebx
or     0x8064780,%ebx
or     %eax,%ebx
mov    %ebx,%eax
or     $0x80,%al
test   %edx,%edx
cmove  %eax,%ebx
jmp    804a10c <__sprintf_chk@plt+0xa9c>
cmpl   $0x0,0x80647b4
je     8049ba1 <__sprintf_chk@plt+0x531>
movl   $0x1,(%esp)
call   8049190 <sleep@plt>
mov    %ebx,0x4(%esp)
movl   $0x8064b60,(%esp)
call   8050020 <__sprintf_chk@plt+0x69b0>
test   %eax,%eax
je     804a0f3 <__sprintf_chk@plt+0xa83>
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
mov    0x4c(%esp),%eax
movw   $0x2d,(%eax)
jmp    8049e6a <__sprintf_chk@plt+0x7fa>
mov    0x64(%esp),%eax
movl   $0x805b758,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8049ee2 <__sprintf_chk@plt+0x872>
movl   $0x805b73e,(%esp)
call   8049360 <gettext@plt>
mov    %eax,%edi
jmp    8049d51 <__sprintf_chk@plt+0x6e1>
call   804b920 <__sprintf_chk@plt+0x22b0>
movl   $0x805b665,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x0,0x80647bc
jne    804a9da <__sprintf_chk@plt+0x136a>
cmpl   $0x0,0x80647b8
je     804a94b <__sprintf_chk@plt+0x12db>
movl   $0x805b4af,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805add4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x1,0x8063430
jle    804a1ff <__sprintf_chk@plt+0xb8f>
movl   $0x805b682,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x0,0x8064788
jne    804aa1c <__sprintf_chk@plt+0x13ac>
cmpl   $0x0,0x80647a4
jne    804a9fb <__sprintf_chk@plt+0x138b>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
cmpl   $0x0,0x8064784
je     804a23b <__sprintf_chk@plt+0xbcb>
cmpl   $0x0,0x806479c
je     8049bf1 <__sprintf_chk@plt+0x581>
call   804c8f0 <__sprintf_chk@plt+0x3280>
test   %eax,%eax
mov    %eax,%ebx
jne    804a9d3 <__sprintf_chk@plt+0x1363>
cmpl   $0x0,0x8064784
jne    8049bf1 <__sprintf_chk@plt+0x581>
jmp    8049bfa <__sprintf_chk@plt+0x58a>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %ebx,%ebx
cmpl   $0x0,0x8064784
je     804a280 <__sprintf_chk@plt+0xc10>
cmpl   $0x0,0x80656b4
je     804a58c <__sprintf_chk@plt+0xf1c>
movl   $0x805b75f,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x44(%esp)
je     804abc2 <__sprintf_chk@plt+0x1552>
movl   $0x805b776,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805af34,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0xffffffff,0x4c(%esp)
mov    0x44(%esp),%eax
movl   $0x100,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x13c(%esp),%eax
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804a575 <__sprintf_chk@plt+0xf05>
cmpl   $0xffffffff,0x4c(%esp)
je     804a47a <__sprintf_chk@plt+0xe0a>
cmpl   $0x0,0x4c(%esp)
movl   $0x0,0x6c(%esp)
movl   $0x0,0x70(%esp)
je     804a4c6 <__sprintf_chk@plt+0xe56>
cmpb   $0x20,0x13c(%esp)
lea    0x13c(%esp),%eax
je     804a340 <__sprintf_chk@plt+0xcd0>
xchg   %ax,%ax
add    $0x1,%eax
cmpb   $0x20,(%eax)
jne    804a338 <__sprintf_chk@plt+0xcc8>
cmpb   $0x20,0x1(%eax)
lea    0x1(%eax),%ecx
mov    %ecx,0x48(%esp)
je     804aa3d <__sprintf_chk@plt+0x13cd>
mov    %ecx,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmpb   $0x20,(%eax)
jne    804a358 <__sprintf_chk@plt+0xce8>
cmpb   $0x20,0x1(%eax)
lea    0x1(%eax),%edi
movb   $0x0,(%eax)
mov    %edi,%esi
je     804a378 <__sprintf_chk@plt+0xd08>
xchg   %ax,%ax
add    $0x1,%esi
cmpb   $0x20,(%esi)
jne    804a370 <__sprintf_chk@plt+0xd00>
cmpb   $0x20,0x1(%esi)
lea    0x1(%esi),%ebx
movb   $0x0,(%esi)
mov    %ebx,%eax
je     804a390 <__sprintf_chk@plt+0xd20>
xchg   %ax,%ax
add    $0x1,%eax
cmpb   $0x20,(%eax)
jne    804a388 <__sprintf_chk@plt+0xd18>
lea    0x68(%esp),%edx
add    $0x1,%eax
movb   $0x0,-0x1(%eax)
lea    0x70(%esp),%ecx
mov    %edx,0x10(%esp)
lea    0x64(%esp),%edx
mov    %ecx,0x18(%esp)
lea    0x6c(%esp),%ecx
mov    %edx,0xc(%esp)
lea    0x60(%esp),%edx
mov    %ecx,0x14(%esp)
mov    %edx,0x8(%esp)
movl   $0x805afc8,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x5,%eax
jne    804a543 <__sprintf_chk@plt+0xed3>
movzbl 0x1(%esi),%edx
test   %dl,%dl
je     804aae8 <__sprintf_chk@plt+0x1478>
cmp    $0x2c,%dl
mov    %ebx,%eax
jne    804a3f4 <__sprintf_chk@plt+0xd84>
jmp    804aae8 <__sprintf_chk@plt+0x1478>
test   %dl,%dl
je     804a3ff <__sprintf_chk@plt+0xd8f>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2c,%dl
jne    804a3f0 <__sprintf_chk@plt+0xd80>
movb   $0x0,(%eax)
mov    0x64(%esp),%eax
mov    0x70(%esp),%ecx
mov    0x6c(%esp),%edx
mov    0x68(%esp),%esi
mov    %eax,0x40(%esp)
mov    0x60(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %edx,0x3c(%esp)
mov    0x805bbc4(,%eax,4),%eax
mov    %eax,(%esp)
call   8049360 <gettext@plt>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %esi,0x18(%esp)
mov    %edi,0xc(%esp)
mov    %ecx,0x24(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x20(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x805b014,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a2d8 <__sprintf_chk@plt+0xc68>
lea    0x13c(%esp),%eax
movl   $0x9,0x8(%esp)
movl   $0x805b78c,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <strncmp@plt>
movl   $0x0,0x4c(%esp)
test   %eax,%eax
je     804a2d8 <__sprintf_chk@plt+0xc68>
movl   $0x0,0x6c(%esp)
movl   $0x0,0x70(%esp)
movl   $0x1,0x4c(%esp)
jmp    804a325 <__sprintf_chk@plt+0xcb5>
lea    0x70(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x6c(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x68(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x64(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x60(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x10a(%esp),%ebx
lea    0x150(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x805af78,0x4(%esp)
mov    %eax,(%esp)
movb   $0x0,0x145(%esp)
movb   $0x0,0x14f(%esp)
call   8049540 <sscanf@plt>
and    $0xfffffffd,%eax
cmp    $0x4,%eax
jne    804a93f <__sprintf_chk@plt+0x12cf>
mov    %ebx,0x48(%esp)
lea    0x146(%esp),%edi
lea    0x13c(%esp),%ebx
jmp    804a402 <__sprintf_chk@plt+0xd92>
cmp    $0x3,%eax
je     804a3d8 <__sprintf_chk@plt+0xd68>
movl   $0x805b7b4,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b75f,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a2d8 <__sprintf_chk@plt+0xc68>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %ebx,%ebx
cmpl   $0x0,0x8064784
je     804a599 <__sprintf_chk@plt+0xf29>
cmpl   $0x0,0x8064c60
je     804a724 <__sprintf_chk@plt+0x10b4>
movl   $0x805b7d2,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
movl   $0x805b7d2,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,%ebx
je     804ac94 <__sprintf_chk@plt+0x1624>
movl   $0x805b7e7,(%esp)
lea    0x6c(%esp),%edi
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805b044,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
lea    0x13c(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fgets@plt>
lea    0x13c(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804a711 <__sprintf_chk@plt+0x10a1>
lea    0x68(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x64(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x60(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x70(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x10a(%esp),%esi
lea    0x152(%esp),%eax
mov    %edi,0x20(%esp)
mov    %esi,0x8(%esp)
movl   $0x805b094,0x4(%esp)
mov    %eax,(%esp)
movb   $0x0,0x146(%esp)
movb   $0x0,0x150(%esp)
call   8049540 <sscanf@plt>
cmpl   $0x0,0x80647bc
jne    804a6a7 <__sprintf_chk@plt+0x1037>
cmpl   $0x0,0x70(%esp)
je     804a612 <__sprintf_chk@plt+0xfa2>
mov    0x6c(%esp),%eax
mov    %esi,0x10(%esp)
movl   $0x805b0c8,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x5c(%esp),%eax
mov    0x805bbb0(,%eax,4),%eax
mov    %eax,0x18(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x147(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x13c(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a612 <__sprintf_chk@plt+0xfa2>
mov    %ebx,(%esp)
call   8049160 <fclose@plt>
xor    %ebx,%ebx
cmpl   $0x0,0x8064784
je     804a731 <__sprintf_chk@plt+0x10c1>
cmpl   $0x0,0x80656ac
je     804a8e2 <__sprintf_chk@plt+0x1272>
movl   $0x805b7fc,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,%esi
je     804ac29 <__sprintf_chk@plt+0x15b9>
movl   $0x805b813,(%esp)
lea    0x6c(%esp),%edi
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805b100,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
lea    0x13c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fgets@plt>
lea    0x13c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8049b8c <__sprintf_chk@plt+0x51c>
lea    0x70(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x68(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x64(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x60(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x10a(%esp),%ebx
lea    0x15a(%esp),%eax
mov    %edi,0x18(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805b150,0x4(%esp)
mov    %eax,(%esp)
movb   $0x0,0x145(%esp)
movb   $0x0,0x14f(%esp)
movb   $0x0,0x159(%esp)
call   8049540 <sscanf@plt>
cmp    $0x6,%eax
je     804a84d <__sprintf_chk@plt+0x11dd>
movl   $0x805b796,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b7fc,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a79e <__sprintf_chk@plt+0x112e>
mov    0x64(%esp),%eax
mov    0x6c(%esp),%edx
mov    0x70(%esp),%ecx
mov    %eax,0x4c(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x44(%esp)
mov    0x68(%esp),%edx
mov    %ecx,0x40(%esp)
mov    0x805bc10(,%eax,4),%eax
mov    %edx,0x48(%esp)
mov    %eax,(%esp)
call   8049360 <gettext@plt>
mov    0x40(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebx,0x14(%esp)
movl   $0x805b1a8,0x4(%esp)
mov    %ecx,0x28(%esp)
mov    0x4c(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x48(%esp),%edx
mov    %eax,0x18(%esp)
lea    0x150(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x146(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x13c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a79e <__sprintf_chk@plt+0x112e>
cmpl   $0x0,0x80647b4
je     804a9d3 <__sprintf_chk@plt+0x1363>
test   %ebx,%ebx
jne    804ad43 <__sprintf_chk@plt+0x16d3>
movl   $0x1,(%esp)
mov    $0x8064800,%ebx
call   8049190 <sleep@plt>
cmpb   $0x2,0x80647ec
je     804a92c <__sprintf_chk@plt+0x12bc>
movb   $0x0,0x80647ec
xor    %ebx,%ebx
jmp    8049bbd <__sprintf_chk@plt+0x54d>
nop
mov    (%eax),%edx
mov    %edx,(%ebx)
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    (%ebx),%eax
test   %eax,%eax
jne    804a920 <__sprintf_chk@plt+0x12b0>
add    $0x4,%ebx
cmp    $0x8064b4c,%ebx
jb     804a92c <__sprintf_chk@plt+0x12bc>
jmp    804a911 <__sprintf_chk@plt+0x12a1>
movl   $0x805b796,(%esp)
jmp    804a553 <__sprintf_chk@plt+0xee3>
movl   $0x805b4be,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a1be <__sprintf_chk@plt+0xb4e>
movl   $0x805b6a1,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805b6a7,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805b6bf,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805ae28,(%esp)
call   80492e0 <puts@plt>
call   804b740 <__sprintf_chk@plt+0x20d0>
test   %eax,%eax
mov    %eax,%ebx
je     8049c37 <__sprintf_chk@plt+0x5c7>
mov    %ebx,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b495,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a1be <__sprintf_chk@plt+0xb4e>
movl   $0x805b69a,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a219 <__sprintf_chk@plt+0xba9>
movl   $0x805b4cc,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a20c <__sprintf_chk@plt+0xb9c>
mov    0x48(%esp),%eax
jmp    804a360 <__sprintf_chk@plt+0xcf0>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805aebc,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
movl   $0x805b5e7,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805ad84,(%esp)
movl   $0x1,0x80656b8
00
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a05f <__sprintf_chk@plt+0x9ef>
movl   $0x0,(%esp)
call   8058210 <__sprintf_chk@plt+0xeba0>
test   %eax,%eax
mov    %eax,0x8064304
js     804ad4b <__sprintf_chk@plt+0x16db>
movl   $0x805b62f,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804a052 <__sprintf_chk@plt+0x9e2>
mov    %ebx,%eax
jmp    804a3ff <__sprintf_chk@plt+0xd8f>
nop
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%ebx
jne    804ad77 <__sprintf_chk@plt+0x1707>
movl   $0x805b6f2,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x40(%esp)
je     804ab57 <__sprintf_chk@plt+0x14e7>
mov    %eax,(%esp)
call   8049480 <fileno@plt>
lea    0x70(%esp),%ecx
mov    %ecx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80492f0 <__fxstat@plt>
mov    0x80(%esp),%edx
and    $0xf000,%edx
cmp    $0x8000,%edx
je     8049c9b <__sprintf_chk@plt+0x62b>
mov    %edi,(%esp)
call   8049160 <fclose@plt>
cmpl   $0x2,(%ebx)
jne    804ad63 <__sprintf_chk@plt+0x16f3>
cmpl   $0x0,0x8064784
jne    804ab76 <__sprintf_chk@plt+0x1506>
cmpl   $0x0,0x8064780
je     804a268 <__sprintf_chk@plt+0xbf8>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b700,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
cmpl   $0x0,0x8064784
je     804a268 <__sprintf_chk@plt+0xbf8>
mov    $0x1,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804adcc <__sprintf_chk@plt+0x175c>
cmpl   $0x0,0x8064784
jne    804abe6 <__sprintf_chk@plt+0x1576>
cmpl   $0x0,0x8064780
je     804a581 <__sprintf_chk@plt+0xf11>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b76e,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
cmpl   $0x0,0x8064784
jne    804abb8 <__sprintf_chk@plt+0x1548>
jmp    804a581 <__sprintf_chk@plt+0xf11>
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804adb8 <__sprintf_chk@plt+0x1748>
cmpl   $0x0,0x8064784
jne    804ac4d <__sprintf_chk@plt+0x15dd>
cmpl   $0x0,0x8064780
je     8049b94 <__sprintf_chk@plt+0x524>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b809,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
cmpl   $0x0,0x8064784
jne    804abb8 <__sprintf_chk@plt+0x1548>
jmp    8049b94 <__sprintf_chk@plt+0x524>
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
lea    0x0(%esi,%eiz,1),%esi
jne    804ada4 <__sprintf_chk@plt+0x1734>
cmpl   $0x0,0x8064784
jne    804acbc <__sprintf_chk@plt+0x164c>
cmpl   $0x0,0x8064780
je     804a719 <__sprintf_chk@plt+0x10a9>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b7e0,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
cmpl   $0x0,0x8064784
jne    804abb8 <__sprintf_chk@plt+0x1548>
jmp    804a719 <__sprintf_chk@plt+0x10a9>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805aee4,0x10(%esp)
jmp    804aa5a <__sprintf_chk@plt+0x13ea>
movl   $0x1,0x8063430
00
mov    $0x1,%al
jmp    804a0cf <__sprintf_chk@plt+0xa5f>
movl   $0x74656e69,0x8064b60
74
movb   $0x0,0x8064b64
jmp    804a0b0 <__sprintf_chk@plt+0xa40>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b6eb,(%esp)
call   8049280 <perror@plt>
movl   $0x1,(%esp)
call   8049340 <exit@plt>
movl   $0x805b6f2,(%esp)
call   8049280 <perror@plt>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b6dd,(%esp)
call   8049280 <perror@plt>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b70d,0x10(%esp)
jmp    804aa5a <__sprintf_chk@plt+0x13ea>
movl   $0x805b7d2,(%esp)
call   8049280 <perror@plt>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b7fc,(%esp)
call   8049280 <perror@plt>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b75f,(%esp)
call   8049280 <perror@plt>
or     $0xffffffff,%eax
jmp    8049b31 <__sprintf_chk@plt+0x4c1>
movl   $0x805b647,(%esp)
call   8049360 <gettext@plt>
mov    %eax,(%esp)
call   8049280 <perror@plt>
movl   $0x1,(%esp)
call   8049340 <exit@plt>
call   80491c0 <__stack_chk_fail@plt>
movl   $0x805b61c,(%esp)
call   80492e0 <puts@plt>
jmp    8049ac1 <__sprintf_chk@plt+0x451>
call   804f250 <__sprintf_chk@plt+0x5be0>
mov    0x8064798,%eax
mov    %eax,0x8(%esp)
mov    0x806479c,%eax
mov    %eax,0x4(%esp)
mov    0x80647a0,%eax
mov    %eax,(%esp)
call   804efc0 <__sprintf_chk@plt+0x5950>
jmp    8049ac1 <__sprintf_chk@plt+0x451>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x805a330
push   $0x805a2c0
push   %ecx
push   %esi
push   $0x80496b0
call   80493d0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8064743,%eax
sub    $0x8064740,%eax
cmp    $0x6,%eax
ja     804ae90 <__sprintf_chk@plt+0x1820>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804ae8f <__sprintf_chk@plt+0x181f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8064740,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8064740,%eax
sub    $0x8064740,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804aec9 <__sprintf_chk@plt+0x1859>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804aec8 <__sprintf_chk@plt+0x1858>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8064740,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8064768
jne    804af0c <__sprintf_chk@plt+0x189c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804ae80 <__sprintf_chk@plt+0x1810>
movb   $0x1,0x8064768
leave
repz ret
xchg   %ax,%ax
mov    0x8062f10,%eax
test   %eax,%eax
je     804af38 <__sprintf_chk@plt+0x18c8>
mov    $0x0,%eax
test   %eax,%eax
je     804af38 <__sprintf_chk@plt+0x18c8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8062f10,(%esp)
call   *%eax
leave
jmp    804aeb0 <__sprintf_chk@plt+0x1840>
nop
jmp    804aeb0 <__sprintf_chk@plt+0x1840>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x805a368,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a3b8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a3e4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a41c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a454,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a490,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a4d8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a524,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a568,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a598,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a5d8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a610,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a64c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a688,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a6c4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a700,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a744,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a78c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a7c4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a808,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a854,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a888,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a8d8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a920,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a970,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b231,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805a9ac,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804f7f0 <__sprintf_chk@plt+0x6180>
movl   $0x4,(%esp)
call   8049340 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x10,%esp
cmpl   $0x1,0x8063430
jle    804b3a8 <__sprintf_chk@plt+0x1d38>
testb  $0x10,0x80647ac
mov    %eax,%ebx
jne    804b378 <__sprintf_chk@plt+0x1d08>
mov    %eax,(%esp)
call   80490f0 <getpwuid@plt>
test   %eax,%eax
je     804b378 <__sprintf_chk@plt+0x1d08>
mov    (%eax),%eax
movl   $0x805b236,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804b390 <__sprintf_chk@plt+0x1d20>
xchg   %ax,%ax
mov    %ebx,0x8(%esp)
movl   $0x805b23e,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x805b246,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x8064788,%edx
test   %edx,%edx
je     804b406 <__sprintf_chk@plt+0x1d96>
mov    %esi,%eax
mov    $0x9b4c6f9f,%edx
mul    %edx
mov    %esi,%eax
shr    $0x7,%edx
imul   $0xd3,%edx,%edx
sub    %edx,%eax
mov    0x8064800(,%eax,4),%ebx
test   %ebx,%ebx
jne    804b3e6 <__sprintf_chk@plt+0x1d76>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805f0b7,%ebx
jmp    804b3ee <__sprintf_chk@plt+0x1d7e>
nop
mov    (%ebx),%ebx
test   %ebx,%ebx
je     804b3d8 <__sprintf_chk@plt+0x1d68>
cmp    0x4(%ebx),%esi
jne    804b3e0 <__sprintf_chk@plt+0x1d70>
add    $0x8,%ebx
mov    %ebx,0x8(%esp)
movl   $0x805b24e,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x80647a4,%eax
test   %eax,%eax
je     804b427 <__sprintf_chk@plt+0x1db7>
mov    %edi,0x8(%esp)
movl   $0x805ec5b,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x8064760,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049240 <_IO_putc@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x110,%esp
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
test   %ebx,%ebx
jne    804b4c0 <__sprintf_chk@plt+0x1e50>
movl   $0x805f4e8,0x4(%esp)
mov    %edx,(%esp)
call   80490b0 <strstr@plt>
test   %eax,%eax
je     804b538 <__sprintf_chk@plt+0x1ec8>
mov    $0x805b255,%edi
mov    $0x3,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x80647e4
mov    0x10c(%esp),%eax
xor    %gs:0x14,%eax
jne    804b731 <__sprintf_chk@plt+0x20c1>
add    $0x110,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x80647e8,%edi
test   %edi,%edi
jne    804b542 <__sprintf_chk@plt+0x1ed2>
cmpb   $0x9,(%edx)
je     804b6a8 <__sprintf_chk@plt+0x2038>
mov    0x80647e4,%edx
test   %edx,%edx
jne    804b508 <__sprintf_chk@plt+0x1e98>
movl   $0x80647d4,0x8(%esp)
movl   $0x805b296,0x4(%esp)
mov    %esi,(%esp)
call   8049540 <sscanf@plt>
test   %eax,%eax
jle    804b52d <__sprintf_chk@plt+0x1ebd>
movb   $0x0,0x80647de
jmp    804b49f <__sprintf_chk@plt+0x1e2f>
lea    0x0(%esi),%esi
lea    0x28(%esp),%eax
movl   $0x80647d4,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b293,0x4(%esp)
mov    %esi,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x1,%eax
jg     804b4f9 <__sprintf_chk@plt+0x1e89>
movl   $0x805aa3c,(%esp)
jmp    804b581 <__sprintf_chk@plt+0x1f11>
xchg   %ax,%ax
movl   $0x1,0x80647e8
00
lea    0x2c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x8c(%esp),%edi
lea    0x28(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x80647d4,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b259,0x4(%esp)
mov    %esi,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x4,%eax
je     804b5a8 <__sprintf_chk@plt+0x1f38>
movl   $0x805a9ec,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804b49f <__sprintf_chk@plt+0x1e2f>
lea    0x3c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x38(%esp),%eax
lea    0x30(%esp),%ebx
mov    %eax,0x10(%esp)
lea    0x34(%esp),%eax
mov    %ebx,0x8(%esp)
lea    0x5e(%esp),%esi
mov    %eax,0xc(%esp)
movl   $0x805b273,0x4(%esp)
mov    %edi,(%esp)
call   8049540 <sscanf@plt>
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
lea    0x40(%esp),%ebx
movl   $0x2e,0xc(%esp)
mov    %esi,0x8(%esp)
bswap  %eax
mov    %eax,0x30(%esp)
mov    0x34(%esp),%eax
movl   $0xa,(%esp)
bswap  %eax
mov    %eax,0x34(%esp)
mov    0x38(%esp),%eax
bswap  %eax
mov    %eax,0x38(%esp)
mov    0x3c(%esp),%eax
bswap  %eax
mov    %eax,0x3c(%esp)
call   8049550 <inet_ntop@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    $0xa,%ecx
movl   $0xa,(%esp)
mov    %cx,0x40(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
je     804b720 <__sprintf_chk@plt+0x20b0>
mov    0x80647ac,%edx
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   *0x14(%eax)
movl   $0x80,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x2c(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x80647d4,0x8(%esp)
movl   $0x805b284,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804b49f <__sprintf_chk@plt+0x1e2f>
lea    0x2c(%esp),%eax
lea    0x8c(%esp),%edi
mov    %eax,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x805b29b,0x4(%esp)
mov    %edx,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x1,%eax
jle    804b52d <__sprintf_chk@plt+0x1ebd>
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %edi,(%esp)
call   8049540 <sscanf@plt>
mov    $0x2,%eax
movl   $0x2,(%esp)
mov    %ax,0x40(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
je     804b720 <__sprintf_chk@plt+0x20b0>
mov    0x80647ac,%edx
lea    0x40(%esp),%ecx
mov    %ecx,(%esp)
mov    %edx,0x4(%esp)
jmp    804b664 <__sprintf_chk@plt+0x1ff4>
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x40(%esp),%ebx
movl   $0x805aa10,(%esp)
jmp    804b581 <__sprintf_chk@plt+0x1f11>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
mov    0x8064784,%edi
mov    %gs:0x14,%eax
mov    %eax,0x202c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     804b771 <__sprintf_chk@plt+0x2101>
mov    0x80656a8,%esi
test   %esi,%esi
je     804b878 <__sprintf_chk@plt+0x2208>
movl   $0x805b2b0,(%esp)
xor    %esi,%esi
call   8057fb0 <__sprintf_chk@plt+0xe940>
lea    0x2c(%esp),%ebx
test   %eax,%eax
mov    %eax,0x8065680
je     804b890 <__sprintf_chk@plt+0x2220>
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804b7b6 <__sprintf_chk@plt+0x2146>
mov    %esi,%eax
mov    %ebx,%edx
call   804b450 <__sprintf_chk@plt+0x1de0>
lea    0x1(%esi),%edi
mov    %edi,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804b790 <__sprintf_chk@plt+0x2120>
mov    %eax,(%esp)
xor    %edi,%edi
call   8049160 <fclose@plt>
mov    0x8064784,%eax
test   %eax,%eax
je     804b7eb <__sprintf_chk@plt+0x217b>
mov    0x80656a4,%edx
mov    %edi,%eax
test   %edx,%edx
je     804b856 <__sprintf_chk@plt+0x21e6>
movl   $0x805b2ce,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x8065680
je     804b8f8 <__sprintf_chk@plt+0x2288>
xor    %esi,%esi
lea    0x2c(%esp),%ebx
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804b836 <__sprintf_chk@plt+0x21c6>
mov    %esi,%eax
mov    %ebx,%edx
call   804b450 <__sprintf_chk@plt+0x1de0>
lea    0x1(%esi),%ebp
mov    %ebp,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804b810 <__sprintf_chk@plt+0x21a0>
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    %edi,%eax
mov    0x202c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804b915 <__sprintf_chk@plt+0x22a5>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80656a4,%edx
xor    %edi,%edi
mov    %edi,%eax
test   %edx,%edx
je     804b856 <__sprintf_chk@plt+0x21e6>
jmp    804b7eb <__sprintf_chk@plt+0x217b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804b8ff <__sprintf_chk@plt+0x228f>
mov    0x8064784,%ebx
test   %ebx,%ebx
jne    804b8b0 <__sprintf_chk@plt+0x2240>
mov    0x8064780,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     804b8ea <__sprintf_chk@plt+0x227a>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b2bf,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x8064784,%eax
xor    %ecx,%ecx
test   %eax,%eax
setne  %cl
mov    %ecx,%edi
jmp    804b7db <__sprintf_chk@plt+0x216b>
mov    %edi,%eax
jmp    804b856 <__sprintf_chk@plt+0x21e6>
movl   $0x805b2b0,(%esp)
call   8049280 <perror@plt>
mov    $0xffffffff,%eax
jmp    804b856 <__sprintf_chk@plt+0x21e6>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xa8c,%esp
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmpb   $0x0,0x80647ec
jne    804b94a <__sprintf_chk@plt+0x22da>
mov    0x8064788,%ecx
test   %ecx,%ecx
jne    804b962 <__sprintf_chk@plt+0x22f2>
mov    -0x1c(%ebp),%eax
xor    %gs:0x14,%eax
jne    804befd <__sprintf_chk@plt+0x288d>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movb   $0x1,0x80647ec
movb   $0x0,-0x81d(%ebp)
movl   $0x805b2de,(%esp)
call   8049630 <opendir@plt>
test   %eax,%eax
mov    %eax,-0xa60(%ebp)
je     804bd54 <__sprintf_chk@plt+0x26e4>
call   8049460 <__errno_location@plt>
movb   $0x0,-0xa69(%ebp)
mov    %eax,-0xa64(%ebp)
lea    0x0(%esi,%eiz,1),%esi
mov    -0xa64(%ebp),%eax
movl   $0x0,(%eax)
mov    -0xa60(%ebp),%eax
mov    %eax,(%esp)
call   80494f0 <readdir@plt>
test   %eax,%eax
je     804bcf3 <__sprintf_chk@plt+0x2683>
movzbl 0xb(%eax),%edx
lea    0xb(%eax),%ebx
test   %dl,%dl
mov    %edx,-0xa5c(%ebp)
je     804b9fc <__sprintf_chk@plt+0x238c>
call   8049640 <__ctype_b_loc@plt>
mov    -0xa5c(%ebp),%edx
mov    (%eax),%ecx
mov    %ebx,%eax
lea    0x0(%esi),%esi
movsbl %dl,%edx
testb  $0x8,0x1(%ecx,%edx,2)
je     804b9a0 <__sprintf_chk@plt+0x2330>
add    $0x1,%eax
movzbl (%eax),%edx
test   %dl,%dl
jne    804b9e8 <__sprintf_chk@plt+0x2378>
lea    -0x81c(%ebp),%eax
mov    %ebx,0x14(%esp)
movl   $0x805b2fb,0x10(%esp)
movl   $0x800,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    %eax,%edi
lea    -0x1(%eax),%eax
cmp    $0x7f9,%eax
ja     804b9a0 <__sprintf_chk@plt+0x2330>
mov    -0xa64(%ebp),%eax
movl   $0x0,(%eax)
lea    -0x81c(%ebp),%eax
mov    %eax,(%esp)
call   8049630 <opendir@plt>
test   %eax,%eax
mov    %eax,-0xa5c(%ebp)
je     804bed8 <__sprintf_chk@plt+0x2868>
lea    -0x81e(%ebp,%edi,1),%eax
movb   $0x2f,-0x81c(%ebp,%edi,1)
movl   $0x0,-0xa68(%ebp)
00
mov    %eax,-0xa70(%ebp)
lea    0x0(%esi),%esi
mov    -0xa5c(%ebp),%eax
mov    %eax,(%esp)
call   80494f0 <readdir@plt>
test   %eax,%eax
mov    %eax,%esi
je     804bd41 <__sprintf_chk@plt+0x26d1>
call   8049640 <__ctype_b_loc@plt>
movsbl 0xb(%esi),%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
je     804ba88 <__sprintf_chk@plt+0x2418>
add    $0xb,%esi
mov    %esi,(%esp)
call   80493c0 <strlen@plt>
lea    0x2(%edi,%eax,1),%eax
cmp    $0x800,%eax
ja     804ba88 <__sprintf_chk@plt+0x2418>
mov    -0xa70(%ebp),%eax
mov    $0x6466,%edx
mov    %dx,(%eax)
movb   $0x2f,0x2(%eax)
lea    -0x81b(%ebp,%edi,1),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80492b0 <strcpy@plt>
lea    -0xa3a(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x81c(%ebp),%eax
movl   $0x1d,0x8(%esp)
mov    %eax,(%esp)
call   8049250 <readlink@plt>
movb   $0x0,-0xa3a(%ebp,%eax,1)
lea    -0xa3a(%ebp),%eax
mov    %eax,(%esp)
call   80493c0 <strlen@plt>
cmp    $0xa,%eax
mov    %eax,%esi
jbe    804be68 <__sprintf_chk@plt+0x27f8>
lea    -0xa3a(%ebp),%eax
movl   $0x8,0x8(%esp)
movl   $0x805b2e4,0x4(%esp)
mov    %eax,(%esp)
call   8049180 <memcmp@plt>
test   %eax,%eax
jne    804be71 <__sprintf_chk@plt+0x2801>
cmpb   $0x5d,-0xa3b(%ebp,%esi,1)
jne    804be71 <__sprintf_chk@plt+0x2801>
lea    -0xa39(%ebp),%eax
mov    %esp,-0xa74(%ebp)
mov    %eax,(%esp)
call   80493c0 <strlen@plt>
add    $0xf,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    -0x9(%esi),%eax
lea    0x1c(%esp),%edx
mov    %eax,0x8(%esp)
lea    -0xa32(%ebp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,-0xa78(%ebp)
call   8049470 <strncpy@plt>
lea    -0xa54(%ebp),%eax
movb   $0x0,0x13(%esp,%esi,1)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    -0xa78(%ebp),%edx
mov    %edx,(%esp)
call   8049390 <strtoul@plt>
mov    %eax,%esi
mov    -0xa54(%ebp),%eax
test   %eax,%eax
je     804be54 <__sprintf_chk@plt+0x27e4>
cmpb   $0x0,(%eax)
jne    804be54 <__sprintf_chk@plt+0x27e4>
mov    -0xa74(%ebp),%esp
mov    -0xa68(%ebp),%eax
test   %eax,%eax
je     804bd89 <__sprintf_chk@plt+0x2719>
mov    -0xa68(%ebp),%eax
mov    %ebx,0x14(%esp)
movl   $0x805b2f5,0x10(%esp)
movl   $0x14,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0xa4e(%ebp),%eax
movl   $0x1,0x8(%esp)
movl   $0x14,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    %esi,%eax
mov    $0x9b4c6f9f,%edx
mul    %edx
mov    %esi,%eax
movb   $0x2,0x80647ec
shr    $0x7,%edx
imul   $0xd3,%edx,%edx
sub    %edx,%eax
lea    0x8064800(,%eax,4),%ecx
mov    0x8064800(,%eax,4),%eax
test   %eax,%eax
je     804bc80 <__sprintf_chk@plt+0x2610>
cmp    %esi,0x4(%eax)
jne    804bc78 <__sprintf_chk@plt+0x2608>
jmp    804ba88 <__sprintf_chk@plt+0x2418>
cmp    %esi,0x4(%edx)
nop
lea    0x0(%esi,%eiz,1),%esi
je     804ba88 <__sprintf_chk@plt+0x2418>
mov    %edx,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    804bc68 <__sprintf_chk@plt+0x25f8>
mov    %eax,%ecx
mov    %ecx,-0xa74(%ebp)
movl   $0x1c,(%esp)
call   80492d0 <malloc@plt>
mov    -0xa74(%ebp),%ecx
test   %eax,%eax
mov    %eax,(%ecx)
je     804ba88 <__sprintf_chk@plt+0x2418>
movl   $0x0,(%eax)
mov    %esi,0x4(%eax)
mov    %eax,-0xa74(%ebp)
lea    -0xa4e(%ebp),%eax
mov    %eax,(%esp)
call   80493c0 <strlen@plt>
mov    -0xa74(%ebp),%edx
cmp    $0x13,%eax
jbe    804bcd1 <__sprintf_chk@plt+0x2661>
movb   $0x0,-0xa3b(%ebp)
lea    -0xa4e(%ebp),%eax
add    $0x8,%edx
movl   $0x14,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80494c0 <__strcpy_chk@plt>
jmp    804ba88 <__sprintf_chk@plt+0x2418>
mov    -0xa60(%ebp),%eax
mov    %eax,(%esp)
call   8049620 <closedir@plt>
cmpb   $0x0,-0xa69(%ebp)
je     804b94a <__sprintf_chk@plt+0x22da>
cmpb   $0x1,0x80647ec
je     804bd54 <__sprintf_chk@plt+0x26e4>
movl   $0x805aad4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804b94a <__sprintf_chk@plt+0x22da>
mov    -0xa5c(%ebp),%eax
mov    %eax,(%esp)
call   8049620 <closedir@plt>
jmp    804b9a0 <__sprintf_chk@plt+0x2330>
call   8049210 <geteuid@plt>
movl   $0x805aa8c,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804b94a <__sprintf_chk@plt+0x22da>
lea    0x5(%edi),%eax
cmp    $0x7fa,%eax
ja     804ba88 <__sprintf_chk@plt+0x2418>
mov    -0xa70(%ebp),%eax
movl   $0x6c646d63,(%eax)
movl   $0x656e69,0x4(%eax)
lea    -0x81c(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049350 <open@plt>
test   %eax,%eax
mov    %eax,%edx
js     804ba88 <__sprintf_chk@plt+0x2418>
lea    -0xa1c(%ebp),%eax
mov    %edx,(%esp)
movl   $0x1ff,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,-0xa78(%ebp)
call   80490e0 <read@plt>
mov    -0xa78(%ebp),%edx
mov    %eax,-0xa74(%ebp)
mov    %edx,(%esp)
call   8049610 <close@plt>
mov    -0xa74(%ebp),%ecx
test   %eax,%eax
jne    804ba88 <__sprintf_chk@plt+0x2418>
cmp    $0xffffffff,%ecx
je     804ba88 <__sprintf_chk@plt+0x2418>
cmp    $0x1fe,%ecx
ja     804be25 <__sprintf_chk@plt+0x27b5>
movb   $0x0,-0xa1c(%ebp,%ecx,1)
lea    -0xa1c(%ebp),%eax
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049520 <strrchr@plt>
lea    0x1(%eax),%ecx
test   %eax,%eax
lea    -0xa1c(%ebp),%eax
cmovne %ecx,%eax
mov    %eax,-0xa68(%ebp)
jmp    804bbf3 <__sprintf_chk@plt+0x2583>
mov    -0xa74(%ebp),%esp
lea    -0xa3a(%ebp),%eax
mov    %eax,(%esp)
call   80493c0 <strlen@plt>
cmp    $0x7,%eax
jbe    804ba88 <__sprintf_chk@plt+0x2418>
lea    -0xa3a(%ebp),%eax
movl   $0x7,0x8(%esp)
movl   $0x805b2ed,0x4(%esp)
mov    %eax,(%esp)
call   8049180 <memcmp@plt>
test   %eax,%eax
jne    804ba88 <__sprintf_chk@plt+0x2418>
lea    -0xa54(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0xa33(%ebp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049390 <strtoul@plt>
mov    %eax,%esi
mov    -0xa54(%ebp),%eax
test   %eax,%eax
je     804ba88 <__sprintf_chk@plt+0x2418>
cmpb   $0x0,(%eax)
je     804bbe5 <__sprintf_chk@plt+0x2575>
jmp    804ba88 <__sprintf_chk@plt+0x2418>
lea    0x0(%esi),%esi
mov    -0xa64(%ebp),%eax
movzbl -0xa69(%ebp),%edi
cmpl   $0xd,(%eax)
mov    $0x1,%eax
cmove  %eax,%edi
mov    %edi,%eax
mov    %al,-0xa69(%ebp)
jmp    804b9a0 <__sprintf_chk@plt+0x2330>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x86c,%esp
mov    %gs:0x14,%esi
mov    %esi,0x85c(%esp)
xor    %esi,%esi
test   %eax,%eax
jne    804bf50 <__sprintf_chk@plt+0x28e0>
mov    0x85c(%esp),%eax
xor    %gs:0x14,%eax
jne    804c8e4 <__sprintf_chk@plt+0x3274>
add    $0x86c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x25c(%esp),%eax
mov    %eax,0x40(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0xa0(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x34(%esp)
lea    0x80(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x7c(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x78(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x1dc(%esp),%edi
lea    0x90(%esp),%eax
lea    0x15c(%esp),%ebp
mov    %edx,(%esp)
mov    %ebp,0x14(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x805ab54,0x4(%esp)
call   8049540 <sscanf@plt>
mov    %edi,%edx
mov    %eax,0x50(%esp)
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804c002 <__sprintf_chk@plt+0x2992>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %edi,%edx
cmp    $0x8,%edx
jbe    804c180 <__sprintf_chk@plt+0x2b10>
lea    0xb0(%esp),%ecx
lea    0xac(%esp),%edx
lea    0xa4(%esp),%esi
lea    0xa8(%esp),%eax
mov    %ecx,0x14(%esp)
lea    0xee(%esp),%ebx
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x805b273,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x60(%esp)
mov    %edx,0x5c(%esp)
call   8049540 <sscanf@plt>
movl   $0x2e,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
lea    0xb4(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    0x60(%esp),%ecx
lea    0xa8(%esp),%eax
mov    0x5c(%esp),%edx
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x805b273,0x4(%esp)
mov    %ebp,(%esp)
call   8049540 <sscanf@plt>
movl   $0x2e,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
lea    0xd0(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    $0xa,%edx
mov    $0xa,%ecx
cmpl   $0xa,0x50(%esp)
mov    %dx,0xb4(%esp)
mov    %cx,0xd0(%esp)
movl   $0x805b3b7,0x5c(%esp)
jg     804c1e3 <__sprintf_chk@plt+0x2b73>
movl   $0x805b307,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804bf2e <__sprintf_chk@plt+0x28be>
lea    0x0(%esi,%eiz,1),%esi
lea    0xb8(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %edi,(%esp)
call   8049540 <sscanf@plt>
lea    0xd4(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %ebp,(%esp)
call   8049540 <sscanf@plt>
mov    $0x2,%eax
cmpl   $0xa,0x50(%esp)
mov    %ax,0xb4(%esp)
mov    $0x2,%eax
mov    %ax,0xd0(%esp)
movl   $0x805b39b,0x5c(%esp)
jle    804c152 <__sprintf_chk@plt+0x2ae2>
movzwl 0xb4(%esp),%eax
mov    %eax,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,%ebx
je     804c8ae <__sprintf_chk@plt+0x323e>
cmpl   $0xa,0x94(%esp)
je     804c738 <__sprintf_chk@plt+0x30c8>
mov    0x80647ac,%eax
mov    %eax,0x4(%esp)
lea    0xb4(%esp),%eax
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x80,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x80647ac,%eax
mov    %eax,0x4(%esp)
lea    0xd0(%esp),%eax
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x80,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x80647bc,%eax
test   %eax,%eax
jne    804c288 <__sprintf_chk@plt+0x2c18>
mov    0x80647b8,%eax
test   %eax,%eax
je     804c4a0 <__sprintf_chk@plt+0x2e30>
mov    0x8c(%esp),%eax
test   %eax,%eax
jne    804bf2e <__sprintf_chk@plt+0x28be>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80647ac,%edx
lea    0x45c(%esp),%ebx
movzwl 0x88(%esp),%eax
ror    $0x8,%ax
movzwl %ax,%eax
and    $0x8,%edx
mov    %edx,0x8(%esp)
movl   $0x805b39b,0x4(%esp)
mov    %eax,(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0x806478c,%esi
test   %esi,%esi
jne    804c438 <__sprintf_chk@plt+0x2dc8>
mov    %edi,%eax
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804c2e7 <__sprintf_chk@plt+0x2c77>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
mov    %ebx,%edx
sub    %edi,%eax
mov    (%edx),%esi
add    $0x4,%edx
lea    -0x1010101(%esi),%ecx
not    %esi
and    %esi,%ecx
and    $0x80808080,%ecx
je     804c31b <__sprintf_chk@plt+0x2cab>
mov    %ecx,%esi
shr    $0x10,%esi
test   $0x8080,%ecx
cmove  %esi,%ecx
lea    0x2(%edx),%esi
cmove  %esi,%edx
add    %cl,%cl
sbb    $0x3,%edx
sub    %ebx,%edx
lea    (%edx,%eax,1),%ecx
cmp    $0x16,%ecx
jbe    804c398 <__sprintf_chk@plt+0x2d28>
mov    $0x16,%eax
sub    %edx,%eax
movb   $0x0,0x1dc(%esp,%eax,1)
mov    %edi,%eax
mov    (%eax),%esi
add    $0x4,%eax
lea    -0x1010101(%esi),%ecx
not    %esi
and    %esi,%ecx
and    $0x80808080,%ecx
je     804c366 <__sprintf_chk@plt+0x2cf6>
mov    %ecx,%esi
shr    $0x10,%esi
test   $0x8080,%ecx
cmove  %esi,%ecx
lea    0x2(%eax),%esi
cmove  %esi,%eax
add    %cl,%cl
sbb    $0x3,%eax
sub    %edi,%eax
add    %edi,%eax
mov    $0x3a,%ecx
mov    %cx,(%eax)
add    $0x1,%edx
add    $0x1,%eax
mov    %edx,0x8(%esp)
movl   $0x80,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049310 <__memcpy_chk@plt>
mov    0x80647ac,%eax
movzwl 0x8c(%esp),%edx
and    $0x8,%eax
ror    $0x8,%dx
movzwl %dx,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b39b,0x4(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0x806478c,%esi
mov    %ebp,%eax
test   %esi,%esi
je     804c4b8 <__sprintf_chk@plt+0x2e48>
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804c417 <__sprintf_chk@plt+0x2da7>
jmp    804c54e <__sprintf_chk@plt+0x2ede>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    (%ecx),%edx
add    $0x4,%ecx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     804c43a <__sprintf_chk@plt+0x2dca>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ecx),%edx
cmove  %edx,%ecx
add    %al,%al
sbb    $0x3,%ecx
mov    $0x3a,%eax
mov    %ax,(%ecx)
add    $0x1,%ecx
movl   $0x80,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ecx,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x80647ac,%eax
movzwl 0x8c(%esp),%edx
and    $0x8,%eax
jmp    804c3d0 <__sprintf_chk@plt+0x2d60>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8c(%esp),%eax
test   %eax,%eax
jne    804c288 <__sprintf_chk@plt+0x2c18>
jmp    804bf2e <__sprintf_chk@plt+0x28be>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804c4b8 <__sprintf_chk@plt+0x2e48>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
mov    %ebx,%ecx
sub    %ebp,%eax
mov    (%ecx),%esi
add    $0x4,%ecx
lea    -0x1010101(%esi),%edx
not    %esi
and    %esi,%edx
and    $0x80808080,%edx
je     804c4ec <__sprintf_chk@plt+0x2e7c>
mov    %edx,%esi
shr    $0x10,%esi
test   $0x8080,%edx
cmove  %esi,%edx
lea    0x2(%ecx),%esi
cmove  %esi,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
sub    %ebx,%ecx
lea    (%ecx,%eax,1),%edx
cmp    $0x16,%edx
jbe    804c569 <__sprintf_chk@plt+0x2ef9>
mov    $0x16,%eax
sub    %ecx,%eax
movb   $0x0,0x15c(%esp,%eax,1)
mov    %ebp,%eax
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804c537 <__sprintf_chk@plt+0x2ec7>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
sub    %ebp,%eax
add    %ebp,%eax
mov    $0x3a,%edx
mov    %dx,(%eax)
add    $0x1,%eax
movl   $0x80,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x80647a4,%ecx
lea    0x11c(%esp),%eax
movb   $0x0,0x11c(%esp)
mov    %eax,0x50(%esp)
test   %ecx,%ecx
je     804c644 <__sprintf_chk@plt+0x2fd4>
mov    0x9c(%esp),%ebx
cmp    $0x1,%ebx
je     804c7b8 <__sprintf_chk@plt+0x3148>
jle    804c760 <__sprintf_chk@plt+0x30f0>
cmp    $0x2,%ebx
je     804c878 <__sprintf_chk@plt+0x3208>
cmp    $0x3,%ebx
lea    0x0(%esi),%esi
jne    804c7f0 <__sprintf_chk@plt+0x3180>
mov    0x7c(%esp),%eax
xor    %edx,%edx
mov    %edx,0x6c(%esp)
mov    0xa0(%esp),%esi
mov    0x80(%esp),%ebx
movl   $0x805b362,(%esp)
mov    %eax,0x68(%esp)
fildll 0x68(%esp)
fdivs  0x805bc20
fstpl  0x60(%esp)
call   8049360 <gettext@plt>
mov    %esi,0x20(%esp)
mov    %ebx,0x1c(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
fldl   0x60(%esp)
fstpl  0x14(%esp)
mov    %eax,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    0x94(%esp),%eax
mov    0x805bbe0(,%eax,4),%eax
mov    %eax,(%esp)
call   8049360 <gettext@plt>
mov    %ebp,%ecx
mov    (%ecx),%ebx
add    $0x4,%ecx
lea    -0x1010101(%ebx),%edx
not    %ebx
and    %ebx,%edx
and    $0x80808080,%edx
je     804c65c <__sprintf_chk@plt+0x2fec>
mov    %edx,%ebx
mov    $0x17,%esi
shr    $0x10,%ebx
test   $0x8080,%edx
cmove  %ebx,%edx
lea    0x2(%ecx),%ebx
cmove  %ebx,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
sub    %ebp,%ecx
cmp    $0x16,%ecx
cmova  %ecx,%esi
mov    %edi,%ecx
mov    (%ecx),%ebx
add    $0x4,%ecx
lea    -0x1010101(%ebx),%edx
not    %ebx
and    %ebx,%edx
and    $0x80808080,%edx
je     804c69b <__sprintf_chk@plt+0x302b>
mov    %eax,0x24(%esp)
mov    0x78(%esp),%eax
mov    %edx,%ebx
shr    $0x10,%ebx
test   $0x8080,%edx
cmove  %ebx,%edx
lea    0x2(%ecx),%ebx
mov    %eax,0x10(%esp)
mov    0x74(%esp),%eax
cmove  %ebx,%ecx
add    %dl,%dl
mov    $0x17,%edx
sbb    $0x3,%ecx
sub    %edi,%ecx
mov    %eax,0xc(%esp)
mov    0x5c(%esp),%eax
cmp    $0x16,%ecx
cmova  %ecx,%edx
mov    %edx,0x14(%esp)
mov    %ebp,0x20(%esp)
mov    %esi,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %eax,0x8(%esp)
movl   $0x805aba4,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x50(%esp),%ecx
mov    0x84(%esp),%edx
mov    0x98(%esp),%eax
call   804b330 <__sprintf_chk@plt+0x1cc0>
jmp    804bf2e <__sprintf_chk@plt+0x28be>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x7c(%esp)
movl   $0x0,0x80(%esp)
00
movl   $0x0,0x74(%esp)
movl   $0x0,0x78(%esp)
jmp    804c20b <__sprintf_chk@plt+0x2b9b>
test   %ebx,%ebx
jne    804c7f0 <__sprintf_chk@plt+0x3180>
movl   $0x805b325,(%esp)
mov    0xa0(%esp),%esi
mov    0x80(%esp),%ebx
call   8049360 <gettext@plt>
movl   $0x40,0xc(%esp)
mov    %esi,0x18(%esp)
mov    %ebx,0x14(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804c644 <__sprintf_chk@plt+0x2fd4>
nop
mov    0x7c(%esp),%eax
xor    %edx,%edx
mov    %edx,0x6c(%esp)
mov    0xa0(%esp),%esi
mov    0x80(%esp),%ebx
movl   $0x805b337,(%esp)
mov    %eax,0x68(%esp)
fildll 0x68(%esp)
fdivs  0x805bc20
fstpl  0x60(%esp)
jmp    804c607 <__sprintf_chk@plt+0x2f97>
xchg   %ax,%ax
mov    0x7c(%esp),%eax
xor    %edx,%edx
mov    %edx,0x6c(%esp)
mov    0xa0(%esp),%ecx
movl   $0x805b37a,(%esp)
mov    0x80(%esp),%esi
mov    %eax,0x68(%esp)
fildll 0x68(%esp)
fdivs  0x805bc20
mov    %ecx,0x60(%esp)
fstpl  0x50(%esp)
call   8049360 <gettext@plt>
mov    0x60(%esp),%ecx
mov    %esi,0x20(%esp)
mov    %ebx,0x14(%esp)
movl   $0x40,0xc(%esp)
mov    %ecx,0x24(%esp)
movl   $0x1,0x8(%esp)
fldl   0x50(%esp)
mov    %eax,0x10(%esp)
lea    0x11c(%esp),%eax
fstpl  0x18(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x50(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804c644 <__sprintf_chk@plt+0x2fd4>
xchg   %ax,%ax
mov    0x7c(%esp),%eax
xor    %edx,%edx
mov    %edx,0x6c(%esp)
mov    0xa0(%esp),%esi
mov    0x80(%esp),%ebx
movl   $0x805b349,(%esp)
mov    %eax,0x68(%esp)
fildll 0x68(%esp)
fdivs  0x805bc20
fstpl  0x60(%esp)
jmp    804c607 <__sprintf_chk@plt+0x2f97>
movl   $0x805aa10,(%esp)
movzwl 0xb4(%esp),%ebx
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804bf2e <__sprintf_chk@plt+0x28be>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
mov    0x8064784,%edi
mov    %gs:0x14,%eax
mov    %eax,0x202c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     804c921 <__sprintf_chk@plt+0x32b1>
mov    0x80656a8,%esi
test   %esi,%esi
je     804ca28 <__sprintf_chk@plt+0x33b8>
movl   $0x805b391,(%esp)
xor    %esi,%esi
call   8057fb0 <__sprintf_chk@plt+0xe940>
lea    0x2c(%esp),%ebx
test   %eax,%eax
mov    %eax,0x8065680
je     804ca40 <__sprintf_chk@plt+0x33d0>
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804c966 <__sprintf_chk@plt+0x32f6>
mov    %esi,%eax
mov    %ebx,%edx
call   804bf10 <__sprintf_chk@plt+0x28a0>
lea    0x1(%esi),%edi
mov    %edi,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804c940 <__sprintf_chk@plt+0x32d0>
mov    %eax,(%esp)
xor    %edi,%edi
call   8049160 <fclose@plt>
mov    0x8064784,%eax
test   %eax,%eax
je     804c99b <__sprintf_chk@plt+0x332b>
mov    0x80656a4,%edx
mov    %edi,%eax
test   %edx,%edx
je     804ca06 <__sprintf_chk@plt+0x3396>
movl   $0x805b3ad,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x8065680
je     804caa8 <__sprintf_chk@plt+0x3438>
xor    %esi,%esi
lea    0x2c(%esp),%ebx
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804c9e6 <__sprintf_chk@plt+0x3376>
mov    %esi,%eax
mov    %ebx,%edx
call   804bf10 <__sprintf_chk@plt+0x28a0>
lea    0x1(%esi),%ebp
mov    %ebp,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804c9c0 <__sprintf_chk@plt+0x3350>
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    %edi,%eax
mov    0x202c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804cac5 <__sprintf_chk@plt+0x3455>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80656a4,%edx
xor    %edi,%edi
mov    %edi,%eax
test   %edx,%edx
je     804ca06 <__sprintf_chk@plt+0x3396>
jmp    804c99b <__sprintf_chk@plt+0x332b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804caaf <__sprintf_chk@plt+0x343f>
mov    0x8064784,%ebx
test   %ebx,%ebx
jne    804ca60 <__sprintf_chk@plt+0x33f0>
mov    0x8064780,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     804ca9a <__sprintf_chk@plt+0x342a>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b39f,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x8064784,%eax
xor    %ecx,%ecx
test   %eax,%eax
setne  %cl
mov    %ecx,%edi
jmp    804c98b <__sprintf_chk@plt+0x331b>
mov    %edi,%eax
jmp    804ca06 <__sprintf_chk@plt+0x3396>
movl   $0x805b391,(%esp)
call   8049280 <perror@plt>
mov    $0xffffffff,%eax
jmp    804ca06 <__sprintf_chk@plt+0x3396>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x246c,%esp
mov    %gs:0x14,%edi
mov    %edi,0x245c(%esp)
xor    %edi,%edi
test   %eax,%eax
jne    804cb10 <__sprintf_chk@plt+0x34a0>
mov    0x245c(%esp),%eax
xor    %gs:0x14,%eax
jne    804d4a8 <__sprintf_chk@plt+0x3e38>
add    $0x246c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x25c(%esp),%eax
mov    %eax,0x40(%esp)
lea    0xa0(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x34(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x90(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x80(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x78(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x15c(%esp),%ebp
lea    0x7c(%esp),%eax
lea    0x1dc(%esp),%edi
mov    %edx,(%esp)
mov    %edi,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x805ab54,0x4(%esp)
movb   $0x0,0x25c(%esp)
call   8049540 <sscanf@plt>
mov    %ebp,%edx
mov    %eax,0x4c(%esp)
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804cbca <__sprintf_chk@plt+0x355a>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %ebp,%edx
cmp    $0x8,%edx
jbe    804cd60 <__sprintf_chk@plt+0x36f0>
lea    0xb0(%esp),%ecx
lea    0xac(%esp),%edx
lea    0xa4(%esp),%esi
lea    0xa8(%esp),%eax
lea    0xee(%esp),%ebx
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x805b273,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x50(%esp)
mov    %edx,0x60(%esp)
call   8049540 <sscanf@plt>
mov    %ebx,0x8(%esp)
movl   $0x2e,0xc(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
lea    0xb4(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    0x50(%esp),%ecx
lea    0xa8(%esp),%eax
mov    0x60(%esp),%edx
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x805b273,0x4(%esp)
mov    %edi,(%esp)
call   8049540 <sscanf@plt>
mov    %ebx,0x8(%esp)
movl   $0x2e,0xc(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
lea    0xd0(%esp),%eax
mov    %ebx,0x4(%esp)
mov    $0xa,%ebx
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    $0xa,%ecx
mov    %cx,0xb4(%esp)
mov    %bx,0xd0(%esp)
movl   $0x805b428,0x60(%esp)
mov    0x80647a4,%eax
movl   $0x0,0x9c(%esp)
00
test   %eax,%eax
jne    804cd2b <__sprintf_chk@plt+0x36bb>
movb   $0x0,0x25c(%esp)
cmpl   $0x9,0x4c(%esp)
jg     804cdc0 <__sprintf_chk@plt+0x3750>
movl   $0x805b3bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804caee <__sprintf_chk@plt+0x347e>
lea    0xb8(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %ebp,(%esp)
call   8049540 <sscanf@plt>
lea    0xd4(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %edi,(%esp)
call   8049540 <sscanf@plt>
mov    $0x2,%eax
mov    $0x2,%edx
mov    %ax,0xb4(%esp)
mov    %dx,0xd0(%esp)
movl   $0x805b40c,0x60(%esp)
jmp    804cd0f <__sprintf_chk@plt+0x369f>
lea    0x0(%esi),%esi
movzwl 0xb4(%esp),%eax
mov    %eax,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,%ebx
je     804d472 <__sprintf_chk@plt+0x3e02>
mov    0x80(%esp),%eax
cmp    $0x1,%eax
je     804d2e8 <__sprintf_chk@plt+0x3c78>
cmp    $0x7,%eax
movl   $0x805f00a,0x4c(%esp)
jne    804cfc8 <__sprintf_chk@plt+0x3958>
mov    0x80647bc,%eax
test   %eax,%eax
jne    804ce2d <__sprintf_chk@plt+0x37bd>
movzwl 0xd0(%esp),%eax
cmp    $0xa,%ax
je     804d300 <__sprintf_chk@plt+0x3c90>
cmp    $0x2,%ax
je     804d2b8 <__sprintf_chk@plt+0x3c48>
mov    0x80647b8,%eax
test   %eax,%eax
je     804caee <__sprintf_chk@plt+0x347e>
mov    0x80647ac,%eax
lea    0x45c(%esp),%esi
mov    %eax,0x4(%esp)
lea    0xb4(%esp),%eax
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x80,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x80647ac,%eax
movzwl 0x74(%esp),%edx
ror    $0x8,%dx
movzwl %dx,%edx
and    $0x8,%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b40c,0x4(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0x806478c,%eax
mov    %ebp,%edx
test   %eax,%eax
jne    804cfe0 <__sprintf_chk@plt+0x3970>
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804ceb1 <__sprintf_chk@plt+0x3841>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    %esi,%eax
sub    %ebp,%edx
mov    %ebx,0x50(%esp)
mov    (%eax),%ebx
add    $0x4,%eax
lea    -0x1010101(%ebx),%ecx
not    %ebx
and    %ebx,%ecx
and    $0x80808080,%ecx
je     804cee7 <__sprintf_chk@plt+0x3877>
mov    0x50(%esp),%ebx
mov    %eax,0x50(%esp)
mov    %ecx,%eax
shr    $0x10,%eax
test   $0x8080,%ecx
cmove  %eax,%ecx
mov    0x50(%esp),%eax
lea    0x2(%eax),%eax
cmovne 0x50(%esp),%eax
add    %cl,%cl
mov    %eax,0x50(%esp)
sbbl   $0x3,0x50(%esp)
sub    %esi,0x50(%esp)
mov    0x50(%esp),%eax
lea    (%eax,%edx,1),%ecx
cmp    $0x16,%ecx
jbe    804cf8a <__sprintf_chk@plt+0x391a>
mov    $0x16,%edx
sub    %eax,%edx
movb   $0x0,0x15c(%esp,%edx,1)
mov    %ebp,%edx
mov    %ebx,0x50(%esp)
mov    (%edx),%ebx
add    $0x4,%edx
lea    -0x1010101(%ebx),%ecx
not    %ebx
and    %ebx,%ecx
and    $0x80808080,%ecx
je     804cf50 <__sprintf_chk@plt+0x38e0>
mov    0x50(%esp),%ebx
mov    %eax,0x50(%esp)
mov    %ecx,%eax
shr    $0x10,%eax
test   $0x8080,%ecx
cmove  %eax,%ecx
lea    0x2(%edx),%eax
cmove  %eax,%edx
add    %cl,%cl
sbb    $0x3,%edx
sub    %ebp,%edx
add    %ebp,%edx
mov    $0x3a,%eax
mov    %ax,(%edx)
mov    0x50(%esp),%eax
add    $0x1,%edx
mov    %edx,(%esp)
movl   $0x80,0xc(%esp)
mov    %esi,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   8049310 <__memcpy_chk@plt>
mov    0x80647ac,%eax
movzwl 0x78(%esp),%edx
and    $0x8,%eax
jmp    804d03a <__sprintf_chk@plt+0x39ca>
lea    0x0(%esi),%esi
movl   $0x805b3e6,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x4c(%esp)
jmp    804cdfb <__sprintf_chk@plt+0x378b>
lea    0x0(%esi),%esi
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804cfe0 <__sprintf_chk@plt+0x3970>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    $0x3a,%eax
mov    %ax,(%edx)
add    $0x1,%edx
mov    %edx,(%esp)
movl   $0x80,0x8(%esp)
mov    %esi,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x80647ac,%eax
movzwl 0x78(%esp),%edx
and    $0x8,%eax
ror    $0x8,%dx
movzwl %dx,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b40c,0x4(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0x80647ac,%eax
mov    %eax,0x4(%esp)
lea    0xd0(%esp),%eax
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x80,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0x806478c,%ebx
mov    %edi,%eax
test   %ebx,%ebx
je     804d0c8 <__sprintf_chk@plt+0x3a58>
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804d0a7 <__sprintf_chk@plt+0x3a37>
jmp    804d15e <__sprintf_chk@plt+0x3aee>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804d0c8 <__sprintf_chk@plt+0x3a58>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
mov    %esi,%ecx
sub    %edi,%eax
mov    (%ecx),%ebx
add    $0x4,%ecx
lea    -0x1010101(%ebx),%edx
not    %ebx
and    %ebx,%edx
and    $0x80808080,%edx
je     804d0fc <__sprintf_chk@plt+0x3a8c>
mov    %edx,%ebx
shr    $0x10,%ebx
test   $0x8080,%edx
cmove  %ebx,%edx
lea    0x2(%ecx),%ebx
cmove  %ebx,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
sub    %esi,%ecx
lea    (%ecx,%eax,1),%edx
cmp    $0x16,%edx
jbe    804d179 <__sprintf_chk@plt+0x3b09>
mov    $0x16,%eax
sub    %ecx,%eax
movb   $0x0,0x1dc(%esp,%eax,1)
mov    %edi,%eax
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804d147 <__sprintf_chk@plt+0x3ad7>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
sub    %edi,%eax
add    %edi,%eax
mov    $0x3a,%edx
mov    %dx,(%eax)
add    $0x1,%eax
movl   $0x80,0x8(%esp)
lea    0x11c(%esp),%ebx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x80647a4,%ecx
movb   $0x0,0x11c(%esp)
test   %ecx,%ecx
je     804d258 <__sprintf_chk@plt+0x3be8>
mov    0x84(%esp),%esi
test   %esi,%esi
je     804d3e8 <__sprintf_chk@plt+0x3d78>
js     804d360 <__sprintf_chk@plt+0x3cf0>
cmp    $0x2,%esi
jg     804d360 <__sprintf_chk@plt+0x3cf0>
mov    0x8c(%esp),%eax
xor    %edx,%edx
mov    %edx,0x6c(%esp)
mov    0x9c(%esp),%ecx
movl   $0x805b3ee,(%esp)
mov    %eax,0x50(%esp)
mov    0x98(%esp),%eax
mov    %ecx,0x64(%esp)
mov    %eax,0x68(%esp)
fildll 0x68(%esp)
fdivs  0x805bc20
fstpl  0x58(%esp)
call   8049360 <gettext@plt>
mov    0x50(%esp),%ecx
mov    %esi,0x14(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ecx,0x24(%esp)
mov    0x64(%esp),%ecx
movl   $0x40,0x4(%esp)
fldl   0x58(%esp)
fstpl  0x18(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
xchg   %ax,%ax
mov    0x4c(%esp),%eax
mov    %edi,0x18(%esp)
mov    %ebp,0x14(%esp)
movl   $0x805abc4,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x94(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x90(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0xa0(%esp),%edx
mov    %ebx,%ecx
mov    0x88(%esp),%eax
call   804b330 <__sprintf_chk@plt+0x1cc0>
jmp    804caee <__sprintf_chk@plt+0x347e>
lea    0x0(%esi,%eiz,1),%esi
mov    0xd4(%esp),%ecx
test   %ecx,%ecx
je     804ce20 <__sprintf_chk@plt+0x37b0>
cmpl   $0x0,0x80647b8
je     804ce2d <__sprintf_chk@plt+0x37bd>
cmpl   $0x0,0xd4(%esp)
jne    804caee <__sprintf_chk@plt+0x347e>
jmp    804ce20 <__sprintf_chk@plt+0x37b0>
nop
movl   $0x805b3da,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x4c(%esp)
jmp    804cdfb <__sprintf_chk@plt+0x378b>
lea    0x0(%esi),%esi
mov    0xd8(%esp),%eax
test   %eax,%eax
je     804d440 <__sprintf_chk@plt+0x3dd0>
cmpl   $0x0,0x80647b8
je     804ce2d <__sprintf_chk@plt+0x37bd>
mov    0xd8(%esp),%edx
test   %edx,%edx
jne    804caee <__sprintf_chk@plt+0x347e>
mov    0xdc(%esp),%eax
test   %eax,%eax
jne    804caee <__sprintf_chk@plt+0x347e>
mov    0xe0(%esp),%eax
test   %eax,%eax
jne    804caee <__sprintf_chk@plt+0x347e>
mov    0xe4(%esp),%eax
test   %eax,%eax
je     804ce20 <__sprintf_chk@plt+0x37b0>
jmp    804caee <__sprintf_chk@plt+0x347e>
lea    0x0(%esi),%esi
mov    0x98(%esp),%eax
xor    %edx,%edx
mov    %edx,0x6c(%esp)
mov    0x9c(%esp),%ecx
movl   $0x805b37a,(%esp)
mov    0x8c(%esp),%ebx
mov    %eax,0x68(%esp)
fildll 0x68(%esp)
fdivs  0x805bc20
mov    %ecx,0x58(%esp)
fstpl  0x50(%esp)
call   8049360 <gettext@plt>
mov    0x58(%esp),%ecx
mov    %ebx,0x24(%esp)
lea    0x11c(%esp),%ebx
mov    %esi,0x14(%esp)
movl   $0x40,0xc(%esp)
mov    %ecx,0x20(%esp)
movl   $0x1,0x8(%esp)
fldl   0x50(%esp)
fstpl  0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x40,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804d258 <__sprintf_chk@plt+0x3be8>
lea    0x0(%esi),%esi
mov    0x8c(%esp),%edx
movl   $0x805b325,(%esp)
mov    0x9c(%esp),%esi
mov    %edx,0x50(%esp)
call   8049360 <gettext@plt>
mov    0x50(%esp),%edx
mov    %esi,0x14(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804d258 <__sprintf_chk@plt+0x3be8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xdc(%esp),%eax
test   %eax,%eax
jne    804d30f <__sprintf_chk@plt+0x3c9f>
mov    0xe0(%esp),%eax
test   %eax,%eax
jne    804d30f <__sprintf_chk@plt+0x3c9f>
mov    0xe4(%esp),%esi
test   %esi,%esi
jne    804d30f <__sprintf_chk@plt+0x3c9f>
jmp    804d33a <__sprintf_chk@plt+0x3cca>
movl   $0x805aa10,(%esp)
movzwl 0xb4(%esp),%ebx
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804caee <__sprintf_chk@plt+0x347e>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
mov    0x8064784,%edi
mov    %gs:0x14,%eax
mov    %eax,0x202c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     804d4e1 <__sprintf_chk@plt+0x3e71>
mov    0x80656a8,%esi
test   %esi,%esi
je     804d5e8 <__sprintf_chk@plt+0x3f78>
movl   $0x805b402,(%esp)
xor    %esi,%esi
call   8057fb0 <__sprintf_chk@plt+0xe940>
lea    0x2c(%esp),%ebx
test   %eax,%eax
mov    %eax,0x8065680
je     804d600 <__sprintf_chk@plt+0x3f90>
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804d526 <__sprintf_chk@plt+0x3eb6>
mov    %esi,%eax
mov    %ebx,%edx
call   804cad0 <__sprintf_chk@plt+0x3460>
lea    0x1(%esi),%edi
mov    %edi,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804d500 <__sprintf_chk@plt+0x3e90>
mov    %eax,(%esp)
xor    %edi,%edi
call   8049160 <fclose@plt>
mov    0x8064784,%eax
test   %eax,%eax
je     804d55b <__sprintf_chk@plt+0x3eeb>
mov    0x80656a4,%edx
mov    %edi,%eax
test   %edx,%edx
je     804d5c6 <__sprintf_chk@plt+0x3f56>
movl   $0x805b41e,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x8065680
je     804d668 <__sprintf_chk@plt+0x3ff8>
xor    %esi,%esi
lea    0x2c(%esp),%ebx
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804d5a6 <__sprintf_chk@plt+0x3f36>
mov    %esi,%eax
mov    %ebx,%edx
call   804cad0 <__sprintf_chk@plt+0x3460>
lea    0x1(%esi),%ebp
mov    %ebp,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804d580 <__sprintf_chk@plt+0x3f10>
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    %edi,%eax
mov    0x202c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804d685 <__sprintf_chk@plt+0x4015>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80656a4,%edx
xor    %edi,%edi
mov    %edi,%eax
test   %edx,%edx
je     804d5c6 <__sprintf_chk@plt+0x3f56>
jmp    804d55b <__sprintf_chk@plt+0x3eeb>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804d66f <__sprintf_chk@plt+0x3fff>
mov    0x8064784,%ebx
test   %ebx,%ebx
jne    804d620 <__sprintf_chk@plt+0x3fb0>
mov    0x8064780,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     804d65a <__sprintf_chk@plt+0x3fea>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b410,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x8064784,%eax
xor    %ecx,%ecx
test   %eax,%eax
setne  %cl
mov    %ecx,%edi
jmp    804d54b <__sprintf_chk@plt+0x3edb>
mov    %edi,%eax
jmp    804d5c6 <__sprintf_chk@plt+0x3f56>
movl   $0x805b402,(%esp)
call   8049280 <perror@plt>
mov    $0xffffffff,%eax
jmp    804d5c6 <__sprintf_chk@plt+0x3f56>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23dc,%esp
mov    %gs:0x14,%esi
mov    %esi,0x23cc(%esp)
xor    %esi,%esi
test   %eax,%eax
jne    804d6d0 <__sprintf_chk@plt+0x4060>
mov    0x23cc(%esp),%eax
xor    %gs:0x14,%eax
jne    804df9a <__sprintf_chk@plt+0x492a>
add    $0x23dc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1cc(%esp),%eax
mov    %eax,0x40(%esp)
lea    0x90(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0x7c(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x78(%esp),%eax
mov    %eax,0x34(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x80(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x70(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x68(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x14c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x64(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x10c(%esp),%ebp
lea    0x6c(%esp),%eax
mov    %edx,(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x805ab54,0x4(%esp)
movb   $0x0,0x1cc(%esp)
call   8049540 <sscanf@plt>
mov    %ebp,%edx
mov    %eax,%edi
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804d77c <__sprintf_chk@plt+0x410c>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %ebp,%edx
cmp    $0x8,%edx
jbe    804dd00 <__sprintf_chk@plt+0x4690>
lea    0xa0(%esp),%ecx
lea    0x9c(%esp),%edx
lea    0x94(%esp),%esi
lea    0x98(%esp),%eax
mov    %ecx,0x14(%esp)
lea    0xde(%esp),%ebx
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x805b273,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x50(%esp)
call   8049540 <sscanf@plt>
movl   $0x2e,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
lea    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    0x48(%esp),%ecx
lea    0x98(%esp),%eax
mov    0x50(%esp),%edx
mov    %eax,0xc(%esp)
lea    0x14c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x805b273,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
movl   $0x2e,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
lea    0xc0(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    $0xa,%eax
mov    %ax,0xa4(%esp)
mov    $0xa,%eax
mov    %ax,0xc0(%esp)
mov    $0xa,%eax
movl   $0x805b471,0x50(%esp)
mov    %eax,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,%ebx
je     804df30 <__sprintf_chk@plt+0x48c0>
mov    0x80647a4,%eax
test   %eax,%eax
jne    804d8f0 <__sprintf_chk@plt+0x4280>
movb   $0x0,0x1cc(%esp)
cmp    $0x9,%edi
jle    804dd70 <__sprintf_chk@plt+0x4700>
mov    0x80647bc,%edi
test   %edi,%edi
jne    804d92d <__sprintf_chk@plt+0x42bd>
movzwl 0xc0(%esp),%eax
cmp    $0xa,%ax
je     804de08 <__sprintf_chk@plt+0x4798>
cmp    $0x2,%ax
je     804dda0 <__sprintf_chk@plt+0x4730>
mov    0x80647b8,%edi
test   %edi,%edi
je     804d6ae <__sprintf_chk@plt+0x403e>
mov    0x80647ac,%edx
lea    0x3cc(%esp),%edi
movzwl 0x64(%esp),%eax
ror    $0x8,%ax
movzwl %ax,%eax
and    $0x8,%edx
mov    %edx,0x8(%esp)
movl   $0x805b455,0x4(%esp)
mov    %eax,(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0x80647ac,%eax
mov    %eax,0x4(%esp)
lea    0xa4(%esp),%eax
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x40,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    %ebp,%eax
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804d9a5 <__sprintf_chk@plt+0x4335>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
mov    %edi,%edx
sub    %ebp,%eax
mov    (%edx),%esi
add    $0x4,%edx
lea    -0x1010101(%esi),%ecx
not    %esi
and    %esi,%ecx
and    $0x80808080,%ecx
je     804d9d9 <__sprintf_chk@plt+0x4369>
mov    %ecx,%esi
shr    $0x10,%esi
test   $0x8080,%ecx
cmove  %esi,%ecx
lea    0x2(%edx),%esi
cmove  %esi,%edx
add    %cl,%cl
sbb    $0x3,%edx
sub    %edi,%edx
lea    (%edx,%eax,1),%ecx
cmp    $0x16,%ecx
jbe    804ddd0 <__sprintf_chk@plt+0x4760>
mov    $0x16,%eax
mov    %ebp,%esi
sub    %edx,%eax
movb   $0x0,0x10c(%esp,%eax,1)
mov    (%esi),%ecx
add    $0x4,%esi
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     804da28 <__sprintf_chk@plt+0x43b8>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%esi),%ecx
cmovne %esi,%ecx
add    %al,%al
sbb    $0x3,%ecx
mov    $0x3a,%esi
mov    %si,(%ecx)
add    $0x1,%edx
add    $0x1,%ecx
mov    %edx,0x8(%esp)
movl   $0x40,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   8049310 <__memcpy_chk@plt>
mov    0x80647ac,%eax
movzwl 0x68(%esp),%edx
and    $0x8,%eax
ror    $0x8,%dx
movzwl %dx,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b455,0x4(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0x80647ac,%eax
mov    %eax,0x4(%esp)
lea    0xc0(%esp),%eax
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x40,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x14c(%esp),%eax
mov    %eax,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
lea    0x14c(%esp),%eax
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804daf8 <__sprintf_chk@plt+0x4488>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
sbb    $0x3,%eax
mov    %edi,%ecx
lea    0x14c(%esp),%esi
sub    %esi,%eax
mov    (%ecx),%ebx
add    $0x4,%ecx
lea    -0x1010101(%ebx),%edx
not    %ebx
and    %ebx,%edx
and    $0x80808080,%edx
je     804db33 <__sprintf_chk@plt+0x44c3>
mov    %edx,%ebx
shr    $0x10,%ebx
test   $0x8080,%edx
cmove  %ebx,%edx
lea    0x2(%ecx),%ebx
cmove  %ebx,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
sub    %edi,%ecx
lea    (%ecx,%eax,1),%edx
cmp    $0x16,%edx
jbe    804dbbc <__sprintf_chk@plt+0x454c>
mov    $0x16,%eax
sub    %ecx,%eax
movb   $0x0,0x14c(%esp,%eax,1)
lea    0x14c(%esp),%eax
mov    (%eax),%ebx
add    $0x4,%eax
lea    -0x1010101(%ebx),%edx
not    %ebx
and    %ebx,%edx
and    $0x80808080,%edx
je     804db83 <__sprintf_chk@plt+0x4513>
mov    %edx,%ebx
shr    $0x10,%ebx
test   $0x8080,%edx
cmove  %ebx,%edx
lea    0x2(%eax),%ebx
cmove  %ebx,%eax
add    %dl,%dl
sbb    $0x3,%eax
lea    0x14c(%esp),%esi
sub    %esi,%eax
lea    0x14c(%esp),%esi
mov    $0x3a,%edx
add    %esi,%eax
add    $0x1,%ecx
mov    %dx,(%eax)
add    $0x1,%eax
mov    %ecx,0x8(%esp)
lea    0x18c(%esp),%ebx
movl   $0x40,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049310 <__memcpy_chk@plt>
mov    0x80647a4,%ecx
movb   $0x0,0x18c(%esp)
test   %ecx,%ecx
je     804dca0 <__sprintf_chk@plt+0x4630>
mov    0x74(%esp),%esi
test   %esi,%esi
je     804dee8 <__sprintf_chk@plt+0x4878>
js     804de68 <__sprintf_chk@plt+0x47f8>
cmp    $0x2,%esi
jg     804de68 <__sprintf_chk@plt+0x47f8>
mov    0x88(%esp),%eax
xor    %edx,%edx
mov    %edx,0x5c(%esp)
mov    0x8c(%esp),%ecx
movl   $0x805b3ee,(%esp)
mov    0x7c(%esp),%edi
mov    %eax,0x58(%esp)
fildll 0x58(%esp)
fdivs  0x805bc20
mov    %ecx,0x54(%esp)
fstpl  0x48(%esp)
call   8049360 <gettext@plt>
mov    0x54(%esp),%ecx
mov    %edi,0x24(%esp)
mov    %esi,0x14(%esp)
movl   $0x40,0xc(%esp)
mov    %ecx,0x20(%esp)
movl   $0x1,0x8(%esp)
fldl   0x48(%esp)
fstpl  0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x40,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%eax
mov    %ebp,0x14(%esp)
movl   $0x805abe8,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
lea    0x14c(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x84(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x80(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x90(%esp),%edx
mov    %ebx,%ecx
mov    0x78(%esp),%eax
call   804b330 <__sprintf_chk@plt+0x1cc0>
jmp    804d6ae <__sprintf_chk@plt+0x403e>
lea    0xa8(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b2ad,0x4(%esp)
mov    %ebp,(%esp)
call   8049540 <sscanf@plt>
lea    0xc4(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x14c(%esp),%eax
movl   $0x805b2ad,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
mov    $0x2,%eax
mov    %ax,0xa4(%esp)
mov    $0x2,%eax
mov    %ax,0xc0(%esp)
mov    $0x2,%eax
movl   $0x805b455,0x50(%esp)
jmp    804d8cd <__sprintf_chk@plt+0x425d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b42d,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804d6ae <__sprintf_chk@plt+0x403e>
lea    0x0(%esi),%esi
mov    0xc4(%esp),%eax
test   %eax,%eax
je     804d91f <__sprintf_chk@plt+0x42af>
cmpl   $0x0,0x80647b8
je     804d92d <__sprintf_chk@plt+0x42bd>
cmpl   $0x0,0xc4(%esp)
jne    804d6ae <__sprintf_chk@plt+0x403e>
jmp    804d91f <__sprintf_chk@plt+0x42af>
nop
movb   $0x3a,0x0(%ebp,%eax,1)
add    $0x1,%edx
lea    0x1(%ebp,%eax,1),%eax
mov    %edx,0x8(%esp)
movl   $0x40,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049310 <__memcpy_chk@plt>
mov    0x80647ac,%eax
movzwl 0x68(%esp),%edx
and    $0x8,%eax
jmp    804da89 <__sprintf_chk@plt+0x4419>
xchg   %ax,%ax
mov    0xc8(%esp),%esi
test   %esi,%esi
je     804df68 <__sprintf_chk@plt+0x48f8>
cmpl   $0x0,0x80647b8
je     804d92d <__sprintf_chk@plt+0x42bd>
mov    0xc8(%esp),%eax
test   %eax,%eax
jne    804d6ae <__sprintf_chk@plt+0x403e>
mov    0xcc(%esp),%eax
test   %eax,%eax
jne    804d6ae <__sprintf_chk@plt+0x403e>
mov    0xd0(%esp),%eax
test   %eax,%eax
jne    804d6ae <__sprintf_chk@plt+0x403e>
mov    0xd4(%esp),%eax
test   %eax,%eax
je     804d91f <__sprintf_chk@plt+0x42af>
jmp    804d6ae <__sprintf_chk@plt+0x403e>
lea    0x0(%esi),%esi
mov    0x88(%esp),%eax
xor    %edx,%edx
mov    %edx,0x5c(%esp)
mov    0x8c(%esp),%ebx
movl   $0x805b37a,(%esp)
mov    0x7c(%esp),%edi
mov    %eax,0x58(%esp)
fildll 0x58(%esp)
fdivs  0x805bc20
fstpl  0x48(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x20(%esp)
lea    0x18c(%esp),%ebx
mov    %edi,0x24(%esp)
mov    %esi,0x14(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
fldl   0x48(%esp)
fstpl  0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x40,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804dca0 <__sprintf_chk@plt+0x4630>
lea    0x0(%esi),%esi
movl   $0x805b325,(%esp)
mov    0x7c(%esp),%edi
mov    0x8c(%esp),%esi
call   8049360 <gettext@plt>
movl   $0x40,0xc(%esp)
mov    %edi,0x18(%esp)
mov    %esi,0x14(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804dca0 <__sprintf_chk@plt+0x4630>
movl   $0x805aa10,(%esp)
movzwl 0xa4(%esp),%ebx
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804d6ae <__sprintf_chk@plt+0x403e>
xchg   %ax,%ax
mov    0xcc(%esp),%ecx
test   %ecx,%ecx
jne    804de17 <__sprintf_chk@plt+0x47a7>
mov    0xd0(%esp),%edx
test   %edx,%edx
jne    804de17 <__sprintf_chk@plt+0x47a7>
mov    0xd4(%esp),%eax
test   %eax,%eax
jne    804de17 <__sprintf_chk@plt+0x47a7>
jmp    804de42 <__sprintf_chk@plt+0x47d2>
call   80491c0 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
mov    0x8064784,%edi
mov    %gs:0x14,%eax
mov    %eax,0x202c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     804dfd1 <__sprintf_chk@plt+0x4961>
mov    0x80656a8,%esi
test   %esi,%esi
je     804e0d8 <__sprintf_chk@plt+0x4a68>
movl   $0x805b44b,(%esp)
xor    %esi,%esi
call   8057fb0 <__sprintf_chk@plt+0xe940>
lea    0x2c(%esp),%ebx
test   %eax,%eax
mov    %eax,0x8065680
je     804e0f0 <__sprintf_chk@plt+0x4a80>
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804e016 <__sprintf_chk@plt+0x49a6>
mov    %esi,%eax
mov    %ebx,%edx
call   804d690 <__sprintf_chk@plt+0x4020>
lea    0x1(%esi),%edi
mov    %edi,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804dff0 <__sprintf_chk@plt+0x4980>
mov    %eax,(%esp)
xor    %edi,%edi
call   8049160 <fclose@plt>
mov    0x8064784,%eax
test   %eax,%eax
je     804e04b <__sprintf_chk@plt+0x49db>
mov    0x80656a4,%edx
mov    %edi,%eax
test   %edx,%edx
je     804e0b6 <__sprintf_chk@plt+0x4a46>
movl   $0x805b467,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x8065680
je     804e158 <__sprintf_chk@plt+0x4ae8>
xor    %esi,%esi
lea    0x2c(%esp),%ebx
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804e096 <__sprintf_chk@plt+0x4a26>
mov    %esi,%eax
mov    %ebx,%edx
call   804d690 <__sprintf_chk@plt+0x4020>
lea    0x1(%esi),%ebp
mov    %ebp,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804e070 <__sprintf_chk@plt+0x4a00>
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    %edi,%eax
mov    0x202c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804e175 <__sprintf_chk@plt+0x4b05>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80656a4,%edx
xor    %edi,%edi
mov    %edi,%eax
test   %edx,%edx
je     804e0b6 <__sprintf_chk@plt+0x4a46>
jmp    804e04b <__sprintf_chk@plt+0x49db>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804e15f <__sprintf_chk@plt+0x4aef>
mov    0x8064784,%ebx
test   %ebx,%ebx
jne    804e110 <__sprintf_chk@plt+0x4aa0>
mov    0x8064780,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     804e14a <__sprintf_chk@plt+0x4ada>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b459,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x8064784,%eax
xor    %ecx,%ecx
test   %eax,%eax
setne  %cl
mov    %ecx,%edi
jmp    804e03b <__sprintf_chk@plt+0x49cb>
mov    %edi,%eax
jmp    804e0b6 <__sprintf_chk@plt+0x4a46>
movl   $0x805b44b,(%esp)
call   8049280 <perror@plt>
mov    $0xffffffff,%eax
jmp    804e0b6 <__sprintf_chk@plt+0x4a46>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x308c,%esp
movl   $0x805b479,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x307c(%esp)
xor    %eax,%eax
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x80647bc,%eax
test   %eax,%eax
jne    804e418 <__sprintf_chk@plt+0x4da8>
mov    0x80647b8,%eax
test   %eax,%eax
jne    804e2d8 <__sprintf_chk@plt+0x4c68>
movl   $0x805b4be,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805ac0c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x8064788,%eax
test   %eax,%eax
jne    804e440 <__sprintf_chk@plt+0x4dd0>
movl   $0x805b4e4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805b4eb,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,0x8065680
je     804e788 <__sprintf_chk@plt+0x5118>
xor    %esi,%esi
lea    0x107c(%esp),%ebp
lea    0x7c(%esp),%edi
xchg   %ax,%ax
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %ebp,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804e298 <__sprintf_chk@plt+0x4c28>
test   %esi,%esi
lea    0x1(%esi),%ebx
jne    804e300 <__sprintf_chk@plt+0x4c90>
movl   $0x805b502,0x4(%esp)
mov    %ebp,(%esp)
call   80490b0 <strstr@plt>
test   %eax,%eax
je     804e296 <__sprintf_chk@plt+0x4c26>
orl    $0x1,0x80647d0
mov    %ebx,%esi
mov    0x8065680,%eax
mov    %eax,(%esp)
call   8049370 <feof@plt>
test   %eax,%eax
mov    0x8065680,%eax
je     804e258 <__sprintf_chk@plt+0x4be8>
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x307c(%esp),%edi
xor    %gs:0x14,%edi
jne    804e81c <__sprintf_chk@plt+0x51ac>
add    $0x308c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x805b4af,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804e1eb <__sprintf_chk@plt+0x4b7b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x58(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x48(%esp),%eax
mov    %edi,0x24(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b508,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x0,0x7c(%esp)
call   8049540 <sscanf@plt>
cmp    $0x5,%eax
jle    804e3b0 <__sprintf_chk@plt+0x4d40>
testb  $0x1,0x80647d0
je     804e3e0 <__sprintf_chk@plt+0x4d70>
mov    0x80647bc,%esi
test   %esi,%esi
jne    804e386 <__sprintf_chk@plt+0x4d16>
cmpl   $0x1,0x40(%esp)
je     804e768 <__sprintf_chk@plt+0x50f8>
mov    0x80647b8,%edx
test   %edx,%edx
jne    804e296 <__sprintf_chk@plt+0x4c26>
mov    0x50(%esp),%eax
mov    $0x805b476,%esi
test   %eax,%eax
mov    $0x805b4f5,%eax
cmove  %eax,%esi
cmpl   $0x5,0x44(%esp)
ja     804e718 <__sprintf_chk@plt+0x50a8>
mov    0x44(%esp),%eax
jmp    *0x805b9a0(,%eax,4)
nop
movl   $0x805ac48,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804e296 <__sprintf_chk@plt+0x4c26>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
movl   $0x805bc5b,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    804e363 <__sprintf_chk@plt+0x4cf3>
lea    0x0(%esi),%esi
movl   $0x805b495,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804e1eb <__sprintf_chk@plt+0x4b7b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b4cc,0x8(%esp)
movl   $0x805b4de,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804e214 <__sprintf_chk@plt+0x4ba4>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b53a,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x30(%esp)
cmpl   $0x4,0x40(%esp)
ja     804e6c0 <__sprintf_chk@plt+0x5050>
mov    0x40(%esp),%eax
jmp    *0x805b9b8(,%eax,4)
xchg   %ax,%ax
movl   $0x805b553,(%esp)
nop
call   8049360 <gettext@plt>
mov    0x54(%esp),%edx
lea    0x5c(%esp),%ecx
movw   $0x205b,0x5c(%esp)
movb   $0x0,0x5e(%esp)
mov    %eax,0x34(%esp)
mov    %edx,%eax
and    $0x10000,%eax
test   %eax,%eax
jne    804e750 <__sprintf_chk@plt+0x50e0>
test   $0x20000,%edx
jne    804e620 <__sprintf_chk@plt+0x4fb0>
and    $0x40000,%edx
jne    804e654 <__sprintf_chk@plt+0x4fe4>
mov    %ecx,(%esp)
movl   $0x20,0x8(%esp)
movl   $0x805dbbc,0x4(%esp)
mov    %ecx,0x38(%esp)
call   8049090 <__strcat_chk@plt>
mov    0x34(%esp),%eax
mov    0x38(%esp),%ecx
mov    %esi,0x8(%esp)
movl   $0x805b571,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
call   80494d0 <__printf_chk@plt>
testb  $0x1,0x80647d0
je     804e730 <__sprintf_chk@plt+0x50c0>
mov    0x58(%esp),%eax
movl   $0x805b58f,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x8064788,%edx
test   %edx,%edx
je     804e5c2 <__sprintf_chk@plt+0x4f52>
testb  $0x1,0x80647d0
mov    $0x805f0b7,%esi
je     804e5aa <__sprintf_chk@plt+0x4f3a>
mov    0x58(%esp),%ecx
mov    $0x9b4c6f9f,%edx
mov    %ecx,%eax
mul    %edx
mov    %ecx,%eax
shr    $0x7,%edx
imul   $0xd3,%edx,%edx
sub    %edx,%eax
mov    0x8064800(,%eax,4),%eax
test   %eax,%eax
jne    804e5a2 <__sprintf_chk@plt+0x4f32>
jmp    804e5aa <__sprintf_chk@plt+0x4f3a>
mov    (%eax),%eax
test   %eax,%eax
je     804e7f0 <__sprintf_chk@plt+0x5180>
cmp    0x4(%eax),%ecx
jne    804e598 <__sprintf_chk@plt+0x4f28>
lea    0x8(%eax),%esi
mov    %esi,0x8(%esp)
movl   $0x805b4de,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    %edi,(%esp)
mov    %ebx,%esi
call   80492e0 <puts@plt>
jmp    804e298 <__sprintf_chk@plt+0x4c28>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b560,(%esp)
jmp    804e498 <__sprintf_chk@plt+0x4e28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%edx
test   $0x10000,%edx
jne    804e7fa <__sprintf_chk@plt+0x518a>
mov    $0x205b,%eax
test   $0x20000,%edx
lea    0x5c(%esp),%ecx
mov    %ax,0x5c(%esp)
movb   $0x0,0x5e(%esp)
movl   $0x805f00a,0x34(%esp)
je     804e4d0 <__sprintf_chk@plt+0x4e60>
nop
mov    %ecx,(%esp)
movl   $0x20,0x8(%esp)
movl   $0x805b56b,0x4(%esp)
mov    %edx,0x3c(%esp)
mov    %ecx,0x38(%esp)
call   8049090 <__strcat_chk@plt>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%ecx
and    $0x40000,%edx
je     804e4dc <__sprintf_chk@plt+0x4e6c>
mov    %ecx,(%esp)
movl   $0x20,0x8(%esp)
movl   $0x805b56e,0x4(%esp)
mov    %ecx,0x38(%esp)
call   8049090 <__strcat_chk@plt>
mov    0x38(%esp),%ecx
jmp    804e4dc <__sprintf_chk@plt+0x4e6c>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b544,(%esp)
jmp    804e498 <__sprintf_chk@plt+0x4e28>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b55d,(%esp)
jmp    804e498 <__sprintf_chk@plt+0x4e28>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b536,(%esp)
call   8049360 <gettext@plt>
cmpl   $0x4,0x40(%esp)
mov    %eax,0x30(%esp)
jbe    804e483 <__sprintf_chk@plt+0x4e13>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b3e6,(%esp)
jmp    804e498 <__sprintf_chk@plt+0x4e28>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805b532,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x30(%esp)
jmp    804e478 <__sprintf_chk@plt+0x4e08>
lea    0x0(%esi),%esi
movl   $0x805b52c,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x30(%esp)
jmp    804e478 <__sprintf_chk@plt+0x4e08>
lea    0x0(%esi),%esi
movl   $0x805b525,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x30(%esp)
jmp    804e478 <__sprintf_chk@plt+0x4e08>
lea    0x0(%esi),%esi
movl   $0x805b3e6,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x30(%esp)
jmp    804e478 <__sprintf_chk@plt+0x4e08>
lea    0x0(%esi),%esi
movl   $0x805b596,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804e559 <__sprintf_chk@plt+0x4ee9>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20434341,0x5e(%esp)
movb   $0x0,0x62(%esp)
jmp    804e4c4 <__sprintf_chk@plt+0x4e54>
lea    0x0(%esi),%esi
testb  $0x1,0x56(%esp)
je     804e378 <__sprintf_chk@plt+0x4d08>
mov    0x80647b8,%ecx
test   %ecx,%ecx
je     804e296 <__sprintf_chk@plt+0x4c26>
jmp    804e386 <__sprintf_chk@plt+0x4d16>
xchg   %ax,%ax
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804e806 <__sprintf_chk@plt+0x5196>
mov    0x8064784,%ebp
test   %ebp,%ebp
jne    804e7a8 <__sprintf_chk@plt+0x5138>
mov    0x8064780,%edi
xor    %eax,%eax
test   %edi,%edi
je     804e7e2 <__sprintf_chk@plt+0x5172>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b4fa,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x8064784,%eax
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    804e2b8 <__sprintf_chk@plt+0x4c48>
nop
mov    $0x805f0b7,%esi
jmp    804e5aa <__sprintf_chk@plt+0x4f3a>
movl   $0x805b549,(%esp)
jmp    804e498 <__sprintf_chk@plt+0x4e28>
movl   $0x805b4eb,(%esp)
call   8049280 <perror@plt>
mov    $0xffffffff,%eax
jmp    804e2b8 <__sprintf_chk@plt+0x4c48>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x8(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
jmp    80490d0 <strcmp@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    0x254(%esp),%edx
mov    0x250(%esp),%eax
mov    %gs:0x14,%ecx
mov    %ecx,0x22c(%esp)
xor    %ecx,%ecx
mov    %edx,0x1c(%esp)
mov    %edx,0x20(%esp)
mov    0x4(%eax),%edx
test   %edx,%edx
mov    %edx,0x18(%esp)
je     804e8d8 <__sprintf_chk@plt+0x5268>
mov    0x8(%eax),%eax
mov    $0xaaaaaaab,%edx
xor    %esi,%esi
mul    %edx
mov    %edx,%edi
shr    $0x3,%edi
cmp    %edi,%esi
jb     804e8ae <__sprintf_chk@plt+0x523e>
jmp    804e8d8 <__sprintf_chk@plt+0x5268>
lea    0x0(%esi),%esi
cmp    %esi,%ebx
jbe    804e8d8 <__sprintf_chk@plt+0x5268>
mov    %ebx,%edi
mov    0x18(%esp),%ecx
lea    (%edi,%esi,1),%ebx
shr    %ebx
lea    (%ebx,%ebx,2),%eax
lea    (%ecx,%eax,4),%ebp
lea    0x20(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804e830 <__sprintf_chk@plt+0x51c0>
test   %eax,%eax
js     804e8a8 <__sprintf_chk@plt+0x5238>
je     804e948 <__sprintf_chk@plt+0x52d8>
lea    0x1(%ebx),%esi
jmp    804e89c <__sprintf_chk@plt+0x522c>
mov    0x258(%esp),%ebx
test   %ebx,%ebx
jne    804e907 <__sprintf_chk@plt+0x5297>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x22c(%esp),%eax
xor    %gs:0x14,%eax
jne    804eaf4 <__sprintf_chk@plt+0x5484>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x258(%esp),%eax
movl   $0x805f00a,0xc(%esp)
movl   $0x805bc24,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x8064b5c,%eax
mov    0x8063e60(,%eax,8),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804e8e8 <__sprintf_chk@plt+0x5278>
test   %ebp,%ebp
je     804e8d8 <__sprintf_chk@plt+0x5268>
mov    0x8(%ebp),%ebx
test   $0x10000,%ebx
je     804e967 <__sprintf_chk@plt+0x52f7>
mov    0x8065690,%ecx
test   %ecx,%ecx
je     804e8e8 <__sprintf_chk@plt+0x5278>
and    $0xfffeffff,%ebx
mov    0x4(%ebp),%eax
cmpb   $0x0,(%eax)
je     804e8e8 <__sprintf_chk@plt+0x5278>
test   $0x20000,%ebx
je     804e9c5 <__sprintf_chk@plt+0x5355>
mov    0x8064b5c,%esi
and    $0xfffdffff,%ebx
cmp    %esi,%ebx
je     804e9c5 <__sprintf_chk@plt+0x5355>
mov    0x8063e64(,%ebx,8),%eax
mov    %eax,(%esp)
call   8049360 <gettext@plt>
movl   $0x805f00a,0xc(%esp)
movl   $0x805bc2f,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x8063e60(,%esi,8),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
cmp    $0x5,%ebx
movb   $0x0,0x2c(%esp)
ja     804eadf <__sprintf_chk@plt+0x546f>
jmp    *0x805cdc0(,%ebx,4)
mov    0x258(%esp),%eax
mov    %ebx,%esi
test   %eax,%eax
jle    804ea5b <__sprintf_chk@plt+0x53eb>
mov    0x4(%ebp),%eax
lea    0x2c(%esp),%edi
mov    %ebx,%esi
mov    %eax,(%esp)
call   8049360 <gettext@plt>
mov    0x258(%esp),%edx
movl   $0x200,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   80490a0 <__snprintf_chk@plt>
movzbl 0x2c(%esp),%eax
test   %al,%al
je     804ea5b <__sprintf_chk@plt+0x53eb>
mov    0x8063e60(,%ebx,8),%eax
mov    %edi,0x10(%esp)
movl   $0x805f00a,0xc(%esp)
movl   $0x805bc2f,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8064b5c
jmp    804e8e8 <__sprintf_chk@plt+0x5278>
mov    $0x5,%esi
jmp    804ea5b <__sprintf_chk@plt+0x53eb>
cmpl   $0x2,0x258(%esp)
je     804eae4 <__sprintf_chk@plt+0x5474>
movl   $0x805bc3e,(%esp)
call   8049360 <gettext@plt>
mov    %eax,%ebx
mov    0x4(%ebp),%eax
lea    0x2c(%esp),%edi
xor    %esi,%esi
mov    %eax,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x14(%esp)
xor    %ebx,%ebx
movl   $0x200,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   80490a0 <__snprintf_chk@plt>
movzbl 0x2c(%esp),%eax
jmp    804ea2c <__sprintf_chk@plt+0x53bc>
mov    0x258(%esp),%edx
mov    $0x1,%esi
test   %edx,%edx
je     804ea5b <__sprintf_chk@plt+0x53eb>
jmp    804e9e7 <__sprintf_chk@plt+0x5377>
call   80495d0 <abort@plt>
movl   $0x805bc36,(%esp)
call   8049360 <gettext@plt>
mov    %eax,%ebx
jmp    804ea85 <__sprintf_chk@plt+0x5415>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    (%ebx),%eax
test   %eax,%eax
jne    804eb21 <__sprintf_chk@plt+0x54b1>
jmp    804eb70 <__sprintf_chk@plt+0x5500>
lea    0x0(%esi),%esi
add    $0x10,%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     804eb70 <__sprintf_chk@plt+0x5500>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    804eb18 <__sprintf_chk@plt+0x54a8>
mov    0xc(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     804eb5a <__sprintf_chk@plt+0x54ea>
mov    %esi,(%esp)
call   8049360 <gettext@plt>
movl   $0x805bc47,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x0,0x8064b5c
00
mov    %ebx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8063e98,%edx
xor    %eax,%eax
test   %edx,%edx
je     804eb66 <__sprintf_chk@plt+0x54f6>
mov    %esi,(%esp)
call   8049360 <gettext@plt>
movl   $0x805bc47,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x8064b4c,%eax
mov    %esi,0x8064b4c
movl   $0x8063e98,0x8064b58
08
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x103c,%esp
mov    0x1058(%esp),%eax
lea    0x2c(%esp),%esi
mov    0x1050(%esp),%edi
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x102c(%esp)
xor    %eax,%eax
nop
mov    %edi,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %esi,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804edb8 <__sprintf_chk@plt+0x5748>
cmpb   $0xa,0x2c(%esp)
je     804ebf0 <__sprintf_chk@plt+0x5580>
lea    0x82c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x800,0x4(%esp)
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804edb8 <__sprintf_chk@plt+0x5748>
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   80493a0 <strchr@plt>
movl   $0x3a,0x4(%esp)
mov    %eax,%ebx
lea    0x82c(%esp),%eax
mov    %eax,(%esp)
call   80493a0 <strchr@plt>
test   %ebx,%ebx
mov    %eax,0x28(%esp)
je     804edf2 <__sprintf_chk@plt+0x5782>
test   %eax,%eax
je     804edf2 <__sprintf_chk@plt+0x5782>
mov    0x1054(%esp),%edx
movb   $0x0,(%ebx)
test   %edx,%edx
jne    804eca5 <__sprintf_chk@plt+0x5635>
mov    0x1c(%esp),%ebp
mov    %ebp,(%esp)
call   80493c0 <strlen@plt>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80495c0 <strncmp@plt>
test   %eax,%eax
jne    804ebf0 <__sprintf_chk@plt+0x5580>
mov    %esi,0x4(%esp)
movl   $0x80634a0,(%esp)
call   804eb00 <__sprintf_chk@plt+0x5490>
test   %eax,%eax
mov    %eax,%ecx
je     804edd5 <__sprintf_chk@plt+0x5765>
mov    0x28(%esp),%eax
add    $0x1,%ebx
mov    %edi,0x18(%esp)
mov    %ecx,%edi
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx),%eax
mov    %ebx,%ebp
cmp    $0x20,%al
je     804ed60 <__sprintf_chk@plt+0x56f0>
sub    $0x9,%eax
cmp    $0x1,%al
jbe    804ed60 <__sprintf_chk@plt+0x56f0>
movzbl (%edx),%eax
cmp    $0x20,%al
je     804ed68 <__sprintf_chk@plt+0x56f8>
sub    $0x9,%eax
cmp    $0x1,%al
jbe    804ed68 <__sprintf_chk@plt+0x56f8>
mov    %edx,0x28(%esp)
movzbl (%ebx),%eax
test   %al,%al
je     804ed31 <__sprintf_chk@plt+0x56c1>
cmp    $0x20,%al
je     804ed70 <__sprintf_chk@plt+0x5700>
sub    $0x9,%eax
cmp    $0x1,%al
jbe    804ed70 <__sprintf_chk@plt+0x5700>
lea    0x1(%ebx),%eax
jmp    804ed28 <__sprintf_chk@plt+0x56b8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%dl
je     804ed70 <__sprintf_chk@plt+0x5700>
sub    $0x9,%edx
add    $0x1,%eax
cmp    $0x1,%dl
jbe    804ed70 <__sprintf_chk@plt+0x5700>
movzbl (%eax),%edx
mov    %eax,%ebp
test   %dl,%dl
jne    804ed18 <__sprintf_chk@plt+0x56a8>
mov    $0x1,%edx
movb   $0x0,0x0(%ebp)
cmpb   $0x0,(%ebx)
je     804ed48 <__sprintf_chk@plt+0x56d8>
mov    0xc(%edi),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    804ed74 <__sprintf_chk@plt+0x5704>
test   %edx,%edx
lea    0x1(%ebp),%ebx
jne    804edaf <__sprintf_chk@plt+0x573f>
movzbl (%ebx),%eax
mov    %ebx,%ebp
mov    0x28(%esp),%edx
cmp    $0x20,%al
jne    804ece1 <__sprintf_chk@plt+0x5671>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
jmp    804ecd8 <__sprintf_chk@plt+0x5668>
add    $0x1,%edx
jmp    804ece8 <__sprintf_chk@plt+0x5678>
xor    %edx,%edx
jmp    804ed36 <__sprintf_chk@plt+0x56c6>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   8049390 <strtoul@plt>
mov    %ebx,0x4(%esp)
lea    0x1(%ebp),%ebx
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804e850 <__sprintf_chk@plt+0x51e0>
mov    0x14(%esp),%edx
test   %edx,%edx
je     804ed4f <__sprintf_chk@plt+0x56df>
mov    0x18(%esp),%edi
jmp    804ebf0 <__sprintf_chk@plt+0x5580>
xor    %eax,%eax
mov    0x102c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804edf9 <__sprintf_chk@plt+0x5789>
add    $0x103c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,0x8(%esp)
movl   $0x805bc4c,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    804ebf0 <__sprintf_chk@plt+0x5580>
mov    $0xffffffff,%eax
jmp    804edba <__sprintf_chk@plt+0x574a>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
mov    0x4(%esp),%ecx
mov    0x8(%esp),%edx
movzbl (%ecx),%eax
test   %al,%al
jne    804ee28 <__sprintf_chk@plt+0x57b8>
jmp    804ee2c <__sprintf_chk@plt+0x57bc>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
add    $0x1,%edx
mov    %al,-0x1(%edx)
movzbl (%ecx),%eax
test   %al,%al
je     804ee2c <__sprintf_chk@plt+0x57bc>
cmp    $0x36,%al
jne    804ee18 <__sprintf_chk@plt+0x57a8>
mov    %al,(%edx)
movb   $0x0,0x1(%edx)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x86c,%esp
mov    0x880(%esp),%eax
lea    0x5c(%esp),%esi
movl   $0x0,0x18(%esp)
lea    0x2a(%esp),%ebx
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x85c(%esp)
xor    %eax,%eax
xchg   %ax,%ax
mov    0x1c(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     804ef88 <__sprintf_chk@plt+0x5918>
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x45c(%esp),%ebp
mov    %ebx,0x8(%esp)
movl   $0x805bc58,0x4(%esp)
mov    %esi,(%esp)
call   8049540 <sscanf@plt>
test   %edi,%edi
jne    804ef0e <__sprintf_chk@plt+0x589e>
movzbl 0x2a(%esp),%eax
test   %al,%al
je     804efa8 <__sprintf_chk@plt+0x5938>
cmp    $0x36,%al
je     804efa8 <__sprintf_chk@plt+0x5938>
mov    %ebx,%edi
mov    %ebp,%ecx
jmp    804eee4 <__sprintf_chk@plt+0x5874>
lea    0x0(%esi),%esi
cmp    $0x36,%al
je     804eef4 <__sprintf_chk@plt+0x5884>
add    $0x1,%edi
add    $0x1,%ecx
mov    %al,-0x1(%ecx)
movzbl (%edi),%eax
test   %al,%al
jne    804eee0 <__sprintf_chk@plt+0x5870>
mov    %al,(%ecx)
movb   $0x0,0x1(%ecx)
mov    %ebp,0x4(%esp)
movl   $0x8063440,(%esp)
call   804eb00 <__sprintf_chk@plt+0x5490>
mov    %eax,0x18(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   80490b0 <strstr@plt>
test   %eax,%eax
je     804ef40 <__sprintf_chk@plt+0x58d0>
mov    0x24(%esp),%eax
mov    $0x1,%edi
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804e850 <__sprintf_chk@plt+0x51e0>
jmp    804ee78 <__sprintf_chk@plt+0x5808>
movzbl 0x2a(%esp),%eax
cmp    $0x36,%al
je     804efb6 <__sprintf_chk@plt+0x5946>
test   %al,%al
je     804efb6 <__sprintf_chk@plt+0x5946>
mov    %ebx,%edi
mov    %ebp,%ecx
jmp    804ef5c <__sprintf_chk@plt+0x58ec>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x36,%al
je     804ef6c <__sprintf_chk@plt+0x58fc>
add    $0x1,%edi
add    $0x1,%ecx
mov    %al,-0x1(%ecx)
movzbl (%edi),%eax
test   %al,%al
jne    804ef58 <__sprintf_chk@plt+0x58e8>
mov    %al,(%ecx)
movb   $0x0,0x1(%ecx)
mov    %ebp,0x4(%esp)
movl   $0x8063440,(%esp)
call   804eb00 <__sprintf_chk@plt+0x5490>
mov    %eax,0x18(%esp)
jmp    804ef1e <__sprintf_chk@plt+0x58ae>
mov    0x85c(%esp),%eax
xor    %gs:0x14,%eax
jne    804efba <__sprintf_chk@plt+0x594a>
add    $0x86c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x45c(%esp),%ebp
mov    %ebp,%ecx
jmp    804eef4 <__sprintf_chk@plt+0x5884>
mov    %ebp,%ecx
jmp    804ef6c <__sprintf_chk@plt+0x58fc>
call   80491c0 <__stack_chk_fail@plt>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
movl   $0x805bc6b,(%esp)
mov    %eax,0x806568c
mov    0x24(%esp),%eax
mov    %eax,0x8065688
mov    0x28(%esp),%eax
mov    %eax,0x8065684
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,%ebx
je     804f0e8 <__sprintf_chk@plt+0x5a78>
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804ebc0 <__sprintf_chk@plt+0x5550>
test   %eax,%eax
js     804f0b8 <__sprintf_chk@plt+0x5a48>
mov    %ebx,(%esp)
call   8049140 <ferror@plt>
test   %eax,%eax
jne    804f098 <__sprintf_chk@plt+0x5a28>
mov    %ebx,(%esp)
call   8049160 <fclose@plt>
movl   $0x805bc7a,(%esp)
call   8057fb0 <__sprintf_chk@plt+0xe940>
test   %eax,%eax
mov    %eax,%ebx
je     804f0b0 <__sprintf_chk@plt+0x5a40>
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804ebc0 <__sprintf_chk@plt+0x5550>
test   %eax,%eax
js     804f108 <__sprintf_chk@plt+0x5a98>
mov    %ebx,(%esp)
call   8049140 <ferror@plt>
test   %eax,%eax
jne    804f078 <__sprintf_chk@plt+0x5a08>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049160 <fclose@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805bc7a,(%esp)
call   8049280 <perror@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049160 <fclose@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805bc6b,(%esp)
call   8049280 <perror@plt>
jmp    804f021 <__sprintf_chk@plt+0x59b1>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x805cdd8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804f015 <__sprintf_chk@plt+0x59a5>
lea    0x0(%esi),%esi
movl   $0x805bc5f,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049280 <perror@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805ce00,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804f05b <__sprintf_chk@plt+0x59eb>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
movl   $0x805b794,0x4(%esp)
movl   $0x805bc98,(%esp)
mov    %eax,0x806568c
mov    0x24(%esp),%eax
mov    %eax,0x8065688
mov    0x28(%esp),%eax
mov    %eax,0x8065684
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804f218 <__sprintf_chk@plt+0x5ba8>
mov    %eax,(%esp)
call   804ee40 <__sprintf_chk@plt+0x57d0>
mov    %ebx,(%esp)
call   8049140 <ferror@plt>
test   %eax,%eax
jne    804f1e8 <__sprintf_chk@plt+0x5b78>
mov    %ebx,(%esp)
call   8049160 <fclose@plt>
movl   $0x805b794,0x4(%esp)
movl   $0x805bc6b,(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804f238 <__sprintf_chk@plt+0x5bc8>
movl   $0x805bca8,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ebc0 <__sprintf_chk@plt+0x5550>
mov    %ebx,(%esp)
call   8049140 <ferror@plt>
test   %eax,%eax
jne    804f1f8 <__sprintf_chk@plt+0x5b88>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049160 <fclose@plt>
movl   $0x805bc98,(%esp)
call   8049280 <perror@plt>
jmp    804f191 <__sprintf_chk@plt+0x5b21>
xchg   %ax,%ax
movl   $0x805bc6b,(%esp)
call   8049280 <perror@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049160 <fclose@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805bc8c,(%esp)
call   8049360 <gettext@plt>
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049280 <perror@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805bc5f,(%esp)
jmp    804f21f <__sprintf_chk@plt+0x5baf>
jmp    804f250 <__sprintf_chk@plt+0x5be0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    $0xaaaaaaab,%esi
push   %ebx
mov    $0x80634a0,%ebx
sub    $0x14,%esp
mov    0x80634a0,%edx
test   %edx,%edx
je     804f2a0 <__sprintf_chk@plt+0x5c30>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
add    $0x10,%ebx
mull   -0x8(%ebx)
mov    -0xc(%ebx),%eax
movl   $0x804e830,0xc(%esp)
movl   $0xc,0x8(%esp)
shr    $0x3,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049560 <qsort@plt>
mov    (%ebx),%eax
test   %eax,%eax
jne    804f270 <__sprintf_chk@plt+0x5c00>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0xaaaaaaab,%esi
push   %ebx
mov    $0x8063440,%ebx
sub    $0x14,%esp
mov    0x8063440,%edx
test   %edx,%edx
je     804f300 <__sprintf_chk@plt+0x5c90>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
add    $0x10,%ebx
mull   -0x8(%ebx)
mov    -0xc(%ebx),%eax
movl   $0x804e830,0xc(%esp)
movl   $0xc,0x8(%esp)
shr    $0x3,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049560 <qsort@plt>
mov    (%ebx),%eax
test   %eax,%eax
jne    804f2d0 <__sprintf_chk@plt+0x5c60>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x805d98b,(%esp)
call   8049360 <gettext@plt>
movl   $0x805d992,(%esp)
mov    %eax,0x8064324
call   8049360 <gettext@plt>
movl   $0x805d99e,(%esp)
mov    %eax,0x8064364
call   8049360 <gettext@plt>
movl   $0x805d9ad,(%esp)
mov    %eax,0x80640e4
call   8049360 <gettext@plt>
movl   $0x805d9b2,(%esp)
mov    %eax,0x8064124
call   8049360 <gettext@plt>
movl   $0x805d9bd,(%esp)
mov    %eax,0x8064004
call   8049360 <gettext@plt>
movl   $0x805d9ca,(%esp)
mov    %eax,0x8064244
call   8049360 <gettext@plt>
movl   $0x805d9d5,(%esp)
mov    %eax,0x8064204
call   8049360 <gettext@plt>
movl   $0x805d9e3,(%esp)
mov    %eax,0x8064064
call   8049360 <gettext@plt>
movl   $0x805d9ea,(%esp)
mov    %eax,0x80640a4
call   8049360 <gettext@plt>
movl   $0x805d9f5,(%esp)
mov    %eax,0x80643a4
call   8049360 <gettext@plt>
movl   $0x805d9ff,(%esp)
mov    %eax,0x80642a4
call   8049360 <gettext@plt>
mov    %eax,0x8063fa4
mov    $0x1,%eax
mov    %ax,0x8064c64
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
cmpw   $0x0,0x8064c64
mov    0x20(%esp),%edi
je     804f490 <__sprintf_chk@plt+0x5e20>
mov    0x8063ea0,%ebx
test   %ebx,%ebx
je     804f448 <__sprintf_chk@plt+0x5dd8>
mov    $0x8063ea0,%esi
jmp    804f429 <__sprintf_chk@plt+0x5db9>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
je     804f448 <__sprintf_chk@plt+0x5dd8>
mov    %edi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    804f420 <__sprintf_chk@plt+0x5db0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2c,0x4(%esp)
xor    %ebx,%ebx
mov    %edi,(%esp)
call   8049260 <index@plt>
test   %eax,%eax
je     804f43b <__sprintf_chk@plt+0x5dcb>
movl   $0x805da38,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804f310 <__sprintf_chk@plt+0x5ca0>
jmp    804f408 <__sprintf_chk@plt+0x5d98>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
cmpw   $0x0,0x8064c64
mov    0x10(%esp),%ebx
je     804f4e0 <__sprintf_chk@plt+0x5e70>
mov    0x8063ea0,%eax
test   %eax,%eax
je     804f4d6 <__sprintf_chk@plt+0x5e66>
cmp    %ebx,0x8(%eax)
je     804f4d6 <__sprintf_chk@plt+0x5e66>
mov    $0x8063ea0,%edx
jmp    804f4cd <__sprintf_chk@plt+0x5e5d>
nop
cmp    %ebx,0x8(%eax)
je     804f4d6 <__sprintf_chk@plt+0x5e66>
add    $0x4,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804f4c8 <__sprintf_chk@plt+0x5e58>
add    $0x8,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804f310 <__sprintf_chk@plt+0x5ca0>
jmp    804f4b2 <__sprintf_chk@plt+0x5e42>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
cmpw   $0x0,0x8064c64
mov    0x10(%esp),%ebx
je     804f538 <__sprintf_chk@plt+0x5ec8>
mov    0x8063ea0,%eax
test   %eax,%eax
je     804f526 <__sprintf_chk@plt+0x5eb6>
cmp    %ebx,0x8(%eax)
mov    $0x8063ea0,%edx
jne    804f51d <__sprintf_chk@plt+0x5ead>
jmp    804f530 <__sprintf_chk@plt+0x5ec0>
nop
cmp    %ebx,0x8(%eax)
je     804f530 <__sprintf_chk@plt+0x5ec0>
add    $0x4,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804f518 <__sprintf_chk@plt+0x5ea8>
add    $0x8,%esp
mov    $0xffffffff,%eax
pop    %ebx
ret
mov    0x2c(%eax),%eax
add    $0x8,%esp
pop    %ebx
ret
call   804f310 <__sprintf_chk@plt+0x5ca0>
jmp    804f502 <__sprintf_chk@plt+0x5e92>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x13c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
mov    0x150(%esp),%eax
lea    0x2c(%esp),%edi
movl   $0x100,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
movl   $0x2c,0x4(%esp)
mov    %edi,(%esp)
call   8049260 <index@plt>
test   %eax,%eax
je     804f6c8 <__sprintf_chk@plt+0x6058>
lea    0x1(%eax),%ebp
movb   $0x0,(%eax)
mov    0x8063ee0,%eax
test   %eax,%eax
je     804f5bd <__sprintf_chk@plt+0x5f4d>
mov    $0x8063ee0,%ebx
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
je     804f610 <__sprintf_chk@plt+0x5fa0>
add    $0xc,%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    804f5a4 <__sprintf_chk@plt+0x5f34>
movl   $0x805da05,(%esp)
mov    $0x1,%esi
call   8049360 <gettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    %esi,%eax
mov    0x12c(%esp),%esi
xor    %gs:0x14,%esi
jne    804f6f9 <__sprintf_chk@plt+0x6089>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%edi
mov    %eax,%esi
mov    %edi,(%esp)
call   80493c0 <strlen@plt>
mov    %eax,0x1c(%esp)
mov    $0x8064b60,%eax
mov    (%eax),%ecx
add    $0x4,%eax
lea    -0x1010101(%ecx),%edx
not    %ecx
and    %ecx,%edx
and    $0x80808080,%edx
je     804f626 <__sprintf_chk@plt+0x5fb6>
mov    %edx,%ecx
shr    $0x10,%ecx
test   $0x8080,%edx
cmove  %ecx,%edx
lea    0x2(%eax),%ecx
cmove  %ecx,%eax
add    %dl,%dl
mov    0x1c(%esp),%edx
sbb    $0x3,%eax
sub    $0x8064b60,%eax
lea    0x1(%eax,%edx,1),%eax
cmp    $0xff,%eax
ja     804f6cf <__sprintf_chk@plt+0x605f>
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804f674 <__sprintf_chk@plt+0x6004>
addl   $0x1,(%eax)
cmpb   $0x0,0x8064b60
jne    804f6a8 <__sprintf_chk@plt+0x6038>
movl   $0x100,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x8064b60,(%esp)
call   8049090 <__strcat_chk@plt>
test   %ebp,%ebp
je     804f5eb <__sprintf_chk@plt+0x5f7b>
mov    %ebp,%edi
jmp    804f578 <__sprintf_chk@plt+0x5f08>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x100,0x8(%esp)
movl   $0x805da03,0x4(%esp)
movl   $0x8064b60,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    804f67d <__sprintf_chk@plt+0x600d>
xchg   %ax,%ax
xor    %ebp,%ebp
jmp    804f596 <__sprintf_chk@plt+0x5f26>
movl   $0x805da6c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
jmp    804f5eb <__sprintf_chk@plt+0x5f7b>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
mov    0x34(%esp),%ebx
movl   $0x100,0x8(%esp)
mov    0x30(%esp),%edi
movl   $0x8064b60,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %ebx,(%esp)
movl   $0x2f,0x4(%esp)
call   8049520 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmovne %edx,%ebx
mov    %ebx,(%esp)
call   8049440 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804f7e8 <__sprintf_chk@plt+0x6178>
mov    %edi,(%esp)
call   80493c0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   80493c0 <strlen@plt>
cmp    %eax,%ebp
jae    804f7ad <__sprintf_chk@plt+0x613d>
sub    %ebp,%eax
lea    (%esi,%eax,1),%ebx
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    804f7ad <__sprintf_chk@plt+0x613d>
movb   $0x0,(%ebx)
movl   $0x5f,0x4(%esp)
mov    %esi,(%esp)
call   80493a0 <strchr@plt>
test   %eax,%eax
je     804f79a <__sprintf_chk@plt+0x612a>
movb   $0x0,(%eax)
mov    %esi,(%esp)
movb   $0x0,0x8064b60
call   804f540 <__sprintf_chk@plt+0x5ed0>
test   %eax,%eax
jne    804f7c0 <__sprintf_chk@plt+0x6150>
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049110 <free@plt>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
movl   $0x100,0x8(%esp)
movl   $0x8064b60,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049110 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmpw   $0x0,0x8064c64
mov    0x40(%esp),%esi
je     804f8d8 <__sprintf_chk@plt+0x6268>
mov    $0x8063ea0,%ebx
xor    %ebp,%ebp
mov    $0x55555556,%edi
jmp    804f895 <__sprintf_chk@plt+0x6225>
nop
mov    0x8(%ecx),%eax
test   %eax,%eax
je     804f892 <__sprintf_chk@plt+0x6222>
mov    %ebp,%eax
imul   %edi
mov    %ebp,%eax
sar    $0x1f,%eax
sub    %eax,%edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebp
jne    804f85b <__sprintf_chk@plt+0x61eb>
test   %ebp,%ebp
mov    $0x805da24,%edx
mov    $0x805da23,%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    (%ebx),%ecx
mov    (%ecx),%eax
mov    $0x805da29,%edx
test   %eax,%eax
cmove  %edx,%eax
mov    0x4(%ecx),%edx
add    $0x1,%ebp
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
movl   $0x805da2c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x4,%ebx
mov    (%ebx),%ecx
test   %ecx,%ecx
je     804f8b8 <__sprintf_chk@plt+0x6248>
cmp    $0x1,%esi
jne    804f818 <__sprintf_chk@plt+0x61a8>
mov    0x20(%ecx),%edx
test   %edx,%edx
jne    804f818 <__sprintf_chk@plt+0x61a8>
nop
jmp    804f892 <__sprintf_chk@plt+0x6222>
lea    0x0(%esi),%esi
mov    0x8064740,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049530 <fputc@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804f310 <__sprintf_chk@plt+0x5ca0>
jmp    804f809 <__sprintf_chk@plt+0x6199>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x8063fe8,%edx
mov    0x40(%esp),%eax
lea    0x1c(%esp),%ebp
mov    0x44(%esp),%edi
test   %eax,%eax
mov    %dx,(%edi)
lea    0x2(%edi),%ebx
je     804f958 <__sprintf_chk@plt+0x62e8>
movl   $0x10,0x8(%esp)
add    $0x1,%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
movzbl 0x805dac7(%eax),%eax
mov    %al,-0x1(%ebx,%esi,1)
mov    0x1c(%esp),%eax
movzbl (%eax),%edx
test   %dl,%dl
je     804f960 <__sprintf_chk@plt+0x62f0>
cmp    $0x3a,%dl
jne    804f970 <__sprintf_chk@plt+0x6300>
add    $0x1,%eax
je     804f960 <__sprintf_chk@plt+0x62f0>
cmp    $0x3f,%esi
nop
jbe    804f915 <__sprintf_chk@plt+0x62a5>
jmp    804f960 <__sprintf_chk@plt+0x62f0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movb   $0xc9,-0x1(%ebx,%esi,1)
cmp    $0x3f,%esi
jbe    804f958 <__sprintf_chk@plt+0x62e8>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x805da90,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0xffffffff,%eax
movl   $0xc9c9c9c9,0x2(%edi)
movl   $0xc9c9c9c9,0x4(%ebx)
movl   $0xc9c9c9c9,0x8(%ebx)
movl   $0xc9c9c9c9,0xc(%ebx)
movl   $0xc9c9c9c9,0x10(%ebx)
movl   $0xc9c9c9c9,0x14(%ebx)
movl   $0xc9c9c9c9,0x18(%ebx)
movl   $0xc9c9c9c9,0x1c(%ebx)
movl   $0xc9c9c9c9,0x20(%ebx)
movl   $0xc9c9c9c9,0x24(%ebx)
movl   $0xc9c9c9c9,0x28(%ebx)
movl   $0xc9c9c9c9,0x2c(%ebx)
movl   $0xc9c9c9c9,0x30(%ebx)
movl   $0xc9c9c9c9,0x34(%ebx)
movl   $0xc9c9c9c9,0x38(%ebx)
movl   $0xc9c9c9c9,0x3c(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
movb   $0x5b,0x8064cc0
movzbl (%esi),%eax
cmp    $0xff,%al
je     804fa99 <__sprintf_chk@plt+0x6429>
cmp    $0xc9,%al
je     804fa99 <__sprintf_chk@plt+0x6429>
add    $0x1,%esi
mov    $0x8064cc1,%edx
jmp    804fa59 <__sprintf_chk@plt+0x63e9>
lea    0x0(%esi),%esi
cmp    $0xc9,%al
je     804fa87 <__sprintf_chk@plt+0x6417>
add    $0x1,%esi
cmp    $0x8064d01,%ebx
je     804fa87 <__sprintf_chk@plt+0x6417>
mov    %ebx,%edx
mov    %eax,0x10(%esp)
lea    0x1(%edx),%ebx
movl   $0x805daa6,0xc(%esp)
movl   $0x7f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   8049670 <__sprintf_chk@plt>
movzbl (%esi),%eax
cmp    $0xff,%al
jne    804fa48 <__sprintf_chk@plt+0x63d8>
movb   $0x5d,(%ebx)
mov    $0x8064cc0,%eax
movb   $0x0,0x1(%ebx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    $0x8064cc1,%ebx
jmp    804fa87 <__sprintf_chk@plt+0x6417>
sub    $0x1c,%esp
mov    0x20(%esp),%eax
cmpw   $0x12,(%eax)
je     804fad0 <__sprintf_chk@plt+0x6460>
movl   $0x40,0x8(%esp)
movl   $0x805daaa,0x4(%esp)
movl   $0x8064c80,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
add    $0x2,%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    804fa20 <__sprintf_chk@plt+0x63b0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8064008,%eax
mov    0x48(%esp),%ebx
mov    0x44(%esp),%esi
mov    %ax,(%ebx)
add    $0x2,%ebx
movzbl (%esi),%edx
cmp    $0x2d,%dl
je     804fc1d <__sprintf_chk@plt+0x65ad>
test   %dl,%dl
mov    %edx,0x1c(%esp)
je     804fc1d <__sprintf_chk@plt+0x65ad>
call   8049640 <__ctype_b_loc@plt>
mov    0x1c(%esp),%edx
xor    %edi,%edi
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
movsbl %dl,%ecx
add    $0x1,%esi
mov    (%eax),%ebp
movzwl 0x0(%ebp,%ecx,2),%eax
test   $0x2,%ah
je     804fb53 <__sprintf_chk@plt+0x64e3>
mov    %ecx,0x1c(%esp)
call   8049080 <__ctype_toupper_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
mov    (%eax,%ecx,4),%eax
mov    %eax,%edx
movsbl %al,%eax
movzwl 0x0(%ebp,%eax,2),%eax
test   $0x9,%ah
je     804fb90 <__sprintf_chk@plt+0x6520>
add    %edx,%edx
add    $0x1,%ebx
mov    %dl,-0x1(%ebx)
movzbl (%esi),%edx
add    $0x1,%edi
cmp    $0x2d,%dl
je     804fbd0 <__sprintf_chk@plt+0x6560>
test   %dl,%dl
je     804fbd0 <__sprintf_chk@plt+0x6560>
cmp    $0x6,%edi
jne    804fb21 <__sprintf_chk@plt+0x64b1>
test   %dl,%dl
jne    804fc26 <__sprintf_chk@plt+0x65b6>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x805dad7,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x8064da0,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6,%edi
je     804fc5f <__sprintf_chk@plt+0x65ef>
add    $0x1,%edi
mov    %ebx,%edx
xchg   %ax,%ax
add    $0x1,%ebx
lea    -0x1(%ebx,%edi,1),%eax
sub    %edx,%eax
cmp    $0x5,%eax
movb   $0x40,-0x1(%ebx)
jbe    804fbe0 <__sprintf_chk@plt+0x6570>
cmpb   $0x2d,(%esi)
jne    804fb80 <__sprintf_chk@plt+0x6510>
add    $0x1,%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80495f0 <strtol@plt>
add    %eax,%eax
mov    %al,(%ebx)
xor    %eax,%eax
jmp    804fb85 <__sprintf_chk@plt+0x6515>
mov    %ebx,%edx
mov    $0x1,%edi
jmp    804fbe0 <__sprintf_chk@plt+0x6570>
movl   $0x805dae8,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x8064da0,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
call   8049460 <__errno_location@plt>
movl   $0x7,(%eax)
mov    $0xffffffff,%eax
jmp    804fb85 <__sprintf_chk@plt+0x6515>
cmp    $0x2d,%dl
je     804fbf7 <__sprintf_chk@plt+0x6587>
jmp    804fb74 <__sprintf_chk@plt+0x6504>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804fae0 <__sprintf_chk@plt+0x6470>
test   %eax,%eax
js     804fca8 <__sprintf_chk@plt+0x6638>
mov    $0x3,%eax
mov    %ax,(%ebx)
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    804fc9e <__sprintf_chk@plt+0x662e>
nop
push   %ebx
xor    %eax,%eax
sub    $0x28,%esp
xor    %ebx,%ebx
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx,%eax,1),%edx
shr    %dl
cmp    $0x20,%dl
cmove  %ebx,%edx
add    $0x1,%eax
mov    %dl,0x8064d7f(%eax)
cmp    $0x6,%eax
jne    804fcc0 <__sprintf_chk@plt+0x6650>
movb   $0x0,0x8064d86
movzbl 0x6(%ecx),%eax
and    $0x1e,%eax
sar    %eax
mov    %eax,%ebx
je     804fd23 <__sprintf_chk@plt+0x66b3>
movl   $0x8064d80,(%esp)
call   80493c0 <strlen@plt>
mov    %ebx,0x10(%esp)
movl   $0x805dafa,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
add    $0x8064d80,%eax
mov    %eax,(%esp)
call   8049670 <__sprintf_chk@plt>
add    $0x28,%esp
mov    $0x8064d80,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     804fd68 <__sprintf_chk@plt+0x66f8>
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
movl   $0x8064da0,0x10(%esp)
movl   $0x805dafe,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
mov    0x8064740,%eax
movl   $0x8064da0,0xc(%esp)
movl   $0x805b5fa,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804fda0 <__sprintf_chk@plt+0x6730>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movzwl (%eax),%ecx
lea    -0x1(%ecx),%edx
cmp    $0xfffd,%dx
ja     804fdc8 <__sprintf_chk@plt+0x6758>
add    $0x2,%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    804fcb0 <__sprintf_chk@plt+0x6640>
lea    0x0(%esi),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x40,0x8(%esp)
movl   $0x8064d40,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
sub    $0x2c,%esp
mov    0x30(%esp),%edx
movzwl 0x2(%edx),%eax
movzbl 0x4(%edx),%edx
ror    $0x8,%ax
movzwl %ax,%eax
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
movl   $0x805db06,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8064e20,(%esp)
call   8049670 <__sprintf_chk@plt>
mov    $0x8064e20,%eax
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
cmpw   $0x5,(%eax)
je     804fe78 <__sprintf_chk@plt+0x6808>
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x40,0x8(%esp)
movl   $0x8064e60,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
add    $0x2,%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    804fdf0 <__sprintf_chk@plt+0x6780>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%ebx
lea    0x18(%esp),%eax
lea    0x1c(%esp),%esi
mov    0x38(%esp),%edi
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x805f0da,0x4(%esp)
mov    %ebx,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x1,%eax
je     804fef0 <__sprintf_chk@plt+0x6880>
cmp    $0x2,%eax
je     804fed8 <__sprintf_chk@plt+0x6868>
add    $0x20,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %al,0x5(%edi)
mov    0x18(%esp),%eax
mov    %al,0x6(%edi)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,0x8(%esp)
movl   $0x805b270,0x4(%esp)
mov    %ebx,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x1,%eax
jne    804fec8 <__sprintf_chk@plt+0x6858>
mov    0x1c(%esp),%eax
movb   $0x0,0x6(%edi)
mov    %al,0x5(%edi)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
movzbl (%eax),%edx
mov    %edx,0x14(%esp)
movzbl 0x1(%eax),%eax
movl   $0x805f0da,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x8064ea0,(%esp)
call   8049670 <__sprintf_chk@plt>
mov    $0x8064ea0,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
cmpw   $0x13,(%eax)
je     804ff90 <__sprintf_chk@plt+0x6920>
movl   $0x805daaa,0x30(%esp)
add    $0x2c,%esp
jmp    8049360 <gettext@plt>
lea    0x0(%esi),%esi
movzbl 0x5(%eax),%edx
mov    %edx,0x14(%esp)
movzbl 0x6(%eax),%eax
movl   $0x805f0da,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x8064ea0,(%esp)
call   8049670 <__sprintf_chk@plt>
mov    $0x8064ea0,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
nop
movl   $0x8053eb0,0x8064100
08
movl   $0x8051d20,0x8064140
08
movl   $0x8057830,0x8064260
08
movl   $0x8058da0,0x8064020
08
movl   $0x8056aa0,0x8064220
08
movl   $0x8058ef0,0x8064080
08
movl   $0x8058800,0x80643c0
08
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    $0x8,%esi
push   %ebx
sub    $0x12c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x11c(%esp)
xor    %eax,%eax
mov    0x140(%esp),%eax
lea    0x1c(%esp),%ebx
movl   $0x100,0x8(%esp)
mov    0x144(%esp),%edi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
jmp    805006e <__sprintf_chk@plt+0x69fe>
xchg   %ax,%ax
test   %ebp,%ebp
je     80500af <__sprintf_chk@plt+0x6a3f>
mov    %ebp,%ebx
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   8049260 <index@plt>
test   %eax,%eax
je     80500d0 <__sprintf_chk@plt+0x6a60>
lea    0x1(%eax),%ebp
movb   $0x0,(%eax)
cmpb   $0x0,(%ebx)
je     8050068 <__sprintf_chk@plt+0x69f8>
mov    %ebx,(%esp)
call   804f3f0 <__sprintf_chk@plt+0x5d80>
test   %eax,%eax
je     80500d4 <__sprintf_chk@plt+0x6a64>
mov    0x20(%eax),%edx
test   %edx,%edx
je     8050104 <__sprintf_chk@plt+0x6a94>
mov    %edi,(%esp)
call   *%edx
test   %eax,%eax
jne    80500b1 <__sprintf_chk@plt+0x6a41>
xor    %esi,%esi
test   %ebp,%ebp
jne    805006c <__sprintf_chk@plt+0x69fc>
mov    %esi,%eax
mov    0x11c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805010f <__sprintf_chk@plt+0x6a9f>
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
jmp    8050088 <__sprintf_chk@plt+0x6a18>
movl   $0x805db38,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0x3,%eax
jmp    80500b1 <__sprintf_chk@plt+0x6a41>
mov    (%eax),%ebx
movl   $0x805db5c,(%esp)
jmp    80500db <__sprintf_chk@plt+0x6a6b>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
jmp    8049170 <inet_ntoa@plt>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%eax
movl   $0x2f,0x4(%esp)
mov    0x44(%esp),%ebx
mov    0x48(%esp),%esi
mov    %eax,(%esp)
call   80493a0 <strchr@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     80501c8 <__sprintf_chk@plt+0x6b58>
movb   $0x0,(%edx)
lea    0x2c(%esp),%eax
add    $0x1,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049390 <strtoul@plt>
mov    %eax,%edi
mov    0x2c(%esp),%eax
cmpb   $0x0,(%eax)
jne    80501d0 <__sprintf_chk@plt+0x6b60>
test   %esi,%esi
je     80501ab <__sprintf_chk@plt+0x6b3b>
mov    %edi,0x10(%esp)
movl   $0x805db08,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049670 <__sprintf_chk@plt>
mov    $0xffffffff,%edx
mov    %edi,%ecx
shr    %cl,%edx
mov    $0x2,%eax
not    %edx
mov    %ax,(%ebx)
bswap  %edx
mov    $0x1,%eax
mov    %edx,0x4(%ebx)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    80501c8 <__sprintf_chk@plt+0x6b58>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8049490 <herror@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmpw   $0x2,(%edx)
jne    8050400 <__sprintf_chk@plt+0x6d90>
mov    0x4(%edx),%ebx
mov    %eax,%edi
mov    %ecx,%eax
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
je     8050280 <__sprintf_chk@plt+0x6c10>
and    $0xfff,%eax
mov    %eax,0xc(%esp)
jne    805028f <__sprintf_chk@plt+0x6c1f>
mov    0x40(%esp),%eax
mov    $0x1,%esi
not    %eax
test   %ebx,%eax
jne    8050234 <__sprintf_chk@plt+0x6bc4>
mov    %ecx,%esi
shr    $0xe,%esi
and    $0x1,%esi
mov    0x8065040,%ecx
test   %ecx,%ecx
jne    805024f <__sprintf_chk@plt+0x6bdf>
jmp    80502c8 <__sprintf_chk@plt+0x6c58>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ecx),%ecx
test   %ecx,%ecx
je     80502c8 <__sprintf_chk@plt+0x6c58>
cmp    0x4(%ecx),%ebx
jne    8050248 <__sprintf_chk@plt+0x6bd8>
cmp    %esi,0x14(%ecx)
jne    8050248 <__sprintf_chk@plt+0x6bd8>
movl   $0x80,0x8(%esp)
mov    0x10(%ecx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
and    $0xfff,%eax
mov    %eax,0xc(%esp)
je     8050370 <__sprintf_chk@plt+0x6d00>
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8049170 <inet_ntoa@plt>
mov    %edi,(%esp)
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
movl   $0x0,0xc(%esp)
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %esi,%esi
bswap  %ebx
je     80503a0 <__sprintf_chk@plt+0x6d30>
lea    0x1c(%esp),%eax
movl   $0x2,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   80491b0 <gethostbyaddr@plt>
test   %eax,%eax
je     80503b8 <__sprintf_chk@plt+0x6d48>
movl   $0x80,0x8(%esp)
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
movl   $0x1c,(%esp)
call   80492d0 <malloc@plt>
mov    %eax,%ebx
mov    0x0(%ebp),%eax
mov    %eax,(%ebx)
mov    0x4(%ebp),%eax
mov    %eax,0x4(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0x8(%ebx)
mov    0xc(%ebp),%eax
mov    %esi,0x14(%ebx)
mov    %eax,0xc(%ebx)
mov    0x8065040,%eax
mov    %eax,0x18(%ebx)
mov    %edi,(%esp)
call   80493c0 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   80492d0 <malloc@plt>
mov    %eax,0x10(%ebx)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80492b0 <strcpy@plt>
mov    0xc(%esp),%eax
mov    %ebx,0x8065040
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
and    $0x80,%ch
movl   $0x80,0x8(%esp)
je     80503e0 <__sprintf_chk@plt+0x6d70>
mov    %edi,(%esp)
movl   $0x805db81,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049200 <getnetbyaddr@plt>
test   %eax,%eax
jne    80502f6 <__sprintf_chk@plt+0x6c86>
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8049170 <inet_ntoa@plt>
movl   $0x80,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
jmp    805030c <__sprintf_chk@plt+0x6c9c>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
movl   $0x805db89,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
movl   $0xffffffff,0xc(%esp)
movl   $0x61,(%eax)
jmp    8050270 <__sprintf_chk@plt+0x6c00>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%edx
movzwl (%edx),%eax
sub    $0x1,%eax
cmp    $0xfffd,%ax
ja     8050460 <__sprintf_chk@plt+0x6df0>
mov    0x24(%esp),%ecx
mov    $0x8064f40,%eax
movl   $0xffffff00,(%esp)
call   80501f0 <__sprintf_chk@plt+0x6b80>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
mov    $0x8064f40,%edx
cmove  %edx,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x8064f40,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebp
mov    0x48(%esp),%ebx
cmp    $0x1,%eax
je     8050548 <__sprintf_chk@plt+0x6ed8>
cmp    $0x100,%eax
je     80504f0 <__sprintf_chk@plt+0x6e80>
xor    %edx,%edx
mov    $0x2,%eax
mov    %ax,(%ebx)
mov    $0x805db81,%edi
mov    $0x8,%ecx
mov    %dx,0x2(%ebx)
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8050608 <__sprintf_chk@plt+0x6f98>
movl   $0x0,0x4(%ebx)
mov    $0x1,%esi
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
mov    $0x2,%ecx
mov    %cx,(%ebx)
mov    $0x805db81,%edi
mov    $0x8,%ecx
mov    %si,0x2(%ebx)
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80504d5 <__sprintf_chk@plt+0x6e65>
lea    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   80490c0 <inet_aton@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8050640 <__sprintf_chk@plt+0x6fd0>
mov    %ebp,(%esp)
call   80495e0 <gethostbyname@plt>
test   %eax,%eax
je     8050650 <__sprintf_chk@plt+0x6fe0>
mov    0x10(%eax),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,0x4(%ebx)
jmp    80504e1 <__sprintf_chk@plt+0x6e71>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2,%edi
xor    %eax,%eax
mov    %di,(%ebx)
mov    %ebp,%esi
mov    %ax,0x2(%ebx)
movl   $0x0,0x1c(%esp)
call   8049080 <__ctype_toupper_loc@plt>
lea    0x1c(%esp),%edx
mov    %eax,%edi
lea    0x8(%ebp),%eax
mov    %ebx,%ebp
mov    %eax,0xc(%esp)
movsbl (%esi),%ecx
mov    (%edi),%eax
mov    (%eax,%ecx,4),%eax
lea    -0x41(%eax),%ecx
cmp    $0x5,%cl
mov    %al,(%esi)
ja     80505d8 <__sprintf_chk@plt+0x6f68>
sub    $0x37,%eax
or     (%edx),%al
mov    %al,(%edx)
movsbl 0x1(%esi),%ebx
movsbl %al,%eax
mov    (%edi),%ecx
shl    $0x4,%eax
mov    %al,(%edx)
mov    (%ecx,%ebx,4),%ecx
lea    -0x41(%ecx),%ebx
cmp    $0x5,%bl
mov    %cl,0x1(%esi)
ja     80505f0 <__sprintf_chk@plt+0x6f80>
sub    $0x37,%ecx
or     %eax,%ecx
mov    %cl,(%edx)
add    $0x2,%esi
add    $0x1,%edx
cmp    %esi,0xc(%esp)
jne    8050574 <__sprintf_chk@plt+0x6f04>
mov    0x1c(%esp),%eax
mov    $0x8,%esi
bswap  %eax
mov    %eax,0x4(%ebp)
add    $0x2c,%esp
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x30,%eax
cmp    $0x9,%al
ja     8050690 <__sprintf_chk@plt+0x7020>
or     (%edx),%al
mov    %al,(%edx)
jmp    805058d <__sprintf_chk@plt+0x6f1d>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x30,%ecx
cmp    $0x9,%cl
ja     8050690 <__sprintf_chk@plt+0x7020>
or     %eax,%ecx
mov    %cl,(%edx)
jmp    80505b0 <__sprintf_chk@plt+0x6f40>
lea    0x0(%esi),%esi
lea    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   80490c0 <inet_aton@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8050640 <__sprintf_chk@plt+0x6fd0>
mov    %ebp,(%esp)
call   8049100 <getnetbyname@plt>
test   %eax,%eax
je     8050670 <__sprintf_chk@plt+0x7000>
mov    0xc(%eax),%eax
mov    $0x1,%si
bswap  %eax
mov    %eax,0x4(%ebx)
jmp    80504e1 <__sprintf_chk@plt+0x6e71>
lea    0x0(%esi),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049100 <getnetbyname@plt>
test   %eax,%eax
je     8050680 <__sprintf_chk@plt+0x7010>
mov    0xc(%eax),%eax
mov    $0x1,%esi
bswap  %eax
mov    %eax,0x4(%ebx)
jmp    80504e1 <__sprintf_chk@plt+0x6e71>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   80495e0 <gethostbyname@plt>
test   %eax,%eax
jne    8050537 <__sprintf_chk@plt+0x6ec7>
call   8049460 <__errno_location@plt>
mov    %eax,%ebx
call   8049330 <__h_errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%ebx)
mov    $0xffffffff,%esi
jmp    80504e1 <__sprintf_chk@plt+0x6e71>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    0x28(%esp),%ebx
movzwl (%edx),%eax
sub    $0x1,%eax
cmp    $0xfffd,%ax
ja     80506e0 <__sprintf_chk@plt+0x7070>
mov    %ebx,(%esp)
mov    $0x8064fc0,%eax
call   80501f0 <__sprintf_chk@plt+0x6b80>
xor    %edx,%edx
test   %eax,%eax
mov    $0x8064fc0,%eax
cmove  %eax,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x28(%esp)
movl   $0x8064fc0,0x20(%esp)
mov    %eax,0x24(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80585c0 <__sprintf_chk@plt+0xef50>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x805db89,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     805075f <__sprintf_chk@plt+0x70ef>
mov    0x38(%esp),%eax
test   %eax,%eax
je     8050768 <__sprintf_chk@plt+0x70f8>
ror    $0x8,%bx
movzwl %bx,%ebx
mov    %ebx,0x10(%esp)
movl   $0x805b270,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8064f00,(%esp)
call   8049670 <__sprintf_chk@plt>
mov    $0x8064f00,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
cmpb   $0x0,0x8064ee0
je     8050860 <__sprintf_chk@plt+0x71f0>
mov    0x34(%esp),%eax
movb   $0x0,0x8064f00
movzbl (%eax),%eax
cmp    $0x74,%eax
je     8050818 <__sprintf_chk@plt+0x71a8>
cmp    $0x75,%eax
jne    8050a2a <__sprintf_chk@plt+0x73ba>
mov    0x34(%esp),%eax
cmpb   $0x64,0x1(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
cmpb   $0x70,0x2(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
cmpb   $0x0,0x3(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
mov    0x8065048,%eax
test   %eax,%eax
jne    80507cb <__sprintf_chk@plt+0x715b>
jmp    805072b <__sprintf_chk@plt+0x70bb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
test   %eax,%eax
je     805072b <__sprintf_chk@plt+0x70bb>
cmp    (%eax),%ebx
lea    0x0(%esi),%esi
jne    80507c0 <__sprintf_chk@plt+0x7150>
mov    0x4(%eax),%eax
movl   $0x805ec5c,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x8064f00,(%esp)
call   8049670 <__sprintf_chk@plt>
cmpb   $0x0,0x8064f00
je     805072b <__sprintf_chk@plt+0x70bb>
add    $0x20,%esp
mov    $0x8064f00,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x34(%esp),%eax
cmpb   $0x63,0x1(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
cmpb   $0x70,0x2(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
cmpb   $0x0,0x3(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
mov    0x806504c,%eax
test   %eax,%eax
jne    8050853 <__sprintf_chk@plt+0x71e3>
jmp    805072b <__sprintf_chk@plt+0x70bb>
mov    0x8(%eax),%eax
test   %eax,%eax
je     805072b <__sprintf_chk@plt+0x70bb>
cmp    (%eax),%ebx
jne    8050848 <__sprintf_chk@plt+0x71d8>
jmp    80507d2 <__sprintf_chk@plt+0x7162>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,(%esp)
call   8049420 <setservent@plt>
lea    0x0(%esi,%eiz,1),%esi
call   8049220 <getservent@plt>
test   %eax,%eax
mov    %eax,%edi
je     80508f0 <__sprintf_chk@plt+0x7280>
movl   $0xc,(%esp)
call   80492d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     80509d8 <__sprintf_chk@plt+0x7368>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049440 <__strdup@plt>
mov    %eax,0x4(%esi)
mov    0x8(%edi),%eax
mov    %eax,(%esi)
mov    0xc(%edi),%eax
movzbl (%eax),%edx
cmp    $0x74,%edx
je     8050970 <__sprintf_chk@plt+0x7300>
cmp    $0x75,%edx
jne    8050a7c <__sprintf_chk@plt+0x740c>
cmpb   $0x64,0x1(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x70,0x2(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x0,0x3(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
mov    0x8065048,%eax
test   %eax,%eax
je     8050a18 <__sprintf_chk@plt+0x73a8>
mov    %eax,0x8(%esi)
mov    %esi,0x8065048
call   8049220 <getservent@plt>
test   %eax,%eax
mov    %eax,%edi
jne    805087b <__sprintf_chk@plt+0x720b>
xchg   %ax,%ax
call   8049650 <endservent@plt>
movl   $0x1,(%esp)
call   80493f0 <setprotoent@plt>
call   80495a0 <getprotoent@plt>
test   %eax,%eax
mov    %eax,%edi
je     8050959 <__sprintf_chk@plt+0x72e9>
movl   $0xc,(%esp)
call   80492d0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     80509f0 <__sprintf_chk@plt+0x7380>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049440 <__strdup@plt>
mov    %eax,0x4(%esi)
movzwl 0x8(%edi),%eax
ror    $0x8,%ax
movzwl %ax,%eax
mov    %eax,(%esi)
mov    0x8065044,%eax
test   %eax,%eax
je     80509a8 <__sprintf_chk@plt+0x7338>
mov    %eax,0x8(%esi)
mov    %esi,0x8065044
call   80495a0 <getprotoent@plt>
test   %eax,%eax
mov    %eax,%edi
jne    805090c <__sprintf_chk@plt+0x729c>
call   80492a0 <endprotoent@plt>
movb   $0x1,0x8064ee0
jmp    8050775 <__sprintf_chk@plt+0x7105>
lea    0x0(%esi),%esi
cmpb   $0x63,0x1(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x70,0x2(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x0,0x3(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
mov    0x806504c,%eax
test   %eax,%eax
je     80509c0 <__sprintf_chk@plt+0x7350>
mov    %eax,0x8(%esi)
mov    %esi,0x806504c
jmp    8050870 <__sprintf_chk@plt+0x7200>
lea    0x0(%esi),%esi
mov    %esi,0x8065044
movl   $0x0,0x8(%esi)
jmp    8050901 <__sprintf_chk@plt+0x7291>
lea    0x0(%esi),%esi
mov    %esi,0x806504c
movl   $0x0,0x8(%esi)
jmp    8050870 <__sprintf_chk@plt+0x7200>
lea    0x0(%esi),%esi
movl   $0x805bc84,(%esp)
call   8049280 <perror@plt>
jmp    8050891 <__sprintf_chk@plt+0x7221>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805bc84,(%esp)
call   8049280 <perror@plt>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049440 <__strdup@plt>
mov    %eax,0x4
movzwl 0x8(%edi),%eax
jmp    8050933 <__sprintf_chk@plt+0x72c3>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8065048
movl   $0x0,0x8(%esi)
jmp    8050870 <__sprintf_chk@plt+0x7200>
cmp    $0x72,%eax
jne    805072b <__sprintf_chk@plt+0x70bb>
mov    0x34(%esp),%eax
cmpb   $0x61,0x1(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
cmpb   $0x77,0x2(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
cmpb   $0x0,0x3(%eax)
jne    805072b <__sprintf_chk@plt+0x70bb>
mov    0x8065044,%eax
test   %eax,%eax
jne    8050a73 <__sprintf_chk@plt+0x7403>
jmp    805072b <__sprintf_chk@plt+0x70bb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
test   %eax,%eax
je     805072b <__sprintf_chk@plt+0x70bb>
cmp    (%eax),%ebx
jne    8050a68 <__sprintf_chk@plt+0x73f8>
jmp    80507d2 <__sprintf_chk@plt+0x7162>
cmp    $0x72,%edx
nop
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x61,0x1(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x77,0x2(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
cmpb   $0x0,0x3(%eax)
jne    8050870 <__sprintf_chk@plt+0x7200>
mov    0x8065044,%eax
test   %eax,%eax
je     8050abb <__sprintf_chk@plt+0x744b>
mov    %eax,0x8(%esi)
mov    %esi,0x8065044
jmp    8050870 <__sprintf_chk@plt+0x7200>
mov    %esi,0x8065044
movl   $0x0,0x8(%esi)
jmp    8050870 <__sprintf_chk@plt+0x7200>
xchg   %ax,%ax
nop
jmp    8049490 <herror@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    (%eax),%ecx
mov    %ebx,%esi
test   %ecx,%ecx
jne    8050b08 <__sprintf_chk@plt+0x7498>
mov    0x4(%eax),%edx
test   %edx,%edx
jne    8050b08 <__sprintf_chk@plt+0x7498>
cmpl   $0xffff0000,0x8(%eax)
je     8050b10 <__sprintf_chk@plt+0x74a0>
lea    0x0(%esi),%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
movl   $0x2e,0x4(%esp)
mov    %ebx,(%esp)
call   80493a0 <strchr@plt>
test   %eax,%eax
je     8050b08 <__sprintf_chk@plt+0x7498>
cmp    %eax,%ebx
jb     8050b37 <__sprintf_chk@plt+0x74c7>
jmp    8050b50 <__sprintf_chk@plt+0x74e0>
lea    0x0(%esi),%esi
sub    $0x1,%eax
cmp    %ebx,%eax
je     8050b50 <__sprintf_chk@plt+0x74e0>
cmpb   $0x3a,(%eax)
jne    8050b30 <__sprintf_chk@plt+0x74c0>
add    $0x1,%eax
mov    %eax,%edx
cmove  %ebx,%edx
add    $0x14,%esp
mov    %edx,%esi
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmpb   $0x3a,(%eax)
je     8050b3c <__sprintf_chk@plt+0x74cc>
mov    %ebx,%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x50,%esp
cmpl   $0x1,0x60(%esp)
mov    0x64(%esp),%esi
mov    0x68(%esp),%ebx
je     8050c00 <__sprintf_chk@plt+0x7590>
movl   $0x0,0x30(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     8050b7b <__sprintf_chk@plt+0x750b>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
movl   $0xa,0x34(%esp)
call   8049580 <getaddrinfo@plt>
test   %eax,%eax
jne    8050c72 <__sprintf_chk@plt+0x7602>
mov    0x2c(%esp),%edx
mov    0x14(%edx),%eax
mov    (%eax),%ecx
mov    %ecx,(%ebx)
mov    0x4(%eax),%ecx
mov    %ecx,0x4(%ebx)
mov    0x8(%eax),%ecx
mov    %ecx,0x8(%ebx)
mov    0xc(%eax),%ecx
mov    %ecx,0xc(%ebx)
mov    0x10(%eax),%ecx
mov    %ecx,0x10(%ebx)
mov    0x14(%eax),%ecx
mov    %ecx,0x14(%ebx)
mov    0x18(%eax),%eax
mov    %eax,0x18(%ebx)
xor    %ebx,%ebx
mov    %edx,(%esp)
call   8049500 <freeaddrinfo@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0xa,%eax
mov    %ax,(%ebx)
add    $0x8,%ebx
mov    %dx,-0x6(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,-0x4(%ebx)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   8049120 <inet_pton@plt>
test   %eax,%eax
jle    8050c97 <__sprintf_chk@plt+0x7627>
mov    %ebx,0x4(%esp)
mov    $0x10,%ebx
mov    %esi,(%esp)
call   8050ae0 <__sprintf_chk@plt+0x7470>
cmp    %eax,%esi
mov    %eax,%edi
je     8050c69 <__sprintf_chk@plt+0x75f9>
mov    %eax,(%esp)
call   80493c0 <strlen@plt>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   8049130 <memcpy@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,0x10(%esp)
mov    0x8064740,%eax
mov    %esi,0xc(%esp)
movl   $0x805db8b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0xffffffff,%ebx
jmp    8050c69 <__sprintf_chk@plt+0x75f9>
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ecx
movzwl (%ebx),%eax
lea    -0x1(%eax),%edx
cmp    $0xfffd,%dx
ja     8050d40 <__sprintf_chk@plt+0x76d0>
cmp    $0xa,%ax
jne    8050dd0 <__sprintf_chk@plt+0x7760>
test   $0x7fff,%ecx
jne    8050d70 <__sprintf_chk@plt+0x7700>
mov    0x8(%ebx),%eax
test   %eax,%eax
jne    8050ce4 <__sprintf_chk@plt+0x7674>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     8050d98 <__sprintf_chk@plt+0x7728>
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0xff,0xc(%esp)
movl   $0x80650c0,0x8(%esp)
movl   $0x1c,0x4(%esp)
mov    %ebx,(%esp)
call   80491e0 <getnameinfo@plt>
test   %eax,%eax
jne    8050e01 <__sprintf_chk@plt+0x7791>
add    $0x8,%ebx
mov    %ebx,0x34(%esp)
movl   $0x80650c0,0x30(%esp)
add    $0x28,%esp
pop    %ebx
jmp    8050ae0 <__sprintf_chk@plt+0x7470>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x80650c0,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%ebx
movl   $0x50,0xc(%esp)
movl   $0x80650c0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,(%esp)
call   8049550 <inet_ntop@plt>
jmp    8050d27 <__sprintf_chk@plt+0x76b7>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edx
test   %edx,%edx
jne    8050ce4 <__sprintf_chk@plt+0x7674>
mov    0x14(%ebx),%eax
test   %eax,%eax
jne    8050ce4 <__sprintf_chk@plt+0x7674>
and    $0x80,%ch
je     8050de8 <__sprintf_chk@plt+0x7778>
movl   $0x61666564,0x80650c0
61
add    $0x8,%ebx
movl   $0x746c75,0x80650c4
00
jmp    8050d27 <__sprintf_chk@plt+0x76b7>
nop
call   8049460 <__errno_location@plt>
movl   $0x61,(%eax)
movl   $0x805dbb4,(%esp)
jmp    8050d47 <__sprintf_chk@plt+0x76d7>
nop
movl   $0x5d3a3a5b,0x80650c0
5d
add    $0x8,%ebx
movb   $0x0,0x80650c4
jmp    8050d27 <__sprintf_chk@plt+0x76b7>
mov    0x8064740,%eax
movl   $0x13,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805dba0,(%esp)
mov    %eax,0xc(%esp)
call   8049290 <fwrite@plt>
jmp    8050ddb <__sprintf_chk@plt+0x776b>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x50,0xc(%esp)
movl   $0x8065060,0x8(%esp)
movl   $0xa,(%esp)
mov    %ebx,0x4(%esp)
call   8049550 <inet_ntop@plt>
mov    %ebx,0x4(%esp)
movl   $0x8065060,(%esp)
call   8050ae0 <__sprintf_chk@plt+0x7470>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x129c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805dbd1,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x128c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x98(%esp)
je     8051554 <__sprintf_chk@plt+0x7ee4>
mov    0x12b4(%esp),%eax
and    $0x1000000,%eax
mov    %eax,0x9c(%esp)
jne    8051360 <__sprintf_chk@plt+0x7cf0>
movl   $0x805dc01,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805dcb8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
lea    0x0(%esi),%esi
mov    0x98(%esp),%eax
movl   $0x3ff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x28c(%esp),%eax
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8051528 <__sprintf_chk@plt+0x7eb8>
lea    0x134(%esp),%eax
mov    %eax,0x80(%esp)
lea    0xa4(%esp),%eax
mov    %eax,0x7c(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0x78(%esp)
lea    0xac(%esp),%eax
mov    %eax,0x74(%esp)
lea    0xa8(%esp),%eax
mov    %eax,0x70(%esp)
lea    0x12f(%esp),%eax
mov    %eax,0x6c(%esp)
lea    0x12a(%esp),%eax
mov    %eax,0x68(%esp)
lea    0x125(%esp),%eax
mov    %eax,0x64(%esp)
lea    0x120(%esp),%eax
mov    %eax,0x60(%esp)
lea    0x11b(%esp),%eax
mov    %eax,0x5c(%esp)
lea    0x116(%esp),%eax
mov    %eax,0x58(%esp)
lea    0x107(%esp),%edx
lea    0x111(%esp),%eax
mov    %eax,0x54(%esp)
lea    0x10c(%esp),%eax
mov    %edx,0x48(%esp)
lea    0x102(%esp),%edx
mov    %eax,0x50(%esp)
lea    0xb8(%esp),%eax
mov    %edx,0x44(%esp)
lea    0xfd(%esp),%edx
mov    %eax,0x4c(%esp)
lea    0xe4(%esp),%eax
mov    %edx,0x40(%esp)
lea    0xf8(%esp),%edx
mov    %edx,0x3c(%esp)
lea    0xf3(%esp),%edx
mov    %eax,0x2c(%esp)
lea    0xb4(%esp),%eax
mov    %edx,0x38(%esp)
lea    0xee(%esp),%edx
mov    %eax,0x28(%esp)
lea    0xdf(%esp),%eax
mov    %edx,0x34(%esp)
lea    0xe9(%esp),%edx
mov    %eax,0x24(%esp)
lea    0xbc(%esp),%eax
lea    0xda(%esp),%ecx
mov    %edx,0x30(%esp)
lea    0xd0(%esp),%ebp
lea    0xd5(%esp),%edx
mov    %eax,0x8(%esp)
lea    0xcb(%esp),%edi
lea    0x28c(%esp),%eax
lea    0xc6(%esp),%esi
lea    0xc1(%esp),%ebx
mov    %ecx,0x20(%esp)
mov    %ecx,0x94(%esp)
mov    %edx,0x1c(%esp)
mov    %edx,0x90(%esp)
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x805dd08,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
mov    0x90(%esp),%edx
testb  $0x1,0xa7(%esp)
mov    0x94(%esp),%ecx
je     8051388 <__sprintf_chk@plt+0x7d18>
mov    0x9c(%esp),%eax
test   %eax,%eax
je     8050f00 <__sprintf_chk@plt+0x7890>
lea    0xdf(%esp),%eax
mov    %eax,0x30(%esp)
lea    0xbc(%esp),%eax
mov    %ebx,0x18(%esp)
lea    0x18c(%esp),%ebx
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %ebp,0x24(%esp)
lea    0x20c(%esp),%ebp
mov    %edi,0x20(%esp)
mov    %esi,0x1c(%esp)
lea    0x154(%esp),%esi
mov    %eax,0x14(%esp)
movl   $0x805dc1c,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    0xb4(%esp),%edi
mov    %esi,(%esp)
lea    0x170(%esp),%esi
movl   $0x1,0x4(%esp)
call   *0x8064134
mov    %edi,0x18(%esp)
lea    0x144(%esp),%edi
movl   $0x805e6bb,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
lea    0x12f(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x12a(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x125(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x120(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x11b(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x116(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x111(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x10c(%esp),%eax
mov    %eax,0x14(%esp)
movl   $0x805dc1c,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    %esi,(%esp)
movl   $0x1,0x4(%esp)
call   *0x8064134
movl   $0x805ec5c,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
call   8049430 <snprintf@plt>
mov    0xa4(%esp),%esi
movb   $0x0,0x144(%esp)
test   $0x1,%esi
jne    8051510 <__sprintf_chk@plt+0x7ea0>
test   $0x200,%esi
jne    8051460 <__sprintf_chk@plt+0x7df0>
test   $0x2,%esi
jne    8051484 <__sprintf_chk@plt+0x7e14>
test   $0x4,%esi
jne    80514a8 <__sprintf_chk@plt+0x7e38>
test   $0x10000,%esi
jne    80514cc <__sprintf_chk@plt+0x7e5c>
test   $0x40000,%esi
jne    80514f0 <__sprintf_chk@plt+0x7e80>
test   $0x1000000,%esi
jne    8051440 <__sprintf_chk@plt+0x7dd0>
test   $0x20000,%esi
jne    8051420 <__sprintf_chk@plt+0x7db0>
test   $0x400000,%esi
jne    8051400 <__sprintf_chk@plt+0x7d90>
test   $0x20,%esi
jne    80513e0 <__sprintf_chk@plt+0x7d70>
test   $0x200000,%esi
jne    80513c0 <__sprintf_chk@plt+0x7d50>
and    $0x2000000,%esi
jne    80513a0 <__sprintf_chk@plt+0x7d30>
lea    0x134(%esp),%eax
mov    %eax,0x20(%esp)
mov    0xb0(%esp),%eax
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0xac(%esp),%eax
movl   $0x805dd78,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x18(%esp)
mov    0xa8(%esp),%eax
mov    %eax,0x14(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8050f00 <__sprintf_chk@plt+0x7890>
lea    0x0(%esi),%esi
movl   $0x805dbe6,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8050ee1 <__sprintf_chk@plt+0x7871>
lea    0x0(%esi,%eiz,1),%esi
mov    0x9c(%esp),%eax
test   %eax,%eax
jne    8050f00 <__sprintf_chk@plt+0x7890>
jmp    80510d2 <__sprintf_chk@plt+0x7a62>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x10,0x8(%esp)
movl   $0x805e0ab,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8051309 <__sprintf_chk@plt+0x7c99>
lea    0x0(%esi),%esi
movl   $0x10,0x8(%esp)
movl   $0x805dae6,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80512fd <__sprintf_chk@plt+0x7c8d>
lea    0x0(%esi),%esi
movl   $0x10,0x8(%esp)
movl   $0x805c2a5,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80512f1 <__sprintf_chk@plt+0x7c81>
lea    0x0(%esi),%esi
movl   $0x10,0x8(%esp)
movl   $0x805e079,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80512e5 <__sprintf_chk@plt+0x7c75>
lea    0x0(%esi),%esi
movl   $0x10,0x8(%esp)
movl   $0x805f538,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80512d9 <__sprintf_chk@plt+0x7c69>
lea    0x0(%esi),%esi
movl   $0x10,0x8(%esp)
movl   $0x805d990,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80512cd <__sprintf_chk@plt+0x7c5d>
lea    0x0(%esi),%esi
movl   $0x10,0x8(%esp)
movl   $0x805dc34,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x2,%esi
je     805129d <__sprintf_chk@plt+0x7c2d>
movl   $0x10,0x8(%esp)
movl   $0x805b551,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x4,%esi
je     80512a9 <__sprintf_chk@plt+0x7c39>
movl   $0x10,0x8(%esp)
movl   $0x805e095,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x10000,%esi
je     80512b5 <__sprintf_chk@plt+0x7c45>
movl   $0x10,0x8(%esp)
movl   $0x805b3e4,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x40000,%esi
je     80512c1 <__sprintf_chk@plt+0x7c51>
movl   $0x10,0x8(%esp)
movl   $0x805dc36,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80512c1 <__sprintf_chk@plt+0x7c51>
lea    0x0(%esi),%esi
mov    $0x55,%eax
mov    %ax,0x144(%esp)
jmp    8051285 <__sprintf_chk@plt+0x7c15>
lea    0x0(%esi),%esi
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x128c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8051583 <__sprintf_chk@plt+0x7f13>
add    $0x129c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x805dbd1,(%esp)
call   8049280 <perror@plt>
movl   $0x805dc88,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    8051539 <__sprintf_chk@plt+0x7ec9>
call   80491c0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x11dc,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805dc38,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x11cc(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x7c(%esp)
je     8051cf8 <__sprintf_chk@plt+0x8688>
movl   $0x805dc48,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x2,0x11f0(%esp)
je     8051cd0 <__sprintf_chk@plt+0x8660>
movl   $0x805ddf4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    805171d <__sprintf_chk@plt+0x80ad>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%eax
je     8051ba8 <__sprintf_chk@plt+0x8538>
jle    8051b80 <__sprintf_chk@plt+0x8510>
cmp    $0x2,%eax
je     8051c18 <__sprintf_chk@plt+0x85a8>
cmp    $0x4,%eax
jne    8051be0 <__sprintf_chk@plt+0x8570>
mov    $0x45,%eax
lea    0x11c(%esp),%esi
movl   $0x4c415453,0x11c(%esp)
4c
mov    %ax,0x120(%esp)
mov    0x88(%esp),%eax
mov    %esi,0x1c(%esp)
mov    %ebp,0x14(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x18(%esp)
lea    0xe8(%esp),%eax
mov    %eax,0x10(%esp)
mov    %edi,0x8(%esp)
movl   $0x805ded8,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x2,0x94(%esp)
je     8051af8 <__sprintf_chk@plt+0x8488>
mov    0x9c(%esp),%eax
xor    %ecx,%ecx
mov    0x98(%esp),%edx
xor    %ebx,%ebx
mov    %edx,%esi
sub    %eax,%esi
cmp    %eax,%edx
cmovg  %esi,%ebx
cmpl   $0x2,0x11f0(%esp)
je     8051711 <__sprintf_chk@plt+0x80a1>
mov    %ecx,%eax
mov    $0x51eb851f,%esi
imul   %esi
sar    $0x1f,%ecx
movl   $0x805dc73,0x4(%esp)
movl   $0x1,(%esp)
sar    $0x5,%edx
sub    %ecx,%edx
mov    %edx,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x88(%esp),%eax
test   %eax,%eax
je     8051b18 <__sprintf_chk@plt+0x84a8>
movl   $0x805dc7b,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
mov    0x7c(%esp),%eax
movl   $0x3ff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x1cc(%esp),%eax
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8051ca0 <__sprintf_chk@plt+0x8630>
lea    0xbd(%esp),%eax
mov    %eax,0x68(%esp)
lea    0xba(%esp),%eax
mov    %eax,0x64(%esp)
lea    0xb7(%esp),%eax
mov    %eax,0x60(%esp)
lea    0xb4(%esp),%eax
mov    %eax,0x5c(%esp)
lea    0xb1(%esp),%eax
mov    %eax,0x58(%esp)
lea    0xae(%esp),%eax
mov    %eax,0x54(%esp)
lea    0xe8(%esp),%eax
mov    %eax,0x50(%esp)
lea    0xa4(%esp),%eax
mov    %eax,0x4c(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x48(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x44(%esp)
lea    0xa8(%esp),%eax
mov    %eax,0x40(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0xa0(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x34(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x90(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xe3(%esp),%eax
mov    %eax,0x24(%esp)
lea    0xc0(%esp),%eax
lea    0xde(%esp),%ecx
lea    0xd9(%esp),%edx
lea    0xd4(%esp),%ebp
lea    0xcf(%esp),%edi
lea    0xca(%esp),%esi
lea    0xc5(%esp),%ebx
mov    %eax,0x8(%esp)
lea    0x1cc(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x805de70,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x78(%esp)
mov    %edx,0x74(%esp)
call   8049540 <sscanf@plt>
mov    0x78(%esp),%ecx
lea    0xe3(%esp),%eax
mov    0x74(%esp),%edx
mov    %eax,0x30(%esp)
lea    0xc0(%esp),%eax
mov    %edi,0x20(%esp)
lea    0x14c(%esp),%edi
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %ebp,0x24(%esp)
lea    0xf8(%esp),%ebp
mov    %esi,0x1c(%esp)
mov    %ebx,0x18(%esp)
lea    0x130(%esp),%ebx
mov    %eax,0x14(%esp)
movl   $0x805dc1c,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %edi,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    0x11f4(%esp),%eax
mov    0x8c(%esp),%esi
mov    %ebx,(%esp)
lea    0x108(%esp),%ebx
mov    %eax,0x4(%esp)
call   *0x8064134
mov    %esi,0x18(%esp)
movl   $0x805e6bb,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edi,(%esp)
call   80490a0 <__snprintf_chk@plt>
lea    0xbd(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xba(%esp),%eax
mov    %eax,0x24(%esp)
lea    0xb7(%esp),%eax
mov    %eax,0x20(%esp)
lea    0xb4(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0xb1(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xae(%esp),%eax
mov    %eax,0x14(%esp)
movl   $0x805dc22,0x10(%esp)
movl   $0x14,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x14,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    0xa4(%esp),%esi
movb   $0x0,0xf8(%esp)
test   $0x80,%esi
jne    8051ae0 <__sprintf_chk@plt+0x8470>
test   $0x4,%esi
jne    8051a98 <__sprintf_chk@plt+0x8428>
test   $0x2,%esi
jne    8051abc <__sprintf_chk@plt+0x844c>
and    $0x8,%esi
jne    8051a50 <__sprintf_chk@plt+0x83e0>
mov    0x94(%esp),%eax
cmp    $0x8,%eax
je     8051a74 <__sprintf_chk@plt+0x8404>
jle    8051618 <__sprintf_chk@plt+0x7fa8>
cmp    $0x20,%eax
je     8051c48 <__sprintf_chk@plt+0x85d8>
lea    0x0(%esi),%esi
jle    8051b50 <__sprintf_chk@plt+0x84e0>
cmp    $0x40,%eax
je     8051c78 <__sprintf_chk@plt+0x8608>
cmp    $0x80,%eax
jne    8051be0 <__sprintf_chk@plt+0x8570>
lea    0x11c(%esp),%esi
movl   $0x4d524550,0x11c(%esp)
4d
movb   $0x0,0x120(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x10,0x8(%esp)
movl   $0x805f500,0x4(%esp)
mov    %ebp,(%esp)
call   8049090 <__strcat_chk@plt>
mov    0x94(%esp),%eax
cmp    $0x8,%eax
jne    80519fe <__sprintf_chk@plt+0x838e>
mov    $0x59,%eax
lea    0x11c(%esp),%esi
movl   $0x414c4544,0x11c(%esp)
41
mov    %ax,0x120(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
movl   $0x10,0x8(%esp)
movl   $0x805daa8,0x4(%esp)
mov    %ebp,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x2,%esi
je     80519ed <__sprintf_chk@plt+0x837d>
movl   $0x10,0x8(%esp)
movl   $0x805ef66,0x4(%esp)
mov    %ebp,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80519ed <__sprintf_chk@plt+0x837d>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x52,%eax
mov    %ax,0xf8(%esp)
jmp    80519d5 <__sprintf_chk@plt+0x8365>
lea    0x0(%esi),%esi
mov    0xa8(%esp),%ecx
mov    0x9c(%esp),%eax
cmp    %eax,%ecx
jle    8051b48 <__sprintf_chk@plt+0x84d8>
sub    %eax,%ecx
jmp    80516a9 <__sprintf_chk@plt+0x8039>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
imul   %esi
sar    $0x1f,%ebx
movl   $0x805dc7f,0x4(%esp)
movl   $0x1,(%esp)
sar    $0x5,%edx
sub    %ebx,%edx
mov    %edx,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8051711 <__sprintf_chk@plt+0x80a1>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
jmp    80516a9 <__sprintf_chk@plt+0x8039>
nop
cmp    $0x10,%eax
jne    8051be0 <__sprintf_chk@plt+0x8570>
mov    $0x45,%eax
lea    0x11c(%esp),%esi
movl   $0x424f5250,0x11c(%esp)
42
mov    %ax,0x120(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
lea    0x0(%esi),%esi
test   %eax,%eax
jne    8051be0 <__sprintf_chk@plt+0x8570>
lea    0x11c(%esp),%esi
movl   $0x454e4f4e,0x11c(%esp)
45
movb   $0x0,0x120(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x4554,%eax
lea    0x11c(%esp),%esi
movl   $0x4f434e49,0x11c(%esp)
4f
movl   $0x454c504d,0x120(%esp)
45
mov    %ax,0x124(%esp)
movb   $0x0,0x126(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
nop
lea    0x11c(%esp),%esi
mov    %eax,0x14(%esp)
movl   $0x805dc65,0x10(%esp)
movl   $0x14,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x14,0x4(%esp)
mov    %esi,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
mov    $0x45,%eax
lea    0x11c(%esp),%esi
movl   $0x43414552,0x11c(%esp)
43
movl   $0x4c424148,0x120(%esp)
4c
mov    %ax,0x124(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
nop
mov    $0x4445,%ecx
lea    0x11c(%esp),%esi
movl   $0x4c494146,0x11c(%esp)
4c
mov    %cx,0x120(%esp)
movb   $0x0,0x122(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x50,%edx
lea    0x11c(%esp),%esi
movl   $0x52414f4e,0x11c(%esp)
52
mov    %dx,0x120(%esp)
jmp    8051658 <__sprintf_chk@plt+0x7fe8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x11cc(%esp),%edi
xor    %gs:0x14,%edi
jne    8051d19 <__sprintf_chk@plt+0x86a9>
add    $0x11dc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805dd9c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    805171d <__sprintf_chk@plt+0x80ad>
lea    0x0(%esi,%eiz,1),%esi
mov    0x11f4(%esp),%eax
or     $0x1000000,%eax
mov    %eax,0x4(%esp)
mov    0x11f0(%esp),%eax
mov    %eax,(%esp)
call   8050e70 <__sprintf_chk@plt+0x7800>
jmp    8051cae <__sprintf_chk@plt+0x863e>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %edi
mov    $0x2,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,%esi
mov    %ebx,%edi
and    $0x3,%esi
and    $0x24,%edi
test   $0x80,%bl
jne    8051d50 <__sprintf_chk@plt+0x86e0>
and    $0x40,%ebx
jne    8051d68 <__sprintf_chk@plt+0x86f8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8050e70 <__sprintf_chk@plt+0x7800>
test   %eax,%eax
jne    8051d43 <__sprintf_chk@plt+0x86d3>
and    $0x40,%ebx
je     8051d43 <__sprintf_chk@plt+0x86d3>
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8051590 <__sprintf_chk@plt+0x7f20>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x805defc,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805df24,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x805df68,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0x4,%eax
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x1e,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x1bc,%esp
mov    %eax,0x18(%esp)
lea    0x134(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x1ac(%esp)
xor    %eax,%eax
mov    %edx,0x10(%esp)
movl   $0x454e4f4e,0x12c(%esp)
45
movl   $0x0,0x130(%esp)
00
rep stos %eax,%es:(%edi)
mov    (%edx),%eax
test   %eax,%eax
je     8052088 <__sprintf_chk@plt+0x8a18>
mov    0x10(%esp),%esi
lea    0xac(%esp),%ebx
mov    $0x805db81,%edi
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80494c0 <__strcpy_chk@plt>
lea    0x4(%esi),%ebp
mov    $0x8,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8052210 <__sprintf_chk@plt+0x8ba0>
movl   $0x2f,0x4(%esp)
mov    $0x80,%esi
mov    %ebx,(%esp)
call   80493a0 <strchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     8051ecb <__sprintf_chk@plt+0x885b>
lea    0x1(%eax),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
cmp    $0x80,%eax
mov    %eax,%esi
ja     80522e0 <__sprintf_chk@plt+0x8c70>
movb   $0x0,(%edi)
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
test   %eax,%eax
js     80522f0 <__sprintf_chk@plt+0x8c80>
xor    %eax,%eax
mov    $0x12,%ecx
lea    0x64(%esp),%edi
cmp    $0x80,%esi
mov    %edi,0x1c(%esp)
rep stos %eax,%es:(%edi)
mov    0x30(%esp),%eax
mov    %eax,0x64(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x68(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x6c(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x70(%esp)
je     80520b0 <__sprintf_chk@plt+0x8a40>
movl   $0x1,0xa4(%esp)
00
mov    0x10(%esp),%eax
movl   $0x1,0x9c(%esp)
00
mov    %si,0x98(%esp)
movl   $0x0,0x10(%esp)
mov    0x4(%eax),%ebx
test   %ebx,%ebx
je     8051fc0 <__sprintf_chk@plt+0x8950>
mov    $0x805dfca,%edi
mov    %ebx,%esi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80520c8 <__sprintf_chk@plt+0x8a58>
mov    0x4(%ebp),%ebx
test   %ebx,%ebx
je     8052088 <__sprintf_chk@plt+0x8a18>
call   8049640 <__ctype_b_loc@plt>
movsbl (%ebx),%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
je     8052088 <__sprintf_chk@plt+0x8a18>
mov    %ebx,(%esp)
add    $0x8,%ebp
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   80495f0 <strtol@plt>
mov    0x0(%ebp),%ebx
test   %ebx,%ebx
mov    %eax,0x9c(%esp)
jne    8051f5e <__sprintf_chk@plt+0x88ee>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
movl   $0xa,(%esp)
call   8049570 <socket@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x8064154
js     8052377 <__sprintf_chk@plt+0x8d07>
mov    0x10(%esp),%eax
test   %eax,%eax
je     805238d <__sprintf_chk@plt+0x8d1d>
xor    %eax,%eax
movl   $0x0,0x44(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     8051ff9 <__sprintf_chk@plt+0x8989>
mov    0x10(%esp),%eax
movl   $0x10,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8933,0x4(%esp)
mov    %ebx,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     80523d8 <__sprintf_chk@plt+0x8d68>
mov    0x54(%esp),%eax
mov    %eax,0xa8(%esp)
mov    0x1c(%esp),%eax
cmpl   $0x2,0x18(%esp)
mov    %eax,0x8(%esp)
je     805239d <__sprintf_chk@plt+0x8d2d>
movl   $0x890b,0x4(%esp)
mov    %ebx,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     80523ee <__sprintf_chk@plt+0x8d7e>
mov    %ebx,(%esp)
call   8049610 <close@plt>
xor    %eax,%eax
jmp    805208d <__sprintf_chk@plt+0x8a1d>
nop
call   8051d80 <__sprintf_chk@plt+0x8710>
mov    0x1ac(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80523f7 <__sprintf_chk@plt+0x8d87>
add    $0x1bc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0xa4(%esp)
00
mov    $0x80,%esi
jmp    8051f38 <__sprintf_chk@plt+0x88c8>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
cmp    $0x67,%eax
jne    8052190 <__sprintf_chk@plt+0x8b20>
cmpb   $0x77,0x1(%ebx)
je     8052270 <__sprintf_chk@plt+0x8c00>
movl   $0x805dfd1,0x4(%esp)
mov    %ebx,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    805228a <__sprintf_chk@plt+0x8c1a>
xchg   %ax,%ax
mov    0x4(%ebp),%eax
test   %eax,%eax
je     8052088 <__sprintf_chk@plt+0x8a18>
testb  $0x2,0xa4(%esp)
jne    8052088 <__sprintf_chk@plt+0x8a18>
mov    %eax,0x4(%esp)
lea    0x12c(%esp),%eax
movl   $0x80,0x8(%esp)
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x14(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    0x12c(%esp),%eax
mov    %eax,0x4(%esp)
call   *0x8064138
test   %eax,%eax
js     80522c0 <__sprintf_chk@plt+0x8c50>
mov    0x30(%esp),%eax
add    $0x8,%ebp
orl    $0x2,0xa4(%esp)
mov    %eax,0x84(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x88(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8c(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x90(%esp)
mov    0x0(%ebp),%ebx
jmp    8051f5a <__sprintf_chk@plt+0x88ea>
nop
mov    $0x805dfd1,%edi
mov    $0x8,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80520f8 <__sprintf_chk@plt+0x8a88>
cmp    $0x6d,%eax
je     8052280 <__sprintf_chk@plt+0x8c10>
cmp    $0x64,%eax
jne    805228a <__sprintf_chk@plt+0x8c1a>
cmpb   $0x79,0x1(%ebx)
je     8052350 <__sprintf_chk@plt+0x8ce0>
movl   $0x805dff9,0x4(%esp)
mov    %ebx,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
je     80521f2 <__sprintf_chk@plt+0x8b82>
cmpb   $0x65,0x1(%ebx)
jne    80522a2 <__sprintf_chk@plt+0x8c32>
cmpb   $0x76,0x2(%ebx)
jne    80522a2 <__sprintf_chk@plt+0x8c32>
cmpb   $0x0,0x3(%ebx)
jne    80522a2 <__sprintf_chk@plt+0x8c32>
mov    0x4(%ebp),%eax
lea    0x4(%ebp),%edx
test   %eax,%eax
je     8052088 <__sprintf_chk@plt+0x8a18>
mov    0x8(%ebp),%ebx
mov    %eax,0x10(%esp)
lea    0x4(%edx),%ebp
jmp    8051f5a <__sprintf_chk@plt+0x88ea>
nop
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
xor    %eax,%eax
mov    0x14(%esp),%ecx
movl   $0x0,(%ecx,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     805221a <__sprintf_chk@plt+0x8baa>
lea    0x64(%esp),%edi
xor    %eax,%eax
mov    $0x12,%ecx
xor    %esi,%esi
mov    %edi,0x1c(%esp)
rep stos %eax,%es:(%edi)
mov    0x30(%esp),%eax
movl   $0x1,0xa4(%esp)
00
mov    %eax,0x64(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x68(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x6c(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x70(%esp)
jmp    8051f38 <__sprintf_chk@plt+0x88c8>
cmpb   $0x0,0x2(%ebx)
je     80520f8 <__sprintf_chk@plt+0x8a88>
jmp    80520de <__sprintf_chk@plt+0x8a6e>
nop
cmpb   $0x6f,0x1(%ebx)
je     8052328 <__sprintf_chk@plt+0x8cb8>
movl   $0x805dff9,0x4(%esp)
mov    %ebx,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
je     80521f2 <__sprintf_chk@plt+0x8b82>
mov    0x4(%ebp),%edx
test   %edx,%edx
jne    8052088 <__sprintf_chk@plt+0x8a18>
mov    %ebx,0x10(%esp)
mov    %ebp,%edx
xor    %ebx,%ebx
jmp    8052207 <__sprintf_chk@plt+0x8b97>
lea    0x0(%esi),%esi
lea    0x12c(%esp),%eax
mov    %eax,(%esp)
call   *0x806413c
mov    $0x6,%eax
jmp    805208d <__sprintf_chk@plt+0x8a1d>
lea    0x0(%esi),%esi
call   8051d80 <__sprintf_chk@plt+0x8710>
jmp    8051ec8 <__sprintf_chk@plt+0x8858>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   *0x8064138
test   %eax,%eax
jns    8051ef0 <__sprintf_chk@plt+0x8880>
mov    %ebx,(%esp)
call   *0x806413c
mov    $0x1,%eax
jmp    805208d <__sprintf_chk@plt+0x8a1d>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x64,0x2(%ebx)
jne    805228a <__sprintf_chk@plt+0x8c1a>
cmpb   $0x0,0x3(%ebx)
jne    805228a <__sprintf_chk@plt+0x8c1a>
mov    0x4(%ebp),%ebx
add    $0x4,%ebp
orl    $0x20,0xa4(%esp)
jmp    8051f5a <__sprintf_chk@plt+0x88ea>
nop
cmpb   $0x6e,0x2(%ebx)
jne    80521c0 <__sprintf_chk@plt+0x8b50>
cmpb   $0x0,0x3(%ebx)
jne    80521c0 <__sprintf_chk@plt+0x8b50>
mov    0x4(%ebp),%ebx
add    $0x4,%ebp
orl    $0x10,0xa4(%esp)
jmp    8051f5a <__sprintf_chk@plt+0x88ea>
movl   $0x805b6eb,(%esp)
call   8049280 <perror@plt>
mov    $0x7,%eax
jmp    805208d <__sprintf_chk@plt+0x8a1d>
movl   $0x0,0xa8(%esp)
00
jmp    8052050 <__sprintf_chk@plt+0x89e0>
movl   $0x890c,0x4(%esp)
mov    %ebx,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jns    805207b <__sprintf_chk@plt+0x8a0b>
movl   $0x805dfe5,(%esp)
call   8049280 <perror@plt>
mov    0x8064154,%eax
mov    %eax,(%esp)
call   8049610 <close@plt>
mov    $0x7,%eax
jmp    805208d <__sprintf_chk@plt+0x8a1d>
movl   $0x805dfd9,(%esp)
call   8049280 <perror@plt>
mov    $0x7,%eax
jmp    805208d <__sprintf_chk@plt+0x8a1d>
movl   $0x805dfef,(%esp)
jmp    80523bc <__sprintf_chk@plt+0x8d4c>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x28(%esp),%edx
cmp    $0x4,%eax
je     8052430 <__sprintf_chk@plt+0x8dc0>
mov    (%edx),%ecx
test   %ecx,%ecx
je     8052428 <__sprintf_chk@plt+0x8db8>
cmp    $0x3,%eax
je     8052428 <__sprintf_chk@plt+0x8db8>
add    $0x1c,%esp
jmp    8051e00 <__sprintf_chk@plt+0x8790>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
jmp    8051d80 <__sprintf_chk@plt+0x8710>
movl   $0x805df9c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x1c,%esp
jmp    8051d80 <__sprintf_chk@plt+0x8710>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6ac,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805e000,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x69c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x74(%esp)
je     8052f08 <__sprintf_chk@plt+0x9898>
movl   $0x805e010,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x1,0x6c0(%esp)
je     8052ee0 <__sprintf_chk@plt+0x9870>
cmpl   $0x2,0x6c0(%esp)
je     8052eb8 <__sprintf_chk@plt+0x9848>
jg     80529f8 <__sprintf_chk@plt+0x9388>
mov    0x74(%esp),%eax
movl   $0x0,0x64(%esp)
movl   $0x805b270,0x60(%esp)
movl   $0x805e029,0x5c(%esp)
movl   $0x805b270,0x58(%esp)
movl   $0x805e02e,0x54(%esp)
movl   $0x805b270,0x50(%esp)
movl   $0x805e035,0x4c(%esp)
movl   $0x805e039,0x48(%esp)
movl   $0x805e03f,0x44(%esp)
movl   $0x805b270,0x40(%esp)
movl   $0x805e044,0x3c(%esp)
movl   $0x805b270,0x38(%esp)
movl   $0x805e04b,0x34(%esp)
movl   $0x805b270,0x30(%esp)
movl   $0x805e04f,0x2c(%esp)
movl   $0x805b2ad,0x28(%esp)
movl   $0x805e056,0x24(%esp)
movl   $0x805e039,0x20(%esp)
movl   $0x805e05c,0x1c(%esp)
movl   $0x805e039,0x18(%esp)
movl   $0x805e064,0x14(%esp)
movl   $0x805e070,0x10(%esp)
movl   $0x805e075,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x805e000,(%esp)
movl   $0x0,0x98(%esp)
00
movl   $0x0,0x94(%esp)
00
movl   $0x0,0x90(%esp)
00
call   8057d50 <__sprintf_chk@plt+0xe6e0>
test   %eax,%eax
mov    %eax,0x78(%esp)
je     8052f40 <__sprintf_chk@plt+0x98d0>
lea    0x29c(%esp),%ebp
nop
mov    0x74(%esp),%eax
movl   $0x3ff,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8052930 <__sprintf_chk@plt+0x92c0>
lea    0x98(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x90(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x88(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x80(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x11c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0xcc(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
lea    0x21c(%esp),%ebx
lea    0x19c(%esp),%esi
mov    %ebx,0x24(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x9,%eax
jle    80525e0 <__sprintf_chk@plt+0x8f70>
testb  $0x1,0x80(%esp)
je     80525e0 <__sprintf_chk@plt+0x8f70>
lea    0x9c(%esp),%edx
mov    %edx,0x8(%esp)
lea    0xac(%esp),%edi
mov    %edx,0x7c(%esp)
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   *0x80640f8
lea    0x11c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   *0x80640f8
lea    0xbc(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   *0x80640f8
mov    0xc0(%esp),%edx
mov    0x80(%esp),%eax
mov    0x6c4(%esp),%ecx
mov    %edx,0x8(%esp)
mov    0x7c(%esp),%edx
shl    $0xc,%eax
and    $0x4000,%eax
or     $0x80,%ch
or     %eax,%ecx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   80506a0 <__sprintf_chk@plt+0x7030>
movl   $0x80,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x6c4(%esp),%eax
mov    %edi,(%esp)
movb   $0x0,0x1ab(%esp)
or     $0x40,%ah
mov    %eax,0x4(%esp)
call   *0x80640f4
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x11c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
lea    0xbc(%esp),%eax
movb   $0x0,0x12b(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   *0x80640f4
movl   $0x80,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x80(%esp),%edi
movb   $0x0,0x22b(%esp)
movb   $0x0,0xdc(%esp)
test   $0x1,%edi
jne    8052d98 <__sprintf_chk@plt+0x9728>
test   $0x2,%edi
jne    8052a20 <__sprintf_chk@plt+0x93b0>
mov    %edi,%eax
and    $0x200,%eax
mov    %eax,0x7c(%esp)
jne    8052a50 <__sprintf_chk@plt+0x93e0>
test   $0x4,%edi
jne    8052a69 <__sprintf_chk@plt+0x93f9>
test   $0x8,%edi
jne    8052a94 <__sprintf_chk@plt+0x9424>
test   $0x10,%edi
jne    8052abf <__sprintf_chk@plt+0x944f>
test   $0x20,%edi
jne    8052aea <__sprintf_chk@plt+0x947a>
test   $0x10000,%edi
jne    8052b15 <__sprintf_chk@plt+0x94a5>
test   $0x20000,%edi
jne    8052b40 <__sprintf_chk@plt+0x94d0>
test   $0x40000,%edi
jne    8052b6b <__sprintf_chk@plt+0x94fb>
test   $0x200000,%edi
jne    8052b96 <__sprintf_chk@plt+0x9526>
test   $0x400000,%edi
jne    8052bc1 <__sprintf_chk@plt+0x9551>
test   $0x1000000,%edi
jne    8052bec <__sprintf_chk@plt+0x957c>
test   $0x2000000,%edi
jne    8052c17 <__sprintf_chk@plt+0x95a7>
test   $0x4000000,%edi
jne    8052c42 <__sprintf_chk@plt+0x95d2>
test   %edi,%edi
js     8052c69 <__sprintf_chk@plt+0x95f9>
test   $0x40,%edi
jne    8052c98 <__sprintf_chk@plt+0x9628>
test   $0x80,%edi
jne    8052cc3 <__sprintf_chk@plt+0x9653>
test   $0x100,%edi
jne    8052cee <__sprintf_chk@plt+0x967e>
and    $0x400,%edi
jne    8052d19 <__sprintf_chk@plt+0x96a9>
cmpl   $0x1,0x6c0(%esp)
je     8052d46 <__sprintf_chk@plt+0x96d6>
cmpl   $0x2,0x6c0(%esp)
je     8052db0 <__sprintf_chk@plt+0x9740>
jle    80525e0 <__sprintf_chk@plt+0x8f70>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     8052970 <__sprintf_chk@plt+0x9300>
mov    0x8c(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x805e2c8,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x84(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
lea    0xdc(%esp),%eax
mov    %eax,0x10(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80525e0 <__sprintf_chk@plt+0x8f70>
nop
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x69c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8052f4a <__sprintf_chk@plt+0x98da>
add    $0x6ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%eax
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x805e310,0x4(%esp)
mov    %eax,0x30(%esp)
mov    0x94(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x2c(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xcc(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x84(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xdc(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x11c(%esp),%eax
mov    %eax,0xc(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80525e0 <__sprintf_chk@plt+0x8f70>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e1a8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80524d7 <__sprintf_chk@plt+0x8e67>
lea    0x0(%esi,%eiz,1),%esi
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b551,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
mov    %edi,%eax
and    $0x200,%eax
mov    %eax,0x7c(%esp)
je     80527f7 <__sprintf_chk@plt+0x9187>
mov    $0x21,%eax
test   $0x4,%edi
mov    %ax,0xdc(%esp)
je     8052803 <__sprintf_chk@plt+0x9193>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e095,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x8,%edi
je     805280f <__sprintf_chk@plt+0x919f>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e07b,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x10,%edi
je     805281b <__sprintf_chk@plt+0x91ab>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b3e4,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x20,%edi
je     8052827 <__sprintf_chk@plt+0x91b7>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b52a,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x10000,%edi
je     8052833 <__sprintf_chk@plt+0x91c3>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b271,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x20000,%edi
je     805283f <__sprintf_chk@plt+0x91cf>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805f538,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x40000,%edi
je     805284b <__sprintf_chk@plt+0x91db>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805ed58,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x200000,%edi
je     8052857 <__sprintf_chk@plt+0x91e7>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805c20d,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x400000,%edi
je     8052863 <__sprintf_chk@plt+0x91f3>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e079,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x1000000,%edi
je     805286f <__sprintf_chk@plt+0x91ff>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805ed58,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x2000000,%edi
je     805287b <__sprintf_chk@plt+0x920b>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e0ab,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x4000000,%edi
je     8052887 <__sprintf_chk@plt+0x9217>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805bcc1,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   %edi,%edi
jns    805288f <__sprintf_chk@plt+0x921f>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e6ce,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x40,%edi
je     805289b <__sprintf_chk@plt+0x922b>
lea    0x0(%esi,%eiz,1),%esi
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805c71d,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x80,%edi
je     80528a7 <__sprintf_chk@plt+0x9237>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b457,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x100,%edi
je     80528b3 <__sprintf_chk@plt+0x9243>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805f60e,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
and    $0x400,%edi
je     80528bf <__sprintf_chk@plt+0x924f>
lea    0xdc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805dae6,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
cmpl   $0x1,0x6c0(%esp)
jne    80528cd <__sprintf_chk@plt+0x925d>
mov    0x7c(%esp),%ecx
test   %ecx,%ecx
je     8052de8 <__sprintf_chk@plt+0x9778>
mov    0x8c(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x805e20c,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x84(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
lea    0xdc(%esp),%eax
mov    %eax,0x10(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80525e0 <__sprintf_chk@plt+0x8f70>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x55,%eax
mov    %ax,0xdc(%esp)
jmp    80527da <__sprintf_chk@plt+0x916a>
lea    0x0(%esi),%esi
mov    0x7c(%esp),%edx
test   %edx,%edx
je     8052e50 <__sprintf_chk@plt+0x97e0>
lea    0xdc(%esp),%eax
mov    %eax,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x805e268,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80525e0 <__sprintf_chk@plt+0x8f70>
lea    0xcc(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x8c(%esp),%eax
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x805e23c,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x88(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
mov    0x84(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xdc(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x11c(%esp),%eax
mov    %eax,0xc(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80525e0 <__sprintf_chk@plt+0x8f70>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xcc(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x98(%esp),%eax
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x805e2a0,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x94(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xdc(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x11c(%esp),%eax
mov    %eax,0xc(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80525e0 <__sprintf_chk@plt+0x8f70>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e158,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80524d7 <__sprintf_chk@plt+0x8e67>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e108,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80524d7 <__sprintf_chk@plt+0x8e67>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e000,(%esp)
call   8049280 <perror@plt>
movl   $0x805e0dc,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    805294a <__sprintf_chk@plt+0x92da>
lea    0x0(%esi),%esi
mov    $0x1,%eax
jmp    805294a <__sprintf_chk@plt+0x92da>
call   80491c0 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x74c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805e07d,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x73c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x98(%esp)
je     8053de0 <__sprintf_chk@plt+0xa770>
mov    0x98(%esp),%eax
movl   $0x0,0x40(%esp)
movl   $0x40,0x3c(%esp)
movl   $0x805e090,0x38(%esp)
movl   $0x20,0x34(%esp)
movl   $0x805e094,0x30(%esp)
movl   $0x10,0x2c(%esp)
movl   $0x805e097,0x28(%esp)
movl   $0x8,0x24(%esp)
movl   $0x805e09f,0x20(%esp)
movl   $0x4,0x1c(%esp)
movl   $0x805e0a7,0x18(%esp)
movl   $0x2,0x14(%esp)
movl   $0x805e0ad,0x10(%esp)
movl   $0x1,0xc(%esp)
movl   $0x805e029,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x805e07d,(%esp)
call   8057f10 <__sprintf_chk@plt+0xe8a0>
movl   $0x805e0b1,(%esp)
mov    %eax,%esi
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmp    $0x3f,%esi
je     8053b80 <__sprintf_chk@plt+0xa510>
cmp    $0x61,%esi
je     8053480 <__sprintf_chk@plt+0x9e10>
cmp    $0xffffffff,%esi
xchg   %ax,%ax
je     8053b68 <__sprintf_chk@plt+0xa4f8>
mov    %esi,0xc(%esp)
movl   $0x805e07d,0x8(%esp)
movl   $0x805e34c,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <rewind@plt>
cmpl   $0x1,0x760(%esp)
je     8053e48 <__sprintf_chk@plt+0xa7d8>
cmpl   $0x2,0x760(%esp)
je     8053e18 <__sprintf_chk@plt+0xa7a8>
cmp    $0x1,%esi
je     8053b90 <__sprintf_chk@plt+0xa520>
cmp    $0x2,%esi
movl   $0x0,0x9c(%esp)
00
je     8053ca8 <__sprintf_chk@plt+0xa638>
movl   $0x0,0xc4(%esp)
00
movl   $0x0,0xc0(%esp)
00
movl   $0x0,0xbc(%esp)
00
movl   $0x0,0xc8(%esp)
00
movl   $0x0,0xcc(%esp)
00
movl   $0x0,0xd0(%esp)
00
movl   $0x0,0xd4(%esp)
00
movl   $0x0,0xd8(%esp)
00
xchg   %ax,%ax
mov    0x98(%esp),%eax
movl   $0x3ff,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x33c(%esp),%eax
mov    %eax,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8053ae8 <__sprintf_chk@plt+0xa478>
cmp    $0x1,%esi
je     80539c0 <__sprintf_chk@plt+0xa350>
cmp    $0x2,%esi
xchg   %ax,%ax
je     8053490 <__sprintf_chk@plt+0x9e20>
lea    0x2bc(%esp),%eax
mov    %eax,0x94(%esp)
lea    0x13c(%esp),%ebp
lea    0x1bc(%esp),%edi
lea    0xdc(%esp),%ebx
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
call   *0x80640f8
mov    0x764(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x80640f4
movl   $0x80,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %ebx,0x8(%esp)
movb   $0x0,0x1cb(%esp)
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
call   *0x80640f8
mov    0x764(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x80640f4
movl   $0x80,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x94(%esp),%eax
mov    %ebx,0x8(%esp)
movb   $0x0,0x14b(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   *0x80640f8
mov    0x764(%esp),%edx
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   *0x80640f4
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
lea    0x23c(%esp),%eax
mov    %ebx,0x8(%esp)
movb   $0x0,0x2cb(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   *0x80640f8
mov    0x764(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x80640f4
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x23c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
cmp    $0x1,%esi
mov    0xac(%esp),%ebx
movb   $0x0,0x24b(%esp)
movb   $0x0,0xfc(%esp)
je     80538d8 <__sprintf_chk@plt+0xa268>
test   $0x2,%bl
jne    80538b0 <__sprintf_chk@plt+0xa240>
test   $0x2,%bh
jne    8053898 <__sprintf_chk@plt+0xa228>
test   $0x8,%bl
jne    8053870 <__sprintf_chk@plt+0xa200>
test   $0x10,%bl
nop
jne    8053848 <__sprintf_chk@plt+0xa1d8>
test   $0x20,%bl
jne    80537e8 <__sprintf_chk@plt+0xa178>
cmp    $0x2,%esi
je     8053810 <__sprintf_chk@plt+0xa1a0>
test   $0x10000,%ebx
jne    80537c0 <__sprintf_chk@plt+0xa150>
test   $0x20000,%ebx
jne    8053798 <__sprintf_chk@plt+0xa128>
test   $0x80000,%ebx
jne    8053770 <__sprintf_chk@plt+0xa100>
test   $0x200000,%ebx
jne    8053748 <__sprintf_chk@plt+0xa0d8>
test   $0x400000,%ebx
jne    8053720 <__sprintf_chk@plt+0xa0b0>
test   $0x800000,%ebx
jne    80536f8 <__sprintf_chk@plt+0xa088>
test   $0x1000000,%ebx
jne    80536d0 <__sprintf_chk@plt+0xa060>
test   $0x4000000,%ebx
jne    80536a8 <__sprintf_chk@plt+0xa038>
test   $0x8000000,%ebx
jne    8053680 <__sprintf_chk@plt+0xa010>
test   $0x10000000,%ebx
jne    8053658 <__sprintf_chk@plt+0x9fe8>
test   $0x20000000,%ebx
jne    8053630 <__sprintf_chk@plt+0x9fc0>
test   $0x40000000,%ebx
jne    8053568 <__sprintf_chk@plt+0x9ef8>
test   %ebx,%ebx
js     805358f <__sprintf_chk@plt+0x9f1f>
cmpl   $0x1,0x760(%esp)
je     80535c0 <__sprintf_chk@plt+0x9f50>
cmpl   $0x2,0x760(%esp)
je     8053a80 <__sprintf_chk@plt+0xa410>
cmp    $0x1,%esi
je     8053918 <__sprintf_chk@plt+0xa2a8>
cmp    $0x2,%esi
jne    8053118 <__sprintf_chk@plt+0x9aa8>
cmpl   $0x2,0x760(%esp)
jle    8053118 <__sprintf_chk@plt+0x9aa8>
lea    0x23c(%esp),%eax
mov    %eax,0x40(%esp)
mov    0xd0(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x805e554,0x4(%esp)
mov    %eax,0x3c(%esp)
mov    0xcc(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x38(%esp)
mov    0xd8(%esp),%eax
mov    %eax,0x34(%esp)
mov    0xc4(%esp),%eax
mov    %eax,0x30(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xec(%esp),%eax
mov    %eax,0x24(%esp)
mov    0xb8(%esp),%eax
mov    %eax,0x20(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xfc(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8053118 <__sprintf_chk@plt+0x9aa8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%esi
jmp    8053076 <__sprintf_chk@plt+0x9a06>
lea    0x0(%esi),%esi
lea    0x23c(%esp),%eax
mov    %eax,0x40(%esp)
lea    0xd0(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0xcc(%esp),%eax
mov    %eax,0x38(%esp)
lea    0xd8(%esp),%eax
mov    %eax,0x34(%esp)
lea    0xc4(%esp),%eax
mov    %eax,0x30(%esp)
lea    0xc0(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0xbc(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x2bc(%esp),%eax
mov    %eax,0x94(%esp)
lea    0x13c(%esp),%ebp
mov    %eax,0x24(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0x20(%esp)
lea    0xb8(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0xb4(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xac(%esp),%eax
mov    %eax,0x14(%esp)
lea    0xec(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x9c(%esp),%eax
lea    0x1bc(%esp),%edi
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x33c(%esp),%eax
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
cmp    $0xb,%eax
jle    8053118 <__sprintf_chk@plt+0x9aa8>
jmp    8053172 <__sprintf_chk@plt+0x9b02>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e0d9,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
test   %ebx,%ebx
jns    8053390 <__sprintf_chk@plt+0x9d20>
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e6ce,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
cmpl   $0x1,0x760(%esp)
jne    805339e <__sprintf_chk@plt+0x9d2e>
lea    0x0(%esi,%eiz,1),%esi
lea    0xec(%esp),%eax
mov    %eax,0x24(%esp)
mov    0xb8(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x805e23c,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0xb4(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xfc(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
cmp    $0x1,%esi
jne    80533b5 <__sprintf_chk@plt+0x9d45>
jmp    8053118 <__sprintf_chk@plt+0x9aa8>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805c2a5,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    805337c <__sprintf_chk@plt+0x9d0c>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805bdb4,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053370 <__sprintf_chk@plt+0x9d00>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e0d6,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053364 <__sprintf_chk@plt+0x9cf4>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805f60e,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053358 <__sprintf_chk@plt+0x9ce8>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b794,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    805334c <__sprintf_chk@plt+0x9cdc>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e0d3,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053340 <__sprintf_chk@plt+0x9cd0>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e0d1,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053334 <__sprintf_chk@plt+0x9cc4>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e0ab,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053328 <__sprintf_chk@plt+0x9cb8>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e6df,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    805331c <__sprintf_chk@plt+0x9cac>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b271,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053310 <__sprintf_chk@plt+0x9ca0>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805dae6,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053304 <__sprintf_chk@plt+0x9c94>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b52a,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
cmp    $0x2,%esi
jne    80532f8 <__sprintf_chk@plt+0x9c88>
test   $0x1,%bl
jne    8053b40 <__sprintf_chk@plt+0xa4d0>
test   $0x4,%bl
je     80532f8 <__sprintf_chk@plt+0x9c88>
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805c20d,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80532f8 <__sprintf_chk@plt+0x9c88>
xchg   %ax,%ax
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b3e4,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80532e6 <__sprintf_chk@plt+0x9c76>
lea    0x0(%esi,%eiz,1),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e07b,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80532dc <__sprintf_chk@plt+0x9c6c>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x21,%eax
mov    %ax,0xfc(%esp)
jmp    80532d3 <__sprintf_chk@plt+0x9c63>
lea    0x0(%esi),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805b551,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80532ca <__sprintf_chk@plt+0x9c5a>
lea    0x0(%esi,%eiz,1),%esi
mov    0xac(%esp),%ebx
test   $0x1,%bl
jne    8053b28 <__sprintf_chk@plt+0xa4b8>
test   $0x4,%bl
je     80532c1 <__sprintf_chk@plt+0x9c51>
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805e095,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    80532c1 <__sprintf_chk@plt+0x9c51>
lea    0x0(%esi),%esi
cmpl   $0x2,0x760(%esp)
jle    8053118 <__sprintf_chk@plt+0x9aa8>
mov    0xd4(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x805e50c,0x4(%esp)
mov    %eax,0x38(%esp)
mov    0xc8(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x34(%esp)
mov    0xc4(%esp),%eax
mov    %eax,0x30(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xec(%esp),%eax
mov    %eax,0x24(%esp)
mov    0xb8(%esp),%eax
mov    %eax,0x20(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xfc(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8053118 <__sprintf_chk@plt+0x9aa8>
lea    0xd4(%esp),%eax
mov    %eax,0x38(%esp)
lea    0xc8(%esp),%eax
mov    %eax,0x34(%esp)
lea    0xc4(%esp),%eax
mov    %eax,0x30(%esp)
lea    0xc0(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0xbc(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x2bc(%esp),%eax
mov    %eax,0x94(%esp)
lea    0x13c(%esp),%ebp
mov    %eax,0x24(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0x20(%esp)
lea    0xb8(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0xb4(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xac(%esp),%eax
mov    %eax,0x14(%esp)
lea    0xec(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x9c(%esp),%eax
lea    0x1bc(%esp),%edi
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x33c(%esp),%eax
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
cmp    $0xb,%eax
jle    8053118 <__sprintf_chk@plt+0x9aa8>
jmp    8053172 <__sprintf_chk@plt+0x9b02>
xchg   %ax,%ax
lea    0xec(%esp),%eax
mov    %eax,0x24(%esp)
mov    0xc4(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x805e2a0,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0xc0(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
mov    0xbc(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xfc(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    805361e <__sprintf_chk@plt+0x9fae>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x73c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8053ea8 <__sprintf_chk@plt+0xa838>
add    $0x74c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    $0x55,%edx
mov    %dx,0xfc(%esp)
jmp    80538e8 <__sprintf_chk@plt+0xa278>
lea    0x0(%esi),%esi
lea    0xfc(%esp),%eax
movl   $0x40,0x8(%esp)
movl   $0x805f0b7,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8053819 <__sprintf_chk@plt+0xa1a9>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e07d,(%esp)
call   8049280 <perror@plt>
movl   $0xffffffff,(%esp)
call   8049340 <exit@plt>
mov    $0x2,%esi
jmp    8053076 <__sprintf_chk@plt+0x9a06>
lea    0x0(%esi),%esi
cmpl   $0x2,0x760(%esp)
jg     8053e87 <__sprintf_chk@plt+0xa817>
mov    0x98(%esp),%eax
movl   $0x0,0x74(%esp)
movl   $0x805b270,0x70(%esp)
movl   $0x805e090,0x6c(%esp)
movl   $0x805b270,0x68(%esp)
movl   $0x805e094,0x64(%esp)
movl   $0x805b270,0x60(%esp)
movl   $0x805e029,0x5c(%esp)
movl   $0x805b270,0x58(%esp)
movl   $0x805e02e,0x54(%esp)
movl   $0x805b270,0x50(%esp)
movl   $0x805e035,0x4c(%esp)
movl   $0x805e039,0x48(%esp)
movl   $0x805e0ca,0x44(%esp)
movl   $0x805b270,0x40(%esp)
movl   $0x805e044,0x3c(%esp)
movl   $0x805b270,0x38(%esp)
movl   $0x805e04b,0x34(%esp)
movl   $0x805b270,0x30(%esp)
movl   $0x805e04f,0x2c(%esp)
movl   $0x805b2ad,0x28(%esp)
movl   $0x805e056,0x24(%esp)
movl   $0x805e039,0x20(%esp)
movl   $0x805e05c,0x1c(%esp)
movl   $0x805e039,0x18(%esp)
movl   $0x805e064,0x14(%esp)
movl   $0x805e070,0x10(%esp)
movl   $0x805e075,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x805e07d,(%esp)
call   8057d50 <__sprintf_chk@plt+0xe6e0>
mov    %eax,0x9c(%esp)
jmp    80530be <__sprintf_chk@plt+0x9a4e>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x760(%esp)
jg     8053e66 <__sprintf_chk@plt+0xa7f6>
mov    0x98(%esp),%eax
movl   $0x0,0x84(%esp)
00
movl   $0x805e039,0x80(%esp)
08
movl   $0x805e097,0x7c(%esp)
mov    %eax,0x8(%esp)
movl   $0x805b270,0x78(%esp)
movl   $0x805e09f,0x74(%esp)
movl   $0x805b270,0x70(%esp)
movl   $0x805e0a7,0x6c(%esp)
movl   $0x805b270,0x68(%esp)
movl   $0x805e0ad,0x64(%esp)
movl   $0x805b270,0x60(%esp)
movl   $0x805e029,0x5c(%esp)
movl   $0x805b270,0x58(%esp)
movl   $0x805e02e,0x54(%esp)
movl   $0x805b270,0x50(%esp)
movl   $0x805e035,0x4c(%esp)
movl   $0x805e039,0x48(%esp)
movl   $0x805e0ca,0x44(%esp)
movl   $0x805b270,0x40(%esp)
movl   $0x805e044,0x3c(%esp)
movl   $0x805b270,0x38(%esp)
movl   $0x805e04b,0x34(%esp)
movl   $0x805b270,0x30(%esp)
movl   $0x805e04f,0x2c(%esp)
movl   $0x805b2ad,0x28(%esp)
movl   $0x805e056,0x24(%esp)
movl   $0x805e039,0x20(%esp)
movl   $0x805e05c,0x1c(%esp)
movl   $0x805e039,0x18(%esp)
movl   $0x805e064,0x14(%esp)
movl   $0x805e070,0x10(%esp)
movl   $0x805e075,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x805e07d,(%esp)
call   8057d50 <__sprintf_chk@plt+0xe6e0>
mov    %eax,0x9c(%esp)
jmp    80530be <__sprintf_chk@plt+0x9a4e>
nop
movl   $0x805e07d,(%esp)
call   8049280 <perror@plt>
movl   $0x805e0dc,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    8053b08 <__sprintf_chk@plt+0xa498>
lea    0x0(%esi),%esi
movl   $0x805e3c8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmp    $0x1,%esi
jne    80530aa <__sprintf_chk@plt+0x9a3a>
jmp    8053b9e <__sprintf_chk@plt+0xa52e>
lea    0x0(%esi),%esi
movl   $0x805e378,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8053e34 <__sprintf_chk@plt+0xa7c4>
movl   $0x805e488,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8053cb6 <__sprintf_chk@plt+0xa646>
movl   $0x805e418,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8053b9e <__sprintf_chk@plt+0xa52e>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %edi
mov    $0x2,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,%esi
mov    %ebx,%edi
and    $0x3,%esi
and    $0x24,%edi
test   $0x80,%bl
jne    8053ee0 <__sprintf_chk@plt+0xa870>
and    $0x40,%ebx
jne    8053ef8 <__sprintf_chk@plt+0xa888>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8052460 <__sprintf_chk@plt+0x8df0>
test   %eax,%eax
jne    8053ed3 <__sprintf_chk@plt+0xa863>
and    $0x40,%ebx
je     8053ed3 <__sprintf_chk@plt+0xa863>
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8052f50 <__sprintf_chk@plt+0x98e0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    0x8065154,%eax
test   %eax,%eax
je     8053f58 <__sprintf_chk@plt+0xa8e8>
mov    0x8065150,%ebx
test   %ebx,%ebx
jne    8053f39 <__sprintf_chk@plt+0xa8c9>
jmp    8053f62 <__sprintf_chk@plt+0xa8f2>
lea    0x0(%esi),%esi
js     8053fa8 <__sprintf_chk@plt+0xa938>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
je     8053f62 <__sprintf_chk@plt+0xa8f2>
lea    0x8(%ebx),%edx
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   8057bb0 <__sprintf_chk@plt+0xe540>
test   %eax,%eax
jne    8053f30 <__sprintf_chk@plt+0xa8c0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x0,0x8065150
00
movl   $0x190,(%esp)
xor    %ebx,%ebx
call   80584b0 <__sprintf_chk@plt+0xee40>
movl   $0x10,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%edi
lea    0x8(%eax),%eax
mov    %eax,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    $0x8065154,%edx
mov    %ebx,0x4(%edi)
mov    (%edx),%eax
test   %eax,%eax
mov    %eax,(%edi)
je     8053fda <__sprintf_chk@plt+0xa96a>
mov    %edi,0x4(%eax)
mov    %edi,(%edx)
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movl   $0x190,(%esp)
call   80584b0 <__sprintf_chk@plt+0xee40>
movl   $0x10,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%edi
lea    0x8(%eax),%eax
mov    %eax,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
mov    %ebx,%edx
mov    %ebx,0x4(%edi)
mov    (%edx),%eax
test   %eax,%eax
mov    %eax,(%edi)
jne    8053f99 <__sprintf_chk@plt+0xa929>
mov    %edi,0x8065150
jmp    8053f9c <__sprintf_chk@plt+0xa92c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8065154,%eax
test   %eax,%eax
je     8054019 <__sprintf_chk@plt+0xa9a9>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x8065154
call   8049110 <free@plt>
mov    0x8065154,%eax
test   %eax,%eax
jne    8054000 <__sprintf_chk@plt+0xa990>
movl   $0x0,0x8065150
00
xor    %eax,%eax
movl   $0x0,0x8065140
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   8049640 <__ctype_b_loc@plt>
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
mov    (%eax),%edx
jmp    805405b <__sprintf_chk@plt+0xa9eb>
add    $0x1,%ebx
movzbl (%ebx),%ecx
movsbl %cl,%edi
testb  $0x20,0x1(%edx,%edi,2)
jne    8054058 <__sprintf_chk@plt+0xa9e8>
test   %cl,%cl
jne    805408c <__sprintf_chk@plt+0xaa1c>
jmp    80540c8 <__sprintf_chk@plt+0xaa58>
xchg   %ax,%ax
add    $0x1,%esi
add    $0x1,%ebx
mov    %cl,-0x1(%esi)
movzbl (%ebx),%ecx
test   %cl,%cl
je     80540c8 <__sprintf_chk@plt+0xaa58>
mov    (%eax),%edx
movsbl %cl,%edi
testb  $0x20,0x1(%edx,%edi,2)
jne    80540c8 <__sprintf_chk@plt+0xaa58>
cmp    $0x3a,%cl
jne    8054070 <__sprintf_chk@plt+0xaa00>
movzbl 0x1(%ebx),%ecx
lea    0x1(%ebx),%edi
mov    %edi,%ebp
mov    %edi,0xc(%esp)
test   %cl,%cl
je     80540c4 <__sprintf_chk@plt+0xaa54>
movsbl %cl,%edi
testb  $0x8,0x1(%edx,%edi,2)
je     80540d8 <__sprintf_chk@plt+0xaa68>
mov    %ebp,%edi
jmp    80540ba <__sprintf_chk@plt+0xaa4a>
movsbl %cl,%ebp
testb  $0x8,0x1(%edx,%ebp,2)
je     80540d8 <__sprintf_chk@plt+0xaa68>
add    $0x1,%edi
movzbl (%edi),%ecx
test   %cl,%cl
jne    80540b0 <__sprintf_chk@plt+0xaa40>
mov    0xc(%esp),%ebx
movb   $0x0,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x3a,%cl
jne    80540c4 <__sprintf_chk@plt+0xaa54>
movb   $0x3a,(%esi)
movzbl 0x1(%ebx),%edx
lea    0x1(%esi),%ecx
test   %dl,%dl
je     805412b <__sprintf_chk@plt+0xaabb>
mov    (%eax),%ebp
movsbl %dl,%edi
mov    %ecx,%esi
mov    0xc(%esp),%ecx
testb  $0x8,0x1(%ebp,%edi,2)
jne    805410c <__sprintf_chk@plt+0xaa9c>
jmp    8054136 <__sprintf_chk@plt+0xaac6>
nop
mov    (%eax),%ebx
movsbl %dl,%edi
testb  $0x8,0x1(%ebx,%edi,2)
je     805411c <__sprintf_chk@plt+0xaaac>
add    $0x1,%esi
add    $0x1,%ecx
mov    %dl,-0x1(%esi)
movzbl (%ecx),%edx
test   %dl,%dl
jne    8054100 <__sprintf_chk@plt+0xaa90>
mov    %ecx,0xc(%esp)
addl   $0x1,0xc(%esp)
mov    0xc(%esp),%ebx
jmp    80540c8 <__sprintf_chk@plt+0xaa58>
lea    0x2(%ebx),%eax
mov    %ecx,%esi
mov    %eax,0xc(%esp)
jmp    80540c4 <__sprintf_chk@plt+0xaa54>
lea    0x2(%ebx),%eax
mov    %eax,0xc(%esp)
jmp    80540c4 <__sprintf_chk@plt+0xaa54>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x805e5a8,0x4(%esp)
mov    %ebx,(%esp)
call   80490b0 <strstr@plt>
mov    $0x3,%edx
test   %eax,%eax
je     8054168 <__sprintf_chk@plt+0xaaf8>
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
movl   $0x805e5b3,0x4(%esp)
mov    %ebx,(%esp)
call   80490b0 <strstr@plt>
cmp    $0x1,%eax
sbb    %edx,%edx
add    $0x2,%edx
jmp    8054161 <__sprintf_chk@plt+0xaaf1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x58,%esp
mov    0x8064160,%eax
mov    0x64(%esp),%ebx
cmp    $0x2,%eax
je     8054340 <__sprintf_chk@plt+0xacd0>
cmp    $0x3,%eax
je     8054280 <__sprintf_chk@plt+0xac10>
cmp    $0x1,%eax
je     80541c0 <__sprintf_chk@plt+0xab50>
add    $0x58,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x178(%ebx),%eax
mov    %eax,0x30(%esp)
lea    0x158(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    0x17c(%ebx),%eax
mov    %eax,0x28(%esp)
lea    0x148(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x140(%ebx),%eax
mov    %eax,0x20(%esp)
lea    0x124(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x168(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x16c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    0x144(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x13c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x11c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
movl   $0x805e92c,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
xor    %eax,%eax
movl   $0x0,0x12c(%ebx)
00
movl   $0x0,0x130(%ebx)
00
movl   $0x0,0x134(%ebx)
00
movl   $0x0,0x138(%ebx)
00
movl   $0x0,0x14c(%ebx)
00
add    $0x58,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x154(%ebx),%eax
mov    %eax,0x44(%esp)
lea    0x178(%ebx),%eax
mov    %eax,0x40(%esp)
lea    0x158(%ebx),%eax
mov    %eax,0x3c(%esp)
lea    0x17c(%ebx),%eax
mov    %eax,0x38(%esp)
lea    0x148(%ebx),%eax
mov    %eax,0x34(%esp)
lea    0x140(%ebx),%eax
mov    %eax,0x30(%esp)
lea    0x124(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    0x134(%ebx),%eax
mov    %eax,0x28(%esp)
lea    0x14c(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x150(%ebx),%eax
mov    %eax,0x20(%esp)
lea    0x168(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x16c(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x144(%ebx),%eax
mov    %eax,0x14(%esp)
lea    0x13c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x11c(%ebx),%eax
add    $0x12c,%ebx
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x805e8b8,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
add    $0x58,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x178(%ebx),%eax
mov    %eax,0x38(%esp)
lea    0x158(%ebx),%eax
mov    %eax,0x34(%esp)
lea    0x17c(%ebx),%eax
mov    %eax,0x30(%esp)
lea    0x148(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    0x140(%ebx),%eax
mov    %eax,0x28(%esp)
lea    0x124(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x134(%ebx),%eax
mov    %eax,0x20(%esp)
lea    0x168(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x16c(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x144(%ebx),%eax
mov    %eax,0x14(%esp)
lea    0x13c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x11c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x12c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
movl   $0x805e8f8,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
xor    %eax,%eax
movl   $0x0,0x14c(%ebx)
00
add    $0x58,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x24c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805e5b9,(%esp)
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x23c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8054523 <__sprintf_chk@plt+0xaeb3>
mov    0x18(%esp),%edi
lea    0x3c(%esp),%esi
movl   $0x200,0x4(%esp)
lea    0x2c(%esp),%ebx
mov    %esi,(%esp)
mov    %edi,0x8(%esp)
call   8049150 <fgets@plt>
mov    %edi,0x8(%esp)
movl   $0x200,0x4(%esp)
mov    %esi,(%esp)
call   8049150 <fgets@plt>
mov    %esi,(%esp)
call   8054140 <__sprintf_chk@plt+0xaad0>
mov    %eax,0x8064160
xchg   %ax,%ax
mov    0x18(%esp),%eax
movl   $0x200,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     80544d1 <__sprintf_chk@plt+0xae61>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8054040 <__sprintf_chk@plt+0xa9d0>
mov    %eax,%edi
mov    %ebx,%eax
call   8053f10 <__sprintf_chk@plt+0xa8a0>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%ebp
call   8054190 <__sprintf_chk@plt+0xab20>
mov    0x1c(%esp),%eax
movl   $0x1,0x118(%ebp)
00
test   %eax,%eax
je     8054470 <__sprintf_chk@plt+0xae00>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    8054470 <__sprintf_chk@plt+0xae00>
mov    0x18(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049140 <ferror@plt>
test   %eax,%eax
jne    8054510 <__sprintf_chk@plt+0xaea0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    %ebx,%eax
mov    0x23c(%esp),%edx
xor    %gs:0x14,%edx
jne    805456c <__sprintf_chk@plt+0xaefc>
add    $0x24c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e5b9,(%esp)
mov    $0xffffffff,%ebx
call   8049280 <perror@plt>
jmp    80544e3 <__sprintf_chk@plt+0xae73>
call   8049460 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049300 <strerror@plt>
movl   $0x805e958,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x10(%esp)
movl   $0x805e5b9,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0xfffffffe,%eax
jmp    80544f1 <__sprintf_chk@plt+0xae81>
call   80491c0 <__stack_chk_fail@plt>
jmp    8054580 <__sprintf_chk@plt+0xaf10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x8,%esp
mov    0x8065140,%edx
mov    0x10(%esp),%ebx
test   %edx,%edx
mov    %ebx,%eax
jne    805459f <__sprintf_chk@plt+0xaf2f>
call   80543f0 <__sprintf_chk@plt+0xad80>
test   %eax,%eax
js     80545a8 <__sprintf_chk@plt+0xaf38>
mov    %ebx,%eax
add    $0x8,%esp
pop    %ebx
jmp    8053f10 <__sprintf_chk@plt+0xa8a0>
add    $0x8,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   80543f0 <__sprintf_chk@plt+0xad80>
movl   $0x2,(%esp)
mov    %eax,0x1c(%esp)
call   804f4f0 <__sprintf_chk@plt+0x5e80>
test   %eax,%eax
mov    %eax,%ebx
js     8054680 <__sprintf_chk@plt+0xb010>
movl   $0x0,0x2c(%esp)
xor    %eax,%eax
mov    $0x1e,%esi
lea    0x28(%esp),%ebp
mov    %esi,%edi
shl    $0x5,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edi,0x28(%esp)
call   80584e0 <__sprintf_chk@plt+0xee70>
mov    %ebp,0x8(%esp)
movl   $0x8912,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x2c(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     80546e0 <__sprintf_chk@plt+0xb070>
mov    0x28(%esp),%eax
cmp    %eax,%edi
je     8054670 <__sprintf_chk@plt+0xb000>
test   %eax,%eax
mov    0x2c(%esp),%esi
jle    8054650 <__sprintf_chk@plt+0xafe0>
mov    %esi,%ebx
lea    0x0(%esi),%esi
mov    %ebx,%eax
add    $0x20,%ebx
call   8053f10 <__sprintf_chk@plt+0xa8a0>
mov    %ebx,%edx
sub    %esi,%edx
cmp    0x28(%esp),%edx
jl     8054638 <__sprintf_chk@plt+0xafc8>
mov    0x2c(%esp),%esi
mov    %esi,(%esp)
call   8049110 <free@plt>
mov    0x1c(%esp),%eax
movl   $0x1,0x8065140
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    %esi,%esi
mov    0x2c(%esp),%eax
jmp    80545eb <__sprintf_chk@plt+0xaf7b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049300 <strerror@plt>
movl   $0x805e988,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
movl   $0x0,(%esp)
call   8058210 <__sprintf_chk@plt+0xeba0>
test   %eax,%eax
mov    %eax,%ebx
jns    80545d8 <__sprintf_chk@plt+0xaf68>
movl   $0xffffffff,0x1c(%esp)
jmp    8054658 <__sprintf_chk@plt+0xafe8>
lea    0x0(%esi),%esi
movl   $0x805e5c7,(%esp)
call   8049280 <perror@plt>
mov    0x2c(%esp),%esi
movl   $0xffffffff,0x1c(%esp)
jmp    8054650 <__sprintf_chk@plt+0xafe0>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x8065140,%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
test   %eax,%eax
je     8054758 <__sprintf_chk@plt+0xb0e8>
mov    0x8065154,%ebx
test   %ebx,%ebx
jne    805472e <__sprintf_chk@plt+0xb0be>
jmp    8054748 <__sprintf_chk@plt+0xb0d8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     8054748 <__sprintf_chk@plt+0xb0d8>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   *%esi
test   %eax,%eax
je     8054728 <__sprintf_chk@plt+0xb0b8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   80545b0 <__sprintf_chk@plt+0xaf40>
test   %eax,%eax
jns    8054717 <__sprintf_chk@plt+0xb0a7>
mov    $0xffffffff,%eax
jmp    805473b <__sprintf_chk@plt+0xb0cb>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebx
lea    0x1c(%esp),%esi
movl   $0x10,0x8(%esp)
mov    %esi,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    0x8(%ebx),%edi
mov    %edi,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x8913,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054f50 <__sprintf_chk@plt+0xb8e0>
movzwl 0x2c(%esp),%eax
mov    %ax,0x1a(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x8927,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054eb0 <__sprintf_chk@plt+0xb840>
mov    0x2e(%esp),%eax
mov    %eax,0xf8(%ebx)
mov    0x32(%esp),%eax
mov    %eax,0xfc(%ebx)
movzwl 0x2c(%esp),%eax
mov    %ax,0x18(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x891d,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054ea0 <__sprintf_chk@plt+0xb830>
mov    0x2c(%esp),%eax
mov    %eax,0x1c(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x8921,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054e68 <__sprintf_chk@plt+0xb7f8>
mov    0x2c(%esp),%eax
mov    %eax,0x20(%ebx)
movzwl 0x18(%ebx),%eax
lea    -0x100(%eax),%edx
cmp    $0x3,%dx
jbe    8054dd0 <__sprintf_chk@plt+0xb760>
cmp    $0x108,%ax
je     8054dd0 <__sprintf_chk@plt+0xb760>
movl   $0x10,0x8(%esp)
lea    0x28(%ebx),%ebp
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x8970,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054e78 <__sprintf_chk@plt+0xb808>
mov    0x2c(%esp),%eax
mov    %eax,0x28(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x2c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x30(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x34(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x8970,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054f08 <__sprintf_chk@plt+0xb898>
mov    0x2c(%esp),%eax
mov    %eax,0x28(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x2c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x30(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x34(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x8942,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054e58 <__sprintf_chk@plt+0xb7e8>
mov    0x2c(%esp),%eax
mov    %eax,0x24(%ebx)
movl   $0x2,(%esp)
call   804f4f0 <__sprintf_chk@plt+0x5e80>
test   %eax,%eax
mov    %eax,%ebp
js     8054aef <__sprintf_chk@plt+0xb47f>
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    $0x2,%eax
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
mov    %ax,0x2c(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jne    8054da8 <__sprintf_chk@plt+0xb738>
mov    0x2c(%esp),%eax
movl   $0x1,0xd8(%ebx)
00
mov    %eax,0x38(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x3c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x40(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x44(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8917,0x4(%esp)
mov    %ebp,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054f88 <__sprintf_chk@plt+0xb918>
mov    0x2c(%esp),%eax
mov    %eax,0x48(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x4c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x50(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x54(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8919,0x4(%esp)
mov    %ebp,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054fb0 <__sprintf_chk@plt+0xb940>
mov    0x2c(%esp),%eax
mov    %eax,0x58(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x5c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x60(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x64(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x891b,0x4(%esp)
mov    %ebp,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054f60 <__sprintf_chk@plt+0xb8f0>
mov    0x2c(%esp),%eax
mov    %eax,0x68(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x6c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x70(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x74(%ebx)
movl   $0x5,(%esp)
call   804f4f0 <__sprintf_chk@plt+0x5e80>
test   %eax,%eax
mov    %eax,%ebp
js     8054b31 <__sprintf_chk@plt+0xb4c1>
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
je     8054d70 <__sprintf_chk@plt+0xb700>
movl   $0x4,(%esp)
call   804f4f0 <__sprintf_chk@plt+0x5e80>
test   %eax,%eax
mov    %eax,%ebp
js     8054c9f <__sprintf_chk@plt+0xb62f>
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x3,0x3a(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jne    8054ba4 <__sprintf_chk@plt+0xb534>
mov    0x2c(%esp),%eax
movl   $0x1,0xdc(%ebx)
00
mov    %eax,0x78(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x7c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x80(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x84(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x1,0x3a(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jne    8054c07 <__sprintf_chk@plt+0xb597>
mov    0x2c(%esp),%eax
movl   $0x1,0xe0(%ebx)
00
mov    %eax,0x88(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x8c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0x90(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0x94(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x4,0x3a(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jne    8054c6a <__sprintf_chk@plt+0xb5fa>
mov    0x2c(%esp),%eax
movl   $0x1,0xe4(%ebx)
00
mov    %eax,0x98(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x9c(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0xa0(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0xa4(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x2,0x3a(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
je     8054d38 <__sprintf_chk@plt+0xb6c8>
movl   $0x13,(%esp)
call   804f4f0 <__sprintf_chk@plt+0x5e80>
test   %eax,%eax
mov    %eax,%ebp
js     8054d18 <__sprintf_chk@plt+0xb6a8>
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x8915,0x4(%esp)
mov    %ebp,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jne    8054d18 <__sprintf_chk@plt+0xb6a8>
mov    0x2c(%esp),%edx
movl   $0x1,0xf4(%ebx)
00
mov    %edx,0xc8(%ebx)
mov    0x30(%esp),%edx
mov    %edx,0xcc(%ebx)
mov    0x34(%esp),%edx
mov    %edx,0xd0(%ebx)
mov    0x38(%esp),%edx
mov    %edx,0xd4(%ebx)
jmp    8054d1a <__sprintf_chk@plt+0xb6aa>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8055001 <__sprintf_chk@plt+0xb991>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x1,0xe8(%ebx)
00
mov    %eax,0xa8(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0xac(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0xb0(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0xb4(%ebx)
jmp    8054c9f <__sprintf_chk@plt+0xb62f>
nop
mov    0x2c(%esp),%eax
movl   $0x1,0xf0(%ebx)
00
mov    %eax,0xb8(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0xbc(%ebx)
mov    0x34(%esp),%eax
mov    %eax,0xc0(%ebx)
mov    0x38(%esp),%eax
mov    %eax,0xc4(%ebx)
jmp    8054b31 <__sprintf_chk@plt+0xb4c1>
nop
movl   $0x0,0x38(%ebx)
movl   $0x0,0x3c(%ebx)
movl   $0x0,0x40(%ebx)
movl   $0x0,0x44(%ebx)
jmp    8054aef <__sprintf_chk@plt+0xb47f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x89f3,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054f40 <__sprintf_chk@plt+0xb8d0>
mov    0x2c(%esp),%eax
mov    %eax,0x18c(%ebx)
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x8064304,%eax
mov    %esi,0x8(%esp)
movl   $0x89f1,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8054f30 <__sprintf_chk@plt+0xb8c0>
mov    0x2c(%esp),%eax
mov    %eax,0x188(%ebx)
jmp    80548b4 <__sprintf_chk@plt+0xb244>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x24(%ebx)
jmp    8054995 <__sprintf_chk@plt+0xb325>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x20(%ebx)
jmp    8054896 <__sprintf_chk@plt+0xb226>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x28(%ebx)
movl   $0x0,0x4(%ebp)
movl   $0x0,0x8(%ebp)
movl   $0x0,0xc(%ebp)
jmp    8054908 <__sprintf_chk@plt+0xb298>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x1c(%ebx)
jmp    805485a <__sprintf_chk@plt+0xb1ea>
lea    0x0(%esi,%eiz,1),%esi
lea    0xf8(%ebx),%edx
mov    $0x20,%ecx
test   $0x1,%dl
jne    8054fd8 <__sprintf_chk@plt+0xb968>
test   $0x2,%dl
jne    8054ff0 <__sprintf_chk@plt+0xb980>
mov    %ecx,%ebp
xor    %eax,%eax
and    $0xfffffffc,%ebp
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    %ebp,%eax
jb     8054ed4 <__sprintf_chk@plt+0xb864>
add    %eax,%edx
test   $0x2,%cl
je     8054ef2 <__sprintf_chk@plt+0xb882>
xor    %ebp,%ebp
add    $0x2,%edx
mov    %bp,-0x2(%edx)
and    $0x1,%ecx
je     8054815 <__sprintf_chk@plt+0xb1a5>
movb   $0x0,(%edx)
jmp    8054815 <__sprintf_chk@plt+0xb1a5>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x28(%ebx)
movl   $0x0,0x4(%ebp)
movl   $0x0,0x8(%ebp)
movl   $0x0,0xc(%ebp)
jmp    8054959 <__sprintf_chk@plt+0xb2e9>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x188(%ebx)
00
jmp    80548b4 <__sprintf_chk@plt+0xb244>
nop
movl   $0x0,0x18c(%ebx)
00
jmp    8054e0f <__sprintf_chk@plt+0xb79f>
nop
mov    $0xffffffff,%eax
jmp    8054d1a <__sprintf_chk@plt+0xb6aa>
lea    0x0(%esi),%esi
movl   $0x0,0x68(%ebx)
movl   $0x0,0x6c(%ebx)
movl   $0x0,0x70(%ebx)
movl   $0x0,0x74(%ebx)
jmp    8054aef <__sprintf_chk@plt+0xb47f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x48(%ebx)
movl   $0x0,0x4c(%ebx)
movl   $0x0,0x50(%ebx)
movl   $0x0,0x54(%ebx)
jmp    8054a57 <__sprintf_chk@plt+0xb3e7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x58(%ebx)
movl   $0x0,0x5c(%ebx)
movl   $0x0,0x60(%ebx)
movl   $0x0,0x64(%ebx)
jmp    8054aa3 <__sprintf_chk@plt+0xb433>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0xf8(%ebx)
lea    0xf9(%ebx),%edx
mov    $0x1f,%cl
jmp    8054ec4 <__sprintf_chk@plt+0xb854>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x2,%edx
mov    %ax,-0x2(%edx)
sub    $0x2,%ecx
jmp    8054ecd <__sprintf_chk@plt+0xb85d>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    %ebx,(%esp)
call   8054770 <__sprintf_chk@plt+0xb100>
test   %eax,%eax
js     8055030 <__sprintf_chk@plt+0xb9c0>
xor    %eax,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   8049460 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x13,%eax
je     805507d <__sprintf_chk@plt+0xba0d>
mov    %eax,(%esp)
call   8049300 <strerror@plt>
mov    %eax,%esi
movl   $0x805e9b0,(%esp)
add    $0x8,%ebx
call   8049360 <gettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0xffffffff,%eax
jmp    8055027 <__sprintf_chk@plt+0xb9b7>
movl   $0x805e5d3,(%esp)
call   8049360 <gettext@plt>
mov    %eax,%esi
jmp    8055046 <__sprintf_chk@plt+0xb9d6>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
movl   $0x805e5e4,0x4(%esp)
movl   $0x1,(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x1c(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x20(%ebx),%eax
movl   $0x805e5ea,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x118(%ebx),%eax
test   %eax,%eax
je     8055218 <__sprintf_chk@plt+0xbba8>
mov    0x16c(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0x144(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x13c(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x120(%ebx),%edx
mov    0x11c(%ebx),%eax
movl   $0x805e5f4,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x17c(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0x148(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x140(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x124(%ebx),%eax
mov    0x128(%ebx),%edx
movl   $0x805e60b,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebx),%eax
test   %ax,%ax
je     8055249 <__sprintf_chk@plt+0xbbd9>
test   $0x2,%ah
jne    8055272 <__sprintf_chk@plt+0xbc02>
test   $0x2,%al
jne    805528a <__sprintf_chk@plt+0xbc1a>
test   $0x4,%al
nop
jne    80552a2 <__sprintf_chk@plt+0xbc32>
test   $0x8,%al
jne    80552ba <__sprintf_chk@plt+0xbc4a>
test   $0x10,%ah
jne    80552d3 <__sprintf_chk@plt+0xbc63>
test   %ax,%ax
js     80552ec <__sprintf_chk@plt+0xbc7c>
test   $0x1,%ah
jne    8055308 <__sprintf_chk@plt+0xbc98>
test   $0x20,%al
jne    8055320 <__sprintf_chk@plt+0xbcb0>
test   $0x80,%al
jne    8055338 <__sprintf_chk@plt+0xbcc8>
test   $0x10,%al
nop
lea    0x0(%esi,%eiz,1),%esi
jne    8055350 <__sprintf_chk@plt+0xbce0>
test   $0x8,%ah
jne    8055369 <__sprintf_chk@plt+0xbcf9>
test   $0x4,%ah
jne    8055382 <__sprintf_chk@plt+0xbd12>
test   $0x40,%al
jne    805539a <__sprintf_chk@plt+0xbd2a>
test   $0x1,%al
je     8055200 <__sprintf_chk@plt+0xbb90>
movl   $0x55,(%esp)
call   8049450 <putchar@plt>
movl   $0xa,0x30(%esp)
add    $0x28,%esp
pop    %ebx
jmp    8049450 <putchar@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e9e0,(%esp)
call   8049360 <gettext@plt>
movl   $0x805e621,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebx),%eax
test   %ax,%ax
jne    805517c <__sprintf_chk@plt+0xbb0c>
movl   $0x805e627,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebx),%eax
test   $0x2,%ah
je     8055185 <__sprintf_chk@plt+0xbb15>
movl   $0x41,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x2,%al
je     805518d <__sprintf_chk@plt+0xbb1d>
movl   $0x42,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x4,%al
je     8055196 <__sprintf_chk@plt+0xbb26>
movl   $0x44,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x8,%al
je     805519e <__sprintf_chk@plt+0xbb2e>
movl   $0x4c,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x10,%ah
je     80551a7 <__sprintf_chk@plt+0xbb37>
movl   $0x4d,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   %ax,%ax
jns    80551b0 <__sprintf_chk@plt+0xbb40>
movl   $0x64,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x1,%ah
je     80551b9 <__sprintf_chk@plt+0xbb49>
lea    0x0(%esi),%esi
movl   $0x50,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x20,%al
je     80551c1 <__sprintf_chk@plt+0xbb51>
movl   $0x4e,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x80,%al
je     80551c9 <__sprintf_chk@plt+0xbb59>
movl   $0x4f,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x10,%al
je     80551d6 <__sprintf_chk@plt+0xbb66>
movl   $0x50,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x8,%ah
je     80551df <__sprintf_chk@plt+0xbb6f>
movl   $0x73,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x4,%ah
je     80551e8 <__sprintf_chk@plt+0xbb78>
movl   $0x6d,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
test   $0x40,%al
je     80551f0 <__sprintf_chk@plt+0xbb80>
movl   $0x52,(%esp)
call   8049450 <putchar@plt>
movzwl 0x1a(%ebx),%eax
jmp    80551f0 <__sprintf_chk@plt+0xbb80>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x12c,%esp
mov    0x140(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x11c(%esp)
xor    %eax,%eax
movzwl 0x38(%ebp),%eax
mov    %eax,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,%ebx
je     80565f0 <__sprintf_chk@plt+0xcf80>
movswl 0x18(%ebp),%eax
mov    %eax,(%esp)
mov    %ax,0x5c(%esp)
call   8059650 <__sprintf_chk@plt+0xffe0>
test   %eax,%eax
mov    %eax,%esi
je     80565b8 <__sprintf_chk@plt+0xcf48>
mov    0x4(%esi),%edi
lea    0x8(%ebp),%eax
movl   $0x805e63e,(%esp)
mov    %eax,0x48(%esp)
call   8049360 <gettext@plt>
mov    0x48(%esp),%ecx
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x10(%esi),%eax
test   %eax,%eax
je     805547f <__sprintf_chk@plt+0xbe0f>
lea    0xf8(%ebp),%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8059790 <__sprintf_chk@plt+0x10120>
test   %eax,%eax
je     8055457 <__sprintf_chk@plt+0xbde7>
mov    0x1c(%esi),%eax
test   %eax,%eax
jne    805547f <__sprintf_chk@plt+0xbe0f>
mov    %edi,(%esp)
call   *0x10(%esi)
movl   $0x805e653,(%esp)
mov    %eax,%esi
call   8049360 <gettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
testb  $0x20,0x1b(%ebp)
jne    8055dc0 <__sprintf_chk@plt+0xc750>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
mov    0xd8(%ebp),%ecx
test   %ecx,%ecx
jne    8055d38 <__sprintf_chk@plt+0xc6c8>
movl   $0x805b794,0x4(%esp)
movl   $0x805dbbe,(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8055592 <__sprintf_chk@plt+0xbf22>
lea    0xc4(%esp),%ebx
lea    0xb5(%esp),%edi
jmp    80554f0 <__sprintf_chk@plt+0xbe80>
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
je     80557d0 <__sprintf_chk@plt+0xc160>
lea    0x94(%esp),%eax
mov    %eax,0x34(%esp)
lea    0x90(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x8c(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xbf(%esp),%eax
mov    %eax,0x24(%esp)
lea    0xba(%esp),%eax
mov    %eax,0x20(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xab(%esp),%eax
mov    %eax,0x14(%esp)
lea    0xa6(%esp),%eax
mov    %eax,0x10(%esp)
lea    0xa1(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x9c(%esp),%eax
mov    %ebx,0x38(%esp)
mov    %edi,0x1c(%esp)
mov    %eax,0x8(%esp)
movl   $0x805ea04,0x4(%esp)
mov    %esi,(%esp)
call   80493b0 <fscanf@plt>
cmp    $0xffffffff,%eax
jne    80554d8 <__sprintf_chk@plt+0xbe68>
mov    %esi,(%esp)
call   8049160 <fclose@plt>
mov    0x806514c,%eax
test   %eax,%eax
je     80565cb <__sprintf_chk@plt+0xcf5b>
mov    0xdc(%ebp),%edx
test   %edx,%edx
jne    8055ec0 <__sprintf_chk@plt+0xc850>
mov    0xe0(%ebp),%eax
test   %eax,%eax
jne    8055f01 <__sprintf_chk@plt+0xc891>
mov    0xe8(%ebp),%eax
test   %eax,%eax
jne    8055f4a <__sprintf_chk@plt+0xc8da>
mov    0xe4(%ebp),%eax
test   %eax,%eax
jne    8055f93 <__sprintf_chk@plt+0xc923>
mov    0x8065148,%eax
test   %eax,%eax
je     8056574 <__sprintf_chk@plt+0xcf04>
mov    0xf0(%ebp),%edi
test   %edi,%edi
jne    8056018 <__sprintf_chk@plt+0xc9a8>
mov    0x8065144,%eax
test   %eax,%eax
je     8056598 <__sprintf_chk@plt+0xcf28>
mov    0xf4(%ebp),%esi
test   %esi,%esi
jne    8055fd8 <__sprintf_chk@plt+0xc968>
movl   $0x805e818,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
test   %ax,%ax
je     8055d10 <__sprintf_chk@plt+0xc6a0>
test   $0x1,%al
jne    8055ce8 <__sprintf_chk@plt+0xc678>
test   $0x2,%al
jne    8055cc0 <__sprintf_chk@plt+0xc650>
test   $0x4,%al
jne    8055c98 <__sprintf_chk@plt+0xc628>
test   $0x8,%al
jne    8055c70 <__sprintf_chk@plt+0xc600>
test   $0x10,%al
jne    8055c48 <__sprintf_chk@plt+0xc5d8>
test   $0x20,%al
jne    8055c20 <__sprintf_chk@plt+0xc5b0>
test   $0x40,%al
jne    8055bf8 <__sprintf_chk@plt+0xc588>
test   $0x80,%al
jne    8055bd0 <__sprintf_chk@plt+0xc560>
test   $0x1,%ah
jne    8055ba8 <__sprintf_chk@plt+0xc538>
test   $0x2,%ah
jne    8055b80 <__sprintf_chk@plt+0xc510>
test   $0x8,%ah
jne    8055b58 <__sprintf_chk@plt+0xc4e8>
test   $0x4,%ah
jne    8055b30 <__sprintf_chk@plt+0xc4c0>
test   $0x10,%ah
jne    8055ae0 <__sprintf_chk@plt+0xc470>
test   %ax,%ax
xchg   %ax,%ax
js     8055b09 <__sprintf_chk@plt+0xc499>
mov    0x1c(%ebp),%eax
mov    $0x1,%ebx
mov    0x20(%ebp),%esi
movl   $0x805e793,(%esp)
test   %eax,%eax
cmovne %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x18c(%ebp),%ebx
mov    0x188(%ebp),%esi
test   %ebx,%ebx
jne    80557a0 <__sprintf_chk@plt+0xc130>
test   %esi,%esi
jne    80557a0 <__sprintf_chk@plt+0xc130>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
mov    0x118(%ebp),%ebx
test   %ebx,%ebx
jne    8055988 <__sprintf_chk@plt+0xc318>
cmpb   $0x0,0x32(%ebp)
jne    8055721 <__sprintf_chk@plt+0xc0b1>
mov    0x28(%ebp),%eax
test   %eax,%eax
je     8055938 <__sprintf_chk@plt+0xc2c8>
movl   $0x805e818,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
movzbl 0x32(%ebp),%ebx
test   %bl,%bl
jne    8055e98 <__sprintf_chk@plt+0xc828>
movzwl 0x30(%ebp),%ebx
cmp    $0xff,%bx
ja     8055e70 <__sprintf_chk@plt+0xc800>
mov    0x28(%ebp),%ebx
test   %ebx,%ebx
jne    8055e40 <__sprintf_chk@plt+0xc7d0>
movzbl 0x33(%ebp),%ebx
test   %bl,%bl
jne    8055e18 <__sprintf_chk@plt+0xc7a8>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
mov    0x11c(%esp),%eax
xor    %gs:0x14,%eax
jne    80566e7 <__sprintf_chk@plt+0xd077>
add    $0x12c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x805e7a6,(%esp)
call   8049360 <gettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80556f6 <__sprintf_chk@plt+0xc086>
lea    0x0(%esi,%eiz,1),%esi
lea    0xbf(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0xba(%esp),%eax
mov    %eax,0x28(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0x20(%esp)
lea    0xab(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0xa6(%esp),%eax
mov    %eax,0x18(%esp)
lea    0xa1(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0xf4(%esp),%eax
mov    %edi,0x24(%esp)
movl   $0x805dc1c,0xc(%esp)
movl   $0x28,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049670 <__sprintf_chk@plt>
lea    0xd8(%esp),%eax
mov    %eax,0x8(%esp)
lea    0xf4(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   *0x8064138
mov    0x8c(%esp),%ecx
lea    0xd8(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x58(%esp)
call   *0x8064134
movl   $0x805e6a5,(%esp)
mov    %eax,0x50(%esp)
call   8049360 <gettext@plt>
mov    0x58(%esp),%ecx
mov    0x50(%esp),%edx
movl   $0x1,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805e6c1,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x90(%esp),%eax
cmp    $0x20,%eax
je     8056343 <__sprintf_chk@plt+0xccd3>
jg     8055958 <__sprintf_chk@plt+0xc2e8>
test   %eax,%eax
je     8056385 <__sprintf_chk@plt+0xcd15>
cmp    $0x10,%eax
jne    80562d7 <__sprintf_chk@plt+0xcc67>
movl   $0x805e6e1,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xa,(%esp)
call   8049450 <putchar@plt>
jmp    80554f0 <__sprintf_chk@plt+0xbe80>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x33(%ebp)
jne    8055721 <__sprintf_chk@plt+0xc0b1>
cmpw   $0xff,0x30(%ebp)
ja     8055721 <__sprintf_chk@plt+0xc0b1>
jmp    8055773 <__sprintf_chk@plt+0xc103>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%eax
je     8056364 <__sprintf_chk@plt+0xccf4>
add    $0xffffff80,%eax
jne    80562d7 <__sprintf_chk@plt+0xcc67>
movl   $0x805e6da,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055920 <__sprintf_chk@plt+0xc2b0>
movzwl 0x5c(%esp),%eax
movl   $0x805e818,0x4(%esp)
movl   $0x1,(%esp)
and    $0xfffffffd,%eax
cmp    $0x101,%ax
sete   %al
movzbl %al,%eax
mov    %eax,0x58(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x168(%ebp),%edx
mov    0x120(%ebp),%ecx
mov    0x16c(%ebp),%edi
mov    0x144(%ebp),%esi
mov    %edx,0x50(%esp)
mov    0x11c(%ebp),%edx
mov    0x13c(%ebp),%ebx
movl   $0x805eafc,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x48(%esp)
call   8049360 <gettext@plt>
mov    0x50(%esp),%edx
mov    0x4c(%esp),%ecx
mov    %edi,0x18(%esp)
mov    %esi,0x14(%esp)
mov    %edx,0x1c(%esp)
mov    0x48(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %ebx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x58(%esp),%ecx
test   %ecx,%ecx
jne    80563d1 <__sprintf_chk@plt+0xcd61>
mov    0x130(%ebp),%esi
mov    0x12c(%ebp),%ecx
mov    0x134(%ebp),%ebx
mov    0x138(%ebp),%edi
imul   $0xa,%esi,%eax
mov    %ecx,0x5c(%esp)
mov    %ebx,0x60(%esp)
mov    %eax,0x50(%esp)
mov    %ecx,%eax
mov    $0xa,%ecx
mul    %ecx
imul   $0xa,%edi,%ecx
mov    %eax,0x48(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x4c(%esp)
add    %eax,0x4c(%esp)
mov    $0xa,%eax
mul    %ebx
mov    %edx,0x54(%esp)
add    %ecx,0x54(%esp)
cmp    $0x38d7e,%esi
mov    %eax,0x50(%esp)
jae    8056053 <__sprintf_chk@plt+0xc9e3>
cmp    $0xe8,%esi
jb     8056500 <__sprintf_chk@plt+0xce90>
jbe    80564f2 <__sprintf_chk@plt+0xce82>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0xd4a51000,0x8(%esp)
movl   $0xe8,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e632,0x78(%esp)
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
jmp    805609a <__sprintf_chk@plt+0xca2a>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e77f,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
test   %ax,%ax
jns    80556a6 <__sprintf_chk@plt+0xc036>
movl   $0x805e78a,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80556a6 <__sprintf_chk@plt+0xc036>
lea    0x0(%esi),%esi
movl   $0x805e777,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055692 <__sprintf_chk@plt+0xc022>
lea    0x0(%esi),%esi
movl   $0x805e770,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055689 <__sprintf_chk@plt+0xc019>
lea    0x0(%esi),%esi
movl   $0x805e766,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055680 <__sprintf_chk@plt+0xc010>
lea    0x0(%esi),%esi
movl   $0x805e75d,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055677 <__sprintf_chk@plt+0xc007>
lea    0x0(%esi),%esi
movl   $0x805e756,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    805566e <__sprintf_chk@plt+0xbffe>
lea    0x0(%esi),%esi
movl   $0x805e74d,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055666 <__sprintf_chk@plt+0xbff6>
lea    0x0(%esi),%esi
movl   $0x805e741,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    805565e <__sprintf_chk@plt+0xbfee>
lea    0x0(%esi),%esi
movl   $0x805e734,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055656 <__sprintf_chk@plt+0xbfe6>
lea    0x0(%esi),%esi
movl   $0x805e72a,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    805564e <__sprintf_chk@plt+0xbfde>
lea    0x0(%esi),%esi
movl   $0x805e723,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055646 <__sprintf_chk@plt+0xbfd6>
lea    0x0(%esi),%esi
movl   $0x805e718,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    805563e <__sprintf_chk@plt+0xbfce>
lea    0x0(%esi),%esi
movl   $0x805e714,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055636 <__sprintf_chk@plt+0xbfc6>
lea    0x0(%esi),%esi
movl   $0x805e708,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    805562e <__sprintf_chk@plt+0xbfbe>
lea    0x0(%esi),%esi
lea    0x38(%ebp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   *0x14(%ebx)
mov    (%ebx),%esi
movl   $0x805e66f,(%esp)
mov    %eax,%edi
call   8049360 <gettext@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
test   $0x10,%al
jne    8056434 <__sprintf_chk@plt+0xcdc4>
test   $0x2,%al
jne    80563fc <__sprintf_chk@plt+0xcd8c>
lea    0x68(%ebp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x805e69b,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80554a3 <__sprintf_chk@plt+0xbe33>
lea    0x0(%esi),%esi
movzbl 0x34(%ebp),%eax
movl   $0x805e65f,(%esp)
shl    $0x4,%eax
mov    0x8064180(%eax),%esi
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
testb  $0x40,0x1b(%ebp)
je     8055489 <__sprintf_chk@plt+0xbe19>
movl   $0x805e668,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055489 <__sprintf_chk@plt+0xbe19>
movl   $0x805e854,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055767 <__sprintf_chk@plt+0xc0f7>
lea    0x0(%esi),%esi
mov    0x2c(%ebp),%esi
movl   $0x805e844,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    805575b <__sprintf_chk@plt+0xc0eb>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e831,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055750 <__sprintf_chk@plt+0xc0e0>
lea    0x0(%esi),%esi
movl   $0x805e823,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055741 <__sprintf_chk@plt+0xc0d1>
lea    0x0(%esi),%esi
lea    0x78(%ebp),%edx
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
call   *0x14(%eax)
movl   $0x805ea38,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0xe0(%ebp),%eax
test   %eax,%eax
je     80555bb <__sprintf_chk@plt+0xbf4b>
lea    0x88(%ebp),%eax
mov    %eax,(%esp)
mov    0x806514c,%eax
movl   $0x1,0x4(%esp)
call   *0x14(%eax)
movl   $0x805ea5c,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0xe8(%ebp),%eax
test   %eax,%eax
je     80555c9 <__sprintf_chk@plt+0xbf59>
lea    0xa8(%ebp),%eax
mov    %eax,(%esp)
mov    0x806514c,%eax
movl   $0x1,0x4(%esp)
call   *0x14(%eax)
movl   $0x805ea84,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0xe4(%ebp),%eax
test   %eax,%eax
je     80555d7 <__sprintf_chk@plt+0xbf67>
lea    0x98(%ebp),%eax
mov    %eax,(%esp)
mov    0x806514c,%eax
movl   $0x1,0x4(%esp)
call   *0x14(%eax)
movl   $0x805eaac,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80555d7 <__sprintf_chk@plt+0xbf67>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xc8(%ebp),%edx
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
call   *0x14(%eax)
movl   $0x805e6ee,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    805560d <__sprintf_chk@plt+0xbf9d>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xb8(%ebp),%edx
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
call   *0x14(%eax)
movl   $0x805ead4,(%esp)
mov    %eax,%ebx
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80555f2 <__sprintf_chk@plt+0xbf82>
ja     8056066 <__sprintf_chk@plt+0xc9f6>
cmpl   $0xa4c68000,0x5c(%esp)
lea    0x0(%esi),%esi
jbe    8055a90 <__sprintf_chk@plt+0xc420>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0xa4c68000,0x8(%esp)
movl   $0x38d7e,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805f4ba,0x78(%esp)
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
cmp    $0x38d7e,%edi
jb     80562f8 <__sprintf_chk@plt+0xcc88>
ja     80560b6 <__sprintf_chk@plt+0xca46>
cmpl   $0xa4c68000,0x60(%esp)
jbe    80562f8 <__sprintf_chk@plt+0xcc88>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
movl   $0xa4c68000,0x8(%esp)
movl   $0x38d7e,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805f4ba,0x7c(%esp)
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
movl   $0x805e818,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x178(%ebp),%eax
mov    0x148(%ebp),%edx
mov    0x17c(%ebp),%ecx
mov    0x140(%ebp),%ebx
mov    %eax,0x64(%esp)
mov    0x124(%ebp),%eax
mov    %edx,0x70(%esp)
mov    0x128(%ebp),%edx
movl   $0x805eb3c,(%esp)
mov    %ecx,0x74(%esp)
mov    %eax,0x68(%esp)
mov    %edx,0x6c(%esp)
call   8049360 <gettext@plt>
mov    0x64(%esp),%edx
mov    0x74(%esp),%ecx
mov    %ebx,0x10(%esp)
mov    0x6c(%esp),%ebx
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
mov    0x70(%esp),%edx
mov    %ecx,0x18(%esp)
mov    0x68(%esp),%ecx
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x158(%ebp),%ebx
movl   $0x805e7de,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x58(%esp),%edx
test   %edx,%edx
jne    80563a6 <__sprintf_chk@plt+0xcd36>
mov    0x24(%ebp),%ebx
cmp    $0xffffffff,%ebx
je     80561d8 <__sprintf_chk@plt+0xcb68>
movl   $0x805e808,(%esp)
call   8049360 <gettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805e817,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805eb80,(%esp)
call   8049360 <gettext@plt>
mov    0x54(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%ebx
mov    0x7c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   805a160 <__sprintf_chk@plt+0x10af0>
mov    0x54(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
mov    0x4c(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x20(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x24(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   805a160 <__sprintf_chk@plt+0x10af0>
mov    0x4c(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055710 <__sprintf_chk@plt+0xc0a0>
movl   $0x805e6e6,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055920 <__sprintf_chk@plt+0xc2b0>
cmp    $0xe8,%edi
jb     805647e <__sprintf_chk@plt+0xce0e>
jbe    8056470 <__sprintf_chk@plt+0xce00>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
movl   $0xd4a51000,0x8(%esp)
movl   $0xe8,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e632,0x7c(%esp)
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
jmp    80560ea <__sprintf_chk@plt+0xca7a>
movl   $0x805e6d0,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055920 <__sprintf_chk@plt+0xc2b0>
movl   $0x805e6d5,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055920 <__sprintf_chk@plt+0xc2b0>
movl   $0x805e6c9,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055920 <__sprintf_chk@plt+0xc2b0>
mov    0x154(%ebp),%ebx
movl   $0x805e7f8,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    80561b0 <__sprintf_chk@plt+0xcb40>
mov    0x150(%ebp),%ebx
movl   $0x805e7c1,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055a2e <__sprintf_chk@plt+0xc3be>
lea    0x58(%ebp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x805e690,(%esp)
mov    %eax,%esi
call   8049360 <gettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8055d85 <__sprintf_chk@plt+0xc715>
lea    0x48(%ebp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   *0x14(%ebx)
movl   $0x805e685,(%esp)
mov    %eax,%esi
call   8049360 <gettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movzwl 0x1a(%ebp),%eax
jmp    8055d7d <__sprintf_chk@plt+0xc70d>
cmpl   $0xd4a51000,0x60(%esp)
ja     805630a <__sprintf_chk@plt+0xcc9a>
cmp    $0x0,%edi
ja     805663c <__sprintf_chk@plt+0xcfcc>
cmpl   $0x3b9aca00,0x60(%esp)
ja     805663c <__sprintf_chk@plt+0xcfcc>
cmpl   $0xf4240,0x60(%esp)
ja     8056675 <__sprintf_chk@plt+0xd005>
cmpl   $0x3e8,0x60(%esp)
movl   $0x805b742,0x7c(%esp)
jbe    80560ea <__sprintf_chk@plt+0xca7a>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e63b,0x7c(%esp)
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
jmp    80560ea <__sprintf_chk@plt+0xca7a>
cmpl   $0xd4a51000,0x5c(%esp)
ja     8055aa2 <__sprintf_chk@plt+0xc432>
cmp    $0x0,%esi
ja     8056603 <__sprintf_chk@plt+0xcf93>
cmpl   $0x3b9aca00,0x5c(%esp)
ja     8056603 <__sprintf_chk@plt+0xcf93>
cmpl   $0xf4240,0x5c(%esp)
ja     80566ae <__sprintf_chk@plt+0xd03e>
cmpl   $0x3e8,0x5c(%esp)
movl   $0x805b742,0x78(%esp)
jbe    805609a <__sprintf_chk@plt+0xca2a>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e63b,0x78(%esp)
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
jmp    805609a <__sprintf_chk@plt+0xca2a>
movl   $0x5,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,0x8065148
je     80555f2 <__sprintf_chk@plt+0xbf82>
jmp    80555e4 <__sprintf_chk@plt+0xbf74>
lea    0x0(%esi),%esi
movl   $0x13,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,0x8065144
je     805560d <__sprintf_chk@plt+0xbf9d>
jmp    80555ff <__sprintf_chk@plt+0xbf8f>
xchg   %ax,%ax
movl   $0xffffffff,(%esp)
call   8059650 <__sprintf_chk@plt+0xffe0>
mov    %eax,%esi
jmp    8055401 <__sprintf_chk@plt+0xbd91>
movl   $0x4,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,0x806514c
je     80555d7 <__sprintf_chk@plt+0xbf67>
jmp    805559f <__sprintf_chk@plt+0xbf2f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
mov    %eax,%ebx
jmp    80553e6 <__sprintf_chk@plt+0xbd76>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x3b9aca00,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e635,0x78(%esp)
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
jmp    805609a <__sprintf_chk@plt+0xca2a>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
movl   $0x3b9aca00,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e635,0x7c(%esp)
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
jmp    80560ea <__sprintf_chk@plt+0xca7a>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
movl   $0xf4240,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e638,0x7c(%esp)
mov    %eax,0x50(%esp)
mov    %edx,0x54(%esp)
jmp    80560ea <__sprintf_chk@plt+0xca7a>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0xf4240,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   805a030 <__sprintf_chk@plt+0x109c0>
movl   $0x805e638,0x78(%esp)
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
jmp    805609a <__sprintf_chk@plt+0xca2a>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80656b8,%edx
mov    0x4(%esp),%eax
test   %edx,%edx
jne    8056708 <__sprintf_chk@plt+0xd098>
mov    %eax,0x4(%esp)
jmp    80553b0 <__sprintf_chk@plt+0xbd40>
nop
jmp    8055090 <__sprintf_chk@plt+0xba20>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8055010 <__sprintf_chk@plt+0xb9a0>
test   %eax,%eax
js     8056744 <__sprintf_chk@plt+0xd0d4>
testb  $0x1,0x1a(%ebx)
jne    8056734 <__sprintf_chk@plt+0xd0c4>
mov    0x24(%esp),%edx
mov    (%edx),%edx
test   %edx,%edx
je     8056744 <__sprintf_chk@plt+0xd0d4>
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   80566f0 <__sprintf_chk@plt+0xd080>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%esi
mov    0x44(%esp),%ebx
test   %esi,%esi
je     8056880 <__sprintf_chk@plt+0xd210>
mov    0x40(%esp),%edi
xor    %ecx,%ecx
mov    $0x4,%edx
mov    %dx,(%esi)
movl   $0x0,0x4(%esi)
movb   $0x0,0xd(%esi)
and    $0x3,%edi
cmp    $0x1,%edi
movb   $0x0,0xc(%esi)
movb   $0x0,0xb(%esi)
movb   $0x0,0xa(%esi)
movb   $0x0,0x9(%esi)
movb   $0x0,0x8(%esi)
mov    %cx,0x2(%esi)
jle    8056890 <__sprintf_chk@plt+0xd220>
xor    %eax,%eax
add    $0x8,%esi
mov    %ax,-0x6(%esi)
lea    0xc(%ebx),%edi
call   8049080 <__ctype_toupper_loc@plt>
mov    %esi,%edx
mov    %eax,0xc(%esp)
jmp    80567f7 <__sprintf_chk@plt+0xd187>
lea    0x0(%esi),%esi
sub    $0x37,%ecx
or     (%edx),%cl
mov    %cl,(%edx)
mov    0xc(%esp),%eax
movsbl %cl,%ecx
shl    $0x4,%ecx
mov    %cl,(%edx)
movsbl 0x1(%ebx),%ebp
mov    (%eax),%ecx
mov    (%ecx,%ebp,4),%ecx
lea    -0x41(%ecx),%ebp
mov    %ebp,%eax
cmp    $0x5,%al
mov    %cl,0x1(%ebx)
ja     8056820 <__sprintf_chk@plt+0xd1b0>
add    $0x2,%ebx
sub    $0x37,%ecx
or     %cl,(%edx)
add    $0x1,%edx
cmp    %edi,%ebx
je     8056834 <__sprintf_chk@plt+0xd1c4>
mov    0xc(%esp),%eax
movsbl (%ebx),%ebp
mov    (%eax),%ecx
mov    (%ecx,%ebp,4),%ecx
lea    -0x41(%ecx),%ebp
mov    %ebp,%eax
cmp    $0x5,%al
mov    %cl,(%ebx)
jbe    80567c0 <__sprintf_chk@plt+0xd150>
sub    $0x30,%ecx
cmp    $0x9,%cl
ja     8056880 <__sprintf_chk@plt+0xd210>
or     (%edx),%cl
mov    %cl,(%edx)
jmp    80567c7 <__sprintf_chk@plt+0xd157>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x30,%ecx
cmp    $0x9,%cl
ja     8056880 <__sprintf_chk@plt+0xd210>
add    $0x2,%ebx
or     %cl,(%edx)
add    $0x1,%edx
cmp    %edi,%ebx
jne    80567f7 <__sprintf_chk@plt+0xd187>
movl   $0x6,0x8(%esp)
movl   $0x805ebb8,0x4(%esp)
mov    %esi,(%esp)
call   8049180 <memcmp@plt>
test   %eax,%eax
je     8056880 <__sprintf_chk@plt+0xd210>
movl   $0x6,0x8(%esp)
movl   $0x805ebc1,0x4(%esp)
mov    %esi,(%esp)
call   8049180 <memcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1c(%esp),%eax
movl   $0x10,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049390 <strtoul@plt>
lea    -0x1(%eax),%edx
cmp    $0xfffffffd,%edx
ja     8056880 <__sprintf_chk@plt+0xd210>
testb  $0x4,0x40(%esp)
jne    80568b9 <__sprintf_chk@plt+0xd249>
bswap  %eax
cmp    $0x1,%edi
mov    %eax,0x4(%esi)
jne    80568d7 <__sprintf_chk@plt+0xd267>
mov    0x1c(%esp),%eax
cmpb   $0x1,(%eax)
sbb    %eax,%eax
add    $0x2c,%esp
not    %eax
pop    %ebx
and    $0xfffffffe,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
jne    80567a4 <__sprintf_chk@plt+0xd134>
mov    0x1c(%esp),%ebx
cmpb   $0x3a,(%ebx)
jne    80568f0 <__sprintf_chk@plt+0xd280>
add    $0x1,%ebx
jmp    80567a4 <__sprintf_chk@plt+0xd134>
mov    $0xfffffffd,%eax
jmp    8056872 <__sprintf_chk@plt+0xd202>
lea    0x0(%esi),%esi
sub    $0x3c,%esp
mov    $0x6,%eax
mov    0x40(%esp),%edx
lea    -0x2(%edx),%ecx
sub    $0x1,%eax
cmpb   $0x0,0x8(%ecx,%eax,1)
jne    8056940 <__sprintf_chk@plt+0xd2d0>
test   %eax,%eax
jne    805690f <__sprintf_chk@plt+0xd29f>
mov    0x2(%edx),%eax
bswap  %eax
test   %eax,%eax
jne    8056a18 <__sprintf_chk@plt+0xd3a8>
movb   $0x0,0x8065160
mov    $0x8065160,%eax
add    $0x3c,%esp
ret
lea    0x0(%esi),%esi
mov    0x2(%edx),%eax
bswap  %eax
test   %eax,%eax
jne    80569ae <__sprintf_chk@plt+0xd33e>
movzbl 0xb(%edx),%eax
mov    %eax,0x28(%esp)
movzbl 0xa(%edx),%eax
mov    %eax,0x24(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0x20(%esp)
movzbl 0x8(%edx),%eax
mov    %eax,0x1c(%esp)
movzbl 0x7(%edx),%eax
mov    %eax,0x18(%esp)
movzbl 0x6(%edx),%eax
movl   $0x805ebce,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x40,0x4(%esp)
movl   $0x8065160,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x8065160,%eax
add    $0x3c,%esp
ret
movzbl 0xb(%edx),%ecx
mov    %ecx,0x2c(%esp)
movzbl 0xa(%edx),%ecx
mov    %ecx,0x28(%esp)
movzbl 0x9(%edx),%ecx
mov    %ecx,0x24(%esp)
movzbl 0x8(%edx),%ecx
mov    %ecx,0x20(%esp)
movzbl 0x7(%edx),%ecx
mov    %ecx,0x1c(%esp)
movzbl 0x6(%edx),%edx
mov    %eax,0x14(%esp)
movl   $0x805ebe8,0x10(%esp)
movl   $0x40,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
movl   $0x8065160,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x8065160,%eax
add    $0x3c,%esp
ret
nop
mov    %eax,0x14(%esp)
movl   $0x805ebc8,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
movl   $0x8065160,(%esp)
call   80490a0 <__snprintf_chk@plt>
jmp    8056931 <__sprintf_chk@plt+0xd2c1>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
cmpw   $0x4,(%eax)
je     8056a88 <__sprintf_chk@plt+0xd418>
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x40,0x8(%esp)
movl   $0x80651a0,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
add    $0x2,%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    8056900 <__sprintf_chk@plt+0xd290>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5cc,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805ec07,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x5bc(%esp)
xor    %eax,%eax
andl   $0x4,0x5e0(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8056ccd <__sprintf_chk@plt+0xd65d>
movl   $0x4,(%esp)
call   804f4a0 <__sprintf_chk@plt+0x5e30>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8056d2c <__sprintf_chk@plt+0xd6bc>
movl   $0x805ec3c,(%esp)
lea    0x1bc(%esp),%esi
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805eca0,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x1c(%esp),%eax
movl   $0x3ff,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
mov    0x1c(%esp),%ebp
lea    0xbc(%esp),%edi
mov    %ebp,0x8(%esp)
movl   $0x3ff,0x4(%esp)
mov    %esi,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8056ca0 <__sprintf_chk@plt+0xd630>
lea    0x13c(%esp),%eax
lea    0x3c(%esp),%ebx
mov    %eax,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805ec56,0x4(%esp)
mov    %esi,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x2,%eax
jle    8056b5b <__sprintf_chk@plt+0xd4eb>
mov    0x18(%esp),%eax
lea    0x2c(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x5,(%esp)
call   *0x18(%eax)
mov    0x5e0(%esp),%edx
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   *0x14(%eax)
movl   $0x80,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x5,(%esp)
call   *0x18(%eax)
mov    0x5e0(%esp),%ecx
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %ecx,0x4(%esp)
call   *0x14(%eax)
movl   $0x80,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x18(%esp),%eax
lea    0x13c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %ebp,0x8(%esp)
movl   $0x2,(%esp)
call   *0x18(%eax)
mov    0x5e0(%esp),%ecx
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %ecx,0x4(%esp)
call   *0x14(%eax)
movl   $0x80,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x13c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <__strcpy_chk@plt>
lea    0x13c(%esp),%eax
mov    %eax,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805ec5f,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8056b50 <__sprintf_chk@plt+0xd4e0>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x5bc(%esp),%edx
xor    %gs:0x14,%edx
jne    8056d6b <__sprintf_chk@plt+0xd6fb>
add    $0x5cc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x805b794,0x4(%esp)
movl   $0x805ec1b,(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
jne    8056ae1 <__sprintf_chk@plt+0xd471>
movl   $0x0,(%esp)
call   8049280 <perror@plt>
movl   $0x805ec74,(%esp)
call   8049360 <gettext@plt>
movl   $0x805ec1b,0xc(%esp)
movl   $0x805ec07,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    8056cae <__sprintf_chk@plt+0xd63e>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805b70d,0x10(%esp)
movl   $0x805ec2f,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0xffffffff,%eax
jmp    8056cae <__sprintf_chk@plt+0xd63e>
call   80491c0 <__stack_chk_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x26c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805ece1,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x25c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x40(%esp)
je     805742e <__sprintf_chk@plt+0xddbe>
movl   $0x805b231,(%esp)
call   804f3f0 <__sprintf_chk@plt+0x5d80>
test   %eax,%eax
mov    %eax,0x80651e4
je     80574e3 <__sprintf_chk@plt+0xde73>
mov    0x40(%esp),%eax
lea    0x5c(%esp),%ebx
mov    %ebx,(%esp)
movl   $0x100,0x4(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
mov    %ebx,(%esp)
xor    %ebx,%ebx
movl   $0x805ed0b,0x4(%esp)
call   80490b0 <strstr@plt>
movl   $0x380,(%esp)
test   %eax,%eax
setne  %bl
mov    %ebx,0x80651e0
call   80492d0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x44(%esp)
je     80574c5 <__sprintf_chk@plt+0xde55>
mov    %ebx,%ebp
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
mov    0x44(%esp),%ebx
add    0x48(%esp),%ebx
movl   $0x0,0x3c(%esp)
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     8056f30 <__sprintf_chk@plt+0xd8c0>
lea    0x36(%ebx),%eax
mov    %eax,0x28(%esp)
lea    0x34(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x30(%ebx),%eax
mov    %eax,0x20(%esp)
lea    0x2c(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x2a(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x1c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xc(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x15c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %ebx,0x2c(%esp)
movl   $0x805ee60,0x4(%esp)
mov    %eax,(%esp)
call   80493b0 <fscanf@plt>
cmp    $0xffffffff,%eax
je     8056f8d <__sprintf_chk@plt+0xd91d>
mov    0x80651e0,%ebp
test   %ebp,%ebp
je     80571e0 <__sprintf_chk@plt+0xdb70>
cmp    $0xa,%eax
jne    80571e9 <__sprintf_chk@plt+0xdb79>
mov    $0x2,%ecx
mov    $0x2,%esi
mov    %cx,0x8(%ebx)
mov    %si,0x18(%ebx)
movzbl 0x15c(%esp),%eax
cmp    $0x54,%eax
je     8057268 <__sprintf_chk@plt+0xdbf8>
cmp    $0x55,%eax
jne    8057362 <__sprintf_chk@plt+0xdcf2>
cmpb   $0x44,0x15d(%esp)
je     80573d0 <__sprintf_chk@plt+0xdd60>
mov    $0x805ed5a,%esi
mov    $0x5,%ecx
lea    0x15c(%esp),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8057377 <__sprintf_chk@plt+0xdd07>
xchg   %ax,%ax
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805ed6c,0x10(%esp)
jmp    80571fd <__sprintf_chk@plt+0xdb8d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x34(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x30(%ebx),%eax
mov    %eax,0x20(%esp)
lea    0x2c(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x2a(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x1c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xc(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x15c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %ebx,0x28(%esp)
movl   $0x805ee88,0x4(%esp)
mov    %eax,(%esp)
call   80493b0 <fscanf@plt>
cmp    $0xffffffff,%eax
jne    8056ea4 <__sprintf_chk@plt+0xd834>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    0x4c(%esp),%ebp
add    0x3c(%esp),%ebp
je     8057487 <__sprintf_chk@plt+0xde17>
movl   $0x805ed87,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x1,0x288(%esp)
je     805748e <__sprintf_chk@plt+0xde1e>
movl   $0x805eeec,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x44(%esp),%eax
xor    %edi,%edi
mov    %ebp,0x3c(%esp)
mov    0x284(%esp),%esi
lea    0x8(%eax),%ebx
jmp    8057125 <__sprintf_chk@plt+0xdab5>
movswl 0x2c(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x28(%ebx),%eax
movl   $0x805edc8,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x280(%esp),%eax
add    $0x1,%edi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    0x80651e4,%eax
call   *0x14(%eax)
movl   $0x805edda,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x280(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x10(%ebx),%eax
add    $0x38,%ebx
mov    %eax,(%esp)
mov    0x80651e4,%eax
call   *0x14(%eax)
movl   $0x805edda,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
mov    -0x3c(%ebx),%eax
mov    %eax,0x4(%esp)
movzwl -0x18(%ebx),%eax
mov    %eax,(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ede1,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
mov    -0x3c(%ebx),%eax
mov    %eax,0x4(%esp)
movzwl -0x16(%ebx),%eax
mov    %eax,(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ec5c,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
mov    -0x3c(%ebx),%eax
mov    %eax,0x4(%esp)
movzwl -0x14(%ebx),%eax
mov    %eax,(%esp)
call   8050710 <__sprintf_chk@plt+0x70a0>
movl   $0x805ede8,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
cmp    %edi,0x3c(%esp)
jle    8057477 <__sprintf_chk@plt+0xde07>
mov    -0x4(%ebx),%eax
movl   $0x805eda0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    -0x8(%ebx),%ebp
mov    $0x51eb851f,%eax
movl   $0x805eda5,0x4(%esp)
movl   $0x1,(%esp)
mul    %ebp
mov    %edx,%ecx
mov    %ebp,%edx
shr    $0x5,%ecx
imul   $0x64,%ecx,%eax
sub    %eax,%edx
mov    $0x88888889,%eax
mov    %edx,0x10(%esp)
mul    %ecx
mov    %ebp,%eax
shr    $0x5,%edx
imul   $0x3c,%edx,%edx
sub    %edx,%ecx
mov    $0x57619f1,%edx
mul    %edx
mov    %ecx,0xc(%esp)
shr    $0x7,%edx
mov    %edx,0x8(%esp)
call   80494d0 <__printf_chk@plt>
cmpl   $0x1,0x288(%esp)
jle    8057029 <__sprintf_chk@plt+0xd9b9>
mov    0x80651e0,%edx
test   %edx,%edx
je     8057006 <__sprintf_chk@plt+0xd996>
movswl 0x2e(%ebx),%eax
mov    %eax,0x10(%esp)
movswl 0x2c(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x28(%ebx),%eax
movl   $0x805edb7,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8057029 <__sprintf_chk@plt+0xd9b9>
lea    0x0(%esi),%esi
cmp    $0x9,%eax
je     8056ebb <__sprintf_chk@plt+0xd84b>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805ed33,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
movl   $0x805ed4e,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8057358 <__sprintf_chk@plt+0xdce8>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    $0xffffffff,%eax
nop
mov    0x25c(%esp),%edi
xor    %gs:0x14,%edi
jne    80574de <__sprintf_chk@plt+0xde6e>
add    $0x26c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpb   $0x43,0x15d(%esp)
jne    8056ef5 <__sprintf_chk@plt+0xd885>
cmpb   $0x50,0x15e(%esp)
jne    8056ef5 <__sprintf_chk@plt+0xd885>
cmpb   $0x0,0x15f(%esp)
jne    8056ef5 <__sprintf_chk@plt+0xd885>
movl   $0x805b39b,0x4(%ebx)
mov    0xc(%ebx),%eax
add    $0x38,%ebx
addl   $0x1,0x3c(%esp)
bswap  %eax
mov    %eax,-0x2c(%ebx)
mov    -0x1c(%ebx),%eax
bswap  %eax
mov    %eax,-0x1c(%ebx)
movzwl -0x10(%ebx),%eax
ror    $0x8,%ax
mov    %ax,-0x10(%ebx)
movzwl -0xe(%ebx),%eax
ror    $0x8,%ax
mov    %ax,-0xe(%ebx)
movzwl -0xc(%ebx),%eax
ror    $0x8,%ax
mov    %ax,-0xc(%ebx)
cmpl   $0x10,0x3c(%esp)
jne    8056e38 <__sprintf_chk@plt+0xd7c8>
mov    0x48(%esp),%eax
addl   $0x10,0x4c(%esp)
add    $0x700,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   80492c0 <realloc@plt>
addl   $0x380,0x48(%esp)
test   %eax,%eax
mov    %eax,0x44(%esp)
jne    8056e25 <__sprintf_chk@plt+0xd7b5>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805ed22,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
movl   $0x805ed01,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    8057248 <__sprintf_chk@plt+0xdbd8>
mov    $0x805ed5a,%esi
mov    $0x5,%ecx
lea    0x15c(%esp),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8057388 <__sprintf_chk@plt+0xdd18>
movl   $0x805ed5f,0x4(%ebx)
jmp    8057299 <__sprintf_chk@plt+0xdc29>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x47,%eax
je     80573f8 <__sprintf_chk@plt+0xdd88>
cmp    $0x45,%eax
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
cmpb   $0x53,0x15d(%esp)
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
cmpb   $0x50,0x15e(%esp)
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
cmpb   $0x0,0x15f(%esp)
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
movl   $0x805ed68,0x4(%ebx)
jmp    8057299 <__sprintf_chk@plt+0xdc29>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x50,0x15e(%esp)
jne    8056ef5 <__sprintf_chk@plt+0xd885>
cmpb   $0x0,0x15f(%esp)
jne    8056ef5 <__sprintf_chk@plt+0xd885>
movl   $0x805b40c,0x4(%ebx)
jmp    8057299 <__sprintf_chk@plt+0xdc29>
cmpb   $0x52,0x15d(%esp)
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
cmpb   $0x45,0x15e(%esp)
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
cmpb   $0x0,0x15f(%esp)
jne    8056f10 <__sprintf_chk@plt+0xd8a0>
movl   $0x805ed64,0x4(%ebx)
jmp    8057299 <__sprintf_chk@plt+0xdc29>
call   8049460 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    80574af <__sprintf_chk@plt+0xde3f>
movl   $0x805aa60,(%esp)
call   8049360 <gettext@plt>
movl   $0x805eceb,0x10(%esp)
movl   $0x805bc84,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0x1,%eax
jmp    8057248 <__sprintf_chk@plt+0xdbd8>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8057487 <__sprintf_chk@plt+0xde17>
mov    %eax,(%esp)
call   8049110 <free@plt>
xor    %eax,%eax
jmp    8057248 <__sprintf_chk@plt+0xdbd8>
movl   $0x805eeac,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8056fed <__sprintf_chk@plt+0xd97d>
movl   $0x805ece1,(%esp)
call   8049280 <perror@plt>
mov    $0xffffffff,%eax
jmp    8057248 <__sprintf_chk@plt+0xdbd8>
movl   $0x805b5bc,(%esp)
call   8049360 <gettext@plt>
movl   $0x805ed12,0x10(%esp)
jmp    8057326 <__sprintf_chk@plt+0xdcb6>
call   80491c0 <__stack_chk_fail@plt>
movl   $0x805edf0,(%esp)
call   8049360 <gettext@plt>
movl   $0x805ecf9,0x10(%esp)
jmp    8057326 <__sprintf_chk@plt+0xdcb6>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8064248,%eax
mov    0x48(%esp),%ebx
mov    0x44(%esp),%esi
mov    %ax,(%ebx)
add    $0x2,%ebx
movzbl (%esi),%edx
cmp    $0x2d,%dl
je     805763d <__sprintf_chk@plt+0xdfcd>
test   %dl,%dl
mov    %edx,0x1c(%esp)
je     805763d <__sprintf_chk@plt+0xdfcd>
call   8049640 <__ctype_b_loc@plt>
mov    0x1c(%esp),%edx
xor    %edi,%edi
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
movsbl %dl,%ecx
add    $0x1,%esi
mov    (%eax),%ebp
movzwl 0x0(%ebp,%ecx,2),%eax
test   $0x2,%ah
je     8057573 <__sprintf_chk@plt+0xdf03>
mov    %ecx,0x1c(%esp)
call   8049080 <__ctype_toupper_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
mov    (%eax,%ecx,4),%eax
mov    %eax,%edx
movsbl %al,%eax
movzwl 0x0(%ebp,%eax,2),%eax
test   $0x9,%ah
je     80575b0 <__sprintf_chk@plt+0xdf40>
add    %edx,%edx
add    $0x1,%ebx
mov    %dl,-0x1(%ebx)
movzbl (%esi),%edx
add    $0x1,%edi
cmp    $0x2d,%dl
je     80575f0 <__sprintf_chk@plt+0xdf80>
test   %dl,%dl
je     80575f0 <__sprintf_chk@plt+0xdf80>
cmp    $0x6,%edi
jne    8057541 <__sprintf_chk@plt+0xded1>
test   %dl,%dl
jne    8057646 <__sprintf_chk@plt+0xdfd6>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x805dad7,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x8065220,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6,%edi
je     805767f <__sprintf_chk@plt+0xe00f>
add    $0x1,%edi
mov    %ebx,%edx
xchg   %ax,%ax
add    $0x1,%ebx
lea    -0x1(%ebx,%edi,1),%eax
sub    %edx,%eax
cmp    $0x5,%eax
movb   $0x40,-0x1(%ebx)
jbe    8057600 <__sprintf_chk@plt+0xdf90>
cmpb   $0x2d,(%esi)
jne    80575a0 <__sprintf_chk@plt+0xdf30>
add    $0x1,%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80495f0 <strtol@plt>
add    %eax,%eax
mov    %al,(%ebx)
xor    %eax,%eax
jmp    80575a5 <__sprintf_chk@plt+0xdf35>
mov    %ebx,%edx
mov    $0x1,%edi
jmp    8057600 <__sprintf_chk@plt+0xdf90>
movl   $0x805dae8,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x8065220,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
call   8049460 <__errno_location@plt>
movl   $0x7,(%eax)
mov    $0xffffffff,%eax
jmp    80575a5 <__sprintf_chk@plt+0xdf35>
cmp    $0x2d,%dl
je     8057617 <__sprintf_chk@plt+0xdfa7>
jmp    8057594 <__sprintf_chk@plt+0xdf24>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8057500 <__sprintf_chk@plt+0xde90>
test   %eax,%eax
js     80576c0 <__sprintf_chk@plt+0xe050>
xor    %eax,%eax
mov    %ax,(%ebx)
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
mov    $0xffffffff,%eax
jmp    80576bb <__sprintf_chk@plt+0xe04b>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %eax,%eax
sub    $0x28,%esp
xor    %ebx,%ebx
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx,%eax,1),%edx
shr    %dl
cmp    $0x20,%dl
cmove  %ebx,%edx
add    $0x1,%eax
mov    %dl,0x80651ff(%eax)
cmp    $0x6,%eax
jne    80576e0 <__sprintf_chk@plt+0xe070>
movb   $0x0,0x8065206
movzbl 0x6(%ecx),%eax
and    $0x1e,%eax
sar    %eax
mov    %eax,%ebx
je     8057743 <__sprintf_chk@plt+0xe0d3>
movl   $0x8065200,(%esp)
call   80493c0 <strlen@plt>
mov    %ebx,0x10(%esp)
movl   $0x805dafa,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
add    $0x8065200,%eax
mov    %eax,(%esp)
call   8049670 <__sprintf_chk@plt>
add    $0x28,%esp
mov    $0x8065200,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     8057788 <__sprintf_chk@plt+0xe118>
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
movl   $0x8065220,0x10(%esp)
movl   $0x805dafe,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
mov    0x8064740,%eax
movl   $0x8065220,0xc(%esp)
movl   $0x805b5fa,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    80577c0 <__sprintf_chk@plt+0xe150>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x6c,%esp
mov    0x70(%esp),%eax
mov    %gs:0x14,%edx
mov    %edx,0x5c(%esp)
xor    %edx,%edx
movzwl (%eax),%ecx
lea    -0x1(%ecx),%edx
cmp    $0xfffd,%dx
ja     8057800 <__sprintf_chk@plt+0xe190>
add    $0x2,%eax
mov    %eax,(%esp)
call   80576d0 <__sprintf_chk@plt+0xe060>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8057826 <__sprintf_chk@plt+0xe1b6>
add    $0x6c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x40,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
jmp    80577eb <__sprintf_chk@plt+0xe17b>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x13c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805ef42,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
movl   $0x805b794,0x4(%esp)
movl   $0x805ef55,(%esp)
call   8049410 <fopen@plt>
movl   $0x805b794,0x4(%esp)
movl   $0x805ef42,(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8057aaf <__sprintf_chk@plt+0xe43f>
movl   $0x805b794,0x4(%esp)
movl   $0x805ef55,(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8057a80 <__sprintf_chk@plt+0xe410>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8057a8c <__sprintf_chk@plt+0xe41c>
movl   $0x805ef68,(%esp)
lea    0x2c(%esp),%ebx
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805efd4,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x1c(%esp),%eax
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
nop
mov    0x1c(%esp),%eax
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8057a4f <__sprintf_chk@plt+0xe3df>
lea    0x3f(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
movb   $0x0,0x35(%esp)
movb   $0x0,0x3d(%esp)
call   80495f0 <strtol@plt>
mov    %ebx,0x8(%esp)
movl   $0x805ef86,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,%edi
lea    0x36(%esp),%eax
mov    %eax,0xc(%esp)
call   80494d0 <__printf_chk@plt>
lea    -0x1(%edi),%eax
mov    %eax,%edi
shl    $0x4,%edi
sub    %eax,%edi
lea    0x18(%ebx,%edi,1),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,%ebp
lea    0x20(%ebx,%edi,1),%eax
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   80491d0 <rewind@plt>
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
lea    0x0(%esi),%esi
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8057910 <__sprintf_chk@plt+0xe2a0>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   80495f0 <strtol@plt>
cmp    %eax,%edi
jne    80579e0 <__sprintf_chk@plt+0xe370>
lea    0x3c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x32(%esp),%eax
mov    %eax,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x805ef96,0x4(%esp)
movl   $0x1,(%esp)
movb   $0x0,0x3b(%esp)
movb   $0x0,0x40(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8057910 <__sprintf_chk@plt+0xe2a0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049160 <fclose@plt>
mov    %esi,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x12c(%esp),%edx
xor    %gs:0x14,%edx
jne    8057ac0 <__sprintf_chk@plt+0xe450>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x805ef55,(%esp)
call   8049280 <perror@plt>
movl   $0x805efac,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    8057a65 <__sprintf_chk@plt+0xe3f5>
movl   $0x805ef42,(%esp)
call   8049280 <perror@plt>
jmp    8057891 <__sprintf_chk@plt+0xe221>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    %edi,(%esp)
call   80493c0 <strlen@plt>
mov    %eax,%ebx
xor    %eax,%eax
test   %ebx,%ebx
jle    8057b3f <__sprintf_chk@plt+0xe4cf>
movzbl -0x1(%edi,%ebx,1),%esi
lea    -0x1(%edi),%ebp
lea    0x0(%ebp,%ebx,1),%edx
mov    %esi,%ecx
cmp    $0x3a,%cl
jne    8057b08 <__sprintf_chk@plt+0xe498>
test   %eax,%eax
jne    8057b39 <__sprintf_chk@plt+0xe4c9>
lea    0x0(%esi),%esi
call   8049640 <__ctype_b_loc@plt>
mov    %esi,%edx
movsbl %dl,%esi
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%esi,2)
je     8057b48 <__sprintf_chk@plt+0xe4d8>
sub    $0x1,%ebx
je     8057b48 <__sprintf_chk@plt+0xe4d8>
movzbl -0x1(%edi,%ebx,1),%esi
mov    $0x1,%eax
lea    0x0(%ebp,%ebx,1),%edx
mov    %esi,%ecx
cmp    $0x3a,%cl
jne    8057b08 <__sprintf_chk@plt+0xe498>
test   %eax,%eax
je     8057b08 <__sprintf_chk@plt+0xe498>
movb   $0x0,(%edx)
lea    (%edi,%ebx,1),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80493c0 <strlen@plt>
test   %eax,%eax
mov    %eax,%ebx
jle    8057ba8 <__sprintf_chk@plt+0xe538>
call   8049640 <__ctype_b_loc@plt>
mov    (%eax),%edx
xchg   %ax,%ax
jmp    8057b8d <__sprintf_chk@plt+0xe51d>
lea    0x0(%esi),%esi
sub    $0x1,%ebx
je     8057ba8 <__sprintf_chk@plt+0xe538>
movsbl -0x1(%esi,%ebx,1),%eax
testb  $0x8,0x1(%edx,%eax,2)
jne    8057b88 <__sprintf_chk@plt+0xe518>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049440 <__strdup@plt>
mov    %eax,%esi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049440 <__strdup@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8057ad0 <__sprintf_chk@plt+0xe460>
mov    %ebx,(%esp)
mov    %eax,0x18(%esp)
call   8057ad0 <__sprintf_chk@plt+0xe460>
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   8057b60 <__sprintf_chk@plt+0xe4f0>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8057b60 <__sprintf_chk@plt+0xe4f0>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
cmp    %edi,%eax
mov    %eax,%ebp
mov    %edi,%eax
cmovle %ebp,%eax
mov    %eax,0x8(%esp)
call   80495c0 <strncmp@plt>
test   %eax,%eax
jne    8057d08 <__sprintf_chk@plt+0xe698>
cmp    %ebp,%edi
jg     8057ce8 <__sprintf_chk@plt+0xe678>
jl     8057d30 <__sprintf_chk@plt+0xe6c0>
add    %esi,%edi
lea    (%ebx,%ebp,1),%eax
mov    %edi,(%esp)
mov    %eax,%ebp
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   80495f0 <strtol@plt>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,%edi
call   80495f0 <strtol@plt>
cmp    %eax,%edi
jl     8057d30 <__sprintf_chk@plt+0xe6c0>
jg     8057ce8 <__sprintf_chk@plt+0xe678>
mov    0x18(%esp),%eax
mov    $0xffffffff,%edi
test   %eax,%eax
je     8057c96 <__sprintf_chk@plt+0xe626>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
mov    %eax,%edi
mov    0x1c(%esp),%eax
mov    $0xffffffff,%ebp
test   %eax,%eax
je     8057cbd <__sprintf_chk@plt+0xe64d>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
mov    %eax,%ebp
mov    %esi,(%esp)
call   8049110 <free@plt>
mov    %ebx,(%esp)
call   8049110 <free@plt>
xor    %eax,%eax
cmp    %ebp,%edi
setg   %al
mov    $0xffffffff,%edx
cmovge %eax,%edx
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049110 <free@plt>
mov    %ebx,(%esp)
call   8049110 <free@plt>
add    $0x2c,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   8049110 <free@plt>
mov    %ebx,(%esp)
call   8049110 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
mov    %eax,%edx
mov    %edx,%eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049110 <free@plt>
mov    %ebx,(%esp)
call   8049110 <free@plt>
mov    $0xffffffff,%edx
jmp    8057cdc <__sprintf_chk@plt+0xe66c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x7f,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x450(%esp),%eax
lea    0x230(%esp),%edi
lea    0x2c(%esp),%ebx
movl   $0x0,0x22c(%esp)
00
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
mov    0x458(%esp),%eax
movl   $0x1ff,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8057eb2 <__sprintf_chk@plt+0xe842>
movl   $0x200,0x8(%esp)
lea    0x460(%esp),%ebp
movl   $0x805da27,0x4(%esp)
lea    0x22c(%esp),%edi
mov    %ebx,(%esp)
call   8049090 <__strcat_chk@plt>
mov    0x45c(%esp),%esi
call   8049640 <__ctype_b_loc@plt>
mov    %ebx,%edx
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    (%eax),%ebx
jmp    8057dfb <__sprintf_chk@plt+0xe78b>
add    $0x1,%edx
movzbl (%edx),%eax
movsbl %al,%ecx
testb  $0x20,0x1(%ebx,%ecx,2)
jne    8057df8 <__sprintf_chk@plt+0xe788>
cmp    $0x7c,%al
je     8057df8 <__sprintf_chk@plt+0xe788>
mov    %edx,(%esp)
movl   $0x805f006,0x4(%esp)
mov    %edx,0x14(%esp)
call   80494e0 <strpbrk@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
je     8057ea2 <__sprintf_chk@plt+0xe832>
lea    0x1(%eax),%ebx
movb   $0x0,(%eax)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    8057e88 <__sprintf_chk@plt+0xe818>
movl   $0x200,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %ebp,%esi
mov    %edi,(%esp)
add    $0x8,%ebp
mov    %eax,0x4(%esp)
call   8049090 <__strcat_chk@plt>
mov    0x4(%esi),%esi
test   %esi,%esi
je     8057eaa <__sprintf_chk@plt+0xe83a>
movl   $0x200,0x8(%esp)
movl   $0x805da27,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   %ebx,%ebx
je     8057ea6 <__sprintf_chk@plt+0xe836>
mov    %ebx,%edx
jmp    8057df0 <__sprintf_chk@plt+0xe780>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x200,0x8(%esp)
movl   $0x805f00b,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    8057e61 <__sprintf_chk@plt+0xe7f1>
xor    %ebx,%ebx
jmp    8057e2e <__sprintf_chk@plt+0xe7be>
test   %esi,%esi
jne    8057ecd <__sprintf_chk@plt+0xe85d>
mov    %edi,(%esp)
call   8049440 <__strdup@plt>
mov    0x42c(%esp),%edi
xor    %gs:0x14,%edi
jne    8057f05 <__sprintf_chk@plt+0xe895>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x454(%esp),%eax
test   %eax,%eax
jne    8057eaa <__sprintf_chk@plt+0xe83a>
mov    0x1c(%esp),%eax
mov    %esi,0x10(%esp)
movl   $0x805f010,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
xor    %eax,%eax
jmp    8057eb2 <__sprintf_chk@plt+0xe842>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x22c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x21c(%esp)
xor    %eax,%eax
mov    0x244(%esp),%eax
lea    0x1c(%esp),%esi
movl   $0x1ff,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8057f96 <__sprintf_chk@plt+0xe926>
lea    0x248(%esp),%eax
xor    %ebx,%ebx
jmp    8057f73 <__sprintf_chk@plt+0xe903>
nop
mov    0x4(%eax),%edi
lea    0x8(%eax),%ebp
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   80490b0 <strstr@plt>
or     %ebx,%edi
test   %eax,%eax
mov    %ebp,%eax
cmovne %edi,%ebx
mov    (%eax),%edx
test   %edx,%edx
jne    8057f58 <__sprintf_chk@plt+0xe8e8>
mov    %ebx,%eax
mov    0x21c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8057f9d <__sprintf_chk@plt+0xe92d>
add    $0x22c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
jmp    8057f7b <__sprintf_chk@plt+0xe90b>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
movl   $0x805b794,0x4(%esp)
mov    %eax,(%esp)
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8058020 <__sprintf_chk@plt+0xe9b0>
mov    0x80652a4,%edx
test   %edx,%edx
je     8058000 <__sprintf_chk@plt+0xe990>
mov    0x80652a0,%eax
mov    %eax,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   8049400 <setvbuf@plt>
mov    %ebx,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
call   80493e0 <getpagesize@plt>
mov    %eax,(%esp)
mov    %eax,%esi
mov    %eax,0x80652a0
call   80492d0 <malloc@plt>
mov    %eax,0x80652a4
mov    %eax,%edx
mov    %esi,%eax
jmp    8057fde <__sprintf_chk@plt+0xe96e>
nop
xor    %eax,%eax
jmp    8057ff8 <__sprintf_chk@plt+0xe988>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x3c,%esp
mov    0x40(%esp),%eax
movzbl 0x4(%eax),%edx
mov    %edx,0x24(%esp)
movzbl 0x3(%eax),%edx
mov    %edx,0x20(%esp)
movzbl 0x2(%eax),%edx
mov    %edx,0x1c(%esp)
movzbl 0x1(%eax),%edx
mov    %edx,0x18(%esp)
movzbl (%eax),%eax
movl   $0x805f040,0x10(%esp)
movl   $0xc,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0xc,0x4(%esp)
movl   $0x80652c0,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x80652c0,%eax
movb   $0x0,0x80652ca
add    $0x3c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     80580d8 <__sprintf_chk@plt+0xea68>
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
movl   $0x80652e0,0x10(%esp)
movl   $0x805dafe,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
mov    0x8064740,%eax
movl   $0x80652e0,0xc(%esp)
movl   $0x805b5fa,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    8058110 <__sprintf_chk@plt+0xeaa0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
movzwl (%eax),%ecx
lea    -0x1(%ecx),%edx
cmp    $0xfffd,%dx
ja     8058130 <__sprintf_chk@plt+0xeac0>
add    $0x2,%eax
mov    %eax,0x4(%esp)
jmp    8058030 <__sprintf_chk@plt+0xe9c0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805daaa,0x4(%esp)
jmp    8049360 <gettext@plt>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80642a8,%eax
mov    0x28(%esp),%esi
mov    0x24(%esp),%ebx
mov    %ax,(%esi)
add    $0x2,%esi
mov    %ebx,(%esp)
call   80493c0 <strlen@plt>
xor    %edx,%edx
cmp    $0xa,%eax
jne    805818b <__sprintf_chk@plt+0xeb1b>
movsbl (%ebx,%edx,2),%eax
movzbl 0x1(%ebx,%edx,2),%ecx
shl    $0x4,%eax
sub    $0x30,%ecx
or     %ecx,%eax
mov    %al,(%esi,%edx,1)
add    $0x1,%edx
cmp    $0x5,%edx
jne    8058167 <__sprintf_chk@plt+0xeaf7>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0x805f064,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x80652e0,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8058185 <__sprintf_chk@plt+0xeb15>
jmp    80581d0 <__sprintf_chk@plt+0xeb60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8058140 <__sprintf_chk@plt+0xead0>
test   %eax,%eax
js     8058208 <__sprintf_chk@plt+0xeb98>
mov    $0x10e,%eax
mov    %ax,(%ebx)
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    80581fe <__sprintf_chk@plt+0xeb8e>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8064300,%edx
mov    0x30(%esp),%edi
test   %edx,%edx
js     8058310 <__sprintf_chk@plt+0xeca0>
mov    0x8063ea0,%ebx
mov    $0xffffffff,%ebp
test   %ebx,%ebx
je     80582e0 <__sprintf_chk@plt+0xec70>
mov    $0x8063ea0,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
test   %edx,%edx
je     80582b8 <__sprintf_chk@plt+0xec48>
test   %edi,%edi
jne    80582d0 <__sprintf_chk@plt+0xec60>
mov    0x2c(%ebx),%eax
cmp    $0xffffffff,%eax
jne    80582dc <__sprintf_chk@plt+0xec6c>
mov    0x8064300,%eax
test   %eax,%eax
jne    8058286 <__sprintf_chk@plt+0xec16>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8058286 <__sprintf_chk@plt+0xec16>
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <access@plt>
test   %eax,%eax
jne    80582b8 <__sprintf_chk@plt+0xec48>
mov    0x8(%ebx),%edx
cmp    $0x6,%edx
mov    $0x5,%eax
je     805829c <__sprintf_chk@plt+0xec2c>
xor    %eax,%eax
cmp    $0x9,%edx
sete   %al
lea    0x2(%eax,%eax,2),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049570 <socket@plt>
test   %eax,%eax
mov    %eax,0x2c(%ebx)
cmovns %eax,%ebp
add    $0x4,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
jne    8058248 <__sprintf_chk@plt+0xebd8>
test   %ebp,%ebp
js     80582e0 <__sprintf_chk@plt+0xec70>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edi,%edx
jne    80582b8 <__sprintf_chk@plt+0xec48>
mov    0x2c(%ebx),%eax
cmp    $0xffffffff,%eax
je     8058286 <__sprintf_chk@plt+0xec16>
mov    %eax,%ebp
jmp    80582b8 <__sprintf_chk@plt+0xec48>
movl   $0x805f090,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x0,0x8064300
00
call   8058510 <__sprintf_chk@plt+0xeea0>
cmp    $0x5207,%eax
jg     8058330 <__sprintf_chk@plt+0xecc0>
movl   $0x1,0x8064300
00
movl   $0x4,0x4(%esp)
movl   $0x805f084,(%esp)
call   80494b0 <access@plt>
test   %eax,%eax
je     8058229 <__sprintf_chk@plt+0xebb9>
movl   $0x1,0x8064300
00
jmp    8058229 <__sprintf_chk@plt+0xebb9>
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    $0x8065360,%esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x10(%ebx),%edi
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl -0x1(%ebx),%eax
mov    %esi,(%esp)
movl   $0x805f0b3,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
call   8049670 <__sprintf_chk@plt>
add    %eax,%esi
cmp    %edi,%ebx
jne    8058388 <__sprintf_chk@plt+0xed18>
mov    $0x8065360,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     80583be <__sprintf_chk@plt+0xed4e>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    $0x8065360,%eax
sub    $0x8065360,%edx
movb   $0x0,0x806535f(%edx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movzwl (%eax),%ecx
add    $0x2,%eax
lea    -0x1(%ecx),%edx
cmp    $0xfffd,%dx
ja     8058430 <__sprintf_chk@plt+0xedc0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x40,0x8(%esp)
movl   $0x80653e0,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movzwl (%eax),%ecx
lea    -0x1(%ecx),%edx
cmp    $0xfffd,%dx
ja     8058488 <__sprintf_chk@plt+0xee18>
add    $0x2,%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    8058370 <__sprintf_chk@plt+0xed00>
lea    0x0(%esi),%esi
movl   $0x805daaa,(%esp)
call   8049360 <gettext@plt>
movl   $0x40,0x8(%esp)
movl   $0x80653a0,(%esp)
mov    %eax,0x4(%esp)
call   80585c0 <__sprintf_chk@plt+0xef50>
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049660 <calloc@plt>
test   %eax,%eax
je     80584cf <__sprintf_chk@plt+0xee5f>
add    $0x1c,%esp
ret
nop
call   8049680 <__sprintf_chk@plt+0x10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80492c0 <realloc@plt>
test   %eax,%eax
je     80584ff <__sprintf_chk@plt+0xee8f>
add    $0x1c,%esp
ret
nop
call   8049680 <__sprintf_chk@plt+0x10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1cc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x1bc(%esp)
xor    %eax,%eax
lea    0x36(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x30(%esp)
call   80491a0 <uname@plt>
test   %eax,%eax
js     80585b0 <__sprintf_chk@plt+0xef40>
lea    0x30(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0xb8(%esp),%eax
movl   $0x805f0d7,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <sscanf@plt>
cmp    $0x1,%eax
jle    80585b0 <__sprintf_chk@plt+0xef40>
imul   $0x2710,0x28(%esp),%edx
imul   $0x3e8,0x2c(%esp),%eax
add    %edx,%eax
add    0x30(%esp),%eax
mov    0x1bc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80585b7 <__sprintf_chk@plt+0xef47>
add    $0x1cc,%esp
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    8058597 <__sprintf_chk@plt+0xef27>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    0x4(%esp),%eax
lea    -0x1(%edx),%ecx
movb   $0x0,-0x1(%eax,%edx,1)
mov    %ecx,0xc(%esp)
jmp    8049470 <strncpy@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x80643a8,%edx
mov    0x38(%esp),%eax
mov    0x34(%esp),%ebx
mov    %dx,(%eax)
lea    0x2(%eax),%ebp
mov    %ebx,(%esp)
call   80493c0 <strlen@plt>
cmp    $0x12,%eax
mov    %eax,%esi
ja     80586c0 <__sprintf_chk@plt+0xf050>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   80493a0 <strchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     8058644 <__sprintf_chk@plt+0xefd4>
movb   $0x0,(%eax)
lea    0x1(%eax),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
mov    %eax,%esi
cmpb   $0x0,(%ebx)
je     8058680 <__sprintf_chk@plt+0xf010>
mov    %ebx,(%esp)
call   80493c0 <strlen@plt>
cmp    $0xf,%eax
ja     8058680 <__sprintf_chk@plt+0xf010>
cmp    %eax,%esi
ja     8058680 <__sprintf_chk@plt+0xf010>
lea    0x1(%esi),%eax
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x8(%esp)
call   80494a0 <__strncpy_chk@plt>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movb   $0x2f,(%edi)
movl   $0x805f114,(%esp)
call   8049360 <gettext@plt>
movl   $0x80,0x8(%esp)
movl   $0x8065440,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x805f0e0,(%esp)
jmp    805868a <__sprintf_chk@plt+0xf01a>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80585e0 <__sprintf_chk@plt+0xef70>
test   %eax,%eax
js     8058708 <__sprintf_chk@plt+0xf098>
mov    $0x10f,%eax
mov    %ax,(%ebx)
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    80586fe <__sprintf_chk@plt+0xf08e>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x10,0x8(%esp)
movl   $0x8065420,(%esp)
mov    %eax,0x4(%esp)
call   8049470 <strncpy@plt>
mov    $0x8065420,%eax
movb   $0x0,0x8065430
add    $0x1c,%esp
ret
nop
sub    $0x2c,%esp
mov    0x30(%esp),%eax
test   %eax,%eax
je     8058778 <__sprintf_chk@plt+0xf108>
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
movl   $0x8065440,0x10(%esp)
movl   $0x805dafe,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
mov    0x8064740,%eax
movl   $0x8065440,0xc(%esp)
movl   $0x805b5fa,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    80587b0 <__sprintf_chk@plt+0xf140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movzwl (%eax),%ecx
lea    -0x1(%ecx),%edx
cmp    $0xfffd,%dx
ja     80587f0 <__sprintf_chk@plt+0xf180>
add    $0x2,%eax
movl   $0x10,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x8065420,(%esp)
call   8049470 <strncpy@plt>
mov    $0x8065420,%eax
movb   $0x0,0x8065430
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x805daaa,0x20(%esp)
add    $0x1c,%esp
jmp    8049360 <gettext@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x13c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805f124,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8058978 <__sprintf_chk@plt+0xf308>
movl   $0x805f139,(%esp)
lea    0x2c(%esp),%ebx
call   8049360 <gettext@plt>
lea    0x3d(%esp),%ebp
movl   $0x1,(%esp)
lea    0x45(%esp),%edi
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805f154,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
nop
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
je     8058950 <__sprintf_chk@plt+0xf2e0>
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   80493a0 <strchr@plt>
test   %eax,%eax
je     80588c3 <__sprintf_chk@plt+0xf253>
movb   $0x0,(%eax)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x0,0x44(%esp)
movb   $0x0,0x4f(%esp)
call   80495f0 <strtol@plt>
cmp    $0xf,%eax
ja     8058918 <__sprintf_chk@plt+0xf2a8>
test   %eax,%eax
movb   $0x0,0x2c(%esp,%eax,1)
jne    80589a0 <__sprintf_chk@plt+0xf330>
mov    %edi,0x8(%esp)
movl   $0x805f170,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8058890 <__sprintf_chk@plt+0xf220>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x3b(%esp)
mov    $0xfffffffe,%edx
mov    $0xf,%eax
mov    %edi,0x14(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805f18b,0x4(%esp)
movl   $0x1,(%esp)
call   80494d0 <__printf_chk@plt>
jmp    8058890 <__sprintf_chk@plt+0xf220>
mov    %esi,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x12c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    805899b <__sprintf_chk@plt+0xf32b>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x805f19c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    805895a <__sprintf_chk@plt+0xf2ea>
call   80491c0 <__stack_chk_fail@plt>
lea    -0x11(%eax),%edx
jmp    8058927 <__sprintf_chk@plt+0xf2b7>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x8064740,%eax
movl   $0x31,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805f1c4,(%esp)
mov    %eax,0xc(%esp)
call   8049290 <fwrite@plt>
mov    0x8064740,%eax
movl   $0x31,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805f1f8,(%esp)
mov    %eax,0xc(%esp)
call   8049290 <fwrite@plt>
mov    $0x4,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1ac,%esp
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x19c(%esp)
xor    %eax,%eax
mov    (%edx),%eax
test   %eax,%eax
je     8058b50 <__sprintf_chk@plt+0xf4e0>
lea    0x40(%esp),%esi
movl   $0x80,0x8(%esp)
lea    0x4(%edx),%ebx
mov    %eax,0x4(%esp)
lea    0xc0(%esp),%edi
mov    %esi,(%esp)
call   80494c0 <__strcpy_chk@plt>
xor    %eax,%eax
mov    $0x37,%ecx
rep stos %eax,%es:(%edi)
lea    0x2e(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   *0x80643b8
test   %eax,%eax
mov    %eax,0x18(%esp)
js     8058c33 <__sprintf_chk@plt+0xf5c3>
mov    0x18(%esp),%eax
mov    %eax,0xd0(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc0(%esp)
mov    0x34(%esp),%eax
mov    %eax,0xc4(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xcc(%esp)
mov    0x4(%ebp),%eax
lea    0xd4(%esp),%ebp
test   %eax,%eax
jne    8058b24 <__sprintf_chk@plt+0xf4b4>
jmp    8058b78 <__sprintf_chk@plt+0xf508>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x65,0x1(%eax)
jne    8058b39 <__sprintf_chk@plt+0xf4c9>
cmpb   $0x76,0x2(%eax)
jne    8058b39 <__sprintf_chk@plt+0xf4c9>
cmpb   $0x0,0x3(%eax)
jne    8058b39 <__sprintf_chk@plt+0xf4c9>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%edx
lea    0x4(%ebx),%esi
test   %edx,%edx
je     8058b50 <__sprintf_chk@plt+0xf4e0>
cmpb   $0x0,0xd4(%esp)
jne    8058b50 <__sprintf_chk@plt+0xf4e0>
movl   $0xc8,0x8(%esp)
mov    (%esi),%eax
lea    0x4(%esi),%ebx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80494c0 <__strcpy_chk@plt>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8058b78 <__sprintf_chk@plt+0xf508>
mov    %eax,%esi
mov    $0x805dff9,%edi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8058af0 <__sprintf_chk@plt+0xf480>
cmpb   $0x64,(%eax)
je     8058ad8 <__sprintf_chk@plt+0xf468>
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    8058b50 <__sprintf_chk@plt+0xf4e0>
cmpb   $0x0,0xd4(%esp)
mov    %ebx,%esi
je     8058b04 <__sprintf_chk@plt+0xf494>
lea    0x0(%esi,%eiz,1),%esi
call   80589b0 <__sprintf_chk@plt+0xf340>
mov    0x19c(%esp),%edi
xor    %gs:0x14,%edi
jne    8058cf8 <__sprintf_chk@plt+0xf688>
add    $0x1ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0xd4(%esp)
je     8058b50 <__sprintf_chk@plt+0xf4e0>
cmpl   $0xf,0x18(%esp)
lea    0xc0(%esp),%edx
ja     8058bfc <__sprintf_chk@plt+0xf58c>
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8058b90 <__sprintf_chk@plt+0xf520>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
lea    0xc0(%esp),%eax
sub    %eax,%edx
cmp    %edx,0x18(%esp)
jbe    8058c46 <__sprintf_chk@plt+0xf5d6>
movl   $0x805f22c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0x3,%eax
jmp    8058b55 <__sprintf_chk@plt+0xf4e5>
movl   $0x805f2b1,(%esp)
call   8049360 <gettext@plt>
mov    0x18(%esp),%edx
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0x3,%eax
jmp    8058b55 <__sprintf_chk@plt+0xf4e5>
mov    %esi,(%esp)
call   *0x80643bc
mov    $0x1,%eax
jmp    8058b55 <__sprintf_chk@plt+0xf4e5>
movl   $0x0,0x8(%esp)
movl   $0x5,0x4(%esp)
movl   $0x9,(%esp)
call   8049570 <socket@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x8064400
js     8058ca2 <__sprintf_chk@plt+0xf632>
cmpl   $0x2,0x1c(%esp)
lea    0xc0(%esp),%eax
mov    %eax,0x8(%esp)
je     8058cb8 <__sprintf_chk@plt+0xf648>
movl   $0x890b,0x4(%esp)
mov    %ebx,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
js     8058cef <__sprintf_chk@plt+0xf67f>
mov    %ebx,(%esp)
call   8049610 <close@plt>
xor    %eax,%eax
jmp    8058b55 <__sprintf_chk@plt+0xf4e5>
movl   $0x805b6eb,(%esp)
call   8049280 <perror@plt>
mov    $0x7,%eax
jmp    8058b55 <__sprintf_chk@plt+0xf4e5>
movl   $0x890c,0x4(%esp)
mov    %ebx,(%esp)
call   8049270 <ioctl@plt>
test   %eax,%eax
jns    8058c93 <__sprintf_chk@plt+0xf623>
movl   $0x805dfe5,(%esp)
call   8049280 <perror@plt>
mov    0x8064400,%eax
mov    %eax,(%esp)
call   8049610 <close@plt>
mov    $0x7,%eax
jmp    8058b55 <__sprintf_chk@plt+0xf4e5>
movl   $0x805dfef,(%esp)
jmp    8058cd3 <__sprintf_chk@plt+0xf663>
call   80491c0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x28(%esp),%edx
cmp    $0x4,%eax
je     8058d68 <__sprintf_chk@plt+0xf6f8>
and    $0x40,%ecx
jne    8058d38 <__sprintf_chk@plt+0xf6c8>
mov    (%edx),%ecx
test   %ecx,%ecx
je     8058d30 <__sprintf_chk@plt+0xf6c0>
cmp    $0x3,%eax
je     8058d30 <__sprintf_chk@plt+0xf6c0>
add    $0x1c,%esp
jmp    8058a10 <__sprintf_chk@plt+0xf3a0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
jmp    80589b0 <__sprintf_chk@plt+0xf340>
mov    0x8064740,%eax
movl   $0x2c,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805f284,(%esp)
mov    %eax,0xc(%esp)
call   8049290 <fwrite@plt>
add    $0x1c,%esp
jmp    80589b0 <__sprintf_chk@plt+0xf340>
lea    0x0(%esi),%esi
mov    0x8064740,%eax
movl   $0x2b,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805f258,(%esp)
mov    %eax,0xc(%esp)
call   8049290 <fwrite@plt>
add    $0x1c,%esp
jmp    80589b0 <__sprintf_chk@plt+0xf340>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x13c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805f2ca,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8058eb8 <__sprintf_chk@plt+0xf848>
movl   $0x805f2df,(%esp)
lea    0x2c(%esp),%ebx
call   8049360 <gettext@plt>
lea    0x3b(%esp),%ebp
movl   $0x1,(%esp)
lea    0x36(%esp),%edi
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
movl   $0x805f2fb,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
jmp    8058e7a <__sprintf_chk@plt+0xf80a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
movb   $0x0,0x35(%esp)
movb   $0x0,0x3a(%esp)
call   80495f0 <strtol@plt>
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805f316,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
call   80494d0 <__printf_chk@plt>
mov    %esi,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebx,(%esp)
call   8049150 <fgets@plt>
test   %eax,%eax
jne    8058e38 <__sprintf_chk@plt+0xf7c8>
mov    %esi,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x12c(%esp),%edx
xor    %gs:0x14,%edx
jne    8058ee7 <__sprintf_chk@plt+0xf877>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x805f2ca,(%esp)
call   8049280 <perror@plt>
movl   $0x805f32c,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__printf_chk@plt>
mov    $0x1,%eax
jmp    8058e9c <__sprintf_chk@plt+0xf82c>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
movl   $0x805b794,0x4(%esp)
movl   $0x805f352,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
call   8049410 <fopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     80593d8 <__sprintf_chk@plt+0xfd68>
lea    0x38(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x34(%esp),%ebp
lea    0x2c(%esp),%eax
mov    %ebp,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x805f368,0x4(%esp)
mov    %esi,(%esp)
call   80493b0 <fscanf@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
movl   $0x805f3e4,(%esp)
call   80492e0 <puts@plt>
jmp    80590bb <__sprintf_chk@plt+0xfa4b>
lea    0x0(%esi),%esi
test   $0x2,%bl
jne    8059132 <__sprintf_chk@plt+0xfac2>
test   $0x2,%bh
jne    8059153 <__sprintf_chk@plt+0xfae3>
test   $0x4,%bl
jne    8059174 <__sprintf_chk@plt+0xfb04>
test   $0x8,%bl
jne    8059195 <__sprintf_chk@plt+0xfb25>
test   $0x10,%bl
nop
jne    80591b6 <__sprintf_chk@plt+0xfb46>
test   $0x20,%bl
jne    80591d7 <__sprintf_chk@plt+0xfb67>
test   $0x10000,%ebx
jne    80591fb <__sprintf_chk@plt+0xfb8b>
test   $0x20000,%ebx
jne    805921f <__sprintf_chk@plt+0xfbaf>
test   $0x40000,%ebx
jne    8059243 <__sprintf_chk@plt+0xfbd3>
test   $0x200000,%ebx
jne    8059267 <__sprintf_chk@plt+0xfbf7>
test   $0x400000,%ebx
jne    805928b <__sprintf_chk@plt+0xfc1b>
test   $0x1000000,%ebx
jne    80592af <__sprintf_chk@plt+0xfc3f>
test   $0x2000000,%ebx
jne    80592d3 <__sprintf_chk@plt+0xfc63>
test   $0x4000000,%ebx
jne    80592f7 <__sprintf_chk@plt+0xfc87>
test   %ebx,%ebx
js     8059317 <__sprintf_chk@plt+0xfca7>
test   $0x40,%bl
jne    8059338 <__sprintf_chk@plt+0xfcc8>
test   $0x80,%bl
jne    8059359 <__sprintf_chk@plt+0xfce9>
test   $0x1,%bh
jne    805937a <__sprintf_chk@plt+0xfd0a>
and    $0x4,%bh
jne    805939b <__sprintf_chk@plt+0xfd2b>
mov    0x34(%esp),%eax
mov    %edi,0x14(%esp)
movl   $0x805f379,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
call   80494d0 <__printf_chk@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049110 <free@plt>
lea    0x38(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %ebp,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x805f368,0x4(%esp)
mov    %esi,(%esp)
call   80493b0 <fscanf@plt>
cmp    $0x4,%eax
jne    80593b8 <__sprintf_chk@plt+0xfd48>
mov    0x38(%esp),%eax
lea    0x3c(%esp),%edi
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strtol@plt>
movb   $0x0,0x3c(%esp)
test   $0x1,%al
mov    %eax,%ebx
je     8058f98 <__sprintf_chk@plt+0xf928>
mov    $0x55,%eax
test   $0x2,%bl
mov    %ax,0x3c(%esp)
je     8058fa1 <__sprintf_chk@plt+0xf931>
movl   $0x20,0x8(%esp)
movl   $0x805b551,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x2,%bh
je     8058faa <__sprintf_chk@plt+0xf93a>
movl   $0x20,0x8(%esp)
movl   $0x805dc34,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x4,%bl
je     8058fb3 <__sprintf_chk@plt+0xf943>
movl   $0x20,0x8(%esp)
movl   $0x805e095,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x8,%bl
je     8058fbc <__sprintf_chk@plt+0xf94c>
movl   $0x20,0x8(%esp)
movl   $0x805e07b,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x10,%bl
je     8058fc6 <__sprintf_chk@plt+0xf956>
movl   $0x20,0x8(%esp)
movl   $0x805b3e4,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x20,%bl
je     8058fcf <__sprintf_chk@plt+0xf95f>
movl   $0x20,0x8(%esp)
movl   $0x805b52a,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x10000,%ebx
je     8058fdb <__sprintf_chk@plt+0xf96b>
movl   $0x20,0x8(%esp)
movl   $0x805b271,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x20000,%ebx
je     8058fe7 <__sprintf_chk@plt+0xf977>
movl   $0x20,0x8(%esp)
movl   $0x805f538,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x40000,%ebx
je     8058ff3 <__sprintf_chk@plt+0xf983>
movl   $0x20,0x8(%esp)
movl   $0x805ed58,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x200000,%ebx
je     8058fff <__sprintf_chk@plt+0xf98f>
movl   $0x20,0x8(%esp)
movl   $0x805c20d,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x400000,%ebx
je     805900b <__sprintf_chk@plt+0xf99b>
movl   $0x20,0x8(%esp)
movl   $0x805e079,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x1000000,%ebx
je     8059017 <__sprintf_chk@plt+0xf9a7>
movl   $0x20,0x8(%esp)
movl   $0x805ed58,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x2000000,%ebx
je     8059023 <__sprintf_chk@plt+0xf9b3>
movl   $0x20,0x8(%esp)
movl   $0x805e0ab,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x4000000,%ebx
je     805902f <__sprintf_chk@plt+0xf9bf>
movl   $0x20,0x8(%esp)
movl   $0x805bcc1,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   %ebx,%ebx
jns    8059037 <__sprintf_chk@plt+0xf9c7>
movl   $0x20,0x8(%esp)
movl   $0x805e6ce,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x40,%bl
je     8059040 <__sprintf_chk@plt+0xf9d0>
movl   $0x20,0x8(%esp)
movl   $0x805c71d,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x80,%bl
je     8059049 <__sprintf_chk@plt+0xf9d9>
movl   $0x20,0x8(%esp)
movl   $0x805b457,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
test   $0x1,%bh
je     8059052 <__sprintf_chk@plt+0xf9e2>
movl   $0x20,0x8(%esp)
movl   $0x805f60e,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
and    $0x4,%bh
je     805905b <__sprintf_chk@plt+0xf9eb>
movl   $0x20,0x8(%esp)
movl   $0x805dae6,0x4(%esp)
mov    %edi,(%esp)
call   8049090 <__strcat_chk@plt>
jmp    805905b <__sprintf_chk@plt+0xf9eb>
mov    %esi,(%esp)
call   8049160 <fclose@plt>
xor    %eax,%eax
mov    0x5c(%esp),%edx
xor    %gs:0x14,%edx
jne    8059410 <__sprintf_chk@plt+0xfda0>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x805f390,(%esp)
call   8049280 <perror@plt>
mov    0x8064740,%eax
movl   $0x2f,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805f3b4,(%esp)
mov    %eax,0xc(%esp)
call   8049290 <fwrite@plt>
mov    $0x1,%eax
jmp    80593c2 <__sprintf_chk@plt+0xfd52>
call   80491c0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x805f41a,(%esp)
call   8049360 <gettext@plt>
movl   $0x805d98b,(%esp)
mov    %eax,0x80644c4
call   8049360 <gettext@plt>
movl   $0x805f42c,(%esp)
mov    %eax,0x80644e4
call   8049360 <gettext@plt>
movl   $0x805f429,(%esp)
mov    %eax,0x80645c4
call   8049360 <gettext@plt>
movl   $0x805f43e,(%esp)
mov    %eax,0x80645a4
call   8049360 <gettext@plt>
movl   $0x805f43b,(%esp)
mov    %eax,0x8064584
call   8049360 <gettext@plt>
movl   $0x805f453,(%esp)
mov    %eax,0x8064564
call   8049360 <gettext@plt>
movl   $0x805f46b,(%esp)
mov    %eax,0x8064544
call   8049360 <gettext@plt>
movl   $0x805d9ff,(%esp)
mov    %eax,0x8064644
call   8049360 <gettext@plt>
movl   $0x805f514,(%esp)
mov    %eax,0x8063fe4
call   8049360 <gettext@plt>
movl   $0x805f474,(%esp)
mov    %eax,0x8064684
call   8049360 <gettext@plt>
movl   $0x805d9b2,(%esp)
mov    %eax,0x8064724
call   8049360 <gettext@plt>
movl   $0x805d9f5,(%esp)
mov    %eax,0x8064044
call   8049360 <gettext@plt>
movl   $0x805d9bd,(%esp)
mov    %eax,0x80642e4
call   8049360 <gettext@plt>
movl   $0x805f47a,(%esp)
mov    %eax,0x8064284
call   8049360 <gettext@plt>
movl   $0x805f487,(%esp)
mov    %eax,0x80643e4
call   8049360 <gettext@plt>
movl   $0x805f493,(%esp)
mov    %eax,0x80645e4
call   8049360 <gettext@plt>
movl   $0x805f4ab,(%esp)
mov    %eax,0x8064504
call   8049360 <gettext@plt>
movl   $0x805f4b8,(%esp)
mov    %eax,0x8064704
call   8049360 <gettext@plt>
movl   $0x805f4bd,(%esp)
mov    %eax,0x80646e4
call   8049360 <gettext@plt>
movl   $0x805f4c4,(%esp)
mov    %eax,0x8064604
call   8049360 <gettext@plt>
movl   $0x805f4d5,(%esp)
mov    %eax,0x80646c4
call   8049360 <gettext@plt>
movl   $0x805f4ef,(%esp)
mov    %eax,0x80646a4
call   8049360 <gettext@plt>
movl   $0x805f4fc,(%esp)
mov    %eax,0x8064524
call   8049360 <gettext@plt>
movl   $0x805d9e3,(%esp)
mov    %eax,0x80644a4
call   8049360 <gettext@plt>
movl   $0x805f502,(%esp)
mov    %eax,0x8064624
call   8049360 <gettext@plt>
mov    %eax,0x8064664
mov    $0x1,%eax
mov    %ax,0x80654c0
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
cmpw   $0x0,0x80654c0
mov    0x20(%esp),%edi
je     8059640 <__sprintf_chk@plt+0xffd0>
mov    0x8064420,%ebx
test   %ebx,%ebx
je     8059633 <__sprintf_chk@plt+0xffc3>
mov    $0x8064420,%esi
jmp    8059621 <__sprintf_chk@plt+0xffb1>
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
je     8059633 <__sprintf_chk@plt+0xffc3>
mov    %edi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80490d0 <strcmp@plt>
test   %eax,%eax
jne    8059618 <__sprintf_chk@plt+0xffa8>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8059420 <__sprintf_chk@plt+0xfdb0>
jmp    8059604 <__sprintf_chk@plt+0xff94>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
cmpw   $0x0,0x80654c0
mov    0x10(%esp),%ebx
je     8059690 <__sprintf_chk@plt+0x10020>
mov    0x8064420,%eax
test   %eax,%eax
je     8059686 <__sprintf_chk@plt+0x10016>
cmp    %ebx,0x8(%eax)
je     8059686 <__sprintf_chk@plt+0x10016>
mov    $0x8064420,%edx
jmp    805967d <__sprintf_chk@plt+0x1000d>
nop
cmp    %ebx,0x8(%eax)
je     8059686 <__sprintf_chk@plt+0x10016>
add    $0x4,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    8059678 <__sprintf_chk@plt+0x10008>
add    $0x8,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8059420 <__sprintf_chk@plt+0xfdb0>
jmp    8059662 <__sprintf_chk@plt+0xfff2>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmpw   $0x0,0x80654c0
mov    0x40(%esp),%esi
je     8059780 <__sprintf_chk@plt+0x10110>
mov    $0x8064420,%ebx
xor    %ebp,%ebp
mov    $0x55555556,%edi
jmp    8059744 <__sprintf_chk@plt+0x100d4>
nop
cmpl   $0xffffffff,0x8(%ecx)
je     8059741 <__sprintf_chk@plt+0x100d1>
mov    %ebp,%eax
imul   %edi
mov    %ebp,%eax
sar    $0x1f,%eax
sub    %eax,%edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebp
jne    805970a <__sprintf_chk@plt+0x1009a>
test   %ebp,%ebp
mov    $0x805da24,%edx
mov    $0x805da23,%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    (%ebx),%ecx
mov    (%ecx),%eax
mov    $0x805da29,%edx
test   %eax,%eax
cmove  %edx,%eax
mov    0x4(%ecx),%edx
add    $0x1,%ebp
mov    %eax,0xc(%esp)
mov    0x8064740,%eax
movl   $0x805da2c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
add    $0x4,%ebx
mov    (%ebx),%ecx
test   %ecx,%ecx
je     8059760 <__sprintf_chk@plt+0x100f0>
cmp    $0x1,%esi
jne    80596c8 <__sprintf_chk@plt+0x10058>
mov    0xc(%ecx),%eax
test   %eax,%eax
je     8059741 <__sprintf_chk@plt+0x100d1>
jmp    80596c8 <__sprintf_chk@plt+0x10058>
nop
mov    0x8064740,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049530 <fputc@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8059420 <__sprintf_chk@plt+0xfdb0>
jmp    80596b9 <__sprintf_chk@plt+0x10049>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    0xc(%eax),%edx
test   %edx,%edx
je     80597b5 <__sprintf_chk@plt+0x10145>
xor    %eax,%eax
cmpb   $0x0,(%ecx)
je     80597ae <__sprintf_chk@plt+0x1013e>
jmp    80597c3 <__sprintf_chk@plt+0x10153>
cmpb   $0x0,(%ecx,%eax,1)
jne    80597c0 <__sprintf_chk@plt+0x10150>
add    $0x1,%eax
cmp    %edx,%eax
jne    80597a8 <__sprintf_chk@plt+0x10138>
mov    $0x1,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x3c,%esp
mov    0x40(%esp),%eax
movzbl (%eax),%edx
mov    %edx,0x20(%esp)
movzbl 0x1(%eax),%edx
mov    %edx,0x1c(%esp)
movzbl 0x2(%eax),%edx
mov    %edx,0x18(%esp)
movzbl 0x3(%eax),%eax
movl   $0x805f59f,0x10(%esp)
movl   $0xc,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0xc,0x4(%esp)
movl   $0x80654c2,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x80654c2,%eax
add    $0x3c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
mov    $0x80654e0,%esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x10(%ebx),%edi
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl -0x1(%ebx),%eax
mov    %esi,(%esp)
movl   $0x805f0b3,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
call   8049670 <__sprintf_chk@plt>
add    %eax,%esi
cmp    %edi,%ebx
jne    8059848 <__sprintf_chk@plt+0x101d8>
mov    $0x80654e0,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     805987e <__sprintf_chk@plt+0x1020e>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    $0x80654e0,%eax
sub    $0x80654e0,%edx
movb   $0x0,0x80654df(%edx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x805f540,(%esp)
call   8049360 <gettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8064740,%eax
mov    %eax,(%esp)
call   8049590 <__fprintf_chk@plt>
mov    $0xffffffff,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    $0x805f00a,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0xffffffff,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    0x8064608,%eax
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    %ax,(%edi)
movzbl (%esi),%ebx
test   %bl,%bl
je     80599c0 <__sprintf_chk@plt+0x10350>
call   8049640 <__ctype_b_loc@plt>
mov    (%eax),%edx
movsbl %bl,%eax
testb  $0x8,0x1(%edx,%eax,2)
jne    80599a0 <__sprintf_chk@plt+0x10330>
lea    -0x61(%ebx),%ecx
cmp    $0x5,%cl
jbe    80599b0 <__sprintf_chk@plt+0x10340>
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     80599c8 <__sprintf_chk@plt+0x10358>
sub    $0x37,%eax
movzbl 0x1(%esi),%ecx
shl    $0x4,%eax
mov    %eax,%ebx
movsbl %cl,%eax
testb  $0x8,0x1(%edx,%eax,2)
jne    80599a8 <__sprintf_chk@plt+0x10338>
lea    -0x61(%ecx),%edx
cmp    $0x5,%dl
jbe    80599b8 <__sprintf_chk@plt+0x10348>
sub    $0x41,%ecx
cmp    $0x5,%cl
ja     80599c8 <__sprintf_chk@plt+0x10358>
sub    $0x37,%eax
or     %ebx,%eax
mov    %al,0x2(%edi)
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
sub    $0x30,%eax
jmp    805996e <__sprintf_chk@plt+0x102fe>
lea    0x0(%esi),%esi
sub    $0x30,%eax
or     %ebx,%eax
jmp    8059996 <__sprintf_chk@plt+0x10326>
nop
sub    $0x57,%eax
jmp    805996e <__sprintf_chk@plt+0x102fe>
lea    0x0(%esi),%esi
sub    $0x57,%eax
or     %ebx,%eax
jmp    8059996 <__sprintf_chk@plt+0x10326>
nop
xor    %eax,%eax
jmp    805999b <__sprintf_chk@plt+0x1032b>
lea    0x0(%esi,%eiz,1),%esi
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    805999b <__sprintf_chk@plt+0x1032b>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
movzbl (%eax),%eax
movl   $0x805f603,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x40,0x4(%esp)
movl   $0x8065520,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x8065520,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x8064648,%eax
mov    0x24(%esp),%ebp
mov    0x20(%esp),%esi
mov    %ax,0x0(%ebp)
lea    0x2(%ebp),%edi
add    $0x8,%ebp
movzbl (%esi),%ebx
test   %bl,%bl
je     8059aa8 <__sprintf_chk@plt+0x10438>
cmp    %ebp,%edi
je     8059aa8 <__sprintf_chk@plt+0x10438>
call   8049640 <__ctype_b_loc@plt>
mov    (%eax),%ecx
movsbl %bl,%eax
testb  $0x8,0x1(%ecx,%eax,2)
je     8059ab8 <__sprintf_chk@plt+0x10448>
sub    $0x30,%eax
movzbl 0x1(%esi),%edx
shl    $0x4,%eax
mov    %eax,%ebx
movsbl %dl,%eax
testb  $0x8,0x1(%ecx,%eax,2)
je     8059ac8 <__sprintf_chk@plt+0x10458>
sub    $0x30,%eax
or     %ebx,%eax
test   %dl,%dl
jne    8059ad5 <__sprintf_chk@plt+0x10465>
add    $0x1,%esi
add    $0x1,%edi
mov    %al,-0x1(%edi)
movzbl (%esi),%ebx
cmp    $0x3a,%bl
jne    8059a51 <__sprintf_chk@plt+0x103e1>
movzbl 0x1(%esi),%ebx
add    $0x1,%esi
test   %bl,%bl
jne    8059a55 <__sprintf_chk@plt+0x103e5>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x61(%ebx),%edx
cmp    $0x5,%dl
ja     8059ae0 <__sprintf_chk@plt+0x10470>
sub    $0x57,%eax
jmp    8059a6d <__sprintf_chk@plt+0x103fd>
lea    0x0(%esi),%esi
lea    -0x61(%edx),%ecx
cmp    $0x5,%cl
ja     8059af0 <__sprintf_chk@plt+0x10480>
sub    $0x57,%eax
or     %ebx,%eax
add    $0x2,%esi
jmp    8059a8c <__sprintf_chk@plt+0x1041c>
lea    0x0(%esi),%esi
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     8059b13 <__sprintf_chk@plt+0x104a3>
sub    $0x37,%eax
jmp    8059a6d <__sprintf_chk@plt+0x103fd>
lea    0x0(%esi),%esi
lea    -0x41(%edx),%ecx
cmp    $0x5,%cl
ja     8059b00 <__sprintf_chk@plt+0x10490>
sub    $0x37,%eax
or     %ebx,%eax
jmp    8059a85 <__sprintf_chk@plt+0x10415>
nop
test   %dl,%dl
jne    8059b0e <__sprintf_chk@plt+0x1049e>
mov    %ebx,%eax
shr    $0x4,%eax
jmp    8059a85 <__sprintf_chk@plt+0x10415>
cmp    $0x3a,%dl
je     8059b04 <__sprintf_chk@plt+0x10494>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8059aaa <__sprintf_chk@plt+0x1043a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x3c,%esp
mov    0x40(%esp),%eax
movzbl 0x5(%eax),%edx
mov    %edx,0x28(%esp)
movzbl 0x4(%eax),%edx
mov    %edx,0x24(%esp)
movzbl 0x3(%eax),%edx
mov    %edx,0x20(%esp)
movzbl 0x2(%eax),%edx
mov    %edx,0x1c(%esp)
movzbl 0x1(%eax),%edx
mov    %edx,0x18(%esp)
movzbl (%eax),%eax
movl   $0x805f595,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x40,0x4(%esp)
movl   $0x8065560,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x8065560,%eax
add    $0x3c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x8064668,%eax
mov    0x24(%esp),%ebp
mov    0x20(%esp),%esi
mov    %ax,0x0(%ebp)
lea    0x2(%ebp),%edi
add    $0xa,%ebp
movzbl (%esi),%ebx
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8059c20 <__sprintf_chk@plt+0x105b0>
cmp    %ebp,%edi
je     8059c20 <__sprintf_chk@plt+0x105b0>
call   8049640 <__ctype_b_loc@plt>
mov    (%eax),%ecx
movsbl %bl,%eax
testb  $0x8,0x1(%ecx,%eax,2)
je     8059c30 <__sprintf_chk@plt+0x105c0>
sub    $0x30,%eax
movzbl 0x1(%esi),%edx
shl    $0x4,%eax
mov    %eax,%ebx
movsbl %dl,%eax
testb  $0x8,0x1(%ecx,%eax,2)
je     8059c40 <__sprintf_chk@plt+0x105d0>
sub    $0x30,%eax
or     %ebx,%eax
test   %dl,%dl
jne    8059c4d <__sprintf_chk@plt+0x105dd>
add    $0x1,%esi
add    $0x1,%edi
mov    %al,-0x1(%edi)
movzbl (%esi),%ebx
cmp    $0x3a,%bl
jne    8059bc8 <__sprintf_chk@plt+0x10558>
movzbl 0x1(%esi),%ebx
add    $0x1,%esi
test   %bl,%bl
jne    8059bcc <__sprintf_chk@plt+0x1055c>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x61(%ebx),%edx
cmp    $0x5,%dl
ja     8059c58 <__sprintf_chk@plt+0x105e8>
sub    $0x57,%eax
jmp    8059be4 <__sprintf_chk@plt+0x10574>
lea    0x0(%esi),%esi
lea    -0x61(%edx),%ecx
cmp    $0x5,%cl
ja     8059c68 <__sprintf_chk@plt+0x105f8>
sub    $0x57,%eax
or     %ebx,%eax
add    $0x2,%esi
jmp    8059c03 <__sprintf_chk@plt+0x10593>
lea    0x0(%esi),%esi
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     8059c8b <__sprintf_chk@plt+0x1061b>
sub    $0x37,%eax
jmp    8059be4 <__sprintf_chk@plt+0x10574>
lea    -0x41(%edx),%ecx
cmp    $0x5,%cl
ja     8059c78 <__sprintf_chk@plt+0x10608>
sub    $0x37,%eax
or     %ebx,%eax
jmp    8059bfc <__sprintf_chk@plt+0x1058c>
nop
test   %dl,%dl
jne    8059c86 <__sprintf_chk@plt+0x10616>
mov    %ebx,%eax
shr    $0x4,%eax
jmp    8059bfc <__sprintf_chk@plt+0x1058c>
cmp    $0x3a,%dl
je     8059c7c <__sprintf_chk@plt+0x1060c>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8059c22 <__sprintf_chk@plt+0x105b2>
lea    0x0(%esi),%esi
sub    $0x4c,%esp
mov    0x50(%esp),%eax
movzbl 0x7(%eax),%edx
mov    %edx,0x30(%esp)
movzbl 0x6(%eax),%edx
mov    %edx,0x2c(%esp)
movzbl 0x5(%eax),%edx
mov    %edx,0x28(%esp)
movzbl 0x4(%eax),%edx
mov    %edx,0x24(%esp)
movzbl 0x3(%eax),%edx
mov    %edx,0x20(%esp)
movzbl 0x2(%eax),%edx
mov    %edx,0x1c(%esp)
movzbl 0x1(%eax),%edx
mov    %edx,0x18(%esp)
movzbl (%eax),%eax
movl   $0x805f5bc,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x40,0x4(%esp)
movl   $0x80655a0,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x80655a0,%eax
add    $0x4c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x8064688,%eax
mov    0x24(%esp),%ebp
mov    0x20(%esp),%esi
mov    %ax,0x0(%ebp)
lea    0x2(%ebp),%edi
add    $0x8,%ebp
movzbl (%esi),%ebx
test   %bl,%bl
je     8059d90 <__sprintf_chk@plt+0x10720>
cmp    %ebp,%edi
je     8059d90 <__sprintf_chk@plt+0x10720>
call   8049640 <__ctype_b_loc@plt>
mov    (%eax),%edx
movsbl %bl,%eax
testb  $0x8,0x1(%edx,%eax,2)
je     8059da0 <__sprintf_chk@plt+0x10730>
sub    $0x30,%eax
movzbl 0x1(%esi),%ebx
shl    $0x4,%eax
mov    %eax,%ecx
movsbl %bl,%eax
testb  $0x8,0x1(%edx,%eax,2)
je     8059db0 <__sprintf_chk@plt+0x10740>
sub    $0x30,%eax
or     %ecx,%eax
add    $0x1,%edi
mov    %al,-0x1(%edi)
movzbl 0x2(%esi),%ebx
cmp    $0x3a,%bl
je     8059dcc <__sprintf_chk@plt+0x1075c>
add    $0x2,%esi
test   %bl,%bl
jne    8059d45 <__sprintf_chk@plt+0x106d5>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x61(%ebx),%ecx
cmp    $0x5,%cl
ja     8059dd8 <__sprintf_chk@plt+0x10768>
sub    $0x57,%eax
jmp    8059d5d <__sprintf_chk@plt+0x106ed>
lea    0x0(%esi),%esi
lea    -0x61(%ebx),%edx
cmp    $0x5,%dl
ja     8059de8 <__sprintf_chk@plt+0x10778>
sub    $0x57,%eax
add    $0x1,%edi
or     %ecx,%eax
mov    %al,-0x1(%edi)
movzbl 0x2(%esi),%ebx
cmp    $0x3a,%bl
jne    8059d84 <__sprintf_chk@plt+0x10714>
movzbl 0x3(%esi),%ebx
add    $0x3,%esi
jmp    8059d41 <__sprintf_chk@plt+0x106d1>
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     8059dfa <__sprintf_chk@plt+0x1078a>
sub    $0x37,%eax
jmp    8059d5d <__sprintf_chk@plt+0x106ed>
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     8059dfa <__sprintf_chk@plt+0x1078a>
sub    $0x37,%eax
or     %ecx,%eax
jmp    8059d75 <__sprintf_chk@plt+0x10705>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8059d92 <__sprintf_chk@plt+0x10722>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
mov    0x40(%esp),%eax
movzbl 0x5(%eax),%edx
mov    %edx,0x28(%esp)
movzbl 0x4(%eax),%edx
mov    %edx,0x24(%esp)
movzbl 0x3(%eax),%edx
mov    %edx,0x20(%esp)
movzbl 0x2(%eax),%edx
mov    %edx,0x1c(%esp)
movzbl 0x1(%eax),%edx
mov    %edx,0x18(%esp)
movzbl (%eax),%eax
movl   $0x805f5ea,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x40,0x4(%esp)
movl   $0x80655e0,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x80655e0,%eax
add    $0x3c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x30(%esp),%eax
movswl (%eax),%eax
movl   $0x805f60d,0x10(%esp)
movl   $0xc,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0xc,0x4(%esp)
movl   $0x8065620,(%esp)
call   80490a0 <__snprintf_chk@plt>
mov    $0x8065620,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x8064728,%eax
mov    0x24(%esp),%ebp
mov    0x20(%esp),%esi
mov    %ax,0x0(%ebp)
lea    0x2(%ebp),%edi
add    $0x8,%ebp
movzbl (%esi),%ebx
test   %bl,%bl
je     8059f40 <__sprintf_chk@plt+0x108d0>
cmp    %ebp,%edi
je     8059f40 <__sprintf_chk@plt+0x108d0>
call   8049640 <__ctype_b_loc@plt>
mov    (%eax),%edx
movsbl %bl,%eax
testb  $0x8,0x1(%edx,%eax,2)
je     8059f50 <__sprintf_chk@plt+0x108e0>
sub    $0x30,%eax
movzbl 0x1(%esi),%ebx
shl    $0x4,%eax
mov    %eax,%ecx
movsbl %bl,%eax
testb  $0x8,0x1(%edx,%eax,2)
je     8059f60 <__sprintf_chk@plt+0x108f0>
sub    $0x30,%eax
or     %ecx,%eax
add    $0x1,%edi
mov    %al,-0x1(%edi)
movzbl 0x2(%esi),%ebx
cmp    $0x3a,%bl
je     8059f7c <__sprintf_chk@plt+0x1090c>
add    $0x2,%esi
test   %bl,%bl
jne    8059ef5 <__sprintf_chk@plt+0x10885>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x61(%ebx),%ecx
cmp    $0x5,%cl
ja     8059f88 <__sprintf_chk@plt+0x10918>
sub    $0x57,%eax
jmp    8059f0d <__sprintf_chk@plt+0x1089d>
lea    0x0(%esi),%esi
lea    -0x61(%ebx),%edx
cmp    $0x5,%dl
ja     8059f98 <__sprintf_chk@plt+0x10928>
sub    $0x57,%eax
add    $0x1,%edi
or     %ecx,%eax
mov    %al,-0x1(%edi)
movzbl 0x2(%esi),%ebx
cmp    $0x3a,%bl
jne    8059f34 <__sprintf_chk@plt+0x108c4>
movzbl 0x3(%esi),%ebx
add    $0x3,%esi
jmp    8059ef1 <__sprintf_chk@plt+0x10881>
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     8059faa <__sprintf_chk@plt+0x1093a>
sub    $0x37,%eax
jmp    8059f0d <__sprintf_chk@plt+0x1089d>
sub    $0x41,%ebx
cmp    $0x5,%bl
ja     8059faa <__sprintf_chk@plt+0x1093a>
sub    $0x37,%eax
or     %ecx,%eax
jmp    8059f25 <__sprintf_chk@plt+0x108b5>
call   8049460 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8059f42 <__sprintf_chk@plt+0x108d2>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
mov    0x40(%esp),%eax
movzbl 0x5(%eax),%edx
mov    %edx,0x24(%esp)
movzbl 0x4(%eax),%edx
mov    %edx,0x20(%esp)
movzbl 0x3(%eax),%edx
mov    %edx,0x1c(%esp)
movzbl 0x2(%eax),%edx
mov    %edx,0x18(%esp)
movzbl 0x1(%eax),%edx
mov    %edx,0x14(%esp)
movzbl (%eax),%eax
movl   $0x805f624,0xc(%esp)
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x8065640,(%esp)
call   8049670 <__sprintf_chk@plt>
mov    $0x8065640,%eax
add    $0x3c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    805a080 <__sprintf_chk@plt+0x10a10>
cmp    %ebp,%ecx
ja     805a0b8 <__sprintf_chk@plt+0x10a48>
test   %ecx,%ecx
mov    %ecx,%esi
jne    805a068 <__sprintf_chk@plt+0x109f8>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     805a0a8 <__sprintf_chk@plt+0x10a38>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    805a0c8 <__sprintf_chk@plt+0x10a58>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    805a138 <__sprintf_chk@plt+0x10ac8>
cmp    %edx,%eax
jb     805a138 <__sprintf_chk@plt+0x10ac8>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     805a148 <__sprintf_chk@plt+0x10ad8>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    805a129 <__sprintf_chk@plt+0x10ab9>
cmp    (%esp),%esi
je     805a148 <__sprintf_chk@plt+0x10ad8>
mov    %edi,%eax
xor    %edx,%edx
jmp    805a0ac <__sprintf_chk@plt+0x10a3c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    805a0ac <__sprintf_chk@plt+0x10a3c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    805a1a8 <__sprintf_chk@plt+0x10b38>
cmp    %edi,%esi
jbe    805a1e0 <__sprintf_chk@plt+0x10b70>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     805a200 <__sprintf_chk@plt+0x10b90>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    805a210 <__sprintf_chk@plt+0x10ba0>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     805a2a8 <__sprintf_chk@plt+0x10c38>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    805a1f1 <__sprintf_chk@plt+0x10b81>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    805a19b <__sprintf_chk@plt+0x10b2b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     805a294 <__sprintf_chk@plt+0x10c24>
cmp    %eax,0xc(%esp)
jb     805a290 <__sprintf_chk@plt+0x10c20>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    805a26e <__sprintf_chk@plt+0x10bfe>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    805a26e <__sprintf_chk@plt+0x10bfe>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     805a1c1 <__sprintf_chk@plt+0x10b51>
jmp    805a1d1 <__sprintf_chk@plt+0x10b61>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804ae70 <__sprintf_chk@plt+0x1800>
add    $0x8d35,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8049044 <__ctype_toupper_loc@plt-0x3c>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     805a319 <__sprintf_chk@plt+0x10ca9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    805a2f8 <__sprintf_chk@plt+0x10c88>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    805a330 <__sprintf_chk@plt+0x10cc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
push   %ebx
sub    $0x8,%esp
call   804ae70 <__sprintf_chk@plt+0x1800>
add    $0x8cc3,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
jne    805a3dd <_IO_stdin_used+0x79>
popa
cmp    %gs:(%bx,%si),%ah
outsb  %ds:(%esi),(%dx)
gs
je     805a3e6 <_IO_stdin_used+0x82>
je     805a3d6 <_IO_stdin_used+0x72>
je     805a397 <_IO_stdin_used+0x33>
pop    %ebx
sub    $0x65655776,%eax
outsb  %ds:(%esi),(%dx)
dec    %esi
arpl   %ax,0x46(%ebx)
pop    %ebp
and    %bl,0x3c(%ebx)
inc    %ecx
data16
ds
pop    %ebp
and    %ch,0x20202072
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
gs
je     805a40d <_IO_stdin_used+0xa9>
je     805a3fd <_IO_stdin_used+0x99>
je     805a3be <_IO_stdin_used+0x5a>
jnp    805a3cd <_IO_stdin_used+0x69>
push   %esi
jl     805a3d0 <_IO_stdin_used+0x6c>
sub    $0x73726576,%eax
imul   $0x7c682d7c,0x6e(%edi),%ebp
sub    $0x6c65682d,%eax
jo     805a433 <_IO_stdin_used+0xcf>
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
je     805a436 <_IO_stdin_used+0xd2>
je     805a426 <_IO_stdin_used+0xc2>
je     805a3e7 <_IO_stdin_used+0x83>
pop    %ebx
sub    $0x4e6e5776,%eax
arpl   %sp,0x65(%ecx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %ebp
and    %bl,0x3c(%ebx)
push   %ebx
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
je     805a41b <_IO_stdin_used+0xb7>
and    %ch,(%esi)
cs
cs
pop    %ebp
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
je     805a462 <_IO_stdin_used+0xfe>
je     805a452 <_IO_stdin_used+0xee>
je     805a413 <_IO_stdin_used+0xaf>
jnp    805a415 <_IO_stdin_used+0xb1>
pop    %ebx
sub    $0x65655776,%eax
outsb  %ds:(%esi),(%dx)
dec    %esi
popa
arpl   %bx,0x20(%ebp)
sub    $0x207c2069,%eax
pop    %ebx
sub    $0x4e6e5763,%eax
gs
pop    %ebp
and    %ch,0x207c204d
sub    $0xa7d2073,%eax
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c72
sub    $0x74756f72,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
jb     805a4b6 <_IO_stdin_used+0x152>
jne    805a4bd <_IO_stdin_used+0x159>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c69,%eax
sub    $0x65746e69,%eax
jb     805a4ce <_IO_stdin_used+0x16a>
popa
arpl   %sp,0x73(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     805a4e6 <_IO_stdin_used+0x182>
popa
jns    805a49d <_IO_stdin_used+0x139>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x20(%ebp)
je     805a4ea <_IO_stdin_used+0x186>
bound  %ebp,0xa(%ebp,%eiz,2)
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c67
sub    $0x756f7267,%eax
jo     805a517 <_IO_stdin_used+0x1b3>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     805a522 <_IO_stdin_used+0x1be>
popa
jns    805a4d9 <_IO_stdin_used+0x175>
insl   (%dx),%es:(%edi)
jne    805a528 <_IO_stdin_used+0x1c4>
je     805a527 <_IO_stdin_used+0x1c3>
arpl   %sp,0x73(%ecx)
je     805a4e3 <_IO_stdin_used+0x17f>
addr16 jb 805a535 <_IO_stdin_used+0x1d1>
jne    805a538 <_IO_stdin_used+0x1d4>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    805a539 <_IO_stdin_used+0x1d5>
imul   $0xa,0x73(%eax),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c73,%eax
sub    $0x74617473,%eax
imul   $0x20736369,0x74(%ebx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
outsb  %ds:(%esi),(%dx)
gs
je     805a57c <_IO_stdin_used+0x218>
outsl  %ds:(%esi),(%dx)
jb     805a573 <_IO_stdin_used+0x20f>
imul   $0x61747320,0x67(%esi),%ebp
je     805a57a <_IO_stdin_used+0x216>
jae    805a587 <_IO_stdin_used+0x223>
imul   $0x696c2820,0x73(%ebx),%esp
imul   $0x53,0x20(%ebp),%esp
dec    %esi
dec    %ebp
push   %eax
sub    %ecx,(%edx)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c4d
sub    $0x7173616d,%eax
jne    805a59d <_IO_stdin_used+0x239>
jb     805a59b <_IO_stdin_used+0x237>
fs and %ah,%fs:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     805a5b6 <_IO_stdin_used+0x252>
popa
jns    805a56d <_IO_stdin_used+0x209>
insl   (%dx),%es:(%edi)
popa
jae    805a5c2 <_IO_stdin_used+0x25e>
jne    805a5b8 <_IO_stdin_used+0x254>
jb     805a5b6 <_IO_stdin_used+0x252>
fs gs and %ah,%fs:%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805a56f <_IO_stdin_used+0x20b>
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c76
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    805a5e2 <_IO_stdin_used+0x27e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
bound  %esp,0x20(%ebp)
jbe    805a5f3 <_IO_stdin_used+0x28f>
jb     805a5f2 <_IO_stdin_used+0x28e>
outsl  %ds:(%esi),(%dx)
jae    805a5f8 <_IO_stdin_used+0x294>
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c57
sub    $0x65646977,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805a5df <_IO_stdin_used+0x27b>
je     805a633 <_IO_stdin_used+0x2cf>
jne    805a631 <_IO_stdin_used+0x2cd>
arpl   %sp,0x74(%ecx)
and    %cl,%gs:0x50(%ecx)
and    %ah,0x64(%ecx)
fs
jb     805a635 <_IO_stdin_used+0x2d1>
jae    805a645 <_IO_stdin_used+0x2e1>
gs
jae    805a5df <_IO_stdin_used+0x27b>
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c6e
sub    $0x656d756e,%eax
jb     805a655 <_IO_stdin_used+0x2f1>
arpl   %sp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805a61f <_IO_stdin_used+0x2bb>
jb     805a666 <_IO_stdin_used+0x302>
jae    805a672 <_IO_stdin_used+0x30e>
insb   (%dx),%es:(%edi)
jbe    805a66b <_IO_stdin_used+0x307>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    805a617 <_IO_stdin_used+0x2b3>
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6d756e2d
gs
jb     805a689 <_IO_stdin_used+0x325>
arpl   %bp,0x74736f68
jae    805a648 <_IO_stdin_used+0x2e4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805a657 <_IO_stdin_used+0x2f3>
jb     805a69e <_IO_stdin_used+0x33a>
jae    805a6aa <_IO_stdin_used+0x346>
insb   (%dx),%es:(%edi)
jbe    805a6a3 <_IO_stdin_used+0x33f>
and    %ch,0x6f(%eax)
jae    805a6b7 <_IO_stdin_used+0x353>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    805a654 <_IO_stdin_used+0x2f0>
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6d756e2d,%eax
gs
jb     805a6c5 <_IO_stdin_used+0x361>
arpl   %bp,0x74726f70
jae    805a684 <_IO_stdin_used+0x320>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805a693 <_IO_stdin_used+0x32f>
jb     805a6da <_IO_stdin_used+0x376>
jae    805a6e6 <_IO_stdin_used+0x382>
insb   (%dx),%es:(%edi)
jbe    805a6df <_IO_stdin_used+0x37b>
and    %dh,0x6f(%eax)
jb     805a6f3 <_IO_stdin_used+0x38f>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    805a690 <_IO_stdin_used+0x32c>
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6d756e2d,%eax
gs
jb     805a701 <_IO_stdin_used+0x39d>
arpl   %bp,0x72657375
jae    805a6c0 <_IO_stdin_used+0x35c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805a6cf <_IO_stdin_used+0x36b>
jb     805a716 <_IO_stdin_used+0x3b2>
jae    805a722 <_IO_stdin_used+0x3be>
insb   (%dx),%es:(%edi)
jbe    805a71b <_IO_stdin_used+0x3b7>
and    %dh,0x73(%ebp)
gs
jb     805a6dc <_IO_stdin_used+0x378>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    805a6cc <_IO_stdin_used+0x368>
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c4e,%eax
sub    $0x626d7973,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x20202020,0x20(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jb     805a74c <_IO_stdin_used+0x3e8>
jae    805a758 <_IO_stdin_used+0x3f4>
insb   (%dx),%es:(%edi)
jbe    805a751 <_IO_stdin_used+0x3ed>
and    %ch,0x61(%eax)
jb     805a755 <_IO_stdin_used+0x3f1>
ja     805a754 <_IO_stdin_used+0x3f0>
jb     805a75a <_IO_stdin_used+0x3f6>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    805a706 <_IO_stdin_used+0x3a2>
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c65,%eax
sub    $0x65747865,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     805a792 <_IO_stdin_used+0x42e>
popa
jns    805a749 <_IO_stdin_used+0x3e5>
outsl  %ds:(%esi),(%dx)
je     805a794 <_IO_stdin_used+0x430>
gs
jb     805a75e <_IO_stdin_used+0x3fa>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805a798 <_IO_stdin_used+0x434>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     805a7a7 <_IO_stdin_used+0x443>
popa
je     805a7a6 <_IO_stdin_used+0x442>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c70
sub    $0x676f7270,%eax
jb     805a7b9 <_IO_stdin_used+0x455>
insl   (%dx),%es:(%edi)
jae    805a77b <_IO_stdin_used+0x417>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
push   %eax
dec    %ecx
inc    %esp
das
push   %eax
jb     805a7e3 <_IO_stdin_used+0x47f>
addr16 jb 805a7d8 <_IO_stdin_used+0x474>
insl   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     805a7a2 <_IO_stdin_used+0x43e>
jae    805a7f3 <_IO_stdin_used+0x48f>
arpl   %bp,0x65(%ebx)
je     805a7fc <_IO_stdin_used+0x498>
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c63
sub    $0x746e6f63,%eax
imul   $0x2073756f,0x75(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6e(%edi)
je     805a81b <_IO_stdin_used+0x4b7>
outsb  %ds:(%esi),(%dx)
jne    805a824 <_IO_stdin_used+0x4c0>
jne    805a82a <_IO_stdin_used+0x4c6>
and    %ch,0x73(%ecx,%ebp,2)
je     805a826 <_IO_stdin_used+0x4c2>
outsb  %ds:(%esi),(%dx)
or     (%bp,%si),%cl
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c6c
sub    $0x7473696c,%eax
outsb  %gs:(%esi),(%dx)
imul   $0x20202020,0x67(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
insb   (%dx),%es:(%edi)
imul   $0x6e696e65,0x74(%ebx),%esi
and    %dh,0x65(%bp,%di)
jb     805a871 <_IO_stdin_used+0x50d>
gs
jb     805a81e <_IO_stdin_used+0x4ba>
jae    805a86f <_IO_stdin_used+0x50b>
arpl   %bp,0x65(%ebx)
je     805a878 <_IO_stdin_used+0x514>
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c61
sub    $0x2c6c6c61,%eax
and    %ch,0x73696c2d
je     805a887 <_IO_stdin_used+0x523>
outsb  %ds:(%esi),(%dx)
imul   $0x64202020,0x67(%esi),%ebp
imul   $0x2079616c,0x70(%ebx),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805a8af <_IO_stdin_used+0x54b>
and    %ch,(%eax)
fs
gs
popaw
jne    805a8b0 <_IO_stdin_used+0x54c>
je     805a880 <_IO_stdin_used+0x51c>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    %ecx,(%edx)
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c6f,%eax
sub    $0x656d6974,%eax
jb     805a8db <_IO_stdin_used+0x577>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     805a8e6 <_IO_stdin_used+0x582>
popa
jns    805a89d <_IO_stdin_used+0x539>
je     805a8e8 <_IO_stdin_used+0x584>
insl   (%dx),%es:(%edi)
gs
jb     805a8f6 <_IO_stdin_used+0x592>
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x2d202c46
sub    $0x20626966,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     805a91a <_IO_stdin_used+0x5b6>
popa
jns    805a8d1 <_IO_stdin_used+0x56d>
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     805a92c <_IO_stdin_used+0x5c8>
popa
jb     805a91c <_IO_stdin_used+0x5b8>
imul   $0x666e4920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     805a92f <_IO_stdin_used+0x5cb>
popa
je     805a92e <_IO_stdin_used+0x5ca>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %al,0x61(%edx)
jae    805a931 <_IO_stdin_used+0x5cd>
and    %ch,(%eax)
fs
gs
popaw
jne    805a940 <_IO_stdin_used+0x5dc>
je     805a8ff <_IO_stdin_used+0x59b>
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c43,%eax
sub    $0x68636163,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
jb     805a972 <_IO_stdin_used+0x60e>
jne    805a979 <_IO_stdin_used+0x615>
imul   $0x63616320,0x67(%esi),%ebp
push   $0x6e692065
jae    805a987 <_IO_stdin_used+0x623>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %al,0x49(%esi)
inc    %edx
or     (%edx),%cl
add    %ah,(%eax)
and    %bh,(%ebx,%edx,2)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
je     805a968 <_IO_stdin_used+0x604>
cmp    $0x7c742d7b,%eax
sub    $0x7063742d,%eax
jge    805a956 <_IO_stdin_used+0x5f2>
jnp    805a965 <_IO_stdin_used+0x601>
jne    805a9b6 <_IO_stdin_used+0x652>
sub    $0x7064752d,%eax
jge    805a961 <_IO_stdin_used+0x5fd>
jnp    805a970 <_IO_stdin_used+0x60c>
ja     805a9c1 <_IO_stdin_used+0x65d>
sub    $0x7761722d,%eax
jge    805a96c <_IO_stdin_used+0x608>
jnp    805a97b <_IO_stdin_used+0x617>
js     805a9cc <_IO_stdin_used+0x668>
sub    $0x696e752d,%eax
js     805a9d4 <_IO_stdin_used+0x670>
and    %ch,0x3278612d
xor    $0x692d2d20,%eax
jo     805a9dc <_IO_stdin_used+0x678>
and    %ch,0x74656e2d
jb     805a9db <_IO_stdin_used+0x677>
insl   (%dx),%es:(%edi)
or     (%eax),%al
add    %ah,(%eax)
and    %bh,(%ecx,%eax,2)
inc    %esi
ds
cmp    $0x20657355,%eax
daa
sub    $0x342d7c36,%eax
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
sub    $0x613c2041,%eax
data16
ds
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
sub    $0x66613c2d,%eax
ds
daa
cmp    (%eax),%esp
fs
gs
popaw
jne    805aa0f <_IO_stdin_used+0x6ab>
je     805a9df <_IO_stdin_used+0x67b>
and    %ah,0xa73
add    %ah,(%eax)
and    %cl,0x73(%ecx,%ebp,2)
je     805a9d3 <_IO_stdin_used+0x66f>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x6f(%eax)
jae    805aa2d <_IO_stdin_used+0x6c9>
imul   $0x64612065,0x6c(%edx),%esp
fs
jb     805aa29 <_IO_stdin_used+0x6c5>
jae    805aa39 <_IO_stdin_used+0x6d5>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x77282073,0x65(%ecx,%ebp,2),%ebp
push   $0x20686369
jae    805aa4e <_IO_stdin_used+0x6ea>
jo     805aa4b <_IO_stdin_used+0x6e7>
outsl  %ds:(%esi),(%dx)
jb     805aa52 <_IO_stdin_used+0x6ee>
and    %dh,0x6f(%edx)
jne    805aa57 <_IO_stdin_used+0x6f3>
imul   $0xa3a29,0x67(%esi),%ebp
add    %al,(%eax)
ja     805aa4f <_IO_stdin_used+0x6eb>
jb     805aa5e <_IO_stdin_used+0x6fa>
imul   $0x6f67202c,0x67(%esi),%ebp
je     805aa19 <_IO_stdin_used+0x6b5>
bound  %ebp,0x67(%edi)
jne    805aa71 <_IO_stdin_used+0x70d>
and    %ch,0x67(%ecx)
insl   (%dx),%es:(%edi)
jo     805aa3a <_IO_stdin_used+0x6d6>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0xa2e64
add    %ch,0x65(%esi)
je     805aa87 <_IO_stdin_used+0x723>
je     805aa77 <_IO_stdin_used+0x713>
je     805aa52 <_IO_stdin_used+0x6ee>
and    %dh,0x6e(%ebp)
jae    805aa92 <_IO_stdin_used+0x72e>
jo     805aa8f <_IO_stdin_used+0x72b>
outsl  %ds:(%esi),(%dx)
jb     805aa96 <_IO_stdin_used+0x732>
gs and %ah,%fs:%gs:0x64(%ecx)
fs
jb     805aa8f <_IO_stdin_used+0x72b>
jae    805aa9f <_IO_stdin_used+0x73b>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x21206425,0x20(%ecx,%edi,2),%ebp
or     (%eax),%al
add    %al,(%eax)
ja     805aa9f <_IO_stdin_used+0x73b>
jb     805aaae <_IO_stdin_used+0x74a>
imul   $0x6f67202c,0x67(%esi),%ebp
je     805aa69 <_IO_stdin_used+0x705>
bound  %ebp,0x67(%edi)
jne    805aac1 <_IO_stdin_used+0x75d>
and    %ch,0x67(%ecx)
insl   (%dx),%es:(%edi)
jo     805aa74 <_IO_stdin_used+0x710>
insb   (%dx),%es:(%edi)
imul   $0x2e642520,0x65(%esi),%ebp
or     (%eax),%al
add    %al,(%eax)
and    $0x6e203a73,%eax
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
jo     805aadb <_IO_stdin_used+0x777>
outsl  %ds:(%esi),(%dx)
jb     805aae2 <_IO_stdin_used+0x77e>
and    %ah,0x6f(%esi)
jb     805aa93 <_IO_stdin_used+0x72f>
pusha
and    $0x6f202773,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%eax,%ebp,2)
jae    805aaa0 <_IO_stdin_used+0x73c>
jae    805aafb <_IO_stdin_used+0x797>
jae    805aaf8 <_IO_stdin_used+0x794>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
add    %al,(%eax)
add    %ch,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
jne    805ab05 <_IO_stdin_used+0x7a1>
and    %ah,%fs:0x65(%edx)
and    %dh,0x65(%edx)
popa
and    %ah,%fs:0x6f(%esi)
jb     805aac7 <_IO_stdin_used+0x763>
and    0x203a2270,%ch
addr16
gs
je     805ab16 <_IO_stdin_used+0x7b2>
jne    805ab1c <_IO_stdin_used+0x7b8>
sub    %ch,%fs:(%ecx)
cmp    $0x62206425,%eax
jne    805ab31 <_IO_stdin_used+0x7cd>
and    %bh,0x6f(%ecx)
jne    805aae2 <_IO_stdin_used+0x77e>
jae    805ab2c <_IO_stdin_used+0x7c8>
outsl  %ds:(%esi),(%dx)
jne    805ab33 <_IO_stdin_used+0x7cf>
and    %ah,%fs:0x65(%edx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     805aaff <_IO_stdin_used+0x79b>
sub    %ecx,(%edx)
add    %ch,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
je     805aaf9 <_IO_stdin_used+0x795>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    805ab4a <_IO_stdin_used+0x7e6>
jae    805ab07 <_IO_stdin_used+0x7a3>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     805ab5f <_IO_stdin_used+0x7fb>
imul   $0x202c,0x64(%ebp),%sp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x656e776f,%eax
and    %dh,%fs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    805ab2e <_IO_stdin_used+0x7ca>
imul   $0x77200a6f,0x66(%esi),%ebp
imul   $0x20746f6e,0x20(%esp,%ebp,2),%ebp
bound  %esp,0x20(%ebp)
jae    805ab8a <_IO_stdin_used+0x826>
outsl  %ds:(%esi),(%dx)
ja     805ab93 <_IO_stdin_used+0x82f>
sub    $0x20,%al
jns    805ab98 <_IO_stdin_used+0x834>
jne    805ab4b <_IO_stdin_used+0x7e7>
ja     805ab9c <_IO_stdin_used+0x838>
jne    805ab9b <_IO_stdin_used+0x837>
and    %ch,%fs:0x61(%eax)
jbe    805ab9a <_IO_stdin_used+0x836>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
jb     805abad <_IO_stdin_used+0x849>
outsl  %ds:(%esi),(%dx)
je     805ab61 <_IO_stdin_used+0x7fd>
je     805abb2 <_IO_stdin_used+0x84e>
and    %dh,0x65(%ebx)
and    %ch,%gs:0x74(%ecx)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
sub    %ecx,%cs:(%edx)
add    %al,(%eax)
add    %ah,0x25203a64
ss
xor    $0x5b,%al
xor    %ch,0x462d4139
popa
sub    $0x253a5d66,%eax
pop    %eax
and    %ah,0x305b3436
sub    $0x462d4139,%eax
popa
sub    $0x253a5d66,%eax
pop    %eax
and    %ah,0x6c252058
pop    %eax
cmp    0x2520586c,%ah
pop    %eax
cmp    0x2520586c,%ah
insb   (%dx),%es:(%edi)
pop    %eax
and    %ah,0x64252064
and    %ah,0x2520756c
xor    $0xa733231,%eax
add    %al,(%eax)
and    $0x2073342d,%eax
and    %ah,0x20646c36
and    $0x20646c36,%eax
and    $0x20732a2d,%eax
and    $0x20732a2d,%eax
and    $0x7331312d,%eax
add    %ah,0x2073342d
and    %ah,0x20646c36
and    $0x20646c36,%eax
and    $0x7333322d,%eax
and    %ah,0x7333322d
and    %ah,0x7331312d
add    %al,(%eax)
add    %ah,0x2073342d
and    %ah,0x20646c36
and    $0x20646c36,%eax
and    $0x7333322d,%eax
and    %ah,0x7333322d
and    %ah,0x6431312d
add    %al,(%eax)
add    %cl,(%edx)
push   %eax
jb     805ac7f <_IO_stdin_used+0x91b>
je     805ac81 <_IO_stdin_used+0x91d>
and    %dl,0x65(%edx)
inc    %bx
outsb  %ds:(%esi),(%dx)
je     805ac3a <_IO_stdin_used+0x8d6>
inc    %esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 805ac40 <_IO_stdin_used+0x8dc>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esp
jns    805ac99 <_IO_stdin_used+0x935>
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x74(%ebx)
popa
je     805ac9b <_IO_stdin_used+0x937>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x2d(%ecx)
dec    %esi
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:(%eax)
add    %dh,0x61(%edi)
jb     805acba <_IO_stdin_used+0x956>
imul   $0x6f67202c,0x67(%esi),%ebp
je     805ac75 <_IO_stdin_used+0x911>
bound  %ebp,0x67(%edi)
jne    805accd <_IO_stdin_used+0x969>
and    %dh,0x6e(%ebp)
imul   $0x656e696c,0x20(%eax),%edi
or     %cs:(%eax),%al
add    %ch,(%ebx)
dec    %esi
inc    %ebp
push   %edi
pop    %edi
inc    %ecx
inc    %esp
inc    %esp
push   %edx
push   %esp
and    %ch,(%ebx)
push   %edx
push   %esp
inc    %esi
pop    %edi
dec    %ecx
push   %edx
push   %esp
push   %esp
and    %ch,(%ebx)
push   %edx
push   %esp
inc    %esi
pop    %edi
push   %edx
inc    %ebp
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
and    %ch,(%ebx)
inc    %esi
push   %edi
pop    %edi
dec    %ebp
inc    %ecx
push   %ebx
push   %ecx
push   %ebp
inc    %ebp
push   %edx
inc    %ecx
inc    %esp
inc    %ebp
and    %ch,(%ebx)
dec    %ecx
xor    %edi,(%eax)
dec    %esi
or     0x46(%ecx),%al
cmp    (%eax),%ah
sub    %ch,0x6e(%ecx)
gs
je     805acd1 <_IO_stdin_used+0x96d>
and    %ch,(%ebx)
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
and    %ch,(%ebx)
dec    %ecx
dec    %esi
inc    %ebp
push   %esp
and    %ch,(%ebx)
dec    %ecx
dec    %esi
inc    %ebp
push   %esp
and    %ch,%ss:(%ebx)
dec    %ecx
push   %eax
pop    %eax
and    %ch,(%ebx)
inc    %ecx
pop    %eax
xor    0x454e2b20,%dh
push   %esp
push   %edx
dec    %edi
dec    %ebp
and    %ch,(%ebx)
pop    %eax
xor    0x54412b20,%dh
inc    %ecx
dec    %esp
dec    %ebx
and    %ch,(%ebx)
inc    %ebp
inc    %ebx
dec    %edi
dec    %esi
inc    %ebp
push   %esp
and    %ch,(%ebx)
push   %edx
dec    %edi
push   %ebx
inc    %ebp
and    %cl,(%edx)
dec    %eax
push   %edi
cmp    (%eax),%ah
and    %ch,(%ebx)
inc    %ebp
push   %esp
dec    %eax
inc    %ebp
push   %edx
and    %ch,(%ebx)
inc    %ecx
push   %edx
inc    %ebx
and    %ch,(%ebx)
push   %ebx
dec    %esp
dec    %ecx
push   %eax
and    %ch,(%ebx)
push   %eax
push   %eax
push   %eax
and    %ch,(%ebx)
push   %esp
push   %ebp
dec    %esi
dec    %esi
inc    %ebp
dec    %esp
and    %ch,0x2b205254
inc    %ecx
pop    %eax
xor    0x454e2b20,%dh
push   %esp
push   %edx
dec    %edi
dec    %ebp
and    %ch,(%ebx)
pop    %eax
xor    0x52462b20,%dh
and    %ch,(%ebx)
push   %edx
dec    %edi
push   %ebx
inc    %ebp
and    %ch,(%ebx)
inc    %ecx
push   %ebx
dec    %eax
and    %ch,(%ebx)
push   %ebx
dec    %ecx
push   %esp
and    %ch,(%ebx)
inc    %esi
inc    %esp
inc    %esp
dec    %ecx
and    %ch,(%ebx)
dec    %eax
dec    %ecx
push   %eax
push   %eax
dec    %ecx
and    %ch,(%ebx)
dec    %eax
inc    %esp
dec    %esp
inc    %ebx
das
dec    %esp
inc    %ecx
push   %eax
inc    %edx
and    %ch,(%ebx)
inc    %ebp
push   %ebp
dec    %ecx
ss
xor    $0x20,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
fs
fs
jb     805adc6 <_IO_stdin_used+0xa62>
jae    805add6 <_IO_stdin_used+0xa72>
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x6f(%esi)
je     805ad8d <_IO_stdin_used+0xa29>
jae    805ade4 <_IO_stdin_used+0xa80>
jo     805ade1 <_IO_stdin_used+0xa7d>
outsl  %ds:(%esi),(%dx)
jb     805ade8 <_IO_stdin_used+0xa84>
gs and %ah,%fs:%gs:0x6f(%esi)
jb     805ad9b <_IO_stdin_used+0xa37>
jae    805adf1 <_IO_stdin_used+0xa8d>
popa
je     805adf3 <_IO_stdin_used+0xa8f>
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
popaw
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
dec    %ebp
push   %esp
push   %ebp
and    %cl,0x65(%ebp)
je     805adb4 <_IO_stdin_used+0xa50>
and    %ah,(%eax)
push   %edx
pop    %eax
sub    $0x52204b4f,%eax
pop    %eax
sub    $0x20525245,%eax
push   %edx
pop    %eax
sub    $0x20505244,%eax
push   %edx
pop    %eax
sub    $0x2052564f,%eax
and    %ah,(%eax)
and    %dl,0x2d(%eax,%ebx,2)
dec    %edi
dec    %ebx
and    %dl,0x2d(%eax,%ebx,2)
inc    %ebp
push   %edx
push   %edx
and    %dl,0x2d(%eax,%ebx,2)
inc    %esp
push   %edx
push   %eax
and    %dl,0x2d(%eax,%ebx,2)
dec    %edi
push   %esi
push   %edx
and    %al,0x6c(%esi)
or     (%bx,%si),%al
or     0x72(%eax),%dl
outsl  %ds:(%esi),(%dx)
je     805ae49 <_IO_stdin_used+0xae5>
and    %dl,0x65(%edx)
arpl   %si,0x2d(%esi)
push   %ecx
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
sub    $0x6f4c2051,%eax
arpl   %sp,0x6c(%ecx)
and    %al,0x64(%ecx)
fs
jb     805ae59 <_IO_stdin_used+0xaf5>
jae    805ae69 <_IO_stdin_used+0xb05>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6f(%esi)
jb     805ae6a <_IO_stdin_used+0xb06>
imul   $0x64644120,0x6e(%edi),%esp
jb     805ae73 <_IO_stdin_used+0xb0f>
jae    805ae83 <_IO_stdin_used+0xb1f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x74(%ebx)
popa
je     805ae83 <_IO_stdin_used+0xb1f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
and    %ch,0x2d2d2d2d
sub    $0x2d2d2d20,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d,%eax
add    %al,(%eax)
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
and    %cl,%gs:0x50(%ecx)
pop    %eax
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805aedd <_IO_stdin_used+0xb79>
or     0x72(%eax),%dl
outsl  %ds:(%esi),(%dx)
je     805aedf <_IO_stdin_used+0xb7b>
and    %dl,0x65(%edx)
arpl   %si,0x2d(%esi)
push   %ecx
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
sub    $0x6f4c2051,%eax
arpl   %sp,0x6c(%ecx)
and    %al,0x64(%ecx)
fs
jb     805aeef <_IO_stdin_used+0xb8b>
jae    805aeff <_IO_stdin_used+0xb9b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     805af03 <_IO_stdin_used+0xb9f>
imul   $0x64644120,0x6e(%edi),%esp
jb     805af0c <_IO_stdin_used+0xba8>
jae    805af1c <_IO_stdin_used+0xbb8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
je     805af19 <_IO_stdin_used+0xbb5>
je     805af1f <_IO_stdin_used+0xbbb>
add    %al,(%eax)
imul   $0x636f7320,0x78(%eax),%esi
imul   $0x20,0x74(%ebp),%esp
outsw  %ds:(%esi),(%dx)
jb     805af38 <_IO_stdin_used+0xbd4>
popa
je     805aeee <_IO_stdin_used+0xb8a>
gs
jb     805af43 <_IO_stdin_used+0xbdf>
outsl  %ds:(%esi),(%dx)
jb     805aef4 <_IO_stdin_used+0xb90>
imul   $0x72756f73,0x20(%esi),%ebp
arpl   %sp,0x20(%ebp)
jo     805af4f <_IO_stdin_used+0xbeb>
jb     805af56 <_IO_stdin_used+0xbf2>
add    %al,(%eax)
imul   $0x6b6f7320,0x78(%eax),%esi
gs
je     805af0e <_IO_stdin_used+0xbaa>
outsw  %ds:(%esi),(%dx)
jb     805af5f <_IO_stdin_used+0xbfb>
popa
je     805af15 <_IO_stdin_used+0xbb1>
gs
jb     805af6a <_IO_stdin_used+0xc06>
outsl  %ds:(%esi),(%dx)
jb     805af1b <_IO_stdin_used+0xbb7>
imul   $0x74736564,0x20(%esi),%ebp
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %dh,0x6f(%eax)
jb     805af82 <_IO_stdin_used+0xc1e>
add    %al,(%eax)
dec    %ecx
push   %eax
pop    %eax
and    %ah,(%eax)
and    %ah,0x20646c36
and    $0x20646c36,%eax
and    $0x7336322d,%eax
and    %ah,0x7336322d
and    %ah,0x73352d
add    %al,(%eax)
add    %al,0x73(%ebp,%eiz,2)
je     805af59 <_IO_stdin_used+0xbf5>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
outsl  %ds:(%esi),(%dx)
jne    805afb5 <_IO_stdin_used+0xc51>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
gs
jbe    805afb7 <_IO_stdin_used+0xc53>
arpl   %sp,0x20(%ebp)
and    %dl,0x74(%ebx)
popa
je     805afbc <_IO_stdin_used+0xc58>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esi
jb     805af91 <_IO_stdin_used+0xc2d>
push   %esi
jae    805af85 <_IO_stdin_used+0xc21>
and    %ah,(%eax)
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
sub    $0x52202051,%eax
arpl   %si,%gs:0x2d(%esi)
push   %ecx
or     (%eax),%al
and    $0x64252073,%eax
and    %ah,0x64252064
and    %ah,0x2520642a
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
and    %ah,%fs:0x2a252064
add    %al,%fs:(%eax)
add    %ah,0x64252064
and    %ah,0x2a252064
and    %ah,%fs:0x2520642a
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
and    %ah,%fs:0x2a252064
add    %al,%fs:(%eax)
and    $0x2073392d,%eax
and    %ah,0x2073392d
and    %ah,0x2073362d
and    %ah,0x7331312d
and    %ah,(%eax)
and    $0x2f643330,%eax
and    $0x20643330,%eax
and    %ah,0x2064362d
and    %ah,0xa64362d
add    %al,0x73(%ebp,%eiz,2)
je     805b069 <_IO_stdin_used+0xd05>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
outsl  %ds:(%esi),(%dx)
jne    805b0c7 <_IO_stdin_used+0xd63>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x76(%ebp,%eiz,2)
imul   $0x434c2020,0x65(%ebx),%esp
dec    %ecx
and    %ah,(%eax)
push   %ebx
je     805b0d2 <_IO_stdin_used+0xd6e>
je     805b0d8 <_IO_stdin_used+0xd74>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esi
jb     805b0ad <_IO_stdin_used+0xd49>
push   %esi
jae    805b0a1 <_IO_stdin_used+0xd3d>
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
sub    $0x52202051,%eax
arpl   %si,%gs:0x2d(%esi)
push   %ecx
or     (%eax),%al
add    %al,(%eax)
and    $0x64252073,%eax
and    %ah,0x64252064
and    %ah,0x2a252064
and    %ah,%fs:0x2520642a
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
and    %ah,%fs:0x2a252064
add    %al,%fs:(%eax)
add    %al,(%eax)
and    $0x7335312d,%eax
and    %ah,0x7335312d
and    %ah,0x2073372d
and    $0x2064332d,%eax
and    %ah,0x7331312d
and    %ah,(%eax)
and    $0x2f643230,%eax
and    $0x20643230,%eax
and    %ah,0x2064362d
and    %ah,0xa64362d
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    805b168 <_IO_stdin_used+0xe04>
jb     805b125 <_IO_stdin_used+0xdc1>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
gs
jae    805b183 <_IO_stdin_used+0xe1f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6f(%ebx)
jne    805b18c <_IO_stdin_used+0xe28>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
gs
jbe    805b18e <_IO_stdin_used+0xe2a>
arpl   %sp,0x20(%ebp)
and    %dl,0x74(%ebx)
popa
je     805b193 <_IO_stdin_used+0xe2f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esi
jb     805b168 <_IO_stdin_used+0xe04>
push   %esi
jae    805b15c <_IO_stdin_used+0xdf8>
and    %ah,(%eax)
and    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
sub    $0x52202051,%eax
arpl   %si,%gs:0x2d(%esi)
push   %ecx
or     (%eax),%al
add    %ah,0x2a252073
js     805b186 <_IO_stdin_used+0xe22>
and    $0x2520782a,%eax
sub    0x2f(%eax),%bh
and    $0x2520782a,%eax
and    %ah,%fs:0x64252064
and    %ah,0x2520642a
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%edi,%ebp,1),%ah
sub    0x25(%eax,%eiz,1),%ah
sub    0x25(%eax,%eiz,1),%ah
and    %ah,%fs:0x2a252064
add    %al,%fs:(%eax)
add    %ah,0x2073392d
and    %ah,0x2073392d
and    %ah,0x2073392d
and    %ah,0x2073362d
and    %ah,0x7331312d
and    %ah,(%eax)
and    $0x2f643330,%eax
and    $0x20643330,%eax
and    %ah,0x2064362d
and    %ah,0xa64362d
add    %al,(%eax)
add    %al,0x72(%esi)
gs and %al,%fs:%gs:0x61(%edx)
jne    805b256 <_IO_stdin_used+0xef2>
addr16 popa
jb     805b261 <_IO_stdin_used+0xefd>
outsb  %gs:(%esi),(%dx)
sub    $0x20,%al
inc    %ecx
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %al,0x6f(%ebx)
js     805b226 <_IO_stdin_used+0xec2>
and    %al,0x65(%edx)
jb     805b26d <_IO_stdin_used+0xf09>
and    %al,%fs:0x63(%ebp)
imul   $0x66,0x6e(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
jae    805b237 <_IO_stdin_used+0xed3>
and    %dl,0x68(%eax)
imul   $0x646e756c,0x42(%eax,%eiz,1),%ebp
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x20,%al
push   %esp
jne    805b27f <_IO_stdin_used+0xf1b>
outsb  %ds:(%esi),(%dx)
and    %cl,0x6f(%eax)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%bx,%di)
and    %ch,%fs:0x74(%edi)
push   $0x737265
imul   $0x25200074,0x65(%esi),%ebp
sub    $0x20733031,%eax
add    %ah,(%eax)
and    $0x6430312d,%eax
and    %al,(%eax)
and    $0x6c30312d,%eax
jne    805b26d <_IO_stdin_used+0xf09>
add    %ah,(%eax)
and    $0x7336312d,%eax
add    %cl,0x64(%ecx)
js     805b259 <_IO_stdin_used+0xef5>
and    $0x31252064,%eax
xor    $0x36252073,%eax
xor    $0x5b,%al
xor    %ch,0x462d4139
popa
sub    $0x25205d66,%eax
add    %ah,%fs:0x25583830
xor    %bh,(%eax)
pop    %eax
and    $0x25583830,%eax
xor    %bh,(%eax)
pop    %eax
add    %ah,0x7335312d
and    %ah,0x2064362d
and    $0x25000a73,%eax
or     %esp,%fs:0x633031
or     %esp,0x2d305b38
cmp    %eax,0x2d(%ecx)
inc    %esi
popa
sub    $0x25205d66,%eax
add    %ah,%fs:0x702f0058
jb     805b323 <_IO_stdin_used+0xfbf>
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b2e9 <_IO_stdin_used+0xf85>
imul   $0x46410070,0x6d(%edi),%esp
and    %cl,0x4e(%ecx)
inc    %ebp
push   %esp
and    %ch,(%eax)
imul   $0x2f002970,0x6d(%edi),%esp
jo     805b343 <_IO_stdin_used+0xfdf>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b307 <_IO_stdin_used+0xfa3>
imul   $0x2f003670,0x6d(%edi),%esp
jo     805b353 <_IO_stdin_used+0xfef>
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    805b355 <_IO_stdin_used+0xff1>
arpl   %bp,0x65(%ebx)
je     805b325 <_IO_stdin_used+0xfc1>
pop    %ebx
add    %bl,0x30(%ebx)
xor    %dh,(%eax)
xor    %bl,0x3a(%ebp)
add    %ah,0x73252f73
add    %ch,(%edi)
jo     805b370 <_IO_stdin_used+0x100c>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x64662f73,%eax
add    %dh,0x61(%edi)
jb     805b379 <_IO_stdin_used+0x1015>
imul   $0x6f67202c,0x67(%esi),%ebp
je     805b334 <_IO_stdin_used+0xfd0>
bound  %ebp,0x67(%edi)
jne    805b38c <_IO_stdin_used+0x1028>
and    %dh,0x70(%ebx,%eiz,2)
and    %ch,0x6e(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%al
outsl  %ds:(%esi),(%dx)
data16
data16
and    %ch,(%eax)
xor    %ch,(%esi)
xor    %dh,(%eax)
das
and    $0x252f646c,%eax
sub    %eax,%fs:(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
and    $0x66322e32,%eax
das
and    $0x252f646c,%eax
sub    %eax,%fs:(%eax)
imul   $0x70,0x65(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x32252820,0x65(%esi),%esi
xor    %cs:0x2f(%esi),%ah
and    $0x252f646c,%eax
sub    %eax,%fs:(%eax)
je     805b3cd <_IO_stdin_used+0x1069>
insl   (%dx),%es:(%edi)
gs
ja     805b3c9 <_IO_stdin_used+0x1065>
imul   $0x322e3225,0x28(%eax,%eiz,1),%esi
data16
das
and    $0x252f646c,%eax
sub    %eax,%fs:(%eax)
jne    805b3ea <_IO_stdin_used+0x1086>
imul   $0x25,0x2d(%esi),%ebp
and    %ch,%fs:(%eax)
and    $0x66322e32,%eax
das
and    $0x252f646c,%eax
sub    %eax,%fs:(%eax)
das
jo     805b406 <_IO_stdin_used+0x10a2>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b3ca <_IO_stdin_used+0x1066>
je     805b400 <_IO_stdin_used+0x109c>
jo     805b39f <_IO_stdin_used+0x103b>
inc    %ecx
inc    %esi
and    %cl,0x4e(%ecx)
inc    %ebp
push   %esp
and    %ch,(%eax)
je     805b40d <_IO_stdin_used+0x10a9>
jo     805b3d5 <_IO_stdin_used+0x1071>
add    %ch,(%edi)
jo     805b422 <_IO_stdin_used+0x10be>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b3e6 <_IO_stdin_used+0x1082>
je     805b41c <_IO_stdin_used+0x10b8>
jo     805b3f1 <_IO_stdin_used+0x108d>
add    %dh,0x61(%edi)
jb     805b42e <_IO_stdin_used+0x10ca>
imul   $0x6f67202c,0x67(%esi),%ebp
je     805b3e9 <_IO_stdin_used+0x1085>
bound  %ebp,0x67(%edi)
jne    805b441 <_IO_stdin_used+0x10dd>
and    %dh,0x64(%ebp)
jo     805b3f3 <_IO_stdin_used+0x108f>
insb   (%dx),%es:(%edi)
imul   $0x45000a2e,0x65(%esi),%ebp
push   %ebx
push   %esp
inc    %ecx
inc    %edx
dec    %esp
dec    %ecx
push   %ebx
dec    %eax
inc    %ebp
inc    %esp
add    %dl,0x4e(%ebp)
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,0x6e(%edi)
and    $0x25282064,%eax
xor    (%esi),%ch
xor    0x2f(%esi),%ah
and    $0x252f646c,%eax
sub    %eax,%fs:(%eax)
das
jo     805b477 <_IO_stdin_used+0x1113>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b43b <_IO_stdin_used+0x10d7>
jne    805b472 <_IO_stdin_used+0x110e>
jo     805b410 <_IO_stdin_used+0x10ac>
inc    %ecx
inc    %esi
and    %cl,0x4e(%ecx)
inc    %ebp
push   %esp
and    %ch,(%eax)
jne    805b47f <_IO_stdin_used+0x111b>
jo     805b446 <_IO_stdin_used+0x10e2>
add    %ch,(%edi)
jo     805b493 <_IO_stdin_used+0x112f>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b457 <_IO_stdin_used+0x10f3>
jne    805b48e <_IO_stdin_used+0x112a>
jo     805b462 <_IO_stdin_used+0x10fe>
add    %dh,0x61(%edi)
jb     805b49f <_IO_stdin_used+0x113b>
imul   $0x6f67202c,0x67(%esi),%ebp
je     805b45a <_IO_stdin_used+0x10f6>
bound  %ebp,0x67(%edi)
jne    805b4b2 <_IO_stdin_used+0x114e>
and    %dh,0x61(%edx)
ja     805b464 <_IO_stdin_used+0x1100>
insb   (%dx),%es:(%edi)
imul   $0x2f000a2e,0x65(%esi),%ebp
jo     805b4c0 <_IO_stdin_used+0x115c>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b484 <_IO_stdin_used+0x1120>
jb     805b4b8 <_IO_stdin_used+0x1154>
ja     805b459 <_IO_stdin_used+0x10f5>
inc    %ecx
inc    %esi
and    %cl,0x4e(%ecx)
inc    %ebp
push   %esp
and    %ch,(%eax)
jb     805b4c5 <_IO_stdin_used+0x1161>
ja     805b48f <_IO_stdin_used+0x112b>
add    %ch,(%edi)
jo     805b4dc <_IO_stdin_used+0x1178>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b4a0 <_IO_stdin_used+0x113c>
jb     805b4d4 <_IO_stdin_used+0x1170>
ja     805b4ab <_IO_stdin_used+0x1147>
add    %bh,(%edi)
aas
add    %al,0x63(%ecx)
je     805b4e6 <_IO_stdin_used+0x1182>
jbe    805b4e4 <_IO_stdin_used+0x1180>
and    %dl,0x4e(%ebp)
dec    %ecx
pop    %eax
and    %ah,0x6d(%edi,%ebp,2)
popa
imul   $0x6b636f73,0x20(%esi),%ebp
gs
je     805b506 <_IO_stdin_used+0x11a2>
and    %al,(%eax)
sub    %dh,0x65(%ebx)
jb     805b510 <_IO_stdin_used+0x11ac>
gs
jb     805b510 <_IO_stdin_used+0x11ac>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x73(%ebp)
je     805b507 <_IO_stdin_used+0x11a3>
bound  %ebp,0x73(%ecx,%ebp,2)
push   $0x296465
sub    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    805b4d5 <_IO_stdin_used+0x1171>
jae    805b51c <_IO_stdin_used+0x11b8>
jb     805b52f <_IO_stdin_used+0x11cb>
gs
jb     805b52f <_IO_stdin_used+0x11cb>
sub    %eax,(%eax)
sub    %dh,0x2f(%edi)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
jb     805b53d <_IO_stdin_used+0x11d9>
gs
jb     805b53d <_IO_stdin_used+0x11d9>
sub    %eax,(%eax)
and    %dl,0x49(%eax)
inc    %esp
das
push   %eax
jb     805b543 <_IO_stdin_used+0x11df>
addr16 jb 805b538 <_IO_stdin_used+0x11d4>
insl   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x7330322d
add    %ah,(%eax)
push   %eax
popa
je     805b551 <_IO_stdin_used+0x11ed>
or     (%eax),%al
das
jo     805b560 <_IO_stdin_used+0x11fc>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b524 <_IO_stdin_used+0x11c0>
jne    805b565 <_IO_stdin_used+0x1201>
imul   $0x55204641,0x0(%eax),%edi
dec    %esi
dec    %ecx
pop    %eax
add    %cl,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs add %ah,%fs:%gs:0x25203a70
insb   (%dx),%es:(%edi)
pop    %eax
and    %ah,0x2520586c
insb   (%dx),%es:(%edi)
pop    %eax
and    %ah,0x58252058
and    %ah,0x2520756c
jae    805b525 <_IO_stdin_used+0x11c1>
push   %ebx
push   %esp
push   %edx
inc    %ebp
inc    %ecx
dec    %ebp
add    %al,0x52(%edi,%eax,2)
inc    %ecx
dec    %ebp
add    %dl,0x41(%edx)
push   %edi
add    %dl,0x44(%edx)
dec    %ebp
add    %dl,0x45(%ebx)
push   %ecx
push   %eax
inc    %ecx
inc    %ebx
dec    %ebx
inc    %ebp
push   %esp
add    %al,0x52(%esi)
inc    %ebp
inc    %ebp
add    %cl,0x53(%ecx,%ecx,2)
push   %esp
inc    %ebp
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
add    %al,0x4f(%ebx)
dec    %esi
dec    %esi
inc    %ebp
inc    %ebx
push   %esp
inc    %ebp
inc    %esp
add    %al,0x53(%ecx,%ecx,2)
inc    %ebx
dec    %edi
dec    %esi
dec    %esi
inc    %ebp
inc    %ebx
push   %esp
dec    %ecx
dec    %esi
inc    %edi
add    %dl,0x20(%edi)
add    %cl,0x20(%esi)
add    %ah,0x2073352d
and    $0x646c362d,%eax
and    %ah,0x7331312d
and    %ah,0x7330312d
and    %ah,0x7333312d
and    %al,(%eax)
and    $0x756c382d,%eax
and    %al,(%eax)
sub    $0x20202020,%eax
and    %ah,(%eax)
and    %ah,(%eax)
add    %ch,(%edi)
jne    805b616 <_IO_stdin_used+0x12b2>
jb     805b5d4 <_IO_stdin_used+0x1270>
jae    805b60f <_IO_stdin_used+0x12ab>
popa
jb     805b60f <_IO_stdin_used+0x12ab>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x65(%esi)
je     805b5e3 <_IO_stdin_used+0x127f>
je     805b627 <_IO_stdin_used+0x12c3>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jae    805b5bc <_IO_stdin_used+0x1258>
and    $0x49203a73,%eax
outsb  %ds:(%esi),(%dx)
je     805b629 <_IO_stdin_used+0x12c5>
jb     805b634 <_IO_stdin_used+0x12d0>
popa
insb   (%dx),%es:(%edi)
and    %al,0x72(%ebp)
jb     805b63c <_IO_stdin_used+0x12d8>
jb     805b5ef <_IO_stdin_used+0x128b>
pusha
and    $0xa2e2773,%eax
add    %ch,0x6e(%edi,%ebp,2)
outsl  %ds:(%si),(%dx)
jo     805b651 <_IO_stdin_used+0x12ed>
jae    805b5ff <_IO_stdin_used+0x129b>
xor    %esp,(%eax)
jb     805b644 <_IO_stdin_used+0x12e0>
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x65(%bp)
je     805b65e <_IO_stdin_used+0x12fa>
je     805b64e <_IO_stdin_used+0x12ea>
je     805b61d <_IO_stdin_used+0x12b9>
arpl   %ax,(%eax)
and    $0x73250a73,%eax
or     0x73250a73,%ah
or     (%eax),%al
dec    %ebp
inc    %ebx
inc    %esi
inc    %ecx
cmp    0x63(%ecx),%ah
fs
gs
addr16 jo 805b672 <_IO_stdin_used+0x130e>
imul   $0x7473726f,0x4e(%esi),%ebp
jne    805b66a <_IO_stdin_used+0x1306>
push   %esi
jbe    805b655 <_IO_stdin_used+0x12f1>
ja     805b690 <_IO_stdin_used+0x132c>
insb   (%dx),%es:(%edi)
ss
xor    $0x0,%al
dec    %ebp
jne    805b68b <_IO_stdin_used+0x1327>
je     805b68a <_IO_stdin_used+0x1326>
jo     805b68f <_IO_stdin_used+0x132b>
and    %ch,%gs:0x6e(%ecx)
je     805b68e <_IO_stdin_used+0x132a>
jb     805b691 <_IO_stdin_used+0x132d>
popa
arpl   %sp,0x0(%ebp)
dec    %ebx
gs
jb     805b6a1 <_IO_stdin_used+0x133d>
gs
insb   (%dx),%es:(%edi)
and    %cl,0x6e(%ecx)
je     805b69f <_IO_stdin_used+0x133b>
jb     805b6a2 <_IO_stdin_used+0x133e>
popa
arpl   %sp,0x20(%ebp)
je     805b6a3 <_IO_stdin_used+0x133f>
bound  %ebp,0xa(%ebp,%eiz,2)
add    %ch,0x69(%ebp)
jae    805b6be <_IO_stdin_used+0x135a>
imul   $0x746e6920,0x67(%esi),%ebp
gs
jb     805b6bb <_IO_stdin_used+0x1357>
popa
arpl   %sp,0x20(%ebp)
imul   $0x616d726f,0x66(%esi),%ebp
je     805b6cb <_IO_stdin_used+0x1367>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x63(%ecx)
je     805b6d2 <_IO_stdin_used+0x136e>
jbe    805b6d0 <_IO_stdin_used+0x136c>
and    %cl,0x6e(%ecx)
je     805b6d5 <_IO_stdin_used+0x1371>
jb     805b6e0 <_IO_stdin_used+0x137c>
gs
je     805b695 <_IO_stdin_used+0x1331>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805b6a1 <_IO_stdin_used+0x133d>
add    %ah,(%eax)
push   %ebp
jae    805b6eb <_IO_stdin_used+0x1387>
jb     805b6a8 <_IO_stdin_used+0x1344>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
add    %ah,(%eax)
push   %esp
imul   $0x50490072,0x65(%ebp),%ebp
jbe    805b6db <_IO_stdin_used+0x1377>
das
add    %cl,0x50(%ecx)
jbe    805b6df <_IO_stdin_used+0x137b>
and    %al,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    805b721 <_IO_stdin_used+0x13bd>
and    %cl,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    805b722 <_IO_stdin_used+0x13be>
imul   $0x6e49000a,0x73(%eax),%esi
je     805b728 <_IO_stdin_used+0x13c4>
jb     805b72b <_IO_stdin_used+0x13c7>
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %edx
gs
inc    %bx
outsb  %ds:(%esi),(%dx)
je     805b6f6 <_IO_stdin_used+0x1392>
inc    %edi
jb     805b748 <_IO_stdin_used+0x13e4>
jne    805b74b <_IO_stdin_used+0x13e7>
or     (%eax),%al
das
jo     805b752 <_IO_stdin_used+0x13ee>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b716 <_IO_stdin_used+0x13b2>
imul   $0x636f732f,0x78(%eax),%esi
imul   $0x0,0x74(%ebp),%esp
das
jo     805b767 <_IO_stdin_used+0x1403>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b72b <_IO_stdin_used+0x13c7>
imul   $0x20464100,0x78(%eax),%esi
dec    %ecx
push   %eax
pop    %eax
add    %ah,(%eax)
push   %ebp
jae    805b770 <_IO_stdin_used+0x140c>
jb     805b70d <_IO_stdin_used+0x13a9>
inc    %ecx
inc    %esi
pop    %edi
dec    %ecx
push   %eax
pop    %eax
and    %ch,0x69(%ebp)
jae    805b78b <_IO_stdin_used+0x1427>
imul   $0x20732500,0x67(%esi),%ebp
and    $0x6c252073,%eax
pop    %eax
and    %ah,0x2520586c
and    %ah,%fs:0x6f4e0064
je     805b793 <_IO_stdin_used+0x142f>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %al,0x53(%ebp)
push   %esp
inc    %ecx
inc    %edx
add    %dl,0x4e(%ebp)
dec    %ebx
add    %ah,%cs:0x30253a73
xor    $0x58,%al
add    %ah,(%eax)
and    $0x7330312d,%eax
add    %ah,(%eax)
and    $0x6430312d,%eax
add    %ch,(%edi)
jo     805b7d4 <_IO_stdin_used+0x1470>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b798 <_IO_stdin_used+0x1434>
popa
js     805b79e <_IO_stdin_used+0x143a>
xor    $0x20464100,%eax
inc    %ecx
pop    %eax
xor    0x74634100,%dh
imul   $0x2e584120,0x65(%esi),%esi
xor    0x636f7320,%dh
imul   $0x73,0x74(%ebp),%esp
or     (%eax),%al
fs
gs
jae    805b804 <_IO_stdin_used+0x14a0>
pop    %edi
popa
fs
fs
jb     805b796 <_IO_stdin_used+0x1432>
push   %eax
jb     805b808 <_IO_stdin_used+0x14a4>
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %dh,0x65(%edx)
popa
imul   $0x74616420,%fs:0x67(%esi),%ebp
popa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x70000a73
jb     805b826 <_IO_stdin_used+0x14c2>
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %dh,0x65(%edx)
popa
imul   $0x74616420,%fs:0x67(%esi),%ebp
popa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x2f000a73
jo     805b847 <_IO_stdin_used+0x14e3>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b80b <_IO_stdin_used+0x14a7>
js     805b810 <_IO_stdin_used+0x14ac>
xor    $0x20464100,%eax
pop    %eax
xor    0x74634100,%dh
imul   $0x322e5820,0x65(%esi),%esi
xor    $0x636f7320,%eax
imul   $0x73,0x74(%ebp),%esp
or     (%eax),%al
das
jo     805b871 <_IO_stdin_used+0x150d>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805b835 <_IO_stdin_used+0x14d1>
outsb  %ds:(%esi),(%dx)
jb     805b809 <_IO_stdin_used+0x14a5>
inc    %ecx
inc    %esi
and    %cl,0x45(%esi)
push   %esp
push   %edx
dec    %edi
dec    %ebp
add    %al,0x63(%ecx)
je     805b880 <_IO_stdin_used+0x151c>
jbe    805b87e <_IO_stdin_used+0x151a>
and    %cl,0x45(%esi)
push   %esp
das
push   %edx
dec    %edi
dec    %ebp
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805b89c <_IO_stdin_used+0x1538>
or     (%eax),%al
push   %ebx
inc    %ecx
inc    %edx
dec    %ebp
pop    %edi
push   %ebx
inc    %ebp
dec    %esi
push   %esp
add    %al,0x53(%ecx,%ecx,2)
inc    %ebx
pop    %edi
push   %ebx
inc    %ebp
dec    %esi
push   %esp
add    %dl,0x45(%edx)
inc    %ebx
dec    %edi
push   %esi
inc    %ebp
push   %edx
pop    %ecx
add    %dl,0x41(%ebx)
inc    %edx
dec    %ebp
and    %dl,0x45(%ebx)
dec    %esi
push   %esp
add    %al,0x53(%ecx,%ecx,2)
inc    %ebx
and    %dl,0x45(%ebx)
dec    %esi
push   %esp
add    %ch,0x65(%esi)
je     805b8d2 <_IO_stdin_used+0x156e>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %ah,0x70(%esp,%eiz,2)
add    %dh,0x70(%ebx,%eiz,2)
imul   $0x73726576,0x0(%eax),%esi
imul   $0x746e6900,0x6e(%edi),%ebp
gs
jb     805b8e1 <_IO_stdin_used+0x157d>
popa
arpl   %sp,0x73(%ebp)
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     805b885 <_IO_stdin_used+0x1521>
insb   (%dx),%es:(%edi)
imul   $0x6e696e65,0x74(%ebx),%esi
add    %ah,0x6c(%bx,%di)
insb   (%dx),%es:(%edi)
add    %dh,0x6d(%ecx,%ebp,2)
gs
jb     805b90c <_IO_stdin_used+0x15a8>
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805b908 <_IO_stdin_used+0x15a4>
outsb  %ds:(%esi),(%dx)
jne    805b911 <_IO_stdin_used+0x15ad>
jne    805b917 <_IO_stdin_used+0x15b3>
add    %ah,0x78(%ebp)
je     805b90e <_IO_stdin_used+0x15aa>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 805b913 <_IO_stdin_used+0x15af>
insl   (%dx),%es:(%edi)
jae    805b8b5 <_IO_stdin_used+0x1551>
jbe    805b91c <_IO_stdin_used+0x15b8>
jb     805b91b <_IO_stdin_used+0x15b7>
outsl  %ds:(%esi),(%dx)
jae    805b921 <_IO_stdin_used+0x15bd>
add    %dh,0x74(%ebx)
popa
je     805b92b <_IO_stdin_used+0x15c7>
jae    805b938 <_IO_stdin_used+0x15d4>
imul   $0x64697700,0x73(%ebx),%esp
add    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     805b93c <_IO_stdin_used+0x15d8>
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
jne    805b945 <_IO_stdin_used+0x15e1>
gs
jb     805b944 <_IO_stdin_used+0x15e0>
arpl   %bp,0x74736f68
jae    805b8e3 <_IO_stdin_used+0x157f>
outsb  %ds:(%esi),(%dx)
jne    805b953 <_IO_stdin_used+0x15ef>
gs
jb     805b952 <_IO_stdin_used+0x15ee>
arpl   %bp,0x74726f70
jae    805b8f1 <_IO_stdin_used+0x158d>
outsb  %ds:(%esi),(%dx)
jne    805b961 <_IO_stdin_used+0x15fd>
gs
jb     805b960 <_IO_stdin_used+0x15fc>
arpl   %bp,0x72657375
jae    805b8ff <_IO_stdin_used+0x159b>
jae    805b97a <_IO_stdin_used+0x1616>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x626966,0x0(%ebx),%esp
addr16 jb 805b97e <_IO_stdin_used+0x161a>
jne    805b981 <_IO_stdin_used+0x161d>
jae    805b913 <_IO_stdin_used+0x15af>
push   %ebx
pop    %ecx
dec    %esi
pop    %edi
push   %ebx
inc    %ebp
dec    %esi
push   %esp
add    %dl,0x59(%ebx)
dec    %esi
pop    %edi
push   %edx
inc    %ebp
inc    %ebx
push   %esi
add    %al,0x49(%esi)
dec    %esi
pop    %edi
push   %edi
inc    %ecx
dec    %ecx
push   %esp
xor    %eax,(%eax)
inc    %esi
dec    %ecx
dec    %esi
pop    %edi
push   %edi
inc    %ecx
dec    %ecx
push   %esp
xor    (%eax),%al
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
pop    %edi
push   %edi
inc    %ecx
dec    %ecx
push   %esp
add    %al,0x4c(%ebx)
dec    %edi
push   %ebx
inc    %ebp
add    %al,0x4c(%ebx)
dec    %edi
push   %ebx
inc    %ebp
pop    %edi
push   %edi
inc    %ecx
dec    %ecx
push   %esp
add    %cl,0x53(%ecx,%eax,2)
push   %esp
pop    %edi
inc    %ecx
inc    %ebx
dec    %ebx
add    %cl,0x53(%ecx,%ecx,2)
push   %esp
inc    %ebp
dec    %esi
add    %al,0x4c(%ebx)
dec    %edi
push   %ebx
dec    %ecx
dec    %esi
inc    %edi
add    %al,0x4f(%ebx)
dec    %esi
dec    %esi
and    %dl,0x45(%ebx)
dec    %esi
push   %esp
add    %ch,0x65(%esi)
je     805b9ed <_IO_stdin_used+0x1689>
je     805b9dd <_IO_stdin_used+0x1679>
je     805b99e <_IO_stdin_used+0x163a>
xor    %ebp,(%esi)
xor    $0x32,%al
and    %ch,(%eax)
xor    (%eax),%dh
xor    %dh,(%ecx)
sub    $0x312d3430,%eax
xor    $0x656e0029,%eax
je     805b9c1 <_IO_stdin_used+0x165d>
je     805ba05 <_IO_stdin_used+0x16a1>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jae    805b9ba <_IO_stdin_used+0x1656>
xor    %ebp,(%esi)
xor    %al,%ss:(%eax)
add    %bl,(%eax)
out    %eax,$0x4
or     %al,(%eax)
out    %eax,$0x4
or     %ch,%al
out    %al,$0x4
or     %dl,%al
out    %al,$0x4
or     %ah,0x680804e6(%eax)
in     $0x4,%al
or     %al,-0x17f7fb1a(%eax)
in     $0x4,%eax
or     %bl,%al
in     $0x4,%eax
or     %dl,-0x6ff7fb1c(%eax)
out    %al,$0x4
or     %bl,(%eax)
xchg   %eax,%edi
add    $0x8,%al
icebp
cwtl
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x671af7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x6728f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
mov    $0x18080498,%esi
xchg   %eax,%edi
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
cwtl
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
mov    0x94080498,%al
cwtl
add    $0x8,%al
jp     805ba6a <_IO_stdin_used+0x1706>
add    $0x8,%al
sbb    %dl,-0x6791f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
pop    %edi
cwtl
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
push   %ebx
cwtl
add    $0x8,%al
inc    %edi
cwtl
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x67fbf7fc(%edi)
add    $0x8,%al
clc
xchg   %eax,%edi
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x6813f7fc(%edi)
add    $0x8,%al
sbb    %dl,-0x681ff7fc(%edi)
add    $0x8,%al
aam    $0x97
add    $0x8,%al
enter  $0x497,$0x8
sbb    %dl,-0x6843f7fc(%edi)
add    $0x8,%al
mov    0xb0080498,%al
xchg   %eax,%edi
add    $0x8,%al
sbb    %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
movsb  %ds:(%esi),%es:(%edi)
xchg   %eax,%edi
add    $0x8,%al
sbb    %dl,-0x6867f7fc(%edi)
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
xchg   %dl,-0x68e7f7fc(%edi)
add    $0x8,%al
jge    805bb2d <_IO_stdin_used+0x17c9>
add    $0x8,%al
je     805bb31 <_IO_stdin_used+0x17cd>
add    $0x8,%al
imul   $0x4,-0x689df7fc(%edi),%edx
or     %dl,-0x69(%esi)
add    $0x8,%al
dec    %ebp
xchg   %eax,%edi
add    $0x8,%al
cmp    %bl,-0x4ab6f7fc(%ecx)
add    $0x5b82b08,%eax
or     %dh,0xda0805b8
mov    $0x5,%bl
or     %bh,(%edi)
mov    $0xb5490805,%eax
add    $0x5b84808,%eax
or     %dl,-0x48(%edx)
add    $0x5b3da08,%eax
or     %bh,(%edi)
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,%dh
add    $0x5b3da08,%eax
or     %dl,(%ebx)
mov    $0xb91c0805,%ecx
add    $0x5b92508,%eax
or     %ch,(%edi)
mov    $0xb9390805,%ecx
add    $0x5b94308,%eax
or     %cl,-0x47(%ecx)
add    $0x5b95408,%eax
or     %bl,-0x47(%ebp)
add    $0x5b96408,%eax
or     %cl,-0x4b(%ecx)
add    $0x5b96c08,%eax
or     %dl,-0x48(%edx)
add    $0x5b3da08,%eax
or     %al,(%eax)
add    %cl,%al
inc    %edx
and    $0x7325732a,%eax
cmp    (%eax),%ah
and    $0x25000a64,%eax
sub    0x25(%ebx),%dh
jae    805bc3f <_IO_stdin_used+0x18db>
add    %ah,0x6e(%ebp)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0xa3a73
jne    805bcbc <_IO_stdin_used+0x1958>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x25000a73
jae    805bc7b <_IO_stdin_used+0x1917>
and    $0x6300756c,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805bc86 <_IO_stdin_used+0x1922>
outsl  %ds:(%esi),(%dx)
jo     805bcce <_IO_stdin_used+0x196a>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
jo     805bce0 <_IO_stdin_used+0x197c>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805bca4 <_IO_stdin_used+0x1940>
jae    805bce5 <_IO_stdin_used+0x1981>
insl   (%dx),%es:(%edi)
jo     805bc7a <_IO_stdin_used+0x1916>
das
jo     805bcef <_IO_stdin_used+0x198b>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805bcb3 <_IO_stdin_used+0x194f>
outsb  %ds:(%esi),(%dx)
gs
je     805bcfb <_IO_stdin_used+0x1997>
je     805bceb <_IO_stdin_used+0x1987>
je     805bc8c <_IO_stdin_used+0x1928>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805bcb3 <_IO_stdin_used+0x194f>
outsl  %ds:(%esi),(%dx)
jo     805bcfb <_IO_stdin_used+0x1997>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
jo     805bd0d <_IO_stdin_used+0x19a9>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805bcd1 <_IO_stdin_used+0x196d>
jae    805bd12 <_IO_stdin_used+0x19ae>
insl   (%dx),%es:(%edi)
jo     805bcdd <_IO_stdin_used+0x1979>
add    %dl,0x70(%ebx,%eiz,2)
add    %cl,0x70(%ecx)
add    %cl,%ss:0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805bceb <_IO_stdin_used+0x1987>
add    %dl,0x64(%ebp)
jo     805bcf0 <_IO_stdin_used+0x198c>
add    %dl,0x70(%ebx,%eiz,2)
add    %cl,%ss:0x70(%ecx)
add    %cl,0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805bcc8 <_IO_stdin_used+0x1964>
push   %ebp
fs
jo     805bccc <_IO_stdin_used+0x1968>
push   %esp
arpl   %si,0x45(%eax)
js     805bd46 <_IO_stdin_used+0x19e2>
add    %dl,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%edi)
imul   $0x73,0x65(%ecx),%ebp
push   %ebx
outsb  %gs:(%esi),(%dx)
je     805bce2 <_IO_stdin_used+0x197e>
and    $0x59532075,%eax
dec    %esi
and    %ah,0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x73,0x65(%ecx),%ebp
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     805bcf6 <_IO_stdin_used+0x1992>
push   %ebx
jns    805bd67 <_IO_stdin_used+0x1a03>
arpl   %bp,0x6f(%edi)
imul   $0x73,0x65(%ecx),%ebp
push   %edx
arpl   %si,%gs:0x0(%esi)
and    $0x59532075,%eax
dec    %esi
and    %ah,0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x73,0x65(%ecx),%ebp
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805bd80 <_IO_stdin_used+0x1a1c>
add    %dl,%fs:0x79(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%edi)
imul   $0x73,0x65(%ecx),%ebp
inc    %esi
popa
imul   $0x626d4500,0x64(%ebp,%eiz,2),%ebp
jb     805bdac <_IO_stdin_used+0x1a48>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x737473,0x52(%ebx),%esp
push   %eax
jb     805bdb4 <_IO_stdin_used+0x1a50>
outsb  %ds:(%esi),(%dx)
gs
inc    %ebx
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs add %dl,%fs:%gs:0x63(%edx)
jbe    805bd9c <_IO_stdin_used+0x1a38>
jb     805bdc3 <_IO_stdin_used+0x1a5f>
outsb  %ds:(%esi),(%dx)
gs add %cl,%fs:%gs:0x66(%edi)
outsl  %ds:(%esi),(%dx)
push   %eax
jb     805bdcd <_IO_stdin_used+0x1a69>
outsb  %ds:(%esi),(%dx)
gs add %cl,%fs:%gs:0x75(%edi)
je     805bdaf <_IO_stdin_used+0x1a4b>
push   %di
imul   $0x6349776f,0x64(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     805bddf <_IO_stdin_used+0x1a7b>
add    %cl,0x63(%edi,%ebp,2)
imul   $0x70,0x6f(%edx,%esi,2),%eax
jo     805bddc <_IO_stdin_used+0x1a78>
fs
dec    %ecx
arpl   %bp,0x70(%ebp)
jae    805bd7e <_IO_stdin_used+0x1a1a>
push   %esp
push   %edi
add    %dl,0x52(%edi,%edx,2)
arpl   %di,%gs:0x63(%ecx)
insb   (%dx),%es:(%edi)
gs add %dl,%fs:%gs:0x4b(%edi,%edx,2)
imul   $0x41500064,0x65(%esp,%ebp,2),%ebp
push   %edi
push   %ebx
push   %eax
popa
jae    805be10 <_IO_stdin_used+0x1aac>
imul   $0x57415000,0x65(%esi),%esi
push   %ebx
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
add    %dl,%gs:0x41(%eax)
push   %edi
push   %ebx
inc    %ebp
jae    805be27 <_IO_stdin_used+0x1ac3>
popa
bound  %eax,(%eax)
inc    %esp
gs
insb   (%dx),%es:(%edi)
popa
jns    805be21 <_IO_stdin_used+0x1abd>
fs
inc    %ecx
inc    %ebx
dec    %ebx
jae    805bdc2 <_IO_stdin_used+0x1a5e>
and    $0x65642075,%eax
insb   (%dx),%es:(%edi)
popa
jns    805be30 <_IO_stdin_used+0x1acc>
and    %ah,%fs:0x63(%ecx)
imul   $0x73,0x20(%ebx),%esi
outsb  %gs:(%esi),(%dx)
je     805bdd7 <_IO_stdin_used+0x1a73>
inc    %esp
gs
insb   (%dx),%es:(%edi)
popa
jns    805be42 <_IO_stdin_used+0x1ade>
fs
inc    %ecx
inc    %ebx
dec    %ebx
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %al,%fs:0x6c(%ebp,%eiz,2)
popa
jns    805be53 <_IO_stdin_used+0x1aef>
fs
inc    %ecx
inc    %ebx
dec    %ebx
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    805be6a <_IO_stdin_used+0x1b06>
add    %cl,0x73(%ecx,%ebp,2)
je     805be61 <_IO_stdin_used+0x1afd>
outsb  %ds:(%esi),(%dx)
dec    %edi
jbe    805be65 <_IO_stdin_used+0x1b01>
jb     805be68 <_IO_stdin_used+0x1b04>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805be79 <_IO_stdin_used+0x1b15>
add    %cl,0x73(%ecx,%ebp,2)
je     805be71 <_IO_stdin_used+0x1b0d>
outsb  %ds:(%esi),(%dx)
inc    %esp
jb     805be7f <_IO_stdin_used+0x1b1b>
jo     805be85 <_IO_stdin_used+0x1b21>
add    %dl,0x50(%ebx,%eax,2)
push   %eax
jb     805be7e <_IO_stdin_used+0x1b1a>
jno    805be90 <_IO_stdin_used+0x1b2c>
gs
jne    805be83 <_IO_stdin_used+0x1b1f>
add    %dl,%fs:0x50(%ebx,%eax,2)
inc    %esp
imul   $0x6f437463,0x65(%edx),%esi
jo     805bea6 <_IO_stdin_used+0x1b42>
inc    %esi
jb     805be9f <_IO_stdin_used+0x1b3b>
insl   (%dx),%es:(%edi)
inc    %edx
popa
arpl   %bp,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
add    %dl,0x43(%si)
push   %eax
inc    %esp
imul   $0x6f437463,0x65(%edx),%esi
jo     805bebf <_IO_stdin_used+0x1b5b>
inc    %esi
jb     805beb8 <_IO_stdin_used+0x1b54>
insl   (%dx),%es:(%edi)
push   %eax
jb     805beb2 <_IO_stdin_used+0x1b4e>
jno    805bec4 <_IO_stdin_used+0x1b60>
gs
jne    805beb7 <_IO_stdin_used+0x1b53>
add    %dl,0x50(%ebx,%eax,2)
push   %eax
jb     805bebe <_IO_stdin_used+0x1b5a>
jno    805bed0 <_IO_stdin_used+0x1b6c>
gs
jne    805bec3 <_IO_stdin_used+0x1b5f>
inc    %esp
jb     805bed0 <_IO_stdin_used+0x1b6c>
jo     805bed3 <_IO_stdin_used+0x1b6f>
gs add %dl,%fs:%gs:0x50(%ebx,%eax,2)
dec    %eax
push   %eax
dec    %eax
imul   $0x70207525,0x0(%ebx,%esi,2),%esi
popa
arpl   %bp,0x65(%ebx)
je     805be9a <_IO_stdin_used+0x1b36>
push   $0x65646165
jb     805bef4 <_IO_stdin_used+0x1b90>
and    %dh,0x72(%eax)
gs imul $0x54006465,%fs:%gs:0x74(%ebx),%esp
54
inc    %ebx
push   %eax
dec    %eax
push   %eax
dec    %eax
imul   $0x6573556f,0x54(%ebx,%esi,2),%esi
jb     805be9c <_IO_stdin_used+0x1b38>
push   %ebx
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x4d(%ebx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %cx,0x4f(%edi)
dec    %ebp
add    %dl,0x50(%ebx,%eax,2)
push   %eax
jne    805bf22 <_IO_stdin_used+0x1bbe>
gs
inc    %ecx
arpl   %bp,0x73(%ebx)
add    %dl,0x50(%ebx,%eax,2)
dec    %eax
push   %eax
inc    %ecx
arpl   %bp,0x73(%ebx)
add    %ah,0x72702075
gs imul $0x61206465,%fs:%gs:0x74(%ebx),%esp
61
arpl   %bp,0x6e(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805bf40 <_IO_stdin_used+0x1bdc>
gs
fs
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805bf4f <_IO_stdin_used+0x1beb>
add    %dl,0x50(%ebx,%eax,2)
push   %edx
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   %edx
arpl   %bp,%gs:0x76(%edi)
gs
jb     805bf65 <_IO_stdin_used+0x1c01>
add    %dl,0x50(%ebx,%eax,2)
push   %ebx
popa
arpl   %bp,0x52(%ebx)
arpl   %bp,%gs:0x76(%edi)
gs
jb     805bf75 <_IO_stdin_used+0x1c11>
add    %dl,0x50(%ebx,%eax,2)
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
push   %edx
outsb  %gs:(%esi),(%dx)
imul   $0x20752500,%gs:0x67(%bp),%ebp
20
bound  %esp,0x64(%ecx)
and    %dl,0x41(%ebx)
inc    %ebx
dec    %ebx
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805bf8c <_IO_stdin_used+0x1c28>
add    %dl,%fs:0x50(%ebx,%eax,2)
inc    %esi
inc    %ecx
inc    %ebx
dec    %ebx
push   %edx
outsl  %gs:(%esi),(%dx)
jb     805bf99 <_IO_stdin_used+0x1c35>
gs
jb     805bf38 <_IO_stdin_used+0x1bd4>
push   %esp
inc    %ebx
push   %eax
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
push   %edx
outsl  %gs:(%esi),(%dx)
jb     805bfa8 <_IO_stdin_used+0x1c44>
gs
jb     805bf47 <_IO_stdin_used+0x1be3>
push   %esp
inc    %ebx
push   %eax
push   %esp
push   %ebx
push   %edx
outsl  %gs:(%esi),(%dx)
jb     805bfb5 <_IO_stdin_used+0x1c51>
gs
jb     805bf54 <_IO_stdin_used+0x1bf0>
push   %esp
inc    %ebx
push   %eax
push   %edx
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   %edx
outsl  %gs:(%esi),(%dx)
jb     805bfc4 <_IO_stdin_used+0x1c60>
gs
jb     805bf63 <_IO_stdin_used+0x1bff>
push   %esp
inc    %ebx
push   %eax
inc    %esi
jne    805bfd5 <_IO_stdin_used+0x1c71>
insb   (%dx),%es:(%edi)
push   %ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
add    %dl,0x50(%ebx,%eax,2)
push   %eax
popa
jb     805bfea <_IO_stdin_used+0x1c86>
imul   $0x6f646e55,0x6c(%ecx),%esp
add    %dl,0x50(%ebx,%eax,2)
inc    %esp
push   %ebx
popa
arpl   %bp,0x55(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
add    %dl,0x50(%ebx,%eax,2)
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    805c005 <_IO_stdin_used+0x1ca1>
push   %ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
add    %dl,0x50(%ebx,%eax,2)
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    805c012 <_IO_stdin_used+0x1cae>
push   %edx
gs
je     805c014 <_IO_stdin_used+0x1cb0>
popa
outsb  %ds:(%esi),(%dx)
jae    805c013 <_IO_stdin_used+0x1caf>
imul   $0x72207525,0x0(%ebx,%esi,2),%esi
gs
je     805c023 <_IO_stdin_used+0x1cbf>
popa
outsb  %ds:(%esi),(%dx)
jae    805c022 <_IO_stdin_used+0x1cbe>
imul   $0x74736f6c,0x20(%ebx,%esi,2),%esi
add    %dl,0x50(%ebx,%eax,2)
push   %edx
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
inc    %esi
popa
imul   $0x54007365,0x72(%ebp,%esi,2),%ebp
inc    %ebx
push   %eax
push   %ebx
popa
arpl   %bp,0x46(%ebx)
popa
imul   $0x54007365,0x72(%ebp,%esi,2),%ebp
inc    %ebx
push   %eax
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    805c058 <_IO_stdin_used+0x1cf4>
inc    %esi
popa
imul   $0x25007365,0x72(%ebp,%esi,2),%ebp
jne    805c011 <_IO_stdin_used+0x1cad>
je     805c05c <_IO_stdin_used+0x1cf8>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    805c06c <_IO_stdin_used+0x1d08>
jae    805c01a <_IO_stdin_used+0x1cb6>
imul   $0x73736f6c,0x20(%esi),%ebp
and    %dh,0x74(%ebx)
popa
je     805c06c <_IO_stdin_used+0x1d08>
add    %dl,0x50(%ebx,%eax,2)
inc    %esi
popa
jae    805c083 <_IO_stdin_used+0x1d1f>
push   %edx
gs
je     805c085 <_IO_stdin_used+0x1d21>
popa
outsb  %ds:(%esi),(%dx)
jae    805c017 <_IO_stdin_used+0x1cb3>
and    $0x61662075,%eax
jae    805c092 <_IO_stdin_used+0x1d2e>
and    %dh,0x65(%edx)
je     805c095 <_IO_stdin_used+0x1d31>
popa
outsb  %ds:(%esi),(%dx)
jae    805c094 <_IO_stdin_used+0x1d30>
imul   $0x46504354,0x0(%ebx,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
jb     805c0a9 <_IO_stdin_used+0x1d45>
popa
jb     805c099 <_IO_stdin_used+0x1d35>
push   %edx
gs
je     805c0ab <_IO_stdin_used+0x1d47>
popa
outsb  %ds:(%esi),(%dx)
jae    805c03d <_IO_stdin_used+0x1cd9>
and    $0x6f662075,%eax
jb     805c0bb <_IO_stdin_used+0x1d57>
popa
jb     805c0ab <_IO_stdin_used+0x1d47>
and    %dh,0x65(%edx)
je     805c0be <_IO_stdin_used+0x1d5a>
popa
outsb  %ds:(%esi),(%dx)
jae    805c0bd <_IO_stdin_used+0x1d59>
imul   $0x53504354,0x0(%ebx,%esi,2),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805c0af <_IO_stdin_used+0x1d4b>
je     805c0bf <_IO_stdin_used+0x1d5b>
jb     805c0d4 <_IO_stdin_used+0x1d70>
push   %edx
gs
je     805c0d6 <_IO_stdin_used+0x1d72>
popa
outsb  %ds:(%esi),(%dx)
jae    805c068 <_IO_stdin_used+0x1d04>
and    $0x65722075,%eax
je     805c0e1 <_IO_stdin_used+0x1d7d>
popa
outsb  %ds:(%esi),(%dx)
jae    805c0e0 <_IO_stdin_used+0x1d7c>
imul   $0x73206e69,0x20(%ebx,%esi,2),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805c09f <_IO_stdin_used+0x1d3b>
jae    805c0f5 <_IO_stdin_used+0x1d91>
popa
jb     805c0f8 <_IO_stdin_used+0x1d94>
add    %dl,0x50(%ebx,%eax,2)
push   %esp
imul   $0x7374756f,0x65(%ebp),%ebp
add    %ah,0x746f2075
push   $0x54207265
inc    %ebx
push   %eax
and    %dh,0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    805c119 <_IO_stdin_used+0x1db5>
jae    805c0a7 <_IO_stdin_used+0x1d43>
push   %esp
inc    %ebx
push   %eax
push   %edx
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   %edx
arpl   %bp,%gs:0x76(%edi)
gs
jb     805c12f <_IO_stdin_used+0x1dcb>
inc    %esi
popa
imul   $0x50435400,0x64(%ebp,%eiz,2),%ebp
push   %ebx
popa
arpl   %bp,0x52(%ebx)
arpl   %bp,%gs:0x76(%edi)
gs
jb     805c145 <_IO_stdin_used+0x1de1>
inc    %esi
popa
imul   $0x41532075,0x25(%eax,%eax,1),%ebp
inc    %ebx
dec    %ebx
and    %dh,0x65(%edx)
je     805c14f <_IO_stdin_used+0x1deb>
popa
outsb  %ds:(%esi),(%dx)
jae    805c14e <_IO_stdin_used+0x1dea>
imul   $0x6c696166,0x20(%ebx,%esi,2),%esi
gs add %dl,%fs:%gs:0x50(%ebx,%eax,2)
push   %ebx
arpl   %bp,0x65(%eax)
fs
jne    805c162 <_IO_stdin_used+0x1dfe>
gs
jb     805c13f <_IO_stdin_used+0x1ddb>
popa
imul   $0x50435400,0x64(%ebp,%eiz,2),%ebp
push   %edx
arpl   %si,0x43(%esi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
popa
jo     805c17f <_IO_stdin_used+0x1e1b>
gs add %dl,%fs:%gs:0x50(%ebx,%eax,2)
inc    %esp
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
dec    %edi
insb   (%dx),%es:(%edi)
fs
push   %ebx
outsb  %gs:(%esi),(%dx)
je     805c11f <_IO_stdin_used+0x1dbb>
push   %esp
inc    %ebx
push   %eax
inc    %esp
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
dec    %edi
outsw  %ds:(%esi),(%dx)
push   %ebx
outsb  %gs:(%esi),(%dx)
je     805c12f <_IO_stdin_used+0x1dcb>
push   %esp
inc    %ebx
push   %eax
inc    %esp
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
push   %edx
arpl   %si,%gs:0x0(%esi)
and    $0x53442075,%eax
inc    %ecx
inc    %ebx
dec    %ebx
jae    805c166 <_IO_stdin_used+0x1e02>
jb     805c1ad <_IO_stdin_used+0x1e49>
arpl   %sp,0x69(%ebp)
jbe    805c1b2 <_IO_stdin_used+0x1e4e>
add    %dl,%fs:0x50(%ebx,%eax,2)
inc    %esp
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
dec    %edi
outsw  %ds:(%esi),(%dx)
push   %edx
arpl   %si,%gs:0x0(%esi)
push   %esp
inc    %ebx
push   %eax
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c1b7 <_IO_stdin_used+0x1e53>
outsb  %ds:(%esi),(%dx)
push   %ebx
jns    805c1da <_IO_stdin_used+0x1e76>
add    %dl,0x50(%ebx,%eax,2)
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c1c5 <_IO_stdin_used+0x1e61>
outsb  %ds:(%esi),(%dx)
inc    %esp
popa
je     805c1dc <_IO_stdin_used+0x1e78>
add    %dl,0x50(%ebx,%eax,2)
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c1d4 <_IO_stdin_used+0x1e70>
outsb  %ds:(%esi),(%dx)
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    805c1f0 <_IO_stdin_used+0x1e8c>
add    %dl,0x50(%ebx,%eax,2)
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c1e4 <_IO_stdin_used+0x1e80>
outsb  %ds:(%esi),(%dx)
dec    %ebp
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805c215 <_IO_stdin_used+0x1eb1>
add    %dl,0x50(%ebx,%eax,2)
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c1f5 <_IO_stdin_used+0x1e91>
outsb  %ds:(%esi),(%dx)
push   %esp
imul   $0x74756f,0x65(%ebp),%ebp
push   %esp
inc    %ebx
push   %eax
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c207 <_IO_stdin_used+0x1ea3>
outsb  %ds:(%esi),(%dx)
dec    %esp
imul   $0x54007265,0x67(%esi),%ebp
inc    %ebx
push   %eax
inc    %ecx
bound  %ebp,0x72(%edi)
je     805c20f <_IO_stdin_used+0x1eab>
popa
imul   $0x50435400,0x64(%ebp,%eiz,2),%ebp
dec    %ebp
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805c251 <_IO_stdin_used+0x1eed>
push   %eax
jb     805c240 <_IO_stdin_used+0x1edc>
jae    805c250 <_IO_stdin_used+0x1eec>
jne    805c251 <_IO_stdin_used+0x1eed>
gs
jae    805c1e2 <_IO_stdin_used+0x1e7e>
push   %esp
inc    %ebx
push   %eax
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    805c25c <_IO_stdin_used+0x1ef8>
add    %ah,0x43542075
push   %eax
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ch,0x73(%edi,%ebp,2)
jae    805c21b <_IO_stdin_used+0x1eb7>
gs
jbe    805c263 <_IO_stdin_used+0x1eff>
outsb  %ds:(%esi),(%dx)
je     805c274 <_IO_stdin_used+0x1f10>
add    %dl,0x50(%ebx,%eax,2)
inc    %esp
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
add    %dl,0x50(%ebx,%eax,2)
push   %edx
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   %edx
arpl   %bp,%gs:0x76(%edi)
gs
jb     805c297 <_IO_stdin_used+0x1f33>
inc    %esi
popa
imul   $0x49367064,0x55(%eax,%eax,1),%ebp
outsb  %ds:(%esi),(%dx)
inc    %esp
popa
je     805c28e <_IO_stdin_used+0x1f2a>
addr16 jb 805c291 <_IO_stdin_used+0x1f2d>
insl   (%dx),%es:(%edi)
jae    805c233 <_IO_stdin_used+0x1ecf>
and    $0x61702075,%eax
arpl   %bp,0x65(%ebx)
je     805c2b0 <_IO_stdin_used+0x1f4c>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805c2aa <_IO_stdin_used+0x1f46>
add    %dl,%fs:0x64(%ebp)
jo     805c281 <_IO_stdin_used+0x1f1d>
dec    %esi
outsl  %ds:(%esi),(%dx)
push   %eax
outsl  %ds:(%esi),(%dx)
jb     805c2c5 <_IO_stdin_used+0x1f61>
jae    805c253 <_IO_stdin_used+0x1eef>
push   %ebp
fs
jo     805c28d <_IO_stdin_used+0x1f29>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %ebp
jb     805c2ce <_IO_stdin_used+0x1f6a>
outsl  %ds:(%esi),(%dx)
jb     805c2d2 <_IO_stdin_used+0x1f6e>
add    %ah,0x61702075
arpl   %bp,0x65(%ebx)
je     805c28a <_IO_stdin_used+0x1f26>
jb     805c2d1 <_IO_stdin_used+0x1f6d>
arpl   %sp,0x69(%ebp)
jbe    805c2d6 <_IO_stdin_used+0x1f72>
and    %ah,0x72(%ebp)
jb     805c2e5 <_IO_stdin_used+0x1f81>
jb     805c2eb <_IO_stdin_used+0x1f87>
add    %dl,0x64(%ebp)
jo     805c2b3 <_IO_stdin_used+0x1f4f>
dec    %edi
jne    805c2f4 <_IO_stdin_used+0x1f90>
inc    %esp
popa
je     805c2e5 <_IO_stdin_used+0x1f81>
addr16 jb 805c2e8 <_IO_stdin_used+0x1f84>
insl   (%dx),%es:(%edi)
jae    805c28a <_IO_stdin_used+0x1f26>
and    $0x61702075,%eax
arpl   %bp,0x65(%ebx)
je     805c307 <_IO_stdin_used+0x1fa3>
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     805c29a <_IO_stdin_used+0x1f36>
push   %edx
je     805c30c <_IO_stdin_used+0x1fa8>
inc    %ecx
insb   (%dx),%es:(%edi)
outsl  %ds:(%si),(%dx)
jb     805c30c <_IO_stdin_used+0x1fa8>
je     805c30d <_IO_stdin_used+0x1fa9>
insl   (%dx),%es:(%edi)
add    %dl,0x54(%edx)
dec    %edi
and    %ah,0x6c(%ecx)
outsl  %ds:(%si),(%dx)
jb     805c31a <_IO_stdin_used+0x1fb6>
je     805c31b <_IO_stdin_used+0x1fb7>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x74520073
outsl  %ds:(%esi),(%dx)
dec    %ebp
imul   $0x4d6f7452,0x0(%esi),%ebp
popa
js     805c2c9 <_IO_stdin_used+0x1f65>
dec    %ebp
popa
js     805c310 <_IO_stdin_used+0x1fac>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x63(%ecx)
je     805c33e <_IO_stdin_used+0x1fda>
jbe    805c33c <_IO_stdin_used+0x1fd8>
dec    %edi
jo     805c33f <_IO_stdin_used+0x1fdb>
outsb  %ds:(%esi),(%dx)
jae    805c2dd <_IO_stdin_used+0x1f79>
push   %eax
popa
jae    805c354 <_IO_stdin_used+0x1ff0>
imul   $0x6e65704f,0x65(%esi),%esi
jae    805c2ea <_IO_stdin_used+0x1f86>
inc    %ecx
je     805c361 <_IO_stdin_used+0x1ffd>
gs
insl   (%dx),%es:(%edi)
jo     805c365 <_IO_stdin_used+0x2001>
inc    %esi
popa
imul   $0x66207525,0x0(%ebx,%esi,2),%ebp
popa
imul   $0x6e6f6320,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     805c375 <_IO_stdin_used+0x2011>
insl   (%dx),%es:(%edi)
jo     805c387 <_IO_stdin_used+0x2023>
jae    805c315 <_IO_stdin_used+0x1fb1>
inc    %ebp
jae    805c38c <_IO_stdin_used+0x2028>
popa
bound  %edx,0x65(%edx)
jae    805c383 <_IO_stdin_used+0x201f>
je     805c393 <_IO_stdin_used+0x202f>
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
jae    805c398 <_IO_stdin_used+0x2034>
je     805c3a8 <_IO_stdin_used+0x2044>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805c3a2 <_IO_stdin_used+0x203e>
add    %al,%fs:0x75(%ebx)
jb     805c3b5 <_IO_stdin_used+0x2051>
inc    %ebp
jae    805c3ba <_IO_stdin_used+0x2056>
popa
bound  %eax,(%eax)
and    $0x6f632075,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805c378 <_IO_stdin_used+0x2014>
gs
jae    805c3cf <_IO_stdin_used+0x206b>
popa
bound  %ebp,0x73(%ecx,%ebp,2)
push   $0x49006465
outsb  %ds:(%esi),(%dx)
push   %ebx
gs
addr16 jae 805c36b <_IO_stdin_used+0x2007>
and    $0x65732075,%eax
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805c3e9 <_IO_stdin_used+0x2085>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805c3e3 <_IO_stdin_used+0x207f>
add    %cl,%fs:0x75(%edi)
je     805c3d7 <_IO_stdin_used+0x2073>
gs
addr16 jae 805c388 <_IO_stdin_used+0x2024>
and    $0x65732075,%eax
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805c406 <_IO_stdin_used+0x20a2>
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x75(%edi)
je     805c39d <_IO_stdin_used+0x2039>
push   %edx
gs
je     805c413 <_IO_stdin_used+0x20af>
popa
outsb  %ds:(%esi),(%dx)
jae    805c3f8 <_IO_stdin_used+0x2094>
gs
addr16 jae 805c3a9 <_IO_stdin_used+0x2045>
and    $0x65732075,%eax
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805c427 <_IO_stdin_used+0x20c3>
and    %dh,0x65(%edx)
je     805c42b <_IO_stdin_used+0x20c7>
popa
outsb  %ds:(%esi),(%dx)
jae    805c42a <_IO_stdin_used+0x20c6>
imul   $0x456e4900,0x64(%ebp,%eiz,2),%esi
jb     805c439 <_IO_stdin_used+0x20d5>
jae    805c3c9 <_IO_stdin_used+0x2065>
and    $0x61622075,%eax
and    %dh,%fs:0x65(%ebx)
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805c44b <_IO_stdin_used+0x20e7>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805c445 <_IO_stdin_used+0x20e1>
fs add %cl,%cs:%fs:0x75(%edi)
je     805c439 <_IO_stdin_used+0x20d5>
jae    805c45d <_IO_stdin_used+0x20f9>
jae    805c3eb <_IO_stdin_used+0x2087>
and    $0x65722075,%eax
jae    805c457 <_IO_stdin_used+0x20f3>
je     805c467 <_IO_stdin_used+0x2103>
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     805c3fa <_IO_stdin_used+0x2096>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
dec    %ebp
jae    805c46b <_IO_stdin_used+0x2107>
jae    805c406 <_IO_stdin_used+0x20a2>
and    $0x43492075,%eax
dec    %ebp
push   %eax
and    %ch,0x65(%ebp)
jae    805c485 <_IO_stdin_used+0x2121>
popa
addr16
gs
jae    805c437 <_IO_stdin_used+0x20d3>
jb     805c47e <_IO_stdin_used+0x211a>
arpl   %sp,0x69(%ebp)
jbe    805c483 <_IO_stdin_used+0x211f>
add    %cl,%fs:0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805c45b <_IO_stdin_used+0x20f7>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %ebp
jb     805c49c <_IO_stdin_used+0x2138>
outsl  %ds:(%esi),(%dx)
jb     805c4a0 <_IO_stdin_used+0x213c>
add    %ah,0x6e692075
jo     805c4aa <_IO_stdin_used+0x2146>
je     805c457 <_IO_stdin_used+0x20f3>
dec    %ecx
inc    %ebx
dec    %ebp
push   %eax
and    %ch,0x65(%ebp)
jae    805c4b3 <_IO_stdin_used+0x214f>
popa
and    %ah,%gs:0x61(%bp)
imul   $0x6349002e,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
jo     805c487 <_IO_stdin_used+0x2123>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %esp
gs
jae    805c4cb <_IO_stdin_used+0x2167>
push   %ebp
outsb  %ds:(%esi),(%dx)
jb     805c4c0 <_IO_stdin_used+0x215c>
popa
arpl   %bp,0x73(%eax)
add    %ah,0x73(%ebp,%eiz,2)
je     805c4ce <_IO_stdin_used+0x216a>
outsb  %ds:(%esi),(%dx)
popa
je     805c4d2 <_IO_stdin_used+0x216e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
jb     805c4d5 <_IO_stdin_used+0x2171>
popa
arpl   %bp,0x61(%eax)
bound  %ebp,0x3a(%ebp,%eiz,2)
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c4b7 <_IO_stdin_used+0x2153>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %eax
imul   $0x6f,0x6f(%esp,%edx,2),%esi
inc    %edx
imul   $0x63617000,0x73(%edi),%esp
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x69(%edx)
cmp    (%bx,%si),%ah
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c4dd <_IO_stdin_used+0x2179>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %esp
imul   $0x64637845,0x65(%ebp),%ebp
jae    805c4b3 <_IO_stdin_used+0x214f>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %eax
popa
jb     805c52b <_IO_stdin_used+0x21c7>
push   %eax
jb     805c530 <_IO_stdin_used+0x21cc>
bound  %ebp,0x6d(%ebp,%eiz,2)
jae    805c4c7 <_IO_stdin_used+0x2163>
jo     805c52a <_IO_stdin_used+0x21c6>
jb     805c52c <_IO_stdin_used+0x21c8>
insl   (%dx),%es:(%edi)
gs
je     805c534 <_IO_stdin_used+0x21d0>
jb     805c4f1 <_IO_stdin_used+0x218d>
jo     805c545 <_IO_stdin_used+0x21e1>
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
cmp    (%eax),%ah
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c518 <_IO_stdin_used+0x21b4>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %ebp
arpl   %bp,0x6f(%eax)
jae    805c4ea <_IO_stdin_used+0x2186>
arpl   %bp,%gs:0x6f(%eax)
and    %dh,0x65(%edx)
jno    805c568 <_IO_stdin_used+0x2204>
gs
jae    805c56a <_IO_stdin_used+0x2206>
jae    805c532 <_IO_stdin_used+0x21ce>
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c537 <_IO_stdin_used+0x21d3>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %ebp
arpl   %bp,0x6f(%eax)
push   %edx
gs
jo     805c577 <_IO_stdin_used+0x2213>
imul   $0x68636500,0x73(%ebp),%esp
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
jo     805c584 <_IO_stdin_used+0x2220>
imul   $0x7525203a,0x73(%ebp),%esp
add    %cl,0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805c55b <_IO_stdin_used+0x21f7>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %edi
jb     805c599 <_IO_stdin_used+0x2235>
jne    805c59c <_IO_stdin_used+0x2238>
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %edx,0x75(%ecx)
gs
jb     805c59e <_IO_stdin_used+0x223a>
gs
jae    805c538 <_IO_stdin_used+0x21d4>
addr16 jb 805c5aa <_IO_stdin_used+0x2246>
jne    805c5ad <_IO_stdin_used+0x2249>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x75(%ecx)
gs
jb     805c5b3 <_IO_stdin_used+0x224f>
gs
jae    805c587 <_IO_stdin_used+0x2223>
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c58c <_IO_stdin_used+0x2228>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %edi
jb     805c5ca <_IO_stdin_used+0x2266>
jne    805c5cd <_IO_stdin_used+0x2269>
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %edx,0x65(%edx)
jae    805c5d5 <_IO_stdin_used+0x2271>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805c5ce <_IO_stdin_used+0x226a>
jae    805c56b <_IO_stdin_used+0x2207>
addr16 jb 805c5dd <_IO_stdin_used+0x2279>
jne    805c5e0 <_IO_stdin_used+0x227c>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x65(%edx)
jae    805c5ec <_IO_stdin_used+0x2288>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805c5e5 <_IO_stdin_used+0x2281>
jae    805c5bc <_IO_stdin_used+0x2258>
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c5c1 <_IO_stdin_used+0x225d>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %edi
jb     805c5ff <_IO_stdin_used+0x229b>
jne    805c602 <_IO_stdin_used+0x229e>
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %edx,0x65(%edx)
fs
jne    805c5fe <_IO_stdin_used+0x229a>
je     805c606 <_IO_stdin_used+0x22a2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805c5a1 <_IO_stdin_used+0x223d>
addr16 jb 805c613 <_IO_stdin_used+0x22af>
jne    805c616 <_IO_stdin_used+0x22b2>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x65(%edx)
fs
jne    805c616 <_IO_stdin_used+0x22b2>
je     805c61e <_IO_stdin_used+0x22ba>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805c5f3 <_IO_stdin_used+0x228f>
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c5f8 <_IO_stdin_used+0x2294>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %edx
outsl  %ds:(%esi),(%dx)
jne    805c63c <_IO_stdin_used+0x22d8>
gs
jb     805c61e <_IO_stdin_used+0x22ba>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x72007374,0x69(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jne    805c64b <_IO_stdin_used+0x22e7>
gs
jb     805c5fa <_IO_stdin_used+0x2296>
jae    805c64b <_IO_stdin_used+0x22e7>
insb   (%dx),%es:(%edi)
imul   $0x203a7374,0x69(%ebx),%esp
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c622 <_IO_stdin_used+0x22be>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %edx
outsl  %ds:(%esi),(%dx)
jne    805c666 <_IO_stdin_used+0x2302>
gs
jb     805c636 <_IO_stdin_used+0x22d2>
fs
jbe    805c65d <_IO_stdin_used+0x22f9>
jb     805c66e <_IO_stdin_used+0x230a>
imul   $0x746e656d,0x65(%ebx),%esi
jae    805c603 <_IO_stdin_used+0x229f>
jb     805c674 <_IO_stdin_used+0x2310>
jne    805c67b <_IO_stdin_used+0x2317>
gs
jb     805c62a <_IO_stdin_used+0x22c6>
popa
fs
jbe    805c673 <_IO_stdin_used+0x230f>
jb     805c684 <_IO_stdin_used+0x2320>
imul   $0x746e656d,0x65(%ebx),%esi
cmp    (%eax),%ah
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c657 <_IO_stdin_used+0x22f3>
dec    %ecx
outsb  %ds:(%esi),(%dx)
dec    %esi
imul   $0x53726f62,%gs:0x68(%edi),%esp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6e007374,0x69(%ebx),%esp
imul   $0x72756f62,%gs:0x68(%edi),%esp
and    %dh,0x6f(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x203a7374,0x69(%ebx),%esp
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c686 <_IO_stdin_used+0x2322>
dec    %ecx
outsb  %ds:(%esi),(%dx)
dec    %esi
imul   $0x41726f62,%gs:0x68(%edi),%esp
fs
jbe    805c6c3 <_IO_stdin_used+0x235f>
jb     805c6d4 <_IO_stdin_used+0x2370>
imul   $0x746e656d,0x65(%ebx),%esi
jae    805c669 <_IO_stdin_used+0x2305>
outsb  %ds:(%esi),(%dx)
imul   $0x72756f62,%gs:0x68(%edi),%esp
and    %ah,0x64(%ecx)
jbe    805c6dc <_IO_stdin_used+0x2378>
jb     805c6ed <_IO_stdin_used+0x2389>
imul   $0x746e656d,0x65(%ebx),%esi
cmp    (%eax),%ah
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c6c0 <_IO_stdin_used+0x235c>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %edx
gs imul $0x737463,%fs:%gs:0x65(%edx),%esi
00
jb     805c6fd <_IO_stdin_used+0x2399>
imul   $0x3a737463,%fs:0x65(%edx),%esi
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c6df <_IO_stdin_used+0x237b>
dec    %edi
jne    805c720 <_IO_stdin_used+0x23bc>
dec    %ebp
jae    805c716 <_IO_stdin_used+0x23b2>
jae    805c6b1 <_IO_stdin_used+0x234d>
and    $0x43492075,%eax
dec    %ebp
push   %eax
and    %ch,0x65(%ebp)
jae    805c730 <_IO_stdin_used+0x23cc>
popa
addr16
gs
jae    805c6e2 <_IO_stdin_used+0x237e>
jae    805c729 <_IO_stdin_used+0x23c5>
outsb  %ds:(%esi),(%dx)
je     805c6c7 <_IO_stdin_used+0x2363>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c743 <_IO_stdin_used+0x23df>
inc    %esp
gs
jae    805c747 <_IO_stdin_used+0x23e3>
push   %ebp
outsb  %ds:(%esi),(%dx)
jb     805c73c <_IO_stdin_used+0x23d8>
popa
arpl   %bp,0x73(%eax)
add    %cl,0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805c717 <_IO_stdin_used+0x23b3>
dec    %edi
jne    805c758 <_IO_stdin_used+0x23f4>
push   %eax
imul   $0x6f,0x6f(%esp,%edx,2),%esi
inc    %edx
imul   $0x6d634900,0x73(%edi),%esp
jo     805c72a <_IO_stdin_used+0x23c6>
dec    %edi
jne    805c76b <_IO_stdin_used+0x2407>
push   %esp
imul   $0x64637845,0x65(%ebp),%ebp
jae    805c701 <_IO_stdin_used+0x239d>
jae    805c768 <_IO_stdin_used+0x2404>
outsb  %ds:(%esi),(%dx)
je     805c726 <_IO_stdin_used+0x23c2>
dec    %ecx
inc    %ebx
dec    %ebp
push   %eax
jbe    805c742 <_IO_stdin_used+0x23de>
and    %dh,0x6d(%ecx,%ebp,2)
and    %ah,%gs:0x78(%ebp)
arpl   %sp,0x65(%ebp)
fs gs cmp %fs:%gs:(%eax),%ah
and    $0x63490075,%eax
insl   (%dx),%es:(%edi)
jo     805c75a <_IO_stdin_used+0x23f6>
dec    %edi
jne    805c79b <_IO_stdin_used+0x2437>
push   %eax
popa
jb     805c798 <_IO_stdin_used+0x2434>
push   %eax
jb     805c79d <_IO_stdin_used+0x2439>
bound  %ebp,0x6d(%ebp,%eiz,2)
jae    805c734 <_IO_stdin_used+0x23d0>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c7b0 <_IO_stdin_used+0x244c>
inc    %ebp
arpl   %bp,0x6f(%eax)
jae    805c742 <_IO_stdin_used+0x23de>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c7be <_IO_stdin_used+0x245a>
inc    %ebp
arpl   %bp,0x6f(%eax)
push   %edx
gs
jo     805c7be <_IO_stdin_used+0x245a>
imul   $0x6d634900,0x73(%ebp),%esp
jo     805c791 <_IO_stdin_used+0x242d>
dec    %edi
jne    805c7d2 <_IO_stdin_used+0x246e>
inc    %edi
jb     805c7d0 <_IO_stdin_used+0x246c>
jne    805c7d3 <_IO_stdin_used+0x246f>
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %edx,0x75(%ecx)
gs
jb     805c7d5 <_IO_stdin_used+0x2471>
gs
jae    805c76f <_IO_stdin_used+0x240b>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c7eb <_IO_stdin_used+0x2487>
inc    %edi
jb     805c7e9 <_IO_stdin_used+0x2485>
jne    805c7ec <_IO_stdin_used+0x2488>
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %edx,0x65(%edx)
jae    805c7f4 <_IO_stdin_used+0x2490>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805c7ed <_IO_stdin_used+0x2489>
jae    805c78a <_IO_stdin_used+0x2426>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c806 <_IO_stdin_used+0x24a2>
inc    %edi
jb     805c804 <_IO_stdin_used+0x24a0>
jne    805c807 <_IO_stdin_used+0x24a3>
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %edx,0x65(%edx)
fs
jne    805c803 <_IO_stdin_used+0x249f>
je     805c80b <_IO_stdin_used+0x24a7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805c7a6 <_IO_stdin_used+0x2442>
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c822 <_IO_stdin_used+0x24be>
push   %edx
outsl  %ds:(%esi),(%dx)
jne    805c826 <_IO_stdin_used+0x24c2>
gs
jb     805c808 <_IO_stdin_used+0x24a4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x49007374,0x69(%ebx),%esp
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805c839 <_IO_stdin_used+0x24d5>
push   %edx
outsl  %ds:(%esi),(%dx)
jne    805c83d <_IO_stdin_used+0x24d9>
gs
jb     805c80d <_IO_stdin_used+0x24a9>
fs
jbe    805c834 <_IO_stdin_used+0x24d0>
jb     805c845 <_IO_stdin_used+0x24e1>
imul   $0x746e656d,0x65(%ebx),%esi
jae    805c7fa <_IO_stdin_used+0x2496>
add    %cl,0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805c816 <_IO_stdin_used+0x24b2>
dec    %edi
jne    805c857 <_IO_stdin_used+0x24f3>
dec    %esi
imul   $0x53726f62,%gs:0x68(%edi),%esp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6e007374,0x69(%ebx),%esp
imul   $0x20726f62,%gs:0x68(%edi),%esp
jae    805c86e <_IO_stdin_used+0x250a>
insb   (%dx),%es:(%edi)
imul   $0x203a7374,0x69(%ebx),%esp
and    $0x656e0075,%eax
imul   $0x20726f62,0x68(%edi),%esp
popa
fs
jbe    805c87c <_IO_stdin_used+0x2518>
jb     805c88d <_IO_stdin_used+0x2529>
imul   $0x746e656d,0x65(%ebx),%esi
jae    805c85c <_IO_stdin_used+0x24f8>
and    %ah,0x63490075
insl   (%dx),%es:(%edi)
jo     805c861 <_IO_stdin_used+0x24fd>
dec    %edi
jne    805c8a2 <_IO_stdin_used+0x253e>
push   %edx
gs imul $0x737463,%fs:%gs:0x65(%edx),%esi
00
je     805c8a3 <_IO_stdin_used+0x253f>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    805c8b3 <_IO_stdin_used+0x254f>
and    %ch,0x6e(%ecx)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    805c8b2 <_IO_stdin_used+0x254e>
je     805c885 <_IO_stdin_used+0x2521>
and    %ah,0x6e490075
push   %eax
popa
jb     805c8c2 <_IO_stdin_used+0x255e>
push   %eax
jb     805c8c7 <_IO_stdin_used+0x2563>
bound  %esi,0x0(%ebx)
ja     805c8cf <_IO_stdin_used+0x256b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bx,%si)
jb     805c8c6 <_IO_stdin_used+0x2562>
insl   (%dx),%es:(%edi)
gs
je     805c8ce <_IO_stdin_used+0x256a>
jb     805c8de <_IO_stdin_used+0x257a>
cmp    (%eax),%ah
and    $0x6e490075,%eax
push   %ebx
jb     805c8d8 <_IO_stdin_used+0x2574>
push   %ecx
jne    805c8dd <_IO_stdin_used+0x2579>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x73(%eax)
add    %dh,0x6f(%ebx)
jne    805c8f3 <_IO_stdin_used+0x258f>
arpl   %sp,0x20(%ebp)
jno    805c8fb <_IO_stdin_used+0x2597>
outsb  %gs:(%esi),(%dx)
arpl   %bp,0x65(%eax)
jae    805c8c7 <_IO_stdin_used+0x2563>
and    %ah,0x6e490075
inc    %ebp
arpl   %bp,0x6f(%eax)
push   %edx
gs
jo     805c90e <_IO_stdin_used+0x25aa>
add    %cl,0x6e(%ecx)
push   %esp
imul   $0x6d617473,0x65(%ebp),%ebp
jo     805c91b <_IO_stdin_used+0x25b7>
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    805c923 <_IO_stdin_used+0x25bf>
popa
insl   (%dx),%es:(%edi)
jo     805c8d3 <_IO_stdin_used+0x256f>
jb     805c91a <_IO_stdin_used+0x25b6>
jno    805c92c <_IO_stdin_used+0x25c8>
gs
jae    805c92e <_IO_stdin_used+0x25ca>
cmp    (%eax),%ah
and    $0x6e490075,%eax
push   %esp
imul   $0x6d617473,0x65(%ebp),%ebp
jo     805c91d <_IO_stdin_used+0x25b9>
gs
jo     805c941 <_IO_stdin_used+0x25dd>
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    805c949 <_IO_stdin_used+0x25e5>
popa
insl   (%dx),%es:(%edi)
jo     805c8f9 <_IO_stdin_used+0x2595>
jb     805c940 <_IO_stdin_used+0x25dc>
jo     805c949 <_IO_stdin_used+0x25e5>
jns    805c919 <_IO_stdin_used+0x25b5>
and    %ah,0x6e490075
inc    %ecx
fs
fs
jb     805c937 <_IO_stdin_used+0x25d3>
popa
jae    805c958 <_IO_stdin_used+0x25f4>
jae    805c8ef <_IO_stdin_used+0x258b>
popa
fs
fs
jb     805c959 <_IO_stdin_used+0x25f5>
jae    805c969 <_IO_stdin_used+0x2605>
and    %ch,0x61(%ebp)
jae    805c966 <_IO_stdin_used+0x2602>
and    %dh,0x65(%edx)
jno    805c975 <_IO_stdin_used+0x2611>
gs
jae    805c977 <_IO_stdin_used+0x2613>
cmp    (%eax),%ah
and    $0x6e490075,%eax
inc    %ecx
fs
fs
jb     805c95c <_IO_stdin_used+0x25f8>
popa
jae    805c97d <_IO_stdin_used+0x2619>
push   %edx
gs
jo     805c989 <_IO_stdin_used+0x2625>
add    %ah,0x64(%ecx)
fs
jb     805c981 <_IO_stdin_used+0x261d>
jae    805c991 <_IO_stdin_used+0x262d>
and    %ch,0x61(%ebp)
jae    805c98e <_IO_stdin_used+0x262a>
and    %dh,0x65(%edx)
jo     805c994 <_IO_stdin_used+0x2630>
imul   $0x7525203a,0x73(%ebp),%esp
add    %cl,0x75(%edi)
je     805c979 <_IO_stdin_used+0x2615>
jb     805c9a8 <_IO_stdin_used+0x2644>
outsl  %ds:(%esi),(%dx)
jb     805c9ac <_IO_stdin_used+0x2648>
add    %ah,0x43492075
dec    %ebp
push   %eax
and    %ch,0x65(%ebp)
jae    805c9b9 <_IO_stdin_used+0x2655>
popa
addr16
gs
jae    805c96b <_IO_stdin_used+0x2607>
popaw
imul   $0x74754f00,0x64(%ebp,%eiz,2),%ebp
push   %eax
popa
jb     805c9c6 <_IO_stdin_used+0x2662>
push   %eax
jb     805c9cb <_IO_stdin_used+0x2667>
bound  %esi,0x0(%ebx)
dec    %edi
jne    805c9d6 <_IO_stdin_used+0x2672>
push   %ebx
jb     805c9c8 <_IO_stdin_used+0x2664>
push   %ecx
jne    805c9cd <_IO_stdin_used+0x2669>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x73(%eax)
add    %dh,0x6f(%ebx)
jne    805c9e3 <_IO_stdin_used+0x267f>
arpl   %sp,0x20(%ebp)
jno    805c9eb <_IO_stdin_used+0x2687>
outsb  %gs:(%esi),(%dx)
arpl   %bp,0x3a(%eax)
and    %ah,0x65720075
imul   $0x203a7463,%fs:0x65(%edx),%esi
and    $0x63650075,%eax
push   $0x6572206f
jno    805ca0a <_IO_stdin_used+0x26a6>
gs
jae    805ca0c <_IO_stdin_used+0x26a8>
cmp    (%eax),%ah
and    $0x754f0075,%eax
je     805c9e6 <_IO_stdin_used+0x2682>
arpl   %bp,0x6f(%eax)
push   %edx
gs
jo     805ca1b <_IO_stdin_used+0x26b7>
add    %cl,0x75(%edi)
je     805ca01 <_IO_stdin_used+0x269d>
imul   $0x6d617473,0x65(%ebp),%ebp
jo     805ca29 <_IO_stdin_used+0x26c5>
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    805ca31 <_IO_stdin_used+0x26cd>
popa
insl   (%dx),%es:(%edi)
jo     805c9e1 <_IO_stdin_used+0x267d>
jb     805ca28 <_IO_stdin_used+0x26c4>
jno    805ca3a <_IO_stdin_used+0x26d6>
gs
jae    805ca3c <_IO_stdin_used+0x26d8>
jae    805ca04 <_IO_stdin_used+0x26a0>
and    %ah,0x754f0075
je     805ca26 <_IO_stdin_used+0x26c2>
imul   $0x6d617473,0x65(%ebp),%ebp
jo     805ca2d <_IO_stdin_used+0x26c9>
gs
jo     805ca51 <_IO_stdin_used+0x26ed>
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    805ca59 <_IO_stdin_used+0x26f5>
popa
insl   (%dx),%es:(%edi)
jo     805ca09 <_IO_stdin_used+0x26a5>
jb     805ca50 <_IO_stdin_used+0x26ec>
jo     805ca59 <_IO_stdin_used+0x26f5>
imul   $0x7525203a,0x73(%ebp),%esp
add    %cl,0x75(%edi)
je     805ca3a <_IO_stdin_used+0x26d6>
fs
fs
jb     805ca4a <_IO_stdin_used+0x26e6>
popa
jae    805ca6b <_IO_stdin_used+0x2707>
jae    805ca02 <_IO_stdin_used+0x269e>
popa
fs
fs
jb     805ca6c <_IO_stdin_used+0x2708>
jae    805ca7c <_IO_stdin_used+0x2718>
and    %ch,0x61(%ebp)
jae    805ca79 <_IO_stdin_used+0x2715>
and    %dh,0x65(%edx)
jno    805ca88 <_IO_stdin_used+0x2724>
gs
jae    805ca8a <_IO_stdin_used+0x2726>
jae    805ca52 <_IO_stdin_used+0x26ee>
and    %ah,0x754f0075
je     805ca61 <_IO_stdin_used+0x26fd>
fs
fs
jb     805ca71 <_IO_stdin_used+0x270d>
popa
jae    805ca92 <_IO_stdin_used+0x272e>
push   %edx
gs
jo     805ca9e <_IO_stdin_used+0x273a>
add    %cl,0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %edx
arpl   %sp,%gs:0x69(%ebp)
jbe    805ca9d <_IO_stdin_used+0x2739>
jae    805ca3a <_IO_stdin_used+0x26d6>
and    $0x6f742075,%eax
je     805caa2 <_IO_stdin_used+0x273e>
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805cabd <_IO_stdin_used+0x2759>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805cab7 <_IO_stdin_used+0x2753>
add    %cl,%fs:0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
dec    %eax
fs
jb     805caa2 <_IO_stdin_used+0x273e>
jb     805cad1 <_IO_stdin_used+0x276d>
outsl  %ds:(%esi),(%dx)
jb     805cad5 <_IO_stdin_used+0x2771>
add    %ah,0x69772075
je     805cad2 <_IO_stdin_used+0x276e>
and    %ch,0x6e(%ecx)
jbe    805cad0 <_IO_stdin_used+0x276c>
insb   (%dx),%es:(%edi)
imul   $0x65646165,0x68(%eax,%eiz,1),%esp
jb     805caed <_IO_stdin_used+0x2789>
add    %cl,0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
inc    %edx
imul   $0x726f7272,0x45(%edi),%esp
jae    805ca8d <_IO_stdin_used+0x2729>
and    $0x69772075,%eax
je     805cafc <_IO_stdin_used+0x2798>
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805cb0f <_IO_stdin_used+0x27ab>
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x69(%edx)
add    %cl,0x70(%bx,%di)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
dec    %esi
outsl  %ds:(%esi),(%dx)
push   %edx
outsl  %ds:(%esi),(%dx)
jne    805cb24 <_IO_stdin_used+0x27c0>
gs
jae    805cab3 <_IO_stdin_used+0x274f>
dec    %ecx
jo     805caec <_IO_stdin_used+0x2788>
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %ecx
fs
fs
jb     805cb02 <_IO_stdin_used+0x279e>
jb     805cb31 <_IO_stdin_used+0x27cd>
outsl  %ds:(%esi),(%dx)
jb     805cb35 <_IO_stdin_used+0x27d1>
add    %ah,0x69772075
je     805cb32 <_IO_stdin_used+0x27ce>
and    %ch,0x6e(%ecx)
jbe    805cb30 <_IO_stdin_used+0x27cc>
insb   (%dx),%es:(%edi)
imul   $0x65726464,0x61(%eax,%eiz,1),%esp
jae    805cb4d <_IO_stdin_used+0x27e9>
gs
jae    805cadd <_IO_stdin_used+0x2779>
dec    %ecx
jo     805cb16 <_IO_stdin_used+0x27b2>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
push   %eax
jb     805cb5b <_IO_stdin_used+0x27f7>
je     805cb5d <_IO_stdin_used+0x27f9>
jae    805caf0 <_IO_stdin_used+0x278c>
and    $0x69772075,%eax
je     805cb5f <_IO_stdin_used+0x27fb>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
je     805cb74 <_IO_stdin_used+0x2810>
arpl   %bp,0x6c(%edi)
add    %cl,0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %esp
jb     805cb86 <_IO_stdin_used+0x2822>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
fs
push   %eax
imul   $0x25,0x0(%ebx,%esi,2),%esi
jne    805cb3f <_IO_stdin_used+0x27db>
ja     805cb8a <_IO_stdin_used+0x2826>
je     805cb8b <_IO_stdin_used+0x2827>
and    %dh,0x75(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %dh,%fs:%gs:0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805cba8 <_IO_stdin_used+0x2844>
add    %cl,0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %esp
imul   $0x73647261,0x63(%ebx),%esi
add    %ah,0x6e692075
arpl   %bp,0x6d(%edi)
imul   $0x63617020,0x67(%esi),%ebp
imul   $0x73,0x74(%ebp),%esp
and    %ah,0x73(%ecx,%ebp,2)
arpl   %sp,0x72(%ecx)
fs gs add %cl,%fs:%gs:0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
inc    %esp
gs
insb   (%dx),%es:(%edi)
imul   $0x25007372,0x65(%esi),%esi
jne    805cb93 <_IO_stdin_used+0x282f>
imul   $0x6e696d6f,0x63(%esi),%ebp
and    %dh,0x61(%bx,%si)
arpl   %bp,0x65(%ebx)
je     805cbf6 <_IO_stdin_used+0x2892>
and    %ah,0x6c(%ebp,%eiz,2)
imul   $0x646572,0x65(%esi),%esi
dec    %ecx
jo     805cbc7 <_IO_stdin_used+0x2863>
dec    %edi
jne    805cc08 <_IO_stdin_used+0x28a4>
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     805cc0f <_IO_stdin_used+0x28ab>
inc    %esp
popa
je     805cbfd <_IO_stdin_used+0x2899>
addr16 jb 805cc00 <_IO_stdin_used+0x289c>
insl   (%dx),%es:(%edi)
jae    805cba2 <_IO_stdin_used+0x283e>
and    $0x6f662075,%eax
jb     805cc20 <_IO_stdin_used+0x28bc>
popa
jb     805cc10 <_IO_stdin_used+0x28ac>
gs add %cl,%fs:%gs:0x70(%ecx)
ss
dec    %edi
jne    805cc29 <_IO_stdin_used+0x28c5>
push   %edx
gs
jno    805cc2e <_IO_stdin_used+0x28ca>
gs
jae    805cc30 <_IO_stdin_used+0x28cc>
jae    805cbbe <_IO_stdin_used+0x285a>
and    $0x65722075,%eax
jno    805cc3a <_IO_stdin_used+0x28d6>
gs
jae    805cc3c <_IO_stdin_used+0x28d8>
jae    805cbea <_IO_stdin_used+0x2886>
jae    805cc31 <_IO_stdin_used+0x28cd>
outsb  %ds:(%esi),(%dx)
je     805cbef <_IO_stdin_used+0x288b>
outsl  %ds:(%esi),(%dx)
jne    805cc46 <_IO_stdin_used+0x28e2>
add    %cl,0x70(%ecx)
ss
dec    %edi
jne    805cc4d <_IO_stdin_used+0x28e9>
inc    %esp
imul   $0x73647261,0x63(%ebx),%esi
add    %ah,0x756f2075
je     805cc50 <_IO_stdin_used+0x28ec>
outsl  %ds:(%esi),(%dx)
imul   $0x63617020,0x67(%esi),%ebp
imul   $0x73,0x74(%ebp),%esp
and    %ah,0x6f(%edx,%esi,2)
jo     805cc6b <_IO_stdin_used+0x2907>
gs add %cl,%fs:%gs:0x70(%ecx)
ss
dec    %edi
jne    805cc78 <_IO_stdin_used+0x2914>
dec    %esi
outsl  %ds:(%esi),(%dx)
push   %edx
outsl  %ds:(%esi),(%dx)
jne    805cc7e <_IO_stdin_used+0x291a>
gs
jae    805cc0d <_IO_stdin_used+0x28a9>
dec    %ecx
jo     805cc46 <_IO_stdin_used+0x28e2>
push   %edx
gs
popa
jae    805cc82 <_IO_stdin_used+0x291e>
push   %esp
imul   $0x74756f,0x65(%ebp),%ebp
dec    %ecx
jo     805cc56 <_IO_stdin_used+0x28f2>
push   %edx
gs
popa
jae    805cc92 <_IO_stdin_used+0x292e>
push   %edx
gs
jno    805cc8d <_IO_stdin_used+0x2929>
jae    805cc2b <_IO_stdin_used+0x28c7>
and    $0x65722075,%eax
popa
jae    805cca6 <_IO_stdin_used+0x2942>
gs
insl   (%dx),%es:(%edi)
bound  %ebp,0x65(%ecx,%ebp,2)
jae    805cc5b <_IO_stdin_used+0x28f7>
jb     805cca2 <_IO_stdin_used+0x293e>
jno    805ccb4 <_IO_stdin_used+0x2950>
imul   $0x70490064,0x65(%edx),%esi
ss
push   %edx
gs
popa
jae    805ccb9 <_IO_stdin_used+0x2955>
dec    %edi
dec    %ebx
jae    805cc50 <_IO_stdin_used+0x28ec>
and    $0x61702075,%eax
arpl   %bp,0x65(%ebx)
je     805cccd <_IO_stdin_used+0x2969>
and    %dh,0x65(%edx)
popa
jae    805ccd3 <_IO_stdin_used+0x296f>
gs
insl   (%dx),%es:(%edi)
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ch,0x6b(%edi)
add    %cl,0x70(%ecx)
ss
push   %edx
gs
popa
jae    805ccdf <_IO_stdin_used+0x297b>
inc    %esi
popa
imul   $0x70207525,0x0(%ebx,%esi,2),%ebp
popa
arpl   %bp,0x65(%ebx)
je     805cca2 <_IO_stdin_used+0x293e>
jb     805cce9 <_IO_stdin_used+0x2985>
popa
jae    805ccfa <_IO_stdin_used+0x2996>
gs
insl   (%dx),%es:(%edi)
bound  %ebp,0x73(%ebp,%eiz,2)
and    %ah,0x61(%esi)
imul   $0x36704900,0x64(%ebp,%eiz,2),%ebp
inc    %esi
jb     805ccfc <_IO_stdin_used+0x2998>
addr16 dec %edi
dec    %ebx
jae    805cca0 <_IO_stdin_used+0x293c>
and    $0x72662075,%eax
popa
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805cd1f <_IO_stdin_used+0x29bb>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805cd19 <_IO_stdin_used+0x29b5>
and    %ch,%fs:0x6b(%edi)
add    %cl,0x70(%ecx)
ss
inc    %esi
jb     805cd20 <_IO_stdin_used+0x29bc>
addr16 inc %esi
popa
imul   $0x66207525,0x0(%ebx,%esi,2),%ebp
jb     805cd2d <_IO_stdin_used+0x29c9>
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805cd45 <_IO_stdin_used+0x29e1>
and    %ah,0x61(%esi)
imul   $0x36704900,0x64(%ebp,%eiz,2),%ebp
inc    %esi
jb     805cd41 <_IO_stdin_used+0x29dd>
addr16 inc %ebx
jb     805cd49 <_IO_stdin_used+0x29e5>
popa
je     805cd4c <_IO_stdin_used+0x29e8>
jae    805cce9 <_IO_stdin_used+0x2985>
and    $0x72662075,%eax
popa
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805cd68 <_IO_stdin_used+0x2a04>
and    %ah,0x72(%ebx)
gs
popa
je     805cd61 <_IO_stdin_used+0x29fd>
add    %cl,%fs:0x70(%ecx)
ss
dec    %ecx
outsb  %ds:(%esi),(%dx)
dec    %ebp
arpl   %sp,0x73(%ecx)
je     805cd59 <_IO_stdin_used+0x29f5>
imul   $0x25,0x0(%ebx,%esi,2),%esi
jne    805cd30 <_IO_stdin_used+0x29cc>
imul   $0x6e696d6f,0x63(%esi),%ebp
and    %ch,0x75(%di)
insb   (%dx),%es:(%edi)
je     805cd87 <_IO_stdin_used+0x2a23>
arpl   %sp,0x73(%ecx)
je     805cd43 <_IO_stdin_used+0x29df>
jo     805cd86 <_IO_stdin_used+0x2a22>
arpl   %bp,0x65(%ebx)
je     805cd9d <_IO_stdin_used+0x2a39>
add    %cl,0x70(%ecx)
ss
dec    %edi
jne    805cda5 <_IO_stdin_used+0x2a41>
dec    %ebp
arpl   %sp,0x73(%ecx)
je     805cd87 <_IO_stdin_used+0x2a23>
imul   $0x25,0x0(%ebx,%esi,2),%esi
jne    805cd5e <_IO_stdin_used+0x29fa>
outsl  %ds:(%esi),(%dx)
jne    805cdb5 <_IO_stdin_used+0x2a51>
outsl  %ds:(%si),(%dx)
imul   $0x6c756d20,0x67(%esi),%ebp
je     805cdb5 <_IO_stdin_used+0x2a51>
arpl   %sp,0x73(%ecx)
je     805cd71 <_IO_stdin_used+0x2a0d>
jo     805cdb4 <_IO_stdin_used+0x2a50>
arpl   %bp,0x65(%ebx)
je     805cdcb <_IO_stdin_used+0x2a67>
add    %al,0x6f(%esi)
jb     805cdd4 <_IO_stdin_used+0x2a70>
popa
jb     805cdc4 <_IO_stdin_used+0x2a60>
imul   $0x726f4600,0x67(%esi),%ebp
ja     805cdca <_IO_stdin_used+0x2a66>
jb     805cdcf <_IO_stdin_used+0x2a6b>
imul   $0x20736920,0x67(%esi),%ebp
and    $0x65440073,%eax
popaw
jne    805cde7 <_IO_stdin_used+0x2a83>
je     805cdd1 <_IO_stdin_used+0x2a6d>
push   %esp
dec    %esp
add    %al,0x66(%ebp,%eiz,2)
popa
jne    805cdf2 <_IO_stdin_used+0x2a8e>
je     805cda8 <_IO_stdin_used+0x2a44>
push   %esp
push   %esp
dec    %esp
and    %ch,0x73(%ecx)
and    %ah,0x43490075
dec    %ebp
push   %eax
and    %ch,0x6e(%ecx)
jo     805ce10 <_IO_stdin_used+0x2aac>
je     805cdbd <_IO_stdin_used+0x2a59>
push   $0x6f747369
addr16 jb 805ce06 <_IO_stdin_used+0x2aa2>
insl   (%dx),%es:(%edi)
cmp    (%eax),%al
dec    %ecx
inc    %ebx
dec    %ebp
push   %eax
and    %ch,0x75(%edi)
je     805ce21 <_IO_stdin_used+0x2abd>
jne    805ce27 <_IO_stdin_used+0x2ac3>
and    %ch,0x69(%eax)
jae    805ce2c <_IO_stdin_used+0x2ac8>
outsl  %ds:(%esi),(%dx)
addr16 jb 805ce1d <_IO_stdin_used+0x2ab9>
insl   (%dx),%es:(%edi)
cmp    (%eax),%al
add    %ah,%bh
jmp    f2cfd5ca <optarg+0xeac98e66>
add    $0x8,%al
insl   (%dx),%es:(%edi)
ljmp   $0x804,$0xe9da0804
fucompp
add    $0x8,%al
ljmpw  $0x7250,$0x804
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %dh,0x68(%edi)
imul   $0x73726170,0x20(%ebp,%eiz,2),%ebp
imul   $0x72702f20,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ce27 <_IO_stdin_used+0x2ac3>
jae    805ce68 <_IO_stdin_used+0x2b04>
insl   (%dx),%es:(%edi)
jo     805ce07 <_IO_stdin_used+0x2aa3>
add    %al,(%eax)
add    %dl,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %dh,0x68(%edi)
imul   $0x73726170,0x20(%ebp,%eiz,2),%ebp
imul   $0x72702f20,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ce4f <_IO_stdin_used+0x2aeb>
outsb  %ds:(%esi),(%dx)
gs
je     805ce97 <_IO_stdin_used+0x2b33>
je     805ce87 <_IO_stdin_used+0x2b23>
je     805ce32 <_IO_stdin_used+0x2ace>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6e692075,%eax
jbe    805ce94 <_IO_stdin_used+0x2b30>
insb   (%dx),%es:(%edi)
imul   $0x63204e59,0x53(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x73,0x65(%ecx),%ebp
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805ceaf <_IO_stdin_used+0x2b4b>
add    %ah,%fs:0x65722075
jae    805ceb8 <_IO_stdin_used+0x2b54>
je     805cec8 <_IO_stdin_used+0x2b64>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805cec2 <_IO_stdin_used+0x2b5e>
and    %ah,%fs:0x6f(%esi)
jb     805ce83 <_IO_stdin_used+0x2b1f>
gs
insl   (%dx),%es:(%edi)
bound  %esi,0x79(%edx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x5f4e5953,0x20(%ebx),%esp
push   %edx
inc    %ebp
inc    %ebx
push   %esi
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805cef0 <_IO_stdin_used+0x2b8c>
add    %al,(%eax)
add    %ah,0x61702075
arpl   %bp,0x65(%ebx)
je     805cefd <_IO_stdin_used+0x2b99>
and    %dh,0x72(%eax)
jne    805cefd <_IO_stdin_used+0x2b99>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805cf03 <_IO_stdin_used+0x2b9f>
and    %dh,0x75(%ecx)
gs
jne    805cf09 <_IO_stdin_used+0x2ba5>
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805cf11 <_IO_stdin_used+0x2bad>
and    %ch,0x66(%edi)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805ced7 <_IO_stdin_used+0x2b73>
bound  %esi,0x66(%ebp)
data16
gs
jb     805cede <_IO_stdin_used+0x2b7a>
outsl  %ds:(%esi),(%dx)
jbe    805cf26 <_IO_stdin_used+0x2bc2>
jb     805cf35 <_IO_stdin_used+0x2bd1>
jne    805cf33 <_IO_stdin_used+0x2bcf>
add    %al,(%eax)
add    %ah,0x61702075
arpl   %bp,0x65(%ebx)
je     805cf45 <_IO_stdin_used+0x2be1>
and    %dh,0x72(%eax)
jne    805cf45 <_IO_stdin_used+0x2be1>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805cf4b <_IO_stdin_used+0x2be7>
and    %dh,0x75(%ecx)
gs
jne    805cf51 <_IO_stdin_used+0x2bed>
add    %al,(%eax)
add    %al,(%eax)
and    $0x61702075,%eax
arpl   %bp,0x65(%ebx)
je     805cf6d <_IO_stdin_used+0x2c09>
and    %ah,0x6f(%edx,%esi,2)
jo     805cf70 <_IO_stdin_used+0x2c0c>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     805cf39 <_IO_stdin_used+0x2bd5>
outsl  %ds:(%esi),(%dx)
sub    $0x726f,%ax
fs
gs
jb     805cf35 <_IO_stdin_used+0x2bd1>
jno    805cf8c <_IO_stdin_used+0x2c28>
gs
jne    805cf7f <_IO_stdin_used+0x2c1b>
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805cf87 <_IO_stdin_used+0x2c23>
and    %ch,0x66(%edi)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805cf4d <_IO_stdin_used+0x2be9>
bound  %esi,0x66(%ebp)
data16
gs
jb     805cf54 <_IO_stdin_used+0x2bf0>
outsl  %ds:(%esi),(%dx)
jbe    805cf9c <_IO_stdin_used+0x2c38>
jb     805cfab <_IO_stdin_used+0x2c47>
jne    805cfa9 <_IO_stdin_used+0x2c45>
add    %ah,0x43492075
dec    %ebp
push   %eax
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805cfbe <_IO_stdin_used+0x2c5a>
and    %ah,0x6f(%edx,%esi,2)
jo     805cfc1 <_IO_stdin_used+0x2c5d>
gs and %ah,%fs:%gs:0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805cfc0 <_IO_stdin_used+0x2c5c>
and    %dh,0x65(%eax,%ebp,2)
jns    805cf81 <_IO_stdin_used+0x2c1d>
ja     805cfc8 <_IO_stdin_used+0x2c64>
jb     805cfca <_IO_stdin_used+0x2c66>
and    %ch,0x75(%edi)
je     805cf97 <_IO_stdin_used+0x2c33>
outsl  %ds:(%esi),(%dx)
sub    $0x6977,%ax
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805cf74 <_IO_stdin_used+0x2c10>
and    $0x43492075,%eax
dec    %ebp
push   %eax
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805cff6 <_IO_stdin_used+0x2c92>
and    %ah,0x6f(%edx,%esi,2)
jo     805cff9 <_IO_stdin_used+0x2c95>
gs and %ah,%fs:%gs:0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805cff8 <_IO_stdin_used+0x2c94>
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805cfbb <_IO_stdin_used+0x2c57>
ja     805cffe <_IO_stdin_used+0x2c9a>
jae    805cfbf <_IO_stdin_used+0x2c5b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %al,%fs:(%eax)
add    %ah,0x43542075
push   %eax
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805d029 <_IO_stdin_used+0x2cc5>
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
imul   $0x74206465,0x68(%ebx),%esi
imul   $0x69617720,0x65(%ebp),%ebp
je     805cfea <_IO_stdin_used+0x2c86>
imul   $0x74736166,0x20(%esi),%ebp
and    %dh,0x6d(%ecx,%ebp,2)
gs
jb     805cfd8 <_IO_stdin_used+0x2c74>
and    $0x69742075,%eax
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
imul   $0x656b636f,0x73(%eax,%eiz,1),%esi
je     805d05f <_IO_stdin_used+0x2cfb>
and    %dh,0x65(%edx)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     805d004 <_IO_stdin_used+0x2ca0>
and    $0x43542075,%eax
push   %eax
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805d085 <_IO_stdin_used+0x2d21>
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
imul   $0x74206465,0x68(%ebx),%esi
imul   $0x69617720,0x65(%ebp),%ebp
je     805d046 <_IO_stdin_used+0x2ce2>
imul   $0x776f6c73,0x20(%esi),%ebp
and    %dh,0x6d(%ecx,%ebp,2)
gs
jb     805d034 <_IO_stdin_used+0x2cd0>
and    $0x61702075,%eax
jae    805d0ae <_IO_stdin_used+0x2d4a>
imul   $0x6e6f6320,0x65(%esi),%esi
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d06b <_IO_stdin_used+0x2d07>
jb     805d0b2 <_IO_stdin_used+0x2d4e>
push   $0x65
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805d0c0 <_IO_stdin_used+0x2d5c>
and    %ch,0x66(%edi)
and    %dh,0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     805d06a <_IO_stdin_used+0x2d06>
add    %al,(%eax)
and    $0x63612075,%eax
je     805d0dc <_IO_stdin_used+0x2d78>
jbe    805d0da <_IO_stdin_used+0x2d76>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d0a2 <_IO_stdin_used+0x2d3e>
jb     805d0e9 <_IO_stdin_used+0x2d85>
push   $0x65
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805d0f7 <_IO_stdin_used+0x2d93>
and    %ch,0x66(%edi)
and    %dh,0x6d(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     805d0a1 <_IO_stdin_used+0x2d3d>
add    %al,(%eax)
add    %ah,0x61702075
arpl   %bp,0x65(%ebx)
je     805d121 <_IO_stdin_used+0x2dbd>
and    %dh,0x65(%edx)
push   $0x65
arpl   %si,0x20(%ebx,%esi,2)
imul   $0x61747365,0x20(%esi),%ebp
bound  %ebp,0x73(%ecx,%ebp,2)
push   $0x63206465
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d0f2 <_IO_stdin_used+0x2d8e>
bound  %esp,0x63(%ebp)
popa
jne    805d14b <_IO_stdin_used+0x2de7>
and    %ch,%gs:0x66(%edi)
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    805d157 <_IO_stdin_used+0x2df3>
popa
insl   (%dx),%es:(%edi)
jo     805d0e7 <_IO_stdin_used+0x2d83>
add    %ah,0x65642075
insb   (%dx),%es:(%edi)
popa
jns    805d156 <_IO_stdin_used+0x2df2>
and    %ah,%fs:0x63(%ecx)
imul   $0x66,0x20(%ebx),%esi
jne    805d16d <_IO_stdin_used+0x2e09>
je     805d165 <_IO_stdin_used+0x2e01>
gs
jb     805d120 <_IO_stdin_used+0x2dbc>
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    805d16b <_IO_stdin_used+0x2e07>
and    %ah,%fs:0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805d174 <_IO_stdin_used+0x2e10>
and    %ch,0x66(%edi)
and    %ch,0x63(%edi,%ebp,2)
imul   $0x20,0x64(%ebp),%esp
jae    805d18b <_IO_stdin_used+0x2e27>
arpl   %bp,0x65(%ebx)
je     805d121 <_IO_stdin_used+0x2dbd>
add    %al,(%eax)
add    %dl,0x75(%ecx)
imul   $0x6b636120,0x6b(%ebx),%esp
and    %ch,0x6f(%ebp)
fs and %dh,%fs:%gs:0x61(%edi)
jae    805d157 <_IO_stdin_used+0x2df3>
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     805d1a4 <_IO_stdin_used+0x2e40>
and    %ah,%fs:0x69742075
insl   (%dx),%es:(%edi)
gs
jae    805d14a <_IO_stdin_used+0x2de6>
add    %al,(%eax)
and    $0x69742075,%eax
insl   (%dx),%es:(%edi)
gs
jae    805d175 <_IO_stdin_used+0x2e11>
je     805d1bf <_IO_stdin_used+0x2e5b>
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     805d1c3 <_IO_stdin_used+0x2e5f>
outsb  %ds:(%esi),(%dx)
and    %dh,0x75(%ecx)
gs
jne    805d1ca <_IO_stdin_used+0x2e66>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
jae    805d1dc <_IO_stdin_used+0x2e78>
arpl   %bp,0x65(%ebx)
je     805d192 <_IO_stdin_used+0x2e2e>
outsl  %ds:(%esi),(%dx)
jbe    805d1da <_IO_stdin_used+0x2e76>
jb     805d1dd <_IO_stdin_used+0x2e79>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805d1e0 <_IO_stdin_used+0x2e7c>
add    %al,%fs:(%eax)
add    %al,(%eax)
and    $0x59532075,%eax
dec    %esi
jae    805d1a8 <_IO_stdin_used+0x2e44>
je     805d1f9 <_IO_stdin_used+0x2e95>
and    %cl,0x53(%ecx,%ecx,2)
push   %esp
inc    %ebp
dec    %esi
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     805d20c <_IO_stdin_used+0x2ea8>
and    %ah,0x6f(%edx,%esi,2)
jo     805d20f <_IO_stdin_used+0x2eab>
gs add %al,%fs:%gs:(%eax)
add    %ah,0x61702075
arpl   %bp,0x65(%ebx)
je     805d221 <_IO_stdin_used+0x2ebd>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x79(%esp,%ebp,2)
and    %dh,0x75(%ecx)
gs
jne    805d222 <_IO_stdin_used+0x2ebe>
and    %dh,%fs:0x20(%edi,%ebp,2)
jb     805d229 <_IO_stdin_used+0x2ec5>
arpl   %si,0x6d(%esi)
jae    805d230 <_IO_stdin_used+0x2ecc>
and    %dh,0x72(%eax)
gs
jno    805d244 <_IO_stdin_used+0x2ee0>
gs
jne    805d237 <_IO_stdin_used+0x2ed3>
add    %ah,%cs:0x79622075
je     805d240 <_IO_stdin_used+0x2edc>
jae    805d1fd <_IO_stdin_used+0x2e99>
imul   $0x796c7463,%fs:0x65(%edx),%esi
and    %ch,0x6e(%ecx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    805d211 <_IO_stdin_used+0x2ead>
arpl   %bp,0x6e(%edi)
je     805d25b <_IO_stdin_used+0x2ef7>
js     805d26c <_IO_stdin_used+0x2f08>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
add    %ah,0x79622075
je     805d274 <_IO_stdin_used+0x2f10>
jae    805d231 <_IO_stdin_used+0x2ecd>
imul   $0x796c7463,%fs:0x65(%edx),%esi
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805d286 <_IO_stdin_used+0x2f22>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    805d24e <_IO_stdin_used+0x2eea>
arpl   %bp,0x6e(%edi)
je     805d298 <_IO_stdin_used+0x2f34>
js     805d2a9 <_IO_stdin_used+0x2f45>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
gs
jno    805d2b5 <_IO_stdin_used+0x2f51>
gs
jne    805d2a8 <_IO_stdin_used+0x2f44>
add    %ah,0x61702075
arpl   %bp,0x65(%ebx)
je     805d2c1 <_IO_stdin_used+0x2f5d>
and    %ah,0x6f(%edx,%esi,2)
jo     805d2c4 <_IO_stdin_used+0x2f60>
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
gs
jno    805d2d6 <_IO_stdin_used+0x2f72>
gs
jne    805d2c9 <_IO_stdin_used+0x2f65>
add    %al,(%eax)
add    %al,(%eax)
and    $0x61702075,%eax
arpl   %bp,0x65(%ebx)
je     805d2e5 <_IO_stdin_used+0x2f81>
and    %ch,0x65(%eax)
popa
fs
gs
jb     805d29a <_IO_stdin_used+0x2f36>
jo     805d2ee <_IO_stdin_used+0x2f8a>
gs imul $0x61206465,%fs:%gs:0x74(%ebx),%esp
61
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x79(%esp,%ebp,2)
and    %dh,0x75(%ecx)
gs
jne    805d2fb <_IO_stdin_used+0x2f97>
and    %dh,%fs:0x20(%edi,%ebp,2)
jne    805d310 <_IO_stdin_used+0x2fac>
gs
jb     805d2a0 <_IO_stdin_used+0x2f3c>
push   %edx
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x69742075
insl   (%dx),%es:(%edi)
gs
jae    805d2cd <_IO_stdin_used+0x2f69>
outsl  %ds:(%esi),(%dx)
jne    805d324 <_IO_stdin_used+0x2fc0>
and    %ch,0x66(%edi)
and    %dh,0x79(%ebx)
jae    805d32c <_IO_stdin_used+0x2fc8>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805d33a <_IO_stdin_used+0x2fd6>
and    %ah,0x72(%ebp,%esi,2)
imul   $0x63617020,0x67(%esi),%ebp
imul   $0x20,0x74(%ebp),%esp
jae    805d337 <_IO_stdin_used+0x2fd3>
outsb  %ds:(%esi),(%dx)
imul   $0x20752500,%fs:0x67(%esi),%ebp
popa
arpl   %bp,0x6e(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805d34e <_IO_stdin_used+0x2fea>
gs
fs
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805d35d <_IO_stdin_used+0x2ff9>
and    %ch,0x6f(%esi)
je     805d30f <_IO_stdin_used+0x2fab>
arpl   %bp,0x6e(%edi)
je     805d355 <_IO_stdin_used+0x2ff1>
imul   $0x6420676e,0x69(%esi),%ebp
popa
je     805d35f <_IO_stdin_used+0x2ffb>
and    %dh,0x61(%eax)
jns    805d36f <_IO_stdin_used+0x300b>
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805d373 <_IO_stdin_used+0x300f>
add    %ah,%fs:0x69742075
insl   (%dx),%es:(%edi)
gs
jae    805d339 <_IO_stdin_used+0x2fd5>
jb     805d380 <_IO_stdin_used+0x301c>
arpl   %bp,0x76(%edi)
gs
jb     805d386 <_IO_stdin_used+0x3022>
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805d34f <_IO_stdin_used+0x2feb>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    805d3a6 <_IO_stdin_used+0x3042>
and    %ah,0x65(%ebp,%esi,2)
and    %dh,0x20(%edi,%ebp,2)
popaw
jae    805d3b3 <_IO_stdin_used+0x304f>
and    %dh,0x65(%edx)
je     805d3b6 <_IO_stdin_used+0x3052>
popa
outsb  %ds:(%esi),(%dx)
jae    805d3b5 <_IO_stdin_used+0x3051>
imul   $0x74207525,0x0(%eax,%eax,1),%esi
imul   $0x65722073,0x65(%ebp),%ebp
arpl   %bp,0x76(%edi)
gs
jb     805d3c2 <_IO_stdin_used+0x305e>
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805d38b <_IO_stdin_used+0x3027>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    805d3e2 <_IO_stdin_used+0x307e>
and    %ah,0x79(%edx)
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %ah,%gs:0x63(%ecx)
imul   $0x77,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
gs
fs
addr16
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805d400 <_IO_stdin_used+0x309c>
add    %al,(%eax)
add    %al,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%edx)
outsl  %ds:(%esi),(%dx)
jb     805d402 <_IO_stdin_used+0x309e>
gs
jb     805d40a <_IO_stdin_used+0x30a6>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jne    805d3c7 <_IO_stdin_used+0x3063>
je     805d412 <_IO_stdin_used+0x30ae>
insl   (%dx),%es:(%edi)
gs
jae    805d3cd <_IO_stdin_used+0x3069>
jne    805d422 <_IO_stdin_used+0x30be>
imul   $0x43414620,0x67(%esi),%ebp
dec    %ebx
add    %al,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%edx)
outsl  %ds:(%esi),(%dx)
jb     805d42a <_IO_stdin_used+0x30c6>
gs
jb     805d432 <_IO_stdin_used+0x30ce>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jne    805d3ef <_IO_stdin_used+0x308b>
je     805d43a <_IO_stdin_used+0x30d6>
insl   (%dx),%es:(%edi)
gs
jae    805d3f5 <_IO_stdin_used+0x3091>
jne    805d44a <_IO_stdin_used+0x30e6>
imul   $0x43415320,0x67(%esi),%ebp
dec    %ebx
add    %al,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%edx)
outsl  %ds:(%esi),(%dx)
jb     805d452 <_IO_stdin_used+0x30ee>
gs
jb     805d45a <_IO_stdin_used+0x30f6>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jne    805d417 <_IO_stdin_used+0x30b3>
je     805d462 <_IO_stdin_used+0x30fe>
insl   (%dx),%es:(%edi)
gs
jae    805d41d <_IO_stdin_used+0x30b9>
jne    805d472 <_IO_stdin_used+0x310e>
imul   $0x6d697420,0x67(%esi),%ebp
and    %dh,%gs:0x74(%ebx)
popa
insl   (%dx),%es:(%edi)
jo     805d40e <_IO_stdin_used+0x30aa>
add    %al,(%eax)
inc    %esp
gs
je     805d479 <_IO_stdin_used+0x3115>
arpl   %si,0x64(%ebp,%eiz,2)
and    %dh,0x65(%edx)
outsl  %ds:(%esi),(%dx)
jb     805d482 <_IO_stdin_used+0x311e>
gs
jb     805d48a <_IO_stdin_used+0x3126>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jne    805d447 <_IO_stdin_used+0x30e3>
je     805d492 <_IO_stdin_used+0x312e>
insl   (%dx),%es:(%edi)
gs
jae    805d44d <_IO_stdin_used+0x30e9>
jne    805d4a2 <_IO_stdin_used+0x313e>
imul   $0x6e657220,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
jae    805d4b0 <_IO_stdin_used+0x314c>
and    %dh,0x65(%edx)
je     805d4b3 <_IO_stdin_used+0x314f>
popa
outsb  %ds:(%esi),(%dx)
jae    805d4b2 <_IO_stdin_used+0x314e>
imul   $0x6f632075,0x25(%eax,%eax,1),%esi
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    805d4c6 <_IO_stdin_used+0x3162>
imul   $0x6e697720,0x6e(%edi),%ebp
outsl  %fs:(%esi),(%dx)
ja     805d4d0 <_IO_stdin_used+0x316c>
and    %ah,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    805d484 <_IO_stdin_used+0x3120>
jb     805d4cb <_IO_stdin_used+0x3167>
arpl   %bp,0x76(%edi)
gs
jb     805d4d1 <_IO_stdin_used+0x316d>
and    %dh,%fs:0x69(%edi)
je     805d4da <_IO_stdin_used+0x3176>
outsl  %ds:(%esi),(%dx)
jne    805d4e9 <_IO_stdin_used+0x3185>
and    %dh,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805d49b <_IO_stdin_used+0x3137>
jae    805d4f1 <_IO_stdin_used+0x318d>
popa
jb     805d4f4 <_IO_stdin_used+0x3190>
add    %al,(%eax)
add    %al,(%eax)
and    $0x6f632075,%eax
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    805d502 <_IO_stdin_used+0x319e>
imul   $0x6e697720,0x6e(%edi),%ebp
outsl  %fs:(%esi),(%dx)
ja     805d50c <_IO_stdin_used+0x31a8>
and    %dh,0x61(%eax)
jb     805d512 <_IO_stdin_used+0x31ae>
imul   $0x7220796c,0x6c(%ecx),%esp
arpl   %bp,%gs:0x76(%edi)
gs
jb     805d511 <_IO_stdin_used+0x31ad>
and    %dh,%fs:0x73(%ebp)
imul   $0x656f4820,0x67(%esi),%ebp
and    %ch,0x65(%eax)
jne    805d52e <_IO_stdin_used+0x31ca>
imul   $0x6369,0x74(%ebx),%esi
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    805d542 <_IO_stdin_used+0x31de>
imul   $0x6e697720,0x6e(%edi),%ebp
outsl  %fs:(%esi),(%dx)
ja     805d4f9 <_IO_stdin_used+0x3195>
jb     805d540 <_IO_stdin_used+0x31dc>
arpl   %bp,0x76(%edi)
gs
jb     805d546 <_IO_stdin_used+0x31e2>
and    %dh,%fs:0x69(%edi)
je     805d54f <_IO_stdin_used+0x31eb>
outsl  %ds:(%esi),(%dx)
jne    805d55e <_IO_stdin_used+0x31fa>
and    %dh,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805d510 <_IO_stdin_used+0x31ac>
jae    805d566 <_IO_stdin_used+0x3202>
popa
jb     805d569 <_IO_stdin_used+0x3205>
and    %dh,0x73(%ebp)
imul   $0x41534420,0x67(%esi),%ebp
inc    %ebx
dec    %ebx
add    %al,(%eax)
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    805d582 <_IO_stdin_used+0x321e>
imul   $0x6e697720,0x6e(%edi),%ebp
outsl  %fs:(%esi),(%dx)
ja     805d58c <_IO_stdin_used+0x3228>
and    %dh,0x65(%edx)
arpl   %bp,0x76(%edi)
gs
jb     805d587 <_IO_stdin_used+0x3223>
and    %dh,%fs:0x69(%edi)
je     805d590 <_IO_stdin_used+0x322c>
outsl  %ds:(%esi),(%dx)
jne    805d59f <_IO_stdin_used+0x323b>
and    %dh,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805d551 <_IO_stdin_used+0x31ed>
jae    805d5a7 <_IO_stdin_used+0x3243>
popa
jb     805d5aa <_IO_stdin_used+0x3246>
and    %ah,0x66(%ecx)
je     805d5a0 <_IO_stdin_used+0x323c>
jb     805d55d <_IO_stdin_used+0x31f9>
jo     805d5a0 <_IO_stdin_used+0x323c>
jb     805d5b5 <_IO_stdin_used+0x3251>
imul   $0x6b636120,0x6c(%ecx),%esp
add    %al,(%eax)
add    %al,(%eax)
and    $0x69742075,%eax
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    805d5ca <_IO_stdin_used+0x3266>
jae    805d578 <_IO_stdin_used+0x3214>
popa
data16
je     805d5c1 <_IO_stdin_used+0x325d>
jb     805d57e <_IO_stdin_used+0x321a>
jb     805d5c5 <_IO_stdin_used+0x3261>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
jae    805d5db <_IO_stdin_used+0x3277>
and    %dh,0x65(%edx)
je     805d5de <_IO_stdin_used+0x327a>
popa
outsb  %ds:(%esi),(%dx)
jae    805d5dd <_IO_stdin_used+0x3279>
imul   $0x74207525,0x0(%eax,%eax,1),%esi
imul   $0x7374756f,0x65(%ebp),%ebp
and    %ah,0x66(%ecx)
je     805d5e9 <_IO_stdin_used+0x3285>
jb     805d5a6 <_IO_stdin_used+0x3242>
push   %ebx
inc    %ecx
inc    %ebx
dec    %ebx
and    %dh,0x65(%edx)
arpl   %bp,0x76(%edi)
gs
jb     805d60c <_IO_stdin_used+0x32a8>
add    %ah,0x65722075
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
jae    805d614 <_IO_stdin_used+0x32b0>
and    %dh,0x65(%edx)
je     805d617 <_IO_stdin_used+0x32b3>
popa
outsb  %ds:(%esi),(%dx)
jae    805d616 <_IO_stdin_used+0x32b2>
imul   $0x6c696166,0x20(%ebx,%esi,2),%esi
gs add %ah,%fs:%gs:0x69742075
insl   (%dx),%es:(%edi)
gs
jae    805d5dd <_IO_stdin_used+0x3279>
jb     805d624 <_IO_stdin_used+0x32c0>
arpl   %sp,0x69(%ebp)
jbe    805d629 <_IO_stdin_used+0x32c5>
jb     805d5e6 <_IO_stdin_used+0x3282>
jae    805d62b <_IO_stdin_used+0x32c7>
push   $0x6c756465
gs and %dh,%fs:%gs:0x6f(%edi,%ebp,2)
and    %ch,0x74(%ecx,%eiz,2)
and    %ah,%gs:0x6f(%esi)
jb     805d5fd <_IO_stdin_used+0x3299>
imul   $0x70207463,%fs:0x65(%edx),%esi
jb     805d656 <_IO_stdin_used+0x32f2>
arpl   %sp,0x73(%ebp)
jae    805d655 <_IO_stdin_used+0x32f1>
outsb  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
and    $0x61702075,%eax
arpl   %bp,0x65(%ebx)
je     805d66d <_IO_stdin_used+0x3309>
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
popa
jo     805d675 <_IO_stdin_used+0x3311>
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805d674 <_IO_stdin_used+0x3310>
and    %dh,0x75(%ecx)
gs
jne    805d67a <_IO_stdin_used+0x3316>
and    %ah,0x65(%ebp,%esi,2)
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805d641 <_IO_stdin_used+0x32dd>
jae    805d692 <_IO_stdin_used+0x332e>
arpl   %bp,0x65(%ebx)
je     805d648 <_IO_stdin_used+0x32e4>
bound  %esi,0x66(%ebp)
data16
gs
jb     805d62f <_IO_stdin_used+0x32cb>
add    %ah,0x53442075
inc    %ecx
inc    %ebx
dec    %ebx
jae    805d65a <_IO_stdin_used+0x32f6>
jae    805d6a1 <_IO_stdin_used+0x333d>
outsb  %ds:(%esi),(%dx)
je     805d65f <_IO_stdin_used+0x32fb>
outsw  %ds:(%esi),(%dx)
jb     805d663 <_IO_stdin_used+0x32ff>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,%fs:0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805d6c1 <_IO_stdin_used+0x335d>
add    %al,(%eax)
and    $0x53442075,%eax
inc    %ecx
inc    %ebx
dec    %ebx
jae    805d67a <_IO_stdin_used+0x3316>
jae    805d6c1 <_IO_stdin_used+0x335d>
outsb  %ds:(%esi),(%dx)
je     805d67f <_IO_stdin_used+0x331b>
outsw  %ds:(%esi),(%dx)
jb     805d683 <_IO_stdin_used+0x331f>
outsl  %ds:(%esi),(%dx)
jne    805d6da <_IO_stdin_used+0x3376>
and    %ch,0x66(%edi)
and    %ch,0x72(%edi)
fs
gs
jb     805d690 <_IO_stdin_used+0x332c>
jo     805d6d3 <_IO_stdin_used+0x336f>
arpl   %bp,0x65(%ebx)
je     805d6ea <_IO_stdin_used+0x3386>
add    %ah,0x53442075
inc    %ecx
inc    %ebx
dec    %ebx
jae    805d6a2 <_IO_stdin_used+0x333e>
outsw  %ds:(%esi),(%dx)
jb     805d6a6 <_IO_stdin_used+0x3342>
outsl  %ds:(%esi),(%dx)
jne    805d6fd <_IO_stdin_used+0x3399>
and    %ch,0x66(%edi)
and    %ch,0x72(%edi)
fs
gs
jb     805d6b3 <_IO_stdin_used+0x334f>
jo     805d6f6 <_IO_stdin_used+0x3392>
arpl   %bp,0x65(%ebx)
je     805d70d <_IO_stdin_used+0x33a9>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805d707 <_IO_stdin_used+0x33a3>
add    %ah,%fs:0x6f632075
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d6d3 <_IO_stdin_used+0x336f>
jb     805d71a <_IO_stdin_used+0x33b6>
jae    805d71c <_IO_stdin_used+0x33b8>
je     805d6d9 <_IO_stdin_used+0x3375>
fs
jne    805d721 <_IO_stdin_used+0x33bd>
and    %dh,0x20(%edi,%ebp,2)
jne    805d730 <_IO_stdin_used+0x33cc>
gs
js     805d735 <_IO_stdin_used+0x33d1>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dl,0x59(%ebx)
dec    %esi
add    %al,(%eax)
and    $0x6f632075,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d6ff <_IO_stdin_used+0x339b>
jb     805d746 <_IO_stdin_used+0x33e2>
jae    805d748 <_IO_stdin_used+0x33e4>
je     805d705 <_IO_stdin_used+0x33a1>
fs
jne    805d74d <_IO_stdin_used+0x33e9>
and    %dh,0x20(%edi,%ebp,2)
jne    805d75c <_IO_stdin_used+0x33f8>
gs
js     805d761 <_IO_stdin_used+0x33fd>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x74(%ecx,%eiz,2)
popa
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d72b <_IO_stdin_used+0x33c7>
jb     805d772 <_IO_stdin_used+0x340e>
jae    805d774 <_IO_stdin_used+0x3410>
je     805d731 <_IO_stdin_used+0x33cd>
fs
jne    805d779 <_IO_stdin_used+0x3415>
and    %dh,0x20(%edi,%ebp,2)
gs
popa
jb     805d788 <_IO_stdin_used+0x3424>
jns    805d73e <_IO_stdin_used+0x33da>
jne    805d793 <_IO_stdin_used+0x342f>
gs
jb     805d743 <_IO_stdin_used+0x33df>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:(%eax)
add    %al,(%eax)
and    $0x6f632075,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d75b <_IO_stdin_used+0x33f7>
popa
bound  %ebp,0x72(%edi)
je     805d7a6 <_IO_stdin_used+0x3442>
and    %ah,%fs:0x65(%ebp,%esi,2)
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805d7c9 <_IO_stdin_used+0x3465>
and    %dh,0x72(%eax)
gs
jae    805d7c9 <_IO_stdin_used+0x3465>
jne    805d7ca <_IO_stdin_used+0x3466>
add    %al,%gs:(%eax)
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d78b <_IO_stdin_used+0x3427>
popa
bound  %ebp,0x72(%edi)
je     805d7d6 <_IO_stdin_used+0x3472>
and    %ah,%fs:0x65(%ebp,%esi,2)
and    %dh,0x20(%edi,%ebp,2)
je     805d7e5 <_IO_stdin_used+0x3481>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    805d7f5 <_IO_stdin_used+0x3491>
add    %al,(%eax)
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d7b3 <_IO_stdin_used+0x344f>
popa
bound  %ebp,0x72(%edi)
je     805d7fe <_IO_stdin_used+0x349a>
and    %ah,%fs:0x66(%ecx)
je     805d804 <_IO_stdin_used+0x34a0>
jb     805d7c1 <_IO_stdin_used+0x345d>
jne    805d816 <_IO_stdin_used+0x34b2>
gs
jb     805d7c6 <_IO_stdin_used+0x3462>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ch,%gs:0x6e(%ecx)
and    %ch,0x6e(%ecx,%ebp,2)
addr16
gs
jb     805d7d6 <_IO_stdin_used+0x3472>
je     805d821 <_IO_stdin_used+0x34bd>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    805d831 <_IO_stdin_used+0x34cd>
add    %al,(%eax)
add    %ah,0x69742075
insl   (%dx),%es:(%edi)
gs
jae    805d7e9 <_IO_stdin_used+0x3485>
jne    805d839 <_IO_stdin_used+0x34d5>
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %dh,0x20(%edi,%ebp,2)
jae    805d83b <_IO_stdin_used+0x34d7>
outsb  %ds:(%esi),(%dx)
and    %dl,%fs:0x53(%edx)
push   %esp
and    %ah,0x65(%ebp,%esi,2)
and    %dh,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805d866 <_IO_stdin_used+0x3502>
add    %al,(%eax)
add    %dl,0x50(%ebx,%eax,2)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x77(%edi,%ebp,2)
and    %ch,0x6e(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805d87e <_IO_stdin_used+0x351a>
and    %ah,0x69742075
insl   (%dx),%es:(%edi)
gs
jae    805d80f <_IO_stdin_used+0x34ab>
add    %ah,0x6f632075
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    805d88e <_IO_stdin_used+0x352a>
imul   $0x6e697720,0x6e(%edi),%ebp
outsl  %fs:(%esi),(%dx)
ja     805d898 <_IO_stdin_used+0x3534>
and    %dh,0x65(%edx)
arpl   %bp,0x76(%edi)
gs
jb     805d893 <_IO_stdin_used+0x352f>
and    %dh,%fs:0x69(%edi)
je     805d89c <_IO_stdin_used+0x3538>
outsl  %ds:(%esi),(%dx)
jne    805d8ab <_IO_stdin_used+0x3547>
and    %dh,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805d85d <_IO_stdin_used+0x34f9>
jae    805d8b3 <_IO_stdin_used+0x354f>
popa
jb     805d8b6 <_IO_stdin_used+0x3552>
and    %ah,0x79(%edx)
and    %al,0x41(%ebx,%edx,2)
inc    %ebx
dec    %ebx
add    %ah,0x6c632075
popa
jae    805d8c7 <_IO_stdin_used+0x3563>
imul   $0x6f6e6552,0x20(%ebx),%esp
and    %ah,0x61(%esi)
jae    805d8d4 <_IO_stdin_used+0x3570>
and    %dh,0x65(%edx)
je     805d8d7 <_IO_stdin_used+0x3573>
popa
outsb  %ds:(%esi),(%dx)
jae    805d8d6 <_IO_stdin_used+0x3572>
imul   $0x6c696166,0x20(%ebx,%esi,2),%esi
gs add %ah,%fs:%gs:0x61702075
arpl   %bp,0x65(%ebx)
je     805d8f1 <_IO_stdin_used+0x358d>
and    %dh,0x20(%edi,%ebp,2)
jne    805d8f2 <_IO_stdin_used+0x358e>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%eax)
jb     805d902 <_IO_stdin_used+0x359e>
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    805d8fb <_IO_stdin_used+0x3597>
fs add %al,%cs:%fs:(%eax)
add    %al,(%eax)
and    $0x63612075,%eax
je     805d90c <_IO_stdin_used+0x35a8>
jbe    805d90a <_IO_stdin_used+0x35a6>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    805d8d2 <_IO_stdin_used+0x356e>
outsl  %ds:(%esi),(%dx)
jo     805d91a <_IO_stdin_used+0x35b6>
outsb  %ds:(%esi),(%dx)
imul   $0x25000073,0x67(%esi),%ebp
jne    805d8df <_IO_stdin_used+0x357b>
jo     805d922 <_IO_stdin_used+0x35be>
jae    805d936 <_IO_stdin_used+0x35d2>
imul   $0x6e6f6320,0x65(%esi),%esi
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
imul   $0x72000073,0x67(%esi),%ebp
arpl   %sp,%gs:0x69(%ebp)
jbe    805d948 <_IO_stdin_used+0x35e4>
and    %cl,%fs:0x43(%ecx)
dec    %ebp
push   %eax
jbe    805d921 <_IO_stdin_used+0x35bd>
and    %dh,0x6d(%ecx,%ebp,2)
and    %ah,%gs:0x78(%ebp)
arpl   %sp,0x65(%ebp)
fs gs cmp %fs:%gs:(%eax),%ah
and    $0x75,%eax
dec    %ecx
arpl   %bp,0x70(%ebp)
ss
dec    %edi
jne    805d97c <_IO_stdin_used+0x3618>
dec    %esi
imul   $0x41726f62,%gs:0x68(%edi),%esp
fs
jbe    805d979 <_IO_stdin_used+0x3615>
jb     805d98a <_IO_stdin_used+0x3626>
imul   $0x746e656d,0x65(%ebx),%esi
jae    805d91f <_IO_stdin_used+0x35bb>
add    %ah,0x6e692075
arpl   %bp,0x6d(%edi)
imul   $0x63617020,0x67(%esi),%ebp
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x69(%edi)
je     805d9a0 <_IO_stdin_used+0x363c>
and    %ch,0x6f(%esi)
and    %dh,0x6f(%edx)
jne    805d9b4 <_IO_stdin_used+0x3650>
add    %al,%gs:(%eax)
add    %ah,0x72642075
outsl  %ds:(%esi),(%dx)
jo     805d9bc <_IO_stdin_used+0x3658>
gs and %ah,%fs:%gs:0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    805d9bb <_IO_stdin_used+0x3657>
and    %ch,0x66(%edi)
and    %ch,0x69(%ebp)
jae    805d9d1 <_IO_stdin_used+0x366d>
imul   $0x756f7220,0x67(%esi),%ebp
je     805d9cc <_IO_stdin_used+0x3668>
add    %ah,0x72662075
popa
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     805d9e7 <_IO_stdin_used+0x3683>
and    %ah,0x6f(%edx,%esi,2)
jo     805d9ea <_IO_stdin_used+0x3686>
gs and %ah,%fs:%gs:0x66(%ecx)
je     805d9e6 <_IO_stdin_used+0x3682>
jb     805d9a3 <_IO_stdin_used+0x363f>
je     805d9ee <_IO_stdin_used+0x368a>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    805d9fe <_IO_stdin_used+0x369a>
add    %dl,0x4e(%ebp)
push   %ebx
push   %eax
inc    %ebp
inc    %ebx
add    %dl,0x4e(%ebp)
dec    %ecx
pop    %eax
and    %al,0x6d(%edi,%ebp,2)
popa
imul   $0x50524144,0x0(%esi),%ebp
inc    %ecx
and    %cl,0x6e(%ecx)
je     805da0d <_IO_stdin_used+0x36a9>
jb     805da18 <_IO_stdin_used+0x36b4>
gs
je     805d9ad <_IO_stdin_used+0x3649>
dec    %ecx
push   %eax
jbe    805d9e7 <_IO_stdin_used+0x3683>
add    %al,0x4d(%ecx)
push   %eax
push   %edx
and    %al,0x58(%ecx)
xor    %cs:0x504d4100,%dh
push   %edx
and    %cl,0x45(%esi)
push   %esp
das
push   %edx
dec    %edi
dec    %ebp
add    %cl,0x6f(%esi)
jbe    805da33 <_IO_stdin_used+0x36cf>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
pop    %eax
add    %al,0x70(%ecx)
jo     805da45 <_IO_stdin_used+0x36e1>
gs
je     805da3d <_IO_stdin_used+0x36d9>
insb   (%dx),%es:(%edi)
imul   $0x44,(%eax),%esp
inc    %esp
push   %eax
add    %al,0x63(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
je     805d9ea <_IO_stdin_used+0x3686>
inc    %ebx
inc    %ebx
dec    %ecx
push   %esp
push   %esp
and    %bl,0x2e(%eax)
xor    0x504d4100,%dh
push   %edx
and    %dl,0x4f(%edx)
push   %ebx
inc    %ebp
add    %al,0x73(%ecx)
push   $0x55002c00
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%ecx)
fs
jb     805da77 <_IO_stdin_used+0x3713>
jae    805da87 <_IO_stdin_used+0x3723>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x27732560,0x20(%ecx,%edi,2),%ebp
or     %cs:(%eax),%al
or     (%eax),%ah
and    %ah,(%eax)
and    %al,(%eax)
cs add %ah,%cs:0x25282073
jae    805da5c <_IO_stdin_used+0x36f8>
and    %al,(%eax)
add    %al,(%eax)
add    %dl,0x6c(%eax)
gs
popa
jae    805daa3 <_IO_stdin_used+0x373f>
and    %ah,0x6e(%edi,%ebp,2)
daa
je     805da65 <_IO_stdin_used+0x3701>
jae    805dabc <_IO_stdin_used+0x3758>
jo     805dab9 <_IO_stdin_used+0x3755>
insb   (%dx),%es:(%edi)
jns    805da6c <_IO_stdin_used+0x3708>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805dab5 <_IO_stdin_used+0x3751>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x64(%ecx)
fs
jb     805dac4 <_IO_stdin_used+0x3760>
jae    805dad4 <_IO_stdin_used+0x3770>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x5400000a,0x2e(%ecx,%edi,2),%ebp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x75(%ebp)
arpl   %bp,0x20(%eax)
popa
fs
fs
jb     805dadf <_IO_stdin_used+0x377b>
jae    805daef <_IO_stdin_used+0x378b>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x75677261,0x20(%ecx,%edi,2),%ebp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805db00 <_IO_stdin_used+0x379c>
or     %cs:(%eax),%al
dec    %ebp
popa
insb   (%dx),%es:(%edi)
outsw  %ds:(%esi),(%dx)
jb     805db04 <_IO_stdin_used+0x37a0>
gs and %al,%fs:%gs:0x73(%ecx)
push   $0x64646120
jb     805db08 <_IO_stdin_used+0x37a4>
jae    805db18 <_IO_stdin_used+0x37b4>
add    %ah,0x5b007831
dec    %esi
dec    %edi
dec    %esi
inc    %ebp
and    %dl,0x45(%ebx)
push   %esp
pop    %ebp
add    %ch,(%edi)
jo     805db2a <_IO_stdin_used+0x37c6>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    805db36 <_IO_stdin_used+0x37d2>
jae    805daee <_IO_stdin_used+0x378a>
outsb  %ds:(%esi),(%dx)
gs
je     805daf2 <_IO_stdin_used+0x378e>
popa
jae    805db2e <_IO_stdin_used+0x37ca>
add    %dl,0x645e4902
jae    805db06 <_IO_stdin_used+0x37a2>
das
rol    %bh
mov    %ds,-0x1502495f(%ebx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    805db3c <_IO_stdin_used+0x37d8>
insb   (%dx),%es:(%edi)
imul   $0x736c6c61,0x63(%eax,%eiz,1),%esp
imul   $0x6c614300,0x6e(%edi),%esp
insb   (%dx),%es:(%edi)
jae    805db57 <_IO_stdin_used+0x37f3>
outsb  %ds:(%si),(%dx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
add    %ch,(%di)
and    $0x73250064,%eax
cmp    (%eax),%ah
and    $0x25000a73,%eax
fs
das
and    $0x702f0064,%eax
jb     805db7f <_IO_stdin_used+0x381b>
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805db45 <_IO_stdin_used+0x37e1>
popa
jo     805db89 <_IO_stdin_used+0x3825>
insb   (%dx),%es:(%edi)
gs
je     805db7e <_IO_stdin_used+0x381a>
insb   (%dx),%es:(%edi)
imul   $0x2f,(%eax),%eax
jo     805db95 <_IO_stdin_used+0x3831>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    805dba1 <_IO_stdin_used+0x383d>
jae    805db59 <_IO_stdin_used+0x37f5>
outsb  %ds:(%esi),(%dx)
gs
je     805db5d <_IO_stdin_used+0x37f9>
arpl   %bp,%gs:0x6e(%edi)
gs
je     805db35 <_IO_stdin_used+0x37d1>
add    %al,(%eax)
add    %al,0x64(%ecx)
fs
jb     805dba2 <_IO_stdin_used+0x383e>
jae    805dbb2 <_IO_stdin_used+0x384e>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x27732560,0x20(%ecx,%edi,2),%ebp
and    %ch,0x6f(%esi)
je     805db70 <_IO_stdin_used+0x380c>
jae    805dbc7 <_IO_stdin_used+0x3863>
jo     805dbc4 <_IO_stdin_used+0x3860>
outsl  %ds:(%esi),(%dx)
jb     805dbcb <_IO_stdin_used+0x3867>
gs fs or %cs:%fs:%gs:(%eax),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x6f(%edx)
jne    805dbd7 <_IO_stdin_used+0x3873>
imul   $0x726f6620,0x67(%esi),%ebp
and    %ah,0x64(%ecx)
fs
jb     805dbd5 <_IO_stdin_used+0x3871>
jae    805dbe5 <_IO_stdin_used+0x3881>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x27732560,0x20(%ecx,%edi,2),%ebp
or     %cs:(%eax),%al
fs
gs
popaw
jne    805dbf3 <_IO_stdin_used+0x388f>
je     805db89 <_IO_stdin_used+0x3825>
sub    (%eax),%al
addr16
gs
je     805dbf0 <_IO_stdin_used+0x388c>
fs
fs
jb     805dbfc <_IO_stdin_used+0x3898>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0x25203a73,%eax
or     %fs:(%eax),%al
addr16
gs
je     805dc12 <_IO_stdin_used+0x38ae>
popa
insl   (%dx),%es:(%edi)
imul   $0x6166206f,%gs:0x66(%esi),%ebp
imul   $0x555b000a,0x64(%ebp,%eiz,2),%ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
pop    %ebp
add    %ch,(%edi)
jo     805dc33 <_IO_stdin_used+0x38cf>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805dbf7 <_IO_stdin_used+0x3893>
imul   $0x74656e69,0x5f(%esi),%esp
add    %ch,%ss:(%edi)
jo     805dc46 <_IO_stdin_used+0x38e2>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805dc0a <_IO_stdin_used+0x38a6>
imul   $0x6f725f36,0x76(%eax),%esi
jne    805dc58 <_IO_stdin_used+0x38f4>
add    %cl,%gs:0x65(%ebx)
jb     805dc58 <_IO_stdin_used+0x38f4>
gs
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
jbe    805dc27 <_IO_stdin_used+0x38c3>
and    %dh,0x6f(%edx)
jne    805dc6a <_IO_stdin_used+0x3906>
imul   $0x63616320,0x67(%esi),%ebp
push   $0x4b000a65
gs
jb     805dc73 <_IO_stdin_used+0x390f>
gs
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
jbe    805dc42 <_IO_stdin_used+0x38de>
and    %dh,0x6f(%edx)
jne    805dc85 <_IO_stdin_used+0x3921>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    $0x73253a73,%eax
cmp    0x73253a73,%ah
cmp    0x73253a73,%ah
cmp    0x73253a73,%ah
add    %ah,(%ecx)
add    %al,0x0(%ecx)
das
jo     805dcad <_IO_stdin_used+0x3949>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805dc71 <_IO_stdin_used+0x390d>
outsb  %ds:(%esi),(%dx)
imul   $0x72654b00,%fs:0x63(%ebx),%esi
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
jbe    805dc89 <_IO_stdin_used+0x3925>
and    %cl,0x65(%esi)
imul   $0x72756f62,0x68(%edi),%esp
and    %al,0x61(%ebx)
arpl   %bp,0x65(%eax)
or     (%eax),%al
push   %ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
sub    %ah,0x29783230
add    %ah,(%eax)
and    $0x646c392d,%eax
and    %al,(%eax)
and    %ch,(%edx)
and    %al,(%eax)
and    %ah,0x646c372d
and    %al,(%eax)
add    %cl,0x4e(%ecx)
inc    %ebp
push   %esp
and    %ch,%ss:(%eax)
dec    %ecx
push   %eax
jbe    805dcc9 <_IO_stdin_used+0x3965>
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805dcb9 <_IO_stdin_used+0x3955>
arpl   %bp,0x6e(%edi)
imul   $0x6572,0x75(%edi),%sp
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    805dccc <_IO_stdin_used+0x3968>
jae    805dd27 <_IO_stdin_used+0x39c3>
jae    805dd24 <_IO_stdin_used+0x39c0>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
add    %al,(%eax)
add    %al,0x73(%ebp,%eiz,2)
je     805dd26 <_IO_stdin_used+0x39c2>
outsb  %ds:(%esi),(%dx)
popa
je     805dd2a <_IO_stdin_used+0x39c6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %esi
gs
js     805dd4f <_IO_stdin_used+0x39eb>
and    %cl,0x6f(%eax)
jo     805dd00 <_IO_stdin_used+0x399c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
insb   (%dx),%es:(%edi)
popa
and    %cl,0x65(%di)
je     805dd1b <_IO_stdin_used+0x39b7>
push   %edx
gs
data16
and    %dl,0x73(%ebp)
and    %cl,%gs:0x66(%ecx)
or     (%eax),%al
add    %ah,0x34257334
jae    805dd34 <_IO_stdin_used+0x39d0>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dd3d <_IO_stdin_used+0x39d9>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dd41 <_IO_stdin_used+0x39dd>
and    $0x20783230,%eax
and    $0x34257334,%eax
jae    805dd52 <_IO_stdin_used+0x39ee>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dd5b <_IO_stdin_used+0x39f7>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dd5f <_IO_stdin_used+0x39fb>
and    $0x20783230,%eax
and    $0x34257334,%eax
jae    805dd70 <_IO_stdin_used+0x3a0c>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dd79 <_IO_stdin_used+0x3a15>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dd7d <_IO_stdin_used+0x3a19>
and    $0x20783830,%eax
and    $0x20783830,%eax
and    $0x20783830,%eax
and    $0x20783830,%eax
and    $0xa73,%eax
add    %al,(%eax)
and    $0x7330332d,%eax
and    %ah,0x7336322d
and    %ah,0x2073342d
and    $0x2064332d,%eax
and    $0x2564312d,%eax
ss and %ah,%ss:%fs:0xa73
add    %cl,0x65(%esi)
imul   $0x72756f62,0x68(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x57(%eax)
and    %al,0x64(%ecx)
fs
jb     805de35 <_IO_stdin_used+0x3ad1>
jae    805de45 <_IO_stdin_used+0x3ae1>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
popaw
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %al,0x6c(%esi)
popa
addr16 jae 805de09 <_IO_stdin_used+0x3aa5>
push   %edx
gs
data16
and    %dl,0x74(%ebx)
popa
je     805de57 <_IO_stdin_used+0x3af3>
or     (%eax),%al
dec    %esi
imul   $0x72756f62,%gs:0x68(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x57(%eax)
and    %al,0x64(%ecx)
fs
jb     805de8d <_IO_stdin_used+0x3b29>
jae    805de9d <_IO_stdin_used+0x3b39>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
popaw
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %al,0x6c(%esi)
popa
addr16 jae 805de61 <_IO_stdin_used+0x3afd>
push   %edx
gs
data16
and    %dl,0x74(%ebx)
popa
je     805deaf <_IO_stdin_used+0x3b4b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
je     805deba <_IO_stdin_used+0x3b56>
insb   (%dx),%es:(%edi)
sub    %dh,%gs:0x65(%ebx)
arpl   %bp,(%ecx)
and    %al,0x6c(%ebp,%eiz,2)
gs
je     805decc <_IO_stdin_used+0x3b68>
sub    %dh,0x65(%ebx)
arpl   %bp,(%ecx)
or     (%eax),%al
add    %al,(%eax)
and    $0x34257334,%eax
jae    805de9c <_IO_stdin_used+0x3b38>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dea5 <_IO_stdin_used+0x3b41>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805dea9 <_IO_stdin_used+0x3b45>
and    $0x20783230,%eax
and    $0x20783230,%eax
and    $0x20783230,%eax
and    $0x20783230,%eax
and    $0x786c3830,%eax
and    %ah,0x786c3830
and    %ah,0x786c3830
and    %ah,0x20783430
and    $0x20783430,%eax
and    $0x786c3430,%eax
and    %ah,0x25207338
xor    0x25(%ebx),%dh
xor    0x25(%ebx),%dh
xor    0x25(%ebx),%dh
xor    0x25(%ebx),%dh
xor    0x25(%ebx),%dh
xor    0xa(%ebx),%dh
add    %al,(%eax)
and    $0x7333342d,%eax
and    %ah,0x7337312d
and    %ah,0x2073382d
and    $0x2073352d,%eax
and    $0x2064332d,%eax
and    $0x7336312d,%eax
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    805df60 <_IO_stdin_used+0x3bfc>
cmp    %gs:(%bx,%si),%ah
imul   $0x725f3674,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    805df81 <_IO_stdin_used+0x3c1d>
and    %bl,%gs:0x2d(%ebx)
jbe    805df59 <_IO_stdin_used+0x3bf5>
pop    %ebp
and    %ah,0x6c(%ebp,%eiz,2)
and    %dl,0x72(%ecx,%eiz,2)
addr16
gs
je     805df2a <_IO_stdin_used+0x3bc6>
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e(%ecx)
gs
je     805df66 <_IO_stdin_used+0x3c02>
pop    %edi
jb     805dfa2 <_IO_stdin_used+0x3c3e>
jne    805dfa9 <_IO_stdin_used+0x3c45>
and    %bl,%gs:0x2d(%ebx)
jbe    805df81 <_IO_stdin_used+0x3c1d>
pop    %ebp
and    %ah,0x64(%ecx)
and    %dl,%fs:0x72(%ecx,%eiz,2)
addr16
gs
je     805df68 <_IO_stdin_used+0x3c04>
pop    %ebx
addr16 ja 805df6c <_IO_stdin_used+0x3c08>
inc    %edi
ja     805dfac <_IO_stdin_used+0x3c48>
and    %bl,0x6d(%ebx)
gs
je     805dfc7 <_IO_stdin_used+0x3c63>
imul   $0x5b205d4d,0x20(%ebx),%esp
pop    %ebx
fs
gs
jbe    805dfbe <_IO_stdin_used+0x3c5a>
and    %cl,0x66(%ecx)
pop    %ebp
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x725f3674,0x65(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    805dfed <_IO_stdin_used+0x3c89>
and    %bl,%gs:0x2d(%ebx)
inc    %esi
inc    %ebx
pop    %ebp
and    %ah,0x6c(%esi)
jne    805dff8 <_IO_stdin_used+0x3c94>
push   $0x20202020
and    %ah,(%eax)
dec    %esi
dec    %edi
push   %esp
and    %dh,0x75(%ebx)
jo     805e004 <_IO_stdin_used+0x3ca0>
outsl  %ds:(%esi),(%dx)
jb     805e00b <_IO_stdin_used+0x3ca7>
gs or  %fs:%gs:(%eax),%al
add    %al,0x6c(%esi)
jne    805e013 <_IO_stdin_used+0x3caf>
push   $0x20676e69
pusha
imul   $0x20273674,0x65(%esi),%ebp
jb     805e01e <_IO_stdin_used+0x3cba>
jne    805e025 <_IO_stdin_used+0x3cc1>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%esi)
je     805dfdf <_IO_stdin_used+0x3c7b>
jae    805e036 <_IO_stdin_used+0x3cd2>
jo     805e033 <_IO_stdin_used+0x3ccf>
outsl  %ds:(%esi),(%dx)
jb     805e03a <_IO_stdin_used+0x3cd6>
gs or  %fs:%gs:(%eax),%al
insl   (%dx),%es:(%edi)
gs
je     805e040 <_IO_stdin_used+0x3cdc>
imul   $0x65746167,0x0(%ebx),%esp
ja     805e038 <_IO_stdin_used+0x3cd4>
jns    805dfd9 <_IO_stdin_used+0x3c75>
push   %ebx
dec    %ecx
dec    %edi
inc    %edi
dec    %ecx
inc    %esi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
add    %dl,0x49(%ebx)
dec    %edi
inc    %ebx
inc    %esp
inc    %ebp
dec    %esp
push   %edx
push   %esp
add    %dl,0x49(%ebx)
dec    %edi
inc    %ebx
inc    %ecx
inc    %esp
inc    %esp
push   %edx
push   %esp
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x72702f00,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805e039 <_IO_stdin_used+0x3cd5>
jb     805e07b <_IO_stdin_used+0x3d17>
jne    805e082 <_IO_stdin_used+0x3d1e>
add    %cl,%gs:0x65(%ebx)
jb     805e082 <_IO_stdin_used+0x3d1e>
gs
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
and    %dh,0x6f(%edx)
jne    805e092 <_IO_stdin_used+0x3d2e>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
dec    %ecx
push   %edx
push   %esp
push   %esp
add    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e035 <_IO_stdin_used+0x3cd1>
dec    %ebp
push   %esp
push   %ebp
add    %ah,0x73383231
add    %cl,0x61(%ebp)
jae    805e0ae <_IO_stdin_used+0x3d4a>
add    %cl,0x65(%ebp)
je     805e0ba <_IO_stdin_used+0x3d56>
imul   $0x657355,0x0(%ebx),%esp
push   %edx
gs
inc    %bx
outsb  %ds:(%esi),(%dx)
je     805e056 <_IO_stdin_used+0x3cf2>
inc    %esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 805e05c <_IO_stdin_used+0x3cf8>
inc    %edi
popa
je     805e0c5 <_IO_stdin_used+0x3d61>
ja     805e0c3 <_IO_stdin_used+0x3d5f>
jns    805e064 <_IO_stdin_used+0x3d00>
inc    %esp
gs
jae    805e0dc <_IO_stdin_used+0x3d78>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x733631
dec    %ecx
popaw
arpl   %sp,0x0(%ebp)
push   %edx
add    %ch,(%edi)
jo     805e0f2 <_IO_stdin_used+0x3d8e>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805e0b6 <_IO_stdin_used+0x3d52>
jb     805e0fd <_IO_stdin_used+0x3d99>
pop    %edi
arpl   %sp,0x63(%ecx)
push   $0x52410065
push   %eax
add    %cl,0x48(%eax)
add    %dl,0x70(%ebx)
arpl   %ax,%gs:0x74(%ebx,%esi,2)
add    %cl,0x48(%eax)
push   %ebp
jo     805e118 <_IO_stdin_used+0x3db4>
outsl  %ds:(%esi),(%dx)
add    %cl,%fs:0x48(%eax)
push   %edx
gs
data16
add    %dl,0x53(%edi,%ecx,2)
add    %cl,0x65(%ebx)
jb     805e123 <_IO_stdin_used+0x3dbf>
gs
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
and    %dh,0x6f(%edx)
jne    805e133 <_IO_stdin_used+0x3dcf>
imul   $0x63616320,0x67(%esi),%ebp
push   $0x53000a65
outsl  %ds:(%esi),(%dx)
jne    805e140 <_IO_stdin_used+0x3ddc>
arpl   %sp,0x0(%ebp)
jno    805e0d3 <_IO_stdin_used+0x3d6f>
dec    %esi
jae    805e0d6 <_IO_stdin_used+0x3d72>
dec    %esi
add    %ah,%fs:(%ebx)
add    %al,(%eax)
dec    %ecx
dec    %esi
inc    %ebp
push   %esp
and    %ch,(%eax)
dec    %ecx
push   %eax
jbe    805e11a <_IO_stdin_used+0x3db6>
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805e10c <_IO_stdin_used+0x3da8>
arpl   %bp,0x6e(%edi)
imul   $0x6572,0x75(%edi),%sp
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    805e11f <_IO_stdin_used+0x3dbb>
jae    805e17a <_IO_stdin_used+0x3e16>
jae    805e177 <_IO_stdin_used+0x3e13>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
inc    %esp
gs
jae    805e180 <_IO_stdin_used+0x3e1c>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e181 <_IO_stdin_used+0x3e1d>
ja     805e17f <_IO_stdin_used+0x3e1b>
jns    805e140 <_IO_stdin_used+0x3ddc>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
jae    805e19a <_IO_stdin_used+0x3e36>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%esi)
popa
addr16 jae 805e15e <_IO_stdin_used+0x3dfa>
dec    %ebp
gs
je     805e1b4 <_IO_stdin_used+0x3e50>
imul   $0x20666552,0x20(%ebx),%esp
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %cl,%gs:0x66(%ecx)
popa
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
inc    %esp
gs
jae    805e1d0 <_IO_stdin_used+0x3e6c>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e1d1 <_IO_stdin_used+0x3e6d>
ja     805e1cf <_IO_stdin_used+0x3e6b>
jns    805e190 <_IO_stdin_used+0x3e2c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
jae    805e1ea <_IO_stdin_used+0x3e86>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%esi)
popa
addr16 jae 805e1ae <_IO_stdin_used+0x3e4a>
and    %ah,(%eax)
dec    %ebp
push   %ebx
push   %ebx
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e1bb <_IO_stdin_used+0x3e57>
and    %ch,0x72(%ecx)
je     805e214 <_IO_stdin_used+0x3eb0>
and    %cl,0x66(%ecx)
popa
arpl   %sp,0xa(%ebp)
add    %al,0x73(%ebp,%eiz,2)
je     805e216 <_IO_stdin_used+0x3eb2>
outsb  %ds:(%esi),(%dx)
popa
je     805e21a <_IO_stdin_used+0x3eb6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e221 <_IO_stdin_used+0x3ebd>
ja     805e21f <_IO_stdin_used+0x3ebb>
jns    805e1e0 <_IO_stdin_used+0x3e7c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
jae    805e23a <_IO_stdin_used+0x3ed6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%esi)
popa
addr16 jae 805e1fe <_IO_stdin_used+0x3e9a>
dec    %ebp
gs
je     805e254 <_IO_stdin_used+0x3ef0>
imul   $0x20666552,0x20(%ebx),%esp
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %cl,%gs:0x66(%ecx)
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %cl,0x53(%ebp)
push   %ebx
and    %ah,(%eax)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e226 <_IO_stdin_used+0x3ec2>
imul   $0x25000a74,0x74(%edx),%esi
sub    $0x20733531,%eax
sub    $0x20202020,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x7335312d
and    %ah,0x2073352d
and    $0x2064362d,%eax
sub    $0x37252020,%eax
and    %ch,%fs:0x2d25000a
xor    %esi,0x2d252073
xor    %esi,0x2d252073
xor    %esi,0x2d252073
xor    $0x2d252073,%eax
ss and %ah,%ss:%fs:0x2064322d
and    $0x25206437,%eax
jae    805e26e <_IO_stdin_used+0x3f0a>
add    %al,(%eax)
add    %al,(%eax)
and    $0x7335312d,%eax
and    %ch,0x20202020
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x7335312d
and    %ah,0x2073352d
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202d20,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0xa2d20,%eax
add    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x2073352d
and    $0x25206435,%eax
sub    $0x25206435,%eax
ss and %ah,%ss:%fs:0x25000a73
sub    $0x20733531,%eax
sub    $0x20202020,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x7335312d
and    %ah,0x2073352d
and    $0x2064362d,%eax
sub    $0x37252020,%eax
and    %ch,%fs:0x20202020
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202020,%eax
and    %ch,0x20202020
and    %ah,(%eax)
sub    $0xa,%eax
and    $0x7335312d,%eax
and    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x2073352d
and    $0x2064362d,%eax
and    $0x2064332d,%eax
and    $0x25206436,%eax
sub    $0x73362e36,%eax
and    %ah,(%eax)
and    %ah,0x2064352d
and    $0x2064362d,%eax
and    $0x45000a64,%eax
push   %edx
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
jo     805e3c7 <_IO_stdin_used+0x4063>
outsl  %ds:(%esi),(%dx)
arpl   %bx,0x67(%edi)
jne    805e3c0 <_IO_stdin_used+0x405c>
jae    805e3d0 <_IO_stdin_used+0x406c>
pop    %edi
insw   (%dx),%es:(%edi)
je     805e38a <_IO_stdin_used+0x4026>
and    $0x2e2e2c73,%eax
and    %dh,%cs:0x65(%edx)
je     805e3e2 <_IO_stdin_used+0x407e>
jb     805e3dd <_IO_stdin_used+0x4079>
gs cmp %fs:%gs:(%eax),%ah
and    $0xa64,%eax
push   %ebx
outsl  %ds:(%esi),(%dx)
jne    805e3ee <_IO_stdin_used+0x408a>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ebp,%eiz,2)
je     805e3f6 <_IO_stdin_used+0x4092>
outsb  %ds:(%esi),(%dx)
popa
je     805e3fa <_IO_stdin_used+0x4096>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e401 <_IO_stdin_used+0x409d>
ja     805e3ff <_IO_stdin_used+0x409b>
jns    805e3c0 <_IO_stdin_used+0x405c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 805e3ce <_IO_stdin_used+0x406a>
dec    %ebp
gs
je     805e424 <_IO_stdin_used+0x40c0>
imul   $0x20666552,0x20(%ebx),%esp
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %cl,%gs:0x66(%ecx)
popa
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
push   %ebx
outsl  %ds:(%esi),(%dx)
jne    805e43e <_IO_stdin_used+0x40da>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ebp,%eiz,2)
je     805e446 <_IO_stdin_used+0x40e2>
outsb  %ds:(%esi),(%dx)
popa
je     805e44a <_IO_stdin_used+0x40e6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e451 <_IO_stdin_used+0x40ed>
ja     805e44f <_IO_stdin_used+0x40eb>
jns    805e410 <_IO_stdin_used+0x40ac>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 805e41e <_IO_stdin_used+0x40ba>
and    %ah,(%eax)
dec    %ebp
push   %ebx
push   %ebx
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e42b <_IO_stdin_used+0x40c7>
and    %ch,0x72(%ecx)
je     805e484 <_IO_stdin_used+0x4120>
and    %cl,0x66(%ecx)
popa
arpl   %sp,0xa(%ebp)
add    %dl,0x6f(%ebx)
jne    805e48e <_IO_stdin_used+0x412a>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ebp,%eiz,2)
je     805e496 <_IO_stdin_used+0x4132>
outsb  %ds:(%esi),(%dx)
popa
je     805e49a <_IO_stdin_used+0x4136>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e4a1 <_IO_stdin_used+0x413d>
ja     805e49f <_IO_stdin_used+0x413b>
jns    805e460 <_IO_stdin_used+0x40fc>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 805e46e <_IO_stdin_used+0x410a>
dec    %ebp
gs
je     805e4c4 <_IO_stdin_used+0x4160>
imul   $0x20666552,0x20(%ebx),%esp
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %cl,%gs:0x66(%ecx)
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %cl,0x53(%ebp)
push   %ebx
and    %ah,(%eax)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e496 <_IO_stdin_used+0x4132>
imul   $0x48202074,0x74(%edx),%esi
dec    %eax
and    %ah,(%eax)
inc    %ecx
jb     805e4f3 <_IO_stdin_used+0x418f>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%ebx)
jne    805e4fe <_IO_stdin_used+0x419a>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ebp,%eiz,2)
je     805e506 <_IO_stdin_used+0x41a2>
outsb  %ds:(%esi),(%dx)
popa
je     805e50a <_IO_stdin_used+0x41a6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805e511 <_IO_stdin_used+0x41ad>
ja     805e50f <_IO_stdin_used+0x41ab>
jns    805e4d0 <_IO_stdin_used+0x416c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
insb   (%dx),%es:(%edi)
popa
addr16 jae 805e4de <_IO_stdin_used+0x417a>
dec    %ebp
gs
je     805e534 <_IO_stdin_used+0x41d0>
imul   $0x20666552,0x20(%ebx),%esp
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %cl,%gs:0x66(%ecx)
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %cl,0x53(%ebp)
push   %ebx
and    %ah,(%eax)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     805e506 <_IO_stdin_used+0x41a2>
imul   $0x54202074,0x74(%edx),%esi
dec    %edi
push   %ebx
and    %cl,0x48(%eax)
push   %edx
gs
data16
and    %cl,0x48(%eax)
push   %ebp
jo     805e56f <_IO_stdin_used+0x420b>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %dl,0x70(%ebx)
arpl   %ax,%gs:0x74(%ebx,%esi,2)
or     (%eax),%al
add    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x2073352d
and    $0x2064362d,%eax
and    $0x2064332d,%eax
and    $0x25206436,%eax
sub    $0x73362e36,%eax
and    %ah,(%eax)
and    %ah,0x2064352d
and    $0x2064362d,%eax
and    $0x2064352d,%eax
and    $0x2064332d,%eax
and    $0xa64,%eax
add    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x7335312d
and    %ah,0x2073352d
and    $0x2064362d,%eax
and    $0x2064332d,%eax
and    $0x25206436,%eax
sub    $0x73362e36,%eax
and    %ah,(%eax)
and    %ah,0x2064352d
and    $0x2064362d,%eax
and    $0x2064352d,%eax
and    $0x2064332d,%eax
and    $0x2064332d,%eax
and    %ah,(%eax)
and    $0x2064332d,%eax
and    $0xa733531,%eax
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     805e61f <_IO_stdin_used+0x42bb>
gs
jae    805e623 <_IO_stdin_used+0x42bf>
gs add %ah,%fs:%gs:0x79(%edx)
je     805e61c <_IO_stdin_used+0x42b8>
jae    805e5b9 <_IO_stdin_used+0x4255>
das
jo     805e62e <_IO_stdin_used+0x42ca>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805e5f2 <_IO_stdin_used+0x428e>
fs
gs
jbe    805e5c7 <_IO_stdin_used+0x4263>
push   %ebx
dec    %ecx
dec    %edi
inc    %ebx
inc    %edi
dec    %ecx
inc    %esi
inc    %ebx
dec    %edi
dec    %esi
inc    %esi
add    %al,0x76(%ebp,%eiz,2)
imul   $0x746f6e20,0x65(%ebx),%esp
and    %ah,0x6f(%esi)
jne    805e650 <_IO_stdin_used+0x42ec>
add    %ah,%fs:0x2073392d
add    %ah,0x25206435
sub    $0x206432,%eax
and    $0x756c6c38,%eax
and    %ah,0x20756c36
and    $0x20756c36,%eax
and    $0x756c362d,%eax
and    %al,(%eax)
and    $0x756c6c38,%eax
and    %ah,0x20756c36
and    $0x20756c36,%eax
and    $0x20756c36,%eax
add    %ah,0x7336352d
add    %bl,0x4e(%ebx)
dec    %edi
and    %al,0x4c(%esi)
inc    %ecx
inc    %edi
push   %ebx
pop    %ebp
add    %dl,0x0(%edx,%eax,2)
inc    %edi
inc    %edx
add    %cl,0x42(%ebp)
add    %cl,0x42(%ebx)
add    %ah,0x2073392d
dec    %esp
imul   $0x636e6520,0x6b(%esi),%ebp
popa
jo     805e688 <_IO_stdin_used+0x4324>
and    $0x202073,%eax
dec    %eax
push   %edi
popa
fs
fs
jb     805e67a <_IO_stdin_used+0x4316>
and    $0x202073,%eax
dec    %ebp
gs imul $0x28007325,%fs:%gs:0x3a(%ecx),%esp
28
popa
jne    805e6e0 <_IO_stdin_used+0x437c>
outsl  %ds:(%esi),(%dx)
sub    %eax,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x64612073,%eax
fs
jb     805e6bb <_IO_stdin_used+0x4357>
and    $0x20002073,%eax
push   %eax
sub    $0x3a502d74,%eax
and    $0x20002073,%eax
inc    %edx
arpl   %sp,0x73(%ecx)
je     805e6d1 <_IO_stdin_used+0x436d>
and    $0x20002073,%eax
dec    %ebp
popa
jae    805e70b <_IO_stdin_used+0x43a7>
cmp    0x20000a73,%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e(%ecx)
gs
je     805e6ea <_IO_stdin_used+0x4386>
and    %ah,0x64(%ecx)
fs
jb     805e6f4 <_IO_stdin_used+0x4390>
and    %ah,0x64252f73
add    %ah,(%eax)
push   %ebx
arpl   %bp,0x70(%edi)
cmp    %gs:(%eax),%al
inc    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
add    %cl,0x6e(%ecx,%ebp,2)
imul   $0x53,(%eax),%eax
imul   $0x706d6f43,0x0(%ebp,%eiz,2),%esi
popa
je     805e6e1 <_IO_stdin_used+0x437d>
dec    %eax
outsl  %ds:(%esi),(%dx)
jae    805e759 <_IO_stdin_used+0x43f5>
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x63(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
je     805e71f <_IO_stdin_used+0x43bb>
popa
fs
fs
jb     805e73e <_IO_stdin_used+0x43da>
and    $0x5b000a73,%eax
dec    %esi
dec    %edi
and    %al,0x4c(%esi)
inc    %ecx
inc    %edi
push   %ebx
pop    %ebp
and    %al,(%eax)
push   %ebp
push   %eax
and    %al,(%eax)
inc    %edx
push   %edx
dec    %edi
inc    %ecx
inc    %esp
inc    %ebx
inc    %ecx
push   %ebx
push   %esp
and    %al,(%eax)
inc    %esp
inc    %ebp
inc    %edx
push   %ebp
inc    %edi
and    %al,(%eax)
dec    %esp
dec    %edi
dec    %edi
push   %eax
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
and    %al,(%eax)
push   %eax
dec    %edi
dec    %ecx
dec    %esi
push   %esp
dec    %edi
push   %eax
dec    %edi
dec    %ecx
dec    %esi
push   %esp
and    %al,(%eax)
dec    %esi
dec    %edi
push   %esp
push   %edx
inc    %ecx
dec    %ecx
dec    %esp
inc    %ebp
push   %edx
push   %ebx
and    %al,(%eax)
push   %edx
push   %ebp
dec    %esi
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
and    %al,(%eax)
dec    %esi
dec    %edi
inc    %ecx
push   %edx
push   %eax
and    %al,(%eax)
push   %eax
push   %edx
dec    %edi
dec    %ebp
dec    %ecx
push   %ebx
inc    %ebx
and    %al,(%eax)
inc    %ecx
dec    %esp
dec    %esp
dec    %ebp
push   %ebp
dec    %esp
push   %esp
dec    %ecx
and    %al,(%eax)
push   %ebx
dec    %esp
inc    %ecx
push   %esi
inc    %ebp
and    %al,(%eax)
dec    %ebp
inc    %ecx
push   %ebx
push   %esp
inc    %ebp
push   %edx
and    %al,(%eax)
dec    %ebp
push   %ebp
dec    %esp
push   %esp
dec    %ecx
inc    %ebx
inc    %ecx
push   %ebx
push   %esp
and    %al,(%eax)
inc    %esp
pop    %ecx
dec    %esi
inc    %ecx
dec    %ebp
dec    %ecx
inc    %ebx
and    %al,(%eax)
and    %cl,0x54(%ebp)
push   %ebp
cmp    0x4d202064,%ah
gs
je     805e812 <_IO_stdin_used+0x44ae>
imul   $0x20006425,0x3a(%ebx),%esp
and    %cl,0x75(%edi)
je     805e812 <_IO_stdin_used+0x44ae>
imul   $0x20206425,0x3a(%esp,%ebp,2),%ebp
dec    %ebx
gs
gs
jo     805e81a <_IO_stdin_used+0x44b6>
insb   (%dx),%es:(%edi)
imul   $0x64253a,0x65(%esi),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     805e845 <_IO_stdin_used+0x44e1>
gs
jae    805e849 <_IO_stdin_used+0x44e5>
gs cmp %fs:%gs:0xa756c,%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6c(%edi)
insb   (%dx),%es:(%edi)
imul   $0x3a736e6f,0x69(%ebx),%esi
and    $0x20756c,%eax
arpl   %bp,0x6d(%edi)
jo     805e86f <_IO_stdin_used+0x450b>
gs
jae    805e873 <_IO_stdin_used+0x450f>
gs cmp %fs:%gs:0x20756c,%ah
je     805e882 <_IO_stdin_used+0x451e>
jno    805e881 <_IO_stdin_used+0x451d>
gs
jne    805e874 <_IO_stdin_used+0x4510>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
cmp    0xa002064,%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
add    %cl,0x6e(%ecx)
je     805e88c <_IO_stdin_used+0x4528>
jb     805e89b <_IO_stdin_used+0x4537>
jne    805e89b <_IO_stdin_used+0x4537>
je     805e867 <_IO_stdin_used+0x4503>
and    $0x42002064,%eax
popa
jae    805e89a <_IO_stdin_used+0x4536>
and    %ah,0x64(%ecx)
fs
jb     805e8a0 <_IO_stdin_used+0x453c>
jae    805e8b0 <_IO_stdin_used+0x454c>
cmp    (%eax),%dh
js     805e866 <_IO_stdin_used+0x4502>
js     805e863 <_IO_stdin_used+0x44ff>
add    %cl,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805e8c3 <_IO_stdin_used+0x455f>
cmp    0x252d786c,%ah
insb   (%dx),%es:(%edi)
js     805e873 <_IO_stdin_used+0x450f>
add    %al,0x41(%ebp,%ecx,2)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
cmp    0x75002078,%ah
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %dh,(%ecx)
xor    %ah,0x61(%edx)
jae    805e8d4 <_IO_stdin_used+0x4570>
xor    (%eax),%al
bound  %ebp,0x63(%esi)
add    %ah,0x6f(%ebx)
popa
js     805e87a <_IO_stdin_used+0x4516>
xor    %esi,(%eax)
bound  %esp,0x73(%ecx)
gs
push   %esp
add    %dh,0x74(%ebp)
jo     805e886 <_IO_stdin_used+0x4522>
je     805e8f8 <_IO_stdin_used+0x4594>
add    %al,%gs:0x55(%ecx)
dec    %ecx
add    %dh,0x69(%eax,%ebp,2)
arpl   %bp,0x0(%ebx)
bound  %esi,%fs:(%ecx)
xor    $0x30303100,%eax
bound  %esp,0x73(%ecx)
gs
push   %esp
add    %dh,(%ecx)
xor    %dh,(%eax)
bound  %esp,0x73(%ecx)
gs
push   %esp
pop    %eax
add    %dh,(%ecx)
xor    %dh,(%eax)
bound  %esp,0x73(%ecx)
gs
inc    %esi
pop    %eax
add    %al,(%eax)
add    %ah,0x2520754c
dec    %esp
jne    805e8e0 <_IO_stdin_used+0x457c>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e8e8 <_IO_stdin_used+0x4584>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e8f0 <_IO_stdin_used+0x458c>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e8f8 <_IO_stdin_used+0x4594>
and    $0x2520754c,%eax
dec    %esp
jne    805e900 <_IO_stdin_used+0x459c>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e908 <_IO_stdin_used+0x45a4>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e910 <_IO_stdin_used+0x45ac>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e8f8 <_IO_stdin_used+0x4594>
and    $0x2520754c,%eax
dec    %esp
jne    805e920 <_IO_stdin_used+0x45bc>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e928 <_IO_stdin_used+0x45c4>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e930 <_IO_stdin_used+0x45cc>
and    $0x2520754c,%eax
dec    %esp
jne    805e938 <_IO_stdin_used+0x45d4>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e940 <_IO_stdin_used+0x45dc>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e948 <_IO_stdin_used+0x45e4>
and    $0x2500756c,%eax
dec    %esp
jne    805e950 <_IO_stdin_used+0x45ec>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e958 <_IO_stdin_used+0x45f4>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e960 <_IO_stdin_used+0x45fc>
and    $0x2520754c,%eax
insb   (%dx),%es:(%edi)
jne    805e968 <_IO_stdin_used+0x4604>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e970 <_IO_stdin_used+0x460c>
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805e958 <_IO_stdin_used+0x45f4>
push   %edi
popa
jb     805e9ca <_IO_stdin_used+0x4666>
imul   $0x6163203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805e988 <_IO_stdin_used+0x4624>
outsl  %ds:(%esi),(%dx)
jo     805e9d0 <_IO_stdin_used+0x466c>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25282073
jae    805e99d <_IO_stdin_used+0x4639>
and    %cl,%cs:0x6d(%ecx,%ebp,2)
imul   $0x74756f20,0x64(%ebp,%eiz,2),%esi
jo     805e9f8 <_IO_stdin_used+0x4694>
je     805e9b3 <_IO_stdin_used+0x464f>
or     (%eax),%al
add    %dh,0x61(%edi)
jb     805e9fa <_IO_stdin_used+0x4696>
imul   $0x6f6e203a,0x67(%esi),%ebp
and    %ch,0x6e(%ecx)
gs
je     805e9b9 <_IO_stdin_used+0x4655>
jae    805ea0a <_IO_stdin_used+0x46a6>
arpl   %bp,0x65(%ebx)
je     805e9c0 <_IO_stdin_used+0x465c>
popa
jbe    805ea04 <_IO_stdin_used+0x46a0>
imul   $0x203a656c,0x62(%ecx,%eiz,2),%ebp
and    $0xa73,%eax
and    $0x65203a73,%eax
jb     805ea29 <_IO_stdin_used+0x46c5>
outsl  %ds:(%esi),(%dx)
jb     805e9da <_IO_stdin_used+0x4676>
data16
gs
je     805ea21 <_IO_stdin_used+0x46bd>
push   $0x20676e69
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x20(%ebp)
imul   $0x616d726f,0x66(%esi),%ebp
je     805ea3f <_IO_stdin_used+0x46db>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0xa73,%eax
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x206f6e20,%eax
jae    805ea60 <_IO_stdin_used+0x46fc>
popa
je     805ea58 <_IO_stdin_used+0x46f4>
jae    805ea65 <_IO_stdin_used+0x4701>
imul   $0x61766120,0x73(%ebx),%esp
imul   $0x2d20656c,0x62(%ecx,%eiz,2),%ebp
add    %al,(%eax)
add    %al,(%eax)
and    $0x34257334,%eax
jae    805ea30 <_IO_stdin_used+0x46cc>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805ea39 <_IO_stdin_used+0x46d5>
xor    $0x73,%al
and    $0x34257334,%eax
jae    805ea3d <_IO_stdin_used+0x46d9>
and    $0x20783830,%eax
and    $0x20783230,%eax
and    $0x20783230,%eax
and    $0x20783230,%eax
and    $0xa733032,%eax
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
push   %eax
pop    %eax
das
inc    %ebp
je     805eab1 <_IO_stdin_used+0x474d>
gs
jb     805eaba <_IO_stdin_used+0x4756>
gs
je     805ea6f <_IO_stdin_used+0x470b>
dec    %ecx
dec    %ecx
and    %ah,0x64(%ecx)
fs
jb     805ea91 <_IO_stdin_used+0x472d>
and    $0xa73,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
push   %eax
pop    %eax
das
inc    %ebp
je     805ead5 <_IO_stdin_used+0x4771>
gs
jb     805eade <_IO_stdin_used+0x477a>
gs
je     805ea93 <_IO_stdin_used+0x472f>
push   %ebx
dec    %esi
inc    %ecx
push   %eax
and    %ah,0x64(%ecx)
fs
jb     805eab7 <_IO_stdin_used+0x4753>
and    $0xa73,%eax
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
push   %eax
pop    %eax
das
inc    %ebp
je     805eafd <_IO_stdin_used+0x4799>
gs
jb     805eb06 <_IO_stdin_used+0x47a2>
gs
je     805eabb <_IO_stdin_used+0x4757>
cmp    %dh,(%eax)
xor    (%esi),%ch
xor    (%eax),%ah
popa
fs
fs
jb     805eae0 <_IO_stdin_used+0x477c>
and    $0xa73,%eax
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x50(%ecx)
pop    %eax
das
inc    %ebp
je     805eb25 <_IO_stdin_used+0x47c1>
gs
jb     805eb2e <_IO_stdin_used+0x47ca>
gs
je     805eae3 <_IO_stdin_used+0x477f>
cmp    %dh,(%eax)
xor    (%esi),%ch
xor    (%eax),%esp
popa
fs
fs
jb     805eb08 <_IO_stdin_used+0x47a4>
and    $0xa73,%eax
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x74(%ebp)
push   $0x61547265
insb   (%dx),%es:(%edi)
imul   $0x50,(%eax),%esp
push   $0x20657361
xor    (%eax),%ah
popa
fs
fs
jb     805eb2f <_IO_stdin_used+0x47cb>
and    $0xa73,%eax
add    %al,(%eax)
push   %edx
pop    %eax
and    %dh,0x61(%eax)
arpl   %bp,0x65(%ebx)
je     805eb79 <_IO_stdin_used+0x4815>
cmp    0x20756c6c,%ah
gs
jb     805eb81 <_IO_stdin_used+0x481d>
outsl  %ds:(%esi),(%dx)
jb     805eb85 <_IO_stdin_used+0x4821>
cmp    0x6420756c,%ah
jb     805eb89 <_IO_stdin_used+0x4825>
jo     805eb8c <_IO_stdin_used+0x4828>
gs cmp %fs:%gs:0x6f20756c,%ah
jbe    805eb8b <_IO_stdin_used+0x4827>
jb     805eb9a <_IO_stdin_used+0x4836>
jne    805eb98 <_IO_stdin_used+0x4834>
jae    805eb66 <_IO_stdin_used+0x4802>
and    $0x6620756c,%eax
jb     805eb94 <_IO_stdin_used+0x4830>
insl   (%dx),%es:(%edi)
cmp    %gs:0xa756c,%ah
add    %dl,0x20(%eax,%ebx,2)
jo     805eba2 <_IO_stdin_used+0x483e>
arpl   %bp,0x65(%ebx)
je     805ebb9 <_IO_stdin_used+0x4855>
cmp    0x20756c6c,%ah
gs
jb     805ebc1 <_IO_stdin_used+0x485d>
outsl  %ds:(%esi),(%dx)
jb     805ebc5 <_IO_stdin_used+0x4861>
cmp    0x6420756c,%ah
jb     805ebc9 <_IO_stdin_used+0x4865>
jo     805ebcc <_IO_stdin_used+0x4868>
gs cmp %fs:%gs:0x6f20756c,%ah
jbe    805ebcb <_IO_stdin_used+0x4867>
jb     805ebda <_IO_stdin_used+0x4876>
jne    805ebd8 <_IO_stdin_used+0x4874>
jae    805eba6 <_IO_stdin_used+0x4842>
and    $0x6320756c,%eax
popa
jb     805ebe6 <_IO_stdin_used+0x4882>
imul   $0x756c253a,0x72(%ebp),%esp
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x58(%edx)
and    %ah,0x79(%edx)
je     805ebec <_IO_stdin_used+0x4888>
jae    805ebc3 <_IO_stdin_used+0x485f>
and    $0x20756c6c,%eax
sub    %ah,0x252e756c
insb   (%dx),%es:(%edi)
jne    805ebb7 <_IO_stdin_used+0x4853>
and    $0x20202973,%eax
push   %esp
pop    %eax
and    %ah,0x79(%edx)
je     805ec08 <_IO_stdin_used+0x48a4>
jae    805ebdf <_IO_stdin_used+0x487b>
and    $0x20756c6c,%eax
sub    %ah,0x252e756c
insb   (%dx),%es:(%edi)
jne    805ebd3 <_IO_stdin_used+0x486f>
and    $0xa2973,%eax
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
and    $0x586c3830,%eax
add    %ah,0x25583230
xor    %dh,(%edx)
pop    %eax
and    $0x25583230,%eax
xor    %dh,(%edx)
pop    %eax
and    $0x25583230,%eax
xor    %dh,(%edx)
pop    %eax
add    %al,(%eax)
and    $0x586c3830,%eax
cmp    0x25583230,%ah
xor    %dh,(%edx)
pop    %eax
and    $0x25583230,%eax
xor    %dh,(%edx)
pop    %eax
and    $0x25583230,%eax
xor    %dh,(%edx)
pop    %eax
add    %ch,(%edi)
jo     805ec7c <_IO_stdin_used+0x4918>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ec40 <_IO_stdin_used+0x48dc>
imul   $0x756f722f,0x78(%eax),%esi
je     805ec7f <_IO_stdin_used+0x491b>
add    %ch,(%edi)
jo     805ec90 <_IO_stdin_used+0x492c>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ec54 <_IO_stdin_used+0x48f0>
imul   $0x756f725f,0x78(%eax),%esi
je     805ec93 <_IO_stdin_used+0x492f>
add    %ch,0x62(%ecx,%ebp,2)
das
imul   $0x2e74725f,0x78(%eax),%esi
arpl   %ax,(%eax)
dec    %ebx
gs
jb     805ecae <_IO_stdin_used+0x494a>
gs
insb   (%dx),%es:(%edi)
and    %cl,0x50(%ecx)
pop    %eax
and    %dh,0x6f(%edx)
jne    805ecbf <_IO_stdin_used+0x495b>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    $0x73252073,%eax
and    %ah,0x2d250073
xor    0x2d252073,%dh
xor    0x2d252073,%dh
xor    0xa73,%dh
add    %cl,0x50(%ecx)
pop    %eax
and    %dh,0x6f(%edx)
jne    805ecf0 <_IO_stdin_used+0x498c>
imul   $0x746f6e20,0x67(%esi),%ebp
and    %ch,0x6e(%ecx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x726f2073
and    %ah,0x6f662073
jne    805ed07 <_IO_stdin_used+0x49a3>
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %al,0x73(%ebp,%eiz,2)
je     805ed0e <_IO_stdin_used+0x49aa>
outsb  %ds:(%esi),(%dx)
popa
je     805ed12 <_IO_stdin_used+0x49ae>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6f(%edx)
jne    805ed32 <_IO_stdin_used+0x49ce>
gs
jb     805ece1 <_IO_stdin_used+0x497d>
dec    %esi
gs
je     805ece5 <_IO_stdin_used+0x4981>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6f(%edx)
jne    805ed4c <_IO_stdin_used+0x49e8>
gs
jb     805ecfb <_IO_stdin_used+0x4997>
dec    %esi
outsl  %ds:(%esi),(%dx)
fs or  %fs:%gs:(%eax),%al
das
jo     805ed56 <_IO_stdin_used+0x49f2>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ed1a <_IO_stdin_used+0x49b6>
imul   $0x7173616d,0x5f(%eax),%esi
jne    805ed59 <_IO_stdin_used+0x49f5>
jb     805ed57 <_IO_stdin_used+0x49f3>
fs add %al,%fs:%gs:0x46(%ecx)
and    %cl,0x4e(%ecx)
inc    %ebp
push   %esp
add    %ch,0x61(%ebp)
jae    805ed76 <_IO_stdin_used+0x4a12>
pop    %edi
imul   $0x4450006f,0x66(%esi),%ebp
gs
insb   (%dx),%es:(%edi)
je     805ed72 <_IO_stdin_used+0x4a0e>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%eax)
sub    %esp,(%eax)
popaw
imul   $0x61657200,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%eax)
sub    %esp,(%eax)
popaw
imul   $0x5f706900,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
popa
jae    805edab <_IO_stdin_used+0x4a47>
jne    805eda1 <_IO_stdin_used+0x4a3d>
jb     805ed9f <_IO_stdin_used+0x4a3b>
fs and %ah,%fs:%gs:0x6f(%esi)
jb     805edb2 <_IO_stdin_used+0x4a4e>
popa
je     805ed68 <_IO_stdin_used+0x4a04>
gs
jb     805edbd <_IO_stdin_used+0x4a59>
outsl  %ds:(%esi),(%dx)
jb     805ed4e <_IO_stdin_used+0x49ea>
insl   (%dx),%es:(%edi)
popa
jae    805edc3 <_IO_stdin_used+0x4a5f>
pop    %edi
imul   $0x632e6f,0x66(%esi),%ebp
dec    %ecx
inc    %ebx
dec    %ebp
push   %eax
add    %ch,0x63(%ecx)
insl   (%dx),%es:(%edi)
jo     805ed64 <_IO_stdin_used+0x4a00>
addr16 jb 805edcc <_IO_stdin_used+0x4a68>
add    %ah,0x73(%ebp)
jo     805ed6c <_IO_stdin_used+0x4a08>
imul   $0x7173616d,0x5f(%eax),%esi
jne    805edda <_IO_stdin_used+0x4a76>
jb     805edd8 <_IO_stdin_used+0x4a74>
fs and %dh,%fs:%gs:0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
add    %cl,%gs:0x50(%ecx)
and    %ch,0x61(%ebp)
jae    805edff <_IO_stdin_used+0x4a9b>
jne    805edf5 <_IO_stdin_used+0x4a91>
jb     805edf3 <_IO_stdin_used+0x4a8f>
imul   $0x746e6520,%fs:0x67(%esi),%ebp
jb     805ee05 <_IO_stdin_used+0x4aa1>
gs
jae    805eda9 <_IO_stdin_used+0x4a45>
add    %ah,0x73342d
and    $0x3a646c33,%eax
and    $0x646c3230,%eax
cs
and    $0x646c3230,%eax
and    %al,(%eax)
and    $0x756c3031,%eax
and    %ah,0x20646835
and    $0x20646835,%eax
add    %ah,0x756c3031
and    %ah,0x20646835
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d250020,%eax
xor    (%eax),%dh
jae    805ee00 <_IO_stdin_used+0x4a9c>
add    %ah,0x3e2d2073
and    %al,(%eax)
and    %ch,(%eax)
and    $0xa2973,%eax
add    %ah,0x66203a73
gs
popa
je     805ee6e <_IO_stdin_used+0x4b0a>
jb     805ee60 <_IO_stdin_used+0x4afc>
and    %ah,0x25(%eax)
jae    805ee27 <_IO_stdin_used+0x4ac3>
and    %ch,0x6f(%esi)
je     805ee25 <_IO_stdin_used+0x4ac1>
jae    805ee7c <_IO_stdin_used+0x4b18>
jo     805ee79 <_IO_stdin_used+0x4b15>
outsl  %ds:(%esi),(%dx)
jb     805ee80 <_IO_stdin_used+0x4b1c>
gs fs or %cs:%fs:%gs:0x6c(%eax),%dl
gs
popa
jae    805ee7b <_IO_stdin_used+0x4b17>
and    %dh,0x65(%edx)
arpl   %bp,0x6d(%edi)
jo     805ee87 <_IO_stdin_used+0x4b23>
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6e(%eax)
gs
je     805ee53 <_IO_stdin_used+0x4aef>
je     805ee97 <_IO_stdin_used+0x4b33>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jae    805ee53 <_IO_stdin_used+0x4aef>
and    %dh,0x69(%edi)
je     805ee99 <_IO_stdin_used+0x4b35>
and    %ch,0x65(%esi)
ja     805ee9b <_IO_stdin_used+0x4b37>
jb     805ee58 <_IO_stdin_used+0x4af4>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%ebx)
jne    805eeb5 <_IO_stdin_used+0x4b51>
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
jb     805ee69 <_IO_stdin_used+0x4b05>
data16
jne    805eeb8 <_IO_stdin_used+0x4b54>
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     805eec2 <_IO_stdin_used+0x4b5e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %al,(%eax)
and    %ah,0x6c252073
pop    %eax
cmp    0x25205868,%ah
insb   (%dx),%es:(%edi)
pop    %eax
cmp    0x25205868,%ah
push   $0x6c252058
pop    %eax
and    %ah,0x25206468
push   $0x6c252064
jne    805ee88 <_IO_stdin_used+0x4b24>
and    %ah,0x6c252073
pop    %eax
cmp    0x25205868,%ah
insb   (%dx),%es:(%edi)
pop    %eax
cmp    0x25205868,%ah
push   $0x6c252058
pop    %eax
and    %ah,0x25206468
insb   (%dx),%es:(%edi)
jne    805eeac <_IO_stdin_used+0x4b48>
jo     805ef20 <_IO_stdin_used+0x4bbc>
outsl  %ds:(%esi),(%dx)
je     805eed1 <_IO_stdin_used+0x4b6d>
and    %ah,(%eax)
gs
js     805ef26 <_IO_stdin_used+0x4bc2>
imul   $0x756f7320,0x65(%edx),%esi
jb     805ef22 <_IO_stdin_used+0x4bbe>
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ebp,%eiz,2)
je     805ef3d <_IO_stdin_used+0x4bd9>
outsb  %ds:(%esi),(%dx)
popa
je     805ef41 <_IO_stdin_used+0x4bdd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     805ef55 <_IO_stdin_used+0x4bf1>
jb     805ef5c <_IO_stdin_used+0x4bf8>
jae    805eef4 <_IO_stdin_used+0x4b90>
add    %al,(%eax)
jo     805ef60 <_IO_stdin_used+0x4bfc>
outsl  %ds:(%esi),(%dx)
je     805ef11 <_IO_stdin_used+0x4bad>
and    %ah,(%eax)
gs
js     805ef66 <_IO_stdin_used+0x4c02>
imul   $0x20202020,0x65(%edx),%esi
imul   $0x71657374,0x69(%esi),%ebp
and    %ah,0x6c(%ebp,%eiz,2)
je     805ef6b <_IO_stdin_used+0x4c07>
and    %dh,0x72(%eax)
gs
jbe    805ef74 <_IO_stdin_used+0x4c10>
and    %dh,0x6f(%ebx)
jne    805ef87 <_IO_stdin_used+0x4c23>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
fs
gs
jae    805ef9e <_IO_stdin_used+0x4c3a>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     805efac <_IO_stdin_used+0x4c48>
jb     805efb3 <_IO_stdin_used+0x4c4f>
jae    805ef4b <_IO_stdin_used+0x4be7>
add    %ch,(%edi)
jo     805efb7 <_IO_stdin_used+0x4c53>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ef7b <_IO_stdin_used+0x4c17>
outsb  %ds:(%esi),(%dx)
jb     805efae <_IO_stdin_used+0x4c4a>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    805ef55 <_IO_stdin_used+0x4bf1>
das
jo     805efca <_IO_stdin_used+0x4c66>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805ef8e <_IO_stdin_used+0x4c2a>
outsb  %ds:(%esi),(%dx)
jb     805efc1 <_IO_stdin_used+0x4c5d>
outsb  %ds:(%esi),(%dx)
imul   $0x72654b00,%gs:0x68(%edi),%esp
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
and    %cl,0x45(%esi)
push   %esp
das
push   %edx
dec    %edi
dec    %ebp
and    %dh,0x6f(%edx)
jne    805efef <_IO_stdin_used+0x4c8b>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    $0x2073392d,%eax
and    %ah,(%eax)
and    %ah,0x2073372d
and    %ah,(%eax)
add    %ah,0x20206433
and    %ah,(%eax)
and    %ah,(%eax)
and    $0x2073392d,%eax
and    %ah,0xa73
add    %al,(%eax)
dec    %esi
inc    %ebp
push   %esp
das
push   %edx
dec    %edi
dec    %ebp
and    %ch,0x6f(%esi)
je     805efd8 <_IO_stdin_used+0x4c74>
arpl   %bp,0x6e(%edi)
imul   $0x6572,0x75(%edi),%sp
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    805efeb <_IO_stdin_used+0x4c87>
jae    805f046 <_IO_stdin_used+0x4ce2>
jae    805f043 <_IO_stdin_used+0x4cdf>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
inc    %esp
gs
jae    805f04c <_IO_stdin_used+0x4ce8>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,(%eax)
dec    %ebp
outsb  %ds:(%esi),(%dx)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x61755120,0x20(%ebx),%esp
insb   (%dx),%es:(%edi)
imul   $0x69654e20,0x20(%ecx,%edi,2),%esi
addr16 push $0x72756f62
and    %ah,(%eax)
dec    %ecx
popaw
arpl   %sp,0xa(%ebp)
add    %bh,0x9(%eax,%eiz,1)
or     (%eax),%al
and    $0x732a,%eax
ja     805f073 <_IO_stdin_used+0x4d0f>
jb     805f082 <_IO_stdin_used+0x4d1e>
imul   $0x7325203a,0x67(%esi),%ebp
and    %ah,0x65(%edi,%ebp,2)
jae    805f041 <_IO_stdin_used+0x4cdd>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f045 <_IO_stdin_used+0x4ce1>
arpl   %bp,0x6e(%edi)
je     805f08b <_IO_stdin_used+0x4d27>
imul   $0x75716572,0x20(%esi),%ebp
imul   $0x69662064,0x65(%edx),%esi
gs
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x25000a73
xor    %dh,(%edx)
js     805f06a <_IO_stdin_used+0x4d06>
xor    %dh,(%edx)
js     805f06e <_IO_stdin_used+0x4d0a>
xor    %dh,(%edx)
js     805f072 <_IO_stdin_used+0x4d0e>
xor    %dh,(%edx)
js     805f076 <_IO_stdin_used+0x4d12>
xor    %dh,(%edx)
js     805f055 <_IO_stdin_used+0x4cf1>
das
jo     805f0ca <_IO_stdin_used+0x4d66>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805f08e <_IO_stdin_used+0x4d2a>
jb     805f0d0 <_IO_stdin_used+0x4d6c>
jae    805f0c8 <_IO_stdin_used+0x4d64>
add    %cl,0x6f(%esi)
fs and %ah,%fs:%gs:0x64(%ecx)
fs
jb     805f0d3 <_IO_stdin_used+0x4d6f>
jae    805f0e3 <_IO_stdin_used+0x4d7f>
and    %ch,0x75(%ebp)
jae    805f0e9 <_IO_stdin_used+0x4d85>
and    %ah,0x65(%edx)
and    %dh,0x6e(%ebp,%eiz,2)
and    %ah,0x67(%ecx,%ebp,2)
imul   $0x6f72702f,0x0(%ebx,%esi,2),%esi
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805f08e <_IO_stdin_used+0x4d2a>
add    %al,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x73(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
popa
fs
fs
jb     805f104 <_IO_stdin_used+0x4da0>
jae    805f114 <_IO_stdin_used+0x4db0>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x6f662073,0x65(%ecx,%ebp,2),%ebp
jne    805f11d <_IO_stdin_used+0x4db9>
fs or  %cs:%fs:(%eax),%al
and    $0x2d583230,%eax
add    %dh,0x6e(%ebp)
jae    805f12d <_IO_stdin_used+0x4dc9>
arpl   %ax,%gs:(%eax)
outsl  %ds:(%esi),(%dx)
jne    805f137 <_IO_stdin_used+0x4dd3>
and    %ch,0x66(%edi)
and    %dh,0x69(%esi)
jb     805f13f <_IO_stdin_used+0x4ddb>
jne    805f12e <_IO_stdin_used+0x4dca>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805f14e <_IO_stdin_used+0x4dea>
or     (%eax),%al
and    $0x64252e64,%eax
cs
and    $0x64410064,%eax
fs
jb     805f14a <_IO_stdin_used+0x4de6>
jae    805f15a <_IO_stdin_used+0x4df6>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     805f10e <_IO_stdin_used+0x4daa>
gs
js     805f154 <_IO_stdin_used+0x4df0>
gs gs and %ah,%fs:%gs:0x69(%ebp)
addr16 push $0x6e656574
and    %ah,0x67(%ecx,%ebp,2)
imul   $0x68746977,0x20(%ebx,%esi,2),%esi
and    %dh,0x69(%ebx)
imul   $0x49007374,%fs:0x69(%bx),%esp
49
outsb  %ds:(%esi),(%dx)
jbe    805f179 <_IO_stdin_used+0x4e15>
insb   (%dx),%es:(%edi)
imul   $0x65726464,0x61(%eax,%eiz,1),%esp
jae    805f196 <_IO_stdin_used+0x4e32>
add    %ch,(%edi)
jo     805f199 <_IO_stdin_used+0x4e35>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805f15d <_IO_stdin_used+0x4df9>
js     805f162 <_IO_stdin_used+0x4dfe>
xor    $0x756f725f,%eax
je     805f19c <_IO_stdin_used+0x4e38>
jae    805f139 <_IO_stdin_used+0x4dd5>
dec    %ebx
gs
jb     805f1ab <_IO_stdin_used+0x4e47>
gs
insb   (%dx),%es:(%edi)
and    %bl,0x2e(%eax)
xor    0x756f7220,%dh
je     805f1b3 <_IO_stdin_used+0x4e4f>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%si)
bound  %ebp,0xa(%ebp,%eiz,2)
add    %al,0x73(%ebp,%eiz,2)
je     805f1c2 <_IO_stdin_used+0x4e5e>
outsb  %ds:(%esi),(%dx)
popa
je     805f1c6 <_IO_stdin_used+0x4e62>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
popaw
arpl   %sp,0xa(%ebp)
add    %ch,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa73352d,%eax
add    %ah,0x2a252f73
and    %ah,%fs:(%eax)
and    %ah,0xa73352d
add    %al,(%eax)
add    %bl,0x2e(%eax)
xor    0x746f6e20,%dh
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6572,0x75(%edi),%sp
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    805f1d8 <_IO_stdin_used+0x4e74>
jae    805f233 <_IO_stdin_used+0x4ecf>
jae    805f230 <_IO_stdin_used+0x4ecc>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
add    %al,(%eax)
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
js     805f1ff <_IO_stdin_used+0x4e9b>
xor    $0x756f725f,%eax
je     805f239 <_IO_stdin_used+0x4ed5>
and    %bl,0x2d(%ebx)
jbe    805f236 <_IO_stdin_used+0x4ed2>
and    %ah,0x6c(%ebp,%eiz,2)
and    %dl,0x72(%ecx,%eiz,2)
addr16
gs
je     805f240 <_IO_stdin_used+0x4edc>
das
insl   (%dx),%es:(%edi)
popa
jae    805f255 <_IO_stdin_used+0x4ef1>
pop    %ebp
and    %bl,0x64(%ebx)
gs
jbe    805f24e <_IO_stdin_used+0x4eea>
and    %cl,0x66(%ecx)
or     (%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,0x32(%eax)
xor    $0x756f725f,%eax
je     805f26d <_IO_stdin_used+0x4f09>
and    %bl,0x2d(%ebx)
jbe    805f26a <_IO_stdin_used+0x4f06>
and    %ah,0x64(%ecx)
and    %dl,%fs:0x72(%ecx,%eiz,2)
addr16
gs
je     805f274 <_IO_stdin_used+0x4f10>
das
insl   (%dx),%es:(%edi)
popa
jae    805f289 <_IO_stdin_used+0x4f25>
pop    %ebp
and    %bl,0x64(%ebx)
gs
jbe    805f282 <_IO_stdin_used+0x4f1e>
and    %cl,0x66(%ecx)
or     (%eax),%al
add    %al,(%eax)
jb     805f29d <_IO_stdin_used+0x4f39>
jne    805f2a4 <_IO_stdin_used+0x4f40>
cmp    %gs:(%eax),%ah
outsb  %ds:(%esi),(%dx)
gs
je     805f2a4 <_IO_stdin_used+0x4f40>
popa
jae    805f2a5 <_IO_stdin_used+0x4f41>
and    %ah,0x65(%edi,%ebp,2)
jae    805f2ae <_IO_stdin_used+0x4f4a>
daa
je     805f263 <_IO_stdin_used+0x4eff>
insl   (%dx),%es:(%edi)
popa
je     805f2aa <_IO_stdin_used+0x4f46>
push   $0x756f7220
je     805f2b3 <_IO_stdin_used+0x4f4f>
and    %ah,0x64(%ecx)
fs
jb     805f2b9 <_IO_stdin_used+0x4f55>
jae    805f2c9 <_IO_stdin_used+0x4f65>
or     (%eax),%al
inc    %esi
insb   (%dx),%es:(%edi)
jne    805f2cf <_IO_stdin_used+0x4f6b>
push   $0x20676e69
pusha
js     805f296 <_IO_stdin_used+0x4f32>
xor    $0x6f722027,%eax
jne    805f2df <_IO_stdin_used+0x4f7b>
imul   $0x62617420,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%esi)
je     805f299 <_IO_stdin_used+0x4f35>
jae    805f2f0 <_IO_stdin_used+0x4f8c>
jo     805f2ed <_IO_stdin_used+0x4f89>
outsl  %ds:(%esi),(%dx)
jb     805f2f4 <_IO_stdin_used+0x4f90>
gs or  %fs:%gs:(%eax),%al
dec    %ebp
outsl  %ds:(%esi),(%dx)
imul   $0x20676e69,%fs:0x79(%esi),%esp
pusha
js     805f2c3 <_IO_stdin_used+0x4f5f>
xor    $0x6f722027,%eax
jne    805f30c <_IO_stdin_used+0x4fa8>
imul   $0x63616320,0x67(%esi),%ebp
push   $0x6f6e2065
je     805f2c6 <_IO_stdin_used+0x4f62>
jae    805f31d <_IO_stdin_used+0x4fb9>
jo     805f31a <_IO_stdin_used+0x4fb6>
outsl  %ds:(%esi),(%dx)
jb     805f321 <_IO_stdin_used+0x4fbd>
gs or  %fs:%gs:(%eax),%al
jb     805f322 <_IO_stdin_used+0x4fbe>
jne    805f329 <_IO_stdin_used+0x4fc5>
cmp    %gs:(%eax),%ah
bound  %ebp,0x67(%edi)
jne    805f330 <_IO_stdin_used+0x4fcc>
and    %ch,0x65(%esi)
je     805f32f <_IO_stdin_used+0x4fcb>
popa
jae    805f330 <_IO_stdin_used+0x4fcc>
and    %ah,0x2f000a64
jo     805f33f <_IO_stdin_used+0x4fdb>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805f303 <_IO_stdin_used+0x4f9f>
popa
js     805f309 <_IO_stdin_used+0x4fa5>
xor    $0x756f725f,%eax
je     805f343 <_IO_stdin_used+0x4fdf>
add    %cl,0x65(%ebx)
jb     805f351 <_IO_stdin_used+0x4fed>
gs
insb   (%dx),%es:(%edi)
and    %al,0x58(%ecx)
xor    %cs:0x756f7220,%dh
je     805f35a <_IO_stdin_used+0x4ff6>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%si)
bound  %ebp,0xa(%ebp,%eiz,2)
add    %al,0x73(%ebp,%eiz,2)
je     805f369 <_IO_stdin_used+0x5005>
outsb  %ds:(%esi),(%dx)
popa
je     805f36d <_IO_stdin_used+0x5009>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
dec    %ecx
popaw
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %dl,0x73(%ebp)
or     %gs:(%eax),%al
and    $0x2073392d,%eax
and    %ah,(%eax)
and    %ah,0x2073352d
and    %ah,0xa6435
add    %al,(%eax)
add    %al,0x58(%ecx)
xor    %cs:0x746f6e20,%dh
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6572,0x75(%edi),%sp
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    805f369 <_IO_stdin_used+0x5005>
jae    805f3c4 <_IO_stdin_used+0x5060>
jae    805f3c1 <_IO_stdin_used+0x505d>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
jo     805f3c7 <_IO_stdin_used+0x5063>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805f38b <_IO_stdin_used+0x5027>
popa
je     805f3c0 <_IO_stdin_used+0x505c>
insb   (%dx),%es:(%edi)
imul   $0x6f,0x72(%edi),%ebx
jne    805f3da <_IO_stdin_used+0x5076>
add    %ah,%gs:0x25207361
popa
jae    805f390 <_IO_stdin_used+0x502c>
and    $0x25207361,%eax
popa
jae    805f382 <_IO_stdin_used+0x501e>
add    %ah,0x7336312d
and    $0x7336312d,%eax
and    $0x7336312d,%eax
and    $0xa732d,%eax
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     805f403 <_IO_stdin_used+0x509f>
jb     805f3b6 <_IO_stdin_used+0x5052>
outsl  %ds:(%esi),(%dx)
jo     805f3fe <_IO_stdin_used+0x509a>
outsb  %ds:(%esi),(%dx)
imul   $0x72702f20,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
outsb  %ds:(%esi),(%dx)
gs
je     805f3d7 <_IO_stdin_used+0x5073>
popa
je     805f40c <_IO_stdin_used+0x50a8>
insb   (%dx),%es:(%edi)
imul   $0x6f,0x72(%edi),%ebx
jne    805f426 <_IO_stdin_used+0x50c2>
add    %al,%gs:0x50(%esp,%eax,2)
and    %ch,(%eax)
inc    %ecx
jo     805f42c <_IO_stdin_used+0x50c8>
insb   (%dx),%es:(%edi)
gs
push   %esp
popa
insb   (%dx),%es:(%edi)
imul   $0x20,(%ecx),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f3e8 <_IO_stdin_used+0x5084>
arpl   %bp,0x6e(%edi)
imul   $0x6572,0x75(%edi),%sp
and    %ch,%fs:0x6e(%edi)
and    %dh,0x69(%eax,%ebp,2)
jae    805f3fb <_IO_stdin_used+0x5097>
jae    805f456 <_IO_stdin_used+0x50f2>
jae    805f453 <_IO_stdin_used+0x50ef>
gs
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
inc    %esp
gs
jae    805f45c <_IO_stdin_used+0x50f8>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x61(%edi)
je     805f45d <_IO_stdin_used+0x50f9>
ja     805f45b <_IO_stdin_used+0x50f7>
jns    805f41c <_IO_stdin_used+0x50b8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
gs
jbe    805f471 <_IO_stdin_used+0x510d>
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6c(%esi)
popa
addr16 jae 805f41a <_IO_stdin_used+0x50b6>
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
and    %cl,0x6f(%edi,%ebp,2)
jo     805f487 <_IO_stdin_used+0x5123>
popa
arpl   %bp,0x0(%ebx)
push   %esi
dec    %edx
and    %dl,0x65(%ebx)
jb     805f499 <_IO_stdin_used+0x5135>
popa
insb   (%dx),%es:(%edi)
and    %cl,0x6e(%ecx,%ebp,2)
and    %cl,%gs:0x50(%ecx)
add    %dl,0x4a(%esi)
and    %dh,(%esi)
sub    $0x20746962,%eax
push   %ebx
gs
jb     805f4b1 <_IO_stdin_used+0x514d>
popa
insb   (%dx),%es:(%edi)
and    %cl,0x6e(%ecx,%ebp,2)
and    %cl,%gs:0x50(%ecx)
add    %al,0x64(%ecx)
popa
jo     805f4cc <_IO_stdin_used+0x5168>
imul   $0x72655320,0x65(%esi),%esi
imul   $0x6e694c20,0x6c(%ecx),%esp
and    %cl,%gs:0x50(%ecx)
add    %al,0x74(%ebp)
push   $0x656e7265
je     805f474 <_IO_stdin_used+0x5110>
dec    %eax
dec    %ecx
push   %eax
push   %eax
dec    %ecx
add    %ah,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     805f4e9 <_IO_stdin_used+0x5185>
arpl   %sp,(%eax)
pop    %eax
xor    %cs:0x49504900,%dh
push   %eax
and    %dl,0x6e(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
add    %dl,0x6f(%eax)
imul   $0x2d6f742d,0x74(%esi),%ebp
push   %eax
outsl  %ds:(%esi),(%dx)
imul   $0x6f725020,0x74(%esi),%ebp
je     805f516 <_IO_stdin_used+0x51b2>
arpl   %bp,0x6c(%edi)
add    %ch,(%eax)
inc    %ebx
imul   $0x482d296f,0x63(%ebx),%esi
inc    %esp
dec    %esp
inc    %ebx
add    %cl,0x50(%ecx,%eax,2)
inc    %edx
add    %al,0x52(%ecx)
inc    %ebx
outsb  %ds:(%esi),(%dx)
gs
je     805f4c4 <_IO_stdin_used+0x5160>
inc    %esi
jb     805f528 <_IO_stdin_used+0x51c4>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
popa
jns    805f4f0 <_IO_stdin_used+0x518c>
inc    %esp
dec    %esp
inc    %ebx
dec    %ecx
add    %al,0x72(%esi)
popa
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
popa
jns    805f501 <_IO_stdin_used+0x519d>
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    805f55a <_IO_stdin_used+0x51f6>
and    %al,0x76(%ebp,%eiz,2)
imul   $0x76504900,0x65(%ebx),%esp
ss
sub    $0x492d6e69,%eax
push   %eax
jbe    805f52f <_IO_stdin_used+0x51cb>
add    %cl,0x72(%ecx)
dec    %esp
inc    %ecx
push   %eax
add    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     805f571 <_IO_stdin_used+0x520d>
arpl   %sp,(%eax)
inc    %ebp
push   %ebp
dec    %ecx
sub    $0x3436,%eax
add    %al,(%eax)
inc    %esi
imul   $0x69442072,0x65(%edx),%esp
jae    805f592 <_IO_stdin_used+0x522e>
jb     805f589 <_IO_stdin_used+0x5225>
bound  %esi,0x74(%ebp)
gs and %al,%fs:%gs:0x74(%ecx,%eiz,2)
popa
and    %cl,0x6e(%ecx)
je     805f594 <_IO_stdin_used+0x5230>
jb     805f597 <_IO_stdin_used+0x5233>
popa
arpl   %sp,0x0(%ebp)
imul   $0x6f6c0061,0x64(%edx),%esi
outsl  %ds:(%esi),(%dx)
jo     805f53f <_IO_stdin_used+0x51db>
add    %bl,0x6f(%ecx)
jne    805f564 <_IO_stdin_used+0x5200>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805f56b <_IO_stdin_used+0x5207>
jae    805f5c1 <_IO_stdin_used+0x525d>
popa
jb     805f5c4 <_IO_stdin_used+0x5260>
and    %dl,0x50(%eax)
push   %eax
and    %dh,0x69(%edi)
je     805f5c1 <_IO_stdin_used+0x525d>
and    %dh,0x69(%eax,%ebp,2)
jae    805f57f <_IO_stdin_used+0x521b>
jo     805f5d3 <_IO_stdin_used+0x526f>
outsl  %ds:(%esi),(%dx)
addr16 jb 805f5c6 <_IO_stdin_used+0x5262>
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
jo     805f5db <_IO_stdin_used+0x5277>
jo     805f56d <_IO_stdin_used+0x5209>
jae    805f5d8 <_IO_stdin_used+0x5274>
je     805f571 <_IO_stdin_used+0x520d>
popa
fs
popa
jo     805f5ea <_IO_stdin_used+0x5286>
imul   $0x6c736300,0x65(%esi),%esi
imul   $0x6c736300,0x36(%eax),%esi
imul   $0x6e6e7574,0x0(%eax),%esi
gs
insb   (%dx),%es:(%edi)
add    %ah,0x72(%ecx)
arpl   %bp,0x65(%esi)
je     805f595 <_IO_stdin_used+0x5231>
and    $0x3a783230,%eax
and    $0x3a783230,%eax
and    $0x3a783230,%eax
and    $0x3a783230,%eax
and    $0x3a783230,%eax
and    $0x783230,%eax
gs
je     805f61e <_IO_stdin_used+0x52ba>
gs
jb     805f5b9 <_IO_stdin_used+0x5255>
add    %al,(%eax)
add    %ah,0x3a583230
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x583230,%eax
gs
jne    805f650 <_IO_stdin_used+0x52ec>
ss
xor    $0x0,%al
and    $0x2d583230,%eax
and    $0x2d583230,%eax
and    $0x2d583230,%eax
and    $0x2d583230,%eax
and    $0x2d583230,%eax
and    $0x583230,%eax
fs imul $0x6925,%fs:(%eax),%ax
add    %ah,0x72(%esi)
popa
add    %ah,%fs:0x63(%esp,%ebp,2)
imul   $0x6270616c,(%eax),%eax
add    %ch,0x64(%eax)
insb   (%dx),%es:(%edi)
arpl   %ax,(%eax)
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x3a583230,%eax
and    $0x583230,%eax
push   $0x69707069
add    %ebx,(%ebx)
add    (%ebx),%edi
rolb   $0x0,(%eax,%eax,1)
xchg   %eax,%edi
add    %al,(%eax)
add    %ch,(%eax)
lcall  $0x0,$0x4dcfffe
cmp    %ah,0x1bd8fffe(%eax)
add    %al,(%eax)
push   $0xc4fffea0
pop    %es
add    %al,(%eax)
clc
mov    $0x500fffe,%eax
add    %al,(%eax)
call   1d05f535 <optarg+0x14ffadd1>
add    $0xbe080000,%eax
(bad)
decl   0x5(%eax)
add    %al,(%eax)
clc
sar    $0xff,%dh
addb   $0xfe,0xc2d80000
inc    %esp
add    $0xc8c80000,%eax
(bad)
push   %esp
add    $0xd2a80000,%eax
(bad)
pushl  (%esi,%eax,1)
add    %al,(%eax)
mov    %dl,%ah
(bad)
(bad)
js     805f6b0 <_IO_stdin_used+0x534c>
add    %al,(%eax)
push   $0xb8fffede
push   %es
add    %al,(%eax)
dec    %eax
loopne 805f6b5 <_IO_stdin_used+0x5351>
(bad)
cld
push   %es
add    %al,(%eax)
pop    %eax
jmp    f42f6c0 <optarg+0x73caf5c>
add    %al,(%eax)
cmp    %ch,%bl
(bad)
incl   -0x17fffff9(%eax)
icebp
(bad)
push   %esp
pop    %es
add    %al,(%eax)
or     %dh,%dl
(bad)
decl   (%eax)
or     %al,(%eax)
add    %bh,0x48fffef4(%eax)
or     %al,(%eax)
add    %bh,-0xb(%eax)
(bad)
incl   -0x8480000(%eax,%ecx,1)
(bad)
dec    %eax
or     %al,(%eax)
add    %bh,%al
idiv   %esi
(bad)
fmull  (%eax)
add    %al,(%eax)
js     805f6f7 <_IO_stdin_used+0x5393>
(bad)
jmp    *(%eax)
or     %eax,(%eax)
add    %bh,%al
cli
(bad)
jmp    *0x0(%ecx,%ecx,1)
add    %cl,(%eax)
cld
(bad)
lcall  *-0x3980000(%ecx,%ecx,1)
(bad)
dec    %eax
or     %eax,(%eax)
add    %cl,%al
cld
(bad)
push   %esp
or     %eax,(%eax)
add    %ch,0xcfffefd(%eax)
or     (%eax),%al
add    %bl,-0x2(%eax)
(bad)
call   *0x0(%edx,%ecx,1)
add    %ch,0x78fffefe(%eax)
or     (%eax),%al
add    %bh,%al
(bad)
(bad)
ljmp   *-0x47fffff6(%eax)
add    %bh,%bh
(bad)
call   b005f757 <optarg+0xa7ffaff3>
add    %edi,%edi
call   *0xb(%eax)
add    %al,(%eax)
test   $0x2,%al
(bad)
call   *-0x27fffff5(%eax)
add    %edi,%edi
jmp    *%esp
or     (%eax),%eax
add    %bl,0x4(%eax)
(bad)
call   *(%esp,%ecx,1)
add    %al,(%eax)
cwtl
add    $0xff,%al
pushl  (%esp,%ecx,1)
add    %al,(%eax)
sub    %al,(%esi)
(bad)
decl   0x6680000(%esp,%ecx,1)
(bad)
pushl  -0x17fffff4(%eax)
push   %es
(bad)
call   *%esp
or     $0x0,%al
add    %bl,0x7(%eax)
(bad)
push   %esp
or     $0x0,%al
add    %ch,0x14ffff07(%eax)
or     $0x7f80000,%eax
(bad)
ljmp   *0x8480000(,%ecx,1)
(bad)
decl   0x0(%ebp,%ecx,1)
add    %bl,%al
or     %bh,%bh
jmp    *0x9280000(%ebp,%ecx,1)
(bad)
(bad)
mov    $0x8800000d,%esp
or     %edi,%edi
(bad)
fmull  0x9d80000
(bad)
push   %eax
or     $0xad80000,%eax
(bad)
pushl  (%eax)
push   %cs
add    %al,(%eax)
call   4d05f6e3 <optarg+0x44ffaf7f>
push   %cs
add    %al,(%eax)
cwtl
or     %edi,%edi
(bad)
jl     805f7f0 <_IO_stdin_used+0x548c>
add    %al,(%eax)
test   $0xb,%al
(bad)
call   *-0x27fffff2(%eax)
or     $0xf2cffff,%eax
add    %al,(%eax)
dec    %eax
push   %cs
(bad)
decl   0x0(%edi,%ecx,1)
add    %bl,0x10(%eax)
(bad)
(bad)
mov    $0xc800000f,%esp
adc    %bh,%bh
(bad)
call   9005f81c <optarg+0x87ffb0b8>
adc    $0xff,%al
pushl  (%eax,%edx,1)
add    %al,(%eax)
cwtl
adc    $0xff,%al
decl   0x10(%eax)
add    %al,(%eax)
sbb    %dl,0x1090ffff
add    %al,(%eax)
pop    %eax
push   %ss
(bad)
(bad)
fcoml  (%eax)
add    %al,(%eax)
call   1505f748 <optarg+0xcffafe4>
adc    %eax,(%eax)
add    %ch,(%eax)
sbb    %bh,%bh
ljmp   *(%ecx,%edx,1)
add    %al,(%eax)
dec    %eax
pop    %ds
(bad)
pushl  0x11(%eax)
add    %al,(%eax)
fsubs  (%esi)
(bad)
pushl  0x27380000(%ecx,%edx,1)
(bad)
(bad)
clc
adc    %eax,(%eax)
add    %bh,0x10ffff27(%eax)
adc    (%eax),%al
add    %bh,0x54ffff2d(%eax)
adc    (%eax),%al
add    %bl,(%eax)
cs
(bad)
(bad)
js     805f87c <_IO_stdin_used+0x5518>
add    %al,(%eax)
or     %bh,(%ecx)
(bad)
(bad)
mov    $0x68000012,%esp
dec    %eax
(bad)
incl   (%eax)
adc    (%eax),%eax
add    %cl,%al
dec    %eax
(bad)
incl   0x0(%ebx,%edx,1)
add    %ch,-0x730000b7(%eax)
adc    (%eax),%eax
add    %bh,%al
dec    %ecx
(bad)
jmp    *0x4af80000(%ebx,%edx,1)
(bad)
jmp    *%esp
adc    (%eax),%eax
add    %cl,0x4b(%eax)
(bad)
decl   (%eax)
adc    $0x0,%al
add    %ch,0x4cffff4d(%eax)
adc    $0x0,%al
add    %bh,(%eax)
dec    %edi
(bad)
call   *0x68000014(%eax)
dec    %edi
(bad)
(bad)
mov    $0xb8000014,%esp
push   %eax
(bad)
(bad)
cld
adc    $0x0,%al
add    %ch,(%eax)
push   %ecx
(bad)
incl   0x0(%ebp,%edx,1)
add    %cl,%al
pop    %ecx
(bad)
incl   0x5a480000(%ebp,%edx,1)
(bad)
pushl  0x68000015(%eax)
pop    %ebp
(bad)
(bad)
fcoms  0x70a80000
(bad)
lcall  *(%esi,%edx,1)
add    %al,(%eax)
enter  $0xff70,$0xff
xor    %dl,(%esi)
add    %al,(%eax)
or     %dh,-0x1(%ecx)
call   *0x16(%eax)
add    %al,(%eax)
mov    $0xbcffff72,%eax
push   %ss
add    %al,(%eax)
or     %dh,-0x1(%edi,%edi,8)
in     $0x16,%al
add    %al,(%eax)
pop    %eax
je     805f90e <_IO_stdin_used+0x55aa>
incl   (%edi,%edx,1)
add    %al,(%eax)
sub    %dh,-0x1(%edi)
decl   0x17(%eax)
add    %al,(%eax)
mov    $0x8cffff7e,%eax
pop    %ss
add    %al,(%eax)
dec    %eax
cmp    $0xff,%bh
in     $0x17,%al
add    %al,(%eax)
mov    %al,0x1808ffff(%eax)
add    %al,(%eax)
or     %al,0x182cffff(%ecx)
add    %al,(%eax)
js     805f8bf <_IO_stdin_used+0x555b>
(bad)
decl   0x0(%eax,%ebx,1)
add    %ch,%al
cmp    $0x1868ff,%edi
add    %cl,-0x5300007c(%eax)
sbb    %al,(%eax)
add    %bl,(%eax)
test   %edi,%edi
incl   (%eax)
sbb    %eax,(%eax)
add    %ch,-0x7b(%eax)
(bad)
(bad)
cmp    %bl,(%ecx)
add    %al,(%eax)
or     %al,0x19a4ffff(%edi)
add    %al,(%eax)
enter  $0xff88,$0xff
call   7005f98e <optarg+0x67ffb22a>
mov    %edi,%edi
ljmp   *(%eax)
sbb    (%eax),%al
add    %ch,%al
mov    %edi,%edi
lcall  *0x1a(%eax)
add    %al,(%eax)
pop    %eax
mov    %bh,%bh
pushl  0x1a(%eax)
add    %al,(%eax)
enter  $0xff8a,$0xff
nop
sbb    (%eax),%al
add    %bh,%al
mov    %bh,%bh
jmp    *-0x74780000(%edx,%ebx,1)
(bad)
call   *%esp
sbb    (%eax),%al
add    %cl,%al
mov    %edi,%edi
(bad)
clc
sbb    (%eax),%al
add    %bl,(%eax)
(bad)
(bad)
call   *0x1b(%eax)
add    %al,(%eax)
sub    %cl,0x1b64ffff(%ebp)
add    %al,(%eax)
enter  $0xff8d,$0xff
cwtl
sbb    (%eax),%eax
add    %bl,(%eax)
mov    %edi,%?
(bad)
mov    $0x6800001b,%eax
mov    %edi,%?
(bad)
in     (%dx),%al
sbb    (%eax),%eax
add    %bl,0x8ffff8e(%eax)
sbb    $0x0,%al
add    %cl,%al
mov    %edi,%?
jmp    *(%esp,%ebx,1)
add    %al,(%eax)
js     805f975 <_IO_stdin_used+0x5611>
(bad)
incl   0x1c(%eax)
add    %al,(%eax)
cwtl
(bad)
(bad)
call   *0x0(%esp,%ebx,1)
add    %cl,-0x53000070(%eax)
sbb    $0x0,%al
add    %cl,%al
nop
(bad)
call   *%eax
sbb    $0x0,%al
add    %bh,%al
nop
(bad)
(bad)
call   7005fa29 <optarg+0x67ffb2c5>
xchg   %eax,%ecx
(bad)
decl   (%eax)
sbb    $0x91b80000,%eax
(bad)
ljmp   *(%eax)
sbb    $0x93680000,%eax
(bad)
ljmp   *0x0(%ebp,%ebx,1)
add    %cl,%al
xchg   %eax,%ebx
(bad)
incl   -0x69480000(%ebp,%ebx,1)
(bad)
dec    %eax
sbb    $0x97580000,%eax
(bad)
push   %esp
sbb    $0x98a80000,%eax
(bad)
(bad)
cmp    %bl,(%esi)
add    %al,(%eax)
fcomps 0x1e7cffff(%ebp)
add    %al,(%eax)
test   $0x9f,%al
(bad)
lcall  *0x800001e(%eax)
mov    0x1ed0ffff,%al
add    %al,(%eax)
pop    %eax
mov    0x1ef4ffff,%al
add    %al,(%eax)
dec    %eax
mov    0x1f34ffff,%eax
add    %al,(%eax)
mov    %ah,0x1f48ffff(%ecx)
add    %al,(%eax)
call   6905fa1a <optarg+0x60ffb2b6>
pop    %ds
add    %al,(%eax)
mov    %ah,0x1f94ffff(%edx)
add    %al,(%eax)
enter  $0xffa2,$0xff
lods   %ds:(%esi),%al
pop    %ds
add    %al,(%eax)
fsubs  0x1fc0ffff(%edx)
add    %al,(%eax)
call   dd05fa3b <optarg+0xd4ffb2d7>
pop    %ds
add    %al,(%eax)
cwtl
mov    %eax,0x2004ffff
add    %al,(%eax)
call   2505fa4c <optarg+0x1cffb2e8>
and    %al,(%eax)
add    %ch,%al
movsb  %ds:(%esi),%es:(%edi)
(bad)
lcall  *0x0(%eax,%eiz,1)
add    %bl,-0x5b(%eax)
(bad)
pushl  0x0(%eax,%eiz,1)
add    %bl,-0x5a(%eax)
(bad)
pushl  -0x59280000(%eax,%eiz,1)
(bad)
dec    %esp
and    %al,(%eax)
add    %cl,%al
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
decl   (%ecx,%eiz,1)
add    %al,(%eax)
cmp    %ch,0x2124ffff(%eax)
add    %al,(%eax)
mov    %ch,0x213cffff(%eax)
add    %al,(%eax)
js     805fa8f <_IO_stdin_used+0x572b>
(bad)
(bad)
jl     805fb0b <_IO_stdin_used+0x57a7>
add    %al,(%eax)
call   9d05fa9a <optarg+0x94ffb336>
and    %eax,(%eax)
add    %bl,(%eax)
stos   %eax,%es:(%edi)
(bad)
incl   (%eax)
and    (%eax),%al
add    %bh,-0x54(%eax)
(bad)
ljmp   *0x0(%edx,%eiz,1)
add    %ch,%al
lods   %ds:(%esi),%al
(bad)
.byte 0xff
test   $0x22,%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805fb23 <_IO_stdin_used+0x57bf>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
xchg   %eax,%ebp
(bad)
call   *(%eax)
push   %es
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805fb43 <_IO_stdin_used+0x57df>
js     805fb41 <_IO_stdin_used+0x57dd>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%al
mov    $0xfe,%bl
jmp    *%ebp
add    (%eax),%eax
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dh,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,%ah
mov    $0xfe,%bh
call   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e01,%eax
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,-0x48000000(%eax)
mov    $0x2e6fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x5ff1b7fc(%ebx)
add    (%edx),%al
pop    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %dh,-0x45(%eax)
(bad)
(bad)
fiaddl (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x40d00e46
add    %ecx,%es:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
add    $0x1,%al
add    %al,(%eax)
or     $0xbd,%al
(bad)
jmp    *%edx
add    $0x41000000,%eax
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a72,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    $0x1,%al
add    %al,(%eax)
int3
ret    $0xfffe
(bad)  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x11800e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %ch,-0x2(%esp,%ecx,8)
(bad)
fiaddl (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x40d00e46
add    %ecx,%es:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x8000001,%eax
into
(bad)
(bad)
fisttpll (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x49800e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %ch,-0x25000129(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x40d00e46
add    %ecx,%es:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
cmp    $0x2,%al
add    %al,(%eax)
inc    %esp
fsin
decl   (%edi)
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x47f00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %dl,(%edx,%eiz,8)
(bad)
(bad)
fiaddl (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x40d00e46
add    %ecx,%es:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,%al
add    (%eax),%al
add    %dh,-0x5e00011d(%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x61a00e46
dec    %eax
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
add    $0x3,%al
add    %al,(%eax)
pushf
cwtl
(bad)
decl   0x17(%edi)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa048a03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,(%ebx,%eax,1)
add    %al,(%eax)
in     (%dx),%al
jmp    81ffe48 <optarg+0x19b6e4>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %bh,%al
jmp    aaffe5c <optarg+0x2a9b6f8>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4d00e46
test   $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,0x68000003(%eax)
in     (%dx),%al
(bad)
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
or     %fs:(%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,%ah
add    (%eax),%eax
add    %ch,%ah
in     (%dx),%al
(bad)
(bad)
add    %ds:(%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20d00e46
push   %es
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax,%eax,1)
add    %ch,%al
out    %al,(%dx)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
sbb    $0x4,%al
add    %al,(%eax)
adc    $0xef,%al
(bad)
(bad)
jg     805ff33 <_IO_stdin_used+0x5bcf>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x11800e46
push   %edx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0x4(%eax)
add    %al,(%eax)
push   %eax
lock (bad)
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x41080e0a(%edx),%ch
ret
push   %cs
add    $0x49,%al
or     0xa(%ebx),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0x0,%al
add    %cl,0x101fffe(%ecx,%esi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x41080e0a(%esi),%bl
ret
push   %cs
add    $0x45,%al
or     0xa(%ebx),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     0xa(%ebx),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,%ah
add    $0x0,%al
add    %ah,-0x2(%edx,%esi,8)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x48,(%ebx)
push   %cs
and    %al,(%edx)
inc    %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    $0xf2980000,%eax
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x48,(%ebx)
push   %cs
and    %al,(%edx)
inc    %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
xor    $0x5,%al
add    %al,(%eax)
int3
repnz (bad)
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
fimull (%esi)
add    $0x44,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%eax,1)
add    %dl,0xaafffe(%ebx,%esi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,-0xc040000(%ebp,%eax,1)
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
jne    80600c1 <_IO_stdin_used+0x5d5d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
mov    $0x28000005,%eax
hlt
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
jne    80600e5 <_IO_stdin_used+0x5d81>
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x41,%al
or     0xa(%esi),%eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
call   500600fe <optarg+0x47ffb99a>
hlt
(bad)
(bad)
mov    $0x1,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2d00e46
mov    $0x41140e0a,%ebp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%esp
add    %ch,(%eax)
push   %es
add    %al,(%eax)
enter  $0xfef5,$0xff
lock add %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,0x50000006(%eax)
idiv   %dh
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %dl,%al
push   %es
add    %al,(%eax)
adc    %dh,%bh
(bad)
jmp    *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6f,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
popf
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
and    $0x7,%al
add    %al,(%eax)
in     (%dx),%al
idiv   %esi
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jno    8060257 <_IO_stdin_used+0x5ef3>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
push   %esp
pop    %es
add    %al,(%eax)
cmp    $0xf8,%al
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edx),%ecx
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x0(%edi,%eax,1)
add    %bl,-0x2(%eax,%edi,8)
decl   0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
int3
pop    %es
add    %al,(%eax)
xchg   %eax,%esp
stc
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lock pop %es
add    %al,(%eax)
mov    $0xf9,%al
(bad)
(bad)
jge    8060306 <_IO_stdin_used+0x5fa2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
add    0xe(%eax),%dh
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
adc    $0x8,%al
add    %al,(%eax)
or     $0xfa,%al
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xor    $0x8,%al
add    %al,(%eax)
pop    %esp
cli
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%edx)
push   %cs
add    $0x4b,%al
or     0xe(%edi),%esp
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %cl,0x4bfffe(%edx,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edi
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,0x0(%eax,%ecx,1)
add    %al,%ah
cli
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edx),%ecx
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,-0x50c0000(%eax,%ecx,1)
(bad)
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jne    80603c3 <_IO_stdin_used+0x605f>
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edi),%esp
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x8,%al
add    %al,(%eax)
sub    $0xfb,%al
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
cld
or     %al,(%eax)
add    %ah,-0x2(%ebx,%edi,8)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dl,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0x4(%esi,%ecx,1),%edi
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%ecx,%ecx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sti
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xor    %cl,(%ecx)
add    %al,(%eax)
loopne 806043d <_IO_stdin_used+0x60d9>
(bad)
push   %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x2,0x2c00e46
cwtl
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,0x9(%eax)
add    %al,(%eax)
mov    0xffffefc,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
test   %cl,(%ecx)
add    %al,(%eax)
pushf
cld
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%ebp),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x2ec0000(%ecx,%ecx,1)
(bad)
incl   0x0
add    %al,(%eax)
add    %bl,-0x30000000(%eax)
or     %eax,(%eax)
add    %dl,(%eax)
std
(bad)
ljmp   *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    %eax,0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     (%eax),%al
add    %ah,0x68fffe(%esi,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%edi),%esp
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %cl,-0x10c0000(%edx,%ecx,1)
(bad)
decl   (%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
fisttpll (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cld
or     (%eax),%al
add    %dl,0x69ffff(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
je     8060629 <_IO_stdin_used+0x62c5>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%esp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %cl,0x0(%eax)
add    %al,(%eax)
sub    %cl,(%ebx)
add    %al,(%eax)
fadds  (%eax)
(bad)
(bad)
mov    $0x3,%ebp
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     806068d <_IO_stdin_used+0x6329>
add    %al,(%eax)
dec    %esp
add    $0xff,%al
incl   0x0
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %cl,0x4800000b(%eax)
add    $0xff,%al
(bad)
jg     806069e <_IO_stdin_used+0x633a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%esi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esi
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %dl,%al
or     (%eax),%eax
add    %al,0x3effff04(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    0x43100e0a(%edi),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
sbb    $0xc,%al
add    %al,(%eax)
je     8060733 <_IO_stdin_used+0x63cf>
(bad)
decl   0x1(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0x41080e0a(%edx),%dl
ret
push   %cs
add    $0x49,%al
or     0xa(%edi),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
or     $0x0,%al
add    %dl,%ah
push   %es
(bad)
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
ja     806077d <_IO_stdin_used+0x6419>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ch,0x0(%esp,%ecx,1)
add    %dh,%ah
push   %es
(bad)
lcall  *(%eax)
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x25b00e46
aad    $0x6
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,-0x2ffffff4(%eax)
or     $0x78effff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x23f00e46
sub    (%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%ah
or     $0x0,%al
add    %bl,0x5bffff(,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%esp
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,(%eax)
or     $0x15380000,%eax
(bad)
(bad)
jnp    806084e <_IO_stdin_used+0x64ea>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
ja     8060865 <_IO_stdin_used+0x6501>
add    $0x40,%al
add    %al,(%eax)
add    %dl,0xd(%eax)
add    %al,(%eax)
mov    0xfcffff15,%al
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3d00e46
cwtl
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
or     $0x1b5c0000,%eax
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%ebx),%eax
push   %cs
add    $0x45,%al
or     0xe(%eax),%ebp
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bh,-0x67fffff3(%eax)
sbb    %edi,%edi
(bad)
out    %eax,(%dx)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xdc00e46
cli
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,%ah
or     $0x26440000,%eax
(bad)
lcall  *0xf(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xee00e46
enter  $0xa0b,$0xe
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0xe(%eax)
add    %al,(%eax)
pusha
xor    $0x5bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%esp
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,0x357c0000(%esi,%ecx,1)
(bad)
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
ja     80609bb <_IO_stdin_used+0x6657>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
int3
push   %cs
add    %al,(%eax)
adc    $0x36,%al
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
in     $0xe,%al
add    %al,(%eax)
dec    %esp
ss
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
and    $0xf,%al
add    %al,(%eax)
or     $0x37,%al
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pusha
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %cl,0xf(%eax)
add    %al,(%eax)
cmp    %dh,(%edi)
(bad)
call   *0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4302(%ebx)
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
mov    $0x41080e0a,%ecx
ret
push   %cs
add    $0x46,%al
or     (%edx),%eax
mov    $0xa,%bh
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
movsl  %ds:(%esi),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,0x39540000(%edi,%ecx,1)
(bad)
incl   0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4e00e46
or     $0x140e0a01,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
rorb   (%edi)
add    %al,(%eax)
mov    0x2fffff3a,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cld
sldt   (%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %bh,%bh
decl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb0,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %bh,(%eax,%edx,1)
add    %al,(%eax)
mov    $0x3b,%ah
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
js     8060b73 <_IO_stdin_used+0x680f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   %dl,(%eax)
add    %al,(%eax)
fdivrl (%ebx)
(bad)
call   *0x8(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x3600e43
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,%ah
adc    %al,(%eax)
add    %bh,(%esp,%eax,2)
(bad)
(bad)
jge    8060bda <_IO_stdin_used+0x6876>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dl,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
lock adc %al,(%eax)
add    %dl,0x1fffff44(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0x1(%edi),%esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,(%eax)
adc    %eax,(%eax)
add    %cl,0x3cffff47(%eax)
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2c00e46
fild   (%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %esp
adc    %eax,(%eax)
add    %al,0x1dffff(%edx,%ebx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jo     8060c8f <_IO_stdin_used+0x692b>
add    %al,(%eax)
nop
pop    %edx
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jae    8060ca1 <_IO_stdin_used+0x693d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %dl,-0x4fffffef(%eax)
pop    %edx
(bad)
ljmp   *0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1e,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
cld
adc    %eax,(%eax)
add    %dh,%ah
pop    %ebx
(bad)
decl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
jbe    8060d24 <_IO_stdin_used+0x69c0>
push   %cs
add    $0x47,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
add    $0x41,%al
or     (%edx),%eax
push   $0x42040e0a
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
and    $0x12,%al
add    %al,(%eax)
sbb    $0x5d,%al
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edx),%ecx
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%edx,%edx,1)
add    %cl,-0x1(%ebp,%ebx,2)
call   *%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xbe00e46
push   %ds
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,-0x27ffffee(%eax)
pop    %edi
(bad)
decl   0x41000000(%edi,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x5800e46
call   1c1417c3 <optarg+0x140dd05f>
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,%ah
adc    (%eax),%al
add    %ah,(%edi,%eiz,2)
(bad)
decl   0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
and    $0x13,%al
add    %al,(%eax)
pop    %esp
push   $0x37ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
dec    %eax
adc    (%eax),%eax
add    %bh,0x68(%eax)
(bad)
(bad)
jge    8060e5e <_IO_stdin_used+0x6afa>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
add    0xe(%eax),%dh
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    (%eax),%eax
add    %dl,%ah
push   $0x61ffff
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    %ss,(%ebx)
add    %al,(%eax)
and    $0x69,%al
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
jo     8060f21 <_IO_stdin_used+0x6bbd>
or     (%esi),%cl
add    $0x45,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
test   $0x13,%al
add    %al,(%eax)
js     8060f23 <_IO_stdin_used+0x6bbf>
(bad)
call   *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e46
inc    %ecx
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,%ah
adc    (%eax),%eax
add    %dl,%ah
imul   $0xffffffff,%edi,%edi
(bad)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6b,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
adc    $0x0,%al
add    %dl,(%eax)
insb   (%dx),%es:(%edi)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   $0x78000000
adc    $0x0,%al
add    %ch,(%eax)
insb   (%dx),%es:(%edi)
(bad)
call   *0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x28,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebp)
push   %cs
add    $0x45,%al
or     0x0(%eax),%eax
add    %al,(%eax)
in     $0x14,%al
add    %al,(%eax)
pop    %esp
insl   (%dx),%es:(%edi)
(bad)
(bad)
mov    $0x1,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
imul   $0x41140e0a,(%ecx),%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    %dl,0x6ed80000
(bad)
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4c00e46
ja     8061066 <_IO_stdin_used+0x6d02>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
push   $0x38000015
outsl  %ds:(%esi),(%dx)
(bad)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %esi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cwtl
adc    $0x6f880000,%eax
(bad)
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%esi),%ah
add    $0x1c,%al
add    %al,(%eax)
add    %dh,-0x1fffffeb(%eax)
outsl  %ds:(%esi),(%dx)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
rclb   0x70300000
(bad)
ljmp   *0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
in     $0x15,%al
add    %al,(%eax)
dec    %esp
jo     80610f6 <_IO_stdin_used+0x6d92>
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
adc    $0x16,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
jo     8061126 <_IO_stdin_used+0x6dc2>
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,(%eax)
push   %ss
add    %al,(%eax)
enter  $0xff70,$0xff
dec    %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb1,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
nop
push   %ss
add    %al,(%eax)
(bad)
jno    80611a2 <_IO_stdin_used+0x6e3e>
incl   0x0
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,0x71bc0000(%esi,%edx,1)
(bad)
call   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%esi),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
fcoms  (%esi)
add    %al,(%eax)
sub    %dh,-0x1(%edx)
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%edi),%esp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
clc
push   %ss
add    %al,(%eax)
pop    %eax
jb     806120a <_IO_stdin_used+0x6ea6>
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%edx)
push   %cs
add    $0x4b,%al
or     0xe(%edi),%esp
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %dl,(%edi)
add    %al,(%eax)
pop    %eax
test   %bh,%dh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,(%eax)
add    %al,(%eax)
add    %ch,(%edi,%edx,1)
add    %al,(%eax)
je     80612b0 <_IO_stdin_used+0x6f4c>
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x17(%eax)
add    %al,(%eax)
mov    %dh,-0x1(%edx)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi,%edx,1)
add    %bl,0xacffff(%edx,%esi,2)
add    %al,(%eax)
add    %al,0xe(%esi)
rolb   (%ebx)
add    0x43040e0a(%edi),%dl
or     (%eax),%edx
add    %al,(%eax)
add    %al,0x30000017(%eax)
jae    8061292 <_IO_stdin_used+0x6f2e>
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x733c0000(%edi,%edx,1)
(bad)
(bad)
jmp    80612ad <_IO_stdin_used+0x6f49>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
pop    %ss
add    %al,(%eax)
aam    $0x73
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
adc    %bl,(%eax)
add    %al,(%eax)
lock jae 8061322 <_IO_stdin_used+0x6fbe>
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
sub    %bl,(%eax)
add    %al,(%eax)
or     %dh,-0x1(%edi,%edi,8)
popa
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
dec    %eax
sbb    %al,(%eax)
add    %bl,0x74(%eax)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x18(%eax)
add    %al,(%eax)
mov    %dh,-0x1(%edi,%edi,8)
movsl  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e46
add    %cx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    %al,(%eax)
add    %dh,%ah
jne    80613be <_IO_stdin_used+0x705a>
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
push   %edx
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,%ah
sbb    %al,(%eax)
add    %bh,(%esi,%esi,2)
(bad)
(bad)
in     (%dx),%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3c00e46
push   %ebx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
or     %bl,(%ecx)
add    %al,(%eax)
call   9e061395 <optarg+0x95ffcc31>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
add    $0x49,%al
or     0xa(%ebx),%eax
push   %cs
add    $0x45,%al
or     0xa(%eax),%ebp
push   %cs
add    $0x48,%al
or     0xe(%eax),%ebp
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,(%ecx,%ebx,1)
add    %al,(%eax)
pop    %esp
jns    8061446 <_IO_stdin_used+0x70e2>
decl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e46
or     %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0x19(%eax)
add    %al,(%eax)
push   $0x25ffff7a
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
fildl  (%edx,%ecx,1)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    $0x54000019,%esp
jg     80614ce <_IO_stdin_used+0x716a>
dec    %esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%ebx)
enter  $0xe01,$0x4
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
fcomps (%ecx)
add    %al,(%eax)
or     %al,0x57ffff(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
sbb    (%eax),%al
add    %dh,(%eax)
cmp    $0x47ff,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
jne    806153d <_IO_stdin_used+0x71d9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x1a,%al
add    %al,(%eax)
pop    %esp
cmp    $0xeaff,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd1,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
je     806159c <_IO_stdin_used+0x7238>
add    %al,(%eax)
or     $0x82,%al
(bad)
pushl  0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    %bl,(%edx)
add    %al,(%eax)
cmp    %al,0x5bffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%edi),%dl
add    $0x30,%al
add    %al,(%eax)
add    %ah,-0x7fffffe6(%eax)
(bad)
(bad)
call   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%esi),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0x1a
add    %al,(%eax)
in     (%dx),%al
(bad)
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
sbb    (%eax),%al
add    %dl,(%ebx,%eax,4)
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    (%eax),%eax
add    %dl,(%eax)
cmp    $0xffffffff,%edi
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x1b,%al
add    %al,(%eax)
or     $0x83,%al
(bad)
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa640204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
inc    %esp
sbb    (%eax),%eax
add    %cl,0x43ffff(%ebx,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
sbb    (%eax),%eax
add    %al,%ah
cmp    $0xffffffff,%edi
cmc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
pushf
sbb    (%eax),%eax
add    %al,0x6bffff(%esp,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%edi),%ah
add    $0x3c,%al
add    %al,(%eax)
add    %dh,-0x7b240000(%ebx,%ebx,1)
(bad)
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
hlt
sbb    (%eax),%eax
add    %bl,0x7bffff(%ebp,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
push   %eax
add    0xe(%edi),%dh
add    $0x3c,%al
add    %al,(%eax)
add    %cl,(%esp,%ebx,1)
add    %al,(%eax)
add    $0x86,%al
(bad)
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
dec    %esp
sbb    $0x0,%al
add    %dh,0x6bffff(%esi,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%edi),%ah
add    $0x14,%al
add    %al,(%eax)
add    %ah,0x0(%esp,%ebx,1)
add    %cl,(%edi,%eax,4)
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
jl     80617a6 <_IO_stdin_used+0x7442>
add    %al,(%eax)
inc    %esp
xchg   %edi,%edi
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x2200e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
mov    $0xf400001c,%esp
xchg   %edi,%edi
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
add    0xe(%edi),%bl
add    $0x68,%al
add    %al,(%eax)
add    %dl,%ah
sbb    $0x0,%al
add    %cl,-0x1(%eax,%ecx,4)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
inc    %eax
sbb    $0x89100000,%eax
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8061877 <_IO_stdin_used+0x7513>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    80618ae <_IO_stdin_used+0x754a>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,-0x75fc0000(%ebp,%ebx,1)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,%al
sbb    $0x8a380000,%eax
(bad)
incl   (%edx)
.byte 0x10
scas   %es:(%edi),%eax
add    $0x8,%al
lock scas %es:(%edi),%al
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
inc    %esp
nop
add    $0x8,%al
or     $0x34000000,%eax
mov    %eax,0x190805
add    %al,(%eax)
or     %ch,(%edi)
push   %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x2f,%al
push   %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
sub    $0x88,%al
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %bl,%ah
addl   $0xa,(%eax,%ecx,1)
int    $0x3
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%esi)
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,0x4(%ebp,%ecx,4)
or     %dl,(%ecx)
add    %al,(%eax)
add    %ah,0x120804(,%ecx,4)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x3c(%edi)
mov    %es,(%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x6(%edi)
mov    (%eax,%ecx,1),%eax
add    %al,(%eax)
adc    $0x2f,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x69f7fb70(%esi)
nop
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    8062fdb <_IO_stdin_used+0x8c77>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    806301c <_IO_stdin_used+0x8cb8>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    806305d <_IO_stdin_used+0x8cf9>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    806309e <_IO_stdin_used+0x8d3a>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    80630df <_IO_stdin_used+0x8d7b>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    8063120 <_IO_stdin_used+0x8dbc>
add    $0x8,%al
imul   $0x0,0x805(%edi),%esi
00
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
fdivl  0x805(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
test   %dh,%ch
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,%ah
mov    $0x5,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%esi)
fildl  0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,0x5(%eax,%edi,4)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,(%ecx)
mov    $0x5,%dl
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%bl
fildl  0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,-0x48(%ebx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,%ch
mov    $0x5,%ah
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,-0x48(%edi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,-0x48(%ebp)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
jne    806323a <_IO_stdin_used+0x8ed6>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
cmpb   $0x0,0x805(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
or     %al,%ah
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
out    %al,(%dx)
in     (%dx),%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebp)
add    %al,(%eax)
add    %cl,%bl
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
fwait
mov    $0x5,%bl
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %cl,(%esp,%esi,4)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
push   %ebp
mov    $0x5,%ah
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
cmc
mov    $0x5,%ah
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
test   %edi,0x805(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %cl,0x805b8(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
xchg   %eax,%ebx
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %bl,0x805b8(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %ch,0x805(%eax,%edi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     806336e <_IO_stdin_used+0x900a>
add    %al,(%eax)
mov    $0xb8,%ch
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
mov    $0x805b8,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
enter  $0x5b8,$0x8
push   %edi
add    %al,(%eax)
add    %cl,%ch
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,%ch
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %eax,(%eax)
add    %al,(%eax)
jecxz  806337a <_IO_stdin_used+0x9016>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
icebp
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    (%eax),%eax
add    %al,(%eax)
(bad)
mov    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %cl,0x805e0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
or     %bh,0x805(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %cl,(%ecx,%edi,4)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
loopne 80633e7 <_IO_stdin_used+0x9083>
add    $0x5b97608,%eax
or     %dl,-0x53f7fa47(%eax)
mov    $0x3c400805,%esp
push   %es
or     %cl,(%eax)
add    %eax,(%eax)
add    %cl,-0x434ff7fa(%esi,%edx,2)
add    $0x6398008,%eax
or     %dh,0x0(%ecx,%eax,1)
add    %cl,-0x4349f7fa(%esi,%edx,2)
add    $0x6384008,%eax
or     %dh,(%eax)
add    %al,(%eax)
add    %al,-0x4344f7fa(%esi,%edx,2)
add    $0x638c008,%eax
or     %ch,-0x78000000(%eax)
push   %esi
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,%al
mov    $0x3d600805,%esp
push   %es
or     %ah,%ah
add    %al,(%eax)
add    %cl,-0x433cf7fa(%esi,%edx,2)
add    $0x63b0008,%eax
or     %bh,(%eax)
add    %eax,(%eax)
add    %cl,-0x4357f7fa(%esi,%edx,2)
add    $0x638c008,%eax
or     %ch,-0x78000000(%eax)
push   %esi
push   %es
or     %cl,%al
mov    $0x38800805,%esp
push   %es
or     %dh,(%eax)
add    %al,(%eax)
add    %al,-0x4333f7fa(%esi,%edx,2)
add    $0x6350008,%eax
or     %ah,(%ebx,%eax,1)
add    %al,(%eax)
mov    %dl,0x6(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%bl
mov    $0xbce20805,%esp
add    $0x108,%eax
add    %dh,%dh
mov    $0xbd050805,%esp
add    $0x108,%eax
add    %bl,0x2c0805bd
into
add    $0x108,%eax
add    %ch,(%esi)
mov    $0xce4c0805,%ebp
add    $0x108,%eax
add    %bh,-0x317ff7fb(,%edi,4)
add    $0x108,%eax
add    %cl,-0x43(%eax)
add    $0x5cec808,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,-0x43(%edx)
add    $0x5cef008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %bl,0x5(%ebp,%edi,4)
or     %bh,(%edi,%ecx,8)
add    $0x108,%eax
add    %ch,-0x43(%ebp)
add    $0x5cf7408,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %bh,-0x43(%esi)
add    $0x5cfa808,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,-0x27f7fa43(%ecx)
iret
add    $0x108,%eax
add    %cl,-0x2ffbf7fb(%ebp,%edi,4)
add    $0x108,%eax
add    %dl,0x340805bd(%ebp)
rolb   0x108
add    %ah,0x6c0805bd(%ecx)
rolb   0x108
add    %ch,-0x2f5bf7fb(%ebp,%edi,4)
add    $0x108,%eax
add    %dh,-0x3df7fa43(%esi)
mov    $0x10805,%ebp
add    %al,(%eax)
xlat   %ds:(%ebx)
mov    $0xd0e80805,%ebp
add    $0x108,%eax
add    %ch,%al
mov    $0xd1240805,%ebp
add    $0x108,%eax
add    %dh,%bh
mov    $0xd14c0805,%ebp
add    $0x108,%eax
add    %al,(%edi)
mov    $0xd1800805,%esi
add    $0x108,%eax
add    %dl,(%ebx)
mov    $0xd1a40805,%esi
add    $0x108,%eax
add    %ah,(%eax)
mov    $0xd1d40805,%esi
add    $0x108,%eax
add    %bh,(%ecx)
mov    $0xd2080805,%esi
add    $0x108,%eax
add    %dl,-0x42(%ebx)
add    $0x5d24408,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %ah,-0x42(%esi)
add    $0x5be7008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %cl,-0x2d97f7fb(%esi,%edi,4)
add    $0x108,%eax
add    %bl,-0x2d5ff7fb(%esi,%edi,4)
add    $0x108,%eax
add    %ch,-0x27f7fa42(%edx)
rolb   %cl,0x108
add    %dh,-0x3ff7fa42(%esi)
mov    $0x10805,%esi
add    %al,(%eax)
fnstsw -0x2ceff7fb(%esi)
add    $0x108,%eax
add    %ch,%ch
mov    $0xd34c0805,%esi
add    $0x108,%eax
add    %bh,%ch
mov    $0xbf0d0805,%esi
add    $0x108,%eax
add    %ch,(%ecx)
mov    $0xd3900805,%edi
add    $0x108,%eax
add    %bh,(%eax)
mov    $0xd3b80805,%edi
add    $0x108,%eax
add    %al,-0x41(%edi)
add    $0x5d3e008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,0x5(%edi,%edi,4)
or     %dl,(%eax)
aam    $0x5
or     %al,(%ecx)
add    %al,(%eax)
add    %ah,-0x41(%ebx)
add    $0x5d44808,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %ch,-0x41(%edi)
add    $0x5d48408,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %bh,-0x41(%esi)
add    $0x5d4c408,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,0x40805bf(%ebx)
aad    $0x5
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,-0x55f7fa41(%edi)
mov    $0x10805,%edi
add    %al,(%eax)
mov    $0x4c0805bf,%esi
aad    $0x5
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,%dh
mov    $0xd5740805,%edi
add    $0x108,%eax
add    %bl,%dh
mov    $0xbfee0805,%edi
add    $0x108,%eax
add    %cl,(%eax)
rolb   $0x8,0x5c01708
add    %eax,(%eax)
add    %al,(%eax)
sub    %eax,%eax
add    $0x5c03d08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,0x5(%eax,%eax,8)
or     %ch,-0x40(%eax)
add    $0x108,%eax
add    %al,-0x6ef7fa40(%ebp)
rolb   $0x0,0x108
cmpsl  %es:(%edi),%ds:(%esi)
rolb   $0x8,0x5d59408
add    %eax,(%eax)
add    %al,(%eax)
mov    $0xd10805c0,%ebp
rolb   $0x0,0x108
in     (%dx),%al
rolb   $0x8,0x5d5b408
add    %eax,(%eax)
add    %al,(%eax)
inc    %eax
add    $0x5d5f008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,(%edi)
roll   $0x8,0x5d63008
add    %eax,(%eax)
add    %al,(%eax)
pop    %ds
roll   $0x8,0x5d65008
add    %eax,(%eax)
add    %al,(%eax)
das
roll   $0x8,0x5c13c08
add    %eax,(%eax)
add    %al,(%eax)
dec    %edi
roll   $0x8,0x5d67808
add    %eax,(%eax)
add    %al,(%eax)
pop    %edi
roll   $0x8,0x5d6a408
add    %eax,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
roll   $0x8,0x5d6d008
add    %eax,(%eax)
add    %al,(%eax)
jl     806377b <_IO_stdin_used+0x9417>
add    $0x5d6fc08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,-0x28d3f7fb(%ecx,%eax,8)
add    $0x108,%eax
add    %bl,0x5c0805c1(%ebp)
xlat   %ds:(%ebx)
add    $0x108,%eax
add    %ch,-0x7bf7fa3f(%edi)
xlat   %ds:(%ebx)
add    $0x108,%eax
add    %al,%al
roll   $0x8,0x5d7c008
add    %eax,(%eax)
add    %al,(%eax)
iret
roll   $0x8,0x5d7f008
add    %eax,(%eax)
add    %al,(%eax)
loop   80637c3 <_IO_stdin_used+0x945f>
add    $0x5c1ea08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
ret    $0x805
adc    %bl,%al
add    $0x108,%eax
add    %cl,(%edi)
ret    $0x805
dec    %esp
fadds  0x108
add    %ah,(%ebx)
ret    $0x805
xor    %edx,%eax
add    $0x8,%eax
add    %al,-0x3e(%edi)
add    $0x5d87408,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x3e(%ebx)
add    $0x5c26008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,-0x3e(%ecx)
add    $0x5c28a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edi)
ret    $0x805
xor    %edx,%eax
add    $0x8,%eax
add    %cl,-0x3e(%ebx)
add    $0x5d87408,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x3e(%edi)
add    $0x5c26008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,-0x3e(%ebp)
add    $0x5c28a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bl,-0x58f7fa3e(%edx)
ret    $0x805
add    $0xbb000100,%eax
ret    $0x805
or     %al,%dh
add    $0x8,%eax
add    %al,%dl
ret    $0x805
or     %al,%dh
add    $0x8,%eax
add    %cl,%cl
ret    $0x805
or     %al,%dh
add    $0x8,%eax
add    %dl,%cl
ret    $0x805
pushf
fadds  0x8
add    %bl,%ch
ret    $0x805
mov    $0x805d8,%esp
add    %al,(%eax)
add    %ch,%dl
ret    $0x805
test   $0x805,%edx
add    %al,(%eax)
adc    $0x210805c3,%eax
ret
add    $0x8,%eax
add    %bh,(%edi)
ret
add    $0x5c34908,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x5(%ebx,%eax,8)
or     %ch,-0x3d(%ebx)
add    $0x8,%eax
add    %al,-0x77f7fa3d(%eax)
ret
add    $0x8,%eax
add    %bl,-0x56f7fa3d(%ebp)
ret
add    $0x8,%eax
add    %al,%dl
ret
add    $0x5c3c908,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%bl
ret
add    $0x5c3eb08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%dl
ret
add    $0x5c40608,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
les    0x5c42e08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x5(%esp,%eax,8)
or     %ah,-0x3c(%eax)
add    $0x2000308,%eax
add    %bh,0x5(%esp,%eax,8)
or     %cl,0x30805c4(%esi)
add    %al,(%edx)
add    %ah,-0x23f7fa3c(%edx)
fadds  0x2000308
add    %dh,-0x38f7fa3c(%ebx)
les    0x2000308,%eax
add    %bl,%ch
les    0x5c4ea08,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %bh,%ah
les    0x5c50f08,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %ah,(%eax)
lds    0x5c53808,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %dl,-0x3b(%ecx)
add    $0x5c56b08,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %al,-0x5ef7fa3b(%esi)
lds    0x2000308,%eax
add    %bh,-0x2cf7fa3b(%ebp)
lds    0x2000308,%eax
add    %ah,%bh
lds    0x5c60308,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %bl,(%esi,%eax,8)
add    $0x5c63408,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %cl,-0x3a(%ebx)
add    $0x5c66908,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %al,-0x69f7fa3a(%ebp)
movb   $0x0,0x2000308
movsb  %ds:(%esi),%es:(%edi)
movb   $0x8,0x5c6b108
add    %al,(%eax)
add    %al,(%eax)
mov    $0xc4600805,%esi
add    $0x2000408,%eax
add    %bl,%ah
movb   $0x8,0x5c48e08
add    $0x0,%al
add    (%eax),%al
out    %eax,(%dx)
movb   $0x8,0x5c70108
add    $0x0,%al
add    (%eax),%al
pop    %ds
movl   $0x2000408,0x5c4c708
02
add    %dh,(%edi,%eax,8)
add    $0x5c4ea08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
inc    %edx
movl   $0x2000408,0x5c50f08
02
add    %dl,-0x39(%esi)
add    $0x5c53808,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
outsl  %ds:(%esi),(%dx)
movl   $0x2000408,0x5c56b08
02
add    %cl,-0x5ef7fa39(%edx)
lds    0x2000408,%eax
add    %ah,-0x2cf7fa39(%esi)
lds    0x2000408,%eax
add    %bh,0x30805c7(%ebp)
movb   $0x0,0x2000408
fcmovnb %st(7),%st
add    $0x5c7f408,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
add    %bl,%cl
add    $0x5c80a08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
es
enter  $0x805,$0x96
movb   $0x0,0x2000408
inc    %ebx
add    $0x5c40608,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x3e(%edi)
add    $0x5c42e08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x3c(%ecx)
add    $0x5c46008,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %ah,0x380805c4(%edi)
enter  $0x805,$0x3
add    %al,(%edx)
add    %cl,-0x38(%edi)
add    $0x5c85b08,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %dh,-0x38(%eax)
add    $0x5c87d08,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %cl,-0x69f7fa3a(%edx)
movb   $0x0,0x2000308
loop   8063b1a <_IO_stdin_used+0x97b6>
add    $0x5c4ea08,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %dl,0xf0805c8(%ecx)
lds    0x2000308,%eax
add    %bl,-0x3756f7fb(%eax,%ecx,8)
add    $0x2000308,%eax
add    %bh,-0x30f7fa38(%edi)
enter  $0x805,$0x3
add    %al,(%edx)
add    %ah,%bl
enter  $0x805,$0xef
enter  $0x805,$0x3
add    %al,(%edx)
add    %cl,(%eax)
leave
add    $0x5c91708,%eax
or     %al,(%ebx)
add    %al,(%edx)
add    %ch,-0x4ef7fa3a(%ecx)
movb   $0x0,0x8
xor    %cl,%cl
add    $0x5c93a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %cl,%ah
movb   $0x8,0x5c46008
add    $0x0,%al
add    (%eax),%al
hlt
movb   $0x8,0x5c70d08
add    $0x0,%al
add    (%eax),%al
push   %edx
leave
add    $0x5c85b08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
pop    %edi
leave
add    $0x5c96d08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
sub    %eax,%ecx
add    $0x5c97f08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
cmp    %eax,%edi
add    $0x5c98c08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
popf
leave
add    $0x5c50f08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
test   $0xb70805c9,%eax
leave
add    $0x2000408,%eax
add    %cl,%dh
leave
add    $0x5c9df08,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
cmc
leave
add    $0x5ca0208,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
sbb    $0xca,%al
add    $0x5c91708,%eax
or     %al,(%eax,%eax,1)
add    (%eax),%al
sub    $0xca,%al
add    $0x5ca3a08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x5(%edx,%ecx,8)
or     %ah,-0x36(%ebx)
add    $0x108,%eax
add    %bh,-0x36(%ebx)
add    $0x5ca8d08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %ah,0x200805ca(%ebp)
flds   0x108
add    %dh,-0x3cf7fa36(%ebx)
lret   $0x805
add    %eax,(%eax)
add    %al,(%eax)
(bad)
add    $0x5caf008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,(%ecx)
lret
add    $0x5cb1c08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dh,(%esi)
lret
add    $0x5cb4408,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x35(%edx)
add    $0x5cb7008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %cl,-0x5df7fa35(%esi)
lret
add    $0x8,%eax
add    %ch,-0x41f7fa35(%edi)
lret
add    $0x8,%eax
add    %dl,%bl
lret
add    $0x5cbe208,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %bh,%dh
lret
add    $0x5d94408,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %cl,0x680805cc
flds   0x108
add    %bl,0x2b0805cc
int3
add    $0x108,%eax
add    %al,0x5(%esp,%ecx,8)
or     %dl,-0x34(%eax)
add    $0x108,%eax
add    %ch,-0x34(%edx)
add    $0x5cc7808,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,-0x5ff7fa34(%ebp)
int3
add    $0x108,%eax
add    %bh,-0x39f7fa34(%ecx)
int3
add    $0x108,%eax
add    %bl,%dl
int3
add    $0x5cce908,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %bh,%dh
int3
add    $0x5cd0d08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %ch,(%ebx)
int    $0x5
or     %bh,(%ebx)
int    $0x5
or     %al,(%ecx)
add    %al,(%eax)
add    %bl,-0x33(%ecx)
add    $0x5cd6408,%eax
or     %al,(%edx)
add    %al,(%ecx)
add    %dh,-0x33(%ebp)
add    $0x5cd8008,%eax
or     %al,(%eax)
add    %al,(%ecx)
add    %ch,(%edi)
lret   $0x805
cmp    %dl,%cl
add    $0x8,%eax
add    %dl,-0x36(%edi)
add    $0x5ca6308,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dh,-0x3cf7fa36(%esi)
lret   $0x805
add    %eax,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
lret
add    $0x5cba208,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%al
lret   $0x805
lock lret $0x805
add    %eax,(%eax)
add    %al,(%eax)
cmp    %ecx,%ebx
add    $0x5cb4408,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x35(%ebp)
add    $0x5cb7008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dh,-0x41f7fa35(%edx)
lret
add    $0x8,%eax
add    %dl,%dh
lret
add    $0x5cbe208,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
int3
add    $0x5d94408,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
int3
add    $0x5d96808,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
int3
add    $0x5cc2b08,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,-0x34(%edi)
add    $0x5cc5008,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %ch,-0x34(%ebp)
add    $0x5cc7808,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %bl,-0x5ff7fa34(%eax)
int3
add    $0x108,%eax
add    %bh,-0x3339f7fb(%esp,%ecx,8)
add    $0x108,%eax
add    %bl,%ch
int3
add    $0x5cce908,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edx
int    $0x5
or     %cl,(%eax)
add    %al,(%eax)
add    %ch,0x805cd(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x43(%eax)
push   %es
or     %ah,%al
inc    %eax
push   %es
or     %ah,(%eax)
inc    %ecx
push   %es
or     %al,(%eax)
inc    %eax
push   %es
or     %al,0x42(%eax)
push   %es
or     %ah,0x80642(%eax)
inc    %edx
push   %es
or     %ah,0x40(%eax)
push   %es
or     %ah,-0x5ff7f9c0(%eax)
aas
push   %es
or     %ah,0x20080643(%eax)
inc    %ebx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,-0x49(%ecx)
add    $0x5b76908,%eax
or     %dh,-0xa7bf7fa(%esi,%edx,2)
add    $0x5b23108,%eax
or     %ch,0x7d080656(%eax)
cmc
add    $0x5dbcb08,%eax
or     %ah,-0x4903f7fa(%esi,%edx,2)
add    $0x5b6fc08,%eax
or     %bl,-0x24e9f7fa(%esi,%edx,2)
add    $0x5b86308,%eax
or     %ah,0x5c080656(%eax)
mov    $0xb85c0805,%eax
add    $0x656ac08,%eax
or     %dh,(%ecx)
mov    $0x5,%dl
or     %dh,(%ecx)
mov    $0x5,%dl
or     %ch,-0x34f7f9aa(%eax)
fildl  0x5dbcb08
or     %ah,-0x479cf7fa(%esi,%edx,2)
add    $0x5b86308,%eax
or     %ah,-0xaf7f9aa(%eax)
mov    $0x5,%ah
or     %dh,%ch
mov    $0x5,%ah
or     %dh,0x67080656(%eax)
mov    $0xb2310805,%eax
add    $0x656a808,%eax
or     %ch,(%esi)
fildl  0x5f0bd08
or     %dl,-0x4823f7fa(%esi,%edx,2)
add    $0x5b7dc08,%eax
or     %ah,0x4c(%eax)
push   %es
or     %al,%bl
fiaddl 0x5dac308
or     %bl,0x80656(%eax)
add    %al,(%eax)
add    %al,%bl
fiaddl 0x8
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
cli
add    $0x8,%al
mov    0x804fa,%al
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
pushl  0x805da(%ebp)
add    %al,(%eax)
add    %al,%bl
fiaddl 0x8
add    %cl,0x40000003
add    %al,(%eax)
add    %ah,(%eax)
cli
add    $0x8,%al
lock clc
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
imul   $0x30000,0x805(%edi),%esi
00
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %dh,-0x5ff7fb04(%eax)
std
add    $0x8,%al
loopne 8064014 <_IO_stdin_used+0x9cb0>
add    $0x8,%al
xor    %bh,%ch
add    $0x8,%al
(bad)
(bad)
(bad)
lcall  *-0x49(%edi)
add    $0x8,%eax
add    %ch,-0x49(%ecx)
add    $0x8,%eax
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,0x700804fc(%eax)
cld
add    $0x8,%al
arpl   %di,0x805(%eax)
add    %al,(%eax)
add    $0x0,%eax
add    %al,(%eax)
add    %dh,%al
std
add    $0x8,%al
inc    %eax
incb   (%eax,%ecx,1)
(bad)
(bad)
(bad)
decl   (%ebx,%ebx,8)
add    $0x8,%eax
add    %bh,0x805f0(%ebp)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
incl   (%eax,%ecx,1)
jo     80640b5 <_IO_stdin_used+0x9d51>
add    $0x8,%al
nop
incb   (%eax,%ecx,1)
(bad)
(bad)
(bad)
jmp    *(%eax)
fildl  0x8
add    %dh,(%ecx)
mov    $0x5,%dl
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%ecx)
add    $0x5042008,%eax
or     %dl,-0x1ff7fafc(%eax)
add    %eax,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,0xffffff08
incl   (%eax)
add    %al,(%eax)
add    %cl,%bl
fildl  0x8
add    %cl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
push   %cs
add    $0x50ca008,%eax
or     %ah,0xb(%eax)
add    $0x50ad008,%eax
or     %ah,(%eax)
sbb    $0x24000805,%eax
add    $0x8,%eax
add    %bh,%bh
(bad)
(bad)
(bad)
mov    $0xff0805db,%esi
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,-0x18(%ecx)
add    $0x8,%eax
add    %ch,-0x18(%ecx)
add    $0x5e87108,%eax
or     %dh,-0x18(%ebp)
add    $0x8,%eax
add    %bh,-0x18(%edx)
add    $0x5e88208,%eax
or     %al,0x805e8(%esi)
add    %al,(%eax)
add    %cl,-0x71f7fa18(%edx)
call   f09a49bf <optarg+0xe894025b>
add    $0x8,%eax
add    %bl,0x805e8(%ecx)
add    %al,(%eax)
add    %ah,0x805e8(%edx)
add    %al,(%eax)
add    %ch,0x805(%eax,%ebp,8)
add    %al,(%eax)
cld
mov    $0x5,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x5(%ecx)
or     %dl,0x6a(%eax)
add    $0x5675008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
push   %edx
mov    $0x5,%dh
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x5(%eax,%edi,4)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dl,%al
jbe    8064258 <_IO_stdin_used+0x9ef4>
or     %al,%al
ja     806425c <_IO_stdin_used+0x9ef8>
or     %al,(%eax)
jne    8064260 <_IO_stdin_used+0x9efc>
or     %dl,0x77(%eax)
add    $0x8,%eax
add    %bh,%bh
(bad)
(bad)
(bad)
cld
mov    $0x5,%bh
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x5(%eax,%edi,4)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dl,%al
jbe    8064298 <_IO_stdin_used+0x9f34>
or     %dl,0x80576(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,-0x10(%edi)
add    $0x8,%eax
add    %cl,(%ebx)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
addb   $0x8,0x5811008
inc    %eax
addl   $0x8,0x580a008
00
add    %bh,%bh
(bad)
(bad)
call   *-0x10(%ebp)
add    $0x8,%eax
add    %bl,-0x10(%edi)
add    $0x8,%eax
add    %cl,(%esi)
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
addb   $0x8,0x581d008
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,0x805f0(%ecx)
add    %al,(%eax)
add    %dh,-0x7d(%eax)
add    $0x5846008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%ch
mov    $0x5,%ah
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,-0x7d(%eax)
add    $0x5841008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
jmp    8064346 <_IO_stdin_used+0x9fe2>
add    $0x8,%eax
add    %bl,%ah
mov    $0x5,%bh
or     %al,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
xchg   %eax,0x587b008
or     %ah,%al
test   %eax,0x5874008
or     %al,(%eax)
mov    %al,0x58d0008
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
call   *%edx
mov    $0x5,%bh
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%ah
mov    $0x5,%bh
or     %al,(%eax)
add    %al,(%eax)
add    %cl,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
xchg   %eax,0x586d008
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,%al
inc    %esp
push   %es
or     %al,%al
inc    %ebp
push   %es
or     %ah,-0x7ff7f9bb(%eax)
inc    %ebp
push   %es
or     %ah,0x45(%eax)
push   %es
or     %al,0x45(%eax)
push   %es
or     %ah,%al
aas
push   %es
or     %al,0x46(%eax)
push   %es
or     %al,0x40(%eax)
push   %es
or     %al,-0x1ff7f9be(%eax)
inc    %edx
push   %es
or     %ah,%al
inc    %ebp
push   %es
or     %al,(%eax)
inc    %ebp
push   %es
or     %al,(%eax)
inc    %edi
push   %es
or     %ah,%al
inc    %esi
push   %es
or     %al,(%eax)
inc    %esi
push   %es
or     %al,%al
inc    %esi
push   %es
or     %ah,0x20080646(%eax)
inc    %ebp
push   %es
or     %al,0x20080646(%eax)
inc    %edi
push   %es
or     %ah,0x20080644(%eax)
inc    %esi
push   %es
or     %ah,%al
inc    %ebx
push   %es
or     %ah,0x46(%eax)
push   %es
or     %ah,%al
inc    %esp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,0x805f5
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%eax
add    %al,(%edx)
add    %al,(%eax)
add    %dl,%al
xchg   %eax,%edi
add    $0x8,%eax
add    %bh,(%edx)
cmc
add    $0x8,%eax
add    %al,(%ebx,%eax,1)
add    %al,(%eax)
mov    $0x805f0,%ecx
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %dh,(%eax)
cwtl
add    $0x8,%eax
add    %ch,-0xb(%ecx)
add    $0x8,%eax
add    %al,(%eax)
add    (%eax),%al
add    %dl,%al
cwtl
add    $0x8,%eax
add    %ch,-0xb(%ebp)
add    $0x8,%eax
add    %cl,(%eax)
add    (%eax),%eax
add    %dh,-0xb(%ecx)
add    $0x8,%eax
add    %cl,(%eax)
add    %eax,(%eax)
add    %bh,-0xb(%edx)
add    $0x8,%eax
add    %al,(%ebx)
add    %eax,(%eax)
add    %bh,-0xb(%ebx)
add    $0x8,%eax
add    %al,(%edx)
add    %eax,(%eax)
add    %al,0x805f5(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %eax,(%eax)
add    %al,0x805f5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,0x805f5(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
cltd
add    $0x5992008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x805f5(%esi)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,%al
cltd
add    $0x5993008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x805f0(%ebp)
add    %al,(%eax)
add    %cl,(%esi)
add    (%eax),%eax
add    %dh,0x805f5(%ebx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dh,(%eax)
fwait
add    $0x59a3008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%ah
cmc
add    $0x8,%eax
add    %bl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,-0x5ff7fa64(%eax)
fwait
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
testb  $0x0,0x8
push   %es
add    (%eax),%eax
add    %al,(%esi)
add    %al,(%eax)
add    %dl,(%eax)
sahf
add    $0x59d2008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
testb  $0x0,0x8
add    (%ebx),%al
add    %al,(%eax)
adc    $0x805f6,%eax
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x8059e(%eax)
add    %al,(%eax)
add    %bl,(%edx)
testb  $0x0,0x8
add    $0x2,%al
add    %al,(%eax)
pop    %ds
testb  $0x0,0x8
add    %eax,(%edx)
add    %al,(%eax)
inc    %edx
testb  $0x0,0x8
or     $0x3,%al
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,%al
lahf
add    $0x59ed008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
gs
je     77 <__ctype_toupper_loc@plt-0x8049009>
je     67 <__ctype_toupper_loc@plt-0x8049019>
je     8 <__ctype_toupper_loc@plt-0x8049078>
scas   %es:(%edi),%al
push   %ds
add    $0xe2,%al
