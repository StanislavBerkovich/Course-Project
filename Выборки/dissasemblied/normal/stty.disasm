das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dl,0xea09f47(%eax)
push   %edi
jmp    80481dd <dup2@plt-0xba3>
sbbl   $0x7c,-0x1b8f581e(%ebp)
jge    804815a <dup2@plt-0xc26>
int3
.byte 0x18
.byte 0x7f
add    (%eax),%eax
add    %al,(%eax)
inc    %edx
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%esi)
rorb   $0x24,0x0(%eax)
insl   (%dx),%es:(%edi)
sbb    $0x4212,%eax
add    %al,0x0(%ebx)
add    %al,(%eax)
dec    %edx
add    %al,(%eax)
add    %ch,(%ecx)
sbb    $0x50bc1c8c,%eax
jbe    8048176 <dup2@plt-0xc0a>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804818d <dup2@plt-0xbf3>
dec    %ebx
jecxz  80481a4 <dup2@plt-0xbdc>
xchg   %eax,%esi
mov    0xb3c09789,%al
notl   (%edx)
in     $0x62,%eax
inc    %ecx
cmc
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
cmp    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
das
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jge    804828b <dup2@plt-0xaf5>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%bx,%si)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,%ss:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testb  $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%edx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repz add %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %fs:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ah
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %al,(%eax)
loopne 804868f <dup2@plt-0x6f1>
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,-0x7ffffffe(%edx)
jno    8048634 <dup2@plt-0x74c>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
rolb   $0x0,(%ecx)
add    %al,0x40805(%ecx,%esi,2)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0xa0000002,%ebp
jno    8048654 <dup2@plt-0x72c>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
in     $0x12,%al
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %bl,0x71a00000(%eax,%eax,1)
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %dh,0x2(%ebx)
add    %al,(%eax)
in     $0x71,%al
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,(%edi)
add    (%eax),%al
add    %al,0x4080571(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %cl,0x0(%edi)
add    %al,(%eax)
(bad)
jno    80486a4 <dup2@plt-0x6dc>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
scas   %es:(%edi),%al
add    %eax,(%eax)
add    %ch,%al
jno    80486b4 <dup2@plt-0x6cc>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    804872f <dup2@plt-0x651>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    804873d <dup2@plt-0x643>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    804874a <dup2@plt-0x636>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jo     8048756 <dup2@plt-0x62a>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     804875d <dup2@plt-0x623>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     804876f <dup2@plt-0x611>
outsl  %ds:(%esi),(%dx)
ja     8048761 <dup2@plt-0x61f>
add    %dh,0x74(%ebx)
jb     8048771 <dup2@plt-0x60f>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048774 <dup2@plt-0x60c>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048784 <dup2@plt-0x5fc>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048790 <dup2@plt-0x5f0>
gs
js     8048793 <dup2@plt-0x5ed>
add    %ah,0x72(%ebp)
jb     8048793 <dup2@plt-0x5ed>
jb     8048726 <dup2@plt-0x65a>
pop    %edi
pop    %edi
jae    804879e <dup2@plt-0x5e2>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     804874e <dup2@plt-0x632>
pop    %edi
gs
js     80487bb <dup2@plt-0x5c5>
je     8048754 <dup2@plt-0x62c>
jo     80487c8 <dup2@plt-0x5b8>
outsl  %ds:(%esi),(%dx)
addr16 jb 80487bb <dup2@plt-0x5c5>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    80487e4 <dup2@plt-0x59c>
gs
jb     80487e8 <dup2@plt-0x598>
pop    %edi
popaw
imul   $0x7974635f,0x5f(%eax,%eax,1),%ebp
jo     80487e6 <dup2@plt-0x59a>
pop    %edi
addr16
gs
je     80487e5 <dup2@plt-0x59b>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    80487fe <dup2@plt-0x582>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048791 <dup2@plt-0x5ef>
jae    8048807 <dup2@plt-0x579>
jb     8048809 <dup2@plt-0x577>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x66(%ebx)
jae    8048801 <dup2@plt-0x57f>
je     8048807 <dup2@plt-0x579>
jae    8048810 <dup2@plt-0x570>
gs gs add %ah,%fs:%gs:0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048821 <dup2@plt-0x55f>
jb     804881b <dup2@plt-0x565>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     804881b <dup2@plt-0x565>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048823 <dup2@plt-0x55d>
je     80487c0 <dup2@plt-0x5c0>
arpl   %sp,0x67(%esi)
gs
je     8048835 <dup2@plt-0x54b>
jae    8048838 <dup2@plt-0x548>
gs gs add %bl,%fs:%gs:0x5f(%edi)
gs
jb     8048843 <dup2@plt-0x53d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x73637400,0x6e(%edi),%ebp
gs
je     8048844 <dup2@plt-0x53c>
je     8048859 <dup2@plt-0x527>
jb     80487e7 <dup2@plt-0x599>
outsl  %ds:(%esi),(%dx)
jo     804884f <dup2@plt-0x531>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ah,0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
jo     8048871 <dup2@plt-0x50f>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     804886f <dup2@plt-0x511>
outsl  %ds:(%esi),(%dx)
jne    8048882 <dup2@plt-0x4fe>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    804888a <dup2@plt-0x4f6>
add    %dh,0x74(%ebx)
jb     804889e <dup2@plt-0x4e2>
outsl  %ds:(%esi),(%dx)
jne    8048899 <dup2@plt-0x4e7>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c66755f,0x5f(%eax,%eax,1),%esi
outsl  %ds:(%esi),(%dx)
ja     8048845 <dup2@plt-0x53b>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80488c8 <dup2@plt-0x4b8>
outsb  %ds:(%esi),(%dx)
jbe    8048866 <dup2@plt-0x51a>
outsl  %ds:(%esi),(%dx)
jo     80488dd <dup2@plt-0x4a3>
popa
jb     80488d3 <dup2@plt-0x4ad>
add    %bl,0x5f(%edi)
data16
jb     80488d7 <dup2@plt-0x4a9>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     80488f0 <dup2@plt-0x490>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
jae    80488f7 <dup2@plt-0x489>
jo     80488fd <dup2@plt-0x483>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
jae    80488fa <dup2@plt-0x486>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     804890e <dup2@plt-0x472>
jo     8048915 <dup2@plt-0x46b>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x77(%esi)
jb     804891b <dup2@plt-0x465>
je     8048919 <dup2@plt-0x467>
add    %bl,0x5f(%edi)
data16
jo     804891f <dup2@plt-0x461>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     804892f <dup2@plt-0x451>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048936 <dup2@plt-0x44a>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     804895b <dup2@plt-0x425>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048957 <dup2@plt-0x429>
outsb  %ds:(%esi),(%dx)
add    %dh,0x67(%ebx,%eiz,2)
gs
je     804895b <dup2@plt-0x425>
je     8048970 <dup2@plt-0x410>
jb     80488fe <dup2@plt-0x482>
data16
arpl   %bp,0x74(%esi)
insb   (%dx),%es:(%edi)
add    %ah,0x66(%ebx)
jae    804896d <dup2@plt-0x413>
je     8048979 <dup2@plt-0x407>
jae    804897c <dup2@plt-0x404>
gs gs add %ah,%fs:%gs:0x66(%ebx)
addr16
gs
je     804897f <dup2@plt-0x401>
jae    8048988 <dup2@plt-0x3f8>
gs gs add %ah,%fs:%gs:0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     8048987 <dup2@plt-0x3f9>
js     8048998 <dup2@plt-0x3e8>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x6574706f,0x0(%esi),%ebp
jb     80489a3 <dup2@plt-0x3dd>
add    %dh,0x74(%ebx)
jb     8048999 <dup2@plt-0x3e7>
insl   (%dx),%es:(%edi)
jo     8048939 <dup2@plt-0x447>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80489b9 <dup2@plt-0x3c7>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x766f5f5f,0x0(%esi),%ebp
gs
jb     80489b8 <dup2@plt-0x3c8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048956 <dup2@plt-0x42a>
data16
jo     80489ce <dup2@plt-0x3b2>
je     80489ce <dup2@plt-0x3b2>
pop    %edi
jne    80489cc <dup2@plt-0x3b4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     80489e0 <dup2@plt-0x3a0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     80489eb <dup2@plt-0x395>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    80489ef <dup2@plt-0x391>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     80489f3 <dup2@plt-0x38d>
js     80489f9 <dup2@plt-0x387>
je     8048992 <dup2@plt-0x3ee>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048a0f <dup2@plt-0x371>
popa
jb     8048a12 <dup2@plt-0x36e>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
or     %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
pop    %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
jmp    18048aa3 <optarg+0xfff18bb>
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x70000,(%ecx),%ecx
repz add (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
incl   (%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x309,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
adc    (%ebx),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8048aff <dup2@plt-0x281>
imul   $0x30000,(%ecx),%ecx
sbb    $0x10000003,%eax
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
sub    %eax,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
cld
outsl  %ds:(%esi),(%dx)
add    $0x200608,%eax
add    %al,0x5080571(%eax)
inc    %ebx
add    %al,(%eax)
test   %dh,0x5(%ecx)
or     %al,0xa0000044
jno    8048b24 <dup2@plt-0x25c>
or     %al,0xc0000045
jno    8048b2c <dup2@plt-0x254>
or     %al,0xe000004a
jno    8048b34 <dup2@plt-0x24c>
or     %al,0xe4000042
jno    8048b3c <dup2@plt-0x244>
or     %al,0xe8000048
jno    8048b44 <dup2@plt-0x23c>
.byte 0x8
.byte 0x5
dec    %ebx
or     $0x70,%al
add    $0x10708,%eax
add    %dl,(%eax)
jo     8048b54 <dup2@plt-0x22c>
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%esi,2)
add    $0x30708,%eax
add    %bl,(%eax)
jo     8048b64 <dup2@plt-0x21c>
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%esi,2)
add    $0x50708,%eax
add    %ah,(%eax)
jo     8048b74 <dup2@plt-0x20c>
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0x70,%al
add    $0x70708,%eax
add    %ch,(%eax)
jo     8048b84 <dup2@plt-0x1fc>
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax,%esi,2)
add    $0x90708,%eax
add    %dh,(%eax)
jo     8048b94 <dup2@plt-0x1ec>
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax,%esi,2)
add    $0xb0708,%eax
add    %bh,(%eax)
jo     8048ba4 <dup2@plt-0x1dc>
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%esi,2)
add    $0xd0708,%eax
add    %al,0x70(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%esi,2)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
jo     8048bc4 <dup2@plt-0x1bc>
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x5(%eax,%esi,2)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x70(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%esi,2)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x70(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%esi,2)
or     %al,(%edi)
adc    $0x70600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%esi,2)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080570
sbb    %al,(%eax)
add    %ch,0x5(%eax,%esi,2)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x70(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%esi,2)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x70(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%esi,2)
or     %al,(%edi)
sbb    $0x70800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%esi,2)
add    %al,(%eax)
mov    %dh,0x5(%eax)
or     %al,(%edi)
and    %al,(%eax)
add    %cl,0x21070805(%eax,%esi,2)
add    %al,(%eax)
nop
jo     8048c54 <dup2@plt-0x12c>
or     %al,(%edi)
and    (%eax),%al
add    %dl,0x23070805(%eax,%esi,2)
add    %al,(%eax)
cwtl
jo     8048c64 <dup2@plt-0x11c>
or     %al,(%edi)
and    $0x0,%al
add    %bl,0x25070805(%eax,%esi,2)
add    %al,(%eax)
mov    0x7080570,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
jo     8048c7c <dup2@plt-0x104>
or     %al,(%edi)
daa
add    %al,(%eax)
test   $0x70,%al
add    $0x280708,%eax
add    %ch,0x29070805(%eax,%esi,2)
add    %al,(%eax)
mov    $0x70,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%esi,2)
add    %al,(%eax)
mov    $0x7080570,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%esi,2)
add    %al,(%eax)
(bad)
jo     8048cb4 <dup2@plt-0xcc>
or     %al,(%edi)
add    %al,%cs:(%eax)
les    0x5(%eax),%esi
or     %al,(%edi)
das
add    %al,(%eax)
enter  $0x570,$0x8
pop    %es
xor    %al,(%eax)
add    %cl,%ah
jo     8048ccc <dup2@plt-0xb4>
or     %al,(%edi)
xor    %eax,(%eax)
add    %dl,%al
jo     8048cd4 <dup2@plt-0xac>
or     %al,(%edi)
xor    (%eax),%al
add    %dl,%ah
jo     8048cdc <dup2@plt-0xa4>
or     %al,(%edi)
xor    (%eax),%eax
add    %bl,%al
jo     8048ce4 <dup2@plt-0x9c>
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%ah
jo     8048cec <dup2@plt-0x94>
or     %al,(%edi)
xor    $0x70e00000,%eax
add    $0x360708,%eax
add    %ah,%ah
jo     8048cfc <dup2@plt-0x84>
or     %al,(%edi)
aaa
add    %al,(%eax)
call   f0c9271 <optarg+0x7072089>
cmp    %al,(%eax)
add    %ch,%ah
jo     8048d0c <dup2@plt-0x74>
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dh,%al
jo     8048d14 <dup2@plt-0x6c>
or     %al,(%edi)
cmp    (%eax),%al
add    %dh,%ah
jo     8048d1c <dup2@plt-0x64>
or     %al,(%edi)
cmp    (%eax),%eax
add    %bh,%al
jo     8048d24 <dup2@plt-0x5c>
or     %al,(%edi)
cmp    $0x0,%al
add    %bh,%ah
jo     8048d2c <dup2@plt-0x54>
or     %al,(%edi)
cmp    $0x71000000,%eax
add    $0x3e0708,%eax
add    %al,(%ecx,%esi,2)
add    $0x3f0708,%eax
add    %cl,(%eax)
jno    8048d44 <dup2@plt-0x3c>
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
or     $0x71,%al
add    $0x410708,%eax
push   %ebx
sub    $0x8,%esp
call   804a730 <calloc@plt+0x15b0>
add    $0xe2ab,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048d6a <dup2@plt-0x16>
call   8048f70 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8057004
jmp    *0x8057008
add    %al,(%eax)
jmp    *0x805700c
push   $0x0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057010
push   $0x8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057014
push   $0x10
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057018
push   $0x18
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805701c
push   $0x20
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057020
push   $0x28
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057024
push   $0x30
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057028
push   $0x38
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805702c
push   $0x40
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057030
push   $0x48
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057034
push   $0x50
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057038
push   $0x58
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805703c
push   $0x60
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057040
push   $0x68
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057044
push   $0x70
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057048
push   $0x78
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805704c
push   $0x80
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057050
push   $0x88
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057054
push   $0x90
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057058
push   $0x98
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805705c
push   $0xa0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057060
push   $0xa8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057064
push   $0xb0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057068
push   $0xb8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805706c
push   $0xc0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057070
push   $0xc8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057074
push   $0xd0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057078
push   $0xd8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805707c
push   $0xe0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057080
push   $0xe8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057084
push   $0xf0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057088
push   $0xf8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805708c
push   $0x100
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057090
push   $0x108
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057094
push   $0x110
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057098
push   $0x118
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805709c
push   $0x120
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570a0
push   $0x128
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570a4
push   $0x130
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570a8
push   $0x138
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570ac
push   $0x140
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570b0
push   $0x148
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570b4
push   $0x150
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570b8
push   $0x158
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570bc
push   $0x160
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570c0
push   $0x168
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570c4
push   $0x170
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570c8
push   $0x178
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570cc
push   $0x180
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570d0
push   $0x188
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570d4
push   $0x190
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570d8
push   $0x198
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570dc
push   $0x1a0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570e0
push   $0x1a8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570e4
push   $0x1b0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570e8
push   $0x1b8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570ec
push   $0x1c0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570f0
push   $0x1c8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570f4
push   $0x1d0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570f8
push   $0x1d8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x80570fc
push   $0x1e0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057100
push   $0x1e8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057104
push   $0x1f0
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x8057108
push   $0x1f8
jmp    8048d70 <dup2@plt-0x10>
jmp    *0x805710c
push   $0x200
jmp    8048d70 <dup2@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
mov    $0x1,%ebx
and    $0xfffffff0,%esp
sub    $0x50,%esp
mov    0xc(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804b890 <calloc@plt+0x2710>
movl   $0x805467d,0x4(%esp)
movl   $0x6,(%esp)
call   80490b0 <setlocale@plt>
movl   $0x80513ab,0x4(%esp)
movl   $0x805136a,(%esp)
call   8049100 <bindtextdomain@plt>
movl   $0x805136a,(%esp)
call   8048e80 <textdomain@plt>
movl   $0x804b6b0,(%esp)
call   8051290 <calloc@plt+0x8110>
movl   $0x0,0x80571e4
00
movl   $0x0,0x28(%esp)
movb   $0x1,0x20(%esp)
movb   $0x0,0x1f(%esp)
movb   $0x0,0x24(%esp)
movl   $0x0,0x2c(%esp)
mov    0xc(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8053a60,0xc(%esp)
movl   $0x80513d2,0x8(%esp)
lea    (%eax,%edi,4),%esi
mov    0x8(%ebp),%eax
mov    %esi,0x4(%esp)
sub    %edi,%eax
mov    %eax,(%esp)
call   8048fb0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804936c <calloc@plt+0x1ec>
cmp    $0x46,%eax
je     8049323 <calloc@plt+0x1a3>
jg     8049278 <calloc@plt+0xf8>
cmp    $0xffffff7d,%eax
je     80492cf <calloc@plt+0x14f>
cmp    $0xffffff7e,%eax
jne    80492b4 <calloc@plt+0x134>
movl   $0x0,(%esp)
call   804ade0 <calloc@plt+0x1c60>
xchg   %ax,%ax
cmp    $0x61,%eax
je     8049311 <calloc@plt+0x191>
cmp    $0x67,%eax
jne    80492b4 <calloc@plt+0x134>
movb   $0x1,0x1f(%esp)
movl   $0x2,0x2c(%esp)
mov    0x80571c0,%eax
cmp    %eax,%ebx
jge    8049219 <calloc@plt+0x99>
add    $0x1,%ebx
cmp    %eax,%ebx
movl   $0x0,-0x4(%esi,%ebx,4)
jne    80492a0 <calloc@plt+0x120>
jmp    8049219 <calloc@plt+0x99>
add    %ebx,%edi
mov    $0x1,%ebx
movl   $0x0,0x80571c0
00
movb   $0x0,0x20(%esp)
jmp    8049219 <calloc@plt+0x99>
mov    0x8057128,%eax
movl   $0x0,0x14(%esp)
movl   $0x80513bd,0x10(%esp)
movl   $0x8051366,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80571e0,%eax
movl   $0x80513cd,0x4(%esp)
mov    %eax,(%esp)
call   804d3e0 <calloc@plt+0x4260>
movl   $0x0,(%esp)
call   8048f80 <exit@plt>
movb   $0x1,0x24(%esp)
movl   $0x1,0x2c(%esp)
jmp    8049293 <calloc@plt+0x113>
cmpl   $0x0,0x28(%esp)
je     804935e <calloc@plt+0x1de>
movl   $0x5,0x8(%esp)
movl   $0x8053740,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
mov    0x80571e8,%eax
mov    %eax,0x28(%esp)
jmp    8049293 <calloc@plt+0x113>
cmpb   $0x0,0x24(%esp)
jne    8049bff <calloc@plt+0xa7f>
cmpb   $0x0,0x20(%esp)
je     80495b1 <calloc@plt+0x431>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804a003 <calloc@plt+0xe83>
movl   $0x0,0xc(%esp)
movl   $0x800,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804b820 <calloc@plt+0x26a0>
test   %eax,%eax
js     804a028 <calloc@plt+0xea8>
movl   $0x3,0x4(%esp)
movl   $0x0,(%esp)
call   804e1b0 <calloc@plt+0x5030>
cmp    $0xffffffff,%eax
je     8049755 <calloc@plt+0x5d5>
and    $0xf7,%ah
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x0,(%esp)
call   804e1b0 <calloc@plt+0x5030>
test   %eax,%eax
js     8049755 <calloc@plt+0x5d5>
movl   $0x8057260,0x4(%esp)
movl   $0x0,(%esp)
call   8049120 <tcgetattr@plt>
test   %eax,%eax
jne    8049c43 <calloc@plt+0xac3>
cmpb   $0x0,0x24(%esp)
jne    8049500 <calloc@plt+0x380>
cmpb   $0x0,0x1f(%esp)
jne    8049500 <calloc@plt+0x380>
cmpb   $0x0,0x20(%esp)
jne    8049500 <calloc@plt+0x380>
mov    0x8(%ebp),%eax
movl   $0x1,0x2c(%esp)
movb   $0x0,0x1e(%esp)
movb   $0x0,0x1f(%esp)
sub    $0x1,%eax
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
cmp    0x8(%ebp),%eax
jge    8049ed8 <calloc@plt+0xd58>
mov    0x2c(%esp),%eax
lea    0x0(,%eax,4),%ecx
mov    %ecx,0x20(%esp)
mov    0xc(%ebp),%ecx
mov    (%ecx,%eax,4),%edi
test   %edi,%edi
je     80494f6 <calloc@plt+0x376>
cmpb   $0x2d,(%edi)
movb   $0x0,0x24(%esp)
je     804987a <calloc@plt+0x6fa>
mov    $0x8053bb4,%esi
mov    $0x805139f,%eax
xor    %ebx,%ebx
jmp    80494a9 <calloc@plt+0x329>
lea    0x0(%esi),%esi
add    $0x14,%esi
mov    -0x14(%esi),%eax
add    $0x1,%ebx
test   %eax,%eax
je     804979b <calloc@plt+0x61b>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    8049498 <calloc@plt+0x318>
imul   $0x14,%ebx,%edx
cmpb   $0x0,0x24(%esp)
lea    0x8053ba0(%edx),%ebx
jne    8049887 <calloc@plt+0x707>
mov    0x4(%ebx),%eax
mov    %edx,0x20(%esp)
call   804ac40 <calloc@plt+0x1ac0>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8049aa7 <calloc@plt+0x927>
mov    0x10(%ebx),%edx
not    %edx
and    (%eax),%edx
or     0xc(%ebx),%edx
mov    %edx,(%eax)
movb   $0x1,0x1f(%esp)
addl   $0x1,0x2c(%esp)
jmp    804944f <calloc@plt+0x2cf>
call   804a940 <calloc@plt+0x17c0>
movl   $0x0,0x805729c
00
mov    %eax,0x80572a0
mov    0x2c(%esp),%eax
cmp    $0x1,%eax
je     80495fc <calloc@plt+0x47c>
cmp    $0x2,%eax
jne    8049d14 <calloc@plt+0xb94>
mov    0x805726c,%eax
xor    %ebx,%ebx
movl   $0x805143f,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    0x8057268,%eax
mov    %eax,0x10(%esp)
mov    0x8057264,%eax
mov    %eax,0xc(%esp)
mov    0x8057260,%eax
mov    %eax,0x8(%esp)
call   8049080 <__printf_chk@plt>
movzbl 0x8057271(%ebx),%eax
add    $0x1,%ebx
movl   $0x805144a,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049080 <__printf_chk@plt>
cmp    $0x20,%ebx
jne    8049564 <calloc@plt+0x3e4>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a1d1 <calloc@plt+0x1051>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,(%esp)
call   8048f80 <exit@plt>
cmpb   $0x0,0x24(%esp)
jne    80495c3 <calloc@plt+0x443>
cmpb   $0x0,0x1f(%esp)
je     8049382 <calloc@plt+0x202>
movl   $0x5,0x8(%esp)
movl   $0x80537b4,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
jmp    8049382 <calloc@plt+0x202>
mov    $0x1,%eax
call   804ac80 <calloc@plt+0x1b00>
mov    0x28(%esp),%edx
mov    $0x1,%eax
call   804ab50 <calloc@plt+0x19d0>
movzbl 0x8057270,%eax
movl   $0x80513e7,(%esp)
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a6a1 <calloc@plt+0x1521>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
mov    $0x8053ac0,%ebx
mov    (%ebx),%esi
cmpb   $0x6d,(%esi)
jne    8049847 <calloc@plt+0x6c7>
cmpb   $0x69,0x1(%esi)
jne    8049847 <calloc@plt+0x6c7>
cmpb   $0x6e,0x2(%esi)
jne    8049847 <calloc@plt+0x6c7>
cmpb   $0x0,0x3(%esi)
jne    8049847 <calloc@plt+0x6c7>
movzbl 0x8057276,%eax
movl   $0x8051428,(%esp)
mov    %eax,0x8(%esp)
movzbl 0x8057277,%eax
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
cmpl   $0x0,0x805729c
je     80496c2 <calloc@plt+0x542>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a6b6 <calloc@plt+0x1536>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
mov    $0x8053ba0,%ebx
xor    %edi,%edi
jmp    80496d8 <calloc@plt+0x558>
add    $0x14,%ebx
cmpl   $0x0,(%ebx)
je     8049cb0 <calloc@plt+0xb30>
testb  $0x8,0x8(%ebx)
jne    80496d5 <calloc@plt+0x555>
mov    0x4(%ebx),%esi
cmp    %edi,%esi
je     8049717 <calloc@plt+0x597>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a68c <calloc@plt+0x150c>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
mov    %esi,%edi
mov    0x4(%ebx),%esi
movl   $0x0,0x805729c
00
mov    %esi,%eax
call   804ac40 <calloc@plt+0x1ac0>
mov    0x10(%ebx),%edx
test   %edx,%edx
jne    8049728 <calloc@plt+0x5a8>
mov    0xc(%ebx),%edx
test   %eax,%eax
je     804a6cb <calloc@plt+0x154b>
and    (%eax),%edx
cmp    0xc(%ebx),%edx
je     8049cfd <calloc@plt+0xb7d>
testb  $0x4,0x8(%ebx)
je     80496d5 <calloc@plt+0x555>
mov    (%ebx),%eax
movl   $0x8051424,(%esp)
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    80496d5 <calloc@plt+0x555>
movl   $0x5,0x8(%esp)
movl   $0x80537ec,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %eax,%ebx
call   8049060 <__errno_location@plt>
mov    0x28(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
jmp    80493f6 <calloc@plt+0x276>
cmpb   $0x0,0x24(%esp)
jne    8049a4e <calloc@plt+0x8ce>
mov    $0x8053acc,%esi
mov    $0x80513a6,%eax
xor    %ebx,%ebx
jmp    80497c9 <calloc@plt+0x649>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%esi
mov    -0xc(%esi),%eax
add    $0x1,%ebx
test   %eax,%eax
je     80498b8 <calloc@plt+0x738>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    80497b8 <calloc@plt+0x638>
mov    0x2c(%esp),%eax
cmp    %eax,0x18(%esp)
je     804a054 <calloc@plt+0xed4>
imul   $0xc,%ebx,%ebx
mov    0xc(%ebp),%eax
mov    0x20(%esp),%ecx
addl   $0x1,0x2c(%esp)
lea    0x8053ac0(%ebx),%edi
mov    0x4(%eax,%ecx,1),%esi
mov    0x8053ac0(%ebx),%eax
cmpb   $0x6d,(%eax)
jne    8049968 <calloc@plt+0x7e8>
cmpb   $0x69,0x1(%eax)
jne    8049968 <calloc@plt+0x7e8>
cmpb   $0x6e,0x2(%eax)
jne    8049968 <calloc@plt+0x7e8>
cmpb   $0x0,0x3(%eax)
jne    8049968 <calloc@plt+0x7e8>
mov    $0xff,%edx
mov    %esi,%eax
call   804b5f0 <calloc@plt+0x2470>
mov    0x8(%edi),%edx
mov    %al,0x8057271(%edx)
jmp    80494f1 <calloc@plt+0x371>
mov    0x8(%ebx),%eax
movzbl 0x8057271(%eax),%edx
mov    $0x8051397,%eax
test   %dl,%dl
jne    80499f0 <calloc@plt+0x870>
mov    %eax,0x8(%esp)
add    $0xc,%ebx
mov    %esi,0x4(%esp)
movl   $0x80513f2,(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    8049654 <calloc@plt+0x4d4>
add    $0x1,%edi
movb   $0x1,0x24(%esp)
jmp    8049487 <calloc@plt+0x307>
testb  $0x4,0x8(%ebx)
je     8049a4e <calloc@plt+0x8ce>
mov    0x4(%ebx),%eax
mov    %edx,0x20(%esp)
call   804ac40 <calloc@plt+0x1ac0>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8049aa7 <calloc@plt+0x927>
mov    0x10(%ebx),%edx
or     0xc(%ebx),%edx
not    %edx
and    %edx,(%eax)
jmp    80494f1 <calloc@plt+0x371>
movl   $0x805150e,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804990e <calloc@plt+0x78e>
mov    0x18(%esp),%eax
cmp    %eax,0x2c(%esp)
je     804a054 <calloc@plt+0xed4>
mov    0x20(%esp),%ecx
mov    0xc(%ebp),%eax
addl   $0x1,0x2c(%esp)
mov    0x4(%eax,%ecx,1),%eax
call   804a800 <calloc@plt+0x1680>
movl   $0x8057260,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <cfsetispeed@plt>
movb   $0x1,0x1e(%esp)
movb   $0x1,0x1f(%esp)
jmp    80494f6 <calloc@plt+0x376>
movl   $0x80514d0,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    80499fd <calloc@plt+0x87d>
mov    0x18(%esp),%eax
cmp    %eax,0x2c(%esp)
je     804a054 <calloc@plt+0xed4>
mov    0x20(%esp),%ecx
mov    0xc(%ebp),%eax
addl   $0x1,0x2c(%esp)
mov    0x4(%eax,%ecx,1),%eax
call   804a800 <calloc@plt+0x1680>
movl   $0x8057260,(%esp)
mov    %eax,0x4(%esp)
call   8048e20 <cfsetospeed@plt>
movb   $0x1,0x1e(%esp)
movb   $0x1,0x1f(%esp)
jmp    80494f6 <calloc@plt+0x376>
movl   $0x80514c5,0x4(%esp)
mov    %eax,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804982d <calloc@plt+0x6ad>
movzbl (%esi),%ebx
test   %bl,%bl
je     8049a9f <calloc@plt+0x91f>
movzbl 0x1(%esi),%ecx
test   %cl,%cl
je     8049a9f <calloc@plt+0x91f>
cmpb   $0x5e,(%esi)
jne    80499ae <calloc@plt+0x82e>
cmpb   $0x2d,0x1(%esi)
jne    80499ae <calloc@plt+0x82e>
xor    %eax,%eax
cmpb   $0x0,0x2(%esi)
je     8049839 <calloc@plt+0x6b9>
movl   $0x80514ca,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x24(%esp)
call   8048da0 <strcmp@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     8049839 <calloc@plt+0x6b9>
cmp    $0x5e,%bl
mov    0x24(%esp),%ecx
jne    804982d <calloc@plt+0x6ad>
mov    %ecx,%edx
mov    $0x7f,%al
and    $0x9f,%edx
cmp    $0x3f,%cl
cmovne %edx,%eax
jmp    8049839 <calloc@plt+0x6b9>
movzbl %dl,%eax
call   804a9d0 <calloc@plt+0x1850>
jmp    804985e <calloc@plt+0x6de>
movl   $0x80514d7,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    8049b19 <calloc@plt+0x999>
mov    0x18(%esp),%eax
cmp    %eax,0x2c(%esp)
je     804a054 <calloc@plt+0xed4>
mov    0x20(%esp),%ecx
mov    $0x7fffffff,%edx
mov    0xc(%ebp),%eax
addl   $0x1,0x2c(%esp)
mov    0x4(%eax,%ecx,1),%eax
call   804b5f0 <calloc@plt+0x2470>
mov    0x28(%esp),%ecx
or     $0xffffffff,%edx
call   804aa90 <calloc@plt+0x1910>
jmp    80494f6 <calloc@plt+0x376>
lea    -0x1(%edi),%eax
mov    %eax,(%esp)
call   804cda0 <calloc@plt+0x3c20>
movl   $0x5,0x8(%esp)
movl   $0x805149a,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
movl   $0x1,(%esp)
call   804ade0 <calloc@plt+0x1c60>
movzbl %bl,%eax
jmp    8049839 <calloc@plt+0x6b9>
mov    0x8053ba0(%edx),%esi
movl   $0x805144f,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     8049cd9 <calloc@plt+0xb59>
movl   $0x8051455,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     8049cd9 <calloc@plt+0xb59>
movl   $0x805145c,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a09a <calloc@plt+0xf1a>
cmpb   $0x0,0x24(%esp)
jne    8049ec1 <calloc@plt+0xd41>
mov    0x8057268,%eax
and    $0xfffffccf,%eax
or     $0x320,%eax
mov    %eax,0x8057268
jmp    80494f1 <calloc@plt+0x371>
movl   $0x80514dc,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     8049c6f <calloc@plt+0xaef>
movl   $0x80514e1,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     8049c6f <calloc@plt+0xaef>
movl   $0x80514e9,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804a1ad <calloc@plt+0x102d>
movl   $0x80514ee,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a0cf <calloc@plt+0xf4f>
mov    0x18(%esp),%eax
cmp    %eax,0x2c(%esp)
je     804a054 <calloc@plt+0xed4>
mov    0xc(%ebp),%eax
or     $0xffffffff,%edx
mov    0x20(%esp),%ecx
addl   $0x1,0x2c(%esp)
lea    0x4(%eax,%ecx,1),%ebx
mov    (%ebx),%eax
call   804b5f0 <calloc@plt+0x2470>
movb   $0x1,0x1f(%esp)
movzbl %al,%edx
cmp    %eax,%edx
mov    %al,0x8057270
je     80494f6 <calloc@plt+0x376>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804cda0 <calloc@plt+0x3c20>
movl   $0x5,0x8(%esp)
movl   $0x80514f3,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048e50 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
jmp    80494f6 <calloc@plt+0x376>
cmpb   $0x0,0x1f(%esp)
je     8049377 <calloc@plt+0x1f7>
movl   $0x5,0x8(%esp)
movl   $0x8053764,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
jmp    8049377 <calloc@plt+0x1f7>
call   8049060 <__errno_location@plt>
mov    0x28(%esp),%ecx
movl   $0x8054281,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
jmp    8049412 <calloc@plt+0x292>
mov    0x18(%esp),%eax
cmp    %eax,0x2c(%esp)
je     804a054 <calloc@plt+0xed4>
mov    0x20(%esp),%ecx
mov    $0x7fffffff,%edx
mov    0xc(%ebp),%eax
addl   $0x1,0x2c(%esp)
mov    0x4(%eax,%ecx,1),%eax
call   804b5f0 <calloc@plt+0x2470>
mov    0x28(%esp),%ecx
mov    %eax,%edx
or     $0xffffffff,%eax
call   804aa90 <calloc@plt+0x1910>
jmp    80494f6 <calloc@plt+0x376>
mov    %edi,%eax
test   %al,%al
jne    8049cca <calloc@plt+0xb4a>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a662 <calloc@plt+0x14e2>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
jmp    80495a5 <calloc@plt+0x425>
cmpb   $0x0,0x24(%esp)
jne    8049ec1 <calloc@plt+0xd41>
mov    0x8057268,%eax
and    $0xfffffccf,%eax
or     $0x120,%eax
mov    %eax,0x8057268
jmp    80494f1 <calloc@plt+0x371>
mov    (%ebx),%eax
movl   $0x8054281,(%esp)
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    80496d5 <calloc@plt+0x555>
mov    $0x1,%eax
call   804ac80 <calloc@plt+0x1b00>
movzbl 0x8057270,%eax
movl   $0x80513e7,(%esp)
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a455 <calloc@plt+0x12d5>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
mov    $0x8053ac0,%ebx
mov    $0x1,%ecx
mov    (%ebx),%esi
cmpb   $0x6d,(%esi)
jne    8049e68 <calloc@plt+0xce8>
cmpb   $0x69,0x1(%esi)
jne    8049e68 <calloc@plt+0xce8>
cmpb   $0x6e,0x2(%esi)
jne    8049e68 <calloc@plt+0xce8>
cmpb   $0x0,0x3(%esi)
jne    8049e68 <calloc@plt+0xce8>
testb  $0x2,0x805726c
je     804a073 <calloc@plt+0xef3>
test   %cl,%cl
jne    8049db7 <calloc@plt+0xc37>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a46a <calloc@plt+0x12ea>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
mov    $0x8053ba0,%ebx
xor    %esi,%esi
mov    $0x1,%edi
jmp    8049de1 <calloc@plt+0xc61>
movzbl 0x8(%ebx),%eax
and    $0x5,%eax
cmp    $0x5,%al
je     8049ea8 <calloc@plt+0xd28>
add    $0x14,%ebx
cmpl   $0x0,(%ebx)
je     8049caa <calloc@plt+0xb2a>
testb  $0x8,0x8(%ebx)
jne    8049dde <calloc@plt+0xc5e>
cmp    %esi,0x4(%ebx)
mov    %esi,%eax
je     8049e2b <calloc@plt+0xcab>
mov    %edi,%eax
test   %al,%al
jne    8049e21 <calloc@plt+0xca1>
mov    0x80571e0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a677 <calloc@plt+0x14f7>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
mov    0x4(%ebx),%eax
mov    $0x1,%edi
mov    %eax,%esi
call   804ac40 <calloc@plt+0x1ac0>
mov    0x10(%ebx),%edx
test   %edx,%edx
jne    8049e3a <calloc@plt+0xcba>
mov    0xc(%ebx),%edx
test   %eax,%eax
je     804a63e <calloc@plt+0x14be>
and    (%eax),%edx
cmp    0xc(%ebx),%edx
jne    8049dcf <calloc@plt+0xc4f>
testb  $0x2,0x8(%ebx)
je     8049dde <calloc@plt+0xc5e>
mov    (%ebx),%eax
xor    %edi,%edi
movl   $0x8054281,(%esp)
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    8049dde <calloc@plt+0xc5e>
mov    0x8(%ebx),%eax
movzbl 0x8057271(%eax),%edx
cmp    0x4(%ebx),%dl
je     8049e96 <calloc@plt+0xd16>
test   %dl,%dl
mov    $0x8051397,%eax
jne    8049e9e <calloc@plt+0xd1e>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x80513f2,(%esp)
call   804a860 <calloc@plt+0x16e0>
xor    %ecx,%ecx
add    $0xc,%ebx
jmp    8049d63 <calloc@plt+0xbe3>
movzbl %dl,%eax
call   804a9d0 <calloc@plt+0x1850>
jmp    8049e80 <calloc@plt+0xd00>
mov    (%ebx),%eax
xor    %edi,%edi
movl   $0x8051424,(%esp)
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    8049dde <calloc@plt+0xc5e>
mov    0x8057268,%eax
and    $0xfffffecf,%eax
or     $0x30,%eax
mov    %eax,0x8057268
jmp    80494f1 <calloc@plt+0x371>
cmpb   $0x0,0x1f(%esp)
je     80495a5 <calloc@plt+0x425>
movl   $0x8057260,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   8048f00 <tcsetattr@plt>
test   %eax,%eax
je     8049f2a <calloc@plt+0xdaa>
call   8049060 <__errno_location@plt>
mov    0x28(%esp),%ecx
movl   $0x8054281,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
movl   $0x8057220,0x4(%esp)
movl   $0x0,(%esp)
call   8049120 <tcgetattr@plt>
test   %eax,%eax
je     8049f69 <calloc@plt+0xde9>
call   8049060 <__errno_location@plt>
mov    0x28(%esp),%ecx
movl   $0x8054281,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
movl   $0x3c,0x8(%esp)
movl   $0x8057220,0x4(%esp)
movl   $0x8057260,(%esp)
call   8048e40 <memcmp@plt>
test   %eax,%eax
je     80495a5 <calloc@plt+0x425>
andl   $0xeff0ffff,0x8057228
ef
cmpb   $0x0,0x1e(%esp)
jne    8049fc2 <calloc@plt+0xe42>
movl   $0x3c,0x8(%esp)
movl   $0x8057220,0x4(%esp)
movl   $0x8057260,(%esp)
call   8048e40 <memcmp@plt>
test   %eax,%eax
je     80495a5 <calloc@plt+0x425>
movl   $0x5,0x8(%esp)
movl   $0x8053814,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    0x28(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
jmp    80495a5 <calloc@plt+0x425>
movl   $0x5,0x8(%esp)
movl   $0x80513d8,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %eax,0x28(%esp)
jmp    80493f6 <calloc@plt+0x276>
call   8049060 <__errno_location@plt>
mov    0x28(%esp),%ecx
movl   $0x8054281,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
jmp    80493b6 <calloc@plt+0x236>
mov    %edi,(%esp)
call   804cda0 <calloc@plt+0x3c20>
movl   $0x5,0x8(%esp)
movl   $0x80514ae,0x4(%esp)
mov    %eax,%ebx
jmp    8049a6b <calloc@plt+0x8eb>
movzbl 0x8057276,%eax
movl   $0x80513fb,(%esp)
mov    %eax,0x8(%esp)
movzbl 0x8057277,%eax
mov    %eax,0x4(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    8049db7 <calloc@plt+0xc37>
movzbl (%esi),%edi
mov    %edi,%eax
movzbl %al,%ebx
cmp    $0x6e,%ebx
je     804a16f <calloc@plt+0xfef>
cmp    $0x65,%ebx
jne    804a128 <calloc@plt+0xfa8>
cmpb   $0x6b,0x1(%esi)
jne    804a128 <calloc@plt+0xfa8>
cmpb   $0x0,0x2(%esi)
jne    804a128 <calloc@plt+0xfa8>
movb   $0x7f,0x8057273
movb   $0x15,0x8057274
jmp    80494f1 <calloc@plt+0x371>
movl   $0x805150f,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804a4dd <calloc@plt+0x135d>
mov    %edi,%eax
call   804a800 <calloc@plt+0x1680>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     804a47f <calloc@plt+0x12ff>
mov    %eax,0x4(%esp)
movl   $0x8057260,(%esp)
call   8049020 <cfsetispeed@plt>
mov    %ebx,0x4(%esp)
movl   $0x8057260,(%esp)
call   8048e20 <cfsetospeed@plt>
movb   $0x1,0x1e(%esp)
movb   $0x1,0x1f(%esp)
jmp    80494f6 <calloc@plt+0x376>
movl   $0x8051461,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804a231 <calloc@plt+0x10b1>
movl   $0x8051466,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a1f2 <calloc@plt+0x1072>
cmpb   $0x0,0x24(%esp)
je     804a1e6 <calloc@plt+0x1066>
orl    $0x2,0x805726c
jmp    80494f1 <calloc@plt+0x371>
cmpb   $0x6c,0x1(%esi)
jne    804a128 <calloc@plt+0xfa8>
cmpb   $0x0,0x2(%esi)
jne    804a128 <calloc@plt+0xfa8>
cmpb   $0x0,0x24(%esp)
je     804a6ef <calloc@plt+0x156f>
mov    0x8057260,%eax
and    $0xfffffe3f,%eax
or     $0x1,%ah
mov    %eax,0x8057260
mov    0x8057264,%eax
and    $0xffffffd3,%eax
or     $0x4,%eax
mov    %eax,0x8057264
jmp    80494f1 <calloc@plt+0x371>
call   804a940 <calloc@plt+0x17c0>
mov    0x28(%esp),%edx
movl   $0x0,0x805729c
00
mov    %eax,0x80572a0
xor    %eax,%eax
call   804ab50 <calloc@plt+0x19d0>
jmp    80494f6 <calloc@plt+0x376>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    80495a5 <calloc@plt+0x425>
andl   $0xfffffffd,0x805726c
jmp    80494f1 <calloc@plt+0x371>
movl   $0x805146d,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a2a8 <calloc@plt+0x1128>
mov    0x8057268,%eax
and    $0xfffffecf,%eax
cmpb   $0x0,0x24(%esp)
je     804a294 <calloc@plt+0x1114>
or     $0x120,%eax
mov    %eax,0x8057268
orl    $0x20,0x8057260
jmp    80494f1 <calloc@plt+0x371>
mov    $0x8053ac0,%eax
jmp    804a248 <calloc@plt+0x10c8>
mov    0x8(%eax),%ecx
add    $0xc,%eax
movzbl -0x8(%eax),%edx
mov    %dl,0x8057271(%ecx)
cmpl   $0x0,(%eax)
jne    804a238 <calloc@plt+0x10b8>
mov    $0x8053ba0,%ebx
jmp    804a26b <calloc@plt+0x10eb>
mov    0x4(%ebx),%eax
call   804ac40 <calloc@plt+0x1ac0>
mov    0x10(%ebx),%edx
not    %edx
and    (%eax),%edx
or     0xc(%ebx),%edx
mov    %edx,(%eax)
add    $0x14,%ebx
cmpl   $0x0,(%ebx)
je     80494f1 <calloc@plt+0x371>
movzbl 0x8(%ebx),%eax
test   $0x1,%al
jne    804a254 <calloc@plt+0x10d4>
test   $0x2,%al
je     804a268 <calloc@plt+0x10e8>
mov    0x4(%ebx),%eax
call   804ac40 <calloc@plt+0x1ac0>
mov    0x10(%ebx),%edx
or     0xc(%ebx),%edx
not    %edx
and    %edx,(%eax)
jmp    804a268 <calloc@plt+0x10e8>
or     $0x30,%eax
mov    %eax,0x8057268
andl   $0xffffffdf,0x8057260
jmp    80494f1 <calloc@plt+0x371>
movl   $0x8051473,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a305 <calloc@plt+0x1185>
mov    0x8057268,%eax
and    $0xfffffecf,%eax
cmpb   $0x0,0x24(%esp)
je     804a2ea <calloc@plt+0x116a>
or     $0x120,%eax
mov    %eax,0x8057268
orl    $0x20,0x8057260
orl    $0x1,0x8057264
jmp    80494f1 <calloc@plt+0x371>
or     $0x30,%eax
mov    %eax,0x8057268
andl   $0xffffffdf,0x8057260
andl   $0xfffffffe,0x8057264
jmp    80494f1 <calloc@plt+0x371>
cmp    $0x72,%ebx
jne    804a31c <calloc@plt+0x119c>
cmpb   $0x61,0x1(%esi)
jne    804a31c <calloc@plt+0x119c>
cmpb   $0x77,0x2(%esi)
jne    804a31c <calloc@plt+0x119c>
cmpb   $0x0,0x3(%esi)
je     804a330 <calloc@plt+0x11b0>
movl   $0x805147a,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a36b <calloc@plt+0x11eb>
mov    %edi,%eax
cmp    $0x72,%al
je     804a3c1 <calloc@plt+0x1241>
mov    %edi,%eax
cmp    $0x63,%al
je     804a39d <calloc@plt+0x121d>
movl   $0x0,0x8057260
00
andl   $0xfffffffe,0x8057264
andl   $0xfffffff8,0x805726c
movb   $0x1,0x8057277
movb   $0x0,0x8057276
jmp    80494f1 <calloc@plt+0x371>
movl   $0x8051481,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a423 <calloc@plt+0x12a3>
cmpb   $0x0,0x24(%esp)
je     804a414 <calloc@plt+0x1294>
orl    $0x800,0x8057260
00
jmp    80494f1 <calloc@plt+0x371>
cmpb   $0x0,0x24(%esp)
jne    804a340 <calloc@plt+0x11c0>
orl    $0x526,0x8057260
00
orl    $0x1,0x8057264
orl    $0x3,0x805726c
jmp    80494f1 <calloc@plt+0x371>
cmpb   $0x0,0x24(%esp)
je     804a340 <calloc@plt+0x11c0>
jmp    804a3a4 <calloc@plt+0x1224>
cmp    $0x64,%ebx
jne    80494f1 <calloc@plt+0x371>
cmpb   $0x65,0x1(%esi)
jne    80494f1 <calloc@plt+0x371>
cmpb   $0x63,0x2(%esi)
jne    80494f1 <calloc@plt+0x371>
cmpb   $0x0,0x3(%esi)
jne    80494f1 <calloc@plt+0x371>
orl    $0xa10,0x805726c
00
movb   $0x3,0x8057271
movb   $0x7f,0x8057273
movb   $0x15,0x8057274
andl   $0xfffff7ff,0x8057260
ff
jmp    80494f1 <calloc@plt+0x371>
movl   $0x8051489,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a59f <calloc@plt+0x141f>
cmpb   $0x0,0x24(%esp)
je     804a590 <calloc@plt+0x1410>
orl    $0x1800,0x8057264
00
jmp    80494f1 <calloc@plt+0x371>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    8049d4f <calloc@plt+0xbcf>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    8049db7 <calloc@plt+0xc37>
call   8049060 <__errno_location@plt>
xor    %ebx,%ebx
mov    %edi,%esi
mov    %eax,0x24(%esp)
jmp    804a4aa <calloc@plt+0x132a>
mov    0x3c(%esp),%edx
cmpb   $0x3a,(%edx)
jne    804a4d5 <calloc@plt+0x1355>
cmp    %edx,%esi
je     804a4d5 <calloc@plt+0x1355>
mov    %eax,0x40(%esp,%ebx,4)
add    $0x1,%ebx
cmp    $0x4,%ebx
lea    0x1(%edx),%esi
je     804a4f3 <calloc@plt+0x1373>
mov    0x24(%esp),%eax
lea    0x3c(%esp),%edx
movl   $0x0,(%eax)
movl   $0x10,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8048fc0 <strtoul@plt>
mov    0x24(%esp),%ecx
cmpl   $0x0,(%ecx)
je     804a48e <calloc@plt+0x130e>
mov    %edi,(%esp)
jmp    8049a54 <calloc@plt+0x8d4>
call   804a940 <calloc@plt+0x17c0>
mov    %eax,0x80572a0
xor    %eax,%eax
call   804ac80 <calloc@plt+0x1b00>
jmp    80494f6 <calloc@plt+0x376>
mov    0x40(%esp),%eax
mov    %esi,%ecx
xor    %esi,%esi
mov    %edi,0x20(%esp)
mov    %ecx,%ebx
mov    %eax,0x8057260
mov    0x44(%esp),%eax
mov    %eax,0x8057264
mov    0x48(%esp),%eax
mov    %eax,0x8057268
mov    0x4c(%esp),%eax
mov    %eax,0x805726c
cmp    $0x1f,%esi
mov    $0x0,%eax
mov    $0x3a,%edi
cmove  %eax,%edi
mov    0x24(%esp),%eax
lea    0x3c(%esp),%edx
movl   $0x0,(%eax)
movl   $0x10,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   8048fc0 <strtoul@plt>
mov    0x24(%esp),%ecx
cmpl   $0x0,(%ecx)
jne    804a587 <calloc@plt+0x1407>
mov    0x3c(%esp),%edx
mov    %edi,%ecx
cmp    (%edx),%cl
jne    804a587 <calloc@plt+0x1407>
cmp    %edx,%ebx
je     804a587 <calloc@plt+0x1407>
movzbl %al,%ebx
cmp    %ebx,%eax
jne    804a587 <calloc@plt+0x1407>
mov    %al,0x8057271(%esi)
add    $0x1,%esi
cmp    $0x20,%esi
lea    0x1(%edx),%ebx
jne    804a521 <calloc@plt+0x13a1>
jmp    80494f1 <calloc@plt+0x371>
mov    0x20(%esp),%edi
jmp    804a4d5 <calloc@plt+0x1355>
andl   $0xffffe7ff,0x8057264
ff
jmp    80494f1 <calloc@plt+0x371>
movl   $0x805148e,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804a5c7 <calloc@plt+0x1447>
movl   $0x8051494,0x4(%esp)
mov    %esi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a5eb <calloc@plt+0x146b>
cmpb   $0x0,0x24(%esp)
je     804a621 <calloc@plt+0x14a1>
andl   $0xfffffffb,0x805726c
andl   $0xfffffdff,0x8057260
ff
andl   $0xfffffffd,0x8057264
jmp    80494f1 <calloc@plt+0x371>
cmp    $0x63,%ebx
jne    804a3ce <calloc@plt+0x124e>
cmpb   $0x72,0x1(%esi)
jne    80494f1 <calloc@plt+0x371>
cmpb   $0x74,0x2(%esi)
jne    80494f1 <calloc@plt+0x371>
cmpb   $0x0,0x3(%esi)
jne    80494f1 <calloc@plt+0x371>
orl    $0xa10,0x805726c
00
jmp    80494f1 <calloc@plt+0x371>
orl    $0x4,0x805726c
orl    $0x200,0x8057260
00
orl    $0x2,0x8057264
jmp    80494f1 <calloc@plt+0x371>
movl   $0x8053880,0xc(%esp)
movl   $0x612,0x8(%esp)
movl   $0x8051413,0x4(%esp)
movl   $0x805141e,(%esp)
call   8049160 <__assert_fail@plt>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    8049cca <calloc@plt+0xb4a>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    8049e17 <calloc@plt+0xc97>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    8049708 <calloc@plt+0x588>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    8049645 <calloc@plt+0x4c5>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    80496c2 <calloc@plt+0x542>
movl   $0x8053874,0xc(%esp)
movl   $0x661,0x8(%esp)
movl   $0x8051413,0x4(%esp)
movl   $0x805141e,(%esp)
call   8049160 <__assert_fail@plt>
andl   $0xfffffeff,0x8057260
ff
andl   $0xfffffffb,0x8057264
jmp    80494f1 <calloc@plt+0x371>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8051280
push   $0x8051210
push   %ecx
push   %esi
push   $0x8049190
call   8049010 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8057183,%eax
sub    $0x8057180,%eax
cmp    $0x6,%eax
ja     804a750 <calloc@plt+0x15d0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804a74f <calloc@plt+0x15cf>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8057180,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8057180,%eax
sub    $0x8057180,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804a789 <calloc@plt+0x1609>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804a788 <calloc@plt+0x1608>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8057180,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80571ec
jne    804a7cc <calloc@plt+0x164c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a740 <calloc@plt+0x15c0>
movb   $0x1,0x80571ec
leave
repz ret
xchg   %ax,%ax
mov    0x8056f10,%eax
test   %eax,%eax
je     804a7f8 <calloc@plt+0x1678>
mov    $0x0,%eax
test   %eax,%eax
je     804a7f8 <calloc@plt+0x1678>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8056f10,(%esp)
call   *%eax
leave
jmp    804a770 <calloc@plt+0x15f0>
nop
jmp    804a770 <calloc@plt+0x15f0>
xchg   %ax,%ax
nop
push   %edi
mov    $0x805158c,%edx
push   %esi
mov    %eax,%edi
push   %ebx
xor    %esi,%esi
sub    $0x10,%esp
mov    $0x80538ac,%ebx
jmp    804a825 <calloc@plt+0x16a5>
xchg   %ax,%ax
add    $0xc,%ebx
mov    -0xc(%ebx),%edx
add    $0x1,%esi
test   %edx,%edx
je     804a848 <calloc@plt+0x16c8>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
jne    804a818 <calloc@plt+0x1698>
lea    (%esi,%esi,2),%eax
mov    0x80538a4(,%eax,4),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
add    $0x10,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804e2d0 <calloc@plt+0x5150>
test   %eax,%eax
mov    %eax,%ebx
js     804a90c <calloc@plt+0x178c>
mov    0x805729c,%edx
test   %edx,%edx
jle    804a8c0 <calloc@plt+0x1740>
mov    0x80572a0,%eax
sub    %edx,%eax
cmp    %eax,%ebx
mov    0x80571e0,%eax
jle    804a8f0 <calloc@plt+0x1770>
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a929 <calloc@plt+0x17a9>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
movl   $0x0,0x805729c
00
mov    0x80571e0,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
add    %ebx,0x805729c
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x14(%eax),%ecx
cmp    0x18(%eax),%ecx
jae    804a911 <calloc@plt+0x1791>
lea    0x1(%ecx),%esi
mov    %esi,0x14(%eax)
movb   $0x20,(%ecx)
add    $0x1,%edx
mov    %edx,0x805729c
jmp    804a8c0 <calloc@plt+0x1740>
call   804d740 <calloc@plt+0x45c0>
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
mov    0x805729c,%edx
jmp    804a901 <calloc@plt+0x1781>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   80490d0 <__overflow@plt>
jmp    804a8b6 <calloc@plt+0x1736>
xchg   %ax,%ax
sub    $0x3c,%esp
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x1,(%esp)
call   8048ea0 <ioctl@plt>
test   %eax,%eax
jne    804a96d <calloc@plt+0x17ed>
movzwl 0x2a(%esp),%eax
test   %ax,%ax
jne    804a9ae <calloc@plt+0x182e>
movl   $0x80512e8,(%esp)
call   8048f30 <getenv@plt>
test   %eax,%eax
je     804a9a9 <calloc@plt+0x1829>
lea    0x24(%esp),%edx
movl   $0x805467d,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d790 <calloc@plt+0x4610>
test   %eax,%eax
je     804a9b8 <calloc@plt+0x1838>
mov    $0x50,%eax
add    $0x3c,%esp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
test   %eax,%eax
jle    804a9a9 <calloc@plt+0x1829>
add    $0x3c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
cmp    $0x1f,%al
jbe    804a9f0 <calloc@plt+0x1870>
cmp    $0x7e,%al
ja     804aa10 <calloc@plt+0x1890>
mov    %al,0x8057200
mov    $0x8057201,%eax
movb   $0x0,(%eax)
mov    $0x8057200,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x40,%eax
mov    %al,0x8057201
mov    $0x8057202,%eax
movb   $0x5e,0x8057200
movb   $0x0,(%eax)
mov    $0x8057200,%eax
ret
lea    0x0(%esi),%esi
cmp    $0x7f,%al
je     804aa40 <calloc@plt+0x18c0>
cmp    $0x9f,%al
movb   $0x4d,0x8057200
movb   $0x2d,0x8057201
jbe    804aa58 <calloc@plt+0x18d8>
cmp    $0xff,%al
je     804aa70 <calloc@plt+0x18f0>
add    $0xffffff80,%eax
mov    %al,0x8057202
mov    $0x8057203,%eax
jmp    804aa04 <calloc@plt+0x1884>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x5e,0x8057200
mov    $0x8057202,%eax
movb   $0x3f,0x8057201
jmp    804aa04 <calloc@plt+0x1884>
lea    0x0(%esi),%esi
sub    $0x40,%eax
mov    %al,0x8057203
mov    $0x8057204,%eax
movb   $0x5e,0x8057202
jmp    804aa04 <calloc@plt+0x1884>
xchg   %ax,%ax
movb   $0x5e,0x8057202
mov    $0x8057204,%eax
movb   $0x3f,0x8057203
jmp    804aa04 <calloc@plt+0x1884>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
lea    0x18(%esp),%ebx
mov    %ebx,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x0,(%esp)
call   8048ea0 <ioctl@plt>
test   %eax,%eax
je     804aaf5 <calloc@plt+0x1975>
call   8049060 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
je     804aae5 <calloc@plt+0x1965>
mov    %ebp,0xc(%esp)
movl   $0x8054281,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8048f20 <error@plt>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %edi,%edi
js     804aafe <calloc@plt+0x197e>
mov    %di,0x18(%esp)
test   %esi,%esi
js     804ab07 <calloc@plt+0x1987>
mov    %si,0x1a(%esp)
mov    %ebx,0x8(%esp)
movl   $0x5414,0x4(%esp)
movl   $0x0,(%esp)
call   8048ea0 <ioctl@plt>
test   %eax,%eax
je     804ab46 <calloc@plt+0x19c6>
call   8049060 <__errno_location@plt>
mov    %ebp,0xc(%esp)
movl   $0x8054281,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x24,%esp
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x0,(%esp)
call   8048ea0 <ioctl@plt>
test   %eax,%eax
je     804abb0 <calloc@plt+0x1a30>
call   8049060 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
je     804aba1 <calloc@plt+0x1a21>
mov    %esi,0xc(%esp)
movl   $0x8054281,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8048f20 <error@plt>
test   %bl,%bl
je     804abf8 <calloc@plt+0x1a78>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x1a(%esp),%edx
test   %bl,%bl
movzwl 0x18(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
je     804abd8 <calloc@plt+0x1a58>
movl   $0x80512f7,(%esp)
call   804a860 <calloc@plt+0x16e0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x80512f0,(%esp)
call   804a860 <calloc@plt+0x16e0>
movl   $0x0,0x805729c
00
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80517bc,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
cmp    $0x4,%eax
ja     804ac78 <calloc@plt+0x1af8>
jmp    *0x8053860(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8057268,%eax
ret
xchg   %ax,%ax
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8057260,%eax
ret
xchg   %ax,%ax
mov    $0x8057264,%eax
ret
xchg   %ax,%ax
mov    $0x805726c,%eax
ret
xchg   %ax,%ax
sub    $0xc,%esp
call   8049130 <abort@plt>
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x8057260,(%esp)
call   8048e70 <cfgetispeed@plt>
test   %eax,%eax
je     804ad50 <calloc@plt+0x1bd0>
movl   $0x8057260,(%esp)
call   8048e70 <cfgetispeed@plt>
movl   $0x8057260,(%esp)
mov    %eax,%esi
call   8049000 <cfgetospeed@plt>
cmp    %eax,%esi
je     804ad50 <calloc@plt+0x1bd0>
movl   $0x8057260,(%esp)
call   8049000 <cfgetospeed@plt>
xor    %ecx,%ecx
mov    $0x80538ac,%edx
test   %eax,%eax
jne    804acec <calloc@plt+0x1b6c>
jmp    804adbf <calloc@plt+0x1c3f>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%edx
cmp    -0x8(%edx),%eax
je     804adc1 <calloc@plt+0x1c41>
mov    (%edx),%esi
add    $0x1,%ecx
test   %esi,%esi
jne    804ace0 <calloc@plt+0x1b60>
xor    %esi,%esi
movl   $0x8057260,(%esp)
call   8048e70 <cfgetispeed@plt>
test   %eax,%eax
je     804adcf <calloc@plt+0x1c4f>
mov    $0x80538ac,%edx
xor    %ecx,%ecx
jmp    804ad24 <calloc@plt+0x1ba4>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%edx
cmp    -0x8(%edx),%eax
je     804add1 <calloc@plt+0x1c51>
add    $0x1,%ecx
cmpl   $0x0,(%edx)
jne    804ad18 <calloc@plt+0x1b98>
xor    %ecx,%ecx
test   %bl,%bl
mov    $0x805131c,%edx
mov    $0x80517e4,%eax
cmove  %edx,%eax
mov    %esi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a860 <calloc@plt+0x16e0>
jmp    804ad9e <calloc@plt+0x1c1e>
nop
movl   $0x8057260,(%esp)
call   8049000 <cfgetospeed@plt>
test   %eax,%eax
je     804adb2 <calloc@plt+0x1c32>
mov    $0x80538ac,%edx
xor    %ecx,%ecx
jmp    804ad78 <calloc@plt+0x1bf8>
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%edx
cmp    -0x8(%edx),%eax
je     804adb4 <calloc@plt+0x1c34>
mov    (%edx),%esi
add    $0x1,%ecx
test   %esi,%esi
jne    804ad70 <calloc@plt+0x1bf0>
xor    %ecx,%ecx
mov    $0x805130c,%eax
test   %bl,%bl
mov    $0x8051320,%edx
cmove  %edx,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804a860 <calloc@plt+0x16e0>
test   %bl,%bl
jne    804adac <calloc@plt+0x1c2c>
movl   $0x0,0x805729c
00
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xor    %ecx,%ecx
imul   $0xc,%ecx,%ecx
mov    0x80538a8(%ecx),%ecx
jmp    804ad83 <calloc@plt+0x1c03>
xor    %ecx,%ecx
imul   $0xc,%ecx,%ecx
mov    0x80538a8(%ecx),%esi
jmp    804acf7 <calloc@plt+0x1b77>
xor    %ecx,%ecx
imul   $0xc,%ecx,%ecx
mov    0x80538a8(%ecx),%ecx
jmp    804ad2e <calloc@plt+0x1bae>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80572ac,%esi
mov    0x30(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     804ae34 <calloc@plt+0x1cb4>
movl   $0x8051808,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8057184,%eax
mov    %eax,(%esp)
call   80490f0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8048f80 <exit@plt>
movl   $0x8051830,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80518c8,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80518f4,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051940,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051a18,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051a48,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051a80,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051b10,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051be0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051cb8,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051d98,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051e70,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051f24,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8051ff0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80520f0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80521f4,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052328,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80523f4,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052514,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052550,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80526ac,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052794,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052914,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052a28,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052b10,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052bf8,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052d28,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052e74,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052ef0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8052fc8,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80530bc,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80531dc,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x80532a8,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805339c,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8053534,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
mov    0x80572ac,%eax
mov    %eax,(%esp)
call   804b780 <calloc@plt+0x2600>
movl   $0x5,0x8(%esp)
movl   $0x8051325,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x805133c,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8051352,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x805364c,0xc(%esp)
movl   $0x8051366,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
mov    0x80571e0,%esi
movl   $0x5,0x8(%esp)
movl   $0x8053674,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   80490b0 <setlocale@plt>
test   %eax,%eax
je     804b565 <calloc@plt+0x23e5>
movl   $0x3,0x8(%esp)
movl   $0x8051374,0x4(%esp)
mov    %eax,(%esp)
call   8049110 <strncmp@plt>
test   %eax,%eax
jne    804b5a9 <calloc@plt+0x2429>
mov    0x80572ac,%eax
mov    %eax,(%esp)
call   804b780 <calloc@plt+0x2600>
movl   $0x5,0x8(%esp)
movl   $0x80536fc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
jmp    804ae2c <calloc@plt+0x1cac>
mov    0x80572ac,%eax
mov    %eax,(%esp)
call   804b780 <calloc@plt+0x2600>
movl   $0x5,0x8(%esp)
movl   $0x80536b4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
jmp    804b565 <calloc@plt+0x23e5>
lea    0x0(%esi),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x34,%esp
lea    0x2c(%esp),%eax
movl   $0x8051378,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804dd90 <calloc@plt+0x4c10>
test   %eax,%eax
jne    804b633 <calloc@plt+0x24b3>
mov    0x2c(%esp),%eax
cmp    %esi,%eax
ja     804b633 <calloc@plt+0x24b3>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
mov    %ebx,(%esp)
call   804cda0 <calloc@plt+0x3c20>
movl   $0x5,0x8(%esp)
movl   $0x805137b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048e50 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048f20 <error@plt>
movl   $0x1,(%esp)
call   804ade0 <calloc@plt+0x1c60>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x80572a8
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x80572a4
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80571e0,%eax
mov    %eax,(%esp)
call   804e330 <calloc@plt+0x51b0>
test   %eax,%eax
je     804b6d9 <calloc@plt+0x2559>
cmpb   $0x0,0x80572a4
je     804b6f0 <calloc@plt+0x2570>
call   8049060 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    804b6f0 <calloc@plt+0x2570>
mov    0x8057184,%eax
mov    %eax,(%esp)
call   804e330 <calloc@plt+0x51b0>
test   %eax,%eax
jne    804b748 <calloc@plt+0x25c8>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x8054271,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %eax,%ebx
mov    0x80572a8,%eax
test   %eax,%eax
je     804b755 <calloc@plt+0x25d5>
mov    %eax,(%esp)
call   804cb70 <calloc@plt+0x39f0>
mov    %eax,%esi
call   8049060 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x805427d,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
mov    0x805712c,%eax
mov    %eax,(%esp)
call   8048dd0 <_exit@plt>
call   8049060 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8054281,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048f20 <error@plt>
jmp    804b748 <calloc@plt+0x25c8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    804b79b <calloc@plt+0x261b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     804b790 <calloc@plt+0x2610>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     804b7c9 <calloc@plt+0x2649>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     804b7c9 <calloc@plt+0x2649>
cmp    $0x2f,%cl
je     804b7d0 <calloc@plt+0x2650>
test   %bl,%bl
je     804b7a8 <calloc@plt+0x2628>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    804b7b2 <calloc@plt+0x2632>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    804b7a8 <calloc@plt+0x2628>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048ff0 <strlen@plt>
cmp    $0x1,%eax
jbe    804b7ff <calloc@plt+0x267f>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     804b808 <calloc@plt+0x2688>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    804b7f5 <calloc@plt+0x2675>
nop
jmp    804b7ff <calloc@plt+0x267f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048db0 <open64@plt>
mov    %eax,%ebx
shr    $0x1f,%eax
test   %al,%al
je     804b858 <calloc@plt+0x26d8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %ebx,0x30(%esp)
je     804b84c <calloc@plt+0x26cc>
mov    0x30(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <dup2@plt>
mov    %eax,%edi
call   8049060 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049150 <close@plt>
mov    %ebx,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804b913 <calloc@plt+0x2793>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   80490c0 <strrchr@plt>
test   %eax,%eax
je     804b8ff <calloc@plt+0x277f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804b8ff <calloc@plt+0x277f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x80542bc,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804b8ff <calloc@plt+0x277f>
mov    $0x3,%ecx
mov    $0x80542c4,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804b8ff <calloc@plt+0x277f>
lea    0x4(%eax),%ebx
mov    %ebx,0x8057180
mov    %ebx,0x80572ac
mov    %ebx,0x80571a0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8057184,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8054284,(%esp)
mov    %eax,0xc(%esp)
call   8048eb0 <fwrite@plt>
call   8049130 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     804b961 <calloc@plt+0x27e1>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8049130 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     804b9a0 <calloc@plt+0x2820>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804e3b0 <calloc@plt+0x5230>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    804ba08 <calloc@plt+0x2888>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    804b9f0 <calloc@plt+0x2870>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x2d,0x3(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x38,0x4(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x0,0x5(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x60,(%esi)
mov    $0x80542d7,%eax
mov    $0x80542c8,%edx
cmovne %edx,%eax
jmp    804b998 <calloc@plt+0x2818>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80542d1,%eax
cmp    $0x7,%edi
mov    $0x80542cf,%edx
cmovne %edx,%eax
jmp    804b998 <calloc@plt+0x2818>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    804b9f0 <calloc@plt+0x2870>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x31,0x2(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x38,0x3(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x30,0x4(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x33,0x5(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x30,0x6(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x0,0x7(%eax)
jne    804b9f0 <calloc@plt+0x2870>
cmpb   $0x60,(%esi)
mov    $0x80542d3,%eax
mov    $0x80542cc,%edx
cmovne %edx,%eax
jmp    804b998 <calloc@plt+0x2818>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8048ec0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804c338 <calloc@plt+0x31b8>
mov    0x94(%esp),%eax
jmp    *0x8054320(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804c140 <calloc@plt+0x2fc0>
test   %al,%al
je     804c153 <calloc@plt+0x2fd3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804c128 <calloc@plt+0x2fa8>
cmpb   $0x0,0x58(%esp)
je     804c128 <calloc@plt+0x2fa8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804c128 <calloc@plt+0x2fa8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8048e40 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804c1c0 <calloc@plt+0x3040>
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804bed8 <calloc@plt+0x2d58>
movzbl %bl,%eax
jmp    *0x8054344(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     804bd18 <calloc@plt+0x2b98>
cmpl   $0x3,0x94(%esp)
jne    804bc78 <calloc@plt+0x2af8>
testb  $0x4,0x98(%esp)
je     804bc78 <calloc@plt+0x2af8>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    804bc78 <calloc@plt+0x2af8>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    804bc78 <calloc@plt+0x2af8>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     804bc78 <calloc@plt+0x2af8>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     804bc78 <calloc@plt+0x2af8>
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
cmp    %edi,%ebp
jae    804bc3e <calloc@plt+0x2abe>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804bc4e <calloc@plt+0x2ace>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804bc5e <calloc@plt+0x2ade>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    804bc6e <calloc@plt+0x2aee>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     804bc86 <calloc@plt+0x2b06>
cmpb   $0x0,0x5a(%esp)
jne    804bcab <calloc@plt+0x2b2b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     804bcab <calloc@plt+0x2b2b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    804bcb2 <calloc@plt+0x2b32>
cmpb   $0x0,0x24(%esp)
je     804bcc8 <calloc@plt+0x2b48>
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
cmp    %edi,%ebp
jae    804bcc5 <calloc@plt+0x2b45>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    804bcd6 <calloc@plt+0x2b56>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    804bb18 <calloc@plt+0x2998>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804c328 <calloc@plt+0x31a8>
test   %al,%al
jne    804bc78 <calloc@plt+0x2af8>
test   %esi,%esi
jne    804bc78 <calloc@plt+0x2af8>
cmpl   $0x2,0x94(%esp)
jne    804bc78 <calloc@plt+0x2af8>
nop
cmpb   $0x0,0x2f(%esp)
je     804bc78 <calloc@plt+0x2af8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804ba60 <calloc@plt+0x28e0>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804c452 <calloc@plt+0x32d2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804c39b <calloc@plt+0x321b>
cmpb   $0x0,0x58(%esp)
je     804bc78 <calloc@plt+0x2af8>
mov    %eax,%ebx
jmp    804bcb2 <calloc@plt+0x2b32>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    804bda3 <calloc@plt+0x2c23>
nop
mov    $0x66,%eax
jmp    804bda3 <calloc@plt+0x2c23>
nop
mov    $0x76,%eax
jmp    804bda3 <calloc@plt+0x2c23>
nop
mov    $0x6e,%eax
jmp    804bd95 <calloc@plt+0x2c15>
nop
mov    $0x74,%eax
jmp    804bd95 <calloc@plt+0x2c15>
nop
cmpb   $0x0,0x58(%esp)
je     804c310 <calloc@plt+0x3190>
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
cmp    %edi,%ebp
jae    804be02 <calloc@plt+0x2c82>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    804be48 <calloc@plt+0x2cc8>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804be48 <calloc@plt+0x2cc8>
cmp    %eax,%edi
ja     804c3b0 <calloc@plt+0x3230>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804be3e <calloc@plt+0x2cbe>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    804bc86 <calloc@plt+0x2b06>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    804bda3 <calloc@plt+0x2c23>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804be7e <calloc@plt+0x2cfe>
cmpb   $0x0,0x2f(%esp)
je     804be7e <calloc@plt+0x2cfe>
test   %dl,%dl
jne    804bcc8 <calloc@plt+0x2b48>
mov    %ebx,%eax
jmp    804bd95 <calloc@plt+0x2c15>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    804bc78 <calloc@plt+0x2af8>
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
cmp    %edi,%ebp
jae    804bead <calloc@plt+0x2d2d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804bebd <calloc@plt+0x2d3d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804becd <calloc@plt+0x2d4d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    804bc78 <calloc@plt+0x2af8>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804c1d0 <calloc@plt+0x3050>
call   8049170 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     804bc78 <calloc@plt+0x2af8>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804bf84 <calloc@plt+0x2e04>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
cmp    %edi,%ebp
jae    804bf33 <calloc@plt+0x2db3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804bf46 <calloc@plt+0x2dc6>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804bf5c <calloc@plt+0x2ddc>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    804bccb <calloc@plt+0x2b4b>
cmp    %edi,%ebp
jae    804bf79 <calloc@plt+0x2df9>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804bf20 <calloc@plt+0x2da0>
cmpb   $0x0,0x24(%esp)
je     804bf65 <calloc@plt+0x2de5>
cmp    %edi,%ebp
jae    804bf97 <calloc@plt+0x2e17>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804bf65 <calloc@plt+0x2de5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804c457 <calloc@plt+0x32d7>
test   %edi,%edi
je     804c35d <calloc@plt+0x31dd>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80542d1,0x3c(%esp)
movb   $0x22,(%eax)
jmp    804baf8 <calloc@plt+0x2978>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80542d1,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    804baf8 <calloc@plt+0x2978>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    804baf8 <calloc@plt+0x2978>
lea    0x0(%esi,%eiz,1),%esi
je     804c06c <calloc@plt+0x2eec>
mov    0x94(%esp),%edx
mov    $0x80542db,%eax
call   804b970 <calloc@plt+0x27f0>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x80542cf,%eax
call   804b970 <calloc@plt+0x27f0>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804c09a <calloc@plt+0x2f1a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804c09a <calloc@plt+0x2f1a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804c08f <calloc@plt+0x2f0f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804c088 <calloc@plt+0x2f08>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8048ff0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    804baf8 <calloc@plt+0x2978>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80542cf,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    804baf8 <calloc@plt+0x2978>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804c473 <calloc@plt+0x32f3>
test   %edi,%edi
je     804c37c <calloc@plt+0x31fc>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80542cf,0x3c(%esp)
movb   $0x27,(%eax)
jmp    804baf8 <calloc@plt+0x2978>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    804bbb0 <calloc@plt+0x2a30>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    804bb38 <calloc@plt+0x29b8>
test   %ebp,%ebp
jne    804c16c <calloc@plt+0x2fec>
cmpl   $0x2,0x94(%esp)
jne    804c16c <calloc@plt+0x2fec>
cmpb   $0x0,0x2f(%esp)
jne    804bd28 <calloc@plt+0x2ba8>
cmpb   $0x0,0x2f(%esp)
jne    804c1a2 <calloc@plt+0x3022>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804c1a2 <calloc@plt+0x3022>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804c1a2 <calloc@plt+0x3022>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804c197 <calloc@plt+0x3017>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804c190 <calloc@plt+0x3010>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    804bd72 <calloc@plt+0x2bf2>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    804bd72 <calloc@plt+0x2bf2>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    804bbb0 <calloc@plt+0x2a30>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804c33d <calloc@plt+0x31bd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048ef0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804c3bd <calloc@plt+0x323d>
cmp    $0xffffffff,%eax
je     804c3d8 <calloc@plt+0x3258>
cmp    $0xfffffffe,%eax
je     804c3f3 <calloc@plt+0x3273>
cmpb   $0x0,0x2f(%esp)
je     804c29f <calloc@plt+0x311f>
cmpl   $0x2,0x94(%esp)
jne    804c29f <calloc@plt+0x311f>
cmp    $0x1,%eax
je     804c29f <calloc@plt+0x311f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804c298 <calloc@plt+0x3118>
movzbl %al,%eax
jmp    *0x8054540(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804c280 <calloc@plt+0x3100>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048e90 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048e00 <mbsinit@plt>
test   %eax,%eax
je     804c211 <calloc@plt+0x3091>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804bf03 <calloc@plt+0x2d83>
and    0x58(%esp),%dl
jmp    804bf0d <calloc@plt+0x2d8d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    804bd28 <calloc@plt+0x2ba8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     804bc78 <calloc@plt+0x2af8>
add    $0x1,%esi
jmp    804bb18 <calloc@plt+0x2998>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    804bcf9 <calloc@plt+0x2b79>
call   8049130 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8048ff0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804c1ee <calloc@plt+0x306e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80542d1,0x3c(%esp)
jmp    804baf8 <calloc@plt+0x2978>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80542cf,0x3c(%esp)
jmp    804baf8 <calloc@plt+0x2978>
cmpb   $0x0,0x2f(%esp)
je     804bda3 <calloc@plt+0x2c23>
jmp    804bd28 <calloc@plt+0x2ba8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    804be2e <calloc@plt+0x2cae>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804c2e5 <calloc@plt+0x3165>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804c2e5 <calloc@plt+0x3165>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804c448 <calloc@plt+0x32c8>
cmpb   $0x0,(%eax)
je     804c448 <calloc@plt+0x32c8>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804c436 <calloc@plt+0x32b6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804c440 <calloc@plt+0x32c0>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804c430 <calloc@plt+0x32b0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804c2e5 <calloc@plt+0x3165>
call   8048e60 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80542d1,0x3c(%esp)
jmp    804baf8 <calloc@plt+0x2978>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80542cf,0x3c(%esp)
jmp    804baf8 <calloc@plt+0x2978>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049060 <__errno_location@plt>
test   %edi,%edi
mov    0x8057170,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804c61c <calloc@plt+0x349c>
cmp    0x805717c,%edi
jb     804c528 <calloc@plt+0x33a8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804c621 <calloc@plt+0x34a1>
cmp    $0x8057174,%esi
lea    0x0(,%ebp,8),%eax
je     804c5f0 <calloc@plt+0x3470>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804d540 <calloc@plt+0x43c0>
mov    %eax,%esi
mov    %eax,0x8057170
mov    0x805717c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049040 <memset@plt>
mov    %ebp,0x805717c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804ba60 <calloc@plt+0x28e0>
cmp    %eax,%ebp
ja     804c5d7 <calloc@plt+0x3457>
lea    0x1(%eax),%ebp
cmp    $0x80572c0,%esi
mov    %ebp,(%edi)
je     804c592 <calloc@plt+0x3412>
mov    %esi,(%esp)
call   8048de0 <free@plt>
mov    %ebp,(%esp)
call   804d4d0 <calloc@plt+0x4350>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804ba60 <calloc@plt+0x28e0>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804d540 <calloc@plt+0x43c0>
mov    0x8057178,%edx
mov    %eax,%esi
mov    %eax,0x8057170
mov    0x8057174,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804c4ff <calloc@plt+0x337f>
call   8049130 <abort@plt>
call   804d740 <calloc@plt+0x45c0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049060 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x80573c0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804d6e0 <calloc@plt+0x4560>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x80573c0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804c690 <calloc@plt+0x3510>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x80573c0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x80573c0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x80573c0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x80573c0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804c743 <calloc@plt+0x35c3>
test   %ecx,%ecx
je     804c743 <calloc@plt+0x35c3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049130 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x80573c0,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049060 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804ba60 <calloc@plt+0x28e0>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x80573c0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049060 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   804ba60 <calloc@plt+0x28e0>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804d4d0 <calloc@plt+0x4350>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   804ba60 <calloc@plt+0x28e0>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804c878 <calloc@plt+0x36f8>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804c7b0 <calloc@plt+0x3630>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805717c,%edi
mov    0x8057170,%esi
cmp    $0x1,%edi
jbe    804c8f3 <calloc@plt+0x3773>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048de0 <free@plt>
cmp    %edi,%ebx
jne    804c8e0 <calloc@plt+0x3760>
mov    0x4(%esi),%eax
cmp    $0x80572c0,%eax
je     804c919 <calloc@plt+0x3799>
mov    %eax,(%esp)
call   8048de0 <free@plt>
movl   $0x100,0x8057174
00
movl   $0x80572c0,0x8057178
08
cmp    $0x8057174,%esi
je     804c933 <calloc@plt+0x37b3>
mov    %esi,(%esp)
call   8048de0 <free@plt>
movl   $0x8057174,0x8057170
08
movl   $0x1,0x805717c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x80573c0,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x80573c0,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x80573c0,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x80573c0,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804b940 <calloc@plt+0x27c0>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804c490 <calloc@plt+0x3310>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804b940 <calloc@plt+0x27c0>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804c490 <calloc@plt+0x3310>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804c9d0 <calloc@plt+0x3850>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804ca00 <calloc@plt+0x3880>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x80573c0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x80573c4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x80573c8,%eax
mov    %eax,0x18(%esp)
mov    0x80573cc,%eax
mov    %eax,0x1c(%esp)
mov    0x80573d0,%eax
mov    %eax,0x20(%esp)
mov    0x80573d4,%eax
mov    %eax,0x24(%esp)
mov    0x80573d8,%eax
mov    %eax,0x28(%esp)
mov    0x80573dc,%eax
mov    %eax,0x2c(%esp)
mov    0x80573e0,%eax
mov    %eax,0x30(%esp)
mov    0x80573e4,%eax
mov    %eax,0x34(%esp)
mov    0x80573e8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x80573ec,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804c490 <calloc@plt+0x3310>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ca90 <calloc@plt+0x3910>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804ca90 <calloc@plt+0x3910>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ca90 <calloc@plt+0x3910>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x80573c0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x80573c4,%eax
mov    %eax,0x14(%esp)
mov    0x80573c8,%eax
mov    %eax,0x18(%esp)
mov    0x80573cc,%eax
mov    %eax,0x1c(%esp)
mov    0x80573d0,%eax
mov    %eax,0x20(%esp)
mov    0x80573d4,%eax
mov    %eax,0x24(%esp)
mov    0x80573d8,%eax
mov    %eax,0x28(%esp)
mov    0x80573dc,%eax
mov    %eax,0x2c(%esp)
mov    0x80573e0,%eax
mov    %eax,0x30(%esp)
mov    0x80573e4,%eax
mov    %eax,0x34(%esp)
mov    0x80573e8,%eax
mov    %eax,0x38(%esp)
mov    0x80573ec,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804c710 <calloc@plt+0x3590>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804c490 <calloc@plt+0x3310>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804cbd0 <calloc@plt+0x3a50>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804cbd0 <calloc@plt+0x3a50>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804cbd0 <calloc@plt+0x3a50>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8057140,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8057140,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8057140,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8057140,0x4(%esp)
jmp    804c490 <calloc@plt+0x3310>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804d278 <calloc@plt+0x40f8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8054624,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80490f0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054637,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x80548c0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80490f0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054694,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804d2a0 <calloc@plt+0x4120>
jmp    *0x8054898(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80547f8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   80490f0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054828,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8048e50 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80490f0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049130 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805463b,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80490f0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805464b,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80490f0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054662,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80490f0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054760,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   80490f0 <__fprintf_chk@plt>
jmp    804cf1f <calloc@plt+0x3d9f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054780,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80490f0 <__fprintf_chk@plt>
jmp    804cf1f <calloc@plt+0x3d9f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80547a4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80490f0 <__fprintf_chk@plt>
jmp    804cf1f <calloc@plt+0x3d9f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80547cc,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80490f0 <__fprintf_chk@plt>
jmp    804cf1f <calloc@plt+0x3d9f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x8054630,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80490f0 <__fprintf_chk@plt>
jmp    804ce11 <calloc@plt+0x3c91>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805485c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8048e50 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804cfaa <calloc@plt+0x3e2a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804d34a <calloc@plt+0x41ca>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804d340 <calloc@plt+0x41c0>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804cdc0 <calloc@plt+0x3c40>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804d3a2 <calloc@plt+0x4222>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804d390 <calloc@plt+0x4210>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804cdc0 <calloc@plt+0x3c40>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804d380 <calloc@plt+0x4200>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x805467e,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x805133c,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8051352,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x805364c,0xc(%esp)
movl   $0x8051366,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049080 <__printf_chk@plt>
mov    0x80571e0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8053674,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048f50 <malloc@plt>
test   %eax,%eax
je     804d4e9 <calloc@plt+0x4369>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804d4e4 <calloc@plt+0x4364>
lea    0x0(%esi),%esi
call   804d740 <calloc@plt+0x45c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804d529 <calloc@plt+0x43a9>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804d4d0 <calloc@plt+0x4350>
call   804d740 <calloc@plt+0x45c0>
xchg   %ax,%ax
jmp    804d4d0 <calloc@plt+0x4350>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804d568 <calloc@plt+0x43e8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
test   %eax,%eax
je     804d57b <calloc@plt+0x43fb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804d550 <calloc@plt+0x43d0>
mov    %eax,(%esp)
call   8048de0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804d560 <calloc@plt+0x43e0>
call   804d740 <calloc@plt+0x45c0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804d5c3 <calloc@plt+0x4443>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804d540 <calloc@plt+0x43c0>
call   804d740 <calloc@plt+0x45c0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804d610 <calloc@plt+0x4490>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804d628 <calloc@plt+0x44a8>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804d540 <calloc@plt+0x43c0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804d5f9 <calloc@plt+0x4479>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804d5f9 <calloc@plt+0x4479>
call   804d740 <calloc@plt+0x45c0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804d668 <calloc@plt+0x44e8>
cmp    $0xaaaaaaa9,%eax
ja     804d674 <calloc@plt+0x44f4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804d540 <calloc@plt+0x43c0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804d650 <calloc@plt+0x44d0>
call   804d740 <calloc@plt+0x45c0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804d4d0 <calloc@plt+0x4350>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049040 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049180 <calloc@plt>
test   %eax,%eax
je     804d6cf <calloc@plt+0x454f>
add    $0x1c,%esp
ret
nop
call   804d740 <calloc@plt+0x45c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804d4d0 <calloc@plt+0x4350>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048df0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048ff0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804d6e0 <calloc@plt+0x4560>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x80548ef,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    0x805712c,%edx
movl   $0x8054281,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8048f20 <error@plt>
call   8049130 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%edi
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebx
cmp    $0x24,%edi
ja     804dd55 <calloc@plt+0x4bd5>
test   %ebx,%ebx
lea    0x2c(%esp),%eax
cmove  %eax,%ebx
call   8049060 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049140 <strtol@plt>
mov    (%ebx),%edi
cmp    %esi,%edi
mov    %eax,%ecx
je     804d8d0 <calloc@plt+0x4750>
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    804d808 <calloc@plt+0x4688>
xor    %ebp,%ebp
mov    0x60(%esp),%eax
test   %eax,%eax
je     804d7f6 <calloc@plt+0x4676>
movzbl (%edi),%edx
test   %dl,%dl
jne    804d828 <calloc@plt+0x46a8>
mov    0x5c(%esp),%eax
mov    %ebp,%esi
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x22,%eax
mov    $0x4,%esi
mov    $0x1,%ebp
je     804d7e7 <calloc@plt+0x4667>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl %dl,%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8048fd0 <strchr@plt>
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
test   %eax,%eax
je     804d8b8 <calloc@plt+0x4738>
mov    0x60(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   8048fd0 <strchr@plt>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%edx
test   %eax,%eax
je     804d893 <calloc@plt+0x4713>
movzbl 0x1(%edi),%eax
cmp    $0x44,%al
je     804d920 <calloc@plt+0x47a0>
cmp    $0x69,%al
je     804dc48 <calloc@plt+0x4ac8>
cmp    $0x42,%al
je     804d920 <calloc@plt+0x47a0>
movl   $0x1,0x14(%esp)
movl   $0x400,0x10(%esp)
sub    $0x42,%edx
cmp    $0x35,%dl
ja     804d8b8 <calloc@plt+0x4738>
movzbl %dl,%edx
jmp    *0x8054938(,%edx,4)
lea    0x0(%esi),%esi
mov    0x5c(%esp),%eax
mov    %ebp,%esi
or     $0x2,%esi
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x60(%esp),%edx
mov    $0x4,%esi
test   %edx,%edx
je     804d7fe <calloc@plt+0x467e>
movzbl (%edi),%edx
test   %dl,%dl
je     804d7fe <calloc@plt+0x467e>
movsbl %dl,%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8048fd0 <strchr@plt>
mov    $0x1,%ecx
mov    0x10(%esp),%edx
test   %eax,%eax
jne    804d84f <calloc@plt+0x46cf>
jmp    804d7fe <calloc@plt+0x467e>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x14(%esp)
movl   $0x3e8,0x10(%esp)
jmp    804d8a3 <calloc@plt+0x4723>
lea    0x0(%esi),%esi
xor    %esi,%esi
lea    0x0(%esi),%esi
add    0x14(%esp),%edi
or     %esi,%ebp
mov    %ebp,%eax
or     $0x2,%eax
mov    %edi,(%ebx)
cmpb   $0x0,(%edi)
cmovne %eax,%ebp
jmp    804d7f6 <calloc@plt+0x4676>
cmp    $0xffc00000,%ecx
jl     804dc68 <calloc@plt+0x4ae8>
cmp    $0x3fffff,%ecx
jg     804dce8 <calloc@plt+0x4b68>
shl    $0x9,%ecx
xor    %esi,%esi
jmp    804d940 <calloc@plt+0x47c0>
nop
mov    $0x80000000,%eax
xor    %esi,%esi
cltd
idivl  0x10(%esp)
mov    $0x7,%edx
mov    %ebp,0x18(%esp)
mov    %edx,%ebp
mov    %edi,0x1c(%esp)
mov    %ebx,0x54(%esp)
mov    0x10(%esp),%ebx
mov    %eax,%edi
jmp    804d9c0 <calloc@plt+0x4840>
nop
mov    $0x7fffffff,%eax
cltd
idiv   %ebx
cmp    %ecx,%eax
jl     804dca8 <calloc@plt+0x4b28>
imul   %ebx,%ecx
xor    %eax,%eax
or     %eax,%esi
sub    $0x1,%ebp
je     804dc98 <calloc@plt+0x4b18>
cmp    %ecx,%edi
jle    804d9a0 <calloc@plt+0x4820>
mov    $0x80000000,%ecx
mov    $0x1,%eax
jmp    804d9b5 <calloc@plt+0x4835>
mov    $0x80000000,%eax
xor    %esi,%esi
cltd
idivl  0x10(%esp)
mov    $0x8,%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
mov    %edx,%edi
mov    %ebx,0x54(%esp)
mov    0x10(%esp),%ebx
mov    %eax,%ebp
jmp    804da18 <calloc@plt+0x4898>
nop
mov    $0x7fffffff,%eax
cltd
idiv   %ebx
cmp    %ecx,%eax
jl     804dc78 <calloc@plt+0x4af8>
imul   %ebx,%ecx
xor    %eax,%eax
or     %eax,%esi
sub    $0x1,%edi
je     804dc98 <calloc@plt+0x4b18>
cmp    %ecx,%ebp
jle    804d9f8 <calloc@plt+0x4878>
mov    $0x80000000,%ecx
mov    $0x1,%eax
jmp    804da0d <calloc@plt+0x488d>
mov    $0x80000000,%eax
xor    %esi,%esi
cltd
idivl  0x10(%esp)
mov    %ebp,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    $0x4,%eax
mov    %eax,%ebp
cmp    %ecx,0x18(%esp)
jg     804dc88 <calloc@plt+0x4b08>
mov    $0x7fffffff,%eax
cltd
idivl  0x10(%esp)
cmp    %ecx,%eax
jl     804dcf8 <calloc@plt+0x4b78>
imul   0x10(%esp),%ecx
xor    %eax,%eax
or     %eax,%esi
sub    $0x1,%ebp
jne    804da43 <calloc@plt+0x48c3>
mov    0x1c(%esp),%ebp
jmp    804d940 <calloc@plt+0x47c0>
xchg   %ax,%ax
mov    $0x80000000,%eax
xor    %esi,%esi
cltd
idivl  0x10(%esp)
mov    %ebp,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    $0x5,%eax
mov    %eax,%ebp
jmp    804dab8 <calloc@plt+0x4938>
lea    0x0(%esi),%esi
mov    $0x7fffffff,%eax
cltd
idivl  0x10(%esp)
cmp    %ecx,%eax
jl     804dcd8 <calloc@plt+0x4b58>
imul   0x10(%esp),%ecx
xor    %eax,%eax
or     %eax,%esi
sub    $0x1,%ebp
je     804da6d <calloc@plt+0x48ed>
cmp    %ecx,0x18(%esp)
jle    804da98 <calloc@plt+0x4918>
mov    $0x80000000,%ecx
mov    $0x1,%eax
jmp    804dab1 <calloc@plt+0x4931>
lea    0x0(%esi),%esi
cmp    $0xc0000000,%ecx
jl     804dc68 <calloc@plt+0x4ae8>
cmp    $0x3fffffff,%ecx
jg     804dce8 <calloc@plt+0x4b68>
add    %ecx,%ecx
xor    %esi,%esi
jmp    804d940 <calloc@plt+0x47c0>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffe00000,%ecx
jl     804dc68 <calloc@plt+0x4ae8>
cmp    $0x1fffff,%ecx
jg     804dce8 <calloc@plt+0x4b68>
shl    $0xa,%ecx
xor    %esi,%esi
jmp    804d940 <calloc@plt+0x47c0>
lea    0x0(%esi),%esi
mov    $0x80000000,%eax
cltd
idivl  0x10(%esp)
cmp    %eax,%ecx
mov    %eax,%esi
jl     804dd23 <calloc@plt+0x4ba3>
mov    $0x7fffffff,%eax
cltd
idivl  0x10(%esp)
cmp    %eax,%ecx
mov    %eax,%edx
jg     804dd37 <calloc@plt+0x4bb7>
imul   0x10(%esp),%ecx
xor    %eax,%eax
cmp    %esi,%ecx
jl     804dd79 <calloc@plt+0x4bf9>
cmp    %ecx,%edx
jl     804dd46 <calloc@plt+0x4bc6>
imul   0x10(%esp),%ecx
xor    %edx,%edx
or     %eax,%edx
mov    %edx,%esi
jmp    804d940 <calloc@plt+0x47c0>
nop
mov    $0x80000000,%eax
cltd
idivl  0x10(%esp)
cmp    %eax,%ecx
jl     804dc68 <calloc@plt+0x4ae8>
mov    $0x7fffffff,%eax
cltd
idivl  0x10(%esp)
cmp    %eax,%ecx
jg     804dce8 <calloc@plt+0x4b68>
imul   0x10(%esp),%ecx
xor    %esi,%esi
jmp    804d940 <calloc@plt+0x47c0>
mov    $0x80000000,%eax
xor    %esi,%esi
cltd
idivl  0x10(%esp)
mov    %ebx,0x54(%esp)
mov    %eax,0x18(%esp)
mov    $0x3,%eax
mov    %eax,%ebx
cmp    %ecx,0x18(%esp)
jg     804dcc8 <calloc@plt+0x4b48>
mov    $0x7fffffff,%eax
cltd
idivl  0x10(%esp)
cmp    %ecx,%eax
jl     804dd14 <calloc@plt+0x4b94>
imul   0x10(%esp),%ecx
xor    %eax,%eax
or     %eax,%esi
sub    $0x1,%ebx
jne    804dbbb <calloc@plt+0x4a3b>
mov    0x54(%esp),%ebx
jmp    804d940 <calloc@plt+0x47c0>
xchg   %ax,%ax
mov    $0x80000000,%eax
xor    %esi,%esi
cltd
idivl  0x10(%esp)
mov    $0x6,%edx
mov    %ebp,0x18(%esp)
mov    %edx,%ebp
mov    %ebx,0x54(%esp)
mov    %eax,%ebx
jmp    804dc34 <calloc@plt+0x4ab4>
nop
mov    $0x7fffffff,%eax
cltd
idivl  0x10(%esp)
cmp    %ecx,%eax
jl     804dcb8 <calloc@plt+0x4b38>
imul   0x10(%esp),%ecx
xor    %eax,%eax
or     %eax,%esi
sub    $0x1,%ebp
je     804dd07 <calloc@plt+0x4b87>
cmp    %ecx,%ebx
jle    804dc10 <calloc@plt+0x4a90>
mov    $0x80000000,%ecx
mov    $0x1,%eax
jmp    804dc29 <calloc@plt+0x4aa9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x42,0x2(%edi)
movl   $0x400,0x10(%esp)
sete   %al
lea    0x1(%eax,%eax,1),%eax
mov    %eax,0x14(%esp)
jmp    804d8a3 <calloc@plt+0x4723>
xchg   %ax,%ax
mov    $0x80000000,%ecx
mov    $0x1,%esi
jmp    804d940 <calloc@plt+0x47c0>
nop
mov    $0x7fffffff,%ecx
mov    $0x1,%eax
jmp    804da0d <calloc@plt+0x488d>
nop
mov    $0x80000000,%ecx
mov    $0x1,%eax
jmp    804da66 <calloc@plt+0x48e6>
nop
mov    0x18(%esp),%ebp
mov    0x1c(%esp),%edi
jmp    804dbe5 <calloc@plt+0x4a65>
lea    0x0(%esi),%esi
mov    $0x7fffffff,%ecx
mov    $0x1,%eax
jmp    804d9b5 <calloc@plt+0x4835>
nop
mov    $0x7fffffff,%ecx
mov    $0x1,%eax
jmp    804dc29 <calloc@plt+0x4aa9>
nop
mov    $0x80000000,%ecx
mov    $0x1,%eax
jmp    804dbde <calloc@plt+0x4a5e>
nop
mov    $0x7fffffff,%ecx
mov    $0x1,%eax
jmp    804dab1 <calloc@plt+0x4931>
nop
mov    $0x7fffffff,%ecx
mov    $0x1,%esi
jmp    804d940 <calloc@plt+0x47c0>
nop
mov    $0x7fffffff,%ecx
mov    $0x1,%eax
jmp    804da66 <calloc@plt+0x48e6>
mov    0x18(%esp),%ebp
mov    0x54(%esp),%ebx
jmp    804d940 <calloc@plt+0x47c0>
mov    $0x7fffffff,%ecx
mov    $0x1,%eax
jmp    804dbde <calloc@plt+0x4a5e>
mov    $0x1,%eax
mov    $0x80000000,%ecx
mov    $0x1,%edx
jmp    804db66 <calloc@plt+0x49e6>
mov    $0x1,%eax
mov    $0x7fffffff,%ecx
jmp    804db57 <calloc@plt+0x49d7>
mov    $0x7fffffff,%ecx
mov    $0x1,%edx
jmp    804db66 <calloc@plt+0x49e6>
movl   $0x8054a10,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x8054900,0x4(%esp)
movl   $0x8054910,(%esp)
call   8049160 <__assert_fail@plt>
mov    $0x80000000,%ecx
mov    $0x1,%edx
jmp    804db66 <calloc@plt+0x49e6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%esi
mov    0x50(%esp),%ebp
mov    0x54(%esp),%ebx
cmp    $0x24,%esi
ja     804e180 <calloc@plt+0x5000>
movzbl 0x0(%ebp),%edx
lea    0x2c(%esp),%eax
test   %ebx,%ebx
cmove  %eax,%ebx
mov    %edx,0x14(%esp)
call   8049170 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    (%eax),%edi
mov    %ebp,%eax
jmp    804ddd6 <calloc@plt+0x4c56>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
movzbl %dl,%ecx
testb  $0x20,0x1(%edi,%ecx,2)
jne    804ddd0 <calloc@plt+0x4c50>
cmp    $0x2d,%dl
jne    804ddf8 <calloc@plt+0x4c78>
mov    $0x4,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049060 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x14(%esp)
call   8048fc0 <strtoul@plt>
mov    (%ebx),%edi
mov    0x14(%esp),%edx
cmp    %ebp,%edi
mov    %eax,%esi
je     804deda <calloc@plt+0x4d5a>
mov    (%edx),%eax
test   %eax,%eax
jne    804de50 <calloc@plt+0x4cd0>
xor    %ebp,%ebp
mov    0x60(%esp),%eax
test   %eax,%eax
je     804de3e <calloc@plt+0x4cbe>
movzbl (%edi),%edx
test   %dl,%dl
jne    804de5c <calloc@plt+0x4cdc>
mov    0x5c(%esp),%eax
mov    %esi,(%eax)
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x22,%eax
mov    $0x1,%ebp
jne    804dde5 <calloc@plt+0x4c65>
jmp    804de2f <calloc@plt+0x4caf>
movsbl %dl,%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   8048fd0 <strchr@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
je     804df28 <calloc@plt+0x4da8>
mov    0x60(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   8048fd0 <strchr@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
je     804debb <calloc@plt+0x4d3b>
movzbl 0x1(%edi),%eax
cmp    $0x44,%al
je     804e13b <calloc@plt+0x4fbb>
cmp    $0x69,%al
je     804e120 <calloc@plt+0x4fa0>
cmp    $0x42,%al
je     804e13b <calloc@plt+0x4fbb>
movl   $0x1,0x14(%esp)
mov    $0x400,%ecx
sub    $0x42,%edx
cmp    $0x35,%dl
ja     804df28 <calloc@plt+0x4da8>
movzbl %dl,%edx
jmp    *0x8054a18(,%edx,4)
mov    0x60(%esp),%edx
test   %edx,%edx
je     804dde5 <calloc@plt+0x4c65>
movzbl 0x0(%ebp),%edx
test   %dl,%dl
je     804dde5 <calloc@plt+0x4c65>
movsbl %dl,%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    $0x1,%esi
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   8048fd0 <strchr@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
jne    804de7f <calloc@plt+0x4cff>
jmp    804dde5 <calloc@plt+0x4c65>
lea    0x0(%esi,%eiz,1),%esi
mov    0x5c(%esp),%eax
mov    %esi,(%eax)
mov    %ebp,%eax
or     $0x2,%eax
jmp    804ddea <calloc@plt+0x4c6a>
xor    %eax,%eax
add    0x14(%esp),%edi
or     %eax,%ebp
mov    %ebp,%eax
or     $0x2,%eax
mov    %edi,(%ebx)
cmpb   $0x0,(%edi)
cmovne %eax,%ebp
jmp    804de3e <calloc@plt+0x4cbe>
cmp    $0x7fffffff,%esi
ja     804e093 <calloc@plt+0x4f13>
add    %esi,%esi
xor    %eax,%eax
jmp    804df3a <calloc@plt+0x4dba>
cmp    $0x7fffff,%esi
ja     804e093 <calloc@plt+0x4f13>
shl    $0x9,%esi
xor    %eax,%eax
jmp    804df3a <calloc@plt+0x4dba>
mov    $0xffffffff,%eax
xor    %edx,%edx
div    %ecx
mov    $0x7,%edx
mov    %ebp,0x1c(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
jmp    804dfa1 <calloc@plt+0x4e21>
imul   %ecx,%esi
xor    %ebp,%ebp
or     %ebp,%eax
sub    $0x1,%edx
je     804e14d <calloc@plt+0x4fcd>
cmp    %esi,0x18(%esp)
jae    804df91 <calloc@plt+0x4e11>
mov    $0xffffffff,%esi
mov    $0x1,%ebp
jmp    804df96 <calloc@plt+0x4e16>
mov    $0xffffffff,%eax
xor    %edx,%edx
div    %ecx
mov    $0x8,%edx
mov    %ebp,0x1c(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
jmp    804dfdd <calloc@plt+0x4e5d>
imul   %ecx,%esi
xor    %ebp,%ebp
or     %ebp,%eax
sub    $0x1,%edx
je     804e14d <calloc@plt+0x4fcd>
cmp    %esi,0x18(%esp)
jae    804dfcd <calloc@plt+0x4e4d>
mov    $0xffffffff,%esi
mov    $0x1,%ebp
jmp    804dfd2 <calloc@plt+0x4e52>
mov    $0xffffffff,%eax
xor    %edx,%edx
div    %ecx
movl   $0x4,0x18(%esp)
mov    %eax,0x1c(%esp)
xor    %eax,%eax
cmp    %esi,0x1c(%esp)
jb     804e156 <calloc@plt+0x4fd6>
imul   %ecx,%esi
xor    %edx,%edx
or     %edx,%eax
subl   $0x1,0x18(%esp)
jne    804e006 <calloc@plt+0x4e86>
jmp    804df3a <calloc@plt+0x4dba>
mov    $0xffffffff,%eax
xor    %edx,%edx
div    %ecx
movl   $0x5,0x18(%esp)
mov    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    804e04e <calloc@plt+0x4ece>
imul   %ecx,%esi
xor    %edx,%edx
or     %edx,%eax
subl   $0x1,0x18(%esp)
je     804df3a <calloc@plt+0x4dba>
cmp    %esi,0x1c(%esp)
jae    804e03c <calloc@plt+0x4ebc>
mov    $0xffffffff,%esi
mov    $0x1,%edx
jmp    804e041 <calloc@plt+0x4ec1>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    %eax,%esi
ja     804e171 <calloc@plt+0x4ff1>
imul   %ecx,%esi
cmp    %esi,%eax
jb     804e171 <calloc@plt+0x4ff1>
imul   %ecx,%esi
xor    %eax,%eax
jmp    804df3a <calloc@plt+0x4dba>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    %eax,%esi
jbe    804e07c <calloc@plt+0x4efc>
mov    $0xffffffff,%esi
mov    $0x1,%eax
jmp    804df3a <calloc@plt+0x4dba>
mov    $0xffffffff,%eax
xor    %edx,%edx
div    %ecx
mov    $0x6,%edx
mov    %ebp,0x1c(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
jmp    804e0cc <calloc@plt+0x4f4c>
imul   %ecx,%esi
xor    %ebp,%ebp
or     %ebp,%eax
sub    $0x1,%edx
je     804e14d <calloc@plt+0x4fcd>
cmp    %esi,0x18(%esp)
jae    804e0bc <calloc@plt+0x4f3c>
mov    $0xffffffff,%esi
mov    $0x1,%ebp
jmp    804e0c1 <calloc@plt+0x4f41>
cmp    $0x3fffff,%esi
ja     804e093 <calloc@plt+0x4f13>
shl    $0xa,%esi
xor    %eax,%eax
jmp    804df3a <calloc@plt+0x4dba>
mov    $0xffffffff,%eax
xor    %edx,%edx
div    %ecx
movl   $0x3,0x18(%esp)
mov    %eax,0x1c(%esp)
xor    %eax,%eax
cmp    %esi,0x1c(%esp)
jb     804e165 <calloc@plt+0x4fe5>
imul   %ecx,%esi
xor    %edx,%edx
or     %edx,%eax
subl   $0x1,0x18(%esp)
jne    804e107 <calloc@plt+0x4f87>
jmp    804df3a <calloc@plt+0x4dba>
xor    %eax,%eax
mov    $0x400,%ecx
cmpb   $0x42,0x2(%edi)
sete   %al
lea    0x1(%eax,%eax,1),%eax
mov    %eax,0x14(%esp)
jmp    804dec8 <calloc@plt+0x4d48>
movl   $0x2,0x14(%esp)
mov    $0x3e8,%ecx
jmp    804dec8 <calloc@plt+0x4d48>
mov    0x1c(%esp),%ebp
jmp    804df3a <calloc@plt+0x4dba>
mov    $0xffffffff,%esi
mov    $0x1,%edx
jmp    804e015 <calloc@plt+0x4e95>
mov    $0xffffffff,%esi
mov    $0x1,%edx
jmp    804e112 <calloc@plt+0x4f92>
mov    $0x1,%eax
mov    $0xffffffff,%esi
jmp    804df3a <calloc@plt+0x4dba>
movl   $0x8054af0,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x8054900,0x4(%esp)
movl   $0x8054910,(%esp)
call   8049160 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    804e210 <calloc@plt+0x5090>
mov    0x80573f0,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     804e2b8 <calloc@plt+0x5138>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049030 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804e230 <calloc@plt+0x50b0>
movl   $0x1,0x80573f0
00
test   %ebx,%ebx
js     804e207 <calloc@plt+0x5087>
cmpl   $0xffffffff,0x80573f0
je     804e260 <calloc@plt+0x50e0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049030 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049060 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    804e1f0 <calloc@plt+0x5070>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804e1b0 <calloc@plt+0x5030>
test   %eax,%eax
mov    %eax,%ebx
js     804e207 <calloc@plt+0x5087>
movl   $0xffffffff,0x80573f0
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049030 <fcntl@plt>
test   %eax,%eax
js     804e294 <calloc@plt+0x5114>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049030 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    804e207 <calloc@plt+0x5087>
call   8049060 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049150 <close@plt>
mov    %edi,(%esi)
jmp    804e207 <calloc@plt+0x5087>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804e1b0 <calloc@plt+0x5030>
mov    %eax,%ebx
jmp    804e1fa <calloc@plt+0x507a>
nop
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804e900 <calloc@plt+0x5780>
test   %eax,%eax
je     804e30f <calloc@plt+0x518f>
mov    0x1c(%esp),%edx
test   %edx,%edx
js     804e316 <calloc@plt+0x5196>
mov    0x30(%esp),%ecx
mov    %eax,(%ecx)
mov    %edx,%eax
add    $0x2c,%esp
ret
mov    $0xffffffff,%eax
jmp    804e30b <calloc@plt+0x518b>
mov    %eax,(%esp)
call   8048de0 <free@plt>
call   8049060 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    $0xffffffff,%eax
jmp    804e30b <calloc@plt+0x518b>
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8048ee0 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804e770 <calloc@plt+0x55f0>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    804e370 <calloc@plt+0x51f0>
test   %dl,%dl
je     804e367 <calloc@plt+0x51e7>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     804e390 <calloc@plt+0x5210>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    804e367 <calloc@plt+0x51e7>
call   8049060 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049060 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   80490a0 <nl_langinfo@plt>
mov    0x80573f4,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x805467d,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804e47c <calloc@plt+0x52fc>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804e447 <calloc@plt+0x52c7>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804e420 <calloc@plt+0x52a0>
nop
mov    %ebp,(%esp)
call   8048ff0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8048ff0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804e478 <calloc@plt+0x52f8>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804e43b <calloc@plt+0x52bb>
cmp    $0x2a,%bl
jne    804e400 <calloc@plt+0x5280>
cmpb   $0x0,0x1(%ebp)
jne    804e400 <calloc@plt+0x5280>
mov    %ebp,(%esp)
call   8048ff0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x8054b02,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804e73d <calloc@plt+0x55bd>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804e447 <calloc@plt+0x52c7>
movl   $0x8054b08,(%esp)
call   8048f30 <getenv@plt>
test   %eax,%eax
je     804e495 <calloc@plt+0x5315>
cmpb   $0x0,(%eax)
jne    804e6a3 <calloc@plt+0x5523>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x8054af9,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804e694 <calloc@plt+0x5514>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8048f50 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804e733 <calloc@plt+0x55b3>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804e4fc <calloc@plt+0x537c>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048db0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804e678 <calloc@plt+0x54f8>
movl   $0x8051671,0x4(%esp)
mov    %eax,(%esp)
call   8048f90 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e670 <calloc@plt+0x54f0>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804e656 <calloc@plt+0x54d6>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804e560 <calloc@plt+0x53e0>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804e560 <calloc@plt+0x53e0>
cmp    $0x23,%eax
je     804e6cd <calloc@plt+0x554d>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049050 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8054b18,0x4(%esp)
mov    %esi,(%esp)
call   8048fe0 <fscanf@plt>
cmp    $0x1,%eax
jle    804e6f0 <calloc@plt+0x5570>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8048ff0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8048ff0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804e70e <calloc@plt+0x558e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8048f50 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804e742 <calloc@plt+0x55c2>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8048ed0 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8048ed0 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804e56c <calloc@plt+0x53ec>
mov    %esi,(%esp)
call   8049090 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804e6f0 <calloc@plt+0x5570>
jmp    804e575 <calloc@plt+0x53f5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049150 <close@plt>
mov    $0x805467d,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    %ebp,0x80573f4
jmp    804e3ef <calloc@plt+0x526f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804e4bb <calloc@plt+0x533b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8048ff0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804e694 <calloc@plt+0x5514>
lea    -0x1(%eax),%eax
jmp    804e4a4 <calloc@plt+0x5324>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804e6e7 <calloc@plt+0x5567>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804e75c <calloc@plt+0x55dc>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804e6c8 <calloc@plt+0x5548>
cmp    $0xffffffff,%eax
jne    804e560 <calloc@plt+0x53e0>
mov    %esi,(%esp)
call   804e770 <calloc@plt+0x55f0>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804e678 <calloc@plt+0x54f8>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804e67d <calloc@plt+0x54fd>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8048f40 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804e60c <calloc@plt+0x548c>
mov    $0x805467d,%ebp
jmp    804e689 <calloc@plt+0x5509>
call   8048e60 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x805467d,%ebp
call   8048de0 <free@plt>
mov    %esi,(%esp)
call   804e770 <calloc@plt+0x55f0>
jmp    804e67d <calloc@plt+0x54fd>
mov    %esi,(%esp)
call   8049090 <__uflow@plt>
jmp    804e6e2 <calloc@plt+0x5562>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049070 <fileno@plt>
test   %eax,%eax
js     804e7f8 <calloc@plt+0x5678>
mov    %ebx,(%esp)
call   8048f60 <__freading@plt>
test   %eax,%eax
jne    804e7c8 <calloc@plt+0x5648>
mov    %ebx,(%esp)
call   804e810 <calloc@plt+0x5690>
test   %eax,%eax
je     804e7f8 <calloc@plt+0x5678>
call   8049060 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048e10 <fclose@plt>
test   %edi,%edi
je     804e7ba <calloc@plt+0x563a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049070 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80490e0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804e792 <calloc@plt+0x5612>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048e10 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804e828 <calloc@plt+0x56a8>
mov    %ebx,(%esp)
call   8048f60 <__freading@plt>
test   %eax,%eax
jne    804e838 <calloc@plt+0x56b8>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048dc0 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804e828 <calloc@plt+0x56a8>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804e870 <calloc@plt+0x56f0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048dc0 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804e8b0 <calloc@plt+0x5730>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048e30 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804e88f <calloc@plt+0x570f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804e88f <calloc@plt+0x570f>
mov    %ebx,(%esp)
call   8049070 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   80490e0 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804e8f7 <calloc@plt+0x5777>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804e8ef <calloc@plt+0x576f>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   8050670 <calloc@plt+0x74f0>
test   %eax,%eax
js     804fa00 <calloc@plt+0x6880>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8050590 <calloc@plt+0x7410>
test   %eax,%eax
js     804fbf8 <calloc@plt+0x6a78>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     804eb38 <calloc@plt+0x59b8>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     804eb38 <calloc@plt+0x59b8>
cmp    $0xf9f,%edx
ja     804f648 <calloc@plt+0x64c8>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4f4(%ebp)
00
test   %eax,%eax
je     804f67b <calloc@plt+0x64fb>
mov    -0x4f0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4b4(%ebp)
mov    -0x418(%ebp),%eax
xor    %edx,%edx
mov    %edx,%edi
mov    %ebx,%edx
mov    -0x4bc(%ebp),%esi
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
je     804f1cb <calloc@plt+0x604b>
sub    %edx,%ebx
mov    %ebx,%eax
add    %edi,%eax
mov    %eax,%ecx
mov    $0xffffffff,%eax
cmovae %ecx,%eax
mov    -0x4b4(%ebp),%ecx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%ecx
jae    804f2c8 <calloc@plt+0x6148>
test   %ecx,%ecx
je     804f0a0 <calloc@plt+0x5f20>
js     804fbe0 <calloc@plt+0x6a60>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%ecx
cmp    %ecx,%eax
cmovb  %ecx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804fbe0 <calloc@plt+0x6a60>
cmp    -0x4bc(%ebp),%esi
sete   -0x4d8(%ebp)
test   %esi,%esi
je     804ea85 <calloc@plt+0x5905>
cmpb   $0x0,-0x4d8(%ebp)
je     804f0b0 <calloc@plt+0x5f30>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     804fbe0 <calloc@plt+0x6a60>
test   %edi,%edi
jne    804f388 <calloc@plt+0x6208>
add    -0x4b0(%ebp),%edi
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8048df0 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     804fc40 <calloc@plt+0x6ac0>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     804f0e0 <calloc@plt+0x5f60>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     804f618 <calloc@plt+0x6498>
cmp    $0x6e,%dl
je     804f360 <calloc@plt+0x61e0>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    804eba0 <calloc@plt+0x5a20>
cmp    $0x41,%dl
je     804eba0 <calloc@plt+0x5a20>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    804ebb1 <calloc@plt+0x5a31>
lea    0x0(%esi,%eiz,1),%esi
call   8049060 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804eb5b <calloc@plt+0x59db>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804eb73 <calloc@plt+0x59f3>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%ebx
xor    %gs:0x14,%ebx
jne    805050b <calloc@plt+0x738b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     804f718 <calloc@plt+0x6598>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%ebx
mov    0x8(%eax),%eax
add    $0x1,%ebx
movb   $0x25,-0x1(%ebx)
test   $0x1,%al
je     804ebda <calloc@plt+0x5a5a>
mov    -0x4c0(%ebp),%ecx
mov    %ecx,%ebx
add    $0x2,%ebx
movb   $0x27,0x1(%ecx)
test   $0x2,%al
je     804ebe4 <calloc@plt+0x5a64>
movb   $0x2d,(%ebx)
add    $0x1,%ebx
test   $0x4,%al
je     804ebee <calloc@plt+0x5a6e>
movb   $0x2b,(%ebx)
add    $0x1,%ebx
test   $0x8,%al
je     804ebf8 <calloc@plt+0x5a78>
movb   $0x20,(%ebx)
add    $0x1,%ebx
test   $0x10,%al
je     804ec02 <calloc@plt+0x5a82>
movb   $0x23,(%ebx)
add    $0x1,%ebx
test   $0x40,%al
je     804ec0c <calloc@plt+0x5a8c>
movb   $0x49,(%ebx)
add    $0x1,%ebx
test   $0x20,%al
je     804ec16 <calloc@plt+0x5a96>
movb   $0x30,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%esi
cmp    %esi,%eax
je     804ec3a <calloc@plt+0x5aba>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    -0x4ac(%ebp),%edi
mov    0x18(%edi),%eax
mov    0x1c(%edi),%esi
cmp    %esi,%eax
je     804ec5e <calloc@plt+0x5ade>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     804ec84 <calloc@plt+0x5b04>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     804f3d0 <calloc@plt+0x6250>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
movzbl 0x24(%ecx),%eax
movb   $0x0,0x1(%ebx)
mov    %al,(%ebx)
mov    0x14(%ecx),%eax
cmp    $0xffffffff,%eax
je     804f640 <calloc@plt+0x64c0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804f618 <calloc@plt+0x6498>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     804f630 <calloc@plt+0x64b0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804f618 <calloc@plt+0x6498>
mov    0x4(%eax),%eax
lea    0x1(%edx),%edi
mov    %edi,-0x4e8(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%edi
mov    %edi,%eax
add    $0x2,%eax
cmp    %eax,%edi
mov    %eax,%ecx
mov    %eax,-0x4ec(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804ede9 <calloc@plt+0x5c69>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     804fa87 <calloc@plt+0x6907>
js     804ed74 <calloc@plt+0x5bf4>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    804ed88 <calloc@plt+0x5c08>
call   8049060 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    804fe38 <calloc@plt+0x6cb8>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804eb38 <calloc@plt+0x59b8>
mov    %eax,(%esp)
call   8048de0 <free@plt>
jmp    804eb43 <calloc@plt+0x59c3>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     804ed40 <calloc@plt+0x5bc0>
or     $0xffffffff,%eax
lea    0x0(%esi),%esi
mov    -0x4ec(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4bc(%ebp),%eax
mov    -0x4b0(%ebp),%edi
cmp    %eax,%edi
sete   %al
test   %edi,%edi
mov    %eax,%esi
je     804edbd <calloc@plt+0x5c3d>
test   %al,%al
je     804f690 <calloc@plt+0x6510>
mov    -0x4b4(%ebp),%eax
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804f6e0 <calloc@plt+0x6560>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%edi
mov    -0x4b8(%ebp),%esi
movb   $0x0,(%edi,%esi,1)
call   8049060 <__errno_location@plt>
mov    -0x4b4(%ebp),%edi
mov    %ebx,-0x4b4(%ebp)
mov    %esi,%ebx
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4f8(%ebp)
mov    %edi,%esi
mov    $0x7fffffff,%eax
sub    %ebx,%esi
cmovs  %eax,%esi
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     804f618 <calloc@plt+0x6498>
jmp    *0x8054b24(,%eax,4)
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     804f300 <calloc@plt+0x6180>
cmp    $0x2,%ecx
jne    804f280 <calloc@plt+0x6100>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     804f1e0 <calloc@plt+0x6060>
cmp    %edx,%esi
jbe    804eef9 <calloc@plt+0x5d79>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%ebx,1)
jne    804f618 <calloc@plt+0x6498>
cmp    %edx,%eax
jle    804ef05 <calloc@plt+0x5d85>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%esi
ja     804fe10 <calloc@plt+0x6c90>
cmp    $0x7fffffff,%esi
je     804fe60 <calloc@plt+0x6ce0>
test   %edi,%edi
mov    $0xffffffff,%eax
lea    (%edi,%edi,1),%ecx
cmovs  %eax,%ecx
add    -0x4ec(%ebp),%edx
cmp    %edx,%ebx
ja     804ef3a <calloc@plt+0x5dba>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%edi
jae    804ee1a <calloc@plt+0x5c9a>
test   %edi,%edi
je     804f350 <calloc@plt+0x61d0>
js     804ed4b <calloc@plt+0x5bcb>
add    %edi,%edi
cmp    %eax,%edi
cmovb  %eax,%edi
cmp    $0xffffffff,%edi
je     804ed4b <calloc@plt+0x5bcb>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     804f088 <calloc@plt+0x5f08>
test   %dl,%dl
jne    804f088 <calloc@plt+0x5f08>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     804ed4b <calloc@plt+0x5bcb>
test   %dl,%dl
jne    804f6b0 <calloc@plt+0x6530>
mov    %esi,-0x4b0(%ebp)
jmp    804ee1a <calloc@plt+0x5c9a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     804f5c8 <calloc@plt+0x6448>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    804fa18 <calloc@plt+0x6898>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
jne    804ee7c <calloc@plt+0x5cfc>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x1c(%esp)
jmp    804f30a <calloc@plt+0x618a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8048f50 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
jmp    804efa1 <calloc@plt+0x5e21>
lea    0x0(%esi),%esi
movl   $0xc,-0x4b4(%ebp)
00
jmp    804ea47 <calloc@plt+0x58c7>
nop
mov    -0x4b4(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   8048f40 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
jmp    804eaa5 <calloc@plt+0x5925>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    804f618 <calloc@plt+0x6498>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%edi
cmp    %edi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%edi
cmp    %edi,-0x4b4(%ebp)
jae    804f192 <calloc@plt+0x6012>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    804f598 <calloc@plt+0x6418>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ebx
cmp    %ebx,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     804f620 <calloc@plt+0x64a0>
test   %bl,%bl
jne    804f620 <calloc@plt+0x64a0>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804fa58 <calloc@plt+0x68d8>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%ebx
mov    %eax,%esi
movb   $0x25,(%eax,%ebx,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%edx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
jne    804ea0f <calloc@plt+0x588f>
mov    %edi,-0x4b8(%ebp)
mov    %esi,-0x4b0(%ebp)
jmp    804ead1 <calloc@plt+0x5951>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    804f3c0 <calloc@plt+0x6240>
test   %eax,%eax
jns    804eefd <calloc@plt+0x5d7d>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    804fb73 <calloc@plt+0x69f3>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804f220 <calloc@plt+0x60a0>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804f238 <calloc@plt+0x60b8>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804f250 <calloc@plt+0x60d0>
mov    %eax,(%esp)
call   8048de0 <free@plt>
test   %ebx,%ebx
jne    804f26d <calloc@plt+0x60ed>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    804eb81 <calloc@plt+0x5a01>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%ecx
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b0(%ebp)
jmp    804eabb <calloc@plt+0x593b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    804f4cd <calloc@plt+0x634d>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%edi
jmp    804ef52 <calloc@plt+0x5dd2>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%ebx
lea    -0x12(%ebx),%edx
cmp    $0x4,%edx
ja     804f618 <calloc@plt+0x6498>
mov    0x4(%eax),%eax
jmp    *0x8054b6c(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     804eabb <calloc@plt+0x593b>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8048df0 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
jmp    804eabb <calloc@plt+0x593b>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    804ee1a <calloc@plt+0x5c9a>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    804fa08 <calloc@plt+0x6888>
test   $0xc,%al
je     804ec84 <calloc@plt+0x5b04>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
jmp    804ec7e <calloc@plt+0x5afe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     804fdc0 <calloc@plt+0x6c40>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    804fb38 <calloc@plt+0x69b8>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    804ee7c <calloc@plt+0x5cfc>
jmp    804f300 <calloc@plt+0x6180>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
je     804f300 <calloc@plt+0x6180>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    804f286 <calloc@plt+0x6106>
mov    %ecx,0x20(%esp)
jmp    804ee8f <calloc@plt+0x5d0f>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    804f4cd <calloc@plt+0x634d>
jmp    804f300 <calloc@plt+0x6180>
xchg   %ax,%ax
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     804fd70 <calloc@plt+0x6bf0>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    804faf8 <calloc@plt+0x6978>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
lea    0x0(%esi),%esi
js     804ed40 <calloc@plt+0x5bc0>
shll   -0x4b4(%ebp)
jmp    804f121 <calloc@plt+0x5fa1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    804f1a4 <calloc@plt+0x6024>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
nop
call   8049130 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    %eax,%esi
jmp    804f176 <calloc@plt+0x5ff6>
nop
mov    %edx,-0x4e8(%ebp)
jmp    804ecf7 <calloc@plt+0x5b77>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    804ecc0 <calloc@plt+0x5b40>
nop
cmp    $0xffffffff,%edx
je     804eb38 <calloc@plt+0x59b8>
mov    %edx,(%esp)
call   8048f50 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     804eb38 <calloc@plt+0x59b8>
mov    %eax,-0x4f4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    804e9cf <calloc@plt+0x584f>
movl   $0x0,-0x4b4(%ebp)
00
jmp    804e9dd <calloc@plt+0x585d>
lea    0x0(%esi),%esi
mov    -0x4b4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
mov    %eax,%edi
jmp    804edcd <calloc@plt+0x5c4d>
nop
test   %ebx,%ebx
je     804efb1 <calloc@plt+0x5e31>
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804ee1a <calloc@plt+0x5c9a>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
je     804ede3 <calloc@plt+0x5c63>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    804ede9 <calloc@plt+0x5c69>
lea    0x0(%esi,%eiz,1),%esi
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   8050530 <calloc@plt+0x73b0>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    804f768 <calloc@plt+0x65e8>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     804f743 <calloc@plt+0x65c3>
je     804f76a <calloc@plt+0x65ea>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    804ebb1 <calloc@plt+0x5a31>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
mov    0x8(%eax),%ebx
mov    %ebx,-0x4c4(%ebp)
mov    %eax,%ebx
mov    0xc(%eax),%eax
mov    0x10(%ebx),%ebx
cmp    %ebx,%eax
je     8050051 <calloc@plt+0x6ed1>
mov    -0x4ac(%ebp),%esi
mov    0x14(%esi),%edx
cmp    $0xffffffff,%edx
je     804fb98 <calloc@plt+0x6a18>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    804f618 <calloc@plt+0x6498>
mov    0x4(%edx),%edi
movl   $0x1,-0x4ec(%ebp)
00
test   %edi,%edi
js     80500e6 <calloc@plt+0x6f66>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     804ff81 <calloc@plt+0x6e01>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     8050012 <calloc@plt+0x6e92>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804f618 <calloc@plt+0x6498>
mov    0x4(%eax),%esi
test   %esi,%esi
js     804ff81 <calloc@plt+0x6e01>
test   %esi,%esi
jne    804ffb8 <calloc@plt+0x6e38>
mov    $0xc,%eax
cmp    %eax,%edi
jbe    805051c <calloc@plt+0x739c>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     804ed40 <calloc@plt+0x5bc0>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%edx
ja     8050062 <calloc@plt+0x6ee2>
mov    -0x4ac(%ebp),%eax
mov    %edx,-0x4f8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4e8(%ebp)
call   8050530 <calloc@plt+0x73b0>
mov    -0x4f8(%ebp),%edx
test   %eax,%eax
fldt   -0x4e8(%ebp)
je     804fec8 <calloc@plt+0x6d48>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     804ffd7 <calloc@plt+0x6e57>
movb   $0x4e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x41,0x1(%edx)
movb   $0x4e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
mov    -0x4ec(%ebp),%esi
mov    %ecx,%ebx
sub    %edx,%ebx
test   %esi,%esi
je     804f8ed <calloc@plt+0x676d>
cmp    %ebx,%edi
jbe    804f8ed <calloc@plt+0x676d>
mov    %edx,%eax
sub    %ecx,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%ecx,%edi,1),%ebx
je     8050241 <calloc@plt+0x70c1>
test   %edi,%edi
je     804f8eb <calloc@plt+0x676b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,%ebx
movb   $0x20,-0x1(%ecx)
jne    804f8e0 <calloc@plt+0x6760>
sub    %edx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    804f618 <calloc@plt+0x6498>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     804ffaa <calloc@plt+0x6e2a>
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
add    %ebx,%edi
cmovae %edi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804f9bb <calloc@plt+0x683b>
mov    -0x4b4(%ebp),%ecx
test   %ecx,%ecx
je     80500ac <calloc@plt+0x6f2c>
js     804ed40 <calloc@plt+0x5bc0>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     804f983 <calloc@plt+0x6803>
cmpb   $0x0,-0x4d8(%ebp)
je     80500bb <calloc@plt+0x6f3b>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8050298 <calloc@plt+0x7118>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x4b8(%ebp)
call   8048df0 <memcpy@plt>
mov    -0x4b8(%ebp),%edx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%edx
je     804f9f5 <calloc@plt+0x6875>
mov    %edx,(%esp)
call   8048de0 <free@plt>
mov    -0x4b0(%ebp),%esi
jmp    804f1a4 <calloc@plt+0x6024>
xor    %eax,%eax
jmp    804eb81 <calloc@plt+0x5a01>
nop
movb   $0x4c,(%ebx)
add    $0x1,%ebx
jmp    804ec84 <calloc@plt+0x5b04>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
nop
test   %bl,%bl
je     804f18c <calloc@plt+0x600c>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804f192 <calloc@plt+0x6012>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     804ed40 <calloc@plt+0x5bc0>
mov    $0xc,%eax
jmp    804ed88 <calloc@plt+0x5c08>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
movl   $0x0,0x4(%eax)
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    804f1a4 <calloc@plt+0x6024>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %edi,%ecx
mov    %cl,(%eax)
jmp    804f1a4 <calloc@plt+0x6024>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %di,(%eax)
jmp    804f1a4 <calloc@plt+0x6024>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
mov    -0x4b0(%ebp),%eax
cmp    %eax,-0x4bc(%ebp)
je     804f20e <calloc@plt+0x608e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
jmp    804f20e <calloc@plt+0x608e>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     804fbbc <calloc@plt+0x6a3c>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    804fba0 <calloc@plt+0x6a20>
movl   $0x1,-0x4ec(%ebp)
00
jmp    804f7c2 <calloc@plt+0x6642>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049060 <__errno_location@plt>
mov    %esi,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    804ed4b <calloc@plt+0x5bcb>
xchg   %ax,%ax
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804fc10 <calloc@plt+0x6a90>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804fc28 <calloc@plt+0x6aa8>
mov    %eax,(%esp)
call   8048de0 <free@plt>
call   8049060 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    804eb81 <calloc@plt+0x5a01>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
mov    %eax,%edx
lea    0x1(%edi),%ebx
cmp    %edi,%ebx
cmovae %ebx,%edx
cmp    -0x4b4(%ebp),%edx
jbe    804fcfc <calloc@plt+0x6b7c>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     80500f4 <calloc@plt+0x6f74>
mov    -0x4b4(%ebp),%esi
lea    (%esi,%esi,1),%edx
test   %esi,%esi
cmovns %edx,%eax
mov    %eax,-0x4b4(%ebp)
cmp    %edi,%ebx
mov    $0xffffffff,%eax
cmovae %ebx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804fca3 <calloc@plt+0x6b23>
cmp    %edi,%ebx
jb     804ed40 <calloc@plt+0x5bc0>
mov    %ebx,-0x4b4(%ebp)
cmpl   $0xffffffff,-0x4b4(%ebp)
je     804ed40 <calloc@plt+0x5bc0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     804fcdc <calloc@plt+0x6b5c>
cmpb   $0x0,-0x4ac(%ebp)
je     8050103 <calloc@plt+0x6f83>
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804ed40 <calloc@plt+0x5bc0>
test   %edi,%edi
jne    80502f5 <calloc@plt+0x7175>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%edi,1)
je     804fd1a <calloc@plt+0x6b9a>
cmp    %ebx,-0x4b4(%ebp)
ja     805011c <calloc@plt+0x6f9c>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804fd2c <calloc@plt+0x6bac>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804fd44 <calloc@plt+0x6bc4>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804fd5c <calloc@plt+0x6bdc>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x4f0(%ebp),%eax
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    804eb81 <calloc@plt+0x5a01>
nop
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048d90 <__snprintf_chk@plt>
jmp    804eed5 <calloc@plt+0x5d55>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    -0x4f8(%ebp),%ebx
add    %edx,%edi
mov    %ebx,(%eax)
jmp    804f9f5 <calloc@plt+0x6875>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     804ed59 <calloc@plt+0x5bd9>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
jmp    804ed59 <calloc@plt+0x5bd9>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    805013a <calloc@plt+0x6fba>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804fe80 <calloc@plt+0x6d00>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804fe98 <calloc@plt+0x6d18>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804feb0 <calloc@plt+0x6d30>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    804eb81 <calloc@plt+0x5a01>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     804fff4 <calloc@plt+0x6e74>
lea    0x1(%edx),%eax
fchs
mov    %eax,-0x4e8(%ebp)
movb   $0x2d,(%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    805015f <calloc@plt+0x6fdf>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     804f618 <calloc@plt+0x6498>
jne    804f618 <calloc@plt+0x6498>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4fc(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
mov    -0x4e8(%ebp),%eax
ja     80502d8 <calloc@plt+0x7158>
movb   $0x49,(%eax)
lea    0x3(%eax),%ecx
movb   $0x4e,0x1(%eax)
movb   $0x46,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
lea    0x0(%esi),%esi
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    804f8af <calloc@plt+0x672f>
mov    -0x4ac(%ebp),%eax
xor    %esi,%esi
movzbl 0x24(%eax),%edx
mov    $0x6,%eax
and    $0xffffffdf,%edx
cmp    $0x41,%dl
mov    $0x12,%edx
cmovne %eax,%esi
mov    $0xc,%al
cmovne %edx,%eax
jmp    804f80c <calloc@plt+0x668c>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%edi
jmp    804f9bb <calloc@plt+0x683b>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    804f80c <calloc@plt+0x668c>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    804f81f <calloc@plt+0x669f>
movb   $0x6e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x61,0x1(%edx)
movb   $0x6e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
jmp    804f8af <calloc@plt+0x672f>
testb  $0x4,-0x4c4(%ebp)
je     8050088 <calloc@plt+0x6f08>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x2b,(%edx)
jmp    804ff07 <calloc@plt+0x6d87>
add    $0x1,%edx
xor    %esi,%esi
cmp    %edx,%ebx
je     804f807 <calloc@plt+0x6687>
nop
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     805003c <calloc@plt+0x6ebc>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    8050020 <calloc@plt+0x6ea0>
jmp    804f7ff <calloc@plt+0x667f>
xor    %edi,%edi
movl   $0x0,-0x4ec(%ebp)
00
jmp    804f7c2 <calloc@plt+0x6642>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     804ed40 <calloc@plt+0x5bc0>
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804f841 <calloc@plt+0x66c1>
jmp    804ed40 <calloc@plt+0x5bc0>
testb  $0x8,-0x4c4(%ebp)
mov    %edx,-0x4e8(%ebp)
je     804ff07 <calloc@plt+0x6d87>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x20,(%edx)
jmp    804ff07 <calloc@plt+0x6d87>
movl   $0xc,-0x4b4(%ebp)
00
jmp    804f943 <calloc@plt+0x67c3>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
jmp    804f99f <calloc@plt+0x681f>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    804f7c2 <calloc@plt+0x6642>
movl   $0xc,-0x4b4(%ebp)
00
jmp    804fc83 <calloc@plt+0x6b03>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
mov    %eax,%esi
jmp    804fce6 <calloc@plt+0x6b66>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    804fd1a <calloc@plt+0x6b9a>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     804fe6e <calloc@plt+0x6cee>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
jmp    804fe6e <calloc@plt+0x6cee>
fstp   %st(0)
jp     804f618 <calloc@plt+0x6498>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jne    804f618 <calloc@plt+0x6498>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    80501f8 <calloc@plt+0x7078>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    80501a4 <calloc@plt+0x7024>
test   %esi,%esi
lea    0x1(%eax),%ecx
je     804ff68 <calloc@plt+0x6de8>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   80490a0 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     80504fd <calloc@plt+0x737d>
lea    (%ebx,%esi,1),%ecx
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    80501e8 <calloc@plt+0x7068>
jmp    804ff68 <calloc@plt+0x6de8>
cmp    $0x45,%al
jne    8050323 <calloc@plt+0x71a3>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    80503e8 <calloc@plt+0x7268>
test   %esi,%esi
jne    80503e8 <calloc@plt+0x7268>
lea    0x1(%eax),%esi
mov    -0x4ac(%ebp),%eax
lea    0x4(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
movb   $0x30,0x3(%esi)
mov    %al,(%esi)
jmp    804ff68 <calloc@plt+0x6de8>
testb  $0x20,-0x4c4(%ebp)
je     80503ad <calloc@plt+0x722d>
mov    -0x4e8(%ebp),%esi
test   %esi,%esi
je     80503ad <calloc@plt+0x722d>
cmp    %ecx,%esi
jae    805027d <calloc@plt+0x70fd>
mov    %ebx,%eax
mov    %edx,-0x4c4(%ebp)
sub    $0x1,%ecx
movzbl (%ecx),%edx
sub    $0x1,%eax
cmp    %esi,%ecx
mov    %dl,(%eax)
jne    8050268 <calloc@plt+0x70e8>
mov    -0x4c4(%ebp),%edx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     804f8eb <calloc@plt+0x676b>
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x30,-0x1(%ecx)
jne    8050288 <calloc@plt+0x7108>
jmp    804f8eb <calloc@plt+0x676b>
cmpb   $0x0,-0x4d8(%ebp)
je     804f9b5 <calloc@plt+0x6835>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
mov    %esi,-0x4b0(%ebp)
jmp    804f9bb <calloc@plt+0x683b>
movb   $0x69,(%eax)
lea    0x3(%eax),%ecx
movb   $0x6e,0x1(%eax)
movb   $0x66,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
jmp    804ff68 <calloc@plt+0x6de8>
cmpb   $0x0,-0x4ac(%ebp)
je     804fcf6 <calloc@plt+0x6b76>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804fcfc <calloc@plt+0x6b7c>
cmp    $0x47,%al
jne    8050440 <calloc@plt+0x72c0>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
lea    0x1(%eax),%ecx
je     804ff68 <calloc@plt+0x6de8>
lea    -0x1(%esi),%eax
xor    %ecx,%ecx
test   %esi,%esi
cmovne %eax,%ecx
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   80490a0 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%esi
mov    $0x2e,%eax
mov    %esi,%ecx
test   %cl,%cl
mov    -0x4fc(%ebp),%ecx
cmovne %esi,%eax
mov    -0x4e8(%ebp),%esi
test   %ecx,%ecx
mov    %al,0x1(%esi)
je     80504fd <calloc@plt+0x737d>
add    %ebx,%ecx
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    805039d <calloc@plt+0x721d>
jmp    804ff68 <calloc@plt+0x6de8>
cmp    %ecx,%edx
mov    %ebx,%esi
mov    %ecx,%eax
jae    80503c9 <calloc@plt+0x7249>
lea    0x0(%esi),%esi
sub    $0x1,%eax
movzbl (%eax),%ecx
sub    $0x1,%esi
cmp    %edx,%eax
mov    %cl,(%esi)
jne    80503b8 <calloc@plt+0x7238>
mov    %edx,%ecx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     804f8eb <calloc@plt+0x676b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x20,-0x1(%ecx)
jne    80503d8 <calloc@plt+0x7258>
jmp    804f8eb <calloc@plt+0x676b>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   80490a0 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     8050504 <calloc@plt+0x7384>
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    8050430 <calloc@plt+0x72b0>
jmp    8050221 <calloc@plt+0x70a1>
cmp    $0x41,%al
jne    804f618 <calloc@plt+0x6498>
mov    -0x4e8(%ebp),%ebx
mov    %ebx,%eax
add    $0x2,%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%ebx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%ebx)
jne    80504b3 <calloc@plt+0x7333>
test   %esi,%esi
jne    80504b3 <calloc@plt+0x7333>
mov    %ebx,%esi
add    $0x3,%esi
mov    -0x4ac(%ebp),%eax
lea    0x3(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
add    $0xf,%eax
mov    %al,(%esi)
mov    -0x4fc(%ebp),%eax
mov    %eax,-0x4e8(%ebp)
jmp    804ff68 <calloc@plt+0x6de8>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
lea    0x4(%eax),%ebx
call   80490a0 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x3(%ecx)
je     8050515 <calloc@plt+0x7395>
add    %ebx,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    80504f0 <calloc@plt+0x7370>
jmp    8050488 <calloc@plt+0x7308>
mov    %ebx,%ecx
jmp    804ff68 <calloc@plt+0x6de8>
mov    %ebx,%esi
jmp    8050221 <calloc@plt+0x70a1>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8048e60 <__stack_chk_fail@plt>
mov    %ebx,%esi
jmp    8050488 <calloc@plt+0x7308>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    804f81f <calloc@plt+0x669f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     8050560 <calloc@plt+0x73e0>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     8050570 <calloc@plt+0x73f0>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     80505d2 <calloc@plt+0x7452>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     8050660 <calloc@plt+0x74e0>
mov    (%eax),%ebx
jmp    *0x8054b88(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     80505a8 <calloc@plt+0x7428>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    80505c8 <calloc@plt+0x7448>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    80505c8 <calloc@plt+0x7448>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    80505c8 <calloc@plt+0x7448>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    80505c8 <calloc@plt+0x7448>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    80505c8 <calloc@plt+0x7448>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    80505c8 <calloc@plt+0x7448>
movl   $0x8054b80,0x4(%eax)
jmp    80505c8 <calloc@plt+0x7448>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    80505c8 <calloc@plt+0x7448>
movl   $0x8054be4,0x4(%eax)
jmp    80505c8 <calloc@plt+0x7448>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    80506ea <calloc@plt+0x756a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     8050718 <calloc@plt+0x7598>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    80506e0 <calloc@plt+0x7560>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    80507cc <calloc@plt+0x764c>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    80507be <calloc@plt+0x763e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     8050858 <calloc@plt+0x76d8>
cmp    $0x2b,%dl
je     8050868 <calloc@plt+0x76e8>
cmp    $0x20,%dl
je     8050878 <calloc@plt+0x76f8>
cmp    $0x23,%dl
je     8050888 <calloc@plt+0x7708>
cmp    $0x30,%dl
nop
je     8050898 <calloc@plt+0x7718>
cmp    $0x49,%dl
jne    80508a8 <calloc@plt+0x7728>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    8050778 <calloc@plt+0x75f8>
orl    $0x1,0x8(%ebx)
jmp    80507b8 <calloc@plt+0x7638>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    80507d0 <calloc@plt+0x7650>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    805076c <calloc@plt+0x75ec>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    8050802 <calloc@plt+0x7682>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     8050819 <calloc@plt+0x7699>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    8050800 <calloc@plt+0x7680>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     8050ea4 <calloc@plt+0x7d24>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    805076c <calloc@plt+0x75ec>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    80507b8 <calloc@plt+0x7638>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    80507b8 <calloc@plt+0x7638>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    80507b8 <calloc@plt+0x7638>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    80507b8 <calloc@plt+0x7638>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    80507b8 <calloc@plt+0x7638>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     8050b34 <calloc@plt+0x79b4>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     80508f4 <calloc@plt+0x7774>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     805113a <calloc@plt+0x7fba>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    80508d0 <calloc@plt+0x7750>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     8050ae7 <calloc@plt+0x7967>
add    $0x1,%esi
xor    %eax,%eax
jmp    805092e <calloc@plt+0x77ae>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     8050940 <calloc@plt+0x77c0>
cmp    $0x6c,%dl
je     8050948 <calloc@plt+0x77c8>
cmp    $0x6a,%dl
je     8050950 <calloc@plt+0x77d0>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     8050928 <calloc@plt+0x77a8>
cmp    $0x74,%dl
jne    8050958 <calloc@plt+0x77d8>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    8050908 <calloc@plt+0x7788>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    8050928 <calloc@plt+0x77a8>
or     $0x4,%eax
jmp    8050928 <calloc@plt+0x77a8>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    8050928 <calloc@plt+0x77a8>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    8050928 <calloc@plt+0x77a8>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     8050ea4 <calloc@plt+0x7d24>
movzbl %cl,%ecx
jmp    *0x8054c00(,%ecx,4)
movl   $0x11,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     8051040 <calloc@plt+0x7ec0>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    8050f3b <calloc@plt+0x7dbb>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x28(%esp),%ecx
cmp    %eax,%edx
jb     80509d7 <calloc@plt+0x7857>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    80509c0 <calloc@plt+0x7840>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x28(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    8050fc2 <calloc@plt+0x7e42>
mov    0x24(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    8050a1a <calloc@plt+0x789a>
mov    0x4(%eax),%eax
jmp    80506ea <calloc@plt+0x756a>
mov    0x20(%esp),%eax
test   %eax,%eax
js     8050aa8 <calloc@plt+0x7928>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     8050aa8 <calloc@plt+0x7928>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8051062 <calloc@plt+0x7ee2>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048f40 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     8050aa8 <calloc@plt+0x7928>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     8051141 <calloc@plt+0x7fc1>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    80506ea <calloc@plt+0x756a>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     8050fd8 <calloc@plt+0x7e58>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    8050fd8 <calloc@plt+0x7e58>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     8050abd <calloc@plt+0x793d>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8050ad2 <calloc@plt+0x7952>
mov    %eax,(%esp)
call   8048de0 <free@plt>
call   8049060 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    805070b <calloc@plt+0x758b>
cmpb   $0x2a,0x1(%esi)
je     8050d8e <calloc@plt+0x7c0e>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     8050b16 <calloc@plt+0x7996>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    8050b08 <calloc@plt+0x7988>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    80508fd <calloc@plt+0x777d>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    8050bd8 <calloc@plt+0x7a58>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     8050ea4 <calloc@plt+0x7d24>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    8050a7c <calloc@plt+0x78fc>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %edi,%eax
ja     8050bb7 <calloc@plt+0x7a37>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    8050ba0 <calloc@plt+0x7a20>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    8051032 <calloc@plt+0x7eb2>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    80508f4 <calloc@plt+0x7774>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8050be0 <calloc@plt+0x7a60>
cmp    $0x24,%dl
jne    8050b58 <calloc@plt+0x79d8>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     8050c12 <calloc@plt+0x7a92>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8050bfb <calloc@plt+0x7a7b>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     8050ea4 <calloc@plt+0x7d24>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    8050b75 <calloc@plt+0x79f5>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xf,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
cmp    $0xf,%eax
movl   $0x16,0x24(%esp)
jg     8050980 <calloc@plt+0x7800>
test   $0x4,%al
jne    8050980 <calloc@plt+0x7800>
cmp    $0x7,%eax
movl   $0x15,0x24(%esp)
jg     8050980 <calloc@plt+0x7800>
test   $0x2,%al
movl   $0x12,0x24(%esp)
jne    8050980 <calloc@plt+0x7800>
and    $0x1,%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
addl   $0x14,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     8050eeb <calloc@plt+0x7d6b>
test   $0x4,%al
jne    8050eeb <calloc@plt+0x7d6b>
cmp    $0x7,%eax
jg     8051168 <calloc@plt+0x7fe8>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    80511ac <calloc@plt+0x802c>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x3,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    8050980 <calloc@plt+0x7800>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xd,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
movl   $0x10,0x24(%esp)
movb   $0x73,0x1c(%esp)
jmp    8050980 <calloc@plt+0x7800>
movl   $0xe,0x24(%esp)
movb   $0x63,0x1c(%esp)
jmp    8050980 <calloc@plt+0x7800>
cmp    $0xf,%eax
jle    8051071 <calloc@plt+0x7ef1>
mov    %dl,0x1c(%esp)
movl   $0xc,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
cmp    $0xf,%eax
jg     8050efc <calloc@plt+0x7d7c>
test   $0x4,%al
jne    8050efc <calloc@plt+0x7d7c>
cmp    $0x7,%eax
jg     8051179 <calloc@plt+0x7ff9>
test   $0x2,%al
jne    80511bd <calloc@plt+0x803d>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x4,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     8050f0d <calloc@plt+0x7d8d>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8050dbb <calloc@plt+0x7c3b>
cmp    $0x24,%dl
jne    8050f0d <calloc@plt+0x7d8d>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     8050ded <calloc@plt+0x7c6d>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    8050dd6 <calloc@plt+0x7c56>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     8050ea4 <calloc@plt+0x7d24>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     805108b <calloc@plt+0x7f0b>
mov    0x14(%esp),%eax
test   %eax,%eax
js     8050aa8 <calloc@plt+0x7928>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     8050e4a <calloc@plt+0x7cca>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     8050aa8 <calloc@plt+0x7928>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8050aa8 <calloc@plt+0x7928>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     80511ce <calloc@plt+0x804e>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     8050aac <calloc@plt+0x792c>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     80511e6 <calloc@plt+0x8066>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    8051096 <calloc@plt+0x7f16>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x30(%esp)
je     8050ec1 <calloc@plt+0x7d41>
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8050ed6 <calloc@plt+0x7d56>
mov    %eax,(%esp)
call   8048de0 <free@plt>
call   8049060 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    805070b <calloc@plt+0x758b>
mov    %dl,0x1c(%esp)
movl   $0x9,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    %dl,0x1c(%esp)
movl   $0xa,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    8050e1b <calloc@plt+0x7c9b>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     8050ea4 <calloc@plt+0x7d24>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    8050e1b <calloc@plt+0x7c9b>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     8050aa8 <calloc@plt+0x7928>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     8050f60 <calloc@plt+0x7de0>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     8050aa8 <calloc@plt+0x7928>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8050aa8 <calloc@plt+0x7928>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x28(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     80510f2 <calloc@plt+0x7f72>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <realloc@plt>
mov    0x28(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     8050aaf <calloc@plt+0x792f>
cmp    %eax,0x30(%esp)
je     8051108 <calloc@plt+0x7f88>
mov    0x68(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %ecx,0x4(%eax)
jmp    80509a7 <calloc@plt+0x7827>
cmp    %eax,0x24(%esp)
je     80509ee <calloc@plt+0x786e>
jmp    8050eaf <calloc@plt+0x7d2f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8050aa8 <calloc@plt+0x7928>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     8051159 <calloc@plt+0x7fd9>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     8050aac <calloc@plt+0x792c>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805118a <calloc@plt+0x800a>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    8050b8a <calloc@plt+0x7a0a>
cmp    $0x5,%eax
je     80508f1 <calloc@plt+0x7771>
jmp    8050eaf <calloc@plt+0x7d2f>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     8050ea4 <calloc@plt+0x7d24>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    8050992 <calloc@plt+0x7812>
mov    %edx,(%esp)
call   8048f50 <malloc@plt>
mov    %eax,%esi
jmp    8050a57 <calloc@plt+0x78d7>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %esi,%eax
ja     80510c0 <calloc@plt+0x7f40>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    80510a9 <calloc@plt+0x7f29>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    80510df <calloc@plt+0x7f5f>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    80508fd <calloc@plt+0x777d>
cmp    $0x5,%eax
jne    8050eaf <calloc@plt+0x7d2f>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    80508fd <calloc@plt+0x777d>
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     80511dd <calloc@plt+0x805d>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ecx
jmp    8050fb2 <calloc@plt+0x7e32>
xor    %eax,%eax
jmp    80508e1 <calloc@plt+0x7761>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8048df0 <memcpy@plt>
jmp    8050a6c <calloc@plt+0x78ec>
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    %eax,%edx
jmp    8051009 <calloc@plt+0x7e89>
mov    %dl,0x1c(%esp)
movl   $0x7,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    %dl,0x1c(%esp)
movl   $0x8,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8048df0 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    8051022 <calloc@plt+0x7ea2>
mov    %dl,0x1c(%esp)
movl   $0x1,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    %dl,0x1c(%esp)
movl   $0x2,0x24(%esp)
jmp    8050980 <calloc@plt+0x7800>
mov    %eax,(%esp)
call   8048f50 <malloc@plt>
mov    %eax,%edx
jmp    8050e7b <calloc@plt+0x7cfb>
mov    0x30(%esp),%eax
jmp    8050aaf <calloc@plt+0x792f>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8048df0 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    8050e94 <calloc@plt+0x7d14>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a730 <calloc@plt+0x15b0>
add    $0x5de5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048d4c <dup2@plt-0x34>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8051269 <calloc@plt+0x80e9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8051248 <calloc@plt+0x80c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8051280 <calloc@plt+0x8100>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804a730 <calloc@plt+0x15b0>
add    $0x5d6a,%ebx
sub    $0x18,%esp
lea    0x124(%ebx),%eax
test   %eax,%eax
je     80512c8 <calloc@plt+0x8148>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048f10 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    80512ab <calloc@plt+0x812b>
push   %ebx
sub    $0x8,%esp
call   804a730 <calloc@plt+0x15b0>
add    $0x5d2b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
inc    %ebx
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
push   %ebx
add    %ah,0x64252064
or     (%eax),%al
jb     8051368 <_IO_stdin_used+0x84>
ja     805136e <_IO_stdin_used+0x8a>
and    %ah,0x63203b64
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8051372 <_IO_stdin_used+0x8e>
outsb  %ds:(%esi),(%dx)
jae    8051328 <_IO_stdin_used+0x44>
and    $0x73003b64,%eax
jo     8051374 <_IO_stdin_used+0x90>
gs and %ah,%fs:%gs:0x6220756c
popa
jne    805137e <_IO_stdin_used+0x9a>
cmp    (%eax),%eax
and    $0x2520756c,%eax
insb   (%dx),%es:(%edi)
jne    805132e <_IO_stdin_used+0x4a>
add    %cl,(%edx)
push   %edx
gs
jo     8051399 <_IO_stdin_used+0xb5>
jb     80513a0 <_IO_stdin_used+0xbc>
and    %ah,0x75622073
addr16 jae 8051355 <_IO_stdin_used+0x71>
je     80513a6 <_IO_stdin_used+0xc2>
and    %ah,0x62000a73
jne    80513a6 <_IO_stdin_used+0xc2>
sub    $0x65726f63,%eax
jne    80513ba <_IO_stdin_used+0xd6>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     80513b8 <_IO_stdin_used+0xd4>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    80513a2 <_IO_stdin_used+0xbe>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     80513d3 <_IO_stdin_used+0xef>
jne    80513e4 <_IO_stdin_used+0x100>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
bound  %eax,0x0(%edx)
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6e(%ecx)
je     80513ec <_IO_stdin_used+0x108>
addr16
gs
jb     80513ab <_IO_stdin_used+0xc7>
popa
jb     80513f5 <_IO_stdin_used+0x111>
jne    80513fd <_IO_stdin_used+0x119>
outsb  %gs:(%esi),(%dx)
je     80513b4 <_IO_stdin_used+0xd0>
and    $0x753c0073,%eax
outsb  %ds:(%esi),(%dx)
fs
gs
data16
add    %dh,%ds:0x61(%eax)
jb     8051408 <_IO_stdin_used+0x124>
outsb  %ds:(%esi),(%dx)
bound  %eax,(%eax)
imul   $0x752f0072,0x74(%esi),%ebp
jae    8051421 <_IO_stdin_used+0x13d>
das
jae    805141a <_IO_stdin_used+0x136>
popa
jb     805141a <_IO_stdin_used+0x136>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x76(%ecx,%eiz,2)
imul   $0x654b6361,0x4d(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jp     8051434 <_IO_stdin_used+0x150>
add    %dh,%gs:0x74(%ebx)
je     805144a <_IO_stdin_used+0x166>
add    %ch,0x3a466761
add    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8051444 <_IO_stdin_used+0x160>
and    %ch,0x6e(%ecx)
jo     805145a <_IO_stdin_used+0x176>
je     80513e7 <_IO_stdin_used+0x103>
insb   (%dx),%es:(%edi)
imul   $0x25203d20,0x65(%esi),%ebp
cmp    %fs:(%eax),%eax
and    $0x203d2073,%eax
and    $0x6d003b73,%eax
imul   $0x6c25203d,0x20(%esi),%ebp
jne    8051440 <_IO_stdin_used+0x15c>
and    %dh,0x6d(%ecx,%ebp,2)
and    %bh,%gs:0x756c2520
cmp    (%edx),%ecx
add    %dh,0x72(%ebx)
arpl   %bp,(%edi)
jae    805148d <_IO_stdin_used+0x1a9>
je     8051494 <_IO_stdin_used+0x1b0>
arpl   %ax,%cs:(%eax)
bound  %ebp,0x74(%ecx)
jae    8051493 <_IO_stdin_used+0x1af>
add    %ch,0x6d007325
imul   $0x6c25203d,0x20(%esi),%ebp
jne    805146d <_IO_stdin_used+0x189>
and    %dh,0x6d(%ecx,%ebp,2)
and    %bh,%gs:0x756c2520
cmp    (%eax),%eax
and    $0x253a786c,%eax
insb   (%dx),%es:(%edi)
js     8051481 <_IO_stdin_used+0x19d>
and    $0x253a786c,%eax
insb   (%dx),%es:(%edi)
js     805144f <_IO_stdin_used+0x16b>
gs
jbe    80514b7 <_IO_stdin_used+0x1d3>
outsb  %ds:(%esi),(%dx)
jo     8051455 <_IO_stdin_used+0x171>
jo     80514b8 <_IO_stdin_used+0x1d4>
jb     80514c2 <_IO_stdin_used+0x1de>
je     80514d4 <_IO_stdin_used+0x1f0>
add    %ch,0x64(%edi)
fs
jo     8051461 <_IO_stdin_used+0x17d>
jae    80514c4 <_IO_stdin_used+0x1e0>
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x62(%ebx)
jb     80514cf <_IO_stdin_used+0x1eb>
popa
imul   $0x70,(%eax),%eax
popa
jae    80514e4 <_IO_stdin_used+0x200>
cmp    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x6f630074,0x75(%edi,%ebp,2),%esi
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x64(%ebp),%esp
fs arpl %sp,%fs:%gs:0x74(%ebx)
insb   (%dx),%es:(%edi)
jno    8051489 <_IO_stdin_used+0x1a5>
je     80514ec <_IO_stdin_used+0x208>
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
arpl   %sp,0x73(%ecx)
add    %cl,%gs:0x41(%ebx,%eax,2)
push   %ebx
inc    %ebp
add    %ch,0x6e(%ecx)
jbe    80514ff <_IO_stdin_used+0x21b>
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     80514cb <_IO_stdin_used+0x1e7>
and    $0x696d0073,%eax
jae    8051525 <_IO_stdin_used+0x241>
imul   $0x67726120,0x67(%esi),%ebp
jne    8051528 <_IO_stdin_used+0x244>
outsb  %gs:(%esi),(%dx)
je     80514df <_IO_stdin_used+0x1fb>
je     8051530 <_IO_stdin_used+0x24c>
and    %ah,0x69740073
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x6e(%ebp)
fs
gs
data16
add    %ch,0x73(%edi)
jo     8051539 <_IO_stdin_used+0x255>
gs add %dh,%fs:%gs:0x6f(%edx)
ja     805154e <_IO_stdin_used+0x26a>
add    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jae    80514e1 <_IO_stdin_used+0x1fd>
arpl   %bp,0x6c(%edi)
jne    8051553 <_IO_stdin_used+0x26f>
outsb  %ds:(%esi),(%dx)
jae    80514e9 <_IO_stdin_used+0x205>
jae    8051554 <_IO_stdin_used+0x270>
jp     8051552 <_IO_stdin_used+0x26e>
add    %ch,0x6e(%ecx,%ebp,2)
add    %ch,%gs:0x6e(%ecx)
jbe    8051558 <_IO_stdin_used+0x274>
insb   (%dx),%es:(%edi)
imul   $0x20656e69,0x6c(%eax,%eiz,1),%esp
imul   $0x696c7069,%fs:0x63(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x73690073
jo     8051577 <_IO_stdin_used+0x293>
gs add %dh,%fs:%gs:(%edi)
xor    $0x30313100,%eax
add    %dh,(%ecx)
xor    (%eax,%eax,1),%esi
xor    %esi,(%ebx)
xor    $0x2e,%al
xor    $0x30353100,%eax
add    %dh,(%ebx)
xor    %dh,(%eax)
add    %dh,(%ecx)
xor    (%eax),%dh
xor    %al,(%eax)
xor    %edi,(%eax)
xor    %dh,(%eax)
add    %dh,(%edx)
xor    $0x30,%al
xor    %al,(%eax)
xor    $0x38,%al
xor    %dh,(%eax)
add    %bh,(%ecx)
xor    %dh,%ss:(%eax)
add    %dh,(%ecx)
cmp    %esi,(%edx)
xor    %dh,(%eax)
add    %dh,(%ebx)
cmp    %dh,(%eax,%esi,1)
xor    %al,(%eax)
gs
js     80515ca <_IO_stdin_used+0x2e6>
popa
add    %ah,0x78(%ebp)
je     80515be <_IO_stdin_used+0x2da>
add    %dh,0x30303637
add    %dh,(%ecx)
xor    %esi,0x303032
xor    (%ebx),%dh
xor    %dh,(%eax,%esi,1)
xor    %al,(%eax)
xor    $0x36,%al
xor    %bh,(%eax)
xor    %dh,(%eax)
add    %dh,0x30303637
xor    %al,(%eax)
cmp    %esi,(%edx)
xor    %esi,(%esi)
xor    %dh,(%eax)
add    %dh,(%ecx)
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %dh,(%eax)
add    %dh,(%ecx)
xor    %esi,0x30303032
add    %dh,(%ecx)
xor    $0x30303030,%eax
xor    %al,(%eax)
xor    (%eax),%dh
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %al,(%eax)
xor    0x30303030,%dh
xor    %al,(%eax)
xor    (%eax),%esi
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %al,(%eax)
xor    0x30303030,%esi
xor    %al,(%eax)
xor    $0x30,%al
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %al,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x61(%ebx)
jbe    8051633 <_IO_stdin_used+0x34f>
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     80515d9 <_IO_stdin_used+0x2f5>
jbe    8051640 <_IO_stdin_used+0x35c>
jb     8051650 <_IO_stdin_used+0x36c>
imul   $0x69757100,0x6e(%edi),%ebp
je     80515e6 <_IO_stdin_used+0x302>
outsl  %gs:(%esi),(%dx)
data16
add    %ah,0x6f(%ebp)
insb   (%dx),%es:(%edi)
add    %ah,0x6f(%ebp)
insb   (%dx),%es:(%edi)
xor    (%eax),%al
jae    805166c <_IO_stdin_used+0x388>
je     805165a <_IO_stdin_used+0x376>
push   $0x61747300
jb     8051672 <_IO_stdin_used+0x38e>
add    %dh,0x75(%ebx)
jae    8051673 <_IO_stdin_used+0x38f>
add    %dh,0x70(%edx)
jb     8051676 <_IO_stdin_used+0x392>
je     805160a <_IO_stdin_used+0x326>
ja     8051671 <_IO_stdin_used+0x38d>
jb     805166f <_IO_stdin_used+0x38b>
jae    8051675 <_IO_stdin_used+0x391>
add    %ch,0x65(%esi,%ebp,2)
js     805168a <_IO_stdin_used+0x3a6>
add    %ah,0x6c(%esi)
jne    805168e <_IO_stdin_used+0x3aa>
push   $0x6e696d00
add    %dh,0x61(%eax)
jb     8051694 <_IO_stdin_used+0x3b0>
fs add %ah,%fs:0x73(%ebx)
xor    $0x36736300,%eax
add    %ah,0x73(%ebx)
aaa
add    %ah,0x73(%ebx)
cmp    %al,(%eax)
push   $0x6c637075
add    %ch,0x75(%eax)
jo     8051642 <_IO_stdin_used+0x35e>
arpl   %si,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     80516aa <_IO_stdin_used+0x3c6>
add    %ah,0x72(%ebx)
gs
popa
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,0x72(%ebx)
je     80516cd <_IO_stdin_used+0x3e9>
arpl   %si,0x0(%ebx,%esi,2)
imul   $0x6b7262,0x6e(%edi),%esp
bound  %esi,0x6b(%edx)
imul   $0x6e676900,0x74(%esi),%ebp
jo     80516d2 <_IO_stdin_used+0x3ee>
jb     8051673 <_IO_stdin_used+0x38f>
jo     80516d6 <_IO_stdin_used+0x3f2>
jb     80516e4 <_IO_stdin_used+0x400>
jb     80516e4 <_IO_stdin_used+0x400>
add    %ch,0x6e(%ecx)
jo     80516e1 <_IO_stdin_used+0x3fd>
imul   $0x69,(%eax),%eax
jae    80516f7 <_IO_stdin_used+0x413>
jb     80516ee <_IO_stdin_used+0x40a>
jo     8051687 <_IO_stdin_used+0x3a3>
imul   $0x69007263,0x6c(%esi),%ebp
outsb  %ds:(%si),(%dx)
arpl   %si,0x0(%edx)
imul   $0x69006c6e,0x72(%ebx),%esp
js     805170b <_IO_stdin_used+0x427>
outsb  %ds:(%esi),(%dx)
add    %ch,0x78(%ecx)
outsl  %ds:(%esi),(%dx)
data16
data16
add    %dh,0x6e(%ecx,%eiz,2)
fs
gs
insl   (%dx),%es:(%edi)
add    %ch,0x75(%ecx)
arpl   %bp,0x0(%ebx,%eiz,2)
imul   $0x6900796e,0x61(%eax),%edi
insl   (%dx),%es:(%edi)
popa
js     805171e <_IO_stdin_used+0x43a>
gs
insb   (%dx),%es:(%edi)
add    %ch,0x75(%ecx)
je     8051729 <_IO_stdin_used+0x445>
cmp    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8051737 <_IO_stdin_used+0x453>
jae    805173e <_IO_stdin_used+0x45a>
add    %ch,0x6c(%edi)
arpl   %si,0x63(%ebp)
add    %ch,0x63(%edi)
jb     8051743 <_IO_stdin_used+0x45f>
insb   (%dx),%es:(%edi)
add    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
arpl   %si,0x0(%edx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
arpl   %si,0x0(%edx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jb     805174d <_IO_stdin_used+0x469>
je     80516ea <_IO_stdin_used+0x406>
outsl  %ds:(%esi),(%dx)
imul   $0x666f,0x0(%esp,%ebp,2),%bp
fs
gs
insb   (%dx),%es:(%edi)
add    %ch,0x6c(%esi)
xor    %eax,(%eax)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
xor    %al,(%eax)
arpl   %si,0x33(%edx)
add    %ah,0x72(%ebx)
xor    (%eax),%al
arpl   %si,0x31(%edx)
add    %ah,0x72(%ebx)
xor    %al,(%eax)
je     8051771 <_IO_stdin_used+0x48d>
bound  %esi,(%ebx)
add    %dh,0x62(%ecx,%eiz,2)
xor    (%eax),%al
je     805177b <_IO_stdin_used+0x497>
bound  %esi,(%ecx)
add    %dh,0x62(%ecx,%eiz,2)
xor    %al,(%eax)
bound  %esi,0x31(%ebx)
add    %ah,0x73(%edx)
xor    %al,(%eax)
jbe    80517a0 <_IO_stdin_used+0x4bc>
xor    %eax,(%eax)
jbe    80517a4 <_IO_stdin_used+0x4c0>
xor    %al,(%eax)
data32 xor %ax,(%eax)
data16
data16
xor    %al,(%eax)
imul   $0x63690067,0x69(%ebx),%esi
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x65(%ecx)
js     80517be <_IO_stdin_used+0x4da>
outsb  %gs:(%esi),(%dx)
add    %ah,0x63(%ebp)
push   $0x6300656f
jb     80517ca <_IO_stdin_used+0x4e6>
gs
jb     80517ba <_IO_stdin_used+0x4d6>
jae    80517c0 <_IO_stdin_used+0x4dc>
add    %ah,0x63(%ebp)
push   $0x65006b6f
arpl   %bp,0x6f(%eax)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x6f(%esi)
data16
insb   (%dx),%es:(%edi)
jae    80517d7 <_IO_stdin_used+0x4f3>
add    %bh,0x63(%eax)
popa
jae    80517da <_IO_stdin_used+0x4f6>
add    %dh,0x73(%edi,%ebp,2)
je     80517ea <_IO_stdin_used+0x506>
jo     805177d <_IO_stdin_used+0x499>
arpl   %bp,%gs:0x6f(%eax)
jo     80517f5 <_IO_stdin_used+0x511>
je     8051785 <_IO_stdin_used+0x4a1>
jo     80517f9 <_IO_stdin_used+0x515>
je     80517ee <_IO_stdin_used+0x50a>
jb     80517ec <_IO_stdin_used+0x508>
jae    80517f2 <_IO_stdin_used+0x50e>
add    %ah,0x63(%ebp)
push   $0x6c74636f
add    %ah,0x74(%ebx)
insb   (%dx),%es:(%edi)
arpl   %bp,%gs:0x6f(%eax)
add    %ah,0x63(%ebp)
push   $0x656b6f
arpl   %si,0x74(%edx)
imul   $0x6c,0x6c(%ecx),%ebp
add    %ah,0x6b(%ebp)
add    %dh,0x61(%edx)
ja     80517b4 <_IO_stdin_used+0x4d0>
arpl   %si,0x74(%edx)
add    %ah,0x63(%ebp,%eiz,2)
add    %ah,0x6e203a73
outsl  %ds:(%esi),(%dx)
and    %dh,0x69(%ebx)
jp     805182c <_IO_stdin_used+0x548>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     805183b <_IO_stdin_used+0x557>
popa
je     805183a <_IO_stdin_used+0x556>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     80517f8 <_IO_stdin_used+0x514>
je     8051842 <_IO_stdin_used+0x55e>
imul   $0x69766564,0x20(%ebx),%esi
arpl   %sp,0x0(%ebp)
imul   $0x20646565,0x70(%ebx),%esi
and    $0x6220756c,%eax
popa
jne    8051857 <_IO_stdin_used+0x573>
cmp    (%eax),%esp
outsl  %ds:(%esi),(%dx)
jae    8051868 <_IO_stdin_used+0x584>
gs gs and %ah,%fs:%gs:0x6220756c
62
popa
jne    8051868 <_IO_stdin_used+0x584>
cmp    (%eax),%eax
add    %al,(%eax)
push   %esp
jb     8051884 <_IO_stdin_used+0x5a0>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     805183c <_IO_stdin_used+0x558>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8051885 <_IO_stdin_used+0x5a1>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8051894 <_IO_stdin_used+0x5b0>
popa
je     8051893 <_IO_stdin_used+0x5af>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x2d5b2073,%eax
inc    %esi
and    %al,0x56(%ebp,%eax,2)
dec    %ecx
inc    %ebx
inc    %ebp
and    %bh,0x2d(%eax,%eiz,1)
sub    $0x656c6966,%eax
cmp    $0x49564544,%eax
inc    %ebx
inc    %ebp
pop    %ebp
and    %bl,0x53(%ebx)
inc    %ebp
push   %esp
push   %esp
dec    %ecx
dec    %esi
inc    %edi
pop    %ebp
cs cs or %cs:(%eax),%ah
and    %ch,0x72(%edi)
cmp    (%eax),%ah
and    %ah,0x2d5b2073
inc    %esi
and    %al,0x56(%ebp,%eax,2)
dec    %ecx
inc    %ebx
inc    %ebp
and    %bh,0x2d(%eax,%eiz,1)
sub    $0x656c6966,%eax
cmp    $0x49564544,%eax
inc    %ebx
inc    %ebp
pop    %ebp
and    %bl,0x2d(%ebx)
popa
jl     80518bb <_IO_stdin_used+0x5d7>
sub    $0x5d6c6c61,%eax
or     (%eax),%ah
and    %ch,0x72(%edi)
cmp    (%eax),%ah
and    %ah,0x2d5b2073
inc    %esi
and    %al,0x56(%ebp,%eax,2)
dec    %ecx
inc    %ebx
inc    %ebp
and    %bh,0x2d(%eax,%eiz,1)
sub    $0x656c6966,%eax
cmp    $0x49564544,%eax
inc    %ebx
inc    %ebp
pop    %ebp
and    %bl,0x2d(%ebx)
addr16 jl 80518ec <_IO_stdin_used+0x608>
sub    $0x65766173,%eax
pop    %ebp
or     (%eax),%al
add    %dl,0x72(%eax)
imul   $0x20726f20,0x74(%esi),%ebp
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x65(%si)
jb     8051949 <_IO_stdin_used+0x665>
imul   $0x6863206c,0x61(%esi),%ebp
popa
jb     8051947 <_IO_stdin_used+0x663>
arpl   %si,0x72(%ebp,%eiz,2)
imul   $0x2e736369,0x74(%ebx),%esi
or     (%eax),%al
add    %cl,(%edx)
dec    %ebp
popa
outsb  %ds:(%esi),(%dx)
fs
popa
je     805196b <_IO_stdin_used+0x687>
jb     8051977 <_IO_stdin_used+0x693>
and    %ah,0x72(%ecx)
addr16 jne 8051971 <_IO_stdin_used+0x68d>
outsb  %gs:(%esi),(%dx)
je     805197b <_IO_stdin_used+0x697>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     805197e <_IO_stdin_used+0x69a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8051939 <_IO_stdin_used+0x655>
popa
jb     8051981 <_IO_stdin_used+0x69d>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     8051993 <_IO_stdin_used+0x6af>
jb     805199f <_IO_stdin_used+0x6bb>
and    %ah,0x6f(%esi)
jb     805194b <_IO_stdin_used+0x667>
jae    8051995 <_IO_stdin_used+0x6b1>
outsl  %ds:(%esi),(%dx)
jb     80519a4 <_IO_stdin_used+0x6c0>
and    %ch,0x70(%edi)
je     805199e <_IO_stdin_used+0x6ba>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8051959 <_IO_stdin_used+0x675>
je     80519aa <_IO_stdin_used+0x6c6>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c61
sub    $0x206c6c61,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x6c6c6120,0x74(%esi),%ebp
and    %ah,0x75(%ebx)
jb     80519d5 <_IO_stdin_used+0x6f1>
outsb  %gs:(%esi),(%dx)
je     8051987 <_IO_stdin_used+0x6a3>
jae    80519ce <_IO_stdin_used+0x6ea>
je     80519df <_IO_stdin_used+0x6fb>
imul   $0x6e692073,0x67(%esi),%ebp
and    %ch,0x75(%eax)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x64616572,%eax
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
jb     80519f3 <_IO_stdin_used+0x70f>
or     (%eax),%ah
and    %ch,0x2d202c67
sub    $0x65766173,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x6c6c6120,0x74(%esi),%ebp
and    %ah,0x75(%ebx)
jb     8051a1c <_IO_stdin_used+0x738>
outsb  %gs:(%esi),(%dx)
je     80519ce <_IO_stdin_used+0x6ea>
jae    8051a15 <_IO_stdin_used+0x731>
je     8051a26 <_IO_stdin_used+0x742>
imul   $0x6e692073,0x67(%esi),%ebp
and    %ah,0x20(%ecx)
jae    8051a32 <_IO_stdin_used+0x74e>
je     8051a39 <_IO_stdin_used+0x755>
sub    $0x64616572,%eax
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
jb     8051a3b <_IO_stdin_used+0x757>
or     (%eax),%ah
and    %ch,0x2d202c46
sub    $0x656c6966,%eax
cmp    $0x49564544,%eax
inc    %ebx
inc    %ebp
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8051a4c <_IO_stdin_used+0x768>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x56454420,0x64(%ebp),%esp
dec    %ecx
inc    %ebx
inc    %ebp
and    %ch,0x6e(%ecx)
jae    8051a7e <_IO_stdin_used+0x79a>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x74(%ebx)
imul   $0x20202000,%fs:0xa(%esi),%ebp
and    %ah,(%eax)
and    %ch,0x6c65682d
jo     8051a45 <_IO_stdin_used+0x761>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     8051a9b <_IO_stdin_used+0x7b7>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    8051abe <_IO_stdin_used+0x7da>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    8051ad0 <_IO_stdin_used+0x7ec>
jo     8051ad3 <_IO_stdin_used+0x7ef>
je     8051a80 <_IO_stdin_used+0x79c>
jbe    8051ac7 <_IO_stdin_used+0x7e3>
jb     8051ad7 <_IO_stdin_used+0x7f3>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8051adb <_IO_stdin_used+0x7f7>
popa
je     8051ada <_IO_stdin_used+0x7f6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x4f0a0000,0x0(%edx,%ecx,1),%esi
jo     8051af8 <_IO_stdin_used+0x814>
imul   $0x2d206c61,0x6e(%edi),%ebp
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     8051af7 <_IO_stdin_used+0x813>
and    %dl,0x45(%ebx)
push   %esp
push   %esp
dec    %ecx
dec    %esi
inc    %edi
and    %ch,0x6e(%ecx)
imul   $0x20736574,%fs:0x61(%ebx),%esp
outsb  %ds:(%esi),(%dx)
gs
addr16 popa
je     8051b14 <_IO_stdin_used+0x830>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%cs:(%eax)
inc    %ecx
outsb  %ds:(%esi),(%dx)
and    %ch,(%edx)
and    %ch,0x61(%ebp)
jb     8051b24 <_IO_stdin_used+0x840>
jae    8051adb <_IO_stdin_used+0x7f7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x49534f50,%eax
pop    %eax
or     0x65(%ebx),%dh
je     8051b3d <_IO_stdin_used+0x859>
imul   $0x20202e73,0x67(%esi),%ebp
push   %esp
push   $0x6e752065
fs
gs
jb     8051b46 <_IO_stdin_used+0x862>
jns    8051b45 <_IO_stdin_used+0x861>
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%bp,%di)
jae    8051b57 <_IO_stdin_used+0x873>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x66(%ebp,%eiz,2)
imul   $0x68772073,0x65(%esi),%ebp
imul   $0x74657320,0x68(%ebx),%esp
je     8051b62 <_IO_stdin_used+0x87e>
outsb  %ds:(%esi),(%dx)
addr16 jae 8051b1d <_IO_stdin_used+0x839>
popa
jb     8051b65 <_IO_stdin_used+0x881>
and    %ah,0x76(%ecx)
popa
imul   $0xa2e656c,0x62(%ecx,%eiz,2),%ebp
add    %al,(%eax)
add    %al,(%eax)
or     0x70(%ebx),%dl
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8051b7f <_IO_stdin_used+0x89b>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8051b5e <_IO_stdin_used+0x87a>
or     (%eax),%ah
sub    (%eax),%ah
fs
jae    8051ba0 <_IO_stdin_used+0x8bc>
jae    8051b9d <_IO_stdin_used+0x8b9>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
je     8051bae <_IO_stdin_used+0x8ca>
jb     8051bb8 <_IO_stdin_used+0x8d4>
imul   $0x7473206c,0x61(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jo     8051b75 <_IO_stdin_used+0x891>
jae    8051bc0 <_IO_stdin_used+0x8dc>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%edi)
arpl   %sp,0x20(%ebp)
imul   $0x66207475,0x70(%esi),%ebp
insb   (%dx),%es:(%edi)
jne    8051bde <_IO_stdin_used+0x8fa>
push   $0x200a6465
and    %ah,(%eax)
outsl  %gs:(%esi),(%dx)
data16
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6e(%ecx)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
je     8051c06 <_IO_stdin_used+0x922>
jb     8051c10 <_IO_stdin_used+0x92c>
imul   $0x74206574,0x61(%esi),%ebp
push   $0x6e692065
jo     8051c26 <_IO_stdin_used+0x942>
je     8051bdc <_IO_stdin_used+0x8f8>
or     (%eax),%ah
and    %ah,(%eax)
outsl  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6e(%ebp)
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %ch,0x6e(%ecx,%ebp,2)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
sub    (%eax),%ah
outsl  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
xor    (%eax),%ah
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
je     8051c5a <_IO_stdin_used+0x976>
jb     8051c65 <_IO_stdin_used+0x981>
popa
je     8051c5f <_IO_stdin_used+0x97b>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,0x6f(%esi)
jb     8051c24 <_IO_stdin_used+0x940>
outsb  %gs:(%esi),(%dx)
imul   $0x65687420,%fs:0x67(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
or     %gs:(%eax),%ah
and    %ah,(%eax)
gs
jb     8051c7b <_IO_stdin_used+0x997>
jae    8051c81 <_IO_stdin_used+0x99d>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
popa
jae    8051c99 <_IO_stdin_used+0x9b5>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%eiz,2)
je     8051c5e <_IO_stdin_used+0x97a>
arpl   %bp,0x61(%eax)
jb     8051ca4 <_IO_stdin_used+0x9c0>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x70(%ecx,%edi,2)
gs or  %fs:%gs:(%eax),%ah
and    %ah,(%eax)
imul   $0x48432072,0x74(%esi),%ebp
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6e(%ecx)
and    %ch,0x6e(%ecx)
je     8051cda <_IO_stdin_used+0x9f6>
jb     8051ce9 <_IO_stdin_used+0xa05>
jne    8051ce9 <_IO_stdin_used+0xa05>
je     8051c9b <_IO_stdin_used+0x9b7>
jae    8051ce6 <_IO_stdin_used+0xa02>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
imul   $0x6c,0x6c(%ecx),%ebp
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
popa
jae    8051d07 <_IO_stdin_used+0xa23>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     8051d1d <_IO_stdin_used+0xa39>
outsb  %gs:(%esi),(%dx)
je     8051ccf <_IO_stdin_used+0x9eb>
insb   (%dx),%es:(%edi)
imul   $0xa,0x65(%esi),%ebp
add    %ah,(%eax)
sub    (%eax),%ah
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
gs
js     8051d34 <_IO_stdin_used+0xa50>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6e(%ebp)
je     8051d3c <_IO_stdin_used+0xa58>
jb     8051cf9 <_IO_stdin_used+0xa15>
je     8051d43 <_IO_stdin_used+0xa5f>
and    %ch,%gs:0x65(%esi)
js     8051d55 <_IO_stdin_used+0xa71>
and    %ah,0x68(%ebx)
popa
jb     8051d48 <_IO_stdin_used+0xa64>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8051d56 <_IO_stdin_used+0xa72>
or     %fs:(%eax),%ah
and    %ah,(%eax)
jno    8051d6d <_IO_stdin_used+0xa89>
imul   $0x20524148,0x43(%eax,%eiz,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
jno    8051d8c <_IO_stdin_used+0xaa8>
imul   $0x616e6769,0x73(%eax,%eiz,1),%esi
insb   (%dx),%es:(%edi)
or     (%eax),%ah
sub    (%eax),%ah
jb     8051d96 <_IO_stdin_used+0xab2>
jb     8051d96 <_IO_stdin_used+0xab2>
je     8051d4a <_IO_stdin_used+0xa66>
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
fs
jb     8051da2 <_IO_stdin_used+0xabe>
ja     8051d63 <_IO_stdin_used+0xa7f>
je     8051dad <_IO_stdin_used+0xac9>
and    %ah,%gs:0x75(%ebx)
jb     8051dbd <_IO_stdin_used+0xad9>
outsb  %gs:(%esi),(%dx)
je     8051d6f <_IO_stdin_used+0xa8b>
insb   (%dx),%es:(%edi)
imul   $0x2020200a,0x65(%esi),%ebp
jae    8051dcd <_IO_stdin_used+0xae9>
popa
jb     8051dd0 <_IO_stdin_used+0xaec>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
jae    8051de7 <_IO_stdin_used+0xb03>
popa
jb     8051dea <_IO_stdin_used+0xb06>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     8051def <_IO_stdin_used+0xb0b>
jne    8051df5 <_IO_stdin_used+0xb11>
and    %ah,0x66(%ecx)
je     8051deb <_IO_stdin_used+0xb07>
jb     8051da8 <_IO_stdin_used+0xac4>
jae    8051dfe <_IO_stdin_used+0xb1a>
outsl  %ds:(%esi),(%dx)
jo     8051dfd <_IO_stdin_used+0xb19>
imul   $0xa746920,0x67(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8051dc0 <_IO_stdin_used+0xadc>
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8051dd8 <_IO_stdin_used+0xaf4>
je     8051e22 <_IO_stdin_used+0xb3e>
and    %ch,%gs:0x75(%edi)
je     8051e30 <_IO_stdin_used+0xb4c>
jne    8051e36 <_IO_stdin_used+0xb52>
or     (%eax),%ah
and    %ah,(%eax)
jae    8051e3d <_IO_stdin_used+0xb59>
jae    8051e3a <_IO_stdin_used+0xb56>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
je     8051e4c <_IO_stdin_used+0xb68>
jb     8051e56 <_IO_stdin_used+0xb72>
imul   $0x7473206c,0x61(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jo     8051e13 <_IO_stdin_used+0xb2f>
jae    8051e5e <_IO_stdin_used+0xb7a>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
or     (%eax),%ah
sub    (%eax),%ah
jae    8051e76 <_IO_stdin_used+0xb92>
je     8051e64 <_IO_stdin_used+0xb80>
push   $0x41484320
push   %edx
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x77(%ebx)
imul   $0x206f7420,0x68(%ebx,%eiz,2),%esi
popa
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     8051e8d <_IO_stdin_used+0xba9>
outsb  %ds:(%esi),(%dx)
je     8051e4b <_IO_stdin_used+0xb67>
jae    8051e95 <_IO_stdin_used+0xbb1>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x79(%ecx,%eiz,2)
gs
jb     8051e41 <_IO_stdin_used+0xb5d>
and    %ch,(%edx)
and    %dh,0x65(%edi)
jb     8051e9f <_IO_stdin_used+0xbbb>
jae    8051ea5 <_IO_stdin_used+0xbc1>
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %ah,(%eax)
and    %al,0x48(%ebx)
inc    %ecx
push   %edx
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
popa
jae    8051ebc <_IO_stdin_used+0xbd8>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%eiz,2)
je     8051e81 <_IO_stdin_used+0xb9d>
ja     8051ed2 <_IO_stdin_used+0xbee>
jb     8051ec9 <_IO_stdin_used+0xbe5>
and    %dh,0x70(%ecx,%edi,2)
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
push   %ebx
jo     8051ed9 <_IO_stdin_used+0xbf5>
arpl   %bp,0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
je     8051ef1 <_IO_stdin_used+0xc0d>
imul   $0x200a3a73,0x67(%esi),%ebp
and    %ah,(%eax)
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     8051eb8 <_IO_stdin_used+0xbd4>
je     8051f02 <_IO_stdin_used+0xc1e>
and    %ch,%gs:0x6e(%ecx)
jo     8051f15 <_IO_stdin_used+0xc31>
je     8051ec2 <_IO_stdin_used+0xbde>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x75(%edi)
je     8051f1a <_IO_stdin_used+0xc36>
jne    8051f20 <_IO_stdin_used+0xc3c>
and    %dh,0x70(%ebx)
gs
gs
fs
jae    8051ed4 <_IO_stdin_used+0xbf0>
je     8051f25 <_IO_stdin_used+0xc41>
and    %cl,0x20(%esi)
bound  %esp,0x75(%ecx)
fs
jae    8051ec9 <_IO_stdin_used+0xbe5>
and    %ch,(%edx)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jae    8051ee7 <_IO_stdin_used+0xc03>
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     8051f37 <_IO_stdin_used+0xc53>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jb     8051f4b <_IO_stdin_used+0xc67>
gs
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax,%ebp,2)
je     8051f05 <_IO_stdin_used+0xc21>
je     8051f4f <_IO_stdin_used+0xc6b>
and    %dh,%gs:0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x6168206c,0x61(%esi),%ebp
jae    8051f16 <_IO_stdin_used+0xc32>
dec    %esi
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    8051f6a <_IO_stdin_used+0xc86>
outsb  %ds:(%esi),(%dx)
jae    8051f0a <_IO_stdin_used+0xc26>
and    %ch,(%edx)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    8051f75 <_IO_stdin_used+0xc91>
outsb  %ds:(%esi),(%dx)
jae    8051f2b <_IO_stdin_used+0xc47>
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jae    8051f3e <_IO_stdin_used+0xc5a>
dec    %esi
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
imul   $0x20646565,0x70(%ebx),%esi
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8051f9c <_IO_stdin_used+0xcb8>
je     8051f59 <_IO_stdin_used+0xc75>
je     8051fa3 <_IO_stdin_used+0xcbf>
and    %ch,%gs:0x6e(%ecx)
jo     8051fb6 <_IO_stdin_used+0xcd2>
je     8051f63 <_IO_stdin_used+0xc7f>
jae    8051fb5 <_IO_stdin_used+0xcd1>
gs gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
or     (%eax),%ah
sub    (%eax),%ah
insb   (%dx),%es:(%edi)
imul   $0x20204e20,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8051fd4 <_IO_stdin_used+0xcf0>
and    %ch,%gs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x73(%ecx,%ebp,2)
arpl   %bp,0x70(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x200a4e20,0x65(%esi),%ebp
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x2020204e,0x20(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
ja     8051ff1 <_IO_stdin_used+0xd0d>
je     8051ff2 <_IO_stdin_used+0xd0e>
and    %ch,0x6e616369
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jae    8051ffb <_IO_stdin_used+0xd17>
je     8051fb8 <_IO_stdin_used+0xcd4>
dec    %esi
and    %ah,0x68(%ebx)
popa
jb     8052000 <_IO_stdin_used+0xd1c>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8051fc5 <_IO_stdin_used+0xce1>
insl   (%dx),%es:(%edi)
imul   $0x206d756d,0x69(%esi),%ebp
outsw  %ds:(%esi),(%dx)
jb     8051fd1 <_IO_stdin_used+0xced>
popa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8052024 <_IO_stdin_used+0xd40>
gs
je     8052020 <_IO_stdin_used+0xd3c>
and    %dh,%fs:0x65(%edx)
popa
or     %fs:(%eax),%ah
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jae    8052038 <_IO_stdin_used+0xd54>
gs gs and %cl,%fs:%gs:0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     8051ff7 <_IO_stdin_used+0xd13>
je     8052041 <_IO_stdin_used+0xd5d>
and    %ch,%gs:0x75(%edi)
je     805204f <_IO_stdin_used+0xd6b>
jne    8052055 <_IO_stdin_used+0xd71>
and    %dh,0x70(%ebx)
gs gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
or     (%eax),%al
add    %al,(%eax)
and    %ch,(%edx)
and    %dh,0x6f(%edx)
ja     805206a <_IO_stdin_used+0xd86>
and    %cl,0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x6c(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jb     805207c <_IO_stdin_used+0xd98>
gs
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax,%ebp,2)
je     8052036 <_IO_stdin_used+0xd52>
je     8052080 <_IO_stdin_used+0xd9c>
and    %dh,%gs:0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x6168206c,0x61(%esi),%ebp
jae    8052047 <_IO_stdin_used+0xd63>
dec    %esi
and    %dh,0x6f(%edx)
ja     80520a0 <_IO_stdin_used+0xdbc>
or     (%eax),%ah
sub    (%eax),%ah
jae    805209c <_IO_stdin_used+0xdb8>
jp     805209a <_IO_stdin_used+0xdb6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     80520b3 <_IO_stdin_used+0xdcf>
imul   $0x65687420,0x74(%esi),%ebp
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x6f(%edx)
ja     80520ca <_IO_stdin_used+0xde6>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    80520ce <_IO_stdin_used+0xdea>
outsb  %ds:(%esi),(%dx)
jae    8052084 <_IO_stdin_used+0xda0>
popa
arpl   %sp,0x6f(%ebx)
jb     80520ce <_IO_stdin_used+0xdea>
imul   $0x206f7420,0x67(%esi),%ebp
je     80520db <_IO_stdin_used+0xdf7>
and    %ch,%gs:0x65(%ebx)
jb     80520e7 <_IO_stdin_used+0xe03>
gs
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
jae    80520f1 <_IO_stdin_used+0xe0d>
gs gs and %ah,%fs:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x7073206c,0x61(%esi),%ebp
gs gs or %fs:%gs:(%eax),%ah
and    %ah,(%eax)
je     8052114 <_IO_stdin_used+0xe30>
insl   (%dx),%es:(%edi)
and    %cl,%gs:0x20(%esi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x69(%edi)
je     8052123 <_IO_stdin_used+0xe3f>
and    %ch,0x6e616369
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jae    805212c <_IO_stdin_used+0xe48>
je     80520e9 <_IO_stdin_used+0xe05>
jb     8052130 <_IO_stdin_used+0xe4c>
popa
and    %dh,%fs:0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    8052149 <_IO_stdin_used+0xe65>
and    %ch,0x66(%edi)
and    %cl,0x20(%esi)
je     8052142 <_IO_stdin_used+0xe5e>
outsb  %ds:(%esi),(%dx)
je     8052148 <_IO_stdin_used+0xe64>
jae    8052102 <_IO_stdin_used+0xe1e>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x20(%ecx)
jae    805214e <_IO_stdin_used+0xe6a>
arpl   %bp,0x6e(%edi)
or     %fs:(%eax),%al
add    %cl,(%edx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052168 <_IO_stdin_used+0xe84>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
je     8052171 <_IO_stdin_used+0xe8d>
imul   $0x200a3a73,0x67(%esi),%ebp
and    %ah,(%eax)
pop    %ebx
sub    $0x6f6c635d,%eax
arpl   %sp,0x6c(%ecx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052199 <_IO_stdin_used+0xeb5>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
jae    805213c <_IO_stdin_used+0xe58>
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %si,0x65(%edx)
popa
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8052169 <_IO_stdin_used+0xe85>
imul   $0x74207475,0x70(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    80521c1 <_IO_stdin_used+0xedd>
or     %fs:(%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x7472635d,%eax
jae    80521cc <_IO_stdin_used+0xee8>
je     80521de <_IO_stdin_used+0xefa>
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
push   %edx
push   %esp
push   %ebx
das
inc    %ebx
push   %esp
push   %ebx
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
jae    80521ec <_IO_stdin_used+0xf08>
popa
imul   $0x67,0x6e(%ecx),%ebp
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x7464635d,%eax
jb     80521f9 <_IO_stdin_used+0xf15>
jae    8052209 <_IO_stdin_used+0xf25>
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
inc    %esp
push   %esp
push   %edx
das
inc    %esp
push   %ebx
push   %edx
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
jae    8052218 <_IO_stdin_used+0xf34>
popa
imul   $0x67,0x6e(%ecx),%ebp
or     (%eax),%ah
and    %ah,(%eax)
arpl   %si,0x4e(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     80521eb <_IO_stdin_used+0xf07>
arpl   %bp,0x61(%eax)
jb     8052231 <_IO_stdin_used+0xf4d>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x69(%ebx)
jp     805223e <_IO_stdin_used+0xf5a>
and    %dh,0x20(%edi,%ebp,2)
dec    %esi
and    %ah,0x69(%edx)
je     8052256 <_IO_stdin_used+0xf72>
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x35(%ebx)
cs cmp %bl,%cs:0xa(%ebp)
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
pop    %ebx
sub    $0x7473635d,%eax
outsl  %ds:(%esi),(%dx)
jo     8052262 <_IO_stdin_used+0xf7e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %dh,%gs:0x6f(%edi,%esi,2)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8052232 <_IO_stdin_used+0xf4e>
bound  %ebp,0x74(%ecx)
jae    8052237 <_IO_stdin_used+0xf53>
jo     805227e <_IO_stdin_used+0xf9a>
jb     805223b <_IO_stdin_used+0xf57>
arpl   %bp,0x61(%eax)
jb     8052281 <_IO_stdin_used+0xf9d>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x69(%edi)
je     8052296 <_IO_stdin_used+0xfb2>
and    %ah,(%edi)
sub    $0x200a2927,%eax
and    %ah,(%eax)
pop    %ebx
sub    $0x7075685d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80522ac <_IO_stdin_used+0xfc8>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
push   $0x75676e61
jo     8052273 <_IO_stdin_used+0xf8f>
jae    80522be <_IO_stdin_used+0xfda>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x73(%ecx,%eiz,2)
je     8052288 <_IO_stdin_used+0xfa4>
jo     80522dc <_IO_stdin_used+0xff8>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8052290 <_IO_stdin_used+0xfac>
arpl   %bp,0x73(%edi,%ebp,2)
gs
jae    8052297 <_IO_stdin_used+0xfb3>
je     80522e1 <_IO_stdin_used+0xffd>
and    %dh,%gs:0x79(%esp,%esi,2)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x7075685d,%eax
arpl   %bp,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80522f3 <_IO_stdin_used+0x100f>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
push   $0x200a7075
and    %ah,(%eax)
pop    %ebx
sub    $0x7261705d,%eax
outsb  %gs:(%esi),(%dx)
bound  %esp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%si),(%dx)
gs
jb     8052317 <_IO_stdin_used+0x1033>
je     805231d <_IO_stdin_used+0x1039>
and    %dh,0x61(%eax)
jb     8052326 <_IO_stdin_used+0x1042>
je     8052338 <_IO_stdin_used+0x1054>
and    %ah,0x69(%edx)
je     80522e4 <_IO_stdin_used+0x1000>
imul   $0x7074756f,0x20(%esi),%ebp
jne    8052341 <_IO_stdin_used+0x105d>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
jo     805233b <_IO_stdin_used+0x1057>
arpl   %si,0x70(%eax,%eiz,1)
popa
jb     8052346 <_IO_stdin_used+0x1062>
je     8052358 <_IO_stdin_used+0x1074>
and    %ah,0x69(%edx)
je     8052304 <_IO_stdin_used+0x1020>
imul   $0x75706e69,0x20(%esi),%ebp
je     80522f7 <_IO_stdin_used+0x1013>
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
jo     8052356 <_IO_stdin_used+0x1072>
jb     8052366 <_IO_stdin_used+0x1082>
fs and %ah,%fs:(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     8052322 <_IO_stdin_used+0x103e>
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:0x61(%eax)
jb     8052373 <_IO_stdin_used+0x108f>
je     8052385 <_IO_stdin_used+0x10a1>
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8052331 <_IO_stdin_used+0x104d>
gs
jbe    8052379 <_IO_stdin_used+0x1095>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
jb     8052383 <_IO_stdin_used+0x109f>
je     8052395 <_IO_stdin_used+0x10b1>
and    %dh,0x69(%edi)
je     8052389 <_IO_stdin_used+0x10a5>
and    %ah,(%edi)
sub    $0xa2927,%eax
or     0x6e(%ecx),%cl
jo     80523a2 <_IO_stdin_used+0x10be>
je     805234f <_IO_stdin_used+0x106b>
jae    8052396 <_IO_stdin_used+0x10b2>
je     80523a7 <_IO_stdin_used+0x10c3>
imul   $0x200a3a73,0x67(%esi),%ebp
and    %ah,(%eax)
pop    %ebx
sub    $0x6b72625d,%eax
imul   $0x20202020,0x74(%esi),%ebp
and    %ah,0x72(%edx)
gs
popa
imul   $0x63,0x20(%ebx),%esi
popa
jne    80523c8 <_IO_stdin_used+0x10e4>
and    %ah,%gs:0x6e(%ecx)
and    %ch,0x6e(%ecx)
je     80523c3 <_IO_stdin_used+0x10df>
jb     80523d2 <_IO_stdin_used+0x10ee>
jne    80523d2 <_IO_stdin_used+0x10ee>
je     8052384 <_IO_stdin_used+0x10a0>
jae    80523cf <_IO_stdin_used+0x10eb>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x7263695d,%eax
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     80523f0 <_IO_stdin_used+0x110c>
popa
outsb  %ds:(%esi),(%dx)
jae    80523ee <_IO_stdin_used+0x110a>
popa
je     80523ea <_IO_stdin_used+0x1106>
and    %ah,0x61(%ebx)
jb     80523fc <_IO_stdin_used+0x1118>
imul   $0x65722065,0x67(%ecx),%esp
je     8052408 <_IO_stdin_used+0x1124>
jb     8052403 <_IO_stdin_used+0x111f>
and    %dh,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
gs
ja     8052409 <_IO_stdin_used+0x1125>
imul   $0x2020200a,0x65(%esi),%ebp
pop    %ebx
sub    $0x6e67695d,%eax
bound  %esi,0x6b(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     805241d <_IO_stdin_used+0x1139>
and    %ah,0x72(%edx)
gs
popa
imul   $0x63,(%eax),%esp
push   $0x63617261
je     805242c <_IO_stdin_used+0x1148>
jb     805243c <_IO_stdin_used+0x1158>
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6e67695d,%eax
arpl   %si,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8052446 <_IO_stdin_used+0x1162>
and    %ah,0x61(%ebx)
jb     8052458 <_IO_stdin_used+0x1174>
imul   $0x65722065,0x67(%ecx),%esp
je     8052464 <_IO_stdin_used+0x1180>
jb     805245f <_IO_stdin_used+0x117b>
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
pop    %ebx
sub    $0x6e67695d,%eax
jo     8052460 <_IO_stdin_used+0x117c>
jb     8052421 <_IO_stdin_used+0x113d>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2065726f,0x6e(%edi),%esp
arpl   %bp,0x61(%eax)
jb     8052472 <_IO_stdin_used+0x118e>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052437 <_IO_stdin_used+0x1153>
ja     8052482 <_IO_stdin_used+0x119e>
je     8052483 <_IO_stdin_used+0x119f>
and    %dh,0x61(%eax)
jb     8052489 <_IO_stdin_used+0x11a5>
je     805249b <_IO_stdin_used+0x11b7>
and    %ah,0x72(%ebp)
jb     8052496 <_IO_stdin_used+0x11b2>
jb     805249c <_IO_stdin_used+0x11b8>
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x616d695d,%eax
js     8052497 <_IO_stdin_used+0x11b3>
gs
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
bound  %esp,0x65(%ebp)
jo     8052460 <_IO_stdin_used+0x117c>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805246b <_IO_stdin_used+0x1187>
data16
insb   (%dx),%es:(%edi)
jne    80524c2 <_IO_stdin_used+0x11de>
push   $0x66206120
jne    80524c2 <_IO_stdin_used+0x11de>
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx)
jo     80524d1 <_IO_stdin_used+0x11ed>
je     805247e <_IO_stdin_used+0x119a>
bound  %esi,0x66(%ebp)
data16
gs
jb     8052485 <_IO_stdin_used+0x11a1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
arpl   %bp,0x61(%eax)
jb     80524d0 <_IO_stdin_used+0x11ec>
arpl   %si,0x72(%ebp,%eiz,2)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6c6e695d,%eax
arpl   %si,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    80524f7 <_IO_stdin_used+0x1213>
popa
je     80524f3 <_IO_stdin_used+0x120f>
and    %ch,0x65(%esi)
ja     80524ff <_IO_stdin_used+0x121b>
imul   $0x206f7420,0x65(%esi),%ebp
arpl   %sp,0x72(%ecx)
jb     8052508 <_IO_stdin_used+0x1224>
popa
and    %dh,%gs:0x65(%bp,%si)
je     805251c <_IO_stdin_used+0x1238>
jb     8052517 <_IO_stdin_used+0x1233>
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x706e695d,%eax
arpl   %bp,0x20(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
imul   $0x70207475,0x70(%esi),%ebp
popa
jb     8052535 <_IO_stdin_used+0x1251>
je     8052547 <_IO_stdin_used+0x1263>
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x69(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x7473695d,%eax
jb     805254c <_IO_stdin_used+0x1268>
jo     8052505 <_IO_stdin_used+0x1221>
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x61(%ebp,%eiz,2)
jb     805250f <_IO_stdin_used+0x122b>
push   $0x20686769
sub    %bh,(%eax)
je     8052560 <_IO_stdin_used+0x127c>
sub    %esp,(%eax)
bound  %ebp,0x74(%ecx)
and    %ch,0x66(%edi)
and    %ch,0x6e(%ecx)
jo     805257a <_IO_stdin_used+0x1296>
je     8052527 <_IO_stdin_used+0x1243>
arpl   %bp,0x61(%eax)
jb     805256d <_IO_stdin_used+0x1289>
arpl   %si,0x72(%ebp,%eiz,2)
jae    805251c <_IO_stdin_used+0x1238>
add    %al,(%eax)
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0x20203866,0x74(%ebp),%esi
and    %ah,(%eax)
and    %ah,(%eax)
popa
jae    805259b <_IO_stdin_used+0x12b7>
jne    8052597 <_IO_stdin_used+0x12b3>
and    %ch,%gs:0x6e(%ecx)
jo     80525a5 <_IO_stdin_used+0x12c1>
je     8052552 <_IO_stdin_used+0x126e>
arpl   %bp,0x61(%eax)
jb     8052598 <_IO_stdin_used+0x12b4>
arpl   %si,0x72(%ebp,%eiz,2)
jae    805255d <_IO_stdin_used+0x1279>
popa
jb     80525a5 <_IO_stdin_used+0x12c1>
and    %dl,0x54(%ebp)
inc    %esi
sub    $0x6e652038,%eax
arpl   %bp,0x64(%edi)
gs or  %fs:%gs:(%eax),%al
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0x2020636c,0x63(%ebp),%esi
and    %ah,(%eax)
and    %ah,(%eax)
je     80525d5 <_IO_stdin_used+0x12f1>
popa
outsb  %ds:(%esi),(%dx)
jae    80525d3 <_IO_stdin_used+0x12ef>
popa
je     80525cf <_IO_stdin_used+0x12eb>
and    %dh,0x70(%ebp)
jo     80525d4 <_IO_stdin_used+0x12f0>
jb     80525d4 <_IO_stdin_used+0x12f0>
popa
jae    80525d9 <_IO_stdin_used+0x12f5>
and    %ah,0x68(%ebx)
popa
jb     80525db <_IO_stdin_used+0x12f7>
arpl   %si,0x72(%ebp,%eiz,2)
jae    80525a0 <_IO_stdin_used+0x12bc>
je     80525f1 <_IO_stdin_used+0x130d>
and    %ch,0x77(%edi,%ebp,2)
gs
jb     80525ec <_IO_stdin_used+0x1308>
popa
jae    80525f1 <_IO_stdin_used+0x130d>
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x6178695d,%eax
outsb  %ds:(%esi),(%dx)
jns    80525b9 <_IO_stdin_used+0x12d5>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x74(%ebp,%eiz,2)
and    %ah,0x6e(%ecx)
jns    80525c6 <_IO_stdin_used+0x12e2>
arpl   %bp,0x61(%eax)
jb     805260c <_IO_stdin_used+0x1328>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x65(%edx)
jae    8052628 <_IO_stdin_used+0x1344>
popa
jb     805262b <_IO_stdin_used+0x1347>
and    %ch,0x75(%edi)
je     805262c <_IO_stdin_used+0x1348>
jne    8052632 <_IO_stdin_used+0x134e>
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80525e4 <_IO_stdin_used+0x1300>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    80525e9 <_IO_stdin_used+0x1305>
jae    805263f <_IO_stdin_used+0x135b>
popa
jb     8052642 <_IO_stdin_used+0x135e>
and    %ah,0x68(%ebx)
popa
jb     8052635 <_IO_stdin_used+0x1351>
arpl   %si,0x72(%ebp,%eiz,2)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6f78695d,%eax
data16
data16
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jae    8052658 <_IO_stdin_used+0x1374>
outsb  %ds:(%esi),(%dx)
imul   $0x20666f20,%fs:0x67(%esi),%ebp
jae    8052672 <_IO_stdin_used+0x138e>
popa
jb     8052675 <_IO_stdin_used+0x1391>
das
jae    8052678 <_IO_stdin_used+0x1394>
outsl  %ds:(%esi),(%dx)
jo     8052627 <_IO_stdin_used+0x1343>
arpl   %bp,0x61(%eax)
jb     805266d <_IO_stdin_used+0x1389>
arpl   %si,0x72(%ebp,%eiz,2)
jae    805261c <_IO_stdin_used+0x1338>
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0x2020206e,0x6f(%eax),%edi
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
pop    %eax
dec    %edi
dec    %esi
das
pop    %eax
dec    %edi
inc    %esi
inc    %esi
and    %ah,0x6c(%esi)
outsl  %ds:(%esi),(%dx)
ja     8052658 <_IO_stdin_used+0x1374>
arpl   %bp,0x6e(%edi)
je     80526af <_IO_stdin_used+0x13cb>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x7261705d,%eax
insl   (%dx),%es:(%edi)
jb     80526b7 <_IO_stdin_used+0x13d3>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
jb     80526c0 <_IO_stdin_used+0x13dc>
and    %dh,0x61(%eax)
jb     80526c3 <_IO_stdin_used+0x13df>
je     80526d5 <_IO_stdin_used+0x13f1>
and    %ah,0x72(%ebp)
jb     80526d0 <_IO_stdin_used+0x13ec>
jb     80526d6 <_IO_stdin_used+0x13f2>
and    %ch,(%eax)
ja     80526d0 <_IO_stdin_used+0x13ec>
je     80526d1 <_IO_stdin_used+0x13ed>
and    %ah,0x20(%ecx)
xor    0x2d302d35,%dh
arpl   %bp,0x61(%eax)
jb     80526d8 <_IO_stdin_used+0x13f4>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x65(%ebx)
jno    80526f5 <_IO_stdin_used+0x1411>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x29(%ebp)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6e61745d,%eax
fs
gs
insl   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0xa6666,0x6f(%eax),%edi
add    %al,(%eax)
add    %cl,(%edx)
dec    %edi
jne    8052724 <_IO_stdin_used+0x1440>
jo     8052727 <_IO_stdin_used+0x1443>
je     80526d4 <_IO_stdin_used+0x13f0>
jae    805271b <_IO_stdin_used+0x1437>
je     805272c <_IO_stdin_used+0x1448>
imul   $0x200a3a73,0x67(%esi),%ebp
sub    (%eax),%ah
bound  %esi,0x4e(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x61(%edx)
arpl   %bp,0x73(%ebx)
jo     8052737 <_IO_stdin_used+0x1453>
arpl   %sp,0x20(%ebp)
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    80526ff <_IO_stdin_used+0x141b>
jae    8052755 <_IO_stdin_used+0x1471>
jns    805274f <_IO_stdin_used+0x146b>
gs
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x30(%ebx)
cs xor %ebx,%cs:0xa(%ebp)
and    %ch,(%edx)
and    %ah,0x72(%ebx)
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x61(%ebx)
jb     8052779 <_IO_stdin_used+0x1495>
imul   $0x65722065,0x67(%ecx),%esp
je     8052785 <_IO_stdin_used+0x14a1>
jb     8052780 <_IO_stdin_used+0x149c>
and    %ah,0x6c(%ebp,%eiz,2)
popa
jns    8052739 <_IO_stdin_used+0x1455>
jae    805278f <_IO_stdin_used+0x14ab>
jns    8052789 <_IO_stdin_used+0x14a5>
gs
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x30(%ebx)
cs xor %cs:0xa(%ebp),%ebx
and    %ch,(%edx)
and    %ah,0x66(%esi)
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     80527ae <_IO_stdin_used+0x14ca>
and    %ah,0x65(%esi)
gs and %ah,%fs:%gs:0x6c(%ebp,%eiz,2)
popa
jns    805276d <_IO_stdin_used+0x1489>
jae    80527c3 <_IO_stdin_used+0x14df>
jns    80527bd <_IO_stdin_used+0x14d9>
gs
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x30(%ebx)
cs xor %ebx,%cs:0xa(%ebp)
and    %ch,(%edx)
and    %ch,0x6c(%esi)
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
ja     80527e1 <_IO_stdin_used+0x14fd>
imul   $0x6c656420,0x65(%esi),%ebp
popa
jns    805279f <_IO_stdin_used+0x14bb>
jae    80527f5 <_IO_stdin_used+0x1511>
jns    80527ef <_IO_stdin_used+0x150b>
gs
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x30(%ebx)
cs xor %ebx,%cs:0xa(%ebp)
add    %al,(%eax)
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6e(%edx)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     8052819 <_IO_stdin_used+0x1535>
popa
outsb  %ds:(%esi),(%dx)
jae    8052817 <_IO_stdin_used+0x1533>
popa
je     8052813 <_IO_stdin_used+0x152f>
and    %ah,0x61(%ebx)
jb     8052825 <_IO_stdin_used+0x1541>
imul   $0x65722065,0x67(%ecx),%esp
je     8052831 <_IO_stdin_used+0x154d>
jb     805282c <_IO_stdin_used+0x1548>
and    %dh,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
gs
ja     8052832 <_IO_stdin_used+0x154e>
imul   $0x202a200a,0x65(%esi),%ebp
pop    %ebx
sub    $0x64666f5d,%eax
gs
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8052850 <_IO_stdin_used+0x156c>
and    %ah,%gs:0x6c(%ebp,%eiz,2)
gs
je     805284a <_IO_stdin_used+0x1566>
and    %ah,0x68(%ebx)
popa
jb     805284c <_IO_stdin_used+0x1568>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052811 <_IO_stdin_used+0x152d>
outsw  %ds:(%esi),(%dx)
jb     8052815 <_IO_stdin_used+0x1531>
imul   $0x6e69,0x20(%esp,%ebp,2),%bp
jae    8052872 <_IO_stdin_used+0x158e>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052870 <_IO_stdin_used+0x158c>
arpl   %si,0x72(%ebp,%eiz,2)
jae    805281f <_IO_stdin_used+0x153b>
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
outsl  %ds:(%esi),(%dx)
imul   $0x2020,0x20(%esp,%ebp,2),%bp
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,(%eax)
jo     8052893 <_IO_stdin_used+0x15af>
fs imul $0x68632029,%fs:0x67(%esi),%ebp
68
popa
jb     805289f <_IO_stdin_used+0x15bb>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052864 <_IO_stdin_used+0x1580>
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %dh,0x6d(%ecx,%ebp,2)
imul   $0x726f6620,0x67(%esi),%ebp
and    %ah,0x6c(%ebp,%eiz,2)
popa
jns    80528d3 <_IO_stdin_used+0x15ef>
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x636c6f5d,%eax
jne    80528cf <_IO_stdin_used+0x15eb>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     80528e6 <_IO_stdin_used+0x1602>
popa
outsb  %ds:(%esi),(%dx)
jae    80528e4 <_IO_stdin_used+0x1600>
popa
je     80528e0 <_IO_stdin_used+0x15fc>
and    %ch,0x77(%edi,%ebp,2)
gs
jb     80528e5 <_IO_stdin_used+0x1601>
popa
jae    80528ea <_IO_stdin_used+0x1606>
and    %ah,0x68(%ebx)
popa
jb     80528ec <_IO_stdin_used+0x1608>
arpl   %si,0x72(%ebp,%eiz,2)
jae    80528b1 <_IO_stdin_used+0x15cd>
je     8052902 <_IO_stdin_used+0x161e>
and    %dh,0x70(%ebp)
jo     80528fd <_IO_stdin_used+0x1619>
jb     80528fd <_IO_stdin_used+0x1619>
popa
jae    8052902 <_IO_stdin_used+0x161e>
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x6c6e6f5d,%eax
arpl   %si,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%edx,%esi,2)
outsb  %ds:(%esi),(%dx)
jae    8052921 <_IO_stdin_used+0x163d>
popa
je     805291d <_IO_stdin_used+0x1639>
and    %ch,0x65(%esi)
ja     8052929 <_IO_stdin_used+0x1645>
imul   $0x206f7420,0x65(%esi),%ebp
arpl   %sp,0x72(%ecx)
jb     8052932 <_IO_stdin_used+0x164e>
popa
and    %dh,%gs:0x65(%bp,%si)
je     8052946 <_IO_stdin_used+0x1662>
jb     8052941 <_IO_stdin_used+0x165d>
sub    $0x6c77656e,%eax
imul   $0x202a200a,0x65(%esi),%ebp
pop    %ebx
sub    $0x6c6e6f5d,%eax
jb     805294c <_IO_stdin_used+0x1668>
je     8052909 <_IO_stdin_used+0x1625>
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     805295d <_IO_stdin_used+0x1679>
imul   $0x72657020,0x65(%esi),%ebp
outsw  %ds:(%esi),(%dx)
jb     8052969 <_IO_stdin_used+0x1685>
jae    805291e <_IO_stdin_used+0x163a>
popa
and    %ah,0x61(%ebx)
jb     8052976 <_IO_stdin_used+0x1692>
imul   $0x65722065,0x67(%ecx),%esp
je     8052982 <_IO_stdin_used+0x169e>
jb     805297d <_IO_stdin_used+0x1699>
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
sub    (%eax),%ah
pop    %ebx
sub    $0x6f6e6f5d,%eax
arpl   %si,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805294c <_IO_stdin_used+0x1668>
jo     80529a0 <_IO_stdin_used+0x16bc>
imul   $0x72616320,0x74(%esi),%ebp
jb     80529a0 <_IO_stdin_used+0x16bc>
popa
and    %dh,%gs:0x65(%bp,%si)
je     80529b4 <_IO_stdin_used+0x16d0>
jb     80529af <_IO_stdin_used+0x16cb>
jae    8052963 <_IO_stdin_used+0x167f>
imul   $0x20656874,0x20(%esi),%ebp
imul   $0x2074,0x73(%edx),%si
arpl   %bp,0x6c(%edi)
jne    80529c2 <_IO_stdin_used+0x16de>
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6f706f5d,%eax
jae    80529d6 <_IO_stdin_used+0x16f2>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     80529d9 <_IO_stdin_used+0x16f5>
jae    80529e0 <_IO_stdin_used+0x16fc>
jo     80529e0 <_IO_stdin_used+0x16fc>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8052994 <_IO_stdin_used+0x16b0>
outsl  %ds:(%esi),(%dx)
jne    80529eb <_IO_stdin_used+0x1707>
jo     80529ee <_IO_stdin_used+0x170a>
je     8052985 <_IO_stdin_used+0x16a1>
and    %ch,(%edx)
and    %dh,0x62(%ecx,%eiz,2)
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   $0x7a69726f
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80529f6 <_IO_stdin_used+0x1712>
insb   (%dx),%es:(%edi)
and    %dh,0x62(%ecx,%eiz,2)
and    %ah,0x6c(%ebp,%eiz,2)
popa
jns    80529c1 <_IO_stdin_used+0x16dd>
jae    8052a17 <_IO_stdin_used+0x1733>
jns    8052a11 <_IO_stdin_used+0x172d>
gs
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x30(%ebx)
cs xor %cs:0xa(%ebp),%ebx
and    %ch,(%edx)
and    %dh,0x62(%ecx,%eiz,2)
jae    80529dc <_IO_stdin_used+0x16f8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x62(%ecx,%eiz,2)
xor    %cl,(%edx)
and    %ch,(%edx)
and    %ch,0x73626174
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x62(%ecx,%eiz,2)
xor    (%edx),%ecx
and    %ch,(%edx)
and    %dh,0x74(%esi)
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%esi)
jb     8052a79 <_IO_stdin_used+0x1795>
imul   $0x6174206c,0x61(%ebx),%esp
bound  %esp,(%eax)
fs
gs
insb   (%dx),%es:(%edi)
popa
jns    8052a34 <_IO_stdin_used+0x1750>
jae    8052a8a <_IO_stdin_used+0x17a6>
jns    8052a84 <_IO_stdin_used+0x17a0>
gs
sub    $0x20,%al
dec    %esi
and    %ch,0x6e(%ecx)
and    %bl,0x30(%ebx)
cs xor %ebx,%cs:0xa(%ebp)
add    %cl,(%edx)
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
and    %dh,0x65(%ebx)
je     8052aa7 <_IO_stdin_used+0x17c3>
imul   $0x200a3a73,0x67(%esi),%ebp
and    %ah,(%eax)
pop    %ebx
sub    $0x7472635d,%eax
gs
jb     8052aa6 <_IO_stdin_used+0x17c2>
jae    8052aac <_IO_stdin_used+0x17c8>
and    %ah,(%eax)
and    %ah,0x63(%ebp)
push   $0x7265206f
popa
jae    8052ab9 <_IO_stdin_used+0x17d5>
and    %ah,0x68(%ebx)
popa
jb     8052abb <_IO_stdin_used+0x17d7>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052a80 <_IO_stdin_used+0x179c>
popa
jae    8052a83 <_IO_stdin_used+0x179f>
bound  %esp,0x63(%ecx)
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0x2d(%ebp)
jae    8052adf <_IO_stdin_used+0x17fb>
popa
arpl   %sp,0x2d(%ebp)
bound  %esp,0x63(%ecx)
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0xa(%ebp)
and    %ch,(%edx)
and    %ah,0x72(%ebx)
je     8052aef <_IO_stdin_used+0x180b>
imul   $0x20202020,0x20(%esp,%ebp,2),%ebp
and    %ah,(%eax)
imul   $0x6c,0x6c(%ecx),%ebp
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x79(%edx)
and    %ch,0x62(%edi)
gs
jns    8052b0d <_IO_stdin_used+0x1829>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x63(%ebp)
push   $0x7472706f
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x63(%ebp)
push   $0x7320656f
gs
je     8052b35 <_IO_stdin_used+0x1851>
imul   $0x2a200a73,0x67(%esi),%ebp
and    %ch,0x6b747263
imul   $0x20202020,0x20(%esp,%ebp,2),%ebp
and    %ch,0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x79(%edx)
and    %ch,0x62(%edi)
gs
jns    8052b56 <_IO_stdin_used+0x1872>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x63(%ebp)
push   $0x6c74636f
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x63(%ebp)
push   $0x73206b6f
gs
je     8052b7e <_IO_stdin_used+0x189a>
imul   $0x20000a73,0x67(%esi),%ebp
sub    (%eax),%ah
pop    %ebx
sub    $0x6c74635d,%eax
arpl   %bp,%gs:0x6f(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,%gs:0x6f(%eax)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052b9d <_IO_stdin_used+0x18b9>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052b94 <_IO_stdin_used+0x18b0>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052b59 <_IO_stdin_used+0x1875>
imul   $0x20746168,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8052ba5 <_IO_stdin_used+0x18c1>
je     8052baf <_IO_stdin_used+0x18cb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
daa
pop    %esi
arpl   %sp,(%edi)
sub    %ecx,(%edx)
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %bp,%gs:0x6f(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x63(%ebp)
push   $0x6e69206f
jo     8052bdf <_IO_stdin_used+0x18fb>
je     8052b8c <_IO_stdin_used+0x18a8>
arpl   %bp,0x61(%eax)
jb     8052bd2 <_IO_stdin_used+0x18ee>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052b81 <_IO_stdin_used+0x189d>
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %bp,%gs:0x6f(%eax)
arpl   %si,0x20(%esp,%ebp,2)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %si,0x65(%esp,%ebp,2)
arpl   %bp,0x6f(%eax)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6863655d,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8052c0f <_IO_stdin_used+0x192b>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %si,0x74(%edx)
gs
jb     8052c1e <_IO_stdin_used+0x193a>
jae    8052c24 <_IO_stdin_used+0x1940>
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6863655d,%eax
outsl  %ds:(%esi),(%dx)
imul   $0x20,(%eax),%esp
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,%gs:0x6f(%eax)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     8052c48 <_IO_stdin_used+0x1964>
imul   $0x74666120,0x65(%esi),%ebp
gs
jb     8052c06 <_IO_stdin_used+0x1922>
popa
and    %ch,0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052c53 <_IO_stdin_used+0x196f>
arpl   %si,0x72(%ebp,%eiz,2)
or     (%eax),%al
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %bp,%gs:0x6f(%eax)
imul   $0x20,0x20(%ebp),%esp
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %si,0x74(%edx)
imul   $0x6c,0x6c(%ecx),%ebp
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6863655d,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x63(%ebp)
push   $0x656e206f
ja     8052ca2 <_IO_stdin_used+0x19be>
imul   $0x65766520,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x6f(%esi)
je     8052c66 <_IO_stdin_used+0x1982>
arpl   %bp,%gs:0x6f(%eax)
imul   $0x68746f20,0x67(%esi),%ebp
gs
jb     8052c74 <_IO_stdin_used+0x1990>
arpl   %bp,0x61(%eax)
jb     8052cba <_IO_stdin_used+0x19d6>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052c69 <_IO_stdin_used+0x1985>
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %bp,%gs:0x6f(%eax)
jo     8052cdd <_IO_stdin_used+0x19f9>
je     8052c8d <_IO_stdin_used+0x19a9>
and    %ah,(%eax)
and    %ah,0x63(%ebp)
push   $0x7265206f
popa
jae    8052cdf <_IO_stdin_used+0x19fb>
and    %ah,%fs:0x68(%ebx)
popa
jb     8052ce2 <_IO_stdin_used+0x19fe>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052ca7 <_IO_stdin_used+0x19c3>
bound  %esp,0x63(%ecx)
imul   $0x72,0x61(%edi),%esi
fs
sub    $0x20,%al
bound  %esp,0x74(%ebp)
ja     8052cfb <_IO_stdin_used+0x1a17>
outsb  %gs:(%esi),(%dx)
and    %ah,(%edi)
pop    %esp
daa
and    %ah,0x6e(%ecx)
and    %ah,%fs:(%edi)
das
daa
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x6163695d,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
gs
jb     8052d21 <_IO_stdin_used+0x1a3d>
jae    8052d27 <_IO_stdin_used+0x1a43>
sub    $0x20,%al
imul   $0x6c,0x6c(%ecx),%ebp
sub    $0x20,%al
ja     8052d31 <_IO_stdin_used+0x1a4d>
jb     8052d2f <_IO_stdin_used+0x1a4b>
jae    8052d35 <_IO_stdin_used+0x1a51>
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x70(%edx)
jb     8052d48 <_IO_stdin_used+0x1a64>
je     8052cfc <_IO_stdin_used+0x1a18>
jae    8052d4e <_IO_stdin_used+0x1a6a>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052d4a <_IO_stdin_used+0x1a66>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052cf9 <_IO_stdin_used+0x1a15>
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0x206e6574,0x78(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x49534f50,%eax
pop    %eax
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052d7f <_IO_stdin_used+0x1a9b>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052d2e <_IO_stdin_used+0x1a4a>
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0x20202067,0x69(%ebx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
imul   $0x75727265,0x74(%esi),%ebp
jo     8052dbd <_IO_stdin_used+0x1ad9>
sub    $0x20,%al
jno    8052dc2 <_IO_stdin_used+0x1ade>
imul   $0x20646e61,0x20(%esp,%ebp,1),%esi
jae    8052dcc <_IO_stdin_used+0x1ae8>
jae    8052dc9 <_IO_stdin_used+0x1ae5>
outsb  %gs:(%esi),(%dx)
and    %dh,%fs:0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052dcb <_IO_stdin_used+0x1ae7>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052d7a <_IO_stdin_used+0x1a96>
and    %ah,(%eax)
and    %bl,0x2d(%ebx)
pop    %ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
data16
insb   (%dx),%es:(%edi)
jae    8052de4 <_IO_stdin_used+0x1b00>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
data16
insb   (%dx),%es:(%edi)
jne    8052e00 <_IO_stdin_used+0x1b1c>
push   $0x20676e69
popa
data16
je     8052dfb <_IO_stdin_used+0x1b17>
jb     8052db8 <_IO_stdin_used+0x1ad4>
imul   $0x75727265,0x74(%esi),%ebp
jo     8052e15 <_IO_stdin_used+0x1b31>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x75(%ecx)
imul   $0x69636570,0x73(%eax,%eiz,1),%esi
popa
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052e19 <_IO_stdin_used+0x1b35>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052dc8 <_IO_stdin_used+0x1ae4>
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
jo     8052e38 <_IO_stdin_used+0x1b54>
je     8052e2d <_IO_stdin_used+0x1b49>
jb     8052e2b <_IO_stdin_used+0x1b47>
jae    8052e31 <_IO_stdin_used+0x1b4d>
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
arpl   %bp,%gs:0x6f(%eax)
jo     8052e52 <_IO_stdin_used+0x1b6e>
je     8052dec <_IO_stdin_used+0x1b08>
and    %ch,(%edx)
and    %bl,0x2d(%ebx)
pop    %ebp
je     8052e59 <_IO_stdin_used+0x1b75>
jae    8052e60 <_IO_stdin_used+0x1b7c>
outsl  %ds:(%esi),(%dx)
jo     8052e0f <_IO_stdin_used+0x1b2b>
and    %ah,(%eax)
and    %ah,(%eax)
jae    8052e69 <_IO_stdin_used+0x1b85>
outsl  %ds:(%esi),(%dx)
jo     8052e18 <_IO_stdin_used+0x1b34>
bound  %esp,0x63(%ecx)
imul   $0x6f,0x72(%edi),%esp
jne    8052e6f <_IO_stdin_used+0x1b8b>
and    %ch,%fs:0x6f(%edx)
bound  %esi,0x20(%ebx)
je     8052e72 <_IO_stdin_used+0x1b8e>
popa
je     8052e2d <_IO_stdin_used+0x1b49>
je     8052e81 <_IO_stdin_used+0x1b9d>
jns    8052e31 <_IO_stdin_used+0x1b4d>
je     8052e82 <_IO_stdin_used+0x1b9e>
and    %dh,0x72(%edi)
imul   $0x74206f74,0x20(%ebp,%eiz,2),%esi
push   $0x65742065
jb     8052e92 <_IO_stdin_used+0x1bae>
imul   $0x2a200a6c,0x61(%esi),%ebp
and    %bl,0x2d(%ebx)
pop    %ebp
js     8052e95 <_IO_stdin_used+0x1bb1>
popa
jae    8052e9a <_IO_stdin_used+0x1bb6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
ja     8052ea6 <_IO_stdin_used+0x1bc2>
je     8052ea7 <_IO_stdin_used+0x1bc3>
and    %ch,0x63(%ecx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
gs
jae    8052eae <_IO_stdin_used+0x1bca>
popa
jo     8052eb3 <_IO_stdin_used+0x1bcf>
and    %dh,0x69(%edi)
je     8052ebb <_IO_stdin_used+0x1bd7>
and    %ah,(%edi)
pop    %esp
daa
and    %ah,0x6f(%esi)
jb     8052e7c <_IO_stdin_used+0x1b98>
jne    8052ece <_IO_stdin_used+0x1bea>
jo     8052ec5 <_IO_stdin_used+0x1be1>
jb     8052ec5 <_IO_stdin_used+0x1be1>
popa
jae    8052eca <_IO_stdin_used+0x1be6>
and    %ah,0x68(%ebx)
popa
jb     8052ecc <_IO_stdin_used+0x1be8>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052e7b <_IO_stdin_used+0x1b97>
add    %al,(%eax)
add    %cl,(%edx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6e(%ecx)
popa
je     8052ee7 <_IO_stdin_used+0x1c03>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
je     8052ef9 <_IO_stdin_used+0x1c15>
imul   $0x200a3a73,0x67(%esi),%ebp
sub    (%eax),%ah
pop    %ebx
sub    $0x41434c5d,%eax
push   %ebx
inc    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8052eff <_IO_stdin_used+0x1c1b>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
insb   (%dx),%es:(%edi)
arpl   %sp,0x73(%ecx)
or     %gs:(%eax),%ah
and    %ah,(%eax)
arpl   %sp,0x72(%edx)
gs
popa
imul   $0x20,(%eax),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8052f21 <_IO_stdin_used+0x1c3d>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6e616369
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
sub    $0x65726263,%eax
popa
imul   $0x20,(%eax),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x63(%ecx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6f(%edi)
imul   $0x20,0x64(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x72(%edx)
imul   $0x74,0x6e(%ecx),%ebp
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
jo     8052f76 <_IO_stdin_used+0x1c92>
jb     8052f37 <_IO_stdin_used+0x1c53>
imul   $0x20706972,0x74(%ebx),%esi
imul   $0x69206c6e,0x72(%ebx),%esp
js     8052f96 <_IO_stdin_used+0x1cb2>
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
outsl  %ds:(%esi),(%dx)
jae    8052fa2 <_IO_stdin_used+0x1cbe>
and    %ch,0x73(%ecx)
imul   $0x20202020,0xa(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x63(%ecx)
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
outsl  %gs:(%esi),(%dx)
data16
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x6f(%ebp)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     8052fbf <_IO_stdin_used+0x1cdb>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8052f84 <_IO_stdin_used+0x1ca0>
je     8052fd5 <_IO_stdin_used+0x1cf1>
and    %dh,0x65(%eax,%ebp,2)
imul   $0x61666564,0x20(%edx),%esi
jne    8052fdf <_IO_stdin_used+0x1cfb>
je     8052f95 <_IO_stdin_used+0x1cb1>
jbe    8052fd8 <_IO_stdin_used+0x1cf4>
insb   (%dx),%es:(%edi)
jne    8052fdf <_IO_stdin_used+0x1cfb>
jae    8052f86 <_IO_stdin_used+0x1ca2>
and    %ah,(%eax)
and    %ch,0x6b6f6f63
gs and %ah,%fs:%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x61(%edx)
ja     8052fa3 <_IO_stdin_used+0x1cbf>
and    %ah,(%eax)
and    %ah,0x72(%ebx)
je     8052fc0 <_IO_stdin_used+0x1cdc>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805300d <_IO_stdin_used+0x1d29>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x63(%ebp)
push   $0x6520656f
arpl   %bp,0x6f(%eax)
arpl   %si,0x20(%esp,%ebp,2)
arpl   %bp,%gs:0x6f(%eax)
imul   $0x0,0xa(%ebp),%esp
and    %ah,(%eax)
and    %ah,0x63(%ebp,%eiz,2)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x63(%ebp)
push   $0x6520656f
arpl   %bp,0x6f(%eax)
arpl   %si,0x20(%esp,%ebp,2)
arpl   %bp,%gs:0x6f(%eax)
imul   $0x2d,0x20(%ebp),%esp
imul   $0x6920796e,0x61(%eax),%edi
outsb  %ds:(%esi),(%dx)
je     8053073 <_IO_stdin_used+0x1d8f>
and    %bl,0x63(%esi)
and    %ah,0x72(%ebp)
popa
jae    805306f <_IO_stdin_used+0x1d8b>
and    %dh,(%eax)
xor    %esi,(%edi)
aaa
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x6c,0x6c(%ecx),%ebp
and    %bl,0x75(%esi)
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x6365645d,%eax
arpl   %si,0x71(%esp,%ebp,2)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805309d <_IO_stdin_used+0x1db9>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
imul   $0x200a796e,0x61(%eax),%edi
and    %ah,(%eax)
imul   $0x20,%gs:(%eax),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jb     80530c0 <_IO_stdin_used+0x1ddc>
jae    80530c6 <_IO_stdin_used+0x1de2>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     80530d1 <_IO_stdin_used+0x1ded>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8053096 <_IO_stdin_used+0x1db2>
je     80530e7 <_IO_stdin_used+0x1e03>
and    %dh,0x65(%eax,%ebp,2)
imul   $0x61666564,0x20(%edx),%esi
jne    80530f1 <_IO_stdin_used+0x1e0d>
je     80530a7 <_IO_stdin_used+0x1dc3>
jbe    80530ea <_IO_stdin_used+0x1e06>
insb   (%dx),%es:(%edi)
jne    80530f1 <_IO_stdin_used+0x1e0d>
jae    8053098 <_IO_stdin_used+0x1db4>
and    %ah,(%eax)
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
jo     80530b7 <_IO_stdin_used+0x1dd3>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8053102 <_IO_stdin_used+0x1e1e>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x61(%eax)
jb     8053110 <_IO_stdin_used+0x1e2c>
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
sub    $0x6f726170,%eax
fs and %ah,%fs:0x73(%ebx)
aaa
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e657665,%eax
jo     80530e6 <_IO_stdin_used+0x1e02>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x65726170
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
arpl   %si,0x38(%ebx)
or     (%eax),%ah
sub    (%eax),%ah
pop    %ebx
sub    $0x61636c5d,%eax
jae    8053151 <_IO_stdin_used+0x1e6d>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8053155 <_IO_stdin_used+0x1e71>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bh,0x63(%eax)
popa
jae    8053164 <_IO_stdin_used+0x1e80>
and    %ch,0x75(%ecx)
arpl   %bp,0x20(%ebx,%eiz,2)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
arpl   %si,0x63(%ebp)
or     (%eax),%ah
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x20202074,0x75(%edi,%ebp,2),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x65726170
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
sub    $0x72747369,%eax
imul   $0x6f706f2d,0x20(%eax),%esi
jae    80531af <_IO_stdin_used+0x1ecb>
and    %ah,0x73(%ebx)
cmp    %cl,(%edx)
and    %ah,(%eax)
and    %ch,0x6f74696c
jne    80531be <_IO_stdin_used+0x1eda>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x61(%eax)
jb     80531c2 <_IO_stdin_used+0x1ede>
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
imul   $0x20706972,0x74(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jo     80531d9 <_IO_stdin_used+0x1ef5>
jae    80531e0 <_IO_stdin_used+0x1efc>
and    %ah,0x73(%ebx)
aaa
or     (%eax),%ah
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80531e5 <_IO_stdin_used+0x1f01>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6e726369
insb   (%dx),%es:(%edi)
and    %ch,0x636c6e6f
jb     80531a2 <_IO_stdin_used+0x1ebe>
and    %ah,(%eax)
and    %ch,0x20206c6e
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x63(%ecx)
jb     8053223 <_IO_stdin_used+0x1f3f>
insb   (%dx),%es:(%edi)
and    %ch,0x636c6e69
jb     80531de <_IO_stdin_used+0x1efa>
sub    $0x636e6769,%eax
jb     80531e5 <_IO_stdin_used+0x1f01>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
arpl   %si,0x20(%edx)
sub    $0x6e72636f,%eax
insb   (%dx),%es:(%edi)
and    %ch,0x726c6e6f
gs
je     80531e4 <_IO_stdin_used+0x1f00>
add    %al,(%eax)
and    %ah,(%eax)
and    %ch,0x64(%edi)
fs
jo     8053204 <_IO_stdin_used+0x1f20>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x61(%eax)
jb     805325e <_IO_stdin_used+0x1f7a>
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
jo     805325f <_IO_stdin_used+0x1f7b>
jb     805326f <_IO_stdin_used+0x1f8b>
fs and %ah,%fs:0x73(%ebx)
aaa
or     (%eax),%ah
and    %ah,(%eax)
sub    $0x7064646f,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x65726170
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
arpl   %si,0x38(%ebx)
or     (%eax),%ah
and    %ah,(%eax)
pop    %ebx
sub    $0x7261705d,%eax
imul   $0x20202020,0x20(%ecx,%edi,2),%esi
jae    80532a0 <_IO_stdin_used+0x1fbc>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %bl,0x2d(%ebx)
pop    %ebp
gs
jbe    80532b0 <_IO_stdin_used+0x1fcc>
outsb  %ds:(%esi),(%dx)
jo     8053258 <_IO_stdin_used+0x1f74>
and    %ah,(%eax)
and    %dh,0x61(%eax)
jae    80532c8 <_IO_stdin_used+0x1fe4>
cmp    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80532c2 <_IO_stdin_used+0x1fde>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x65726170
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
sub    $0x72747369,%eax
imul   $0xa387363,0x20(%eax),%esi
and    %ah,(%eax)
and    %ch,0x73736170
cmp    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %dh,0x61(%eax)
jb     80532fd <_IO_stdin_used+0x2019>
outsb  %ds:(%esi),(%dx)
bound  %esp,(%eax)
imul   $0x20706972,0x74(%ebx),%esi
arpl   %si,0x37(%ebx)
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
jb     805330e <_IO_stdin_used+0x202a>
ja     80532cf <_IO_stdin_used+0x1feb>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805331c <_IO_stdin_used+0x2038>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x626e6769
jb     8053333 <_IO_stdin_used+0x204f>
and    %ch,0x696b7262
outsb  %ds:(%esi),(%dx)
je     80532f1 <_IO_stdin_used+0x200d>
sub    $0x706e6769,%eax
popa
jb     80532f9 <_IO_stdin_used+0x2015>
sub    $0x6d726170,%eax
jb     805334b <_IO_stdin_used+0x2067>
and    %ch,0x63706e69
imul   $0x2d,(%eax),%esp
imul   $0xa706972,0x74(%ebx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x636c6e69
jb     8053328 <_IO_stdin_used+0x2044>
sub    $0x636e6769,%eax
jb     805332f <_IO_stdin_used+0x204b>
sub    $0x6e726369,%eax
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
sub    $0x6e6f7869,%eax
and    %ah,(%eax)
sub    $0x666f7869,%eax
data16
and    %ah,(%eax)
sub    $0x6c637569,%eax
arpl   %sp,(%eax)
and    %ch,0x6e617869
jns    805333f <_IO_stdin_used+0x205b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x78616d69
bound  %esp,0x6c(%ebp)
and    %ch,0x736f706f
je     8053376 <_IO_stdin_used+0x2092>
sub    $0x67697369,%eax
and    %ch,0x6e616369
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73616378
and    %ch,%gs:0x69(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,(%ecx)
and    %dh,0x6d(%ecx,%ebp,2)
and    %dh,%gs:(%eax)
or     (%eax),%ah
and    %ah,(%eax)
sub    $0x20776172,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0xa,0x64(%ebp),%esp
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8053410 <_IO_stdin_used+0x212c>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ah,0x72(%ebx)
gs
popa
and    %ch,%fs:0x626e6769
jb     805342d <_IO_stdin_used+0x2149>
and    %ah,0x72(%edx)
imul   $0x74,0x6e(%ecx),%ebp
and    %ch,0x636c6e69
jb     80533f1 <_IO_stdin_used+0x210d>
sub    $0x636e6769,%eax
jb     80533f8 <_IO_stdin_used+0x2114>
imul   $0x2d206c6e,0x72(%ebx),%esp
imul   $0x200a3866,0x74(%ebp),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x666f7869,%eax
data16
and    %ch,0x6c637569
arpl   %sp,(%eax)
sub    $0x6e617869,%eax
jns    805342b <_IO_stdin_used+0x2147>
imul   $0x6c656278,0x61(%ebp),%ebp
and    %ch,0x70(%edi)
outsl  %ds:(%esi),(%dx)
jae    805348c <_IO_stdin_used+0x21a8>
and    %ch,0x75636c6f
arpl   %sp,(%eax)
sub    $0x6e72636f,%eax
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
arpl   %si,0xa(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x636f6e6f
jb     8053465 <_IO_stdin_used+0x2181>
sub    $0x726c6e6f,%eax
gs
je     805346d <_IO_stdin_used+0x2189>
sub    $0x6c69666f,%eax
insb   (%dx),%es:(%edi)
and    %ch,0x6564666f
insb   (%dx),%es:(%edi)
and    %ch,0x6c(%esi)
xor    %ah,(%eax)
arpl   %si,0x30(%edx)
and    %dh,0x62(%ecx,%eiz,2)
xor    %ah,(%eax)
bound  %esi,0x30(%ebx)
and    %dh,0x74(%esi)
xor    %ah,(%eax)
data16
data16
xor    %cl,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x73(%ecx)
imul   $0x6e616369,0x20(%edi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ecx)
js     8053509 <_IO_stdin_used+0x2225>
outsb  %gs:(%esi),(%dx)
and    %ah,0x63(%ebp)
push   $0x6365206f
push   $0x6520656f
arpl   %bp,0x6f(%eax)
imul   $0x2d,(%eax),%esp
arpl   %bp,%gs:0x6f(%eax)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x6c666f6e
jae    8053520 <_IO_stdin_used+0x223c>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x73616378,%eax
and    %ch,%gs:0x74736f74
outsl  %ds:(%esi),(%dx)
jo     80534f9 <_IO_stdin_used+0x2215>
sub    $0x6f686365,%eax
jo     8053552 <_IO_stdin_used+0x226e>
je     8053502 <_IO_stdin_used+0x221e>
arpl   %bp,%gs:0x6f(%eax)
arpl   %si,0x20(%esp,%ebp,2)
arpl   %bp,%gs:0x6f(%eax)
imul   $0x20,0x2c(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x61(%eax)
jb     8053575 <_IO_stdin_used+0x2291>
arpl   %si,0x72(%ebp,%eiz,2)
jae    805353a <_IO_stdin_used+0x2256>
je     805358b <_IO_stdin_used+0x22a7>
and    %dh,0x65(%eax,%ebp,2)
imul   $0x61666564,0x20(%edx),%esi
jne    8053595 <_IO_stdin_used+0x22b1>
je     805354b <_IO_stdin_used+0x2267>
jbe    805358e <_IO_stdin_used+0x22aa>
insb   (%dx),%es:(%edi)
jne    8053595 <_IO_stdin_used+0x22b1>
jae    805353c <_IO_stdin_used+0x2258>
add    %al,(%eax)
or     0x61(%eax),%cl
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x79(%esp,%esi,2)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x20(%edi,%ebp,2)
jae    80535cc <_IO_stdin_used+0x22e8>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     80535c2 <_IO_stdin_used+0x22de>
and    %ch,0x6e(%ecx)
jo     80535d8 <_IO_stdin_used+0x22f4>
je     8053593 <_IO_stdin_used+0x22af>
and    %ah,(%eax)
push   %edi
imul   $0x61207475,0x6f(%eax,%ebp,2),%esi
jb     80535d9 <_IO_stdin_used+0x22f5>
jne    80535e1 <_IO_stdin_used+0x22fd>
outsb  %gs:(%esi),(%dx)
je     80535eb <_IO_stdin_used+0x2307>
sub    $0xa,%al
jo     80535ee <_IO_stdin_used+0x230a>
imul   $0x61622073,0x74(%esi),%ebp
jne    80535e9 <_IO_stdin_used+0x2305>
and    %dh,0x61(%edx)
je     80535ef <_IO_stdin_used+0x230b>
sub    $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0x73696420,0x65(%esi),%ebp
arpl   %bp,0x70(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x6e61202c,0x65(%esi),%ebp
and    %ah,%fs:0x76(%ebp,%eiz,2)
imul   $0x736e6f69,0x74(%ecx),%esp
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
je     805362e <_IO_stdin_used+0x234a>
and    %dh,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
gs and %ah,%cs:%gs:(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
or     0x65(%ebx),%dh
je     8053638 <_IO_stdin_used+0x2354>
imul   $0x43202c73,0x67(%esi),%ebp
dec    %eax
inc    %ecx
push   %edx
and    %ch,0x73(%ecx)
and    %dh,0x6b(%ecx,%eiz,2)
outsb  %gs:(%esi),(%dx)
and    %ch,0x74(%ecx,%ebp,2)
gs
jb     805363f <_IO_stdin_used+0x235b>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    805360e <_IO_stdin_used+0x232a>
and    %ch,0x72(%edi)
and    %ah,0x6f(%ebx)
fs gs and %ah,%fs:%gs:0x73(%ecx)
and    %ch,0x6e(%ecx)
and    %bl,0x63(%esi)
sub    $0x20,%al
xor    %bh,0x33(%eax)
aaa
sub    $0x20,%al
xor    %dh,(%ecx)
aaa
aaa
and    %ch,0x72(%edi)
or     (%ecx),%dh
xor    (%edi),%dh
cmp    (%eax),%esp
jae    805367b <_IO_stdin_used+0x2397>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    805367b <_IO_stdin_used+0x2397>
jae    8053638 <_IO_stdin_used+0x2354>
pop    %esi
sub    $0x20726f20,%eax
jne    805368e <_IO_stdin_used+0x23aa>
fs
gs
data16
and    %dh,0x73(%ebp)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
imul   $0x20656c62,%fs:0x61(%ebx),%esi
jae    80536a6 <_IO_stdin_used+0x23c2>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
popa
jb     80536a2 <_IO_stdin_used+0x23be>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8053675 <_IO_stdin_used+0x2391>
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x74(%eax)
je     80536c0 <_IO_stdin_used+0x23dc>
cmp    (%edi),%ch
das
ja     80536cc <_IO_stdin_used+0x23e8>
ja     8053685 <_IO_stdin_used+0x23a1>
outsb  %ds:(%si),(%dx)
jne    8053689 <_IO_stdin_used+0x23a5>
outsl  %ds:(%esi),(%dx)
jb     80536c5 <_IO_stdin_used+0x23e1>
das
jae    80536d0 <_IO_stdin_used+0x23ec>
data16
je     80536db <_IO_stdin_used+0x23f7>
popa
jb     80536cc <_IO_stdin_used+0x23e8>
das
arpl   %bp,0x72(%edi)
gs
jne    80536e2 <_IO_stdin_used+0x23fe>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     80536db <_IO_stdin_used+0x23f7>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     80536a1 <_IO_stdin_used+0x23bd>
jne    80536f6 <_IO_stdin_used+0x2412>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     8053707 <_IO_stdin_used+0x2423>
popa
jb     80536f8 <_IO_stdin_used+0x2414>
cmp    (%eax),%ah
cmp    $0x68,%al
je     805370d <_IO_stdin_used+0x2429>
jo     80536d5 <_IO_stdin_used+0x23f1>
das
das
ja     8053716 <_IO_stdin_used+0x2432>
ja     80536cf <_IO_stdin_used+0x23eb>
outsb  %ds:(%si),(%dx)
jne    80536d3 <_IO_stdin_used+0x23ef>
outsl  %ds:(%esi),(%dx)
jb     805370f <_IO_stdin_used+0x242b>
das
addr16
gs
je     8053715 <_IO_stdin_used+0x2431>
gs
insb   (%dx),%es:(%edi)
jo     80536e0 <_IO_stdin_used+0x23fc>
or     %ds:(%eax),%al
push   %edx
gs
jo     8053727 <_IO_stdin_used+0x2443>
jb     805372e <_IO_stdin_used+0x244a>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    8053730 <_IO_stdin_used+0x244c>
popa
je     8053730 <_IO_stdin_used+0x244c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 80536ef <_IO_stdin_used+0x240b>
je     8053740 <_IO_stdin_used+0x245c>
and    %bh,(%eax,%ebp,2)
je     805374a <_IO_stdin_used+0x2466>
jo     8053712 <_IO_stdin_used+0x242e>
das
das
je     805374e <_IO_stdin_used+0x246a>
popa
outsb  %ds:(%esi),(%dx)
jae    805374c <_IO_stdin_used+0x2468>
popa
je     805374c <_IO_stdin_used+0x2468>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     8053759 <_IO_stdin_used+0x2475>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     8053757 <_IO_stdin_used+0x2473>
das
je     8053758 <_IO_stdin_used+0x2474>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     8053720 <_IO_stdin_used+0x243c>
arpl   %bp,0x6d(%edi)
jo     8053771 <_IO_stdin_used+0x248d>
gs
je     805376d <_IO_stdin_used+0x2489>
and    %ah,0x63(%edi,%ebp,2)
jne    805377b <_IO_stdin_used+0x2497>
outsb  %gs:(%esi),(%dx)
je     8053773 <_IO_stdin_used+0x248f>
je     805377d <_IO_stdin_used+0x2499>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     805378f <_IO_stdin_used+0x24ab>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     805378b <_IO_stdin_used+0x24a7>
jne    805379c <_IO_stdin_used+0x24b8>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8053765 <_IO_stdin_used+0x2481>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x79616d20,0x65(%ebx),%esp
and    %ah,0x65(%edx)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x0,0x64(%ebp),%esp
je     80537ce <_IO_stdin_used+0x24ea>
and    %ch,%gs:0x70(%edi)
je     80537d5 <_IO_stdin_used+0x24f1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8053790 <_IO_stdin_used+0x24ac>
outsw  %ds:(%esi),(%dx)
jb     8053794 <_IO_stdin_used+0x24b0>
jbe    80537db <_IO_stdin_used+0x24f7>
jb     80537da <_IO_stdin_used+0x24f6>
outsl  %ds:(%esi),(%dx)
jae    80537e0 <_IO_stdin_used+0x24fc>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x74(%ebx)
je     80537fd <_IO_stdin_used+0x2519>
sub    $0x64616572,%eax
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
jne    8053805 <_IO_stdin_used+0x2521>
jo     8053808 <_IO_stdin_used+0x2524>
je     80537b5 <_IO_stdin_used+0x24d1>
jae    805380b <_IO_stdin_used+0x2527>
jns    8053805 <_IO_stdin_used+0x2521>
gs
jae    80537bc <_IO_stdin_used+0x24d8>
popa
jb     8053804 <_IO_stdin_used+0x2520>
or     0x75(%ebp),%ch
je     8053819 <_IO_stdin_used+0x2535>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    80537c9 <_IO_stdin_used+0x24e5>
gs
js     805380f <_IO_stdin_used+0x252b>
insb   (%dx),%es:(%edi)
jne    8053822 <_IO_stdin_used+0x253e>
imul   $0x68770000,0x65(%esi),%esi
outsb  %gs:(%esi),(%dx)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    805382a <_IO_stdin_used+0x2546>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%bx,%di)
and    %ch,0x75(%edi)
je     805383b <_IO_stdin_used+0x2557>
jne    8053841 <_IO_stdin_used+0x255d>
and    %dh,0x74(%ebx)
jns    805383e <_IO_stdin_used+0x255a>
gs
sub    $0x20,%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    80537fb <_IO_stdin_used+0x2517>
insl   (%dx),%es:(%edi)
popa
jns    80537ff <_IO_stdin_used+0x251b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8053803 <_IO_stdin_used+0x251f>
bound  %esp,0x20(%ebp)
jae    805384d <_IO_stdin_used+0x2569>
je     80537ea <_IO_stdin_used+0x2506>
add    %al,(%eax)
and    $0x63203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    8053860 <_IO_stdin_used+0x257c>
outsb  %fs:(%esi),(%dx)
daa
je     8053819 <_IO_stdin_used+0x2535>
jb     8053860 <_IO_stdin_used+0x257c>
jae    8053862 <_IO_stdin_used+0x257e>
je     805381f <_IO_stdin_used+0x253b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x636f6c62,%eax
imul   $0x67,0x6e(%ecx),%ebp
and    %ch,0x6f(%ebp)
fs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
and    $0x75203a73,%eax
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8053890 <_IO_stdin_used+0x25ac>
and    %dh,0x65(%eax)
jb     805388c <_IO_stdin_used+0x25a8>
outsl  %ds:(%esi),(%dx)
jb     8053896 <_IO_stdin_used+0x25b2>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
jno    80538a7 <_IO_stdin_used+0x25c3>
gs
jae    80538a9 <_IO_stdin_used+0x25c5>
gs and %ch,%fs:%gs:0x70(%edi)
gs
jb     805389e <_IO_stdin_used+0x25ba>
je     80538a8 <_IO_stdin_used+0x25c4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8053843 <_IO_stdin_used+0x255f>
add    %dl,-0x54(%eax)
add    $0x8,%al
pusha
lods   %ds:(%esi),%al
add    $0x8,%al
push   $0x700804ac
lods   %ds:(%esi),%al
add    $0x8,%al
pop    %eax
lods   %ds:(%esi),%al
add    $0x8,%al
imul   $0x5f79616c,%fs:0x70(%ebx),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x73(%ecx,%ebp,2)
jo     80538f1 <_IO_stdin_used+0x260d>
popa
jns    80538e7 <_IO_stdin_used+0x2603>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs add %al,%fs:%gs:(%bx,%si)
add    %al,(%eax)
add    %cl,0x805(%ebp,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
daa
adc    $0x10805,%eax
add    %al,(%eax)
xor    (%eax),%al
add    %al,(%eax)
adc    $0x2080515,%eax
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
sbb    %dl,0x30805
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %bl,0x40805(,%edx,1)
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
and    %dl,0x40805
add    %al,(%eax)
xchg   %al,(%eax)
add    %al,(%eax)
es
adc    $0x50805,%eax
add    %al,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
add    %ch,(%edi)
adc    $0x60805,%eax
add    %al,(%eax)
enter  $0x0,$0x0
sub    0x70805,%dl
add    %al,(%eax)
sub    $0x1,%al
add    %al,(%eax)
(bad)
adc    $0x80805,%eax
add    %al,(%eax)
pop    %eax
add    (%eax),%al
add    %ch,(%esi)
adc    $0x90805,%eax
add    %al,(%eax)
mov    $0x4,%al
add    %al,(%eax)
xor    0xa0805,%edx
add    %al,(%eax)
or     %al,(%edi)
add    %al,(%eax)
cmp    %dl,0xb0805
add    %al,(%eax)
pusha
or     %eax,(%eax)
add    %bh,0xc080515
add    %al,(%eax)
add    %al,%al
adc    (%eax),%al
add    %al,0x15(%edx)
add    $0xd08,%eax
add    %al,0x47000025(%eax)
adc    $0xe0805,%eax
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %cl,0x15(%ebp)
add    $0xf08,%eax
add    %al,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
push   %ebx
adc    $0xe0805,%eax
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %bl,0x15(%eax)
add    $0xf08,%eax
add    %al,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
pop    %ebp
adc    $0x10010805,%eax
add    %al,(%eax)
add    %ah,%cl
add    %al,(%eax)
arpl   %dx,0x10020805
add    %al,(%eax)
add    %al,%dl
add    %eax,(%eax)
push   $0x15
add    $0x100308,%eax
add    %al,(%eax)
test   %al,(%ebx)
add    %dh,0x15(%ecx)
add    $0x100408,%eax
add    %al,(%eax)
or     %al,(%edi)
add    %dl,0x5080515(%edi)
adc    %al,(%eax)
add    %ah,(%eax)
mov    0x15780007,%eax
add    $0x100608,%eax
add    %al,(%eax)
lret   $0x8
jg     80539e3 <_IO_stdin_used+0x26ff>
add    $0x100708,%eax
add    %al,(%eax)
adc    %cl,(%esi)
add    %al,0x8080515(%esi)
adc    %al,(%eax)
add    %al,0x42(%eax)
str    0x9080515(%esi)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
adc    %eax,(%eax)
xchg   %eax,%esi
adc    $0x100a0805,%eax
add    %al,(%eax)
pusha
jecxz  8053a11 <_IO_stdin_used+0x272d>
add    %bl,0xb080515(%esi)
adc    %al,(%eax)
add    %al,-0x59ffe17c(%eax)
adc    $0x100c0805,%eax
add    %al,(%eax)
mov    0xae002625,%al
adc    $0x100d0805,%eax
add    %al,(%eax)
rol    $0x2d,%dh
add    %dh,0xe080515(%esi)
adc    %al,(%eax)
add    %ah,%al
addr16 xor $0x515be00,%eax
or     %cl,(%edi)
adc    %al,(%eax)
add    %al,(%eax)
or     %edi,0x0
add    %al,%dh
adc    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popa
add    %al,(%eax)
add    %cl,%dl
adc    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%bx,%si)
add    %cl,%bh
adc    $0x10805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %dl,%ah
adc    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jle    8053a9d <_IO_stdin_used+0x27b9>
(bad)
(bad)
fsts   0x805
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jge    8053aad <_IO_stdin_used+0x27c9>
(bad)
incl   (%eax)
add    %al,(%eax)
add    %ah,0x3080513(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%cl
adc    $0x1c0805,%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %esi
pop    %ss
add    $0x7f08,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %ch,0x15080517(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ah,%dh
adc    $0x40805,%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
ljmp   $0x0,$0x80515
add    %cl,(%ebx)
add    %al,(%eax)
add    %ch,%dh
adc    $0x805,%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
repz adc $0x805,%eax
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %bh,%cl
adc    $0x110805,%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     8053b45 <_IO_stdin_used+0x2861>
add    $0x1308,%eax
add    %cl,(%ecx)
add    %al,(%eax)
add    %bh,%bh
adc    $0x1a0805,%eax
add    %al,(%eax)
or     (%eax),%al
add    %al,(%eax)
add    $0x16,%al
add    $0x1208,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
or     (%esi),%dl
add    $0x1708,%eax
add    %cl,(%esi)
add    %al,(%eax)
add    %dl,(%ecx)
push   %ss
add    $0x1608,%eax
add    %cl,(%edi)
add    %al,(%eax)
add    %dl,(%edi)
push   %ss
add    $0xf08,%eax
add    %cl,0x1d000000
push   %ss
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,%ch
adc    $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x0
add    %al,(%eax)
add    %bl,0x80513(%edi)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %edx,(%esi)
add    $0x8,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %dl,(%esi)
add    $0x8,%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,(%esi,%edx,1)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
push   %ss
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%edx,1)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
push   %ss
add    $0x8,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%esi)
push   %ss
add    $0x8,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x16(%edx)
add    $0x8,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x16(%ecx)
add    $0x8,%eax
add    %al,0x80000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x16(%edi)
add    $0x8,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esi
push   %ss
add    $0x8,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
pop    %esi
push   %ss
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x16(%ebp)
add    $0x108,%eax
add    %al,0x2000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x5(%esi,%edx,1)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jae    8053ce4 <_IO_stdin_used+0x2a00>
add    $0x108,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jp     8053cf8 <_IO_stdin_used+0x2a14>
add    $0x108,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adcb   $0x5,(%esi)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xchg   %edx,(%esi)
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lea    (%esi),%edx
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %dl,0x1080516(%ebx)
add    %al,(%eax)
add    %al,0x0
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x1080516(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x1080516(%esi)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x10805(%esi,%edx,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
stos   %eax,%es:(%edi)
push   %ss
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x1080516(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x1080516(%edi)
add    %al,(%eax)
add    %al,0x0
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x1080516(%edi)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lds    (%esi),%edx
add    $0x208,%eax
add    %al,0x1000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,%bl
push   %ss
add    $0x208,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%cl
push   %ss
add    $0x208,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%bh
push   %ss
add    $0x208,%eax
add    %al,0x4000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,%ch
push   %ss
add    $0x208,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%bl
push   %ss
add    $0x208,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%dl
push   %ss
add    $0x208,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lock push %ss
add    $0x208,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %dh,%dh
push   %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %bh,%dl
push   %ss
add    $0x208,%eax
add    %al,(%ecx)
add    %eax,(%eax)
add    %bh,%dh
push   %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    (%edi),%dl
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
push   %es
add    %al,(%eax)
push   %es
pop    %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
push   %es
add    %al,(%eax)
or     (%edi),%dl
add    $0x208,%eax
add    %al,(%ecx)
push   %es
add    %al,(%eax)
push   %cs
pop    %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %dl,(%ebx)
pop    %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %bl,(%eax)
pop    %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %bl,0x2080517
add    %al,(%eax)
add    %al,(%ecx)
sbb    %al,(%eax)
add    %ah,(%edx)
pop    %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %ah,(%esi)
pop    %ss
add    $0x208,%eax
add    %al,(%ecx)
and    %al,(%eax)
add    %ch,(%edx)
pop    %ss
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %ch,(%esi)
pop    %ss
add    $0x208,%eax
add    %al,(%ecx)
inc    %eax
add    %al,(%eax)
xor    (%edi),%dl
add    $0x208,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,0x17360000(%eax)
add    $0x208,%eax
add    %al,(%ecx)
addb   $0x0,(%eax)
cmp    (%edi),%dl
add    $0x308,%eax
add    %al,0x1000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%edi)
pop    %ss
add    $0x308,%eax
add    %al,0x2000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x17(%esi)
add    $0x308,%eax
add    %al,0x0
addb   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cltd
pop    %ss
add    $0x308,%eax
add    %al,0x8000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x17(%ebp)
add    $0x308,%eax
add    %al,0x10000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x17(%ebx)
add    $0x308,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %esp
pop    %ss
add    $0x308,%eax
add    %al,0x20000000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x17(%edx)
add    $0x308,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0x30805,(%edi),%edx
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %dh,0x17(%eax)
add    $0x308,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    8054091 <_IO_stdin_used+0x2dad>
add    $0x308,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x17(%ebp)
add    $0x308,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3080517(%ebp)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x3080517(%esi)
add    %al,(%eax)
add    %al,0x0
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x3080517(%esi)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sahf
pop    %ss
add    $0x308,%eax
add    %al,0x0
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x3080517(%ebp)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
push   %ebp
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
pop    %esp
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
popw   %ss
add    $0x408,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%eax
pop    %ss
add    $0x408,%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,0x14(%ecx)
add    $0x408,%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,0x14(%edx)
add    $0x408,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x17,%al
add    $0x408,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
jae    80541ce <_IO_stdin_used+0x2eea>
add    $0x408,%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
data16
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
adcl   $0xc00,0x408(,%eax,1)
00
add    %cl,0x4080514(%ecx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
mov    0x408(,%eax,1),%ss
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
mov    $0x17,%ah
add    $0x408,%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,0x4080517(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
xor    %cs:(%ecx),%dh
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     805427d <_IO_stdin_used+0x2f99>
and    $0x25203a73,%eax
jae    8054284 <_IO_stdin_used+0x2fa0>
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 80542eb <_IO_stdin_used+0x3007>
xor    %bl,0x20(%ebp)
ja     80542f6 <_IO_stdin_used+0x3012>
jae    80542b7 <_IO_stdin_used+0x2fd3>
jo     80542fa <_IO_stdin_used+0x3016>
jae    805430e <_IO_stdin_used+0x302a>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    805430b <_IO_stdin_used+0x3027>
push   $0x206e6120
gs
js     8054311 <_IO_stdin_used+0x302d>
arpl   %sp,(%eax)
jae    8054329 <_IO_stdin_used+0x3045>
jae    8054326 <_IO_stdin_used+0x3042>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     8054346 <_IO_stdin_used+0x3062>
jb     8054344 <_IO_stdin_used+0x3060>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    805436a <_IO_stdin_used+0x3086>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    8054360 <_IO_stdin_used+0x307c>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
fdivrs -0x3f47f7fc(%edx)
add    $0x8,%al
call   b00d47ed <optarg+0xa807d605>
mov    $0xbfe80804,%edi
add    $0x8,%al
sbb    %al,%al
add    $0x8,%al
inc    %eax
rolb   $0x40,(%eax,%ecx,1)
rolb   $0x40,(%eax,%ecx,1)
rolb   $0xe0,(%eax,%ecx,1)
mov    $0xbed80804,%ebp
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x41a7f7fc(%esi)
add    $0x8,%al
mov    $0xd80804bd,%eax
mov    $0xbdd00804,%ebp
add    $0x8,%al
enter  $0x4bd,$0x8
sarb   $0x4,-0x426ff7fc(%ebp)
or     %bl,%al
mov    $0xbed80804,%esi
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
fdivrs -0x4127f7fc(%esi)
add    $0x8,%al
or     %edi,-0x42f6f7fc(%ebp)
add    $0x8,%al
or     %edi,-0x42fef7fc(%ebp)
add    $0x8,%al
or     %edi,-0x4387f7fc(%ebp)
add    $0x8,%al
or     %edi,-0x4177f7fc(%ebp)
add    $0x8,%al
or     %edi,-0x42f6f7fc(%ebp)
add    $0x8,%al
or     %edi,-0x4387f7fc(%ebp)
add    $0x8,%al
js     80543b2 <_IO_stdin_used+0x30ce>
add    $0x8,%al
js     80543b6 <_IO_stdin_used+0x30d2>
add    $0x8,%al
js     80543ba <_IO_stdin_used+0x30d6>
add    $0x8,%al
js     80543be <_IO_stdin_used+0x30da>
add    $0x8,%al
js     80543c2 <_IO_stdin_used+0x30de>
add    $0x8,%al
js     80543c6 <_IO_stdin_used+0x30e2>
add    $0x8,%al
js     80543ca <_IO_stdin_used+0x30e6>
add    $0x8,%al
js     80543ce <_IO_stdin_used+0x30ea>
add    $0x8,%al
js     80543d2 <_IO_stdin_used+0x30ee>
add    $0x8,%al
js     80543d6 <_IO_stdin_used+0x30f2>
add    $0x8,%al
js     80543da <_IO_stdin_used+0x30f6>
add    $0x8,%al
js     80543de <_IO_stdin_used+0x30fa>
add    $0x8,%al
js     80543e2 <_IO_stdin_used+0x30fe>
add    $0x8,%al
js     80543e6 <_IO_stdin_used+0x3102>
add    $0x8,%al
js     80543ea <_IO_stdin_used+0x3106>
add    $0x8,%al
or     %edi,-0x42f6f7fc(%ebp)
add    $0x8,%al
or     %edi,-0x42f6f7fc(%ebp)
add    $0x8,%al
enter  $0x4bb,$0x8
fdivrs -0x4387f7fc(%esi)
add    $0x8,%al
js     805440a <_IO_stdin_used+0x3126>
add    $0x8,%al
js     805440e <_IO_stdin_used+0x312a>
add    $0x8,%al
js     8054412 <_IO_stdin_used+0x312e>
add    $0x8,%al
js     8054416 <_IO_stdin_used+0x3132>
add    $0x8,%al
js     805441a <_IO_stdin_used+0x3136>
add    $0x8,%al
js     805441e <_IO_stdin_used+0x313a>
add    $0x8,%al
js     8054422 <_IO_stdin_used+0x313e>
add    $0x8,%al
js     8054426 <_IO_stdin_used+0x3142>
add    $0x8,%al
js     805442a <_IO_stdin_used+0x3146>
add    $0x8,%al
js     805442e <_IO_stdin_used+0x314a>
add    $0x8,%al
js     8054432 <_IO_stdin_used+0x314e>
add    $0x8,%al
js     8054436 <_IO_stdin_used+0x3152>
add    $0x8,%al
js     805443a <_IO_stdin_used+0x3156>
add    $0x8,%al
js     805443e <_IO_stdin_used+0x315a>
add    $0x8,%al
js     8054442 <_IO_stdin_used+0x315e>
add    $0x8,%al
js     8054446 <_IO_stdin_used+0x3162>
add    $0x8,%al
js     805444a <_IO_stdin_used+0x3166>
add    $0x8,%al
js     805444e <_IO_stdin_used+0x316a>
add    $0x8,%al
js     8054452 <_IO_stdin_used+0x316e>
add    $0x8,%al
js     8054456 <_IO_stdin_used+0x3172>
add    $0x8,%al
js     805445a <_IO_stdin_used+0x3176>
add    $0x8,%al
js     805445e <_IO_stdin_used+0x317a>
add    $0x8,%al
js     8054462 <_IO_stdin_used+0x317e>
add    $0x8,%al
js     8054466 <_IO_stdin_used+0x3182>
add    $0x8,%al
js     805446a <_IO_stdin_used+0x3186>
add    $0x8,%al
or     %edi,-0x4197f7fc(%ebp)
add    $0x8,%al
js     8054476 <_IO_stdin_used+0x3192>
add    $0x8,%al
or     %edi,-0x4387f7fc(%ebp)
add    $0x8,%al
or     %edi,-0x4387f7fc(%ebp)
add    $0x8,%al
js     805448a <_IO_stdin_used+0x31a6>
add    $0x8,%al
js     805448e <_IO_stdin_used+0x31aa>
add    $0x8,%al
js     8054492 <_IO_stdin_used+0x31ae>
add    $0x8,%al
js     8054496 <_IO_stdin_used+0x31b2>
add    $0x8,%al
js     805449a <_IO_stdin_used+0x31b6>
add    $0x8,%al
js     805449e <_IO_stdin_used+0x31ba>
add    $0x8,%al
js     80544a2 <_IO_stdin_used+0x31be>
add    $0x8,%al
js     80544a6 <_IO_stdin_used+0x31c2>
add    $0x8,%al
js     80544aa <_IO_stdin_used+0x31c6>
add    $0x8,%al
js     80544ae <_IO_stdin_used+0x31ca>
add    $0x8,%al
js     80544b2 <_IO_stdin_used+0x31ce>
add    $0x8,%al
js     80544b6 <_IO_stdin_used+0x31d2>
add    $0x8,%al
js     80544ba <_IO_stdin_used+0x31d6>
add    $0x8,%al
js     80544be <_IO_stdin_used+0x31da>
add    $0x8,%al
js     80544c2 <_IO_stdin_used+0x31de>
add    $0x8,%al
js     80544c6 <_IO_stdin_used+0x31e2>
add    $0x8,%al
js     80544ca <_IO_stdin_used+0x31e6>
add    $0x8,%al
js     80544ce <_IO_stdin_used+0x31ea>
add    $0x8,%al
js     80544d2 <_IO_stdin_used+0x31ee>
add    $0x8,%al
js     80544d6 <_IO_stdin_used+0x31f2>
add    $0x8,%al
js     80544da <_IO_stdin_used+0x31f6>
add    $0x8,%al
js     80544de <_IO_stdin_used+0x31fa>
add    $0x8,%al
js     80544e2 <_IO_stdin_used+0x31fe>
add    $0x8,%al
js     80544e6 <_IO_stdin_used+0x3202>
add    $0x8,%al
js     80544ea <_IO_stdin_used+0x3206>
add    $0x8,%al
loopne 80544ee <_IO_stdin_used+0x320a>
add    $0x8,%al
or     %edi,-0x431ff7fc(%ebp)
add    $0x8,%al
add    %edi,-0x3cfff7fc(%ebp)
add    $0x8,%al
add    %al,%bl
add    $0x8,%al
cwtl
ret    $0x804
add    %al,%bl
add    $0x8,%al
cwtl
ret    $0x804
add    %al,%bl
add    $0x8,%al
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
cwtl
ret    $0x804
add    %al,%bl
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %bl,%ch
inc    %edx
add    $0x542e508,%eax
or     %ch,%bl
inc    %edx
add    $0x5490c08,%eax
or     %bh,%al
inc    %edx
add    $0x5430008,%eax
or     %dh,0x7080513(%esi)
inc    %ebx
add    $0x8,%eax
add    %ah,0x25282073
jae    8054654 <_IO_stdin_used+0x3370>
and    %ah,0x25000a73
jae    8054653 <_IO_stdin_used+0x336f>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     80546a7 <_IO_stdin_used+0x33c3>
je     80546b4 <_IO_stdin_used+0x33d0>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     80546b7 <_IO_stdin_used+0x33d3>
je     80546c4 <_IO_stdin_used+0x33e0>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     80546ce <_IO_stdin_used+0x33ea>
je     80546db <_IO_stdin_used+0x33f7>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80546a0 <_IO_stdin_used+0x33bc>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     80546f2 <_IO_stdin_used+0x340e>
jb     80546f9 <_IO_stdin_used+0x3415>
and    %ah,0x75(%edx)
addr16 jae 80546ab <_IO_stdin_used+0x33c7>
je     80546fc <_IO_stdin_used+0x3418>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    8054701 <_IO_stdin_used+0x341d>
and    %al,0x50(%edi)
dec    %esp
jbe    80546d5 <_IO_stdin_used+0x33f1>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     8054724 <_IO_stdin_used+0x3440>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     80546da <_IO_stdin_used+0x33f6>
insb   (%dx),%es:(%edi)
popa
je     8054723 <_IO_stdin_used+0x343f>
jb     80546e0 <_IO_stdin_used+0x33fc>
cmp    $0x68,%al
je     8054738 <_IO_stdin_used+0x3454>
jo     8054700 <_IO_stdin_used+0x341c>
das
das
outsb  %ds:(%si),(%dx)
jne    80546fa <_IO_stdin_used+0x3416>
outsl  %ds:(%esi),(%dx)
jb     8054736 <_IO_stdin_used+0x3452>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 8054748 <_IO_stdin_used+0x3464>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    8054709 <_IO_stdin_used+0x3425>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     805476d <_IO_stdin_used+0x3489>
popa
jb     805475e <_IO_stdin_used+0x347a>
cmp    (%eax),%ah
jns    805476c <_IO_stdin_used+0x3488>
jne    805471f <_IO_stdin_used+0x343b>
popa
jb     8054767 <_IO_stdin_used+0x3483>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8054787 <_IO_stdin_used+0x34a3>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     8054791 <_IO_stdin_used+0x34ad>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     80547ae <_IO_stdin_used+0x34ca>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     80547ad <_IO_stdin_used+0x34c9>
outsb  %ds:(%esi),(%dx)
je     805476b <_IO_stdin_used+0x3487>
jo     80547b2 <_IO_stdin_used+0x34ce>
jb     80547bc <_IO_stdin_used+0x34d8>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     80547cc <_IO_stdin_used+0x34e8>
je     80547d9 <_IO_stdin_used+0x34f5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805479e <_IO_stdin_used+0x34ba>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     80547ec <_IO_stdin_used+0x3508>
je     80547f9 <_IO_stdin_used+0x3515>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80547be <_IO_stdin_used+0x34da>
and    %ah,0x250a2c73
jae    80547c6 <_IO_stdin_used+0x34e2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054810 <_IO_stdin_used+0x352c>
je     805481d <_IO_stdin_used+0x3539>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80547e2 <_IO_stdin_used+0x34fe>
and    %ah,0x250a2c73
jae    80547ea <_IO_stdin_used+0x3506>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054838 <_IO_stdin_used+0x3554>
je     8054845 <_IO_stdin_used+0x3561>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805480a <_IO_stdin_used+0x3526>
and    %ah,0x250a2c73
jae    8054812 <_IO_stdin_used+0x352e>
and    %ah,0x25202c73
jae    805481a <_IO_stdin_used+0x3536>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054864 <_IO_stdin_used+0x3580>
je     8054871 <_IO_stdin_used+0x358d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054836 <_IO_stdin_used+0x3552>
and    %ah,0x250a2c73
jae    805483e <_IO_stdin_used+0x355a>
and    %ah,0x25202c73
jae    8054846 <_IO_stdin_used+0x3562>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054894 <_IO_stdin_used+0x35b0>
je     80548a1 <_IO_stdin_used+0x35bd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054866 <_IO_stdin_used+0x3582>
and    %ah,0x250a2c73
jae    805486e <_IO_stdin_used+0x358a>
and    %ah,0x25202c73
jae    8054876 <_IO_stdin_used+0x3592>
and    %ah,0x250a2c73
jae    805487e <_IO_stdin_used+0x359a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     80548c8 <_IO_stdin_used+0x35e4>
je     80548d5 <_IO_stdin_used+0x35f1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805489a <_IO_stdin_used+0x35b6>
and    %ah,0x250a2c73
jae    80548a2 <_IO_stdin_used+0x35be>
and    %ah,0x25202c73
jae    80548aa <_IO_stdin_used+0x35c6>
and    %ah,0x250a2c73
jae    80548b2 <_IO_stdin_used+0x35ce>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
ror    %bh
add    $0x8,%al
fmul   %st(7),%st
add    $0x8,%al
sbb    %dl,%al
add    $0x8,%al
pusha
rolb   (%eax,%ecx,1)
mov    $0x100804d0,%eax
roll   (%eax,%ecx,1)
js     8054883 <_IO_stdin_used+0x359f>
add    $0x8,%al
lock roll (%eax,%ecx,1)
nop
into
add    $0x8,%al
sub    %cl,%bh
add    $0x8,%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     805493d <_IO_stdin_used+0x3659>
jb     805492f <_IO_stdin_used+0x364b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8054951 <_IO_stdin_used+0x366d>
popa
jb     8054942 <_IO_stdin_used+0x365e>
and    %al,0x6f(%esi)
jne    8054950 <_IO_stdin_used+0x366c>
fs
popa
je     805494f <_IO_stdin_used+0x366b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805496e <_IO_stdin_used+0x368a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:0x62(%ecx,%ebp,2)
das
js     8054979 <_IO_stdin_used+0x3695>
je     805497a <_IO_stdin_used+0x3696>
je     8054979 <_IO_stdin_used+0x3695>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
xor    %ah,(%eax)
cmp    $0x3d,%al
and    %dh,0x74(%ebx)
jb     805498d <_IO_stdin_used+0x36a9>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     805499c <_IO_stdin_used+0x36b8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
clc
fiaddl (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
lock fildl (%eax,%ecx,1)
mov    $0xa00804d8,%eax
fildl  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0x700804d8,%eax
fildl  (%eax,%ecx,1)
mov    $0x200804d8,%eax
fildl  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
js     805494c <_IO_stdin_used+0x3668>
add    $0x8,%al
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0x280804d8,%eax
fiaddl (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
rcr    %cl
add    $0x8,%al
js     8054973 <_IO_stdin_used+0x368f>
add    $0x8,%al
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0x580804d8,%eax
flds   (%eax,%ecx,1)
cmp    %bl,%cl
add    $0x8,%al
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0xa00804d8,%eax
fildl  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0x700804d8,%eax
fildl  (%eax,%ecx,1)
mov    $0x200804d8,%eax
fildl  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
sub    %bl,%dl
add    $0x8,%al
mov    $0xb80804d8,%eax
fadds  (%eax,%ecx,1)
rcr    %dl
add    $0x8,%al
js     8054a85 <_IO_stdin_used+0x37a1>
je     8054a86 <_IO_stdin_used+0x37a2>
je     8054a85 <_IO_stdin_used+0x37a1>
insb   (%dx),%es:(%edi)
add    %bl,%dh
loopne 8054a1f <_IO_stdin_used+0x373b>
or     %ch,(%eax)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
mov    %al,0x280804e0
fild   (%eax,%ecx,1)
lock loopne 8054a33 <_IO_stdin_used+0x374f>
or     %ch,(%eax)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
xchg   %ah,%al
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
pusha
loopne 8054a4b <_IO_stdin_used+0x3767>
or     %ch,(%eax)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
and    %eax,%esp
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
out    %eax,(%dx)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
mov    $0xdf,%bl
add    $0x8,%al
ja     8054a59 <_IO_stdin_used+0x3775>
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
fild   %fs:(%eax,%ecx,1)
cmp    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
lock loopne 8054ab3 <_IO_stdin_used+0x37cf>
or     %ch,(%eax)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
xchg   %ah,%al
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
pusha
loopne 8054acb <_IO_stdin_used+0x37e7>
or     %ch,(%eax)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
out    %eax,(%dx)
fild   (%eax,%ecx,1)
sub    %bl,%bh
add    $0x8,%al
sub    %bl,%bh
add    $0x8,%al
push   %edx
fild   (%eax,%ecx,1)
js     8054b65 <_IO_stdin_used+0x3881>
je     8054b66 <_IO_stdin_used+0x3882>
je     8054b65 <_IO_stdin_used+0x3881>
jne    8054b64 <_IO_stdin_used+0x3880>
add    %ch,(%edi)
jne    8054b6f <_IO_stdin_used+0x388b>
jb     8054b2d <_IO_stdin_used+0x3849>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %al,(%eax)
sbb    %dh,%dh
add    $0x8,%al
call   e00d5021 <optarg+0xd807de39>
repnz add $0x8,%al
test   $0xf4,%al
add    $0x8,%al
js     8054b2a <_IO_stdin_used+0x3846>
add    $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
shr    $0x4,%bh
or     %al,%al
out    %eax,(%dx)
add    $0x8,%al
lock repz add $0x8,%al
adc    %dh,%ch
add    $0x8,%al
push   %eax
lock add $0x8,%al
push   %eax
lock add $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
pop    %eax
out    %al,(%dx)
add    $0x8,%al
enter  $0x4fa,$0x8
loopne 8054b6c <_IO_stdin_used+0x3888>
add    $0x8,%al
mov    $0xf5,%al
add    $0x8,%al
mov    $0xf5,%al
add    $0x8,%al
test   $0xfa,%al
add    $0x8,%al
sub    %cl,0x55(%esi)
dec    %esp
dec    %esp
sub    %eax,(%eax)
add    %ah,0x6(%eax)
add    $0x505f808,%eax
or     %bh,%al
add    $0x5e80805,%eax
add    $0x505e808,%eax
or     %al,%al
add    $0x5c00805,%eax
add    $0x505c008,%eax
or     %al,%al
add    $0x5d80805,%eax
add    $0x505d808,%eax
or     %cl,(%eax)
push   %es
add    $0x5061808,%eax
or     %al,%al
add    $0x5c00805,%eax
add    $0x5062808,%eax
or     %al,0x6(%eax)
add    $0x505c008,%eax
or     %al,%al
add    $0x5c00805,%eax
add    $0x505c008,%eax
or     %al,%al
add    $0x5c00805,%eax
add    $0x2808,%eax
add    %cl,0x0(%esi)
add    %al,(%eax)
push   %ebp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%dh
or     %eax,0x50ea408
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50d3308,%eax
or     %ah,0xd210805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %dh,(%ebx)
or     $0xd330805,%eax
add    $0x50d3308,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50d0f08,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xd4d0805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xd330805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %bh,%al
or     $0x5,%al
or     %dh,0x3308050c(%eax)
or     $0xd330805,%eax
add    $0x50d3308,%eax
or     %ah,0xcb00805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %bl,0x5(%esp,%ecx,1)
or     %cl,0xd(%ebp)
add    $0x5097408,%eax
or     %ah,0xea40805(%esi,%ecx,1)
add    $0x50c4508,%eax
or     %ah,0xd4d0805(%esi,%ecx,1)
add    $0x50ea408,%eax
or     %ah,0xd4d0805(%esi,%ecx,1)
.byte 0x5
.byte 0x8
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    $0x56000002,%eax
add    %al,(%eax)
add    %ah,(%eax)
inc    %eax
(bad)
call   *%esp
add    (%eax),%al
add    %al,0x44(%eax)
(bad)
inc    %eax
add    $0x0,%al
add    %dh,-0x70000a6(%eax)
add    (%eax),%al
add    %dl,(%eax)
pop    %ebx
(bad)
(bad)
cmp    $0x3,%al
add    %al,(%eax)
lock pop %ebx
(bad)
ljmp   *0x0(%ebx,%eax,1)
add    %al,-0x730000a4(%eax)
add    (%eax),%eax
add    %al,0x5d(%eax)
(bad)
jmp    *0x3(%eax)
pop    %esi
(bad)
(bad)
faddl  (%ebx)
add    %al,(%eax)
lock pop %esi
(bad)
pushl  (%eax)
add    $0x0,%al
add    %dh,(%eax)
pop    %edi
(bad)
incl   0x0(%esp,%eax,1)
add    %dl,0x74ffff60(%eax)
add    $0x0,%al
add    %ah,-0x6b000098(%eax)
add    $0x0,%al
add    %al,0x69(%eax)
(bad)
jmp    *%esp
add    $0x0,%al
add    %dl,0x69(%eax)
(bad)
(bad)
clc
add    $0x0,%al
add    %ah,0x69(%eax)
(bad)
decl   0x6a300000(,%eax,1)
(bad)
(bad)
cmp    %al,0x6a900000
(bad)
lcall  *0x5(%eax)
add    %al,(%eax)
shrb   -0x1(%edx)
(bad)
jl     8054def <_IO_stdin_used+0x3b0b>
add    %al,(%eax)
inc    %eax
imul   $0xffffffff,%edi,%edi
rolb   0x6bf00000
(bad)
call   *(%eax)
push   %es
add    %al,(%eax)
and    %ch,-0x1(%edi,%edi,8)
cmp    $0x6,%al
add    %al,(%eax)
adc    %ch,-0x1(%ebp)
pushl  0x0(%esi,%eax,1)
add    %al,0x77(%eax)
(bad)
(bad)
mov    $0xe0000006,%eax
js     8054e16 <_IO_stdin_used+0x3b32>
(bad)
clc
push   %es
add    %al,(%eax)
and    %bh,-0x1(%ecx)
ljmp   *(%edi,%eax,1)
add    %al,(%eax)
inc    %eax
jns    8054e26 <_IO_stdin_used+0x3b42>
incl   0x7(%eax)
add    %al,(%eax)
pusha
jns    8054e2e <_IO_stdin_used+0x3b4a>
call   *0x0(%edi,%eax,1)
add    %ah,0x78ffff79(%eax)
pop    %es
add    %al,(%eax)
sarb   $0xff,-0x1(%ecx)
mov    %es,(%edi)
add    %al,(%eax)
add    %bh,-0x1(%edx)
pushl  0x60000007(%eax)
jp     8054e4e <_IO_stdin_used+0x3b6a>
jmp    *%esp
pop    %es
add    %al,(%eax)
inc    %eax
jnp    8054e56 <_IO_stdin_used+0x3b72>
jmp    *(%eax)
or     %al,(%eax)
add    %dh,0x7b(%eax)
(bad)
(bad)
cmp    %cl,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%edi,%edi,8)
insb   (%dx),%es:(%edi)
or     %al,(%eax)
add    %ah,(%eax)
jl     8054e6e <_IO_stdin_used+0x3b8a>
incl   0x40000008(%eax)
jl     8054e76 <_IO_stdin_used+0x3b92>
call   *0x7c600000(%eax,%ecx,1)
(bad)
ljmp   *-0x7ffffff8(%eax)
jl     8054e86 <_IO_stdin_used+0x3ba2>
(bad)
mov    $0xb0000008,%esp
jl     8054e8e <_IO_stdin_used+0x3baa>
(bad)
fmull  (%eax)
add    %al,(%eax)
loopne 8054f12 <_IO_stdin_used+0x3c2e>
(bad)
(bad)
cld
or     %al,(%eax)
add    %dl,(%eax)
jge    8054e9e <_IO_stdin_used+0x3bba>
call   *(%ecx,%ecx,1)
add    %al,(%eax)
inc    %eax
jge    8054ea6 <_IO_stdin_used+0x3bc2>
ljmp   *(%ecx,%ecx,1)
add    %al,(%eax)
lock jge 8054eae <_IO_stdin_used+0x3bca>
call   *0x9(%eax)
add    %al,(%eax)
and    %bh,-0x1(%esi)
ljmp   *0x9(%eax)
add    %al,(%eax)
push   %eax
jle    8054ebe <_IO_stdin_used+0x3bda>
incl   -0x7ffffff7(%eax)
jle    8054ec6 <_IO_stdin_used+0x3be2>
lcall  *0x30000009(%eax)
jg     8054ece <_IO_stdin_used+0x3bea>
(bad)
mov    $0x70000009,%esp
jg     8054ed6 <_IO_stdin_used+0x3bf2>
call   *%esp
or     %eax,(%eax)
add    %dh,-0x13000081(%eax)
or     %eax,(%eax)
add    %dh,%al
jg     8054ee6 <_IO_stdin_used+0x3c02>
incl   (%edx,%ecx,1)
add    %al,(%eax)
adc    %al,0xa18ffff(%eax)
add    %al,(%eax)
xor    %al,0xa2cffff(%eax)
add    %al,(%eax)
push   %eax
cmp    $0xff,%bh
inc    %eax
or     (%eax),%al
add    %dh,-0x80(%eax)
(bad)
call   *0x0(%edx,%ecx,1)
add    %ah,%al
test   %edi,%edi
push   %eax
or     (%eax),%al
add    %dh,(%eax)
xchg   %bh,%bh
decl   (%eax)
or     (%eax),%eax
add    %dl,0x2cffff86(%eax)
or     (%eax),%eax
add    %dl,%al
xchg   %bh,%bh
incl   0x0(%ebx,%ecx,1)
add    %al,0x68ffff87(%eax)
or     (%eax),%eax
add    %dh,-0x73000079(%eax)
or     (%eax),%eax
add    %ah,%al
xchg   %edi,%edi
pushl  -0xffffff5(%eax)
xchg   %edi,%edi
inc    %esp
or     (%eax),%eax
add    %al,-0x78(%eax)
(bad)
push   %esp
or     (%eax),%eax
add    %al,0x20ffff88(%eax)
or     $0x0,%al
add    %ah,%al
mov    %bh,%bh
call   *0xc(%eax)
add    %al,(%eax)
xor    %cl,0xc74ffff(%ecx)
add    %al,(%eax)
pusha
mov    %edi,%edi
call   *-0x76700000(%esp,%ecx,1)
(bad)
pushl  -0x3ffffff4(%eax)
mov    %edi,%edi
call   *%eax
or     $0x0,%al
add    %dh,%al
mov    %edi,%edi
push   %eax
or     $0x0,%al
add    %al,-0x76(%eax)
(bad)
incl   -0x6fc00000(,%ecx,1)
(bad)
pushl  0xd(%eax)
add    %al,(%eax)
pusha
xchg   %eax,%esp
(bad)
dec    %eax
or     $0x95800000,%eax
(bad)
call   *(%eax)
push   %cs
add    %al,(%eax)
loopne 8054f43 <_IO_stdin_used+0x3c5f>
(bad)
ljmp   *(%esi,%ecx,1)
add    %al,(%eax)
pusha
xchg   %eax,%esi
(bad)
incl   -0x65e00000(%esi,%ecx,1)
(bad)
inc    %esp
push   %cs
add    %al,(%eax)
rcrb   $0x0,0xf0cffff(%edx)
add    %ah,(%eax)
fwait
(bad)
(bad)
cmp    %cl,(%edi)
add    %al,(%eax)
mov    $0x9b,%al
(bad)
call   *-0x1ffffff1(%eax)
mov    $0xff,%bh
inc    %eax
sldt   (%eax)
inc    %eax
mov    $0xfe4ffff,%eax
add    %al,(%eax)
and    %bh,0x1020ffff(%ecx)
add    %al,(%eax)
rol    $0xff,%ah
jmp    *0x10(%eax)
add    %al,(%eax)
xor    %al,%ch
(bad)
lcall  *-0x3ac00000(%eax,%edx,1)
(bad)
.byte 0xff
mov    $0x10,%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     8055023 <_IO_stdin_used+0x3d3f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
cmp    $0x420ffff,%eax
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8055043 <_IO_stdin_used+0x3d5f>
js     8055041 <_IO_stdin_used+0x3d5d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0x57,%al
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
jae    8055077 <_IO_stdin_used+0x3d93>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %al,0x57cc0000(%eax,%eax,1)
(bad)
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
test   %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x0,%ah
add    %al,(%eax)
jl     805511e <_IO_stdin_used+0x3e3a>
(bad)
incl   0x43000000(%eax,%eax,1)
push   %cs
inc    %eax
add    0xa(%esi),%ch
push   %cs
add    $0x47,%al
or     0xe(%ebx),%ecx
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %ch,%ah
pop    %eax
(bad)
(bad)
mov    $0x0,%eax
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%al
add    %al,(%eax)
add    %bl,-0x410000a7(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffac,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %ah,(%ecx,%eax,1)
add    %al,(%eax)
sbb    $0x5a,%al
(bad)
jmp    *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
mov    $0x40ffff5a,%eax
add    %al,(%eax)
add    %al,(%eax)
jnp    80551a1 <_IO_stdin_used+0x3ebd>
adc    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    %es,(%ecx)
add    %al,(%eax)
in     $0x5a,%al
(bad)
lcall  *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%ebx)
sub    %al,(%ecx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x14000001,%esp
pop    %esp
(bad)
decl   0x8
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,%ah
add    %eax,(%eax)
add    %al,(%esp,%eiz,2)
(bad)
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
inc    %eax
ja     805520e <_IO_stdin_used+0x3f2a>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %bh,0x3f(%eax)
(bad)
pushl  0x15(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %esp
xchg   %al,(%ebx,%eax,4)
add    $0x10000000,%eax
add    %al,(%eax)
add    %ch,(%edx,%eax,1)
add    %al,(%eax)
push   %esp
fs
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
push   %eax
fs
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx,%eax,1)
add    %cl,-0x1(%esp,%eiz,2)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
addb   $0x0,(%edx)
add    %dh,%al
fs
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x30000002(%eax)
gs
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %al,%ah
add    (%eax),%al
add    %cl,-0x1(%ebp,%eiz,2)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x68300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    %al,(%ebx)
add    %al,(%eax)
push   $0xadffff65
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    (%eax),%eax
add    %bl,%al
gs
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
test   %al,(%ebx)
add    %al,(%eax)
fsubl  -0x1(%ebp)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0x66940000(%ebx,%eax,1)
(bad)
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,-0x69000090(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %al,0x4(%eax)
add    %al,(%eax)
loopne 80554c3 <_IO_stdin_used+0x41df>
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esp,%eax,1)
add    %ch,%ah
jno    8055486 <_IO_stdin_used+0x41a2>
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x7fffffc(%eax)
jno    805549a <_IO_stdin_used+0x41b6>
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x72040000(%esp,%eax,1)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
rolb   $0x0,(%eax,%eax,1)
and    %dh,-0x1(%edx)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    $0x0,%al
add    %ch,(%edx,%esi,2)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
clc
add    $0x0,%al
add    %cl,0x72(%eax)
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
sub    $0x5,%al
add    %al,(%eax)
je     80555b0 <_IO_stdin_used+0x42cc>
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,0x5(%eax)
add    %al,(%eax)
sbb    %dh,-0x1(%ebx)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
addb   $0xff,0x73300000
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x5,%ah
add    %al,(%eax)
mov    %?,-0x1(%ebx)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
add    $0x73980000,%eax
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
add    $0x73a40000,%eax
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
add    $0x73b00000,%eax
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6,%al
add    %al,(%eax)
mov    $0x2dffff73,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,(%esi,%eax,1)
add    %al,(%eax)
int3
jae    8055636 <_IO_stdin_used+0x4352>
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x0(%esi,%eax,1)
add    %bl,%ah
jae    8055656 <_IO_stdin_used+0x4372>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
push   %es
add    %al,(%eax)
hlt
jae    805566e <_IO_stdin_used+0x438a>
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
je     8055688 <_IO_stdin_used+0x43a4>
add    %al,(%eax)
or     $0x74,%al
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cwtl
push   %es
add    %al,(%eax)
cwtl
je     80556aa <_IO_stdin_used+0x43c6>
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x6,%al
add    %al,(%eax)
mov    $0x74,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
enter  $0x6,$0x0
enter  $0xff74,$0xff
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
loopne 80556f4 <_IO_stdin_used+0x4410>
add    %al,(%eax)
loopne 8055766 <_IO_stdin_used+0x4482>
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    $0x7,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jne    8055716 <_IO_stdin_used+0x4432>
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sbb    $0x7,%al
add    %al,(%eax)
xchg   %eax,%esp
jne    805572e <_IO_stdin_used+0x444a>
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    $0x7,%al
add    %al,(%eax)
mov    $0x33ffff75,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
pop    %es
add    %al,(%eax)
in     $0x75,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x7(%eax)
add    %al,(%eax)
lock jne 8055772 <_IO_stdin_used+0x448e>
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi,%eax,1)
add    %bh,%ah
jne    8055786 <_IO_stdin_used+0x44a2>
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x8000007(%eax)
jbe    805579a <_IO_stdin_used+0x44b6>
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,-0x64000000(%eax)
pop    %es
add    %al,(%eax)
adc    $0x76,%al
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cmp    %cl,(%eax)
add    %al,(%eax)
call   530557c7 <optarg+0x4affe5df>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,0x8(%eax)
add    %al,(%eax)
and    %bh,-0x1(%ebx)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
je     805588a <_IO_stdin_used+0x45a6>
add    %al,(%eax)
pop    %esp
jnp    8055886 <_IO_stdin_used+0x45a2>
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    %cs,(%eax)
add    %al,(%eax)
test   %bh,-0x1(%ebx)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0x8,%al
add    %al,(%eax)
adc    %bh,-0x1(%edi,%edi,8)
and    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
aam    $0x8
add    %al,(%eax)
sbb    $0x7c,%al
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
clc
or     %al,(%eax)
add    %ch,(%eax)
jl     805590a <_IO_stdin_used+0x4626>
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
or     $0x9,%al
add    %al,(%eax)
and    $0x7c,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cmp    $0x9,%al
add    %al,(%eax)
inc    %esp
jl     805594e <_IO_stdin_used+0x466a>
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
push   $0x58000009
jl     805597a <_IO_stdin_used+0x4696>
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
cwtl
or     %eax,(%eax)
add    %cl,0x49ffff7c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    $0xb4000009,%esp
jl     80559ce <_IO_stdin_used+0x46ea>
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bl,%ah
or     %eax,(%eax)
add    %al,%ah
jl     80559ee <_IO_stdin_used+0x470a>
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
clc
or     %eax,(%eax)
add    %bl,%al
jl     8055a0a <_IO_stdin_used+0x4726>
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,(%eax)
or     (%eax),%al
add    %ch,%al
jl     8055a2a <_IO_stdin_used+0x4746>
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%eax)
or     (%eax),%al
add    %bh,%al
jl     8055a4a <_IO_stdin_used+0x4766>
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0x0(%eax)
add    %al,(%eax)
dec    %esp
or     (%eax),%al
add    %dh,0x5f8ffff(,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
sahf
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,-0x37fffff6(%eax)
(bad)
(bad)
call   *(%esp,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
dec    %edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %dl,(%eax)
or     (%eax),%eax
add    %dl,0x1fffff86(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %bl,0xb(%eax)
add    %al,(%eax)
push   $0x60ffff87
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x0(%ebx,%ecx,1)
add    %ch,0x78ffff(%edi,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     8055bab <_IO_stdin_used+0x48c7>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
int3
or     (%eax),%eax
add    %dl,%ah
xchg   %edi,%edi
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %cl,(%esp,%ecx,1)
add    %al,(%eax)
push   %esp
mov    %edi,%edi
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
or     $0x0,%al
add    %ch,0x5dffff(%ebx,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %al,-0x1ffffff4(%eax)
mov    %edi,%edi
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
fmuls  (%eax,%eax,1)
add    %bl,(%eax)
mov    %?,%edi
ljmp   *(%edx)
sbb    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,(%eax)
or     $0xa8180000,%eax
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
sub    $0xd,%al
add    %al,(%eax)
push   %esp
test   $0xff,%al
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,0xd(%eax)
add    %al,(%eax)
clc
test   $0xff,%al
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
test   $0xd,%al
add    %al,(%eax)
pop    %eax
mov    $0xff,%ah
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,%ah
or     $0xb48c0000,%eax
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%al
or     $0xb4880000,%eax
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0xd0
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    $0xa7,%al
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
dec    %esp
lea    (%eax,%ecx,1),%eax
or     $0xcc000000,%eax
adc    0x1908,%al
add    %cl,(%eax)
outsl  %ds:(%esi),(%dx)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x6f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
mov    $0x6080486,%eax
add    %al,(%eax)
add    %bh,%al
addl   $0xa,(%eax,%ecx,1)
xor    (%ebx),%eax
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
jo     8056f88 <_IO_stdin_used+0x5ca4>
or     %al,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,0x4(%ebx,%ecx,4)
or     %dl,(%ecx)
add    %al,(%eax)
add    %al,(%ebx,%ecx,4)
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x7c(%edi)
mov    (%eax,%ecx,1),%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x14(%edi)
mov    %eax,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0x6f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x69f7fb73(%esi)
lea    (%eax,%ecx,1),%eax
cmpsb  %es:(%edi),%ds:(%esi)
lea    (%eax,%ecx,1),%eax
mov    $0x8d,%dh
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
(bad)
lea    (%eax,%ecx,1),%eax
out    %al,$0x8d
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
push   %es
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
mov    %es:(%eax,%ecx,1),%es
mov    %ss:(%eax,%ecx,1),%es
inc    %esi
mov    (%eax,%ecx,1),%es
push   %esi
mov    (%eax,%ecx,1),%es
data16
mov    (%eax,%ecx,1),%es
jbe    8056fd8 <_IO_stdin_used+0x5cf4>
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8057019 <_IO_stdin_used+0x5d35>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    805705a <_IO_stdin_used+0x5d76>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    805709b <_IO_stdin_used+0x5db7>
add    $0x8,%al
.byte 0x86
xchg   %eax,%ecx
add    $0x8,%al
insb   (%dx),%es:(%edi)
inc    %edx
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %dh,0x5(%ecx,%esi,2)
or     %al,(%eax)
add    %eax,(%eax)
add    %al,%al
jb     8057180 <__progname>
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jae    76 <dup2@plt-0x8048d0a>
je     7d <dup2@plt-0x8048d03>
add    %al,(%eax)
add    %al,(%eax)
sub    %ebx,%ebp
.byte 0x20
xchg   %eax,%esp
