das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %cl,%al
fisttp 0x1021a2d7(%edi)
xchg   %eax,%ebx
shrl   0x77(%ebx)
bound  %edx,(%eax)
sub    $0x19,%cl
dec    %edi
cmc
.byte 0x25
lret
add    (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x40023d65(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,(%ecx)
sbb    $0xf2381c8c,%eax
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  804819c <__strcat_chk@plt-0xa84>
addr16 push %ebp
popa
adc    %dh,(%edx)
(bad)
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
push   %ds
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int    $0x1
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
leave
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ecx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    %eax,(%eax)
add    %al,-0x22(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x1(%ebp)
add    %al,(%eax)
and    %bl,%dh
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,(%edx)
add    %al,(%eax)
add    %al,(%edi,%ebp,8)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
mov    $0x28000000,%ebp
fiadd  0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x0(%edx)
add    %al,(%eax)
and    $0xde,%al
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x1(%esi)
add    %al,(%eax)
inc    %esp
fiadd  0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,0x5f(%edi)
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80486c6 <__strcat_chk@plt-0x55a>
popa
jb     80486c9 <__strcat_chk@plt-0x557>
pop    %edi
pop    %edi
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    80486ce <__strcat_chk@plt-0x552>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80486dc <__strcat_chk@plt-0x544>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     80486d8 <__strcat_chk@plt-0x548>
jo     80486f0 <__strcat_chk@plt-0x530>
add    %bl,0x5f(%edi)
jo     80486ee <__strcat_chk@plt-0x532>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     80486f1 <__strcat_chk@plt-0x52f>
je     804868a <__strcat_chk@plt-0x596>
jb     80486f1 <__strcat_chk@plt-0x52f>
popa
fs imul $0x6c746573,%fs:0x0(%edx),%esi
6c
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x6f(%esi)
jo     8048705 <__strcat_chk@plt-0x51b>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     8048714 <__strcat_chk@plt-0x50c>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048717 <__strcat_chk@plt-0x509>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048727 <__strcat_chk@plt-0x4f9>
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jae    8048731 <__strcat_chk@plt-0x4ef>
jb     8048723 <__strcat_chk@plt-0x4fd>
jne    8048731 <__strcat_chk@plt-0x4ef>
add    %dh,0x65(%eax)
jb     8048738 <__strcat_chk@plt-0x4e8>
outsl  %ds:(%esi),(%dx)
jb     80486c9 <__strcat_chk@plt-0x557>
arpl   %sp,%fs:0x65(%edi)
je     8048743 <__strcat_chk@plt-0x4dd>
gs
js     8048746 <__strcat_chk@plt-0x4da>
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    804873d <__strcat_chk@plt-0x4e3>
imul   $0x6e727473,%fs:0x0(%edx),%esi
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jae    804875c <__strcat_chk@plt-0x4c4>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x68637475,0x70(%eax,%eax,1),%ebp
popa
jb     80486fd <__strcat_chk@plt-0x523>
jb     8048764 <__strcat_chk@plt-0x4bc>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804877b <__strcat_chk@plt-0x4a5>
imul   $0x65706f70,%fs:0x0(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     8048789 <__strcat_chk@plt-0x497>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     8048791 <__strcat_chk@plt-0x48f>
jns    804871f <__strcat_chk@plt-0x501>
jae    8048786 <__strcat_chk@plt-0x49a>
imul   $0x0,%gs:0x72(%ecx,%ebp,2),%esp
jae    804879d <__strcat_chk@plt-0x483>
jb     8048797 <__strcat_chk@plt-0x489>
outsb  %gs:(%esi),(%dx)
add    %bl,0x5f(%edi)
gs
jb     80487a5 <__strcat_chk@plt-0x47b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x72747300,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
fs
jne    80487b6 <__strcat_chk@plt-0x46a>
add    %ah,0x6c(%ebx)
gs
popa
jb     80487b2 <__strcat_chk@plt-0x46e>
jb     80487c1 <__strcat_chk@plt-0x45f>
add    %bl,0x5f(%edi)
data16
jo     80487c7 <__strcat_chk@plt-0x459>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     80487c5 <__strcat_chk@plt-0x45b>
outsl  %ds:(%esi),(%dx)
jne    80487d8 <__strcat_chk@plt-0x448>
add    %ah,0x70(%esi)
jne    80487dd <__strcat_chk@plt-0x443>
arpl   %ax,(%eax)
data16
jo     80487e3 <__strcat_chk@plt-0x43d>
je     80487e3 <__strcat_chk@plt-0x43d>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80487e3 <__strcat_chk@plt-0x43d>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80487fc <__strcat_chk@plt-0x424>
jb     80487ed <__strcat_chk@plt-0x433>
popa
jae    80487f2 <__strcat_chk@plt-0x42e>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
imul   $0x74635f5f,%fs:0x0(%edx),%esi
jns    804880f <__strcat_chk@plt-0x411>
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048810 <__strcat_chk@plt-0x410>
outsb  %ds:(%esi),(%dx)
jbe    80487ae <__strcat_chk@plt-0x472>
outsl  %ds:(%esi),(%dx)
jo     8048825 <__strcat_chk@plt-0x3fb>
popa
jb     804881b <__strcat_chk@plt-0x405>
add    %dh,0x74(%ebx)
fs
gs
jb     804882d <__strcat_chk@plt-0x3f3>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
jae    8048834 <__strcat_chk@plt-0x3ec>
jo     804883a <__strcat_chk@plt-0x3e6>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x74656700,0x6b(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jo     8048854 <__strcat_chk@plt-0x3cc>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x63(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048858 <__strcat_chk@plt-0x3c8>
add    %ah,0x77(%esi)
jb     8048861 <__strcat_chk@plt-0x3bf>
je     804885f <__strcat_chk@plt-0x3c1>
add    %ah,0x72(%esi)
gs
popa
add    %bl,%fs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     8048875 <__strcat_chk@plt-0x3ab>
push   $0x5f5f0072
jbe    804887f <__strcat_chk@plt-0x3a1>
jo     804888d <__strcat_chk@plt-0x393>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x5f,(%eax),%eax
pop    %edi
jae    804889c <__strcat_chk@plt-0x384>
jb     804888d <__strcat_chk@plt-0x393>
jo     80488a5 <__strcat_chk@plt-0x37b>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
jae    80488a5 <__strcat_chk@plt-0x37b>
jb     80488a0 <__strcat_chk@plt-0x380>
outsb  %ds:(%esi),(%dx)
je     80488a0 <__strcat_chk@plt-0x380>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
js     80488b6 <__strcat_chk@plt-0x36a>
je     80488a6 <__strcat_chk@plt-0x37a>
je     8048847 <__strcat_chk@plt-0x3d9>
bound  %ebp,0x6e(%ecx)
fs
je     80488b2 <__strcat_chk@plt-0x36e>
js     80488c3 <__strcat_chk@plt-0x35d>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    80488cf <__strcat_chk@plt-0x351>
add    %bl,0x49(%edi)
dec    %edi
pop    %edi
addr16
gs
je     80488c8 <__strcat_chk@plt-0x358>
add    %bl,0x5f(%edi)
jae    80488de <__strcat_chk@plt-0x342>
jb     80488cf <__strcat_chk@plt-0x351>
popa
je     80488ce <__strcat_chk@plt-0x352>
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     80488da <__strcat_chk@plt-0x346>
insl   (%dx),%es:(%edi)
jo     804887a <__strcat_chk@plt-0x3a6>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80488fa <__strcat_chk@plt-0x326>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8048893 <__strcat_chk@plt-0x38d>
jae    8048909 <__strcat_chk@plt-0x317>
jo     80488fa <__strcat_chk@plt-0x326>
jo     8048912 <__strcat_chk@plt-0x30e>
add    %ah,0x72(%esi)
gs add %al,%gs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
add    $0x1000,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x60000,0xd(%ecx),%ebp
push   %edi
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x261,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
imul   $0x0,(%edx),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
jne    80489ac <__strcat_chk@plt-0x274>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80489cb <__strcat_chk@plt-0x255>
imul   $0x20000,(%ecx),%ecx
jg     80489bc <__strcat_chk@plt-0x264>
add    %al,(%eax)
add    %al,(%eax)
cld
popl   0x1c0608
add    %ah,(%eax)
fiadd  0x410508
add    %ah,(%esi,%ebx,8)
add    $0x440508,%eax
add    %ch,(%eax)
fiadd  0x430508
add    %al,-0x22(%eax)
add    $0x400508,%eax
add    %al,0x5(%esi,%ebx,8)
.byte 0x8
.byte 0x5
inc    %ebp
or     $0x90,%al
add    $0x10708,%eax
add    %dl,(%eax)
nop
add    $0x20708,%eax
add    %dl,(%eax,%edx,4)
add    $0x30708,%eax
add    %bl,(%eax)
nop
add    $0x40708,%eax
add    %bl,(%eax,%edx,4)
add    $0x50708,%eax
add    %ah,(%eax)
nop
add    $0x60708,%eax
add    %ah,(%eax,%edx,4)
add    $0x70708,%eax
add    %ch,(%eax)
nop
add    $0x80708,%eax
add    %ch,(%eax,%edx,4)
add    $0x90708,%eax
add    %dh,(%eax)
nop
add    $0xa0708,%eax
add    %dh,(%eax,%edx,4)
add    $0xb0708,%eax
add    %bh,(%eax)
nop
add    $0xc0708,%eax
add    %bh,(%eax,%edx,4)
add    $0xd0708,%eax
add    %al,-0x70(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%edx,4)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
nop
add    $0x100708,%eax
add    %cl,0x5(%eax,%edx,4)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,-0x70(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%edx,4)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,-0x70(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%edx,4)
or     %al,(%edi)
adc    $0x90600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%edx,4)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080590
sbb    %al,(%eax)
add    %ch,0x5(%eax,%edx,4)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,-0x70(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%edx,4)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,-0x70(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%edx,4)
or     %al,(%edi)
sbb    $0x90800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%edx,4)
add    %al,(%eax)
mov    %dl,0x20070805(%eax)
add    %al,(%eax)
mov    %ss,0x21070805(%eax)
add    %al,(%eax)
nop
nop
add    $0x220708,%eax
add    %dl,0x23070805(%eax,%edx,4)
add    %al,(%eax)
cwtl
nop
add    $0x240708,%eax
add    %bl,0x25070805(%eax,%edx,4)
add    %al,(%eax)
mov    0x7080590,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
nop
add    $0x270708,%eax
add    %ch,0x7080590(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%edx,4)
add    %al,(%eax)
mov    $0x90,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%edx,4)
add    %al,(%eax)
mov    $0x7080590,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%edx,4)
add    %al,(%eax)
rclb   $0x0,0x2e070805(%eax)
add    %al,%ah
nop
add    $0x2f0708,%eax
add    %cl,%al
nop
add    $0x300708,%eax
add    %cl,%ah
nop
add    $0x310708,%eax
add    %dl,%al
nop
add    $0x320708,%eax
add    %dl,%ah
nop
add    $0x330708,%eax
add    %bl,%al
nop
add    $0x340708,%eax
add    %bl,%ah
nop
add    $0x350708,%eax
add    %ah,%al
nop
add    $0x360708,%eax
add    %ah,%ah
nop
add    $0x370708,%eax
add    %ch,%al
nop
add    $0x380708,%eax
add    %ch,%ah
nop
add    $0x390708,%eax
add    %dh,%al
nop
add    $0x3a0708,%eax
add    %dh,%ah
nop
add    $0x3b0708,%eax
add    %bh,%al
nop
add    $0x3c0708,%eax
add    %bh,%ah
nop
add    $0x3d0708,%eax
add    %al,(%eax)
xchg   %eax,%ecx
add    $0x3e0708,%eax
add    %al,(%ecx,%edx,4)
add    $0x3f0708,%eax
push   %ebx
sub    $0x8,%esp
call   804a790 <__sprintf_chk@plt+0x1790>
add    $0x1040f,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048c06 <__strcat_chk@plt-0x1a>
call   8048dd0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8059004
jmp    *0x8059008
add    %al,(%eax)
jmp    *0x805900c
push   $0x0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059010
push   $0x8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059014
push   $0x10
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059018
push   $0x18
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805901c
push   $0x20
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059020
push   $0x28
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059024
push   $0x30
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059028
push   $0x38
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805902c
push   $0x40
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059030
push   $0x48
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059034
push   $0x50
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059038
push   $0x58
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805903c
push   $0x60
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059040
push   $0x68
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059044
push   $0x70
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059048
push   $0x78
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805904c
push   $0x80
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059050
push   $0x88
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059054
push   $0x90
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059058
push   $0x98
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805905c
push   $0xa0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059060
push   $0xa8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059064
push   $0xb0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059068
push   $0xb8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805906c
push   $0xc0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059070
push   $0xc8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059074
push   $0xd0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059078
push   $0xd8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805907c
push   $0xe0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059080
push   $0xe8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059084
push   $0xf0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059088
push   $0xf8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805908c
push   $0x100
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059090
push   $0x108
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059094
push   $0x110
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059098
push   $0x118
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x805909c
push   $0x120
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590a0
push   $0x128
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590a4
push   $0x130
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590a8
push   $0x138
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590ac
push   $0x140
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590b0
push   $0x148
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590b4
push   $0x150
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590b8
push   $0x158
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590bc
push   $0x160
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590c0
push   $0x168
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590c4
push   $0x170
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590c8
push   $0x178
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590cc
push   $0x180
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590d0
push   $0x188
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590d4
push   $0x190
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590d8
push   $0x198
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590dc
push   $0x1a0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590e0
push   $0x1a8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590e4
push   $0x1b0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590e8
push   $0x1b8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590ec
push   $0x1c0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590f0
push   $0x1c8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590f4
push   $0x1d0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590f8
push   $0x1d8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x80590fc
push   $0x1e0
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059100
push   $0x1e8
jmp    8048c10 <__strcat_chk@plt-0x10>
jmp    *0x8059104
push   $0x1f0
jmp    8048c10 <__strcat_chk@plt-0x10>
push   %ebx
sub    $0x18,%esp
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8057008,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x47,(%esp)
call   8048de0 <exit@plt>
nop
push   %ebp
mov    $0x34,%ecx
mov    %esp,%ebp
push   %edi
push   %esi
mov    $0x804ff40,%esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x150,%esp
mov    0xc(%ebp),%ebx
lea    0x74(%esp),%edx
mov    %edx,%edi
rep movsl %ds:(%esi),%es:(%edi)
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
mov    %edx,0x3c(%esp)
mov    (%ebx),%esi
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   8048f30 <strrchr@plt>
movl   $0x804f07f,0x4(%esp)
movl   $0x6,(%esp)
test   %eax,%eax
lea    0x1(%eax),%edx
cmovne %edx,%esi
mov    %esi,0x805e108
xor    %esi,%esi
call   8048f20 <setlocale@plt>
movl   $0x804f080,0x4(%esp)
movl   $0x804f092,(%esp)
call   8048f70 <bindtextdomain@plt>
movl   $0x804f092,(%esp)
call   8048cf0 <textdomain@plt>
lea    0x0(%esi),%esi
mov    0x8(%ebp),%edx
lea    0x74(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x804f0bb,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edx,(%esp)
call   8048e10 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049257 <__sprintf_chk@plt+0x257>
sub    $0x3f,%eax
cmp    $0x37,%eax
ja     80490f0 <__sprintf_chk@plt+0xf0>
jmp    *0x8050010(,%eax,4)
addl   $0x1,0x805de68
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de6c
00
movl   $0x1,0x805e0e4
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de70
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de64
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de74
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de78
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de60
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de7c
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x1,0x805de80
00
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x5,0x8(%esp)
mov    0x805e108,%ebx
movl   $0x804f096,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x804f0a2,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <__printf_chk@plt>
movl   $0x0,(%esp)
call   8048de0 <exit@plt>
mov    0x805de44,%esi
jmp    80490f0 <__sprintf_chk@plt+0xf0>
movl   $0x5,0x8(%esp)
movl   $0x804f564,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x804f0ad,0x10(%esp)
movl   $0x804f0a6,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
cmpl   $0x0,0x805de6c
je     804926d <__sprintf_chk@plt+0x26d>
cmpl   $0x0,0x805de80
jne    804a224 <__sprintf_chk@plt+0x1224>
test   %esi,%esi
je     804a2fa <__sprintf_chk@plt+0x12fa>
mov    %esi,(%esp)
call   804d8c0 <__sprintf_chk@plt+0x48c0>
mov    %eax,0x34(%esp)
cmpl   $0x0,0x805de74
jne    8049297 <__sprintf_chk@plt+0x297>
cmpl   $0x0,0x805de7c
je     804a24f <__sprintf_chk@plt+0x124f>
movl   $0x804f0c9,(%esp)
movl   $0x8059138,0x8060f64
08
call   8048d70 <getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     80492d9 <__sprintf_chk@plt+0x2d9>
cmpl   $0x0,0x805de64
jne    80492c9 <__sprintf_chk@plt+0x2c9>
cmpl   $0x0,0x805de74
je     804a333 <__sprintf_chk@plt+0x1333>
mov    %esi,0x805de84
movl   $0x805de84,0x8060f64
08
cmpl   $0x0,0x805de78
jne    804a132 <__sprintf_chk@plt+0x1132>
mov    0x8(%ebp),%edx
cmp    %edx,0x805de24
je     804a6d8 <__sprintf_chk@plt+0x16d8>
mov    0x805de24,%edx
lea    (%ebx,%edx,4),%esi
mov    (%esi),%eax
lea    0x4(%ebx,%edx,4),%ebx
test   %eax,%eax
jne    8049344 <__sprintf_chk@plt+0x344>
jmp    804948a <__sprintf_chk@plt+0x48a>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%eax)
jne    8049349 <__sprintf_chk@plt+0x349>
mov    0x805de28,%eax
movl   $0x6474733c,0x80611e0
64
movl   $0x3e6e69,0x80611e4
00
mov    %ebx,%esi
add    $0x4,%ebx
call   804baf0 <__sprintf_chk@plt+0x2af0>
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804948a <__sprintf_chk@plt+0x48a>
cmpb   $0x2d,(%eax)
je     8049310 <__sprintf_chk@plt+0x310>
mov    0x8060f64,%edx
movl   $0x8059128,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
test   %eax,%eax
jne    804932f <__sprintf_chk@plt+0x32f>
mov    (%esi),%esi
movzbl (%esi),%edx
mov    %esi,0x38(%esp)
test   %dl,%dl
je     80493b9 <__sprintf_chk@plt+0x3b9>
mov    %dl,0x28(%esp)
call   8048ff0 <__ctype_b_loc@plt>
mov    0x38(%esp),%edi
movsbl 0x28(%esp),%edx
add    $0x1,%edi
mov    (%eax),%esi
movzbl %dl,%eax
testw  $0xc00,(%esi,%eax,2)
jne    80493ae <__sprintf_chk@plt+0x3ae>
mov    %edx,0x4(%esp)
movl   $0x804f0ff,(%esp)
call   8048e20 <strchr@plt>
test   %eax,%eax
je     8049fdd <__sprintf_chk@plt+0xfdd>
add    $0x1,%edi
movsbl -0x1(%edi),%edx
test   %dl,%dl
jne    804938b <__sprintf_chk@plt+0x38b>
mov    0x38(%esp),%ecx
mov    %ecx,(%esp)
call   8048e80 <__strdup@plt>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8048e20 <strchr@plt>
test   %eax,%eax
je     804a165 <__sprintf_chk@plt+0x1165>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    %esi,%edi
mov    %eax,(%esp)
call   8048e80 <__strdup@plt>
or     $0xffffffff,%ecx
mov    %eax,0x38(%esp)
xor    %eax,%eax
repnz scas %es:(%edi),%al
cmpl   $0x0,0x38(%esp)
mov    %ecx,%edx
not    %edx
lea    0x15(%edx),%ecx
je     804a171 <__sprintf_chk@plt+0x1171>
mov    0x38(%esp),%edi
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
not    %ecx
lea    0x15(%edx,%ecx,1),%eax
mov    %eax,(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
mov    %esi,0x10(%esp)
movl   $0x804f104,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    0x38(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
call   8049000 <__sprintf_chk@plt>
movl   $0x8052825,0x4(%esp)
mov    %edi,(%esp)
call   8048cc0 <popen@plt>
mov    %edi,(%esp)
mov    %eax,0x28(%esp)
call   8048c60 <free@plt>
mov    0x38(%esp),%edx
mov    %edx,(%esp)
call   8048c60 <free@plt>
mov    %esi,(%esp)
call   8048c60 <free@plt>
mov    0x28(%esp),%eax
jmp    804932f <__sprintf_chk@plt+0x32f>
cmpb   $0x0,0x805de9c
je     8049808 <__sprintf_chk@plt+0x808>
mov    0x805de98,%eax
test   %eax,%eax
jle    8049808 <__sprintf_chk@plt+0x808>
cmpb   $0x0,0x805e540
movl   $0x0,0x38(%esp)
jne    80494cd <__sprintf_chk@plt+0x4cd>
xor    %edx,%edx
jmp    80494c2 <__sprintf_chk@plt+0x4c2>
cmpb   $0x0,0x805e540(%edx)
jne    80494c9 <__sprintf_chk@plt+0x4c9>
add    $0x1,%edx
cmp    %eax,%edx
jne    80494b9 <__sprintf_chk@plt+0x4b9>
mov    %edx,0x38(%esp)
xor    %esi,%esi
nop
cmpb   $0x0,0x805fa60(%esi)
je     80495c0 <__sprintf_chk@plt+0x5c0>
mov    0x38(%esp),%ecx
mov    0x805e120(,%ecx,4),%eax
test   %eax,%eax
je     804a6b4 <__sprintf_chk@plt+0x16b4>
movzwl (%eax,%esi,2),%eax
movzbl %ah,%edx
cmp    $0xb,%edx
je     8049504 <__sprintf_chk@plt+0x504>
test   %edx,%edx
jne    80496b3 <__sprintf_chk@plt+0x6b3>
mov    %eax,%edx
and    $0xdf,%dx
sub    $0x41,%edx
cmp    $0x19,%dx
ja     80496b3 <__sprintf_chk@plt+0x6b3>
movzbl %al,%ecx
and    $0x9f,%ax
mov    %ecx,%edx
xor    $0x20,%ecx
or     $0xb,%dh
or     $0xb,%ch
mov    %ax,0x5c(%esp)
mov    %ax,0x5e(%esp)
mov    %ax,0x60(%esp)
mov    %ax,0x62(%esp)
lea    0x64(%esp),%eax
mov    %dx,0x54(%esp)
mov    %cx,0x56(%esp)
mov    %dx,0x58(%esp)
mov    %cx,0x5a(%esp)
jmp    804955c <__sprintf_chk@plt+0x55c>
movzwl -0x10(%eax),%edx
and    $0xff,%dx
or     $0x8,%dh
mov    %dx,(%eax)
add    $0x2,%eax
cmp    0x3c(%esp),%eax
jne    8049558 <__sprintf_chk@plt+0x558>
mov    0x805de98,%eax
test   %eax,%eax
jle    80495c0 <__sprintf_chk@plt+0x5c0>
xor    %ebx,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x805e540(%ebx)
je     80495b1 <__sprintf_chk@plt+0x5b1>
test   %ebx,%ebx
je     804959e <__sprintf_chk@plt+0x59e>
mov    0x805f660(,%ebx,4),%edx
test   %edx,%edx
je     804959e <__sprintf_chk@plt+0x59e>
cmpb   $0x0,(%edx,%esi,1)
jne    80495b1 <__sprintf_chk@plt+0x5b1>
mov    %ebx,%eax
mov    %ebx,%edx
and    $0xf,%eax
movzwl 0x54(%esp,%eax,2),%ecx
mov    %esi,%eax
call   804af90 <__sprintf_chk@plt+0x1f90>
add    $0x1,%ebx
cmp    0x805de98,%ebx
jl     8049580 <__sprintf_chk@plt+0x580>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmp    $0x100,%esi
jne    80494d0 <__sprintf_chk@plt+0x4d0>
cmpl   $0x0,0x805de7c
jne    8049e01 <__sprintf_chk@plt+0xe01>
cmpl   $0x0,0x805de74
je     8049815 <__sprintf_chk@plt+0x815>
movl   $0x804f924,(%esp)
xor    %ebx,%ebx
xor    %edi,%edi
call   8048da0 <puts@plt>
movl   $0x804f968,(%esp)
call   8048da0 <puts@plt>
movl   $0x804f152,(%esp)
call   8048da0 <puts@plt>
movl   $0x804f16b,(%esp)
call   8048da0 <puts@plt>
movl   $0x804f187,(%esp)
call   8048da0 <puts@plt>
mov    0x805e120(,%edi,4),%eax
test   %eax,%eax
je     804971c <__sprintf_chk@plt+0x71c>
add    $0x1,%ebx
test   %edi,%edi
mov    $0x804f077,%eax
jne    80497e5 <__sprintf_chk@plt+0x7e5>
mov    %eax,0x8(%esp)
xor    %esi,%esi
movl   $0x804f1a6,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    804969d <__sprintf_chk@plt+0x69d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e120(,%edi,4),%eax
movzwl (%eax,%esi,2),%eax
add    $0x1,%esi
movl   $0x804f1c2,0x4(%esp)
movl   $0x1,(%esp)
xor    $0xf000,%ax
movzwl %ax,%eax
mov    %eax,0x8(%esp)
call   8048ef0 <__printf_chk@plt>
cmp    $0x100,%esi
je     8049710 <__sprintf_chk@plt+0x710>
test   $0x7,%esi
jne    8049668 <__sprintf_chk@plt+0x668>
movl   $0xa,(%esp)
call   8048e90 <putchar@plt>
jmp    8049668 <__sprintf_chk@plt+0x668>
cmpl   $0x1,0x805de98
jle    80495c0 <__sprintf_chk@plt+0x5c0>
mov    $0x1,%ebx
movzwl %ax,%edi
cmpb   $0x0,0x805e540(%ebx)
je     80496ed <__sprintf_chk@plt+0x6ed>
mov    0x805f660(,%ebx,4),%eax
test   %eax,%eax
je     80496e2 <__sprintf_chk@plt+0x6e2>
cmpb   $0x0,(%eax,%esi,1)
jne    80496ed <__sprintf_chk@plt+0x6ed>
mov    %edi,%ecx
mov    %ebx,%edx
mov    %esi,%eax
call   804af90 <__sprintf_chk@plt+0x1f90>
add    $0x1,%ebx
cmp    0x805de98,%ebx
jl     80496c8 <__sprintf_chk@plt+0x6c8>
add    $0x1,%esi
cmp    $0x100,%esi
jne    80494d0 <__sprintf_chk@plt+0x4d0>
jmp    80495cf <__sprintf_chk@plt+0x5cf>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x804f1cb,(%esp)
call   8048da0 <puts@plt>
add    $0x1,%edi
cmp    $0x100,%edi
jne    8049629 <__sprintf_chk@plt+0x629>
mov    $0xff,%esi
jmp    804973d <__sprintf_chk@plt+0x73d>
lea    0x0(%esi),%esi
sub    $0x1,%esi
je     8049748 <__sprintf_chk@plt+0x748>
mov    0x805e120(,%esi,4),%eax
test   %eax,%eax
je     8049738 <__sprintf_chk@plt+0x738>
movl   $0x804f9ac,0x4(%esp)
xor    %edi,%edi
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
mov    %ebx,%edx
mov    $0x804f07d,%eax
mov    %edi,%ebx
mov    %edx,%edi
jmp    80497b4 <__sprintf_chk@plt+0x7b4>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
mov    $0x804f077,%eax
je     8049781 <__sprintf_chk@plt+0x781>
movsbl %bl,%eax
call   804ac20 <__sprintf_chk@plt+0x1c20>
mov    %eax,0x8(%esp)
movl   $0x804f1d0,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
add    $0x1,%ebx
cmp    %ebx,%esi
jb     8049ec2 <__sprintf_chk@plt+0xec2>
test   $0x3,%bl
mov    $0x804ef14,%eax
mov    $0x804f07d,%ecx
cmove  %ecx,%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
mov    0x805e120(,%ebx,4),%eax
test   %eax,%eax
jne    8049770 <__sprintf_chk@plt+0x770>
movl   $0x804f206,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    8049799 <__sprintf_chk@plt+0x799>
movl   $0x804f19e,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
mov    %edi,%edx
movsbl %dl,%eax
call   804ac20 <__sprintf_chk@plt+0x1c20>
jmp    8049648 <__sprintf_chk@plt+0x648>
movl   $0x0,0x38(%esp)
jmp    80494cd <__sprintf_chk@plt+0x4cd>
mov    0x48(%esp),%edx
cmpl   $0x0,0x805de6c
mov    %edx,0x2c(%esp)
jne    804a6f6 <__sprintf_chk@plt+0x16f6>
movl   $0x0,0x38(%esp)
xor    %edi,%edi
mov    0x805e120(,%edi,4),%ecx
test   %ecx,%ecx
je     8049bf4 <__sprintf_chk@plt+0xbf4>
xor    %esi,%esi
jmp    8049857 <__sprintf_chk@plt+0x857>
nop
add    $0x1,%esi
cmp    $0x100,%esi
je     8049927 <__sprintf_chk@plt+0x927>
mov    0x805f660(,%edi,4),%eax
cmpb   $0x0,(%eax,%esi,1)
je     8049848 <__sprintf_chk@plt+0x848>
mov    0x805e120(,%edi,4),%eax
mov    %esi,%edx
mov    %edi,%ecx
mov    %dl,0x51(%esp)
lea    (%esi,%esi,1),%ebx
mov    %cl,0x50(%esp)
movzwl (%eax,%esi,2),%eax
movl   $0x4b47,0x4(%esp)
mov    %ax,0x52(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     8049a30 <__sprintf_chk@plt+0xa30>
call   8048ea0 <__errno_location@plt>
cmpl   $0x1,(%eax)
nop
je     8049abc <__sprintf_chk@plt+0xabc>
movl   $0x804f240,(%esp)
call   8048d30 <perror@plt>
mov    0x805de68,%edx
test   %edx,%edx
jne    8049a9a <__sprintf_chk@plt+0xa9a>
mov    0x805e120(,%edi,4),%eax
movzwl (%eax,%ebx,1),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fb80,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0xc(%esp)
add    $0x1,%esi
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
cmp    $0x100,%esi
jne    8049857 <__sprintf_chk@plt+0x857>
add    $0x1,%edi
cmp    $0x100,%edi
jne    8049834 <__sprintf_chk@plt+0x834>
cmpl   $0x0,0x805de6c
jne    804a5ef <__sprintf_chk@plt+0x15ef>
xor    %ebx,%ebx
xor    %esi,%esi
jmp    804999e <__sprintf_chk@plt+0x99e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x200,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x8060fa1,(%esp)
call   8048ee0 <__strcpy_chk@plt>
mov    0x34(%esp),%eax
movl   $0x8060fa0,0x8(%esp)
movl   $0x4b49,0x4(%esp)
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
jne    8049b10 <__sprintf_chk@plt+0xb10>
add    $0x1,%ebx
add    $0x1,%esi
cmp    $0x100,%esi
je     8049d20 <__sprintf_chk@plt+0xd20>
mov    0x805fb60(,%esi,4),%eax
mov    %esi,%edx
mov    %dl,0x8060fa0
test   %eax,%eax
jne    8049950 <__sprintf_chk@plt+0x950>
mov    0x805de70,%eax
test   %eax,%eax
je     804998f <__sprintf_chk@plt+0x98f>
mov    0x34(%esp),%eax
movl   $0x8060fa0,0x8(%esp)
movl   $0x4b49,0x4(%esp)
movb   $0x0,0x8060fa1
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     804998c <__sprintf_chk@plt+0x98c>
movzbl 0x8060fa0,%edx
mov    0x80594a8,%eax
mov    (%eax,%edx,4),%edi
movl   $0x5,0x8(%esp)
movl   $0x804f27c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
jmp    804998f <__sprintf_chk@plt+0x98f>
xchg   %ax,%ax
mov    0x805de68,%eax
addl   $0x1,0x38(%esp)
test   %eax,%eax
je     8049848 <__sprintf_chk@plt+0x848>
movl   $0x804f07f,0x30(%esp)
mov    0x805e120(,%edi,4),%eax
movzwl (%eax,%ebx,1),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f249,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edx,0x14(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    8049848 <__sprintf_chk@plt+0x848>
movl   $0x5,0x8(%esp)
movl   $0x804f305,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,0x30(%esp)
jmp    8049a4a <__sprintf_chk@plt+0xa4a>
movl   $0x5,0x8(%esp)
movl   $0x804f222,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %edi,0xc(%esp)
add    $0x1,%edi
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
cmp    $0x100,%edi
jne    8049834 <__sprintf_chk@plt+0x834>
jmp    8049936 <__sprintf_chk@plt+0x936>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8060fa1,(%esp)
call   8048e30 <strlen@plt>
lea    0x1(,%eax,4),%eax
mov    %eax,(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
movzbl 0x8060fa1,%ecx
test   %cl,%cl
mov    %eax,%edi
mov    %eax,%edx
je     8049b79 <__sprintf_chk@plt+0xb79>
mov    $0x8060fa1,%eax
jmp    8049b60 <__sprintf_chk@plt+0xb60>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1b,%cl
je     8049bdd <__sprintf_chk@plt+0xbdd>
mov    %cl,(%edx)
add    $0x1,%edx
add    $0x1,%eax
movzbl (%eax),%ecx
test   %cl,%cl
je     8049b79 <__sprintf_chk@plt+0xb79>
cmp    $0xa,%cl
jne    8049b48 <__sprintf_chk@plt+0xb48>
add    $0x1,%eax
movb   $0x5c,(%edx)
movb   $0x6e,0x1(%edx)
movzbl (%eax),%ecx
add    $0x2,%edx
test   %cl,%cl
jne    8049b60 <__sprintf_chk@plt+0xb60>
movb   $0x0,(%edx)
movzbl 0x8060fa0,%edx
mov    0x80594a8,%eax
mov    (%eax,%edx,4),%edx
movl   $0x5,0x8(%esp)
movl   $0x804fc20,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
call   8048ca0 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    %edi,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
jmp    804998f <__sprintf_chk@plt+0x98f>
movb   $0x5c,(%edx)
movb   $0x30,0x1(%edx)
movb   $0x33,0x2(%edx)
movb   $0x33,0x3(%edx)
add    $0x4,%edx
jmp    8049b56 <__sprintf_chk@plt+0xb56>
cmpb   $0x0,0x805de9c
je     8049927 <__sprintf_chk@plt+0x927>
cmpb   $0x0,0x805e540(%edi)
jne    8049927 <__sprintf_chk@plt+0x927>
cmpl   $0x1,0x805de68
mov    %edi,%ecx
movb   $0x0,0x51(%esp)
mov    %cl,0x30(%esp)
mov    %cl,0x50(%esp)
movw   $0x27f,0x52(%esp)
jle    8049c5d <__sprintf_chk@plt+0xc5d>
movl   $0x5,0x8(%esp)
movl   $0x804f266,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <__printf_chk@plt>
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x4b47,0x4(%esp)
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     8049927 <__sprintf_chk@plt+0x927>
call   8048ea0 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,%esi
jne    804a64a <__sprintf_chk@plt+0x164a>
xor    %ebx,%ebx
jmp    8049ca7 <__sprintf_chk@plt+0xca7>
lea    0x0(%esi),%esi
add    $0x1,%ebx
cmp    $0x100,%ebx
je     8049927 <__sprintf_chk@plt+0x927>
mov    0x34(%esp),%eax
lea    0x50(%esp),%ecx
movzbl 0x30(%esp),%edx
mov    %ecx,0x8(%esp)
movl   $0x4b47,0x4(%esp)
mov    %eax,(%esp)
mov    %bl,0x51(%esp)
mov    %dl,0x50(%esp)
movw   $0x200,0x52(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     8049c98 <__sprintf_chk@plt+0xc98>
cmpl   $0x16,(%esi)
jne    8049ce9 <__sprintf_chk@plt+0xce9>
cmp    $0xf,%edi
jg     8049927 <__sprintf_chk@plt+0x927>
movl   $0x804f240,(%esp)
call   8048d30 <perror@plt>
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fbc8,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    804a001 <__sprintf_chk@plt+0x1001>
cmpl   $0x0,0x805de68
je     8049dbd <__sprintf_chk@plt+0xdbd>
cmp    $0x1,%ebx
movl   $0x5,0x8(%esp)
je     804a685 <__sprintf_chk@plt+0x1685>
movl   $0x804f345,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,%esi
cmpl   $0x1,0x38(%esp)
movl   $0x5,0x8(%esp)
je     804a751 <__sprintf_chk@plt+0x1751>
movl   $0x804f2a2,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,%edi
movl   $0x5,0x8(%esp)
movl   $0x804f2a7,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <__printf_chk@plt>
cmpl   $0x0,0x805de90
jne    804a1ac <__sprintf_chk@plt+0x11ac>
cmpl   $0x0,0x805de60
jne    804a1ac <__sprintf_chk@plt+0x11ac>
cmpl   $0x0,0x805de68
jne    804a565 <__sprintf_chk@plt+0x1565>
call   804aa80 <__sprintf_chk@plt+0x1a80>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048fc0 <close@plt>
movl   $0x0,(%esp)
call   8048de0 <exit@plt>
lea    0x144(%esp),%eax
movl   $0x7,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
movl   $0x79656b62,0x144(%esp)
79
movl   $0x70616d,0x148(%esp)
00
call   8048e50 <write@plt>
add    $0x1,%eax
je     8049e7c <__sprintf_chk@plt+0xe7c>
xor    %ebx,%ebx
lea    0x45(%esp),%esi
jmp    8049e52 <__sprintf_chk@plt+0xe52>
add    $0x1,%ebx
cmp    $0x100,%ebx
je     804a596 <__sprintf_chk@plt+0x1596>
cmpl   $0x0,0x805e120(,%ebx,4)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
setne  0x45(%esp)
call   8048e50 <write@plt>
add    $0x1,%eax
jne    8049e43 <__sprintf_chk@plt+0xe43>
movl   $0x5,0x8(%esp)
movl   $0x804f137,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
call   804aa80 <__sprintf_chk@plt+0x1a80>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
cmp    $0xfe,%esi
mov    %edi,%ebx
jbe    804a54c <__sprintf_chk@plt+0x154c>
mov    %ebx,0x8(%esp)
mov    $0x100,%edi
movl   $0x804f9d4,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
movl   $0x804f9fc,(%esp)
call   8048da0 <puts@plt>
jmp    8049f0a <__sprintf_chk@plt+0xf0a>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    %eax,%edi
je     804a455 <__sprintf_chk@plt+0x1455>
lea    -0x1(%edi),%eax
mov    0x805fb60(,%eax,4),%ebx
test   %ebx,%ebx
je     8049f00 <__sprintf_chk@plt+0xf00>
movl   $0x804f1db,(%esp)
call   8048da0 <puts@plt>
test   %edi,%edi
je     804a461 <__sprintf_chk@plt+0x1461>
xor    %esi,%esi
mov    0x805fb60(,%esi,4),%ebx
test   %ebx,%ebx
je     8049f70 <__sprintf_chk@plt+0xf70>
movl   $0x9,(%esp)
call   8048e90 <putchar@plt>
movzbl (%ebx),%eax
test   %al,%al
je     8049f64 <__sprintf_chk@plt+0xf64>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
movzbl (%ebx),%eax
test   %al,%al
jne    8049f50 <__sprintf_chk@plt+0xf50>
movl   $0x804f1ef,(%esp)
call   8048da0 <puts@plt>
add    $0x1,%esi
cmp    %edi,%esi
jne    8049f2e <__sprintf_chk@plt+0xf2e>
movl   $0x804f1cc,(%esp)
xor    %ebx,%ebx
call   8048da0 <puts@plt>
movl   $0x804fc74,(%esp)
call   8048da0 <puts@plt>
movl   $0x804fce8,(%esp)
call   8048da0 <puts@plt>
jmp    8049fc4 <__sprintf_chk@plt+0xfc4>
nop
sub    $0x805ff60,%eax
mov    %eax,0x8(%esp)
movl   $0x804f1f3,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
add    $0x1,%ebx
cmp    %edi,%ebx
je     804a026 <__sprintf_chk@plt+0x1026>
mov    0x805fb60(,%ebx,4),%eax
test   %eax,%eax
jne    8049fa0 <__sprintf_chk@plt+0xfa0>
movl   $0x804f205,(%esp)
call   8048da0 <puts@plt>
jmp    8049fbd <__sprintf_chk@plt+0xfbd>
movl   $0x5,0x8(%esp)
movl   $0x804f2f0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
cmp    $0xff,%ebx
jbe    804a491 <__sprintf_chk@plt+0x1491>
movl   $0x804f209,(%esp)
call   8048da0 <puts@plt>
cmpl   $0x0,0x805e0e4
je     804a371 <__sprintf_chk@plt+0x1371>
movl   $0x804fad4,(%esp)
call   8048da0 <puts@plt>
cmpl   $0x0,0x805de90
je     804a41b <__sprintf_chk@plt+0x141b>
movl   $0x804f20c,0x4(%esp)
mov    $0x805ea4c,%ebx
xor    %esi,%esi
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
movzbl 0x805ea40,%eax
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
movzbl 0x805ea44,%eax
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
mov    0x805ea48,%eax
movl   $0x804f20f,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    804a0c3 <__sprintf_chk@plt+0x10c3>
add    $0xc,%ebx
add    $0x1,%esi
cmp    0x805de90,%esi
jae    804a40a <__sprintf_chk@plt+0x140a>
movl   $0x804f20c,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
movzbl (%ebx),%eax
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
movzbl 0x4(%ebx),%eax
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
mov    0x8(%ebx),%eax
movl   $0x804f20f,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <__printf_chk@plt>
test   $0x1,%esi
je     804a0c0 <__sprintf_chk@plt+0x10c0>
movl   $0xa,(%esp)
call   8048e90 <putchar@plt>
jmp    804a0c0 <__sprintf_chk@plt+0x10c0>
mov    0x8060f64,%eax
movl   $0x8059128,0x8(%esp)
movl   $0x804f0ad,(%esp)
mov    %eax,0x4(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
test   %eax,%eax
je     804a4df <__sprintf_chk@plt+0x14df>
call   804baf0 <__sprintf_chk@plt+0x2af0>
lea    0x0(%esi,%eiz,1),%esi
jmp    80492f5 <__sprintf_chk@plt+0x2f5>
or     $0xffffffff,%ecx
mov    %esi,%edi
repnz scas %es:(%edi),%al
not    %ecx
add    $0x15,%ecx
mov    %ecx,(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
mov    %esi,0x10(%esp)
movl   $0x804f11f,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   8049000 <__sprintf_chk@plt>
movl   $0x0,0x38(%esp)
jmp    8049451 <__sprintf_chk@plt+0x451>
mov    0x34(%esp),%eax
call   804aac0 <__sprintf_chk@plt+0x1ac0>
cmpl   $0x0,0x805de68
mov    %eax,%ebx
je     8049de4 <__sprintf_chk@plt+0xde4>
cmp    $0x1,%eax
movl   $0x5,0x8(%esp)
je     804a4c4 <__sprintf_chk@plt+0x14c4>
movl   $0x804f2cd,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,%esi
movl   $0x5,0x8(%esp)
movl   $0x804f2d9,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    8049de4 <__sprintf_chk@plt+0xde4>
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f7d0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    804a001 <__sprintf_chk@plt+0x1001>
lea    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x4b44,0x4(%esp)
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
jne    804a308 <__sprintf_chk@plt+0x1308>
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x4b3b,0x4(%esp)
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
jne    804a308 <__sprintf_chk@plt+0x1308>
cmpl   $0x3,0x48(%esp)
je     804a4a2 <__sprintf_chk@plt+0x14a2>
cmpl   $0x0,0x805de6c
je     8049297 <__sprintf_chk@plt+0x297>
cmpl   $0x1,0x4c(%esp)
je     8049297 <__sprintf_chk@plt+0x297>
movl   $0x5,0x8(%esp)
mov    0x805e108,%esi
movl   $0x804f89c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
jmp    8049297 <__sprintf_chk@plt+0x297>
call   804d9d0 <__sprintf_chk@plt+0x49d0>
mov    %eax,0x34(%esp)
jmp    8049281 <__sprintf_chk@plt+0x281>
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f80c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    804a001 <__sprintf_chk@plt+0x1001>
movl   $0x5,0x8(%esp)
movl   $0x804f0de,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de40,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
jmp    80492c9 <__sprintf_chk@plt+0x2c9>
movl   $0x804fb2c,(%esp)
call   8048da0 <puts@plt>
cmpl   $0x0,0x805de90
je     804a41b <__sprintf_chk@plt+0x141b>
mov    $0x805ea40,%ebx
xor    %esi,%esi
jmp    804a3a6 <__sprintf_chk@plt+0x13a6>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    $0xc,%ebx
cmp    0x805de90,%esi
jae    804a40a <__sprintf_chk@plt+0x140a>
movl   $0x804f20c,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
movzbl (%ebx),%eax
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
movzbl 0x4(%ebx),%eax
mov    $0x1,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
movzbl 0x8(%ebx),%eax
xor    %edx,%edx
call   804a860 <__sprintf_chk@plt+0x1860>
movl   $0x804f215,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
test   $0x1,%esi
je     804a398 <__sprintf_chk@plt+0x1398>
movl   $0xa,(%esp)
call   8048e90 <putchar@plt>
jmp    804a398 <__sprintf_chk@plt+0x1398>
and    $0x1,%esi
je     804a41b <__sprintf_chk@plt+0x141b>
movl   $0xa,(%esp)
call   8048e90 <putchar@plt>
movl   $0x804f1cc,(%esp)
call   8048da0 <puts@plt>
mov    0x805de90,%eax
movl   $0x804fb04,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <__printf_chk@plt>
call   804aa80 <__sprintf_chk@plt+0x1a80>
movl   $0x0,(%esp)
call   8048de0 <exit@plt>
movl   $0x804f1db,(%esp)
call   8048da0 <puts@plt>
movl   $0x804f1d8,(%esp)
call   8048da0 <puts@plt>
movl   $0x804f1cc,(%esp)
call   8048da0 <puts@plt>
movl   $0x804fc74,(%esp)
call   8048da0 <puts@plt>
movl   $0x804fce8,(%esp)
call   8048da0 <puts@plt>
movl   $0x804f205,(%esp)
call   8048da0 <puts@plt>
jmp    804a032 <__sprintf_chk@plt+0x1032>
cmpl   $0x0,0x805de80
jne    804a508 <__sprintf_chk@plt+0x1508>
movl   $0x1,0x805e0e4
00
movl   $0x0,0x805de6c
00
jmp    8049297 <__sprintf_chk@plt+0x297>
movl   $0x804f2c2,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,%esi
jmp    804a1eb <__sprintf_chk@plt+0x11eb>
movl   $0x5,0x8(%esp)
movl   $0x804f0ef,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x804f0ad,0xc(%esp)
jmp    804a001 <__sprintf_chk@plt+0x1001>
movl   $0x5,0x8(%esp)
mov    0x805e108,%esi
movl   $0x804f834,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
jmp    804a4b5 <__sprintf_chk@plt+0x14b5>
movl   $0x804f1d8,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    8049ed0 <__sprintf_chk@plt+0xed0>
movl   $0x5,0x8(%esp)
movl   $0x804fc4c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <__printf_chk@plt>
jmp    8049de4 <__sprintf_chk@plt+0xde4>
xor    %bx,%bx
lea    0x46(%esp),%edi
xor    %esi,%esi
cmpl   $0x0,0x805e120(,%ebx,4)
jne    804a5bd <__sprintf_chk@plt+0x15bd>
jmp    804a6a0 <__sprintf_chk@plt+0x16a0>
add    $0x2,%esi
cmp    $0x100,%esi
je     804a6a0 <__sprintf_chk@plt+0x16a0>
mov    0x805e120(,%ebx,4),%eax
movzwl (%eax,%esi,1),%eax
movl   $0x2,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
mov    %ax,0x46(%esp)
call   8048e50 <write@plt>
add    $0x1,%eax
jne    804a5ae <__sprintf_chk@plt+0x15ae>
jmp    8049e7c <__sprintf_chk@plt+0xe7c>
mov    0x2c(%esp),%edx
mov    0x34(%esp),%eax
movl   $0x4b45,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     8049943 <__sprintf_chk@plt+0x943>
movl   $0x804f218,(%esp)
call   8048d30 <perror@plt>
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fbf0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    804a001 <__sprintf_chk@plt+0x1001>
movl   $0x804f240,(%esp)
call   8048d30 <perror@plt>
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fba4,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
jmp    8049232 <__sprintf_chk@plt+0x232>
movl   $0x804f297,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,%esi
jmp    8049d54 <__sprintf_chk@plt+0xd54>
add    $0x1,%ebx
cmp    $0x100,%ebx
jne    804a59d <__sprintf_chk@plt+0x159d>
jmp    804a444 <__sprintf_chk@plt+0x1444>
movl   $0x5,0x8(%esp)
movl   $0x804f904,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
movl   $0x6474733c,0x80611e0
64
mov    0x805de28,%eax
movl   $0x3e6e69,0x80611e4
00
jmp    804a157 <__sprintf_chk@plt+0x1157>
mov    0x34(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x4b45,0x4(%esp)
mov    %eax,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     804982a <__sprintf_chk@plt+0x82a>
movl   $0x804f218,(%esp)
call   8048d30 <perror@plt>
mov    0x805e108,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804fb58,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    804a001 <__sprintf_chk@plt+0x1001>
movl   $0x804f29e,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,%edi
jmp    8049d7d <__sprintf_chk@plt+0xd7d>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804eed0
push   $0x804ee60
push   %ecx
push   %esi
push   $0x8049060
call   8048e40 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x805de07,%eax
sub    $0x805de04,%eax
cmp    $0x6,%eax
ja     804a7b1 <__sprintf_chk@plt+0x17b1>
repz ret
mov    $0x0,%eax
test   %eax,%eax
je     804a7af <__sprintf_chk@plt+0x17af>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805de04,(%esp)
call   *%eax
leave
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805de04,%eax
sub    $0x805de04,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804a7ea <__sprintf_chk@plt+0x17ea>
repz ret
mov    $0x0,%edx
test   %edx,%edx
je     804a7e8 <__sprintf_chk@plt+0x17e8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x805de04,(%esp)
call   *%edx
leave
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x805de48
jne    804a82c <__sprintf_chk@plt+0x182c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a7a0 <__sprintf_chk@plt+0x17a0>
movb   $0x1,0x805de48
leave
repz ret
xchg   %ax,%ax
mov    0x8058f10,%eax
test   %eax,%eax
je     804a857 <__sprintf_chk@plt+0x1857>
mov    $0x0,%eax
test   %eax,%eax
je     804a857 <__sprintf_chk@plt+0x1857>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8058f10,(%esp)
call   *%eax
leave
jmp    804a7d0 <__sprintf_chk@plt+0x17d0>
jmp    804a7d0 <__sprintf_chk@plt+0x17d0>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    %eax,%ebx
movl   $0x27,(%esp)
mov    %esi,0x14(%esp)
mov    %edx,%esi
mov    %edi,0x18(%esp)
movzbl %bl,%edi
call   8048e90 <putchar@plt>
cmp    $0x5c,%ebx
je     804a88c <__sprintf_chk@plt+0x188c>
cmp    $0x27,%ebx
jne    804a8d8 <__sprintf_chk@plt+0x18d8>
mov    $0x804ef0e,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
test   %esi,%esi
mov    $0x804ef16,%edx
mov    $0x804ef12,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   8048ef0 <__printf_chk@plt>
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8048ff0 <__ctype_b_loc@plt>
mov    (%eax),%edx
mov    $0x804ef0f,%eax
cmpw   $0x0,(%edx,%edi,2)
mov    $0x804ef08,%edx
cmovns %edx,%eax
jmp    804a891 <__sprintf_chk@plt+0x1891>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8059148,%edi
movzbl 0x40(%esp),%esi
mov    0x805fb60(,%esi,4),%ebx
test   %ebx,%ebx
je     804a97c <__sprintf_chk@plt+0x197c>
mov    %ebx,(%esp)
call   8048e30 <strlen@plt>
mov    0x8059148,%edi
lea    0x1(%eax),%ecx
lea    (%ebx,%ecx,1),%eax
cmp    %edi,%eax
jae    804a94d <__sprintf_chk@plt+0x194d>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
add    $0x1,%eax
mov    %dl,(%ebx)
mov    0x8059148,%edi
add    $0x1,%ebx
cmp    %eax,%edi
ja     804a938 <__sprintf_chk@plt+0x1938>
neg    %ecx
lea    0x1(%esi),%eax
add    %ecx,%edi
cmp    $0x100,%eax
mov    %edi,0x8059148
je     804a97c <__sprintf_chk@plt+0x197c>
lea    0x805fb60(,%eax,4),%eax
mov    (%eax),%edx
test   %edx,%edx
je     804a972 <__sprintf_chk@plt+0x1972>
add    %ecx,%edx
mov    %edx,(%eax)
add    $0x4,%eax
cmp    $0x805ff60,%eax
jne    804a968 <__sprintf_chk@plt+0x1968>
test   %esi,%esi
mov    $0x805ff60,%ebx
je     804a9a9 <__sprintf_chk@plt+0x19a9>
xor    %edx,%edx
nop
mov    0x805fb60(,%edx,4),%eax
test   %eax,%eax
je     804a9a2 <__sprintf_chk@plt+0x19a2>
mov    %eax,%ebx
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
add    $0x1,%ebx
test   %al,%al
jne    804a998 <__sprintf_chk@plt+0x1998>
add    $0x1,%edx
cmp    %edx,%esi
jne    804a988 <__sprintf_chk@plt+0x1988>
lea    0x41(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
mov    %ebx,0x805fb60(,%esi,4)
call   8048e30 <strlen@plt>
mov    0x1c(%esp),%edx
lea    0x1(%eax),%ebp
lea    (%edi,%ebp,1),%ecx
cmp    $0x8060f60,%ecx
ja     804aa34 <__sprintf_chk@plt+0x1a34>
cmp    %ebx,%edi
mov    %ecx,0x8059148
jbe    804a9ef <__sprintf_chk@plt+0x19ef>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edi
sub    $0x1,%ecx
movzbl (%edi),%eax
cmp    %ebx,%edi
mov    %al,(%ecx)
jne    804a9e0 <__sprintf_chk@plt+0x19e0>
mov    %ebp,0x8(%esp)
add    $0x1,%esi
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
call   8048c70 <memcpy@plt>
cmp    $0x100,%esi
je     804aa2c <__sprintf_chk@plt+0x1a2c>
lea    0x805fb60(,%esi,4),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
test   %edx,%edx
je     804aa22 <__sprintf_chk@plt+0x1a22>
add    %ebp,%edx
mov    %edx,(%eax)
add    $0x4,%eax
cmp    $0x805ff60,%eax
jne    804aa18 <__sprintf_chk@plt+0x1a18>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
mov    0x805e108,%ebx
movl   $0x804f3ac,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
nop
push   %ebx
xor    %ebx,%ebx
sub    $0x18,%esp
xchg   %ax,%ax
mov    0x805f660(,%ebx,4),%eax
mov    %eax,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    0x805e120(,%ebx,4),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
cmp    $0x100,%ebx
jne    804aa88 <__sprintf_chk@plt+0x1a88>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0xf28,%esp
mov    0x805de90,%eax
cmp    $0x100,%eax
ja     804abc4 <__sprintf_chk@plt+0x1bc4>
mov    0x805e0e4,%edx
test   %edx,%edx
je     804ab55 <__sprintf_chk@plt+0x1b55>
test   %eax,%eax
mov    %eax,0x31c(%esp)
je     804ab26 <__sprintf_chk@plt+0x1b26>
imul   $0xc,%eax,%ecx
xor    %edx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805ea40(%edx),%eax
mov    %eax,0x320(%esp,%edx,1)
mov    0x805ea44(%edx),%eax
mov    %eax,0x324(%esp,%edx,1)
mov    0x805ea48(%edx),%eax
mov    %eax,0x328(%esp,%edx,1)
add    $0xc,%edx
cmp    %ecx,%edx
jne    804aaf8 <__sprintf_chk@plt+0x1af8>
lea    0x31c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4bfb,0x4(%esp)
mov    %ebx,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
jne    804ac03 <__sprintf_chk@plt+0x1c03>
mov    0x18(%esp),%eax
add    $0xf28,%esp
pop    %ebx
ret
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804ab90 <__sprintf_chk@plt+0x1b90>
lea    (%eax,%eax,2),%eax
xor    %edx,%edx
lea    0x0(%esi),%esi
mov    0x805ea40(,%edx,4),%ecx
mov    %cl,0x1c(%esp,%edx,1)
mov    0x805ea44(,%edx,4),%ecx
mov    %cl,0x1d(%esp,%edx,1)
mov    0x805ea48(,%edx,4),%ecx
mov    %cl,0x1e(%esp,%edx,1)
add    $0x3,%edx
cmp    %eax,%edx
jne    804ab68 <__sprintf_chk@plt+0x1b68>
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4b4b,0x4(%esp)
mov    %ebx,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
je     804ab49 <__sprintf_chk@plt+0x1b49>
movl   $0x804ef43,(%esp)
call   8048d30 <perror@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ef18,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    $0x100,%eax
jmp    804aad9 <__sprintf_chk@plt+0x1ad9>
movl   $0x804ef36,(%esp)
call   8048d30 <perror@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
movsbl %al,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x14,%esp
movb   $0x0,0x805dea0
jmp    804ac5f <__sprintf_chk@plt+0x1c5f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8050460(,%ebx,4),%eax
movl   $0x3c,0x8(%esp)
movl   $0x805dea0,(%esp)
mov    %eax,0x4(%esp)
call   8048c20 <__strcat_chk@plt>
add    $0x1,%ebx
cmp    $0x8,%ebx
je     804ac90 <__sprintf_chk@plt+0x1c90>
bt     %ebx,%esi
jae    804ac57 <__sprintf_chk@plt+0x1c57>
cmpb   $0x0,0x805dea0
je     804ac38 <__sprintf_chk@plt+0x1c38>
movl   $0x3c,0x8(%esp)
movl   $0x805271b,0x4(%esp)
movl   $0x805dea0,(%esp)
call   8048c20 <__strcat_chk@plt>
jmp    804ac38 <__sprintf_chk@plt+0x1c38>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    $0x805dea0,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
mov    %esi,0x30(%esp)
mov    0x805e0e4,%esi
mov    %ebp,0x38(%esp)
mov    %edx,%ebp
mov    0x805de90,%edx
mov    %ebx,0x2c(%esp)
xor    %ebx,%ebx
mov    %edi,0x34(%esp)
test   %esi,%esi
setne  %bl
cmp    $0x100,%edx
je     804ad31 <__sprintf_chk@plt+0x1d31>
mov    %ebx,0x4(%esp)
lea    (%edx,%edx,2),%edi
add    $0x1,%edx
mov    %eax,(%esp)
shl    $0x2,%edi
mov    %ecx,0x1c(%esp)
mov    %edx,0x805de90
call   804e300 <__sprintf_chk@plt+0x5300>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x805ea40(%edi)
call   804e300 <__sprintf_chk@plt+0x5300>
mov    0x1c(%esp),%ecx
mov    %ebx,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x805ea44(%edi)
call   804e300 <__sprintf_chk@plt+0x5300>
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x38(%esp),%ebp
mov    %eax,0x805ea48(%edi)
mov    0x34(%esp),%edi
add    $0x3c,%esp
ret
movl   $0x5,0x8(%esp)
movl   $0x804ef4e,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xec,%esp
test   %eax,%eax
je     804ada0 <__sprintf_chk@plt+0x1da0>
mov    $0x804ef66,%edi
mov    $0xb,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804ade0 <__sprintf_chk@plt+0x1de0>
lea    0x14(%esp),%ebp
mov    $0x804fd40,%esi
mov    $0x33,%ecx
mov    %ebp,%edi
rep movsl %ds:(%esi),%es:(%edi)
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
lea    (%ebx,%ebx,2),%eax
add    $0x1,%ebx
add    %ebp,%eax
movzbl 0x2(%eax),%ecx
movzbl 0x1(%eax),%edx
movzbl (%eax),%eax
call   804aca0 <__sprintf_chk@plt+0x1ca0>
cmp    $0x44,%ebx
jne    804adb8 <__sprintf_chk@plt+0x1db8>
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x804f3cc,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
movl   $0x804ef71,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x805914c,%eax
mov    %eax,0x10(%esp)
mov    0x805dee0,%eax
mov    %eax,0xc(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
xor    %eax,%eax
addl   $0x1,0x805de8c
add    $0x2c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x805914c,%eax
movl   $0x804ef7c,0x8(%esp)
lea    0x34(%esp),%ebx
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x805dee0,%eax
mov    %eax,0x10(%esp)
mov    0x805e108,%eax
mov    %eax,0xc(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    0x30(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048c50 <__vfprintf_chk@plt>
mov    0x805de20,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <fputc@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
cmp    $0xff,%eax
ja     804af78 <__sprintf_chk@plt+0x1f78>
cmpb   $0x0,0x805e540(%eax)
jne    804af4b <__sprintf_chk@plt+0x1f4b>
cmpb   $0x0,0x805de9c
je     804af33 <__sprintf_chk@plt+0x1f33>
test   %edx,%edx
je     804af50 <__sprintf_chk@plt+0x1f50>
cmp    0x805de98,%ebx
movb   $0x1,0x805e540(%ebx)
jl     804af4b <__sprintf_chk@plt+0x1f4b>
add    $0x1,%ebx
mov    %ebx,0x805de98
add    $0x18,%esp
pop    %ebx
ret
movl   $0x5,0x8(%esp)
movl   $0x804f418,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
movl   $0x5,0x8(%esp)
movl   $0x804f3f8,0x4(%esp)
jmp    804af60 <__sprintf_chk@plt+0x1f60>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
cmp    $0xffffffff,%ecx
je     804b16a <__sprintf_chk@plt+0x216a>
cmp    $0xff,%eax
mov    %eax,%ebp
ja     804b142 <__sprintf_chk@plt+0x2142>
cmp    $0xff,%edx
mov    %edx,%esi
ja     804b118 <__sprintf_chk@plt+0x2118>
cmpb   $0x0,0x805e540(%edx)
lea    (%eax,%eax,1),%ecx
jne    804b04b <__sprintf_chk@plt+0x204b>
xor    %edx,%edx
mov    %esi,%eax
mov    %ecx,0x1c(%esp)
call   804af10 <__sprintf_chk@plt+0x1f10>
mov    0x1c(%esp),%ecx
jmp    804b04b <__sprintf_chk@plt+0x204b>
mov    0x805e120(,%esi,4),%edx
mov    %di,(%edx,%ecx,1)
movb   $0x1,(%eax)
mov    0x805de94,%eax
test   %eax,%eax
je     804b088 <__sprintf_chk@plt+0x2088>
mov    %esi,%ebx
mov    %edi,%eax
or     $0x8,%ebx
and    $0xff,%edi
sar    $0x8,%eax
cmp    %esi,%ebx
je     804b088 <__sprintf_chk@plt+0x2088>
cmpb   $0x0,0x805e540(%ebx)
je     804b088 <__sprintf_chk@plt+0x2088>
mov    0x805f660(,%ebx,4),%edx
test   %edx,%edx
je     804b029 <__sprintf_chk@plt+0x2029>
cmpb   $0x0,(%edx,%ebp,1)
jne    804b088 <__sprintf_chk@plt+0x2088>
cmp    $0xb,%eax
jne    804b10b <__sprintf_chk@plt+0x210b>
cmp    $0x7f,%edi
jg     804b088 <__sprintf_chk@plt+0x2088>
or     $0x800,%edi
cmp    $0xff,%ebx
ja     804b11a <__sprintf_chk@plt+0x211a>
mov    %ebx,%esi
mov    0x805e120(,%esi,4),%ebx
test   %ebx,%ebx
je     804b090 <__sprintf_chk@plt+0x2090>
mov    0x805f660(,%esi,4),%eax
test   %eax,%eax
je     804b0d0 <__sprintf_chk@plt+0x20d0>
mov    0x805de94,%edx
add    %ebp,%eax
test   %edx,%edx
je     804afe0 <__sprintf_chk@plt+0x1fe0>
cmp    $0x200,%edi
jne    804afe0 <__sprintf_chk@plt+0x1fe0>
cmpb   $0x0,(%eax)
je     804afe0 <__sprintf_chk@plt+0x1fe0>
xchg   %ax,%ax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x200,(%esp)
mov    %ecx,0x1c(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
mov    0x1c(%esp),%ecx
xor    %edx,%edx
mov    %eax,0x805e120(,%esi,4)
lea    0x0(%esi),%esi
movw   $0x200,(%eax,%edx,2)
add    $0x1,%edx
cmp    $0x100,%edx
jne    804b0b0 <__sprintf_chk@plt+0x20b0>
mov    0x805f660(,%esi,4),%eax
test   %eax,%eax
jne    804b061 <__sprintf_chk@plt+0x2061>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x100,(%esp)
xor    %ebx,%ebx
mov    %ecx,0x1c(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
mov    0x1c(%esp),%ecx
mov    %eax,0x805f660(,%esi,4)
lea    0x0(%esi),%esi
movb   $0x0,(%eax,%ebx,1)
add    $0x1,%ebx
mov    0x805f660(,%esi,4),%eax
cmp    $0x100,%ebx
jne    804b0f0 <__sprintf_chk@plt+0x20f0>
jmp    804b061 <__sprintf_chk@plt+0x2061>
test   %eax,%eax
je     804b032 <__sprintf_chk@plt+0x2032>
jmp    804b088 <__sprintf_chk@plt+0x2088>
mov    %edx,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f48c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
movl   $0x5,0x8(%esp)
movl   $0x804f46c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
movl   $0x5,0x8(%esp)
movl   $0x804f448,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x98c,%esp
lea    0x2c8(%esp),%edx
mov    %gs:0x14,%eax
mov    %eax,0x97c(%esp)
xor    %eax,%eax
lea    0x458(%esp),%ebp
mov    %edx,%ebx
mov    %edx,0x228(%esp)
lea    0x250(%esp),%eax
mov    %edx,0x230(%esp)
lea    0x77b(%esp),%edx
movl   $0x0,0x805e100
00
movl   $0xfffffffe,0x805f640
ff
movl   $0xc8,0x22c(%esp)
00
mov    %ebp,0x240(%esp)
movl   $0x0,0x23c(%esp)
00
movl   $0xc7,0x238(%esp)
00
mov    %eax,0x224(%esp)
mov    %edx,0x220(%esp)
mov    0x238(%esp),%ecx
mov    0x230(%esp),%edx
mov    %di,(%ebx)
lea    (%edx,%ecx,2),%eax
cmp    %eax,%ebx
jb     804b357 <__sprintf_chk@plt+0x2357>
sub    %edx,%ebx
sar    %ebx
add    $0x1,%ebx
cmpl   $0x270f,0x22c(%esp)
00
ja     804b8d4 <__sprintf_chk@plt+0x28d4>
mov    0x22c(%esp),%eax
movl   $0x2710,0x22c(%esp)
00
add    %eax,%eax
cmp    $0x2710,%eax
cmova  0x22c(%esp),%eax
mov    %eax,%esi
add    %esi,%esi
mov    %eax,0x22c(%esp)
add    %esi,%eax
lea    0x3(%eax,%eax,1),%eax
mov    %eax,(%esp)
call   8048d90 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
je     804b8d4 <__sprintf_chk@plt+0x28d4>
mov    0x230(%esp),%ecx
lea    (%ebx,%ebx,1),%eax
add    $0x3,%esi
mov    %edx,(%esp)
and    $0xfffffffc,%esi
mov    %eax,0x8(%esp)
mov    %edx,0x21c(%esp)
mov    %ecx,0x4(%esp)
call   8048c70 <memcpy@plt>
mov    0x21c(%esp),%edx
lea    0x0(,%ebx,4),%eax
mov    %eax,0x8(%esp)
mov    0x240(%esp),%eax
add    %edx,%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8048c70 <memcpy@plt>
mov    0x228(%esp),%ecx
cmp    %ecx,0x230(%esp)
mov    0x21c(%esp),%edx
je     804b324 <__sprintf_chk@plt+0x2324>
mov    0x230(%esp),%eax
mov    %eax,(%esp)
call   8048c60 <free@plt>
mov    0x21c(%esp),%edx
mov    0x22c(%esp),%ecx
lea    -0x1(%ebx),%eax
lea    (%edx,%eax,2),%ebx
lea    (%esi,%eax,4),%ebp
sub    $0x1,%ecx
lea    (%edx,%ecx,2),%eax
cmp    %eax,%ebx
mov    %ecx,0x238(%esp)
jae    804b8ff <__sprintf_chk@plt+0x28ff>
mov    %esi,0x240(%esp)
mov    %edx,0x230(%esp)
cmp    $0x2,%edi
je     804b8f1 <__sprintf_chk@plt+0x28f1>
movsbl 0x8050100(%edi),%esi
cmp    $0xffffffcf,%esi
je     804b3ac <__sprintf_chk@plt+0x23ac>
mov    0x805f640,%eax
cmp    $0xfffffffe,%eax
je     804b5b0 <__sprintf_chk@plt+0x25b0>
test   %eax,%eax
jle    804b540 <__sprintf_chk@plt+0x2540>
cmp    $0x122,%eax
mov    $0x2,%edx
ja     804b395 <__sprintf_chk@plt+0x2395>
movzbl 0x8050160(%eax),%edx
lea    (%esi,%edx,1),%eax
cmp    $0x56,%eax
ja     804b3ac <__sprintf_chk@plt+0x23ac>
movzbl 0x80502a0(%eax),%ecx
cmp    %edx,%ecx
je     804b578 <__sprintf_chk@plt+0x2578>
movzbl 0x8050360(%edi),%eax
movzbl %al,%edx
test   %edx,%edx
mov    %edx,0x234(%esp)
je     804b458 <__sprintf_chk@plt+0x2458>
movzbl 0x80503c0(%edx),%ecx
mov    $0x1,%edx
sub    $0xe,%eax
sub    %ecx,%edx
cmp    $0x26,%al
mov    0x0(%ebp,%edx,4),%edx
mov    %cl,0x247(%esp)
mov    %edx,0x248(%esp)
jbe    804b4d8 <__sprintf_chk@plt+0x24d8>
movzbl 0x247(%esp),%edx
lea    0x0(,%edx,4),%eax
add    %edx,%edx
neg    %eax
neg    %edx
add    %edx,%ebx
mov    0x234(%esp),%ecx
add    %ebp,%eax
mov    0x248(%esp),%edx
lea    0x4(%eax),%ebp
mov    %edx,0x4(%eax)
movzbl 0x8050400(%ecx),%eax
movswl (%ebx),%ecx
sub    $0x24,%eax
movsbl 0x8050435(%eax),%edx
add    %ecx,%edx
cmp    $0x56,%edx
ja     804b447 <__sprintf_chk@plt+0x2447>
movzbl 0x80502a0(%edx),%esi
cmp    %esi,%ecx
je     804b5bf <__sprintf_chk@plt+0x25bf>
movsbl 0x805044a(%eax),%edi
add    $0x2,%ebx
jmp    804b231 <__sprintf_chk@plt+0x2231>
xchg   %ax,%ax
mov    0x23c(%esp),%edi
test   %edi,%edi
je     804b558 <__sprintf_chk@plt+0x2558>
cmpl   $0x3,0x23c(%esp)
je     804b4e8 <__sprintf_chk@plt+0x24e8>
mov    0x230(%esp),%edx
jmp    804b498 <__sprintf_chk@plt+0x2498>
lea    0x0(%esi),%esi
cmp    %edx,%ebx
je     804b508 <__sprintf_chk@plt+0x2508>
sub    $0x2,%ebx
sub    $0x4,%ebp
movswl (%ebx),%eax
movsbl 0x8050100(%eax),%esi
cmp    $0xffffffcf,%esi
je     804b480 <__sprintf_chk@plt+0x2480>
add    $0x1,%esi
cmp    $0x56,%esi
ja     804b480 <__sprintf_chk@plt+0x2480>
cmpb   $0x1,0x80502a0(%esi)
jne    804b480 <__sprintf_chk@plt+0x2480>
movzbl 0x8050300(%esi),%edi
test   %edi,%edi
je     804b480 <__sprintf_chk@plt+0x2480>
mov    0x8060f60,%edx
mov    %ebp,%eax
add    $0x4,%ebp
movl   $0x3,0x23c(%esp)
00
mov    %edx,0x4(%eax)
jmp    804b44e <__sprintf_chk@plt+0x244e>
nop
movzbl %al,%eax
jmp    *0x804fe98(,%eax,4)
lea    0x0(%esi),%esi
cmpl   $0x0,0x805f640
jle    804b618 <__sprintf_chk@plt+0x2618>
movl   $0xfffffffe,0x805f640
ff
mov    0x230(%esp),%edx
jmp    804b498 <__sprintf_chk@plt+0x2498>
mov    $0x1,%esi
cmp    0x228(%esp),%ebx
je     804b51e <__sprintf_chk@plt+0x251e>
mov    %ebx,(%esp)
call   8048c60 <free@plt>
mov    0x97c(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    804ba31 <__sprintf_chk@plt+0x2a31>
add    $0x98c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x0,0x805f640
00
xor    %edx,%edx
jmp    804b395 <__sprintf_chk@plt+0x2395>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x804ef88,(%esp)
addl   $0x1,0x805e100
call   804ae30 <__sprintf_chk@plt+0x1e30>
mov    0x230(%esp),%edx
jmp    804b498 <__sprintf_chk@plt+0x2498>
nop
movzbl 0x8050300(%eax),%edi
test   %edi,%edi
je     804b5cb <__sprintf_chk@plt+0x25cb>
mov    0x8060f60,%eax
cmpl   $0x1,0x23c(%esp)
movl   $0xfffffffe,0x805f640
ff
adcl   $0xffffffff,0x23c(%esp)
mov    %eax,0x4(%ebp)
add    $0x4,%ebp
jmp    804b44e <__sprintf_chk@plt+0x244e>
lea    0x0(%esi),%esi
call   804c4e0 <__sprintf_chk@plt+0x34e0>
mov    %eax,0x805f640
jmp    804b37a <__sprintf_chk@plt+0x237a>
movzbl 0x8050300(%edx),%edi
jmp    804b44e <__sprintf_chk@plt+0x244e>
mov    0x4(%ebp),%eax
xor    %edx,%edx
movl   $0x0,0x234(%esp)
00
mov    %eax,0x248(%esp)
xor    %eax,%eax
jmp    804b405 <__sprintf_chk@plt+0x2405>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804e3d0 <__sprintf_chk@plt+0x53d0>
mov    %eax,0x248(%esp)
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    -0x4(%ebp),%ecx
mov    -0xc(%ebp),%edx
mov    -0x10(%ebp),%eax
call   804aca0 <__sprintf_chk@plt+0x1ca0>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    0x0(%ebp),%eax
jmp    804b5f4 <__sprintf_chk@plt+0x25f4>
nop
lea    0x0(%esi,%eiz,1),%esi
jne    804b471 <__sprintf_chk@plt+0x2471>
mov    0x230(%esp),%ebx
mov    $0x1,%esi
jmp    804b50d <__sprintf_chk@plt+0x250d>
nop
movl   $0xffffffff,0x4(%esp)
mov    0x0(%ebp),%eax
xor    $0xf0,%ah
mov    %eax,(%esp)
call   804e300 <__sprintf_chk@plt+0x5300>
jmp    804b5f4 <__sprintf_chk@plt+0x25f4>
movl   $0x0,0x805e104
00
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    -0x4(%ebp),%ecx
mov    -0xc(%ebp),%eax
mov    0x805e104,%edx
call   804af90 <__sprintf_chk@plt+0x1f90>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    -0x4(%ebp),%ecx
xor    %edx,%edx
mov    -0xc(%ebp),%eax
call   804af90 <__sprintf_chk@plt+0x1f90>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x1,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x4,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x8,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x2,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x10,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x20,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x40,0x805e104
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x80,0x805e104
00
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
orl    $0x100,0x805e104
00
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    0x8060f80,%edx
cmp    $0x1,%edx
je     804b9c0 <__sprintf_chk@plt+0x29c0>
cmpb   $0x0,0x805de9c
jne    804b90b <__sprintf_chk@plt+0x290b>
test   %edx,%edx
jle    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    -0xc(%ebp),%edi
xor    %esi,%esi
lea    0x0(%esi),%esi
mov    0x805e640(,%esi,4),%ecx
mov    %esi,%edx
mov    %edi,%eax
add    $0x1,%esi
call   804af90 <__sprintf_chk@plt+0x1f90>
cmp    %esi,0x8060f80
jg     804b728 <__sprintf_chk@plt+0x2728>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    0x8060f80,%eax
cmp    $0xff,%eax
jg     804babd <__sprintf_chk@plt+0x2abd>
mov    0x0(%ebp),%edx
mov    %edx,0x805e640(,%eax,4)
add    $0x1,%eax
mov    %eax,0x8060f80
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
movl   $0xffffffff,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804e300 <__sprintf_chk@plt+0x5300>
jmp    804b5f4 <__sprintf_chk@plt+0x25f4>
mov    $0x8060fa1,%eax
call   804ad80 <__sprintf_chk@plt+0x1d80>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
xor    %eax,%eax
call   804ad80 <__sprintf_chk@plt+0x1d80>
lea    0x0(%esi),%esi
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
movb   $0x1,0x805de9c
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    -0x8(%ebp),%esi
mov    0x0(%ebp),%edi
cmp    %edi,%esi
jg     804b3f0 <__sprintf_chk@plt+0x23f0>
nop
mov    %esi,%eax
mov    $0x1,%edx
add    $0x1,%esi
call   804af10 <__sprintf_chk@plt+0x1f10>
cmp    %edi,%esi
jle    804b7c0 <__sprintf_chk@plt+0x27c0>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    0x0(%ebp),%eax
mov    $0x1,%edx
call   804af10 <__sprintf_chk@plt+0x1f10>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    -0xc(%ebp),%eax
mov    %eax,%edx
sar    $0x8,%edx
cmp    $0x1,%edx
jne    804ba86 <__sprintf_chk@plt+0x2a86>
mov    %al,0x8060fa0
mov    %esp,%edi
mov    $0x8060fa0,%esi
mov    $0x80,%ecx
rep movsl %ds:(%esi),%es:(%edi)
movzbl (%esi),%eax
mov    %al,(%edi)
call   804a900 <__sprintf_chk@plt+0x1900>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    0x0(%ebp),%eax
xor    $0xf0,%ah
jmp    804b5ec <__sprintf_chk@plt+0x25ec>
mov    0x0(%ebp),%eax
xor    $0xf0,%ah
jmp    804b5f4 <__sprintf_chk@plt+0x25f4>
movl   $0x1,0x805de94
00
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
mov    0x224(%esp),%edi
mov    $0x804fe20,%esi
mov    $0x1e,%ecx
rep movsl %ds:(%esi),%es:(%edi)
xor    %edx,%edx
mov    %ebx,0x24c(%esp)
mov    %edx,%ebx
mov    0x250(%esp,%ebx,4),%eax
test   %eax,%eax
je     804b8af <__sprintf_chk@plt+0x28af>
mov    %eax,0x4(%esp)
lea    0x77c(%esp),%eax
mov    %esp,%edi
movl   $0x200,0x8(%esp)
mov    %eax,(%esp)
mov    %bl,0x77b(%esp)
call   8048eb0 <strncpy@plt>
mov    0x220(%esp),%esi
mov    $0x80,%ecx
movb   $0x0,0x97b(%esp)
rep movsl %ds:(%esi),%es:(%edi)
movzbl (%esi),%eax
mov    %al,(%edi)
call   804a900 <__sprintf_chk@plt+0x1900>
add    $0x1,%ebx
cmp    $0x1e,%ebx
jne    804b860 <__sprintf_chk@plt+0x2860>
mov    0x24c(%esp),%ebx
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
movl   $0x8060fa1,(%esp)
call   804dd50 <__sprintf_chk@plt+0x4d50>
jmp    804b3f0 <__sprintf_chk@plt+0x23f0>
movl   $0x804ef95,(%esp)
mov    $0x2,%esi
call   804ae30 <__sprintf_chk@plt+0x1e30>
mov    0x230(%esp),%ebx
jmp    804b50d <__sprintf_chk@plt+0x250d>
mov    0x230(%esp),%ebx
xor    %esi,%esi
jmp    804b50d <__sprintf_chk@plt+0x250d>
mov    %edx,%ebx
mov    $0x1,%esi
jmp    804b50d <__sprintf_chk@plt+0x250d>
mov    0x805de98,%eax
test   %eax,%eax
jle    804b97a <__sprintf_chk@plt+0x297a>
xor    %esi,%esi
xor    %edi,%edi
jmp    804b93e <__sprintf_chk@plt+0x293e>
lea    0x0(%esi),%esi
mov    -0xc(%ebp),%eax
mov    %esi,%edx
call   804af90 <__sprintf_chk@plt+0x1f90>
mov    0x8060f80,%edx
add    $0x1,%edi
add    $0x1,%esi
cmp    %esi,0x805de98
jle    804b97c <__sprintf_chk@plt+0x297c>
cmpb   $0x0,0x805e540(%esi)
je     804b933 <__sprintf_chk@plt+0x2933>
cmp    $0x1,%edx
je     804b960 <__sprintf_chk@plt+0x2960>
cmp    %edx,%edi
mov    $0x200,%ecx
jge    804b920 <__sprintf_chk@plt+0x2920>
mov    0x805e640(,%edi,4),%ecx
jmp    804b920 <__sprintf_chk@plt+0x2920>
xchg   %ax,%ax
test   %edi,%edi
jne    804b930 <__sprintf_chk@plt+0x2930>
mov    0x805e640(,%edi,4),%ecx
jmp    804b920 <__sprintf_chk@plt+0x2920>
cmpb   $0x0,0x805de9c
je     804b720 <__sprintf_chk@plt+0x2720>
xor    %edi,%edi
cmp    %edx,%edi
jge    804b3f0 <__sprintf_chk@plt+0x23f0>
movl   $0x5,0x8(%esp)
movl   $0x804f518,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x21c(%esp)
call   8048ca0 <dcgettext@plt>
mov    0x21c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
lea    0x0(%esi),%esi
mov    0x805de98,%eax
mov    -0xc(%ebp),%edi
test   %eax,%eax
movb   $0x1,0x805fa60(%edi)
jle    804b96d <__sprintf_chk@plt+0x296d>
lea    (%edi,%edi,1),%edx
xor    %esi,%esi
jmp    804b9eb <__sprintf_chk@plt+0x29eb>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %esi,0x805de98
jle    804ba26 <__sprintf_chk@plt+0x2a26>
cmpb   $0x0,0x805e540(%esi)
je     804b9e0 <__sprintf_chk@plt+0x29e0>
cmp    $0xff,%edi
ja     804ba5e <__sprintf_chk@plt+0x2a5e>
cmp    $0xff,%esi
ja     804ba36 <__sprintf_chk@plt+0x2a36>
mov    0x805e120(,%esi,4),%eax
test   %eax,%eax
je     804ba15 <__sprintf_chk@plt+0x2a15>
movw   $0x200,(%eax,%edx,1)
mov    0x805f660(,%esi,4),%eax
test   %eax,%eax
je     804b9e0 <__sprintf_chk@plt+0x29e0>
movb   $0x0,(%eax,%edi,1)
jmp    804b9e0 <__sprintf_chk@plt+0x29e0>
mov    0x8060f80,%edx
jmp    804b708 <__sprintf_chk@plt+0x2708>
call   8048cd0 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x804f4f4,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
movl   $0x5,0x8(%esp)
movl   $0x804f4d0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x80594a0(,%edx,8),%edx
and    $0xff,%eax
mov    (%edx,%eax,4),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f4ac,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
movl   $0x5,0x8(%esp)
movl   $0x804f53c,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
jmp    804baf0 <__sprintf_chk@plt+0x2af0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x805de64,%eax
test   %eax,%eax
jne    804bb08 <__sprintf_chk@plt+0x2b08>
mov    0x805de74,%eax
test   %eax,%eax
je     804bb30 <__sprintf_chk@plt+0x2b30>
movl   $0x80611e0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804c390 <__sprintf_chk@plt+0x3390>
call   804b1a0 <__sprintf_chk@plt+0x21a0>
test   %eax,%eax
jne    804bb6f <__sprintf_chk@plt+0x2b6f>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x804f037,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x80611e0,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de40,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
jmp    804bb08 <__sprintf_chk@plt+0x2b08>
movl   $0x5,0x8(%esp)
movl   $0x804f043,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
cmpl   $0x0,0x805de74
je     804bbb9 <__sprintf_chk@plt+0x2bb9>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x804f05d,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
jmp    804bbad <__sprintf_chk@plt+0x2bad>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8,%esp
mov    0x805e0a0,%edx
mov    0x80611a4,%edi
mov    0x805e094,%eax
mov    %edx,0x4(%esp)
cmp    %edx,%edi
jae    804bcb0 <__sprintf_chk@plt+0x2cb0>
mov    0x805e0ac,%ebx
mov    0x805e0a8,%ebp
mov    %ebx,(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi),%edx
mov    $0x1,%esi
test   %dl,%dl
je     804bc3c <__sprintf_chk@plt+0x2c3c>
movzbl 0x80508a0(,%edx,4),%esi
mov    (%esp),%edx
cmpw   $0x0,0x8050ca0(%eax,%eax,1)
00
cmovne %edi,%edx
cmovne %eax,%ebp
mov    %edx,(%esp)
lea    0x0(%esi,%eiz,1),%esi
movswl 0x80515c0(%eax,%eax,1),%ecx
mov    %esi,%ebx
movzbl %bl,%edx
add    %edx,%ecx
movswl 0x80519e0(%ecx,%ecx,1),%ebx
cmp    %eax,%ebx
je     804bc90 <__sprintf_chk@plt+0x2c90>
movswl 0x80510a0(%eax,%eax,1),%eax
cmp    $0x1f7,%eax
jle    804bc58 <__sprintf_chk@plt+0x2c58>
movzbl 0x80514c0(,%edx,4),%esi
jmp    804bc58 <__sprintf_chk@plt+0x2c58>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movswl 0x8052020(%ecx,%ecx,1),%eax
cmp    0x4(%esp),%edi
jne    804bc28 <__sprintf_chk@plt+0x2c28>
mov    (%esp),%edx
mov    %ebp,0x805e0a8
mov    %edx,0x805e0ac
add    $0x8,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e098,%eax
mov    0x805e09c,%edx
lea    (%eax,%edx,4),%edx
mov    (%edx),%eax
mov    0x10(%eax),%ecx
mov    0x8(%eax),%eax
mov    %ecx,0x805e0bc
mov    %eax,0x80611a4
mov    (%edx),%edx
mov    %eax,0x805e0a0
mov    (%edx),%edx
mov    %edx,0x805deec
movzbl (%eax),%eax
mov    %al,0x805e0a4
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    %eax,0xc(%esp)
mov    0x805de20,%eax
movl   $0x805702c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x2,(%esp)
call   8048de0 <exit@plt>
mov    0x805e0d8,%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x805e0d8
js     804bd54 <__sprintf_chk@plt+0x2d54>
mov    0x805e0e0,%edx
mov    (%edx,%eax,4),%eax
lea    0x1(%eax,%eax,1),%eax
mov    %eax,0x805e094
ret
sub    $0xc,%esp
mov    $0x8050540,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
jmp    804bd70 <__sprintf_chk@plt+0x2d70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x805e0d8,%edx
mov    0x805e0dc,%ecx
cmp    %ecx,%edx
jl     804bde8 <__sprintf_chk@plt+0x2de8>
mov    0x805e0e0,%eax
add    $0x19,%ecx
mov    %ecx,0x805e0dc
shl    $0x2,%ecx
test   %eax,%eax
je     804bdf0 <__sprintf_chk@plt+0x2df0>
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8048d80 <realloc@plt>
mov    %eax,%ebx
mov    %eax,0x805e0e0
test   %ebx,%ebx
je     804be01 <__sprintf_chk@plt+0x2e01>
mov    0x805e0d8,%edx
mov    0x805e094,%ecx
sub    $0x1,%ecx
mov    %ecx,%eax
shr    $0x1f,%eax
add    %eax,%ecx
sar    %ecx
mov    %ecx,(%ebx,%edx,4)
lea    0x1(%esi,%esi,1),%eax
add    $0x1,%edx
mov    %edx,0x805e0d8
mov    %eax,0x805e094
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x805e0e0,%ebx
jmp    804bdb9 <__sprintf_chk@plt+0x2db9>
mov    %ecx,(%esp)
call   8048d90 <malloc@plt>
mov    %eax,%ebx
mov    %eax,0x805e0e0
jmp    804bdaf <__sprintf_chk@plt+0x2daf>
mov    $0x8050560,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x3c,%esp
test   %edx,%edx
mov    %ebx,0x2c(%esp)
mov    %esi,0x30(%esp)
mov    %edi,0x34(%esp)
mov    %ebp,0x38(%esp)
mov    %eax,0x1c(%esp)
je     804bf28 <__sprintf_chk@plt+0x2f28>
mov    %edx,(%esp)
xor    %edi,%edi
call   804e480 <__sprintf_chk@plt+0x5480>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   8048f30 <strrchr@plt>
test   %eax,%eax
je     804bf03 <__sprintf_chk@plt+0x2f03>
movb   $0x0,0x1(%eax)
mov    %ebx,(%esp)
call   8048e30 <strlen@plt>
mov    %ebx,0x805e0c8
mov    %eax,%edi
lea    0xc(%eax),%eax
add    $0xf,%edi
mov    %eax,(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
mov    %edi,(%esp)
mov    %eax,%esi
mov    %eax,0x805e0cc
call   804e430 <__sprintf_chk@plt+0x5430>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%ebp
mov    %eax,0x805e0d0
call   8048cb0 <stpcpy@plt>
movl   $0x692f2e2e,(%eax)
movl   $0x756c636e,0x4(%eax)
movl   $0x2f6564,0x8(%eax)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8048cb0 <stpcpy@plt>
movl   $0x2e2f2e2e,(%eax)
movl   $0x6e692f2e,0x4(%eax)
movl   $0x64756c63,0x8(%eax)
movw   $0x2f65,0xc(%eax)
movb   $0x0,0xe(%eax)
mov    0x1c(%esp),%eax
movl   $0x8059160,0x8(%esp)
movl   $0x805e0c8,0x4(%esp)
mov    %eax,(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
mov    %esi,(%esp)
mov    %eax,%edi
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    %ebp,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    %ebx,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    %edi,%eax
mov    0x2c(%esp),%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
add    $0x3c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    804bf0b <__sprintf_chk@plt+0x2f0b>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x203c,%esp
mov    %ebx,0x202c(%esp)
mov    %eax,%ebx
movl   $0x8059160,0x8(%esp)
movl   $0x805916c,0x4(%esp)
mov    %ebx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x201c(%esp)
xor    %eax,%eax
mov    %esi,0x2030(%esp)
mov    %edi,0x2034(%esp)
mov    %ebp,0x2038(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
test   %eax,%eax
je     804bfb8 <__sprintf_chk@plt+0x2fb8>
mov    0x201c(%esp),%edx
xor    %gs:0x14,%edx
jne    804c0b2 <__sprintf_chk@plt+0x30b2>
mov    0x202c(%esp),%ebx
mov    0x2030(%esp),%esi
mov    0x2034(%esp),%edi
mov    0x2038(%esp),%ebp
add    $0x203c,%esp
ret
xchg   %ax,%ax
mov    0x805dee0,%edx
mov    %ebx,%eax
call   804be10 <__sprintf_chk@plt+0x2e10>
test   %eax,%eax
jne    804bf7f <__sprintf_chk@plt+0x2f7f>
mov    0x805dee0,%eax
lea    0x1c(%esp),%edi
movl   $0x1000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048d00 <readlink@plt>
mov    %eax,%esi
lea    -0x1(%eax),%eax
cmp    $0xffe,%eax
ja     804c088 <__sprintf_chk@plt+0x3088>
movb   $0x0,0x1c(%esp,%esi,1)
cmpb   $0x2f,0x1c(%esp)
je     804c0a5 <__sprintf_chk@plt+0x30a5>
mov    0x805dee0,%ebp
mov    %ebp,(%esp)
call   8048e30 <strlen@plt>
add    %eax,%esi
cmp    $0xfff,%esi
ja     804c088 <__sprintf_chk@plt+0x3088>
add    $0x1,%eax
lea    0x101c(%esp),%esi
movl   $0x1000,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8048dc0 <__memcpy_chk@plt>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
movb   $0x0,0x201b(%esp)
call   8048f30 <strrchr@plt>
test   %eax,%eax
je     804c060 <__sprintf_chk@plt+0x3060>
movb   $0x0,0x1(%eax)
movl   $0x1000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8048c20 <__strcat_chk@plt>
mov    %esi,%edx
mov    %ebx,%eax
call   804be10 <__sprintf_chk@plt+0x2e10>
test   %eax,%eax
jne    804bf7f <__sprintf_chk@plt+0x2f7f>
lea    0x0(%esi),%esi
movl   $0x8059160,0x8(%esp)
movl   $0x805917c,0x4(%esp)
mov    %ebx,(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
jmp    804bf7f <__sprintf_chk@plt+0x2f7f>
mov    %edi,%edx
mov    %ebx,%eax
call   804be10 <__sprintf_chk@plt+0x2e10>
xchg   %ax,%ax
jmp    804c07d <__sprintf_chk@plt+0x307d>
call   8048cd0 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805e098,%eax
mov    %ebx,0x14(%esp)
mov    %esi,0x18(%esp)
test   %eax,%eax
je     804c138 <__sprintf_chk@plt+0x3138>
mov    0x805e0c4,%ebx
lea    -0x1(%ebx),%edx
cmp    0x805e09c,%edx
jbe    804c0f8 <__sprintf_chk@plt+0x30f8>
mov    0x14(%esp),%ebx
mov    0x18(%esp),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x8(%ebx),%esi
lea    0x0(,%esi,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048d80 <realloc@plt>
test   %eax,%eax
mov    %eax,0x805e098
je     804c16c <__sprintf_chk@plt+0x316c>
lea    (%eax,%ebx,4),%edx
xor    %eax,%eax
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     804c11c <__sprintf_chk@plt+0x311c>
mov    %esi,0x805e0c4
jmp    804c0e5 <__sprintf_chk@plt+0x30e5>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
call   8048d90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x805e098
je     804c16c <__sprintf_chk@plt+0x316c>
movl   $0x0,(%eax)
movl   $0x1,0x805e0c4
00
movl   $0x0,0x805e09c
00
jmp    804c0e5 <__sprintf_chk@plt+0x30e5>
mov    $0x8050590,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ebx
call   804c0c0 <__sprintf_chk@plt+0x30c0>
mov    0x805e098,%eax
test   %eax,%eax
je     804c1de <__sprintf_chk@plt+0x31de>
mov    0x805e09c,%edx
lea    (%eax,%edx,4),%eax
mov    (%eax),%edx
cmp    %ebx,%edx
je     804c1d9 <__sprintf_chk@plt+0x31d9>
test   %edx,%edx
je     804c1c8 <__sprintf_chk@plt+0x31c8>
mov    0x805e0a0,%edx
movzbl 0x805e0a4,%ecx
mov    %cl,(%edx)
mov    (%eax),%ecx
mov    %edx,0x8(%ecx)
mov    0x805e0bc,%ecx
mov    (%eax),%edx
mov    %ecx,0x10(%edx)
mov    %ebx,(%eax)
call   804bcc0 <__sprintf_chk@plt+0x2cc0>
movl   $0x1,0x805e0c0
00
add    $0x8,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804c1d9 <__sprintf_chk@plt+0x31d9>
mov    0x805e09c,%eax
shl    $0x2,%eax
jmp    804c1c8 <__sprintf_chk@plt+0x31c8>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804c248 <__sprintf_chk@plt+0x3248>
mov    0x805e098,%eax
test   %eax,%eax
je     804c212 <__sprintf_chk@plt+0x3212>
mov    0x805e09c,%edx
lea    (%eax,%edx,4),%eax
cmp    (%eax),%ebx
je     804c240 <__sprintf_chk@plt+0x3240>
mov    0x14(%ebx),%eax
test   %eax,%eax
jne    804c228 <__sprintf_chk@plt+0x3228>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c60 <free@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8048c60 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c60 <free@plt>
movl   $0x0,(%eax)
jmp    804c212 <__sprintf_chk@plt+0x3212>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
test   %eax,%eax
je     804c295 <__sprintf_chk@plt+0x3295>
mov    0x4(%eax),%edx
movl   $0x0,0x10(%eax)
movb   $0x0,(%edx)
mov    0x4(%eax),%edx
movb   $0x0,0x1(%edx)
mov    0x4(%eax),%edx
movl   $0x1,0x1c(%eax)
movl   $0x0,0x2c(%eax)
mov    %edx,0x8(%eax)
mov    0x805e098,%edx
test   %edx,%edx
je     804c295 <__sprintf_chk@plt+0x3295>
mov    0x805e09c,%ecx
cmp    (%edx,%ecx,4),%eax
je     804c298 <__sprintf_chk@plt+0x3298>
repz ret
nop
jmp    804bcc0 <__sprintf_chk@plt+0x2cc0>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    %ebx,0x1c(%esp)
mov    %eax,%ebx
mov    %esi,0x20(%esp)
mov    %edx,%esi
mov    %edi,0x24(%esp)
mov    %ebp,0x28(%esp)
call   8048ea0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%edi
mov    %ebx,(%esp)
call   804c250 <__sprintf_chk@plt+0x3250>
mov    0x805e098,%eax
mov    %esi,(%ebx)
movl   $0x1,0x28(%ebx)
test   %eax,%eax
je     804c2e5 <__sprintf_chk@plt+0x32e5>
mov    0x805e09c,%edx
cmp    (%eax,%edx,4),%ebx
je     804c2f3 <__sprintf_chk@plt+0x32f3>
movl   $0x1,0x20(%ebx)
movl   $0x0,0x24(%ebx)
xor    %eax,%eax
test   %esi,%esi
je     804c311 <__sprintf_chk@plt+0x3311>
mov    %esi,(%esp)
call   8048ec0 <fileno@plt>
mov    %eax,(%esp)
call   8048f90 <isatty@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
mov    %eax,0x18(%ebx)
mov    0x20(%esp),%esi
mov    %ebp,(%edi)
mov    0x1c(%esp),%ebx
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebp
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x30,(%esp)
mov    %ebx,0x14(%esp)
mov    %esi,0x18(%esp)
mov    0x24(%esp),%esi
call   8048d90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804c386 <__sprintf_chk@plt+0x3386>
mov    %esi,0xc(%eax)
add    $0x2,%esi
mov    %esi,(%esp)
call   8048d90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     804c386 <__sprintf_chk@plt+0x3386>
mov    0x20(%esp),%edx
mov    %ebx,%eax
movl   $0x1,0x14(%ebx)
call   804c2a0 <__sprintf_chk@plt+0x32a0>
mov    %ebx,%eax
mov    0x18(%esp),%esi
mov    0x14(%esp),%ebx
add    $0x1c,%esp
ret
mov    $0x80505c4,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x8059154,%ebx
mov    %edi,0x18(%esp)
mov    0x20(%esp),%edi
mov    %esi,0x14(%esp)
cmp    $0x13,%ebx
jle    804c3d8 <__sprintf_chk@plt+0x33d8>
movl   $0x5,0x8(%esp)
movl   $0x80505f0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x8059154,%ebx
add    $0x1,%ebx
mov    %edi,(%esp)
lea    (%ebx,%ebx,4),%esi
movl   $0x4000,0x4(%esp)
shl    $0x2,%esi
mov    %ebx,0x8059154
call   804c330 <__sprintf_chk@plt+0x3330>
mov    %edi,0x805df00(%esi)
mov    %eax,0x805df10(%esi)
mov    0x24(%esp),%eax
mov    %eax,0x805df08(%esi)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8048e80 <__strdup@plt>
mov    %eax,0x805df04(%esi)
mov    0x805914c,%eax
mov    %eax,0x805df0c(%esi)
mov    0x805df10(%esi),%eax
mov    %eax,(%esp)
call   804c180 <__sprintf_chk@plt+0x3180>
mov    0x805df04(%esi),%eax
movl   $0x1,0x805914c
00
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
mov    %eax,0x805dee0
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x805e098,%eax
mov    %ebx,0x24(%esp)
mov    0x30(%esp),%edx
mov    %esi,0x28(%esp)
test   %eax,%eax
je     804c4a0 <__sprintf_chk@plt+0x34a0>
mov    0x805e09c,%ecx
mov    (%eax,%ecx,4),%eax
test   %eax,%eax
je     804c4a0 <__sprintf_chk@plt+0x34a0>
call   804c2a0 <__sprintf_chk@plt+0x32a0>
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
add    $0x2c,%esp
jmp    804bcc0 <__sprintf_chk@plt+0x2cc0>
lea    0x0(%esi),%esi
mov    %edx,0x1c(%esp)
call   804c0c0 <__sprintf_chk@plt+0x30c0>
mov    0x805e098,%ebx
mov    0x805e09c,%eax
movl   $0x4000,0x4(%esp)
lea    (%ebx,%eax,4),%esi
mov    0x805deec,%eax
mov    %eax,(%esp)
call   804c330 <__sprintf_chk@plt+0x3330>
test   %ebx,%ebx
mov    $0x0,%ecx
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
cmove  %ecx,%eax
jmp    804c485 <__sprintf_chk@plt+0x3485>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x805e090,%eax
movl   $0xffffffff,0x8060f60
ff
test   %eax,%eax
jne    804c554 <__sprintf_chk@plt+0x3554>
mov    0x805e094,%eax
movl   $0x1,0x805e090
00
test   %eax,%eax
jne    804c517 <__sprintf_chk@plt+0x3517>
movl   $0x1,0x805e094
00
mov    0x805deec,%eax
test   %eax,%eax
je     804c67f <__sprintf_chk@plt+0x367f>
mov    0x805dee8,%eax
test   %eax,%eax
je     804c68e <__sprintf_chk@plt+0x368e>
mov    0x805e098,%eax
test   %eax,%eax
je     804c69d <__sprintf_chk@plt+0x369d>
mov    0x805e09c,%edx
mov    (%eax,%edx,4),%eax
test   %eax,%eax
je     804c69d <__sprintf_chk@plt+0x369d>
call   804bcc0 <__sprintf_chk@plt+0x2cc0>
mov    0x805e0a0,%ebp
movzbl 0x805e0a4,%edx
mov    0x805e094,%eax
mov    %dl,0x0(%ebp)
mov    %ebp,0x28(%esp)
mov    0x805e0a8,%ebx
movswl 0x80515c0(%eax,%eax,1),%ecx
mov    0x805e0ac,%edi
mov    %ebx,0x24(%esp)
lea    0x0(%esi),%esi
movzbl 0x80508a0(,%edx,4),%esi
mov    0x24(%esp),%edx
cmpw   $0x0,0x8050ca0(%eax,%eax,1)
00
cmovne %eax,%edx
cmovne %ebp,%edi
mov    %edx,0x24(%esp)
jmp    804c5cf <__sprintf_chk@plt+0x35cf>
lea    0x0(%esi,%eiz,1),%esi
movswl 0x80510a0(%eax,%eax,1),%eax
cmp    $0x1f7,%eax
jle    804c5c7 <__sprintf_chk@plt+0x35c7>
movzbl 0x80514c0(,%edx,4),%esi
movswl 0x80515c0(%eax,%eax,1),%ecx
mov    %esi,%ebx
movzbl %bl,%edx
add    %edx,%ecx
movswl 0x80519e0(%ecx,%ecx,1),%ebx
cmp    %eax,%ebx
jne    804c5b0 <__sprintf_chk@plt+0x35b0>
movswl 0x8052020(%ecx,%ecx,1),%eax
add    $0x1,%ebp
movswl 0x80515c0(%eax,%eax,1),%ecx
cmp    $0x2d7,%cx
je     804c608 <__sprintf_chk@plt+0x3608>
movzbl 0x0(%ebp),%edx
jmp    804c588 <__sprintf_chk@plt+0x3588>
lea    0x0(%esi),%esi
mov    0x24(%esp),%esi
movzwl 0x8050ca0(%eax,%eax,1),%edx
mov    %edi,0x805e0ac
mov    %esi,0x805e0a8
movswl %dx,%eax
test   %eax,%eax
jne    804c63a <__sprintf_chk@plt+0x363a>
mov    0x805e0a8,%eax
mov    0x805e0ac,%ebp
movswl 0x8050ca0(%eax,%eax,1),%eax
mov    0x28(%esp),%edx
mov    %ebp,0x805e0a0
mov    %edx,0x80611a4
mov    %ebp,%edx
sub    0x28(%esp),%edx
mov    %edx,0x80611a8
movzbl 0x0(%ebp),%edx
movb   $0x0,0x0(%ebp)
mov    %dl,0x805e0a4
cmp    $0x35,%eax
jbe    804c678 <__sprintf_chk@plt+0x3678>
mov    $0x80506e8,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    *0x80507c0(,%eax,4)
mov    0x805de28,%eax
mov    %eax,0x805deec
jmp    804c524 <__sprintf_chk@plt+0x3524>
mov    0x805de40,%eax
mov    %eax,0x805dee8
jmp    804c531 <__sprintf_chk@plt+0x3531>
call   804c0c0 <__sprintf_chk@plt+0x30c0>
mov    0x805e098,%eax
mov    0x805e09c,%edx
movl   $0x4000,0x4(%esp)
lea    (%eax,%edx,4),%ebx
mov    0x805deec,%eax
mov    %eax,(%esp)
call   804c330 <__sprintf_chk@plt+0x3330>
mov    %eax,(%ebx)
jmp    804c54f <__sprintf_chk@plt+0x354f>
mov    0x805dee8,%eax
movl   $0x1,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80611a8,%eax
mov    %eax,0x4(%esp)
mov    0x80611a4,%eax
mov    %eax,(%esp)
call   8048d40 <fwrite@plt>
mov    0x805e0a0,%ebp
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    $0x121,%ebx
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x120,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x11f,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x117,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x11e,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x11d,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x112,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x111,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x110,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x10f,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x10e,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x10d,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x10c,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x10b,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x10a,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x109,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x805e0b4,%eax
cmp    0x805e0b8,%eax
jb     804c7b3 <__sprintf_chk@plt+0x37b3>
movl   $0x5,0x8(%esp)
movl   $0x80504c3,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x805e0b4,%eax
movb   $0x5c,(%eax)
add    $0x1,%eax
mov    0x805e0a0,%ebp
mov    %eax,0x805e0b4
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    0x805e0b4,%eax
cmp    0x805e0b8,%eax
jb     804c806 <__sprintf_chk@plt+0x3806>
movl   $0x5,0x8(%esp)
movl   $0x80504c3,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x805e0b4,%eax
movb   $0x22,(%eax)
add    $0x1,%eax
mov    0x805e0a0,%ebp
mov    %eax,0x805e0b4
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    0x805e0b4,%ebx
cmp    0x805e0b8,%ebx
jb     804c85b <__sprintf_chk@plt+0x385b>
movl   $0x5,0x8(%esp)
movl   $0x80504c3,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x805e0b4,%ebx
mov    0x80611a4,%eax
movl   $0x8,0x8(%esp)
movl   $0x0,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8048fa0 <strtol@plt>
mov    0x805e0a0,%ebp
movzbl 0x805e0a4,%edx
mov    %al,(%ebx)
add    $0x1,%ebx
mov    %ebx,0x805e0b4
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    $0x2,%eax
movl   $0x8060fa1,0x805e0b4
08
movl   $0x80611a0,0x805e0b8
08
call   804bd70 <__sprintf_chk@plt+0x2d70>
mov    0x805e0a0,%ebp
addl   $0x1,0x805e0b0
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    0x80611a4,%eax
mov    $0x119,%ebx
movzbl 0x1(%eax),%eax
mov    %eax,0x8060f60
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x80611a4,%eax
mov    $0x119,%ebx
movzbl 0x2(%eax),%eax
mov    %eax,0x8060f60
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x80611a4,%eax
mov    $0x119,%ebx
movl   $0x8,0x8(%esp)
movl   $0x0,0x4(%esp)
add    $0x2,%eax
mov    %eax,(%esp)
call   8048fa0 <strtol@plt>
mov    %eax,0x8060f60
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x122,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x11a,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x805e0b4,%eax
mov    $0x116,%ebx
movb   $0x0,(%eax)
call   804bd30 <__sprintf_chk@plt+0x2d30>
subl   $0x1,0x805e0b0
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x80611a4,%ebx
mov    0x805e0b4,%esi
mov    %ebx,(%esp)
call   8048e30 <strlen@plt>
add    %esi,%eax
cmp    0x805e0b8,%eax
mov    %eax,0x805e0b4
jbe    804c9ad <__sprintf_chk@plt+0x39ad>
movl   $0x5,0x8(%esp)
movl   $0x80504c3,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x80611a4,%ebx
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8048d60 <strcpy@plt>
mov    0x805e0a0,%ebp
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    0x805e0b4,%eax
cmp    0x805e0b8,%eax
jb     804ca01 <__sprintf_chk@plt+0x3a01>
movl   $0x5,0x8(%esp)
movl   $0x80504c3,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    0x805e0b4,%eax
movb   $0xa,(%eax)
add    $0x1,%eax
mov    0x805e0a0,%ebp
mov    %eax,0x805e0b4
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    0x80611a4,%ebx
mov    %ebx,(%esp)
add    $0x1,%ebx
call   8048e30 <strlen@plt>
mov    %ebx,(%esp)
sub    $0x2,%eax
mov    %eax,0x4(%esp)
call   804e4a0 <__sprintf_chk@plt+0x54a0>
mov    0x805de68,%ebp
test   %ebp,%ebp
mov    %eax,%ebx
je     804ca83 <__sprintf_chk@plt+0x3a83>
movl   $0x5,0x8(%esp)
movl   $0x8050480,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de40,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
test   %ebx,%ebx
je     804cb22 <__sprintf_chk@plt+0x3b22>
movzbl (%ebx),%eax
test   %al,%al
je     804cb22 <__sprintf_chk@plt+0x3b22>
cmp    $0x2f,%al
je     804d1eb <__sprintf_chk@plt+0x41eb>
movl   $0x8050491,(%esp)
call   8048d70 <getenv@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d212 <__sprintf_chk@plt+0x4212>
movl   $0x0,0x48(%esp)
mov    %ebx,%ebp
movl   $0x0,0x4c(%esp)
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   8048e20 <strchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     804cf63 <__sprintf_chk@plt+0x3f63>
movzbl (%eax),%ebx
movb   $0x0,(%eax)
mov    %esi,0x48(%esp)
cmpb   $0x0,(%esi)
je     804cf57 <__sprintf_chk@plt+0x3f57>
lea    0x48(%esp),%ecx
movl   $0x8059160,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
test   %eax,%eax
jne    804cf6a <__sprintf_chk@plt+0x3f6a>
test   %edi,%edi
je     804cb20 <__sprintf_chk@plt+0x3b20>
mov    %edi,%esi
add    $0x1,%esi
mov    %bl,(%edi)
jne    804cac6 <__sprintf_chk@plt+0x3ac6>
mov    %ebp,%ebx
movl   $0x5,0x8(%esp)
xor    %esi,%esi
movl   $0x80504a7,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
mov    %ebx,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    0x80611c0,%eax
movl   $0x80611e0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804c390 <__sprintf_chk@plt+0x3390>
call   804bd30 <__sprintf_chk@plt+0x2d30>
mov    0x805e0a0,%ebp
subl   $0x1,0x805e0b0
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    $0x3,%eax
call   804bd70 <__sprintf_chk@plt+0x2d70>
mov    0x805e0a0,%ebp
addl   $0x1,0x805e0b0
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
movzbl 0x805e0a4,%eax
mov    %al,0x0(%ebp)
mov    0x805e0a8,%eax
mov    0x805e0ac,%ebp
movzwl 0x8050ca0(%eax,%eax,1),%edx
jmp    804c620 <__sprintf_chk@plt+0x3620>
mov    0x8059154,%eax
lea    (%eax,%eax,4),%eax
mov    0x805df08(,%eax,4),%edx
mov    0x805df00(,%eax,4),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804eb50 <__sprintf_chk@plt+0x5b50>
mov    0x8059154,%eax
lea    (%eax,%eax,4),%eax
mov    0x805df04(,%eax,4),%eax
mov    %eax,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    0x8059154,%ebx
lea    (%ebx,%ebx,4),%eax
mov    0x805df10(,%eax,4),%eax
mov    %eax,(%esp)
call   804c1f0 <__sprintf_chk@plt+0x31f0>
lea    -0x1(%ebx),%eax
test   %eax,%eax
mov    %eax,0x8059154
js     804cc60 <__sprintf_chk@plt+0x3c60>
lea    (%eax,%eax,4),%edx
lea    0x805df00(,%edx,4),%eax
mov    0x8(%eax),%ecx
mov    %ecx,0x80611c0
mov    0x4(%eax),%ecx
mov    0xc(%eax),%eax
mov    %ecx,0x805dee0
mov    %eax,0x805914c
mov    0x805df10(,%edx,4),%eax
mov    %eax,(%esp)
call   804c180 <__sprintf_chk@plt+0x3180>
mov    0x805e098,%eax
test   %eax,%eax
je     804cc7a <__sprintf_chk@plt+0x3c7a>
mov    0x805e09c,%edx
mov    (%eax,%edx,4),%edi
test   %edi,%edi
jne    804c554 <__sprintf_chk@plt+0x3554>
xor    %ebx,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x107,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x106,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x105,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x11b,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x113,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x114,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x80611a4,%eax
mov    $0x11a,%ebx
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804df70 <__sprintf_chk@plt+0x4f70>
cmp    $0xffffffff,%eax
mov    %eax,0x8060f60
mov    $0x104,%eax
cmovne %eax,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x80611a4,%eax
mov    $0x103,%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <strtol@plt>
mov    %eax,0x8060f60
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    0x80611a4,%eax
mov    $0x11c,%ebx
movl   $0x10,0x8(%esp)
movl   $0x0,0x4(%esp)
add    $0x1,%eax
mov    %eax,(%esp)
call   8048fa0 <strtol@plt>
cmp    $0xefff,%eax
mov    %eax,0x8060f60
jle    804c70a <__sprintf_chk@plt+0x370a>
movl   $0x5,0x8(%esp)
mov    0x80611a4,%esi
movl   $0x8050634,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ae80 <__sprintf_chk@plt+0x1e80>
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x1,%eax
mov    $0x118,%ebx
call   804bd70 <__sprintf_chk@plt+0x2d70>
addl   $0x1,0x805e0b0
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x1,%eax
mov    $0x115,%ebx
call   804bd70 <__sprintf_chk@plt+0x2d70>
addl   $0x1,0x805e0b0
jmp    804c70a <__sprintf_chk@plt+0x370a>
mov    $0x1,%eax
mov    $0x108,%ebx
call   804bd70 <__sprintf_chk@plt+0x2d70>
addl   $0x1,0x805e0b0
movl   $0x0,0x8060f80
00
jmp    804c70a <__sprintf_chk@plt+0x370a>
movzbl 0x805e0a4,%eax
mov    0x28(%esp),%ebx
mov    %al,0x0(%ebp)
lea    -0x1(%ebp),%eax
mov    %eax,%edx
sub    %ebx,%edx
mov    %ebx,0x80611a4
mov    %edx,0x80611a8
movzbl -0x1(%ebp),%edx
mov    %eax,0x805e0a0
movb   $0x0,-0x1(%ebp)
mov    %eax,%ebp
mov    %dl,0x805e0a4
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    0x805e0b0,%ebx
addl   $0x1,0x805914c
test   %ebx,%ebx
jle    804ce40 <__sprintf_chk@plt+0x3e40>
sub    $0x1,%ebx
call   804bd30 <__sprintf_chk@plt+0x2d30>
test   %ebx,%ebx
mov    %ebx,0x805e0b0
jne    804ce2e <__sprintf_chk@plt+0x3e2e>
mov    $0x102,%ebx
jmp    804c70a <__sprintf_chk@plt+0x370a>
addl   $0x1,0x805914c
mov    0x805e0a0,%ebp
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
movl   $0x5,0x8(%esp)
movl   $0x8050610,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ae30 <__sprintf_chk@plt+0x1e30>
mov    0x805e0a0,%ebp
movzbl 0x805e0a4,%edx
jmp    804c561 <__sprintf_chk@plt+0x3561>
mov    %ebp,%eax
mov    0x805e098,%ebx
sub    0x80611a4,%eax
mov    0x805e09c,%edx
sub    $0x1,%eax
mov    %eax,0x38(%esp)
movzbl 0x805e0a4,%eax
lea    (%ebx,%edx,4),%esi
mov    %esi,0x2c(%esp)
mov    %al,0x0(%ebp)
mov    (%esi),%eax
mov    0x2c(%eax),%esi
mov    %eax,0x30(%esp)
test   %esi,%esi
je     804d1c0 <__sprintf_chk@plt+0x41c0>
mov    0x805e0bc,%ecx
mov    %ecx,0x3c(%esp)
mov    0x4(%eax),%esi
mov    0x805e0a0,%ecx
mov    %esi,0x34(%esp)
add    0x3c(%esp),%esi
mov    %ecx,0x18(%esp)
cmp    %ecx,%esi
mov    %esi,0x24(%esp)
jae    804d33e <__sprintf_chk@plt+0x433e>
mov    0x34(%esp),%ecx
mov    0x3c(%esp),%esi
mov    0x80611a4,%edi
lea    0x1(%ecx,%esi,1),%esi
cmp    %esi,0x18(%esp)
ja     804d2b0 <__sprintf_chk@plt+0x42b0>
mov    0x28(%eax),%ecx
test   %ecx,%ecx
jne    804cf9e <__sprintf_chk@plt+0x3f9e>
mov    0x18(%esp),%esi
sub    %edi,%esi
cmp    $0x1,%esi
je     804cf75 <__sprintf_chk@plt+0x3f75>
mov    0x24(%esp),%esi
mov    %esi,0x805e0a0
mov    %esi,%ebp
call   804bbf0 <__sprintf_chk@plt+0x2bf0>
mov    0x80611a4,%edx
mov    %edx,0x28(%esp)
movzwl 0x8050ca0(%eax,%eax,1),%edx
jmp    804c620 <__sprintf_chk@plt+0x3620>
mov    %ebp,%eax
call   804bf30 <__sprintf_chk@plt+0x2f30>
jmp    804cb0b <__sprintf_chk@plt+0x3b0b>
xor    %ebx,%ebx
jmp    804cae6 <__sprintf_chk@plt+0x3ae6>
mov    %ebp,%ebx
mov    %eax,%esi
xchg   %ax,%ax
jmp    804cb4c <__sprintf_chk@plt+0x3b4c>
mov    0x805e094,%eax
movl   $0x0,0x805e0c0
00
mov    %edi,0x805e0a0
sub    $0x1,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
add    $0x32,%eax
jmp    804c664 <__sprintf_chk@plt+0x3664>
mov    0x18(%esp),%ecx
sub    %edi,%ecx
mov    %ecx,0x3c(%esp)
sub    $0x1,%ecx
test   %ecx,%ecx
mov    %ecx,0x24(%esp)
jle    804cfe3 <__sprintf_chk@plt+0x3fe3>
mov    0x18(%esp),%esi
xor    %eax,%eax
mov    %edx,0x30(%esp)
movzbl (%edi,%eax,1),%edx
mov    0x34(%esp),%ecx
mov    %dl,(%ecx,%eax,1)
add    $0x1,%eax
cmp    %eax,0x24(%esp)
jne    804cfbd <__sprintf_chk@plt+0x3fbd>
mov    %esi,0x18(%esp)
mov    0x2c(%esp),%esi
mov    0x30(%esp),%edx
mov    (%esi),%eax
mov    %eax,0x30(%esp)
cmpl   $0x2,0x2c(%eax)
je     804d21d <__sprintf_chk@plt+0x421d>
mov    0x24(%esp),%edx
not    %edx
add    0xc(%eax),%edx
test   %edx,%edx
jg     804d07c <__sprintf_chk@plt+0x407c>
mov    0x18(%esp),%esi
jmp    804d046 <__sprintf_chk@plt+0x4046>
mov    0xc(%edi),%edx
lea    (%edx,%edx,1),%eax
test   %eax,%eax
jle    804d070 <__sprintf_chk@plt+0x4070>
mov    %eax,0xc(%edi)
add    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8048d80 <realloc@plt>
test   %eax,%eax
mov    %eax,0x4(%edi)
je     804d063 <__sprintf_chk@plt+0x4063>
mov    0x2c(%esp),%edx
add    %eax,%esi
mov    %esi,0x805e0a0
mov    (%edx),%eax
mov    0x24(%esp),%edx
mov    %eax,0x30(%esp)
not    %edx
add    0xc(%eax),%edx
test   %edx,%edx
jg     804d07c <__sprintf_chk@plt+0x407c>
test   %ebx,%ebx
mov    $0x0,%edi
cmovne %eax,%edi
mov    0x4(%edi),%ecx
mov    0x14(%edi),%eax
sub    %ecx,%esi
test   %eax,%eax
jne    804d004 <__sprintf_chk@plt+0x4004>
movl   $0x0,0x4(%edi)
mov    $0x805068c,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
lea    0x0(%esi),%esi
mov    %edx,%eax
shr    $0x3,%eax
add    %edx,%eax
mov    %eax,0xc(%edi)
jmp    804d011 <__sprintf_chk@plt+0x4011>
mov    0x18(%eax),%ebx
cmp    $0x2000,%edx
mov    $0x2000,%ecx
cmovle %edx,%ecx
xor    %edi,%edi
mov    %ecx,0x2c(%esp)
test   %ebx,%ebx
jne    804d181 <__sprintf_chk@plt+0x4181>
call   8048ea0 <__errno_location@plt>
mov    %eax,%ebx
movl   $0x0,(%eax)
mov    0x30(%esp),%eax
jmp    804d0eb <__sprintf_chk@plt+0x40eb>
xchg   %ax,%ax
mov    0x805deec,%eax
mov    %eax,(%esp)
call   8048c80 <ferror@plt>
test   %eax,%eax
je     804d11f <__sprintf_chk@plt+0x411f>
cmpl   $0x4,(%ebx)
jne    804d334 <__sprintf_chk@plt+0x4334>
mov    0x805deec,%eax
movl   $0x0,(%ebx)
mov    %eax,(%esp)
call   8048f50 <clearerr@plt>
mov    0x805e098,%eax
mov    0x805e09c,%edx
mov    (%eax,%edx,4),%eax
mov    0x805deec,%edx
mov    0x2c(%esp),%ecx
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    0x4(%eax),%eax
add    0x24(%esp),%eax
mov    %eax,(%esp)
call   8048d50 <fread@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x805e0bc
je     804d0b0 <__sprintf_chk@plt+0x40b0>
mov    0x805e09c,%edx
mov    0x805e098,%ebx
mov    (%ebx,%edx,4),%eax
test   %edi,%edi
mov    %edi,0x10(%eax)
je     804d22e <__sprintf_chk@plt+0x422e>
lea    (%ebx,%edx,4),%ebx
xor    %edx,%edx
mov    (%ebx),%esi
jmp    804d24d <__sprintf_chk@plt+0x424d>
cmp    $0xa,%eax
je     804d3d0 <__sprintf_chk@plt+0x43d0>
mov    0x805e09c,%ebx
mov    %ebx,0x34(%esp)
mov    0x805e098,%ebx
mov    0x34(%esp),%edx
lea    (%ebx,%edx,4),%esi
mov    0x3c(%esp),%edx
mov    (%esi),%ecx
mov    0x4(%ecx),%ecx
add    %edi,%ecx
add    $0x1,%edi
cmp    %edi,0x2c(%esp)
mov    %al,-0x1(%edx,%ecx,1)
je     804d3bb <__sprintf_chk@plt+0x43bb>
mov    0x805deec,%eax
mov    %eax,(%esp)
call   8048ce0 <_IO_getc@plt>
cmp    $0xffffffff,%eax
jne    804d145 <__sprintf_chk@plt+0x4145>
mov    0x805deec,%eax
mov    %eax,(%esp)
call   8048c80 <ferror@plt>
test   %eax,%eax
jne    804d334 <__sprintf_chk@plt+0x4334>
mov    0x805e09c,%edx
mov    0x805e098,%ebx
mov    (%ebx,%edx,4),%eax
jmp    804d3c5 <__sprintf_chk@plt+0x43c5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%eax),%esi
mov    0x2c(%esp),%ecx
mov    %esi,0x3c(%esp)
mov    %esi,0x805e0bc
mov    0x805deec,%esi
mov    %esi,(%eax)
mov    (%ecx),%eax
mov    %eax,0x30(%esp)
movl   $0x1,0x2c(%eax)
jmp    804cee0 <__sprintf_chk@plt+0x3ee0>
movl   $0x8059160,0x8(%esp)
movl   $0x8059158,0x4(%esp)
mov    %ebx,(%esp)
call   804eb70 <__sprintf_chk@plt+0x5b70>
mov    %eax,%esi
test   %esi,%esi
jne    804cb4c <__sprintf_chk@plt+0x3b4c>
jmp    804cb22 <__sprintf_chk@plt+0x3b22>
mov    %ebx,%eax
call   804bf30 <__sprintf_chk@plt+0x2f30>
mov    %eax,%esi
jmp    804d205 <__sprintf_chk@plt+0x4205>
movl   $0x0,0x805e0bc
00
movl   $0x0,0x10(%eax)
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     804d307 <__sprintf_chk@plt+0x4307>
lea    (%ebx,%edx,4),%ebx
xor    %edi,%edi
mov    (%ebx),%esi
mov    $0x2,%edx
movl   $0x2,0x2c(%esi)
mov    0x24(%esp),%ecx
add    %edi,%ecx
cmp    0xc(%esi),%ecx
ja     804d2c8 <__sprintf_chk@plt+0x42c8>
mov    (%ebx),%eax
mov    0x4(%eax),%eax
cmp    $0x1,%edx
mov    %ecx,0x805e0bc
movb   $0x0,(%eax,%ecx,1)
mov    (%ebx),%eax
mov    0x4(%eax),%eax
movb   $0x0,0x1(%eax,%ecx,1)
mov    (%ebx),%eax
mov    0x4(%eax),%edi
mov    %edi,0x80611a4
je     804cf75 <__sprintf_chk@plt+0x3f75>
cmp    $0x2,%edx
mov    %ecx,%esi
je     804d2ba <__sprintf_chk@plt+0x42ba>
mov    0x38(%esp),%ebp
add    %edi,%ebp
mov    %ebp,0x805e0a0
call   804bbf0 <__sprintf_chk@plt+0x2bf0>
mov    0x80611a4,%ebx
mov    %ebx,0x28(%esp)
movzbl 0x0(%ebp),%edx
jmp    804c56d <__sprintf_chk@plt+0x356d>
mov    $0x8050654,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
mov    (%ebx),%eax
add    0x4(%eax),%esi
mov    %esi,0x24(%esp)
jmp    804cf2f <__sprintf_chk@plt+0x3f2f>
mov    %edi,%eax
sar    %eax
add    %ecx,%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %edx,0x1c(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,(%esp)
call   8048d80 <realloc@plt>
mov    0x20(%esp),%ecx
mov    %eax,0x4(%esi)
mov    (%ebx),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
mov    0x1c(%esp),%edx
jne    804d25a <__sprintf_chk@plt+0x425a>
mov    $0x80506b8,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
mov    0x805deec,%eax
mov    %eax,(%esp)
call   804c460 <__sprintf_chk@plt+0x3460>
mov    0x805e09c,%edx
mov    0x805e098,%eax
mov    0x805e0bc,%edi
lea    (%eax,%edx,4),%ebx
mov    $0x1,%edx
mov    (%ebx),%esi
jmp    804d24d <__sprintf_chk@plt+0x424d>
mov    $0x80504d3,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
mov    0x38(%esp),%ebp
add    0x80611a4,%ebp
mov    %ebp,0x805e0a0
call   804bbf0 <__sprintf_chk@plt+0x2bf0>
movzwl 0x8050ca0(%eax,%eax,1),%edx
test   %dx,%dx
je     804d378 <__sprintf_chk@plt+0x4378>
mov    %eax,0x805e0a8
mov    %ebp,0x805e0ac
jmp    804d378 <__sprintf_chk@plt+0x4378>
lea    0x0(%esi),%esi
movswl 0x80510a0(%eax,%eax,1),%eax
movswl 0x80515c0(%eax,%eax,1),%ecx
movswl 0x80519e2(%ecx,%ecx,1),%ebx
cmp    %ebx,%eax
jne    804d370 <__sprintf_chk@plt+0x4370>
movswl 0x8052022(%ecx,%ecx,1),%eax
cmp    $0x1f7,%eax
je     804d3f5 <__sprintf_chk@plt+0x43f5>
mov    0x80611a4,%ebx
test   %eax,%eax
mov    %ebx,0x28(%esp)
je     804c620 <__sprintf_chk@plt+0x3620>
add    $0x1,%ebp
mov    %ebp,0x805e0a0
jmp    804d2a7 <__sprintf_chk@plt+0x42a7>
mov    0x34(%esp),%edx
mov    0x2c(%esp),%edi
mov    (%esi),%eax
mov    %edi,0x805e0bc
jmp    804d12e <__sprintf_chk@plt+0x412e>
mov    0x805e09c,%edx
mov    0x805e098,%ebx
mov    0x24(%esp),%esi
lea    (%ebx,%edx,4),%eax
mov    (%eax),%ecx
mov    0x4(%ecx),%ecx
add    %edi,%ecx
add    $0x1,%edi
movb   $0xa,(%ecx,%esi,1)
mov    (%eax),%eax
jmp    804d3c5 <__sprintf_chk@plt+0x43c5>
mov    0x80611a4,%ecx
mov    %ecx,0x28(%esp)
jmp    804c620 <__sprintf_chk@plt+0x3620>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0xc,%esp
mov    %ebx,(%esp)
mov    0x10(%esp),%ebx
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
test   %ebx,%ebx
je     804d488 <__sprintf_chk@plt+0x4488>
call   804c0c0 <__sprintf_chk@plt+0x30c0>
mov    0x805e098,%edx
mov    0x805e09c,%eax
shl    $0x2,%eax
test   %edx,%edx
je     804d477 <__sprintf_chk@plt+0x4477>
mov    0x805e09c,%esi
lea    (%edx,%esi,4),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     804d477 <__sprintf_chk@plt+0x4477>
mov    0x805e0a0,%edi
add    $0x1,%esi
movzbl 0x805e0a4,%ecx
mov    %esi,0x805e09c
mov    %cl,(%edi)
mov    (%eax),%ecx
mov    %edi,0x8(%ecx)
mov    0x805e0bc,%ecx
mov    (%eax),%eax
mov    %ecx,0x10(%eax)
lea    (%edx,%esi,4),%eax
mov    %ebx,(%eax)
call   804bcc0 <__sprintf_chk@plt+0x2cc0>
movl   $0x1,0x805e0c0
00
mov    (%esp),%ebx
mov    0x4(%esp),%esi
mov    0x8(%esp),%edi
add    $0xc,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    %ebx,0x10(%esp)
mov    0x805e098,%ebx
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
test   %ebx,%ebx
je     804d4f9 <__sprintf_chk@plt+0x44f9>
mov    0x805e09c,%esi
lea    (%ebx,%esi,4),%edi
mov    (%edi),%eax
test   %eax,%eax
je     804d4f9 <__sprintf_chk@plt+0x44f9>
mov    %eax,(%esp)
call   804c1f0 <__sprintf_chk@plt+0x31f0>
test   %esi,%esi
movl   $0x0,(%edi)
je     804d4f9 <__sprintf_chk@plt+0x44f9>
sub    $0x1,%esi
mov    (%ebx,%esi,4),%ebx
mov    %esi,0x805e09c
test   %ebx,%ebx
je     804d4f9 <__sprintf_chk@plt+0x44f9>
call   804bcc0 <__sprintf_chk@plt+0x2cc0>
movl   $0x1,0x805e0c0
00
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    %esi,0x14(%esp)
mov    0x24(%esp),%esi
mov    %edi,0x18(%esp)
mov    0x20(%esp),%edi
mov    %ebx,0x10(%esp)
cmp    $0x1,%esi
jbe    804d5a0 <__sprintf_chk@plt+0x45a0>
cmpb   $0x0,-0x2(%edi,%esi,1)
jne    804d5a0 <__sprintf_chk@plt+0x45a0>
cmpb   $0x0,-0x1(%edi,%esi,1)
jne    804d5a0 <__sprintf_chk@plt+0x45a0>
movl   $0x30,(%esp)
call   8048d90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d5a4 <__sprintf_chk@plt+0x45a4>
sub    $0x2,%esi
mov    %esi,0xc(%eax)
mov    %edi,0x4(%eax)
mov    %edi,0x8(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,(%eax)
mov    %esi,0x10(%eax)
movl   $0x0,0x18(%eax)
movl   $0x1,0x1c(%eax)
movl   $0x0,0x28(%eax)
movl   $0x0,0x2c(%eax)
mov    %eax,(%esp)
call   804c180 <__sprintf_chk@plt+0x3180>
mov    %ebx,%eax
mov    0x14(%esp),%esi
mov    0x10(%esp),%ebx
mov    0x18(%esp),%edi
add    $0x1c,%esp
ret
xchg   %ax,%ax
xor    %ebx,%ebx
jmp    804d58c <__sprintf_chk@plt+0x458c>
mov    $0x805071c,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
lea    0x2(%ebx),%edi
mov    %edi,(%esp)
call   8048d90 <malloc@plt>
test   %eax,%eax
je     804d60d <__sprintf_chk@plt+0x460d>
xor    %edx,%edx
test   %ebx,%ebx
jle    804d5e6 <__sprintf_chk@plt+0x45e6>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%esi,%edx,1),%ecx
mov    %cl,(%eax,%edx,1)
add    $0x1,%edx
cmp    %ebx,%edx
jne    804d5d8 <__sprintf_chk@plt+0x45d8>
movb   $0x0,0x1(%eax,%ebx,1)
movb   $0x0,(%eax,%ebx,1)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d510 <__sprintf_chk@plt+0x4510>
test   %eax,%eax
je     804d617 <__sprintf_chk@plt+0x4617>
movl   $0x1,0x14(%eax)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0x8050748,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
mov    $0x80504f0,%eax
call   804bd00 <__sprintf_chk@plt+0x2d00>
jmp    804d630 <__sprintf_chk@plt+0x4630>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048e30 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804d5b0 <__sprintf_chk@plt+0x45b0>
add    $0x18,%esp
pop    %ebx
ret
jmp    804d660 <__sprintf_chk@plt+0x4660>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8059150,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805deec,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805dee8,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80611a8,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80611a4,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    %eax,0x8059150
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %eax,0x805deec
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %eax,0x805dee8
ret
lea    0x0(%esi),%esi
mov    0x805dee4,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    %eax,0x805dee4
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805e098,%esi
test   %esi,%esi
jne    804d72b <__sprintf_chk@plt+0x472b>
jmp    804d739 <__sprintf_chk@plt+0x4739>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804c1f0 <__sprintf_chk@plt+0x31f0>
movl   $0x0,(%ebx)
call   804d4a0 <__sprintf_chk@plt+0x44a0>
mov    0x805e09c,%eax
lea    (%esi,%eax,4),%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    804d718 <__sprintf_chk@plt+0x4718>
mov    %esi,(%esp)
call   8048c60 <free@plt>
mov    0x805e0e0,%eax
movl   $0x0,0x805e098
00
mov    %eax,(%esp)
call   8048c60 <free@plt>
xor    %eax,%eax
movl   $0x0,0x805e0e0
00
movl   $0x0,0x805e09c
00
movl   $0x0,0x805e0c4
00
movl   $0x0,0x805e0a0
00
movl   $0x0,0x805e090
00
movl   $0x0,0x805e094
00
movl   $0x0,0x805e0d8
00
movl   $0x0,0x805e0dc
00
movl   $0x0,0x805deec
00
movl   $0x0,0x805dee8
00
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
jmp    8048d90 <malloc@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8048d80 <realloc@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    8048c60 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8048df0 <open@plt>
test   %eax,%eax
js     804d820 <__sprintf_chk@plt+0x4820>
add    $0x18,%esp
pop    %ebx
ret
nop
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8048df0 <open@plt>
test   %eax,%eax
jns    804d81a <__sprintf_chk@plt+0x481a>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   8048df0 <open@plt>
mov    $0xffffffff,%edx
test   %eax,%eax
cmovs  %edx,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x28,%esp
mov    %eax,(%esp)
movb   $0x0,0x1f(%esp)
call   8048f90 <isatty@plt>
test   %eax,%eax
jne    804d880 <__sprintf_chk@plt+0x4880>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
lea    0x1f(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4b33,0x4(%esp)
mov    %ebx,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
jne    804d877 <__sprintf_chk@plt+0x4877>
movzbl 0x1f(%esp),%eax
sub    $0x1,%eax
cmp    $0x1,%al
setbe  %al
add    $0x28,%esp
movzbl %al,%eax
pop    %ebx
ret
jmp    804d8c0 <__sprintf_chk@plt+0x48c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
test   %esi,%esi
je     804d8f8 <__sprintf_chk@plt+0x48f8>
mov    %esi,%eax
call   804d800 <__sprintf_chk@plt+0x4800>
test   %eax,%eax
mov    %eax,%ebx
js     804d988 <__sprintf_chk@plt+0x4988>
call   804d860 <__sprintf_chk@plt+0x4860>
test   %eax,%eax
je     804d980 <__sprintf_chk@plt+0x4980>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8052642,%eax
xor    %esi,%esi
nop
call   804d800 <__sprintf_chk@plt+0x4800>
test   %eax,%eax
mov    %eax,%ebx
js     804d91c <__sprintf_chk@plt+0x491c>
call   804d860 <__sprintf_chk@plt+0x4860>
test   %eax,%eax
jne    804d8eb <__sprintf_chk@plt+0x48eb>
mov    %ebx,(%esp)
call   8048fc0 <close@plt>
add    $0x1,%esi
mov    0x80526dc(,%esi,4),%eax
test   %eax,%eax
jne    804d900 <__sprintf_chk@plt+0x4900>
xor    %ebx,%ebx
mov    %ebx,%eax
call   804d860 <__sprintf_chk@plt+0x4860>
test   %eax,%eax
jne    804d8eb <__sprintf_chk@plt+0x48eb>
add    $0x1,%ebx
cmp    $0x3,%ebx
jne    804d92c <__sprintf_chk@plt+0x492c>
movl   $0x5,0x8(%esp)
movl   $0x80526a0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
mov    %ebx,(%esp)
call   8048fc0 <close@plt>
movl   $0x5,0x8(%esp)
movl   $0x8052652,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    $0xffffffff,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    0x2c(%esp),%edi
mov    $0x8052642,%eax
movl   $0x7665642f,0x31(%esp)
movl   $0x7974742f,0x35(%esp)
movw   $0x0,0x39(%esp)
movb   $0x0,0x3b(%esp)
jmp    804da57 <__sprintf_chk@plt+0x4a57>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x4b44,0x4(%esp)
mov    %ebp,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
js     804da6b <__sprintf_chk@plt+0x4a6b>
mov    0x2c(%esp),%eax
cmp    $0x3,%eax
je     804db68 <__sprintf_chk@plt+0x4b68>
cmp    $0xffffffff,%esi
jne    804da6b <__sprintf_chk@plt+0x4a6b>
cmp    $0x1,%eax
jne    804da6b <__sprintf_chk@plt+0x4a6b>
mov    %ebp,%esi
add    $0x1,%ebx
mov    0x80526dc(,%ebx,4),%eax
test   %eax,%eax
je     804da81 <__sprintf_chk@plt+0x4a81>
call   804d800 <__sprintf_chk@plt+0x4800>
test   %eax,%eax
mov    %eax,%ebp
js     804da49 <__sprintf_chk@plt+0x4a49>
call   804d860 <__sprintf_chk@plt+0x4860>
test   %eax,%eax
jne    804da18 <__sprintf_chk@plt+0x4a18>
add    $0x1,%ebx
mov    %ebp,(%esp)
call   8048fc0 <close@plt>
mov    0x80526dc(,%ebx,4),%eax
test   %eax,%eax
jne    804da57 <__sprintf_chk@plt+0x4a57>
mov    $0x1,%ebx
lea    0x39(%esp),%edi
jmp    804dacd <__sprintf_chk@plt+0x4acd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x4b44,0x4(%esp)
mov    %ebp,(%esp)
call   8048d10 <ioctl@plt>
test   %eax,%eax
js     804db16 <__sprintf_chk@plt+0x4b16>
mov    0x2c(%esp),%eax
cmp    $0x3,%eax
je     804db68 <__sprintf_chk@plt+0x4b68>
cmp    $0xffffffff,%esi
jne    804db16 <__sprintf_chk@plt+0x4b16>
cmp    $0x1,%eax
jne    804db16 <__sprintf_chk@plt+0x4b16>
mov    %ebp,%esi
add    $0x1,%ebx
cmp    $0xd,%ebx
je     804db26 <__sprintf_chk@plt+0x4b26>
mov    %ebx,0x14(%esp)
movl   $0x8052664,0x10(%esp)
movl   $0x3,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %edi,(%esp)
call   8048c30 <__snprintf_chk@plt>
lea    0x31(%esp),%eax
call   804d800 <__sprintf_chk@plt+0x4800>
test   %eax,%eax
mov    %eax,%ebp
js     804dac5 <__sprintf_chk@plt+0x4ac5>
call   804d860 <__sprintf_chk@plt+0x4860>
test   %eax,%eax
nop
jne    804da90 <__sprintf_chk@plt+0x4a90>
mov    %ebp,(%esp)
add    $0x1,%ebx
call   8048fc0 <close@plt>
cmp    $0xd,%ebx
jne    804dacd <__sprintf_chk@plt+0x4acd>
movl   $0x5,0x8(%esp)
movl   $0x80526a0,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8048de0 <exit@plt>
nop
cmp    $0xffffffff,%esi
je     804db75 <__sprintf_chk@plt+0x4b75>
mov    %esi,(%esp)
call   8048fc0 <close@plt>
mov    0x3c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebp,%eax
jne    804db8c <__sprintf_chk@plt+0x4b8c>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8048cd0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x80526f8,0x28(%esp)
movl   $0x8052702,0x2c(%esp)
movl   $0x80526f8,0x14(%esp)
movl   $0x0,0x1c(%esp)
mov    0x14(%esp),%eax
mov    $0x80591ac,%ebp
xor    %ebx,%ebx
movl   $0x8052708,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048e30 <strlen@plt>
movl   $0x80591ac,0x10(%esp)
mov    %eax,%esi
jmp    804dc32 <__sprintf_chk@plt+0x4c32>
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
lea    (%edi,%esi,1),%ecx
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8048fb0 <fputs@plt>
mov    0x18(%esp),%ebx
add    $0xc,%ebp
cmp    $0x8059284,%ebp
je     804dc78 <__sprintf_chk@plt+0x4c78>
mov    0x0(%ebp),%edi
mov    0x14(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8048f80 <strncmp@plt>
test   %eax,%eax
jne    804dc27 <__sprintf_chk@plt+0x4c27>
lea    0x1(%ebx),%eax
test   %ebx,%ebx
mov    %eax,0x18(%esp)
je     804dc10 <__sprintf_chk@plt+0x4c10>
mov    0x50(%esp),%eax
movl   $0x2c,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <fputc@plt>
mov    0x0(%ebp),%edi
jmp    804dc10 <__sprintf_chk@plt+0x4c10>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
movl   $0x7d,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <fputc@plt>
cmpl   $0x1,0x1c(%esp)
je     804dcc0 <__sprintf_chk@plt+0x4cc0>
mov    0x50(%esp),%eax
movl   $0x2c,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <fputc@plt>
mov    0x2c(%esp),%eax
movl   $0x1,0x1c(%esp)
mov    %eax,0x14(%esp)
jmp    804dbc7 <__sprintf_chk@plt+0x4bc7>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x9,%ebp
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    $0x80526f8,%edi
mov    %ebp,%ecx
mov    (%eax),%ebx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804dd1b <__sprintf_chk@plt+0x4d1b>
mov    0x2c(%esp),%esi
mov    %esi,(%esp)
call   8048e30 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8048f80 <strncmp@plt>
test   %eax,%eax
je     804dd1b <__sprintf_chk@plt+0x4d1b>
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x805270c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
addl   $0xc,0x10(%esp)
cmpl   $0x8059284,0x10(%esp)
jne    804dcc8 <__sprintf_chk@plt+0x4cc8>
mov    0x50(%esp),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8048f40 <fputc@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    $0x80591ac,%esi
push   %ebx
mov    $0x1,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
lea    0x0(%esi),%esi
mov    (%esi),%ebp
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8048e60 <strcasecmp@plt>
test   %eax,%eax
je     804ddd0 <__sprintf_chk@plt+0x4dd0>
add    $0x1,%ebx
add    $0xc,%esi
cmp    $0x13,%ebx
jne    804dd68 <__sprintf_chk@plt+0x4d68>
movl   $0x5,0x8(%esp)
movl   $0x8056ab8,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    (%ebx,%ebx,2),%eax
lea    0x80591a0(,%eax,4),%eax
mov    0x4(%eax),%edx
mov    %ebp,0x80591a0
mov    %edx,0x80591a4
mov    0x8(%eax),%edx
mov    0x4(%eax),%ecx
mov    %edx,0x80591a8
mov    0x8(%eax),%edx
cmp    $0xff,%edx
ja     804de2c <__sprintf_chk@plt+0x4e2c>
lea    0x0(,%edx,4),%eax
neg    %edx
lea    (%ecx,%edx,8),%ecx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ecx,%eax,2),%edx
cmpb   $0x0,(%edx)
je     804de22 <__sprintf_chk@plt+0x4e22>
mov    0x80594a0,%ebx
mov    %edx,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x400,%eax
jne    804de10 <__sprintf_chk@plt+0x4e10>
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x805e0e8,(%esp)
call   8048ee0 <__strcpy_chk@plt>
mov    0x805e0e4,%eax
test   %eax,%eax
je     804de80 <__sprintf_chk@plt+0x4e80>
movl   $0x804ef66,0x4(%esp)
mov    %edi,(%esp)
call   8048e60 <strcasecmp@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    804ddc3 <__sprintf_chk@plt+0x4dc3>
movl   $0x0,0x805e0e4
00
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%ebx
test   %ebx,%ebx
js     804df23 <__sprintf_chk@plt+0x4f23>
cmp    $0xfff,%ebx
jle    804dee8 <__sprintf_chk@plt+0x4ee8>
xor    $0xf0,%bh
mov    $0x80591a4,%esi
cmp    $0x7f,%ebx
jle    804df28 <__sprintf_chk@plt+0x4f28>
mov    (%esi),%edx
test   %edx,%edx
je     804df18 <__sprintf_chk@plt+0x4f18>
mov    0x4(%esi),%ecx
cmp    $0xff,%ecx
jle    804ded6 <__sprintf_chk@plt+0x4ed6>
jmp    804df18 <__sprintf_chk@plt+0x4f18>
xchg   %ax,%ax
add    $0x1,%ecx
add    $0x8,%edx
cmp    $0x100,%ecx
je     804df18 <__sprintf_chk@plt+0x4f18>
movzwl (%edx),%eax
cmp    %ebx,%eax
jne    804dec8 <__sprintf_chk@plt+0x4ec8>
mov    0x4(%edx),%eax
cmpb   $0x0,(%eax)
je     804dec8 <__sprintf_chk@plt+0x4ec8>
pop    %ebx
pop    %esi
ret
cmp    $0x7f,%ebx
jle    804df28 <__sprintf_chk@plt+0x4f28>
mov    %ebx,%eax
sar    $0x8,%eax
cmp    $0x8,%eax
je     804df23 <__sprintf_chk@plt+0x4f23>
cmp    $0xb,%eax
je     804df32 <__sprintf_chk@plt+0x4f32>
test   %eax,%eax
je     804df38 <__sprintf_chk@plt+0x4f38>
mov    0x80594a0(,%eax,8),%eax
and    $0xff,%ebx
mov    (%eax,%ebx,4),%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%esi
cmp    $0x8059288,%esi
jne    804deb3 <__sprintf_chk@plt+0x4eb3>
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    0x8059520(,%ebx,4),%eax
pop    %ebx
pop    %esi
ret
and    $0xff,%ebx
mov    $0x80591a4,%edx
and    $0xff,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
test   %eax,%eax
je     804df5c <__sprintf_chk@plt+0x4f5c>
mov    %ebx,%ecx
sub    0x4(%edx),%ecx
mov    0x4(%eax,%ecx,8),%eax
cmpb   $0x0,(%eax)
jne    804dee5 <__sprintf_chk@plt+0x4ee5>
add    $0xc,%edx
cmp    $0x8059288,%edx
jne    804df48 <__sprintf_chk@plt+0x4f48>
xor    %eax,%eax
jmp    804df25 <__sprintf_chk@plt+0x4f25>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
cmpl   $0xffffffff,0x44(%esp)
je     804e0d0 <__sprintf_chk@plt+0x50d0>
mov    %ebx,%esi
mov    $0x8052710,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e068 <__sprintf_chk@plt+0x5068>
mov    $0x8052716,%edi
mov    %ebx,%esi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e0a0 <__sprintf_chk@plt+0x50a0>
cmpl   $0x1,0x44(%esp)
movl   $0x0,0x18(%esp)
setne  0x1f(%esp)
mov    0x18(%esp),%edx
test   %edx,%edx
jne    804e018 <__sprintf_chk@plt+0x5018>
cmpb   $0x0,0x1f(%esp)
jne    804e018 <__sprintf_chk@plt+0x5018>
mov    $0x80,%esi
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    0x80594a0(,%eax,8),%edi
jmp    804dfef <__sprintf_chk@plt+0x4fef>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
cmp    %esi,%ebp
jge    804e028 <__sprintf_chk@plt+0x5028>
mov    (%edi,%ebp,4),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804dfe8 <__sprintf_chk@plt+0x4fe8>
mov    0x18(%esp),%eax
shl    $0x8,%eax
or     %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x80594a4(,%eax,8),%esi
test   %esi,%esi
jg     804dfd4 <__sprintf_chk@plt+0x4fd4>
nop
addl   $0x1,0x18(%esp)
cmpl   $0xf,0x18(%esp)
jne    804dfc0 <__sprintf_chk@plt+0x4fc0>
xor    %esi,%esi
jmp    804e044 <__sprintf_chk@plt+0x5044>
add    $0x1,%esi
cmp    $0x3e,%esi
je     804e0e6 <__sprintf_chk@plt+0x50e6>
mov    0x80592a0(,%esi,8),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e038 <__sprintf_chk@plt+0x5038>
mov    0x80592a4(,%esi,8),%ebx
jmp    804df7b <__sprintf_chk@plt+0x4f7b>
nop
lea    0x5(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804df70 <__sprintf_chk@plt+0x4f70>
mov    %eax,%edx
sar    $0x8,%edx
test   %edx,%edx
je     804e1f8 <__sprintf_chk@plt+0x51f8>
cmpl   $0x1,0x44(%esp)
jne    804df9a <__sprintf_chk@plt+0x4f9a>
xor    %eax,%eax
jmp    804e00b <__sprintf_chk@plt+0x500b>
lea    0x0(%esi),%esi
lea    0x6(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804df70 <__sprintf_chk@plt+0x4f70>
mov    %eax,%edx
sar    $0x8,%edx
test   %edx,%edx
jne    804dfae <__sprintf_chk@plt+0x4fae>
and    $0xff,%eax
or     $0xd,%ah
jmp    804e00b <__sprintf_chk@plt+0x500b>
lea    0x0(%esi),%esi
mov    0x805e0e4,%ecx
xor    %eax,%eax
test   %ecx,%ecx
setne  %al
mov    %eax,0x44(%esp)
jmp    804df86 <__sprintf_chk@plt+0x4f86>
xor    %si,%si
cmpl   $0x1,0x44(%esp)
jne    804e104 <__sprintf_chk@plt+0x5104>
jmp    804e15f <__sprintf_chk@plt+0x515f>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    $0x60,%esi
je     804e205 <__sprintf_chk@plt+0x5205>
mov    0x8059924(,%esi,8),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e0f8 <__sprintf_chk@plt+0x50f8>
movl   $0x5,0x8(%esp)
movl   $0x805271d,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
lea    0xa0(%esi),%eax
jmp    804e00b <__sprintf_chk@plt+0x500b>
mov    $0x80591a4,%ebp
mov    0x4(%ebp),%edi
mov    0x0(%ebp),%esi
cmp    $0xff,%edi
jle    804e186 <__sprintf_chk@plt+0x5186>
jmp    804e1a8 <__sprintf_chk@plt+0x51a8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
add    $0x8,%esi
cmp    $0x100,%edi
je     804e1a8 <__sprintf_chk@plt+0x51a8>
mov    0x4(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e178 <__sprintf_chk@plt+0x5178>
movzwl (%esi),%eax
xor    $0xf000,%ax
movzwl %ax,%eax
jmp    804e00b <__sprintf_chk@plt+0x500b>
add    $0xc,%ebp
cmp    $0x8059288,%ebp
jne    804e164 <__sprintf_chk@plt+0x5164>
movl   $0x5,0x8(%esp)
movl   $0x8052796,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    $0xffffffff,%eax
jmp    804e00b <__sprintf_chk@plt+0x500b>
xchg   %ax,%ax
and    $0xff,%eax
or     $0x8,%ah
jmp    804e00b <__sprintf_chk@plt+0x500b>
xor    %si,%si
jmp    804e218 <__sprintf_chk@plt+0x5218>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    $0x60,%esi
je     804e244 <__sprintf_chk@plt+0x5244>
mov    0x8059c24(,%esi,8),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e210 <__sprintf_chk@plt+0x5210>
movl   $0x5,0x8(%esp)
movl   $0x8052735,0x4(%esp)
jmp    804e12b <__sprintf_chk@plt+0x512b>
xor    %si,%si
jmp    804e258 <__sprintf_chk@plt+0x5258>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmp    $0x60,%esi
je     804e284 <__sprintf_chk@plt+0x5284>
mov    0x8059f24(,%esi,8),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e250 <__sprintf_chk@plt+0x5250>
movl   $0x5,0x8(%esp)
movl   $0x805274e,0x4(%esp)
jmp    804e12b <__sprintf_chk@plt+0x512b>
xor    %si,%si
jmp    804e298 <__sprintf_chk@plt+0x5298>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmp    $0x60,%esi
je     804e2c4 <__sprintf_chk@plt+0x52c4>
mov    0x805a224(,%esi,8),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e290 <__sprintf_chk@plt+0x5290>
movl   $0x5,0x8(%esp)
movl   $0x8052766,0x4(%esp)
jmp    804e12b <__sprintf_chk@plt+0x512b>
xor    %si,%si
mov    0x805a524(,%esi,8),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
je     804e2eb <__sprintf_chk@plt+0x52eb>
add    $0x1,%esi
cmp    $0x60,%esi
jne    804e2c7 <__sprintf_chk@plt+0x52c7>
jmp    804e1b3 <__sprintf_chk@plt+0x51b3>
movl   $0x5,0x8(%esp)
movl   $0x805277e,0x4(%esp)
jmp    804e12b <__sprintf_chk@plt+0x512b>
sub    $0x2c,%esp
mov    %ebx,0x20(%esp)
mov    0x30(%esp),%ebx
mov    %esi,0x24(%esp)
mov    0x34(%esp),%esi
mov    %edi,0x28(%esp)
cmp    $0xfff,%ebx
setg   %dl
cmp    $0xffffffff,%esi
mov    %esi,%edi
je     804e3b0 <__sprintf_chk@plt+0x53b0>
mov    %ebx,%eax
sar    $0x8,%eax
cmp    $0x8,%eax
je     804e397 <__sprintf_chk@plt+0x5397>
cmp    $0x7f,%ebx
jle    804e397 <__sprintf_chk@plt+0x5397>
movzbl %dl,%eax
test   %eax,%eax
je     804e34b <__sprintf_chk@plt+0x534b>
mov    %ebx,%ecx
xor    $0xf0,%ch
cmp    $0x7f,%ecx
jle    804e3c8 <__sprintf_chk@plt+0x53c8>
cmp    $0x1,%edi
jne    804e354 <__sprintf_chk@plt+0x5354>
test   %dl,%dl
jne    804e387 <__sprintf_chk@plt+0x5387>
or     %edi,%eax
je     804e397 <__sprintf_chk@plt+0x5397>
mov    %ebx,(%esp)
mov    %dl,0x1c(%esp)
call   804de90 <__sprintf_chk@plt+0x4e90>
movzbl 0x1c(%esp),%edx
test   %eax,%eax
je     804e383 <__sprintf_chk@plt+0x5383>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804df70 <__sprintf_chk@plt+0x4f70>
cmp    $0xfff,%eax
mov    %eax,%ebx
setg   %dl
test   %dl,%dl
je     804e397 <__sprintf_chk@plt+0x5397>
cmp    $0x1,%esi
mov    %ebx,%eax
sete   %dl
xor    $0xf0,%ah
test   %dl,%dl
cmovne %eax,%ebx
mov    %ebx,%eax
mov    0x24(%esp),%esi
mov    0x20(%esp),%ebx
mov    0x28(%esp),%edi
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e0e4,%edi
xor    %eax,%eax
test   %edi,%edi
setne  %al
mov    %eax,%edi
jmp    804e32b <__sprintf_chk@plt+0x532b>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%ebx
jmp    804e397 <__sprintf_chk@plt+0x5397>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%edx
mov    %edx,%eax
sar    $0x8,%eax
test   %eax,%eax
jne    804e3ee <__sprintf_chk@plt+0x53ee>
mov    0x805e0e4,%eax
test   %eax,%eax
je     804e420 <__sprintf_chk@plt+0x5420>
cmp    $0x7f,%edx
jle    804e420 <__sprintf_chk@plt+0x5420>
mov    %edx,%eax
xor    $0xf0,%ah
cmp    $0xff,%eax
jg     804e408 <__sprintf_chk@plt+0x5408>
or     $0xb,%ah
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x4(%esp)
mov    %edx,(%esp)
call   804e300 <__sprintf_chk@plt+0x5300>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl %dl,%eax
add    $0x1c,%esp
or     $0xb,%ah
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048d90 <malloc@plt>
test   %eax,%eax
je     804e447 <__sprintf_chk@plt+0x5447>
add    $0x1c,%esp
ret
call   8049010 <__sprintf_chk@plt+0x10>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048d80 <realloc@plt>
test   %eax,%eax
je     804e46f <__sprintf_chk@plt+0x546f>
add    $0x1c,%esp
ret
nop
call   8049010 <__sprintf_chk@plt+0x10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048e80 <__strdup@plt>
test   %eax,%eax
je     804e497 <__sprintf_chk@plt+0x5497>
add    $0x1c,%esp
ret
call   8049010 <__sprintf_chk@plt+0x10>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048f00 <strndup@plt>
test   %eax,%eax
je     804e4bf <__sprintf_chk@plt+0x54bf>
add    $0x1c,%esp
ret
nop
call   8049010 <__sprintf_chk@plt+0x10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     804e4e3 <__sprintf_chk@plt+0x54e3>
mov    %eax,(%esp)
call   8048c60 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
mov    (%eax),%eax
movl   $0x1,0x80611c0
00
mov    %eax,(%esp)
call   8048e30 <strlen@plt>
mov    $0x80611e0,%ecx
mov    (%ecx),%ebx
add    $0x4,%ecx
lea    -0x1010101(%ebx),%edx
not    %ebx
and    %ebx,%edx
and    $0x80808080,%edx
je     804e510 <__sprintf_chk@plt+0x5510>
mov    %edx,%ebx
shr    $0x10,%ebx
test   $0x8080,%edx
cmove  %ebx,%edx
lea    0x2(%ecx),%ebx
cmove  %ebx,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
sub    $0x80611e0,%ecx
lea    0x2(%ecx,%eax,1),%eax
mov    %eax,(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
movl   $0x80611e0,0x14(%esp)
mov    %eax,%ebx
mov    (%esi),%eax
movl   $0x804f119,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %ebx,(%esp)
call   8049000 <__sprintf_chk@plt>
movl   $0x8052825,0x4(%esp)
mov    %ebx,(%esp)
call   8048cc0 <popen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e5a8 <__sprintf_chk@plt+0x55a8>
mov    %ebx,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x805701b,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
jmp    804e600 <__sprintf_chk@plt+0x5600>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x8052825,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8048e70 <fopen@plt>
test   %eax,%eax
mov    %eax,%edi
je     804e688 <__sprintf_chk@plt+0x5688>
movl   $0x2e,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8048f30 <strrchr@plt>
test   %eax,%eax
mov    %eax,%esi
je     804e688 <__sprintf_chk@plt+0x5688>
mov    0x805ddf0,%edx
test   %edx,%edx
je     804e688 <__sprintf_chk@plt+0x5688>
mov    $0x805ddec,%ebx
jmp    804e65a <__sprintf_chk@plt+0x565a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%ebx
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804e688 <__sprintf_chk@plt+0x5688>
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e650 <__sprintf_chk@plt+0x5650>
mov    %edi,(%esp)
call   8048c90 <fclose@plt>
add    $0x10,%esp
lea    0x4(%ebx),%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    804e4f0 <__sprintf_chk@plt+0x54f0>
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    804e6a0 <__sprintf_chk@plt+0x56a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    %edx,(%esp)
mov    %eax,0x44(%esp)
mov    %edx,0x38(%esp)
mov    %ecx,0x40(%esp)
movl   $0x0,0x80611c0
00
call   8048fe0 <opendir@plt>
test   %eax,%eax
mov    %eax,%edi
je     804eaf9 <__sprintf_chk@plt+0x5af9>
mov    0x38(%esp),%edx
mov    %edx,(%esp)
call   8048e30 <strlen@plt>
movl   $0x2f,0x4(%esp)
mov    %eax,%ebx
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8048e20 <strchr@plt>
movl   $0x0,0x3c(%esp)
test   %eax,%eax
mov    %eax,0x30(%esp)
je     804e71c <__sprintf_chk@plt+0x571c>
sub    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804e4a0 <__sprintf_chk@plt+0x54a0>
mov    %eax,0x3c(%esp)
add    $0x2,%ebx
movl   $0x0,0x2c(%esp)
mov    %ebx,0x34(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8048f10 <readdir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804e9f0 <__sprintf_chk@plt+0x59f0>
lea    0xb(%ebx),%esi
mov    %esi,(%esp)
call   8048e30 <strlen@plt>
cmp    $0x2,%eax
ja     804e770 <__sprintf_chk@plt+0x5770>
cmpb   $0x2e,0xb(%ebx)
jne    804e770 <__sprintf_chk@plt+0x5770>
movzbl 0xc(%ebx),%edx
test   %dl,%dl
je     804e730 <__sprintf_chk@plt+0x5730>
cmp    $0x2e,%dl
jne    804e770 <__sprintf_chk@plt+0x5770>
cmpb   $0x0,0xd(%ebx)
je     804e730 <__sprintf_chk@plt+0x5730>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebp
add    %eax,%ebp
cmp    $0x1000,%ebp
ja     804e998 <__sprintf_chk@plt+0x5998>
mov    0x30(%esp),%ecx
test   %ecx,%ecx
je     804eb00 <__sprintf_chk@plt+0x5b00>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804eb00 <__sprintf_chk@plt+0x5b00>
mov    0x40(%esp),%ecx
movl   $0x1,0x48(%esp)
test   %ecx,%ecx
setne  0x4c(%esp)
mov    %ebp,(%esp)
call   804e430 <__sprintf_chk@plt+0x5430>
mov    0x38(%esp),%edx
mov    %esi,0x14(%esp)
movl   $0x8057030,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8049000 <__sprintf_chk@plt>
lea    0x58(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   8048d20 <__xstat@plt>
test   %eax,%eax
jne    804e81f <__sprintf_chk@plt+0x581f>
mov    0x68(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804ea28 <__sprintf_chk@plt+0x5a28>
mov    %ebp,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
jne    804e730 <__sprintf_chk@plt+0x5730>
mov    0x30(%esp),%edx
test   %edx,%edx
jne    804e730 <__sprintf_chk@plt+0x5730>
movzbl 0xb(%ebx),%eax
mov    %esi,%edx
test   %al,%al
je     804ead8 <__sprintf_chk@plt+0x5ad8>
mov    0x44(%esp),%ecx
movzbl (%ecx),%ebx
cmp    %bl,%al
jne    804e877 <__sprintf_chk@plt+0x5877>
mov    %ecx,%eax
jmp    804e866 <__sprintf_chk@plt+0x5866>
lea    0x0(%esi,%eiz,1),%esi
cmp    %bl,%cl
mov    %ebp,%eax
jne    804e877 <__sprintf_chk@plt+0x5877>
add    $0x1,%edx
movzbl 0x1(%eax),%ebx
movzbl (%edx),%ecx
lea    0x1(%eax),%ebp
test   %cl,%cl
jne    804e860 <__sprintf_chk@plt+0x5860>
test   %bl,%bl
jne    804e730 <__sprintf_chk@plt+0x5730>
mov    0x38(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x8057030,0xc(%esp)
movl   $0x1000,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80611e0,(%esp)
mov    %edx,0x28(%esp)
call   8049000 <__sprintf_chk@plt>
lea    0x58(%esp),%ecx
mov    %ecx,0x8(%esp)
movl   $0x80611e0,0x4(%esp)
movl   $0x3,(%esp)
call   8048d20 <__xstat@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    804e730 <__sprintf_chk@plt+0x5730>
mov    0x68(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804e730 <__sprintf_chk@plt+0x5730>
mov    0xd0(%esp),%eax
mov    (%eax),%ebx
test   %ebx,%ebx
je     804e730 <__sprintf_chk@plt+0x5730>
mov    0x805ddf0,%ecx
mov    %eax,%ebp
mov    %edx,%esi
mov    %edi,0x48(%esp)
mov    %ecx,0x4c(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
je     804eaec <__sprintf_chk@plt+0x5aec>
mov    %ebx,(%esp)
call   8048e30 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%edi
call   8048f80 <strncmp@plt>
test   %eax,%eax
jne    804eabb <__sprintf_chk@plt+0x5abb>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     804eabb <__sprintf_chk@plt+0x5abb>
lea    (%esi,%edi,1),%ebx
mov    $0x805ddec,%edi
jmp    804e96e <__sprintf_chk@plt+0x596e>
xchg   %ax,%ax
add    $0x8,%edi
mov    0x4(%edi),%eax
test   %eax,%eax
je     804eabb <__sprintf_chk@plt+0x5abb>
mov    (%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048c40 <strcmp@plt>
test   %eax,%eax
jne    804e960 <__sprintf_chk@plt+0x5960>
mov    %edi,%esi
mov    0x48(%esp),%edi
lea    0x4(%esi),%eax
call   804e4f0 <__sprintf_chk@plt+0x54f0>
mov    %eax,%edx
jmp    804ea92 <__sprintf_chk@plt+0x5a92>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8057060,0x4(%esp)
movl   $0x0,(%esp)
call   8048ca0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %esi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x805de20,%eax
mov    %eax,(%esp)
call   8048f60 <__fprintf_chk@plt>
mov    %edi,(%esp)
call   8048f10 <readdir@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804e742 <__sprintf_chk@plt+0x5742>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    804ea90 <__sprintf_chk@plt+0x5a90>
mov    0x40(%esp),%eax
test   %eax,%eax
jle    804ea90 <__sprintf_chk@plt+0x5a90>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8048db0 <seekdir@plt>
movl   $0x1,0x2c(%esp)
jmp    804e730 <__sprintf_chk@plt+0x5730>
lea    0x0(%esi),%esi
mov    0x48(%esp),%edx
xor    %ax,%ax
test   %edx,%edx
jne    804ea70 <__sprintf_chk@plt+0x5a70>
cmpb   $0x0,0x4c(%esp)
je     804ea56 <__sprintf_chk@plt+0x5a56>
mov    0xd0(%esp),%eax
mov    %ebp,%edx
mov    0x40(%esp),%ecx
mov    %eax,(%esp)
mov    0x44(%esp),%eax
sub    $0x1,%ecx
call   804e6a0 <__sprintf_chk@plt+0x56a0>
test   %eax,%eax
je     804e81f <__sprintf_chk@plt+0x581f>
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    0x28(%esp),%edx
jmp    804ea92 <__sprintf_chk@plt+0x5a92>
mov    0xd0(%esp),%edx
xor    %ecx,%ecx
mov    0x30(%esp),%eax
mov    %edx,(%esp)
mov    %ebp,%edx
add    $0x1,%eax
call   804e6a0 <__sprintf_chk@plt+0x56a0>
test   %eax,%eax
jne    804ea56 <__sprintf_chk@plt+0x5a56>
jmp    804ea33 <__sprintf_chk@plt+0x5a33>
xor    %edx,%edx
mov    0x3c(%esp),%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    %edi,(%esp)
call   8048fd0 <closedir@plt>
mov    0x28(%esp),%edx
add    $0xbc,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x4,%ebp
mov    0x0(%ebp),%ebx
test   %ebx,%ebx
jne    804e912 <__sprintf_chk@plt+0x5912>
mov    0x48(%esp),%edi
jmp    804e730 <__sprintf_chk@plt+0x5730>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
movzbl (%eax),%ebx
test   %bl,%bl
jne    804e730 <__sprintf_chk@plt+0x5730>
jmp    804e87f <__sprintf_chk@plt+0x587f>
mov    0x48(%esp),%edi
call   804e600 <__sprintf_chk@plt+0x5600>
mov    %eax,%edx
jmp    804ea92 <__sprintf_chk@plt+0x5a92>
xor    %edx,%edx
jmp    804eaae <__sprintf_chk@plt+0x5aae>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804e827 <__sprintf_chk@plt+0x5827>
mov    0x40(%esp),%eax
test   %eax,%eax
je     804e827 <__sprintf_chk@plt+0x5827>
movb   $0x1,0x4c(%esp)
movl   $0x0,0x48(%esp)
jmp    804e7b9 <__sprintf_chk@plt+0x57b9>
lea    0x0(%esi),%esi
mov    0x80611c0,%edx
mov    0x4(%esp),%eax
test   %edx,%edx
jne    804eb48 <__sprintf_chk@plt+0x5b48>
mov    %eax,0x4(%esp)
jmp    8048c90 <fclose@plt>
nop
jmp    8048e00 <pclose@plt>
lea    0x0(%esi),%esi
mov    0x8(%esp),%ecx
mov    0x4(%esp),%eax
test   %ecx,%ecx
jne    804eb68 <__sprintf_chk@plt+0x5b68>
mov    %eax,0x4(%esp)
jmp    8048c90 <fclose@plt>
lea    0x0(%esi),%esi
jmp    8048e00 <pclose@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%edi
mov    0xb4(%esp),%esi
mov    %edi,(%esp)
call   8048e30 <strlen@plt>
cmp    $0xfff,%eax
ja     804ebd0 <__sprintf_chk@plt+0x5bd0>
add    $0x1,%eax
movl   $0x1000,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8048dc0 <__memcpy_chk@plt>
call   804e600 <__sprintf_chk@plt+0x5600>
test   %eax,%eax
mov    %eax,%ebp
je     804ebe0 <__sprintf_chk@plt+0x5be0>
add    $0x9c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x9c,%esp
xor    %ebp,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpb   $0x2f,(%edi)
je     804ecac <__sprintf_chk@plt+0x5cac>
mov    (%esi),%ebx
test   %ebx,%ebx
je     804ebd0 <__sprintf_chk@plt+0x5bd0>
mov    %edi,0x24(%esp)
mov    0xb8(%esp),%edi
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8048e30 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     804eca8 <__sprintf_chk@plt+0x5ca8>
cmpb   $0x2a,-0x1(%ebx,%eax,1)
jne    804ec75 <__sprintf_chk@plt+0x5c75>
xor    %ebp,%ebp
jmp    804ec2c <__sprintf_chk@plt+0x5c2c>
lea    0x0(%esi),%esi
movzbl -0x1(%ebx,%edx,1),%ecx
mov    %edx,%eax
cmp    $0x2a,%cl
jne    804ec80 <__sprintf_chk@plt+0x5c80>
add    $0x1,%ebp
sub    $0x1,%edx
jne    804ec20 <__sprintf_chk@plt+0x5c20>
movl   $0x805703d,(%esp)
call   804e480 <__sprintf_chk@plt+0x5480>
mov    %eax,%ebx
mov    0x24(%esp),%eax
mov    %ebp,%ecx
mov    %ebx,%edx
mov    %edi,(%esp)
add    $0x4,%esi
call   804e6a0 <__sprintf_chk@plt+0x56a0>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   804e4d0 <__sprintf_chk@plt+0x54d0>
mov    (%esi),%ebx
test   %ebx,%ebx
je     804ebc1 <__sprintf_chk@plt+0x5bc1>
test   %ebp,%ebp
je     804ec00 <__sprintf_chk@plt+0x5c00>
lea    0x0(%esi),%esi
jmp    804ebc1 <__sprintf_chk@plt+0x5bc1>
movzbl -0x1(%ebx,%eax,1),%ecx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2f,%cl
je     804ec91 <__sprintf_chk@plt+0x5c91>
jmp    804ec98 <__sprintf_chk@plt+0x5c98>
nop
cmpb   $0x2f,-0x1(%ebx,%edx,1)
mov    %edx,%eax
jne    804ec98 <__sprintf_chk@plt+0x5c98>
sub    $0x1,%edx
jne    804ec88 <__sprintf_chk@plt+0x5c88>
jmp    804ec34 <__sprintf_chk@plt+0x5c34>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804e4a0 <__sprintf_chk@plt+0x54a0>
mov    %eax,%ebx
jmp    804ec42 <__sprintf_chk@plt+0x5c42>
xor    %ebp,%ebp
jmp    804ec34 <__sprintf_chk@plt+0x5c34>
mov    %edi,(%esp)
call   8048e30 <strlen@plt>
mov    0xb8(%esp),%edx
mov    (%edx),%esi
add    $0x1,%eax
mov    %eax,0x28(%esp)
test   %esi,%esi
je     804ebc1 <__sprintf_chk@plt+0x5bc1>
mov    %ebp,0x2c(%esp)
mov    %edx,%ebp
mov    %edi,0x24(%esp)
jmp    804ece6 <__sprintf_chk@plt+0x5ce6>
add    $0x4,%ebp
mov    0x0(%ebp),%esi
test   %esi,%esi
je     804ee2f <__sprintf_chk@plt+0x5e2f>
mov    %esi,(%esp)
call   8048e30 <strlen@plt>
mov    0x28(%esp),%ebx
add    %eax,%ebx
cmp    $0x1000,%ebx
ja     804ecd8 <__sprintf_chk@plt+0x5cd8>
mov    0x24(%esp),%edx
mov    %esi,0x14(%esp)
movl   $0x8057038,0xc(%esp)
movl   $0x1000,0x8(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8049000 <__sprintf_chk@plt>
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x80611e0,0x4(%esp)
movl   $0x3,(%esp)
call   8048d20 <__xstat@plt>
test   %eax,%eax
jne    804ed60 <__sprintf_chk@plt+0x5d60>
mov    0x48(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804ee38 <__sprintf_chk@plt+0x5e38>
mov    0x805ddf0,%eax
mov    $0x805ddec,%esi
test   %eax,%eax
jne    804ed86 <__sprintf_chk@plt+0x5d86>
jmp    804ecd8 <__sprintf_chk@plt+0x5cd8>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%esi
mov    0x4(%esi),%edi
test   %edi,%edi
je     804ecd8 <__sprintf_chk@plt+0x5cd8>
mov    (%esi),%edi
mov    %edi,(%esp)
call   8048e30 <strlen@plt>
add    %ebx,%eax
cmp    $0x1000,%eax
ja     804ed78 <__sprintf_chk@plt+0x5d78>
mov    0x24(%esp),%edx
mov    %edi,0x18(%esp)
mov    0x0(%ebp),%eax
movl   $0x8057036,0xc(%esp)
movl   $0x1000,0x8(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x14(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8049000 <__sprintf_chk@plt>
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x80611e0,0x4(%esp)
movl   $0x3,(%esp)
call   8048d20 <__xstat@plt>
test   %eax,%eax
jne    804ed78 <__sprintf_chk@plt+0x5d78>
mov    0x48(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804ed78 <__sprintf_chk@plt+0x5d78>
movl   $0x4,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8048ed0 <access@plt>
test   %eax,%eax
jne    804ed78 <__sprintf_chk@plt+0x5d78>
lea    0x4(%esi),%eax
call   804e4f0 <__sprintf_chk@plt+0x54f0>
mov    %eax,%ebp
jmp    804ebc1 <__sprintf_chk@plt+0x5bc1>
mov    0x2c(%esp),%ebp
jmp    804ebc1 <__sprintf_chk@plt+0x5bc1>
movl   $0x8052825,0x4(%esp)
movl   $0x80611e0,(%esp)
call   8048e70 <fopen@plt>
test   %eax,%eax
je     804ed60 <__sprintf_chk@plt+0x5d60>
mov    %eax,%ebp
jmp    804ebc1 <__sprintf_chk@plt+0x5bc1>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a790 <__sprintf_chk@plt+0x1790>
add    $0xa195,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048be8 <__strcat_chk@plt-0x38>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804eeb9 <__sprintf_chk@plt+0x5eb9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804ee98 <__sprintf_chk@plt+0x5e98>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804eed0 <__sprintf_chk@plt+0x5ed0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
push   %ebx
sub    $0x8,%esp
call   804a790 <__sprintf_chk@plt+0x1790>
add    $0xa123,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
pop    %esp
and    $0x6f3330,%eax
pop    %esp
and    $0x2c270063,%eax
and    %al,(%eax)
daa
add    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    804ef41 <_IO_stdin_used+0x3d>
arpl   %bp,0x6d(%edi)
jo     804ef95 <_IO_stdin_used+0x91>
jae    804ef8d <_IO_stdin_used+0x89>
and    %ah,0x66(%ebp,%eiz,2)
imul   $0x6e6f6974,0x69(%esi),%ebp
jae    804ef3f <_IO_stdin_used+0x3b>
add    %cl,0x44(%ebx)
push   %ebx
dec    %ebx
inc    %edx
inc    %esp
dec    %ecx
inc    %ecx
inc    %ebx
push   %edx
push   %ebp
inc    %ebx
add    %cl,0x44(%ebx)
push   %ebx
dec    %ebx
inc    %edx
inc    %esp
dec    %ecx
inc    %ecx
inc    %ebx
push   %edx
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804efc2 <_IO_stdin_used+0xbe>
jae    804efba <_IO_stdin_used+0xb6>
and    %dh,0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x76(%edi)
gs
jb     804efc7 <_IO_stdin_used+0xc3>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804ef6f <_IO_stdin_used+0x6b>
add    %ch,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73250031,%eax
cmp    0x25203a64,%ah
jae    804ef85 <_IO_stdin_used+0x81>
add    %ah,0x25203a73
jae    804efbd <_IO_stdin_used+0xb9>
and    $0x203a64,%eax
jae    804f003 <_IO_stdin_used+0xff>
outsb  %ds:(%esi),(%dx)
je     804efee <_IO_stdin_used+0xea>
js     804efaf <_IO_stdin_used+0xab>
gs
jb     804f004 <_IO_stdin_used+0x100>
outsl  %ds:(%esi),(%dx)
jb     804ef95 <_IO_stdin_used+0x91>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804f014 <_IO_stdin_used+0x110>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %bl,%fs:%gs:(%ebx)
pop    %ebx
pop    %ebx
inc    %ecx
add    %bl,(%ebx)
pop    %ebx
pop    %ebx
inc    %edx
add    %bl,(%ebx)
pop    %ebx
pop    %ebx
inc    %ebx
add    %bl,(%ebx)
pop    %ebx
pop    %ebx
inc    %esp
add    %bl,(%ebx)
pop    %ebx
pop    %ebx
inc    %ebp
add    %bl,(%ebx)
pop    %ebx
xor    %esi,(%edi)
jle    804efc5 <_IO_stdin_used+0xc1>
sbb    0x31(%ebx),%ebx
cmp    %bh,0x0(%esi)
sbb    0x31(%ebx),%ebx
cmp    %edi,0x0(%esi)
sbb    0x32(%ebx),%ebx
xor    %bh,0x0(%esi)
sbb    0x32(%ebx),%ebx
xor    %edi,0x0(%esi)
sbb    0x32(%ebx),%ebx
xor    0x0(%esi),%edi
sbb    0x32(%ebx),%ebx
xor    $0x7e,%al
add    %bl,(%ebx)
pop    %ebx
xor    0x5b1b007e,%dh
xor    (%esi),%dh
jle    804eff5 <_IO_stdin_used+0xf1>
sbb    0x32(%ebx),%ebx
cmp    %bh,0x0(%esi)
sbb    0x32(%ebx),%ebx
cmp    %edi,0x0(%esi)
sbb    0x33(%ebx),%ebx
xor    %edi,0x0(%esi)
sbb    0x33(%ebx),%ebx
xor    0x0(%esi),%bh
sbb    0x33(%ebx),%ebx
xor    0x0(%esi),%edi
sbb    0x33(%ebx),%ebx
xor    $0x7e,%al
add    %bl,(%ebx)
pop    %ebx
xor    %edi,0x0(%esi)
sbb    0x32(%ebx),%ebx
jle    804f023 <_IO_stdin_used+0x11f>
sbb    0x33(%ebx),%ebx
jle    804f028 <_IO_stdin_used+0x124>
sbb    0x34(%ebx),%ebx
jle    804f02d <_IO_stdin_used+0x129>
sbb    0x35(%ebx),%ebx
jle    804f032 <_IO_stdin_used+0x12e>
sbb    0x36(%ebx),%ebx
jle    804f037 <_IO_stdin_used+0x133>
dec    %esp
outsl  %ds:(%esi),(%dx)
popa
imul   $0xa732520,%fs:0x67(%esi),%ebp
add    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     804f0a9 <_IO_stdin_used+0x1a5>
js     804f06a <_IO_stdin_used+0x166>
gs
jb     804f0bf <_IO_stdin_used+0x1bb>
outsl  %ds:(%esi),(%dx)
jb     804f070 <_IO_stdin_used+0x16c>
imul   $0x2070616d,0x20(%esi),%ebp
imul   $0x6b00,0xa(%ebp,%eiz,2),%bp
gs
jns    804f081 <_IO_stdin_used+0x17d>
bound  %ebp,0x6e(%ecx)
imul   $0x6f6e2073,%fs:0x67(%esi),%ebp
je     804f08e <_IO_stdin_used+0x18a>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs or  %fs:%gs:(%bx,%si),%al
jo     804f0e5 <_IO_stdin_used+0x1e1>
popa
imul   $0x2f00090a,0x0(%esi),%ebp
jne    804f0f6 <_IO_stdin_used+0x1f2>
jb     804f0b4 <_IO_stdin_used+0x1b0>
jae    804f0ef <_IO_stdin_used+0x1eb>
popa
jb     804f0ef <_IO_stdin_used+0x1eb>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebx)
add    %ah,%fs:0x72662073
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6b000a73
bound  %esp,0x31(%eax,%eiz,1)
xor    %esi,%cs:0x6400352e
imul   $0x6d,%gs:0x79(%ebp),%sp
popa
jo     804f0e5 <_IO_stdin_used+0x1e1>
insl   (%dx),%es:(%edi)
popa
jo     804f0bb <_IO_stdin_used+0x1b7>
popa
bound  %esp,0x43(%ebx)
cmp    0x6d(%eax,%ebp,2),%ah
jae    804f13a <_IO_stdin_used+0x236>
jno    804f13d <_IO_stdin_used+0x239>
push   %esi
add    %cl,0x41(%edi,%ecx,2)
inc    %esp
dec    %ebx
inc    %ebp
pop    %ecx
push   %ebx
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
dec    %ebp
inc    %ecx
push   %eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %dl,0x65(%ebx)
popa
jb     804f146 <_IO_stdin_used+0x242>
push   $0x20676e69
imul   $0xa7325,0x20(%esi),%ebp
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f116 <_IO_stdin_used+0x212>
imul   $0x2520,0x64(%esi),%bp
jae    804f108 <_IO_stdin_used+0x204>
add    %ch,0x3a5f2f
arpl   %bp,0x62(%ebx)
arpl   %bp,0x6d(%edi)
jo     804f12c <_IO_stdin_used+0x228>
sub    $0x65646f6d,%eax
insb   (%dx),%es:(%edi)
and    %dh,0x63(%eax)
xor    %esi,(%eax)
xor    $0x20732520,%eax
and    $0x6b630073,%eax
bound  %esp,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804f147 <_IO_stdin_used+0x243>
sub    $0x65646f6d,%eax
insb   (%dx),%es:(%edi)
and    %dh,0x63(%eax)
xor    %esi,(%eax)
xor    $0x732520,%eax
inc    %ebp
jb     804f1ac <_IO_stdin_used+0x2a8>
outsl  %ds:(%esi),(%dx)
jb     804f15d <_IO_stdin_used+0x259>
ja     804f1b1 <_IO_stdin_used+0x2ad>
imul   $0x616d2067,0x6e(%ecx,%ebp,2),%esi
jo     804f169 <_IO_stdin_used+0x265>
je     804f1ba <_IO_stdin_used+0x2b6>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    0x6e(%ecx),%ebp
arpl   %bp,0x64(%ebp,%esi,2)
and    %bh,%gs:(%esp,%ebp,2)
imul   $0x79742f78,0x75(%esi),%ebp
jo     804f1cb <_IO_stdin_used+0x2c7>
jae    804f196 <_IO_stdin_used+0x292>
push   $0x6923003e
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x64(%ebp,%esi,2)
and    %bh,%gs:(%esp,%ebp,2)
imul   $0x656b2f78,0x75(%esi),%ebp
jns    804f1e1 <_IO_stdin_used+0x2dd>
outsl  %ds:(%esi),(%dx)
popa
jb     804f1e7 <_IO_stdin_used+0x2e3>
cs
push   $0x6923003e
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x64(%ebp,%esi,2)
and    %bh,%gs:(%esp,%ebp,2)
imul   $0x646b2f78,0x75(%esi),%ebp
cs
push   $0x73000a3e
je     804f202 <_IO_stdin_used+0x2fe>
je     804f20c <_IO_stdin_used+0x308>
arpl   %sp,(%eax)
add    %dh,0x5f(%ebp)
jae    804f212 <_IO_stdin_used+0x30e>
outsl  %ds:(%esi),(%dx)
jb     804f221 <_IO_stdin_used+0x31d>
and    %ah,0x616d5f73
jo     804f210 <_IO_stdin_used+0x30c>
dec    %esi
push   %edx
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
push   %ebx
pop    %ebp
and    %bh,0x9007b20
xor    %bh,0x25(%eax)
xor    %dh,(%eax,%edi,2)
sub    $0x0,%al
or     0x3b(%ebp),%bh
or     (%eax),%al
and    $0x616d5f73,%eax
jo     804f203 <_IO_stdin_used+0x2ff>
add    %cl,(%ecx)
xor    %al,(%eax)
arpl   %bp,0x61(%eax)
jb     804f200 <_IO_stdin_used+0x2fc>
data16
jne    804f251 <_IO_stdin_used+0x34d>
arpl   %bx,0x62(%edi)
jne    804f24e <_IO_stdin_used+0x34a>
pop    %ebx
pop    %ebp
and    %bh,0x30007b20
sub    $0x20,%al
add    %cl,(%ecx)
data16
jne    804f265 <_IO_stdin_used+0x361>
arpl   %bx,0x62(%edi)
jne    804f262 <_IO_stdin_used+0x35e>
and    %ch,(%ebx)
and    %ah,0xa2c646c
add    %cl,(%ecx)
xor    %ch,(%eax,%eax,1)
jge    804f246 <_IO_stdin_used+0x342>
add    %cl,(%ecx)
jnp    804f20f <_IO_stdin_used+0x30b>
xor    %bh,0x25(%eax)
xor    %dh,(%eax,%edi,2)
jge    804f243 <_IO_stdin_used+0x33f>
add    %cl,0x44(%ebx)
push   %ebx
dec    %ebx
inc    %edx
dec    %ebp
dec    %edi
inc    %esp
inc    %ebp
add    %cl,0x65(%ebx)
jns    804f293 <_IO_stdin_used+0x38f>
popa
jo     804f249 <_IO_stdin_used+0x345>
and    $0x50203a64,%eax
gs
jb     804f29e <_IO_stdin_used+0x39a>
imul   $0x206e6f69,0x73(%ebx),%esi
fs outsb %fs:%gs:(%esi),(%dx)
imul   $0x444b000a,0x64(%ebp),%esp
push   %ebx
dec    %ebx
inc    %edx
inc    %ebp
dec    %esi
push   %esp
add    %ch,0x65(%ebx)
jns    804f2b0 <_IO_stdin_used+0x3ac>
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x74202c64
popa
bound  %ebp,0x20(%ebp,%eiz,2)
and    $0x203d2064,%eax
and    $0xa732564,%eax
add    %ah,0x61(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebx)
jns    804f2e2 <_IO_stdin_used+0x3de>
popa
jo     804f298 <_IO_stdin_used+0x394>
and    $0x66000a64,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x61(%ebp,%eiz,2)
jb     804f2ac <_IO_stdin_used+0x3a8>
jae    804f302 <_IO_stdin_used+0x3fe>
jb     804f2f9 <_IO_stdin_used+0x3f5>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    804f2a0 <_IO_stdin_used+0x39c>
add    %dh,0x74(%ebx)
jb     804f304 <_IO_stdin_used+0x400>
outsb  %ds:(%esi),(%dx)
add    %ch,0x65(%bp,%di)
jns    804f2a2 <_IO_stdin_used+0x39e>
imul   $0x73,0x79(%ebp),%esp
add    %cl,(%edx)
inc    %ebx
push   $0x65676e61
and    %ah,%fs:0x73252064
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x73252064
or     %cs:(%eax),%al
fs imul $0x6974,%fs:%gs:0x69(%esi),%bp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x66(%ebp,%eiz,2)
imul   $0x6e6f6974,0x69(%esi),%ebp
jae    804f2d9 <_IO_stdin_used+0x3d5>
dec    %esp
outsl  %ds:(%esi),(%dx)
popa
fs gs and %ah,%fs:%gs:0x6f632064
6f
insl   (%dx),%es:(%edi)
jo     804f357 <_IO_stdin_used+0x453>
jae    804f34f <_IO_stdin_used+0x44b>
and    %ah,0xa2e73
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804f317 <_IO_stdin_used+0x413>
outsl  %ds:(%esi),(%dx)
jo     804f35f <_IO_stdin_used+0x45b>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x20000a73
and    %ah,(%eax)
and    %al,0x41(%esi)
dec    %ecx
dec    %esp
inc    %ebp
inc    %esp
add    %ah,0x73(%ecx)
arpl   %bp,0x69(%ecx)
add    %ah,0x6b(%edx)
gs
jns    804f388 <_IO_stdin_used+0x484>
popa
jo     804f31e <_IO_stdin_used+0x41a>
arpl   %bp,0x61(%ebp,%eiz,2)
jb     804f387 <_IO_stdin_used+0x483>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     804f397 <_IO_stdin_used+0x493>
jae    804f38f <_IO_stdin_used+0x48b>
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    804f39d <_IO_stdin_used+0x499>
je     804f333 <_IO_stdin_used+0x42f>
push   $0x706c65
insl   (%dx),%es:(%edi)
imul   $0x6c,0x62(%ecx,%eiz,2),%esi
add    %ah,%gs:0x6c(%ebx)
gs
popa
jb     804f3b9 <_IO_stdin_used+0x4b5>
je     804f3ba <_IO_stdin_used+0x4b6>
imul   $0x6e750073,0x67(%esi),%ebp
imul   $0x71006564,0x6f(%ebx),%esp
jne    804f3c1 <_IO_stdin_used+0x4bd>
gs
je     804f35b <_IO_stdin_used+0x457>
jbe    804f3c2 <_IO_stdin_used+0x4be>
jb     804f3c1 <_IO_stdin_used+0x4bd>
outsl  %ds:(%esi),(%dx)
jae    804f3c7 <_IO_stdin_used+0x4c3>
add    %dh,0x65(%esi)
jb     804f3da <_IO_stdin_used+0x4d6>
imul   $0x6d6b2e00,0x6e(%edi),%ebp
popa
jo     804f371 <_IO_stdin_used+0x46d>
das
jne    804f3e7 <_IO_stdin_used+0x4e3>
jb     804f3a5 <_IO_stdin_used+0x4a1>
jae    804f3e0 <_IO_stdin_used+0x4dc>
popa
jb     804f3e0 <_IO_stdin_used+0x4dc>
das
imul   $0x6d,0x79(%ebp),%esp
popa
jo     804f3f6 <_IO_stdin_used+0x4f2>
das
sub    (%edx),%ch
add    %dh,0x68(%ebx)
imul   $0x746c6100,0x74(%esi),%esp
addr16 jb 804f393 <_IO_stdin_used+0x48f>
arpl   %si,0x6c(%edx,%esi,2)
add    %ah,0x6c(%ecx)
je     804f39c <_IO_stdin_used+0x498>
jae    804f406 <_IO_stdin_used+0x502>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
jb     804f3a4 <_IO_stdin_used+0x4a0>
arpl   %si,0x0(%esp,%ebp,2)
arpl   %si,0x0(%edx,%esi,2)
and    $0x61203a73,%eax
fs
fs
data16
jne    804f424 <_IO_stdin_used+0x520>
arpl   %di,(%edx)
and    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %bx,0x62(%edi)
jne    804f427 <_IO_stdin_used+0x523>
and    %ch,0x76(%edi)
gs
jb     804f42d <_IO_stdin_used+0x529>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804f3d5 <_IO_stdin_used+0x4d1>
add    %ch,0x61(%edi,%ebp,2)
imul   $0x73,%fs:0x79(%ebp),%esp
cmp    (%eax),%ah
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     804f3fc <_IO_stdin_used+0x4f8>
imul   $0x77,0x6f(%esi),%ebp
and    %ch,0x6f(%eax)
ja     804f405 <_IO_stdin_used+0x501>
je     804f456 <_IO_stdin_used+0x552>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804f45c <_IO_stdin_used+0x558>
jae    804f454 <_IO_stdin_used+0x550>
and    %ah,0x6f(%esi)
jb     804f414 <_IO_stdin_used+0x510>
and    $0x61000a73,%eax
fs
fs
insl   (%dx),%es:(%edi)
popa
jo     804f41f <_IO_stdin_used+0x51b>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     804f472 <_IO_stdin_used+0x56e>
and    %ah,0x61(%edx)
and    %ch,%fs:0x6e(%ecx)
fs
gs
js     804f435 <_IO_stdin_used+0x531>
and    $0x64610064,%eax
imul   $0x70616d20,%fs:0x67(%esi),%ebp
and    %ah,0x69762064
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
popa
je     804f492 <_IO_stdin_used+0x58e>
jae    804f44f <_IO_stdin_used+0x54b>
gs
js     804f4a2 <_IO_stdin_used+0x59e>
insb   (%dx),%es:(%edi)
imul   $0x656b2074,0x69(%ebx),%esp
jns    804f4a9 <_IO_stdin_used+0x5a5>
popa
jo     804f4b2 <_IO_stdin_used+0x5ae>
and    %ch,0x6e(%ecx,%ebp,2)
add    %al,%gs:(%eax)
add    %al,(%eax)
popa
fs imul $0x20,%fs:0x79(%ebp),%esp
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     804f4c2 <_IO_stdin_used+0x5be>
and    %ah,0x61(%edx)
and    %ch,%fs:0x65(%ebx)
jns    804f4c6 <_IO_stdin_used+0x5c2>
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x64
popa
fs imul $0x20,%fs:0x79(%ebp),%esp
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     804f4e6 <_IO_stdin_used+0x5e2>
and    %ah,0x61(%edx)
and    %ch,%fs:0x6e(%ecx)
fs
gs
js     804f4a9 <_IO_stdin_used+0x5a5>
and    $0x64610064,%eax
imul   $0x20,%fs:0x79(%ebp),%esp
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     804f506 <_IO_stdin_used+0x602>
and    %ah,0x61(%edx)
and    %dh,%fs:0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25270064
jae    804f4d7 <_IO_stdin_used+0x5d3>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     804f4d8 <_IO_stdin_used+0x5d4>
popa
and    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    804f4e7 <_IO_stdin_used+0x5e3>
jae    804f542 <_IO_stdin_used+0x63e>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
add    %al,(%eax)
add    %ch,0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x20,0x79(%ebp),%esp
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     804f54b <_IO_stdin_used+0x647>
and    %ah,0x61(%edx)
and    %ch,%fs:0x6e(%ecx)
fs
gs
js     804f50e <_IO_stdin_used+0x60a>
and    $0x64,%eax
add    %ch,0x69(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x20,0x79(%ebp),%esp
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     804f56f <_IO_stdin_used+0x66b>
and    %ah,0x61(%edx)
and    %dh,%fs:0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x64
add    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    804f541 <_IO_stdin_used+0x63d>
sub    %ah,0x65202964
outsb  %ds:(%esi),(%dx)
je     804f59c <_IO_stdin_used+0x698>
imul   $0x206e6f20,0x73(%ebp),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
add    %al,%gs:(%eax)
add    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    804f565 <_IO_stdin_used+0x661>
imul   $0x20,0x79(%ebp),%esp
fs imul $0x6974,%fs:%gs:0x69(%esi),%bp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804f575 <_IO_stdin_used+0x671>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
add    %al,%gs:(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
imul   $0x73,%fs:0x79(%ebp),%esp
and    %dh,0x65(%esi)
jb     804f5e4 <_IO_stdin_used+0x6e0>
imul   $0xa732520,0x6e(%edi),%ebp
or     0x73(%ebp),%dl
popa
cmp    %gs:(%bx,%si),%ah
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
imul   $0x73,%fs:0x79(%ebp),%esp
and    %bl,0x6f(%ebx)
jo     804f601 <_IO_stdin_used+0x6fd>
imul   $0x5d2e2e2e,0x6e(%edi),%ebp
and    %bl,0x6d(%ebx)
popa
jo     804f600 <_IO_stdin_used+0x6fc>
imul   $0xa5d2e2e,0x2e(%ebp,%eiz,2),%ebp
or     0x61(%esi),%dl
insb   (%dx),%es:(%edi)
imul   $0x6f697470,0x6f(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jae    804f5d1 <_IO_stdin_used+0x6cd>
popa
jb     804f619 <_IO_stdin_used+0x715>
cmp    (%edx),%cl
or     (%eax),%ah
and    %ch,0x2d2d2061
popa
jae    804f624 <_IO_stdin_used+0x720>
imul   $0x20202020,0x20(%ecx),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
outsw  %ds:(%esi),(%dx)
jb     804f633 <_IO_stdin_used+0x72f>
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    804f63c <_IO_stdin_used+0x738>
jb     804f64c <_IO_stdin_used+0x748>
imul   $0x206f7420,0x6e(%edi),%ebp
inc    %ecx
push   %ebx
inc    %ebx
dec    %ecx
dec    %ecx
or     (%eax),%ah
and    %ch,0x2d2d2062
bound  %ebp,0x65(%ebx)
jns    804f65f <_IO_stdin_used+0x75b>
popa
jo     804f615 <_IO_stdin_used+0x711>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    804f672 <_IO_stdin_used+0x76e>
jo     804f675 <_IO_stdin_used+0x771>
je     804f622 <_IO_stdin_used+0x71e>
popa
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     804f683 <_IO_stdin_used+0x77f>
and    %ch,0x65(%ebx)
jns    804f67c <_IO_stdin_used+0x778>
popa
jo     804f632 <_IO_stdin_used+0x72e>
je     804f683 <_IO_stdin_used+0x77f>
and    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    804f68f <_IO_stdin_used+0x78b>
or     (%eax),%ah
and    %ch,0x2d2d2063
arpl   %bp,0x61(%ebp,%eiz,2)
jb     804f68c <_IO_stdin_used+0x788>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     804f69c <_IO_stdin_used+0x798>
jae    804f694 <_IO_stdin_used+0x790>
and    %ah,(%eax)
arpl   %bp,0x61(%ebp,%eiz,2)
jb     804f657 <_IO_stdin_used+0x753>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804f6b2 <_IO_stdin_used+0x7ae>
jae    804f6aa <_IO_stdin_used+0x7a6>
and    %dh,0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x2d2d2043
arpl   %bp,0x6e(%edi)
jae    804f6c7 <_IO_stdin_used+0x7c3>
insb   (%dx),%es:(%edi)
gs
cmp    $0x656c6966,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     804f6df <_IO_stdin_used+0x7db>
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    804f6ed <_IO_stdin_used+0x7e9>
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x206f7420,0x65(%ebx),%esp
bound  %esp,0x20(%ebp)
jne    804f703 <_IO_stdin_used+0x7ff>
gs or  %fs:%gs:(%eax),%ah
and    %ch,0x2d2d2064
fs
gs
popaw
jne    804f70c <_IO_stdin_used+0x808>
je     804f6c2 <_IO_stdin_used+0x7be>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:(%edx)
and    $0x200a2273,%eax
and    %ch,0x2d2d2068
push   $0x20706c65
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     804f738 <_IO_stdin_used+0x834>
popa
jns    804f6ef <_IO_stdin_used+0x7eb>
je     804f739 <_IO_stdin_used+0x835>
imul   $0x706c6568,0x20(%ebx),%esi
and    %dh,0x78(%ebp,%eiz,2)
je     804f6e8 <_IO_stdin_used+0x7e4>
and    %ah,(%eax)
sub    $0x2d2d206d,%eax
insl   (%dx),%es:(%edi)
imul   $0x6c,0x62(%ecx,%eiz,2),%esi
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x75(%edi)
je     804f767 <_IO_stdin_used+0x863>
jne    804f76d <_IO_stdin_used+0x869>
and    %ah,0x20(%ecx)
and    0x66(%ebp,%eiz,2),%ah
imul   $0x6d,0x79(%ebp),%esp
popa
jo     804f735 <_IO_stdin_used+0x831>
arpl   %sp,(%edx)
and    %dh,0x20(%edi,%ebp,2)
jae    804f783 <_IO_stdin_used+0x87f>
outsl  %fs:(%esi),(%dx)
jne    804f787 <_IO_stdin_used+0x883>
or     (%eax),%ah
and    %ch,0x2d2d2071
jno    804f792 <_IO_stdin_used+0x88e>
imul   $0x20202020,0x74(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     804f79d <_IO_stdin_used+0x899>
jb     804f794 <_IO_stdin_used+0x890>
jae    804f7a4 <_IO_stdin_used+0x8a0>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
jb     804f7a7 <_IO_stdin_used+0x8a3>
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     804f7b1 <_IO_stdin_used+0x8ad>
jne    804f7b7 <_IO_stdin_used+0x8b3>
or     (%eax),%ah
and    %ch,0x2d2d2073
arpl   %bp,0x61(%ebp,%eiz,2)
jb     804f7c4 <_IO_stdin_used+0x8c0>
je     804f7c5 <_IO_stdin_used+0x8c1>
imul   $0x63202073,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
gs
popa
jb     804f77f <_IO_stdin_used+0x87b>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
jb     804f7d3 <_IO_stdin_used+0x8cf>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%si)
bound  %ebp,0xa(%ebp,%eiz,2)
and    %ah,(%eax)
sub    $0x2d2d2075,%eax
jne    804f7ea <_IO_stdin_used+0x8e6>
imul   $0x20206564,0x6f(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     804f7ef <_IO_stdin_used+0x8eb>
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    804f7f8 <_IO_stdin_used+0x8f4>
jb     804f808 <_IO_stdin_used+0x904>
imul   $0x206f7420,0x6e(%edi),%ebp
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x200a6564,0x6f(%ebx),%esp
and    %ch,0x2d2d2076
jbe    804f812 <_IO_stdin_used+0x90e>
jb     804f811 <_IO_stdin_used+0x90d>
outsl  %ds:(%esi),(%dx)
jae    804f817 <_IO_stdin_used+0x913>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
jo     804f82c <_IO_stdin_used+0x928>
jb     804f833 <_IO_stdin_used+0x92f>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    804f7d6 <_IO_stdin_used+0x8d2>
add    %al,(%eax)
add    %al,(%eax)
and    $0x4f203a73,%eax
jo     804f84b <_IO_stdin_used+0x947>
imul   $0x2d2d2073,0x6e(%edi),%ebp
jne    804f84e <_IO_stdin_used+0x94a>
imul   $0x61206564,0x6f(%ebx),%esp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6373612d
imul   $0x20657261,0x20(%ecx),%ebp
insl   (%dx),%es:(%edi)
jne    804f86d <_IO_stdin_used+0x969>
jne    804f85c <_IO_stdin_used+0x958>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    804f81f <_IO_stdin_used+0x91b>
gs
js     804f865 <_IO_stdin_used+0x961>
insb   (%dx),%es:(%edi)
jne    804f878 <_IO_stdin_used+0x974>
imul   $0xa,0x65(%esi),%esi
and    $0x65203a73,%eax
jb     804f885 <_IO_stdin_used+0x981>
outsl  %ds:(%esi),(%dx)
jb     804f836 <_IO_stdin_used+0x932>
jb     804f87d <_IO_stdin_used+0x979>
popa
imul   $0x79656b20,%fs:0x67(%esi),%ebp
bound  %ebp,0x61(%edi)
jb     804f88a <_IO_stdin_used+0x986>
and    %ch,0x6f(%ebp)
fs cmp %fs:%gs:(%eax),%ah
and    $0xa6d,%eax
add    %al,(%eax)
and    $0x77203a73,%eax
popa
jb     804f8aa <_IO_stdin_used+0x9a6>
imul   $0x6f6c203a,0x67(%esi),%ebp
popa
imul   $0x6e6f6e20,%fs:0x67(%esi),%ebp
sub    $0x63696e55,%eax
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x65(%ebx)
jns    804f8c6 <_IO_stdin_used+0x9c2>
popa
jo     804f87c <_IO_stdin_used+0x978>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x6e(%ebp)
imul   $0x63206564,0x6f(%ebx),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804f8db <_IO_stdin_used+0x9d7>
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ch,(%eax)
jo     804f8db <_IO_stdin_used+0x9d7>
jb     804f8e0 <_IO_stdin_used+0x9dc>
popa
jo     804f8ee <_IO_stdin_used+0x9ea>
and    %bh,0x6f(%ecx)
jne    804f8a0 <_IO_stdin_used+0x99c>
ja     804f8e3 <_IO_stdin_used+0x9df>
outsb  %ds:(%esi),(%dx)
je     804f8a5 <_IO_stdin_used+0x9a1>
je     804f8f6 <_IO_stdin_used+0x9f2>
and    %ah,0x20(%edi,%ebp,2)
pusha
imul   $0x5f,0x64(%edx),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x293f2761
or     (%eax),%al
and    $0x77203a73,%eax
popa
jb     804f912 <_IO_stdin_used+0xa0e>
imul   $0x6f6c203a,0x67(%esi),%ebp
popa
imul   $0x696e5520,%fs:0x67(%esi),%ebp
arpl   %bp,0x64(%edi)
and    %ch,%gs:0x65(%ebx)
jns    804f92a <_IO_stdin_used+0xa26>
popa
jo     804f8e0 <_IO_stdin_used+0x9dc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x63696e55,%eax
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    804f943 <_IO_stdin_used+0xa3f>
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ch,(%eax)
jo     804f943 <_IO_stdin_used+0xa3f>
jb     804f948 <_IO_stdin_used+0xa44>
popa
jo     804f956 <_IO_stdin_used+0xa52>
and    %bh,0x6f(%ecx)
jne    804f908 <_IO_stdin_used+0xa04>
ja     804f94b <_IO_stdin_used+0xa47>
outsb  %ds:(%esi),(%dx)
je     804f90d <_IO_stdin_used+0xa09>
je     804f95e <_IO_stdin_used+0xa5a>
and    %ah,0x20(%edi,%ebp,2)
pusha
imul   $0x5f,0x64(%edx),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x293f2775
or     (%eax),%al
imul   $0x6973736f,0x70(%ebp),%ebp
bound  %ebp,0x20(%ebp,%eiz,2)
gs
jb     804f984 <_IO_stdin_used+0xa80>
outsl  %ds:(%esi),(%dx)
jb     804f935 <_IO_stdin_used+0xa31>
imul   $0x635f6f64,0x20(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804f994 <_IO_stdin_used+0xa90>
popa
outsb  %ds:(%esi),(%dx)
je     804f924 <_IO_stdin_used+0xa20>
das
sub    (%eax),%ah
inc    %esp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     804f94e <_IO_stdin_used+0xa4a>
gs imul $0x20736968,%fs:%gs:0x74(%eax,%eiz,1),%esi
20
imul   $0x4920,0x21(%ebp,%eiz,2),%bp
je     804f961 <_IO_stdin_used+0xa5d>
ja     804f9a4 <_IO_stdin_used+0xaa0>
jae    804f965 <_IO_stdin_used+0xa61>
popa
jne    804f9bc <_IO_stdin_used+0xab8>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     804f9b6 <_IO_stdin_used+0xab2>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    804f973 <_IO_stdin_used+0xa6f>
outsb  %gs:(%si),(%dx)
gs
jb     804f9ba <_IO_stdin_used+0xab6>
je     804f9c0 <_IO_stdin_used+0xabc>
and    %ah,%fs:0x79(%edx)
and    %ah,(%eax)
and    %ch,(%edx)
das
add    %al,(%eax)
add    %al,(%eax)
das
sub    (%eax),%ah
and    %ah,(%eax)
and    %ch,0x61(%edi,%ebp,2)
imul   $0x73,%fs:0x79(%ebp),%esp
and    %ch,0x746b6d2d
popa
bound  %ebp,0x20(%ebp,%eiz,2)
fs imul $0x6d,%fs:%gs:0x79(%ebp),%sp
popa
jo     804f9b9 <_IO_stdin_used+0xab5>
insl   (%dx),%es:(%edi)
popa
jo     804f9af <_IO_stdin_used+0xaab>
and    %ah,%ds:0x66(%ebp,%eiz,2)
imul   $0x6d,0x79(%ebp),%esp
popa
jo     804f9c9 <_IO_stdin_used+0xac5>
arpl   %sp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edx)
das
or     (%eax),%al
add    %al,(%eax)
jne    804fa21 <_IO_stdin_used+0xb1d>
push   $0x2074726f
sub    0x65(%ebx),%ch
jns    804fa17 <_IO_stdin_used+0xb13>
insl   (%dx),%es:(%edi)
popa
jo     804fa2f <_IO_stdin_used+0xb2b>
pop    %ebx
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
dec    %esi
push   %edx
pop    %edi
dec    %ebx
inc    %ebp
pop    %ecx
dec    %ebp
inc    %ecx
push   %eax
push   %ebx
pop    %ebp
and    %bh,0x7b20
add    %al,(%eax)
or     0x3b(%ebp),%bh
or     (%edx),%cl
jne    804fa49 <_IO_stdin_used+0xb45>
jae    804fa46 <_IO_stdin_used+0xb42>
outsb  %ds:(%si),(%dx)
gs and %ch,%fs:%gs:0x6e(%ecx)
je     804fa06 <_IO_stdin_used+0xb02>
imul   $0x6d,0x79(%ebp),%esp
popa
jo     804fa4c <_IO_stdin_used+0xb48>
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     804fa13 <_IO_stdin_used+0xb0f>
cmp    $0x3b642520,%eax
or     (%edx),%cl
add    %al,(%eax)
das
sub    (%edx),%cl
and    %ch,(%edx)
and    %dl,0x68(%eax)
imul   $0x7968706f,0x73(%edi,%ebp,2),%ebp
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    804fa86 <_IO_stdin_used+0xb82>
and    %dh,0x65(%eax)
outsl  %ds:(%esi),(%dx)
jo     804fa84 <_IO_stdin_used+0xb80>
and    %ah,%gs:0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fa41 <_IO_stdin_used+0xb3d>
fs imul $0x6d20,%fs:%gs:0x65(%esi),%bp
outsl  %ds:(%esi),(%dx)
jb     804fa91 <_IO_stdin_used+0xb8d>
and    %dh,0x74(%ebx)
jb     804fa9a <_IO_stdin_used+0xb96>
outsb  %ds:(%esi),(%dx)
addr16 jae 804fa61 <_IO_stdin_used+0xb5d>
and    %ah,0x75(%edx)
je     804fa5a <_IO_stdin_used+0xb56>
je     804faa4 <_IO_stdin_used+0xba0>
gs
jns    804fa5f <_IO_stdin_used+0xb5b>
ja     804faa9 <_IO_stdin_used+0xba5>
outsl  %ds:(%esi),(%dx)
and    %ah,0xa(%edi,%ebp,2)
and    %ch,(%edx)
and    %ch,0x66(%edi)
je     804fab2 <_IO_stdin_used+0xbae>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
outsb  %ds:(%esi),(%dx)
je     804fa74 <_IO_stdin_used+0xb70>
jno    804facb <_IO_stdin_used+0xbc7>
imul   $0x6f6c2061,0x20(%ebp,%eiz,2),%esi
je     804fa80 <_IO_stdin_used+0xb7c>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x74(%ebx)
jb     804fad0 <_IO_stdin_used+0xbcc>
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%bp,%di)
popa
arpl   %sp,0x2e(%ebp)
and    %dl,0x6f(%ebx)
sub    $0x20,%al
ja     804fadc <_IO_stdin_used+0xbd8>
and    %dh,0x74(%ebx)
popa
je     804fae6 <_IO_stdin_used+0xbe2>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    804faa3 <_IO_stdin_used+0xb9f>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
or     %gs:(%eax),%ah
sub    (%eax),%ah
je     804faf9 <_IO_stdin_used+0xbf5>
and    %ah,%gs:0x66(%ebp,%eiz,2)
popa
jne    804fb05 <_IO_stdin_used+0xc01>
je     804fabb <_IO_stdin_used+0xbb7>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x20796c6c,0x61(%ebx),%esp
imul   $0x6e756863,0x20(%esi),%ebp
imul   $0x6f,0x20(%ebx),%esi
data16
and    %dh,0x62203231
jns    804fb3c <_IO_stdin_used+0xc38>
gs
jae    804faf9 <_IO_stdin_used+0xbf5>
or     (%eax),%ah
sub    (%edi),%ch
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
jae    804fb4b <_IO_stdin_used+0xc47>
jb     804fb4e <_IO_stdin_used+0xc4a>
arpl   %si,0x6b(%eax,%eiz,1)
bound  %esp,0x61(%ecx,%ebp,2)
arpl   %si,0x75(%edx)
arpl   %sp,(%eax)
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     804fb4c <_IO_stdin_used+0xc48>
je     804fb50 <_IO_stdin_used+0xc4c>
bound  %ebp,0x5b(%ebp,%eiz,2)
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
inc    %esp
dec    %ecx
inc    %ecx
inc    %ebx
push   %edx
pop    %ebp
and    %bh,0x7b20
add    %dh,0x6e(%ebp)
jae    804fb71 <_IO_stdin_used+0xc6d>
outsb  %ds:(%si),(%dx)
gs and %ch,%fs:%gs:0x6e(%ecx)
je     804fb31 <_IO_stdin_used+0xc2d>
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     804fb77 <_IO_stdin_used+0xc73>
je     804fb7b <_IO_stdin_used+0xc77>
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    804fb89 <_IO_stdin_used+0xc85>
jp     804fb87 <_IO_stdin_used+0xc83>
and    %bh,0x3b642520
or     (%eax),%al
add    %al,(%eax)
or     0x74(%ebx),%dh
jb     804fba6 <_IO_stdin_used+0xca2>
arpl   %si,0x6b(%eax,%eiz,1)
bound  %esp,0x61(%ecx,%ebp,2)
arpl   %si,0x20(%edx)
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     804fba2 <_IO_stdin_used+0xc9e>
je     804fba6 <_IO_stdin_used+0xca2>
bound  %ebp,0x5b(%ebp,%eiz,2)
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
inc    %esp
dec    %ecx
inc    %ecx
inc    %ebx
push   %edx
pop    %ebp
and    %bh,0x25007b20
jae    804fb95 <_IO_stdin_used+0xc91>
and    %ah,0x6f(%ebx)
jne    804fbcc <_IO_stdin_used+0xcc8>
and    %ch,%fs:0x6f(%esi)
je     804fb86 <_IO_stdin_used+0xc82>
jae    804fbdf <_IO_stdin_used+0xcdb>
imul   $0x206f7420,0x68(%ebx,%eiz,2),%esi
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x6d206564,0x6f(%ebx),%esp
outsl  %ds:(%esi),(%dx)
fs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %ebp,0x6e(%ecx)
and    %ch,%fs:0x65(%ebx)
jns    804fbb3 <_IO_stdin_used+0xcaf>
and    $0x6f742064,%eax
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    804fc03 <_IO_stdin_used+0xcff>
and    %ah,0xa64
and    $0x63203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    804fc18 <_IO_stdin_used+0xd14>
and    %ch,%fs:0x6f(%esi)
je     804fbd2 <_IO_stdin_used+0xcce>
fs
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebx)
jns    804fc2e <_IO_stdin_used+0xd2a>
popa
jo     804fbe4 <_IO_stdin_used+0xce0>
and    $0x25000a64,%eax
jae    804fc05 <_IO_stdin_used+0xd01>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804fbf3 <_IO_stdin_used+0xcef>
fs
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x72(%edi)
and    %ah,0x6c(%ebx)
gs
popa
jb     804fc07 <_IO_stdin_used+0xd03>
imul   $0x6d,0x79(%ebp),%esp
popa
jo     804fbf8 <_IO_stdin_used+0xcf4>
add    %al,(%eax)
and    $0x63203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    804fc64 <_IO_stdin_used+0xd60>
and    %ch,%fs:0x6f(%esi)
je     804fc1e <_IO_stdin_used+0xd1a>
jb     804fc65 <_IO_stdin_used+0xd61>
je     804fc77 <_IO_stdin_used+0xd73>
jb     804fc72 <_IO_stdin_used+0xd6e>
and    %dh,0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jb     804fc74 <_IO_stdin_used+0xd70>
imul   $0x656b206c,0x61(%bp),%ebp
jns    804fc77 <_IO_stdin_used+0xd73>
outsl  %ds:(%esi),(%dx)
popa
jb     804fc7d <_IO_stdin_used+0xd79>
and    %ch,0x6f(%ebp)
fs or  %fs:%gs:(%eax),%al
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %ebp,0x6e(%ecx)
and    %dh,%fs:0x74(%ebx)
jb     804fc9c <_IO_stdin_used+0xd98>
outsb  %ds:(%esi),(%dx)
and    %ah,(%bx)
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0xa73
sub    %cl,0x6f(%esi)
and    %ah,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x6e(%bx,%di)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804fcce <_IO_stdin_used+0xdca>
jae    804fcc6 <_IO_stdin_used+0xdc2>
and    %ah,0x66(%ebp,%eiz,2)
imul   $0x6e6f6974,0x69(%esi),%ebp
jae    804fc9c <_IO_stdin_used+0xd98>
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
arpl   %bp,0x61(%eax)
jb     804fc99 <_IO_stdin_used+0xd95>
sub    0x75(%esi),%ah
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x75(%edx)
data16
jo     804fcf7 <_IO_stdin_used+0xdf3>
jb     804fca5 <_IO_stdin_used+0xda1>
cmp    $0x6e756620,%eax
arpl   %bx,0x62(%edi)
jne    804fcf5 <_IO_stdin_used+0xdf1>
cmp    (%edx),%ecx
imul   $0x6e756620,0x74(%esi),%ebp
arpl   %sp,0x75(%edx)
data16
jae    804fd07 <_IO_stdin_used+0xe03>
jp     804fd05 <_IO_stdin_used+0xe01>
and    %bh,0x7a697320
outsl  %gs:(%esi),(%dx)
data16
sub    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %bx,0x62(%edi)
jne    804fd18 <_IO_stdin_used+0xe14>
sub    %edi,(%ebx)
or     0x6e(%ecx),%ch
je     804fcd9 <_IO_stdin_used+0xdd5>
data16
jne    804fd2a <_IO_stdin_used+0xe26>
arpl   %sp,0x75(%edx)
data16
insb   (%dx),%es:(%edi)
gs
data16
je     804fce5 <_IO_stdin_used+0xde1>
cmp    $0x203b3020,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%edi)
sub    (%eax),%ah
jae    804fd48 <_IO_stdin_used+0xe44>
popa
arpl   %sp,0x20(%ebp)
insb   (%dx),%es:(%edi)
gs
data16
je     804fd01 <_IO_stdin_used+0xdfd>
sub    (%edi),%ch
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x68(%ebx)
popa
jb     804fd0d <_IO_stdin_used+0xe09>
sub    0x75(%esi),%ah
outsb  %ds:(%esi),(%dx)
arpl   %bx,0x74(%edi)
popa
bound  %ebp,0x5b(%ebp,%eiz,2)
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
dec    %esi
push   %edx
pop    %edi
inc    %esi
push   %ebp
dec    %esi
inc    %ebx
pop    %ebp
and    %bh,0x7b20
add    %ch,(%edi)
jne    804fd82 <_IO_stdin_used+0xe7e>
jb     804fd40 <_IO_stdin_used+0xe3c>
jae    804fd85 <_IO_stdin_used+0xe81>
arpl   %bp,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x72642f78,0x75(%esi),%ebp
imul   $0x742f7372,0x65(%esi),%esi
je     804fd9f <_IO_stdin_used+0xe9b>
das
jbe    804fd9d <_IO_stdin_used+0xe99>
das
add    %al,(%eax)
pusha
inc    %ecx
shlb   $0xe0,0x61(%eax)
daa
inc    %ecx
shll   $0x61,(%edi)
loope  804fdab <_IO_stdin_used+0xea7>
inc    %ecx
ret    $0x615e
loop   804fdd1 <_IO_stdin_used+0xecd>
inc    %ecx
ret
jle    804fdb8 <_IO_stdin_used+0xeb4>
jecxz  804fd7b <_IO_stdin_used+0xe77>
inc    %ecx
les    (%edx),%esp
popa
in     $0x4f,%al
inc    %ecx
lds    0x61(%edi),%ebp
in     $0x30,%eax
inc    %ecx
lds    (%eax),%esi
popa
in     $0x41,%eax
inc    %ecx
lds    0x61(%ecx),%esp
in     $0x41,%eax
inc    %ebp
(bad)
popa
gs
out    %al,$0x2c
inc    %ebx
(bad)
sub    $0x63,%al
out    %eax,$0x60
inc    %ebp
enter  $0x6560,$0xe8
daa
inc    %ebp
leave
daa
gs
jmp    66cf42ea <optarg+0x5ec964a6>
gs
ljmp   $0xeb65,$0x22cb4522
pusha
dec    %ecx
int3
pusha
imul   $0x27cd4927,%esp,%ebp
imul   $0x5ece495e,%ebp,%ebp
imul   $0x22cf4922,%esi,%ebp
imul   $0x2dd0442d,%edi,%ebp
fs
lock jle 804fe02 <_IO_stdin_used+0xefe>
sarl   0x6e(%esi)
icebp
pusha
dec    %edi
shlb   %cl,0x6f(%eax)
repnz daa
dec    %edi
shll   %cl,(%edi)
outsl  %ds:(%esi),(%dx)
repz pop %esi
dec    %edi
aam    $0x5e
outsl  %ds:(%esi),(%dx)
hlt
jle    804fe1b <_IO_stdin_used+0xf17>
aad    $0x7e
outsl  %ds:(%esi),(%dx)
cmc
and    -0x2a(%edi),%cl
and    -0xa(%edi),%ch
das
dec    %edi
fsubrs (%edi)
outsl  %ds:(%esi),(%dx)
clc
pusha
push   %ebp
fldenv 0x75(%eax)
stc
daa
push   %ebp
fisubl (%edi)
jne    804fde2 <_IO_stdin_used+0xede>
pop    %esi
push   %ebp
fistpl 0x75(%esi)
sti
and    -0x24(%ebp),%dl
and    -0x4(%ebp),%dh
daa
pop    %ecx
frstor (%edi)
jns    804fdf7 <_IO_stdin_used+0xef3>
push   %esp
dec    %eax
fidiv  -0x2(%eax,%ebp,2)
jae    804fe75 <_IO_stdin_used+0xf71>
fbld   (%edx)
jns    804fe05 <_IO_stdin_used+0xf01>
jae    804fe82 <_IO_stdin_used+0xf7e>
fildll 0x6a(%ecx)
incl   (%eax)
add    %al,(%eax)
add    %ah,-0x54f7fb11(%esi)
out    %eax,(%dx)
add    $0x8,%al
mov    $0xef,%al
add    $0x8,%al
mov    $0xef,%ch
add    $0x8,%al
mov    $0xbf0804ef,%edx
out    %eax,(%dx)
add    $0x8,%al
(bad)
or     %cl,%bl
out    %eax,(%dx)
add    $0x8,%al
shr    %edi
add    $0x8,%al
xlat   %ds:(%ebx)
out    %eax,(%dx)
add    $0x8,%al
fucomp %st(7)
add    $0x8,%al
jecxz  804fe3d <_IO_stdin_used+0xf39>
add    $0x8,%al
jmp    f70d0344 <optarg+0xef072500>
out    %eax,(%dx)
add    $0x8,%al
cmc
out    %eax,(%dx)
add    $0x8,%al
sti
out    %eax,(%dx)
add    $0x8,%al
add    %esi,%eax
add    $0x8,%al
pop    %es
lock add $0x8,%al
or     $0x130804f0,%eax
lock add $0x8,%al
sbb    %esi,%eax
add    $0x8,%al
push   %ds
lock add $0x8,%al
and    %eax,%esi
add    $0x8,%al
sub    %dh,%al
add    $0x8,%al
sub    $0x320804f0,%eax
lock add $0x8,%al
ret
mov    $0xb8330804,%eax
add    $0x8,%al
inc    %edx
mov    $0xb7870804,%eax
add    $0x8,%al
xchg   %eax,%esi
mov    $0x4,%bh
or     %ah,-0xff7fb49(%ebp)
mov    $0x4,%bl
or     %dh,%al
mov    $0x4,%bl
or     %dh,-0x27f7fb49(%ecx)
mov    $0x4,%bh
or     %ch,%dl
mov    $0x4,%bh
or     %al,(%eax)
mov    $0x4,%dh
or     %al,(%eax)
mov    $0x4,%dh
or     %dl,(%ebx)
mov    $0x4,%dh
or     %ch,(%eax)
mov    $0xb6500804,%eax
add    $0x8,%al
pop    %edi
mov    $0x4,%dh
or     %dh,-0x4a(%ebp)
add    $0x8,%al
lock mov $0x4,%bl
or     %dh,%al
mov    $0x4,%bl
or     %al,-0x6cf7fb4a(%edi)
mov    $0x4,%dh
or     %bl,-0x54f7fb4a(%edi)
mov    $0x4,%dh
or     %dh,-0x3cf7fb4a(%edi)
mov    $0x4,%dh
or     %cl,%bh
mov    $0x4,%dh
or     %bl,%bl
mov    $0x4,%dh
or     %ch,%dl
mov    $0x4,%dh
or     %bh,%cl
mov    $0x4,%dh
or     %dh,%al
mov    $0x4,%bl
or     %dh,%al
mov    $0x4,%bl
or     %cl,-0x49(%eax)
add    $0x8,%al
outsl  %ds:(%esi),(%dx)
mov    $0x4,%bh
or     %ch,%cl
mov    $0x4,%ch
or     %bh,(%eax)
mov    $0x4,%dh
or     %bl,0x130804b8
mov    $0x4,%dh
or     %ch,%cl
mov    $0x4,%ch
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x1080526(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
adc    %dh,%bl
add    $0x8,%al
popa
add    %al,(%eax)
add    %dl,(%esi)
repz add $0x8,%al
bound  %eax,(%eax)
add    %al,(%eax)
push   %ds
repz add $0x8,%al
arpl   %ax,(%eax)
add    %al,(%eax)
sub    %ebx,%esi
add    $0x8,%al
add    %al,%fs:(%eax)
add    %dh,(%ebx)
repz add $0x8,%al
push   $0x38000000
repz add $0x8,%al
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,-0xd(%eax)
add    $0x8,%al
jae    804ffbe <_IO_stdin_used+0x10ba>
add    %al,(%eax)
dec    %ebp
repz add $0x8,%al
jne    804ffce <_IO_stdin_used+0x10ca>
add    %al,(%eax)
push   %ebp
repz add $0x8,%al
jno    804ffde <_IO_stdin_used+0x10da>
add    %al,(%eax)
pop    %ebx
repz add $0x8,%al
jbe    804ffee <_IO_stdin_used+0x10ea>
add    %al,(%eax)
arpl   %si,%bx
add    $0x8,%al
push   %esi
add    %al,(%eax)
add    %al,(%esi)
xchg   %eax,%edx
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
sti
xchg   %eax,%ecx
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
mov    $0x91,%cl
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
mov    %al,0x93080491
xchg   %eax,%ecx
add    $0x8,%al
test   %dl,-0x6e8af7fc(%ecx)
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
push   %es
xchg   %eax,%edx
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
lock nop
add    $0x8,%al
pop    %edx
xchg   %eax,%ecx
add    $0x8,%al
lock nop
add    $0x8,%al
dec    %esi
xchg   %eax,%ecx
add    $0x8,%al
lock nop
add    $0x8,%al
cmp    %dl,-0x6ed0f7fc(%ecx)
add    $0x8,%al
iret
add    $0xcf,%al
iret
jmp    8050105 <_IO_stdin_used+0x1201>
or     %eax,(%edi)
adc    %ah,0xcfcff606
iret
iret
iret
iret
iret
iret
iret
sub    %edi,%ecx
adc    $0xa,%al
add    $0x1c2017cf,%eax
iret
iret
or     (%esi),%esp
iret
and    %edi,%ecx
iret
iret
iret
iret
iret
iret
iret
iret
and    %bh,%cl
iret
cmp    $0x3e0cffcf,%eax
das
(bad)
xor    %al,0x46(%ebp)
iret
iret
iret
iret
iret
push   %cs
iret
dec    %eax
or     $0xcf,%al
or     $0x49,%al
iret
ss
add    %ecx,%edi
inc    %edi
iret
iret
iret
iret
iret
dec    %ebx
iret
dec    %esp
iret
dec    %esi
dec    %edi
or     $0xcf,%al
iret
iret
iret
push   %eax
iret
add    %al,(%eax)
add    %al,(%eax)
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%ecx),%al
add    (%ebx),%al
add    $0x5,%al
push   %es
pop    %es
or     %cl,(%ecx)
or     (%ebx),%cl
or     $0xd,%al
push   %cs
movups (%ecx),%xmm2
adc    (%ebx),%dl
adc    $0x15,%al
push   %ss
pop    %ss
sbb    %bl,(%ecx)
sbb    (%ebx),%bl
sbb    $0x1d,%al
push   %ds
pop    %ds
and    %ah,(%ecx)
and    (%ebx),%ah
add    %ah,(%ecx)
add    (%edi),%edx
add    $0x0,%al
add    $0x5,%al
add    (%ebx),%eax
add    (%esi),%eax
pop    %es
or     %al,(%edx,%ecx,1)
or     %al,0x5440504(,%eax,1)
and    %al,(%ebx)
dec    %eax
adc    $0x16,%al
sbb    (%eax),%bl
sbb    $0x1d,%al
adc    $0x1f1e2309,%eax
add    $0x9,%al
push   %esi
dec    %eax
sbb    $0x1d,%al
or     %bl,0xd0c0b21
push   %cs
movups (%ecx),%xmm2
adc    (%ebx),%dl
or     0x11100f0e(,%ecx,1),%ecx
adc    (%ebx),%dl
sbb    (%edx),%bl
add    $0x1d,%al
sbb    $0x9172021,%eax
add    (%ecx),%ebx
add    $0x3,%al
add    (%edi),%edx
add    (%ebx),%eax
or     %eax,(%ebx)
add    (%ebx),%eax
sub    $0x3242,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%edi)
inc    %esi
pop    %ss
sbb    %al,(%edx)
cmp    $0x2231033e,%eax
add    $0x5,%al
push   %es
sbb    (%edi),%eax
sbb    $0x3d,%al
ds
dec    %ebx
dec    %esp
push   %eax
sbb    $0x32552f23,%eax
or     %bl,(%esi)
or     %edi,(%edi)
push   %ebx
xor    %dh,(%ebx)
inc    %edi
or     (%ebx),%cl
xor    $0x35,%al
pop    %ebx
push   %esp
aas
inc    %eax
cmp    %ecx,0x36(%ebp)
and    $0x25,%al
es
daa
sub    %ch,(%ecx)
sub    (%ebx),%ch
sub    $0x24,%al
and    $0x29282726,%eax
sub    (%ebx),%ch
sub    $0x1e,%al
push   %ds
cmp    (%edi),%ebx
pop    %ds
cmp    %ah,(%eax)
inc    %ebp
inc    %esp
dec    %ecx
dec    %eax
dec    %edx
dec    %esi
push   %ecx
push   %edx
push   %edi
pop    %eax
push   %esi
pop    %ecx
pop    %edx
pop    %esp
cmp    0x3c(%edi),%cl
add    %al,(%edx)
sbb    $0x401,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    0x9080706,%eax
or     $0xd,%al
or     (%eax),%eax
or     (%eax),%al
pop    %ss
add    %dl,0x1b000000
sbb    $0x0,%al
add    %cl,(%edi)
add    %ah,(%edx)
and    0x29282726(,%eiz,1),%esp
sub    (%eax),%al
and    %ecx,(%esi)
add    %dl,(%ebx)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
push   %ss
adc    $0x2f,%al
xor    (%eax),%eax
xor    %eax,(%eax)
sub    $0x2e,%al
add    %al,(%eax)
adc    (%eax),%al
add    %dl,(%eax)
add    %dh,(%eax)
xor    $0x32,%al
sub    0x1c001800,%ebp
add    %al,(%eax)
add    %bl,(%edi)
adc    %ebx,(%ecx)
sbb    (%eax),%al
push   %ds
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%ecx),%al
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ebx)
add    (%esi,%eax,1),%al
add    $0x3,%al
add    (%ecx),%eax
add    (%ecx),%eax
add    $0x1010606,%eax
add    %al,(%edi)
push   %es
add    (%ecx),%al
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,0x1010200
add    (%ecx),%al
add    (%ecx),%al
add    (%eax),%al
add    %al,(%eax)
add    %ah,0x26262625(,%eiz,1)
es
es
es
es
es
es
es
daa
sub    %ch,(%ecx)
sub    (%edx),%ch
sub    (%esp,%ebp,1),%ebp
sub    $0x2f2f2e2d,%eax
xor    %dh,(%eax)
xor    (%ecx),%dh
xor    %esi,(%ebx)
xor    (%esp,%esi,1),%esi
xor    $0x34,%al
xor    $0x34,%al
xor    $0x34,%al
xor    $0x35,%al
ss
ss
aaa
cmp    %bh,(%eax)
cmp    %bh,(%eax)
cmp    %bh,(%eax)
iret
iret
iret
iret
iret
iret
iret
iret
iret
and    $0xcf,%al
iret
(bad)
iret
iret
daa
iret
adc    %edi,%ecx
sar    %bh
add    %ecx,0x11100f0e(,%ecx,1)
sbb    %ebx,(%edx)
adc    (%ebx),%dl
and    %edx,0x41162e2d(,%edx,1)
inc    %edx
inc    %ebx
add    %al,-0x72f7fb0d(%edi)
repz add $0x8,%al
xchg   %eax,%ebx
repz add $0x8,%al
cwtl
repz add $0x8,%al
pushf
repz add $0x8,%al
mov    0xa40804f3,%al
repz add $0x8,%al
test   $0xf3,%al
add    $0x8,%al
jae    80504f9 <_IO_stdin_used+0x15f5>
imul   $0x20676e69,0x68(%ebx,%eiz,2),%esi
je     80504fb <_IO_stdin_used+0x15f7>
and    %ah,0x4c000a73
dec    %edi
inc    %ecx
inc    %esp
dec    %ebx
inc    %ebp
pop    %ecx
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %ebx
dec    %esp
push   %ebp
inc    %esp
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80504ce <_IO_stdin_used+0x15ca>
outsl  %ds:(%esi),(%dx)
jo     8050516 <_IO_stdin_used+0x1612>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x64(%ebp,%esi,2)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x74730073
jb     8050530 <_IO_stdin_used+0x162c>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%si)
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi,%ebp,2)
add    %ch,0x6e(%bx,%di)
jo     805054c <_IO_stdin_used+0x1648>
je     80504f9 <_IO_stdin_used+0x15f5>
imul   $0x78656c66,0x20(%esi),%ebp
and    %dh,0x63(%ebx)
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
jb     8050509 <_IO_stdin_used+0x1605>
popaw
imul   $0x64616200,0x64(%ebp,%eiz,2),%ebp
and    %ah,0x75(%edx)
data16
data16
gs
jb     805051b <_IO_stdin_used+0x1617>
imul   $0x735f7979,0x20(%esi),%ebp
arpl   %sp,0x6e(%ecx)
pop    %edi
bound  %edi,0x74(%ecx)
gs
jae    8050534 <_IO_stdin_used+0x1630>
sub    %eax,(%eax)
imul   $0x2f2e2e00,%cs:0x63(%esi),%ebp
cs
cs
das
imul   $0x6564756c,0x63(%esi),%ebp
das
add    %ch,(%edi)
jne    8050598 <_IO_stdin_used+0x1694>
jb     8050556 <_IO_stdin_used+0x1652>
jae    8050591 <_IO_stdin_used+0x168d>
popa
jb     8050591 <_IO_stdin_used+0x168d>
das
imul   $0x6d,0x79(%ebp),%esp
popa
jo     80505a7 <_IO_stdin_used+0x16a3>
das
imul   $0x6564756c,0x63(%esi),%ebp
das
add    %al,(%eax)
add    %dh,0x74(%ebx)
popa
jb     80505b9 <_IO_stdin_used+0x16b5>
sub    $0x646e6f63,%eax
imul   $0x7473206e,0x6f(%ecx,%ebp,2),%esi
popa
arpl   %bp,0x20(%ebx)
jne    80505c6 <_IO_stdin_used+0x16c2>
fs
gs
jb     80505c2 <_IO_stdin_used+0x16be>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8050560 <_IO_stdin_used+0x165c>
outsl  %ds:(%esi),(%dx)
jne    80505d7 <_IO_stdin_used+0x16d3>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80505e6 <_IO_stdin_used+0x16e2>
and    %ah,0x78(%ebp)
jo     80505d3 <_IO_stdin_used+0x16cf>
outsb  %ds:(%esi),(%dx)
imul   $0x61747320,%fs:0x67(%esi),%ebp
jb     80505f1 <_IO_stdin_used+0x16ed>
sub    $0x646e6f63,%eax
imul   $0x7473206e,0x6f(%ecx,%ebp,2),%esi
popa
arpl   %bp,0x0(%ebx)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jne    8050607 <_IO_stdin_used+0x1703>
and    %ch,0x66(%edi)
and    %ah,0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x6f6d656d,0x20(%ebx),%esp
jb     805061e <_IO_stdin_used+0x171a>
and    %ch,0x6e(%ecx)
and    %bh,0x79(%ecx)
outsb  %gs:(%esi),(%dx)
jae    8050624 <_IO_stdin_used+0x1720>
jb     8050616 <_IO_stdin_used+0x1712>
pop    %edi
bound  %esi,0x66(%ebp)
data16
gs
jb     8050618 <_IO_stdin_used+0x1714>
jae    805062f <_IO_stdin_used+0x172b>
popa
arpl   %bp,0x28(%ebx)
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,0x75(%edi)
je     80505e8 <_IO_stdin_used+0x16e4>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x6f6d656d,0x20(%ebx),%esp
jb     8050652 <_IO_stdin_used+0x174e>
and    %ch,0x6e(%ecx)
and    %bh,0x79(%ecx)
pop    %edi
arpl   %si,0x65(%edx)
popa
je     805064b <_IO_stdin_used+0x1747>
pop    %edi
bound  %esi,0x66(%ebp)
data16
gs
jb     8050616 <_IO_stdin_used+0x1712>
sub    %eax,(%eax)
imul   $0x6564756c,0x63(%esi),%ebp
jae    8050619 <_IO_stdin_used+0x1715>
popa
jb     8050661 <_IO_stdin_used+0x175d>
and    %ch,0x65(%esi)
jae    8050675 <_IO_stdin_used+0x1771>
gs and %dh,%fs:%gs:0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     8050679 <_IO_stdin_used+0x1775>
jns    805060f <_IO_stdin_used+0x170b>
add    %ah,0x78(%ebp)
jo     8050679 <_IO_stdin_used+0x1775>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x65(%edx)
je     805069d <_IO_stdin_used+0x1799>
gs outsb %gs:(%esi),(%dx)
and    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8050694 <_IO_stdin_used+0x1790>
jae    8050631 <_IO_stdin_used+0x172d>
add    %al,(%eax)
add    %dh,0x6e(%ebp)
imul   $0x6b206564,0x6f(%ebx),%esp
gs
jns    80506b3 <_IO_stdin_used+0x17af>
jns    80506af <_IO_stdin_used+0x17ab>
and    %ch,0x75(%edi)
je     8050667 <_IO_stdin_used+0x1763>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
cmp    %gs:(%bx,%si),%ah
and    $0x61660073,%eax
je     80506b9 <_IO_stdin_used+0x17b5>
insb   (%dx),%es:(%edi)
and    %ah,0x6c(%esi)
gs
js     805067f <_IO_stdin_used+0x177b>
jae    80506c4 <_IO_stdin_used+0x17c0>
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
jb     8050687 <_IO_stdin_used+0x1783>
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     80506e3 <_IO_stdin_used+0x17df>
jb     80506a3 <_IO_stdin_used+0x179f>
sub    $0x20646e65,%eax
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x75(%edx)
data16
data16
gs
jb     80506a5 <_IO_stdin_used+0x17a1>
insl   (%dx),%es:(%edi)
imul   $0x66006465,0x73(%ebx),%esi
popa
je     80506f1 <_IO_stdin_used+0x17ed>
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8050705 <_IO_stdin_used+0x1801>
jb     80506b8 <_IO_stdin_used+0x17b4>
sub    $0x61637320,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
jb     80506c2 <_IO_stdin_used+0x17be>
imul   $0x62207475,0x70(%esi),%ebp
jne    8050711 <_IO_stdin_used+0x180d>
data16
gs
jb     80506cf <_IO_stdin_used+0x17cb>
outsl  %ds:(%esi),(%dx)
jbe    8050717 <_IO_stdin_used+0x1813>
jb     805071a <_IO_stdin_used+0x1816>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80506b8 <_IO_stdin_used+0x17b4>
outsl  %ds:(%esi),(%dx)
jne    805072f <_IO_stdin_used+0x182b>
and    %ch,0x66(%edi)
and    %ah,0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x6f6d656d,0x20(%ebx),%esp
jb     8050746 <_IO_stdin_used+0x1842>
and    %ch,0x6e(%ecx)
and    %bh,0x79(%ecx)
pop    %edi
addr16
gs
je     8050737 <_IO_stdin_used+0x1833>
outsb  %ds:(%esi),(%dx)
gs
js     8050750 <_IO_stdin_used+0x184c>
pop    %edi
bound  %esi,0x66(%ebp)
data16
gs
jb     805070c <_IO_stdin_used+0x1808>
sub    %eax,(%eax)
add    %al,(%eax)
popaw
je     805074d <_IO_stdin_used+0x1849>
insb   (%dx),%es:(%edi)
and    %ah,0x6c(%esi)
gs
js     8050713 <_IO_stdin_used+0x180f>
jae    8050758 <_IO_stdin_used+0x1854>
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
jb     805071b <_IO_stdin_used+0x1817>
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8050777 <_IO_stdin_used+0x1873>
jb     8050737 <_IO_stdin_used+0x1833>
sub    $0x61206f6e,%eax
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jne    8050787 <_IO_stdin_used+0x1883>
add    %al,%fs:(%eax)
outsl  %ds:(%esi),(%dx)
jne    8050793 <_IO_stdin_used+0x188f>
and    %ch,0x66(%edi)
and    %ah,0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x6f6d656d,0x20(%ebx),%esp
jb     80507aa <_IO_stdin_used+0x18a6>
and    %ch,0x6e(%ecx)
and    %bh,0x79(%ecx)
pop    %edi
jae    805079d <_IO_stdin_used+0x1899>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
bound  %esi,0x66(%ebp)
data16
gs
jb     805076c <_IO_stdin_used+0x1868>
sub    %eax,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jne    80507bf <_IO_stdin_used+0x18bb>
and    %ch,0x66(%edi)
and    %ah,0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x6f6d656d,0x20(%ebx),%esp
jb     80507d6 <_IO_stdin_used+0x18d2>
and    %ch,0x6e(%ecx)
and    %bh,0x79(%ecx)
pop    %edi
jae    80507c9 <_IO_stdin_used+0x18c5>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
bound  %edi,0x74(%ecx)
gs
jae    8050797 <_IO_stdin_used+0x1893>
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,(%edi)
jne    80507ea <_IO_stdin_used+0x18e6>
jb     80507a8 <_IO_stdin_used+0x18a4>
jae    80507e3 <_IO_stdin_used+0x18df>
popa
jb     80507e3 <_IO_stdin_used+0x18df>
das
imul   $0x6d,0x79(%ebp),%esp
popa
jo     80507f9 <_IO_stdin_used+0x18f5>
das
imul   $0x692f3638,(%ebx),%esi
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x64(%ebp,%esi,2)
gs
das
add    %al,(%eax)
add    %al,(%eax)
das
jne    805080e <_IO_stdin_used+0x190a>
jb     80507cc <_IO_stdin_used+0x18c8>
jae    8050807 <_IO_stdin_used+0x1903>
popa
jb     8050807 <_IO_stdin_used+0x1903>
das
imul   $0x6d,0x79(%ebp),%esp
popa
jo     805081d <_IO_stdin_used+0x1919>
das
insl   (%dx),%es:(%edi)
popa
arpl   %bp,(%edi)
imul   $0x6564756c,0x63(%esi),%ebp
das
add    %ch,-0x74f7fb35(%esi)
lret
add    $0x8,%al
push   %ds
lret   $0x804
arpl   %cx,%si
add    $0x8,%al
dec    %edx
into
add    $0x8,%al
sbb    $0x540804ce,%eax
lds    (%eax,%ecx,1),%eax
loop   80507ab <_IO_stdin_used+0x18a7>
add    $0x8,%al
mov    $0xa20804cd,%ebp
int    $0x4
or     %al,0x1f0804cd(%edi)
int    $0x4
or     %dh,%bl
int3
add    $0x8,%al
(bad)
int3
add    $0x8,%al
mov    $0xb00804cc,%edx
int3
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
int3
add    $0x8,%al
pushf
int3
add    $0x8,%al
xchg   %eax,%edx
int3
add    $0x8,%al
mov    %cl,%ah
add    $0x8,%al
jbe    80507d9 <_IO_stdin_used+0x18d5>
add    $0x8,%al
outsl  %ds:(%esi),(%dx)
movl   $0x804c768,(%eax,%ecx,1)
popa
movl   $0x804c75a,(%eax,%ecx,1)
push   %ebx
movl   $0x804c74c,(%eax,%ecx,1)
inc    %ebp
movl   $0x804c73e,(%eax,%ecx,1)
aaa
movl   $0x804c730,(%eax,%ecx,1)
sub    %eax,%edi
add    $0x8,%al
and    %bh,%al
add    $0x8,%al
sbb    %edi,%eax
add    $0x8,%al
adc    $0xc7,%al
add    $0x8,%al
add    $0x2e0804c7,%eax
leave
add    $0x8,%al
dec    %eax
add    $0x8,%al
out    %eax,$0xc8
add    $0x8,%al
iret
enter  $0x804,$0x98
enter  $0x804,$0x23
enter  $0x804,$0xd0
movl   $0x804c77d,(%eax,%ecx,1)
lret
leave
add    $0x8,%al
pusha
leave
add    $0x8,%al
inc    %edx
leave
add    $0x8,%al
cmp    %cl,%cl
add    $0x8,%al
int3
movb   $0x99,(%eax,%ecx,1)
into
add    $0x8,%al
ror    %bl
add    $0x8,%al
ror    %bl
add    $0x8,%al
ror    %bl
add    $0x8,%al
ror    %bl
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
or     $0xd000000,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x16000000,%eax
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%ecx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x1e000000,%eax
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %ah,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,(%ebx)
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
and    $0x1000000,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,(%edi)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%ecx)
add    %al,(%eax)
add    %ch,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x2e000000,%eax
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%ecx)
add    %al,(%eax)
add    %dh,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
xor    $0x36000000,%eax
add    %al,(%eax)
add    %dh,(%edi)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,(%ebx)
add    %al,(%eax)
add    %bh,(%ecx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %ch,0x2d00
add    %al,(%eax)
add    %dh,(%ecx)
add    %ch,(%edi)
add    %al,(%esi)
add    %al,0x28002f00
add    %ch,(%edi)
add    %dl,(%eax)
add    %cl,(%edi)
add    %cl,(%esi)
add    %cl,(%eax,%eax,1)
or     $0x0,%al
or     %al,(%eax)
das
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %ch,(%edi)
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0x2d000d00
add    %ch,(%esi)
add    %dh,(%eax)
add    %al,(%ebx)
add    %dh,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
and    %eax,(%eax)
add    %al,(%eax)
and    (%eax),%eax
or     (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
or     $0xd000d00,%eax
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xa000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %ch,0x29002a00
add    %ch,(%ebx)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%eax
daa
add    %al,(%eax)
add    %ah,(%edi)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
pop    %ss
add    %al,(%eax)
add    %dl,(%edi)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %ch,(%ecx)
add    %al,(%edx)
add    %ah,(%esi)
add    %ah,0x0
add    %al,(%eax)
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0x29000d00
add    %ah,0x0
add    %bl,(%eax)
add    %bl,(%ebx)
add    %bl,(%eax,%eax,1)
adc    $0x0,%al
adc    $0x15000000,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
add    %al,(%eax)
add    %dl,0xd000000
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0x0
add    %al,(%eax)
add    %bl,(%ecx)
add    %bl,(%edx)
add    %cl,(%ecx)
add    %cl,(%ecx)
add    %cl,(%ebx)
add    %al,(%eax)
add    %cl,(%ecx)
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0x9000900
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0x900
add    %al,(%eax)
add    %dl,(%ecx)
add    %ah,(%eax)
add    %dl,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %dl,(%edx)
add    %bl,(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0xd000d00
add    %cl,0x1000d00
add    %al,(%eax)
add    %al,(%ecx)
add    %cl,0xd000d00
add    %cl,0xd00
add    %bl,0xd000d00
add    %al,(%eax)
add    %cl,0xd001e00
add    %dh,%bh
add    %eax,(%ecx)
add    %dh,%bh
add    %eax,(%ebx)
add    %bh,%al
add    %edi,%eax
add    %edi,%ecx
add    %edi,%ecx
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%edx
add    %esi,%edi
add    %edi,%ebx
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%ebp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esi
add    %esi,%edi
add    %edi,%edx
add    %esi,%edi
add    %esi,%edi
add    %edi,%edi
add    %esi,%edi
add    %eax,(%eax)
add    %bh,%dh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%ecx)
add    %bh,%dh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%ebp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%eax)
add    %bh,%dh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%edx)
add    %bh,%dh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%ebx)
add    %bh,%dh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%edx,%eax,1)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1fc01fc,(%ecx)
cld
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %esi,%edi
add    %edi,%esp
add    %edi,%esp
add    %esi,%edi
add    %edi,%esp
add    %esi,%edi
add    %edi,%esp
add    %eax,(%eax)
add    %dh,%bh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x5000000,%eax
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x4000000
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x5000000,%eax
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %al,(%eax)
add    %al,0x5000000
add    %bh,(%ecx)
add    %al,(%eax)
add    %ch,0x0(%esi)
outsl  %ds:(%esi),(%dx)
add    %dl,%cl
add    %al,%dl
add    %ah,%dl
add    %bh,%dl
add    %cl,%dl
add    %bh,%dl
add    %bh,%cl
add    %bh,%dl
add    0x2d702d7(%edx,%eax,1),%ch
xlat   %ds:(%ebx)
add    0x0(%edx),%ch
insb   (%dx),%es:(%edi)
add    %dl,%bh
add    0x0(%eax),%ah
outsb  %ds:(%esi),(%dx)
add    %bl,0x0(%esi)
outsb  %ds:(%esi),(%dx)
add    %ah,0x0(%eax)
imul   $0x690076,(%eax),%eax
jp     80515fe <_IO_stdin_used+0x26fa>
int    $0x2
outsb  %ds:(%esi),(%dx)
add    %bh,0x0(%ebx)
pushf
add    0x29a02a3(%edx,%eax,1),%bl
fwait
add    0x0(%edx),%dl
xchg   %eax,%edi
add    0x8602(%ebx),%dl
add    %bl,-0x69ff9600(%ebp)
add    %al,-0x61ff7300(%ebx)
add    %cl,-0x68ff5e00(%esi)
add    %bl,0x2950295(%eax,%eax,1)
pushf
add    -0x7dfd6bfe(%ebx),%dl
add    %dl,0x28c02(%eax)
add    %dl,%bh
add    %cl,%dl
add    %dl,%bh
add    %bl,%al
add    %bh,-0x28fd42fe(%edi)
add    -0x53ff2cfe(%eax),%bh
add    %al,(%eax)
add    %dl,%ch
add    %bl,-0x5bfd2900(%edx)
add    %ah,-0x37fd51fe(%eax)
add    %bl,-0x6cfd78fe(%ebp)
add    0x2990284(%eax,%eax,1),%dh
(bad)
add    -0x28fd83fe(%edx),%dl
add    -0x64fd73fe(%ebp),%ah
add    0x7a028202(%edx),%dl
add    %bh,%dl
add    (%eax),%al
add    %cl,0x2d70275(%edx,%eax,1)
mov    $0x0,%cl
mov    $0x0,%dh
js     8051694 <_IO_stdin_used+0x2790>
test   %al,(%edx)
mov    $0x74027500,%eax
add    0x7f026e02(%eax),%al
add    0x2(%edi),%dh
outsl  %ds:(%esi),(%dx)
add    0x2(%ebx),%ch
add    %al,(%eax)
mov    $0xc6000000,%eax
add    %al,0xd00292(%edx,%eax,1)
addl   $0x277026b,(%edx)
mov    $0x7d026800,%edi
add    0x2(%esi),%ah
jbe    80516c6 <_IO_stdin_used+0x27c2>
pusha
add    (%eax),%al
add    %cl,0x7f027002(%ecx)
add    0x2(%esi),%dh
data16
add    0x2(%esi),%bl
add    %al,(%eax)
jo     80516da <_IO_stdin_used+0x27d6>
pop    %ecx
add    %ch,%cl
add    %dl,%cl
add    %bl,0x68(%edx,%eax,1)
add    %dl,%al
add    %bl,0x2(%ecx)
pop    %eax
add    0x52(%edx,%eax,1),%ah
add    0x2(%ebx),%ah
pop    %ebx
add    0x2(%ebx),%dl
dec    %edi
add    (%eax),%al
add    %dl,%bh
add    %ah,%ch
add    %dl,%bh
add    %bh,%dl
add    %cl,%cl
add    %dl,%bh
add    %bh,%dl
add    0x2(%edi),%bh
jle    805170a <_IO_stdin_used+0x2806>
out    %al,(%dx)
add    %al,(%eax)
add    %dh,%cl
add    %dh,%dl
add    %dh,%ah
add    %ah,0x64(%edx,%eax,1)
add    0x60(%edx,%eax,1),%ah
add    0x2(%esi),%ah
dec    %ecx
add    0x2(%ecx),%cl
dec    %ecx
add    0x2(%ebp),%al
dec    %ebx
add    %bh,%dl
add    %bh,%ch
add    %dh,%cl
add    %ah,0x2(%ebx)
dec    %ebx
add    0x60(%edx,%eax,1),%ah
add    0x2(%ebx),%cl
inc    %edi
add    (%eax),%al
add    %ah,0x2(%ebp)
dec    %esp
add    %ch,%dh
add    %bh,(%edx,%eax,1)
cmp    $0x2,%al
cmp    $0x2,%al
cmp    %al,(%edx)
add    %ds:0x3e005d02,%bh
add    0x2(%eax),%al
cmp    $0x2,%al
inc    %edx
add    %ch,%bh
add    %dh,%bh
add    %al,(%ecx)
add    %ecx,0x2(%eax)
dec    %eax
add    0x2(%eax),%cl
inc    %esp
add    0x2(%edx),%cl
sub    $0x2d022d02,%eax
add    (%ecx),%ch
add    (%edi),%ch
add    (%eax),%al
add    %dh,%ah
add    %al,(%ebx)
add    %eax,0x2(%edi)
das
add    0x2(%eax),%cl
inc    %esp
add    (%edi),%ch
add    (%ebx),%ch
add    0x2(%ecx),%cl
xor    %al,(%edx)
add    (%ecx),%eax
and    %al,(%edx)
and    %al,(%edx)
and    %al,(%edx)
sbb    $0x2,%al
and    (%edx),%al
and    %eax,(%edx)
jmp    8051796 <_IO_stdin_used+0x2892>
and    (%edx),%al
and    $0x2,%al
and    %al,(%edx)
add    %es:0xd702d701,%al
add    %bh,%dl
add    0x2d00f701,%ah
add    (%esi),%dl
add    0x28022902,%dl
add    (%edx),%ch
add    (%edi),%ah
add    0x8010601,%al
add    %edx,(%edx)
add    (%edi),%cl
add    (%ecx,%eax,1),%dl
add    %es:(%ebx),%dh
add    (%esi),%cl
add    (%ecx),%bl
add    (%edx,%eax,1),%cl
pop    %ss
add    (%ecx),%ah
add    (%edx),%cl
add    (%edx),%bl
add    (%esi),%bl
add    (%edx),%al
add    (%esi),%al
add    (%eax),%al
add    %bl,0x20602
add    %dh,%bh
add    %edi,%ebp
add    %edi,%edi
add    %edi,%esp
add    %eax,(%edx)
add    %edi,%eax
add    %edi,%esp
add    %eax,(%edi)
add    %bl,%bh
add    %esi,%ebp
add    %edi,%ecx
add    %edi,%edx
add    %ecx,(%edx)
add    (%ebx),%dl
add    %esi,%ebx
add    %esi,%edx
add    %eax,(%esi)
add    0x4020702,%al
add    (%ebx),%bl
add    %edx,(%esi)
add    %ebx,(%eax)
add    %ebp,%edi
add    %ebp,%esp
add    %esp,(%ecx)
add    %eax,(%ebx)
add    (%eax),%dl
add    %bl,%ch
add    %esi,%esi
add    %ebp,%ecx
add    %esi,%esp
add    %edi,%esi
add    %esp,%edi
add    %esi,%edi
add    %edi,%ebx
add    %ebx,%edi
add    %esp,%ebx
add    %edi,%edx
add    %esp,%ebx
add    %ebx,%ebp
add    %ebx,%ebx
add    %ebx,%edx
add    %ebx,%esp
add    %ebx,%ecx
add    %ecx,0xd901d501
add    %esp,%esp
add    %ebx,%eax
add    %edx,%edx
add    %edx,%esi
add    %edx,%edi
add    %edx,%edi
add    %bh,%dl
add    %bh,%bh
add    %ebx,(%ecx)
add    %edx,%edi
add    %bh,%ch
add    %esi,%ecx
add    %esp,%ebx
add    %esp,%ebp
add    %edx,%edi
add    %bh,%dl
add    %ah,%dl
add    %edx,%ebx
add    %edx,%ebp
add    %edx,%esp
add    %eax,%edi
add    %ecx,%ecx
add    %ebp,%ecx
add    %ebx,%esp
add    %edx,%eax
add    %eax,%esp
add    %ecx,%esi
add    %eax,%edx
add    %edx,%edi
add    0x2901e001,%ah
add    %ecx,%eax
add    %eax,(%eax)
add    %dl,%bh
add    %dh,%al
add    %ecx,%eax
add    %edi,-0x39fe42ff(%ebx)
add    %eax,%ebp
add    %edi,-0x3ffeeaff(%ecx)
add    %eax,(%eax)
add    %ah,(%esi)
add    %edx,%ebp
add    %edx,%edi
add    %ecx,%ecx
add    %ecx,%ebx
add    %eax,(%eax)
add    %al,(%eax)
add    %bh,-0x44fe46ff(%edx)
add    %edi,-0x50fe52ff(%edx)
add    %ecx,%edi
add    %eax,%edx
add    %esi,-0x4bfe55ff(%esi)
add    %ebp,0x31000001(%eax)
add    %eax,%esi
add    %esi,(%ebx)
add    %ebp,-0x53ffffff(%esi)
add    %ebp,-0x5cfe5eff(%esi)
add    %ebp,0x19f01ab(%ecx,%eax,1)
and    %eax,(%ecx)
cmpsb  %es:(%edi),%ds:(%esi)
add    %edi,0xaf01ba01
add    %edi,0x19f01b4(%ecx,%eax,1)
sahf
add    %edx,0x19f0193(%ecx,%eax,1)
cwtl
add    %esi,0x19b01a6(%ecx,%eax,1)
mov    (%ecx),%es
cltd
add    %ecx,0x2d702d7(%ecx,%eax,1)
mov    0xd7018a01,%eax
add    -0x6cfe78ff(%ecx),%dl
add    %ecx,0x1900191(%ecx,%eax,1)
addl   $0xffffff82,(%ecx)
add    %edi,(%edi)
add    %esp,-0x5dfe6aff(%eax)
add    %ebx,-0x7bfe7aff(%edx)
add    %edi,0x1(%edx)
jns    8051931 <_IO_stdin_used+0x2a2d>
test   %eax,(%ecx)
jle    8051935 <_IO_stdin_used+0x2a31>
lcall  $0x7401,$0x81018c01
add    %edi,0x1(%edi)
jb     8051941 <_IO_stdin_used+0x2a3d>
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,(%ecx)
jo     8051949 <_IO_stdin_used+0x2a45>
ja     805194b <_IO_stdin_used+0x2a47>
insl   (%dx),%es:(%edi)
add    %edi,0x1(%ecx)
jb     8051951 <_IO_stdin_used+0x2a4d>
ja     8051953 <_IO_stdin_used+0x2a4f>
jbe    8051955 <_IO_stdin_used+0x2a51>
imul   $0x1380168,(%ecx),%eax
mov    %eax,(%ecx)
xlat   %ds:(%ebx)
add    %bh,%dl
add    %bh,%dl
add    0x1(%ecx),%dh
jo     8051967 <_IO_stdin_used+0x2a63>
xlat   %ds:(%ebx)
add    %bh,%dl
add    %bh,%dl
add    -0x74(%ecx,%eax,1),%ch
add    %edi,(%ecx)
add    %esi,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
add    %eax,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
add    %ebp,0x1(%ebx)
inc    %edx
add    %ecx,0x1(%edx)
xor    %eax,(%ecx)
xor    %al,(%ecx)
das
add    %esp,0x1(%edx)
inc    %esp
add    %eax,0x1(%ecx)
sub    (%ecx),%al
sub    %eax,(%ecx)
sub    %al,(%ecx)
cmp    %al,(%ecx)
xlat   %ds:(%ebx)
add    (%ecx),%bh
add    %eax,(%eax)
add    %cl,0x4e(%ecx,%eax,1)
add    %edx,%edi
add    (%eax),%al
add    %dl,%bh
add    0x1(%ebp),%dh
jp     80519b5 <_IO_stdin_used+0x2ab1>
jg     80519b7 <_IO_stdin_used+0x2ab3>
test   %al,(%ecx)
xchg   %al,(%ecx)
mov    (%ecx),%eax
nop
add    %edx,0x54015a01(%ebp)
add    %edx,(%ecx)
add    %eax,0x7a00(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x13000600
add    %dl,(%ebx)
add    %dl,(%eax,%eax,1)
adc    $0x0,%al
adc    $0x0,%al
push   %ss
add    %bl,(%eax)
add    %bl,(%edx)
add    %dl,(%edi)
add    %al,(%edx,%eax,1)
daa
add    %dl,(%esi)
add    %bl,(%ecx)
add    %bl,(%esi)
add    %bl,(%ebx)
add    %dl,(%edi)
add    %al,%dh
add    %bl,0x20002d00
add    %ah,(%edi)
add    %al,(%ebx)
add    (%edi),%dl
add    %bl,(%eax,%eax,1)
adc    (%eax),%eax
movb   $0x17,(%eax)
add    %dl,(%esi)
add    %bl,(%eax)
add    %bl,(%edx)
add    %al,0x17000600
add    %dl,(%esi)
add    %bl,(%eax,%eax,1)
sbb    %eax,(%eax)
sbb    (%eax),%eax
push   %ds
add    %dl,(%edi)
add    %bl,0x20002d00
add    %ch,(%edi)
add    %ch,(%edx)
add    %dl,(%edi)
add    %ah,(%ecx)
add    %bl,(%eax,%eax,1)
and    %al,(%eax)
pop    %ss
add    %ch,(%edx)
add    %dh,(%eax)
add    %ah,(%ecx)
add    %ch,(%esi)
add    %dh,(%ebx)
add    %dh,(%edx)
add    %ch,(%eax,%eax,1)
sbb    $0x0,%al
and    %eax,(%eax)
cmp    (%eax),%eax
push   %ds
add    %dh,(%eax,%eax,1)
and    %eax,(%eax)
sub    $0x0,%al
xor    %eax,(%eax)
das
add    %ch,(%edx)
add    %cl,0x0(%eax)
dec    %eax
add    %bh,(%ebx)
add    %ch,(%eax,%eax,1)
dec    %ebx
add    %ch,(%edx)
add    %dh,(%eax)
add    %ch,(%eax,%eax,1)
xor    %eax,(%eax)
add    %dh,%cs:(%edx)
add    %dh,(%ebx)
add    %dh,0x4d002c00
add    %al,0x0(%edx)
xor    $0x0,%al
inc    %edx
add    %dh,0x31002c00
add    %bl,-0x60ffcc00(%edi)
add    %dh,0x4b002c00
add    %ah,0x0(%esi)
xor    $0x31002c00,%eax
add    %al,0x0(%eax)
add    %dh,(%bp,%di)
add    %dh,0x47(%eax,%eax,1)
add    %cl,0x0(%ebp)
inc    %eax
add    %al,0x0(%eax)
inc    %edi
add    %al,0x0(%edi)
dec    %edx
add    %cl,0x0(%edx)
dec    %edx
add    %dl,0x0(%eax)
push   %eax
add    %dl,0x54(%eax,%eax,1)
add    %dh,0x0(%esi)
data16
add    %ch,0x0(%edx)
push   $0x0
jns    8051bb8 <_IO_stdin_used+0x2cb4>
jns    8051bba <_IO_stdin_used+0x2cb6>
add    %cl,0x7400(%di)
add    %bh,0x0(%ebp)
jge    8051bc4 <_IO_stdin_used+0x2cc0>
mov    (%eax),%es
xchg   %eax,%ecx
add    %dl,0x4000a400(%ecx)
add    %bl,0xa4009c(%eax,%eax,1)
movsb  %ds:(%esi),%es:(%edi)
add    %ah,0x7600a700(%esi)
add    %ch,-0x4bff4100(%eax)
add    %cl,%ah
add    %dh,-0x72ffc000(%ebp)
add    %bl,%cl
add    %ah,-0x71ff3500(%esi)
add    %ch,-0x32ff4c00(%eax)
add    %dh,-0xbff1d00(%ebp)
add    %bl,%cl
add    %ch,%bh
add    %ch,%bh
add    %cl,%bl
add    %ch,%dl
add    %bl,%dl
add    %al,(%edx)
add    %ch,%cl
add    %ah,-0x4aff5900(%esi)
add    %ch,-0x15ff4100(%eax)
add    %cl,%ah
add    %bl,%dl
add    %bh,%ah
add    %ch,-0x4aff4100(%eax)
add    %cl,%bl
add    %bh,%ah
add    %dh,%ah
add    %bh,%ch
add    %cl,%ch
add    %bh,%dh
add    %ah,%bl
add    %bl,(%edi)
add    %ebx,%edx
add    %dh,%bl
add    %cl,%ch
add    %al,(%ecx)
add    %esp,%ebx
add    %dh,%bl
add    %dh,%bl
add    %dl,(%esi)
add    %eax,(%ecx)
add    %ebx,%edx
add    %ah,(%esi)
add    %esp,(%edi)
add    %edx,(%esi)
add    %ebp,(%eax)
add    %ecx,0x1(%edx)
add    %ebp,%es:(%ebx)
add    %edi,%ebp
add    %bh,(%edi)
add    %edi,%esi
add    %bl,0x1(%edi)
sub    (%ecx),%eax
pop    %ds
add    %edi,(%edi)
add    %esp,0x1(%ecx)
pop    %edi
add    %ebp,0x6f(%ecx,%eax,1)
add    %edx,-0x50fe9eff(%ecx)
add    %ebp,-0x7d(%ecx,%eax,1)
add    %esp,(%edi)
add    %eax,0x4a012801(%ebp)
add    %eax,-0x7afe70ff(%ebx)
add    %ecx,%esp
add    %ebx,%eax
add    %esp,%esp
add    %ecx,0x101ea01(%edi)
add    %bh,%ch
add    %esi,%ecx
add    %esi,%ebx
add    %ebp,0x1(%edi)
hlt
add    %eax,(%eax)
add    %dh,%ch
add    %ebp,%ebp
add    %ebp,%esp
add    %ebp,%ebx
add    %edx,-0x50fe16ff(%ecx)
add    %ebp,%eax
add    %esp,%edi
add    %esp,%esi
add    %ecx,%esp
add    %ebx,%eax
add    %esp,%ebp
add    %esp,%esp
add    %esp,%ebx
add    %ebp,%edx
add    %ebp,%edi
add    %esi,%ecx
add    %esp,%edx
add    %ebx,%esi
add    %esi,%ebx
add    %ebx,%ebp
add    %esi,%esp
add    %edi,%eax
add    %edi,%eax
add    %edi,%eax
add    %edi,%eax
add    %edi,%eax
add    %edi,%ecx
add    %edi,%ecx
add    %edi,%ecx
add    %edi,%ecx
add    %edi,%ecx
add    %edi,%edx
add    %edi,%edx
add    %edi,%edx
add    %edi,%edx
add    %edi,%edx
add    %edi,%ebx
add    %ebx,%ecx
add    %edi,%ebx
add    %edi,%ebx
add    %edi,%ebx
add    %edi,%esp
add    %edi,%esp
add    %edi,%ebp
add    %edi,%ebp
add    %edx,%edi
add    %edi,%ebp
add    %edi,%ebp
add    %edi,%esi
add    %edi,%esi
add    %edi,%esi
add    %edi,%esi
add    %edi,%esi
add    %edi,%edi
add    %edx,%esi
add    %edi,%edi
add    %edi,%edi
add    %edi,%edi
add    %edx,%edx
add    %edx,%ecx
add    %ecx,%ebp
add    %ecx,%ebx
add    %ecx,%edx
add    %ecx,%ecx
add    %ecx,%eax
add    %eax,%edi
add    %eax,%esi
add    %eax,%ebp
add    %eax,%esp
add    %eax,%ebx
add    %eax,%edx
add    %edi,-0x42fe41ff(%edi)
add    %edi,0x1ba01bb(%ecx,%eax,1)
mov    $0xb701b801,%ecx
add    %esi,-0x4bfe4aff(%esi)
add    %esi,-0x4efe4dff(%ebx)
add    %esi,-0x52fe51ff(%eax)
add    %ebp,0x1aa01ab(%ecx,%eax,1)
test   $0xa701a801,%eax
add    %esp,-0x5efe5bff(%ebp)
add    %esp,-0x61fe60ff(%eax)
add    %ebx,-0x64fe63ff(%ebp)
add    %ebx,-0x67fe66ff(%edx)
add    %edx,-0x6afe69ff(%edi)
add    %edx,0x1920193(%ecx,%eax,1)
nop
add    %ecx,-0x73fe72ff(%esi)
add    %ecx,-0x76fe75ff(%ebx)
add    %ecx,-0x7bfe79ff(%eax)
add    %eax,0x7f018001(%ecx)
add    %edi,0x1(%esi)
jge    8051da3 <_IO_stdin_used+0x2e9f>
jl     8051da5 <_IO_stdin_used+0x2ea1>
jnp    8051da7 <_IO_stdin_used+0x2ea3>
jp     8051da9 <_IO_stdin_used+0x2ea5>
jns    8051dab <_IO_stdin_used+0x2ea7>
js     8051dad <_IO_stdin_used+0x2ea9>
ja     8051daf <_IO_stdin_used+0x2eab>
jbe    8051db1 <_IO_stdin_used+0x2ead>
jae    8051db3 <_IO_stdin_used+0x2eaf>
jb     8051db5 <_IO_stdin_used+0x2eb1>
jno    8051db7 <_IO_stdin_used+0x2eb3>
jo     8051db9 <_IO_stdin_used+0x2eb5>
insl   (%dx),%es:(%edi)
add    %ebp,0x1(%ebx)
push   $0x1
imul   $0x1670168,(%ecx),%eax
add    %sp,0x1(%ebp)
bound  %eax,(%ecx)
pusha
add    %ebx,0x1(%ebp)
pop    %esp
add    %ebx,0x1(%ebx)
pop    %edx
add    %ebx,0x1(%ecx)
pop    %eax
add    %edx,0x1(%edi)
push   %esi
add    %edx,0x1(%ebp)
push   %esp
add    %edx,0x1(%ebx)
push   %edx
add    %ecx,0x1(%edi)
dec    %esi
add    %ecx,0x1(%ebp)
dec    %esp
add    %ecx,0x1(%ecx)
inc    %esi
add    %eax,0x1(%ebp)
inc    %esp
add    %eax,0x1(%ebx)
inc    %edx
add    %eax,0x1(%ecx)
inc    %eax
add    %edi,(%esi)
add    %edi,0x3b013c01
add    %edi,(%edx)
add    %edi,(%ecx)
add    %edi,(%eax)
add    %esi,(%edi)
add    %esi,(%esi)
add    %esi,0x33013401
add    %esi,(%edx)
add    %esi,(%ecx)
add    %esi,(%eax)
add    %ebp,(%edi)
add    %ebp,(%esi)
add    %ebp,0x2a012c01
add    %ebp,(%ecx)
add    %esp,0x23012401
add    %esp,(%edx)
add    %esp,(%ecx)
add    %esp,(%eax)
add    %ebx,(%esi)
add    %ebx,0x1b011c01
add    %ebx,(%edx)
add    %ebx,(%ecx)
add    %ebx,(%eax)
add    %edx,(%edi)
add    %edx,0x13011401
add    %edx,(%edx)
add    %edx,(%ecx)
add    %edx,(%eax)
add    %ecx,(%edi)
add    %ecx,0xb010c01
add    %ecx,(%edx)
add    %ecx,(%ecx)
add    %ecx,(%eax)
add    %eax,(%edi)
add    %eax,(%esi)
add    %eax,0x3010401
add    %eax,(%edx)
add    %eax,(%eax)
add    %edi,%edi
add    %bh,%bl
add    %bh,%dl
add    %bh,%cl
add    %bh,%al
add    %dh,%bh
add    %dh,%dh
add    %dh,%ch
add    %ch,%dh
add    %ch,%ch
add    %ch,%ah
add    %ch,%bl
add    %ch,%cl
add    %ch,%al
add    %ah,%bh
add    %ah,%dh
add    %ah,%ch
add    %ah,%ah
add    %ah,%dl
add    %ah,%cl
add    %ah,%al
add    %bl,%bh
add    %bl,%dh
add    %bl,%ch
add    %bl,%ah
add    %bl,%bl
add    %dl,%bh
add    %dl,%dh
add    %dl,%ch
add    %dl,%ah
add    %dl,%bl
add    %dl,%dl
add    %dl,%cl
add    %dl,%al
add    %cl,%bh
add    %cl,%dh
add    %cl,%dl
add    %cl,%cl
add    %cl,%al
add    %al,%bh
add    %al,%ch
add    %al,%ah
add    %al,%bl
add    %al,%dl
add    %al,%cl
add    %al,%al
add    %bh,-0x44ff4300(%esi)
add    %bh,-0x47ff4700(%edx)
add    %dh,-0x4dff4a00(%edi)
add    %dh,-0x50ff5000(%ecx)
add    %ch,-0x53ff5300(%esi)
add    %ch,-0x56ff5600(%ebx)
add    %ah,-0x66ff5e00(%ebx)
add    %bl,-0x69ff6900(%eax)
add    %dl,-0x6cff6c00(%ebp)
add    %dl,-0x70ff7000(%edx)
add    %cl,0x89008b(%eax,%eax,1)
mov    %al,(%eax)
xchg   %eax,(%eax)
xchg   %al,(%eax)
test   %eax,(%eax)
test   %al,(%eax)
(bad)
add    %al,0x7f008000(%ecx)
add    %bh,0x0(%esi)
jl     8051f1e <_IO_stdin_used+0x301a>
jnp    8051f20 <_IO_stdin_used+0x301c>
jp     8051f22 <_IO_stdin_used+0x301e>
js     8051f24 <_IO_stdin_used+0x3020>
ja     8051f26 <_IO_stdin_used+0x3022>
jb     8051f28 <_IO_stdin_used+0x3024>
jno    8051f2a <_IO_stdin_used+0x3026>
jo     8051f2c <_IO_stdin_used+0x3028>
outsl  %ds:(%esi),(%dx)
add    %ch,0x0(%esi)
insl   (%dx),%es:(%edi)
add    %ch,0x6b(%eax,%eax,1)
add    %ch,0x0(%ecx)
push   $0x63006400
add    %ah,0x0(%eax)
pop    %edi
add    %bl,0x0(%esi)
pop    %ebp
add    %bl,0x5b(%eax,%eax,1)
add    %bl,0x0(%ecx)
pop    %eax
add    %dl,0x0(%edi)
push   %esi
add    %dl,0x0(%ebp)
push   %ebx
add    %dl,0x0(%edx)
push   %ecx
add    %cl,0x0(%edi)
dec    %esi
add    %al,0x0(%esi)
inc    %esp
add    %al,0x0(%ebx)
cmp    $0x3a003c00,%eax
add    %bh,(%ecx)
add    %bh,(%eax)
add    %dh,(%edi)
add    %dh,(%esi)
add    %ch,(%ecx)
add    %ch,(%eax)
add    %ah,(%esi)
add    %ah,0x23002400
add    %ah,(%edx)
add    %bl,(%edi)
add    %cl,(%edi)
add    %cl,0x9000b00
add    %cl,(%eax)
add    %al,(%edi)
add    %dh,%bh
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %esi,%edi
add    %eax,(%eax)
add    %al,(%eax)
add    %cl,(%edx)
add    %cl,(%ebx)
add    %cl,(%eax,%eax,1)
or     $0xd000e00,%eax
add    %cl,(%edi)
add    %dl,(%eax)
add    %dl,(%ecx)
add    %dl,(%edx)
add    %dl,(%ebx)
add    %dl,(%eax,%eax,1)
adc    $0x0,%al
adc    $0xa001600,%eax
add    %dl,(%edi)
add    %cl,(%edx)
add    %cl,(%edx)
add    %bl,(%eax)
add    %cl,(%edx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %bl,(%ecx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %bl,(%edx)
add    %bl,(%ebx)
add    %cl,(%edx)
add    %bl,(%eax,%eax,1)
sbb    $0xa001e00,%eax
add    %cl,(%edx)
add    %bl,(%edi)
add    %cl,(%edx)
add    %ah,(%eax)
add    %ah,(%ecx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %ah,(%edx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %ah,(%ebx)
add    %ah,(%eax,%eax,1)
or     (%eax),%al
or     (%eax),%al
or     (%eax),%al
and    $0xa002600,%eax
add    %ah,(%edi)
add    %ch,(%eax)
add    %ch,(%ecx)
add    %cl,(%edx)
add    %cl,(%edx)
add    %cl,(%ebx)
add    %cl,(%eax,%eax,1)
or     $0xd000e00,%eax
add    %cl,(%edi)
add    %dl,(%eax)
add    %dl,(%ecx)
add    %dl,(%edx)
add    %dl,(%ebx)
add    %dl,(%eax,%eax,1)
adc    $0x0,%al
adc    $0x2b002a00,%eax
add    %ch,(%eax,%eax,1)
sub    (%eax),%eax
sub    (%eax),%eax
sub    $0x2b002b00,%eax
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %ch,(%esi)
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %ch,(%edi)
add    %dh,(%eax)
add    %ch,(%ebx)
add    %dh,(%ecx)
add    %dh,(%edx)
add    %dh,(%ebx)
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %bl,(%edi)
add    %cl,(%edx)
add    %dh,(%eax,%eax,1)
xor    $0x2b002b00,%eax
add    %dh,(%esi)
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %dh,(%edi)
add    %bh,(%eax)
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %ch,(%ebx)
add    %bh,(%ecx)
add    %bh,(%edx)
add    %ch,(%ebx)
add    %bh,(%ebx)
add    %bh,(%eax,%eax,1)
cmp    $0x3f002b00,%eax
add    %bh,(%edi)
add    %cl,0x0(%eax)
dec    %eax
add    %cl,0x0(%edx)
dec    %edx
add    %cl,0x0(%edx)
dec    %ebx
add    %dl,0x0(%esi)
pop    %edx
add    %cl,0x0(%esi)
cmpsb  %es:(%edi),%ds:(%esi)
add    %esi,0x0(%eax)
dec    %esp
add    %bl,0x0(%eax)
bound  %eax,(%eax)
pop    %ebx
add    %cl,0x0(%edi)
sbb    %al,(%ecx)
popa
add    %bh,0x0(%edi)
data16
add    %dh,0x0(%ecx)
arpl   %ax,(%ecx)
push   %eax
add    %bl,0x0(%ebp)
dec    %ecx
add    %bl,(%ecx)
add    %edx,0x0(%ecx)
dec    %ebp
add    %dl,0x0(%edi)
pop    %edx
add    %al,0x0(%eax)
inc    %eax
add    %dl,0x0(%edx)
dec    %esp
add    %bl,0x0(%esi)
pop    %ecx
add    %bl,0x63(%eax,%eax,1)
add    %dl,0x0(%ebx)
popa
add    %al,-0x7cff9900(%eax)
add    %dh,0x54(%eax,%eax,1)
add    %ch,0x0(%eax)
pop    %edi
add    %cl,0x55(%eax,%eax,1)
add    %dh,0x0(%ebp)
test   %al,(%eax)
imul   $0x620081,(%eax),%eax
mov    (%eax),%al
ja     805217a <_IO_stdin_used+0x3276>
pusha
add    %ch,0x0(%edx)
xchg   %eax,%edi
add    %ah,-0x73(%eax,%eax,1)
add    %ch,0x0(%ebx)
js     8052188 <_IO_stdin_used+0x3284>
xchg   %al,(%eax)
addl   $0x76,(%eax)
add    %cl,0x0(%eax)
dec    %eax
add    %bl,-0x59ff8700(%eax)
add    %dh,0x0(%ebp)
test   %eax,(%eax)
jp     805219e <_IO_stdin_used+0x329a>
xchg   %eax,(%eax)
(bad)
add    %cl,-0x70ff7500(%edx)
add    %bh,0x0(%ebx)
cmpsl  %es:(%edi),%ds:(%esi)
add    %ah,-0x5fff7200(%eax)
add    %dl,-0x77ff8400(%eax)
add    %ah,-0xfff8b00(%eax)
add    %dl,-0x58ff8300(%ecx)
add    %ah,0x7e009200(%edi)
add    %cl,-0x58ff6500(%ecx)
add    %cl,0xa300cb(%eax,%eax,1)
test   $0x0,%al
pushf
add    %bl,0xa400a4(%eax,%eax,1)
dec    %edx
add    %cl,0x0(%edx)
dec    %edx
add    %ch,-0x4fff5400(%ebx)
add    %dh,-0x58ff3400(%ecx)
add    %al,%dl
add    %al,%bl
add    %dl,%al
add    %dl,%cl
add    %bh,-0x33ff3400(%edi)
add    %dl,%ch
add    %dl,%dh
add    %cl,%ah
add    %ah,%dh
add    %ah,%bh
add    %dh,%dl
add    %bl,-0x10ff1100(%ebp)
add    %dh,%bl
add    %dh,%bl
add    %dh,%ah
add    %dh,%ah
add    %cl,%ch
add    %dh,%ah
add    %dh,%ah
add    %al,(%edx)
add    %esi,%esp
add    %al,(%ecx,%eax,1)
sahf
add    %cl,%ah
add    %ch,(%ecx,%eax,1)
cmc
add    %dh,%ah
add    %ah,%bl
add    %dh,%dh
add    %al,(%ebx)
add    %esi,%esp
add    %al,0x4a00f401
add    %ebp,0x47014701
add    %ebx,(%esi)
add    %eax,0x1(%ecx)
add    %ecx,%cs:(%esi)
add    %esp,(%eax)
add    %esi,%esp
add    %dh,%ah
add    %al,(%esi)
add    %esi,%esp
add    %dh,%ah
add    %al,0x1(%edx)
pop    %ds
add    %ebp,(%edi)
add    %edx,0x1(%eax)
testl  $0x1070111,(%eax)
pop    %ds
add    %edx,0x1(%ecx)
dec    %edx
add    %edx,0x1(%edx)
pop    %ds
add    %edx,0x1f(%ecx,%eax,1)
add    %ebp,0x1(%edi)
xor    %al,(%ecx)
dec    %eax
add    %esp,(%ecx)
add    %edx,0x1(%eax)
cmp    (%ecx),%al
dec    %ecx
add    %ecx,0x1(%ecx)
push   %eax
add    %edx,0x1(%ecx)
xor    %eax,(%ecx)
je     805228d <_IO_stdin_used+0x3389>
jbe    805228f <_IO_stdin_used+0x338b>
push   %ecx
add    %edi,0x1(%eax)
xchg   %eax,%ecx
add    %esi,0x1(%ebp)
je     8052299 <_IO_stdin_used+0x3395>
push   %ebx
add    %esi,0x55(%ecx,%eax,1)
add    %esp,0x6f017501(%edx)
add    %esi,0x1(%ebp)
mov    %al,0xa201a301
add    %ebp,-0x5cfe33ff(%edi)
add    %ecx,%esp
add    %esp,0x7701c001(%ebx)
add    %eax,%eax
add    %edi,0x1(%ecx)
xchg   %eax,%ecx
add    %eax,%ecx
add    %eax,%eax
add    %eax,%ecx
add    %esp,%esp
add    %ebp,%edx
add    %ebp,%edi
add    %eax,%ecx
add    %esi,%ecx
add    %edi,0x1f401f3(%eax,%eax,1)
cmc
add    %ebp,-0x5afe09ff(%edi)
add    %dh,%dl
add    %esi,%edx
add    %esi,%edx
add    %esi,%edx
add    %ecx,%esp
add    %ebp,%ecx
add    %ebx,%eax
add    %esi,%eax
add    %esi,%eax
add    %esi,%eax
add    %esp,%esp
add    %ebp,%edx
add    %esi,%eax
add    %ebp,%edi
add    %ebp,%ecx
add    %esi,%ecx
add    %esi,%ebx
add    %esi,%esp
add    %ebp,%esi
add    %ebp,%ebp
add    %esi,%ebp
add    %ebp,%esp
add    %esi,%esi
add    %edi,(%esi)
add    %bh,(%esi)
add    %bh,(%esi)
add    %bh,(%esi)
add    %bh,(%esi)
add    %al,0x0(%ecx)
inc    %ecx
add    %al,0x0(%ecx)
inc    %ecx
add    %al,0x0(%ecx)
inc    %esp
add    %al,0x44(%eax,%eax,1)
add    %al,0x44(%eax,%eax,1)
add    %al,0x0(%esi)
jmp    805232f <_IO_stdin_used+0x342b>
inc    %esi
add    %al,0x0(%esi)
inc    %esi
add    %dh,0x0(%ebx)
jae    8052338 <_IO_stdin_used+0x3434>
lcall  $0x9a01,$0xe9009a00
add    %bl,-0x60ff6100(%edx)
add    %bl,-0x60ff6100(%edi)
add    %ah,-0x5dfe1800(%edx)
add    %ah,-0x18ff5e00(%edx)
add    %esp,%esi
add    %esp,%ebp
add    %esp,%ecx
add    %esp,%eax
add    %ebx,%edi
add    %esp,%ebx
add    %ebx,%esp
add    %ebx,%ebx
add    %ebx,%edx
add    %esp,%edx
add    %esp,%ecx
add    %esp,%ecx
add    %esp,%eax
add    %ebx,%edi
add    %esp,%eax
add    %ebx,%edi
add    %esp,%eax
add    %ebx,%edi
add    %ebx,%esp
add    %ebx,%ebx
add    %ebx,%edx
add    %ebx,%edx
add    %ebx,%esi
add    %ebx,%ebp
add    %ebx,%esp
add    %ebx,%ebx
add    %ebx,%edx
add    %ebx,%ecx
add    %edx,%ebp
add    %edx,%esp
add    %edx,%ebx
add    %edx,%edi
add    %edx,%eax
add    %ecx,%edi
add    %ecx,%esi
add    %edx,%esi
add    %edx,%ebp
add    %edx,%ebp
add    %edx,%esp
add    %edx,%ebx
add    %edx,%esp
add    %edx,%ebx
add    %edx,%esp
add    %edx,%ebx
add    %edx,%eax
add    %ecx,%edi
add    %ecx,%esi
add    %ecx,%esi
add    %edx,%edx
add    %edx,%ecx
add    %edx,%eax
add    %ecx,%edi
add    %ecx,%esi
add    %ecx,%ebp
add    %ecx,%ebx
add    %ecx,%edx
add    %ecx,%ecx
add    %ecx,%eax
add    %eax,%edi
add    %eax,%esi
add    %eax,%ebp
add    %eax,%esp
add    %eax,%ebx
add    %eax,%edx
add    %edi,-0x42fe41ff(%edi)
add    %edi,0x1ba01bb(%ecx,%eax,1)
mov    $0xb701b801,%ecx
add    %esi,-0x4bfe4aff(%esi)
add    %esi,-0x4efe4dff(%ebx)
add    %esi,-0x52fe51ff(%eax)
add    %ebp,0x1aa01ab(%ecx,%eax,1)
test   $0xa701a801,%eax
add    %esp,-0x5efe5bff(%ebp)
add    %esp,-0x61fe60ff(%eax)
add    %ebx,-0x64fe63ff(%ebp)
add    %ebx,-0x67fe66ff(%edx)
add    %edx,-0x6afe69ff(%edi)
add    %edx,0x1920193(%ecx,%eax,1)
dec    %eax
add    %eax,-0x70fe6fff(%edi)
add    %eax,-0x72fe71ff(%edx)
add    %ecx,0x18a018b(%ecx,%eax,1)
mov    %eax,(%ecx)
mov    %al,(%ecx)
outsb  %ds:(%esi),(%dx)
add    %eax,-0x79fe78ff(%edi)
add    %eax,-0x7cfe7bff(%ebp)
add    %eax,-0x7efe7dff(%edx)
add    %eax,0x7e017f01(%eax)
add    %edi,0x1(%ebp)
jl     8052463 <_IO_stdin_used+0x355f>
jnp    8052465 <_IO_stdin_used+0x3561>
jp     8052467 <_IO_stdin_used+0x3563>
jae    8052469 <_IO_stdin_used+0x3565>
jb     805246b <_IO_stdin_used+0x3567>
jno    805246d <_IO_stdin_used+0x3569>
jo     805246f <_IO_stdin_used+0x356b>
outsb  %ds:(%esi),(%dx)
add    %ebp,0x1(%esi)
outsb  %ds:(%esi),(%dx)
add    %esp,0x6d(%ecx,%eax,1)
add    %ebp,0x5e(%ecx,%eax,1)
add    %ebp,0x1(%ebx)
push   $0x1
imul   $0x1670168,(%ecx),%eax
add    %sp,0x1(%ebp)
dec    %ebx
add    %esp,0x64(%ecx,%eax,1)
add    %esp,0x1(%edx)
popa
add    %esp,0x1(%eax)
pop    %edi
add    %ebx,0x1(%esi)
pop    %esi
add    %ebx,0x1(%ebp)
pop    %esp
add    %ebx,0x1(%ebx)
pop    %edx
add    %ebx,0x1(%ecx)
pop    %eax
add    %edx,0x1(%edi)
push   %esi
add    %ecx,0x1(%edi)
dec    %esi
add    %ecx,0x1(%ebp)
dec    %esp
add    %ecx,0x1(%ebx)
dec    %ebx
add    %ecx,0x1(%ebx)
inc    %esi
add    %eax,0x1(%ebp)
inc    %esp
add    %eax,0x1(%ebx)
inc    %eax
add    %edi,(%edi)
add    %edi,(%esi)
add    %edi,0x3b013c01
add    %edi,(%ecx)
add    %edi,(%eax)
add    %esi,(%edi)
add    %esi,(%esi)
add    %esi,0x33013401
add    %esi,(%edx)
add    %ebp,(%ebx)
add    %ebp,(%edx)
add    %ebp,(%ecx)
add    %ebp,(%eax)
add    %esp,(%edi)
add    %esp,(%esi)
add    %esp,0x23012401
add    %esp,(%edx)
add    %ebx,0x1b011c01
add    %ebx,(%edx)
add    %edx,(%edi)
add    %edx,(%esi)
add    %edx,0x13011401
add    %edx,(%edx)
add    %edx,(%eax)
add    %ecx,(%edi)
add    %ecx,0xb010c01
add    %ecx,(%edx)
add    %ecx,(%ecx)
add    %ecx,(%eax)
add    %eax,(%ecx)
add    %eax,(%eax)
add    %edi,%edi
add    %bh,%dh
add    %bh,%ch
add    %bh,%ah
add    %bh,%bl
add    %bh,%dl
add    %bh,%cl
add    %bh,%al
add    %dh,%cl
add    %dh,%cl
add    %ch,%dh
add    %ch,%ch
add    %ch,%ah
add    %ch,%bl
add    %ch,%dl
add    %ch,%cl
add    %bl,%al
add    %ch,%al
add    %ah,%ch
add    %ah,%ah
add    %ah,%dl
add    %ah,%cl
add    %ah,%al
add    %bl,%bh
add    %bl,%dh
add    %bl,%ch
add    %bl,%ah
add    %bl,%bl
add    %bl,%dl
add    %bl,%cl
add    %bl,%al
add    %bl,%al
add    %dl,%bh
add    %dl,%ah
add    %dl,%bl
add    %dl,%dl
add    %cl,%bh
add    %cl,%dh
add    %cl,%dl
add    %cl,%cl
add    %cl,%al
add    %al,%bh
add    %al,%dh
add    %al,%ch
add    %dh,-0x3eff3c00(%ebx)
add    %al,%al
add    %bh,-0x44ff4300(%esi)
add    %bh,-0x47ff4700(%edx)
add    %dh,-0x4aff4a00(%edi)
add    %dh,0xb300b3(%eax,%eax,1)
mov    $0x0,%dl
scas   %es:(%edi),%eax
add    %ch,-0x55ff5300(%esi)
add    %ch,0x4500a100(%ecx)
add    %al,0x0(%ebx)
cltd
add    %cl,-0x7cff6a00(%edx)
add    %dl,-0x6cff6c00(%ebp)
add    %dh,0x0(%edx)
popa
add    %ch,0x0(%edi)
pop    %edx
add    %ch,0x0(%esi)
insl   (%dx),%es:(%edi)
add    %ch,0x65(%eax,%eax,1)
add    %al,0x0(%edi)
inc    %ebp
add    %al,0x0(%ebx)
testl  $0x420042,(%ecx)
or     %eax,(%eax)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
testl  $0x1f701f7,(%ecx)
das
jo     80526b7 <_IO_stdin_used+0x37b3>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    80526af <_IO_stdin_used+0x37ab>
insb   (%dx),%es:(%edi)
data16
das
data16
fs
das
xor    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80526c2 <_IO_stdin_used+0x37be>
outsb  %fs:(%esi),(%dx)
daa
je     805267b <_IO_stdin_used+0x3777>
outsl  %ds:(%esi),(%dx)
jo     80526c3 <_IO_stdin_used+0x37bf>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25000a73
add    %ch,%fs:(%edi)
fs
gs
jbe    805269b <_IO_stdin_used+0x3797>
je     80526e2 <_IO_stdin_used+0x37de>
jns    8052670 <_IO_stdin_used+0x376c>
das
fs
gs
jbe    80526a4 <_IO_stdin_used+0x37a0>
je     80526eb <_IO_stdin_used+0x37e7>
jns    80526a9 <_IO_stdin_used+0x37a5>
add    %ch,(%edi)
fs
gs
jbe    80526ae <_IO_stdin_used+0x37aa>
jbe    80526e4 <_IO_stdin_used+0x37e0>
das
xor    %al,(%eax)
das
fs
gs
jbe    80526b8 <_IO_stdin_used+0x37b4>
jae    8052704 <_IO_stdin_used+0x3800>
jae    8052701 <_IO_stdin_used+0x37fd>
je     8052708 <_IO_stdin_used+0x3804>
add    %ch,(%edi)
fs
gs
jbe    80526c4 <_IO_stdin_used+0x37c0>
arpl   %bp,0x6e(%edi)
jae    8052709 <_IO_stdin_used+0x3805>
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8052710 <_IO_stdin_used+0x380c>
outsb  %fs:(%esi),(%dx)
daa
je     80526c9 <_IO_stdin_used+0x37c5>
addr16
gs
je     80526cd <_IO_stdin_used+0x37c9>
popa
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8052730 <_IO_stdin_used+0x382c>
outsl  %ds:(%esi),(%dx)
jb     80526df <_IO_stdin_used+0x37db>
jb     8052726 <_IO_stdin_used+0x3822>
data16
gs
jb     8052737 <_IO_stdin_used+0x3833>
imul   $0x206f7420,0x67(%esi),%ebp
je     8052736 <_IO_stdin_used+0x3832>
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8052744 <_IO_stdin_used+0x3840>
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %al,0x26(%edx)
add    $0x5266708,%eax
or     %dh,0x26(%eax)
add    $0x5267a08,%eax
or     %al,0x26900805(%esi,%eiz,1)
add    $0x8,%eax
add    %ch,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x696f6b00,%eax
cmp    %ch,0x7b732500
add    %ch,0x654d0073(,%eiz,1)
je     8052775 <_IO_stdin_used+0x3871>
pop    %edi
add    %ah,0x61(%ebp,%eiz,2)
xor    %fs:0x0(%edi),%bl
popa
jae    8052793 <_IO_stdin_used+0x388f>
jne    805278f <_IO_stdin_used+0x388b>
imul   $0x6f736920,0x67(%esi),%ebp
sub    $0x39353838,%eax
sub    $0x73252031,%eax
or     (%eax),%al
popa
jae    80527ab <_IO_stdin_used+0x38a7>
jne    80527a7 <_IO_stdin_used+0x38a3>
imul   $0x6f736920,0x67(%esi),%ebp
sub    $0x39353838,%eax
sub    $0x25203531,%eax
jae    8052757 <_IO_stdin_used+0x3853>
add    %ah,0x73(%ecx)
jae    80527c7 <_IO_stdin_used+0x38c3>
insl   (%dx),%es:(%edi)
imul   $0x6f736920,0x67(%esi),%ebp
sub    $0x39353838,%eax
sub    $0x73252032,%eax
or     (%eax),%al
popa
jae    80527dc <_IO_stdin_used+0x38d8>
jne    80527d8 <_IO_stdin_used+0x38d4>
imul   $0x6f736920,0x67(%esi),%ebp
sub    $0x39353838,%eax
sub    $0x73252033,%eax
or     (%eax),%al
popa
jae    80527f4 <_IO_stdin_used+0x38f0>
jne    80527f0 <_IO_stdin_used+0x38ec>
imul   $0x6f736920,0x67(%esi),%ebp
sub    $0x39353838,%eax
sub    $0x73252034,%eax
or     (%eax),%al
jne    8052806 <_IO_stdin_used+0x3902>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    8052815 <_IO_stdin_used+0x3911>
jns    8052811 <_IO_stdin_used+0x390d>
and    %ah,(%edi)
and    $0xa2773,%eax
imul   $0x3538382d,0x6f(%ebx),%esi
cmp    %ebp,0x73690032
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73690033,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73690034,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73690035,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73690037,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73690038,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x73690039,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x39353838,%eax
sub    $0x69003031,%eax
jae    8052876 <_IO_stdin_used+0x3972>
sub    $0x39353838,%eax
sub    $0x6d003531,%eax
popa
jp     8052883 <_IO_stdin_used+0x397f>
jbe    805287f <_IO_stdin_used+0x397b>
popa
add    %ah,0x70(%ebx)
sub    $0x30353231,%eax
add    %ch,0x6f(%ebx)
imul   $0x6b00722d,(%eax),%edi
outsl  %ds:(%esi),(%dx)
imul   $0x7400752d,(%eax),%edi
imul   $0x303236,0x2d(%ebx),%esi
imul   $0x3630312d,0x6f(%ebx),%esi
xor    $0x36,%al
sub    $0x69003831,%eax
jae    80528b5 <_IO_stdin_used+0x39b1>
sub    $0x312d7269,%eax
cmp    %esi,(%edi)
add    %ch,0x73(%ecx)
outsl  %ds:(%esi),(%dx)
sub    $0x322d7269,%eax
xor    %bh,(%ecx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80528d0 <_IO_stdin_used+0x39cc>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x63614200
imul   $0x61,0x70(%ebx),%edx
arpl   %sp,0x0(%ebp)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80528e4 <_IO_stdin_used+0x39e0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x626154,(%eax),%eax
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80528f2 <_IO_stdin_used+0x39ee>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x0
dec    %esp
imul   $0x64656566,0x65(%esi),%ebp
add    %cl,0x6f(%eax)
insl   (%dx),%es:(%edi)
add    %al,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x6e(%ebp)
add    %dl,%fs:0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x50(%eax,%eax,1)
popa
addr16
gs
push   %ebp
jo     80528aa <_IO_stdin_used+0x39a6>
push   %eax
jb     8052916 <_IO_stdin_used+0x3a12>
outsl  %ds:(%esi),(%dx)
jb     80528b0 <_IO_stdin_used+0x39ac>
push   %eax
popa
addr16
gs
inc    %esp
outsl  %ds:(%esi),(%dx)
ja     8052926 <_IO_stdin_used+0x3a22>
add    %cl,0x65(%esi)
js     8052931 <_IO_stdin_used+0x3a2d>
add    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     805292c <_IO_stdin_used+0x3a28>
jo     8052931 <_IO_stdin_used+0x3a2d>
imul   $0x6e6f6974,0x61(%ebx),%esp
add    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     805293b <_IO_stdin_used+0x3a37>
jo     8052940 <_IO_stdin_used+0x3a3c>
jns    80528d6 <_IO_stdin_used+0x39d2>
jo     8052947 <_IO_stdin_used+0x3a43>
jne    8052948 <_IO_stdin_used+0x3a44>
add    %dh,%fs:0x74(%ebx)
gs
jb     805294d <_IO_stdin_used+0x3a49>
imul   $0x6c697000,0x67(%esi),%ebp
arpl   %si,0x6f(%edx)
ja     80528ed <_IO_stdin_used+0x39e9>
jo     8052950 <_IO_stdin_used+0x3a4c>
jb     8052952 <_IO_stdin_used+0x3a4e>
addr16 jb 8052955 <_IO_stdin_used+0x3a51>
jo     805295e <_IO_stdin_used+0x3a5a>
add    %cl,0x73(%edi)
insb   (%dx),%es:(%edi)
popa
jae    8052965 <_IO_stdin_used+0x3a61>
add    %cl,0x6f(%edi)
bound  %ebp,0x71(%ecx,%ebp,2)
jne    805296b <_IO_stdin_used+0x3a67>
add    %dl,0x68(%ebx)
imul   $0x53004c5f,0x74(%esi),%esp
push   $0x5f746669
push   %edx
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805298e <_IO_stdin_used+0x3a8a>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
dec    %esp
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052998 <_IO_stdin_used+0x3a94>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
push   %edx
add    %al,0x6c(%ecx)
je     805297b <_IO_stdin_used+0x3a77>
add    %al,0x6c(%ecx)
je     8052986 <_IO_stdin_used+0x3a82>
add    %al,0x6c(%ecx)
je     8052998 <_IO_stdin_used+0x3a94>
dec    %esp
add    %al,0x6c(%ecx)
je     805299e <_IO_stdin_used+0x3a9a>
push   %edx
add    %al,0x6c(%ecx)
je     805298c <_IO_stdin_used+0x3a88>
jb     80529a6 <_IO_stdin_used+0x3aa2>
dec    %esp
add    %al,0x6c(%ecx)
je     8052994 <_IO_stdin_used+0x3a90>
jb     80529ae <_IO_stdin_used+0x3aaa>
push   %edx
add    %al,0x6c(%ecx)
je     80529a1 <_IO_stdin_used+0x3a9d>
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %ecx
insb   (%dx),%es:(%edi)
je     80529bd <_IO_stdin_used+0x3ab9>
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %ecx
insb   (%dx),%es:(%edi)
je     80529b9 <_IO_stdin_used+0x3ab5>
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %ecx
insb   (%dx),%es:(%edi)
je     80529b7 <_IO_stdin_used+0x3ab3>
jb     80529d1 <_IO_stdin_used+0x3acd>
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %ebx
inc    %ebx
je     80529ed <_IO_stdin_used+0x3ae9>
insb   (%dx),%es:(%edi)
add    %dl,0x43(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     80529f5 <_IO_stdin_used+0x3af1>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %dl,0x70(%ebx)
popa
ja     80529f9 <_IO_stdin_used+0x3af5>
pop    %edi
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8052a00 <_IO_stdin_used+0x3afc>
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x65(%ebx)
jns    80529fa <_IO_stdin_used+0x3af6>
outsl  %ds:(%esi),(%dx)
popa
jb     8052a00 <_IO_stdin_used+0x3afc>
push   %ebx
imul   $0x55006c61,0x6e(%edi),%esp
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x70(%ecx)
jae    8052a09 <_IO_stdin_used+0x3b05>
push   %ebx
push   $0x746669
insb   (%dx),%es:(%edi)
popa
insl   (%dx),%es:(%edi)
bound  %esp,0x0(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
popa
insl   (%dx),%es:(%edi)
fs
popa
add    %cl,0x6d(%ecx,%eiz,2)
bound  %esp,0x0(%ecx,%eiz,2)
dec    %esp
popa
insl   (%dx),%es:(%edi)
fs
popa
add    %bl,0x69(%eax)
add    %cl,0x73(%ebx)
imul   $0x69686b,(%eax),%eax
inc    %ebx
push   $0x684b0069
imul   $0x69637361,(%eax),%eax
imul   $0x64006564,0x6c(%ecx,%ebp,2),%esi
gs
popa
fs
pop    %edi
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x64,%gs:(%eax),%eax
gs
popa
fs
pop    %edi
arpl   %sp,0x64(%ebp)
imul   $0x61656400,0x61(%esp,%ebp,2),%ebp
fs
pop    %edi
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%ebp,%eiz,2)
fs
pop    %edi
arpl   %bp,0x72(%ecx)
arpl   %si,0x6d(%ebp)
data16
insb   (%dx),%es:(%edi)
gs
js     8052a1c <_IO_stdin_used+0x3b18>
fs
gs
popa
fs
pop    %edi
bound  %esi,0x65(%edx)
jbe    8052a8b <_IO_stdin_used+0x3b87>
add    %ah,0x61(%ebp,%eiz,2)
fs
pop    %edi
je     8052a97 <_IO_stdin_used+0x3b93>
insb   (%dx),%es:(%edi)
fs add %ah,%fs:%gs:0x61(%ebp,%eiz,2)
fs
pop    %edi
outsl  %fs:(%esi),(%dx)
jne    8052a9d <_IO_stdin_used+0x3b99>
insb   (%dx),%es:(%edi)
gs
popa
arpl   %si,0x74(%ebp)
add    %cl,%gs:0x64(%ecx)
outsl  %ds:(%esi),(%dx)
je     8052aa9 <_IO_stdin_used+0x3ba5>
bound  %ebp,0x76(%edi)
add    %cl,%gs:0x61(%ecx)
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     8052a57 <_IO_stdin_used+0x3b53>
outsl  %fs:(%esi),(%dx)
je     8052ac7 <_IO_stdin_used+0x3bc3>
gs
jae    8052ad1 <_IO_stdin_used+0x3bcd>
imul   $0x746f6469,(%eax),%eax
insb   (%dx),%es:(%edi)
gs
jae    8052adb <_IO_stdin_used+0x3bd7>
add    %ch,0x6f(%esi)
sub    $0x61657262,%eax
imul   $0x70,0x73(%edi),%ebx
popa
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
bound  %esi,0x65(%edx)
popa
imul   $0x61,0x70(%ebx),%esi
arpl   %sp,0x0(%ebp)
jo     8052ae8 <_IO_stdin_used+0x3be4>
jb     8052aea <_IO_stdin_used+0x3be6>
addr16 jb 8052aed <_IO_stdin_used+0x3be9>
jo     8052af6 <_IO_stdin_used+0x3bf2>
pop    %edi
jae    8052afa <_IO_stdin_used+0x3bf6>
outsb  %ds:(%si),(%dx)
add    %dh,0x65(%ebx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dh,0x6f(%ebx)
data16
je     8052b00 <_IO_stdin_used+0x3bfc>
push   $0x65687079
outsb  %ds:(%esi),(%dx)
add    %ah,0x79(%ebx)
jb     8052b15 <_IO_stdin_used+0x3c11>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052b18 <_IO_stdin_used+0x3c14>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052b31 <_IO_stdin_used+0x3c2d>
gs
jb     8052b1f <_IO_stdin_used+0x3c1b>
imul   $0x0,0x61(%eax),%ebp
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8052b3a <_IO_stdin_used+0x3c36>
je     8052b34 <_IO_stdin_used+0x3c30>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052b4d <_IO_stdin_used+0x3c49>
gs
jb     8052b3b <_IO_stdin_used+0x3c37>
push   $0x79630061
jb     8052b4c <_IO_stdin_used+0x3c48>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052b4f <_IO_stdin_used+0x3c4b>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052b68 <_IO_stdin_used+0x3c64>
gs
jb     8052b56 <_IO_stdin_used+0x3c52>
add    %ah,%gs:0x79(%bp,%di)
jb     8052b67 <_IO_stdin_used+0x3c63>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052b6a <_IO_stdin_used+0x3c66>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052b83 <_IO_stdin_used+0x3c7f>
gs
jb     8052b71 <_IO_stdin_used+0x3c6d>
addr16 push $0x79630065
jb     8052b83 <_IO_stdin_used+0x3c7f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052b86 <_IO_stdin_used+0x3c82>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052b9f <_IO_stdin_used+0x3c9b>
gs
jb     8052b8d <_IO_stdin_used+0x3c89>
imul   $0x69727963,0x0(%ecx),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052ba1 <_IO_stdin_used+0x3c9d>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052bba <_IO_stdin_used+0x3cb6>
gs
jb     8052ba8 <_IO_stdin_used+0x3ca4>
jns    8052bac <_IO_stdin_used+0x3ca8>
add    %ah,0x79(%ebx)
jb     8052bb9 <_IO_stdin_used+0x3cb5>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052bbc <_IO_stdin_used+0x3cb8>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052bd5 <_IO_stdin_used+0x3cd1>
gs
jb     8052bc3 <_IO_stdin_used+0x3cbf>
imul   $0x69727963,0x0(%ebp),%esi
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052bd7 <_IO_stdin_used+0x3cd3>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052bf0 <_IO_stdin_used+0x3cec>
gs
jb     8052bde <_IO_stdin_used+0x3cda>
jns    8052bf6 <_IO_stdin_used+0x3cf2>
add    %ah,0x79(%ebx)
jb     8052bef <_IO_stdin_used+0x3ceb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052bf2 <_IO_stdin_used+0x3cee>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052c0b <_IO_stdin_used+0x3d07>
gs
jb     8052bf9 <_IO_stdin_used+0x3cf5>
jns    8052c01 <_IO_stdin_used+0x3cfd>
jb     8052c07 <_IO_stdin_used+0x3d03>
add    %ah,0x79(%ebx)
jb     8052c0c <_IO_stdin_used+0x3d08>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052c0f <_IO_stdin_used+0x3d0b>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052c28 <_IO_stdin_used+0x3d24>
gs
jb     8052c16 <_IO_stdin_used+0x3d12>
jns    8052c1e <_IO_stdin_used+0x3d1a>
jb     8052c30 <_IO_stdin_used+0x3d2c>
add    %ah,0x79(%ebx)
jb     8052c29 <_IO_stdin_used+0x3d25>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052c2c <_IO_stdin_used+0x3d28>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052c45 <_IO_stdin_used+0x3d41>
gs
jb     8052c33 <_IO_stdin_used+0x3d2f>
add    %ah,%gs:0x79(%ebx)
jb     8052c43 <_IO_stdin_used+0x3d3f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052c46 <_IO_stdin_used+0x3d42>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052c5f <_IO_stdin_used+0x3d5b>
gs
jb     8052c4d <_IO_stdin_used+0x3d49>
imul   $0x69727963,0x0(%ecx),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8052c61 <_IO_stdin_used+0x3d5d>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052c7a <_IO_stdin_used+0x3d76>
gs
jb     8052c68 <_IO_stdin_used+0x3d64>
imul   $0x69727963,(%eax),%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052c92 <_IO_stdin_used+0x3d8e>
gs
jb     8052c80 <_IO_stdin_used+0x3d7c>
imul   $0x0,0x61(%eax),%ebp
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052cac <_IO_stdin_used+0x3da8>
gs
jb     8052c9a <_IO_stdin_used+0x3d96>
push   $0x79630061
jb     8052cab <_IO_stdin_used+0x3da7>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052cc5 <_IO_stdin_used+0x3dc1>
gs
jb     8052cb3 <_IO_stdin_used+0x3daf>
add    %ah,%gs:0x79(%bp,%di)
jb     8052cc4 <_IO_stdin_used+0x3dc0>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052cde <_IO_stdin_used+0x3dda>
gs
jb     8052ccc <_IO_stdin_used+0x3dc8>
addr16 push $0x79630065
jb     8052cde <_IO_stdin_used+0x3dda>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052cf8 <_IO_stdin_used+0x3df4>
gs
jb     8052ce6 <_IO_stdin_used+0x3de2>
imul   $0x69727963,0x0(%ecx),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052d11 <_IO_stdin_used+0x3e0d>
gs
jb     8052cff <_IO_stdin_used+0x3dfb>
jns    8052d03 <_IO_stdin_used+0x3dff>
add    %ah,0x79(%ebx)
jb     8052d10 <_IO_stdin_used+0x3e0c>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052d2a <_IO_stdin_used+0x3e26>
gs
jb     8052d18 <_IO_stdin_used+0x3e14>
imul   $0x69727963,0x0(%ebp),%esi
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052d43 <_IO_stdin_used+0x3e3f>
gs
jb     8052d31 <_IO_stdin_used+0x3e2d>
jns    8052d49 <_IO_stdin_used+0x3e45>
add    %ah,0x79(%ebx)
jb     8052d42 <_IO_stdin_used+0x3e3e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052d5c <_IO_stdin_used+0x3e58>
gs
jb     8052d4a <_IO_stdin_used+0x3e46>
jns    8052d52 <_IO_stdin_used+0x3e4e>
jb     8052d58 <_IO_stdin_used+0x3e54>
add    %ah,0x79(%ebx)
jb     8052d5d <_IO_stdin_used+0x3e59>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052d77 <_IO_stdin_used+0x3e73>
gs
jb     8052d65 <_IO_stdin_used+0x3e61>
jns    8052d6d <_IO_stdin_used+0x3e69>
jb     8052d7f <_IO_stdin_used+0x3e7b>
add    %ah,0x79(%ebx)
jb     8052d78 <_IO_stdin_used+0x3e74>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052d92 <_IO_stdin_used+0x3e8e>
gs
jb     8052d80 <_IO_stdin_used+0x3e7c>
add    %ah,%gs:0x79(%ebx)
jb     8052d90 <_IO_stdin_used+0x3e8c>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052daa <_IO_stdin_used+0x3ea6>
gs
jb     8052d98 <_IO_stdin_used+0x3e94>
imul   $0x69727963,0x0(%ecx),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052dc3 <_IO_stdin_used+0x3ebf>
gs
jb     8052db1 <_IO_stdin_used+0x3ead>
imul   $0x69727963,(%eax),%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8052ddb <_IO_stdin_used+0x3ed7>
gs
jb     8052dc9 <_IO_stdin_used+0x3ec5>
jae    8052dd4 <_IO_stdin_used+0x3ed0>
outsl  %ds:(%esi),(%dx)
jb     8052de3 <_IO_stdin_used+0x3edf>
pop    %edi
imul   $0x68676972,(%eax),%eax
je     8052dd9 <_IO_stdin_used+0x3ed5>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
gs
jno    8052df3 <_IO_stdin_used+0x3eef>
outsl  %ds:(%esi),(%dx)
je     8052de6 <_IO_stdin_used+0x3ee2>
add    %ah,0x75(%edi)
imul   $0x72746f6d,0x65(%esp,%ebp,2),%ebp
imul   $0x756e0074,0x68(%edi),%esp
insb   (%dx),%es:(%edi)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e0c <_IO_stdin_used+0x3f08>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
popa
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e16 <_IO_stdin_used+0x3f12>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %eax,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052e20 <_IO_stdin_used+0x3f1c>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %ax,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052e2a <_IO_stdin_used+0x3f26>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
add    %al,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e34 <_IO_stdin_used+0x3f30>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
add    %al,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e3e <_IO_stdin_used+0x3f3a>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
data16
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e48 <_IO_stdin_used+0x3f44>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
add    %al,0x6f(%bp,%di)
outsb  %ds:(%esi),(%dx)
je     8052e52 <_IO_stdin_used+0x3f4e>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x43,(%eax),%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052e5c <_IO_stdin_used+0x3f58>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e66 <_IO_stdin_used+0x3f62>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e70 <_IO_stdin_used+0x3f6c>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e7a <_IO_stdin_used+0x3f76>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052e84 <_IO_stdin_used+0x3f80>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jo     8052e17 <_IO_stdin_used+0x3f13>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052e8e <_IO_stdin_used+0x3f8a>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jno    8052e21 <_IO_stdin_used+0x3f1d>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052e98 <_IO_stdin_used+0x3f94>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jb     8052e2b <_IO_stdin_used+0x3f27>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052ea2 <_IO_stdin_used+0x3f9e>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jae    8052e35 <_IO_stdin_used+0x3f31>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052eac <_IO_stdin_used+0x3fa8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
je     8052e3f <_IO_stdin_used+0x3f3b>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052eb6 <_IO_stdin_used+0x3fb2>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jne    8052e49 <_IO_stdin_used+0x3f45>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052ec0 <_IO_stdin_used+0x3fbc>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jbe    8052e53 <_IO_stdin_used+0x3f4f>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052eca <_IO_stdin_used+0x3fc6>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
ja     8052e5d <_IO_stdin_used+0x3f59>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052ed4 <_IO_stdin_used+0x3fd0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
js     8052e67 <_IO_stdin_used+0x3f63>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052ede <_IO_stdin_used+0x3fda>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jns    8052e71 <_IO_stdin_used+0x3f6d>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8052ee8 <_IO_stdin_used+0x3fe4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jp     8052e7b <_IO_stdin_used+0x3f77>
inc    %ebp
jae    8052ee1 <_IO_stdin_used+0x3fdd>
popa
jo     8052ee6 <_IO_stdin_used+0x3fe2>
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052ef9 <_IO_stdin_used+0x3ff5>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x63(%ecx)
imul   $0x61,0x6c(%ebx),%esi
jae    8052efb <_IO_stdin_used+0x3ff7>
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052f0b <_IO_stdin_used+0x4007>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     8052f16 <_IO_stdin_used+0x4012>
imul   $0x6f430074,0x68(%edi),%esp
outsb  %ds:(%esi),(%dx)
je     8052f20 <_IO_stdin_used+0x401c>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
popa
jae    8052f17 <_IO_stdin_used+0x4013>
imul   $0x75637269,0x63(%ecx),%ebp
insl   (%dx),%es:(%edi)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8052f34 <_IO_stdin_used+0x4030>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jne    8052f35 <_IO_stdin_used+0x4031>
fs
gs
jb     8052f3e <_IO_stdin_used+0x403a>
arpl   %bp,0x72(%edi)
add    %ah,%gs:0x78(%ebp)
arpl   %bp,0x6d(%ecx,%eiz,2)
add    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8052f41 <_IO_stdin_used+0x403d>
bound  %ebp,%fs:0x6e(%eax,%eax,1)
jne    8052f50 <_IO_stdin_used+0x404c>
bound  %esp,0x72(%ebp)
jae    8052f51 <_IO_stdin_used+0x404d>
outsb  %ds:(%si),(%dx)
add    %ah,0x6c(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
popa
jb     8052ef2 <_IO_stdin_used+0x3fee>
jo     8052f59 <_IO_stdin_used+0x4055>
jb     8052f59 <_IO_stdin_used+0x4055>
outsb  %gs:(%esi),(%dx)
je     8052efa <_IO_stdin_used+0x3ff6>
popa
insl   (%dx),%es:(%edi)
jo     8052f63 <_IO_stdin_used+0x405f>
jb     8052f73 <_IO_stdin_used+0x406f>
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x70(%ecx)
outsl  %ds:(%esi),(%dx)
jae    8052f7d <_IO_stdin_used+0x4079>
jb     8052f7a <_IO_stdin_used+0x4076>
jo     8052f75 <_IO_stdin_used+0x4071>
add    %dh,%gs:0x61(%eax)
jb     8052f78 <_IO_stdin_used+0x4074>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
data16
je     8052f19 <_IO_stdin_used+0x4015>
jo     8052f7c <_IO_stdin_used+0x4078>
jb     8052f82 <_IO_stdin_used+0x407e>
outsb  %ds:(%esi),(%dx)
jb     8052f89 <_IO_stdin_used+0x4085>
addr16 push $0x73610074
je     8052f8d <_IO_stdin_used+0x4089>
jb     8052f93 <_IO_stdin_used+0x408f>
jae    8052f97 <_IO_stdin_used+0x4093>
add    %dh,0x6c(%eax)
jne    8052fa4 <_IO_stdin_used+0x40a0>
add    %dh,0x65(%eax)
jb     8052f9f <_IO_stdin_used+0x409b>
outsl  %ds:(%esi),(%dx)
add    %bh,%fs:0x65(%edx)
jb     8052fac <_IO_stdin_used+0x40a8>
add    %ah,0x71(%ebp)
jne    8052fa3 <_IO_stdin_used+0x409f>
insb   (%dx),%es:(%edi)
add    %ah,0x72(%edi)
gs
popa
je     8052faf <_IO_stdin_used+0x40ab>
jb     8052f4c <_IO_stdin_used+0x4048>
jno    8052fc3 <_IO_stdin_used+0x40bf>
gs
jae    8052fc5 <_IO_stdin_used+0x40c1>
imul   $0x4a004900,0x6e(%edi),%ebp
add    %cl,0x0(%ebp)
dec    %edi
add    %dl,0x0(%eax)
push   %ecx
add    %dl,0x0(%ebx)
push   %ebp
add    %dl,0x0(%edi)
pop    %eax
add    %bl,0x0(%ecx)
pop    %edx
add    %ah,0x72(%edx)
popa
arpl   %bp,0x65(%ebx)
je     8052fe1 <_IO_stdin_used+0x40dd>
gs
data16
je     8052f79 <_IO_stdin_used+0x4075>
bound  %esi,0x61(%edx)
arpl   %sp,0x6c(%ebp)
gs
data16
je     8052f83 <_IO_stdin_used+0x407f>
bound  %esi,0x61(%edx)
arpl   %sp,0x72(%ebp)
imul   $0x65440074,0x68(%edi),%esp
insb   (%dx),%es:(%edi)
gs
je     8052ff9 <_IO_stdin_used+0x40f5>
add    %ah,0x78(%ebp)
arpl   %bp,0x6d(%ecx,%eiz,2)
outsl  %fs:(%esi),(%dx)
ja     805300d <_IO_stdin_used+0x4109>
add    %ah,0x75(%ebx)
jb     8053016 <_IO_stdin_used+0x4112>
outsb  %gs:(%esi),(%dx)
arpl   %di,0x0(%ecx)
jns    8053010 <_IO_stdin_used+0x410c>
outsb  %ds:(%esi),(%dx)
add    %ah,0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x62,0x6e(%ebp),%esp
popa
jb     8052fb7 <_IO_stdin_used+0x40b3>
arpl   %bp,0x70(%edi)
jns    805302e <_IO_stdin_used+0x412a>
imul   $0x726f0074,0x68(%edi),%esp
fs
data16
gs
insl   (%dx),%es:(%edi)
imul   $0x6700656e,0x69(%esi),%ebp
jne    8053039 <_IO_stdin_used+0x4135>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     8053043 <_IO_stdin_used+0x413f>
gs
data16
je     8052fdb <_IO_stdin_used+0x40d7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8053052 <_IO_stdin_used+0x414e>
imul   $0x67657200,0x6e(%edi),%esp
imul   $0x64657265,0x74(%ebx),%esi
add    %ah,0x67(%ebp,%eiz,2)
jb     8053058 <_IO_stdin_used+0x4154>
add    %dh,%gs:0x6c(%eax)
jne    805306c <_IO_stdin_used+0x4168>
insl   (%dx),%es:(%edi)
imul   $0x77740073,0x75(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jae    8053079 <_IO_stdin_used+0x4175>
jo     805306b <_IO_stdin_used+0x4167>
jb     8053071 <_IO_stdin_used+0x416d>
outsl  %ds:(%esi),(%dx)
jb     805300b <_IO_stdin_used+0x4107>
je     8053075 <_IO_stdin_used+0x4171>
jb     8053074 <_IO_stdin_used+0x4170>
gs
jae    8053087 <_IO_stdin_used+0x4183>
jo     8053079 <_IO_stdin_used+0x4175>
jb     805307f <_IO_stdin_used+0x417b>
outsl  %ds:(%esi),(%dx)
jb     8053019 <_IO_stdin_used+0x4115>
jo     8053080 <_IO_stdin_used+0x417c>
jb     8053086 <_IO_stdin_used+0x4182>
outsl  %ds:(%esi),(%dx)
arpl   %sp,%fs:0x6e(%ebp)
je     8053089 <_IO_stdin_used+0x4185>
jb     805308b <_IO_stdin_used+0x4187>
add    %ch,%fs:0x6e(%edi)
gs
jae    80530a2 <_IO_stdin_used+0x419e>
jo     8053094 <_IO_stdin_used+0x4190>
jb     805309a <_IO_stdin_used+0x4196>
outsl  %ds:(%esi),(%dx)
jb     8053034 <_IO_stdin_used+0x4130>
insl   (%dx),%es:(%edi)
popa
jae    805309b <_IO_stdin_used+0x4197>
jne    80530a6 <_IO_stdin_used+0x41a2>
imul   $0x656e6f00,0x65(%esi),%ebp
jno    80530b8 <_IO_stdin_used+0x41b4>
popa
jb     80530ba <_IO_stdin_used+0x41b6>
gs
jb     8053049 <_IO_stdin_used+0x4145>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   $0x666c61
je     80530bb <_IO_stdin_used+0x41b7>
jb     80530ba <_IO_stdin_used+0x41b6>
gs
jno    80530cd <_IO_stdin_used+0x41c9>
popa
jb     80530cf <_IO_stdin_used+0x41cb>
gs
jb     80530d1 <_IO_stdin_used+0x41cd>
add    %dh,0x75(%ecx)
gs
jae    80530d8 <_IO_stdin_used+0x41d4>
imul   $0x6e776f64,0x6e(%edi),%ebp
add    %al,0x67(%ecx)
jb     80530d1 <_IO_stdin_used+0x41cd>
jbe    80530d7 <_IO_stdin_used+0x41d3>
add    %al,0x61(%ecx)
arpl   %si,0x74(%ebp)
add    %al,%gs:0x63(%ecx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     8053086 <_IO_stdin_used+0x4182>
inc    %ecx
je     80530f2 <_IO_stdin_used+0x41ee>
insb   (%dx),%es:(%edi)
fs add %al,%fs:%gs:0x64(%ecx)
imul   $0x69736572,0x65(%ecx),%esp
jae    8053098 <_IO_stdin_used+0x4194>
inc    %ecx
jb     8053104 <_IO_stdin_used+0x4200>
outsb  %ds:(%esi),(%dx)
add    %al,0x45(%bx,%di)
add    %al,0x63(%ebx)
gs imul $0x72674500,%fs:%gs:0x61(%esp,%ebp,2),%ebp
72
popa
jbe    8053115 <_IO_stdin_used+0x4211>
add    %al,0x61(%ebp)
arpl   %si,0x74(%ebp)
add    %al,%gs:0x63(%ebp)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     80530c4 <_IO_stdin_used+0x41c0>
inc    %ebp
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    80530cf <_IO_stdin_used+0x41cb>
dec    %ecx
addr16 jb 8053134 <_IO_stdin_used+0x4230>
jbe    805313a <_IO_stdin_used+0x4236>
add    %cl,0x61(%ecx)
arpl   %si,0x74(%ebp)
add    %cl,%gs:0x63(%ecx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     80530e9 <_IO_stdin_used+0x41e5>
dec    %ecx
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    80530f4 <_IO_stdin_used+0x41f0>
inc    %ebp
push   %esp
dec    %eax
add    %cl,0x74(%esi)
imul   $0x72674f00,0x65(%esp,%eiz,2),%ebp
popa
jbe    805316a <_IO_stdin_used+0x4266>
add    %cl,0x61(%edi)
arpl   %si,0x74(%ebp)
add    %cl,%gs:0x63(%edi)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     8053119 <_IO_stdin_used+0x4215>
dec    %edi
je     8053185 <_IO_stdin_used+0x4281>
insb   (%dx),%es:(%edi)
fs add %cl,%fs:%gs:0x64(%edi)
imul   $0x69736572,0x65(%ecx),%esp
jae    805312b <_IO_stdin_used+0x4227>
push   %ebp
addr16 jb 8053190 <_IO_stdin_used+0x428c>
jbe    8053196 <_IO_stdin_used+0x4292>
add    %dl,0x61(%ebp)
arpl   %si,0x74(%ebp)
add    %dl,%gs:0x63(%ebp)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     8053145 <_IO_stdin_used+0x4241>
push   %ebp
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    8053150 <_IO_stdin_used+0x424c>
pop    %ecx
popa
arpl   %si,0x74(%ebp)
add    %dl,%gs:0x4f(%eax,%ecx,2)
push   %edx
dec    %esi
add    %dh,0x73(%ebx)
push   $0x707261
popa
addr16 jb 80531c9 <_IO_stdin_used+0x42c5>
jbe    80531cf <_IO_stdin_used+0x42cb>
add    %ah,0x61(%ecx)
arpl   %si,0x74(%ebp)
add    %ah,%gs:0x63(%ecx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     805317e <_IO_stdin_used+0x427a>
popa
je     80531ea <_IO_stdin_used+0x42e6>
insb   (%dx),%es:(%edi)
fs add %ah,%fs:%gs:0x72(%ecx)
imul   $0x65636300,0x67(%esi),%ebp
imul   $0x72676500,%fs:0x61(%esp,%ebp,2),%ebp
72
popa
jbe    80531ff <_IO_stdin_used+0x42fb>
add    %ah,0x63(%ebp)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     80531a7 <_IO_stdin_used+0x42a3>
gs imul $0x69736572,%fs:%gs:0x65(%ecx),%esp
69
jae    80531b2 <_IO_stdin_used+0x42ae>
imul   $0x657661,0x72(%edi),%esp
imul   $0x657475,0x63(%ecx),%esp
imul   $0x6d756372,0x69(%ebx),%esp
data16
insb   (%dx),%es:(%edi)
gs
js     80531cc <_IO_stdin_used+0x42c8>
imul   $0x73657265,0x61(%ecx,%ebp,2),%esp
imul   $0x687465,0x0(%ebx),%esi
outsb  %ds:(%esi),(%dx)
je     8053247 <_IO_stdin_used+0x4343>
insb   (%dx),%es:(%edi)
fs add %ch,%fs:%gs:0x67(%edi)
jb     8053247 <_IO_stdin_used+0x4343>
jbe    805324d <_IO_stdin_used+0x4349>
add    %ch,0x61(%edi)
arpl   %si,0x74(%ebp)
add    %ch,%gs:0x63(%edi)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     80531fc <_IO_stdin_used+0x42f8>
outsl  %ds:(%esi),(%dx)
je     8053268 <_IO_stdin_used+0x4364>
insb   (%dx),%es:(%edi)
fs add %ch,%fs:%gs:0x64(%edi)
imul   $0x69736572,0x65(%ecx),%esp
jae    805320e <_IO_stdin_used+0x430a>
imul   $0x6e6f6973,%fs:0x69(%esi),%esi
add    %ch,0x73(%edi)
insb   (%dx),%es:(%edi)
popa
jae    8053285 <_IO_stdin_used+0x4381>
add    %dh,0x67(%ebp)
jb     8053283 <_IO_stdin_used+0x437f>
jbe    8053289 <_IO_stdin_used+0x4385>
add    %dh,0x61(%ebp)
arpl   %si,0x74(%ebp)
add    %dh,%gs:0x63(%ebp)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     8053238 <_IO_stdin_used+0x4334>
jne    805329e <_IO_stdin_used+0x439a>
imul   $0x69736572,0x65(%ecx),%esp
jae    8053243 <_IO_stdin_used+0x433f>
jns    80532a6 <_IO_stdin_used+0x43a2>
arpl   %si,0x74(%ebp)
add    %dh,%gs:0x6f(%eax,%ebp,2)
jb     80532bd <_IO_stdin_used+0x43b9>
add    %bh,0x64(%ecx)
imul   $0x69736572,0x65(%ecx),%esp
jae    805325b <_IO_stdin_used+0x4357>
gs
jne    80532d0 <_IO_stdin_used+0x43cc>
outsl  %ds:(%esi),(%dx)
add    %dl,0x63(%ebx)
popa
jb     80532d4 <_IO_stdin_used+0x43d0>
outsb  %ds:(%esi),(%dx)
add    %dh,0x63(%ebx)
popa
jb     80532db <_IO_stdin_used+0x43d7>
outsb  %ds:(%esi),(%dx)
add    %bl,0x63(%edx)
popa
jb     80532e2 <_IO_stdin_used+0x43de>
outsb  %ds:(%esi),(%dx)
add    %bh,0x63(%edx)
popa
jb     80532e9 <_IO_stdin_used+0x43e5>
outsb  %ds:(%esi),(%dx)
add    %cl,0x45(%edi)
add    %bl,0x64(%ecx)
imul   $0x69736572,0x65(%ecx),%esp
jae    805328a <_IO_stdin_used+0x4386>
inc    %ecx
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x4c,%gs:(%eax),%eax
jae    8053309 <_IO_stdin_used+0x4405>
jb     8053306 <_IO_stdin_used+0x4402>
imul   $0x4c,0x0(%ebp),%esp
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dl,0x61(%ebx)
arpl   %si,0x74(%ebp)
add    %dl,%gs:0x63(%ebx)
gs imul $0x61635400,%fs:%gs:0x61(%esp,%ebp,2),%ebp
61
jb     8053325 <_IO_stdin_used+0x4421>
outsb  %ds:(%esi),(%dx)
add    %bl,0x61(%edx)
arpl   %si,0x74(%ebp)
add    %bl,%gs:0x61(%edx)
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     80532c9 <_IO_stdin_used+0x43c5>
popa
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c,%gs:(%eax),%eax
jae    8053348 <_IO_stdin_used+0x4444>
jb     8053345 <_IO_stdin_used+0x4441>
imul   $0x6c,0x0(%ebp),%esp
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%ebx)
arpl   %si,0x74(%ebp)
add    %dh,%gs:0x63(%ebx)
gs imul $0x61637400,%fs:%gs:0x61(%esp,%ebp,2),%ebp
61
jb     8053364 <_IO_stdin_used+0x4460>
outsb  %ds:(%esi),(%dx)
add    %bh,0x61(%edx)
arpl   %si,0x74(%ebp)
add    %bh,%gs:0x61(%edx)
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     8053308 <_IO_stdin_used+0x4404>
push   %edx
popa
arpl   %si,0x74(%ebp)
add    %al,%gs:0x62(%ecx)
jb     8053378 <_IO_stdin_used+0x4474>
jbe    805337a <_IO_stdin_used+0x4476>
add    %cl,0x63(%ecx,%eiz,2)
jne    805338f <_IO_stdin_used+0x448b>
add    %al,%gs:0x61(%ebx)
arpl   %si,0x74(%ebp)
add    %al,%gs:0x63(%ebx)
popa
jb     8053398 <_IO_stdin_used+0x4494>
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%ebp)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x45,%gs:(%eax),%eax
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%ebx,%eiz,2)
jb     80533ae <_IO_stdin_used+0x44aa>
outsb  %ds:(%esi),(%dx)
add    %al,0x74(%ebx,%esi,2)
jb     80533b5 <_IO_stdin_used+0x44b1>
imul   $0x4e,0x0(%ebp),%esp
popa
arpl   %si,0x74(%ebp)
add    %cl,%gs:0x63(%esi)
popa
jb     80533c4 <_IO_stdin_used+0x44c0>
outsb  %ds:(%esi),(%dx)
add    %cl,0x64(%edi)
outsl  %ds:(%esi),(%dx)
jne    80533be <_IO_stdin_used+0x44ba>
insb   (%dx),%es:(%edi)
gs
popa
arpl   %si,0x74(%ebp)
add    %dl,%gs:0x63(%edx)
popa
jb     80533d8 <_IO_stdin_used+0x44d4>
outsb  %ds:(%esi),(%dx)
add    %dl,0x72(%ebp)
imul   $0x6f645500,0x67(%esi),%ebp
jne    80533d8 <_IO_stdin_used+0x44d4>
insb   (%dx),%es:(%edi)
gs
popa
arpl   %si,0x74(%ebp)
add    %dl,%gs:0x65(%ebx,%eiz,2)
imul   $0x63617200,%fs:0x61(%esp,%ebp,2),%ebp
63
jne    8053400 <_IO_stdin_used+0x44fc>
add    %ah,%gs:0x62(%ecx)
jb     80533f7 <_IO_stdin_used+0x44f3>
jbe    80533f9 <_IO_stdin_used+0x44f5>
add    %ch,0x63(%ecx,%eiz,2)
jne    805340e <_IO_stdin_used+0x450a>
add    %ah,%gs:0x61(%ebx)
arpl   %si,0x74(%ebp)
add    %ah,%gs:0x63(%ebx)
popa
jb     8053417 <_IO_stdin_used+0x4513>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6f(%ebp)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x65,%gs:(%eax),%eax
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%ebx,%eiz,2)
jb     805342d <_IO_stdin_used+0x4529>
outsb  %ds:(%esi),(%dx)
add    %ah,0x74(%ebx,%esi,2)
jb     8053434 <_IO_stdin_used+0x4530>
imul   $0x6e,0x0(%ebp),%esp
popa
arpl   %si,0x74(%ebp)
add    %ch,%gs:0x63(%esi)
popa
jb     8053443 <_IO_stdin_used+0x453f>
outsb  %ds:(%esi),(%dx)
add    %ch,0x64(%edi)
outsl  %ds:(%esi),(%dx)
jne    805343d <_IO_stdin_used+0x4539>
insb   (%dx),%es:(%edi)
gs
popa
arpl   %si,0x74(%ebp)
add    %dh,%gs:0x63(%edx)
popa
jb     8053457 <_IO_stdin_used+0x4553>
outsb  %ds:(%esi),(%dx)
add    %dh,0x72(%ebp)
imul   $0x6f647500,0x67(%esi),%ebp
jne    8053457 <_IO_stdin_used+0x4553>
insb   (%dx),%es:(%edi)
gs
popa
arpl   %si,0x74(%ebp)
add    %dh,%gs:0x65(%ebx,%eiz,2)
imul   $0x74734800,%fs:0x61(%esp,%ebp,2),%ebp
74
jb     805347a <_IO_stdin_used+0x4576>
imul   $0x48,0x0(%ebp),%esp
arpl   %bp,0x72(%ecx)
arpl   %si,0x6d(%ebp)
data16
insb   (%dx),%es:(%edi)
gs
js     805341a <_IO_stdin_used+0x4516>
inc    %edi
bound  %esi,0x65(%edx)
jbe    8053485 <_IO_stdin_used+0x4581>
add    %cl,0x63(%edx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     805342d <_IO_stdin_used+0x4529>
push   $0x6f727473
imul   $0x68,0x0(%ebp),%esp
arpl   %bp,0x72(%ecx)
arpl   %si,0x6d(%ebp)
data16
insb   (%dx),%es:(%edi)
gs
js     8053441 <_IO_stdin_used+0x453d>
bound  %esi,0x65(%bp,%si)
jbe    80534ac <_IO_stdin_used+0x45a8>
add    %ch,0x63(%edx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     8053454 <_IO_stdin_used+0x4550>
inc    %ebx
popa
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     805345e <_IO_stdin_used+0x455a>
inc    %ebx
arpl   %bp,0x72(%ecx)
arpl   %si,0x6d(%ebp)
data16
insb   (%dx),%es:(%edi)
gs
js     805346a <_IO_stdin_used+0x4566>
inc    %edi
popa
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     8053474 <_IO_stdin_used+0x4570>
inc    %edi
arpl   %bp,0x72(%ecx)
arpl   %si,0x6d(%ebp)
data16
insb   (%dx),%es:(%edi)
gs
js     8053480 <_IO_stdin_used+0x457c>
push   %ebp
bound  %esi,0x65(%edx)
jbe    80534eb <_IO_stdin_used+0x45e7>
add    %dl,0x63(%ebx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     8053493 <_IO_stdin_used+0x458f>
arpl   %sp,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jbe    80534fe <_IO_stdin_used+0x45fa>
outsl  %fs:(%esi),(%dx)
je     805349d <_IO_stdin_used+0x4599>
arpl   %sp,0x69(%ebx)
jb     8053505 <_IO_stdin_used+0x4601>
jne    8053511 <_IO_stdin_used+0x460d>
data16
insb   (%dx),%es:(%edi)
gs
js     80534a9 <_IO_stdin_used+0x45a5>
addr16 popa
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     80534b3 <_IO_stdin_used+0x45af>
arpl   %bp,0x72(%bx,%di)
arpl   %si,0x6d(%ebp)
data16
insb   (%dx),%es:(%edi)
gs
js     80534bf <_IO_stdin_used+0x45bb>
jne    8053523 <_IO_stdin_used+0x461f>
jb     8053528 <_IO_stdin_used+0x4624>
jbe    805352a <_IO_stdin_used+0x4626>
add    %dh,0x63(%ebx)
imul   $0x6c666d75,0x63(%edx),%esi
gs
js     80534d2 <_IO_stdin_used+0x45ce>
imul   $0x0,0x61(%edx),%esi
push   %edx
arpl   %sp,0x64(%ebp)
imul   $0x69744900,0x61(%esp,%ebp,2),%ebp
insb   (%dx),%es:(%edi)
fs add %cl,%fs:%gs:0x65(%ebx,%eiz,2)
imul   $0x616d4500,%fs:0x61(%esp,%ebp,2),%ebp
61
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %al,0x63(%edi)
gs imul $0x6c735400,%fs:%gs:0x61(%esp,%ebp,2),%ebp
6c
popa
jae    805356e <_IO_stdin_used+0x466a>
add    %dh,0x63(%edx)
gs imul $0x65636c00,%fs:%gs:0x61(%esp,%ebp,2),%ebp
65
imul   $0x616d6500,%fs:0x61(%esp,%ebp,2),%ebp
61
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%edi)
gs imul $0x6c737400,%fs:%gs:0x61(%esp,%ebp,2),%ebp
6c
popa
jae    8053598 <_IO_stdin_used+0x4694>
add    %al,0x4e(%ebp)
inc    %edi
add    %ah,0x6e(%ebp)
add    %al,0x6d(%bx,%di)
popa
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6f(%ecx)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x45,%gs:(%eax),%eax
popa
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     8053553 <_IO_stdin_used+0x464f>
dec    %ecx
insl   (%dx),%es:(%edi)
popa
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x63(%esi)
gs imul $0x616d4f00,%fs:%gs:0x61(%esp,%ebp,2),%ebp
61
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x63(%ebx)
gs imul $0x676f5500,%fs:%gs:0x61(%esp,%ebp,2),%ebp
67
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x55,%gs:(%eax),%eax
je     80535e9 <_IO_stdin_used+0x46e5>
insb   (%dx),%es:(%edi)
fs add %dl,%fs:%gs:0x6d(%ebp)
popa
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x6d(%ecx)
popa
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%ecx)
outsl  %ds:(%si),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x65,%gs:(%eax),%eax
popa
bound  %ebp,0x76(%edi)
gs outsl %fs:%gs:(%esi),(%dx)
je     80535a6 <_IO_stdin_used+0x46a2>
imul   $0x6e6f7263,0x61(%ebp),%ebp
add    %ch,0x63(%esi)
gs imul $0x616d6f00,%fs:%gs:0x61(%esp,%ebp,2),%ebp
61
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x63(%ebx)
gs imul $0x676f7500,%fs:%gs:0x61(%esp,%ebp,2),%ebp
67
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x75,%gs:(%eax),%eax
je     805363c <_IO_stdin_used+0x4738>
insb   (%dx),%es:(%edi)
fs add %dh,%fs:%gs:0x6d(%ebp)
popa
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x79(%ebx)
jb     805364c <_IO_stdin_used+0x4748>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805364f <_IO_stdin_used+0x474b>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053668 <_IO_stdin_used+0x4764>
gs
jb     8053656 <_IO_stdin_used+0x4752>
imul   $0x69727963,0x0(%edi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805366a <_IO_stdin_used+0x4766>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053683 <_IO_stdin_used+0x477f>
gs
jb     8053671 <_IO_stdin_used+0x476d>
push   $0x65
add    %ah,0x79(%ebx)
jb     8053682 <_IO_stdin_used+0x477e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053685 <_IO_stdin_used+0x4781>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805369e <_IO_stdin_used+0x479a>
gs
jb     805368c <_IO_stdin_used+0x4788>
insb   (%dx),%es:(%edi)
push   $0x65
add    %ah,0x79(%ebx)
jb     805369e <_IO_stdin_used+0x479a>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80536a1 <_IO_stdin_used+0x479d>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80536ba <_IO_stdin_used+0x47b6>
gs
jb     80536a8 <_IO_stdin_used+0x47a4>
outsb  %ds:(%esi),(%dx)
push   $0x65
add    %ah,0x79(%ebx)
jb     80536ba <_IO_stdin_used+0x47b6>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80536bd <_IO_stdin_used+0x47b9>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80536d6 <_IO_stdin_used+0x47d2>
gs
jb     80536c4 <_IO_stdin_used+0x47c0>
fs
jp     80536cd <_IO_stdin_used+0x47c9>
add    %ah,0x79(%ebx)
jb     80536d6 <_IO_stdin_used+0x47d2>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80536d9 <_IO_stdin_used+0x47d5>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80536f2 <_IO_stdin_used+0x47ee>
gs
jb     80536e0 <_IO_stdin_used+0x47dc>
popa
add    %ah,0x79(%ebx)
jb     80536f0 <_IO_stdin_used+0x47ec>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80536f3 <_IO_stdin_used+0x47ef>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805370c <_IO_stdin_used+0x4808>
gs
jb     80536fa <_IO_stdin_used+0x47f6>
bound  %esp,0x0(%ebp)
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8053714 <_IO_stdin_used+0x4810>
je     805370e <_IO_stdin_used+0x480a>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053727 <_IO_stdin_used+0x4823>
gs
jb     8053715 <_IO_stdin_used+0x4811>
jbe    805371d <_IO_stdin_used+0x4819>
add    %ah,0x79(%ebx)
jb     8053726 <_IO_stdin_used+0x4822>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053729 <_IO_stdin_used+0x4825>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053742 <_IO_stdin_used+0x483e>
gs
jb     8053730 <_IO_stdin_used+0x482c>
fs add %ah,%fs:%gs:0x79(%ebx)
jb     8053741 <_IO_stdin_used+0x483d>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053744 <_IO_stdin_used+0x4840>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805375d <_IO_stdin_used+0x4859>
gs
jb     805374b <_IO_stdin_used+0x4847>
imul   $0x69727963,0x0(%ebp),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805375f <_IO_stdin_used+0x485b>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053778 <_IO_stdin_used+0x4874>
gs
jb     8053766 <_IO_stdin_used+0x4862>
jp     8053771 <_IO_stdin_used+0x486d>
add    %ah,%gs:0x79(%ebx)
jb     8053778 <_IO_stdin_used+0x4874>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805377b <_IO_stdin_used+0x4877>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053794 <_IO_stdin_used+0x4890>
gs
jb     8053782 <_IO_stdin_used+0x487e>
jp     805378a <_IO_stdin_used+0x4886>
add    %ah,0x79(%ebx)
jb     8053793 <_IO_stdin_used+0x488f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053796 <_IO_stdin_used+0x4892>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80537af <_IO_stdin_used+0x48ab>
gs
jb     805379d <_IO_stdin_used+0x4899>
imul   $0x63,0x0(%ecx),%esp
jns    80537b6 <_IO_stdin_used+0x48b2>
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     80537b7 <_IO_stdin_used+0x48b3>
je     80537b1 <_IO_stdin_used+0x48ad>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80537ca <_IO_stdin_used+0x48c6>
gs
jb     80537b8 <_IO_stdin_used+0x48b4>
gs
insb   (%dx),%es:(%edi)
add    %ah,0x79(%ebx)
jb     80537c9 <_IO_stdin_used+0x48c5>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80537cc <_IO_stdin_used+0x48c8>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80537e5 <_IO_stdin_used+0x48e1>
gs
jb     80537d3 <_IO_stdin_used+0x48cf>
gs
insl   (%dx),%es:(%edi)
add    %ah,0x79(%ebx)
jb     80537e4 <_IO_stdin_used+0x48e0>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80537e7 <_IO_stdin_used+0x48e3>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053800 <_IO_stdin_used+0x48fc>
gs
jb     80537ee <_IO_stdin_used+0x48ea>
outsb  %gs:(%esi),(%dx)
add    %ah,0x79(%ebx)
jb     80537ff <_IO_stdin_used+0x48fb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053802 <_IO_stdin_used+0x48fe>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805381b <_IO_stdin_used+0x4917>
gs
jb     8053809 <_IO_stdin_used+0x4905>
outsl  %ds:(%esi),(%dx)
add    %ah,0x79(%ebx)
jb     8053819 <_IO_stdin_used+0x4915>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805381c <_IO_stdin_used+0x4918>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053835 <_IO_stdin_used+0x4931>
gs
jb     8053823 <_IO_stdin_used+0x491f>
jo     805382b <_IO_stdin_used+0x4927>
add    %ah,0x79(%ebx)
jb     8053834 <_IO_stdin_used+0x4930>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053837 <_IO_stdin_used+0x4933>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053850 <_IO_stdin_used+0x494c>
gs
jb     805383e <_IO_stdin_used+0x493a>
gs
jb     80537e2 <_IO_stdin_used+0x48de>
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8053858 <_IO_stdin_used+0x4954>
je     8053852 <_IO_stdin_used+0x494e>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805386b <_IO_stdin_used+0x4967>
gs
jb     8053859 <_IO_stdin_used+0x4955>
gs
jae    80537fd <_IO_stdin_used+0x48f9>
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8053873 <_IO_stdin_used+0x496f>
je     805386d <_IO_stdin_used+0x4969>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053886 <_IO_stdin_used+0x4982>
gs
jb     8053874 <_IO_stdin_used+0x4970>
je     805387c <_IO_stdin_used+0x4978>
add    %ah,0x79(%ebx)
jb     8053885 <_IO_stdin_used+0x4981>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053888 <_IO_stdin_used+0x4984>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80538a1 <_IO_stdin_used+0x499d>
gs
jb     805388f <_IO_stdin_used+0x498b>
jne    8053832 <_IO_stdin_used+0x492e>
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     80538a8 <_IO_stdin_used+0x49a4>
je     80538a2 <_IO_stdin_used+0x499e>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80538bb <_IO_stdin_used+0x49b7>
gs
jb     80538a9 <_IO_stdin_used+0x49a5>
gs
data16
add    %ah,0x79(%ebx)
jb     80538ba <_IO_stdin_used+0x49b6>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80538bd <_IO_stdin_used+0x49b9>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80538d6 <_IO_stdin_used+0x49d2>
gs
jb     80538c4 <_IO_stdin_used+0x49c0>
je     80538da <_IO_stdin_used+0x49d6>
add    %ah,%gs:0x79(%ebx)
jb     80538d6 <_IO_stdin_used+0x49d2>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80538d9 <_IO_stdin_used+0x49d5>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80538f2 <_IO_stdin_used+0x49ee>
gs
jb     80538e0 <_IO_stdin_used+0x49dc>
arpl   %bp,0x65(%eax)
add    %ah,0x79(%ebx)
jb     80538f2 <_IO_stdin_used+0x49ee>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     80538f5 <_IO_stdin_used+0x49f1>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805390e <_IO_stdin_used+0x4a0a>
gs
jb     80538fc <_IO_stdin_used+0x49f8>
jae    8053907 <_IO_stdin_used+0x4a03>
popa
add    %ah,0x79(%ebx)
jb     805390e <_IO_stdin_used+0x4a0a>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8053911 <_IO_stdin_used+0x4a0d>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805392a <_IO_stdin_used+0x4a26>
gs
jb     8053918 <_IO_stdin_used+0x4a14>
jae    8053923 <_IO_stdin_used+0x4a1f>
arpl   %bp,0x61(%eax)
add    %ah,0x79(%ebx)
jb     805392c <_IO_stdin_used+0x4a28>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805392f <_IO_stdin_used+0x4a2b>
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x5f647261
jae    8053940 <_IO_stdin_used+0x4a3c>
outsb  %ds:(%si),(%dx)
add    %ah,0x79(%ebx)
jb     8053947 <_IO_stdin_used+0x4a43>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     805394a <_IO_stdin_used+0x4a46>
insb   (%dx),%es:(%edi)
pop    %edi
jae    805395c <_IO_stdin_used+0x4a58>
data16
je     805394f <_IO_stdin_used+0x4a4b>
jae    805395b <_IO_stdin_used+0x4a57>
outsb  %ds:(%si),(%dx)
add    %ah,0x79(%ebx)
jb     8053962 <_IO_stdin_used+0x4a5e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     805397c <_IO_stdin_used+0x4a78>
gs
jb     805396a <_IO_stdin_used+0x4a66>
popa
add    %ah,0x79(%ebx)
jb     805397a <_IO_stdin_used+0x4a76>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053994 <_IO_stdin_used+0x4a90>
gs
jb     8053982 <_IO_stdin_used+0x4a7e>
bound  %esp,0x0(%ebp)
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80539ad <_IO_stdin_used+0x4aa9>
gs
jb     805399b <_IO_stdin_used+0x4a97>
jbe    80539a3 <_IO_stdin_used+0x4a9f>
add    %ah,0x79(%ebx)
jb     80539ac <_IO_stdin_used+0x4aa8>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80539c6 <_IO_stdin_used+0x4ac2>
gs
jb     80539b4 <_IO_stdin_used+0x4ab0>
fs add %ah,%fs:%gs:0x79(%ebx)
jb     80539c5 <_IO_stdin_used+0x4ac1>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80539df <_IO_stdin_used+0x4adb>
gs
jb     80539cd <_IO_stdin_used+0x4ac9>
imul   $0x69727963,0x0(%ebp),%esp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     80539f8 <_IO_stdin_used+0x4af4>
gs
jb     80539e6 <_IO_stdin_used+0x4ae2>
jp     80539f1 <_IO_stdin_used+0x4aed>
add    %ah,%gs:0x79(%ebx)
jb     80539f8 <_IO_stdin_used+0x4af4>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053a12 <_IO_stdin_used+0x4b0e>
gs
jb     8053a00 <_IO_stdin_used+0x4afc>
jp     8053a08 <_IO_stdin_used+0x4b04>
add    %ah,0x79(%ebx)
jb     8053a11 <_IO_stdin_used+0x4b0d>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053a2b <_IO_stdin_used+0x4b27>
gs
jb     8053a19 <_IO_stdin_used+0x4b15>
imul   $0x63,0x0(%ecx),%esp
jns    8053a32 <_IO_stdin_used+0x4b2e>
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053a44 <_IO_stdin_used+0x4b40>
gs
jb     8053a32 <_IO_stdin_used+0x4b2e>
gs
insb   (%dx),%es:(%edi)
add    %ah,0x79(%ebx)
jb     8053a43 <_IO_stdin_used+0x4b3f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053a5d <_IO_stdin_used+0x4b59>
gs
jb     8053a4b <_IO_stdin_used+0x4b47>
gs
insl   (%dx),%es:(%edi)
add    %ah,0x79(%ebx)
jb     8053a5c <_IO_stdin_used+0x4b58>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053a76 <_IO_stdin_used+0x4b72>
gs
jb     8053a64 <_IO_stdin_used+0x4b60>
outsb  %gs:(%esi),(%dx)
add    %ah,0x79(%ebx)
jb     8053a75 <_IO_stdin_used+0x4b71>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053a8f <_IO_stdin_used+0x4b8b>
gs
jb     8053a7d <_IO_stdin_used+0x4b79>
outsl  %ds:(%esi),(%dx)
add    %ah,0x79(%ebx)
jb     8053a8d <_IO_stdin_used+0x4b89>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053aa7 <_IO_stdin_used+0x4ba3>
gs
jb     8053a95 <_IO_stdin_used+0x4b91>
jo     8053a9d <_IO_stdin_used+0x4b99>
add    %ah,0x79(%ebx)
jb     8053aa6 <_IO_stdin_used+0x4ba2>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053ac0 <_IO_stdin_used+0x4bbc>
gs
jb     8053aae <_IO_stdin_used+0x4baa>
gs
jb     8053a52 <_IO_stdin_used+0x4b4e>
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053ad9 <_IO_stdin_used+0x4bd5>
gs
jb     8053ac7 <_IO_stdin_used+0x4bc3>
gs
jae    8053a6b <_IO_stdin_used+0x4b67>
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053af2 <_IO_stdin_used+0x4bee>
gs
jb     8053ae0 <_IO_stdin_used+0x4bdc>
je     8053ae8 <_IO_stdin_used+0x4be4>
add    %ah,0x79(%ebx)
jb     8053af1 <_IO_stdin_used+0x4bed>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053b0b <_IO_stdin_used+0x4c07>
gs
jb     8053af9 <_IO_stdin_used+0x4bf5>
jne    8053a9c <_IO_stdin_used+0x4b98>
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053b23 <_IO_stdin_used+0x4c1f>
gs
jb     8053b11 <_IO_stdin_used+0x4c0d>
gs
data16
add    %ah,0x79(%ebx)
jb     8053b22 <_IO_stdin_used+0x4c1e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053b3c <_IO_stdin_used+0x4c38>
gs
jb     8053b2a <_IO_stdin_used+0x4c26>
je     8053b40 <_IO_stdin_used+0x4c3c>
add    %ah,%gs:0x79(%ebx)
jb     8053b3c <_IO_stdin_used+0x4c38>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053b56 <_IO_stdin_used+0x4c52>
gs
jb     8053b44 <_IO_stdin_used+0x4c40>
arpl   %bp,0x65(%eax)
add    %ah,0x79(%ebx)
jb     8053b56 <_IO_stdin_used+0x4c52>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053b70 <_IO_stdin_used+0x4c6c>
gs
jb     8053b5e <_IO_stdin_used+0x4c5a>
jae    8053b69 <_IO_stdin_used+0x4c65>
popa
add    %ah,0x79(%ebx)
jb     8053b70 <_IO_stdin_used+0x4c6c>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053b8a <_IO_stdin_used+0x4c86>
gs
jb     8053b78 <_IO_stdin_used+0x4c74>
jae    8053b83 <_IO_stdin_used+0x4c7f>
arpl   %bp,0x61(%eax)
add    %ah,0x79(%ebx)
jb     8053b8c <_IO_stdin_used+0x4c88>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x5f647261
jae    8053b9e <_IO_stdin_used+0x4c9a>
outsb  %ds:(%si),(%dx)
add    %ah,0x79(%ebx)
jb     8053ba5 <_IO_stdin_used+0x4ca1>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
jae    8053bb8 <_IO_stdin_used+0x4cb4>
data16
je     8053bab <_IO_stdin_used+0x4ca7>
jae    8053bb7 <_IO_stdin_used+0x4cb3>
outsb  %ds:(%si),(%dx)
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
pop    %edi
popa
arpl   %si,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
jns    8053bcc <_IO_stdin_used+0x4cc8>
add    %ah,0x79(%ebx)
jb     8053bcd <_IO_stdin_used+0x4cc9>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053be7 <_IO_stdin_used+0x4ce3>
gs
jb     8053bd5 <_IO_stdin_used+0x4cd1>
imul   $0x69727963,0x0(%edi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053c00 <_IO_stdin_used+0x4cfc>
gs
jb     8053bee <_IO_stdin_used+0x4cea>
push   $0x65
add    %ah,0x79(%ebx)
jb     8053bff <_IO_stdin_used+0x4cfb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053c19 <_IO_stdin_used+0x4d15>
gs
jb     8053c07 <_IO_stdin_used+0x4d03>
insb   (%dx),%es:(%edi)
push   $0x65
add    %ah,0x79(%ebx)
jb     8053c19 <_IO_stdin_used+0x4d15>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053c33 <_IO_stdin_used+0x4d2f>
gs
jb     8053c21 <_IO_stdin_used+0x4d1d>
outsb  %ds:(%esi),(%dx)
push   $0x65
add    %ah,0x79(%ebx)
jb     8053c33 <_IO_stdin_used+0x4d2f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8053c4d <_IO_stdin_used+0x4d49>
gs
jb     8053c3b <_IO_stdin_used+0x4d37>
fs
jp     8053c44 <_IO_stdin_used+0x4d40>
add    %ch,0x66(%ebp,%eiz,2)
je     8053c56 <_IO_stdin_used+0x4d52>
jne    8053c56 <_IO_stdin_used+0x4d52>
je     8053c4e <_IO_stdin_used+0x4d4a>
add    %dh,0x69(%edx)
addr16 push $0x6f757174
je     8053c59 <_IO_stdin_used+0x4d55>
add    %al,0x6c(%ecx)
jo     8053c61 <_IO_stdin_used+0x4d5d>
popa
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053c01 <_IO_stdin_used+0x4cfd>
inc    %ebp
jo     8053c77 <_IO_stdin_used+0x4d73>
imul   $0x65636361,0x6e(%edi,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
je     8053c0f <_IO_stdin_used+0x4d0b>
inc    %ebp
je     8053c73 <_IO_stdin_used+0x4d6f>
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053c19 <_IO_stdin_used+0x4d15>
dec    %ecx
outsl  %ds:(%esi),(%dx)
je     8053c7e <_IO_stdin_used+0x4d7a>
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053c24 <_IO_stdin_used+0x4d20>
dec    %edi
insl   (%dx),%es:(%edi)
imul   $0x63616e6f,0x72(%ebx),%esp
arpl   %sp,0x6e(%ebp)
je     8053c32 <_IO_stdin_used+0x4d2e>
push   %ebp
jo     8053ca8 <_IO_stdin_used+0x4da4>
imul   $0x65636361,0x6e(%edi,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
je     8053c40 <_IO_stdin_used+0x4d3c>
dec    %edi
insl   (%dx),%es:(%edi)
gs
addr16 popa
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053c4c <_IO_stdin_used+0x4d48>
imul   $0x61696461,0x74(%edi),%ebp
gs
jb     8053cbb <_IO_stdin_used+0x4db7>
jae    8053cc1 <_IO_stdin_used+0x4dbd>
jae    8053cbb <_IO_stdin_used+0x4db7>
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053c60 <_IO_stdin_used+0x4d5c>
inc    %ecx
insb   (%dx),%es:(%edi)
jo     8053ccc <_IO_stdin_used+0x4dc8>
popa
add    %al,0x65(%edx)
je     8053ccb <_IO_stdin_used+0x4dc7>
add    %al,0x61(%edi)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
add    %al,0x6c(%ebp,%eiz,2)
je     8053cd7 <_IO_stdin_used+0x4dd3>
add    %al,0x70(%ebp)
jae    8053ce4 <_IO_stdin_used+0x4de0>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x65(%edx)
je     8053ce4 <_IO_stdin_used+0x4de0>
add    %al,0x74(%ebp)
popa
add    %dl,0x65(%eax,%ebp,2)
je     8053cee <_IO_stdin_used+0x4dea>
add    %cl,0x6f(%ecx)
je     8053cf3 <_IO_stdin_used+0x4def>
add    %cl,0x61(%ebx)
jo     8053d07 <_IO_stdin_used+0x4e03>
popa
add    %cl,0x75(%ebp)
add    %cl,0x75(%esi)
add    %cl,0x6d(%edi)
imul   $0x50006e6f,0x72(%ebx),%esp
imul   $0x6f6852,(%eax),%eax
push   %ebx
imul   $0x61540061,0x6d(%edi),%esp
jne    8053cb8 <_IO_stdin_used+0x4db4>
push   %ebp
jo     8053d2e <_IO_stdin_used+0x4e2a>
imul   $0x69685000,0x6e(%edi,%ebp,2),%ebp
add    %dl,0x73(%eax)
imul   $0x67656d4f,(%eax),%eax
popa
add    %cl,0x6f(%ecx)
je     8053d33 <_IO_stdin_used+0x4e2f>
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    8053cdc <_IO_stdin_used+0x4dd8>
push   %ebp
jo     8053d52 <_IO_stdin_used+0x4e4e>
imul   $0x65616964,0x6e(%edi,%ebp,2),%ebp
jb     8053d4e <_IO_stdin_used+0x4e4a>
jae    8053d54 <_IO_stdin_used+0x4e50>
jae    8053ced <_IO_stdin_used+0x4de9>
popa
insb   (%dx),%es:(%edi)
jo     8053d59 <_IO_stdin_used+0x4e55>
popa
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053cf9 <_IO_stdin_used+0x4df5>
gs
jo     8053d6f <_IO_stdin_used+0x4e6b>
imul   $0x65636361,0x6e(%edi,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
je     8053d07 <_IO_stdin_used+0x4e03>
gs
je     8053d6b <_IO_stdin_used+0x4e67>
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053d11 <_IO_stdin_used+0x4e0d>
imul   $0x63636161,0x74(%edi),%ebp
outsb  %gs:(%esi),(%dx)
je     8053d1c <_IO_stdin_used+0x4e18>
jne    8053d8e <_IO_stdin_used+0x4e8a>
jae    8053d89 <_IO_stdin_used+0x4e85>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    8053d8e <_IO_stdin_used+0x4e8a>
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053d33 <_IO_stdin_used+0x4e2f>
popa
insb   (%dx),%es:(%edi)
jo     8053d9f <_IO_stdin_used+0x4e9b>
popa
add    %ah,0x65(%edx)
je     8053d9e <_IO_stdin_used+0x4e9a>
add    %ah,0x61(%edi)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
add    %ah,0x6c(%ebp,%eiz,2)
je     8053daa <_IO_stdin_used+0x4ea6>
add    %ah,0x70(%ebp)
jae    8053db7 <_IO_stdin_used+0x4eb3>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bh,0x65(%edx)
je     8053db7 <_IO_stdin_used+0x4eb3>
add    %dh,0x65(%eax,%ebp,2)
je     8053dbd <_IO_stdin_used+0x4eb9>
add    %ch,0x6f(%ecx)
je     8053dc2 <_IO_stdin_used+0x4ebe>
add    %ch,0x61(%ebx)
jo     8053dd6 <_IO_stdin_used+0x4ed2>
popa
add    %ch,0x6d(%edi)
imul   $0x72006e6f,0x72(%ebx),%esp
push   $0x6574006f
jb     8053de5 <_IO_stdin_used+0x4ee1>
imul   $0x6769736c,0x61(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
add    %dh,0x75(%ecx,%eiz,2)
add    %dh,0x70(%ebp)
jae    8053df3 <_IO_stdin_used+0x4eef>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x73(%eax)
imul   $0x67656d6f,(%eax),%eax
popa
add    %ch,0x6f(%ecx)
je     8053dfd <_IO_stdin_used+0x4ef9>
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    8053da6 <_IO_stdin_used+0x4ea2>
jne    8053e18 <_IO_stdin_used+0x4f14>
jae    8053e13 <_IO_stdin_used+0x4f0f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    8053db7 <_IO_stdin_used+0x4eb3>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
imul   $0x63616e6f,0x72(%ebx),%esp
arpl   %sp,0x6e(%ebp)
je     8053dc5 <_IO_stdin_used+0x4ec1>
jne    8053e37 <_IO_stdin_used+0x4f33>
jae    8053e32 <_IO_stdin_used+0x4f2e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053dd3 <_IO_stdin_used+0x4ecf>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
gs
addr16 popa
popa
arpl   %sp,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     8053ddf <_IO_stdin_used+0x4edb>
outsl  %ds:(%esi),(%dx)
jbe    8053e47 <_IO_stdin_used+0x4f43>
jb     8053e57 <_IO_stdin_used+0x4f53>
arpl   %bp,0x72(%edi)
add    %ah,%gs:0x75(%edi,%ebp,2)
bound  %ebp,0x75(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
fs
gs
jb     8053e68 <_IO_stdin_used+0x4f64>
arpl   %bp,0x72(%edi)
add    %ah,%gs:0x6c(%ecx)
gs
data16
add    %ah,0x65(%edx)
je     8053e03 <_IO_stdin_used+0x4eff>
imul   $0x6164006c,0x65(%di),%ebp
insb   (%dx),%es:(%edi)
gs
je     8053e0f <_IO_stdin_used+0x4f0b>
jbe    8053e72 <_IO_stdin_used+0x4f6e>
jbe    8053e13 <_IO_stdin_used+0x4f0f>
jp     8053e76 <_IO_stdin_used+0x4f72>
jns    8053e80 <_IO_stdin_used+0x4f7c>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebp,%eiz,2)
add    %bh,0x6f(%ecx)
add    %ah,%fs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x0,0x66(%ecx),%esp
insb   (%dx),%es:(%edi)
popa
insl   (%dx),%es:(%edi)
gs add %ah,%fs:%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
add    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
jne    8053eaf <_IO_stdin_used+0x4fab>
add    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
imul   $0x66,%gs:0x0(%eax),%ebp
imul   $0x65706c,0x61(%esi),%ebp
imul   $0x746c,0x61(%esi),%bp
jae    8053eba <_IO_stdin_used+0x4fb6>
imul   $0x666f71,%fs:(%eax),%eax
jb     8053ec7 <_IO_stdin_used+0x4fc3>
jae    8053ecc <_IO_stdin_used+0x4fc8>
add    %dh,0x68(%ebx)
imul   $0x766174,0x0(%esi),%ebp
push   %esp
jae    8053ee5 <_IO_stdin_used+0x4fe1>
jb     8053ee2 <_IO_stdin_used+0x4fde>
imul   $0x74,0x0(%ebp),%esp
jae    8053eed <_IO_stdin_used+0x4fe9>
jb     8053eea <_IO_stdin_used+0x4fe6>
imul   $0x65,0x0(%ebp),%esp
insl   (%dx),%es:(%edi)
fs
popa
jae    8053eec <_IO_stdin_used+0x4fe8>
add    %cl,0x73(%edi)
je     8053efb <_IO_stdin_used+0x4ff7>
outsl  %ds:(%esi),(%dx)
imul   $0x6f,0x0(%ebp),%esp
jae    8053f04 <_IO_stdin_used+0x5000>
jb     8053f01 <_IO_stdin_used+0x4ffd>
imul   $0x71,0x0(%ebp),%esp
jne    8053f07 <_IO_stdin_used+0x5003>
je     8053eff <_IO_stdin_used+0x4ffb>
bound  %ebp,%fs:0x61(%edx,%eiz,2)
jae    8053f06 <_IO_stdin_used+0x5002>
add    %ah,0x6c(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x64007369,0x73(%eax),%esi
outsl  %ds:(%esi),(%dx)
jne    8053f11 <_IO_stdin_used+0x500d>
insb   (%dx),%es:(%edi)
gs
fs
popa
addr16
addr16
gs
jb     8053eb8 <_IO_stdin_used+0x4fb4>
jo     8053f1f <_IO_stdin_used+0x501b>
jb     8053f29 <_IO_stdin_used+0x5025>
imul   $0x6c756200,0x65(%esp,%ebp,2),%ebp
insb   (%dx),%es:(%edi)
gs
je     8053ec8 <_IO_stdin_used+0x4fc4>
outsb  %gs:(%esi),(%dx)
fs
popa
jae    8053f36 <_IO_stdin_used+0x5032>
add    %dh,0x61(%edx,%esi,2)
fs
gs
insl   (%dx),%es:(%edi)
popa
jb     8053f43 <_IO_stdin_used+0x503f>
add    %dh,0x61(%eax,%ebp,2)
imul   $0x69616b6f,0x6b(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x686b6f68,0x6b(%edi),%ebx
popa
imul   $0x69616874,(%eax),%eax
pop    %edi
imul   $0x6b,0x6f(%eax),%ebp
push   $0x746175
je     8053f69 <_IO_stdin_used+0x5065>
popa
imul   $0x686b6f68,0x6b(%edi),%ebx
ja     8053f6c <_IO_stdin_used+0x5068>
imul   $0x69616874,(%eax),%eax
pop    %edi
imul   $0x6b,0x6f(%eax),%ebp
push   $0x74006e6f
push   $0x6b5f6961
push   $0x6b61726f
push   $0x676e61
je     8053f94 <_IO_stdin_used+0x5090>
popa
imul   $0x676e6f67,0x6e(%edi),%ebx
jne    8053f36 <_IO_stdin_used+0x5032>
je     8053fa0 <_IO_stdin_used+0x509c>
popa
imul   $0x68636f68,0x63(%edi),%ebx
popa
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x68636f68,0x63(%edi),%ebx
imul   $0x61687400,0x67(%esi),%ebp
imul   $0x68636f68,0x63(%edi),%ebx
popa
outsb  %ds:(%esi),(%dx)
add    %dh,0x68(%si)
popa
imul   $0x6f736f,0x73(%edi),%ebx
je     8053fd3 <_IO_stdin_used+0x50cf>
popa
imul   $0x68636f68,0x63(%edi),%ebx
outsl  %ds:(%esi),(%dx)
add    %dh,%gs:0x61(%eax,%ebp,2)
imul   $0x6e69796f,0x79(%edi),%ebx
add    %dh,0x68(%si)
popa
imul   $0x6168636f,0x64(%edi),%ebx
fs
popa
add    %dh,0x61(%eax,%ebp,2)
imul   $0x7461706f,0x74(%edi),%ebx
popa
imul   $0x74,(%eax),%eax
push   $0x745f6961
push   $0x6168746f
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x616e6f68,0x74(%edi),%ebx
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8054022 <_IO_stdin_used+0x511e>
outsl  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x68706f68,0x74(%edi),%ebx
jne    805403c <_IO_stdin_used+0x5138>
push   $0x74006f61
push   $0x6e5f6961
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6b65646f,0x64(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6f61746f,0x74(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x68746f68,0x74(%edi),%ebx
jne    8054067 <_IO_stdin_used+0x5163>
add    %dh,0x68(%si)
popa
imul   $0x68746f68,0x74(%edi),%ebx
popa
push   $0x74006e61
push   $0x745f6961
push   $0x6f68746f
outsb  %ds:(%esi),(%dx)
add    %dh,0x68(%si)
popa
imul   $0x756e6f,0x6e(%edi),%ebx
je     805408c <_IO_stdin_used+0x5188>
popa
imul   $0x6961626f,0x62(%edi),%ebx
insl   (%dx),%es:(%edi)
popa
imul   $0x69616874,(%eax),%eax
pop    %edi
jo     80540a6 <_IO_stdin_used+0x51a2>
jo     80540a5 <_IO_stdin_used+0x51a1>
popa
add    %dh,0x61(%eax,%ebp,2)
imul   $0x68706f68,0x70(%edi),%ebx
jne    80540b5 <_IO_stdin_used+0x51b1>
add    %dh,0x68(%si)
popa
imul   $0x61666f,0x66(%edi),%ebx
je     80540bd <_IO_stdin_used+0x51b9>
popa
imul   $0x68706f68,0x70(%edi),%ebx
popa
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6e61666f,0x66(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61736f68,0x70(%edi),%ebx
insl   (%dx),%es:(%edi)
jo     80540e0 <_IO_stdin_used+0x51dc>
popa
outsl  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x616d6f,0x6d(%edi),%ebx
je     80540ef <_IO_stdin_used+0x51eb>
popa
imul   $0x6b61796f,0x79(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6175726f,0x72(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x68740075,0x72(%edi),%ebx
popa
imul   $0x6e696c6f,0x6c(%edi),%ebx
add    %dh,0x68(%si)
popa
imul   $0x68740075,0x6c(%edi),%ebx
popa
imul   $0x6561776f,0x77(%edi),%ebx
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6c61736f,0x73(%edi),%ebx
popa
add    %dh,0x61(%eax,%ebp,2)
imul   $0x7375726f,0x73(%edi),%ebx
imul   $0x69616874,(%eax),%eax
pop    %edi
jae    8054151 <_IO_stdin_used+0x524d>
jae    8054159 <_IO_stdin_used+0x5255>
popa
add    %dh,0x61(%eax,%ebp,2)
imul   $0x7069686f,0x68(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x7568636f,0x6c(%edi),%ebx
insb   (%dx),%es:(%edi)
popa
add    %dh,0x61(%eax,%ebp,2)
imul   $0x676e61,0x6f(%edi),%ebx
je     8054172 <_IO_stdin_used+0x526e>
popa
imul   $0x6b6f6e6f,0x68(%edi),%ebx
push   $0x74006b75
push   $0x705f6961
popa
imul   $0x696f6e6e,0x61(%ecx),%edi
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61617261,0x73(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61686961,0x6d(%edi),%ebx
outsb  %ds:(%esi),(%dx)
popa
imul   $0x0,0x74(%ecx),%esp
je     80541aa <_IO_stdin_used+0x52a6>
popa
imul   $0x61617261,0x73(%edi),%ebx
popa
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61617261,0x73(%edi),%ebx
insl   (%dx),%es:(%edi)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x69617261,0x73(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x69617261,0x73(%edi),%ebx
imul   $0x69616874,(%eax),%eax
pop    %edi
jae    80541d7 <_IO_stdin_used+0x52d3>
jb     80541d9 <_IO_stdin_used+0x52d5>
jne    80541df <_IO_stdin_used+0x52db>
add    %dh,0x61(%eax,%ebp,2)
imul   $0x75617261,0x73(%edi),%ebx
gs add %dh,%gs:0x61(%eax,%ebp,2)
imul   $0x75617261,0x73(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x75617261,0x73(%edi),%ebx
jne    805419f <_IO_stdin_used+0x529b>
je     8054209 <_IO_stdin_used+0x5305>
popa
imul   $0x746e6968,0x70(%edi),%ebx
push   $0x68740075
popa
imul   $0x746861,0x62(%edi),%ebx
je     8054220 <_IO_stdin_used+0x531c>
popa
imul   $0x65617261,0x73(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61617261,0x73(%edi),%ebx
add    %dh,%gs:0x61(%eax,%ebp,2)
imul   $0x6f617261,0x73(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61617261,0x73(%edi),%ebx
imul   $0x61756d69,0x61(%ebp),%ebp
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61617261,0x73(%edi),%ebx
imul   $0x6c616d69,0x61(%ebp),%ebp
popa
imul   $0x69616874,(%eax),%eax
pop    %edi
insb   (%dx),%es:(%edi)
popa
imul   $0x61,0x68(%ebx),%ebp
outsb  %ds:(%esi),(%dx)
addr16 jns 805426f <_IO_stdin_used+0x536b>
outsl  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61796961,0x6d(%edi),%ebx
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x74,(%eax),%eax
push   $0x6d5f6961
popa
imul   $0x75686b,0x69(%ecx,%eiz,2),%esi
je     8054297 <_IO_stdin_used+0x5393>
popa
imul   $0x6b656961,0x6d(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x68746961,0x6d(%edi),%ebx
outsl  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x72746961,0x6d(%edi),%ebx
imul   $0x69616874,(%eax),%eax
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x61747461,0x68(%ebx),%esp
ja     80542c1 <_IO_stdin_used+0x53bd>
add    %dh,0x61(%eax,%ebp,2)
imul   $0x746e6168,0x74(%edi),%ebx
push   $0x61686b61
je     8054272 <_IO_stdin_used+0x536e>
je     80542dc <_IO_stdin_used+0x53d8>
popa
imul   $0x61686b69,0x6e(%edi),%ebx
push   $0x74007469
push   $0x795f6961
popa
insl   (%dx),%es:(%edi)
popa
imul   $0x6e,0x61(%ebx),%ebp
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6d676e6f,0x66(%edi),%ebx
popa
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x75736b65,0x6c(%edi),%ebx
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x756e6b65,0x6c(%edi),%ebx
outsb  %ds:(%esi),(%dx)
add    %dh,0x68(%si)
popa
imul   $0x6f736b65,0x6c(%edi),%ebx
outsb  %ds:(%esi),(%dx)
add    %dh,0x68(%si)
popa
imul   $0x61736b65,0x6c(%edi),%ebx
insl   (%dx),%es:(%edi)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x69736b65,0x6c(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x61686b65,0x6c(%edi),%ebx
add    %dh,0x61(%eax,%ebp,2)
imul   $0x6f686b65,0x6c(%edi),%ebx
imul   $0x74,(%eax),%eax
push   $0x6c5f6961
imul   $0x65,%gs:0x68(%ebx),%esp
je     80542fc <_IO_stdin_used+0x53f8>
je     8054366 <_IO_stdin_used+0x5462>
popa
imul   $0x61706b65,0x6c(%edi),%ebx
gs
je     8054309 <_IO_stdin_used+0x5405>
je     8054373 <_IO_stdin_used+0x546f>
popa
imul   $0x616b6b65,0x6c(%edi),%ebx
outsl  %ds:(%esi),(%dx)
add    %dh,0x61(%eax,%ebp,2)
imul   $0x686b676e,0x61(%edi),%ebx
popa
outsb  %ds:(%esi),(%dx)
imul   $0x0,0x75(%eax),%ebp
je     805438f <_IO_stdin_used+0x548b>
popa
imul   $0x756d6f68,0x6b(%edi),%ebx
je     8054331 <_IO_stdin_used+0x542d>
gs
je     805439c <_IO_stdin_used+0x5498>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80543a9 <_IO_stdin_used+0x54a5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x74650061
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80543be <_IO_stdin_used+0x54ba>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x74650075
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80543d3 <_IO_stdin_used+0x54cf>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x74650069
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80543e8 <_IO_stdin_used+0x54e4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65006161
je     80543f1 <_IO_stdin_used+0x54ed>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80543fe <_IO_stdin_used+0x54fa>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65006565
je     8054407 <_IO_stdin_used+0x5503>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054414 <_IO_stdin_used+0x5510>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x74650065
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054429 <_IO_stdin_used+0x5525>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x7465006f
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805443e <_IO_stdin_used+0x553a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054453 <_IO_stdin_used+0x554f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
jne    80543f0 <_IO_stdin_used+0x54ec>
gs
je     805445b <_IO_stdin_used+0x5557>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054468 <_IO_stdin_used+0x5564>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8054475 <_IO_stdin_used+0x5571>
arpl   %bx,0x73(%edi)
jns    805447d <_IO_stdin_used+0x5579>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054493 <_IO_stdin_used+0x558f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80544a9 <_IO_stdin_used+0x55a5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80544be <_IO_stdin_used+0x55ba>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80544d3 <_IO_stdin_used+0x55cf>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
ja     80544d1 <_IO_stdin_used+0x55cd>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80544e9 <_IO_stdin_used+0x55e5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65006168
je     80544f2 <_IO_stdin_used+0x55ee>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80544ff <_IO_stdin_used+0x55fb>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65007568
je     8054508 <_IO_stdin_used+0x5604>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054515 <_IO_stdin_used+0x5611>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65006968
je     805451e <_IO_stdin_used+0x561a>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805452b <_IO_stdin_used+0x5627>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x616168
gs
je     8054535 <_IO_stdin_used+0x5631>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054542 <_IO_stdin_used+0x563e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x656568
gs
je     805454c <_IO_stdin_used+0x5648>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054559 <_IO_stdin_used+0x5655>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65006568
je     8054562 <_IO_stdin_used+0x565e>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805456f <_IO_stdin_used+0x566b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65006f68
je     8054578 <_IO_stdin_used+0x5674>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054585 <_IO_stdin_used+0x5681>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x617768
gs
je     805458f <_IO_stdin_used+0x568b>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805459c <_IO_stdin_used+0x5698>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80545b1 <_IO_stdin_used+0x56ad>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jne    805454e <_IO_stdin_used+0x564a>
gs
je     80545b9 <_IO_stdin_used+0x56b5>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80545c6 <_IO_stdin_used+0x56c2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     80545d3 <_IO_stdin_used+0x56cf>
arpl   %bx,0x73(%edi)
jns    80545db <_IO_stdin_used+0x56d7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80545f1 <_IO_stdin_used+0x56ed>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054607 <_IO_stdin_used+0x5703>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805461c <_IO_stdin_used+0x5718>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054631 <_IO_stdin_used+0x572d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
ja     805462f <_IO_stdin_used+0x572b>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054648 <_IO_stdin_used+0x5744>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    805465e <_IO_stdin_used+0x575a>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805465e <_IO_stdin_used+0x575a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8054674 <_IO_stdin_used+0x5770>
jne    80545fc <_IO_stdin_used+0x56f8>
gs
je     8054667 <_IO_stdin_used+0x5763>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054674 <_IO_stdin_used+0x5770>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    805468a <_IO_stdin_used+0x5786>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8054682 <_IO_stdin_used+0x577e>
arpl   %bx,0x73(%edi)
jns    805468a <_IO_stdin_used+0x5786>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80546a0 <_IO_stdin_used+0x579c>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80546a1 <_IO_stdin_used+0x579d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80546b7 <_IO_stdin_used+0x57b3>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80546b8 <_IO_stdin_used+0x57b4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80546ce <_IO_stdin_used+0x57ca>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80546ce <_IO_stdin_used+0x57ca>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80546e4 <_IO_stdin_used+0x57e0>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80546e4 <_IO_stdin_used+0x57e0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80546fa <_IO_stdin_used+0x57f6>
ja     80546e3 <_IO_stdin_used+0x57df>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80546fb <_IO_stdin_used+0x57f7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     80546f8 <_IO_stdin_used+0x57f4>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054710 <_IO_stdin_used+0x580c>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8054721 <_IO_stdin_used+0x581d>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054725 <_IO_stdin_used+0x5821>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     805472a <_IO_stdin_used+0x5826>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805473a <_IO_stdin_used+0x5836>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8054737 <_IO_stdin_used+0x5833>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054750 <_IO_stdin_used+0x584c>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8054751 <_IO_stdin_used+0x584d>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054766 <_IO_stdin_used+0x5862>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8054767 <_IO_stdin_used+0x5863>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805477b <_IO_stdin_used+0x5877>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8054786 <_IO_stdin_used+0x5882>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054790 <_IO_stdin_used+0x588c>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     80547a3 <_IO_stdin_used+0x589f>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80547a6 <_IO_stdin_used+0x58a2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80547a3 <_IO_stdin_used+0x589f>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80547bb <_IO_stdin_used+0x58b7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80547cc <_IO_stdin_used+0x58c8>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80547d0 <_IO_stdin_used+0x58cc>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80547d5 <_IO_stdin_used+0x58d1>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80547e5 <_IO_stdin_used+0x58e1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80547e2 <_IO_stdin_used+0x58de>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80547fb <_IO_stdin_used+0x58f7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80547fc <_IO_stdin_used+0x58f8>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054811 <_IO_stdin_used+0x590d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8054812 <_IO_stdin_used+0x590e>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054826 <_IO_stdin_used+0x5922>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8054831 <_IO_stdin_used+0x592d>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805483b <_IO_stdin_used+0x5937>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    805484e <_IO_stdin_used+0x594a>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054851 <_IO_stdin_used+0x594d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8054855 <_IO_stdin_used+0x5951>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054867 <_IO_stdin_used+0x5963>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    805486b <_IO_stdin_used+0x5967>
jne    8054805 <_IO_stdin_used+0x5901>
gs
je     8054870 <_IO_stdin_used+0x596c>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805487d <_IO_stdin_used+0x5979>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8054881 <_IO_stdin_used+0x597d>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     805488b <_IO_stdin_used+0x5987>
arpl   %bx,0x73(%edi)
jns    8054893 <_IO_stdin_used+0x598f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8054897 <_IO_stdin_used+0x5993>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80548aa <_IO_stdin_used+0x59a6>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80548ae <_IO_stdin_used+0x59aa>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80548c1 <_IO_stdin_used+0x59bd>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80548c5 <_IO_stdin_used+0x59c1>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80548d7 <_IO_stdin_used+0x59d3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80548db <_IO_stdin_used+0x59d7>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80548ed <_IO_stdin_used+0x59e9>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    80548f1 <_IO_stdin_used+0x59ed>
ja     80548ec <_IO_stdin_used+0x59e8>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054904 <_IO_stdin_used+0x5a00>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054901 <_IO_stdin_used+0x59fd>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054919 <_IO_stdin_used+0x5a15>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    805492a <_IO_stdin_used+0x5a26>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805492e <_IO_stdin_used+0x5a2a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054933 <_IO_stdin_used+0x5a2f>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054943 <_IO_stdin_used+0x5a3f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054940 <_IO_stdin_used+0x5a3c>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054959 <_IO_stdin_used+0x5a55>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    805495a <_IO_stdin_used+0x5a56>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805496f <_IO_stdin_used+0x5a6b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054970 <_IO_stdin_used+0x5a6c>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054984 <_IO_stdin_used+0x5a80>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    805498f <_IO_stdin_used+0x5a8b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054999 <_IO_stdin_used+0x5a95>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    80549ac <_IO_stdin_used+0x5aa8>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80549af <_IO_stdin_used+0x5aab>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    80549c2 <_IO_stdin_used+0x5abe>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     80549bd <_IO_stdin_used+0x5ab9>
arpl   %bx,0x73(%edi)
jns    80549c5 <_IO_stdin_used+0x5ac1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    80549d8 <_IO_stdin_used+0x5ad4>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80549dc <_IO_stdin_used+0x5ad8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    80549ef <_IO_stdin_used+0x5aeb>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80549f3 <_IO_stdin_used+0x5aef>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a06 <_IO_stdin_used+0x5b02>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054a09 <_IO_stdin_used+0x5b05>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a0d <_IO_stdin_used+0x5b09>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054a1f <_IO_stdin_used+0x5b1b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a23 <_IO_stdin_used+0x5b1f>
jne    80549bd <_IO_stdin_used+0x5ab9>
gs
je     8054a28 <_IO_stdin_used+0x5b24>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054a35 <_IO_stdin_used+0x5b31>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a39 <_IO_stdin_used+0x5b35>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8054a43 <_IO_stdin_used+0x5b3f>
arpl   %bx,0x73(%edi)
jns    8054a4b <_IO_stdin_used+0x5b47>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a4f <_IO_stdin_used+0x5b4b>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054a62 <_IO_stdin_used+0x5b5e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a66 <_IO_stdin_used+0x5b62>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054a79 <_IO_stdin_used+0x5b75>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a7d <_IO_stdin_used+0x5b79>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054a8f <_IO_stdin_used+0x5b8b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054a93 <_IO_stdin_used+0x5b8f>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054aa5 <_IO_stdin_used+0x5ba1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054aa9 <_IO_stdin_used+0x5ba5>
ja     8054aa4 <_IO_stdin_used+0x5ba0>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054abc <_IO_stdin_used+0x5bb8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054ac0 <_IO_stdin_used+0x5bbc>
ja     8054ac3 <_IO_stdin_used+0x5bbf>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054ad3 <_IO_stdin_used+0x5bcf>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054ad7 <_IO_stdin_used+0x5bd3>
ja     8054ad2 <_IO_stdin_used+0x5bce>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054aeb <_IO_stdin_used+0x5be7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054aef <_IO_stdin_used+0x5beb>
ja     8054aee <_IO_stdin_used+0x5bea>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054b03 <_IO_stdin_used+0x5bff>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jno    8054b07 <_IO_stdin_used+0x5c03>
ja     8054b06 <_IO_stdin_used+0x5c02>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054b1a <_IO_stdin_used+0x5c16>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %esp,0x0(%ecx)
gs
je     8054b22 <_IO_stdin_used+0x5c1e>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054b2f <_IO_stdin_used+0x5c2b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %esi,0x0(%ebp)
gs
je     8054b37 <_IO_stdin_used+0x5c33>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054b44 <_IO_stdin_used+0x5c40>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %ebp,0x0(%ecx)
gs
je     8054b4c <_IO_stdin_used+0x5c48>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054b59 <_IO_stdin_used+0x5c55>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %esp,0x61(%ecx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054b6f <_IO_stdin_used+0x5c6b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %esp,0x65(%ebp)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054b85 <_IO_stdin_used+0x5c81>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %esp,0x0(%ebp)
gs
je     8054b8d <_IO_stdin_used+0x5c89>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054b9a <_IO_stdin_used+0x5c96>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %ebp,0x0(%edi)
gs
je     8054ba2 <_IO_stdin_used+0x5c9e>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054baf <_IO_stdin_used+0x5cab>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
bound  %esi,0x61(%edi)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054bc6 <_IO_stdin_used+0x5cc2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054bc3 <_IO_stdin_used+0x5cbf>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054bdb <_IO_stdin_used+0x5cd7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054bec <_IO_stdin_used+0x5ce8>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054bf0 <_IO_stdin_used+0x5cec>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054bf5 <_IO_stdin_used+0x5cf1>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c05 <_IO_stdin_used+0x5d01>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054c02 <_IO_stdin_used+0x5cfe>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c1b <_IO_stdin_used+0x5d17>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054c1c <_IO_stdin_used+0x5d18>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c31 <_IO_stdin_used+0x5d2d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054c32 <_IO_stdin_used+0x5d2e>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c46 <_IO_stdin_used+0x5d42>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054c51 <_IO_stdin_used+0x5d4d>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c5b <_IO_stdin_used+0x5d57>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jbe    8054c6e <_IO_stdin_used+0x5d6a>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c71 <_IO_stdin_used+0x5d6d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054c6e <_IO_stdin_used+0x5d6a>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c86 <_IO_stdin_used+0x5d82>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054c97 <_IO_stdin_used+0x5d93>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054c9b <_IO_stdin_used+0x5d97>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054ca0 <_IO_stdin_used+0x5d9c>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054cb0 <_IO_stdin_used+0x5dac>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054cad <_IO_stdin_used+0x5da9>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054cc6 <_IO_stdin_used+0x5dc2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054cc7 <_IO_stdin_used+0x5dc3>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054cdc <_IO_stdin_used+0x5dd8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054cdd <_IO_stdin_used+0x5dd9>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054cf1 <_IO_stdin_used+0x5ded>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054cfc <_IO_stdin_used+0x5df8>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054d06 <_IO_stdin_used+0x5e02>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8054d19 <_IO_stdin_used+0x5e15>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054d1c <_IO_stdin_used+0x5e18>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %sp,0x0(%ecx)
gs
je     8054d24 <_IO_stdin_used+0x5e20>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054d31 <_IO_stdin_used+0x5e2d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %si,0x0(%ebp)
gs
je     8054d39 <_IO_stdin_used+0x5e35>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054d46 <_IO_stdin_used+0x5e42>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x0(%ecx)
gs
je     8054d4e <_IO_stdin_used+0x5e4a>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054d5b <_IO_stdin_used+0x5e57>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %sp,0x61(%ecx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054d71 <_IO_stdin_used+0x5e6d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %sp,0x65(%ebp)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054d87 <_IO_stdin_used+0x5e83>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %sp,0x0(%ebp)
gs
je     8054d8f <_IO_stdin_used+0x5e8b>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054d9c <_IO_stdin_used+0x5e98>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x0(%edi)
gs
je     8054da4 <_IO_stdin_used+0x5ea0>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054db1 <_IO_stdin_used+0x5ead>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %si,0x61(%edi)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054dc7 <_IO_stdin_used+0x5ec3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054dc4 <_IO_stdin_used+0x5ec0>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054ddc <_IO_stdin_used+0x5ed8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054ded <_IO_stdin_used+0x5ee9>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054df1 <_IO_stdin_used+0x5eed>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054df6 <_IO_stdin_used+0x5ef2>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e06 <_IO_stdin_used+0x5f02>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e03 <_IO_stdin_used+0x5eff>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e1c <_IO_stdin_used+0x5f18>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e1d <_IO_stdin_used+0x5f19>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e32 <_IO_stdin_used+0x5f2e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e33 <_IO_stdin_used+0x5f2f>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e47 <_IO_stdin_used+0x5f43>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e52 <_IO_stdin_used+0x5f4e>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e5c <_IO_stdin_used+0x5f58>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e6f <_IO_stdin_used+0x5f6b>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e72 <_IO_stdin_used+0x5f6e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e85 <_IO_stdin_used+0x5f81>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8054e80 <_IO_stdin_used+0x5f7c>
arpl   %bx,0x73(%edi)
jns    8054e88 <_IO_stdin_used+0x5f84>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054e9b <_IO_stdin_used+0x5f97>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054e9f <_IO_stdin_used+0x5f9b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054eb2 <_IO_stdin_used+0x5fae>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054eb6 <_IO_stdin_used+0x5fb2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
js     8054ec9 <_IO_stdin_used+0x5fc5>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054ecc <_IO_stdin_used+0x5fc8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054ee1 <_IO_stdin_used+0x5fdd>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jne    8054e7e <_IO_stdin_used+0x5f7a>
gs
je     8054ee9 <_IO_stdin_used+0x5fe5>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8054ef6 <_IO_stdin_used+0x5ff2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8054f03 <_IO_stdin_used+0x5fff>
arpl   %bx,0x73(%edi)
jns    8054f0b <_IO_stdin_used+0x6007>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054f21 <_IO_stdin_used+0x601d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054f37 <_IO_stdin_used+0x6033>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054f4c <_IO_stdin_used+0x6048>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054f61 <_IO_stdin_used+0x605d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
ja     8054f5f <_IO_stdin_used+0x605b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054f77 <_IO_stdin_used+0x6073>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8054f75 <_IO_stdin_used+0x6071>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054f8d <_IO_stdin_used+0x6089>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8054f9f <_IO_stdin_used+0x609b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054fa3 <_IO_stdin_used+0x609f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8054fa9 <_IO_stdin_used+0x60a5>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054fb9 <_IO_stdin_used+0x60b5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8054fb7 <_IO_stdin_used+0x60b3>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054fd0 <_IO_stdin_used+0x60cc>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8054fd2 <_IO_stdin_used+0x60ce>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054fe7 <_IO_stdin_used+0x60e3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8054fe9 <_IO_stdin_used+0x60e5>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8054ffd <_IO_stdin_used+0x60f9>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8055009 <_IO_stdin_used+0x6105>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055013 <_IO_stdin_used+0x610f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
jns    8055027 <_IO_stdin_used+0x6123>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805502a <_IO_stdin_used+0x6126>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     805503d <_IO_stdin_used+0x6139>
popa
insb   (%dx),%es:(%edi)
pop    %edi
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055046 <_IO_stdin_used+0x6142>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     8055059 <_IO_stdin_used+0x6155>
popa
insb   (%dx),%es:(%edi)
pop    %edi
jne    8054fea <_IO_stdin_used+0x60e6>
gs
je     8055055 <_IO_stdin_used+0x6151>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055062 <_IO_stdin_used+0x615e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     8055075 <_IO_stdin_used+0x6171>
popa
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8055076 <_IO_stdin_used+0x6172>
arpl   %bx,0x73(%edi)
jns    805507e <_IO_stdin_used+0x617a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     8055091 <_IO_stdin_used+0x618d>
popa
insb   (%dx),%es:(%edi)
pop    %edi
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805509b <_IO_stdin_used+0x6197>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     80550ae <_IO_stdin_used+0x61aa>
popa
insb   (%dx),%es:(%edi)
pop    %edi
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80550b8 <_IO_stdin_used+0x61b4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     80550cb <_IO_stdin_used+0x61c7>
popa
insb   (%dx),%es:(%edi)
pop    %edi
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80550d4 <_IO_stdin_used+0x61d0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     80550e7 <_IO_stdin_used+0x61e3>
popa
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80550f0 <_IO_stdin_used+0x61ec>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
je     8055103 <_IO_stdin_used+0x61ff>
popa
insb   (%dx),%es:(%edi)
pop    %edi
ja     80550f5 <_IO_stdin_used+0x61f1>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805510d <_IO_stdin_used+0x6209>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x0(%ecx),%esp
je     8055115 <_IO_stdin_used+0x6211>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055122 <_IO_stdin_used+0x621e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x0(%ebp),%esi
je     805512a <_IO_stdin_used+0x6226>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055137 <_IO_stdin_used+0x6233>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x0(%ecx),%ebp
je     805513f <_IO_stdin_used+0x623b>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805514c <_IO_stdin_used+0x6248>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x61(%ecx),%esp
gs
je     8055155 <_IO_stdin_used+0x6251>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055162 <_IO_stdin_used+0x625e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x65(%ebp),%esp
gs
je     805516b <_IO_stdin_used+0x6267>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055178 <_IO_stdin_used+0x6274>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x0(%ebp),%esp
je     8055180 <_IO_stdin_used+0x627c>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805518d <_IO_stdin_used+0x6289>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x0(%edi),%ebp
je     8055195 <_IO_stdin_used+0x6291>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80551a2 <_IO_stdin_used+0x629e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x61(%edi),%esi
gs
je     80551ab <_IO_stdin_used+0x62a7>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80551b8 <_IO_stdin_used+0x62b4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x69(%edi),%esi
gs
je     80551c1 <_IO_stdin_used+0x62bd>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80551ce <_IO_stdin_used+0x62ca>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x61,0x61(%edi),%esi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80551e5 <_IO_stdin_used+0x62e1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x65(%edi),%esi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80551fc <_IO_stdin_used+0x62f8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x65(%edi),%esi
gs
je     8055205 <_IO_stdin_used+0x6301>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055212 <_IO_stdin_used+0x630e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x61(%eax),%edi
gs
je     805521b <_IO_stdin_used+0x6317>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055228 <_IO_stdin_used+0x6324>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x75(%eax),%edi
gs
je     8055231 <_IO_stdin_used+0x632d>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805523e <_IO_stdin_used+0x633a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x69(%eax),%edi
gs
je     8055247 <_IO_stdin_used+0x6343>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055254 <_IO_stdin_used+0x6350>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x61,0x61(%eax),%edi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805526b <_IO_stdin_used+0x6367>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x65(%eax),%edi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055282 <_IO_stdin_used+0x637e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x65(%eax),%edi
gs
je     805528b <_IO_stdin_used+0x6387>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055298 <_IO_stdin_used+0x6394>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x0,0x6f(%eax),%edi
gs
je     80552a1 <_IO_stdin_used+0x639d>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80552ae <_IO_stdin_used+0x63aa>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x61,0x77(%eax),%edi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80552c5 <_IO_stdin_used+0x63c1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x69,0x77(%eax),%edi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80552dc <_IO_stdin_used+0x63d8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x61,0x77(%eax),%edi
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80552f4 <_IO_stdin_used+0x63f0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x77(%eax),%edi
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805530c <_IO_stdin_used+0x6408>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x65,0x77(%eax),%edi
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055323 <_IO_stdin_used+0x641f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     8055320 <_IO_stdin_used+0x641c>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055338 <_IO_stdin_used+0x6434>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     8055349 <_IO_stdin_used+0x6445>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805534d <_IO_stdin_used+0x6449>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     8055352 <_IO_stdin_used+0x644e>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055362 <_IO_stdin_used+0x645e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     805535f <_IO_stdin_used+0x645b>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055378 <_IO_stdin_used+0x6474>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     8055379 <_IO_stdin_used+0x6475>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805538e <_IO_stdin_used+0x648a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     805538f <_IO_stdin_used+0x648b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80553a3 <_IO_stdin_used+0x649f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
ja     80553ae <_IO_stdin_used+0x64aa>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80553b8 <_IO_stdin_used+0x64b4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80553b5 <_IO_stdin_used+0x64b1>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80553cd <_IO_stdin_used+0x64c9>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80553de <_IO_stdin_used+0x64da>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80553e2 <_IO_stdin_used+0x64de>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80553e7 <_IO_stdin_used+0x64e3>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80553f7 <_IO_stdin_used+0x64f3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80553f4 <_IO_stdin_used+0x64f0>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805540d <_IO_stdin_used+0x6509>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     805540e <_IO_stdin_used+0x650a>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055423 <_IO_stdin_used+0x651f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     8055424 <_IO_stdin_used+0x6520>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055438 <_IO_stdin_used+0x6534>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     8055443 <_IO_stdin_used+0x653f>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805544d <_IO_stdin_used+0x6549>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     8055460 <_IO_stdin_used+0x655c>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055463 <_IO_stdin_used+0x655f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     8055467 <_IO_stdin_used+0x6563>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055479 <_IO_stdin_used+0x6575>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     805547d <_IO_stdin_used+0x6579>
jne    8055417 <_IO_stdin_used+0x6513>
gs
je     8055482 <_IO_stdin_used+0x657e>
imul   $0x735f6369,0x70(%edi),%ebp
jns    805548f <_IO_stdin_used+0x658b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     8055493 <_IO_stdin_used+0x658f>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     805549d <_IO_stdin_used+0x6599>
arpl   %bx,0x73(%edi)
jns    80554a5 <_IO_stdin_used+0x65a1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80554a9 <_IO_stdin_used+0x65a5>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80554bc <_IO_stdin_used+0x65b8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80554c0 <_IO_stdin_used+0x65bc>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80554d3 <_IO_stdin_used+0x65cf>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80554d7 <_IO_stdin_used+0x65d3>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80554e9 <_IO_stdin_used+0x65e5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     80554ed <_IO_stdin_used+0x65e9>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80554ff <_IO_stdin_used+0x65fb>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jp     8055503 <_IO_stdin_used+0x65ff>
ja     80554fe <_IO_stdin_used+0x65fa>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055516 <_IO_stdin_used+0x6612>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    8055513 <_IO_stdin_used+0x660f>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805552b <_IO_stdin_used+0x6627>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    805553c <_IO_stdin_used+0x6638>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055540 <_IO_stdin_used+0x663c>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    8055545 <_IO_stdin_used+0x6641>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055555 <_IO_stdin_used+0x6651>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    8055552 <_IO_stdin_used+0x664e>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805556b <_IO_stdin_used+0x6667>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    805556c <_IO_stdin_used+0x6668>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055581 <_IO_stdin_used+0x667d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    8055582 <_IO_stdin_used+0x667e>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055596 <_IO_stdin_used+0x6692>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jns    80555a1 <_IO_stdin_used+0x669d>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80555ab <_IO_stdin_used+0x66a7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80555c0 <_IO_stdin_used+0x66bc>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
jne    805555d <_IO_stdin_used+0x6659>
gs
je     80555c8 <_IO_stdin_used+0x66c4>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80555d5 <_IO_stdin_used+0x66d1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x69687465,%fs:(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     80555e2 <_IO_stdin_used+0x66de>
arpl   %bx,0x73(%edi)
jns    80555ea <_IO_stdin_used+0x66e6>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055600 <_IO_stdin_used+0x66fc>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs gs add %ah,%fs:%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055616 <_IO_stdin_used+0x6712>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs add %ah,%fs:%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805562b <_IO_stdin_used+0x6727>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsl  %fs:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055640 <_IO_stdin_used+0x673c>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
ja     805563e <_IO_stdin_used+0x673a>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055656 <_IO_stdin_used+0x6752>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
fs
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805566c <_IO_stdin_used+0x6768>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
fs
jne    805560a <_IO_stdin_used+0x6706>
gs
je     8055675 <_IO_stdin_used+0x6771>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055682 <_IO_stdin_used+0x677e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs imul $0x69687465,%fs:(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8055690 <_IO_stdin_used+0x678c>
arpl   %bx,0x73(%edi)
jns    8055698 <_IO_stdin_used+0x6794>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
fs
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80556af <_IO_stdin_used+0x67ab>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs fs gs add %ah,%fs:%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80556c6 <_IO_stdin_used+0x67c2>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs fs add %ah,%fs:%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80556dc <_IO_stdin_used+0x67d8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs outsl %fs:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80556f2 <_IO_stdin_used+0x67ee>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
fs
fs
ja     80556f1 <_IO_stdin_used+0x67ed>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055709 <_IO_stdin_used+0x6805>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x61
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805571e <_IO_stdin_used+0x681a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x75
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055733 <_IO_stdin_used+0x682f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x69
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055748 <_IO_stdin_used+0x6844>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x61
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805575e <_IO_stdin_used+0x685a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055774 <_IO_stdin_used+0x6870>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x65
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055789 <_IO_stdin_used+0x6885>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x6f
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805579e <_IO_stdin_used+0x689a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
push   $0x77
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80557b4 <_IO_stdin_used+0x68b0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80557c9 <_IO_stdin_used+0x68c5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 jne 8055766 <_IO_stdin_used+0x6862>
gs
je     80557d1 <_IO_stdin_used+0x68cd>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80557de <_IO_stdin_used+0x68da>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x69687465,(%bx,%si),%eax
outsl  %ds:(%esi),(%dx)
jo     80557eb <_IO_stdin_used+0x68e7>
arpl   %bx,0x73(%edi)
jns    80557f3 <_IO_stdin_used+0x68ef>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055809 <_IO_stdin_used+0x6905>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
gs add %ah,%gs:0x74(%di)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805581f <_IO_stdin_used+0x691b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
add    %ah,%gs:0x74(%di)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055834 <_IO_stdin_used+0x6930>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsl  %ds:(%si),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055849 <_IO_stdin_used+0x6945>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 ja 8055847 <_IO_stdin_used+0x6943>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805585f <_IO_stdin_used+0x695b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 ja 8055865 <_IO_stdin_used+0x6961>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055875 <_IO_stdin_used+0x6971>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 ja 8055873 <_IO_stdin_used+0x696f>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805588c <_IO_stdin_used+0x6988>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 ja 805588e <_IO_stdin_used+0x698a>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80558a3 <_IO_stdin_used+0x699f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16 ja 80558a5 <_IO_stdin_used+0x69a1>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80558b9 <_IO_stdin_used+0x69b5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 addr16 popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80558cf <_IO_stdin_used+0x69cb>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 addr16 jne 805586d <_IO_stdin_used+0x6969>
gs
je     80558d8 <_IO_stdin_used+0x69d4>
imul   $0x735f6369,0x70(%edi),%ebp
jns    80558e5 <_IO_stdin_used+0x69e1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 imul $0x69687465,(%bx,%si),%eax
outsl  %ds:(%esi),(%dx)
jo     80558f3 <_IO_stdin_used+0x69ef>
arpl   %bx,0x73(%edi)
jns    80558fb <_IO_stdin_used+0x69f7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 addr16 popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055912 <_IO_stdin_used+0x6a0e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 gs add %ah,%gs:0x74(%di)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055929 <_IO_stdin_used+0x6a25>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 add %ah,%gs:0x74(%di)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805593f <_IO_stdin_used+0x6a3b>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
addr32 outsl %ds:(%si),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055955 <_IO_stdin_used+0x6a51>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055959 <_IO_stdin_used+0x6a55>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    805596b <_IO_stdin_used+0x6a67>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     805596f <_IO_stdin_used+0x6a6b>
jne    8055909 <_IO_stdin_used+0x6a05>
gs
je     8055974 <_IO_stdin_used+0x6a70>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055981 <_IO_stdin_used+0x6a7d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055985 <_IO_stdin_used+0x6a81>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     805598f <_IO_stdin_used+0x6a8b>
arpl   %bx,0x73(%edi)
jns    8055997 <_IO_stdin_used+0x6a93>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     805599b <_IO_stdin_used+0x6a97>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80559ae <_IO_stdin_used+0x6aaa>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     80559b2 <_IO_stdin_used+0x6aae>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80559c5 <_IO_stdin_used+0x6ac1>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     80559c9 <_IO_stdin_used+0x6ac5>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80559db <_IO_stdin_used+0x6ad7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     80559df <_IO_stdin_used+0x6adb>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    80559f1 <_IO_stdin_used+0x6aed>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     80559f5 <_IO_stdin_used+0x6af1>
ja     80559f0 <_IO_stdin_used+0x6aec>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a08 <_IO_stdin_used+0x6b04>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x61(%eax)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a1e <_IO_stdin_used+0x6b1a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x75(%eax)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a34 <_IO_stdin_used+0x6b30>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x69(%eax)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a4a <_IO_stdin_used+0x6b46>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x61(%eax)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a61 <_IO_stdin_used+0x6b5d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x65(%eax)
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a78 <_IO_stdin_used+0x6b74>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x65(%eax)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055a8e <_IO_stdin_used+0x6b8a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x6f(%eax)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055aa4 <_IO_stdin_used+0x6ba0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
arpl   %bp,0x77(%eax)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055abb <_IO_stdin_used+0x6bb7>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055abf <_IO_stdin_used+0x6bbb>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055ad1 <_IO_stdin_used+0x6bcd>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055ad5 <_IO_stdin_used+0x6bd1>
jne    8055a6f <_IO_stdin_used+0x6b6b>
gs
je     8055ada <_IO_stdin_used+0x6bd6>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055ae7 <_IO_stdin_used+0x6be3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055aeb <_IO_stdin_used+0x6be7>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8055af5 <_IO_stdin_used+0x6bf1>
arpl   %bx,0x73(%edi)
jns    8055afd <_IO_stdin_used+0x6bf9>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055b01 <_IO_stdin_used+0x6bfd>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055b14 <_IO_stdin_used+0x6c10>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055b18 <_IO_stdin_used+0x6c14>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055b2b <_IO_stdin_used+0x6c27>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055b2f <_IO_stdin_used+0x6c2b>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055b41 <_IO_stdin_used+0x6c3d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055b45 <_IO_stdin_used+0x6c41>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055b57 <_IO_stdin_used+0x6c53>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055b5b <_IO_stdin_used+0x6c57>
ja     8055b56 <_IO_stdin_used+0x6c52>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055b6e <_IO_stdin_used+0x6c6a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055b7d <_IO_stdin_used+0x6c79>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055b84 <_IO_stdin_used+0x6c80>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055b93 <_IO_stdin_used+0x6c8f>
jne    8055b22 <_IO_stdin_used+0x6c1e>
gs
je     8055b8d <_IO_stdin_used+0x6c89>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055b9a <_IO_stdin_used+0x6c96>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055ba9 <_IO_stdin_used+0x6ca5>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8055ba8 <_IO_stdin_used+0x6ca4>
arpl   %bx,0x73(%edi)
jns    8055bb0 <_IO_stdin_used+0x6cac>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055bbf <_IO_stdin_used+0x6cbb>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055bc7 <_IO_stdin_used+0x6cc3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055bd6 <_IO_stdin_used+0x6cd2>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055bde <_IO_stdin_used+0x6cda>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055bed <_IO_stdin_used+0x6ce9>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055bf4 <_IO_stdin_used+0x6cf0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c03 <_IO_stdin_used+0x6cff>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055c0a <_IO_stdin_used+0x6d06>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c19 <_IO_stdin_used+0x6d15>
ja     8055c09 <_IO_stdin_used+0x6d05>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055c21 <_IO_stdin_used+0x6d1d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c37 <_IO_stdin_used+0x6d33>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055c37 <_IO_stdin_used+0x6d33>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c4d <_IO_stdin_used+0x6d49>
jne    8055bd5 <_IO_stdin_used+0x6cd1>
gs
je     8055c40 <_IO_stdin_used+0x6d3c>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055c4d <_IO_stdin_used+0x6d49>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c63 <_IO_stdin_used+0x6d5f>
imul   $0x69687465,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     8055c5b <_IO_stdin_used+0x6d57>
arpl   %bx,0x73(%edi)
jns    8055c63 <_IO_stdin_used+0x6d5f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c79 <_IO_stdin_used+0x6d75>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055c7a <_IO_stdin_used+0x6d76>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055c90 <_IO_stdin_used+0x6d8c>
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055c91 <_IO_stdin_used+0x6d8d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055ca7 <_IO_stdin_used+0x6da3>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055ca7 <_IO_stdin_used+0x6da3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
je     8055cbd <_IO_stdin_used+0x6db9>
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055cbd <_IO_stdin_used+0x6db9>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
popaw
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055cd2 <_IO_stdin_used+0x6dce>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
data16
jne    8055c6f <_IO_stdin_used+0x6d6b>
gs
je     8055cda <_IO_stdin_used+0x6dd6>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8055ce7 <_IO_stdin_used+0x6de3>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x7465,(%eax),%ax
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055cfc <_IO_stdin_used+0x6df8>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
popaw
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d12 <_IO_stdin_used+0x6e0e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
data16
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d28 <_IO_stdin_used+0x6e24>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
data16
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d3d <_IO_stdin_used+0x6e39>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d52 <_IO_stdin_used+0x6e4e>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
data16
ja     8055d50 <_IO_stdin_used+0x6e4c>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d69 <_IO_stdin_used+0x6e65>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055d66 <_IO_stdin_used+0x6e62>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d7e <_IO_stdin_used+0x6e7a>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055d8f <_IO_stdin_used+0x6e8b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055d93 <_IO_stdin_used+0x6e8f>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055d98 <_IO_stdin_used+0x6e94>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055da8 <_IO_stdin_used+0x6ea4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055da5 <_IO_stdin_used+0x6ea1>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055dbe <_IO_stdin_used+0x6eba>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055dbf <_IO_stdin_used+0x6ebb>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055dd4 <_IO_stdin_used+0x6ed0>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055dd5 <_IO_stdin_used+0x6ed1>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055de9 <_IO_stdin_used+0x6ee5>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055df4 <_IO_stdin_used+0x6ef0>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055dfe <_IO_stdin_used+0x6efa>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8055e11 <_IO_stdin_used+0x6f0d>
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055e15 <_IO_stdin_used+0x6f11>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
jns    8055e13 <_IO_stdin_used+0x6f0f>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055e2b <_IO_stdin_used+0x6f27>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jb     8055e40 <_IO_stdin_used+0x6f3c>
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8055e41 <_IO_stdin_used+0x6f3d>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
data16
jns    8055e3f <_IO_stdin_used+0x6f3b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x77(%edi)
outsl  %ds:(%esi),(%dx)
jb     8055e50 <_IO_stdin_used+0x6f4c>
jae    8055e5e <_IO_stdin_used+0x6f5a>
popa
arpl   %sp,0x0(%ebp)
gs
je     8055e5d <_IO_stdin_used+0x6f59>
imul   $0x665f6369,0x70(%edi),%ebp
jne    8055e6a <_IO_stdin_used+0x6f66>
insb   (%dx),%es:(%edi)
pop    %edi
jae    8055e76 <_IO_stdin_used+0x6f72>
outsl  %ds:(%esi),(%dx)
jo     8055e05 <_IO_stdin_used+0x6f01>
gs
je     8055e70 <_IO_stdin_used+0x6f6c>
imul   $0x635f6369,0x70(%edi),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
gs
insl   (%dx),%es:(%edi)
imul   $0x6e6f6c,0x6f(%ebx),%esp
gs
je     8055e92 <_IO_stdin_used+0x6f8e>
imul   $0x635f6369,0x70(%edi),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x70(%edi)
jb     8055ea7 <_IO_stdin_used+0x6fa3>
popaw
arpl   %sp,0x5f(%ebp)
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x71(%edi)
jne    8055ebe <_IO_stdin_used+0x6fba>
jae    8055ecf <_IO_stdin_used+0x6fcb>
imul   $0x72616d5f,0x6e(%edi),%ebp
imul   $0x65,(%eax),%eax
je     8055ecf <_IO_stdin_used+0x6fcb>
imul   $0x705f6369,0x70(%edi),%ebp
popa
jb     8055ed2 <_IO_stdin_used+0x6fce>
addr16 jb 8055ed5 <_IO_stdin_used+0x6fd1>
jo     8055ede <_IO_stdin_used+0x6fda>
pop    %edi
jae    8055ede <_IO_stdin_used+0x6fda>
jo     8055edc <_IO_stdin_used+0x6fd8>
jb     8055ede <_IO_stdin_used+0x6fda>
je     8055eee <_IO_stdin_used+0x6fea>
jb     8055e81 <_IO_stdin_used+0x6f7d>
gs
je     8055eec <_IO_stdin_used+0x6fe8>
imul   $0x645f6369,0x70(%edi),%ebp
imul   $0x6e6f5f74,0x69(%edi),%esp
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x77745f74,0x69(%edi),%esp
outsl  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x68745f74,0x69(%edi),%esp
jb     8055f1f <_IO_stdin_used+0x701b>
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x6f665f74,0x69(%edi),%esp
jne    8055f41 <_IO_stdin_used+0x703d>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x69665f74,0x69(%edi),%esp
jbe    8055f48 <_IO_stdin_used+0x7044>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x69735f74,0x69(%edi),%esp
js     8055ef7 <_IO_stdin_used+0x6ff3>
gs
je     8055f62 <_IO_stdin_used+0x705e>
imul   $0x645f6369,0x70(%edi),%ebp
imul   $0x65735f74,0x69(%edi),%esp
jbe    8055f6f <_IO_stdin_used+0x706b>
outsb  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x69655f74,0x69(%edi),%esp
addr16 push $0x74650074
push   $0x69706f69
arpl   %bx,0x64(%edi)
imul   $0x696e5f74,0x69(%edi),%esp
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x6e(%edi)
jne    8055fae <_IO_stdin_used+0x70aa>
bound  %esp,0x72(%ebp)
pop    %edi
je     8055fac <_IO_stdin_used+0x70a8>
outsb  %ds:(%esi),(%dx)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x6e(%edi)
jne    8055fc2 <_IO_stdin_used+0x70be>
bound  %esp,0x72(%ebp)
pop    %edi
je     8055fd2 <_IO_stdin_used+0x70ce>
outsb  %gs:(%esi),(%dx)
je     8055fd8 <_IO_stdin_used+0x70d4>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x6e(%edi)
jne    8055fd9 <_IO_stdin_used+0x70d5>
bound  %esp,0x72(%ebp)
pop    %edi
je     8055fda <_IO_stdin_used+0x70d6>
imul   $0x74650079,0x74(%edx),%esi
push   $0x69706f69
arpl   %bx,0x6e(%edi)
jne    8055ff0 <_IO_stdin_used+0x70ec>
bound  %esp,0x72(%ebp)
pop    %edi
outsw  %ds:(%esi),(%dx)
jb     8055fff <_IO_stdin_used+0x70fb>
jns    8055f8d <_IO_stdin_used+0x7089>
gs
je     8055ff8 <_IO_stdin_used+0x70f4>
imul   $0x6e5f6369,0x70(%edi),%ebp
jne    8056006 <_IO_stdin_used+0x7102>
bound  %esp,0x72(%ebp)
pop    %edi
imul   $0x79,0x74(%esi),%sp
gs
je     805600e <_IO_stdin_used+0x710a>
imul   $0x6e5f6369,0x70(%edi),%ebp
jne    805601c <_IO_stdin_used+0x7118>
bound  %esp,0x72(%ebp)
pop    %edi
jae    805601e <_IO_stdin_used+0x711a>
js     805602b <_IO_stdin_used+0x7127>
jns    8055fb9 <_IO_stdin_used+0x70b5>
gs
je     8056024 <_IO_stdin_used+0x7120>
imul   $0x6e5f6369,0x70(%edi),%ebp
jne    8056032 <_IO_stdin_used+0x712e>
bound  %esp,0x72(%ebp)
pop    %edi
jae    8056030 <_IO_stdin_used+0x712c>
jbe    8056032 <_IO_stdin_used+0x712e>
outsb  %ds:(%esi),(%dx)
je     8056049 <_IO_stdin_used+0x7145>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x6e(%edi)
jne    805604a <_IO_stdin_used+0x7146>
bound  %esp,0x72(%ebp)
pop    %edi
imul   $0x65007974,%gs:0x68(%edi),%esp
je     8056053 <_IO_stdin_used+0x714f>
imul   $0x6e5f6369,0x70(%edi),%ebp
jne    8056061 <_IO_stdin_used+0x715d>
bound  %esp,0x72(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
imul   $0x65007974,0x65(%esi),%ebp
je     805606a <_IO_stdin_used+0x7166>
imul   $0x6e5f6369,0x70(%edi),%ebp
jne    8056078 <_IO_stdin_used+0x7174>
bound  %esp,0x72(%ebp)
pop    %edi
push   $0x72646e75
gs add %ah,%fs:%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x6e(%edi)
jne    8056090 <_IO_stdin_used+0x718c>
bound  %esp,0x72(%ebp)
pop    %edi
je     805608e <_IO_stdin_used+0x718a>
outsb  %ds:(%esi),(%dx)
pop    %edi
je     8056095 <_IO_stdin_used+0x7191>
outsl  %ds:(%esi),(%dx)
jne    80560a3 <_IO_stdin_used+0x719f>
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x73(%edi)
je     80560aa <_IO_stdin_used+0x71a6>
outsl  %ds:(%esi),(%dx)
imul   $0x67,0x0(%ebp),%esp
jae    80560b3 <_IO_stdin_used+0x71af>
jb     80560b0 <_IO_stdin_used+0x71ac>
imul   $0x47,0x0(%ebp),%esp
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%edi)
popa
jb     80560bf <_IO_stdin_used+0x71bb>
outsb  %ds:(%esi),(%dx)
add    %cl,0x63(%ebx)
popa
jb     80560c6 <_IO_stdin_used+0x71c2>
outsb  %ds:(%esi),(%dx)
add    %ch,0x63(%ebx)
popa
jb     80560cd <_IO_stdin_used+0x71c9>
outsb  %ds:(%esi),(%dx)
add    %al,0x5a(%ebp)
dec    %eax
add    %ah,0x7a(%ebp)
push   $0x485a4500
arpl   %sp,0x72(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x7a(%ebp)
push   $0x6f726163
outsb  %ds:(%esi),(%dx)
add    %al,0x31(%esi)
add    %al,0x32(%esi)
add    %al,0x33(%esi)
add    %al,0x34(%esi)
add    %al,0x35(%esi)
add    %al,0x36(%esi)
add    %al,0x37(%esi)
add    %al,0x38(%esi)
add    %al,0x39(%esi)
add    %al,0x31(%esi)
xor    %al,(%eax)
inc    %esi
xor    %esi,(%ecx)
add    %al,0x31(%esi)
xor    (%eax),%al
inc    %esi
xor    %esi,(%ebx)
add    %al,0x31(%esi)
xor    $0x0,%al
inc    %esi
xor    %esi,0x36314600
add    %al,0x31(%esi)
aaa
add    %al,0x31(%esi)
cmp    %al,(%eax)
inc    %esi
xor    %edi,(%ecx)
add    %al,0x32(%esi)
xor    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jae    805612a <_IO_stdin_used+0x7226>
jb     805613b <_IO_stdin_used+0x7237>
add    %dl,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8056133 <_IO_stdin_used+0x722f>
add    %cl,0x61(%ebp)
arpl   %si,0x6f(%edx)
add    %cl,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     80560da <_IO_stdin_used+0x71d6>
inc    %esp
outsl  %ds:(%esi),(%dx)
add    %dl,0x61(%eax)
jne    8056154 <_IO_stdin_used+0x7250>
add    %al,%gs:0x32(%esi)
xor    %eax,(%eax)
inc    %esi
xor    (%edx),%dh
add    %al,0x32(%esi)
xor    (%eax),%eax
inc    %esi
xor    (%eax,%eax,1),%dh
inc    %esi
xor    0x36324600,%dh
add    %al,0x32(%esi)
aaa
add    %al,0x32(%esi)
cmp    %al,(%eax)
inc    %esi
xor    (%ecx),%bh
add    %al,0x33(%esi)
xor    %al,(%eax)
inc    %esi
xor    (%ecx),%esi
add    %al,0x33(%esi)
xor    (%eax),%al
inc    %esi
xor    (%ebx),%esi
add    %al,0x33(%esi)
xor    $0x0,%al
inc    %esi
xor    0x36334600,%esi
add    %al,0x33(%esi)
aaa
add    %al,0x33(%esi)
cmp    %al,(%eax)
inc    %esi
xor    (%ecx),%edi
add    %al,0x34(%esi)
xor    %al,(%eax)
inc    %esi
xor    $0x31,%al
add    %al,0x34(%esi)
xor    (%eax),%al
inc    %esi
xor    $0x33,%al
add    %al,0x34(%esi)
xor    $0x0,%al
inc    %esi
xor    $0x35,%al
add    %al,0x34(%esi)
add    %al,%ss:0x34(%esi)
aaa
add    %al,0x34(%esi)
cmp    %al,(%eax)
inc    %esi
xor    $0x39,%al
add    %al,0x35(%esi)
xor    %al,(%eax)
inc    %esi
xor    $0x35460031,%eax
xor    (%eax),%al
inc    %esi
xor    $0x35460033,%eax
xor    $0x0,%al
inc    %esi
xor    $0x35460035,%eax
add    %al,%ss:0x35(%esi)
aaa
add    %al,0x35(%esi)
cmp    %al,(%eax)
inc    %esi
xor    $0x36460039,%eax
xor    %al,(%eax)
inc    %esi
xor    %eax,%ss:(%eax)
inc    %esi
xor    %ss:(%eax),%al
inc    %esi
xor    %ss:(%eax),%eax
inc    %esi
ss
xor    $0x0,%al
inc    %esi
ss
xor    $0x36364600,%eax
add    %al,0x36(%esi)
aaa
add    %al,0x36(%esi)
cmp    %al,(%eax)
inc    %esi
cmp    %eax,%ss:(%eax)
inc    %esi
aaa
xor    %al,(%eax)
inc    %esi
aaa
xor    %eax,(%eax)
inc    %esi
aaa
xor    (%eax),%al
inc    %esi
aaa
xor    (%eax),%eax
inc    %esi
aaa
xor    $0x0,%al
inc    %esi
aaa
xor    $0x36374600,%eax
add    %al,0x37(%esi)
aaa
add    %al,0x37(%esi)
cmp    %al,(%eax)
inc    %esi
aaa
cmp    %eax,(%eax)
inc    %esi
cmp    %dh,(%eax)
add    %al,0x38(%esi)
xor    %eax,(%eax)
inc    %esi
cmp    %dh,(%edx)
add    %al,0x38(%esi)
xor    (%eax),%eax
inc    %esi
cmp    %dh,(%eax,%eax,1)
inc    %esi
cmp    %dh,0x36384600
add    %al,0x38(%esi)
aaa
add    %al,0x38(%esi)
cmp    %al,(%eax)
inc    %esi
cmp    %bh,(%ecx)
add    %al,0x39(%esi)
xor    %al,(%eax)
inc    %esi
cmp    %esi,(%ecx)
add    %al,0x39(%esi)
xor    (%eax),%al
inc    %esi
cmp    %esi,(%ebx)
add    %al,0x39(%esi)
xor    $0x0,%al
inc    %esi
cmp    %esi,0x36394600
add    %al,0x39(%esi)
aaa
add    %al,0x39(%esi)
cmp    %al,(%eax)
inc    %esi
cmp    %edi,(%ecx)
add    %al,0x31(%esi)
xor    %dh,(%eax)
add    %al,0x31(%esi)
xor    %dh,(%ecx)
add    %al,0x31(%esi)
xor    %dh,(%edx)
add    %al,0x31(%esi)
xor    %dh,(%ebx)
add    %al,0x31(%esi)
xor    %dh,(%eax,%eax,1)
inc    %esi
xor    %esi,(%eax)
xor    $0x30314600,%eax
add    %al,%ss:0x31(%esi)
xor    %dh,(%edi)
add    %al,0x31(%esi)
xor    %bh,(%eax)
add    %al,0x31(%esi)
xor    %bh,(%ecx)
add    %al,0x31(%esi)
xor    %esi,(%eax)
add    %al,0x31(%esi)
xor    %esi,(%ecx)
add    %al,0x31(%esi)
xor    %esi,(%edx)
add    %al,0x31(%esi)
xor    %esi,(%ebx)
add    %al,0x31(%esi)
xor    %esi,(%eax,%eax,1)
inc    %esi
xor    %esi,(%ecx)
xor    $0x31314600,%eax
add    %al,%ss:0x31(%esi)
xor    %esi,(%edi)
add    %al,0x31(%esi)
xor    %edi,(%eax)
add    %al,0x31(%esi)
xor    %edi,(%ecx)
add    %al,0x31(%esi)
xor    (%eax),%dh
add    %al,0x31(%esi)
xor    (%ecx),%dh
add    %al,0x31(%esi)
xor    (%edx),%dh
add    %al,0x31(%esi)
xor    (%ebx),%dh
add    %al,0x31(%esi)
xor    (%eax,%eax,1),%dh
inc    %esi
xor    %esi,(%edx)
xor    $0x32314600,%eax
add    %al,%ss:0x31(%esi)
xor    (%edi),%dh
add    %al,0x31(%esi)
xor    (%eax),%bh
add    %al,0x31(%esi)
xor    (%ecx),%bh
add    %al,0x31(%esi)
xor    (%eax),%esi
add    %al,0x31(%esi)
xor    (%ecx),%esi
add    %al,0x31(%esi)
xor    (%edx),%esi
add    %al,0x31(%esi)
xor    (%ebx),%esi
add    %al,0x31(%esi)
xor    (%eax,%eax,1),%esi
inc    %esi
xor    %esi,(%ebx)
xor    $0x33314600,%eax
add    %al,%ss:0x31(%esi)
xor    (%edi),%esi
add    %al,0x31(%esi)
xor    (%eax),%edi
add    %al,0x31(%esi)
xor    (%ecx),%edi
add    %al,0x31(%esi)
xor    $0x30,%al
add    %al,0x31(%esi)
xor    $0x31,%al
add    %al,0x31(%esi)
xor    $0x32,%al
add    %al,0x31(%esi)
xor    $0x33,%al
add    %al,0x31(%esi)
xor    $0x34,%al
add    %al,0x31(%esi)
xor    $0x35,%al
add    %al,0x31(%esi)
xor    $0x36,%al
add    %al,0x31(%esi)
xor    $0x37,%al
add    %al,0x31(%esi)
xor    $0x38,%al
add    %al,0x31(%esi)
xor    $0x39,%al
add    %al,0x31(%esi)
xor    $0x31460030,%eax
xor    $0x31460031,%eax
xor    $0x31460032,%eax
xor    $0x31460033,%eax
xor    $0x31460034,%eax
xor    $0x31460035,%eax
xor    $0x31460036,%eax
xor    $0x31460037,%eax
xor    $0x31460038,%eax
xor    $0x31460039,%eax
xor    %al,%ss:(%eax)
inc    %esi
xor    %esi,(%esi)
xor    %eax,(%eax)
inc    %esi
xor    %esi,(%esi)
xor    (%eax),%al
inc    %esi
xor    %esi,(%esi)
xor    (%eax),%eax
inc    %esi
xor    %esi,(%esi)
xor    $0x0,%al
inc    %esi
xor    %esi,(%esi)
xor    $0x36314600,%eax
add    %al,%ss:0x31(%esi)
ss
aaa
add    %al,0x31(%esi)
cmp    %al,%ss:(%eax)
inc    %esi
xor    %esi,(%esi)
cmp    %eax,(%eax)
inc    %esi
xor    %esi,(%edi)
xor    %al,(%eax)
inc    %esi
xor    %esi,(%edi)
xor    %eax,(%eax)
inc    %esi
xor    %esi,(%edi)
xor    (%eax),%al
inc    %esi
xor    %esi,(%edi)
xor    (%eax),%eax
inc    %esi
xor    %esi,(%edi)
xor    $0x0,%al
inc    %esi
xor    %esi,(%edi)
xor    $0x37314600,%eax
add    %al,%ss:0x31(%esi)
aaa
aaa
add    %al,0x31(%esi)
aaa
cmp    %al,(%eax)
inc    %esi
xor    %esi,(%edi)
cmp    %eax,(%eax)
inc    %esi
xor    %edi,(%eax)
xor    %al,(%eax)
inc    %esi
xor    %edi,(%eax)
xor    %eax,(%eax)
inc    %esi
xor    %edi,(%eax)
xor    (%eax),%al
inc    %esi
xor    %edi,(%eax)
xor    (%eax),%eax
inc    %esi
xor    %edi,(%eax)
xor    $0x0,%al
inc    %esi
xor    %edi,(%eax)
xor    $0x38314600,%eax
add    %al,%ss:0x31(%esi)
cmp    %dh,(%edi)
add    %al,0x31(%esi)
cmp    %bh,(%eax)
add    %al,0x31(%esi)
cmp    %bh,(%ecx)
add    %al,0x31(%esi)
cmp    %esi,(%eax)
add    %al,0x31(%esi)
cmp    %esi,(%ecx)
add    %al,0x31(%esi)
cmp    %esi,(%edx)
add    %al,0x31(%esi)
cmp    %esi,(%ebx)
add    %al,0x31(%esi)
cmp    %esi,(%eax,%eax,1)
inc    %esi
xor    %edi,(%ecx)
xor    $0x39314600,%eax
add    %al,%ss:0x31(%esi)
cmp    %esi,(%edi)
add    %al,0x31(%esi)
cmp    %edi,(%eax)
add    %al,0x31(%esi)
cmp    %edi,(%ecx)
add    %al,0x32(%esi)
xor    %dh,(%eax)
add    %al,0x32(%esi)
xor    %dh,(%ecx)
add    %al,0x32(%esi)
xor    %dh,(%edx)
add    %al,0x32(%esi)
xor    %dh,(%ebx)
add    %al,0x32(%esi)
xor    %dh,(%eax,%eax,1)
inc    %esi
xor    (%eax),%dh
xor    $0x30324600,%eax
add    %al,%ss:0x32(%esi)
xor    %dh,(%edi)
add    %al,0x32(%esi)
xor    %bh,(%eax)
add    %al,0x32(%esi)
xor    %bh,(%ecx)
add    %al,0x32(%esi)
xor    %esi,(%eax)
add    %al,0x32(%esi)
xor    %esi,(%ecx)
add    %al,0x32(%esi)
xor    %esi,(%edx)
add    %al,0x32(%esi)
xor    %esi,(%ebx)
add    %al,0x32(%esi)
xor    %esi,(%eax,%eax,1)
inc    %esi
xor    (%ecx),%dh
xor    $0x31324600,%eax
add    %al,%ss:0x32(%esi)
xor    %esi,(%edi)
add    %al,0x32(%esi)
xor    %edi,(%eax)
add    %al,0x32(%esi)
xor    %edi,(%ecx)
add    %al,0x32(%esi)
xor    (%eax),%dh
add    %al,0x32(%esi)
xor    (%ecx),%dh
add    %al,0x32(%esi)
xor    (%edx),%dh
add    %al,0x32(%esi)
xor    (%ebx),%dh
add    %al,0x32(%esi)
xor    (%eax,%eax,1),%dh
inc    %esi
xor    (%edx),%dh
xor    $0x32324600,%eax
add    %al,%ss:0x32(%esi)
xor    (%edi),%dh
add    %al,0x32(%esi)
xor    (%eax),%bh
add    %al,0x32(%esi)
xor    (%ecx),%bh
add    %al,0x32(%esi)
xor    (%eax),%esi
add    %al,0x32(%esi)
xor    (%ecx),%esi
add    %al,0x32(%esi)
xor    (%edx),%esi
add    %al,0x32(%esi)
xor    (%ebx),%esi
add    %al,0x32(%esi)
xor    (%eax,%eax,1),%esi
inc    %esi
xor    (%ebx),%dh
xor    $0x33324600,%eax
add    %al,%ss:0x32(%esi)
xor    (%edi),%esi
add    %al,0x32(%esi)
xor    (%eax),%edi
add    %al,0x32(%esi)
xor    (%ecx),%edi
add    %al,0x32(%esi)
xor    $0x30,%al
add    %al,0x32(%esi)
xor    $0x31,%al
add    %al,0x32(%esi)
xor    $0x32,%al
add    %al,0x32(%esi)
xor    $0x33,%al
add    %al,0x32(%esi)
xor    $0x34,%al
add    %al,0x32(%esi)
xor    $0x35,%al
add    %al,0x32(%esi)
xor    $0x36,%al
add    %dl,0x6f(%esi)
imul   $0x6c6f626d,0x79(%ebx,%edx,2),%esp
add    %dl,0x65(%edx)
je     8056582 <_IO_stdin_used+0x767e>
jb     805657d <_IO_stdin_used+0x7679>
add    %dl,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8056574 <_IO_stdin_used+0x7670>
push   %edx
imul   $0x737265,%gs:0x74(%bp,%di),%esi
00
push   %ebx
push   $0x4d5f776f
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80565a3 <_IO_stdin_used+0x769f>
add    %dl,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805658f <_IO_stdin_used+0x768b>
push   %ebx
je     8056594 <_IO_stdin_used+0x7690>
je     805659a <_IO_stdin_used+0x7696>
add    %al,0x72(%edx)
gs
popa
imul   $0x4c,(%eax),%eax
popa
jae    80565b4 <_IO_stdin_used+0x76b0>
pop    %edi
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80565b5 <_IO_stdin_used+0x76b1>
insb   (%dx),%es:(%edi)
add    %al,%gs:0x61(%ebx)
jo     80565c0 <_IO_stdin_used+0x76bc>
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %ebx
arpl   %si,0x6f(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %ebx
arpl   %si,0x6f(%edx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     80565e1 <_IO_stdin_used+0x76dd>
popa
jb     80565d1 <_IO_stdin_used+0x76cd>
add    %dl,0x63(%ebx)
jb     80565e1 <_IO_stdin_used+0x76dd>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
inc    %edx
popa
arpl   %bp,0x77(%ebx)
popa
jb     80565e1 <_IO_stdin_used+0x76dd>
add    %al,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     8056583 <_IO_stdin_used+0x767f>
inc    %ebx
popa
jo     80565fa <_IO_stdin_used+0x76f6>
pop    %edi
dec    %edi
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     80565ff <_IO_stdin_used+0x76fb>
jae    80565f7 <_IO_stdin_used+0x76f3>
add    %dl,0x41(%ebx)
dec    %ebx
add    %al,0x63(%ebp,%eiz,2)
jb     80565fb <_IO_stdin_used+0x76f7>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8056610 <_IO_stdin_used+0x770c>
insb   (%dx),%es:(%edi)
add    %cl,%gs:0x6e(%ecx)
arpl   %si,0x5f(%edx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805661d <_IO_stdin_used+0x7719>
insb   (%dx),%es:(%edi)
add    %al,%gs:0x61(%edx)
jb     805661a <_IO_stdin_used+0x7716>
pop    %edi
dec    %esi
jne    8056626 <_IO_stdin_used+0x7722>
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
dec    %ebx
push   %eax
pop    %edi
xor    %al,(%eax)
dec    %ebx
push   %eax
pop    %edi
xor    %eax,(%eax)
dec    %ebx
push   %eax
pop    %edi
xor    (%eax),%al
dec    %ebx
push   %eax
pop    %edi
xor    (%eax),%eax
dec    %ebx
push   %eax
pop    %edi
xor    $0x0,%al
dec    %ebx
push   %eax
pop    %edi
xor    $0x5f504b00,%eax
add    %cl,%ss:0x50(%ebx)
pop    %edi
aaa
add    %cl,0x50(%ebx)
pop    %edi
cmp    %al,(%eax)
dec    %ebx
push   %eax
pop    %edi
cmp    %eax,(%eax)
dec    %ebx
push   %eax
pop    %edi
inc    %ecx
fs add %cl,%fs:0x50(%ebx)
pop    %edi
push   %ebx
jne    8056660 <_IO_stdin_used+0x775c>
je     8056672 <_IO_stdin_used+0x776e>
popa
arpl   %si,0x4b(%eax,%eax,1)
push   %eax
pop    %edi
dec    %ebp
jne    8056676 <_IO_stdin_used+0x7772>
je     8056675 <_IO_stdin_used+0x7771>
jo     805667a <_IO_stdin_used+0x7776>
jns    8056610 <_IO_stdin_used+0x770c>
dec    %ebx
push   %eax
pop    %edi
inc    %esp
imul   $0x4b006564,0x69(%esi),%esi
push   %eax
pop    %edi
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     8056686 <_IO_stdin_used+0x7782>
jb     8056623 <_IO_stdin_used+0x771f>
dec    %ebx
push   %eax
pop    %edi
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
add    %cl,0x50(%ebx)
pop    %edi
push   %eax
gs
jb     805669c <_IO_stdin_used+0x7798>
outsl  %ds:(%esi),(%dx)
add    %cl,%fs:0x50(%ebx)
pop    %edi
dec    %ebp
imul   $0x73756c,0x50(%esi),%ebp
fs
gs
popa
fs
pop    %edi
addr16 jb 80566aa <_IO_stdin_used+0x77a6>
jbe    80566b0 <_IO_stdin_used+0x77ac>
add    %ah,0x61(%ebp,%eiz,2)
fs
pop    %edi
popa
arpl   %si,0x74(%ebp)
add    %ah,%gs:0x61(%ebp,%eiz,2)
fs
pop    %edi
imul   $0x69736572,%fs:0x65(%ecx),%esp
jae    8056666 <_IO_stdin_used+0x7762>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80566da <_IO_stdin_used+0x77d6>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %eax,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80566e4 <_IO_stdin_used+0x77e0>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80566ee <_IO_stdin_used+0x77ea>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax),%eax
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80566f8 <_IO_stdin_used+0x77f4>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x0,%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8056702 <_IO_stdin_used+0x77fe>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6e6f4300,%eax
jae    805670c <_IO_stdin_used+0x7808>
insb   (%dx),%es:(%edi)
gs
pop    %edi
add    %al,%ss:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056716 <_IO_stdin_used+0x7812>
insb   (%dx),%es:(%edi)
gs
pop    %edi
aaa
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056720 <_IO_stdin_used+0x781c>
insb   (%dx),%es:(%edi)
gs
pop    %edi
cmp    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805672a <_IO_stdin_used+0x7826>
insb   (%dx),%es:(%edi)
gs
pop    %edi
cmp    %eax,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8056734 <_IO_stdin_used+0x7830>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%eax)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805673f <_IO_stdin_used+0x783b>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%ecx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805674a <_IO_stdin_used+0x7846>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%edx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056755 <_IO_stdin_used+0x7851>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%ebx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056760 <_IO_stdin_used+0x785c>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%eax,%eax,1)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805676b <_IO_stdin_used+0x7867>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,0x6e6f4300
jae    8056776 <_IO_stdin_used+0x7872>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%esi)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056781 <_IO_stdin_used+0x787d>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %esi,(%edi)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805678c <_IO_stdin_used+0x7888>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %edi,(%eax)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056797 <_IO_stdin_used+0x7893>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %edi,(%ecx)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567a2 <_IO_stdin_used+0x789e>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax),%dh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567ad <_IO_stdin_used+0x78a9>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%ecx),%dh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567b8 <_IO_stdin_used+0x78b4>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%edx),%dh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567c3 <_IO_stdin_used+0x78bf>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%ebx),%dh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567ce <_IO_stdin_used+0x78ca>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax,%eax,1),%dh
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80567d9 <_IO_stdin_used+0x78d5>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    0x6e6f4300,%dh
jae    80567e4 <_IO_stdin_used+0x78e0>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%esi),%dh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567ef <_IO_stdin_used+0x78eb>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%edi),%dh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80567fa <_IO_stdin_used+0x78f6>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax),%bh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056805 <_IO_stdin_used+0x7901>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%ecx),%bh
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056810 <_IO_stdin_used+0x790c>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax),%esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805681b <_IO_stdin_used+0x7917>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%ecx),%esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056826 <_IO_stdin_used+0x7922>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%edx),%esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056831 <_IO_stdin_used+0x792d>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%ebx),%esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805683c <_IO_stdin_used+0x7938>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax,%eax,1),%esi
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8056847 <_IO_stdin_used+0x7943>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    0x6e6f4300,%esi
jae    8056852 <_IO_stdin_used+0x794e>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%esi),%esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805685d <_IO_stdin_used+0x7959>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%edi),%esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056868 <_IO_stdin_used+0x7964>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%eax),%edi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056873 <_IO_stdin_used+0x796f>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    (%ecx),%edi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805687e <_IO_stdin_used+0x797a>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x30,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056889 <_IO_stdin_used+0x7985>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x31,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8056894 <_IO_stdin_used+0x7990>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x32,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805689f <_IO_stdin_used+0x799b>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x33,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568aa <_IO_stdin_used+0x79a6>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x34,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568b5 <_IO_stdin_used+0x79b1>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x35,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568c0 <_IO_stdin_used+0x79bc>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x36,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568cb <_IO_stdin_used+0x79c7>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x37,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568d6 <_IO_stdin_used+0x79d2>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x38,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568e1 <_IO_stdin_used+0x79dd>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x39,%al
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    80568ec <_IO_stdin_used+0x79e8>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430030,%eax
outsb  %ds:(%esi),(%dx)
jae    80568f7 <_IO_stdin_used+0x79f3>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430031,%eax
outsb  %ds:(%esi),(%dx)
jae    8056902 <_IO_stdin_used+0x79fe>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430032,%eax
outsb  %ds:(%esi),(%dx)
jae    805690d <_IO_stdin_used+0x7a09>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430033,%eax
outsb  %ds:(%esi),(%dx)
jae    8056918 <_IO_stdin_used+0x7a14>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430034,%eax
outsb  %ds:(%esi),(%dx)
jae    8056923 <_IO_stdin_used+0x7a1f>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430035,%eax
outsb  %ds:(%esi),(%dx)
jae    805692e <_IO_stdin_used+0x7a2a>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430036,%eax
outsb  %ds:(%esi),(%dx)
jae    8056939 <_IO_stdin_used+0x7a35>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430037,%eax
outsb  %ds:(%esi),(%dx)
jae    8056944 <_IO_stdin_used+0x7a40>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430038,%eax
outsb  %ds:(%esi),(%dx)
jae    805694f <_IO_stdin_used+0x7a4b>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    $0x6f430039,%eax
outsb  %ds:(%esi),(%dx)
jae    805695a <_IO_stdin_used+0x7a56>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %al,%ss:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8056965 <_IO_stdin_used+0x7a61>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %eax,%ss:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8056970 <_IO_stdin_used+0x7a6c>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %ss:(%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805697b <_IO_stdin_used+0x7a77>
insb   (%dx),%es:(%edi)
gs
pop    %edi
xor    %ss:(%eax),%eax
dec    %esp
gs
data16
je     8056917 <_IO_stdin_used+0x7a13>
push   %edx
imul   $0x73410074,0x68(%edi),%esp
arpl   %bp,0x69(%ecx)
pop    %edi
xor    %al,(%eax)
inc    %ecx
jae    805698b <_IO_stdin_used+0x7a87>
imul   $0x73410031,0x5f(%ecx),%ebp
arpl   %bp,0x69(%ecx)
pop    %edi
xor    (%eax),%al
inc    %ecx
jae    805699b <_IO_stdin_used+0x7a97>
imul   $0x73410033,0x5f(%ecx),%ebp
arpl   %bp,0x69(%ecx)
pop    %edi
xor    $0x0,%al
inc    %ecx
jae    80569ab <_IO_stdin_used+0x7aa7>
imul   $0x73410035,0x5f(%ecx),%ebp
arpl   %bp,0x69(%ecx)
pop    %edi
add    %al,%ss:0x73(%ecx)
arpl   %bp,0x69(%ecx)
pop    %edi
aaa
add    %al,0x73(%ecx)
arpl   %bp,0x69(%ecx)
pop    %edi
cmp    %al,(%eax)
inc    %ecx
jae    80569cb <_IO_stdin_used+0x7ac7>
imul   $0x65480039,0x5f(%ecx),%ebp
js     80569d0 <_IO_stdin_used+0x7acc>
xor    %al,(%eax)
dec    %eax
gs
js     80569d6 <_IO_stdin_used+0x7ad2>
xor    %eax,(%eax)
dec    %eax
gs
js     80569dc <_IO_stdin_used+0x7ad8>
xor    (%eax),%al
dec    %eax
gs
js     80569e2 <_IO_stdin_used+0x7ade>
xor    (%eax),%eax
dec    %eax
gs
js     80569e8 <_IO_stdin_used+0x7ae4>
xor    $0x0,%al
dec    %eax
gs
js     80569ee <_IO_stdin_used+0x7aea>
xor    $0x78654800,%eax
pop    %edi
add    %cl,%ss:0x65(%eax)
js     80569fa <_IO_stdin_used+0x7af6>
aaa
add    %cl,0x65(%eax)
js     8056a00 <_IO_stdin_used+0x7afc>
cmp    %al,(%eax)
dec    %eax
gs
js     8056a06 <_IO_stdin_used+0x7b02>
cmp    %eax,(%eax)
dec    %eax
gs
js     8056a0c <_IO_stdin_used+0x7b08>
inc    %ecx
add    %cl,0x65(%eax)
js     8056a12 <_IO_stdin_used+0x7b0e>
inc    %edx
add    %cl,0x65(%eax)
js     8056a18 <_IO_stdin_used+0x7b14>
inc    %ebx
add    %cl,0x65(%eax)
js     8056a1e <_IO_stdin_used+0x7b1a>
inc    %esp
add    %cl,0x65(%eax)
js     8056a24 <_IO_stdin_used+0x7b20>
inc    %ebp
add    %cl,0x65(%eax)
js     8056a2a <_IO_stdin_used+0x7b26>
inc    %esi
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8056a44 <_IO_stdin_used+0x7b40>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %ebx
push   $0x4c746669
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %ebx
push   $0x52746669
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %ebx
je     8056a67 <_IO_stdin_used+0x7b63>
insb   (%dx),%es:(%edi)
dec    %esp
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %ebx
je     8056a72 <_IO_stdin_used+0x7b6e>
insb   (%dx),%es:(%edi)
push   %edx
pop    %edi
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
inc    %ebx
popa
jo     8056a7f <_IO_stdin_used+0x7b7b>
push   %ebx
push   $0x5f746669
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %ebx
push   %ebx
push   $0x746669
push   %ebx
inc    %ecx
insb   (%dx),%es:(%edi)
je     8056a6a <_IO_stdin_used+0x7b66>
jb     8056a25 <_IO_stdin_used+0x7b21>
push   %ebx
inc    %ecx
insb   (%dx),%es:(%edi)
je     8056a2a <_IO_stdin_used+0x7b26>
push   %ebx
push   %ebx
push   $0x4c746669
add    %dl,0x53(%ebx)
push   $0x52746669
add    %dl,0x43(%ebx)
je     8056ab0 <_IO_stdin_used+0x7bac>
insb   (%dx),%es:(%edi)
dec    %esp
add    %dl,0x43(%ebx)
je     8056ab7 <_IO_stdin_used+0x7bb3>
insb   (%dx),%es:(%edi)
push   %edx
add    %dl,0x43(%ebx)
popa
jo     8056ac0 <_IO_stdin_used+0x7bbc>
push   %ebx
push   $0x746669
inc    %edx
jb     8056ac2 <_IO_stdin_used+0x7bbe>
pop    %edi
bound  %ebp,0x6e(%ecx,%eiz,2)
imul   $0x42,(%eax),%eax
jb     8056acc <_IO_stdin_used+0x7bc8>
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056a96 <_IO_stdin_used+0x7b92>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056aa0 <_IO_stdin_used+0x7b9c>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056aaa <_IO_stdin_used+0x7ba6>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056ab4 <_IO_stdin_used+0x7bb0>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056abe <_IO_stdin_used+0x7bba>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056ac8 <_IO_stdin_used+0x7bc4>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056ad2 <_IO_stdin_used+0x7bce>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056adc <_IO_stdin_used+0x7bd8>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056ae6 <_IO_stdin_used+0x7be2>
add    %al,0x72(%edx)
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %fs:(%esi),(%dx)
je     8056ae7 <_IO_stdin_used+0x7be3>
xor    %al,(%eax)
jne    8056b28 <_IO_stdin_used+0x7c24>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
popa
jb     8056b38 <_IO_stdin_used+0x7c34>
gs
je     8056ae8 <_IO_stdin_used+0x7be4>
and    $0x202d2073,%eax
imul   $0x6e69726f,0x6e(%edi),%esp
and    %ah,0x68(%bp,%di)
popa
jb     8056b4e <_IO_stdin_used+0x7c4a>
gs
je     8056afe <_IO_stdin_used+0x7bfa>
jb     8056b45 <_IO_stdin_used+0x7c41>
jno    8056b57 <_IO_stdin_used+0x7c53>
gs
jae    8056b59 <_IO_stdin_used+0x7c55>
or     (%eax),%al
add    %ah,0x69(%edx)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8056b64 <_IO_stdin_used+0x7c60>
jae    8056b64 <_IO_stdin_used+0x7c60>
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056b6b <_IO_stdin_used+0x7c67>
je     8056b65 <_IO_stdin_used+0x7c61>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056b7e <_IO_stdin_used+0x7c7a>
gs
jb     8056b6c <_IO_stdin_used+0x7c68>
imul   $0x726b7500,(%eax),%eax
popa
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056b8f <_IO_stdin_used+0x7c8b>
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056b90 <_IO_stdin_used+0x7c8c>
je     8056b8a <_IO_stdin_used+0x7c86>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056ba3 <_IO_stdin_used+0x7c9f>
gs
jb     8056b91 <_IO_stdin_used+0x7c8d>
imul   $0x69727963,(%eax),%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x69706163,0x5f(%ebx),%esp
je     8056ba4 <_IO_stdin_used+0x7ca0>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056bbd <_IO_stdin_used+0x7cb9>
gs
jb     8056bab <_IO_stdin_used+0x7ca7>
jb     8056bb3 <_IO_stdin_used+0x7caf>
jbe    8056bb5 <_IO_stdin_used+0x7cb1>
jb     8056bc5 <_IO_stdin_used+0x7cc1>
gs
fs
pop    %edi
add    %al,%gs:(%eax)
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056bce <_IO_stdin_used+0x7cca>
je     8056bc8 <_IO_stdin_used+0x7cc4>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056be1 <_IO_stdin_used+0x7cdd>
gs
jb     8056bcf <_IO_stdin_used+0x7ccb>
jae    8056bda <_IO_stdin_used+0x7cd6>
outsl  %ds:(%esi),(%dx)
jb     8056be9 <_IO_stdin_used+0x7ce5>
pop    %edi
imul   $0x63000000,0x0(%ecx),%ebp
jns    8056bf1 <_IO_stdin_used+0x7ced>
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056bf2 <_IO_stdin_used+0x7cee>
je     8056bec <_IO_stdin_used+0x7ce8>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056c05 <_IO_stdin_used+0x7d01>
gs
jb     8056bf3 <_IO_stdin_used+0x7cef>
jae    8056bfe <_IO_stdin_used+0x7cfa>
outsl  %ds:(%esi),(%dx)
jb     8056c0d <_IO_stdin_used+0x7d09>
pop    %edi
imul   $0x6c656962,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jb     8056c18 <_IO_stdin_used+0x7d14>
jae    8056c18 <_IO_stdin_used+0x7d14>
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056c30 <_IO_stdin_used+0x7d2c>
gs
jb     8056c1e <_IO_stdin_used+0x7d1a>
imul   $0x75000000,(%eax),%eax
imul   $0x69,0x61(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056c55 <_IO_stdin_used+0x7d51>
gs
jb     8056c43 <_IO_stdin_used+0x7d3f>
imul   $0x79630000,(%eax),%eax
jb     8056c55 <_IO_stdin_used+0x7d51>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616d73,0x5f(%ebx),%esp
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056c6f <_IO_stdin_used+0x7d6b>
gs
jb     8056c5d <_IO_stdin_used+0x7d59>
jb     8056c65 <_IO_stdin_used+0x7d61>
jbe    8056c67 <_IO_stdin_used+0x7d63>
jb     8056c77 <_IO_stdin_used+0x7d73>
gs
fs
pop    %edi
add    %al,%gs:(%eax)
add    %al,(%eax)
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056c93 <_IO_stdin_used+0x7d8f>
gs
jb     8056c81 <_IO_stdin_used+0x7d7d>
jae    8056c8c <_IO_stdin_used+0x7d88>
outsl  %ds:(%esi),(%dx)
jb     8056c9b <_IO_stdin_used+0x7d97>
pop    %edi
imul   $0x72657300,0x0(%ecx),%ebp
bound  %ebp,0x63(%edi)
jb     8056ca3 <_IO_stdin_used+0x7d9f>
popa
je     8056ca0 <_IO_stdin_used+0x7d9c>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056cb0 <_IO_stdin_used+0x7dac>
je     8056caa <_IO_stdin_used+0x7da6>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056cc3 <_IO_stdin_used+0x7dbf>
gs
jb     8056cb1 <_IO_stdin_used+0x7dad>
fs
push   $0x65
add    %al,(%eax)
add    %ch,0x61(%ebp)
arpl   %sp,0x64(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056cd9 <_IO_stdin_used+0x7dd5>
je     8056cd3 <_IO_stdin_used+0x7dcf>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056cec <_IO_stdin_used+0x7de8>
gs
jb     8056cda <_IO_stdin_used+0x7dd6>
addr16 push $0x65
add    %al,(%eax)
jne    8056ced <_IO_stdin_used+0x7de9>
jb     8056ce5 <_IO_stdin_used+0x7de1>
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056cff <_IO_stdin_used+0x7dfb>
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056d00 <_IO_stdin_used+0x7dfc>
je     8056cfa <_IO_stdin_used+0x7df6>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056d13 <_IO_stdin_used+0x7e0f>
gs
jb     8056d01 <_IO_stdin_used+0x7dfd>
imul   $0x6d000000,0x0(%ebp),%esp
popa
arpl   %sp,0x64(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056d29 <_IO_stdin_used+0x7e25>
je     8056d23 <_IO_stdin_used+0x7e1f>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056d3c <_IO_stdin_used+0x7e38>
gs
jb     8056d2a <_IO_stdin_used+0x7e26>
fs
jp     8056d33 <_IO_stdin_used+0x7e2f>
add    %al,(%eax)
jne    8056d3d <_IO_stdin_used+0x7e39>
jb     8056d35 <_IO_stdin_used+0x7e31>
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056d4f <_IO_stdin_used+0x7e4b>
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056d50 <_IO_stdin_used+0x7e4c>
je     8056d4a <_IO_stdin_used+0x7e46>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056d63 <_IO_stdin_used+0x7e5f>
gs
jb     8056d51 <_IO_stdin_used+0x7e4d>
jns    8056d5d <_IO_stdin_used+0x7e59>
add    %al,(%eax)
add    %al,(%eax)
jae    8056d5f <_IO_stdin_used+0x7e5b>
jb     8056d5e <_IO_stdin_used+0x7e5a>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6f(%edx)
popa
je     8056d6c <_IO_stdin_used+0x7e68>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %di,0x72(%ecx)
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056d7c <_IO_stdin_used+0x7e78>
je     8056d76 <_IO_stdin_used+0x7e72>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056d8f <_IO_stdin_used+0x7e8b>
gs
jb     8056d7d <_IO_stdin_used+0x7e79>
arpl   %bp,0x6a(%eax)
add    %al,%gs:(%eax)
insl   (%dx),%es:(%edi)
popa
arpl   %sp,0x64(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056da5 <_IO_stdin_used+0x7ea1>
je     8056d9f <_IO_stdin_used+0x7e9b>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056db8 <_IO_stdin_used+0x7eb4>
gs
jb     8056da6 <_IO_stdin_used+0x7ea2>
imul   $0x0,0x65(%edx),%ebp
add    %ah,0x69(%edx)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8056dc8 <_IO_stdin_used+0x7ec4>
jae    8056dc8 <_IO_stdin_used+0x7ec4>
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056dcf <_IO_stdin_used+0x7ecb>
je     8056dc9 <_IO_stdin_used+0x7ec5>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056de2 <_IO_stdin_used+0x7ede>
gs
jb     8056dd0 <_IO_stdin_used+0x7ecc>
jae    8056ddb <_IO_stdin_used+0x7ed7>
outsl  %ds:(%esi),(%dx)
jb     8056dea <_IO_stdin_used+0x7ee6>
pop    %edi
jne    8056d79 <_IO_stdin_used+0x7e75>
add    %al,(%eax)
add    %dh,0x65(%ebx)
jb     8056de2 <_IO_stdin_used+0x7ede>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6f(%edx)
popa
je     8056df0 <_IO_stdin_used+0x7eec>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056e11 <_IO_stdin_used+0x7f0d>
gs
jb     8056dff <_IO_stdin_used+0x7efb>
fs
push   $0x65
add    %ch,0x61(%ebp)
arpl   %sp,0x64(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056e36 <_IO_stdin_used+0x7f32>
gs
jb     8056e24 <_IO_stdin_used+0x7f20>
addr16 push $0x65
add    %al,(%eax)
add    %al,(%eax)
jne    8056e39 <_IO_stdin_used+0x7f35>
jb     8056e31 <_IO_stdin_used+0x7f2d>
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056e4b <_IO_stdin_used+0x7f47>
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056e5d <_IO_stdin_used+0x7f59>
gs
jb     8056e4b <_IO_stdin_used+0x7f47>
imul   $0x63616d00,0x0(%ebp),%esp
gs outsl %fs:%gs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056e82 <_IO_stdin_used+0x7f7e>
gs
jb     8056e70 <_IO_stdin_used+0x7f6c>
fs
jp     8056e79 <_IO_stdin_used+0x7f75>
add    %al,(%eax)
add    %al,(%eax)
jne    8056e85 <_IO_stdin_used+0x7f81>
jb     8056e7d <_IO_stdin_used+0x7f79>
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056e97 <_IO_stdin_used+0x7f93>
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056ea9 <_IO_stdin_used+0x7fa5>
gs
jb     8056e97 <_IO_stdin_used+0x7f93>
jns    8056ea3 <_IO_stdin_used+0x7f9f>
add    %al,(%eax)
jae    8056ea3 <_IO_stdin_used+0x7f9f>
jb     8056ea2 <_IO_stdin_used+0x7f9e>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6f(%edx)
popa
je     8056eb0 <_IO_stdin_used+0x7fac>
popa
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %di,0x72(%ecx)
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056ed1 <_IO_stdin_used+0x7fcd>
gs
jb     8056ebf <_IO_stdin_used+0x7fbb>
arpl   %bp,0x6a(%eax)
add    %al,%gs:(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
popa
arpl   %sp,0x64(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056efa <_IO_stdin_used+0x7ff6>
gs
jb     8056ee8 <_IO_stdin_used+0x7fe4>
imul   $0x0,0x65(%edx),%ebp
add    %al,(%eax)
add    %ah,0x69(%edx)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8056f0c <_IO_stdin_used+0x8008>
jae    8056f0c <_IO_stdin_used+0x8008>
imul   $0x7279635f,0x6e(%ecx),%esp
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056f24 <_IO_stdin_used+0x8020>
gs
jb     8056f12 <_IO_stdin_used+0x800e>
jae    8056f1d <_IO_stdin_used+0x8019>
outsl  %ds:(%esi),(%dx)
jb     8056f2c <_IO_stdin_used+0x8028>
pop    %edi
jne    8056ebb <_IO_stdin_used+0x7fb7>
add    %dh,0x6b(%ebp)
jb     8056f21 <_IO_stdin_used+0x801d>
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056f3b <_IO_stdin_used+0x8037>
imul   $0x6d735f63,0x69(%esp,%ebp,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056f4d <_IO_stdin_used+0x8049>
gs
jb     8056f3b <_IO_stdin_used+0x8037>
addr16 push $0x69775f65
je     8056f4c <_IO_stdin_used+0x8048>
pop    %edi
jne    8056f57 <_IO_stdin_used+0x8053>
je     8056f5e <_IO_stdin_used+0x805a>
jb     8056f59 <_IO_stdin_used+0x8055>
add    %dh,0x6b(%ebp)
jb     8056f51 <_IO_stdin_used+0x804d>
imul   $0x635f6e61,0x69(%esi),%ebp
jns    8056f6b <_IO_stdin_used+0x8067>
imul   $0x61635f63,0x69(%esp,%ebp,2),%ebp
jo     8056f6c <_IO_stdin_used+0x8068>
je     8056f66 <_IO_stdin_used+0x8062>
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
gs
je     8056f7f <_IO_stdin_used+0x807b>
gs
jb     8056f6d <_IO_stdin_used+0x8069>
addr16 push $0x69775f65
je     8056f7e <_IO_stdin_used+0x807a>
pop    %edi
jne    8056f89 <_IO_stdin_used+0x8085>
je     8056f90 <_IO_stdin_used+0x808c>
jb     8056f8b <_IO_stdin_used+0x8087>
add    %al,(%eax)
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8056f98 <_IO_stdin_used+0x8094>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8056f9c <_IO_stdin_used+0x8098>
popa
jb     8056fb0 <_IO_stdin_used+0x80ac>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
popa
add    %al,(%eax)
gs
je     8056fab <_IO_stdin_used+0x80a7>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8056fb8 <_IO_stdin_used+0x80b4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8056fbc <_IO_stdin_used+0x80b8>
popa
jb     8056fd0 <_IO_stdin_used+0x80cc>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
jne    8056f5f <_IO_stdin_used+0x805b>
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8056fd8 <_IO_stdin_used+0x80d4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8056fdc <_IO_stdin_used+0x80d8>
popa
jb     8056ff0 <_IO_stdin_used+0x80ec>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x68746500,(%eax),%eax
imul   $0x735f6369,0x70(%edi),%ebp
jns    8056ff8 <_IO_stdin_used+0x80f4>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8056ffc <_IO_stdin_used+0x80f8>
popa
jb     8057010 <_IO_stdin_used+0x810c>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
popa
popa
add    %ah,0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8057018 <_IO_stdin_used+0x8114>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     805701c <_IO_stdin_used+0x8118>
popa
jb     8057030 <_IO_stdin_used+0x812c>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
gs add %ah,%gs:0x74(%ebp)
push   $0x69706f69
arpl   %bx,0x73(%edi)
jns    8057038 <_IO_stdin_used+0x8134>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     805703c <_IO_stdin_used+0x8138>
popa
jb     8057050 <_IO_stdin_used+0x814c>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
add    %al,%gs:(%eax)
gs
je     805704b <_IO_stdin_used+0x8147>
imul   $0x735f6369,0x70(%edi),%ebp
jns    8057058 <_IO_stdin_used+0x8154>
insb   (%dx),%es:(%edi)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     805705c <_IO_stdin_used+0x8158>
popa
jb     8057070 <_IO_stdin_used+0x816c>
outsb  %ds:(%esi),(%dx)
addr16
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,%ds:(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %ah,0x6f203a73
jne    8057083 <_IO_stdin_used+0x817f>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8057092 <_IO_stdin_used+0x818e>
or     (%eax),%al
gs
jb     8057090 <_IO_stdin_used+0x818c>
outsl  %ds:(%esi),(%dx)
jb     8057041 <_IO_stdin_used+0x813d>
gs
js     8057089 <_IO_stdin_used+0x8185>
arpl   %si,0x74(%ebp)
imul   $0x73252020,0x67(%esi),%ebp
or     (%eax),%al
and    $0x73252f73,%eax
add    %ah,0x25732573
jae    805703d <_IO_stdin_used+0x8139>
add    %ch,%cs:(%esi)
addr16 jp 8057043 <_IO_stdin_used+0x813f>
addr16 jp 80570af <_IO_stdin_used+0x81ab>
jo     8057068 <_IO_stdin_used+0x8164>
sub    $0x632d2064,%eax
add    %ch,(%esi)
bound  %edi,0x32(%edx)
add    %ah,0x7a(%edx)
imul   $0x20642d20,0x32(%eax),%esi
sub    $0x57000063,%eax
popa
jb     80570d2 <_IO_stdin_used+0x81ce>
imul   $0x6170203a,0x67(%esi),%ebp
je     80570d5 <_IO_stdin_used+0x81d1>
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
cmp    (%bx,%si),%ah
and    $0x73252f73,%eax
or     (%eax),%al
add    %ebx,(%ebx)
add    (%ebx),%edi
pop    %eax
add    (%eax),%al
add    %cl,0x0(%edx)
add    %al,(%eax)
nop
sbb    %edi,%edi
pushl  0x0(%edx,%eax,1)
add    %dl,-0x5f0000e1(%eax)
or     (%eax),%eax
add    %ah,%al
pop    %ds
(bad)
jmp    *%eax
add    $0x0,%al
add    %ah,%al
aaa
(bad)
lcall  *-0x7ffffffe(%eax)
cmp    %bh,%bh
inc    %eax
add    (%eax),%al
add    %al,(%eax)
cmp    %bh,%bh
incl   (%eax)
add    (%eax),%eax
add    %al,0x3a(%eax)
(bad)
jmp    *(%eax)
add    (%eax),%eax
add    %ah,0x48ffff3b(%eax)
add    (%eax),%eax
add    %ah,(%eax)
cmp    $0xff,%al
pushl  0x0(%ebx,%eax,1)
add    %al,(%eax)
cmp    $0x3a0ffff,%eax
add    %al,(%eax)
mov    $0x3d,%al
(bad)
jmp    *%eax
add    (%eax),%eax
add    %al,(%eax)
ds
(bad)
(bad)
clc
add    (%eax),%eax
add    %dl,0x14ffff3e(%eax)
add    $0x0,%al
add    %dl,(%eax)
aas
(bad)
(bad)
cmp    %al,(%eax,%eax,1)
add    %ah,(%eax)
inc    %ecx
(bad)
(bad)
js     8057106 <_IO_stdin_used+0x8202>
add    %al,(%eax)
jo     8057150 <_IO_stdin_used+0x824c>
(bad)
(bad)
mov    $0x70000004,%esp
dec    %ebx
(bad)
incl   0x4c400000(,%eax,1)
(bad)
incl   0x5(%eax)
add    %al,(%eax)
orb    $0x54,-0x1(%edi,%edi,8)
add    $0x4cb00000,%eax
(bad)
ljmp   *0x5(%eax)
add    %al,(%eax)
lock dec %esp
(bad)
(bad)
jl     8057137 <_IO_stdin_used+0x8233>
add    %al,(%eax)
nop
dec    %ebp
(bad)
ljmp   *0x4eb00000(%ebp,%eax,1)
(bad)
call   *%esp
add    $0x50400000,%eax
(bad)
incl   (%eax)
push   %es
add    %al,(%eax)
add    %dl,-0x1(%ecx)
jmp    *(%esi,%eax,1)
add    %al,(%eax)
jo     80571a7 <_IO_stdin_used+0x82a3>
(bad)
decl   0x6(%eax)
add    %al,(%eax)
rclb   -0x1(%ecx)
(bad)
jl     8057168 <_IO_stdin_used+0x8264>
add    %al,(%eax)
and    %dl,-0x1(%edx)
call   *-0x4ffffffa(%eax)
push   %edx
(bad)
(bad)
mov    $0x10000006,%eax
push   %ebx
(bad)
(bad)
faddl  (%esi)
add    %al,(%eax)
loopne 80571d1 <_IO_stdin_used+0x82cd>
(bad)
incl   (%eax)
pop    %es
add    %al,(%eax)
pusha
push   %esp
(bad)
jmp    *(%edi,%eax,1)
add    %al,(%eax)
nop
arpl   %di,%di
jmp    *0x0(%edi,%eax,1)
add    %ah,(%eax)
fs
(bad)
decl   -0x6ffffff9(%eax)
fs
(bad)
ljmp   *0x65300000(%edi,%eax,1)
(bad)
call   *%esp
pop    %es
add    %al,(%eax)
mov    $0x65,%al
(bad)
decl   (%eax,%ecx,1)
add    %al,(%eax)
loopne 805721b <_IO_stdin_used+0x8317>
(bad)
ljmp   *(%eax,%ecx,1)
add    %al,(%eax)
lock
gs
(bad)
incl   0x8(%eax)
add    %al,(%eax)
add    %ah,-0x1(%esi)
call   *0x0(%eax,%ecx,1)
add    %dl,(%eax)
data16
(bad)
ljmp   *0x8(%eax)
add    %al,(%eax)
and    %ah,-0x1(%esi)
(bad)
jl     80571e2 <_IO_stdin_used+0x82de>
add    %al,(%eax)
xor    %ah,-0x1(%esi)
call   *0x40000008(%eax)
data16
(bad)
jmp    *0x66500000(%eax,%ecx,1)
(bad)
(bad)
mov    $0x60000008,%eax
data16
(bad)
dec    %esp
or     %al,(%eax)
add    %dh,0x66(%eax)
(bad)
jmp    *%eax
or     %al,(%eax)
add    %al,-0xb00009a(%eax)
or     %al,(%eax)
add    %dl,0x67(%eax)
(bad)
jmp    *(%eax)
or     %eax,(%eax)
add    %ah,0x67(%eax)
(bad)
pushl  (%ecx,%ecx,1)
add    %al,(%eax)
jo     8057285 <_IO_stdin_used+0x8381>
(bad)
decl   0x9(%eax)
add    %al,(%eax)
andb   $0xff,-0x1(%edi)
pop    %esp
or     %eax,(%eax)
add    %ah,%al
addr16 (bad)
decl   0x40000009(%eax)
push   $0x9b4ffff
add    %al,(%eax)
push   %eax
imul   $0x9e0ff,%edi,%edi
add    %ah,(%eax)
imul   $0xffffffff,%edi,%edi
and    %cl,(%edx)
add    %al,(%eax)
shrb   -0x1(%edi,%edi,8)
pusha
or     (%eax),%al
add    %dl,(%eax)
outsb  %ds:(%esi),(%dx)
(bad)
dec    %esp
or     (%eax),%al
add    %dh,%al
outsb  %ds:(%esi),(%dx)
(bad)
call   *(%ebx,%ecx,1)
add    %al,(%eax)
xorb   $0xff,-0x1(%edx)
push   %esp
or     (%eax),%eax
add    %dl,0x73(%eax)
(bad)
(bad)
jl     805727d <_IO_stdin_used+0x8379>
add    %al,(%eax)
mov    $0x73,%al
(bad)
(bad)
mov    $0xd000000b,%esp
jae    805727e <_IO_stdin_used+0x837a>
(bad)
fmuls  (%ebx)
add    %al,(%eax)
add    %dh,-0x1(%edi,%edi,8)
hlt
or     (%eax),%eax
add    %ah,(%eax)
je     805728e <_IO_stdin_used+0x838a>
call   *(%eax)
or     $0x0,%al
add    %dl,0x74(%eax)
(bad)
ljmp   *(%esp,%ecx,1)
add    %al,(%eax)
jo     8057312 <_IO_stdin_used+0x840e>
(bad)
incl   0x0(%esp,%ecx,1)
add    %al,-0x7f00008b(%eax)
or     $0x0,%al
add    %ah,(%eax)
jbe    80572ae <_IO_stdin_used+0x83aa>
dec    %eax
or     $0x0,%al
add    %dh,0xcffff7a(%eax)
or     $0x7ad00000,%eax
(bad)
jmp    *(%eax)
or     $0x7af00000,%eax
(bad)
pushl  0x7de00000(,%ecx,1)
(bad)
decl   0x7e500000(%ebp,%ecx,1)
(bad)
dec    %eax
.byte 0xd
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     80572f3 <_IO_stdin_used+0x83ef>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x19,%al
(bad)
incl   (%eax)
add    $0x0,%al
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8057313 <_IO_stdin_used+0x840f>
js     8057311 <_IO_stdin_used+0x840d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
and    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x35(%eax)
(bad)
call   *0x0(%ebx)
inc    %ebx
push   %cs
and    %al,0x4(%ebx,%eax,4)
dec    %ebp
xchg   %al,(%ebx)
inc    %esi
xchg   %eax,(%edx)
add    0xa(%ecx),%bl
mov    $0x45040ec3,%esi
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
push   $0xb8000000
xor    $0x17fffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x28,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
test   $0x0,%al
add    %al,(%eax)
clc
ss
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
outsb  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x24,%al
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %bl,(%eax)
aaa
(bad)
lcall  *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x4ff1b7fe(%ebx)
push   %ds
add    0x41080e0a(%edx),%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
lock add %al,(%eax)
add    %dl,0x38(%eax)
(bad)
(bad)
jnp    80573d6 <_IO_stdin_used+0x84d2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4402(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
imul   $0xec3460c,(%esi),%ecx
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,(%ecx,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %bh,%bh
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
inc    %esp
xchg   %al,(%edx,%ecx,2)
test   %eax,(%edx)
dec    %esp
addl   $0x6d,0x2038746
or     %ch,%al
mov    $0x41040ec3,%esi
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
add    %eax,(%eax)
add    %bl,0x39(%eax)
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2800e48
dec    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
mov    %al,(%ecx)
add    %al,(%eax)
enter  $0xff39,$0xff
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %ebx
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ah,0x1(%eax)
cmp    %bh,%bh
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x3a740000(%ecx,%eax,1)
(bad)
(bad)
jp     80574a2 <_IO_stdin_used+0x859e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
js     80574b9 <_IO_stdin_used+0x85b5>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
loopne 80574bf <_IO_stdin_used+0x85bb>
add    %al,(%eax)
sarb   (%edx)
(bad)
incl   (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff2,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %ah,0x41ffff3c(%eax)
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x13a00e46
mov    (%ebx),%es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %fs:(%eax),%al
add    %ch,0x100ffff(%ebp,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jbe    8057561 <_IO_stdin_used+0x865d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    %al,(%edx)
add    %al,(%eax)
clc
sbb    %bh,%bh
decl   (%edi,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4702(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%edi,%ecx,2)
addl   $0x0,0x38000000
add    %al,(%eax)
lods   %ds:(%esi),%al
add    (%eax),%al
add    %ah,-0x1(%esi,%eax,2)
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbc,0x21c0e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,%al
add    (%eax),%al
add    %bh,%al
inc    %esi
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cld
add    (%eax),%al
add    %ah,(%edi,%eax,2)
(bad)
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    (%eax),%eax
add    %al,0x47(%eax)
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
addr16 push %cs
adc    %ch,(%eax,%eax,1)
add    %al,(%eax)
and    $0x3,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
inc    %edi
(bad)
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
push   %esp
add    (%eax),%eax
add    %bl,%ah
inc    %edi
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
inc    %eax
push   %edx
addl   $0xffffff85,0x3870486
add    (%edx),%al
sti
or     %ch,%al
mov    $0x48040ec3,%esi
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,0x0(%ebx,%eax,1)
add    %dl,%ah
dec    %eax
(bad)
incl   0x1(%edi)
inc    %esi
push   %cs
rolb   $0x83,0x47(%eax)
add    $0x87048679,%eax
add    -0x3af580fe(%ebp),%eax
mov    $0x43040ec3,%esi
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
test   $0x3,%al
add    %al,(%eax)
cmp    %cl,-0x1(%edx)
pushl  0x0(%esi)
inc    %ebx
push   %cs
and    %cl,-0x7d(%ebp)
add    -0x39f59ffe(%esi),%eax
ret
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
int3
add    (%eax),%eax
add    %dl,%ah
dec    %edx
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
add    0xa(%eax),%bl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dh,%al
add    (%eax),%eax
add    %ah,(%eax)
dec    %ebx
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,(%esp,%eax,1)
add    %al,(%eax)
dec    %esp
dec    %ebx
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax,%eax,1)
add    %cl,-0x750000b5(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,0x5(%ebx,%eax,4)
inc    %esi
xchg   %al,(%edx,%ecx,2)
xchg   %eax,(%ebx)
test   %eax,(%edx)
add    -0x3b(%edx),%dh
mov    $0x40ec3,%esi
and    %al,(%eax)
add    %al,(%eax)
pusha
add    $0x0,%al
add    %dh,%al
dec    %ebx
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %cl,-0x7d(%edi)
add    0xa430202(%esi),%eax
mov    $0xe,%bl
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x4c2c0000(%esp,%eax,1)
(bad)
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,0x4(%ebx,%eax,4)
dec    %edx
xchg   %eax,(%edx)
dec    %eax
xchg   %al,(%ebx)
add    0xec3c6c7(%ebx),%dh
add    $0x20,%al
add    %al,(%eax)
add    %ch,-0x27fffffc(%eax)
dec    %esp
(bad)
(bad)
jle    805778e <_IO_stdin_used+0x888a>
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dl,-0x7d(%ecx)
add    -0x39f59efe(%esi),%eax
ret
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
int3
add    $0x0,%al
add    %dh,0xf24ffff(,%ecx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x26,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,0x5c240000(,%eax,1)
(bad)
incl   0x0(%edi)
inc    %ebx
push   %cs
adc    %al,-0x7d(%ebx)
add    $0x4c,%al
xchg   %al,(%ebx)
xchg   %eax,(%edx)
add    -0x3a(%edi,%eax,8),%dh
ret
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
xor    %al,0x5c900000
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x4(%ebx,%eax,4)
dec    %esi
xchg   %al,(%ebx)
xchg   %eax,(%edx)
add    -0x39(%ebx),%dl
mov    $0xe,%bl
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
push   %esp
add    $0x5cdc0000,%eax
(bad)
lcall  *0x0(%esi)
inc    %ebx
push   %cs
and    %al,0x3(%esi,%eax,4)
dec    %eax
xchg   %eax,(%edx)
dec    %eax
addl   $0x76,(%edx,%eax,1)
or     %bh,%al
mov    $0xe,%bl
add    $0x43,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
jl     805785f <_IO_stdin_used+0x895b>
add    %al,(%eax)
push   %esp
pop    %ebp
(bad)
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x5,%ah
add    %al,(%eax)
pushf
pop    %ebp
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,%ah
add    $0x5dac0000,%eax
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%al
add    $0x5da80000,%eax
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
add    $0x5da40000,%eax
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
push   %es
add    %al,(%eax)
mov    0x6ffff5d,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%esi,%eax,1)
add    %al,(%eax)
pushf
pop    %ebp
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
push   %es
add    %al,(%eax)
cwtl
pop    %ebp
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi,%eax,1)
add    %dl,0xaffff(%ebp,%ebx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pusha
push   %es
add    %al,(%eax)
nop
pop    %ebp
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi,%eax,1)
add    %cl,0x6ffff(%ebp,%ebx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %al,(%esi)
add    %al,(%eax)
mov    %bl,-0x1(%ebp)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x5d840000(%esi,%eax,1)
(bad)
inc    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    $0xc3410c0e,%esp
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
push   %es
add    %al,(%eax)
sub    %bl,-0x1(%esi)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
push   %es
add    %al,(%eax)
and    $0x5e,%al
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
push   %es
add    %al,(%eax)
and    %bl,-0x1(%esi)
incl   0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%edi,%eax,1)
add    %al,(%eax)
sbb    $0x5e,%al
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%esi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
pop    %es
add    %al,(%eax)
push   %eax
pop    %esi
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
push   %esp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0x8(%esi,%ecx,1),%ebp
inc    %esp
ret
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x0(%edi,%eax,1)
add    %al,0x10dffff(%esi,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ecx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
push   $0xc1ffff5f
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xffffffa9,0x3600e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
enter  $0x7,$0x0
clc
pusha
(bad)
jmp    *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9a,0x3500e43
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x8000000
or     %al,(%eax)
add    %ch,0x62(%eax)
(bad)
(bad)
cmp    (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x65,0x2300e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
cmpsb  %es:(%edi),%ds:(%esi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,0x0(%eax,%ecx,1)
add    %bh,(%ebx,%eiz,2)
(bad)
(bad)
fildl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
push   %esp
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0xd4000008,%esp
arpl   %di,%di
call   *0x3(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff97,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
cld
or     %al,(%eax)
add    %ah,(%edi,%eiz,2)
(bad)
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,0x4(%ebx,%eax,4)
dec    %eax
xchg   %al,(%ebx)
dec    %eax
xchg   %eax,(%edx)
add    -0x3c3938f6(%ecx),%dl
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
and    $0x9,%al
add    %al,(%eax)
int3
addr16 (bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%edx
push   %cs
add    $0x45,%al
or     0xe(%esi),%eax
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
dec    %eax
or     %eax,(%eax)
add    %ch,%al
adc    %edi,%edi
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx,%ecx,1)
add    %ch,%ah
addr16 (bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %al,-0xffffff7(%eax)
addr16 (bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,0x68040000(%ecx,%ecx,1)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,0x8000009(%eax)
push   $0x25ffff
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x9
add    %al,(%eax)
sbb    $0x68,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%ebp)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
or     %eax,(%eax)
add    %ah,(%eax,%ebp,2)
(bad)
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
lods   %ds:(%esi),%al
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,(%eax)
or     (%eax),%al
add    %bh,%al
push   $0x91ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%dh
push   %cs
adc    %al,0xe(%ebx,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4b,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0xa(%eax)
add    %al,(%eax)
push   %eax
imul   $0x48aff,%edi,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
or     (%edx,%ecx,1),%al
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xa,%ah
add    %al,(%eax)
pushf
insl   (%dx),%es:(%edi)
(bad)
lcall  *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
or     (%eax),%al
add    %ch,0x1dffff6d(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bl,%ah
or     (%eax),%al
add    %dh,0x2ebffff(%ebp,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
dec    %ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%ecx,1)
add    %al,(%eax)
dec    %esp
jo     8057e16 <_IO_stdin_used+0x8f12>
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,0xb(%eax)
add    %al,(%eax)
xorb   $0xff,-0x1(%eax)
add    (%eax),%al
.byte 0x30
test   $0x4,%al
.byte 0x8
.byte 0x10
test   $0x4,%al
.byte 0x8
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
call   150d93b0 <optarg+0xd07b56c>
add    %al,(%eax)
add    %dl,%ah
out    %al,(%dx)
add    $0x8,%al
sbb    %eax,(%eax)
add    %al,(%eax)
or     %cl,0x1b0805(%edi)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x8f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
dec    %eax
xchg   %al,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %ch,%al
addl   $0xa,(%eax,%ecx,1)
mov    (%edx),%eax
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
nop
add    $0x208,%eax
add    %bh,%al
add    %eax,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dh,%al
mov    %eax,(%eax,%ecx,1)
adc    %eax,(%eax)
add    %al,(%eax)
rorb   $0x0,0x120804(%ecx)
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x60(%edi)
mov    %eax,(%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x2c(%edi)
mov    %al,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0x8f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%esi)
mov    %es,(%eax,%ecx,1)
mov    %es,%ss:(%eax,%ecx,1)
inc    %esi
mov    %es,(%eax,%ecx,1)
push   %esi
mov    %es,(%eax,%ecx,1)
data16
mov    %es,(%eax,%ecx,1)
jbe    8058fae <_IO_stdin_used+0xa0aa>
add    $0x8,%al
xchg   %cl,0x48c9608(%esp,%eax,1)
or     %ah,-0x49f7fb74(%esi)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
out    %al,$0x8c
add    $0x8,%al
(bad)
mov    %es,(%eax,%ecx,1)
push   %es
lea    (%eax,%ecx,1),%eax
push   %ss
lea    (%eax,%ecx,1),%eax
lea    %es:(%eax,%ecx,1),%eax
lea    %ss:(%eax,%ecx,1),%eax
inc    %esi
lea    (%eax,%ecx,1),%eax
push   %esi
lea    (%eax,%ecx,1),%eax
lea    (%eax,%ecx,1),%ax
jbe    8058fef <_IO_stdin_used+0xa0eb>
add    $0x8,%al
xchg   %cl,-0x7269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lea    (%eax,%ecx,1),%eax
mov    $0x8d,%dh
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
(bad)
lea    (%eax,%ecx,1),%eax
out    %al,$0x8d
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
push   %es
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
mov    %es:(%eax,%ecx,1),%es
mov    %ss:(%eax,%ecx,1),%es
inc    %esi
mov    (%eax,%ecx,1),%es
push   %esi
mov    (%eax,%ecx,1),%es
data16
mov    (%eax,%ecx,1),%es
jbe    8059030 <_IO_stdin_used+0xa12c>
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8059071 <_IO_stdin_used+0xa16d>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
jg     805911a <_IO_stdin_used+0xa216>
add    $0x8,%al
imul   $0x4,%ebx,%esi
or     %dh,0x804f0(%esi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jno    8059131 <_IO_stdin_used+0xa22d>
add    $0x8,%al
or     $0xfd,%al
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
pusha
incl   0x108
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
jg     805914a <_IO_stdin_used+0xa246>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jg     8059152 <_IO_stdin_used+0xa24e>
add    $0x8,%al
push   %cs
add    $0x805,%eax
add    %al,(%eax)
jg     805915e <_IO_stdin_used+0xa25a>
add    $0x8,%al
push   %ss
add    $0x5130805,%eax
add    $0x8,%eax
add    %ah,(%edx)
add    $0x7740805,%eax
add    $0x5079808,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
out    %ax,(%dx)
add    $0x8,%al
and    %bl,0xa00805(%ecx)
add    %al,(%eax)
stos   %eax,%es:(%edi)
daa
add    $0x59f2008,%eax
or     %ah,-0x4a000000(%eax)
daa
add    $0x5a22008,%eax
or     %ah,-0x3f000000(%eax)
daa
add    $0x5a52008,%eax
or     %ah,-0x34000000(%eax)
daa
add    $0x5a82008,%eax
or     %ah,-0x29000000(%eax)
daa
add    $0x5ab2008,%eax
or     %ah,-0x1e000000(%eax)
daa
add    $0x5ae2008,%eax
or     %ah,-0x13000000(%eax)
daa
add    $0x5b12008,%eax
or     %dl,%al
add    %al,(%eax)
add    %bh,%al
daa
add    $0x5b2a008,%eax
or     %ah,0x4000000(%eax)
sub    %al,0x59c2008
or     %ah,0x10000000(%eax)
sub    %al,0x5b5a008
or     %al,0x18000000(%eax)
sub    %al,0x5b9a008
or     %al,0x20000000(%eax)
sub    %al,0x5bda008
or     %al,0x27000000(%eax)
sub    %al,0x5bda008
or     %al,0x2e000000(%eax)
sub    %al,0x5c1a008
or     %ah,0x36000000(%eax)
sub    %al,0x5c4a008
or     %bl,0x43000000(%edi)
sub    %al,0x5d0a008
or     %ah,0x4e000000(%eax)
sub    %al,0x5d3a008
or     %ah,0x0(%eax)
add    %al,(%eax)
add    %bl,0x28(%ecx)
add    $0x5286308,%eax
or     %ch,0x28(%ebp)
add    $0x5287708,%eax
or     %bh,0x28(%ebx)
add    $0x5288508,%eax
or     %cl,-0x6cf7fad8(%esi)
sub    %al,0x5289808
or     %bl,0x28a30805(%eax,%ebp,1)
add    $0x528aa08,%eax
or     %dh,-0x46f7fad8(%eax)
sub    %al,0x528be08
or     %cl,%ch
sub    %al,0x528d608
or     %bl,%ah
sub    %al,0x528e508
or     %ch,%ch
sub    %al,0x528f708
or     %bh,%dh
sub    %al,0x5290708
or     %ch,(%ebx)
push   $0x5
or     %cl,(%edi)
sub    %eax,0x56a3308
or     %dl,(%edi)
sub    %eax,0x56a3b08
or     %ah,(%ecx)
sub    %eax,0x56a4208
or     %ch,(%ebx)
sub    %eax,0x56a2608
or     %dh,(%eax)
sub    %eax,0x56a1f08
or     %dh,0x26080529
push   $0x5
or     %bh,(%ebx)
sub    %eax,0x56a1f08
or     %al,0x29(%ecx)
add    $0x56a2608,%eax
or     %cl,0x29(%ecx)
add    $0x56a1f08,%eax
or     %dl,0x29(%ecx)
add    $0x5295a08,%eax
or     %ah,0x29(%ebx)
add    $0x5296c08,%eax
or     %dh,0x29(%edi)
add    $0x5297d08,%eax
or     %al,-0x6bf7fad7(%esi)
sub    %eax,0x529a308
or     %cl,0x6a(%ecx)
add    $0x529b008,%eax
or     %dh,-0x42f7fad7(%edi)
sub    %eax,0x529c408
or     %cl,-0x2bf7fab3(%ebx)
inc    %edx
add    $0x529ca08,%eax
or     %cl,%ch
sub    %eax,0x559ce08
or     %dl,%cl
sub    %eax,0x529d508
or     %bl,%cl
sub    %eax,0x5308708
or     %bl,%ch
sub    %eax,0x5307b08
or     %dh,-0x17f7fad2(%ecx)
sub    %eax,0x529f408
or     %al,(%ecx)
sub    0x52a0c08,%al
or     %bl,(%edx,%ebp,1)
add    $0x52a2708,%eax
or     %dh,(%edx)
sub    0x52a2708,%al
or     %al,0x2a(%ebx)
add    $0x52a4d08,%eax
or     %dl,0x2a(%edi)
add    $0x52a6008,%eax
or     %ch,0x2a(%ecx)
add    $0x52a7808,%eax
or     %al,-0x6bf7fad6(%ebp)
sub    0x52a9c08,%al
or     %ah,-0x17f7fad6(%ecx)
push   $0x5
or     %dl,(%eax)
imul   $0x8,0x52aa808,%eax
les    (%edx),%ebp
add    $0x52adf08,%eax
or     %bh,%dl
sub    0x52b1608,%al
or     %dh,(%ecx)
sub    0x52b4c08,%eax
or     %ah,0x2b(%edi)
add    $0x52b8208,%eax
or     %bl,0x3408052b(%edi)
imul   $0x8,0x52bbc08,%eax
(bad)
sub    0x52bf108,%eax
or     %bl,0x6b(%eax)
add    $0x56b7c08,%eax
or     %bl,0x6bc40805(%ebx,%ebp,2)
add    $0x52c0b08,%eax
or     %ah,0x3e08052c
sub    $0x5,%al
or     %dl,0x2c(%edi)
add    $0x52c7108,%eax
or     %cl,-0x5cf7fad4(%edx)
sub    $0x5,%al
or     %bh,0x2cd50805(%esp,%ebp,1)
add    $0x52cf008,%eax
or     %ch,%al
imul   $0x8,0x52d0b08,%eax
and    0x2d3c0805,%ebp
add    $0x56c0c08,%eax
or     %dl,0x5(%ebp,%ebp,1)
or     %dh,0x2d(%edx)
add    $0x52d8208,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
xchg   %eax,%ebp
add    $0x10008,%eax
add    %ah,0x805d6(%eax)
add    %eax,(%eax)
add    %ah,0x140805da(%eax)
add    %al,(%eax)
add    %al,(%eax)
fildl  0x1208
add    %cl,-0x25(%eax)
add    $0x608,%eax
add    %ah,-0x25(%eax)
add    $0x3f08,%eax
add    %bl,0x5(%esp,%ebx,8)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x5,%ah
or     %cl,(%ecx)
add    %al,(%eax)
add    %al,%al
faddl  0x1a08
add    %al,-0x23(%eax)
add    $0x908,%eax
add    %al,0x90805dd(%eax)
add    %al,(%eax)
add    %al,%al
fldl   0xb08
add    %dl,-0x6af7fad3(%ecx)
sub    $0x2d9f0805,%eax
add    $0x52da908,%eax
or     %dh,-0x42f7fad3(%ebx)
sub    $0x2dc70805,%eax
add    $0x52dd108,%eax
or     %ah,0x28(%ebx)
add    $0x5287708,%eax
or     %al,-0x24f7fad8(%ebp)
sub    $0x2de50805,%eax
add    $0x52def08,%eax
or     %bh,%cl
sub    $0x2e030805,%eax
add    $0x52e0d08,%eax
or     %dl,(%edi)
cs
add    $0x52e2108,%eax
or     %ch,(%ebx)
cs
add    $0x52e3508,%eax
or     %bh,(%edi)
cs
add    $0x52e4908,%eax
or     %dl,0x2e(%ebx)
add    $0x52e5d08,%eax
or     %ah,0x2e(%edi)
add    $0x52e7108,%eax
or     %bh,0x2e(%ebx)
add    $0x52e8208,%eax
or     %dl,0x2ea90805(%esi,%ebp,1)
add    $0x52ebd08,%eax
or     %dh,0x2a(%edx)
add    $0x52ed008,%eax
or     %dl,%bh
cs
add    $0x52ee008,%eax
or     %ch,%bl
cs
add    $0x52ef208,%eax
or     %bh,%dl
cs
add    $0x52f0408,%eax
or     %cl,(%edi)
das
add    $0x52f1908,%eax
or     %ah,(%edi,%ebp,1)
add    $0x52f2d08,%eax
or     %cl,(%esi)
pop    %esi
add    $0x52ff908,%eax
or     %dh,(%edx)
das
add    $0x528f808,%eax
or     %bh,(%ecx)
das
add    $0x55e9008,%eax
or     %ah,-0x49f7faa2(%ebx)
pop    %esi
add    $0x55ecb08,%eax
or     %bl,%bh
pop    %esi
add    $0x55ef308,%eax
or     %al,(%esi)
pop    %edi
add    $0x55f1b08,%eax
or     %dh,(%eax)
pop    %edi
add    $0x55e3008,%eax
or     %bl,0x6408055e
sub    0x52f3e08,%al
or     %al,0x5(%edi,%ebp,1)
or     %cl,0x5(%edi,%ebp,1)
or     %ch,0x42(%edi)
add    $0x4efa908,%eax
or     %ch,0x410804ef(%esi)
out    %eax,(%dx)
add    $0x8,%al
push   %cs
repz add $0x8,%al
lahf
xor    %al,0x569cb08
or     %dh,(%ebx)
xor    $0x4a50805,%eax
add    $0x52f5508,%eax
or     %dl,0x2f(%edi)
add    $0x5659508,%eax
or     %bl,(%edi)
sub    %eax,0x52f5908
or     %bl,0x31(%ebx)
add    $0x52f5b08,%eax
or     %bl,0x2f(%ebp)
add    $0x52f5f08,%eax
or     %cl,0x4(%edi,%ebp,8)
or     %ah,0x2f(%ecx)
add    $0x4f24708,%eax
or     %ah,0x2f(%ebx)
add    $0x4f0c708,%eax
or     %ah,0x2f(%ebp)
add    $0x52f6708,%eax
or     %ch,0x2f(%ecx)
add    $0x52f6b08,%eax
or     %ch,0x2f(%ebp)
add    $0x52e8a08,%eax
or     %bl,0x2eb10805(%esi,%ebp,1)
add    $0x52ec508,%eax
or     %ch,0x30(%ebp)
add    $0x54fcc08,%eax
or     %ah,0x1008052d(%edi)
out    %eax,(%dx)
add    $0x8,%al
gs
es
add    $0x5505a08,%eax
or     %cl,%bh
sub    $0x2dd90805,%eax
add    $0x5286108,%eax
or     %ch,-0x7cf7fac4(%eax)
sub    %al,0x52de308
or     %ch,%ch
sub    $0x2df70805,%eax
add    $0x5658908,%eax
or     %cl,(%edi,%ebp,8)
add    $0x8,%al
test   $0x28,%al
add    $0x52e1f08,%eax
or     %ah,0x35080528
icebp
add    $0x8,%al
cmp    $0x2c08052e,%eax
sub    %al,0x52e5108
or     %bl,0x2e(%ebx)
add    $0x52e6508,%eax
or     %ch,0x2e(%edi)
add    $0x52e7908,%eax
or     %bh,0x2f(%ecx)
add    $0x52fb308,%eax
or     %al,-0x22f7fad1(%ebx)
sub    %eax,0x52f8e08
or     %bh,-0x10(%edi)
add    $0x8,%al
jg     8059716 <_IO_stdin_used+0xa812>
add    $0x8,%al
jg     805971a <_IO_stdin_used+0xa816>
add    $0x8,%al
jg     805971e <_IO_stdin_used+0xa81a>
add    $0x8,%al
jg     8059722 <_IO_stdin_used+0xa81e>
add    $0x8,%al
jg     8059726 <_IO_stdin_used+0xa822>
add    $0x8,%al
jg     805972a <_IO_stdin_used+0xa826>
add    $0x8,%al
jg     805972e <_IO_stdin_used+0xa82a>
add    $0x8,%al
jg     8059732 <_IO_stdin_used+0xa82e>
add    $0x8,%al
jg     8059736 <_IO_stdin_used+0xa832>
add    $0x8,%al
jg     805973a <_IO_stdin_used+0xa836>
add    $0x8,%al
jg     805973e <_IO_stdin_used+0xa83a>
add    $0x8,%al
jg     8059742 <_IO_stdin_used+0xa83e>
add    $0x8,%al
jg     8059746 <_IO_stdin_used+0xa842>
add    $0x8,%al
jg     805974a <_IO_stdin_used+0xa846>
add    $0x8,%al
jg     805974e <_IO_stdin_used+0xa84a>
add    $0x8,%al
jg     8059752 <_IO_stdin_used+0xa84e>
add    $0x8,%al
jg     8059756 <_IO_stdin_used+0xa852>
add    $0x8,%al
jg     805975a <_IO_stdin_used+0xa856>
add    $0x8,%al
jg     805975e <_IO_stdin_used+0xa85a>
add    $0x8,%al
jg     8059762 <_IO_stdin_used+0xa85e>
add    $0x8,%al
jg     8059766 <_IO_stdin_used+0xa862>
add    $0x8,%al
jg     805976a <_IO_stdin_used+0xa866>
add    $0x8,%al
jg     805976e <_IO_stdin_used+0xa86a>
add    $0x8,%al
jg     8059772 <_IO_stdin_used+0xa86e>
add    $0x8,%al
jg     8059776 <_IO_stdin_used+0xa872>
add    $0x8,%al
jg     805977a <_IO_stdin_used+0xa876>
add    $0x8,%al
jg     805977e <_IO_stdin_used+0xa87a>
add    $0x8,%al
jg     8059782 <_IO_stdin_used+0xa87e>
add    $0x8,%al
jg     8059786 <_IO_stdin_used+0xa882>
add    $0x8,%al
jg     805978a <_IO_stdin_used+0xa886>
add    $0x8,%al
jg     805978e <_IO_stdin_used+0xa88a>
add    $0x8,%al
js     80597cc <_IO_stdin_used+0xa8c8>
add    $0x52f9508,%eax
or     %al,0x3c(%edi)
add    $0x528dc08,%eax
or     %ah,-0x56f7fad1(%eax)
das
add    $0x52fad08,%eax
or     %dl,0x308e0805(%edx,%ebp,1)
add    $0x52fb708,%eax
or     %al,%cl
das
add    $0x52fcd08,%eax
or     %bl,%bl
das
add    $0x52aa108,%eax
or     %ah,%bl
das
add    $0x5353a08,%eax
or     %ch,%dh
das
add    $0x52ff508,%eax
or     %bh,%bh
das
add    $0x5300b08,%eax
or     %dh,0x5(%eax,%esi,1)
or     %cl,0x45(%ebx)
add    $0x528ed08,%eax
or     %bl,(%ecx)
xor    %al,0x530a208
or     %ch,(%eax)
xor    %al,0x5303408
or     %al,0x3e08052d(%edx)
xor    %al,0x5304908
or     %dl,0x30(%ecx)
add    $0x5305f08,%eax
or     %ch,0x5(%eax,%esi,1)
or     %dh,0x30(%ebx)
add    $0x5307a08,%eax
or     %al,-0x72f7fad0(%esi)
xor    %al,0x5309808
or     %bl,-0x5ef7fad0(%esi)
xor    %al,0x530aa08
or     %dh,-0x47f7fad0(%ecx)
xor    %al,0x530c408
or     %cl,%bh
xor    %al,0x530d608
or     %bl,%ch
xor    %al,0x530e908
or     %dh,%ah
xor    %al,0x530f808
or     %bh,%bh
xor    %al,0x5310608
or     %cl,0x19080531
xor    %eax,0x5312008
or     %cl,%ch
sub    %al,0x528fe08
or     %ch,(%ebx)
xor    %eax,0x5313208
or     %bh,(%ecx)
xor    %eax,0x5314508
or     %dl,0x31(%eax)
add    $0x5315708,%eax
or     %bl,0x31(%ebp)
add    $0x5316408,%eax
or     %ch,0x31(%ebx)
add    $0x5317208,%eax
or     %bh,0x31(%esi)
add    $0x53cd108,%eax
or     %al,-0x35f7facf(%ebp)
inc    %ecx
add    $0x5318b08,%eax
or     %dl,0x335d0805(%ecx,%esi,1)
add    $0x5319b08,%eax
or     %ah,-0x4df7facf(%edi)
xor    %eax,0x531b908
or     %al,%al
xor    %eax,0x531cc08
or     %dl,%bh
xor    %eax,0x531db08
or     %ah,%dl
xor    %eax,0x531e908
or     %dh,%al
xor    %eax,0x531fc08
or     %al,(%ebx)
xor    0x5320e08,%al
or     %dl,(%edi)
xor    0x5321e08,%al
or     %ah,0x2c080532
xor    0x5323808,%al
or     %al,0x32(%ebx)
add    $0x5324a08,%eax
or     %dl,0x32(%eax)
add    $0xa008,%eax
add    %bh,0x2a(%eax)
add    $0xa108,%eax
add    %dl,-0x5df7fad1(%ebp)
add    %al,(%eax)
add    %al,0x3c(%edi)
add    $0xa308,%eax
add    %bl,%ah
sub    %al,0xa408
add    %ah,-0x5af7fad1(%eax)
add    %al,(%eax)
add    %ch,-0x59f7fad1(%ecx)
add    %al,(%eax)
add    %ch,-0x58f7fad1(%ebp)
add    %al,(%eax)
add    %dl,0xa80805(%edx,%ebp,1)
add    %al,(%eax)
mov    (%eax),%?
add    $0xa908,%eax
add    %dh,-0x55f7fad1(%edi)
add    %al,(%eax)
add    %al,%cl
das
add    $0xab08,%eax
add    %cl,%ch
das
add    $0xac08,%eax
add    %bl,%bl
das
add    $0xad08,%eax
add    %ah,-0x51f7fad6(%ecx)
add    %al,(%eax)
add    %ah,%bl
das
add    $0xaf08,%eax
add    %bh,(%edx)
xor    $0xb00805,%eax
add    %al,(%eax)
out    %al,(%dx)
das
add    $0xb108,%eax
add    %dh,%ch
das
add    $0xb208,%eax
add    %bh,%bh
das
add    $0xb308,%eax
add    %cl,(%ebx)
xor    %al,0xb408
add    %dh,0x5(%eax,%esi,1)
or     %dh,0x4b000000(%ebp)
inc    %ebp
add    $0xb608,%eax
add    %ch,%ch
sub    %al,0xb708
add    %bl,(%ecx)
xor    %al,0xb808
add    %ah,-0x46f7fad0(%edx)
add    %al,(%eax)
add    %ch,(%eax)
xor    %al,0xba08
add    %dh,(%eax,%esi,1)
add    $0xbb08,%eax
add    %al,-0x43f7fad3(%edx)
add    %al,(%eax)
add    %bh,(%esi)
xor    %al,0xbd08
add    %cl,0x30(%ecx)
add    $0xbe08,%eax
add    %dl,0x30(%ecx)
add    $0xbf08,%eax
add    %bl,0x30(%edi)
add    $0xc008,%eax
add    %ch,0x5(%eax,%esi,1)
or     %al,%cl
add    %al,(%eax)
add    %dh,0x30(%ebx)
add    $0xc208,%eax
add    %bh,0x30(%edx)
add    $0xc308,%eax
add    %al,-0x3bf7fad0(%esi)
add    %al,(%eax)
add    %cl,-0x3af7fad0(%ebp)
add    %al,(%eax)
add    %bl,-0x39f7fad0(%eax)
add    %al,(%eax)
add    %bl,-0x38f7fad0(%esi)
add    %al,(%eax)
add    %ah,-0x37f7fad0(%ecx)
add    %al,(%eax)
add    %ch,-0x36f7fad0(%edx)
add    %al,(%eax)
add    %dh,-0x35f7fad0(%ecx)
add    %al,(%eax)
add    %bh,-0x34f7fad0(%eax)
add    %al,(%eax)
add    %al,%ah
xor    %al,0xcc08
add    %cl,%bh
xor    %al,0xcd08
add    %dl,%dh
xor    %al,0xce08
add    %bl,%ch
xor    %al,0xcf08
add    %ch,%cl
xor    %al,0xd008
add    %dh,%ah
xor    %al,0xd108
add    %bh,%al
xor    %al,0xd208
add    %bh,%bh
xor    %al,0xd308
add    %al,(%esi)
xor    %eax,0xd408
add    %cl,0xd5080531
add    %al,(%eax)
add    %bl,(%ecx)
xor    %eax,0xd608
add    %ah,(%eax)
xor    %eax,0xd708
add    %cl,%ch
sub    %al,0xd808
add    %bh,%dh
sub    %al,0xd908
add    %ch,(%ebx)
xor    %eax,0xda08
add    %dh,(%edx)
xor    %eax,0xdb08
add    %bh,(%ecx)
xor    %eax,0xdc08
add    %al,0x31(%ebp)
add    $0xdd08,%eax
add    %dl,0x31(%eax)
add    $0xde08,%eax
add    %dl,0x31(%edi)
add    $0xdf08,%eax
add    %bl,0x31(%ebp)
add    $0xe008,%eax
add    %ah,0x5(%ecx,%esi,1)
or     %ah,%cl
add    %al,(%eax)
add    %ch,0x31(%ebx)
add    $0xe208,%eax
add    %dh,0x31(%edx)
add    $0xe308,%eax
add    %bh,0x31(%esi)
add    $0xe408,%eax
add    %dl,%cl
cmp    $0x5,%al
or     %ah,%ch
add    %al,(%eax)
add    %al,-0x19f7facf(%ebp)
add    %al,(%eax)
add    %cl,%dl
inc    %ecx
add    $0xe708,%eax
add    %cl,-0x17f7facf(%ebx)
add    %al,(%eax)
add    %dl,0xe90805(%ecx,%esi,1)
add    %al,(%eax)
pop    %ebp
xor    0xea08,%eax
add    %bl,-0x14f7facf(%ebx)
add    %al,(%eax)
add    %ah,-0x13f7facf(%edi)
add    %al,(%eax)
add    %dh,-0x12f7facf(%edx)
add    %al,(%eax)
add    %bh,-0x11f7facf(%ecx)
add    %al,(%eax)
add    %al,%al
xor    %eax,0xef08
add    %cl,%ah
xor    %eax,0xf008
add    %dl,%bh
xor    %eax,0xf108
add    %bl,%bl
xor    %eax,0xf208
add    %ah,%dl
xor    %eax,0xf308
add    %ch,%cl
xor    %eax,0xf408
add    %dh,%al
xor    %eax,0xf508
add    %bh,%ah
xor    %eax,0xf608
add    %al,(%ebx)
xor    0xf708,%al
add    %cl,(%esi)
xor    0xf808,%al
add    %dl,(%edi)
xor    0xf908,%al
add    %bl,(%esi)
xor    0xfa08,%al
add    %ah,0xfb080532
add    %al,(%eax)
add    %ch,(%edx,%esi,1)
add    $0xfc08,%eax
add    %bh,(%eax)
xor    0xfd08,%al
add    %al,0x32(%ebx)
add    $0xfe08,%eax
add    %cl,0x32(%edx)
add    $0xff08,%eax
add    %dl,0x32(%eax)
add    $0xa008,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    0x7f000000,%eax
lock add $0x8,%al
mov    %al,0x7f000000
lock add $0x8,%al
mov    %eax,0x7f000000
lock add $0x8,%al
lods   %ds:(%esi),%al
and    %al,(%eax)
add    %bl,0x32(%ebx)
add    $0xa508,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pusha
add    %eax,(%eax)
add    %ah,0x32(%eax)
add    $0xa708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
popa
add    %eax,(%eax)
add    %ah,0x32(%edi)
add    $0xa908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
stos   %al,%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stos   %eax,%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
scas   %es:(%edi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%al
add    %al,(%eax)
jg     8059c96 <_IO_stdin_used+0xad92>
add    $0x8,%al
mov    $0x0,%cl
add    %al,(%eax)
jg     8059c9e <_IO_stdin_used+0xad9a>
add    $0x8,%al
mov    $0x0,%dl
add    %al,(%eax)
jg     8059ca6 <_IO_stdin_used+0xada2>
add    $0x8,%al
mov    $0x0,%bl
add    %al,(%eax)
jg     8059cae <_IO_stdin_used+0xadaa>
add    $0x8,%al
jge    8059cc3 <_IO_stdin_used+0xadbf>
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
xor    0xb508,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%dh
add    %al,(%eax)
jg     8059cc6 <_IO_stdin_used+0xadc2>
add    $0x8,%al
mov    $0x0,%bh
add    %al,(%eax)
jg     8059cce <_IO_stdin_used+0xadca>
add    $0x8,%al
jle    8059ce3 <_IO_stdin_used+0xaddf>
add    %al,(%eax)
jne    8059d18 <_IO_stdin_used+0xae14>
add    $0xb908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x7f000000,%edx
lock add $0x8,%al
mov    $0x7f000000,%ebx
lock add $0x8,%al
push   %edx
add    %eax,(%eax)
add    %bh,0x5(%edx,%esi,1)
or     %dl,0x1(%ebx)
add    %al,(%eax)
jae    8059d4d <_IO_stdin_used+0xae49>
add    $0x17808,%eax
add    %bh,0x32(%edi)
add    $0xbf08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
rolb   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
roll   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
ret    $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
ret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
les    (%eax),%eax
add    %al,(%eax)
jg     8059d36 <_IO_stdin_used+0xae32>
add    $0x8,%al
lds    (%eax),%eax
add    %al,(%eax)
jg     8059d3e <_IO_stdin_used+0xae3a>
add    $0x8,%al
movb   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
movl   $0xf07f0000,(%eax)
add    $0x8,%al
enter  $0x0,$0x0
jg     8059d56 <_IO_stdin_used+0xae52>
add    $0x8,%al
leave
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lret   $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
lret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
int3
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
int    $0x0
add    %al,(%eax)
jg     8059d7e <_IO_stdin_used+0xae7a>
add    $0x8,%al
into
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
iret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
rolb   (%eax)
add    %al,(%eax)
jg     8059d96 <_IO_stdin_used+0xae92>
add    $0x8,%al
roll   (%eax)
add    %al,(%eax)
jg     8059d9e <_IO_stdin_used+0xae9a>
add    $0x8,%al
rolb   %cl,(%eax)
add    %al,(%eax)
jg     8059da6 <_IO_stdin_used+0xaea2>
add    $0x8,%al
roll   %cl,(%eax)
add    %al,(%eax)
jg     8059dae <_IO_stdin_used+0xaeaa>
add    $0x8,%al
aam    $0x0
add    %al,(%eax)
jg     8059db6 <_IO_stdin_used+0xaeb2>
add    $0x8,%al
aad    $0x0
add    %al,(%eax)
jg     8059dbe <_IO_stdin_used+0xaeba>
add    $0x8,%al
(bad)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
fadds  (%eax)
add    %al,(%eax)
jg     8059dd6 <_IO_stdin_used+0xaed2>
add    $0x8,%al
flds   (%eax)
add    %al,(%eax)
jg     8059dde <_IO_stdin_used+0xaeda>
add    $0x8,%al
fiaddl (%eax)
add    %al,(%eax)
jg     8059de6 <_IO_stdin_used+0xaee2>
add    $0x8,%al
fildl  (%eax)
add    %al,(%eax)
jg     8059dee <_IO_stdin_used+0xaeea>
add    $0x8,%al
faddl  (%eax)
add    %al,(%eax)
jg     8059df6 <_IO_stdin_used+0xaef2>
add    $0x8,%al
fldl   (%eax)
add    %al,(%eax)
jg     8059dfe <_IO_stdin_used+0xaefa>
add    $0x8,%al
fiadd  (%eax)
add    %al,(%eax)
jg     8059e06 <_IO_stdin_used+0xaf02>
add    $0x8,%al
fild   (%eax)
add    %al,(%eax)
jg     8059e0e <_IO_stdin_used+0xaf0a>
add    $0x8,%al
loopne 8059e22 <_IO_stdin_used+0xaf1e>
add    %al,(%eax)
jg     8059e16 <_IO_stdin_used+0xaf12>
add    $0x8,%al
loope  8059e2a <_IO_stdin_used+0xaf26>
add    %al,(%eax)
jg     8059e1e <_IO_stdin_used+0xaf1a>
add    $0x8,%al
loop   8059e32 <_IO_stdin_used+0xaf2e>
add    %al,(%eax)
jg     8059e26 <_IO_stdin_used+0xaf22>
add    $0x8,%al
jecxz  8059e3a <_IO_stdin_used+0xaf36>
add    %al,(%eax)
jg     8059e2e <_IO_stdin_used+0xaf2a>
add    $0x8,%al
in     $0x0,%al
add    %al,(%eax)
jg     8059e36 <_IO_stdin_used+0xaf32>
add    $0x8,%al
in     $0x0,%eax
add    %al,(%eax)
jg     8059e3e <_IO_stdin_used+0xaf3a>
add    $0x8,%al
out    %al,$0x0
add    %al,(%eax)
jg     8059e46 <_IO_stdin_used+0xaf42>
add    $0x8,%al
out    %eax,$0x0
add    %al,(%eax)
jg     8059e4e <_IO_stdin_used+0xaf4a>
add    $0x8,%al
call   87059e65 <optarg+0x7effc021>
lock add $0x8,%al
jmp    87059e6d <optarg+0x7effc029>
lock add $0x8,%al
ljmp   $0x4f0,$0x7f000000
or     %ch,%bl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %al,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %eax,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lock add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
icebp
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repnz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
hlt
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testb  $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
clc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cli
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sti
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cld
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
incb   (%eax)
add    %al,(%eax)
jg     8059f06 <_IO_stdin_used+0xb002>
add    $0x8,%al
incl   (%eax)
add    %al,(%eax)
jg     8059f0e <_IO_stdin_used+0xb00a>
add    $0x8,%al
mov    0x7f000000,%al
lock add $0x8,%al
add    $0x1,%al
add    %al,(%eax)
mov    (%edx),%dh
add    $0x2d808,%eax
add    %dl,(%eax)
xor    0x14108,%eax
add    %dl,-0x5bf7face(%edx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmp    $0x9a000001,%eax
xor    0x15a08,%al
add    %ah,-0x58f7face(%ecx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
test   $0x0,%al
add    %al,(%eax)
jg     8059f56 <_IO_stdin_used+0xb052>
add    $0x8,%al
pusha
add    %eax,(%eax)
add    %ah,0x32(%eax)
add    $0x15e08,%eax
add    %ch,0x64080532(%eax)
add    %eax,(%eax)
add    %dh,0x79080532(%ecx)
add    %eax,(%eax)
add    %bh,-0x52f7face(%eax)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jge    8059f93 <_IO_stdin_used+0xb08f>
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
xor    0x17b08,%al
add    %bh,-0x4ff7face(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
add    $0xc9000001,%eax
xor    0x2db08,%al
add    %cl,0x42080532(%ebx)
add    %eax,(%eax)
add    %dl,%cl
xor    0xb408,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
add    %eax,%ds:(%eax)
add    %bl,%cl
xor    0x15b08,%al
add    %ah,%al
xor    0x2c708,%al
add    %ah,0xb8080533
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
popa
add    %eax,(%eax)
add    %ah,0x32(%edi)
add    $0x15f08,%eax
add    %ah,%bh
xor    0x16508,%al
add    %dh,%al
xor    0x17a08,%al
add    %dh,%bh
xor    0x2dd08,%al
add    %bl,0x33(%eax)
add    $0x17e08,%eax
add    %dh,0x32(%ebp)
add    $0x17c08,%eax
add    %bh,%dh
xor    0x15408,%al
add    %cl,(%eax)
xor    0xc108,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
ret    $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
add    (%ecx),%al
add    %al,(%eax)
rdpmc
add    $0xc408,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
cmp    %eax,(%ecx)
add    %al,(%eax)
push   %ss
xor    0x10608,%eax
add    %bl,0xc7080533
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
or     $0x1,%al
add    %al,(%eax)
and    $0x33,%al
add    $0xc908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    %al,(%ecx)
add    %al,(%eax)
sub    (%ebx),%esi
add    $0xcb08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    (%ecx),%al
add    %al,(%eax)
xor    (%ebx),%esi
add    $0xcd08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
into
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %cs
add    %eax,(%eax)
add    %bh,(%edx)
xor    0x11008,%eax
add    %al,0x33(%ecx)
add    $0x14308,%eax
add    %cl,0x33(%ecx)
add    $0x14708,%eax
add    %dl,0x33(%eax)
add    $0xd308,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
aam    $0x0
add    %al,(%eax)
jg     805a0b6 <_IO_stdin_used+0xb1b2>
add    $0x8,%al
push   %eax
add    %eax,(%eax)
add    %dl,0x33(%edi)
add    $0xd608,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %eax
add    %eax,(%eax)
add    %ah,0x5(%ebx,%esi,1)
or     %ch,0x1(%esi)
add    %al,(%eax)
imul   $0x5,(%ebx),%esi
or     %bl,%dl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jo     805a0fb <_IO_stdin_used+0xb1f7>
add    %al,(%eax)
jno    805a131 <_IO_stdin_used+0xb22d>
add    $0xdc08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
fldl   (%eax)
add    %al,(%eax)
jg     805a0fe <_IO_stdin_used+0xb1fa>
add    $0x8,%al
bound  %eax,(%ecx)
add    %al,(%eax)
jle    805a149 <_IO_stdin_used+0xb245>
add    $0xdf08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ebp
add    %eax,(%eax)
add    %al,-0x1ef7facd(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
loop   805a132 <_IO_stdin_used+0xb22e>
add    %al,(%eax)
jg     805a126 <_IO_stdin_used+0xb222>
add    $0x8,%al
add    (%ecx),%eax
add    %al,(%eax)
mov    (%ebx),%?
add    $0xe408,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
cmp    (%ecx),%al
add    %al,(%eax)
xchg   %eax,%ebp
xor    0x10708,%eax
add    %bl,0xe70805(%ebx,%esi,1)
add    %al,(%eax)
jg     805a14e <_IO_stdin_used+0xb24a>
add    $0x8,%al
or     $0xa3000001,%eax
xor    0xe908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    %eax,(%ecx)
add    %al,(%eax)
stos   %al,%es:(%edi)
xor    0xeb08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    (%ecx),%eax
add    %al,(%eax)
mov    $0x33,%dl
add    $0xed08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %al,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sgdtl  (%eax)
add    %bh,0x11080533(%ecx)
add    %eax,(%eax)
add    %al,%al
xor    0x14408,%eax
add    %cl,%al
xor    0x14808,%eax
add    %cl,%bh
xor    0xf308,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
hlt
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ecx
add    %eax,(%eax)
add    %dl,%dh
xor    0xf608,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
pop    %ecx
add    %eax,(%eax)
add    %ah,%bl
xor    0x16f08,%eax
add    %ch,%dl
xor    0xfa08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
jno    805a1fb <_IO_stdin_used+0xb2f7>
add    %al,(%eax)
lock xor 0xfc08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
std
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
arpl   %ax,(%ecx)
add    %al,(%eax)
std
xor    0x2d908,%eax
add    %dl,0x34(%ebp)
add    $0xa008,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
add    %eax,%es:(%eax)
add    %al,(%esi)
xor    $0x5,%al
or     %bl,%al
add    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    %eax,0x7f000000
lock add $0x8,%al
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
and    $0x1,%al
add    %al,(%eax)
push   %cs
xor    $0x5,%al
or     %ah,0x7f000000(%edi)
lock add $0x8,%al
test   $0x0,%al
add    %al,(%eax)
jg     805a256 <_IO_stdin_used+0xb352>
add    $0x8,%al
xor    %al,(%ecx)
add    %al,(%eax)
dec    %ebp
sub    0x15e08,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ds
add    %eax,(%eax)
add    %bl,(%edx)
xor    $0x5,%al
or     %dh,(%ecx,%eax,1)
add    %al,(%eax)
and    %esi,0xad08(,%eax,1)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jnp    805a29b <_IO_stdin_used+0xb397>
add    %al,(%eax)
jg     805a28e <_IO_stdin_used+0xb38a>
add    $0x8,%al
mov    $0x0,%al
add    %al,(%eax)
jg     805a296 <_IO_stdin_used+0xb392>
add    $0x8,%al
daa
add    %eax,(%eax)
add    %ch,0xb2080534
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%bl
add    %al,(%eax)
jg     805a2ae <_IO_stdin_used+0xb3aa>
add    $0x8,%al
mov    $0x0,%ah
add    %al,(%eax)
jg     805a2b6 <_IO_stdin_used+0xb3b2>
add    $0x8,%al
mov    $0x0,%ch
add    %al,(%eax)
jg     805a2be <_IO_stdin_used+0xb3ba>
add    $0x8,%al
and    $0x35000001,%eax
xor    $0x5,%al
or     %dh,0x7f000000(%edi)
lock add $0x8,%al
mov    $0x7f000000,%eax
lock add $0x8,%al
xor    %eax,(%ecx)
add    %al,(%eax)
pusha
sub    0x15f08,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ds
add    %eax,(%eax)
add    %al,0x34(%ecx)
add    $0x13508,%eax
add    %cl,0x34(%eax)
add    $0xbd08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jl     805a31b <_IO_stdin_used+0xb417>
add    %al,(%eax)
jg     805a30e <_IO_stdin_used+0xb40a>
add    $0x8,%al
rolb   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
roll   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
ret    $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
les    (%eax),%eax
add    %al,(%eax)
jg     805a336 <_IO_stdin_used+0xb432>
add    $0x8,%al
or     (%ecx),%al
add    %al,(%eax)
push   %esp
xor    $0x5,%al
or     %cl,(%eax)
add    %eax,(%eax)
add    %bl,0x34(%esi)
add    $0xc708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
enter  $0x0,$0x0
jg     805a356 <_IO_stdin_used+0xb452>
add    $0x8,%al
leave
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lret   $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
lret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
int3
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
int    $0x0
add    %al,(%eax)
jg     805a37e <_IO_stdin_used+0xb47a>
add    $0x8,%al
into
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
iret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
roll   (%eax)
add    %al,(%eax)
jg     805a39e <_IO_stdin_used+0xb49a>
add    $0x8,%al
rolb   %cl,(%eax)
add    %al,(%eax)
jg     805a3a6 <_IO_stdin_used+0xb4a2>
add    $0x8,%al
roll   %cl,(%eax)
add    %al,(%eax)
jg     805a3ae <_IO_stdin_used+0xb4aa>
add    $0x8,%al
aam    $0x0
add    %al,(%eax)
jg     805a3b6 <_IO_stdin_used+0xb4b2>
add    $0x8,%al
and    %al,(%ecx)
add    %al,(%eax)
push   $0x34
add    $0xd608,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    $0x1,%al
add    %al,(%eax)
je     805a41a <_IO_stdin_used+0xb516>
add    $0xd908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
fiaddl (%eax)
add    %al,(%eax)
jg     805a3e6 <_IO_stdin_used+0xb4e2>
add    $0x8,%al
fildl  (%eax)
add    %al,(%eax)
jg     805a3ee <_IO_stdin_used+0xb4ea>
add    $0x8,%al
faddl  (%eax)
add    %al,(%eax)
jg     805a3f6 <_IO_stdin_used+0xb4f2>
add    $0x8,%al
insb   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %al,0x5c080534(%eax)
add    %eax,(%eax)
add    %al,-0x20f7facc(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
loopne 805a422 <_IO_stdin_used+0xb51e>
add    %al,(%eax)
jg     805a416 <_IO_stdin_used+0xb512>
add    $0x8,%al
loope  805a42a <_IO_stdin_used+0xb526>
add    %al,(%eax)
jg     805a41e <_IO_stdin_used+0xb51a>
add    $0x8,%al
loop   805a432 <_IO_stdin_used+0xb52e>
add    %al,(%eax)
jg     805a426 <_IO_stdin_used+0xb522>
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     $0x0,%al
add    %al,(%eax)
jg     805a436 <_IO_stdin_used+0xb532>
add    $0x8,%al
or     (%ecx),%eax
add    %al,(%eax)
xchg   %eax,%ebx
xor    $0x5,%al
or     %cl,(%ecx)
add    %eax,(%eax)
add    %bl,-0x18f7facc(%ebp)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
call   8705a465 <optarg+0x7effc621>
lock add $0x8,%al
jmp    8705a46d <optarg+0x7effc629>
lock add $0x8,%al
ljmp   $0x4f0,$0x7f000000
or     %ch,%bl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %al,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %eax,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
icebp
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repnz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
hlt
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
and    %eax,(%ecx)
add    %al,(%eax)
test   $0xf6080534,%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
sbb    $0xb3000001,%eax
xor    $0x5,%al
or     %bh,%cl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cli
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sti
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cld
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
insl   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %bh,0x5d080534(%edi)
add    %eax,(%eax)
add    %al,%dh
xor    $0x5,%al
or     %bl,%cl
add    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    0x7f000000,%al
lock add $0x8,%al
add    $0x1,%al
add    %al,(%eax)
jg     805a51e <_IO_stdin_used+0xb61a>
add    $0x8,%al
cmp    %al,(%ecx)
add    %al,(%eax)
(bad)
xor    $0x5,%al
or     %dl,0x1(%esi)
add    %al,(%eax)
(bad)
xor    $0x5,%al
or     %ah,-0xf810000(%eax,%eax,1)
add    $0x8,%al
sub    %al,(%ecx)
add    %al,(%eax)
fbstp  0x13b08(,%eax,1)
add    %ah,%dh
xor    $0x5,%al
or     %ah,0x7f000000(%edi)
lock add $0x8,%al
test   $0x0,%al
add    %al,(%eax)
jg     805a556 <_IO_stdin_used+0xb652>
add    $0x8,%al
pusha
add    %eax,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
adc    (%ecx),%al
add    %al,(%eax)
out    %eax,(%dx)
xor    $0x5,%al
or     %ah,(%edx)
add    %eax,(%eax)
add    %dh,%bh
xor    $0x5,%al
or     %ah,0x1(%esi)
add    %al,(%eax)
add    %dh,0xad0805
add    %al,(%eax)
jg     805a57e <_IO_stdin_used+0xb67a>
add    $0x8,%al
jge    805a593 <_IO_stdin_used+0xb68f>
add    %al,(%eax)
jg     805a586 <_IO_stdin_used+0xb682>
add    $0x8,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%al
add    %al,(%eax)
jg     805a596 <_IO_stdin_used+0xb692>
add    $0x8,%al
add    $0x7f000001,%eax
lock add $0x8,%al
fildl  (%edx)
add    %al,(%eax)
jg     805a5a6 <_IO_stdin_used+0xb6a2>
add    $0x8,%al
push   %edi
add    %eax,(%eax)
add    %al,(%edi)
xor    $0xb40805,%eax
add    %al,(%eax)
jg     805a5b6 <_IO_stdin_used+0xb6b2>
add    $0x8,%al
sub    %eax,(%ecx)
add    %al,(%eax)
loope  805a5f7 <_IO_stdin_used+0xb6f3>
add    $0x13c08,%eax
add    %dl,(%eax)
xor    $0x2c70805,%eax
add    %al,(%eax)
jg     805a5ce <_IO_stdin_used+0xb6ca>
add    $0x8,%al
mov    $0x7f000000,%eax
lock add $0x8,%al
popa
add    %eax,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
adc    (%ecx),%eax
add    %al,(%eax)
sbb    %esi,0x1230805
add    %al,(%eax)
and    %esi,0x1670805
add    %al,(%eax)
sub    0x14a0805,%dh
add    %al,(%eax)
xor    %esi,0x17e0805
add    %al,(%eax)
jg     805a606 <_IO_stdin_used+0xb702>
add    $0x8,%al
dec    %ebx
add    %eax,(%eax)
add    %dh,0x80535
add    %eax,(%eax)
add    %bh,(%ecx)
xor    $0xc10805,%eax
add    %al,(%eax)
jg     805a61e <_IO_stdin_used+0xb71a>
add    $0x8,%al
ret    $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
ret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
les    (%eax),%eax
add    %al,(%eax)
jg     805a636 <_IO_stdin_used+0xb732>
add    $0x8,%al
lds    (%eax),%eax
add    %al,(%eax)
jg     805a63e <_IO_stdin_used+0xb73a>
add    $0x8,%al
movb   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
add    %eax,%cs:(%eax)
add    %al,0x35(%ecx)
add    $0x10c08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
leave
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    %al,(%ecx)
add    %al,(%eax)
jg     805a666 <_IO_stdin_used+0xb762>
add    $0x8,%al
lret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ss
add    %eax,(%eax)
add    %cl,0x35(%ecx)
add    $0xcd08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
into
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sub    (%ecx),%al
add    %al,(%eax)
push   %ebx
xor    $0x1100805,%eax
add    %al,(%eax)
jg     805a696 <_IO_stdin_used+0xb792>
add    $0x8,%al
inc    %ebp
add    %eax,(%eax)
add    %bl,0x35(%ebx)
add    $0x14c08,%eax
add    %ah,0x5(%ebp,%esi,1)
or     %dh,(%esi)
add    %eax,(%eax)
add    %ch,0x5(%ebp,%esi,1)
or     %dl,%ah
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
aad    $0x0
add    %al,(%eax)
jg     805a6be <_IO_stdin_used+0xb7ba>
add    $0x8,%al
(bad)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
fadds  (%eax)
add    %al,(%eax)
jg     805a6d6 <_IO_stdin_used+0xb7d2>
add    $0x8,%al
jb     805a6eb <_IO_stdin_used+0xb7e7>
add    %al,(%eax)
jne    805a723 <_IO_stdin_used+0xb81f>
add    $0xda08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
fildl  (%eax)
add    %al,(%eax)
jg     805a6ee <_IO_stdin_used+0xb7ea>
add    $0x8,%al
faddl  (%eax)
add    %al,(%eax)
jg     805a6f6 <_IO_stdin_used+0xb7f2>
add    $0x8,%al
push   $0x7d000001
xor    $0x16a0805,%eax
add    %al,(%eax)
test   %dh,0xdf0805
add    %al,(%eax)
jg     805a70e <_IO_stdin_used+0xb80a>
add    $0x8,%al
add    %eax,(%ecx)
add    %al,(%eax)
mov    %?,0xe10805
add    %al,(%eax)
jg     805a71e <_IO_stdin_used+0xb81a>
add    $0x8,%al
loop   805a732 <_IO_stdin_used+0xb82e>
add    %al,(%eax)
jg     805a726 <_IO_stdin_used+0xb822>
add    $0x8,%al
jecxz  805a73a <_IO_stdin_used+0xb836>
add    %al,(%eax)
jg     805a72e <_IO_stdin_used+0xb82a>
add    $0x8,%al
in     $0x0,%al
add    %al,(%eax)
jg     805a736 <_IO_stdin_used+0xb832>
add    $0x8,%al
in     $0x0,%eax
add    %al,(%eax)
jg     805a73e <_IO_stdin_used+0xb83a>
add    $0x8,%al
out    %al,$0x0
add    %al,(%eax)
jg     805a746 <_IO_stdin_used+0xb842>
add    $0x8,%al
das
add    %eax,(%eax)
add    %dl,0x10d0805(%ebp,%esi,1)
add    %al,(%eax)
jg     805a756 <_IO_stdin_used+0xb852>
add    $0x8,%al
jmp    8705a76d <optarg+0x7effc929>
lock add $0x8,%al
sbb    %eax,(%ecx)
add    %al,(%eax)
jg     805a766 <_IO_stdin_used+0xb862>
add    $0x8,%al
jmp    805a77a <_IO_stdin_used+0xb876>
add    %al,(%eax)
jg     805a76e <_IO_stdin_used+0xb86a>
add    $0x8,%al
pop    %ss
add    %eax,(%eax)
add    %bl,0xed0805(%ebp,%esi,1)
add    %al,(%eax)
jg     805a77e <_IO_stdin_used+0xb87a>
add    $0x8,%al
out    %al,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sub    (%ecx),%eax
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
xor    $0x1110805,%eax
add    %al,(%eax)
jg     805a796 <_IO_stdin_used+0xb892>
add    $0x8,%al
inc    %esi
add    %eax,(%eax)
add    %ch,0x4d080535(%esi)
add    %eax,(%eax)
add    %dh,0x37080535(%edi)
add    %eax,(%eax)
add    %bh,-0xbf7facb(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testb  $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
clc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jae    805a7eb <_IO_stdin_used+0xb8e7>
add    %al,(%eax)
enter  $0x535,$0x8
cli
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sti
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cld
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
imul   $0x35d00000,(%ecx),%eax
add    $0x16b08,%eax
add    %dl,%bh
xor    $0x2d90805,%eax
add    %al,(%eax)
jg     805a80e <_IO_stdin_used+0xb90a>
add    $0x8,%al
mov    0x78000000,%al
sub    0x40108,%al
add    %bl,%bh
xor    $0x4020805,%eax
add    %al,(%eax)
sub    $0x6c,%al
add    $0x40308,%eax
add    %bl,0x6c(%eax)
add    $0x40408,%eax
add    %al,0x508056c(%eax)
add    $0x0,%al
add    %ch,0x608056c(%eax)
add    $0x0,%al
add    %dl,(%eax)
imul   $0x0,0x40708,%eax
shrb   0x8(%ebp,%eax,1)
or     %al,(%eax,%eax,1)
add    %bh,%dl
xor    $0x4090805,%eax
add    %al,(%eax)
adc    $0xa080536,%eax
add    $0x0,%al
add    %dh,(%ecx)
ss
add    $0x40b08,%eax
add    %bh,%al
insb   (%dx),%es:(%edi)
add    $0x40c08,%eax
add    %ah,0xad0805(,%ebp,2)
add    %al,(%eax)
mov    0xe08052a,%eax
add    $0x0,%al
add    %cl,0x5(%ebp,%ebp,2)
or     %cl,(%edi)
add    $0x0,%al
add    %cl,0x36(%ebp)
add    $0x41008,%eax
add    %ch,0x36(%ecx)
add    $0x41108,%eax
add    %al,0x12080536(%ebx)
add    $0x0,%al
add    %bl,0x13080536(%esi)
add    $0x0,%al
add    %bh,%dl
sub    0x41408,%al
add    %bh,0x15080536(%ecx)
add    $0x0,%al
add    %dl,%ah
ss
add    $0x41608,%eax
add    %ch,%bh
ss
add    $0x41708,%eax
add    %cl,(%ebx)
aaa
add    $0x41808,%eax
add    %dh,%cl
sub    0x41908,%eax
add    %bh,0x5(%ebx,%ebp,2)
or     %bl,(%edx)
add    $0x0,%al
add    %ah,(%esi)
aaa
add    $0x41b08,%eax
add    %al,0x37(%ecx)
add    $0x41c08,%eax
add    %bl,0x5(%edi,%esi,1)
or     %bl,0x77000004
aaa
add    $0x41e08,%eax
add    %dl,0x1f080537(%edx)
add    $0x0,%al
add    %ch,0x4200805(%edi,%esi,1)
add    %al,(%eax)
(bad)
aaa
add    $0x42108,%eax
add    %ah,%dl
aaa
add    $0x42208,%eax
add    %bh,%ch
aaa
add    $0x42308,%eax
add    %bl,(%eax)
cmp    %al,0x42408
add    %dh,(%edx)
cmp    %al,0x42508
add    %al,%ah
sub    0x42608,%al
add    %cl,0x38(%ebp)
add    $0x42708,%eax
add    %ch,0x38(%ecx)
add    $0x42808,%eax
add    %al,0x29080538(%ebp)
add    $0x0,%al
add    %ah,0x2a080538(%ecx)
add    $0x0,%al
add    %bh,0x2b080538(%edi)
add    $0x0,%al
add    %bl,0x2c08052b(%edi)
add    $0x0,%al
add    %bl,%dl
cmp    %al,0x42d08
add    %bh,0x42e0805(%ebx,%ebp,1)
add    %al,(%eax)
sub    (%di),%eax
or     %ch,(%edi)
add    $0x0,%al
add    %dh,(%ecx)
sub    0x43008,%eax
add    %dh,%ch
cmp    %al,0x43108
add    %cl,0x32080539
add    $0x0,%al
add    %ah,(%esi)
cmp    %eax,0x43308
add    %dl,0x2c(%edi)
add    $0x43408,%eax
add    %bh,(%edi)
cmp    %eax,0x43508
add    %bl,0x39(%eax)
add    $0x43608,%eax
add    %dh,0x39(%ecx)
add    $0x43708,%eax
add    %cl,0x38080539(%ebx)
add    $0x0,%al
add    %bh,0x4390805(,%ebp,1)
add    %al,(%eax)
push   %esp
sub    $0x43a0805,%eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %eax,0x43b08
add    %bh,0x3c080539(%ebp)
add    $0x0,%al
add    %dl,%dh
cmp    %eax,0x43d08
add    %ch,%bh
cmp    %eax,0x43e08
add    %cl,(%eax)
cmp    0x43f08,%al
add    %ah,(%eax)
cmp    0x44008,%al
add    %bh,(%ecx)
cmp    0x44108,%al
add    %dl,0x3a(%edx)
add    $0x44208,%eax
add    %ch,0x3a(%ebx)
add    $0x44308,%eax
add    %al,0x4440805(%edx,%edi,1)
add    %al,(%eax)
pushf
cmp    0x44508,%al
add    %ah,0x4608052c
add    $0x0,%al
add    %dh,0x4708053a(%ebp)
add    $0x0,%al
add    %cl,%bh
cmp    0x44808,%al
add    %ch,%cl
cmp    0x44908,%al
add    %al,(%ebx)
cmp    0x44a08,%eax
add    %bl,(%edi)
cmp    0x44b08,%eax
add    %dh,%al
sub    $0x5,%al
or     %cl,0x0(%esp,%eax,1)
add    %bh,(%eax)
cmp    0x44d08,%eax
add    %cl,(%ebx)
sub    $0x44e0805,%eax
add    %al,(%eax)
mov    $0x4f08052c,%esp
add    $0x0,%al
add    %cl,0x1608052c(%edx)
and    %eax,(%eax)
add    %dl,0x3b(%ecx)
add    $0x45108,%eax
add    %ah,0x3b(%eax)
add    $0x45208,%eax
add    %bh,0x5(%ebp,%ebp,2)
or     %dl,0x4(%ebx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
insl   (%dx),%es:(%edi)
add    $0x45408,%eax
add    %cl,%ah
insl   (%dx),%es:(%edi)
add    $0x45508,%eax
add    %dh,%al
insl   (%dx),%es:(%edi)
add    $0x45608,%eax
add    %al,%ah
imul   $0x0,0x45708,%eax
sbb    %ch,0x5(%esi)
or     %bl,0x4(%eax)
add    %al,(%eax)
jns    805ab21 <_IO_stdin_used+0xbc1d>
add    $0x45908,%eax
add    %dl,0x5a08053b(%edx)
add    $0x0,%al
add    %ch,0x45b0805(%ebx,%edi,1)
add    %al,(%eax)
cmp    $0x6e,%al
add    $0x45c08,%eax
add    %ch,0x6e(%eax)
add    $0xa708,%eax
add    %dl,0x45e0805(%edx,%ebp,1)
add    %al,(%eax)
nop
outsb  %ds:(%esi),(%dx)
add    $0x45f08,%eax
add    %al,%dh
cmp    0xa008,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0xe0000002,%ebp
cmp    0x2bc08,%eax
add    %ch,%dl
cmp    0xa308,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
test   $0x0,%al
add    %al,(%eax)
jg     805ab56 <_IO_stdin_used+0xbc52>
add    $0x8,%al
test   $0x7f000000,%eax
lock add $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stos   %eax,%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
adc    $0x7f000020,%eax
lock add $0x8,%al
mov    $0x0,%al
add    %al,(%eax)
jg     805ab96 <_IO_stdin_used+0xbc92>
add    $0x8,%al
mov    $0x0,%cl
add    %al,(%eax)
jg     805ab9e <_IO_stdin_used+0xbc9a>
add    $0x8,%al
mov    $0x0,%dl
add    %al,(%eax)
jg     805aba6 <_IO_stdin_used+0xbca2>
add    $0x8,%al
mov    $0x0,%bl
add    %al,(%eax)
jg     805abae <_IO_stdin_used+0xbcaa>
add    $0x8,%al
test   %al,(%ebx)
add    %al,(%eax)
inc    %ebp
cmp    $0x5,%al
or     %al,0x50000003(%ebp)
cmp    $0x5,%al
or     %al,-0xafffffd(%esi)
cmp    0xb708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    %al,(%ebx)
add    %al,(%eax)
add    %edi,0x38908(,%eax,1)
add    %cl,(%edi)
cmp    $0x5,%al
or     %cl,0x19000003(%edx)
cmp    $0x5,%al
or     %bh,-0x7e000000(%ebx)
sub    $0x38c0805,%eax
add    %al,(%eax)
and    $0x3c,%al
add    $0xbd08,%eax
add    %cl,0x30(%ecx)
add    $0x38e08,%eax
add    %dh,(%edx)
cmp    $0x5,%al
or     %cl,0x40000003(%edi)
cmp    $0x5,%al
or     %dl,0x4c000003(%eax)
cmp    $0x5,%al
or     %dl,0x60000003(%ecx)
cmp    $0x5,%al
or     %dl,0x66000003(%edx)
cmp    $0x5,%al
or     %dl,0x6b000003(%ebx)
cmp    $0x5,%al
or     %dl,0x3c710000(%ebx,%eax,1)
add    $0x39508,%eax
add    %dh,0x3c(%edi)
add    $0x39608,%eax
add    %bh,0x3c(%edi)
add    $0x39708,%eax
add    %al,0x3980805(%esp,%edi,1)
add    %al,(%eax)
mov    %bh,0x39908(,%eax,1)
add    %cl,-0x65f7fac4(%esi)
add    (%eax),%eax
add    %dl,-0x64f7fac4(%ebx)
add    (%eax),%eax
add    %al,%ah
sub    %eax,0x39c08
add    %bl,-0x62f7fac4(%ecx)
add    (%eax),%eax
add    %bl,0x39e0805(%esp,%edi,1)
add    %al,(%eax)
int    $0x29
add    $0x39f08,%eax
add    %bl,-0x5ff7fac4(%edi)
add    (%eax),%eax
add    %ah,-0x5ef7fac4(%edi)
add    (%eax),%eax
add    %ch,-0x2f7fac4(%edx)
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    %eax,0xae000003
cmp    $0x5,%al
or     %ah,0x3cb40000(%ebx,%eax,1)
add    $0x3a508,%eax
add    %bh,-0x59f7fac4(%eax)
add    (%eax),%eax
add    %al,%al
cmp    $0x5,%al
or     %ah,-0x26fffffd(%edi)
sub    %eax,0x3a808
add    %al,%ah
cmp    $0x5,%al
or     %ch,-0x37fffffd(%ecx)
cmp    $0x5,%al
or     %ch,-0x31fffffd(%edx)
cmp    $0x5,%al
or     %ch,-0x23fffffd(%ebx)
cmp    $0x5,%al
or     %ch,0x3ced0000(%ebx,%eax,1)
add    $0x3ad08,%eax
add    %bh,%cl
cmp    $0x5,%al
or     %ch,0x7000003(%esi)
cmp    $0x3af0805,%eax
add    %al,(%eax)
adc    %edi,0x3b00805
add    %al,(%eax)
sbb    $0x3d,%al
add    $0x3b108,%eax
add    %dh,(%ebx)
cmp    $0x3b20805,%eax
add    %al,(%eax)
cmp    %edi,0x3b30805
add    %al,(%eax)
ds
cmp    $0x3b40805,%eax
add    %al,(%eax)
inc    %esp
cmp    $0x3b50805,%eax
add    %al,(%eax)
dec    %edx
cmp    $0x3b60805,%eax
add    %al,(%eax)
push   %edx
cmp    $0x3b70805,%eax
add    %al,(%eax)
addr16 cmp $0x5,%al
or     %bh,0x57000003(%eax)
cmp    $0x3b90805,%eax
add    %al,(%eax)
pop    %ebp
cmp    $0x3ba0805,%eax
add    %al,(%eax)
bound  %edi,0x3bb0805
add    %al,(%eax)
mov    $0x29,%bh
add    $0x3bc08,%eax
add    %cl,0x45(%ebx)
add    $0x3bd08,%eax
add    %bh,0x4e(%ebx)
add    $0x3be08,%eax
add    %dl,%ah
inc    %edx
add    $0x3bf08,%eax
add    %ch,0x3d(%eax)
add    $0x3c008,%eax
add    %ch,0xc108055d
add    (%eax),%eax
add    %dh,0x3d(%eax)
add    $0x3c208,%eax
add    %dh,0x5(%ebp,%edi,1)
or     %al,%bl
add    (%eax),%eax
add    %bh,0x5(%ebp,%edi,1)
or     %al,%ah
add    (%eax),%eax
add    %al,-0x3af7fac3(%edx)
add    (%eax),%eax
add    %al,-0x39f7fac3(%esi)
add    (%eax),%eax
add    %al,-0x38f7faa6(%ecx)
add    (%eax),%eax
add    %dl,%cl
sub    %eax,0x3c808
add    %cl,-0x36f7fac3(%esi)
add    (%eax),%eax
add    %dl,-0x35f7fac3(%edx)
add    (%eax),%eax
add    %bl,-0x34f7fac3(%eax)
add    (%eax),%eax
add    %ah,-0x33f7fac3(%esi)
add    (%eax),%eax
add    %dh,-0x32f7fac3(%edi)
add    (%eax),%eax
add    %al,%ch
cmp    $0x3ce0805,%eax
add    %al,(%eax)
sarl   %cl,0xfffd0805
add    %al,(%eax)
jg     805ae0e <_IO_stdin_used+0xbf0a>
add    $0x8,%al
mov    0x7f000000,%al
lock add $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    %al,0x7f000000
lock add $0x8,%al
mov    %eax,0x7f000000
lock add $0x8,%al
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
test   $0x0,%al
add    %al,(%eax)
jg     805ae56 <_IO_stdin_used+0xbf52>
add    $0x8,%al
test   $0x7f000000,%eax
lock add $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %cl,%ch
sub    %al,0xab08
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
scas   %es:(%edi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
and    %al,%ds:(%eax)
add    %bl,%bh
cmp    $0xb00805,%eax
add    %al,(%eax)
jg     805ae96 <_IO_stdin_used+0xbf92>
add    $0x8,%al
mov    $0x0,%cl
add    %al,(%eax)
jg     805ae9e <_IO_stdin_used+0xbf9a>
add    $0x8,%al
mov    $0x0,%dl
add    %al,(%eax)
jg     805aea6 <_IO_stdin_used+0xbfa2>
add    $0x8,%al
mov    $0x0,%bl
add    %al,(%eax)
jg     805aeae <_IO_stdin_used+0xbfaa>
add    $0x8,%al
mov    $0x0,%ah
add    %al,(%eax)
jg     805aeb6 <_IO_stdin_used+0xbfb2>
add    $0x8,%al
mov    $0x0,%ch
add    %al,(%eax)
jg     805aebe <_IO_stdin_used+0xbfba>
add    $0x8,%al
mov    $0x0,%dh
add    %al,(%eax)
jg     805aec6 <_IO_stdin_used+0xbfc2>
add    $0x8,%al
mov    $0x0,%bh
add    %al,(%eax)
jg     805aece <_IO_stdin_used+0xbfca>
add    $0x8,%al
mov    $0x7f000000,%eax
lock add $0x8,%al
mov    $0x7f000000,%ecx
lock add $0x8,%al
testl  $0x320e0000,(%eax)
add    $0xbb08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x7f000000,%esp
lock add $0x8,%al
mov    $0x7f000000,%ebp
lock add $0x8,%al
mov    $0x7f000000,%esi
lock add $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ss
and    %al,(%eax)
add    %ch,%cl
cmp    $0x5d00805,%eax
add    %al,(%eax)
cli
cmp    $0x5d10805,%eax
add    %al,(%eax)
(bad)
cmp    $0x5d20805,%eax
add    %al,(%eax)
add    (%esi),%edi
add    $0x5d308,%eax
add    %cl,(%ecx)
ds
add    $0x5d408,%eax
add    %ch,-0x2af7fabd(%esi)
add    $0x3e0f0000,%eax
add    $0x5d608,%eax
add    %dl,(%ebx)
ds
add    $0x5d708,%eax
add    %bh,%al
inc    %edx
add    $0x5d808,%eax
add    %bl,(%ecx)
ds
add    $0x5d908,%eax
add    %bl,0xda08053e
add    $0x3e210000,%eax
add    $0x5db08,%eax
add    %ah,(%esi)
ds
add    $0x5dc08,%eax
add    %ch,(%edx)
ds
add    $0x5dd08,%eax
add    %dh,(%eax)
ds
add    $0x5de08,%eax
add    %dh,0xdf08053e
add    $0x3e390000,%eax
add    $0x5e008,%eax
add    %bh,(%esi)
ds
add    $0x5e108,%eax
add    %al,0x3e(%edx)
add    $0x5e208,%eax
add    %dl,(%esi,%edi,1)
add    $0x5e308,%eax
add    %cl,0x3e(%ecx)
add    $0x5e408,%eax
add    %ch,0x5d(%esi)
add    $0x5e508,%eax
add    %dl,0x3e(%ecx)
add    $0x5e608,%eax
add    %dl,0x3e(%esi)
add    $0x5e708,%eax
add    %bl,0x5(%esi,%edi,1)
or     %ch,%al
add    $0x3e600000,%eax
add    $0x5e908,%eax
add    %ah,0x3e(%ebp)
add    $0x5ea08,%eax
add    %ch,0x3e(%edx)
add    $0xfffd08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ds
add    %eax,(%eax)
add    %bl,(%edx)
xor    $0x5,%al
or     %dl,%cl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
rolb   %cl,(%eax)
add    %al,(%eax)
jg     805b126 <_IO_stdin_used+0xc222>
add    $0x8,%al
roll   %cl,(%eax)
add    %al,(%eax)
jg     805b12e <_IO_stdin_used+0xc22a>
add    $0x8,%al
aam    $0x0
add    %al,(%eax)
jg     805b136 <_IO_stdin_used+0xc232>
add    $0x8,%al
aad    $0x0
add    %al,(%eax)
jg     805b13e <_IO_stdin_used+0xc23a>
add    $0x8,%al
(bad)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
fadds  (%eax)
add    %al,(%eax)
jg     805b156 <_IO_stdin_used+0xc252>
add    $0x8,%al
flds   (%eax)
add    %al,(%eax)
jg     805b15e <_IO_stdin_used+0xc25a>
add    $0x8,%al
fiaddl (%eax)
add    %al,(%eax)
jg     805b166 <_IO_stdin_used+0xc262>
add    $0x8,%al
fildl  (%eax)
add    %al,(%eax)
jg     805b16e <_IO_stdin_used+0xc26a>
add    $0x8,%al
faddl  (%eax)
add    %al,(%eax)
jg     805b176 <_IO_stdin_used+0xc272>
add    $0x8,%al
xor    %al,(%ecx)
add    %al,(%eax)
inc    %ebx
sub    0x15e08,%al
add    %ch,-0x20f7face(%eax)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
loopne 805b1a2 <_IO_stdin_used+0xc29e>
add    %al,(%eax)
jg     805b196 <_IO_stdin_used+0xc292>
add    $0x8,%al
loope  805b1aa <_IO_stdin_used+0xc2a6>
add    %al,(%eax)
jg     805b19e <_IO_stdin_used+0xc29a>
add    $0x8,%al
loop   805b1b2 <_IO_stdin_used+0xc2ae>
add    %al,(%eax)
jg     805b1a6 <_IO_stdin_used+0xc2a2>
add    $0x8,%al
jecxz  805b1ba <_IO_stdin_used+0xc2b6>
add    %al,(%eax)
jg     805b1ae <_IO_stdin_used+0xc2aa>
add    $0x8,%al
in     $0x0,%al
add    %al,(%eax)
jg     805b1b6 <_IO_stdin_used+0xc2b2>
add    $0x8,%al
in     $0x0,%eax
add    %al,(%eax)
jg     805b1be <_IO_stdin_used+0xc2ba>
add    $0x8,%al
out    %al,$0x0
add    %al,(%eax)
jg     805b1c6 <_IO_stdin_used+0xc2c2>
add    $0x8,%al
out    %eax,$0x0
add    %al,(%eax)
jg     805b1ce <_IO_stdin_used+0xc2ca>
add    $0x8,%al
call   8705b1e5 <optarg+0x7effd3a1>
lock add $0x8,%al
jmp    8705b1ed <optarg+0x7effd3a9>
lock add $0x8,%al
ljmp   $0x4f0,$0x7f000000
or     %ch,%bl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %al,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %eax,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ds
add    %eax,(%eax)
add    %al,0x34(%ecx)
add    $0xf108,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
repnz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
hlt
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testb  $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
clc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cli
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sti
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cld
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xor    %eax,(%ecx)
add    %al,(%eax)
push   %edi
sub    0x15f08,%al
add    %ah,%bh
xor    0xff08,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    0x78000000,%al
sub    0x10408,%al
add    %cl,0x12080532(%edx)
add    %eax,(%eax)
add    %ch,%bh
xor    $0x5,%al
or     %ah,(%edx)
add    %eax,(%eax)
add    %dh,%bh
xor    $0x5,%al
or     %ch,(%edx)
add    %eax,(%eax)
add    %dl,0x35(%ebx)
add    $0x12808,%eax
add    %bl,%bh
xor    $0x5,%al
or     %dh,(%esi)
add    %eax,(%eax)
add    %ch,0x5(%ebp,%esi,1)
or     %ah,-0x6c000000(%edi)
sub    0x13b08,%al
add    %ah,%dh
xor    $0x5,%al
or     %dl,(%eax)
add    %eax,(%eax)
add    %al,0x33(%ecx)
add    $0x16008,%eax
add    %ah,0x32(%eax)
add    $0x16608,%eax
add    %ch,0x3e(%esi)
add    $0x17d08,%eax
add    %ch,0x32(%esi)
add    $0xad08,%eax
add    %ah,0x6a08052a(%ecx)
add    %eax,(%eax)
add    %al,0x14a0805(%ebp,%esi,1)
add    %al,(%eax)
xor    %esi,0xb00805
add    %al,(%eax)
out    %al,(%dx)
das
add    $0x10508,%eax
add    %cl,%cl
xor    0x11308,%al
add    %bl,(%ecx)
xor    $0x1230805,%eax
add    %al,(%eax)
and    %esi,0x12b0805
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
xor    $0x1290805,%eax
add    %al,(%eax)
loope  805b377 <_IO_stdin_used+0xc473>
add    $0x13708,%eax
add    %bh,-0x48f7facb(%edi)
add    %al,(%eax)
add    %bl,(%ecx)
xor    %al,0x13c08
add    %dl,(%eax)
xor    $0x1110805,%eax
add    %al,(%eax)
(bad)
xor    0x16108,%eax
add    %ah,0x32(%edi)
add    $0x16708,%eax
add    %dh,0x3e(%esi)
add    $0x17e08,%eax
add    %dh,0x32(%ebp)
add    $0x201408,%eax
add    %bh,0x3e(%esi)
add    $0x16b08,%eax
add    %dl,%bh
xor    $0x14b0805,%eax
add    %al,(%eax)
xor    $0x80535,%eax
add    %eax,(%eax)
add    %bh,(%ecx)
xor    $0xc10805,%eax
add    %al,(%eax)
jae    805b3de <_IO_stdin_used+0xc4da>
add    $0xc208,%eax
add    %bh,0x30(%edx)
add    $0xc308,%eax
add    %al,-0x3bf7fad0(%esi)
add    %al,(%eax)
add    %cl,-0x3af7fad0(%ebp)
add    %al,(%eax)
add    %bl,-0x39f7fad0(%eax)
add    %al,(%eax)
add    %bl,0x2e080530(%esi)
add    %eax,(%eax)
add    %al,0x35(%ecx)
add    $0x10c08,%eax
add    %ah,(%ebx,%esi,1)
add    $0xc908,%eax
add    %dh,0x18080530(%ecx)
add    %eax,(%eax)
add    %ch,(%ebx)
xor    0xcb08,%eax
add    %al,%ah
xor    %al,0x11608
add    %cl,0x35(%ecx)
add    $0xcd08,%eax
add    %dl,%dh
xor    %al,0xce08
add    %bl,%ch
xor    %al,0xcf08
add    %ch,%cl
xor    %al,0xd008
add    %dh,%ah
xor    %al,0x14508
add    %bl,0x35(%ebx)
add    $0x14c08,%eax
add    %ah,0x5(%ebp,%esi,1)
or     %dl,%bl
add    %al,(%eax)
add    %al,(%esi)
xor    %eax,0xd408
add    %cl,0xd5080531
add    %al,(%eax)
add    %bl,(%ecx)
xor    %eax,0xd608
add    %ah,(%eax)
xor    %eax,0x16808
add    %bh,0x35(%ebp)
add    $0xd808,%eax
add    %al,0x7208053e(%ebp)
add    %eax,(%eax)
add    %dh,0x35(%ebp)
add    $0xda08,%eax
add    %dh,(%edx)
xor    %eax,0xdb08
add    %bh,(%ecx)
xor    %eax,0xdc08
add    %al,0x31(%ebp)
add    $0xdd08,%eax
add    %dl,0x31(%eax)
add    $0xde08,%eax
add    %dl,0x31(%edi)
add    $0xdf08,%eax
add    %bl,0x31(%ebp)
add    $0x10108,%eax
add    %cl,0xe10805(%ebp,%esi,1)
add    %al,(%eax)
imul   $0x5,(%ecx),%esi
or     %ah,%dl
add    %al,(%eax)
add    %dh,0x31(%edx)
add    $0xe308,%eax
add    %bh,0x31(%esi)
add    $0xe408,%eax
add    %dl,%cl
cmp    $0x5,%al
or     %ah,%ch
add    %al,(%eax)
add    %al,-0x19f7facf(%ebp)
add    %al,(%eax)
add    %cl,%dl
inc    %ecx
add    $0x12f08,%eax
add    %dl,0x10d0805(%ebp,%esi,1)
add    %al,(%eax)
mov    %eax,0xe9080533
add    %al,(%eax)
add    %bl,0x33(%ebp)
add    $0x11908,%eax
add    %ch,-0x14f7facd(%edx)
add    %al,(%eax)
add    %ah,0x17080531(%edi)
add    %eax,(%eax)
add    %bl,0xed0805(%ebp,%esi,1)
add    %al,(%eax)
mov    $0xee080531,%ecx
add    %al,(%eax)
add    %al,%al
xor    %eax,0xef08
add    %cl,%ah
xor    %eax,0xf008
add    %dl,%bh
xor    %eax,0x14608
add    %ch,0x4d080535(%esi)
add    %eax,(%eax)
add    %dh,-0xcf7facb(%edi)
add    %al,(%eax)
add    %ch,%cl
xor    %eax,0xf408
add    %dh,%al
xor    %eax,0xf508
add    %bh,%ah
xor    %eax,0xf608
add    %al,(%ebx)
xor    0x16908,%al
add    %dl,%al
xor    $0xf80805,%eax
add    %al,(%eax)
lea    (%esi),%edi
add    $0x17308,%eax
add    %cl,%al
xor    $0xfa0805,%eax
add    %al,(%eax)
and    $0xfb080532,%eax
add    %al,(%eax)
add    %ch,(%edx,%esi,1)
add    $0xfc08,%eax
add    %bh,(%eax)
xor    0xfd08,%al
add    %al,0x32(%ebx)
add    $0xfe08,%eax
add    %cl,0x32(%edx)
add    $0x13808,%eax
add    %dl,%dl
xor    $0x5,%al
or     %al,0x7f000000(%eax)
lock add $0x8,%al
addl   $0xf07f0000,(%eax)
add    $0x8,%al
(bad)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
addl   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
test   %al,(%eax)
add    %al,(%eax)
jg     805b5b6 <_IO_stdin_used+0xc6b2>
add    $0x8,%al
test   %eax,(%eax)
add    %al,(%eax)
jg     805b5be <_IO_stdin_used+0xc6ba>
add    $0x8,%al
add    $0xc9000001,%eax
xor    0x8708,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    %al,(%eax)
add    %al,(%eax)
jg     805b5d6 <_IO_stdin_used+0xc6d2>
add    $0x8,%al
mov    %eax,(%eax)
add    %al,(%eax)
jg     805b5de <_IO_stdin_used+0xc6da>
add    $0x8,%al
mov    (%eax),%al
add    %al,(%eax)
jg     805b5e6 <_IO_stdin_used+0xc6e2>
add    $0x8,%al
mov    (%eax),%eax
add    %al,(%eax)
jg     805b5ee <_IO_stdin_used+0xc6ea>
add    $0x8,%al
mov    %es,(%eax)
add    %al,(%eax)
jg     805b5f6 <_IO_stdin_used+0xc6f2>
add    $0x8,%al
pop    %es
add    %eax,(%eax)
add    %bl,0x8e0805(%ebx,%esi,1)
add    %al,(%eax)
jg     805b606 <_IO_stdin_used+0xc702>
add    $0x8,%al
add    $0x1,%al
add    %al,(%eax)
mov    (%edx),%dh
add    $0x11808,%eax
add    %ch,(%ebx)
xor    0x11908,%eax
add    %ch,0x42080533(%edx)
add    %eax,(%eax)
add    %dl,%cl
xor    0x9308,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
xchg   %eax,%esp
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %es
add    %eax,(%eax)
add    %bl,0x96080533
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xchg   %eax,%edi
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %edx
add    %eax,(%eax)
add    %ah,-0x66f7face(%ecx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lcall  $0x4f0,$0x7f000000
or     %bl,0x7f000000(%ebx)
lock add $0x8,%al
inc    %ecx
add    %eax,(%eax)
add    %dl,-0x62f7face(%edx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ebx
add    %eax,(%eax)
add    %ah,%al
xor    0x9f08,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
jns    805b6a3 <_IO_stdin_used+0xc79f>
add    %al,(%eax)
mov    $0x7b080532,%eax
add    %eax,(%eax)
add    %bh,-0xcf7face(%edi)
add    %al,(%eax)
add    %ch,%cl
xor    %eax,0xd308
add    %al,(%esi)
xor    %eax,0x14408
add    %cl,%al
xor    0x14308,%eax
add    %cl,0x33(%ecx)
add    $0x17a08,%eax
add    %dh,%bh
xor    0x17c08,%al
add    %bh,%dh
xor    0xa808,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
test   $0x7f000000,%eax
lock add $0x8,%al
stos   %al,%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stos   %eax,%es:(%edi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stos   %eax,%es:(%edi)
add    %al,(%eax)
add    %cl,%ch
das
add    $0xbb08,%eax
add    %al,-0x4ff7fad3(%edx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%cl
add    %al,(%eax)
jg     805b71e <_IO_stdin_used+0xc81a>
add    $0x8,%al
mov    $0x0,%dl
add    %al,(%eax)
jg     805b726 <_IO_stdin_used+0xc822>
add    $0x8,%al
mov    $0x0,%bl
add    %al,(%eax)
jg     805b72e <_IO_stdin_used+0xc82a>
add    $0x8,%al
mov    $0x0,%ah
add    %al,(%eax)
jg     805b736 <_IO_stdin_used+0xc832>
add    $0x8,%al
mov    $0x0,%ch
add    %al,(%eax)
jg     805b73e <_IO_stdin_used+0xc83a>
add    $0x8,%al
mov    $0x0,%dh
add    %al,(%eax)
jg     805b746 <_IO_stdin_used+0xc842>
add    $0x8,%al
mov    $0x0,%bh
add    %al,(%eax)
jg     805b74e <_IO_stdin_used+0xc84a>
add    $0x8,%al
mov    $0x7f000000,%eax
lock add $0x8,%al
mov    $0x7f000000,%ecx
lock add $0x8,%al
mov    $0x7f000000,%edx
lock add $0x8,%al
mov    $0x7f000000,%ebx
lock add $0x8,%al
mov    $0x7f000000,%esp
lock add $0x8,%al
mov    $0x7f000000,%ebp
lock add $0x8,%al
mov    $0x7f000000,%esi
lock add $0x8,%al
mov    $0x7f000000,%edi
lock add $0x8,%al
rolb   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
roll   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
ret    $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
ret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
les    (%eax),%eax
add    %al,(%eax)
jg     805b7b6 <_IO_stdin_used+0xc8b2>
add    $0x8,%al
lds    (%eax),%eax
add    %al,(%eax)
jg     805b7be <_IO_stdin_used+0xc8ba>
add    $0x8,%al
movb   $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
movl   $0xf07f0000,(%eax)
add    $0x8,%al
enter  $0x0,$0x0
jg     805b7d6 <_IO_stdin_used+0xc8d2>
add    $0x8,%al
leave
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lret   $0x0
add    %bh,-0x10(%edi)
add    $0x8,%al
lret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
int3
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
int    $0x0
add    %al,(%eax)
jg     805b7fe <_IO_stdin_used+0xc8fa>
add    $0x8,%al
into
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
iret
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
rolb   (%eax)
add    %al,(%eax)
jg     805b816 <_IO_stdin_used+0xc912>
add    $0x8,%al
roll   (%eax)
add    %al,(%eax)
jg     805b81e <_IO_stdin_used+0xc91a>
add    $0x8,%al
rolb   %cl,(%eax)
add    %al,(%eax)
jg     805b826 <_IO_stdin_used+0xc922>
add    $0x8,%al
roll   %cl,(%eax)
add    %al,(%eax)
jg     805b82e <_IO_stdin_used+0xc92a>
add    $0x8,%al
aam    $0x0
add    %al,(%eax)
jg     805b836 <_IO_stdin_used+0xc932>
add    $0x8,%al
aad    $0x0
add    %al,(%eax)
jg     805b83e <_IO_stdin_used+0xc93a>
add    $0x8,%al
(bad)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
fadds  (%eax)
add    %al,(%eax)
jg     805b856 <_IO_stdin_used+0xc952>
add    $0x8,%al
flds   (%eax)
add    %al,(%eax)
jg     805b85e <_IO_stdin_used+0xc95a>
add    $0x8,%al
fiaddl (%eax)
add    %al,(%eax)
jg     805b866 <_IO_stdin_used+0xc962>
add    $0x8,%al
fildl  (%eax)
add    %al,(%eax)
jg     805b86e <_IO_stdin_used+0xc96a>
add    $0x8,%al
faddl  (%eax)
add    %al,(%eax)
jg     805b876 <_IO_stdin_used+0xc972>
add    $0x8,%al
fldl   (%eax)
add    %al,(%eax)
jg     805b87e <_IO_stdin_used+0xc97a>
add    $0x8,%al
fiadd  (%eax)
add    %al,(%eax)
jg     805b886 <_IO_stdin_used+0xc982>
add    $0x8,%al
fild   (%eax)
add    %al,(%eax)
jg     805b88e <_IO_stdin_used+0xc98a>
add    $0x8,%al
loopne 805b8a2 <_IO_stdin_used+0xc99e>
add    %al,(%eax)
jg     805b896 <_IO_stdin_used+0xc992>
add    $0x8,%al
loope  805b8aa <_IO_stdin_used+0xc9a6>
add    %al,(%eax)
jg     805b89e <_IO_stdin_used+0xc99a>
add    $0x8,%al
loop   805b8b2 <_IO_stdin_used+0xc9ae>
add    %al,(%eax)
jg     805b8a6 <_IO_stdin_used+0xc9a2>
add    $0x8,%al
jecxz  805b8ba <_IO_stdin_used+0xc9b6>
add    %al,(%eax)
jg     805b8ae <_IO_stdin_used+0xc9aa>
add    $0x8,%al
in     $0x0,%al
add    %al,(%eax)
jg     805b8b6 <_IO_stdin_used+0xc9b2>
add    $0x8,%al
in     $0x0,%eax
add    %al,(%eax)
jg     805b8be <_IO_stdin_used+0xc9ba>
add    $0x8,%al
out    %al,$0x0
add    %al,(%eax)
jg     805b8c6 <_IO_stdin_used+0xc9c2>
add    $0x8,%al
out    %eax,$0x0
add    %al,(%eax)
jg     805b8ce <_IO_stdin_used+0xc9ca>
add    $0x8,%al
call   8705b8e5 <optarg+0x7effdaa1>
lock add $0x8,%al
jmp    8705b8ed <optarg+0x7effdaa9>
lock add $0x8,%al
ljmp   $0x4f0,$0x7f000000
or     %ch,%bl
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
in     (%dx),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %al,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
out    %eax,(%dx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lock add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
icebp
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repnz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
repz add %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
hlt
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cmc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testb  $0x0,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
clc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
stc
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cli
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sti
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
cld
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
std
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
incb   (%eax)
add    %al,(%eax)
jg     805b986 <_IO_stdin_used+0xca82>
add    $0x8,%al
push   %ds
and    %al,(%eax)
add    %dl,-0x53f7fac2(%ebp)
and    %al,(%eax)
add    %bl,0x32(%ebx)
add    $0xfffd08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    (%eax),%ah
add    %al,(%eax)
jg     805b9a6 <_IO_stdin_used+0xcaa2>
add    $0x8,%al
std
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ds
and    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
and    %al,%es:(%eax)
add    %ah,0x2008053e(%edx)
and    %al,(%eax)
add    %dh,0x2108053e(%ecx)
and    %al,(%eax)
add    %ch,-0x2f7fac2(%ebx)
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
xor    %ah,(%eax)
add    %al,(%eax)
mov    $0x6008053e,%eax
add    %eax,(%eax)
add    %ah,0x32(%eax)
add    $0x203908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %edx
add    %eax,(%eax)
add    %ah,0x64080532(%ecx)
add    %eax,(%eax)
add    %dh,0x7d080532(%ecx)
add    %eax,(%eax)
add    %ch,0x32(%esi)
add    $0x17908,%eax
add    %bh,-0x2f7face(%eax)
incl   (%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    %ah,(%eax)
add    %al,(%eax)
jg     805ba1e <_IO_stdin_used+0xcb1a>
add    $0x8,%al
sbb    %esp,(%eax)
add    %al,(%eax)
jg     805ba26 <_IO_stdin_used+0xcb22>
add    $0x8,%al
sbb    $0x20,%al
add    %al,(%eax)
jg     805ba2e <_IO_stdin_used+0xcb2a>
add    $0x8,%al
sbb    $0x7f000020,%eax
lock add $0x8,%al
and    (%eax),%ah
add    %al,(%eax)
sarl   $0x5,(%esi)
or     %dl,(%ebx)
and    %al,(%eax)
add    %cl,%al
ds
add    $0x201408,%eax
add    %bh,0x3e(%esi)
add    $0xfffd08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
and    (%ecx),%ah
add    %al,(%eax)
iret
ds
add    $0x16108,%eax
add    %ah,0x32(%edi)
add    $0x203a08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ebx
add    %eax,(%eax)
add    %ah,%al
xor    0x16508,%al
add    %dh,%al
xor    0x17e08,%al
add    %dh,0x32(%ebp)
add    $0x17a08,%eax
add    %dh,%bh
xor    0xa008,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
movl   $0x33250000,(%edx)
add    $0x2d808,%eax
add    %dl,(%eax)
xor    0x14108,%eax
add    %dl,-0x5bf7face(%edx)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
add    $0x1,%al
add    %al,(%eax)
mov    (%edx),%dh
add    $0xa608,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
test   $0x0,%al
add    %al,(%eax)
jg     805bad6 <_IO_stdin_used+0xcbd2>
add    $0x8,%al
test   $0x7f000000,%eax
lock add $0x8,%al
pop    %esi
add    %eax,(%eax)
add    %ch,-0x54f7face(%eax)
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
scas   %es:(%edi),%al
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
jnp    805bb1b <_IO_stdin_used+0xcc17>
add    %al,(%eax)
mov    $0xb0080532,%edi
add    %al,(%eax)
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%cl
add    %al,(%eax)
jg     805bb1e <_IO_stdin_used+0xcc1a>
add    $0x8,%al
fildl  (%edx)
add    %al,(%eax)
mov    (%edx),%esi
add    $0x14208,%eax
add    %dl,%cl
xor    0xb408,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x0,%ch
add    %al,(%eax)
jg     805bb3e <_IO_stdin_used+0xcc3a>
add    $0x8,%al
mov    $0x0,%dh
add    %al,(%eax)
jg     805bb46 <_IO_stdin_used+0xcc42>
add    $0x8,%al
mov    $0x0,%bh
add    %al,(%eax)
jg     805bb4e <_IO_stdin_used+0xcc4a>
add    $0x8,%al
mov    $0x7f000000,%eax
lock add $0x8,%al
add    $0xc9000001,%eax
xor    0x15f08,%al
add    %ah,%bh
xor    0xbb08,%al
add    %bh,-0x10(%edi)
add    $0x8,%al
cmp    $0x9a000001,%eax
xor    0x2dd08,%al
add    %bl,0x33(%eax)
add    $0x13e08,%eax
add    %bl,%cl
xor    0x17c08,%al
add    %bh,%dh
xor    0x15408,%al
add    %cl,(%eax)
xor    0xc108,%eax
add    %dh,0x30(%ebx)
add    $0xc208,%eax
add    %bh,0x30(%edx)
add    $0x10208,%eax
add    %cl,(%edi)
xor    0xc408,%eax
add    %cl,0x39080530(%ebp)
add    %eax,(%eax)
add    %dl,(%esi)
xor    0x10608,%eax
add    %bl,0xc7080533
add    %al,(%eax)
add    %ah,0xc080530(%ecx)
add    %eax,(%eax)
add    %ah,(%ebx,%esi,1)
add    $0xc908,%eax
add    %dh,0x18080530(%ecx)
add    %eax,(%eax)
add    %ch,(%ebx)
xor    0xcb08,%eax
add    %al,%ah
xor    %al,0x11a08
add    %dh,(%ebx)
xor    0xcd08,%eax
add    %dl,%dh
xor    %al,0xce08
add    %bl,%ch
xor    %al,0x10e08
add    %bh,(%edx)
xor    0x11008,%eax
add    %al,0x33(%ecx)
add    $0x14308,%eax
add    %cl,0x33(%ecx)
add    $0x14708,%eax
add    %dl,0x33(%eax)
add    $0xd308,%eax
add    %al,(%esi)
xor    %eax,0xd408
add    %cl,0x50080531
add    %eax,(%eax)
add    %dl,0x33(%edi)
add    $0xd608,%eax
add    %ah,(%eax)
xor    %eax,0xd708
add    %cl,%ch
sub    %al,0x15808
add    %ah,0x5(%ebx,%esi,1)
or     %ch,0x1(%esi)
add    %al,(%eax)
imul   $0x5,(%ebx),%esi
or     %bl,%dl
add    %al,(%eax)
add    %dh,(%edx)
xor    %eax,0x17008
add    %dh,0x33(%ecx)
add    $0xdc08,%eax
add    %al,0x31(%ebp)
add    $0xdd08,%eax
add    %dl,0x31(%eax)
add    $0x16208,%eax
add    %bh,0x33(%esi)
add    $0xdf08,%eax
add    %bl,0x31(%ebp)
add    $0x15508,%eax
add    %al,-0x1ef7facd(%edi)
add    %al,(%eax)
add    %ch,0x31(%ebx)
add    $0xe208,%eax
add    %dh,0x31(%edx)
add    $0x10308,%eax
add    %cl,-0x1bf7facd(%esi)
add    %al,(%eax)
add    %dl,%cl
cmp    $0x5,%al
or     %bh,(%edx)
add    %eax,(%eax)
add    %dl,0x7080533(%ebp)
add    %eax,(%eax)
add    %bl,0xe70805(%ebx,%esi,1)
add    %al,(%eax)
mov    (%ecx),%esi
add    $0x10d08,%eax
add    %ah,-0x16f7facd(%ebx)
add    %al,(%eax)
add    %bl,0x33(%ebp)
add    $0x11908,%eax
add    %ch,-0x14f7facd(%edx)
add    %al,(%eax)
add    %ah,0x1b080531(%edi)
add    %eax,(%eax)
add    %dh,-0x12f7facd(%edx)
add    %al,(%eax)
add    %bh,-0x11f7facf(%ecx)
add    %al,(%eax)
add    %al,%al
xor    %eax,0x10f08
add    %bh,0x11080533(%ecx)
add    %eax,(%eax)
add    %al,%al
xor    0x14408,%eax
add    %cl,%al
xor    0x14808,%eax
add    %cl,%bh
xor    0xf308,%eax
add    %ch,%cl
xor    %eax,0xf408
add    %dh,%al
xor    %eax,0x15108
add    %dl,%dh
xor    0xf608,%eax
add    %al,(%ebx)
xor    0xf708,%al
add    %cl,(%esi)
xor    0x15908,%al
add    %ah,%bl
xor    0x16f08,%eax
add    %ch,%dl
xor    0xfa08,%eax
add    %ah,0x71080532
add    %eax,(%eax)
add    %dh,%al
xor    0xfc08,%eax
add    %bh,(%eax)
xor    0xfd08,%al
add    %al,0x32(%ebx)
add    $0x16308,%eax
add    %bh,%ch
xor    0x2d908,%eax
add    %dl,0x34(%ebp)
add    $0x250008,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
add    0xf07f0000,%ah
add    $0x8,%al
or     $0x25,%al
add    %al,(%eax)
jg     805bda6 <_IO_stdin_used+0xcea2>
add    $0x8,%al
adc    %ah,0xf07f0000
add    $0x8,%al
adc    $0x25,%al
add    %al,(%eax)
jg     805bdb6 <_IO_stdin_used+0xceb2>
add    $0x8,%al
sbb    %ah,0xf07f0000
add    $0x8,%al
sbb    $0x25,%al
add    %al,(%eax)
jg     805bdc6 <_IO_stdin_used+0xcec2>
add    $0x8,%al
and    $0x25,%al
add    %al,(%eax)
jg     805bdce <_IO_stdin_used+0xceca>
add    $0x8,%al
sub    $0x25,%al
add    %al,(%eax)
jg     805bdd6 <_IO_stdin_used+0xced2>
add    $0x8,%al
xor    $0x25,%al
add    %al,(%eax)
jg     805bdde <_IO_stdin_used+0xceda>
add    $0x8,%al
cmp    $0x25,%al
add    %al,(%eax)
jg     805bde6 <_IO_stdin_used+0xcee2>
add    $0x8,%al
andb   $0x4,0xf07f0000
or     %al,-0xf810000(%ebp,%eiz,1)
add    $0x8,%al
mov    %ah,0xf07f0000
add    $0x8,%al
mov    %fs,0xf07f0000
add    $0x8,%al
nop
and    $0xf07f0000,%eax
add    $0x8,%al
xchg   %eax,%ecx
and    $0xf07f0000,%eax
add    $0x8,%al
xchg   %eax,%edx
and    $0xf07f0000,%eax
add    $0x8,%al
xchg   %eax,%ebx
and    $0xf07f0000,%eax
add    $0x8,%al
and    %ah,(%ebx)
add    %al,(%eax)
jg     805be2e <_IO_stdin_used+0xcf2a>
add    $0x8,%al
mov    0x7f000025,%al
lock add $0x8,%al
sbb    %esp,(%edx)
add    %al,(%eax)
jg     805be3e <_IO_stdin_used+0xcf3a>
add    $0x8,%al
sbb    (%edx),%ah
add    %al,(%eax)
jg     805be46 <_IO_stdin_used+0xcf42>
add    $0x8,%al
dec    %eax
and    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
and    %fs:(%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
and    %gs:(%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    0x7f000000,%al
lock add $0x8,%al
and    %esp,(%ebx)
add    %al,(%eax)
jg     805be6e <_IO_stdin_used+0xcf6a>
add    $0x8,%al
mov    $0x0,%al
add    %al,(%eax)
jg     805be76 <_IO_stdin_used+0xcf72>
add    $0x8,%al
mov    $0x0,%dl
add    %al,(%eax)
jg     805be7e <_IO_stdin_used+0xcf7a>
add    $0x8,%al
mov    $0x0,%bh
add    %al,(%eax)
jg     805be86 <_IO_stdin_used+0xcf82>
add    $0x8,%al
testl  $0xf07f0000,(%eax)
add    $0x8,%al
push   %eax
and    $0xf07f0000,%eax
add    $0x8,%al
push   %ecx
and    $0xf07f0000,%eax
add    $0x8,%al
push   %edx
and    $0xf07f0000,%eax
add    $0x8,%al
push   %ecx
add    $0x0,%al
add    %ah,0x3b(%eax)
add    $0x255308,%eax
add    %cl,%ah
insl   (%dx),%es:(%edi)
add    $0x255408,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %ebp
and    $0x6bc40000,%eax
add    $0x255608,%eax
add    %bl,(%eax)
outsb  %ds:(%esi),(%dx)
add    $0x255708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %eax
and    $0xf07f0000,%eax
add    $0x8,%al
pop    %ecx
and    $0xf07f0000,%eax
add    $0x8,%al
pop    %edx
and    $0xf07f0000,%eax
add    $0x8,%al
pop    %ebx
and    $0xf07f0000,%eax
add    $0x8,%al
pop    %esp
and    $0x6ebc0000,%eax
add    $0x255d08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %esi
and    $0xf07f0000,%eax
add    $0x8,%al
pop    %edi
and    $0xf07f0000,%eax
add    $0x8,%al
pusha
and    $0xf07f0000,%eax
add    $0x8,%al
popa
and    $0xf07f0000,%eax
add    $0x8,%al
add    %eax,(%eax,%eax,1)
add    %bl,%bh
xor    $0x25620805,%eax
add    %al,(%eax)
subb   $0x63,0x8(%ebp,%eax,1)
and    $0xf07f0000,%eax
add    $0x8,%al
fs
and    $0x6b100000,%eax
add    $0x256508,%eax
add    %dl,%al
insb   (%dx),%es:(%edi)
add    $0x256608,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
addr16 and $0xf07f0000,%eax
add    $0x8,%al
push   $0x7f000025
lock add $0x8,%al
imul   $0x256a0804,0xf07f0000,%esp
25
add    %al,(%eax)
jg     805bf76 <_IO_stdin_used+0xd072>
add    $0x8,%al
imul   $0x5,0x6eec0000,%esp
or     %ch,0x0(%ebp,%eiz,1)
add    %bh,-0x10(%edi)
add    $0x8,%al
test   $0xb7000000,%eax
das
add    $0x44e08,%eax
add    %bh,0x4300805(%esp,%ebp,1)
add    %al,(%eax)
cmc
cmp    %al,0x43108
add    %cl,0x46080539
add    $0x0,%al
add    %dh,0x3408053a(%ebp)
add    $0x0,%al
add    %bh,(%edi)
cmp    %eax,0x43508
add    %bl,0x39(%eax)
add    $0x44408,%eax
add    %bl,0x4330805(%edx,%edi,1)
add    %al,(%eax)
push   %edi
sub    $0x5,%al
or     %al,0x4(%ebp)
add    %al,(%eax)
and    $0x3808052c,%eax
add    $0x0,%al
add    %bh,0x4390805(,%ebp,1)
add    %al,(%eax)
push   %esp
sub    $0x43a0805,%eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %eax,0x43b08
add    %bh,0x3c080539(%ebp)
add    $0x0,%al
add    %dl,%dh
cmp    %eax,0x43d08
add    %ch,%bh
cmp    %eax,0x43e08
add    %cl,(%eax)
cmp    0x43f08,%al
add    %ah,(%eax)
cmp    0x44f08,%al
add    %cl,0x4008052c(%edx)
add    $0x0,%al
add    %bh,(%ecx)
cmp    0x44108,%al
add    %dl,0x3a(%edx)
add    $0x44208,%eax
add    %ch,0x3a(%ebx)
add    $0x44308,%eax
add    %al,0x4360805(%edx,%edi,1)
add    %al,(%eax)
jno    805c08f <_IO_stdin_used+0xd18b>
add    $0x43208,%eax
add    %ah,(%esi)
cmp    %eax,0x44c08
add    %bh,(%eax)
cmp    0x44b08,%eax
add    %dh,%al
sub    $0x5,%al
or     %dh,(%edi)
add    $0x0,%al
add    %cl,0x48080539(%ebx)
add    $0x0,%al
add    %ch,%cl
cmp    0x44d08,%al
add    %cl,(%ebx)
sub    $0x4490805,%eax
add    %al,(%eax)
add    (%ebx),%edi
add    $0x44708,%eax
add    %cl,%bh
cmp    0x44a08,%al
add    %bl,(%edi)
cmp    0x42e08,%eax
add    %ah,0x2b(%edi)
add    $0x41008,%eax
add    %ch,0x36(%ecx)
add    $0x41108,%eax
add    %al,0x26080536(%ebx)
add    $0x0,%al
add    %cl,0x38(%ebp)
add    $0x41408,%eax
add    %bh,0x15080536(%ecx)
add    $0x0,%al
add    %dl,%ah
ss
add    $0x42408,%eax
add    %dh,(%edx)
cmp    %al,0x41308
add    %bh,%dl
sub    0x42508,%al
add    %al,%ah
sub    0x41808,%al
add    %dh,%cl
sub    0x41908,%eax
add    %bh,0x5(%ebx,%ebp,2)
or     %bl,(%edx)
add    $0x0,%al
add    %ah,(%esi)
aaa
add    $0x41b08,%eax
add    %al,0x37(%ecx)
add    $0x41c08,%eax
add    %bl,0x5(%edi,%esi,1)
or     %bl,0x77000004
aaa
add    $0x41e08,%eax
add    %dl,0x1f080537(%edx)
add    $0x0,%al
add    %ch,0x42f0805(%edi,%esi,1)
add    %al,(%eax)
xor    %ebp,(%ebx)
add    $0x42008,%eax
add    %al,%bh
aaa
add    $0x42108,%eax
add    %ah,%dl
aaa
add    $0x42208,%eax
add    %bh,%ch
aaa
add    $0x42308,%eax
add    %bl,(%eax)
cmp    %al,0x41608
add    %ch,%bh
ss
add    $0x41208,%eax
add    %bl,0x2c080536(%esi)
add    $0x0,%al
add    %bl,%dl
cmp    %al,0x42b08
add    %bl,0x1708052b(%edi)
add    $0x0,%al
add    %cl,(%ebx)
aaa
add    $0x42808,%eax
add    %al,0x2d080538(%ebp)
add    $0x0,%al
add    %bh,0x4290805(%ebx,%ebp,1)
add    %al,(%eax)
mov    0x27080538,%eax
add    $0x0,%al
add    %ch,0x38(%ecx)
add    $0x42a08,%eax
add    %bh,-0x5ff7fac8(%edi)
add    %al,(%eax)
add    %bh,0x2a(%eax)
add    $0xe0108,%eax
add    %bl,%cl
ds
add    $0xe0208,%eax
add    %ah,%ah
ds
add    $0xe0308,%eax
add    %dh,%cl
ds
add    $0xe0408,%eax
add    %bh,%bh
ds
add    $0xe0508,%eax
add    %cl,0x608053f
push   %cs
add    %al,(%eax)
sbb    (%edi),%bh
add    $0xe0708,%eax
add    %ch,(%edx)
aas
add    $0xe0808,%eax
add    %dh,(%esi)
aas
add    $0xe0908,%eax
add    %al,0x3f(%ebx)
add    $0xe0a08,%eax
add    %dl,0x3f(%ecx)
add    $0xe0b08,%eax
add    %bl,0x3f(%edi)
add    $0xe0c08,%eax
add    %ch,0x3f(%ecx)
add    $0xe0d08,%eax
add    %dh,0x3f(%esi)
add    $0xe0e08,%eax
add    %al,0xf08053f(%edx)
push   %cs
add    %al,(%eax)
(bad)
aas
add    $0xe1008,%eax
add    %bl,0xe110805(%edi,%edi,1)
add    %al,(%eax)
test   $0x1208053f,%eax
push   %cs
add    %al,(%eax)
mov    $0x1308053f,%esp
push   %cs
add    %al,(%eax)
int3
aas
add    $0xe1408,%eax
add    %dl,%bh
aas
add    $0xe1508,%eax
add    %ah,%dl
aas
add    $0xe1608,%eax
add    %ch,%ch
aas
add    $0xe1708,%eax
add    %bh,%bl
aas
add    $0xe1808,%eax
add    %cl,(%edx)
inc    %eax
add    $0xe1908,%eax
add    %bl,(%eax)
inc    %eax
add    $0xe1a08,%eax
add    %ah,(%edx)
inc    %eax
add    $0xe1b08,%eax
add    %dh,(%eax)
inc    %eax
add    $0xe1c08,%eax
add    %bh,(%ebx)
inc    %eax
add    $0xe1d08,%eax
add    %cl,0x40(%ecx)
add    $0xe1e08,%eax
add    %dl,0x40(%ebx)
add    $0xe1f08,%eax
add    %ah,0x40(%eax)
add    $0xe2008,%eax
add    %ch,0x40(%ebx)
add    $0xe2108,%eax
add    %bh,0x40(%ebx)
add    $0xe2208,%eax
add    %al,0x23080540(%ebp)
push   %cs
add    %al,(%eax)
nop
inc    %eax
add    $0xe2408,%eax
add    %bl,0x25080540(%ebx)
push   %cs
add    %al,(%eax)
mov    %eax,0x26080540
push   %cs
add    %al,(%eax)
scas   %es:(%edi),%eax
inc    %eax
add    $0xe2708,%eax
add    %dh,0x28080540(%edi)
push   %cs
add    %al,(%eax)
ret
inc    %eax
add    $0xe2908,%eax
add    %cl,%bh
inc    %eax
add    $0xe2a08,%eax
add    %bl,%bl
inc    %eax
add    $0xe2b08,%eax
add    %ah,%dh
inc    %eax
add    $0xe2c08,%eax
add    %dh,%cl
inc    %eax
add    $0xe2d08,%eax
add    %bh,%dh
inc    %eax
add    $0xe2e08,%eax
add    %cl,(%eax)
inc    %ecx
add    $0xe2f08,%eax
add    %dl,(%esi)
inc    %ecx
add    $0xe3008,%eax
add    %ah,0x31080541
push   %cs
add    %al,(%eax)
xor    %al,0x5(%ecx)
or     %dh,(%edx)
push   %cs
add    %al,(%eax)
inc    %eax
inc    %ecx
add    $0xe3308,%eax
add    %cl,0x5(%ecx,%eax,2)
or     %dh,(%esi,%ecx,1)
add    %al,(%eax)
pop    %eax
inc    %ecx
add    $0xe3508,%eax
add    %ah,0x41(%ebx)
add    $0xe3608,%eax
add    %ch,0x41(%edi)
add    $0xe3708,%eax
add    %bh,0x41(%ebx)
add    $0xe3808,%eax
add    %cl,0x39080541(%eax)
push   %cs
add    %al,(%eax)
xchg   %eax,%ebx
inc    %ecx
add    $0xe3a08,%eax
add    %bl,0x3b080541(%edi)
push   %cs
add    %al,(%eax)
jg     805c36e <_IO_stdin_used+0xd46a>
add    $0x8,%al
cmp    $0xe,%al
add    %al,(%eax)
jg     805c376 <_IO_stdin_used+0xd472>
add    $0x8,%al
cmp    $0x7f00000e,%eax
lock add $0x8,%al
ds
push   %cs
add    %al,(%eax)
jg     805c386 <_IO_stdin_used+0xd482>
add    $0x8,%al
aas
push   %cs
add    %al,(%eax)
lods   %ds:(%esi),%al
inc    %ecx
add    $0xe4008,%eax
add    %dh,0x41080541(%esi)
push   %cs
add    %al,(%eax)
roll   $0x8,0x5(%ecx)
inc    %edx
push   %cs
add    %al,(%eax)
int    $0x41
add    $0xe4308,%eax
add    %bl,%al
inc    %ecx
add    $0xe4408,%eax
add    %ch,%bl
inc    %ecx
add    $0xe4508,%eax
add    %bh,%bh
inc    %ecx
add    $0xe4608,%eax
add    %dl,(%eax)
inc    %edx
add    $0xe4708,%eax
add    %bl,(%esi)
inc    %edx
add    $0xe4808,%eax
add    %ch,0x49080542
push   %cs
add    %al,(%eax)
cmp    %al,0x5(%edx)
or     %cl,0xe(%edx)
add    %al,(%eax)
inc    %esp
inc    %edx
add    $0xe4b08,%eax
add    %dl,0x42(%eax)
add    $0xe4c08,%eax
add    %ah,0x42(%ecx)
add    $0xe4d08,%eax
add    %dh,0x42(%edx)
add    $0xe4e08,%eax
add    %al,0x4f080542(%eax)
push   %cs
add    %al,(%eax)
mov    0x5(%edx),%es
or     %dl,0xe(%eax)
add    %al,(%eax)
fwait
inc    %edx
add    $0xe5108,%eax
add    %ah,0x52080542(%edi)
push   %cs
add    %al,(%eax)
mov    $0x42,%ah
add    $0xe5308,%eax
add    %al,%cl
inc    %edx
add    $0xe5408,%eax
add    %cl,%ch
inc    %edx
add    $0xe5508,%eax
add    %bl,%al
inc    %edx
add    $0xe5608,%eax
add    %ah,%bl
inc    %edx
add    $0xe5708,%eax
add    %ch,%bh
inc    %edx
add    $0xe5808,%eax
add    %bh,%ah
inc    %edx
add    $0xe5908,%eax
add    %cl,(%ecx)
inc    %ebx
add    $0xe5a08,%eax
add    %dl,0x5b080543
push   %cs
add    %al,(%eax)
and    $0x5c080543,%eax
push   %cs
add    %al,(%eax)
jg     805c476 <_IO_stdin_used+0xd572>
add    $0x8,%al
pop    %ebp
push   %cs
add    %al,(%eax)
jg     805c47e <_IO_stdin_used+0xd57a>
add    $0x8,%al
pop    %esi
push   %cs
add    %al,(%eax)
jg     805c486 <_IO_stdin_used+0xd582>
add    $0x8,%al
pop    %edi
push   %cs
add    %al,(%eax)
jg     805c48e <_IO_stdin_used+0xd58a>
add    $0x8,%al
add    %dl,(%edx)
add    %al,(%eax)
xor    %eax,0x5(%ebx)
or     %al,(%ecx)
adc    (%eax),%al
add    %al,0x43(%esi)
add    $0x120208,%eax
add    %bl,0x43(%ebx)
add    $0x120308,%eax
add    %dh,0x43(%eax)
add    $0x120408,%eax
add    %al,0x5080543(%esi)
adc    (%eax),%al
add    %bl,0x12060805(%ebx,%eax,2)
add    %al,(%eax)
mov    $0x43,%cl
add    $0x120708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
or     %dl,(%edx)
add    %al,(%eax)
movb   $0x8,0x5(%ebx)
or     %edx,(%edx)
add    %al,(%eax)
fildl  0x5(%ebx)
or     %cl,(%edx)
adc    (%eax),%al
add    %dh,%al
inc    %ebx
add    $0x120b08,%eax
add    %al,0xc080544
adc    (%eax),%al
add    %bl,(%ebx)
inc    %esp
add    $0x120d08,%eax
add    %dh,(%ecx)
inc    %esp
add    $0x120e08,%eax
add    %al,0x44(%esi)
add    $0x120f08,%eax
add    %bl,0x44(%ebx)
add    $0x121008,%eax
add    %dh,0x44(%ecx)
add    $0x121108,%eax
add    %al,0x12080544(%edi)
adc    (%eax),%al
add    %bl,0x13080544(%ebp)
adc    (%eax),%al
add    %dh,0x14080544(%ebx)
adc    (%eax),%al
add    %cl,%dl
inc    %esp
add    $0x121508,%eax
add    %ah,%cl
inc    %esp
add    $0x121608,%eax
add    %dh,%bh
inc    %esp
add    $0x121708,%eax
add    %cl,0x18080545
adc    (%eax),%al
add    %ah,0x12190805(,%eax,2)
add    %al,(%eax)
cmp    %eax,0x5(%ebp)
or     %bl,(%edx)
adc    (%eax),%al
add    %cl,0x45(%esi)
add    $0x121b08,%eax
add    %ah,0x45(%ebx)
add    $0x121c08,%eax
add    %bh,0x45(%ecx)
add    $0x121d08,%eax
add    %cl,0x1e080545(%edi)
adc    (%eax),%al
add    %ah,0x121f0805(%ebp,%eax,2)
add    %al,(%eax)
mov    $0x20080545,%ecx
adc    (%eax),%al
add    %dl,%al
inc    %ebp
add    $0x122108,%eax
add    %ah,%dh
inc    %ebp
add    $0x122208,%eax
add    %bh,%ah
inc    %ebp
add    $0x122308,%eax
add    %dl,(%edx)
inc    %esi
add    $0x122408,%eax
add    %ch,(%ecx)
inc    %esi
add    $0x122508,%eax
add    %al,0x46(%eax)
add    $0x122608,%eax
add    %dl,0x46(%esi)
add    $0x122708,%eax
add    %ch,0x5(%esi,%eax,2)
or     %ch,(%eax)
adc    (%eax),%al
add    %al,0x29080546(%ebx)
adc    (%eax),%al
add    %bl,0x2a080546(%eax)
adc    (%eax),%al
add    %ch,0x2b080546(%ebp)
adc    (%eax),%al
add    %al,%dl
inc    %esi
add    $0x122c08,%eax
add    %bl,%al
inc    %esi
add    $0x122d08,%eax
add    %ch,%dh
inc    %esi
add    $0x122e08,%eax
add    %al,(%ebx)
inc    %edi
add    $0x122f08,%eax
add    %bl,(%eax)
inc    %edi
add    $0x123008,%eax
add    %ch,(%esi)
inc    %edi
add    $0x123108,%eax
add    %al,0x47(%ebx)
add    $0x123208,%eax
add    %bl,0x47(%eax)
add    $0x123308,%eax
add    %ch,0x47(%ebp)
add    $0x123408,%eax
add    %al,0x35080547(%ebx)
adc    (%eax),%al
add    %bl,0x36080547(%ecx)
adc    (%eax),%al
add    %ch,0x37080547(%esi)
adc    (%eax),%al
add    %al,%bl
inc    %edi
add    $0x123808,%eax
add    %bl,%cl
inc    %edi
add    $0x123908,%eax
add    %ch,%bh
inc    %edi
add    $0x123a08,%eax
add    %al,0x3b080548
adc    (%eax),%al
add    %bl,(%ebx)
dec    %eax
add    $0x123c08,%eax
add    %dh,(%edx)
dec    %eax
add    $0x123d08,%eax
add    %cl,0x48(%ecx)
add    $0x123e08,%eax
add    %bl,0x48(%edi)
add    $0x123f08,%eax
add    %dh,0x48(%ebp)
add    $0x124008,%eax
add    %cl,0x12410805(%eax,%ecx,2)
add    %al,(%eax)
mov    0x42080548,%eax
adc    (%eax),%al
add    %dh,0x43080548(%esi)
adc    (%eax),%al
add    %cl,%bl
dec    %eax
add    $0x124408,%eax
add    %ah,%cl
dec    %eax
add    $0x124508,%eax
add    %dh,%bh
dec    %eax
add    $0x124608,%eax
add    %cl,(%ecx,%ecx,2)
add    $0x124708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
dec    %eax
adc    (%eax),%al
add    %ah,(%ecx)
dec    %ecx
add    $0x124908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
dec    %edx
adc    (%eax),%al
add    %dh,(%edi)
dec    %ecx
add    $0x124b08,%eax
add    %cl,0x49(%ebp)
add    $0x124c08,%eax
add    %ah,0x5(%ecx,%ecx,2)
or     %cl,0x12(%ebp)
add    %al,(%eax)
jnp    805c757 <_IO_stdin_used+0xd853>
add    $0x124e08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
dec    %edi
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
push   %eax
adc    (%eax),%al
add    %dl,0x51080549(%ecx)
adc    (%eax),%al
add    %ah,0x52080549(%edi)
adc    (%eax),%al
add    %bh,0x53080549(%ebp)
adc    (%eax),%al
add    %dl,%bl
dec    %ecx
add    $0x125408,%eax
add    %ch,%dl
dec    %ecx
add    $0x125508,%eax
add    %al,(%ecx)
dec    %edx
add    $0x125608,%eax
add    %dl,(%edi)
dec    %edx
add    $0x125708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %eax
adc    (%eax),%al
add    %ch,0x5908054a
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %edx
adc    (%eax),%al
add    %al,0x5(%edx,%ecx,2)
or     %bl,0x12(%ebx)
add    %al,(%eax)
pop    %ebx
dec    %edx
add    $0x125c08,%eax
add    %dh,0x4a(%ebx)
add    $0x125d08,%eax
add    %cl,0x5e08054a(%ebx)
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %edi
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
pusha
adc    (%eax),%al
add    %ah,0x6108054a(%edx)
adc    (%eax),%al
add    %dh,0x6208054a(%edi)
adc    (%eax),%al
add    %cl,%ah
dec    %edx
add    $0x126308,%eax
add    %ah,%cl
dec    %edx
add    $0x126408,%eax
add    %dh,%bh
dec    %edx
add    $0x126508,%eax
add    %cl,0x6608054b
adc    (%eax),%al
add    %ah,(%edx)
dec    %ebx
add    $0x126708,%eax
add    %dh,(%edi)
dec    %ebx
add    $0x126808,%eax
add    %cl,0x4b(%esi)
add    $0x126908,%eax
add    %ah,0x4b(%ebx)
add    $0x126a08,%eax
add    %bh,0x4b(%eax)
add    $0x126b08,%eax
add    %cl,0x6c08054b(%ebp)
adc    (%eax),%al
add    %ah,0x6d08054b(%ebx)
adc    (%eax),%al
add    %bh,0x6e08054b(%ecx)
adc    (%eax),%al
add    %cl,%dh
dec    %ebx
add    $0x126f08,%eax
add    %ah,%bl
dec    %ebx
add    $0x127008,%eax
add    %bh,%cl
dec    %ebx
add    $0x127108,%eax
add    %cl,(%esi)
dec    %esp
add    $0x127208,%eax
add    %ah,(%ebx)
dec    %esp
add    $0x127308,%eax
add    %bh,(%eax)
dec    %esp
add    $0x127408,%eax
add    %cl,0x4c(%esi)
add    $0x127508,%eax
add    %ah,0x5(%esp,%ecx,2)
or     %dh,0x12(%esi)
add    %al,(%eax)
jns    805c8a2 <_IO_stdin_used+0xd99e>
add    $0x127708,%eax
add    %cl,0x7808054c(%esi)
adc    (%eax),%al
add    %ah,0x12790805(%esp,%ecx,2)
add    %al,(%eax)
mov    $0x7a08054c,%ecx
adc    (%eax),%al
add    %cl,%dh
dec    %esp
add    $0x127b08,%eax
add    %ah,%bl
dec    %esp
add    $0x127c08,%eax
add    %bh,%cl
dec    %esp
add    $0x127d08,%eax
add    %cl,(%edi)
dec    %ebp
add    $0x127e08,%eax
add    %ah,0x127f0805(,%ecx,2)
add    %al,(%eax)
cmp    %ecx,0x5(%ebp)
or     %al,0x4f000012(%eax)
dec    %ebp
add    $0x128108,%eax
add    %ah,0x5(%ebp,%ecx,2)
or     %al,0x79000012(%edx)
dec    %ebp
add    $0x128308,%eax
add    %cl,-0x7bf7fab3(%esi)
adc    (%eax),%al
add    %ah,0x12850805(%ebp,%ecx,2)
add    %al,(%eax)
mov    $0x8608054d,%edx
adc    (%eax),%al
add    %cl,%bh
dec    %ebp
add    $0x128708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    %dl,(%edx)
add    %al,(%eax)
in     $0x4d,%al
add    $0x128908,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    (%edx),%dl
add    %al,(%eax)
cli
dec    %ebp
add    $0x128b08,%eax
add    %dl,(%eax)
dec    %esi
add    $0x128c08,%eax
add    %ah,(%edi)
dec    %esi
add    $0x128d08,%eax
add    %bh,(%esi)
dec    %esi
add    $0x128e08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
(bad)
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
nop
adc    (%eax),%al
add    %dl,0x5(%esi,%ecx,2)
or     %dl,0x69000012(%ecx)
dec    %esi
add    $0x129208,%eax
add    %bh,0x4e(%esi)
add    $0x129308,%eax
add    %dl,-0x6bf7fab2(%ebx)
adc    (%eax),%al
add    %ch,-0x6af7fab2(%ecx)
adc    (%eax),%al
add    %bh,-0x69f7fab2(%edi)
adc    (%eax),%al
add    %dl,%ah
dec    %esi
add    $0x129708,%eax
add    %ch,%cl
dec    %esi
add    $0x129808,%eax
add    %bh,%bh
dec    %esi
add    $0x129908,%eax
add    %dl,0x9a08054f
adc    (%eax),%al
add    %ch,(%ebx)
dec    %edi
add    $0x129b08,%eax
add    %al,0x4f(%ecx)
add    $0x129c08,%eax
add    %bl,0x4f(%eax)
add    $0x129d08,%eax
add    %ch,0x4f(%edi)
add    $0x129e08,%eax
add    %al,-0x60f7fab1(%ebp)
adc    (%eax),%al
add    %bl,-0x5ff7fab1(%ebx)
adc    (%eax),%al
add    %dh,-0x5ef7fab1(%edx)
adc    (%eax),%al
add    %cl,%dh
dec    %edi
add    $0x12a208,%eax
add    %ch,%dl
dec    %edi
add    $0x12a308,%eax
add    %al,(%esi)
push   %eax
add    $0x12a408,%eax
add    %ah,(%ebx)
push   %eax
add    $0x12a508,%eax
add    %al,0x50(%eax)
add    $0x12a608,%eax
add    %bl,0x5(%eax,%edx,2)
or     %ah,0x78000012(%edi)
push   %eax
add    $0x12a808,%eax
add    %dl,-0x56f7fab0(%ebp)
adc    (%eax),%al
add    %ch,-0x55f7fab0(%edx)
adc    (%eax),%al
add    %bh,-0x54f7fab0(%edi)
adc    (%eax),%al
add    %dl,%ah
push   %eax
add    $0x12ac08,%eax
add    %ch,%dl
push   %eax
add    $0x12ad08,%eax
add    %al,(%eax)
push   %ecx
add    $0x12ae08,%eax
add    %dl,0xaf080551
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
mov    $0x12,%al
add    %al,(%eax)
sub    0x5(%ecx),%dl
or     %dh,0x7f000012(%ecx)
lock add $0x8,%al
mov    $0x12,%dl
add    %al,(%eax)
inc    %eax
push   %ecx
add    $0x12b308,%eax
add    %dl,0x51(%esi)
add    $0x12b408,%eax
add    %ch,0x51(%ebp)
add    $0x12b508,%eax
add    %al,0x12b60805(%ecx,%edx,2)
add    %al,(%eax)
jg     805ca46 <_IO_stdin_used+0xdb42>
add    $0x8,%al
mov    $0x12,%bh
add    %al,(%eax)
jg     805ca4e <_IO_stdin_used+0xdb4a>
add    $0x8,%al
mov    $0x9a000012,%eax
push   %ecx
add    $0x12b908,%eax
add    %dh,-0x45f7faaf(%eax)
adc    (%eax),%al
add    %al,%dh
push   %ecx
add    $0x12bb08,%eax
add    %bl,%ah
push   %ecx
add    $0x12bc08,%eax
add    %dh,%bl
push   %ecx
add    $0x12bd08,%eax
add    %cl,(%edx)
push   %edx
add    $0x12be08,%eax
add    %ah,(%eax)
push   %edx
add    $0x12bf08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
rclb   $0x0,(%edx)
add    %dh,(%esi)
push   %edx
add    $0x12c108,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
ret    $0x12
add    %cl,0x52(%ebp)
add    $0x12c308,%eax
add    %ah,0x5(%edx,%edx,2)
or     %al,%ah
adc    (%eax),%al
add    %bh,0x5(%edx,%edx,2)
or     %al,%ch
adc    (%eax),%al
add    %dl,0x12c60805(%edx,%edx,2)
add    %al,(%eax)
jg     805cac6 <_IO_stdin_used+0xdbc2>
add    $0x8,%al
(bad)
adc    (%eax),%al
add    %bh,-0x10(%edi)
add    $0x8,%al
enter  $0x12,$0x0
stos   %eax,%es:(%edi)
push   %edx
add    $0x12c908,%eax
add    %al,%al
push   %edx
add    $0x12ca08,%eax
add    %dl,%ch
push   %edx
add    $0x12cb08,%eax
add    %ch,%dl
push   %edx
add    $0x12cc08,%eax
add    %al,(%eax)
push   %ebx
add    $0x12cd08,%eax
add    %dl,(%esi)
push   %ebx
add    $0x12ce08,%eax
add    %ch,(%ebx)
push   %ebx
add    $0x12cf08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
rclb   (%edx)
add    %al,(%eax)
and    %ch,0x5(%edi)
or     %dl,%cl
adc    (%eax),%al
add    %al,0x6f(%eax)
add    $0x12d208,%eax
add    %ah,0x6f(%eax)
add    $0x12d308,%eax
add    %al,-0x2bf7fa91(%eax)
adc    (%eax),%al
add    %ah,-0x2af7fa91(%eax)
adc    (%eax),%al
add    %al,%al
outsl  %ds:(%esi),(%dx)
add    $0x12d608,%eax
add    %ah,%al
outsl  %ds:(%esi),(%dx)
add    $0x12d708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
fcoms  (%edx)
add    %al,(%eax)
inc    %eax
push   %ebx
add    $0x12d908,%eax
add    %dl,0x53(%ebp)
add    $0x12da08,%eax
add    %ch,0x53(%edx)
add    $0x12db08,%eax
add    %bh,0x53(%edi)
add    $0x12dc08,%eax
add    %dl,-0x22f7faad(%ebp)
adc    (%eax),%al
add    %ch,-0x21f7faad(%ebx)
adc    (%eax),%al
add    %al,%al
push   %ebx
add    $0x12df08,%eax
add    %dl,%ch
push   %ebx
add    $0x12e008,%eax
add    %ch,%bl
push   %ebx
add    $0x12e108,%eax
add    %al,(%ecx)
push   %esp
add    $0x12e208,%eax
add    %dl,(%edi)
push   %esp
add    $0x12e308,%eax
add    %ch,0xe4080554
adc    (%eax),%al
add    %al,0x5(%esp,%edx,2)
or     %ah,%ch
adc    (%eax),%al
add    %bl,0x54(%ebx)
add    $0x12e608,%eax
add    %dh,0x54(%ecx)
add    $0x12e708,%eax
add    %al,-0x17f7faac(%edi)
adc    (%eax),%al
add    %bl,-0x16f7faac(%esi)
adc    (%eax),%al
add    %dh,-0x15f7faac(%ebx)
adc    (%eax),%al
add    %cl,%al
push   %esp
add    $0x12eb08,%eax
add    %bl,%ch
push   %esp
add    $0x12ec08,%eax
add    %dh,%bl
push   %esp
add    $0x12ed08,%eax
add    %cl,(%ecx)
push   %ebp
add    $0x12ee08,%eax
add    %bl,(%esi)
push   %ebp
add    $0x12ef08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
lock adc (%eax),%al
add    %dh,(%ebx)
push   %ebp
add    $0x12f108,%eax
add    %cl,0x55(%eax)
add    $0x12f208,%eax
add    %bl,0x55(%ebp)
add    $0x12f308,%eax
add    %dh,0x55(%edx)
add    $0x12f408,%eax
add    %cl,-0xaf7faab(%eax)
adc    (%eax),%al
add    %bl,-0x9f7faab(%esi)
adc    (%eax),%al
add    %dh,-0x8f7faab(%ebx)
adc    (%eax),%al
add    %cl,%al
push   %ebp
add    $0x12f808,%eax
add    %bl,%dh
push   %ebp
add    $0x12f908,%eax
add    %dh,%ah
push   %ebp
add    $0x12fa08,%eax
add    %cl,(%edx)
push   %esi
add    $0x12fb08,%eax
add    %ah,(%eax)
push   %esi
add    $0x12fc08,%eax
add    %dh,(%edi)
push   %esi
add    $0x12fd08,%eax
add    %cl,0x56(%esi)
add    $0x12fe08,%eax
add    %ah,0x5(%esi,%edx,2)
or     %bh,%bh
adc    (%eax),%al
add    %bh,0x56(%edx)
add    $0x130008,%eax
add    %dl,0x1080556(%ecx)
adc    (%eax),%eax
add    %ah,0x2080556(%esi)
adc    (%eax),%eax
add    %bh,0x3080556(%ebx)
adc    (%eax),%eax
add    %dl,%al
push   %esi
add    $0x130408,%eax
add    %ah,%dh
push   %esi
add    $0x130508,%eax
add    %bh,%ah
push   %esi
add    $0x130608,%eax
add    %dl,(%ecx)
push   %edi
add    $0x130708,%eax
add    %ah,(%esi)
push   %edi
add    $0x130808,%eax
add    %bh,(%edi,%edx,2)
add    $0x130908,%eax
add    %dl,0x57(%ecx)
add    $0x130a08,%eax
add    %ah,0x57(%esi)
add    $0x130b08,%eax
add    %bh,0x57(%ebx)
add    $0x130c08,%eax
add    %dl,0xd080557(%ecx)
adc    (%eax),%eax
add    %ah,0xe080557(%edi)
adc    (%eax),%eax
add    %bh,0x130f0805(%edi,%edx,2)
add    %al,(%eax)
jg     805cd0e <_IO_stdin_used+0xde0a>
add    $0x8,%al
adc    %dl,(%ebx)
add    %al,(%eax)
rcll   0x5(%edi)
or     %dl,(%ecx)
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
adc    (%ebx),%dl
add    %al,(%eax)
out    %eax,$0x57
add    $0x131308,%eax
add    %bh,%ch
push   %edi
add    $0x131408,%eax
add    %dl,(%eax,%ebx,2)
add    $0x131508,%eax
add    %ch,(%ebx)
pop    %eax
add    $0x131608,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ss
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
sbb    %dl,(%ebx)
add    %al,(%eax)
inc    %ecx
pop    %eax
add    $0x131908,%eax
add    %dl,0x58(%edi)
add    $0x131a08,%eax
add    %ch,0x58(%ebp)
add    $0x131b08,%eax
add    %al,0x1c080558(%ebx)
adc    (%eax),%eax
add    %bl,0x1d080558(%edx)
adc    (%eax),%eax
add    %dh,0x1e080558(%ecx)
adc    (%eax),%eax
add    %al,%bh
pop    %eax
add    $0x131f08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
and    %dl,(%ebx)
add    %al,(%eax)
fstpl  0x5(%eax)
or     %ah,(%ecx)
adc    (%eax),%eax
add    %dh,%bl
pop    %eax
add    $0x132208,%eax
add    %cl,(%ecx)
pop    %ecx
add    $0x132308,%eax
add    %bl,(%edi)
pop    %ecx
add    $0x132408,%eax
add    %dh,(%esi)
pop    %ecx
add    $0x132508,%eax
add    %cl,0x59(%ebp)
add    $0x132608,%eax
add    %ah,0x59(%ebx)
add    $0x132708,%eax
add    %bh,0x59(%ecx)
add    $0x132808,%eax
add    %dl,0x29080559(%eax)
adc    (%eax),%eax
add    %ah,0x2a080559(%esi)
adc    (%eax),%eax
add    %bh,0x132b0805(%ecx,%ebx,2)
add    %al,(%eax)
rcrb   %cl,0x5(%ecx)
or     %ch,(%ebx,%edx,1)
add    %al,(%eax)
jmp    350dd362 <optarg+0x2d07f51e>
adc    (%eax),%eax
add    %al,(%eax)
pop    %edx
add    $0x132e08,%eax
add    %dl,(%esi)
pop    %edx
add    $0x132f08,%eax
add    %ch,(%edx,%ebx,2)
add    $0x133008,%eax
add    %al,0x5a(%ebx)
add    $0x133108,%eax
add    %bl,0x5a(%ecx)
add    $0x133208,%eax
add    %ch,0x5a(%edi)
add    $0x133308,%eax
add    %al,0x3408055a(%ebp)
adc    (%eax),%eax
add    %bl,0x13350805(%edx,%ebx,2)
add    %al,(%eax)
mov    $0x5a,%bl
add    $0x133608,%eax
add    %cl,%cl
pop    %edx
add    $0x133708,%eax
add    %bl,%bh
pop    %edx
add    $0x133808,%eax
add    %dh,%dh
pop    %edx
add    $0x133908,%eax
add    %cl,(%ebx,%ebx,2)
add    $0x133a08,%eax
add    %ah,(%edx)
pop    %ebx
add    $0x133b08,%eax
add    %bh,(%eax)
pop    %ebx
add    $0x133c08,%eax
add    %cl,0x5b(%edi)
add    $0x133d08,%eax
add    %ah,0x5b(%esi)
add    $0x133e08,%eax
add    %bh,0x5(%ebx,%ebx,2)
or     %bh,(%edi)
adc    (%eax),%eax
add    %dl,0x4008055b(%edx)
adc    (%eax),%eax
add    %ch,0x4108055b(%ecx)
adc    (%eax),%eax
add    %bh,0x4208055b(%edi)
adc    (%eax),%eax
add    %dl,%ch
pop    %ebx
add    $0x134308,%eax
add    %ch,%bl
pop    %ebx
add    $0x134408,%eax
add    %al,(%edx)
pop    %esp
add    $0x134508,%eax
add    %bl,(%ecx)
pop    %esp
add    $0x134608,%eax
add    %ch,(%edi)
pop    %esp
add    $0x134708,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
dec    %eax
adc    (%eax),%eax
add    %al,0x5c(%ebp)
add    $0x134908,%eax
add    %bl,0x5c(%edx)
add    $0x134a08,%eax
add    %ch,0x5c(%edi)
add    $0x134b08,%eax
add    %al,0x134c0805(%esp,%ebx,2)
add    %al,(%eax)
lcall  $0x13,$0x4d08055c
add    %dh,0x4e08055c(%eax)
adc    (%eax),%eax
add    %al,%ch
pop    %esp
add    $0x134f08,%eax
add    %bl,%dl
pop    %esp
add    $0x135008,%eax
add    %dh,%cl
pop    %esp
add    $0x135108,%eax
add    %al,(%esi)
pop    %ebp
add    $0x135208,%eax
add    %bl,(%ebx)
pop    %ebp
add    $0x135308,%eax
add    %dh,(%eax)
pop    %ebp
add    $0x135408,%eax
add    %al,0x5d(%esi)
add    $0x135508,%eax
add    %bl,0x5(%ebp,%ebx,2)
or     %dl,0x13(%esi)
add    %al,(%eax)
jno    805cfb3 <_IO_stdin_used+0xe0af>
add    $0x135708,%eax
add    %al,0x5808055d(%esi)
adc    (%eax),%eax
add    %bl,0x5908055d(%ebp)
adc    (%eax),%eax
add    %dh,0x5a08055d(%ebx)
adc    (%eax),%eax
add    %cl,%cl
pop    %ebp
add    $0x135b08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %esp
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %ebp
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %esi
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pop    %edi
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
pusha
adc    (%eax),%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
popa
adc    (%eax),%eax
add    %bl,%bh
pop    %ebp
add    $0x136208,%eax
add    %dh,%dl
pop    %ebp
add    $0x136308,%eax
add    %al,0x6408055e
adc    (%eax),%eax
add    %dl,(%esi,%ebx,2)
add    $0x136508,%eax
add    %ah,(%edi)
pop    %esi
add    $0x136608,%eax
add    %dh,(%esi)
pop    %esi
add    $0x136708,%eax
add    %cl,0x5e(%ebp)
add    $0x136808,%eax
add    %ah,0x5(%esi,%ebx,2)
or     %ch,0x13(%ecx)
add    %al,(%eax)
sbbl   $0x136a08,0x5(%esi)
add    %dl,0x136b0805(%esi,%ebx,2)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
pop    %esi
add    $0x136c08,%eax
add    %bh,0x136d0805(%esi,%ebx,2)
add    %al,(%eax)
rcrb   0x5(%esi)
or     %ch,0x13(%esi)
add    %al,(%eax)
in     $0x5e,%al
add    $0x136f08,%eax
add    %dh,%bh
pop    %esi
add    $0x137008,%eax
add    %cl,(%edi,%ebx,2)
add    $0x137108,%eax
add    %ah,(%ecx)
pop    %edi
add    $0x137208,%eax
add    %dh,0x7308055f
adc    (%eax),%eax
add    %cl,0x5f(%ecx)
add    $0x137408,%eax
add    %ah,0x5f(%eax)
add    $0x137508,%eax
add    %dh,0x5f(%edi)
add    $0x137608,%eax
add    %cl,0x7708055f(%ebp)
adc    (%eax),%eax
add    %ah,0x7808055f(%ebx)
adc    (%eax),%eax
add    %bh,0x7908055f(%ecx)
adc    (%eax),%eax
add    %dl,%cl
pop    %edi
add    $0x137a08,%eax
add    %ch,%al
pop    %edi
add    $0x137b08,%eax
add    %bh,%bh
pop    %edi
add    $0x137c08,%eax
add    %dl,(%edi)
pusha
add    $0x137d08,%eax
add    %bh,-0x10(%edi)
add    $0x8,%al
jle    805d0a5 <_IO_stdin_used+0xe1a1>
add    %al,(%eax)
jg     805d086 <_IO_stdin_used+0xe182>
add    $0x8,%al
jg     805d0ad <_IO_stdin_used+0xe1a9>
add    %al,(%eax)
jg     805d08e <_IO_stdin_used+0xe18a>
add    $0x8,%al
mov    0x78000000,%al
sub    0x10c08,%al
add    %ah,(%ebx,%esi,1)
add    $0x10d08,%eax
add    %ah,0x10080533(%ebx)
add    %eax,(%eax)
add    %al,0x33(%ecx)
add    $0x11108,%eax
add    %al,%al
xor    0x1e408,%eax
add    %dh,(%eax,%eiz,2)
add    $0x1e508,%eax
add    %bh,(%eax,%eiz,2)
add    $0xa708,%eax
add    %dl,0x1e60805(%edx,%ebp,1)
add    %al,(%eax)
inc    %esp
pusha
add    $0xa908,%eax
add    %dh,-0x18f7fad1(%edi)
add    %eax,(%eax)
add    %cl,0x60(%ebx)
add    $0xab08,%eax
add    %cl,%ch
das
add    $0x1e808,%eax
add    %dl,0x60(%edx)
add    $0xad08,%eax
add    %ah,-0x16f7fad6(%ecx)
add    %eax,(%eax)
add    %bl,0x60(%ecx)
add    $0x14a08,%eax
add    %dh,(%ecx)
xor    $0xb00805,%eax
add    %al,(%eax)
out    %al,(%dx)
das
add    $0x14b08,%eax
add    %dh,0x60080535
add    %eax,(%eax)
add    %ah,0x32(%eax)
add    $0x16108,%eax
add    %ah,0x32(%edi)
add    $0xb408,%eax
add    %dh,0x5(%eax,%esi,1)
or     %ah,0x1(%esi)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
ds
add    $0xb608,%eax
add    %ch,%ch
sub    %al,0xb708
add    %bl,(%ecx)
xor    %al,0x16708
add    %dh,0x3e(%esi)
add    $0x17d08,%eax
add    %ch,0x32(%esi)
add    $0x17e08,%eax
add    %dh,0x32(%ebp)
add    $0xbb08,%eax
add    %al,-0x48f7fad3(%edx)
add    %eax,(%eax)
add    %ah,0x60(%eax)
add    $0x29208,%eax
add    %ah,0x5(%eax,%eiz,2)
or     %ch,%dh
add    %eax,(%eax)
add    %ch,0x60(%eax)
add    $0x1ef08,%eax
add    %dh,0x60(%ecx)
add    $0xc008,%eax
add    %ch,0x5(%eax,%esi,1)
or     %al,%cl
add    %al,(%eax)
add    %dh,0x30(%ebx)
add    $0xc208,%eax
add    %bh,0x30(%edx)
add    $0xc308,%eax
add    %al,-0x3bf7fad0(%esi)
add    %al,(%eax)
add    %cl,-0x3af7fad0(%ebp)
add    %al,(%eax)
add    %bl,-0x39f7fad0(%eax)
add    %al,(%eax)
add    %bl,-0x38f7fad0(%esi)
add    %al,(%eax)
add    %ah,-0x37f7fad0(%ecx)
add    %al,(%eax)
add    %ch,-0x36f7fad0(%edx)
add    %al,(%eax)
add    %dh,-0x35f7fad0(%ecx)
add    %al,(%eax)
add    %bh,-0x34f7fad0(%eax)
add    %al,(%eax)
add    %al,%ah
xor    %al,0xcc08
add    %cl,%bh
xor    %al,0xcd08
add    %dl,%dh
xor    %al,0xce08
add    %bl,%ch
xor    %al,0xcf08
add    %ch,%cl
xor    %al,0xd008
add    %dh,%ah
xor    %al,0xd108
add    %bh,%al
xor    %al,0xd208
add    %bh,%bh
xor    %al,0xd308
add    %al,(%esi)
xor    %eax,0xd408
add    %cl,0xd5080531
add    %al,(%eax)
add    %bl,(%ecx)
xor    %eax,0xd608
add    %ah,(%eax)
xor    %eax,0xd708
add    %bh,-0x27f7fad8(%esi)
add    %al,(%eax)
add    %al,-0x26f7fac2(%ebp)
add    %al,(%eax)
add    %ch,(%ebx)
xor    %eax,0xda08
add    %dh,(%edx)
xor    %eax,0xdb08
add    %bh,(%ecx)
xor    %eax,0xdc08
add    %al,0x31(%ebp)
add    $0xdd08,%eax
add    %dl,0x31(%eax)
add    $0xde08,%eax
add    %dl,0x31(%edi)
add    $0xdf08,%eax
add    %bl,0x31(%ebp)
add    $0xe008,%eax
add    %ah,0x5(%ecx,%esi,1)
or     %ah,%cl
add    %al,(%eax)
add    %ch,0x31(%ebx)
add    $0xe208,%eax
add    %dh,0x31(%edx)
add    $0xe308,%eax
add    %bh,0x31(%esi)
add    $0xe408,%eax
add    %dl,%cl
cmp    $0x5,%al
or     %ah,%ch
add    %al,(%eax)
add    %al,-0x19f7facf(%ebp)
add    %al,(%eax)
add    %cl,%dl
inc    %ecx
add    $0xe708,%eax
add    %cl,-0x17f7facf(%ebx)
add    %al,(%eax)
add    %dl,0xe90805(%ecx,%esi,1)
add    %al,(%eax)
pop    %ebp
xor    0xea08,%eax
add    %bl,-0x14f7facf(%ebx)
add    %al,(%eax)
add    %ah,-0x13f7facf(%edi)
add    %al,(%eax)
add    %dh,-0x12f7facf(%edx)
add    %al,(%eax)
add    %bh,-0x11f7facf(%ecx)
add    %al,(%eax)
add    %al,%al
xor    %eax,0xef08
add    %cl,%ah
xor    %eax,0xf008
add    %dl,%bh
xor    %eax,0xf108
add    %bl,%bl
xor    %eax,0xf208
add    %ah,%dl
xor    %eax,0xf308
add    %ch,%cl
xor    %eax,0xf408
add    %dh,%al
xor    %eax,0xf508
add    %bh,%ah
xor    %eax,0xf608
add    %al,(%ebx)
xor    0xf708,%al
add    %cl,(%esi)
xor    0xf808,%al
add    %cl,-0x6f7fac2(%ebp)
add    %al,(%eax)
add    %bl,(%esi)
xor    0xfa08,%al
add    %ah,0xfb080532
add    %al,(%eax)
add    %ch,(%edx,%esi,1)
add    $0xfc08,%eax
add    %bh,(%eax)
xor    0xfd08,%al
add    %al,0x32(%ebx)
add    $0xfe08,%eax
add    %cl,0x32(%edx)
add    $0xff08,%eax
add    %dl,0x32(%eax)
add    $0xa008,%eax
add    %bh,0x2a(%eax)
add    $0x10c08,%eax
add    %ah,(%ebx,%esi,1)
add    $0x10d08,%eax
add    %ah,0x10080533(%ebx)
add    %eax,(%eax)
add    %al,0x33(%ecx)
add    $0x11108,%eax
add    %al,%al
xor    0x1e408,%eax
add    %dh,(%eax,%eiz,2)
add    $0x1e508,%eax
add    %bh,(%eax,%eiz,2)
add    $0xa708,%eax
add    %dl,0x1e60805(%edx,%ebp,1)
add    %al,(%eax)
inc    %esp
pusha
add    $0xa908,%eax
add    %dh,-0x18f7fad1(%edi)
add    %eax,(%eax)
add    %cl,0x60(%ebx)
add    $0x21e08,%eax
add    %ch,0x60(%edx)
add    $0x1e808,%eax
add    %dl,0x60(%edx)
add    $0xad08,%eax
add    %ah,-0x16f7fad6(%ecx)
add    %eax,(%eax)
add    %bl,0x60(%ecx)
add    $0x14a08,%eax
add    %dh,(%ecx)
xor    $0xb00805,%eax
add    %al,(%eax)
out    %al,(%dx)
das
add    $0x14b08,%eax
add    %dh,0x60080535
add    %eax,(%eax)
add    %ah,0x32(%eax)
add    $0x16108,%eax
add    %ah,0x32(%edi)
add    $0xb408,%eax
add    %dh,0x5(%eax,%esi,1)
or     %ah,0x1(%esi)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
ds
add    $0xb608,%eax
add    %ch,%ch
sub    %al,0xb708
add    %bl,(%ecx)
xor    %al,0x16708
add    %dh,0x3e(%esi)
add    $0x17d08,%eax
add    %ch,0x32(%esi)
add    $0x17e08,%eax
add    %dh,0x32(%ebp)
add    $0x21f08,%eax
add    %dh,0x60(%ebx)
add    $0x1b708,%eax
add    %ah,0x60(%eax)
add    $0x29208,%eax
add    %ah,0x5(%eax,%eiz,2)
or     %ch,%dh
add    %eax,(%eax)
add    %ch,0x60(%eax)
add    $0x1ef08,%eax
add    %dh,0x60(%ecx)
add    $0xc008,%eax
add    %ch,0x5(%eax,%esi,1)
or     %al,%cl
add    %al,(%eax)
add    %dh,0x30(%ebx)
add    $0xc208,%eax
add    %bh,0x30(%edx)
add    $0xc308,%eax
add    %al,-0x3bf7fad0(%esi)
add    %al,(%eax)
add    %cl,-0x3af7fad0(%ebp)
add    %al,(%eax)
add    %bl,-0x39f7fad0(%eax)
add    %al,(%eax)
add    %bl,-0x38f7fad0(%esi)
add    %al,(%eax)
add    %ah,-0x37f7fad0(%ecx)
add    %al,(%eax)
add    %ch,-0x36f7fad0(%edx)
add    %al,(%eax)
add    %dh,-0x35f7fad0(%ecx)
add    %al,(%eax)
add    %bh,-0x34f7fad0(%eax)
add    %al,(%eax)
add    %al,%ah
xor    %al,0xcc08
add    %cl,%bh
xor    %al,0xcd08
add    %dl,%dh
xor    %al,0xce08
add    %bl,%ch
xor    %al,0xcf08
add    %ch,%cl
xor    %al,0xd008
add    %dh,%ah
xor    %al,0xd108
add    %bh,%al
xor    %al,0xd208
add    %bh,%bh
xor    %al,0xd308
add    %al,(%esi)
xor    %eax,0xd408
add    %cl,0xd5080531
add    %al,(%eax)
add    %bl,(%ecx)
xor    %eax,0xd608
add    %ah,(%eax)
xor    %eax,0xd708
add    %bh,-0x27f7fad8(%esi)
add    %al,(%eax)
add    %al,-0x26f7fac2(%ebp)
add    %al,(%eax)
add    %ch,(%ebx)
xor    %eax,0xda08
add    %dh,(%edx)
xor    %eax,0xdb08
add    %bh,(%ecx)
xor    %eax,0xdc08
add    %al,0x31(%ebp)
add    $0xdd08,%eax
add    %dl,0x31(%eax)
add    $0xde08,%eax
add    %dl,0x31(%edi)
add    $0xdf08,%eax
add    %bl,0x31(%ebp)
add    $0xe008,%eax
add    %ah,0x5(%ecx,%esi,1)
or     %ah,%cl
add    %al,(%eax)
add    %ch,0x31(%ebx)
add    $0xe208,%eax
add    %dh,0x31(%edx)
add    $0xe308,%eax
add    %bh,0x31(%esi)
add    $0xe408,%eax
add    %dl,%cl
cmp    $0x5,%al
or     %ah,%ch
add    %al,(%eax)
add    %al,-0x19f7facf(%ebp)
add    %al,(%eax)
add    %cl,%dl
inc    %ecx
add    $0xe708,%eax
add    %cl,-0x17f7facf(%ebx)
add    %al,(%eax)
add    %dl,0xe90805(%ecx,%esi,1)
add    %al,(%eax)
pop    %ebp
xor    0xea08,%eax
add    %bl,-0x14f7facf(%ebx)
add    %al,(%eax)
add    %ah,-0x13f7facf(%edi)
add    %al,(%eax)
add    %dh,-0x12f7facf(%edx)
add    %al,(%eax)
add    %bh,-0x11f7facf(%ecx)
add    %al,(%eax)
add    %al,%al
xor    %eax,0xef08
add    %cl,%ah
xor    %eax,0xf008
add    %dl,%bh
xor    %eax,0xf108
add    %bl,%bl
xor    %eax,0xf208
add    %ah,%dl
xor    %eax,0xf308
add    %ch,%cl
xor    %eax,0xf408
add    %dh,%al
xor    %eax,0xf508
add    %bh,%ah
xor    %eax,0xf608
add    %al,(%ebx)
xor    0xf708,%al
add    %cl,(%esi)
xor    0xf808,%al
add    %cl,-0x6f7fac2(%ebp)
add    %al,(%eax)
add    %bl,(%esi)
xor    0xfa08,%al
add    %ah,0xfb080532
add    %al,(%eax)
add    %ch,(%edx,%esi,1)
add    $0xfc08,%eax
add    %bh,(%eax)
xor    0xfd08,%al
add    %al,0x32(%ebx)
add    $0xfe08,%eax
add    %cl,0x32(%edx)
add    $0xff08,%eax
add    %dl,0x32(%eax)
add    $0x5607a08,%eax
or     %bh,0x60(%ebp)
add    $0x5608008,%eax
or     %al,-0x79f7faa0(%ebx)
pusha
add    $0x5608908,%eax
or     %cl,0x608f0805(%eax,%eiz,2)
add    $0x5609208,%eax
or     %dl,-0x66f7faa0(%ebp)
pusha
add    $0x5609d08,%eax
or     %ah,-0x5af7faa0(%ecx)
pusha
add    $0x560a908,%eax
or     %ch,-0x4ef7faa0(%ebp)
pusha
add    $0x560b508,%eax
or     %bh,-0x42f7faa0(%ecx)
pusha
add    $0x5289308,%eax
or     %al,%cl
pusha
add    $0x560c808,%eax
or     %bl,0x28aa0805(%eax,%ebp,1)
add    $0x528b908,%eax
or     %cl,%bh
pusha
add    $0x560d508,%eax
or     %bl,%dl
pusha
add    $0x560dd08,%eax
or     %ah,%bl
pusha
add    $0x560e708,%eax
or     %ch,%bl
pusha
add    $0x560ef08,%eax
or     %dh,%bl
pusha
add    $0x560f708,%eax
or     %bh,%bl
pusha
add    $0x560ff08,%eax
or     %al,(%ebx)
popa
add    $0x5610708,%eax
or     %cl,(%ebx)
popa
add    $0x5610f08,%eax
or     %dl,(%ebx)
popa
add    $0x5611708,%eax
or     %bl,(%ebx)
popa
add    $0x5611f08,%eax
or     %ah,(%ebx)
popa
add    $0x5612708,%eax
or     %ch,(%ebx)
popa
add    $0x5612f08,%eax
or     %dh,(%ebx)
popa
add    $0x5613708,%eax
or     %bh,(%ebx)
popa
add    $0x5613f08,%eax
or     %al,0x61(%ebx)
add    $0x5614708,%eax
or     %cl,0x61(%ebx)
add    $0x5614f08,%eax
or     %dl,0x61(%ebx)
add    $0x5615708,%eax
or     %bl,0x61(%ebx)
add    $0x5615f08,%eax
or     %ah,0x61(%ebx)
add    $0x5616708,%eax
or     %ch,0x61(%ebx)
add    $0x5616f08,%eax
or     %dh,0x61(%ebx)
add    $0x5617708,%eax
or     %bh,0x61(%ebx)
add    $0x5617f08,%eax
or     %al,-0x78f7fa9f(%ebx)
popa
add    $0x5618b08,%eax
or     %cl,-0x6cf7fa9f(%edi)
popa
add    $0x5619708,%eax
or     %bl,-0x60f7fa9f(%ebx)
popa
add    $0x561a308,%eax
or     %ah,-0x54f7fa9f(%edi)
popa
add    $0x561af08,%eax
or     %dh,-0x48f7fa9f(%ebx)
popa
add    $0x561bb08,%eax
or     %bh,-0x3cf7fa9f(%edi)
popa
add    $0x561c708,%eax
or     %cl,%bl
popa
add    $0x561cf08,%eax
or     %dl,%bl
popa
add    $0x561d708,%eax
or     %bl,%bl
popa
add    $0x561df08,%eax
or     %ah,%bl
popa
add    $0x561e708,%eax
or     %ch,%bl
popa
add    $0x561ef08,%eax
or     %dh,%bl
popa
add    $0x561f708,%eax
or     %bh,%bl
popa
add    $0x561ff08,%eax
or     %al,(%ebx)
bound  %eax,0x5620708
or     %cl,(%ebx)
bound  %eax,0x5620f08
or     %dl,(%ebx)
bound  %eax,0x5621708
or     %bl,(%ebx)
bound  %eax,0x5621f08
or     %ah,(%edx,%eiz,2)
add    $0x5622908,%eax
or     %ch,(%esi)
bound  %eax,0x5623308
or     %bh,(%eax)
bound  %eax,0x5623d08
or     %al,0x62(%edx)
add    $0x5624708,%eax
or     %cl,0x5(%edx,%eiz,2)
or     %dl,0x62(%ecx)
add    $0x5625608,%eax
or     %bl,0x62(%ebx)
add    $0x5626008,%eax
or     %ah,0x62(%ebp)
add    $0x5626a08,%eax
or     %ch,0x62(%edi)
add    $0x5627408,%eax
or     %bh,0x62(%ecx)
add    $0x5627e08,%eax
or     %al,-0x77f7fa9e(%ebx)
bound  %eax,0x5628d08
or     %dl,-0x68f7fa9e(%edx)
bound  %eax,0x5629c08
or     %ah,-0x59f7fa9e(%ecx)
bound  %eax,0x562ab08
or     %dh,-0x4af7fa9e(%eax)
bound  %eax,0x562ba08
or     %bh,-0x3bf7fa9e(%edi)
bound  %eax,0x562c908
or     %cl,%dh
bound  %eax,0x562d308
or     %bl,%al
bound  %eax,0x562dd08
or     %ah,%dl
bound  %eax,0x562e708
or     %ch,%ah
bound  %eax,0x562f108
or     %dh,%dh
bound  %eax,0x562fb08
or     %al,(%eax)
arpl   %ax,0x5630508
or     %cl,(%edx)
arpl   %ax,0x5630f08
or     %dl,(%ebx,%eiz,2)
add    $0x5631908,%eax
or     %bl,(%esi)
arpl   %ax,0x5632308
or     %ch,(%eax)
arpl   %ax,0x5632d08
or     %dh,(%edx)
arpl   %ax,0x5633708
or     %bh,(%ebx,%eiz,2)
add    $0x5634108,%eax
or     %al,0x63(%esi)
add    $0x5634b08,%eax
or     %dl,0x63(%eax)
add    $0x5635508,%eax
or     %bl,0x63(%edx)
add    $0x5635f08,%eax
or     %ah,0x5(%ebx,%eiz,2)
or     %ch,0x63(%ecx)
add    $0x5636e08,%eax
or     %dh,0x63(%ebx)
add    $0x5637808,%eax
or     %bh,0x63(%ebp)
add    $0x5638208,%eax
or     %al,-0x73f7fa9d(%edi)
arpl   %ax,0x5639108
or     %dl,-0x64f7fa9d(%esi)
arpl   %ax,0x563a008
or     %ah,-0x55f7fa9d(%ebp)
arpl   %ax,0x563af08
or     %dh,0x63b90805(%ebx,%eiz,2)
add    $0x563be08,%eax
or     %al,%bl
arpl   %ax,0x563c808
or     %cl,%ch
arpl   %ax,0x563d208
or     %dl,%bh
arpl   %ax,0x563dc08
or     %ah,%cl
arpl   %ax,0x563e608
or     %ch,%bl
arpl   %ax,0x563f008
or     %dh,%ch
arpl   %ax,0x563fa08
or     %bh,%bh
arpl   %ax,0x5640408
or     %cl,(%ecx)
fs
add    $0x5640e08,%eax
or     %dl,(%ebx)
fs
add    $0x5641808,%eax
or     %bl,0x22080564
fs
add    $0x5642708,%eax
or     %ch,(%esp,%eiz,2)
add    $0x5643108,%eax
or     %dh,(%esi)
fs
add    $0x5643b08,%eax
or     %al,0x64(%eax)
add    $0x5644508,%eax
or     %cl,0x64(%edx)
add    $0x5644f08,%eax
or     %dl,0x5(%esp,%eiz,2)
or     %bl,0x64(%ecx)
add    $0x5645e08,%eax
or     %ah,0x64(%ebx)
add    $0x5646808,%eax
or     %ch,0x64(%ebp)
add    $0x5647208,%eax
or     %dh,0x64(%edi)
add    $0x5647c08,%eax
or     %al,-0x79f7fa9c(%ecx)
fs
add    $0x5648b08,%eax
or     %dl,-0x6af7fa9c(%eax)
fs
add    $0x5649a08,%eax
or     %bl,-0x5bf7fa9c(%edi)
fs
add    $0x564a908,%eax
or     %ch,-0x4cf7fa9c(%esi)
fs
add    $0x564b808,%eax
or     %bh,-0x3df7fa9c(%ebp)
fs
add    $0x564c708,%eax
or     %cl,%ah
fs
add    $0x564d108,%eax
or     %dl,%dh
fs
add    $0x564db08,%eax
or     %ah,%al
fs
add    $0x564e508,%eax
or     %ch,%dl
fs
add    $0x564ef08,%eax
or     %dh,%ah
fs
add    $0x564f908,%eax
or     %bh,%dh
fs
add    $0x5650908,%eax
or     %dl,(%eax)
gs
add    $0x5651f08,%eax
or     %ch,(%ebx)
gs
add    $0x5653608,%eax
or     %bh,0x65490805(,%eiz,2)
add    $0x565b608,%eax
or     %dl,0x65(%ebx)
add    $0x5655f08,%eax
or     %ch,0x65(%esi)
add    $0x5657e08,%eax
or     %al,-0x74f7fa9b(%ebx)
gs
add    $0x5659308,%eax
or     %dl,-0x5bf7fa9b(%edi)
gs
add    $0x5299408,%eax
or     %dh,0x80565(%ecx)
add    %al,(%eax)
add    %bh,-0x3bf7fa9b(%edi)
gs
add    $0x565c908,%eax
or     %cl,%dh
gs
add    $0x565d308,%eax
or     %bl,%al
gs
add    $0x565dd08,%eax
or     %ah,%dl
gs
add    $0x565e708,%eax
or     %ch,%ah
gs
add    $0x565f108,%eax
or     %bh,%al
gs
add    $0x5660408,%eax
or     %dl,(%eax)
add    $0x1a08,%ax
add    $0x2308,%ax
add    $0x2c08,%ax
add    $0x3608,%ax
add    $0x4108,%ax
add    $0x4c08,%ax
add    $0xc08,%ax
sub    0x52a2708,%al
or     %dl,0x66(%edi)
add    $0x529f408,%eax
or     %ah,0x66(%esi)
add    $0x5667008,%eax
or     %bh,0x66(%edx)
add    $0x5668408,%eax
or     %cl,-0x67f7fa9a(%esi)
add    $0xa208,%ax
add    $0xac08,%ax
add    $0xb608,%ax
add    $0xc008,%ax
add    $0xcb08,%ax
add    $0xd608,%ax
add    $0xe108,%ax
add    $0xec08,%ax
add    $0xf708,%ax
add    $0x208,%ax
addr16 add $0x5670d08,%eax
or     %bl,(%eax)
addr16 add $0x5672308,%eax
or     %ch,(%esi)
addr16 add $0x5673908,%eax
or     %al,0x5(%edi,%eiz,2)
or     %cl,0x67(%edi)
add    $0x5675a08,%eax
or     %ah,0x67(%ebp)
add    $0x5677008,%eax
or     %bh,0x67(%ebx)
add    $0x5678608,%eax
or     %dl,-0x63f7fa99(%ecx)
addr16 add $0x567a708,%eax
or     %dh,-0x42f7fa99(%edx)
addr16 add $0x567c808,%eax
or     %dl,%bl
addr16 add $0x567de08,%eax
or     %ch,%cl
addr16 add $0x567f408,%eax
or     %bh,%bh
addr16 add $0x5680a08,%eax
or     %dl,0x20080568
push   $0x682b0805
add    $0x5683608,%eax
or     %al,0x68(%ecx)
add    $0x5684c08,%eax
or     %dl,0x68(%edi)
add    $0x5686208,%eax
or     %ch,0x68(%ebp)
add    $0x5687808,%eax
or     %al,-0x71f7fa98(%ebx)
push   $0x68990805
add    $0x568a408,%eax
or     %ch,-0x45f7fa98(%edi)
push   $0x68c50805
add    $0x568d008,%eax
or     %bl,%bl
push   $0x68e60805
add    $0x568f108,%eax
or     %bh,%ah
push   $0x69070805
add    $0x528b408,%eax
or     %dl,(%edx)
imul   $0x528a708,0x5691708,%eax
05
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
push   $0x5
or     %bl,(%edi)
push   $0x5
or     %bh,0x29(%esi)
add    $0x56a2608,%eax
or     %ch,(%ebx)
push   $0x5
or     %dh,(%ebx)
push   $0x5
or     %bh,(%ebx)
push   $0x5
or     %al,0x6a(%edx)
add    $0x56a4908,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x25080569
imul   $0x5693508,0x5692d08,%eax
05
or     %bh,0x45080569
imul   $0x5695508,0x5694d08,%eax
05
or     %bl,0x69(%ebp)
add    $0x5696508,%eax
or     %ch,0x69(%ebp)
add    $0x5697308,%eax
or     %bh,0x69(%ecx)
add    $0x5697f08,%eax
or     %al,-0x74f7fa97(%ebp)
imul   $0x5699708,0x5699108,%eax
05
or     %bl,-0x5cf7fa97(%ebp)
imul   $0x569af08,0x569a908,%eax
05
or     %dh,-0x44f7fa97(%ebp)
imul   $0x569c708,0x569c108,%eax
05
or     %al,(%eax)
add    %al,(%eax)
add    %cl,(%edx,%ebp,2)
add    $0x5296c08,%eax
or     %cl,%ch
imul   $0x569da08,0x5295a08,%eax
05
or     %ah,%dh
imul   $0x569fd08,0x569f208,%eax
05
or     %cl,(%eax)
push   $0x5
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edi)
push   $0x5
or     %bl,(%esi)
push   $0x5
or     %bh,0x29(%ebp)
add    $0x56a2508,%eax
or     %ch,(%edx)
push   $0x5
or     %dh,(%edx)
push   $0x5
or     %bh,(%edx)
push   $0x5
or     %al,0x6a(%ecx)
add    $0x56a4808,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x6a(%ebx)
add    $0x56a5d08,%eax
or     %ah,0x6a(%esi)
add    $0x56a6f08,%eax
or     %bh,0x6a(%eax)
add    $0x56a8108,%eax
or     %cl,-0x6cf7fa96(%edx)
push   $0x5
or     %bl,0x6aa50805(%edx,%ebp,2)
add    $0x56aae08,%eax
or     %bh,(%edi)
jo     805ddf4 <_IO_stdin_used+0xeef0>
or     %al,0x70(%ebx)
add    $0x5704e08,%eax
or     %dl,0x70(%ebx)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
fs
data16
cmp    %ah,0x64(%esi)
aaa
popa
xor    (%edx),%dh
xor    %esi,(%ecx)
xor    %bh,(%ecx)
xor    0x36(%ecx,%esi,1),%esp
bound  %esi,(%edi)
aaa
xor    %ss:(%ecx),%dh
xor    %bh,(%eax)
xor    %ah,0x39(%ebp)
xor    %edi,(%ecx)
xor    $0x66,%al
xor    $0x3532,%ax
arpl   %sp,0x2e(%edx)
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
dec    %eax
mov    $0x99,%bh
.byte 0x35
