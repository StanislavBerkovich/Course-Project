das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,0x61(%ebx)
xor    $0x4e,%al
hlt
shlb   -0x79(%ebx)
lds    (%ebx),%esp
and    $0xe9,%al
pop    %ds
xor    %esp,%ebx
.byte 0xdb
nop
dec    %esp
js     14b <_init-0x20c9>
adc    %eax,(%eax)
add    %al,(%eax)
cltd
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%eax)
add    $0x80,%al
add    %al,%ah
imul   $0x48021,-0x6afbe7b3(%ecx),%edx
00
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
cltd
add    %al,(%eax)
add    %bl,-0x64000000(%ebx)
add    %al,(%eax)
add    %bl,0x0(%ebp)
add    %al,(%eax)
add    %bl,-0x5f000000(%edi)
add    %al,(%eax)
add    %ah,-0x5b000000(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
add    %ch,-0x57000000(%eax)
add    %al,(%eax)
add    %ch,-0x55000000(%edx)
add    %al,(%eax)
add    %ch,%dl
shr    %cl,%edi
push   %cs
imul   $0x7c,-0x66(%edi),%edi
mov    $0xd90ef18d,%ecx
jno    277 <_init-0x1f9d>
sbb    $0xac,%al
dec    %ebx
jecxz  1e4 <_init-0x2030>
mov    $0x8a7c92e3,%ebx
sub    %edi,%esp
lock inc %ebp
lds    (%eax),%edx
fisubrl (%esi)
xchg   %eax,%ebx
cmc
ds
inc    %ebx
inc    %ebp
aad    $0xec
cmp    -0x7c(%ebx),%ah
ret    $0xcbdd
shl    $0xab,%eax
push   %ebx
cmc
and    $0xecede858,%eax
sub    %ebp,%edi
add    0x53efb823(%edx),%ebx
cmp    %edx,%ecx
sbb    -0x77d505af(%eax),%ebx
dec    %ebx
.byte 0x69
xchg   %dl,%ch
mov    %eax,0x7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,%ah
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%eax),%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   $0x0,(%eax,%eax,1)
adc    (%eax),%al
add    %al,(%eax)
test   %cl,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x9(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
das
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     $0x4,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fildl  (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,%ah
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,0x8(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     3b4 <_init-0x1e60>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    3c3 <_init-0x1e51>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     3e7 <_init-0x1e2d>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax),%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x8(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     44e <_init-0x1dc6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x8(%edx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
jne    4a7 <_init-0x1d6d>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x9
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esi,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ss
pop    %es
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
sbb    $0x5,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %es
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x9(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ecx),%ecx
add    %al,(%eax)
and    (%eax),%al
add    %al,(%eax)
decl   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x8(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popa
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aas
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%eax),%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   $0x8
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x0
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  756 <_init-0x1abe>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%esi),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x9,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
clc
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jne    7a6 <_init-0x1a6e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
into
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x9(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esi
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
or     %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x7(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x8(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%eax),%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x8,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x6,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%cl
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
hlt
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%edi),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x7,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret   $0x3
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x8(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x6(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x7(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax,%ecx,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x9(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %al,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x4,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stc
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebp
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%dh
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x8(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,%bh
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %eax,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%ecx),%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    bf3 <_init-0x1621>
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x0,%eax
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %ah,0x9(%ebx)
add    %al,(%eax)
adc    %ch,(%ebx)
add    %al,(%eax)
(bad)
adc    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x58e00
add    %dl,(%edx,%eiz,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
lea    (%ecx),%ecx
add    %al,(%eax)
enter  $0xf0,$0x0
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
push   %ds
or     %al,(%eax)
add    %ch,0x40000(%eax,%edi,4)
add    %al,(%eax)
adc    %eax,(%eax)
ltr    -0x1bfffff7(%ecx)
lock add %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
mov    $0x9,%bh
add    %al,(%eax)
(bad)
lock add %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
rorl   $0x0,(%ecx)
add    %dh,(%eax)
int    $0x0
add    %al,(%esi)
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %bl,0x9(%esi)
int    $0x0
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sldt   -0x37fffff7(%esi)
lock add %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
rorl   %cl,(%ecx)
add    %al,(%eax)
adc    %cl,%ch
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sldt   (%ebx)
or     (%eax),%al
add    %dl,0xa0000(,%ecx,8)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
xor    $0x3600000a,%eax
int    $0x0
add    %cl,(%ecx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ch,(%esi)
or     (%eax),%al
add    %ch,0x40000b8(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ah,0xa(%edx)
add    %al,(%eax)
and    %cl,%ch
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verw   %bp
or     %eax,(%eax)
add    %ch,0x40000(,%ecx,8)
add    %al,(%eax)
adc    %eax,(%eax)
lldt   0xa(%edi)
add    %al,(%eax)
inc    %eax
ljmp   $0x0,$0x2340000
adc    %eax,(%eax)
adc    $0xa1900,%eax
add    %al,0x90000(,%ecx,8)
add    %al,(%eax)
adc    %eax,(%eax)
sldt   0xa(%ebx)
add    %al,(%eax)
and    $0xcd,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
.byte 0xf
add    %ch,0x62(%ecx,%ebp,2)
data16
jne    d96 <_init-0x147e>
gs
jae,pn d96 <_init-0x147e>
xor    %cs:(%eax),%al
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     d98 <_init-0x147c>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    dc3 <_init-0x1451>
popa
jb     dc6 <_init-0x144e>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    db8 <_init-0x145c>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    dd9 <_init-0x143b>
gs
jae    d69 <_init-0x14ab>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     dd5 <_init-0x143f>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
data16
jne    df9 <_init-0x141b>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     dff <_init-0x1415>
pop    %edi
popa
fs
fs
pop    %edi
popa
jb     dfa <_init-0x141a>
add    %ah,0x75(%esi)
jae    dfd <_init-0x1417>
pop    %edi
jb     e00 <_init-0x1414>
jo     e09 <_init-0x140b>
jns    dfe <_init-0x1416>
jae    e15 <_init-0x13ff>
popa
je     e0a <_init-0x140a>
jae    da6 <_init-0x146e>
data16
jne    e1c <_init-0x13f8>
gs
pop    %edi
jae    e12 <_init-0x1402>
je     e0e <_init-0x1406>
jae    e1a <_init-0x13fa>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x6c646e61
gs
jb     e31 <_init-0x13e3>
add    %ah,0x75(%esi)
jae    e28 <_init-0x13ec>
pop    %edi
jne    e34 <_init-0x13e0>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    e38 <_init-0x13dc>
je     dcc <_init-0x1448>
data16
jne    e42 <_init-0x13d2>
gs
pop    %edi
jb     e38 <_init-0x13dc>
jo     e41 <_init-0x13d3>
jns    e36 <_init-0x13de>
arpl   %si,0x65(%edx)
popa
je     e42 <_init-0x13d2>
add    %ah,0x75(%esi)
jae    e47 <_init-0x13cd>
pop    %edi
jb     e4a <_init-0x13ca>
jo     e53 <_init-0x13c1>
jns    e48 <_init-0x13cc>
bound  %ebp,0x61(%ebp)
jo     dee <_init-0x1426>
data16
jne    e64 <_init-0x13b0>
gs
pop    %edi
jae    e5a <_init-0x13ba>
jae    e6a <_init-0x13aa>
imul   $0x6464615f,0x6e(%edi),%ebp
pop    %edi
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%esi)
jae    e6d <_init-0x13a7>
pop    %edi
popa
fs
fs
pop    %edi
imul   $0x7972746e,%fs:0x65(%edx),%esi
add    %ah,0x75(%esi)
jae    e7f <_init-0x1395>
pop    %edi
jb     e82 <_init-0x1392>
jo     e8b <_init-0x1389>
jns    e80 <_init-0x1394>
js     e84 <_init-0x1390>
je     e99 <_init-0x137b>
jb     e27 <_init-0x13ed>
data16
jne    e9d <_init-0x1377>
gs
pop    %edi
jb     e93 <_init-0x1381>
jo     e9c <_init-0x1378>
jns    e91 <_init-0x1383>
outsb  %gs:(%esi),(%dx)
je     ea8 <_init-0x136c>
jns    e38 <_init-0x13dc>
data16
jne    eae <_init-0x1366>
gs
pop    %edi
jae    ea4 <_init-0x1370>
jae    eb4 <_init-0x1360>
imul   $0x7365645f,0x6e(%edi),%ebp
je     ebc <_init-0x1358>
outsl  %ds:(%esi),(%dx)
jns    e4d <_init-0x13c7>
data16
jne    ec3 <_init-0x1351>
gs
pop    %edi
jb     eb9 <_init-0x135b>
jo     ec2 <_init-0x1352>
jns    eb7 <_init-0x135d>
jb     ebf <_init-0x1355>
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x73756600,0x6b(%esi),%ebp
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     edd <_init-0x1337>
pop    %edi
data16
jb     ed2 <_init-0x1342>
gs
pop    %edi
popa
jb     ed9 <_init-0x133b>
jae    e74 <_init-0x13a0>
data16
jne    eea <_init-0x132a>
gs
pop    %edi
jb     ee0 <_init-0x1334>
jo     ee9 <_init-0x132b>
jns    ede <_init-0x1336>
ja     ef3 <_init-0x1321>
imul   $0x65737566,0x0(%ebp,%eiz,2),%esi
pop    %edi
jb     ef1 <_init-0x1323>
jo     efa <_init-0x131a>
jns    eef <_init-0x1325>
popa
je     f07 <_init-0x130d>
jb     e95 <_init-0x137f>
data16
jne    f0b <_init-0x1309>
gs
pop    %edi
jb     f01 <_init-0x1313>
jo     f0a <_init-0x130a>
jns    eff <_init-0x1315>
bound  %esi,0x66(%ebp)
add    %ah,0x75(%esi)
jae    f0d <_init-0x1307>
pop    %edi
jb     f10 <_init-0x1304>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    f14 <_init-0x1300>
pop    %edi
jae    f1b <_init-0x12f9>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
push   $0x6c646e61
gs
jb     f32 <_init-0x12e2>
add    %ah,0x75(%esi)
jae    f29 <_init-0x12eb>
pop    %edi
jb     f2c <_init-0x12e8>
jno    f28 <_init-0x12ec>
arpl   %si,0x0(%eax,%edi,2)
data16
jne    f43 <_init-0x12d1>
gs
pop    %edi
jbe    f39 <_init-0x12db>
jb     f49 <_init-0x12cb>
imul   $0x73756600,0x6e(%edi),%ebp
gs
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     f4f <_init-0x12c5>
gs
jbe    f4b <_init-0x12c9>
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     f55 <_init-0x12bf>
data16
jns    f4e <_init-0x12c6>
imul   $0x695f6c61,0x76(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs add %ah,%fs:%gs:0x75(%esi)
jae    f64 <_init-0x12b0>
pop    %edi
jb     f67 <_init-0x12ad>
jo     f70 <_init-0x12a4>
jns    f65 <_init-0x12af>
gs
jb     f7b <_init-0x1299>
add    %ah,0x75(%esi)
jae    f73 <_init-0x12a1>
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    f81 <_init-0x1293>
je     f15 <_init-0x12ff>
data16
jne    f8b <_init-0x1289>
gs
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     f8a <_init-0x128a>
gs
jbe    f86 <_init-0x128e>
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     f27 <_init-0x12ed>
data16
jne    f9d <_init-0x1277>
gs
pop    %edi
jb     f93 <_init-0x1281>
jo     f9c <_init-0x1278>
jns    f91 <_init-0x1283>
outsl  %ds:(%esi),(%dx)
jo     f9a <_init-0x127a>
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%esi)
jae    fa0 <_init-0x1274>
pop    %edi
jae    fa3 <_init-0x1271>
jae    fb3 <_init-0x1261>
imul   $0x6f6f6c5f,0x6e(%edi),%ebp
jo     f49 <_init-0x12cb>
insb   (%dx),%es:(%edi)
imul   $0x2d736674,0x6e(%edx),%esp
xor    0x2e(%edi),%esp
jae    fc5 <_init-0x124f>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %ch,0x74(%esi)
data16
jae    fbf <_init-0x1255>
popa
je     fd7 <_init-0x123d>
jb     fc4 <_init-0x1250>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    fda <_init-0x123a>
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
jae    fe8 <_init-0x122c>
arpl   %si,0x72(%ebp)
add    %ch,%gs:0x74(%esi)
data16
jae    fec <_init-0x1228>
jb     ffb <_init-0x1219>
pop    %edi
jbe    ff5 <_init-0x121f>
outsb  %ds:(%esi),(%dx)
pop    %edi
je     1005 <_init-0x120f>
pop    %edi
insb   (%dx),%es:(%edi)
arpl   %bp,0x0(%esi)
outsb  %ds:(%esi),(%dx)
je     1004 <_init-0x1210>
jae    fff <_init-0x1215>
imul   $0x755f6564,0x6f(%esi),%ebp
jo     100d <_init-0x1207>
popa
je     1011 <_init-0x1203>
pop    %edi
je     1018 <_init-0x11fc>
insl   (%dx),%es:(%edi)
gs
jae    fb3 <_init-0x1261>
outsb  %ds:(%esi),(%dx)
je     101c <_init-0x11f8>
jae    1017 <_init-0x11fd>
imul   $0x65726170,%fs:0x5f(%edx),%esi
outsb  %ds:(%esi),(%dx)
je     1022 <_init-0x11f2>
imul   $0x6e006564,0x6f(%esi),%ebp
je     1032 <_init-0x11e2>
jae    102d <_init-0x11e7>
popa
je     1045 <_init-0x11cf>
jb     1032 <_init-0x11e2>
jo     104c <_init-0x11c8>
jb     1040 <_init-0x11d4>
je     103e <_init-0x11d6>
add    %ch,0x74(%esi)
data16
jae    103e <_init-0x11d6>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     104d <_init-0x11c7>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    104e <_init-0x11c6>
popa
je     1066 <_init-0x11ae>
jb     1053 <_init-0x11c1>
jo     106b <_init-0x11a9>
je     1057 <_init-0x11bd>
jae    105f <_init-0x11b5>
popa
jb     1060 <_init-0x11b4>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    1067 <_init-0x11ad>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    1073 <_init-0x11a1>
je     106f <_init-0x11a5>
push   $0x6c646e61
gs
jb     1018 <_init-0x11fc>
outsb  %ds:(%esi),(%dx)
je     1081 <_init-0x1193>
jae    107c <_init-0x1198>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1088 <_init-0x118c>
fs
pop    %edi
arpl   %si,0x65(%edx)
popa
je     1090 <_init-0x1184>
add    %ch,0x74(%esi)
data16
jae    1090 <_init-0x1184>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     109c <_init-0x1178>
jae    10b3 <_init-0x1161>
fs
gs
jb     10b5 <_init-0x115f>
add    %ch,0x74(%esi)
data16
jae    10a8 <_init-0x116c>
imul   $0x6c5f6564,0x6f(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
bound  %edi,0x5f(%ecx)
insl   (%dx),%es:(%edi)
bound  %esi,0x6e(%ebx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x74(%esi)
data16
jae    10c5 <_init-0x114f>
arpl   %si,0x65(%edx)
popa
je     10d1 <_init-0x1143>
pop    %edi
fs
gs
jbe    10da <_init-0x113a>
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
je     10dd <_init-0x1137>
jae    10d8 <_init-0x113c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     10e4 <_init-0x1130>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     10ef <_init-0x1125>
jae    10ea <_init-0x112a>
popa
je     1102 <_init-0x1112>
jb     10ef <_init-0x1125>
addr16
gs
je     10f3 <_init-0x1121>
data16
jb     10fc <_init-0x1118>
gs
pop    %edi
bound  %ebp,0x74(%ecx)
jae    109e <_init-0x1176>
outsb  %ds:(%esi),(%dx)
je     1107 <_init-0x110d>
jae    1102 <_init-0x1112>
jbe    1114 <_init-0x1100>
insb   (%dx),%es:(%edi)
jne    1115 <_init-0x10ff>
gs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
push   $0x72656269
imul   $0x746e,0x0(%ebp,%eiz,2),%bp
data16
jae    111e <_init-0x10f6>
js     1122 <_init-0x10f2>
je     1137 <_init-0x10dd>
jb     1124 <_init-0x10f0>
jae    1140 <_init-0x10d4>
jae    113d <_init-0x10d7>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jb     1133 <_init-0x10e1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1137 <_init-0x10dd>
js     1135 <_init-0x10df>
je     114a <_init-0x10ca>
jb     10d8 <_init-0x113c>
outsb  %ds:(%esi),(%dx)
je     1141 <_init-0x10d3>
jae    113c <_init-0x10d8>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    1147 <_init-0x10cd>
jae    10e6 <_init-0x112e>
outsb  %ds:(%esi),(%dx)
je     114f <_init-0x10c5>
jae    114a <_init-0x10ca>
fs
gs
jbe    1158 <_init-0x10bc>
arpl   %sp,0x5f(%ebp)
jae    116d <_init-0x10a7>
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     1160 <_init-0x10b4>
jae    115b <_init-0x10b9>
jae    1163 <_init-0x10b1>
je     115f <_init-0x10b5>
jae    116a <_init-0x10aa>
outsl  %ds:(%esi),(%dx)
ja     1173 <_init-0x10a1>
pop    %edi
imul   $0x6e00,0x73(%ebp,%eiz,2),%bp
je     1175 <_init-0x109f>
jae    1170 <_init-0x10a4>
popa
je     1188 <_init-0x108c>
jb     1175 <_init-0x109f>
insl   (%dx),%es:(%edi)
popa
jo     1179 <_init-0x109b>
ja     1184 <_init-0x1090>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
jb     1197 <_init-0x107d>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x74(%ebx),%esi
jae    118c <_init-0x1088>
jne    119c <_init-0x1078>
outsl  %ds:(%esi),(%dx)
jne    11a0 <_init-0x1074>
je     1134 <_init-0x10e0>
outsb  %ds:(%esi),(%dx)
je     119d <_init-0x1077>
jae    1198 <_init-0x107c>
jae    11a0 <_init-0x1074>
je     119c <_init-0x1078>
outsl  %ds:(%esi),(%dx)
ja     11ae <_init-0x1066>
gs
jb     1143 <_init-0x10d1>
outsb  %ds:(%esi),(%dx)
je     11ac <_init-0x1068>
jae    11a7 <_init-0x106d>
outsw  %ds:(%esi),(%dx)
jb     11ae <_init-0x1066>
imul   $0x68635f6e,0x65(%esp,%eiz,2),%esp
popa
jb     11ca <_init-0x104a>
add    %ch,0x74(%esi)
data16
jae    11bc <_init-0x1058>
insl   (%dx),%es:(%edi)
popa
imul   $0x73,0x5f(%ebp),%esp
jns    11d2 <_init-0x1042>
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x6b(%esi),%ebp
jae    11ce <_init-0x1046>
jbe    11e0 <_init-0x1034>
insb   (%dx),%es:(%edi)
jne    11e1 <_init-0x1033>
gs
pop    %edi
gs
jb     11eb <_init-0x1029>
outsl  %ds:(%esi),(%dx)
jb     117c <_init-0x1098>
outsb  %ds:(%esi),(%dx)
je     11e5 <_init-0x102f>
jae    11e0 <_init-0x1034>
jae    11e8 <_init-0x102c>
je     11e4 <_init-0x1030>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x74(%esi)
data16
jae    11f0 <_init-0x1024>
arpl   %si,0x65(%edx)
popa
je     11fc <_init-0x1018>
pop    %edi
jae    1213 <_init-0x1001>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x6b(%esi),%ebp
jae    1204 <_init-0x1010>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     1210 <_init-0x1004>
jae    122c <_init-0xfe8>
jae    1221 <_init-0xff3>
outsl  %ds:(%esi),(%dx)
add    %ch,0x74(%bp)
data16
jae    121c <_init-0xff8>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    122d <_init-0xfe7>
add    %ch,0x74(%esi)
data16
jae    122d <_init-0xfe7>
addr16
gs
je     1231 <_init-0xfe3>
outsl  %ds:(%esi),(%dx)
ja     1243 <_init-0xfd1>
gs
jb     1237 <_init-0xfdd>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x74(%esi)
data16
jae    1241 <_init-0xfd3>
jae    1249 <_init-0xfcb>
je     1245 <_init-0xfcf>
outsl  %ds:(%esi),(%dx)
ja     1257 <_init-0xfbd>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    1251 <_init-0xfc3>
jb     1259 <_init-0xfbb>
popa
insb   (%dx),%es:(%edi)
jo     1259 <_init-0xfbb>
je     1262 <_init-0xfb2>
pop    %edi
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
add    %ch,0x74(%esi)
data16
jae    126c <_init-0xfa8>
jae    1274 <_init-0xfa0>
je     1270 <_init-0xfa4>
arpl   %bp,0x61(%eax)
jb     1275 <_init-0xf9f>
outsb  %gs:(%esi),(%dx)
arpl   %bp,0x64(%edi)
imul   $0x66746e00,0x67(%esi),%ebp
jae    1283 <_init-0xf91>
js     1287 <_init-0xf8d>
je     129c <_init-0xf78>
jb     1289 <_init-0xf8b>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     12a4 <_init-0xf70>
imul   $0x66746e00,0x67(%esi),%ebp
jae    129c <_init-0xf78>
popa
je     12b4 <_init-0xf60>
jb     12a1 <_init-0xf73>
je     12b6 <_init-0xf5e>
jne    12b4 <_init-0xf60>
arpl   %sp,0x74(%ecx)
add    %ch,%gs:0x74(%esi)
data16
jae    12af <_init-0xf65>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    12c0 <_init-0xf54>
pop    %edi
imul   $0x726964,0x5f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     12cc <_init-0xf48>
jae    12c7 <_init-0xf4d>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     12d8 <_init-0xf3c>
jae    12d3 <_init-0xf41>
popa
je     12eb <_init-0xf29>
jb     12d8 <_init-0xf3c>
outsl  %ds:(%esi),(%dx)
jo     12e1 <_init-0xf33>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    12e2 <_init-0xf32>
outsl  %ds:(%esi),(%dx)
jo     12eb <_init-0xf29>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    12ef <_init-0xf25>
arpl   %si,0x72(%ebp)
add    %bl,%gs:0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    12f9 <_init-0xf1b>
jae    1301 <_init-0xf13>
je     12fd <_init-0xf17>
imul   $0x5f65726f,0x6e(%edi),%esp
arpl   %sp,0x73(%ecx)
add    %bl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
imul   $0x74697265,0x68(%esi),%ebp
gs
fs
pop    %edi
imul   $0x5f736674,0x6e(%eax,%eax,1),%esp
js     132a <_init-0xeea>
je     133f <_init-0xed5>
jb     132c <_init-0xee8>
jae    1348 <_init-0xecc>
jae    1345 <_init-0xecf>
gs
insl   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     1350 <_init-0xec4>
popa
je     134f <_init-0xec5>
jb     12dd <_init-0xf37>
outsb  %ds:(%esi),(%dx)
je     1346 <_init-0xece>
jae    1341 <_init-0xed3>
js     1345 <_init-0xecf>
je     135a <_init-0xeba>
jb     1347 <_init-0xecd>
jae    1363 <_init-0xeb1>
jae    1360 <_init-0xeb4>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jae    1356 <_init-0xebe>
je     136b <_init-0xea9>
popa
je     136a <_init-0xeaa>
jb     12f8 <_init-0xf1c>
outsb  %ds:(%esi),(%dx)
je     1361 <_init-0xeb3>
jae    135c <_init-0xeb8>
popa
je     1374 <_init-0xea0>
jb     1361 <_init-0xeb3>
popa
fs add %ch,%fs:0x74(%esi)
data16
jae    136a <_init-0xeaa>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    1376 <_init-0xe9e>
je     1372 <_init-0xea2>
insb   (%dx),%es:(%edi)
gs
jbe    137c <_init-0xe98>
insb   (%dx),%es:(%edi)
jae    131a <_init-0xefa>
outsb  %ds:(%esi),(%dx)
je     1383 <_init-0xe91>
jae    137e <_init-0xe96>
popa
je     1396 <_init-0xe7e>
jb     1383 <_init-0xe91>
addr16
gs
je     1387 <_init-0xe8d>
jae    138f <_init-0xe85>
popa
jb     1390 <_init-0xe84>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    1397 <_init-0xe7d>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     13a3 <_init-0xe71>
fs
pop    %edi
popa
jae    13a2 <_init-0xe72>
outsl  %ds:(%esi),(%dx)
ja     13b4 <_init-0xe60>
gs
jb     1349 <_init-0xecb>
outsb  %ds:(%esi),(%dx)
je     13b2 <_init-0xe62>
jae    13ad <_init-0xe67>
js     13b1 <_init-0xe63>
je     13c6 <_init-0xe4e>
jb     13b3 <_init-0xe61>
data16
jb     13bc <_init-0xe58>
gs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     13cd <_init-0xe47>
imul   $0x66746e00,0x67(%esi),%ebp
jae    13c5 <_init-0xe4f>
jae    13cd <_init-0xe47>
je     13c9 <_init-0xe4b>
imul   $0x74697265,0x68(%esi),%ebp
gs
fs
pop    %edi
jo     13e5 <_init-0xe2f>
jae    13e1 <_init-0xe33>
js     137a <_init-0xe9a>
outsb  %ds:(%esi),(%dx)
je     13e3 <_init-0xe31>
jae    13de <_init-0xe36>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     13ea <_init-0xe2a>
fs
pop    %edi
popa
arpl   %sp,0x65(%ebx)
jae    1400 <_init-0xe14>
add    %ch,0x74(%esi)
data16
jae    13f2 <_init-0xe22>
jb     13fa <_init-0xe1a>
popa
fs imul $0x7366746e,%fs:0x0(%edx),%esi
73
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     1410 <_init-0xe04>
jae    140b <_init-0xe09>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    141e <_init-0xdf6>
je     1411 <_init-0xe03>
gs
jb     1427 <_init-0xded>
outsl  %ds:(%esi),(%dx)
jb     13b8 <_init-0xe5c>
outsb  %ds:(%esi),(%dx)
je     1421 <_init-0xdf3>
jae    141c <_init-0xdf8>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bx,0x73(%edi)
arpl   %si,%gs:0x72(%ebp)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esp
imul   $0x755f6564,0x6f(%esi),%ebp
jo     143d <_init-0xdd7>
popa
je     1441 <_init-0xdd3>
pop    %edi
insl   (%dx),%es:(%edi)
bound  %esi,0x6e(%ebx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x74(%esi)
data16
jae    1449 <_init-0xdcb>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     1464 <_init-0xdb0>
imul   $0x66746e00,0x67(%esi),%ebp
jae    145c <_init-0xdb8>
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x6b(%esi),%ebp
jae    1466 <_init-0xdae>
js     146a <_init-0xdaa>
je     147f <_init-0xd95>
jb     146c <_init-0xda8>
jae    1488 <_init-0xd8c>
jae    1485 <_init-0xd8f>
gs
insl   (%dx),%es:(%edi)
pop    %edi
je     148f <_init-0xd85>
jo     147d <_init-0xd97>
add    %ch,0x74(%esi)
data16
jae    147d <_init-0xd97>
arpl   %si,0x65(%edx)
popa
je     1489 <_init-0xd8b>
add    %ch,0x74(%esi)
data16
jae    1489 <_init-0xd8b>
popa
je     14a1 <_init-0xd73>
jb     148e <_init-0xd86>
jb     1496 <_init-0xd7e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    149a <_init-0xd7a>
add    %ch,0x74(%esi)
data16
jae    149a <_init-0xd7a>
popa
je     14b2 <_init-0xd62>
jb     149f <_init-0xd75>
jo     14a5 <_init-0xd6f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    14ab <_init-0xd69>
add    %ch,0x74(%esi)
data16
jae    14ab <_init-0xd69>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    14be <_init-0xd56>
je     1452 <_init-0xdc2>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    14c5 <_init-0xd4f>
gs
data16
jae    14c9 <_init-0xd4b>
imul   $0x5f70,0x75(%eax),%di
popa
je     14e7 <_init-0xd2d>
jb     14de <_init-0xd36>
bound  %esi,0x74(%ebp)
add    %ch,%gs:0x74(%esi)
data16
jae    14de <_init-0xd36>
popa
je     14f6 <_init-0xd1e>
jb     14e3 <_init-0xd31>
jo     14f8 <_init-0xd1c>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    14ee <_init-0xd26>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     1503 <_init-0xd11>
add    %ch,%fs:0x74(%esi)
data16
jae    1504 <_init-0xd10>
popa
je     151c <_init-0xcf8>
jb     1509 <_init-0xd0b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     151a <_init-0xcfa>
jae    1515 <_init-0xcff>
jae    151d <_init-0xcf7>
je     1519 <_init-0xcfb>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x74(%esi)
data16
jae    1523 <_init-0xcf1>
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     1532 <_init-0xce2>
jae    152d <_init-0xce7>
jne    1533 <_init-0xce1>
jae    1546 <_init-0xcce>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
je     1540 <_init-0xcd4>
jae    153b <_init-0xcd9>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     1547 <_init-0xccd>
add    %ch,0x74(%esi)
data16
jae    1547 <_init-0xccd>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
gs
insl   (%dx),%es:(%edi)
jo     1566 <_init-0xcae>
jns    1553 <_init-0xcc1>
imul   $0x7062696c,%fs:0x0(%edx),%esi
je     1566 <_init-0xcae>
jb     1565 <_init-0xcaf>
popa
fs
jae,pn 1574 <_init-0xca0>
xor    %al,%cs:(%eax)
ja     156b <_init-0xca9>
imul   $0x6f660064,0x69(%eax,%esi,2),%esi
jb     157f <_init-0xc95>
add    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    1587 <_init-0xc8d>
gs
gs
jo     151f <_init-0xcf5>
pop    %edi
pop    %edi
gs
jb     1596 <_init-0xc7e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x62696c00,0x6e(%edi),%ebp
arpl   %bp,(%esi)
jae    15a6 <_init-0xc6e>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    15b4 <_init-0xc60>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     15b0 <_init-0xc64>
jo     15c8 <_init-0xc4c>
add    %ah,0x78(%ebp)
arpl   %bp,%gs:0x73(%eax,%eax,1)
je     15cb <_init-0xc49>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     15cb <_init-0xc49>
outsb  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jae    15dd <_init-0xc37>
jb     15cf <_init-0xc45>
jne    15dd <_init-0xc37>
add    %dh,0x74(%ebx)
jb     15e0 <_init-0xc34>
arpl   %si,0x79(%eax)
add    %ah,0x65(%ecx,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
gs
js     15f2 <_init-0xc22>
je     158b <_init-0xc89>
data16
addr16
gs
je     1603 <_init-0xc11>
add    %dh,0x74(%ebx)
jb     1601 <_init-0xc13>
outsb  %gs:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     1617 <_init-0xbfd>
je     1618 <_init-0xbfc>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    1619 <_init-0xbfb>
add    %dh,0x74(%ebx)
jb     161c <_init-0xbf8>
popa
je     15bc <_init-0xc58>
jne    162b <_init-0xbe9>
popa
jae    162c <_init-0xbe8>
add    %ah,0x65(%edi)
je     162d <_init-0xbe7>
imul   $0x7473785f,0x5f(%eax,%eax,1),%esp
popa
je     1607 <_init-0xc0d>
xor    $0x0,%al
jae    1648 <_init-0xbcc>
arpl   %sp,0x6e(%ecx)
data16
add    %ch,0x70(%edi)
je     163f <_init-0xbd5>
jb     1647 <_init-0xbcd>
add    %bl,0x5f(%edi)
jae    1653 <_init-0xbc1>
jo     1659 <_init-0xbbb>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     1669 <_init-0xbab>
imul   $0x67657465,0x67(%eax,%eax,1),%esp
imul   $0x706f7465,0x67(%eax,%eax,1),%esp
je     1665 <_init-0xbaf>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
js     167c <_init-0xb98>
imul   $0x64,0x6f(%esi),%ebp
add    %ah,0x65(%edi)
je     167b <_init-0xb99>
ja     167e <_init-0xb96>
add    %ah,0x77(%esi)
jb     1688 <_init-0xb8c>
je     1686 <_init-0xb8e>
add    %ah,0x65(%edi)
je     168b <_init-0xb89>
jne    1691 <_init-0xb83>
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x5f(%ebx)
addr16
gs
je     16a8 <_init-0xb6c>
imul   $0x72747300,0x65(%ebp),%ebp
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     16b2 <_init-0xb62>
add    %bl,0x5f(%edi)
jae    16c2 <_init-0xb52>
jb     16bd <_init-0xb57>
outsb  %ds:(%esi),(%dx)
je     16bd <_init-0xb57>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x6f(%esi)
jo     16c5 <_init-0xb4f>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     16db <_init-0xb39>
gs
jb     16dc <_init-0xb38>
add    %dh,0x74(%ebx)
jb     16d2 <_init-0xb42>
insl   (%dx),%es:(%edi)
jo     1672 <_init-0xba2>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     16f2 <_init-0xb22>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x63737973,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jae    1709 <_init-0xb0b>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    1725 <_init-0xaef>
popa
jb     1728 <_init-0xaec>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x66(%esi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    171f <_init-0xaf5>
je     1734 <_init-0xae0>
jne    1737 <_init-0xadd>
je     172b <_init-0xae9>
fs
pop    %edi
jo     173c <_init-0xad8>
imul   $0x656c,%gs:0x5f(%eax),%di
outsb  %ds:(%esi),(%dx)
add    %al,0x58(%ebp)
inc    %ebp
inc    %ebx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ch,0x66(%esi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    1742 <_init-0xad2>
jne    1758 <_init-0xabc>
gs
jb     1747 <_init-0xacd>
jo     175c <_init-0xab8>
imul   $0x666e,%gs:0x0(%eax),%di
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    1754 <_init-0xac0>
jae    175c <_init-0xab8>
arpl   %si,0x72(%ebp)
imul   $0x66657270,0x5f(%ecx,%edi,2),%esi
imul   $0x6e656c,0x5f(%eax),%edi
outsb  %ds:(%esi),(%dx)
pop    %di
outsb  %ds:(%esi),(%dx)
jae    176e <_init-0xaa6>
jne    1784 <_init-0xa90>
gs
jb     1773 <_init-0xaa1>
jo     1788 <_init-0xa8c>
imul   $0x656c,%gs:0x5f(%eax),%di
outsb  %ds:(%esi),(%dx)
add    %ch,0x66(%esi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jae    1784 <_init-0xa90>
jae    178c <_init-0xa88>
arpl   %si,0x72(%ebp)
imul   $0x66657270,0x5f(%ecx,%edi,2),%esi
imul   $0x6e5f666e,0x0(%eax),%edi
jae    179a <_init-0xa7a>
je     17af <_init-0xa65>
jne    17b2 <_init-0xa62>
je     17a6 <_init-0xa6e>
fs
pop    %edi
jo     17b7 <_init-0xa5d>
imul   $0x665f,%gs:0x0(%eax),%di
jo     17ad <_init-0xa67>
push   $0x61780077
je     17c9 <_init-0xa4b>
jb     17b6 <_init-0xa5e>
outsb  %ds:(%esi),(%dx)
je     17c0 <_init-0xa54>
jae    17bb <_init-0xa59>
xor    0x0(%edi),%esp
outsb  %ds:(%esi),(%dx)
pop    %di
outsb  %ds:(%esi),(%dx)
jae    17c4 <_init-0xa50>
jae    17e0 <_init-0xa34>
jae    17dd <_init-0xa37>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jo     17e0 <_init-0xa34>
imul   $0x706f,%gs:0x0(%eax),%di
je     17e0 <_init-0xa34>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x5f666e00,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
jae    17e3 <_init-0xa31>
jae    17ff <_init-0xa15>
jae    17fc <_init-0xa18>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jo     17ff <_init-0xa15>
imul   $0x656c,%gs:0x5f(%eax),%di
outsb  %ds:(%esi),(%dx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
aaa
cs
xor    $0x53554600,%eax
inc    %ebp
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x55(%esi)
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
add    %al,%ss:0x55(%esi)
push   %ebx
inc    %ebp
pop    %edi
xor    (%esi),%ch
xor    $0x53554600,%eax
inc    %ebp
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    (%eax),%eax
add    $0x6000300,%eax
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%edi)
add    %cl,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
or     $0x6000400,%eax
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
sldt   (%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
sldt   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    $0x0,%al
adc    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
or     %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%al
faddl  (%edi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0xe0000,%eax
jp     1998 <_init-0x87c>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0xb0000,%eax
test   %cl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
push   %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
test   $0x21,%al
jnp    19c2 <_init-0x852>
add    %al,(%eax)
str    0x1000000a(%esi)
add    %al,(%eax)
add    %ah,-0x5c(%ebp)
and    %ecx,(%ebx)
add    %al,(%eax)
or     $0xa9700,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0xa7b21(%edi)
add    %cl,(%eax,%eax,1)
mov    %al,0x1000000a
add    %al,(%eax)
add    %ah,0xa7b21(%esi)
add    %cl,(%ecx)
add    %ch,0x1000000a(%ebx)
add    %al,(%eax)
add    %ah,0xa7b21(%ebp)
add    %al,(%esi)
add    %dh,0x100000(%edx,%ecx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %edi,0xa(%ebx)
add    %al,(%eax)
add    $0x0,%al
mov    $0xa,%ebp
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%edi)
add    %dl,(%eax,%ecx,1)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x100000,%eax
jp     1a38 <_init-0x7dc>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    1a55 <_init-0x7bf>
imul   $0xa0000,(%ecx),%ecx
(bad)
or     (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0xad2,0x80000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x70000,%eax
fmull  (%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
add    $0xae600,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
test   %cl,(%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     1a9f <_init-0x775>
imul   $0x20000,(%ecx),%ecx
icebp
or     (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
(bad)
jmp    81a9a <_end+0x729b6>
add    %al,(%eax)
enter  $0xe9,$0x0
or     %al,(%eax)
add    %al,(%eax)
loopne 1a8f <_init-0x785>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lock jmp 81ab2 <_end+0x729ce>
add    %al,(%eax)
add    %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
ljmp   $0x0,$0x80000
dec    %esp
ljmp   $0x0,$0x80000
pop    %eax
ljmp   $0x0,$0x80000
fs
ljmp   $0x0,$0x80000
jo     1ad8 <_init-0x73c>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jl     1ae0 <_init-0x734>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    %ch,%dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
ljmp   $0x0,$0x80000
mov    0x80000ea,%al
add    %al,(%eax)
add    %ch,0x80000(%edx,%ebp,8)
add    %al,(%eax)
mov    $0x80000ea,%eax
add    %al,(%eax)
add    %al,%ah
ljmp   $0x0,$0x80000
shr    %dl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fsubr  %st,%st(2)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
call   8001c2b <_end+0x7ff2b47>
add    %al,(%eax)
add    %dh,%ah
ljmp   $0x0,$0x80000
add    %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %eax
jmp    1b7f <_init-0x695>
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx,%ebp,8)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,-0x15(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jmp    1b97 <_init-0x67d>
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,-0x15(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
test   %ch,%bl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
nop
jmp    1baf <_init-0x665>
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,0x80000(%ebx,%ebp,8)
add    %al,(%eax)
test   $0xeb,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xeb,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
shr    $0x0,%bl
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%ah
jmp    1bd7 <_init-0x63d>
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%al
jmp    1bdf <_init-0x635>
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%ah
jmp    1be7 <_init-0x62d>
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%al
jmp    1bef <_init-0x625>
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%ah
jmp    1bf7 <_init-0x61d>
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %ch,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    %ch,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %esp
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
call   8001d30 <_end+0x7ff2c4c>
add    %al,(%eax)
add    %al,(%eax,%esi,8)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %eax
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   $0x80000f0
add    %al,(%eax)
add    %ch,0x0(%eax,%esi,8)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,-0x10(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
je     1cd6 <_init-0x53e>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     1cde <_init-0x536>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jl     1ce6 <_init-0x52e>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x80000(%eax,%esi,8)
add    %al,(%eax)
mov    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    %?,%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
nop
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cwtl
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
lock add %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
shr    $0x0,%bh
add    %al,(%esi)
add    %eax,(%eax)
add    %al,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
or     $0x0,%al
add    %cl,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
sldt   (%eax)
int3
out    %eax,(%dx)
add    %al,(%eax)
push   %es
adc    (%eax),%eax
add    %dl,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
and    (%eax),%eax
add    %dl,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
sub    %al,(%eax)
add    %bl,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
add    %al,%cs:(%eax)
fsubr  %st,%st(7)
add    %al,(%eax)
push   %es
xor    (%eax),%al
add    %ah,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
dec    %edx
add    %al,(%eax)
in     $0xef,%al
add    %al,(%eax)
push   %es
pop    %esi
add    %al,(%eax)
in     (%dx),%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
jp     1d9b <_init-0x479>
add    %dh,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
jg     1da3 <_init-0x471>
add    %dh,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
xchg   %al,(%eax)
add    %bh,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
popl   (%eax)
nop
in     (%dx),%eax
add    %al,(%eax)
pop    %es
add    (%eax),%al
add    %dl,0x3070000(%ebp,%ebp,8)
add    %al,(%eax)
cwtl
in     (%dx),%eax
add    %al,(%eax)
pop    %es
add    $0x0,%al
add    %bl,0x5070000(%ebp,%ebp,8)
add    %al,(%eax)
mov    0x70000ed,%al
push   %es
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
in     (%dx),%eax
add    %al,(%eax)
pop    %es
pop    %es
add    %al,(%eax)
test   $0xed,%al
add    %al,(%eax)
pop    %es
or     %al,(%eax)
add    %ch,0x9070000(%ebp,%ebp,8)
add    %al,(%eax)
mov    $0xed,%al
add    %al,(%eax)
pop    %es
or     (%eax),%al
add    %dh,0xb070000(%ebp,%ebp,8)
add    %al,(%eax)
mov    $0x70000ed,%eax
or     $0xedbc0000,%eax
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
shr    $0x0,%ch
add    %al,(%edi)
adc    %al,(%eax)
add    %al,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
adc    %eax,(%eax)
add    %cl,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
adc    (%eax),%al
add    %cl,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
adc    $0x0,%al
add    %dl,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
adc    $0xedd40000,%eax
add    %al,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
fsubr  %st(5),%st
add    %al,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
fsubr  %st,%st(5)
add    %al,(%eax)
pop    %es
sbb    %al,(%eax)
add    %ah,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %ah,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
sbb    (%eax),%al
add    %ch,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %ch,%ah
in     (%dx),%eax
add    %al,(%eax)
pop    %es
sbb    $0x0,%al
add    %dh,%al
in     (%dx),%eax
add    %al,(%eax)
pop    %es
sbb    $0xedf40000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
clc
in     (%dx),%eax
add    %al,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
cld
in     (%dx),%eax
add    %al,(%eax)
pop    %es
and    %al,(%eax)
add    %al,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
and    %eax,(%eax)
add    %al,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
and    (%eax),%al
add    %cl,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
and    $0x0,%al
add    %cl,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
and    $0xee100000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
adc    $0xee,%al
add    %al,(%eax)
pop    %es
daa
add    %al,(%eax)
sbb    %ch,%dh
add    %al,(%eax)
pop    %es
sub    %eax,(%eax)
add    %bl,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
sub    (%eax),%al
add    %ah,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sub    (%eax),%eax
add    %ah,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
sub    $0x0,%al
add    %ch,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sub    $0xee2c0000,%eax
add    %al,(%eax)
pop    %es
das
add    %al,(%eax)
xor    %ch,%dh
add    %al,(%eax)
pop    %es
xor    %al,(%eax)
add    %dh,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
xor    %eax,(%eax)
add    %bh,(%eax)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
xor    (%eax),%al
add    %bh,(%esi,%ebp,8)
add    %al,(%eax)
pop    %es
xor    (%eax),%eax
add    %al,-0x12(%eax)
add    %al,(%eax)
pop    %es
xor    $0x0,%al
add    %al,0x0(%esi,%ebp,8)
add    %al,(%edi)
xor    $0xee480000,%eax
add    %al,(%eax)
pop    %es
add    %al,%ss:(%eax)
dec    %esp
out    %al,(%dx)
add    %al,(%eax)
pop    %es
aaa
add    %al,(%eax)
push   %eax
out    %al,(%dx)
add    %al,(%eax)
pop    %es
cmp    %al,(%eax)
add    %dl,0x0(%esi,%ebp,8)
add    %al,(%edi)
cmp    %eax,(%eax)
add    %bl,-0x12(%eax)
add    %al,(%eax)
pop    %es
cmp    (%eax),%al
add    %bl,0x0(%esi,%ebp,8)
add    %al,(%edi)
cmp    (%eax),%eax
add    %ah,-0x12(%eax)
add    %al,(%eax)
pop    %es
cmp    $0x0,%al
add    %ah,0x0(%esi,%ebp,8)
add    %al,(%edi)
cmp    $0xee680000,%eax
add    %al,(%eax)
pop    %es
add    %al,%ds:(%eax)
insb   (%dx),%es:(%edi)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
aas
add    %al,(%eax)
jo     1f64 <_init-0x2b0>
add    %al,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
je     1f6c <_init-0x2a8>
add    %al,(%eax)
pop    %es
inc    %ecx
add    %al,(%eax)
js     1f74 <_init-0x2a0>
add    %al,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
jl     1f7c <_init-0x298>
add    %al,(%eax)
pop    %es
inc    %ebx
add    %al,(%eax)
sub    $0x0,%dh
add    %al,(%edi)
inc    %esp
add    %al,(%eax)
test   %ch,%dh
add    %al,(%eax)
pop    %es
inc    %ebp
add    %al,(%eax)
mov    %ch,%dh
add    %al,(%eax)
pop    %es
inc    %esi
add    %al,(%eax)
mov    %gs,%esi
add    %al,(%eax)
pop    %es
inc    %edi
add    %al,(%eax)
nop
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %eax
add    %al,(%eax)
xchg   %eax,%esp
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %ecx
add    %al,(%eax)
cwtl
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %edx
add    %al,(%eax)
pushf
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %ebx
add    %al,(%eax)
mov    0x70000ee,%al
dec    %esp
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %ebp
add    %al,(%eax)
test   $0xee,%al
add    %al,(%eax)
pop    %es
dec    %esi
add    %al,(%eax)
lods   %ds:(%esi),%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
dec    %edi
add    %al,(%eax)
mov    $0xee,%al
add    %al,(%eax)
pop    %es
push   %eax
add    %al,(%eax)
mov    $0xee,%ah
add    %al,(%eax)
pop    %es
push   %ecx
add    %al,(%eax)
mov    $0x70000ee,%eax
push   %edx
add    %al,(%eax)
mov    $0x70000ee,%esp
push   %ebx
add    %al,(%eax)
shr    $0x0,%dh
add    %al,(%edi)
push   %esp
add    %al,(%eax)
(bad)
out    %al,(%dx)
add    %al,(%eax)
pop    %es
push   %ebp
add    %al,(%eax)
enter  $0xee,$0x0
pop    %es
push   %esi
add    %al,(%eax)
int3
out    %al,(%dx)
add    %al,(%eax)
pop    %es
push   %edi
add    %al,(%eax)
shr    %dh
add    %al,(%eax)
pop    %es
pop    %eax
add    %al,(%eax)
aam    $0xee
add    %al,(%eax)
pop    %es
pop    %ecx
add    %al,(%eax)
fsubr  %st(6),%st
add    %al,(%eax)
pop    %es
pop    %edx
add    %al,(%eax)
fsubr  %st,%st(6)
add    %al,(%eax)
pop    %es
pop    %ebx
add    %al,(%eax)
loopne 2044 <_init-0x1d0>
add    %al,(%eax)
pop    %es
pop    %esp
add    %al,(%eax)
in     $0xee,%al
add    %al,(%eax)
pop    %es
pop    %ebp
add    %al,(%eax)
call   7002157 <_end+0x6ff3073>
pop    %edi
add    %al,(%eax)
in     (%dx),%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
pusha
add    %al,(%eax)
lock out %al,(%dx)
add    %al,(%eax)
pop    %es
popa
add    %al,(%eax)
hlt
out    %al,(%dx)
add    %al,(%eax)
pop    %es
bound  %eax,(%eax)
add    %bh,%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
arpl   %ax,(%eax)
add    %bh,%ah
out    %al,(%dx)
add    %al,(%eax)
pop    %es
add    %al,%fs:(%eax)
add    %ch,%bh
add    %al,(%eax)
pop    %es
add    %al,%gs:(%eax)
add    $0xef,%al
add    %al,(%eax)
pop    %es
data16
add    %al,(%eax)
or     %ch,%bh
add    %al,(%eax)
pop    %es
add    %al,(%bx,%si)
or     $0xef,%al
add    %al,(%eax)
pop    %es
push   $0xef100000
add    %al,(%eax)
pop    %es
imul   $0xef1400,(%eax),%eax
add    %al,(%edi)
push   $0x0
add    %bl,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
imul   $0x0,(%eax),%eax
sbb    $0xef,%al
add    %al,(%eax)
pop    %es
insb   (%dx),%es:(%edi)
add    %al,(%eax)
and    %ch,%bh
add    %al,(%eax)
pop    %es
insl   (%dx),%es:(%edi)
add    %al,(%eax)
and    $0xef,%al
add    %al,(%eax)
pop    %es
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
sub    %ch,%bh
add    %al,(%eax)
pop    %es
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
sub    $0xef,%al
add    %al,(%eax)
pop    %es
jo     20f3 <_init-0x121>
add    %dh,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
jno    20fb <_init-0x119>
add    %dh,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
jb     2103 <_init-0x111>
add    %bh,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
jae    210b <_init-0x109>
add    %bh,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
je     2113 <_init-0x101>
add    %al,-0x11(%eax)
add    %al,(%eax)
pop    %es
jne    211b <_init-0xf9>
add    %al,0x0(%edi,%ebp,8)
add    %al,(%edi)
jbe    2123 <_init-0xf1>
add    %cl,-0x11(%eax)
add    %al,(%eax)
pop    %es
ja     212b <_init-0xe9>
add    %cl,0x0(%edi,%ebp,8)
add    %al,(%edi)
js     2133 <_init-0xe1>
add    %dl,-0x11(%eax)
add    %al,(%eax)
pop    %es
jns    213b <_init-0xd9>
add    %dl,0x0(%edi,%ebp,8)
add    %al,(%edi)
jnp    2143 <_init-0xd1>
add    %bl,-0x11(%eax)
add    %al,(%eax)
pop    %es
jl     214b <_init-0xc9>
add    %bl,0x0(%edi,%ebp,8)
add    %al,(%edi)
jge    2153 <_init-0xc1>
add    %ah,-0x11(%eax)
add    %al,(%eax)
pop    %es
jle    215b <_init-0xb9>
add    %ah,0x0(%edi,%ebp,8)
add    %al,(%edi)
addb   $0x0,(%eax)
push   $0x70000ef
addl   $0xef6c00,(%eax)
add    %al,(%edi)
(bad)
add    %al,(%eax)
jo     2165 <_init-0xaf>
add    %al,(%eax)
pop    %es
addl   $0x0,(%eax)
je     216d <_init-0xa7>
add    %al,(%eax)
pop    %es
test   %al,(%eax)
add    %bh,-0x11(%eax)
add    %al,(%eax)
pop    %es
test   %eax,(%eax)
add    %bh,0x0(%edi,%ebp,8)
add    %al,(%edi)
xchg   %eax,(%eax)
add    %al,0x70000ef(%eax)
mov    %al,(%eax)
add    %al,-0x76f90000(%edi,%ebp,8)
add    %al,(%eax)
mov    %ch,%bh
add    %al,(%eax)
pop    %es
mov    (%eax),%al
add    %cl,-0x74f90000(%edi,%ebp,8)
add    %al,(%eax)
nop
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
mov    %es,(%eax)
add    %dl,-0x72f90000(%edi,%ebp,8)
add    %al,(%eax)
cwtl
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
mov    (%eax),%es
add    %bl,-0x6ff90000(%edi,%ebp,8)
add    %al,(%eax)
mov    0x70000ef,%al
xchg   %eax,%ecx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
xchg   %eax,%edx
add    %al,(%eax)
test   $0xef,%al
add    %al,(%eax)
pop    %es
xchg   %eax,%ebx
add    %al,(%eax)
lods   %ds:(%esi),%al
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
xchg   %eax,%esp
add    %al,(%eax)
mov    $0xef,%al
add    %al,(%eax)
pop    %es
xchg   %eax,%ebp
add    %al,(%eax)
mov    $0xef,%ah
add    %al,(%eax)
pop    %es
xchg   %eax,%esi
add    %al,(%eax)
mov    $0x70000ef,%eax
xchg   %eax,%edi
add    %al,(%eax)
mov    $0x70000ef,%esp
cwtl
push   %ebx
sub    $0x8,%esp
call   3d50 <main+0x1240>
add    $0xcb67,%ebx
mov    0x25c(%ebx),%eax
test   %eax,%eax
je     2232 <_init+0x1e>
call   2670 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    2240 <_init+0x2c>
jmp    *0x10(%ebx)
push   $0x8
jmp    2240 <_init+0x2c>
jmp    *0x14(%ebx)
push   $0x10
jmp    2240 <_init+0x2c>
jmp    *0x18(%ebx)
push   $0x18
jmp    2240 <_init+0x2c>
jmp    *0x1c(%ebx)
push   $0x20
jmp    2240 <_init+0x2c>
jmp    *0x20(%ebx)
push   $0x28
jmp    2240 <_init+0x2c>
jmp    *0x24(%ebx)
push   $0x30
jmp    2240 <_init+0x2c>
jmp    *0x28(%ebx)
push   $0x38
jmp    2240 <_init+0x2c>
jmp    *0x2c(%ebx)
push   $0x40
jmp    2240 <_init+0x2c>
jmp    *0x30(%ebx)
push   $0x48
jmp    2240 <_init+0x2c>
jmp    *0x34(%ebx)
push   $0x50
jmp    2240 <_init+0x2c>
jmp    *0x38(%ebx)
push   $0x58
jmp    2240 <_init+0x2c>
jmp    *0x3c(%ebx)
push   $0x60
jmp    2240 <_init+0x2c>
jmp    *0x40(%ebx)
push   $0x68
jmp    2240 <_init+0x2c>
jmp    *0x44(%ebx)
push   $0x70
jmp    2240 <_init+0x2c>
jmp    *0x48(%ebx)
push   $0x78
jmp    2240 <_init+0x2c>
jmp    *0x4c(%ebx)
push   $0x80
jmp    2240 <_init+0x2c>
jmp    *0x50(%ebx)
push   $0x88
jmp    2240 <_init+0x2c>
jmp    *0x54(%ebx)
push   $0x90
jmp    2240 <_init+0x2c>
jmp    *0x58(%ebx)
push   $0x98
jmp    2240 <_init+0x2c>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    2240 <_init+0x2c>
jmp    *0x60(%ebx)
push   $0xa8
jmp    2240 <_init+0x2c>
jmp    *0x64(%ebx)
push   $0xb0
jmp    2240 <_init+0x2c>
jmp    *0x68(%ebx)
push   $0xb8
jmp    2240 <_init+0x2c>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    2240 <_init+0x2c>
jmp    *0x70(%ebx)
push   $0xc8
jmp    2240 <_init+0x2c>
jmp    *0x74(%ebx)
push   $0xd0
jmp    2240 <_init+0x2c>
jmp    *0x78(%ebx)
push   $0xd8
jmp    2240 <_init+0x2c>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    2240 <_init+0x2c>
jmp    *0x80(%ebx)
push   $0xe8
jmp    2240 <_init+0x2c>
jmp    *0x84(%ebx)
push   $0xf0
jmp    2240 <_init+0x2c>
jmp    *0x88(%ebx)
push   $0xf8
jmp    2240 <_init+0x2c>
jmp    *0x8c(%ebx)
push   $0x100
jmp    2240 <_init+0x2c>
jmp    *0x90(%ebx)
push   $0x108
jmp    2240 <_init+0x2c>
jmp    *0x94(%ebx)
push   $0x110
jmp    2240 <_init+0x2c>
jmp    *0x98(%ebx)
push   $0x118
jmp    2240 <_init+0x2c>
jmp    *0x9c(%ebx)
push   $0x120
jmp    2240 <_init+0x2c>
jmp    *0xa0(%ebx)
push   $0x128
jmp    2240 <_init+0x2c>
jmp    *0xa4(%ebx)
push   $0x130
jmp    2240 <_init+0x2c>
jmp    *0xa8(%ebx)
push   $0x138
jmp    2240 <_init+0x2c>
jmp    *0xac(%ebx)
push   $0x140
jmp    2240 <_init+0x2c>
jmp    *0xb0(%ebx)
push   $0x148
jmp    2240 <_init+0x2c>
jmp    *0xb4(%ebx)
push   $0x150
jmp    2240 <_init+0x2c>
jmp    *0xb8(%ebx)
push   $0x158
jmp    2240 <_init+0x2c>
jmp    *0xbc(%ebx)
push   $0x160
jmp    2240 <_init+0x2c>
jmp    *0xc0(%ebx)
push   $0x168
jmp    2240 <_init+0x2c>
jmp    *0xc4(%ebx)
push   $0x170
jmp    2240 <_init+0x2c>
jmp    *0xc8(%ebx)
push   $0x178
jmp    2240 <_init+0x2c>
jmp    *0xcc(%ebx)
push   $0x180
jmp    2240 <_init+0x2c>
jmp    *0xd0(%ebx)
push   $0x188
jmp    2240 <_init+0x2c>
jmp    *0xd4(%ebx)
push   $0x190
jmp    2240 <_init+0x2c>
jmp    *0xd8(%ebx)
push   $0x198
jmp    2240 <_init+0x2c>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    2240 <_init+0x2c>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    2240 <_init+0x2c>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    2240 <_init+0x2c>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    2240 <_init+0x2c>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    2240 <_init+0x2c>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    2240 <_init+0x2c>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    2240 <_init+0x2c>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    2240 <_init+0x2c>
jmp    *0xfc(%ebx)
push   $0x1e0
jmp    2240 <_init+0x2c>
jmp    *0x100(%ebx)
push   $0x1e8
jmp    2240 <_init+0x2c>
jmp    *0x104(%ebx)
push   $0x1f0
jmp    2240 <_init+0x2c>
jmp    *0x108(%ebx)
push   $0x1f8
jmp    2240 <_init+0x2c>
jmp    *0x10c(%ebx)
push   $0x200
jmp    2240 <_init+0x2c>
jmp    *0x110(%ebx)
push   $0x208
jmp    2240 <_init+0x2c>
jmp    *0x114(%ebx)
push   $0x210
jmp    2240 <_init+0x2c>
jmp    *0x118(%ebx)
push   $0x218
jmp    2240 <_init+0x2c>
jmp    *0x11c(%ebx)
push   $0x220
jmp    2240 <_init+0x2c>
jmp    *0x120(%ebx)
push   $0x228
jmp    2240 <_init+0x2c>
jmp    *0x124(%ebx)
push   $0x230
jmp    2240 <_init+0x2c>
jmp    *0x128(%ebx)
push   $0x238
jmp    2240 <_init+0x2c>
jmp    *0x12c(%ebx)
push   $0x240
jmp    2240 <_init+0x2c>
jmp    *0x130(%ebx)
push   $0x248
jmp    2240 <_init+0x2c>
jmp    *0x134(%ebx)
push   $0x250
jmp    2240 <_init+0x2c>
jmp    *0x138(%ebx)
push   $0x258
jmp    2240 <_init+0x2c>
jmp    *0x13c(%ebx)
push   $0x260
jmp    2240 <_init+0x2c>
jmp    *0x140(%ebx)
push   $0x268
jmp    2240 <_init+0x2c>
jmp    *0x144(%ebx)
push   $0x270
jmp    2240 <_init+0x2c>
jmp    *0x148(%ebx)
push   $0x278
jmp    2240 <_init+0x2c>
jmp    *0x14c(%ebx)
push   $0x280
jmp    2240 <_init+0x2c>
jmp    *0x150(%ebx)
push   $0x288
jmp    2240 <_init+0x2c>
jmp    *0x154(%ebx)
push   $0x290
jmp    2240 <_init+0x2c>
jmp    *0x158(%ebx)
push   $0x298
jmp    2240 <_init+0x2c>
jmp    *0x15c(%ebx)
push   $0x2a0
jmp    2240 <_init+0x2c>
jmp    *0x160(%ebx)
push   $0x2a8
jmp    2240 <_init+0x2c>
jmp    *0x164(%ebx)
push   $0x2b0
jmp    2240 <_init+0x2c>
jmp    *0x168(%ebx)
push   $0x2b8
jmp    2240 <_init+0x2c>
jmp    *0x16c(%ebx)
push   $0x2c0
jmp    2240 <_init+0x2c>
jmp    *0x170(%ebx)
push   $0x2c8
jmp    2240 <_init+0x2c>
jmp    *0x174(%ebx)
push   $0x2d0
jmp    2240 <_init+0x2c>
jmp    *0x178(%ebx)
push   $0x2d8
jmp    2240 <_init+0x2c>
jmp    *0x17c(%ebx)
push   $0x2e0
jmp    2240 <_init+0x2c>
jmp    *0x180(%ebx)
push   $0x2e8
jmp    2240 <_init+0x2c>
jmp    *0x184(%ebx)
push   $0x2f0
jmp    2240 <_init+0x2c>
jmp    *0x188(%ebx)
push   $0x2f8
jmp    2240 <_init+0x2c>
jmp    *0x18c(%ebx)
push   $0x300
jmp    2240 <_init+0x2c>
jmp    *0x190(%ebx)
push   $0x308
jmp    2240 <_init+0x2c>
jmp    *0x194(%ebx)
push   $0x310
jmp    2240 <_init+0x2c>
jmp    *0x198(%ebx)
push   $0x318
jmp    2240 <_init+0x2c>
jmp    *0x19c(%ebx)
push   $0x320
jmp    2240 <_init+0x2c>
jmp    *0x1a0(%ebx)
push   $0x328
jmp    2240 <_init+0x2c>
jmp    *0x1a4(%ebx)
push   $0x330
jmp    2240 <_init+0x2c>
jmp    *0x1a8(%ebx)
push   $0x338
jmp    2240 <_init+0x2c>
jmp    *0x1ac(%ebx)
push   $0x340
jmp    2240 <_init+0x2c>
jmp    *0x1b0(%ebx)
push   $0x348
jmp    2240 <_init+0x2c>
jmp    *0x1b4(%ebx)
push   $0x350
jmp    2240 <_init+0x2c>
jmp    *0x1b8(%ebx)
push   $0x358
jmp    2240 <_init+0x2c>
jmp    *0x1bc(%ebx)
push   $0x360
jmp    2240 <_init+0x2c>
jmp    *0x1c0(%ebx)
push   $0x368
jmp    2240 <_init+0x2c>
jmp    *0x1c4(%ebx)
push   $0x370
jmp    2240 <_init+0x2c>
jmp    *0x1c8(%ebx)
push   $0x378
jmp    2240 <_init+0x2c>
jmp    *0x1cc(%ebx)
push   $0x380
jmp    2240 <_init+0x2c>
jmp    *0x1d0(%ebx)
push   $0x388
jmp    2240 <_init+0x2c>
jmp    *0x1d4(%ebx)
push   $0x390
jmp    2240 <_init+0x2c>
jmp    *0x1d8(%ebx)
push   $0x398
jmp    2240 <_init+0x2c>
jmp    *0x1dc(%ebx)
push   $0x3a0
jmp    2240 <_init+0x2c>
jmp    *0x1e0(%ebx)
push   $0x3a8
jmp    2240 <_init+0x2c>
jmp    *0x1e4(%ebx)
push   $0x3b0
jmp    2240 <_init+0x2c>
jmp    *0x1e8(%ebx)
push   $0x3b8
jmp    2240 <_init+0x2c>
jmp    *0x1ec(%ebx)
push   $0x3c0
jmp    2240 <_init+0x2c>
jmp    *0x1f0(%ebx)
push   $0x3c8
jmp    2240 <_init+0x2c>
jmp    *0x1f4(%ebx)
push   $0x3d0
jmp    2240 <_init+0x2c>
jmp    *0x1f8(%ebx)
push   $0x3d8
jmp    2240 <_init+0x2c>
jmp    *0x1fc(%ebx)
push   $0x3e0
jmp    2240 <_init+0x2c>
jmp    *0x200(%ebx)
push   $0x3e8
jmp    2240 <_init+0x2c>
jmp    *0x204(%ebx)
push   $0x3f0
jmp    2240 <_init+0x2c>
jmp    *0x208(%ebx)
push   $0x3f8
jmp    2240 <_init+0x2c>
jmp    *0x20c(%ebx)
push   $0x400
jmp    2240 <_init+0x2c>
jmp    *0x210(%ebx)
push   $0x408
jmp    2240 <_init+0x2c>
jmp    *0x214(%ebx)
push   $0x410
jmp    2240 <_init+0x2c>
jmp    *0x218(%ebx)
push   $0x418
jmp    2240 <_init+0x2c>
jmp    *0x21c(%ebx)
push   $0x420
jmp    2240 <_init+0x2c>
jmp    *0x220(%ebx)
push   $0x428
jmp    2240 <_init+0x2c>
jmp    *0x224(%ebx)
push   $0x430
jmp    2240 <_init+0x2c>
jmp    *0x228(%ebx)
push   $0x438
jmp    2240 <_init+0x2c>
jmp    *0x22c(%ebx)
push   $0x440
jmp    2240 <_init+0x2c>
jmp    *0x230(%ebx)
push   $0x448
jmp    2240 <_init+0x2c>
jmp    *0x234(%ebx)
push   $0x450
jmp    2240 <_init+0x2c>
jmp    *0x238(%ebx)
push   $0x458
jmp    2240 <_init+0x2c>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xc269,%ebx
and    $0xfffffff0,%esp
sub    $0x180,%esp
mov    0xc(%ebp),%eax
movl   $0x0,0x60(%esp)
mov    %eax,0x5c(%esp)
lea    -0x33de(%ebx),%esi
mov    %gs:0x14,%eax
mov    %eax,0x17c(%esp)
xor    %eax,%eax
jmp    2b55 <main+0x45>
cmp    $0x2,%edi
ja     2b79 <main+0x69>
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   2750 <open64@plt>
cmp    $0x2,%eax
mov    %eax,%edi
jle    2b50 <main+0x40>
mov    %eax,(%esp)
call   2ab0 <close@plt>
cmp    $0x2,%edi
jbe    2b55 <main+0x45>
call   2450 <getuid@plt>
mov    %eax,%esi
call   2490 <geteuid@plt>
cmp    %eax,%esi
je     2bd4 <main+0xc4>
mov    0x248(%ebx),%eax
mov    (%eax),%eax
movl   $0x135,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x2e48(%ebx),%eax
mov    %eax,(%esp)
call   2500 <fwrite@plt>
mov    $0x16,%eax
mov    0x17c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    360c <main+0xafc>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   27c0 <getgid@plt>
mov    %eax,%esi
call   24d0 <getegid@plt>
cmp    %eax,%esi
jne    2b89 <main+0x79>
call   2980 <ntfs_set_locale@plt>
mov    0x260(%ebx),%eax
lea    0x350(%ebx),%esi
mov    %eax,(%esp)
call   2610 <ntfs_log_set_handler@plt>
mov    0x5c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x8(%ebp),%eax
mov    %eax,0x8(%esp)
lea    -0xaeb4(%ebx),%eax
mov    %eax,0x4(%esp)
call   ad90 <main+0x8280>
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     2c32 <main+0x122>
call   3ed0 <main+0x13c0>
mov    $0xb,%eax
jmp    2bb8 <main+0xa8>
movl   $0xb4,(%esp)
call   2920 <ntfs_calloc@plt>
test   %eax,%eax
mov    %eax,0x34c(%ebx)
mov    %eax,0x50(%esp)
je     3d04 <main+0x11f4>
call   2450 <getuid@plt>
mov    %eax,0x58(%esp)
call   27c0 <getgid@plt>
mov    0x50(%esp),%edx
mov    $0x2d,%ecx
mov    %edx,%edi
mov    %eax,0x54(%esp)
mov    0x5c(%esp),%eax
rep stos %eax,%es:(%edi)
mov    0x58(%esp),%ecx
mov    0x54(%esp),%eax
movl   $0x1,0x14(%edx)
movl   $0x2,0x18(%edx)
mov    %ecx,0x4(%edx)
mov    %eax,0x8(%edx)
movl   $0x1,0x44(%edx)
movl   $0x1,0x48(%edx)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   a210 <main+0x7700>
test   %eax,%eax
mov    %eax,0x60(%esp)
je     3cf2 <main+0x11e2>
lea    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x358(%ebx),%eax
mov    %eax,(%esp)
call   2480 <ntfs_check_if_mounted@plt>
test   %eax,%eax
jne    2d8a <main+0x27a>
mov    0x64(%esp),%eax
test   $0x1,%al
je     2d8a <main+0x27a>
test   $0x4,%al
je     2cfb <main+0x1eb>
mov    0x34c(%ebx),%edx
cmpl   $0x0,0x24(%edx)
jne    2d90 <main+0x280>
mov    $0x10,%edi
movl   $0x0,0x5c(%esp)
mov    0x350(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x358(%ebx),%eax
mov    %eax,(%esp)
call   26d0 <ntfs_mount_error@plt>
mov    0x34c(%ebx),%eax
mov    0x80(%eax),%eax
test   %eax,%eax
je     2d3c <main+0x22c>
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   2830 <ntfs_xattr_free_mapping@plt>
call   4790 <main+0x1c80>
mov    0x34c(%ebx),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x354(%ebx),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x358(%ebx),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    %edi,%eax
jmp    2bb8 <main+0xa8>
mov    0x34c(%ebx),%edx
mov    0x350(%ebx),%eax
mov    %edx,0x5c(%esp)
cmpb   $0x2f,(%eax)
je     3cdb <main+0x11cb>
movl   $0x1000,(%esp)
call   2370 <ntfs_malloc@plt>
mov    0x5c(%esp),%edx
mov    0x34c(%ebx),%esi
mov    %eax,0x80(%edx)
mov    0x80(%esi),%edx
test   %edx,%edx
je     3cc9 <main+0x11b9>
mov    0x350(%ebx),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    %edx,(%esp)
lea    0x1001(%ecx),%eax
mov    %eax,0x4(%esp)
call   26f0 <getcwd@plt>
test   %eax,%eax
je     2e20 <main+0x310>
mov    0x80(%esi),%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
not    %ecx
movw   $0x2f,-0x1(%edx,%ecx,1)
mov    0x80(%esi),%eax
mov    0x350(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   2530 <strcat@plt>
mov    0x34c(%ebx),%esi
cmpl   $0x0,0x80(%esi)
je     3cc9 <main+0x11b9>
mov    0x350(%ebx),%eax
movl   $0x0,0x98(%esi)
00
movl   $0x0,0x9c(%esi)
00
cmpb   $0x2f,(%eax)
je     3b39 <main+0x1029>
call   4950 <main+0x1e40>
lea    0xdc(%esp),%edx
mov    %edx,0x58(%esp)
cmp    $0x1,%eax
mov    %eax,0x54(%esp)
jbe    3ad5 <main+0xfc5>
mov    0x58(%esp),%eax
lea    -0x33c5(%ebx),%esi
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   2a60 <__xstat64@plt>
test   %eax,%eax
je     2ea5 <main+0x395>
call   27e0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%edi
je     3b78 <main+0x1068>
lea    0x7c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x358(%ebx),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   2a60 <__xstat64@plt>
test   %eax,%eax
jne    3a7f <main+0xf6f>
mov    0x8c(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     39d6 <main+0xec6>
call   2450 <getuid@plt>
test   %eax,%eax
je     39b9 <main+0xea9>
mov    0x34c(%ebx),%esi
cmpl   $0x0,0x60(%esi)
jne    396b <main+0xe5b>
mov    0x358(%ebx),%edi
mov    $0x8000000,%eax
mov    %eax,%edx
or     $0x1,%edx
cmpl   $0x0,0x24(%esi)
cmovne %edx,%eax
mov    %eax,%edx
or     $0x10000000,%edx
cmpl   $0x0,0x48(%esi)
cmovne %edx,%eax
mov    %eax,%edx
or     $0x20000000,%edx
cmpl   $0x0,0x4c(%esi)
mov    %edi,(%esp)
cmovne %edx,%eax
mov    %eax,0x4(%esp)
call   28b0 <ntfs_mount@plt>
test   %eax,%eax
mov    %eax,0x5c(%esp)
mov    %eax,(%esi)
je     3928 <main+0xe18>
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x50(%eax)
mov    (%eax),%edx
je     2f66 <main+0x456>
mov    (%edx),%ecx
test   %ecx,%ecx
je     2f66 <main+0x456>
orl    $0x10,0x4(%ecx)
cmpl   $0x0,0x3c(%eax)
je     388b <main+0xd7b>
orl    $0x40,0x8(%edx)
cmpl   $0x0,0x68(%eax)
je     2f81 <main+0x471>
movl   $0x0,0x2c(%eax)
mov    0x30(%eax),%esi
mov    0x28(%eax),%ecx
mov    %esi,0xc(%esp)
cmpl   $0x0,0x2c(%eax)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
sete   %al
movzbl %al,%eax
mov    %eax,0x8(%esp)
call   2300 <ntfs_set_shown_files@plt>
test   %eax,%eax
jne    3049 <main+0x539>
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x38(%eax)
jne    3a66 <main+0xf56>
mov    0x5c(%esp),%esi
mov    0x68(%esi),%eax
mov    %eax,(%esp)
call   2890 <ntfs_attr_get_free_bits@plt>
test   %edx,%edx
mov    %eax,0xbc(%esi)
mov    %edx,0xc0(%esi)
js     3a42 <main+0xf32>
mov    0x5c(%esp),%eax
mov    0x7c(%eax),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x50(%esp)
call   2890 <ntfs_attr_get_free_bits@plt>
test   %edx,%edx
js     39f3 <main+0xee3>
mov    0x50(%esp),%ecx
mov    0x1c(%ecx),%esi
mov    0x20(%ecx),%edi
sub    0x24(%ecx),%esi
sbb    0x28(%ecx),%edi
shld   $0x3,%esi,%edi
shl    $0x3,%esi
add    %eax,%esi
mov    0x5c(%esp),%eax
adc    %edx,%edi
test   %edi,%edi
mov    %esi,0xc4(%eax)
mov    %edi,0xc8(%eax)
js     3a03 <main+0xef3>
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x4c(%eax)
jne    3894 <main+0xd84>
call   27e0 <__errno_location@plt>
movl   $0x0,(%eax)
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   2930 <ntfs_volume_error@plt>
movl   $0x0,0x5c(%esp)
test   %eax,%eax
mov    %eax,%edi
jne    2d08 <main+0x1f8>
mov    0x34c(%ebx),%edx
cmpl   $0x0,0x24(%edx)
je     384b <main+0xd3b>
cmpl   $0x0,0x60(%edx)
je     30f3 <main+0x5e3>
mov    (%edx),%eax
mov    0x18(%eax),%esi
movl   $0x1e,(%esp)
call   2440 <sysconf@plt>
mov    $0x1000,%edx
movl   $0x40,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x40,0x4(%esp)
test   %eax,%eax
cmovle %edx,%eax
cmp    %esi,%eax
cmova  %esi,%eax
mov    %eax,0x14(%esp)
lea    0x13c(%esp),%esi
lea    -0x334d(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   2260 <__snprintf_chk@plt>
lea    0x60(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    2d00 <main+0x1f0>
mov    0x34c(%ebx),%edx
mov    (%edx),%eax
mov    0x78(%edx),%ecx
mov    %eax,0x88(%edx)
mov    0x68(%edx),%edx
mov    %ecx,0x90(%eax)
mov    %edx,0xcc(%eax)
mov    %eax,(%esp)
call   2a90 <ntfs_open_secure@plt>
mov    0x34c(%ebx),%edx
test   %eax,%eax
jne    3830 <main+0xd20>
movl   $0x0,0x48(%esp)
mov    (%edx),%eax
mov    0x90(%eax),%ecx
xor    %eax,%eax
test   $0x5,%cl
je     3145 <main+0x635>
mov    %ecx,%eax
shr    $0x5,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    0x7c(%edx),%ecx
add    $0x88,%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
call   2840 <ntfs_build_mapping@plt>
mov    0x34c(%ebx),%edx
test   %eax,%eax
jne    37cd <main+0xcbd>
mov    (%edx),%eax
testb  $0x1,0x90(%eax)
je     37be <main+0xcae>
lea    -0x2e70(%ebx),%eax
mov    %eax,0x50(%esp)
mov    0x7c(%edx),%eax
test   %eax,%eax
je     319c <main+0x68c>
mov    %eax,(%esp)
mov    %edx,0x5c(%esp)
call   2380 <free@plt>
mov    0x5c(%esp),%edx
mov    0x6c(%edx),%ecx
mov    (%edx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   2620 <ntfs_xattr_build_mapping@plt>
mov    0x34c(%ebx),%edx
mov    %edx,0x4c(%esp)
mov    %eax,%ecx
mov    %eax,0x5c(%esp)
mov    (%edx),%eax
mov    %ecx,0xd0(%eax)
mov    0x6c(%edx),%eax
test   %eax,%eax
je     31d4 <main+0x6c4>
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x340(%ebx),%eax
mov    0x60(%esp),%esi
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x78(%esp)
movl   $0x0,0xdc(%esp)
00
movl   $0x0,0xe0(%esp)
00
mov    %eax,(%esp)
movl   $0x0,0xe4(%esp)
00
call   2700 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     377d <main+0xc6d>
lea    -0x3308(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   2700 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     377d <main+0xc6d>
mov    %esi,0x4(%esp)
mov    0x58(%esp),%esi
mov    %esi,(%esp)
call   2700 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     377d <main+0xc6d>
mov    0x350(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2540 <fuse_mount@plt>
mov    %eax,%esi
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   26b0 <fuse_opt_free_args@plt>
mov    0x4c(%esp),%eax
mov    %esi,0x70(%eax)
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x70(%eax)
je     3773 <main+0xc63>
lea    -0x343f(%ebx),%eax
lea    0x70(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x34(%esp)
call   2700 <fuse_opt_add_arg@plt>
add    $0x1,%eax
je     3729 <main+0xc19>
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x58(%eax)
jne    3756 <main+0xc46>
lea    0x29c(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0xa4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   24b0 <fuse_lowlevel_new@plt>
test   %eax,%eax
mov    %eax,0x4c(%esp)
je     3729 <main+0xc19>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   2760 <fuse_set_signal_handlers@plt>
test   %eax,%eax
jne    371d <main+0xc0d>
mov    0x34c(%ebx),%eax
mov    0x70(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   29b0 <fuse_session_add_chan@plt>
mov    %esi,(%esp)
call   26b0 <fuse_opt_free_args@plt>
mov    0x8c(%esp),%eax
mov    0x34c(%ebx),%edx
and    $0xf000,%eax
cmp    $0x6000,%eax
movl   $0x1,0x64(%edx)
je     36bf <main+0xbaf>
lea    -0x2724(%ebx),%eax
lea    -0x34b8(%ebx),%esi
mov    %eax,0x54(%esp)
mov    0x60(%esp),%eax
cmpl   $0x0,0x5c(%edx)
mov    %eax,0x44(%esp)
je     3620 <main+0xb10>
lea    -0x27d9(%ebx),%eax
mov    %eax,0x58(%esp)
movl   $0x0,0x84(%edx)
00
call   2590 <fuse_version@plt>
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xf86,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x20(%esp)
lea    -0x34d4(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x34c6(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x32e7(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x358(%ebx),%edx
mov    0x35c(%ebx),%ecx
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0x3c(%esp)
mov    %ecx,0x40(%esp)
call   22a0 <strcmp@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
test   %eax,%eax
je     344a <main+0x93a>
lea    -0x2890(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xf89,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x358(%ebx),%edx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
movzbl 0x11(%eax),%ecx
mov    %ecx,0x40(%esp)
movzbl 0x10(%eax),%ecx
mov    0x4(%eax),%eax
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x24(%eax)
je     3615 <main+0xb05>
lea    -0x33f3(%ebx),%eax
mov    0x40(%esp),%ecx
mov    %eax,0x1c(%esp)
lea    -0x2864(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %edx,0x18(%esp)
mov    %ecx,0x28(%esp)
mov    0x3c(%esp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xf8d,0x8(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x354(%ebx),%edx
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
test   %edx,%edx
cmovne %edx,%eax
mov    %eax,0x18(%esp)
lea    -0x32d5(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
movl   $0xf8e,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
lea    -0x32c0(%ebx),%eax
mov    0x44(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0xf8f,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x48(%esp),%eax
test   %eax,%eax
je     358e <main+0xa7e>
mov    %eax,0x18(%esp)
lea    -0x32c4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x107c,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x50(%esp),%eax
mov    %esi,0x4(%esp)
movl   $0x9,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x32ad(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
movl   $0x8,0xc(%esp)
movl   $0x107f,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%esi
mov    %esi,(%esp)
call   22d0 <fuse_session_loop@plt>
mov    %esi,(%esp)
call   2420 <fuse_remove_signal_handlers@plt>
mov    0x34c(%ebx),%eax
mov    0x70(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x350(%ebx),%eax
mov    %eax,(%esp)
call   24c0 <fuse_unmount@plt>
mov    %esi,(%esp)
call   23b0 <fuse_session_destroy@plt>
jmp    2d08 <main+0x1f8>
lea    0x0(%esi,%eiz,1),%esi
call   b880 <main+0x8d70>
lea    -0x33e9(%ebx),%eax
jmp    347f <main+0x96f>
mov    0x58(%edx),%eax
movl   $0x0,(%esp)
mov    %edx,0x58(%esp)
mov    %eax,0x4(%esp)
call   25c0 <daemon@plt>
mov    0x58(%esp),%edx
test   %eax,%eax
jne    367c <main+0xb6c>
cmpl   $0x0,0x58(%edx)
jne    3671 <main+0xb61>
mov    0x254(%ebx),%eax
mov    %eax,(%esp)
call   2610 <ntfs_log_set_handler@plt>
mov    0x340(%ebx),%eax
movl   $0x18,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   2960 <openlog@plt>
mov    0x34c(%ebx),%edx
jmp    337b <main+0x86b>
lea    -0x32fd(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x27d9(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf7a,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x58(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x34c(%ebx),%edx
jmp    3385 <main+0x875>
cmpl   $0x2,0x54(%esp)
jne    3359 <main+0x849>
lea    -0x2abc(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3480(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%esi
lea    -0x2724(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1078,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x54(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x34c(%ebx),%edx
jmp    3369 <main+0x859>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   23b0 <fuse_session_destroy@plt>
mov    0x34c(%ebx),%eax
mov    $0x15,%edi
mov    0x70(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x350(%ebx),%eax
mov    %eax,(%esp)
call   24c0 <fuse_unmount@plt>
mov    %esi,(%esp)
call   26b0 <fuse_opt_free_args@plt>
jmp    2d08 <main+0x1f8>
lea    -0x3305(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   2700 <fuse_opt_add_arg@plt>
add    $0x1,%eax
jne    32d2 <main+0x7c2>
jmp    3729 <main+0xc19>
mov    $0x15,%edi
jmp    2d08 <main+0x1f8>
lea    -0x3325(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%esi
lea    -0x27cb(%ebx),%eax
mov    %esi,0x4(%esp)
xor    %esi,%esi
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf36,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    327c <main+0x76c>
lea    -0x2ee8(%ebx),%eax
mov    %eax,0x50(%esp)
jmp    3185 <main+0x675>
mov    0x4(%edx),%eax
movl   $0x0,0x8c(%edx)
00
movl   $0x0,0x90(%edx)
00
mov    %eax,0x98(%edx)
mov    0x8(%edx),%eax
mov    %eax,0x9c(%edx)
mov    (%edx),%eax
mov    0x90(%eax),%ecx
and    $0x21,%ecx
cmp    $0x20,%ecx
je     38f8 <main+0xde8>
mov    (%edx),%eax
mov    0x90(%eax),%ecx
test   $0x1,%cl
je     38e0 <main+0xdd0>
or     $0x2,%ecx
mov    %ecx,0x90(%eax)
lea    -0x2ec0(%ebx),%eax
mov    %eax,0x50(%esp)
jmp    3185 <main+0x675>
mov    (%edx),%eax
cmpb   $0x2,0x10(%eax)
jbe    3123 <main+0x613>
lea    -0x340f(%ebx),%eax
mov    %eax,0x48(%esp)
jmp    312b <main+0x61b>
mov    (%edx),%eax
testb  $0x1,0x8(%eax)
je     307a <main+0x56a>
lea    -0x3351(%ebx),%eax
movl   $0x1,0x24(%edx)
mov    %eax,0x4(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   a040 <main+0x7530>
mov    %edi,0x5c(%esp)
test   %eax,%eax
jne    2d08 <main+0x1f8>
mov    0x34c(%ebx),%edx
jmp    307a <main+0x56a>
andl   $0xffffffbf,0x8(%edx)
jmp    2f74 <main+0x464>
mov    0x5c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2aa0 <ntfs_volume_check_hiberfile@plt>
test   %eax,%eax
je     303e <main+0x52e>
call   27e0 <__errno_location@plt>
cmpl   $0x1,(%eax)
jne    3049 <main+0x539>
lea    -0x335e(%ebx),%eax
mov    $0x5,%edx
mov    %eax,(%esp)
xor    %eax,%eax
call   9360 <main+0x6850>
test   %eax,%eax
je     303e <main+0x52e>
jmp    3049 <main+0x539>
and    $0xfffffffd,%ecx
mov    %ecx,0x90(%eax)
lea    -0x2e94(%ebx),%eax
mov    %eax,0x50(%esp)
jmp    3185 <main+0x675>
orl    $0x1,0x90(%eax)
lea    -0x333a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   a040 <main+0x7530>
test   %eax,%eax
jne    3cf2 <main+0x11e2>
mov    0x34c(%ebx),%edx
jmp    3807 <main+0xcf7>
lea    -0x338f(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%esi
lea    -0x2753(%ebx),%eax
mov    %edi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe88,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    3049 <main+0x539>
lea    -0x2bf8(%ebx),%eax
mov    $0x13,%edi
mov    %eax,0x18(%esp)
lea    -0x3480(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2724(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x100a,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    2d48 <main+0x238>
mov    0x34c(%ebx),%esi
xor    %eax,%eax
mov    0x358(%ebx),%edi
cmpl   $0x0,0x60(%esi)
jne    2f0a <main+0x3fa>
jmp    2f05 <main+0x3f5>
cmpl   $0x2,0x54(%esp)
je     2ee2 <main+0x3d2>
mov    0x34c(%ebx),%eax
movl   $0x1,0x60(%eax)
jmp    2ee2 <main+0x3d2>
mov    0x5c(%esp),%ecx
mov    %eax,0xc4(%ecx)
mov    %edx,0xc8(%ecx)
lea    -0x2ae4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xea5,0x8(%esp)
lea    -0x34b8(%ebx),%esi
lea    -0x2753(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    3049 <main+0x539>
lea    -0x337a(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe9f,0x8(%esp)
jmp    3a25 <main+0xf15>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   2360 <ntfs_set_ignore_case@plt>
test   %eax,%eax
je     2fbd <main+0x4ad>
jmp    3049 <main+0x539>
mov    0x358(%ebx),%eax
mov    $0x13,%edi
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xffd,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x33a5(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2724(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
movl   $0x0,0x5c(%esp)
jmp    2d08 <main+0x1f8>
lea    -0x33d4(%ebx),%esi
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
movl   $0x0,0x70(%esp)
movl   $0x5f5e100,0x74(%esp)
call   2a60 <__xstat64@plt>
test   %eax,%eax
je     3bcd <main+0x10bd>
mov    $0xa,%edi
lea    0x70(%esp),%esi
jmp    3b17 <main+0x1007>
sub    $0x1,%edi
je     3b30 <main+0x1020>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   29f0 <nanosleep@plt>
call   4950 <main+0x1e40>
test   %eax,%eax
je     3b12 <main+0x1002>
mov    %eax,0x54(%esp)
jmp    2e73 <main+0x363>
lea    0x7c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   2a60 <__xstat64@plt>
test   %eax,%eax
jne    2e56 <main+0x346>
mov    0x94(%esp),%eax
mov    %eax,0x98(%esi)
mov    0x98(%esp),%eax
mov    %eax,0x9c(%esi)
jmp    2e56 <main+0x346>
movl   $0x0,(%esp)
call   2a70 <umask@plt>
movl   $0x21b6,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
movl   $0xae5,0x68(%esp)
movl   $0x0,0x6c(%esp)
mov    %eax,0x5c(%esp)
lea    0x68(%esp),%eax
mov    %eax,0xc(%esp)
call   2a80 <__xmknod@plt>
test   %eax,%eax
jne    3c13 <main+0x1103>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   2a70 <umask@plt>
jmp    2ea5 <main+0x395>
call   2490 <geteuid@plt>
test   %eax,%eax
jne    3b07 <main+0xff7>
lea    0x0(%esi),%esi
call   28a0 <fork@plt>
test   %eax,%eax
je     3c9f <main+0x118f>
cmp    $0xffffffff,%eax
je     3b07 <main+0xff7>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2520 <waitpid@plt>
jmp    3b07 <main+0xff7>
lea    -0x34b8(%ebx),%edx
mov    %esi,0x18(%esp)
lea    -0x33bb(%ebx),%eax
lea    -0x2749(%ebx),%esi
mov    %edx,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xed8,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x50(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x50(%esp),%edx
cmpl   $0x1,(%edi)
jne    3bbc <main+0x10ac>
lea    -0x2d10(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3480(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeda,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    3bbc <main+0x10ac>
lea    -0x33c0(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %esi,(%esp)
call   2820 <execl@plt>
movl   $0x1,(%esp)
call   2340 <_exit@plt>
mov    $0x14,%edi
movl   $0x0,0x5c(%esp)
jmp    2d08 <main+0x1f8>
mov    %eax,(%esp)
call   27d0 <__strdup@plt>
mov    0x5c(%esp),%edx
mov    %eax,0x80(%edx)
jmp    2e20 <main+0x310>
mov    $0xb,%edi
movl   $0x0,0x5c(%esp)
jmp    2d08 <main+0x1f8>
mov    $0x14,%edi
jmp    2d48 <main+0x238>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   3d40 <main+0x1230>
add    $0xb066,%ebx
lea    -0x3514(%ebx),%eax
push   %eax
lea    -0x3584(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x264(%ebx)
call   2730 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   3d50 <main+0x1240>
add    $0xb01b,%ebx
sub    $0x14,%esp
lea    0x347(%ebx),%eax
lea    0x344(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     3d8b <main+0x127b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x240(%ebx),%eax
test   %eax,%eax
je     3d85 <main+0x1275>
mov    %edx,(%esp)
call   *%eax
jmp    3d85 <main+0x1275>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   3d50 <main+0x1240>
add    $0xafdb,%ebx
sub    $0x14,%esp
lea    0x344(%ebx),%eax
lea    0x344(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    3dd4 <main+0x12c4>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x270(%ebx),%ecx
test   %ecx,%ecx
je     3dce <main+0x12be>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    3dce <main+0x12be>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   3d50 <main+0x1240>
add    $0xaf8b,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x344(%ebx)
jne    3e2f <main+0x131f>
mov    0x258(%ebx),%eax
test   %eax,%eax
je     3e23 <main+0x1313>
mov    0x280(%ebx),%eax
mov    %eax,(%esp)
call   24f0 <__cxa_finalize@plt>
call   3d60 <main+0x1250>
movb   $0x1,0x344(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   3d50 <main+0x1240>
add    $0xaf3b,%ebx
sub    $0x14,%esp
mov    -0x3b8(%ebx),%eax
test   %eax,%eax
je     3e71 <main+0x1361>
mov    0x268(%ebx),%eax
test   %eax,%eax
je     3e71 <main+0x1361>
lea    -0x3b8(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    3da0 <main+0x1290>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%esi
call   3d50 <main+0x1240>
add    $0xaef8,%ebx
mov    0x18(%esi),%edi
mov    %edi,%eax
or     $0x40,%eax
mov    %eax,0x18(%esi)
mov    0x34c(%ebx),%eax
mov    0x54(%eax),%edx
test   %edx,%edx
je     3ecc <main+0x13bc>
mov    (%eax),%eax
movzbl 0x24(%eax),%ecx
mov    0x60(%eax),%edx
mov    0x5c(%eax),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     3ec2 <main+0x13b2>
mov    %eax,%edx
test   %edx,%edx
jle    3ecc <main+0x13bc>
or     $0x60,%edi
mov    %edi,0x18(%esi)
pop    %ebx
pop    %esi
pop    %edi
ret
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xaead,%ebx
sub    $0x44,%esp
mov    0x23c(%ebx),%eax
mov    (%eax),%esi
call   2590 <fuse_version@plt>
mov    0x340(%ebx),%edx
movl   $0x9,0x28(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,0x30(%esp)
mov    %edx,0x2c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x24(%esp)
lea    -0x34d4(%ebx),%eax
mov    %eax,0x20(%esp)
lea    -0x34c6(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3284(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x272a(%ebx),%eax
movl   $0x8,0xc(%esp)
movl   $0xebb,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
add    $0x44,%esp
pop    %ebx
pop    %esi
ret
nop
push   %ebp
mov    %edx,%ebp
push   %edi
xor    %edi,%edi
push   %esi
mov    $0x5,%esi
push   %ebx
sub    $0x2c,%esp
call   3d50 <main+0x1240>
add    $0xae0f,%ebx
cmp    $0x1,%eax
je     3f84 <main+0x1474>
mov    %eax,%esi
xor    %edi,%edi
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     3fd2 <main+0x14c2>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   2580 <ntfs_inode_lookup_by_mbsname@plt>
mov    %edx,0x1c(%esp)
and    $0xffff,%edx
mov    %eax,%ebp
mov    %eax,%edi
je     3fe8 <main+0x14d8>
mov    %esi,(%esp)
mov    %edx,0x18(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
je     4008 <main+0x14f8>
mov    $0xffffffff,%edi
mov    $0xffffffff,%edx
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x1,%ebp
ja     3fbe <main+0x14ae>
call   27e0 <__errno_location@plt>
movl   $0x2,(%eax)
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
jmp    3fd2 <main+0x14c2>
lea    0x0(%esi),%esi
and    0x1c(%esp),%ebp
cmp    $0xffffffff,%ebp
jne    3fdc <main+0x14cc>
jmp    3fd2 <main+0x14c2>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xad5d,%ebx
sub    $0x14,%esp
mov    0x34c(%ebx),%ecx
mov    0x18(%ecx),%ecx
cmp    $0x1,%ecx
je     4058 <main+0x1548>
cmp    $0x2,%ecx
je     4060 <main+0x1550>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   25e0 <ntfs_inode_update_times@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
and    $0xfffffffe,%edx
jmp    4043 <main+0x1533>
lea    0x0(%esi),%esi
cmp    $0x1,%edx
jne    4043 <main+0x1533>
mov    0x54(%eax),%ecx
cmp    0x44(%eax),%ecx
mov    0x50(%eax),%esi
jb     4043 <main+0x1533>
ja     4077 <main+0x1567>
cmp    0x40(%eax),%esi
jb     4043 <main+0x1533>
cmp    0x4c(%eax),%ecx
ja     404f <main+0x153f>
lea    0x0(%esi,%eiz,1),%esi
jb     4043 <main+0x1533>
cmp    0x48(%eax),%esi
jae    404f <main+0x153f>
jmp    4043 <main+0x1533>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xaceb,%ebx
sub    $0x14,%esp
test   %eax,%eax
mov    0x34c(%ebx),%edx
mov    (%edx),%ecx
mov    %ecx,(%esi)
mov    0x8c(%edx),%ecx
mov    %ecx,0x4(%esi)
mov    0x90(%edx),%ecx
mov    %ecx,0x8(%esi)
lea    0x84(%edx),%ecx
mov    %ecx,0xc(%esi)
je     4108 <main+0x15f8>
mov    %eax,(%esp)
call   29a0 <fuse_req_ctx@plt>
mov    (%eax),%edx
mov    %edx,0x10(%esi)
mov    0x4(%eax),%edx
mov    %edx,0x14(%esi)
mov    0x8(%eax),%edx
mov    0xc(%eax),%eax
mov    %edx,0x18(%esi)
mov    0x34c(%ebx),%edx
mov    %eax,0x1c(%esi)
mov    0x8c(%edx),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esi)
movl   $0x0,0x14(%esi)
movl   $0x0,0x18(%esi)
movl   $0x0,0x1c(%esi)
jmp    40f0 <main+0x15e0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
call   3d50 <main+0x1240>
add    $0xac45,%ebx
mov    0x10(%eax),%edi
test   %edi,%edi
je     4155 <main+0x1645>
mov    0x24(%esp),%eax
cmp    %eax,0xc(%edi)
je     4170 <main+0x1660>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%edi),%eax
test   %eax,%eax
jne    417a <main+0x166a>
jmp    418a <main+0x167a>
mov    %esi,%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   2380 <free@plt>
test   %esi,%esi
mov    %esi,(%edi)
jne    4178 <main+0x1668>
movl   $0x0,0xc(%edi)
mov    %edi,(%esp)
call   2380 <free@plt>
jmp    4155 <main+0x1645>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xabd9,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
lea    -0xc(%edi),%ebp
call   4090 <main+0x1580>
test   %eax,%eax
je     4298 <main+0x1788>
mov    0x34c(%ebx),%ecx
testb  $0x3,0x78(%ecx)
jne    4298 <main+0x1788>
cmp    $0x7,%edi
sete   %al
mov    %eax,%edi
mov    %al,0xc(%esp)
mov    0x38(%esp),%eax
test   %eax,%eax
setne  %al
mov    %eax,%ebp
mov    %edi,%eax
and    %eax,%ebp
mov    %ebp,%eax
cmp    $0x1,%al
mov    $0x5,%eax
sbb    %edi,%edi
xor    %edx,%edx
and    $0xffffff80,%edi
add    $0xc0,%edi
cmpl   $0x1,0x30(%esp)
je     4216 <main+0x1706>
mov    0x30(%esp),%eax
xor    %edx,%edx
mov    (%ecx),%ecx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edx
je     4288 <main+0x1778>
mov    %ebp,%eax
test   %al,%al
je     4288 <main+0x1778>
mov    (%edx),%eax
xor    $0x5,%eax
or     0x4(%edx),%eax
je     42a8 <main+0x1798>
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
call   2910 <ntfs_dir_parent_inode@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     4278 <main+0x1768>
mov    (%esi),%eax
testb  $0x1,0x90(%eax)
je     42d8 <main+0x17c8>
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
je     4288 <main+0x1778>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   2870 <ntfs_inode_close@plt>
xor    %edx,%edx
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x1,%ebp
jbe    4310 <main+0x1800>
mov    0x34c(%ebx),%ecx
jmp    41d8 <main+0x16c8>
cmpb   $0x0,0xc(%esp)
jne    4278 <main+0x1768>
mov    (%esi),%eax
testb  $0x1,0x90(%eax)
jne    4288 <main+0x1778>
mov    %edx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
call   2740 <ntfs_allowed_access@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
je     4278 <main+0x1768>
jmp    4288 <main+0x1778>
mov    %esi,(%esp)
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
call   2740 <ntfs_allowed_access@plt>
mov    %ebp,(%esp)
mov    %eax,%esi
call   2870 <ntfs_inode_close@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    4278 <main+0x1768>
test   %esi,%esi
je     4278 <main+0x1768>
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   27e0 <__errno_location@plt>
xor    %edx,%edx
movl   $0x5f,(%eax)
jmp    4288 <main+0x1778>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xaa4b,%ebx
sub    $0x7c,%esp
mov    0x34c(%ebx),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     4448 <main+0x1938>
mov    0x18(%ebp),%eax
mov    0xc0(%ebp),%ecx
mov    0x60(%ebp),%edx
mov    %eax,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x5c(%ebp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %ecx,%eax
cltd
mov    %edx,%eax
not    %eax
sar    $0x1f,%eax
mov    %eax,%edx
and    0xbc(%ebp),%eax
and    %edx,%ecx
mov    %ecx,%edi
mov    %ecx,0x24(%esp)
mov    %eax,%esi
mov    %eax,0x20(%esp)
mov    %eax,0x28(%esp)
movzbl 0x25(%ebp),%eax
mov    %ecx,0x2c(%esp)
movzbl 0x24(%ebp),%ecx
sub    %eax,%ecx
js     4420 <main+0x1910>
shld   %cl,%esi,%edi
xor    %eax,%eax
shl    %cl,%esi
and    $0x20,%ecx
cmovne %esi,%edi
cmovne %eax,%esi
mov    0x7c(%ebp),%eax
mov    0x20(%eax),%edx
mov    0x1c(%eax),%eax
shld   $0x3,%eax,%edx
shl    $0x3,%eax
add    %esi,%eax
adc    %edi,%edx
add    0xc4(%ebp),%esi
adc    0xc8(%ebp),%edi
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
mov    %esi,%edx
test   %edi,%edi
mov    %edi,%eax
js     4440 <main+0x1930>
mov    %eax,0x44(%esp)
mov    %eax,0x3c(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %edx,0x40(%esp)
mov    %edx,0x38(%esp)
movl   $0xff,0x54(%esp)
mov    %eax,(%esp)
call   23f0 <fuse_reply_statfs@plt>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
neg    %ecx
shrd   %cl,%edi,%esi
sar    %cl,%edi
mov    %edi,%eax
sar    $0x1f,%eax
and    $0x20,%ecx
cmovne %edi,%esi
cmovne %eax,%edi
jmp    43b5 <main+0x18a5>
lea    0x0(%esi),%esi
xor    %edx,%edx
xor    %eax,%eax
jmp    43e5 <main+0x18d5>
xchg   %ax,%ax
mov    0x90(%esp),%eax
movl   $0x13,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
jmp    4414 <main+0x1904>
jmp    4470 <main+0x1960>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
call   3d50 <main+0x1240>
add    $0xa903,%ebx
mov    0xd8(%esp),%ebp
cmpl   $0x2,0xcc(%esp)
mov    0xdc(%esp),%esi
movl   $0x0,0x3c(%esp)
je     4546 <main+0x1a36>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc8(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   2630 <ntfs_ucstombs@plt>
test   %eax,%eax
js     4733 <main+0x1c23>
and    $0xffff,%esi
mov    %esi,0x28(%esp)
je     4530 <main+0x1a20>
lea    0x40(%esp),%esi
xor    %eax,%eax
mov    $0x18,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    0x28(%esp),%eax
cmpl   $0xc,0xe0(%esp)
mov    %ebp,0x98(%esp)
mov    %eax,0x9c(%esp)
ja     46a0 <main+0x1b90>
mov    0xe0(%esp),%eax
mov    -0x2838(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
xor    %esi,%esi
cmp    $0x1,%ebp
ja     44e9 <main+0x19d9>
nop
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    %esi,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc000,0x50(%esp)
mov    0xc0(%esp),%eax
mov    0x3c(%esp),%edx
mov    0xc0(%esp),%ecx
mov    0x4(%eax),%edi
mov    0x8(%ecx),%ecx
mov    0x8(%edi),%eax
movl   $0x0,0x18(%esp)
mov    %esi,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x4(%edi),%edx
mov    %ecx,(%esp)
sub    %eax,%edx
lea    0xc(%edi,%eax,1),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   2ac0 <fuse_add_direntry@plt>
test   %eax,%eax
je     46c0 <main+0x1bb0>
mov    0x4(%edi),%edx
add    0x8(%edi),%eax
cmp    %edx,%eax
jbe    4635 <main+0x1b25>
add    $0xc,%edx
mov    %edx,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edx
je     46c8 <main+0x1bb8>
movl   $0x0,0x8(%eax)
mov    0xc0(%esp),%ecx
mov    0x4(%edi),%eax
movl   $0x0,(%edx)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%edx)
mov    %edx,(%edi)
mov    %edx,0x4(%ecx)
mov    0x8(%ecx),%ecx
mov    %esi,0x10(%esp)
mov    0x3c(%esp),%esi
mov    %eax,0x8(%esp)
lea    0xc(%edx),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   2ac0 <fuse_add_direntry@plt>
test   %eax,%eax
je     46e0 <main+0x1bd0>
mov    0x2c(%esp),%edx
add    0x8(%edx),%eax
mov    %edx,%edi
mov    %eax,0x8(%edi)
xor    %esi,%esi
jmp    4538 <main+0x1a28>
nop
movl   $0xa1ff,0x50(%esp)
jmp    4560 <main+0x1a50>
lea    0x0(%esi),%esi
movl   $0x2000,0x50(%esp)
jmp    4560 <main+0x1a50>
lea    0x0(%esi),%esi
movl   $0x1000,0x50(%esp)
jmp    4560 <main+0x1a50>
lea    0x0(%esi),%esi
movl   $0x6000,0x50(%esp)
jmp    4560 <main+0x1a50>
lea    0x0(%esi),%esi
mov    0x34c(%ebx),%eax
mov    0x10(%eax),%eax
not    %eax
and    $0x1ff,%eax
or     $0x40,%ah
mov    %eax,0x50(%esp)
jmp    4560 <main+0x1a50>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34c(%ebx),%eax
mov    0xc(%eax),%eax
not    %eax
and    $0x1ff,%eax
or     $0x80,%ah
mov    %eax,0x50(%esp)
jmp    4560 <main+0x1a50>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
jmp    45ba <main+0x1aaa>
call   27e0 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%esi
jmp    4538 <main+0x1a28>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
movl   $0x5,(%eax)
mov    0x28(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x3030(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2776(%ebx),%eax
movl   $0x3da,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    46d3 <main+0x1bc3>
lea    -0x3058(%ebx),%eax
and    $0xffff,%esi
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2776(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x394,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    4546 <main+0x1a36>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xa5eb,%ebx
sub    $0x6c,%esp
mov    0x34c(%ebx),%eax
test   %eax,%eax
je     47d9 <main+0x1cc9>
mov    (%eax),%edx
test   %edx,%edx
je     47d9 <main+0x1cc9>
mov    0x64(%eax),%eax
test   %eax,%eax
jne    4830 <main+0x1d20>
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   22c0 <ntfs_umount@plt>
test   %eax,%eax
jne    47e8 <main+0x1cd8>
mov    0x34c(%ebx),%eax
movl   $0x0,(%eax)
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x358(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe2c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3497(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27e4(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    47cd <main+0x1cbd>
xchg   %ax,%ax
mov    0x4(%edx),%eax
lea    -0x34b8(%ebx),%ebp
lea    -0x27e4(%ebx),%edi
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x8,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    0x358(%ebx),%eax
movl   $0xe1b,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x34ab(%ebx),%eax
mov    %eax,0x14(%esp)
call   2290 <ntfs_log_redirect@plt>
xor    %eax,%eax
mov    %esi,%edx
call   4090 <main+0x1580>
test   %eax,%eax
je     48a3 <main+0x1d93>
mov    0x34c(%ebx),%eax
mov    0x84(%eax),%eax
test   %eax,%eax
je     48a3 <main+0x1d93>
mov    0x8(%eax),%ecx
test   %ecx,%ecx
jne    48b8 <main+0x1da8>
mov    %esi,(%esp)
call   25d0 <ntfs_close_secure@plt>
mov    0x34c(%ebx),%eax
mov    (%eax),%edx
jmp    47b9 <main+0x1ca9>
mov    0xc(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,0x34(%esp)
mov    %eax,0x38(%esp)
imul   $0x3e8,%edx,%eax
xor    %edx,%edx
movl   $0x8,0xc(%esp)
movl   $0xe25,0x8(%esp)
mov    %ebp,0x4(%esp)
div    %ecx
mov    $0xcccccccd,%edx
mov    %edi,(%esp)
mov    %eax,0x3c(%esp)
mul    %edx
shr    $0x3,%edx
lea    (%edx,%edx,4),%eax
mov    0x3c(%esp),%edx
add    %eax,%eax
sub    %eax,%edx
imul   $0x64,0x34(%esp),%eax
mov    %edx,0x24(%esp)
xor    %edx,%edx
div    %ecx
mov    %eax,0x20(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x3000(%ebx),%eax
mov    %eax,0x14(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    48a3 <main+0x1d93>
lea    0x0(%esi,%eiz,1),%esi
jmp    4790 <main+0x1c80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xa42b,%ebx
sub    $0x13c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
lea    -0x26d5(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x347d(%ebx),%eax
mov    %eax,(%esp)
call   24e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebp
je     4a1c <main+0x1f0c>
lea    -0x346b(%ebx),%eax
xor    %edi,%edi
lea    0x2c(%esp),%esi
mov    %eax,0x1c(%esp)
jmp    49d8 <main+0x1ec8>
mov    0x1c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   2280 <strstr@plt>
test   %eax,%eax
jne    4a15 <main+0x1f05>
lea    -0x3462(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   2280 <strstr@plt>
test   %eax,%eax
mov    $0x2,%eax
cmovne %eax,%edi
mov    %ebp,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
call   23e0 <fgets@plt>
test   %eax,%eax
jne    49a8 <main+0x1e98>
mov    %ebp,(%esp)
call   2400 <fclose@plt>
mov    %edi,%eax
mov    0x12c(%esp),%edx
xor    %gs:0x14,%edx
jne    4a5d <main+0x1f4d>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%edi
jmp    49f0 <main+0x1ee0>
lea    -0x2fc4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x273a(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xef9,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    $0x1,%eax
jmp    49fa <main+0x1eea>
call   b880 <main+0x8d70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   3d50 <main+0x1240>
add    $0xa30b,%ebx
sub    $0x4,%esp
call   27e0 <__errno_location@plt>
mov    (%eax),%edx
neg    %edx
mov    %edx,(%esi)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebp
call   3d50 <main+0x1240>
add    $0xa2d4,%ebx
mov    %edx,0x18(%esp)
mov    $0x60,%edx
mov    %eax,0x1c(%esp)
test   $0x1,%ebp
mov    %ebp,%edi
movl   $0x0,0x38(%esp)
jne    4fc0 <main+0x24b0>
test   $0x2,%edi
jne    4fd8 <main+0x24c8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     4afc <main+0x1fec>
xor    %esi,%esi
add    $0x2,%edi
mov    %si,-0x2(%edi)
and    $0x1,%edx
je     4b04 <main+0x1ff4>
movb   $0x0,(%edi)
mov    0x1c(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x20(%esp)
mov    0x18(%esp),%eax
mov    0x8(%eax),%ecx
testb  $0x2,0x16(%ecx)
jne    4cf8 <main+0x21e8>
mov    0x14(%eax),%esi
test   $0x400,%esi
je     4da0 <main+0x2290>
call   27e0 <__errno_location@plt>
lea    0x3c(%esp),%edx
movl   $0x0,(%eax)
mov    %eax,%esi
mov    0x34c(%ebx),%eax
mov    0x80(%eax),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   29e0 <ntfs_make_symlink@plt>
test   %eax,%eax
mov    %eax,%edx
je     4ff0 <main+0x24e0>
mov    0x3c(%esp),%eax
mov    %eax,0x2c(%ebp)
sar    $0x1f,%eax
mov    %eax,0x30(%ebp)
mov    0x18(%esp),%eax
mov    0x30(%eax),%esi
mov    0x34(%eax),%edi
mov    0x8(%eax),%eax
add    $0x1ff,%esi
adc    $0x0,%edi
movzwl 0x12(%eax),%eax
shrd   $0x9,%edi,%esi
sar    $0x9,%edi
mov    %esi,0x38(%ebp)
mov    %edi,0x3c(%ebp)
mov    %eax,0x14(%ebp)
movl   $0xa000,0x10(%ebp)
mov    %edx,(%esp)
call   2380 <free@plt>
mov    0x20(%esp),%edx
test   %edx,%edx
jne    4d60 <main+0x2250>
mov    0x34c(%ebx),%eax
mov    0x4(%eax),%edx
mov    0x8(%eax),%eax
mov    %edx,0x18(%ebp)
mov    %eax,0x1c(%ebp)
mov    0x10(%ebp),%eax
mov    %eax,%edx
and    $0xf000,%edx
cmp    $0xa000,%edx
je     4e58 <main+0x2348>
mov    0x18(%esp),%edi
mov    0x50(%edi),%esi
mov    0x4(%edi),%edx
mov    (%edi),%eax
mov    0x54(%edi),%edi
add    $0x2ac18000,%esi
mov    %edx,0x5c(%ebp)
mov    %eax,0x58(%ebp)
adc    $0xfe624e21,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
call   b3f0 <main+0x88e0>
mov    %eax,%ecx
mov    $0xff676980,%eax
imul   %ecx
mov    %ecx,0x40(%ebp)
add    %esi,%eax
mov    $0x0,%esi
imul   $0x64,%eax,%eax
cmp    $0x3b9ac9ff,%eax
cmova  %esi,%eax
mov    %eax,0x44(%ebp)
mov    0x18(%esp),%eax
mov    0x48(%eax),%esi
mov    0x4c(%eax),%edi
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
add    $0x2ac18000,%esi
adc    $0xfe624e21,%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   b3f0 <main+0x88e0>
mov    %eax,%ecx
mov    $0xff676980,%eax
imul   %ecx
mov    %ecx,0x50(%ebp)
add    %esi,%eax
mov    $0x0,%esi
imul   $0x64,%eax,%eax
cmp    $0x3b9ac9ff,%eax
cmova  %esi,%eax
mov    %eax,0x54(%ebp)
mov    0x18(%esp),%eax
mov    0x40(%eax),%esi
mov    0x44(%eax),%edi
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
add    $0x2ac18000,%esi
adc    $0xfe624e21,%edi
mov    %edi,0x4(%esp)
mov    $0x0,%edi
mov    %esi,(%esp)
call   b3f0 <main+0x88e0>
mov    %eax,%ecx
mov    $0xff676980,%eax
imul   %ecx
mov    %ecx,0x48(%ebp)
add    %esi,%eax
imul   $0x64,%eax,%eax
cmp    $0x3b9ac9ff,%eax
cmova  %edi,%eax
mov    %eax,0x4c(%ebp)
mov    0x38(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
testb  $0x4,0x15(%eax)
jne    4b2f <main+0x201f>
mov    0x34c(%ebx),%eax
mov    0x10(%eax),%eax
not    %eax
and    $0x1ff,%eax
or     $0x40,%ah
mov    %eax,0x10(%ebp)
mov    0x18(%esp),%eax
testb  $0x40,0x10(%eax)
je     4e68 <main+0x2358>
mov    0x18(%esp),%edi
mov    0x2c(%edi),%edx
mov    0x28(%edi),%eax
mov    %edx,0x30(%ebp)
mov    0x34(%edi),%edx
mov    %eax,0x2c(%ebp)
mov    0x30(%edi),%eax
movl   $0x1,0x14(%ebp)
shrd   $0x9,%edx,%eax
sar    $0x9,%edx
mov    %eax,0x38(%ebp)
mov    %edx,0x3c(%ebp)
mov    0x20(%esp),%edx
test   %edx,%edx
je     4bbc <main+0x20ac>
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   2880 <ntfs_get_owner_mode@plt>
test   %eax,%eax
jns    4bce <main+0x20be>
mov    0x38(%esp),%eax
test   %eax,%eax
jne    4bce <main+0x20be>
lea    0x38(%esp),%eax
call   4a70 <main+0x1f60>
jmp    4bce <main+0x20be>
lea    0x0(%esi),%esi
mov    0x34c(%ebx),%edi
mov    0x18(%esp),%eax
movl   $0x8000,0x10(%ebp)
mov    %edi,0x24(%esp)
mov    0x68(%edi),%edi
mov    0x2c(%eax),%edx
mov    0x28(%eax),%eax
test   %edi,%edi
mov    %edx,0x30(%ebp)
mov    %eax,0x2c(%ebp)
je     4e08 <main+0x22f8>
test   $0x4000,%esi
je     4e08 <main+0x22f8>
mov    %edx,%edi
or     %eax,%edi
je     4e08 <main+0x22f8>
add    $0x1ff,%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%edi
adc    $0x0,%edx
mov    %edx,0x2c(%esp)
mov    0x2c(%esp),%edx
and    $0xfffffe00,%edi
mov    %edi,%eax
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x2c(%ebp)
mov    %edx,0x30(%ebp)
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    0x24(%esp),%edi
mov    0x34(%eax),%edx
mov    0x30(%eax),%eax
add    $0x1ff,%eax
adc    $0x0,%edx
shrd   $0x9,%edx,%eax
mov    %eax,0x38(%ebp)
movzwl 0x12(%ecx),%eax
sar    $0x9,%edx
and    $0x4,%esi
mov    %edx,0x3c(%ebp)
mov    $0x8000,%edx
mov    %eax,0x14(%ebp)
jne    4ec8 <main+0x23b8>
mov    0xc(%edi),%eax
not    %eax
and    $0x1ff,%eax
or     %edx,%eax
mov    %eax,0x10(%ebp)
jmp    4d54 <main+0x2244>
lea    0x0(%esi,%eiz,1),%esi
or     $0x1ff,%eax
mov    %eax,0x10(%ebp)
jmp    4be5 <main+0x20d5>
lea    0x0(%esi),%esi
mov    0x250(%ebx),%eax
movl   $0x4,0xc(%esp)
movl   $0xa0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
je     4d2a <main+0x221a>
mov    0x24(%eax),%esi
mov    0x28(%eax),%edi
mov    0x18(%esp),%ecx
mov    %esi,0x28(%ecx)
mov    0x1c(%eax),%esi
mov    %edi,0x2c(%ecx)
mov    0x20(%eax),%edi
orl    $0x40,0x10(%ecx)
mov    %esi,0x30(%ecx)
mov    %edi,0x34(%ecx)
mov    %eax,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    4d2a <main+0x221a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x244(%ebx),%eax
mov    0x18(%esp),%edi
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     4be5 <main+0x20d5>
testb  $0x2,0x14(%edi)
mov    0x24(%esi),%eax
je     5000 <main+0x24f0>
lea    -0x9(%eax),%edx
cmp    $0x1fff,%edx
ja     4fa9 <main+0x2499>
mov    %eax,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     50ee <main+0x25de>
mov    0x24(%esi),%eax
mov    0x28(%esi),%edx
mov    %edi,0x14(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
call   2780 <ntfs_attr_pread@plt>
mov    %eax,0x24(%esp)
mov    %edx,0x28(%esp)
xor    0x24(%esi),%eax
xor    0x28(%esi),%edx
or     %eax,%edx
jne    5050 <main+0x2540>
mov    0x4(%edi),%edx
mov    (%edi),%eax
mov    %edx,%ecx
xor    $0x4b4c42,%ecx
xor    $0x78746e49,%eax
or     %eax,%ecx
je     5076 <main+0x2566>
mov    %edx,%ecx
xor    $0x524843,%ecx
or     %eax,%ecx
je     50d2 <main+0x25c2>
xor    $0x14b4e4c,%edx
or     %eax,%edx
jne    4fa1 <main+0x2491>
movl   $0xa000,0x10(%ebp)
mov    %edi,(%esp)
call   2380 <free@plt>
mov    %esi,(%esp)
call   2650 <ntfs_attr_close@plt>
mov    0x10(%ebp),%edx
mov    0x34c(%ebx),%edi
jmp    4e40 <main+0x2330>
nop
lea    0x1(%ebp),%edi
mov    $0x5f,%dl
test   $0x2,%edi
movb   $0x0,0x0(%ebp)
je     4ae5 <main+0x1fd5>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    4ae5 <main+0x1fd5>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
cmp    $0x5f,%eax
je     5018 <main+0x2508>
neg    %eax
jmp    4ced <main+0x21dd>
xchg   %ax,%ax
mov    0x28(%esi),%edx
mov    %edx,%edi
or     %eax,%edi
jne    5030 <main+0x2520>
movl   $0x1000,0x10(%ebp)
jmp    4fa9 <main+0x2499>
lea    0x0(%esi),%esi
movl   $0x1a,0x2c(%ebp)
movl   $0x0,0x30(%ebp)
jmp    4b77 <main+0x2067>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
xor    $0x1,%ecx
or     %edx,%ecx
jne    4f05 <main+0x23f5>
movl   $0xc000,0x10(%ebp)
jmp    4fa9 <main+0x2499>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %edi,(%esp)
neg    %eax
mov    %eax,0x38(%esp)
call   2380 <free@plt>
mov    %esi,(%esp)
call   2650 <ntfs_attr_close@plt>
mov    0x38(%esp),%eax
jmp    4ced <main+0x21dd>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
xor    $0x18,%ecx
or     %ecx,%eax
jne    4fa1 <main+0x2491>
movl   $0x6000,0x10(%ebp)
mov    0x8(%edi),%eax
xor    %edx,%edx
and    $0xfffff000,%eax
mov    %eax,0x24(%esp)
mov    0x10(%edi),%eax
xor    %al,%al
shld   $0xc,%eax,%edx
shl    $0xc,%eax
mov    %eax,%ecx
mov    0x8(%edi),%eax
or     %edx,0x24(%esp)
movzbl 0x10(%edi),%edx
and    $0xfff,%eax
shl    $0x8,%eax
or     %edx,%eax
or     %eax,%ecx
mov    0x24(%esp),%eax
mov    %ecx,0x20(%ebp)
mov    %eax,0x24(%ebp)
jmp    4fa1 <main+0x2491>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
xor    $0x18,%ecx
or     %ecx,%eax
jne    4fa1 <main+0x2491>
movl   $0x2000,0x10(%ebp)
jmp    5090 <main+0x2580>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %esi,(%esp)
neg    %eax
mov    %eax,0x38(%esp)
call   2650 <ntfs_attr_close@plt>
mov    0x38(%esp),%eax
jmp    4ced <main+0x21dd>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
call   3d50 <main+0x1240>
add    $0x9c65,%ebx
mov    0xd8(%esp),%esi
mov    %esi,(%esp)
call   2710 <strlen@plt>
cmp    $0xff,%eax
ja     51f8 <main+0x26e8>
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0xd4(%esp)
je     5159 <main+0x2649>
mov    0xd4(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     51d0 <main+0x26c0>
mov    0xd0(%esp),%eax
lea    0x18(%esp),%ebp
mov    %ebp,%edx
call   4090 <main+0x1580>
test   %eax,%eax
je     519e <main+0x268e>
mov    0x18(%esp),%eax
testb  $0x1,0x90(%eax)
je     52c8 <main+0x27b8>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2580 <ntfs_inode_lookup_by_mbsname@plt>
test   %dx,%dx
mov    %eax,%esi
jne    5210 <main+0x2700>
cmp    $0x1,%eax
ja     5210 <main+0x2700>
call   27e0 <__errno_location@plt>
movl   $0x2,(%eax)
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0xd0(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
movl   $0x24,(%eax)
mov    $0x24,%eax
jmp    51d7 <main+0x26c7>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    51d0 <main+0x26c0>
and    %esi,%edx
cmp    $0xffffffff,%edx
je     51d0 <main+0x26c0>
mov    0x34c(%ebx),%eax
mov    %esi,0x38(%esp)
mov    (%eax),%eax
mov    %esi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     51d0 <main+0x26c0>
lea    0x40(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
test   %eax,%eax
jne    5301 <main+0x27f1>
mov    0x34c(%ebx),%eax
movl   $0x1,0x3c(%esp)
mov    (%eax),%eax
testb  $0x1,0x90(%eax)
je     5310 <main+0x2800>
fld1
fstl   0xa0(%esp)
mov    %esi,(%esp)
fstpl  0xa8(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
jne    51d0 <main+0x26c0>
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xd0(%esp),%eax
mov    %eax,(%esp)
call   26a0 <fuse_reply_entry@plt>
jmp    51ea <main+0x26da>
xchg   %ax,%ax
movl   $0x40,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    519e <main+0x268e>
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
call   27e0 <__errno_location@plt>
movl   $0xd,(%eax)
mov    $0xd,%eax
jmp    51d7 <main+0x26c7>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
jmp    51d0 <main+0x26c0>
xchg   %ax,%ax
fldz
fstl   0xa0(%esp)
jmp    5293 <main+0x2783>
xchg   %ax,%ax
push   %ebp
mov    %edx,%ecx
push   %edi
xor    %edx,%edx
push   %esi
mov    %eax,%edi
push   %ebx
mov    $0x5,%eax
sub    $0x5c,%esp
call   3d50 <main+0x1240>
add    $0x9a4d,%ebx
cmp    $0x1,%ecx
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
je     5356 <main+0x2846>
mov    %ecx,%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     5560 <main+0x2a50>
mov    0x78(%esp),%eax
test   %eax,%eax
je     53f0 <main+0x28e0>
mov    0x8(%esi),%eax
testb  $0x2,0x16(%eax)
je     53f0 <main+0x28e0>
call   27e0 <__errno_location@plt>
xor    %ebp,%ebp
movl   $0xffffffff,0x2c(%esp)
movl   $0x1,(%eax)
mov    %ebp,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     53b6 <main+0x28a6>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     5578 <main+0x2a68>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     53d3 <main+0x28c3>
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    53d3 <main+0x28c3>
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x2c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   2990 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
js     5560 <main+0x2a50>
mov    0x34c(%ebx),%ecx
mov    0x34(%ecx),%ebp
test   %ebp,%ebp
jne    5548 <main+0x2a38>
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0x70(%esp)
je     5435 <main+0x2925>
mov    0x70(%esp),%eax
xor    %edx,%edx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     5530 <main+0x2a20>
lea    0x30(%esp),%eax
mov    %eax,0x1c(%esp)
mov    %eax,%edx
mov    %edi,%eax
call   4090 <main+0x1580>
test   %eax,%eax
je     5477 <main+0x2967>
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
je     5598 <main+0x2a88>
movzbl 0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
call   2310 <ntfs_link@plt>
test   %eax,%eax
jne    5530 <main+0x2a20>
mov    (%esi),%eax
mov    0x4(%esi),%edx
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   2330 <ntfs_inode_update_mbsname@plt>
mov    0x78(%esp),%ecx
test   %ecx,%ecx
je     550a <main+0x29fa>
mov    (%esi),%eax
mov    0x78(%esp),%edi
mov    %eax,(%edi)
mov    0x34c(%ebx),%eax
movl   $0x1,0x4(%edi)
mov    (%eax),%eax
testb  $0x1,0x90(%eax)
je     55c8 <main+0x2ab8>
mov    0x78(%esp),%eax
fld1
fstl   0x68(%eax)
mov    0x78(%esp),%eax
mov    %esi,%edx
fstpl  0x70(%eax)
add    $0x8,%eax
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x2c(%esp)
orl    $0x20,0x14(%esi)
mov    %esi,%eax
mov    $0x4,%edx
call   4020 <main+0x1510>
mov    $0x6,%edx
mov    %ebp,%eax
call   4020 <main+0x1510>
jmp    539e <main+0x288e>
nop
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    539e <main+0x288e>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   24a0 <ntfs_forbidden_chars@plt>
test   %eax,%eax
je     5588 <main+0x2a78>
call   27e0 <__errno_location@plt>
xor    %ebp,%ebp
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    539e <main+0x288e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
jmp    53b6 <main+0x28a6>
xchg   %ax,%ax
mov    0x34c(%ebx),%ecx
jmp    5421 <main+0x2911>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0xc0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    5477 <main+0x2967>
movl   $0xfffffff3,0x2c(%esp)
jmp    539e <main+0x288e>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
fldz
fstl   0x68(%eax)
jmp    54ee <main+0x29de>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x90,%esp
mov    0xac(%esp),%eax
lea    0x18(%esp),%edi
call   3d50 <main+0x1240>
add    $0x978b,%ebx
mov    0xa0(%esp),%esi
mov    0xa4(%esp),%edx
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   5320 <main+0x2810>
test   %eax,%eax
jne    5640 <main+0x2b30>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   26a0 <fuse_reply_entry@plt>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x90,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   3d50 <main+0x1240>
add    $0x9718,%ebx
mov    0x60(%esp),%esi
lea    0x20(%esp),%edi
mov    %edi,%edx
movl   $0x0,0x1c(%esp)
mov    %esi,%eax
call   4090 <main+0x1580>
test   %eax,%eax
jne    56c8 <main+0x2bb8>
mov    0x34c(%ebx),%eax
mov    0x44(%eax),%eax
test   %eax,%eax
jne    5758 <main+0x2c48>
movl   $0xffffffa1,0x1c(%esp)
mov    $0x5f,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0x64(%esp)
je     56dc <main+0x2bcc>
mov    0x64(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     5778 <main+0x2c68>
testb  $0x7,0x68(%esp)
je     5736 <main+0x2c26>
mov    0x68(%esp),%edx
and    $0x1,%edx
neg    %edx
and    $0x40,%edx
testb  $0x2,0x68(%esp)
lea    0x80(%edx),%eax
cmovne %eax,%edx
testb  $0x4,0x68(%esp)
lea    0x100(%edx),%eax
cmovne %eax,%edx
mov    0x20(%esp),%eax
testb  $0x1,0x90(%eax)
je     5798 <main+0x2c88>
mov    %ebp,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     574a <main+0x2c3a>
test   %eax,%eax
je     5788 <main+0x2c78>
test   %eax,%eax
jns    5760 <main+0x2c50>
neg    %eax
jmp    56ad <main+0x2b9d>
lea    0x0(%esi),%esi
movl   $0x0,0x1c(%esp)
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    574a <main+0x2c3a>
nop
lea    0x1c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x1c(%esp),%eax
jmp    574a <main+0x2c3a>
nop
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    5736 <main+0x2c26>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    5736 <main+0x2c26>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x95bb,%ebx
sub    $0x4c,%esp
mov    0x6c(%esp),%eax
mov    0x70(%esp),%edx
movl   $0x0,0x3c(%esp)
mov    %eax,0x18(%esp)
mov    0x34c(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    (%eax),%eax
mov    0x18(%eax),%ebp
cmp    0x68(%esp),%ebp
jae    5820 <main+0x2d10>
movl   $0xffffffea,0x3c(%esp)
mov    $0x16,%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edi,%edi
mov    $0x5,%esi
cmpl   $0x1,0x64(%esp)
je     5834 <main+0x2d24>
mov    0x64(%esp),%esi
xor    %edi,%edi
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     5900 <main+0x2df0>
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     5958 <main+0x2e48>
movzwl 0xc(%eax),%eax
test   $0x40ff,%eax
je     5920 <main+0x2e10>
movl   $0xffffffea,0x3c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %edi,(%esp)
call   2650 <ntfs_attr_close@plt>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x3c(%esp),%eax
je     58d0 <main+0x2dc0>
test   %eax,%eax
jne    58d0 <main+0x2dc0>
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x3c(%esp),%eax
lea    0x0(%esi),%esi
test   %eax,%eax
js     5a50 <main+0x2f40>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   2690 <fuse_reply_bmap@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    58d0 <main+0x2dc0>
nop
testb  $0x2,0x18(%edi)
je     5889 <main+0x2d79>
mov    %edi,(%esp)
call   28d0 <ntfs_attr_map_whole_runlist@plt>
test   %eax,%eax
je     5980 <main+0x2e70>
call   27e0 <__errno_location@plt>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    58a1 <main+0x2d91>
call   27e0 <__errno_location@plt>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    58a9 <main+0x2d99>
lea    0x0(%esi),%esi
mov    %ebp,%eax
xor    %edx,%edx
mov    (%edi),%ebp
divl   0x68(%esp)
mov    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %eax,%ecx
mov    %eax,0x28(%esp)
sar    $0x1f,%ecx
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,(%esp)
call   b570 <main+0x8a60>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   2410 <ntfs_rl_vcn_to_lcn@plt>
cmp    $0x0,%edx
mov    %eax,%ebp
mov    %edx,%ecx
jl     5a3b <main+0x2f2b>
jle    5a36 <main+0x2f26>
mov    0x20(%esp),%eax
imul   0x20(%esp),%ecx
cltd
mov    %edx,%eax
imul   %ebp,%eax
add    %eax,%ecx
mov    0x20(%esp),%eax
mul    %ebp
mov    %edx,0x24(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
add    %ecx,0x24(%esp)
mov    %edx,0xc(%esp)
mov    0x1c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   b6a0 <main+0x8b90>
mov    %eax,0x18(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x24(%esp),%edx
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
jmp    58a1 <main+0x2d91>
cmp    $0x0,%eax
ja     59d2 <main+0x2ec2>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
jmp    58a1 <main+0x2d91>
neg    %eax
jmp    5808 <main+0x2cf8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x24(%esp)
mov    0x98(%esp),%eax
call   3d50 <main+0x1240>
add    $0x930d,%ebx
mov    %edx,0x20(%esp)
mov    0x9c(%esp),%edx
movl   $0x0,0x3c(%esp)
mov    %eax,0x28(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %edx,0x2c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x4c(%esp)
mov    %eax,(%esp)
call   2990 <ntfs_mbstoucs@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
js     5e0c <main+0x32fc>
mov    0x34c(%ebx),%eax
mov    0x34(%eax),%ecx
test   %ecx,%ecx
jne    5df0 <main+0x32e0>
xor    %edi,%edi
cmp    $0x1,%edx
mov    $0x5,%esi
je     5aee <main+0x2fde>
mov    %edx,%esi
xor    %edi,%edi
mov    (%eax),%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     5d30 <main+0x3220>
mov    0x24(%esp),%eax
lea    0x50(%esp),%edx
mov    %edx,0x20(%esp)
call   4090 <main+0x1580>
test   %eax,%eax
jne    5d08 <main+0x31f8>
mov    0x94(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     5f18 <main+0x3408>
mov    0x34c(%ebx),%ecx
mov    0xc(%ecx),%edi
not    %edi
and    $0x1ff,%edi
and    0x94(%esp),%edi
mov    0x8c(%ecx),%edx
test   %edx,%edx
je     5f98 <main+0x3488>
mov    0x74(%ecx),%edx
cmp    $0x4000,%eax
sete   %al
movzbl %al,%eax
test   %edx,%edx
jne    5e28 <main+0x3318>
mov    %eax,0x14(%esp)
mov    0x44(%esp),%eax
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2460 <ntfs_alloc_securid@plt>
mov    %eax,0x24(%esp)
mov    0x94(%esp),%eax
and    $0xfffff000,%eax
cmp    $0x6000,%eax
je     5ed8 <main+0x33c8>
cmp    $0xa000,%eax
je     5e80 <main+0x3370>
cmp    $0x2000,%eax
je     5ed8 <main+0x33c8>
mov    %eax,0x10(%esp)
mov    %ebp,%eax
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   2ad0 <ntfs_create@plt>
mov    %eax,%ebp
test   %ebp,%ebp
je     5d30 <main+0x3220>
mov    0x34c(%ebx),%eax
mov    0x8c(%eax),%eax
test   %eax,%eax
je     5c1a <main+0x310a>
mov    0x24(%esp),%eax
test   %eax,%eax
je     5f48 <main+0x3438>
mov    0x14(%ebp),%edx
mov    0xa8(%esp),%edi
mov    %edx,%eax
or     $0x20,%eax
test   %edi,%edi
mov    %eax,0x14(%ebp)
je     5fa8 <main+0x3498>
mov    0x34c(%ebx),%eax
mov    %edx,%edi
shr    $0xa,%edi
and    $0x2,%edi
mov    0x68(%eax),%ecx
test   %ecx,%ecx
je     5c54 <main+0x3144>
mov    %edi,%ecx
or     $0x4,%ecx
and    $0x40,%dh
cmovne %ecx,%edi
mov    %edi,%edx
mov    0x20(%eax),%ecx
or     $0x8,%edx
or     0x1c(%eax),%ecx
cmovne %edx,%edi
mov    0x0(%ebp),%eax
mov    0x4(%ebp),%edx
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   2330 <ntfs_inode_update_mbsname@plt>
mov    0x0(%ebp),%eax
mov    0xa0(%esp),%ecx
orl    $0x1,0x10(%ebp)
mov    %eax,(%ecx)
mov    0x34c(%ebx),%eax
movl   $0x1,0x4(%ecx)
mov    (%eax),%eax
testb  $0x1,0x90(%eax)
je     5e68 <main+0x3358>
mov    0xa0(%esp),%eax
fld1
fstl   0x68(%eax)
mov    0xa0(%esp),%eax
mov    %ebp,%edx
fstpl  0x70(%eax)
add    $0x8,%eax
mov    %eax,(%esp)
mov    0x20(%esp),%eax
call   4aa0 <main+0x1f90>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4c(%esp)
call   22b0 <ntfs_inode_close_in_dir@plt>
test   %eax,%eax
je     5cf6 <main+0x31e6>
mov    0x4c(%esp),%ebp
test   %ebp,%ebp
je     5fb0 <main+0x34a0>
mov    $0x6,%edx
mov    %esi,%eax
call   4020 <main+0x1510>
jmp    5d3f <main+0x322f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x48(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2320 <ntfs_allowed_create@plt>
test   %eax,%eax
jne    5b23 <main+0x3013>
call   27e0 <__errno_location@plt>
xor    %edi,%edi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x4c(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     5d63 <main+0x3253>
mov    0x4c(%esp),%ecx
test   %ecx,%ecx
je     5e58 <main+0x3348>
mov    0x40(%esp),%eax
test   %eax,%eax
je     5d73 <main+0x3263>
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x4c(%esp),%eax
test   %eax,%eax
js     5de2 <main+0x32d2>
mov    0xa8(%esp),%edx
test   %edx,%edx
je     5de2 <main+0x32d2>
movl   $0x1c,(%esp)
call   2600 <malloc@plt>
test   %eax,%eax
je     5dde <main+0x32ce>
mov    0xa0(%esp),%ecx
movl   $0x0,0x14(%eax)
mov    (%ecx),%edx
mov    0x34c(%ebx),%ecx
mov    %edi,0x18(%eax)
mov    %edx,0x10(%eax)
mov    0xa8(%ecx),%edx
movl   $0x0,0x4(%eax)
test   %edx,%edx
mov    %edx,(%eax)
je     5dc8 <main+0x32b8>
mov    %eax,0x4(%edx)
mov    0xa8(%esp),%edi
mov    %eax,0xa8(%ecx)
mov    %eax,0x10(%edi)
sar    $0x1f,%eax
mov    %eax,0x14(%edi)
mov    0x4c(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   24a0 <ntfs_forbidden_chars@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     5e48 <main+0x3338>
call   27e0 <__errno_location@plt>
xor    %edi,%edi
xor    %esi,%esi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x4c(%esp)
jmp    5d3f <main+0x322f>
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   29c0 <ntfs_inherited_id@plt>
mov    %eax,0x24(%esp)
jmp    5ba2 <main+0x3092>
lea    0x0(%esi),%esi
mov    0x34c(%ebx),%eax
jmp    5ade <main+0x2fce>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x4c(%esp),%eax
call   4a70 <main+0x1f60>
jmp    5d63 <main+0x3253>
xchg   %ax,%ax
mov    0xa0(%esp),%eax
fldz
fstl   0x68(%eax)
jmp    5cbb <main+0x31ab>
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa4(%esp),%eax
mov    %eax,(%esp)
call   2990 <ntfs_mbstoucs@plt>
test   %eax,%eax
js     5d30 <main+0x3220>
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    %ebp,%eax
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   27a0 <ntfs_create_symlink@plt>
mov    %eax,%ebp
jmp    5bf6 <main+0x30e6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x10(%esp)
mov    %ebp,%eax
mov    0x28(%esp),%edx
movzbl %al,%eax
mov    0x2c(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   22f0 <ntfs_create_device@plt>
mov    %eax,%ebp
jmp    5bf6 <main+0x30e6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34c(%ebx),%ecx
mov    0x48(%esp),%edx
mov    0x10(%ecx),%edi
and    $0x400,%edx
not    %edi
and    $0x1ff,%edi
and    0x94(%esp),%edi
or     %edx,%edi
jmp    5b52 <main+0x3042>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2640 <ntfs_set_inherited_posix@plt>
test   %eax,%eax
jns    5c1a <main+0x310a>
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    5c1a <main+0x310a>
lea    0x4c(%esp),%eax
call   4a70 <main+0x1f60>
jmp    5c1a <main+0x310a>
lea    0x0(%esi),%esi
movl   $0x0,0x24(%esp)
jmp    5ba2 <main+0x3092>
lea    0x0(%esi),%esi
xor    %edi,%edi
jmp    5c62 <main+0x3152>
nop
lea    0x4c(%esp),%eax
call   4a70 <main+0x1f60>
jmp    5cf6 <main+0x31e6>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
movzwl 0xcc(%esp),%eax
lea    0x28(%esp),%ebp
call   3d50 <main+0x1240>
add    $0x8da9,%ebx
mov    0xc0(%esp),%esi
mov    0xd0(%esp),%edi
mov    0xc4(%esp),%edx
mov    %eax,0x4(%esp)
mov    0xc8(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %edi,0x18(%esp)
mov    %ebp,0x10(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
call   5a60 <main+0x2f50>
test   %eax,%eax
js     6050 <main+0x3540>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   2800 <fuse_reply_create@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0xa0,%esp
mov    0xb4(%esp),%eax
lea    0x28(%esp),%edi
call   3d50 <main+0x1240>
add    $0x8cfb,%ebx
mov    0xb0(%esp),%esi
mov    0xb8(%esp),%edx
movl   $0x0,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0xbc(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
movl   $0xa000,0x4(%esp)
call   5a60 <main+0x2f50>
test   %eax,%eax
js     60f0 <main+0x35e0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   26a0 <fuse_reply_entry@plt>
add    $0xa0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xa0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0xa0,%esp
mov    0xbc(%esp),%edx
lea    0x28(%esp),%edi
call   3d50 <main+0x1240>
add    $0x8c5b,%ebx
mov    0xb8(%esp),%eax
mov    0xb0(%esp),%esi
movl   $0x0,0x18(%esp)
and    $0xfff,%edx
or     $0x40,%dh
mov    %edx,0x4(%esp)
mov    0xb4(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
call   5a60 <main+0x2f50>
test   %eax,%eax
js     61a0 <main+0x3690>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   26a0 <fuse_reply_entry@plt>
add    $0xa0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xa0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0xa0,%esp
mov    0xc0(%esp),%eax
lea    0x28(%esp),%edi
mov    0xc4(%esp),%edx
call   3d50 <main+0x1240>
add    $0x8ba4,%ebx
mov    0xb0(%esp),%esi
movl   $0x0,0x18(%esp)
mov    %eax,0x8(%esp)
movzwl 0xbc(%esp),%eax
mov    %edx,0xc(%esp)
mov    0xb4(%esp),%edx
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   5a60 <main+0x2f50>
test   %eax,%eax
js     6248 <main+0x3738>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   26a0 <fuse_reply_entry@plt>
add    $0xa0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xa0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x98(%esp),%ebp
call   3d50 <main+0x1240>
add    $0x8b11,%ebx
mov    0x9c(%esp),%esi
mov    0xa0(%esp),%edi
test   %ebp,%ebp
jne    62f0 <main+0x37e0>
movl   $0x0,0x6c(%esp)
xor    %ebp,%ebp
movl   $0x0,0x50(%esp)
mov    %ebp,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x6c(%esp),%eax
je     62b5 <main+0x37a5>
test   %eax,%eax
je     6530 <main+0x3a20>
test   %eax,%eax
js     6548 <main+0x3a38>
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   2560 <fuse_reply_buf@plt>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,0x50(%esp)
je     6648 <main+0x3b38>
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0x94(%esp)
je     6325 <main+0x3815>
mov    0x94(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     6568 <main+0x3a58>
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,0x54(%esp)
je     6568 <main+0x3a58>
mov    0x34c(%ebx),%ecx
mov    0x54(%esp),%eax
mov    0x68(%ecx),%ecx
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
test   %ecx,%ecx
mov    %edx,0x44(%esp)
mov    %eax,0x40(%esp)
je     63e0 <main+0x38d0>
mov    %edx,%ecx
mov    %eax,%edx
mov    %ecx,%eax
or     %edx,%eax
je     63e0 <main+0x38d0>
mov    0x54(%esp),%eax
testb  $0x40,0xd(%eax)
je     63e0 <main+0x38d0>
testb  $0x2,0x18(%eax)
je     63e0 <main+0x38d0>
mov    %edx,%eax
mov    %ecx,%edx
add    $0x1ff,%eax
mov    %eax,0x38(%esp)
mov    0x38(%esp),%ecx
adc    $0x0,%edx
mov    %edx,0x3c(%esp)
mov    0x3c(%esp),%edx
and    $0xfffffe00,%ecx
mov    %ecx,%eax
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x40(%esp)
mov    %edx,0x44(%esp)
mov    0x98(%esp),%eax
xor    %edx,%edx
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
add    %esi,%eax
adc    %edi,%edx
cmp    %edx,0x44(%esp)
jl     65ea <main+0x3ada>
jle    65e0 <main+0x3ad0>
mov    %ebp,0x58(%esp)
mov    %edi,%ebp
mov    %esi,%edi
mov    0x98(%esp),%esi
lea    -0x2fa0(%ebx),%eax
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
mov    %eax,0x5c(%esp)
xchg   %ax,%ax
mov    0x50(%esp),%eax
add    0x40(%esp),%eax
mov    0x54(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %ecx,(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %edi,0x48(%esp)
mov    %ebp,0x4c(%esp)
mov    %esi,%ebp
call   2780 <ntfs_attr_pread@plt>
mov    0x48(%esp),%edi
mov    %edx,%ecx
mov    %eax,%edx
xor    %edx,%ebp
or     %ecx,%ebp
mov    0x4c(%esp),%ebp
je     6588 <main+0x3a78>
mov    0x38(%esp),%eax
mov    %edx,0x30(%esp)
mov    %edx,0x48(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x34(%esp)
mov    %eax,0x28(%esp)
mov    0x58(%esp),%eax
mov    %edi,0x20(%esp)
mov    %edx,0x2c(%esp)
mov    %ebp,0x24(%esp)
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x5c(%esp),%eax
movl   $0x4fb,0x8(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2785(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
cmp    $0x0,%ecx
jl     65b9 <main+0x3aa9>
jle    65b0 <main+0x3aa0>
cmp    %ecx,0x3c(%esp)
jge    6580 <main+0x3a70>
mov    0x58(%esp),%ebp
mov    $0xfffffffb,%eax
mov    %eax,0x6c(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    629d <main+0x378d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x6c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x6c(%esp),%eax
test   %eax,%eax
jns    62bd <main+0x37ad>
lea    0x0(%esi),%esi
neg    %eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
jmp    62d8 <main+0x37c8>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x6c(%esp)
jmp    629d <main+0x378d>
lea    0x0(%esi),%esi
jg     6588 <main+0x3a78>
cmp    %edx,0x38(%esp)
jb     650e <main+0x39fe>
add    %edx,%edi
adc    %ecx,%ebp
add    %edx,0x40(%esp)
adc    %ecx,0x44(%esp)
sub    %edx,%esi
je     6660 <main+0x3b50>
mov    %esi,0x38(%esp)
movl   $0x0,0x3c(%esp)
jmp    6430 <main+0x3920>
lea    0x0(%esi),%esi
cmp    $0x0,%edx
ja     6508 <main+0x39f8>
mov    %ecx,%edi
mov    0x58(%esp),%ebp
mov    $0xfffffffb,%eax
or     %edx,%edi
je     6517 <main+0x3a07>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    6517 <main+0x3a07>
lea    0x0(%esi),%esi
cmp    %eax,0x40(%esp)
jae    6405 <main+0x38f5>
cmp    %edi,0x44(%esp)
jl     6628 <main+0x3b18>
jg     65f8 <main+0x3ae8>
cmp    %esi,0x40(%esp)
jb     6628 <main+0x3b18>
mov    0x40(%esp),%eax
xor    %edx,%edx
mov    %edx,0x3c(%esp)
sub    %esi,%eax
mov    %eax,0x98(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x98(%esp),%eax
test   %eax,%eax
jne    6405 <main+0x38f5>
lea    0x0(%esi),%esi
xor    %esi,%esi
mov    0x54(%esp),%eax
mov    $0x1,%edx
mov    0x4(%eax),%eax
call   4020 <main+0x1510>
mov    %esi,0x6c(%esp)
jmp    651b <main+0x3a0b>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
xor    %ebp,%ebp
mov    (%eax),%eax
neg    %eax
mov    %eax,0x6c(%esp)
jmp    629d <main+0x378d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%ebp
mov    0x40(%esp),%esi
jmp    662a <main+0x3b1a>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   3d50 <main+0x1240>
add    $0x8708,%ebx
mov    0x70(%esp),%edi
lea    0x30(%esp),%ebp
mov    0x74(%esp),%esi
mov    %ebp,%edx
movl   $0x0,0x2c(%esp)
mov    %edi,%eax
call   4090 <main+0x1580>
xor    %edx,%edx
cmp    $0x1,%esi
mov    $0x5,%eax
je     66af <main+0x3b9f>
mov    %esi,%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     6830 <main+0x3d20>
testl  $0x404,0x14(%eax)
je     6738 <main+0x3c28>
xor    %ebp,%ebp
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
jne    6720 <main+0x3c10>
test   %eax,%eax
js     6848 <main+0x3d38>
mov    0x78(%esp),%edx
test   %edx,%edx
jne    67c8 <main+0x3cb8>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2970 <fuse_reply_xattr@plt>
mov    %ebp,(%esp)
call   2380 <free@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    66ec <main+0x3bdc>
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x2c(%esp),%eax
jmp    66ec <main+0x3bdc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
jne    6761 <main+0x3c51>
movl   $0x100,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
je     67e8 <main+0x3cd8>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   2a00 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edx
je     6860 <main+0x3d50>
mov    0x78(%esp),%ecx
xor    %ebp,%ebp
test   %ecx,%ecx
jne    67f8 <main+0x3ce8>
mov    0x34c(%ebx),%eax
mov    0x14(%eax),%eax
lea    -0x1(%eax),%ecx
cmp    $0x1,%ecx
jbe    6878 <main+0x3d68>
mov    %edx,0x1c(%esp)
call   27e0 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%eax
cmp    $0x2,%eax
je     67b4 <main+0x3ca4>
neg    %eax
mov    %eax,0x2c(%esp)
mov    %edx,(%esp)
call   2720 <ntfs_attr_put_search_ctx@plt>
jmp    66dc <main+0x3bcc>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   2560 <fuse_reply_buf@plt>
mov    %ebp,(%esp)
call   2380 <free@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xfffffff3,0x2c(%esp)
jmp    66da <main+0x3bca>
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   2600 <malloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
jne    6785 <main+0x3c75>
call   27e0 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    67b4 <main+0x3ca4>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
xor    %ebp,%ebp
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    66ec <main+0x3bdc>
lea    0x0(%esi,%eiz,1),%esi
neg    %eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   25b0 <fuse_reply_err@plt>
jmp    670c <main+0x3bfc>
nop
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    66da <main+0x3bca>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x10(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x1c(%esp)
call   b120 <main+0x8610>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,0x2c(%esp)
jns    679a <main+0x3c8a>
jmp    67b4 <main+0x3ca4>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x64(%esp),%eax
call   3d50 <main+0x1240>
add    $0x84b4,%ebx
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
mov    0x10(%eax),%ebp
movl   $0x0,0x24(%esp)
test   %ebp,%ebp
je     68fe <main+0x3dee>
mov    0xc(%ebp),%esi
cmp    0x54(%esp),%esi
je     6970 <main+0x3e60>
call   27e0 <__errno_location@plt>
movl   $0xfffffffb,0x24(%esp)
movl   $0x5,(%eax)
lea    -0x345c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2765(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x472,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x24(%esp),%eax
test   %eax,%eax
je     6965 <main+0x3e55>
neg    %eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%ebp),%edx
test   %edx,%edx
je     69d8 <main+0x3ec8>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     69ae <main+0x3e9e>
mov    0x8(%eax),%edx
test   %edx,%edx
je     699d <main+0x3e8d>
jmp    6b36 <main+0x4026>
lea    0x0(%esi),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
jne    6ab8 <main+0x3fa8>
mov    %esi,%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   2380 <free@plt>
test   %esi,%esi
mov    %esi,0x0(%ebp)
jne    6990 <main+0x3e80>
mov    0x50(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2560 <fuse_reply_buf@plt>
mov    0x24(%esp),%eax
jmp    694f <main+0x3e3f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     6b24 <main+0x4014>
mov    0x58(%esp),%eax
xor    %ecx,%ecx
cmp    $0x1,%esi
movl   $0x0,0x8(%edi)
mov    $0x5,%edx
movl   $0x0,(%edi)
mov    %eax,0x4(%edi)
mov    0x50(%esp),%eax
mov    %edi,0x0(%ebp)
mov    %edi,0x4(%ebp)
mov    %eax,0x8(%ebp)
je     6a22 <main+0x3f12>
mov    %esi,%edx
xor    %ecx,%ecx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     6ae8 <main+0x3fd8>
lea    -0xa914(%ebx),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   2350 <ntfs_readdir@plt>
test   %eax,%eax
je     6a73 <main+0x3f63>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x24(%esp)
mov    $0x1,%edx
mov    %esi,%eax
movl   $0x1,0x10(%ebp)
call   4020 <main+0x1510>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     6b1e <main+0x400e>
mov    0x24(%esp),%eax
test   %eax,%eax
je     6b15 <main+0x4005>
mov    (%edi),%eax
mov    %eax,0x0(%ebp)
mov    %edi,(%esp)
call   2380 <free@plt>
mov    0x24(%esp),%eax
jmp    694f <main+0x3e3f>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
lea    0xc(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   2560 <fuse_reply_buf@plt>
mov    (%esi),%eax
mov    %eax,0x0(%ebp)
mov    %esi,(%esp)
call   2380 <free@plt>
mov    0x24(%esp),%eax
jmp    694f <main+0x3e3f>
nop
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x24(%esp)
test   %eax,%eax
jne    6a9e <main+0x3f8e>
mov    0x8(%edi),%eax
mov    %eax,0x8(%esp)
lea    0xc(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   2560 <fuse_reply_buf@plt>
jmp    6a9e <main+0x3f8e>
lea    0x24(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x24(%esp),%eax
jmp    6af5 <main+0x3fe5>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x24(%esp)
jmp    694f <main+0x3e3f>
mov    %eax,%esi
jmp    6aba <main+0x3faa>
lea    0x0(%esi),%esi
push   %ebp
xor    %edx,%edx
push   %edi
mov    $0x5,%eax
push   %esi
push   %ebx
sub    $0x4c,%esp
call   3d50 <main+0x1240>
add    $0x8231,%ebx
mov    0x60(%esp),%edi
cmpl   $0x1,0x64(%esp)
movl   $0x0,0x1c(%esp)
je     6b72 <main+0x4062>
mov    0x64(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     6c60 <main+0x4150>
lea    0x20(%esp),%ebp
mov    %edi,%eax
mov    %ebp,%edx
call   4090 <main+0x1580>
test   %eax,%eax
je     6bd0 <main+0x40c0>
mov    0x68(%esp),%eax
mov    (%eax),%edx
mov    $0x80,%eax
test   $0x1,%dl
je     6c90 <main+0x4180>
mov    0x20(%esp),%edx
testb  $0x1,0x90(%edx)
je     6cb1 <main+0x41a1>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
jne    6c00 <main+0x40f0>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     6c19 <main+0x4109>
neg    %eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    6be4 <main+0x40d4>
lea    0x1c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    6be4 <main+0x40d4>
movl   $0x14,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     6cd8 <main+0x41c8>
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
movl   $0x0,0x10(%eax)
mov    0x64(%esp),%eax
mov    %eax,0xc(%ebp)
mov    0x1c(%esp),%eax
mov    0x68(%esp),%edx
mov    %ebp,0x10(%edx)
sar    $0x1f,%ebp
mov    %ebp,0x14(%edx)
jmp    6c6d <main+0x415d>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
test   %eax,%eax
jne    6be4 <main+0x40d4>
mov    0x68(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2770 <fuse_reply_open@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
and    $0x2,%edx
cmp    $0x1,%edx
mov    0x20(%esp),%edx
sbb    %eax,%eax
and    $0xffffff80,%eax
add    $0x180,%eax
testb  $0x1,0x90(%edx)
jne    6bd0 <main+0x40c0>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    6bd0 <main+0x40c0>
movl   $0xfffffff3,0x1c(%esp)
jmp    6bd0 <main+0x40c0>
xchg   %ax,%ax
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    6c4e <main+0x413e>
lea    0x0(%esi),%esi
push   %ebp
xor    %edx,%edx
push   %edi
mov    $0x5,%eax
push   %esi
push   %ebx
sub    $0x4c,%esp
call   3d50 <main+0x1240>
add    $0x8081,%ebx
cmpl   $0x1,0x64(%esp)
movl   $0x0,0x1c(%esp)
je     6d1e <main+0x420e>
mov    0x64(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     6ed0 <main+0x43c0>
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     6e10 <main+0x4300>
mov    0x60(%esp),%eax
lea    0x20(%esp),%edi
mov    %edi,%edx
call   4090 <main+0x1580>
test   %eax,%eax
je     6da8 <main+0x4298>
mov    0x68(%esp),%eax
mov    (%eax),%edx
mov    $0x80,%eax
test   $0x1,%dl
je     6ee8 <main+0x43d8>
mov    0x20(%esp),%edx
testb  $0x1,0x90(%edx)
je     6f09 <main+0x43f9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
xor    %edi,%edi
test   %eax,%eax
js     6e00 <main+0x42f0>
mov    0x68(%esp),%eax
testb  $0x3,(%eax)
je     6e00 <main+0x42f0>
movzwl 0xc(%ebp),%edx
movzbl %dl,%eax
cmp    $0x1,%eax
mov    0x34c(%ebx),%eax
sbb    %edi,%edi
not    %edi
and    $0x2,%edi
mov    0x68(%eax),%ecx
test   %ecx,%ecx
je     6de2 <main+0x42d2>
and    $0x40,%dh
je     6f48 <main+0x4438>
mov    %edi,%edx
mov    0x20(%eax),%ecx
or     $0x8,%edx
or     0x1c(%eax),%ecx
cmovne %edx,%edi
cmpl   $0xf,0x64(%esp)
ja     6e00 <main+0x42f0>
movl   $0xffffffff,0x1c(%esp)
nop
mov    %ebp,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    6e1f <main+0x430f>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
xor    %edi,%edi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     6e37 <main+0x4327>
test   %eax,%eax
je     6f30 <main+0x4420>
test   %eax,%eax
jns    6e58 <main+0x4348>
neg    %eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x1c,(%esp)
call   2600 <malloc@plt>
test   %eax,%eax
je     6ea8 <main+0x4398>
mov    0x34c(%ebx),%ecx
mov    0x64(%esp),%esi
movl   $0x0,0x14(%eax)
mov    %edi,0x18(%eax)
mov    0xa8(%ecx),%edx
mov    %esi,0x10(%eax)
movl   $0x0,0x4(%eax)
test   %edx,%edx
mov    %edx,(%eax)
je     6e95 <main+0x4385>
mov    %eax,0x4(%edx)
mov    0x68(%esp),%edi
mov    %eax,0xa8(%ecx)
mov    %eax,0x10(%edi)
sar    $0x1f,%eax
mov    %eax,0x14(%edi)
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    6e3b <main+0x432b>
mov    0x68(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   2770 <fuse_reply_open@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
xor    %edi,%edi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    6e37 <main+0x4327>
lea    0x0(%esi,%eiz,1),%esi
and    $0x2,%edx
cmp    $0x1,%edx
mov    0x20(%esp),%edx
sbb    %eax,%eax
and    $0xffffff80,%eax
add    $0x180,%eax
testb  $0x1,0x90(%edx)
jne    6da8 <main+0x4298>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    6da8 <main+0x4298>
movl   $0xfffffff3,0x1c(%esp)
xor    %edi,%edi
jmp    6e00 <main+0x42f0>
lea    0x1c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x1c(%esp),%eax
jmp    6e37 <main+0x4327>
lea    0x0(%esi),%esi
mov    %edi,%edx
or     $0x4,%edx
testb  $0x40,0x15(%esi)
cmovne %edx,%edi
jmp    6de2 <main+0x42d2>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %edx,%edx
push   %edi
mov    $0x5,%eax
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%ecx
call   3d50 <main+0x1240>
add    $0x7e0d,%ebx
mov    0x6c(%esp),%esi
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebp
cmp    $0x1,%ecx
je     6f92 <main+0x4482>
mov    %ecx,%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     70b8 <main+0x45a8>
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     70b8 <main+0x45a8>
test   %esi,%esi
movl   $0x0,0x24(%esp)
jne    7010 <main+0x4500>
jmp    71b2 <main+0x46a2>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%edi
adc    %edx,%ebp
add    %eax,0x24(%esp)
sub    %eax,%esi
je     70c8 <main+0x45b8>
mov    0x24(%esp),%eax
add    0x68(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   22e0 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jg     7000 <main+0x44f0>
jl     7048 <main+0x4538>
cmp    $0x0,%eax
ja     7000 <main+0x44f0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x34(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2650 <ntfs_attr_close@plt>
mov    0x24(%esp),%eax
test   %eax,%eax
je     7079 <main+0x4569>
mov    0x2c(%esp),%eax
orl    $0x20,0x14(%eax)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x34(%esp),%eax
je     7095 <main+0x4585>
test   %eax,%eax
je     71a0 <main+0x4690>
test   %eax,%eax
js     7180 <main+0x4670>
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   2860 <fuse_reply_write@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x34(%esp)
jmp    7079 <main+0x4569>
nop
mov    0x24(%esp),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
jle    705d <main+0x454d>
mov    0x34c(%ebx),%esi
mov    0x20(%esi),%eax
or     0x1c(%esi),%eax
jne    7108 <main+0x45f8>
mov    0x28(%esp),%eax
mov    $0x6,%edx
mov    0x4(%eax),%eax
call   4020 <main+0x1510>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    7071 <main+0x4561>
lea    0x0(%esi,%eiz,1),%esi
lea    0x38(%esp),%eax
mov    $0x989680,%edi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   23d0 <clock_gettime@plt>
mov    %edi,%eax
mov    0x3c(%esp),%ecx
imull  0x38(%esp)
mov    %eax,%edi
mov    %edx,%ebp
add    $0xd53e8000,%edi
mov    %ecx,%eax
mov    $0x51eb851f,%edx
adc    $0x19db1de,%ebp
imul   %edx
sar    $0x1f,%ecx
sar    $0x5,%edx
sub    %ecx,%edx
mov    %edx,%eax
cltd
add    %eax,%edi
mov    0x2c(%esp),%eax
adc    %edx,%ebp
mov    0x44(%eax),%edx
mov    0x40(%eax),%eax
sub    %eax,%edi
sbb    %edx,%ebp
cmp    0x20(%esi),%ebp
ja     70e2 <main+0x45d2>
jb     70f3 <main+0x45e3>
cmp    0x1c(%esi),%edi
ja     70e2 <main+0x45d2>
jmp    70f3 <main+0x45e3>
lea    0x0(%esi),%esi
neg    %eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x34(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x34(%esp),%eax
jmp    7095 <main+0x4585>
mov    0x28(%esp),%eax
movl   $0x0,0x34(%esp)
mov    %eax,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    7079 <main+0x4569>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %edx,%edx
push   %edi
mov    $0x5,%eax
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%ecx
call   3d50 <main+0x1240>
add    $0x7b9d,%ebx
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
cmp    $0x1,%ecx
je     7206 <main+0x46f6>
mov    %ecx,%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     7340 <main+0x4830>
mov    0x14(%eax),%eax
test   $0x4,%ah
jne    72a8 <main+0x4798>
test   $0x4,%al
jne    72f8 <main+0x47e8>
movl   $0xffffffea,0x28(%esp)
lea    -0x271f(%ebx),%edi
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x28(%esp),%eax
je     725e <main+0x474e>
test   %eax,%eax
je     7358 <main+0x4848>
test   %eax,%eax
js     7290 <main+0x4780>
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   2a40 <fuse_reply_readlink@plt>
mov    0x24(%esp),%eax
cmp    %edi,%eax
je     7286 <main+0x4776>
mov    %eax,(%esp)
call   2380 <free@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
neg    %eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
jmp    7276 <main+0x4766>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0x28(%esp)
movl   $0x0,(%eax)
mov    %eax,%ebp
mov    0x34c(%ebx),%eax
mov    0x80(%eax),%eax
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   29e0 <ntfs_make_symlink@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     7388 <main+0x4878>
lea    -0x271f(%ebx),%edi
jmp    7246 <main+0x4736>
lea    0x0(%esi,%eiz,1),%esi
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     7340 <main+0x4830>
mov    0x24(%eax),%eax
cmp    $0x8,%eax
ja     7370 <main+0x4860>
movl   $0xffffffea,0x28(%esp)
mov    %edi,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    72e9 <main+0x47d9>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
lea    -0x271f(%ebx),%edi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x28(%esp)
jmp    7246 <main+0x4736>
lea    0x28(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x28(%esp),%eax
jmp    725e <main+0x474e>
lea    0x0(%esi),%esi
cmp    $0x2008,%eax
jbe    73a8 <main+0x4898>
movl   $0xffffffdc,0x28(%esp)
jmp    7330 <main+0x4820>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
lea    -0x271f(%ebx),%edi
cmp    $0x5f,%eax
je     7428 <main+0x4918>
neg    %eax
mov    %eax,0x28(%esp)
jmp    7246 <main+0x4736>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     7416 <main+0x4906>
mov    0x24(%edi),%eax
mov    0x28(%edi),%edx
mov    %ebp,0x14(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
call   2780 <ntfs_attr_pread@plt>
mov    %edx,0x1c(%esp)
mov    0x1c(%esp),%ecx
xor    0x28(%edi),%ecx
mov    %eax,0x18(%esp)
mov    %ecx,%eax
mov    0x18(%esp),%ecx
xor    0x24(%edi),%ecx
or     %ecx,%eax
je     7448 <main+0x4938>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x28(%esp)
mov    %ebp,(%esp)
call   2380 <free@plt>
jmp    7330 <main+0x4820>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x28(%esp)
jmp    7330 <main+0x4820>
mov    %edi,(%esp)
call   27d0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
jne    7246 <main+0x4736>
mov    0x0(%ebp),%eax
jmp    739a <main+0x488a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%eax
mov    0x0(%ebp),%ecx
xor    $0x14b4e4c,%eax
xor    $0x78746e49,%ecx
or     %ecx,%eax
je     7467 <main+0x4957>
movl   $0xffffffea,0x28(%esp)
jmp    7409 <main+0x48f9>
mov    0x18(%esp),%eax
lea    0x24(%esp),%ecx
mov    0x1c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
add    $0xfffffff8,%eax
adc    $0xffffffff,%edx
mov    %edx,0x1c(%esp)
shr    $0x1f,%edx
mov    %eax,0x18(%esp)
mov    %edx,%eax
xor    %edx,%edx
add    0x18(%esp),%eax
adc    0x1c(%esp),%edx
shrd   $0x1,%edx,%eax
mov    %eax,0x4(%esp)
lea    0x8(%ebp),%eax
mov    %eax,(%esp)
call   2630 <ntfs_ucstombs@plt>
test   %eax,%eax
jns    7409 <main+0x48f9>
jmp    73fc <main+0x48ec>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
mov    $0x5,%esi
push   %ebx
sub    $0xac,%esp
mov    0xc4(%esp),%eax
call   3d50 <main+0x1240>
add    $0x78a7,%ebx
mov    0xc0(%esp),%ebp
cmp    $0x1,%eax
je     74f3 <main+0x49e3>
mov    %eax,%esi
xor    %edi,%edi
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     75b8 <main+0x4aa8>
lea    0x20(%esp),%edi
mov    %ebp,%eax
mov    %edi,%edx
call   4090 <main+0x1580>
lea    0x40(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   4aa0 <main+0x1f90>
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     7578 <main+0x4a68>
test   %eax,%eax
je     7568 <main+0x4a58>
neg    %eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x1c(%esp),%eax
lea    0x0(%esi),%esi
test   %eax,%eax
jne    754a <main+0x4a3a>
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
testb  $0x1,0x90(%eax)
jne    75b0 <main+0x4aa0>
fldz
lea    0x40(%esp),%eax
mov    %ebp,(%esp)
fstpl  0x8(%esp)
mov    %eax,0x4(%esp)
call   2a50 <fuse_reply_attr@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
fld1
jmp    758f <main+0x4a7f>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    7578 <main+0x4a68>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x77a9,%ebx
sub    $0x2c,%esp
mov    0x4(%eax),%edi
test   %edi,%edi
mov    0x34c(%ebx),%ecx
je     76d0 <main+0x4bc0>
xor    %edi,%edi
cmp    $0x1,%edx
movl   $0x0,0x1c(%esp)
mov    $0x5,%esi
je     760d <main+0x4afd>
mov    %edx,%esi
xor    %edi,%edi
mov    (%ecx),%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     7700 <main+0x4bf0>
mov    0x4(%ebp),%eax
test   %eax,%eax
je     763e <main+0x4b2e>
cmpl   $0xffffffff,0x40(%esp)
jne    7670 <main+0x4b60>
cmpl   $0xffffffff,0x44(%esp)
jne    7670 <main+0x4b60>
mov    0x48(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x1c(%esp)
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     7666 <main+0x4b56>
test   %eax,%eax
je     76a0 <main+0x4b90>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x44(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x8(%esp)
call   2510 <ntfs_set_owner@plt>
test   %eax,%eax
je     76b8 <main+0x4ba8>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x1c(%esp)
jmp    7652 <main+0x4b42>
nop
lea    0x1c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x4,%edx
mov    %esi,%eax
call   4020 <main+0x1510>
jmp    763e <main+0x4b2e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ecx),%esi
test   %esi,%esi
jne    75f5 <main+0x4ae5>
mov    0x40(%esp),%edi
mov    $0xffffffa1,%eax
cmp    %edi,0x4(%ecx)
jne    7666 <main+0x4b56>
mov    0x44(%esp),%edi
cmp    %edi,0x8(%ecx)
jne    7666 <main+0x4b56>
jmp    75f5 <main+0x4ae5>
nop
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    7666 <main+0x4b56>
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x7669,%ebx
sub    $0x3c,%esp
mov    0x4(%eax),%edi
test   %edi,%edi
mov    0x34c(%ebx),%ecx
je     7808 <main+0x4cf8>
xor    %edi,%edi
cmp    $0x1,%edx
movl   $0x0,0x2c(%esp)
mov    $0x5,%esi
je     774d <main+0x4c3d>
mov    %edx,%esi
xor    %edi,%edi
mov    (%ecx),%eax
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     7830 <main+0x4d20>
mov    0x4(%ebp),%eax
test   %eax,%eax
je     77d4 <main+0x4cc4>
mov    0x58(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x8(%esp)
call   2270 <ntfs_set_ownmod@plt>
test   %eax,%eax
je     77c8 <main+0x4cb8>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     77b9 <main+0x4ca9>
test   %eax,%eax
je     77f0 <main+0x4ce0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x4,%edx
mov    %esi,%eax
call   4020 <main+0x1510>
mov    0x5c(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x2c(%esp)
jmp    77a5 <main+0x4c95>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x44(%ecx),%esi
test   %esi,%esi
jne    7735 <main+0x4c25>
mov    0x50(%esp),%edi
mov    $0xffffffa1,%eax
cmp    %edi,0x4(%ecx)
jne    77b9 <main+0x4ca9>
mov    0x54(%esp),%edi
cmp    %edi,0x8(%ecx)
jne    77b9 <main+0x4ca9>
jmp    7735 <main+0x4c25>
nop
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    77b9 <main+0x4ca9>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x753b,%ebx
sub    $0xcc,%esp
mov    0xec(%esp),%esi
lea    0x40(%esp),%ebp
mov    0xe0(%esp),%eax
mov    %ebp,%edx
movl   $0x0,0x38(%esp)
call   4090 <main+0x1580>
test   $0x3f,%esi
jne    78e0 <main+0x4dd0>
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0xe4(%esp)
je     7898 <main+0x4d88>
mov    0xe4(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     7998 <main+0x4e88>
lea    0x60(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %edi,(%esp)
mov    %eax,0x38(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
jne    7978 <main+0x4e68>
xchg   %ax,%ax
mov    %esi,%eax
and    $0x7,%eax
jne    7910 <main+0x4e00>
mov    0x38(%esp),%edi
test   %edi,%edi
je     7920 <main+0x4e10>
mov    0xe0(%esp),%eax
neg    %edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    -0x2804(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x8,%esi
jne    7ad8 <main+0x4fc8>
test   $0x30,%esi
jne    79b0 <main+0x4ea0>
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
testb  $0x1,0x90(%eax)
je     7970 <main+0x4e60>
fld1
lea    0x60(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xe0(%esp),%eax
fstpl  0x8(%esp)
mov    %eax,(%esp)
call   2a50 <fuse_reply_attr@plt>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
fldz
jmp    7947 <main+0x4e37>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
test   %eax,%eax
jne    78e0 <main+0x4dd0>
lea    0x38(%esp),%eax
call   4a70 <main+0x1f60>
jmp    78e0 <main+0x4dd0>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x38(%esp)
jmp    78e0 <main+0x4dd0>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0xe4(%esp)
movl   $0x0,0x3c(%esp)
je     79d2 <main+0x4ec2>
mov    0xe4(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     7fa8 <main+0x5498>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   2390 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
je     7d80 <main+0x5270>
test   $0x80,%esi
movl   $0x5,0x20(%esp)
jne    7a7e <main+0x4f6e>
test   $0x10,%esi
movl   $0x4,0x20(%esp)
je     7a7e <main+0x4f6e>
mov    0xe8(%esp),%ecx
mov    $0x989680,%eax
imull  0x40(%ecx)
mov    %eax,0x18(%esp)
mov    0x44(%ecx),%eax
addl   $0xd53e8000,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    $0x51eb851f,%edx
adcl   $0x19db1de,0x1c(%esp)
mov    %eax,%ecx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x5,%edx
sub    %eax,%edx
mov    %edx,%eax
cltd
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x50(%edi)
mov    %edx,0x54(%edi)
test   $0x100,%esi
je     7fe0 <main+0x54d0>
orl    $0x2,0x20(%esp)
mov    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   25e0 <ntfs_inode_update_times@plt>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     7dc0 <main+0x52b0>
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x3c(%esp),%edi
test   %eax,%eax
je     7ac3 <main+0x4fb3>
test   %edi,%edi
je     7f60 <main+0x5450>
test   %edi,%edi
mov    %edi,0x38(%esp)
je     7934 <main+0x4e24>
nop
jmp    78ef <main+0x4ddf>
lea    0x0(%esi),%esi
mov    0xe8(%esp),%eax
cmpl   $0x1,0xe4(%esp)
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
je     7f72 <main+0x5462>
mov    0xe4(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     7f98 <main+0x5488>
cmpl   $0xf,0xe4(%esp)
ja     7de0 <main+0x52d0>
call   27e0 <__errno_location@plt>
mov    $0xffffffff,%edi
xor    %ecx,%ecx
movl   $0x1,(%eax)
mov    %ecx,(%esp)
mov    %edi,0x3c(%esp)
call   2650 <ntfs_attr_close@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x3c(%esp),%edi
test   %eax,%eax
je     7d6d <main+0x525d>
test   %edi,%edi
je     7d60 <main+0x5250>
mov    %edi,0x38(%esp)
jmp    78ef <main+0x4ddf>
nop
mov    0xe8(%esp),%eax
lea    0x60(%esp),%ecx
mov    0x1c(%eax),%edx
mov    0x18(%eax),%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    0xe4(%esp),%edx
mov    %ebp,%eax
call   75d0 <main+0x4ac0>
mov    %eax,0x38(%esp)
mov    %eax,%edi
jmp    78eb <main+0x4ddb>
lea    0x0(%esi),%esi
mov    0xe8(%esp),%eax
lea    0x60(%esp),%edx
mov    0x18(%eax),%eax
mov    %edx,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
jmp    7b9c <main+0x508c>
nop
mov    0xe8(%esp),%eax
lea    0x60(%esp),%ecx
mov    0x10(%eax),%edx
mov    0x18(%eax),%eax
mov    %ecx,0xc(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    0xe4(%esp),%edx
mov    %ebp,%eax
call   7710 <main+0x4c00>
mov    %eax,0x38(%esp)
mov    %eax,%edi
jmp    78eb <main+0x4ddb>
lea    0x0(%esi),%esi
mov    0xe8(%esp),%eax
lea    0x60(%esp),%edx
mov    0x1c(%eax),%eax
mov    %edx,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
jmp    7b9c <main+0x508c>
lea    0x0(%esi),%esi
mov    0xe8(%esp),%eax
lea    0x60(%esp),%ecx
mov    0x10(%eax),%edx
mov    0x1c(%eax),%eax
mov    %ecx,0xc(%esp)
movl   $0xffffffff,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
jmp    7bfc <main+0x50ec>
xchg   %ax,%ax
mov    0xe8(%esp),%eax
movl   $0x0,0x3c(%esp)
mov    0x34c(%ebx),%ecx
mov    0x10(%eax),%eax
mov    %eax,0x20(%esp)
mov    0x44(%esp),%eax
test   %eax,%eax
je     8044 <main+0x5534>
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0xe4(%esp)
je     7caa <main+0x519a>
mov    0xe4(%esp),%eax
xor    %edx,%edx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     8059 <main+0x5549>
mov    0x44(%esp),%eax
test   %eax,%eax
je     7da4 <main+0x5294>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
and    $0xfff,%eax
mov    %eax,0x8(%esp)
call   2940 <ntfs_set_mode@plt>
test   %eax,%eax
je     7fb8 <main+0x54a8>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
orl    $0x1,0x10(%edi)
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x3c(%esp),%edi
test   %eax,%eax
je     7d25 <main+0x5215>
test   %edi,%edi
jne    7d25 <main+0x5215>
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x3c(%esp),%edi
mov    %edi,0x38(%esp)
jmp    78eb <main+0x4ddb>
xchg   %ax,%ax
mov    0xe8(%esp),%eax
mov    0xe8(%esp),%ecx
mov    0x10(%eax),%edx
mov    0x18(%ecx),%edi
lea    0x60(%esp),%ecx
mov    0x1c(%eax),%eax
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
jmp    7bfc <main+0x50ec>
nop
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x3c(%esp),%edi
test   %edi,%edi
mov    %edi,0x38(%esp)
je     792c <main+0x4e1c>
jmp    78ef <main+0x4ddf>
xchg   %ax,%ax
mov    %esi,%eax
and    $0x180,%eax
cmp    $0x180,%eax
je     8067 <main+0x5557>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    7aa3 <main+0x4f93>
lea    0x60(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x3c(%esp)
jmp    7d04 <main+0x51f4>
lea    0x0(%esi),%esi
lea    0x60(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x3c(%esp)
jmp    7aab <main+0x4f9b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ecx
je     7f48 <main+0x5438>
mov    0x44(%esp),%eax
test   %eax,%eax
je     7e34 <main+0x5324>
mov    0xf0(%esp),%eax
test   %eax,%eax
jne    7e34 <main+0x5324>
mov    0x40(%esp),%eax
testb  $0x1,0x90(%eax)
je     8099 <main+0x5589>
mov    0x24(%ecx),%eax
cmpb   $0x0,0xc(%ecx)
mov    %eax,0x28(%esp)
mov    0x28(%ecx),%eax
mov    %eax,0x2c(%esp)
je     7f20 <main+0x5410>
mov    0x1c(%esp),%eax
cmp    0x30(%ecx),%eax
jl     7f20 <main+0x5410>
jg     7e68 <main+0x5358>
mov    0x18(%esp),%eax
cmp    0x2c(%ecx),%eax
jbe    7f20 <main+0x5410>
lea    0x3c(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x18(%esp),%eax
mov    %ecx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x24(%esp)
movb   $0x0,0x3c(%esp)
call   22e0 <ntfs_attr_pwrite@plt>
mov    0x24(%esp),%ecx
cmp    $0x0,%edx
jl     7f48 <main+0x5438>
jle    80de <main+0x55ce>
mov    0x2c(%esp),%edx
mov    0x18(%esp),%eax
xor    0x1c(%esp),%edx
xor    0x28(%esp),%eax
or     %eax,%edx
je     7ed6 <main+0x53c6>
mov    0x20(%esp),%eax
orl    $0x20,0x14(%eax)
mov    0x4(%ecx),%eax
mov    $0x6,%edx
mov    %ecx,0x24(%esp)
call   4020 <main+0x1510>
mov    0x20(%esp),%edx
lea    0x60(%esp),%eax
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x18(%esp)
call   27e0 <__errno_location@plt>
mov    0x18(%esp),%ecx
xor    %edx,%edx
test   %ecx,%ecx
mov    0x24(%esp),%ecx
je     7f18 <main+0x5408>
mov    0x18(%esp),%edi
mov    %edi,%edx
neg    %edx
mov    %edx,(%eax)
jmp    7b4a <main+0x503a>
nop
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   2470 <ntfs_attr_truncate@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     7eba <main+0x53aa>
mov    %ecx,0x18(%esp)
call   27e0 <__errno_location@plt>
mov    0x18(%esp),%ecx
mov    (%eax),%edi
neg    %edi
jmp    7b4a <main+0x503a>
xchg   %ax,%ax
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x3c(%esp),%edi
jmp    7ac3 <main+0x4fb3>
movl   $0x5,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    7b38 <main+0x5028>
xchg   %ax,%ax
call   27e0 <__errno_location@plt>
xor    %ecx,%ecx
mov    (%eax),%edi
neg    %edi
jmp    7b4a <main+0x503a>
call   27e0 <__errno_location@plt>
mov    (%eax),%edi
neg    %edi
jmp    7ac3 <main+0x4fb3>
xchg   %ax,%ax
mov    $0x4,%edx
mov    %edi,%eax
call   4020 <main+0x1510>
lea    0x60(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4aa0 <main+0x1f90>
mov    %eax,0x3c(%esp)
jmp    7d00 <main+0x51f0>
lea    0x0(%esi),%esi
and    $0x20,%esi
je     7a8f <main+0x4f7f>
mov    0xe8(%esp),%ecx
mov    $0x989680,%esi
mov    %esi,%eax
mov    0x4c(%ecx),%esi
imull  0x48(%ecx)
mov    %eax,0x18(%esp)
mov    %esi,%eax
addl   $0xd53e8000,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    $0x51eb851f,%edx
adcl   $0x19db1de,0x1c(%esp)
imul   %edx
sar    $0x1f,%esi
sar    $0x5,%edx
sub    %esi,%edx
mov    %edx,%eax
cltd
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x40(%edi)
mov    %edx,0x44(%edi)
jmp    7a8f <main+0x4f7f>
mov    0x44(%ecx),%eax
mov    $0xffffffa1,%edi
test   %eax,%eax
jne    7c90 <main+0x5180>
jmp    7d25 <main+0x5215>
call   27e0 <__errno_location@plt>
mov    (%eax),%edi
neg    %edi
jmp    7d25 <main+0x5215>
mov    0x40(%esp),%eax
testb  $0x1,0x90(%eax)
jne    7a08 <main+0x4ef8>
movl   $0x80,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    7a08 <main+0x4ef8>
jmp    7d92 <main+0x5282>
mov    0x20(%esp),%eax
movl   $0x80,0x8(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x4(%esp)
call   2740 <ntfs_allowed_access@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    7e34 <main+0x5324>
mov    %ecx,0x18(%esp)
mov    $0xfffffff3,%edi
call   27e0 <__errno_location@plt>
mov    0x18(%esp),%ecx
movl   $0xd,(%eax)
jmp    7b4a <main+0x503a>
cmp    $0x0,%eax
ja     7eba <main+0x53aa>
jmp    7f48 <main+0x5438>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   3d50 <main+0x1240>
add    $0x6c82,%ebx
cmp    $0x4,%edx
movl   $0x0,(%eax)
jg     81c0 <main+0x56b0>
cmp    $0x2,%edx
jge    8148 <main+0x5638>
cmp    $0x1,%edx
jne    81e0 <main+0x56d0>
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x2058(%ebx),%eax
mov    (%eax),%ecx
add    %esi,%ecx
mov    %ecx,(%esp)
call   2990 <ntfs_mbstoucs@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x204e(%ebx),%eax
mov    %eax,(%esp)
call   2710 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
call   2710 <strlen@plt>
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     81e0 <main+0x56d0>
lea    -0x204e(%ebx),%eax
mov    %ebp,0x8(%esp)
add    %edi,%ebp
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   23c0 <memcpy@plt>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2550 <strcpy@plt>
mov    0x30(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2990 <ntfs_mbstoucs@plt>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   2380 <free@plt>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x5,%edx
jne    81e0 <main+0x56d0>
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   2990 <ntfs_mbstoucs@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x6b8c,%ebx
sub    $0x10,%esp
mov    0x34c(%ebx),%edx
cmpl   $0x1,0x14(%edx)
je     8220 <main+0x5710>
mov    $0x5,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
lea    -0x2058(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2054(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2a20 <strncmp@plt>
test   %eax,%eax
jne    8257 <main+0x5747>
mov    %esi,(%esp)
call   2710 <strlen@plt>
mov    %eax,%edx
mov    $0x1,%eax
cmp    %edx,%edi
jne    8212 <main+0x5702>
lea    -0x2064(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2060(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2a20 <strncmp@plt>
test   %eax,%eax
jne    8290 <main+0x5780>
mov    %esi,(%esp)
call   2710 <strlen@plt>
mov    %eax,%edx
mov    $0x2,%eax
cmp    %edx,%edi
jne    8212 <main+0x5702>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2074(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2070(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2a20 <strncmp@plt>
test   %eax,%eax
je     82f0 <main+0x57e0>
lea    -0x2084(%ebx),%eax
mov    %esi,(%esp)
mov    (%eax),%edi
lea    -0x2080(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   2a20 <strncmp@plt>
test   %eax,%eax
jne    8310 <main+0x5800>
mov    %esi,(%esp)
call   2710 <strlen@plt>
cmp    %eax,%edi
je     8310 <main+0x5800>
mov    $0x4,%eax
jmp    8212 <main+0x5702>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   2710 <strlen@plt>
mov    %eax,%edx
mov    $0x3,%eax
cmp    %edx,%edi
jne    8212 <main+0x5702>
jmp    82b2 <main+0x57a2>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8212 <main+0x5702>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x6a5b,%ebx
sub    $0x5c,%esp
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   28e0 <ntfs_xattr_system_type@plt>
test   %eax,%eax
mov    %eax,%esi
je     8460 <main+0x5950>
lea    -0x1(%eax),%ecx
cmp    $0xa,%ecx
jbe    8498 <main+0x5988>
mov    0x74(%esp),%eax
lea    0x30(%esp),%ebp
movl   $0x1,0x8(%esp)
mov    %ebp,%edx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    0x70(%esp),%eax
call   41a0 <main+0x1690>
test   %eax,%eax
mov    %eax,%edi
je     85f0 <main+0x5ae0>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   2390 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
jne    8598 <main+0x5a88>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
cmp    $0x7,%esi
je     85e0 <main+0x5ad0>
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     83e0 <main+0x58d0>
test   %eax,%eax
je     85d0 <main+0x5ac0>
xchg   %ax,%ax
test   %eax,%eax
js     85c8 <main+0x5ab8>
mov    0x34c(%ebx),%eax
mov    0x74(%esp),%edx
mov    0x70(%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   2950 <fuse_lowlevel_notify_inval_inode@plt>
test   %eax,%eax
je     8588 <main+0x5a78>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
test   %eax,%eax
js     85c8 <main+0x5ab8>
mov    0x70(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x34c(%ebx),%eax
mov    0x14(%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
jbe    84c0 <main+0x59b0>
movl   $0xffffffa1,0x2c(%esp)
mov    $0x5f,%eax
mov    %eax,0x4(%esp)
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0x1,%eax
shl    %cl,%eax
test   $0x78f,%eax
je     8370 <main+0x5860>
movl   $0xffffffff,0x2c(%esp)
mov    $0x1,%eax
jmp    847e <main+0x596e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%eax
call   81f0 <main+0x56e0>
test   %eax,%eax
mov    %eax,%esi
je     8471 <main+0x5961>
mov    0x70(%esp),%eax
lea    0x30(%esp),%ebp
mov    %ebp,%edx
call   4090 <main+0x1580>
lea    -0x3(%esi),%eax
cmp    $0x1,%eax
jbe    8668 <main+0x5b58>
xor    %ecx,%ecx
mov    $0x5,%edx
cmpl   $0x1,0x74(%esp)
je     84fe <main+0x59ee>
mov    0x74(%esp),%edx
xor    %ecx,%ecx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ecx
je     8429 <main+0x5919>
cmp    $0x2,%esi
je     8612 <main+0x5b02>
jl     8686 <main+0x5b76>
cmp    $0x4,%esi
jg     8686 <main+0x5b76>
mov    0x40(%esp),%eax
test   %eax,%eax
xchg   %ax,%ax
je     862e <main+0x5b1e>
movl   $0xffffffff,0x2c(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x1c(%esp),%ecx
mov    %ecx,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     8436 <main+0x5926>
test   %eax,%eax
jne    8436 <main+0x5926>
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
nop
mov    0x2c(%esp),%eax
jmp    8436 <main+0x5926>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmp    $0x7,%esi
je     8608 <main+0x5af8>
mov    %eax,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   23a0 <ntfs_xattr_system_removexattr@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     83bd <main+0x58ad>
jmp    83b0 <main+0x58a0>
lea    0x0(%esi,%eiz,1),%esi
neg    %eax
jmp    847e <main+0x596e>
nop
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
jmp    83e0 <main+0x58d0>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    83e0 <main+0x58d0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   2910 <ntfs_dir_parent_inode@plt>
jmp    859f <main+0x5a8f>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   2390 <ntfs_allowed_as_owner@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     86c4 <main+0x5bb4>
lea    0x28(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x78(%esp),%eax
mov    %ecx,0x1c(%esp)
call   80f0 <main+0x55e0>
mov    0x1c(%esp),%ecx
cmp    $0xffffffff,%eax
jne    86d1 <main+0x5bc1>
call   27e0 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    854e <main+0x5a3e>
nop
mov    0x40(%esp),%edx
test   %edx,%edx
je     84ea <main+0x59da>
movl   $0xfffffff3,0x2c(%esp)
mov    $0xd,%eax
jmp    847e <main+0x596e>
testl  $0x404,0x14(%ecx)
jne    8546 <main+0x5a36>
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
jne    862e <main+0x5b1e>
mov    %ecx,0x4(%esp)
movl   $0x80,0x8(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
call   2740 <ntfs_allowed_access@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    862e <main+0x5b1e>
movl   $0xfffffff3,0x2c(%esp)
jmp    854e <main+0x5a3e>
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
movl   $0x80,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x8(%esp)
call   2ae0 <ntfs_attr_remove@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     870f <main+0x5bff>
call   27e0 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%edx
cmp    $0x2,%edx
je     8729 <main+0x5c19>
neg    %edx
mov    %edx,0x2c(%esp)
mov    0x14(%ecx),%eax
test   $0x20,%al
jne    854e <main+0x5a3e>
or     $0x20,%eax
mov    %eax,0x14(%ecx)
orl    $0x8,0x10(%ecx)
jmp    854e <main+0x5a3e>
movl   $0x3d,(%eax)
mov    $0xffffffc3,%edx
jmp    870b <main+0x5bfb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x663b,%ebx
sub    $0x6c,%esp
mov    0x88(%esp),%edi
mov    0x8c(%esp),%esi
movl   $0x0,0x38(%esp)
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   28e0 <ntfs_xattr_system_type@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8860 <main+0x5d50>
xor    %edi,%edi
test   %esi,%esi
jne    8988 <main+0x5e78>
mov    0x84(%esp),%eax
lea    0x40(%esp),%edx
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   41a0 <main+0x1690>
test   %eax,%eax
mov    %eax,%edx
je     8a48 <main+0x5f38>
mov    0x40(%esp),%eax
testb  $0x1,0x90(%eax)
je     89e8 <main+0x5ed8>
cmp    $0x7,%ebp
je     8b50 <main+0x6040>
mov    0x20(%esp),%eax
mov    %edx,0x8(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   2850 <ntfs_xattr_system_getxattr@plt>
mov    0x2c(%esp),%edx
mov    %eax,0x3c(%esp)
mov    %edx,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x3c(%esp),%eax
je     8826 <main+0x5d16>
test   %eax,%eax
je     8a30 <main+0x5f20>
test   %eax,%eax
js     89a6 <main+0x5e96>
test   %esi,%esi
je     89b0 <main+0x5ea0>
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2560 <fuse_reply_buf@plt>
mov    %edi,(%esp)
call   2380 <free@plt>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x34c(%ebx),%eax
mov    0x14(%eax),%ecx
test   %ecx,%ecx
jne    88a0 <main+0x5d90>
movl   $0xffffffa1,0x3c(%esp)
mov    $0x5f,%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
mov    %edi,(%esp)
call   2380 <free@plt>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,%eax
call   81f0 <main+0x56e0>
test   %eax,%eax
mov    %eax,%ebp
je     886d <main+0x5d5d>
mov    0x80(%esp),%eax
lea    0x40(%esp),%edx
mov    %edx,0x20(%esp)
call   4090 <main+0x1580>
cmp    $0x4,%ebp
je     8a60 <main+0x5f50>
xor    %ecx,%ecx
mov    $0x5,%edx
cmpl   $0x1,0x84(%esp)
je     88e4 <main+0x5dd4>
mov    0x84(%esp),%edx
xor    %ecx,%ecx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     8bcc <main+0x60bc>
mov    0x2c(%esp),%eax
testl  $0x404,0x14(%eax)
jne    89d8 <main+0x5ec8>
mov    0x40(%esp),%eax
testb  $0x1,0x90(%eax)
jne    8a80 <main+0x5f70>
mov    0x2c(%esp),%eax
movl   $0x100,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    8a80 <main+0x5f70>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
xor    %edi,%edi
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x3c(%esp),%eax
jne    881e <main+0x5d0e>
jmp    8826 <main+0x5d16>
xchg   %ax,%ax
mov    %esi,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
jne    8790 <main+0x5c80>
mov    0x3c(%esp),%eax
test   %eax,%eax
jns    8836 <main+0x5d26>
neg    %eax
jmp    887c <main+0x5d6c>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   2970 <fuse_reply_xattr@plt>
mov    %edi,(%esp)
call   2380 <free@plt>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffc3,0x3c(%esp)
jmp    895b <main+0x5e4b>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
movl   $0x100,0x8(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   2740 <ntfs_allowed_access@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
jne    87d5 <main+0x5cc5>
mov    %edx,0x20(%esp)
call   27e0 <__errno_location@plt>
mov    0x20(%esp),%edx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    880e <main+0x5cfe>
lea    0x0(%esi),%esi
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x3c(%esp),%eax
jmp    8826 <main+0x5d16>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    8826 <main+0x5d16>
lea    0x0(%esi),%esi
mov    0x50(%esp),%edx
test   %edx,%edx
je     88ca <main+0x5dba>
movl   $0xffffffc3,0x3c(%esp)
mov    $0x3d,%eax
jmp    887a <main+0x5d6a>
xchg   %ax,%ax
lea    0x38(%esp),%eax
mov    %ebp,%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   80f0 <main+0x55e0>
cmp    $0xffffffff,%eax
je     894e <main+0x5e3e>
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     89d8 <main+0x5ec8>
mov    0x24(%eax),%eax
mov    0x28(%ebp),%edx
mov    %eax,0x20(%esp)
mov    0x34c(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0x68(%eax),%eax
test   %eax,%eax
je     8b26 <main+0x6016>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
mov    %edx,%ecx
or     %eax,%ecx
je     8b26 <main+0x6016>
testb  $0x40,0xd(%ebp)
je     8b26 <main+0x6016>
testb  $0x2,0x18(%ebp)
je     8b26 <main+0x6016>
add    $0x1ff,%eax
mov    %eax,0x20(%esp)
mov    0x20(%esp),%ecx
adc    $0x0,%edx
mov    %edx,0x24(%esp)
mov    0x24(%esp),%edx
and    $0xfffffe00,%ecx
mov    %ecx,%eax
add    $0x2,%eax
adc    $0x0,%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
test   %esi,%esi
je     8be0 <main+0x60d0>
cmp    0x20(%esp),%esi
jae    8bef <main+0x60df>
movl   $0xffffffde,0x3c(%esp)
xor    %edi,%edi
mov    %ebp,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    895d <main+0x5e4d>
nop
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   2910 <ntfs_dir_parent_inode@plt>
mov    0x2c(%esp),%edx
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x7,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebp
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2850 <ntfs_xattr_system_getxattr@plt>
test   %ebp,%ebp
mov    0x2c(%esp),%edx
mov    %eax,0x3c(%esp)
je     880e <main+0x5cfe>
mov    %ebp,(%esp)
mov    %edx,0x20(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     880e <main+0x5cfe>
mov    0x3c(%esp),%ebp
test   %ebp,%ebp
jne    880e <main+0x5cfe>
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x20(%esp),%edx
jmp    880e <main+0x5cfe>
call   27e0 <__errno_location@plt>
xor    %edi,%edi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    8826 <main+0x5d16>
mov    0x20(%esp),%eax
xor    %edi,%edi
mov    %eax,0x3c(%esp)
jmp    8b42 <main+0x6032>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2370 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8c3a <main+0x612a>
mov    %eax,0x14(%esp)
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %ebp,(%esp)
call   2780 <ntfs_attr_pread@plt>
cltd
mov    %eax,%ecx
cmp    0x24(%esp),%edx
mov    %eax,0x3c(%esp)
je     8c4c <main+0x613c>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
jmp    8b42 <main+0x6032>
cmp    0x20(%esp),%ecx
jne    8c3a <main+0x612a>
jmp    8b42 <main+0x6032>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x611b,%ebx
sub    $0x5c,%esp
movl   $0x0,0x28(%esp)
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   28e0 <ntfs_xattr_system_type@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    8cd8 <main+0x61c8>
mov    0x34c(%ebx),%eax
mov    0x14(%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
jbe    8e18 <main+0x6308>
movl   $0xffffffa1,0x2c(%esp)
mov    $0x5f,%eax
mov    %eax,0x4(%esp)
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
lea    0x30(%esp),%edi
movl   $0x1,0x8(%esp)
mov    %edi,%edx
mov    %eax,(%esp)
mov    0x70(%esp),%eax
call   41a0 <main+0x1690>
test   %eax,%eax
mov    %eax,%esi
je     8f18 <main+0x6408>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2390 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
jne    8dc0 <main+0x62b0>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
cmp    $0x7,%ebp
je     8f00 <main+0x63f0>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     8d46 <main+0x6236>
test   %eax,%eax
je     8ef0 <main+0x63e0>
test   %eax,%eax
js     8e10 <main+0x6300>
mov    0x34c(%ebx),%eax
mov    0x74(%esp),%ecx
mov    0x70(%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   2950 <fuse_lowlevel_notify_inval_inode@plt>
test   %eax,%eax
je     8ee0 <main+0x63d0>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
test   %eax,%eax
js     8e10 <main+0x6300>
mov    0x70(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmp    $0x7,%ebp
je     8fb0 <main+0x64a0>
mov    0x84(%esp),%ecx
mov    0x80(%esp),%edx
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    0x7c(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x10(%esp)
call   2660 <ntfs_xattr_system_setxattr@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     8d25 <main+0x6215>
jmp    8d18 <main+0x6208>
xchg   %ax,%ax
neg    %eax
jmp    8cba <main+0x61aa>
nop
mov    0x78(%esp),%eax
lea    0x0(%esi,%eiz,1),%esi
call   81f0 <main+0x56e0>
test   %eax,%eax
mov    %eax,%ebp
je     8cad <main+0x619d>
mov    0x70(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,%edx
call   4090 <main+0x1580>
lea    -0x3(%ebp),%eax
cmp    $0x1,%eax
jbe    8f30 <main+0x6420>
xor    %ecx,%ecx
mov    $0x5,%edx
cmpl   $0x1,0x74(%esp)
je     8e5e <main+0x634e>
mov    0x74(%esp),%edx
xor    %ecx,%ecx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     8d8f <main+0x627f>
cmp    $0x2,%ebp
je     8f50 <main+0x6440>
jl     8fc0 <main+0x64b0>
cmp    $0x4,%ebp
jg     8fc0 <main+0x64b0>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
xchg   %ax,%ax
je     8f64 <main+0x6454>
movl   $0xffffffff,0x2c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
je     8d9c <main+0x628c>
test   %eax,%eax
jne    8d9c <main+0x628c>
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
nop
mov    0x2c(%esp),%eax
jmp    8d9c <main+0x628c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
call   4a70 <main+0x1f60>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
jns    8d4e <main+0x623e>
jmp    8e10 <main+0x6300>
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    8d46 <main+0x6236>
lea    0x0(%esi),%esi
mov    0x40(%esp),%esi
test   %esi,%esi
je     8e4a <main+0x633a>
movl   $0xffffffff,0x2c(%esp)
mov    $0x1,%eax
jmp    8cba <main+0x61aa>
xchg   %ax,%ax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2390 <ntfs_allowed_as_owner@plt>
test   %eax,%eax
je     8ff6 <main+0x64e6>
lea    0x28(%esp),%eax
mov    %ebp,%edx
mov    %eax,(%esp)
mov    0x78(%esp),%eax
call   80f0 <main+0x55e0>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8f9e <main+0x648e>
mov    0x34c(%ebx),%eax
mov    0x34(%eax),%edx
test   %edx,%edx
je     9008 <main+0x64f8>
mov    0x28(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   24a0 <ntfs_forbidden_chars@plt>
test   %eax,%eax
je     9008 <main+0x64f8>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    8eae <main+0x639e>
mov    %esi,(%esp)
call   2910 <ntfs_dir_parent_inode@plt>
jmp    8dcb <main+0x62bb>
lea    0x0(%esi),%esi
testl  $0x404,0x14(%esi)
jne    8ea6 <main+0x6396>
mov    0x30(%esp),%eax
testb  $0x1,0x90(%eax)
jne    8f64 <main+0x6454>
movl   $0x80,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2740 <ntfs_allowed_access@plt>
test   %eax,%eax
jne    8f64 <main+0x6454>
movl   $0xfffffff3,0x2c(%esp)
jmp    8eae <main+0x639e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ecx
je     9049 <main+0x6539>
cmpl   $0x1,0x84(%esp)
jne    9049 <main+0x6539>
movl   $0xffffffef,0x2c(%esp)
mov    %ecx,(%esp)
call   2650 <ntfs_attr_close@plt>
jmp    8eae <main+0x639e>
test   %ecx,%ecx
je     916b <main+0x665b>
mov    %ecx,(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ecx,0x1c(%esp)
call   2470 <ntfs_attr_truncate@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     9104 <main+0x65f4>
call   27e0 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    903c <main+0x652c>
mov    %edi,%eax
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
call   2250 <ntfs_attr_add@plt>
test   %eax,%eax
jne    8f9e <main+0x648e>
mov    0x14(%esi),%eax
test   $0x20,%al
jne    90de <main+0x65ce>
orl    $0x8,0x10(%esi)
or     $0x20,%eax
mov    %eax,0x14(%esi)
mov    0x28(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ecx
je     8f9e <main+0x648e>
mov    0x80(%esp),%eax
movl   $0x0,0x2c(%esp)
test   %eax,%eax
jne    91ad <main+0x669d>
mov    %ecx,(%esp)
mov    %ecx,0x1c(%esp)
call   2810 <ntfs_attr_pclose@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    9196 <main+0x6686>
mov    0x34c(%ebx),%eax
cmpl   $0x0,0x68(%eax)
je     9145 <main+0x6635>
testb  $0x40,0x15(%esi)
jne    91f8 <main+0x66e8>
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    903c <main+0x652c>
mov    0x14(%esi),%eax
test   $0x20,%al
jne    903c <main+0x652c>
or     $0x20,%eax
mov    %eax,0x14(%esi)
orl    $0x8,0x10(%esi)
jmp    903c <main+0x652c>
cmpl   $0x2,0x84(%esp)
jne    908c <main+0x657c>
movl   $0xffffffc3,0x2c(%esp)
jmp    8eae <main+0x639e>
cmp    $0x0,%eax
ja     91eb <main+0x66db>
cmp    0x80(%esp),%edi
mov    %ebp,%ecx
je     911b <main+0x660b>
mov    %ecx,0x1c(%esp)
call   27e0 <__errno_location@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
neg    %eax
mov    %eax,0x2c(%esp)
jmp    9149 <main+0x6639>
xor    %edi,%edi
mov    %ecx,%ebp
mov    0x7c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,0x8(%esp)
add    %edi,%eax
mov    %eax,0x14(%esp)
mov    0x80(%esp),%eax
mov    %ebp,(%esp)
sub    %edi,%eax
mov    %eax,0xc(%esp)
call   22e0 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jl     918b <main+0x667b>
jle    9186 <main+0x6676>
add    %eax,%edi
cmp    %edi,0x80(%esp)
ja     91b1 <main+0x66a1>
jmp    918b <main+0x667b>
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   2570 <ntfs_efs_fixup_attribute@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    9196 <main+0x6686>
jmp    9145 <main+0x6635>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x5b5e,%ebx
sub    $0x18,%esp
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   28f0 <ntfs_device_sync@plt>
test   %eax,%eax
jne    9260 <main+0x6750>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    (%eax),%eax
call   3d50 <main+0x1240>
add    $0x5af4,%ebx
mov    0x94(%esp),%ebp
testb  $0x1,0x90(%eax)
je     92b8 <main+0x67a8>
mov    $0x1,%edx
add    $0x7c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edx,0x4(%esp)
movl   $0x2c0,0x8(%esp)
mov    %edi,(%esp)
call   2740 <ntfs_allowed_access@plt>
cmp    $0x2,%eax
mov    %eax,%edx
jne    92ab <main+0x679b>
test   %ebp,%ebp
mov    %ebp,%esi
je     9318 <main+0x6808>
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2880 <ntfs_get_owner_mode@plt>
xor    %edx,%edx
test   %eax,%eax
js     92ff <main+0x67ef>
mov    0x10(%edi),%eax
xor    %edx,%edx
cmp    %eax,0x28(%esp)
sete   %dl
test   %ebp,%ebp
jne    92ab <main+0x679b>
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0xc(%esp),%edx
jmp    92ab <main+0x679b>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
mov    $0x5,%edx
cmpl   $0x1,0x90(%esp)
je     9332 <main+0x6822>
mov    0x90(%esp),%edx
xor    %ecx,%ecx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
jne    92d9 <main+0x67c9>
xor    %edx,%edx
jmp    92ab <main+0x679b>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
sub    $0x9c,%esp
call   3d50 <main+0x1240>
add    $0x5a11,%ebx
mov    0xb0(%esp),%esi
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
cmp    $0x1,%ebp
mov    $0x5,%eax
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
je     93b1 <main+0x68a1>
mov    %ebp,%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     94b0 <main+0x69a0>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   2990 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
js     94b0 <main+0x69a0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2580 <ntfs_inode_lookup_by_mbsname@plt>
mov    %eax,%ecx
and    %edx,%eax
cmp    $0xffffffff,%eax
je     94b0 <main+0x69a0>
and    $0xffff,%edx
mov    %edx,0x24(%esp)
je     9538 <main+0x6a28>
mov    0x34c(%ebx),%eax
mov    0xa8(%eax),%esi
test   %esi,%esi
jne    9436 <main+0x6926>
jmp    9447 <main+0x6937>
lea    0x0(%esi),%esi
mov    (%esi),%esi
test   %esi,%esi
je     9447 <main+0x6937>
cmp    0x10(%esi),%ecx
jne    9430 <main+0x6920>
mov    0x18(%esi),%edx
test   $0x1,%dl
je     959b <main+0x6a8b>
mov    (%eax),%eax
mov    0x24(%esp),%edx
mov    %ecx,0x4(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   2a10 <ntfs_inode_open@plt>
mov    0x28(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     9620 <main+0x6b10>
mov    0x1c(%esp),%eax
lea    0x44(%esp),%ebp
mov    %ebp,%edx
mov    %ecx,0x24(%esp)
call   4090 <main+0x1580>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     9550 <main+0x6a40>
mov    %esi,0x4(%esp)
mov    %edi,%edx
mov    %ebp,%eax
mov    %ecx,(%esp)
call   9280 <main+0x6770>
test   %eax,%eax
jne    9550 <main+0x6a40>
movl   $0xfffffff3,0x40(%esp)
jmp    94bf <main+0x69af>
call   27e0 <__errno_location@plt>
xor    %esi,%esi
mov    (%eax),%eax
neg    %eax
mov    %eax,0x40(%esp)
mov    %esi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
jne    9510 <main+0x6a00>
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     94df <main+0x69cf>
mov    0x40(%esp),%eax
test   %eax,%eax
je     9528 <main+0x6a18>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x40(%esp),%eax
mov    0x8c(%esp),%edx
xor    %gs:0x14,%edx
jne    96b8 <main+0x6ba8>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%edx
test   %edx,%edx
jne    94cb <main+0x69bb>
lea    0x40(%esp),%eax
call   4a70 <main+0x1f60>
jmp    94cb <main+0x69bb>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
call   4a70 <main+0x1f60>
jmp    94df <main+0x69cf>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%ecx
ja     9418 <main+0x6908>
movl   $0xffffffff,0x40(%esp)
xor    %esi,%esi
jmp    94bf <main+0x69af>
movzbl 0x20(%esp),%edx
mov    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x14(%esp)
mov    0x3c(%esp),%edx
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   28c0 <ntfs_delete@plt>
test   %eax,%eax
je     9592 <main+0x6a82>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x40(%esp)
xor    %esi,%esi
xor    %edi,%edi
jmp    94bf <main+0x69af>
or     $0x1,%edx
mov    %edx,0x18(%esi)
mov    0xac(%eax),%edx
mov    %ecx,0x28(%esp)
mov    0xb0(%eax),%ecx
mov    %ebp,0x14(%esi)
add    $0x1,%edx
adc    $0x0,%ecx
mov    %ecx,0xb0(%eax)
mov    %edx,0xac(%eax)
lea    -0x2705(%ebx),%eax
mov    %ecx,0xc(%esi)
mov    %edx,0x8(%esi)
mov    %eax,0xc(%esp)
lea    0x64(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x28,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   2af0 <__sprintf_chk@plt>
mov    %edi,(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x28(%esp),%ecx
test   %eax,%eax
je     9632 <main+0x6b22>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x40(%esp)
jmp    94df <main+0x69cf>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x40(%esp)
jmp    94bf <main+0x69af>
mov    0x2c(%esp),%edi
mov    %ebp,%edx
mov    0x1c(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %edi,(%esp)
call   9360 <main+0x6850>
mov    0x10(%esi),%edx
mov    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   5320 <main+0x2810>
test   %eax,%eax
mov    %eax,0x40(%esp)
jne    94df <main+0x69cf>
xor    %edi,%edi
cmp    $0x1,%ebp
mov    0x28(%esp),%ecx
mov    $0x5,%esi
je     9683 <main+0x6b73>
mov    %ebp,%esi
xor    %edi,%edi
mov    0x34c(%ebx),%eax
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     94b0 <main+0x69a0>
mov    0x34c(%ebx),%eax
mov    0x28(%esp),%ecx
jmp    9447 <main+0x6937>
call   b880 <main+0x8d70>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   3d50 <main+0x1240>
add    $0x56ba,%ebx
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   9360 <main+0x6850>
test   %eax,%eax
jne    9700 <main+0x6bf0>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   3d50 <main+0x1240>
add    $0x565a,%ebx
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   9360 <main+0x6850>
test   %eax,%eax
jne    9760 <main+0x6c50>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
neg    %eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x78(%esp),%eax
call   3d50 <main+0x1240>
add    $0x55e8,%ebx
mov    0x70(%esp),%esi
mov    0x10(%eax),%edi
test   %edi,%edi
je     99c8 <main+0x6eb8>
mov    0x18(%edi),%eax
test   $0xe,%al
jne    9820 <main+0x6d10>
test   $0x1,%al
movl   $0x0,0x20(%esp)
jne    98d3 <main+0x6dc3>
mov    (%edi),%eax
test   %eax,%eax
je     97d4 <main+0x6cc4>
mov    0x4(%edi),%edx
mov    %edx,0x4(%eax)
mov    0x4(%edi),%edx
test   %edx,%edx
je     99d8 <main+0x6ec8>
mov    %eax,(%edx)
mov    %edi,(%esp)
call   2380 <free@plt>
mov    0x20(%esp),%eax
test   %eax,%eax
jne    9920 <main+0x6e10>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   25b0 <fuse_reply_err@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    99e9 <main+0x6ed9>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0x74(%esp)
je     9834 <main+0x6d24>
mov    0x74(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     99b0 <main+0x6ea0>
mov    0x244(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   27b0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%ecx
je     99b0 <main+0x6ea0>
mov    0x18(%edi),%edx
movl   $0x0,0x20(%esp)
test   $0x8,%dl
jne    9980 <main+0x6e70>
test   $0x2,%dl
jne    9960 <main+0x6e50>
and    $0x4,%edx
jne    9938 <main+0x6e28>
mov    %ecx,(%esp)
call   2650 <ntfs_attr_close@plt>
mov    %ebp,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     98c8 <main+0x6db8>
mov    0x20(%esp),%eax
test   %eax,%eax
je     99a0 <main+0x6e90>
mov    0x18(%edi),%eax
test   $0x1,%al
je     97c8 <main+0x6cb8>
mov    0x8(%edi),%eax
lea    0x24(%esp),%ebp
mov    0xc(%edi),%edx
movl   $0x28,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
lea    -0x2705(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    %ebp,(%esp)
call   2af0 <__sprintf_chk@plt>
mov    0x14(%edi),%edx
mov    %esi,%eax
mov    %ebp,(%esp)
call   9360 <main+0x6850>
jmp    97c8 <main+0x6cb8>
lea    0x0(%esi,%eiz,1),%esi
neg    %eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   25b0 <fuse_reply_err@plt>
jmp    9805 <main+0x6cf5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   2570 <ntfs_efs_fixup_attribute@plt>
mov    0x1c(%esp),%ecx
mov    %eax,0x20(%esp)
jmp    98a8 <main+0x6d98>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
mov    %ecx,0x1c(%esp)
call   2810 <ntfs_attr_pclose@plt>
mov    0x18(%edi),%edx
mov    0x1c(%esp),%ecx
mov    %eax,0x20(%esp)
jmp    989f <main+0x6d8f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x6,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   25e0 <ntfs_inode_update_times@plt>
mov    0x18(%edi),%edx
mov    0x1c(%esp),%ecx
jmp    9896 <main+0x6d86>
lea    0x20(%esp),%eax
call   4a70 <main+0x1f60>
jmp    98c8 <main+0x6db8>
xchg   %ax,%ax
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x20(%esp)
jmp    98b0 <main+0x6da0>
lea    0x0(%esi),%esi
movl   $0x0,0x20(%esp)
jmp    97f5 <main+0x6ce5>
lea    0x0(%esi),%esi
mov    0x34c(%ebx),%edx
mov    %eax,0xa8(%edx)
jmp    97e1 <main+0x6cd1>
call   b880 <main+0x8d70>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x538b,%ebx
sub    $0x6c,%esp
mov    0x88(%esp),%edx
mov    0x84(%esp),%eax
call   3f60 <main+0x1450>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     9ab8 <main+0x6fa8>
mov    0x90(%esp),%edx
mov    0x8c(%esp),%eax
call   3f60 <main+0x1450>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     9ae8 <main+0x6fd8>
mov    0x34c(%ebx),%edx
cmp    $0x1,%edi
mov    $0x5,%eax
cmovne %edi,%eax
mov    (%edx),%edx
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     9ab8 <main+0x6fa8>
mov    %eax,(%esp)
call   2b00 <ntfs_check_empty_dir@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
js     9c60 <main+0x7150>
mov    %ebp,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     9b70 <main+0x7060>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     9c80 <main+0x7170>
neg    %eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
mov    %eax,0x3c(%esp)
test   %eax,%eax
jne    9a9b <main+0x6f8b>
mov    0x80(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   25b0 <fuse_reply_err@plt>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x90(%esp),%eax
mov    %esi,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   5320 <main+0x2810>
test   %eax,%eax
mov    %eax,0x3c(%esp)
jne    9a9b <main+0x6f8b>
mov    0x88(%esp),%eax
mov    0x84(%esp),%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   9360 <main+0x6850>
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     9ac9 <main+0x6fb9>
mov    0x90(%esp),%eax
mov    0x8c(%esp),%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   9360 <main+0x6850>
mov    0x3c(%esp),%eax
jmp    9ac5 <main+0x6fb5>
lea    0x0(%esi),%esi
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   2710 <strlen@plt>
lea    0x14(%eax),%edx
mov    %eax,%ebp
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   2370 <ntfs_malloc@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,0x28(%esp)
je     9d28 <main+0x7218>
mov    0x348(%ebx),%eax
add    $0x13,%ebp
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x348(%ebx)
mov    %eax,0x1c(%esp)
lea    -0x343e(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x3434(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2260 <__snprintf_chk@plt>
cmp    %ebp,%eax
je     9c98 <main+0x7188>
mov    %eax,0x18(%esp)
lea    -0x342a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27a4(%ebx),%eax
mov    %ebp,0x1c(%esp)
mov    $0xffffffb5,%ebp
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x9e9,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    %ebp,%eax
mov    %eax,0x3c(%esp)
jmp    9ac5 <main+0x6fb5>
nop
lea    0x0(%esi,%eiz,1),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %ebp,(%esp)
neg    %eax
mov    %eax,0x3c(%esp)
call   2870 <ntfs_inode_close@plt>
mov    0x3c(%esp),%eax
jmp    9ac5 <main+0x6fb5>
xchg   %ax,%ax
lea    0x3c(%esp),%eax
call   4a70 <main+0x1f60>
mov    0x3c(%esp),%eax
jmp    9ac5 <main+0x6fb5>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x5,%eax
cmpl   $0x1,0x8c(%esp)
je     9cb2 <main+0x71a2>
mov    0x8c(%esp),%eax
xor    %edx,%edx
mov    0x34c(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   2a10 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ebp
je     9d16 <main+0x7206>
mov    0x80(%esp),%eax
lea    0x40(%esp),%ecx
mov    %ecx,%edx
mov    %ecx,0x2c(%esp)
call   4090 <main+0x1580>
mov    0x2c(%esp),%ecx
test   %eax,%eax
je     9d0a <main+0x71fa>
movl   $0x0,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,%eax
mov    %edi,(%esp)
call   9280 <main+0x6770>
test   %eax,%eax
je     9e5b <main+0x734b>
mov    %ebp,(%esp)
call   2870 <ntfs_inode_close@plt>
test   %eax,%eax
je     9d36 <main+0x7226>
call   27e0 <__errno_location@plt>
mov    (%eax),%ebp
neg    %ebp
nop
jmp    9c44 <main+0x7134>
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    9c52 <main+0x7142>
mov    0x28(%esp),%eax
mov    %edi,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   5320 <main+0x2810>
test   %eax,%eax
mov    %eax,%ebp
jne    9c44 <main+0x7134>
mov    0x90(%esp),%eax
mov    0x8c(%esp),%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   9360 <main+0x6850>
test   %eax,%eax
mov    %eax,%ebp
jne    9de7 <main+0x72d7>
mov    0x90(%esp),%eax
mov    %esi,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   5320 <main+0x2810>
test   %eax,%eax
mov    %eax,%ebp
jne    9e8e <main+0x737e>
mov    0x88(%esp),%eax
mov    0x84(%esp),%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   9360 <main+0x6850>
test   %eax,%eax
mov    %eax,%ebp
jne    9e6d <main+0x735d>
mov    0x28(%esp),%eax
mov    0x8c(%esp),%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   9360 <main+0x6850>
test   %eax,%eax
jns    9c44 <main+0x7134>
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x9ce,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x2f20(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x34b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27bc(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    9c44 <main+0x7134>
mov    %ebp,(%esp)
mov    $0xfffffff3,%ebp
call   2870 <ntfs_inode_close@plt>
jmp    9c44 <main+0x7134>
mov    0x90(%esp),%eax
mov    0x8c(%esp),%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   9360 <main+0x6850>
test   %eax,%eax
jne    9ec1 <main+0x73b1>
mov    0x90(%esp),%eax
mov    %edi,%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   5320 <main+0x2810>
test   %eax,%eax
je     9de7 <main+0x72d7>
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x9c3,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x2f58(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    9e3e <main+0x732e>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   3d50 <main+0x1240>
add    $0x4e74,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     a001 <main+0x74f1>
test   %edi,%edi
je     9fa0 <main+0x7490>
mov    %edi,(%esp)
call   2710 <strlen@plt>
mov    (%esi),%ebp
test   %ebp,%ebp
mov    %eax,%edx
je     9f98 <main+0x7488>
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   2710 <strlen@plt>
mov    0x1c(%esp),%edx
cmp    $0x2000,%eax
mov    %eax,%ecx
ja     9fb0 <main+0x74a0>
cmp    $0x2000,%edx
ja     9fb0 <main+0x74a0>
lea    0x1(%ecx,%edx,1),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
call   25f0 <realloc@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     a008 <main+0x74f8>
lea    (%eax,%ecx,1),%edx
mov    %eax,(%esi)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   2550 <strcpy@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %ecx,%ecx
jmp    9f4f <main+0x743f>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
movl   $0x4b,(%eax)
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x8f,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x26ee(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20aa(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    9f8a <main+0x747a>
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x95,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x26c2(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    9fe9 <main+0x74d9>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   3d50 <main+0x1240>
add    $0x4d34,%ebx
test   %esi,%esi
je     a1d1 <main+0x76c1>
mov    0x44(%esp),%eax
test   %eax,%eax
je     a170 <main+0x7660>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   2710 <strlen@plt>
mov    (%esi),%ebp
test   %ebp,%ebp
mov    %eax,%edi
je     a130 <main+0x7620>
mov    %ebp,(%esp)
call   2710 <strlen@plt>
cmp    $0x2000,%eax
mov    %eax,0x1c(%esp)
ja     a180 <main+0x7670>
cmp    $0x2000,%edi
ja     a180 <main+0x7670>
mov    0x1c(%esp),%eax
lea    0x1(%eax,%edi,1),%eax
mov    %eax,(%esp)
call   2600 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     a1db <main+0x76cb>
mov    %ebp,0x4(%esp)
lea    -0x26a4(%ebx),%ebp
mov    %eax,(%esp)
call   2550 <strcpy@plt>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   2280 <strstr@plt>
test   %eax,%eax
je     a140 <main+0x7630>
mov    0x44(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   2550 <strcpy@plt>
mov    (%esi),%edx
mov    %ebp,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   2280 <strstr@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     a119 <main+0x7609>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2530 <strcat@plt>
mov    (%esi),%edx
mov    %edx,(%esp)
call   2380 <free@plt>
xor    %eax,%eax
mov    %edi,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x1c(%esp)
jmp    a099 <main+0x7589>
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x44(%esp),%eax
mov    %edi,(%esi)
add    0x1c(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2550 <strcpy@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   27e0 <__errno_location@plt>
movl   $0x4b,(%eax)
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xb5,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x26ee(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20b9(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    a125 <main+0x7615>
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xbb,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2458(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    a1b9 <main+0x76a9>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x84(%esp),%eax
call   3d50 <main+0x1240>
add    $0x4b61,%ebx
movl   $0x0,0x58(%esp)
mov    0x4(%eax),%edx
mov    0x80(%esp),%eax
test   %edx,%edx
movl   $0x0,0x78(%eax)
movl   $0x0,0x68(%eax)
movl   $0x1,0x3c(%eax)
lea    -0x343f(%ebx),%eax
cmovne %edx,%eax
mov    %eax,(%esp)
call   27d0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x38(%esp)
je     acea <main+0x81da>
lea    -0x267f(%ebx),%eax
movl   $0x0,0x44(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x34(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%esi)
je     a427 <main+0x7917>
movl   $0x2c,0x4(%esp)
mov    %esi,(%esp)
call   26e0 <strchr@plt>
test   %eax,%eax
je     a628 <main+0x7b18>
lea    0x1(%eax),%ecx
mov    %ecx,0x30(%esp)
movb   $0x0,(%eax)
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   26e0 <strchr@plt>
test   %eax,%eax
je     a618 <main+0x7b08>
lea    0x1(%eax),%edi
mov    %edi,0x2c(%esp)
movb   $0x0,(%eax)
lea    -0x3350(%ebx),%eax
lea    -0x344(%ebx),%ebp
jmp    a316 <main+0x7806>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0xc,%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     a4b8 <main+0x79a8>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   22a0 <strcmp@plt>
test   %eax,%eax
jne    a308 <main+0x77f8>
mov    0x8(%ebp),%eax
test   $0x1,%al
mov    %eax,0x28(%esp)
jne    a520 <main+0x7a10>
testb  $0x4,0x28(%esp)
je     a375 <main+0x7865>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     a537 <main+0x7a27>
lea    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x2689(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   2900 <sscanf@plt>
test   %eax,%eax
je     a537 <main+0x7a27>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
testb  $0x8,0x28(%esp)
je     a3c0 <main+0x78b0>
testb  $0x40,0x28(%esp)
je     a5d8 <main+0x7ac8>
mov    0x2c(%esp),%edi
test   %edi,%edi
je     a635 <main+0x7b25>
lea    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x2686(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   2900 <sscanf@plt>
test   %eax,%eax
je     a5e6 <main+0x7ad6>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
testb  $0x2,0x28(%esp)
jne    a568 <main+0x7a58>
cmpl   $0x2c,0x4(%ebp)
ja     aad2 <main+0x7fc2>
mov    0x4(%ebp),%eax
mov    -0x21bc(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    0x5c(%esp),%eax
test   %eax,%eax
jne    aba7 <main+0x8097>
movl   $0x3c,0x5c(%esp)
mov    $0x23c34600,%eax
xor    %edx,%edx
mov    0x80(%esp),%ecx
mov    %eax,0x1c(%ecx)
mov    %edx,0x20(%ecx)
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x10,0x28(%esp)
jne    a5b8 <main+0x7aa8>
mov    0x30(%esp),%esi
test   %esi,%esi
jne    a2a8 <main+0x7798>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     ab84 <main+0x8074>
lea    0x58(%esp),%esi
mov    0x48(%esp),%eax
test   %eax,%eax
jne    a659 <main+0x7b49>
mov    0x40(%esp),%eax
test   %eax,%eax
je     a64d <main+0x7b3d>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
cmp    $0x2,%eax
je     ac6c <main+0x815c>
test   %eax,%eax
je     ab18 <main+0x8008>
cmp    $0x1,%eax
je     abb5 <main+0x80a5>
lea    -0x26a3(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
je     abd4 <main+0x80c4>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
add    $0x6c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
lea    0x58(%esp),%esi
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     a500 <main+0x79f0>
lea    -0x269d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
je     a41b <main+0x790b>
jmp    a490 <main+0x7980>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    ab41 <main+0x8031>
testb  $0x4,0x28(%esp)
je     a375 <main+0x7865>
lea    -0x2414(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x107,0x8(%esp)
jmp    aafb <main+0x7feb>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%edx
test   %edx,%edx
jne    a3cb <main+0x78bb>
lea    -0x23f0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20f5(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xdb,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    a490 <main+0x7980>
nop
mov    0x0(%ebp),%eax
lea    0x58(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
je     a500 <main+0x79f0>
jmp    a490 <main+0x7980>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
xchg   %ax,%ax
jne    a393 <main+0x7883>
lea    -0x23cc(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x112,0x8(%esp)
jmp    aafb <main+0x7feb>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x2c(%esp)
jmp    a2f5 <main+0x77e5>
lea    0x0(%esi),%esi
movl   $0x0,0x30(%esp)
jmp    a2d3 <main+0x77c3>
testb  $0x2,0x28(%esp)
movl   $0x0,0x5c(%esp)
je     a3cb <main+0x78bb>
jmp    a574 <main+0x7a64>
mov    0x4c(%esp),%ebp
test   %ebp,%ebp
je     a44f <main+0x793f>
lea    -0x2666(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
cmp    $0x2,%eax
jne    a462 <main+0x7952>
jmp    ac6c <main+0x815c>
mov    0x2c(%esp),%esi
mov    $0x6,%ecx
lea    -0x24c2(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    ac46 <main+0x8136>
mov    0x80(%esp),%eax
movl   $0x1,0x14(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x58(%eax)
movl   $0x1,(%esp)
call   2a30 <ntfs_log_set_levels@plt>
movl   $0x2,(%esp)
call   2a30 <ntfs_log_set_levels@plt>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x5c(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x4c(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
lea    0x58(%esp),%esi
movl   $0x1,0x50(%eax)
lea    -0x2683(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
je     a6db <main+0x7bcb>
jmp    a490 <main+0x7980>
lea    0x0(%esi),%esi
mov    0x80(%esp),%eax
movl   $0x1,0x54(%eax)
jmp    a410 <main+0x7900>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   2790 <ntfs_set_char_encoding@plt>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
jmp    a410 <main+0x7900>
lea    -0x2358(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1b8,0x8(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20cd(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    a490 <main+0x7980>
lea    -0x22f4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20cd(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1bc,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x74(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
orl    $0x8,0x78(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
orl    $0x10,0x78(%eax)
jmp    a410 <main+0x7900>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   27d0 <__strdup@plt>
mov    0x80(%esp),%edx
test   %eax,%eax
mov    %eax,0x7c(%edx)
jne    a6db <main+0x7bcb>
lea    -0x22ac(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1d7,0x8(%esp)
jmp    a78d <main+0x7c7d>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   27d0 <__strdup@plt>
mov    0x80(%esp),%edx
test   %eax,%eax
mov    %eax,0x6c(%edx)
jne    a6db <main+0x7bcb>
lea    -0x227c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1e1,0x8(%esp)
jmp    a78d <main+0x7c7d>
lea    0x0(%esi),%esi
mov    0x80(%esp),%eax
movl   $0x1,0x68(%eax)
jmp    a410 <main+0x7900>
movl   $0x1,0x40(%esp)
jmp    a410 <main+0x7900>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0xc(%edx)
mov    %eax,0x10(%edx)
jmp    a410 <main+0x7900>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0xc(%edx)
jmp    a410 <main+0x7900>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0x10(%edx)
jmp    a410 <main+0x7900>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0x4(%edx)
jmp    a410 <main+0x7900>
mov    0x5c(%esp),%eax
mov    0x80(%esp),%edx
movl   $0x1,0x44(%esp)
mov    %eax,0x8(%edx)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x28(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x2c(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x30(%eax)
jmp    a410 <main+0x7900>
mov    0x88(%esp),%eax
test   %eax,%eax
je     ad37 <main+0x8227>
mov    0x80(%esp),%eax
movl   $0x1,0x38(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x34(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x3c(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x0,0x3c(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x44(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x48(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x0,0x48(%eax)
jmp    a410 <main+0x7900>
mov    0x2c(%esp),%esi
mov    $0x5,%ecx
lea    -0x267d(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    a68b <main+0x7b7b>
mov    0x80(%esp),%eax
movl   $0x0,0x14(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x24(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x18(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x0,0x18(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x2,0x18(%eax)
jmp    a410 <main+0x7900>
mov    0x80(%esp),%eax
movl   $0x1,0x3c(%esp)
movl   $0x0,0x44(%eax)
jmp    a410 <main+0x7900>
movl   $0x1,0x4c(%esp)
jmp    a410 <main+0x7900>
movl   $0x1,0x48(%esp)
jmp    a410 <main+0x7900>
mov    0x0(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1f2,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x23a8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20cd(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    a490 <main+0x7980>
lea    -0x264e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
jmp    a46a <main+0x795a>
lea    -0x2438(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20e0(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xd2,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    a490 <main+0x7980>
lea    -0x209b(%ebx),%eax
lea    0x58(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
jmp    a437 <main+0x7927>
mov    $0x989680,%edx
imul   %edx
xchg   %ax,%ax
jmp    a3fe <main+0x78ee>
lea    -0x2647(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
jmp    a473 <main+0x7963>
mov    0x84(%esp),%eax
mov    0x8(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
mov    0x40(%esp),%edi
test   %edi,%edi
je     ac95 <main+0x8185>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
je     ac11 <main+0x8101>
mov    0x80(%esp),%eax
orl    $0x4,0x78(%eax)
mov    0x44(%esp),%edx
test   %edx,%edx
je     ac24 <main+0x8114>
mov    0x80(%esp),%eax
orl    $0x20,0x78(%eax)
mov    0x80(%esp),%eax
mov    0x24(%eax),%eax
test   %eax,%eax
je     ac3d <main+0x812d>
mov    0x80(%esp),%eax
andl   $0xfffffff7,0x78(%eax)
mov    0x58(%esp),%esi
jmp    a49e <main+0x798e>
mov    0x2c(%esp),%esi
mov    $0xa,%ecx
lea    -0x2678(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    acb1 <main+0x81a1>
mov    0x80(%esp),%eax
movl   $0x2,0x14(%eax)
jmp    a410 <main+0x7900>
lea    -0x2651(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
jne    a490 <main+0x7980>
mov    0x80(%esp),%eax
mov    0x18(%eax),%eax
jmp    a462 <main+0x7952>
mov    0x4c(%esp),%esi
test   %esi,%esi
je     abfe <main+0x80ee>
mov    0x80(%esp),%eax
orl    $0x1,0x78(%eax)
jmp    ac11 <main+0x8101>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    ad65 <main+0x8255>
mov    0x2c(%esp),%esi
mov    $0x8,%ecx
lea    -0x266e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    ad65 <main+0x8255>
mov    0x80(%esp),%eax
movl   $0x3,0x14(%eax)
jmp    a410 <main+0x7900>
lea    0x340(%ebx),%eax
xor    %esi,%esi
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xf5,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x269b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x20cd(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    a4aa <main+0x799a>
mov    0x0(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x161,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x23a8(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    aafb <main+0x7feb>
lea    -0x2388(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1a3,0x8(%esp)
jmp    a78d <main+0x7c7d>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x3feb,%ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%esi
mov    0x26c(%ebx),%eax
lea    -0x3a4(%ebx),%ebp
lea    -0x2617(%ebx),%edi
movl   $0x0,(%eax)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   26c0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     af98 <main+0x8488>
cmp    $0x68,%eax
je     af80 <main+0x8470>
jg     ae78 <main+0x8368>
cmp    $0x1,%eax
je     aef8 <main+0x83e8>
cmp    $0x56,%eax
jne    ae93 <main+0x8383>
call   2590 <fuse_version@plt>
lea    0x340(%ebx),%edx
mov    (%edx),%edx
movl   $0x0,0x10(%esp)
mov    %eax,0x24(%esp)
lea    -0x34d4(%ebx),%eax
mov    %eax,0x20(%esp)
lea    -0x34c6(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x263e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2108(%ebx),%eax
mov    %edx,0x18(%esp)
movl   $0x8,0xc(%esp)
movl   $0x271,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
movl   $0x0,(%esp)
call   2680 <exit@plt>
nop
cmp    $0x6f,%eax
je     af28 <main+0x8418>
cmp    $0x76,%eax
je     adbe <main+0x82ae>
cmp    $0x6e,%eax
je     adbe <main+0x82ae>
mov    0x24c(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%esi,%eax,4),%edx
lea    0x340(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2631(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2108(%ebx),%eax
movl   $0x275,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x50(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     afc0 <main+0x84b0>
mov    0x50(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    b070 <main+0x8560>
mov    0x274(%ebx),%eax
mov    0x50(%esp),%ecx
mov    (%eax),%eax
mov    %eax,(%ecx)
jmp    adbe <main+0x82ae>
mov    0x50(%esp),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     af90 <main+0x8480>
lea    -0x267f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
lea    0x4(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   9f00 <main+0x73f0>
mov    0x2c(%esp),%edx
test   %eax,%eax
jne    af74 <main+0x8464>
mov    0x274(%ebx),%eax
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   9f00 <main+0x73f0>
test   %eax,%eax
je     adbe <main+0x82ae>
mov    $0xffffffff,%eax
jmp    aeee <main+0x83de>
xchg   %ax,%ax
call   *0x54(%esp)
movl   $0x9,(%esp)
call   2680 <exit@plt>
lea    0x4(%eax),%edx
jmp    af58 <main+0x8448>
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     b0eb <main+0x85db>
mov    0x50(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     b0bb <main+0x85ab>
xor    %eax,%eax
jmp    aeee <main+0x83de>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1001,(%esp)
call   2370 <ntfs_malloc@plt>
mov    0x50(%esp),%ecx
test   %eax,%eax
mov    %eax,0x8(%ecx)
je     af74 <main+0x8464>
mov    0x274(%ebx),%ecx
mov    (%ecx),%edx
mov    0x50(%esp),%ecx
mov    %edx,0xc(%ecx)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   25a0 <ntfs_realpath_canonicalize@plt>
test   %eax,%eax
jne    adbe <main+0x82ae>
mov    0x274(%ebx),%eax
mov    (%eax),%edx
lea    0x340(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x224c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2108(%ebx),%eax
movl   $0x24c,0x8(%esp)
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
mov    0x50(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   2380 <free@plt>
mov    0x50(%esp),%eax
movl   $0x0,0x8(%eax)
or     $0xffffffff,%eax
jmp    aeee <main+0x83de>
xchg   %ax,%ax
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x256,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2228(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x26d3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2108(%ebx),%eax
mov    %eax,(%esp)
call   2290 <ntfs_log_redirect@plt>
jmp    af74 <main+0x8464>
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x27f,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x21e0(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    b09e <main+0x858e>
lea    0x340(%ebx),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x27b,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x260f(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    b09e <main+0x858e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x3c5b,%ebx
sub    $0x5c,%esp
mov    0x74(%esp),%ebp
lea    0x4c(%esp),%eax
movl   $0x0,0x30(%esp)
mov    %eax,0x38(%esp)
xchg   %ax,%ax
mov    %ebp,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
call   29d0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    b2d0 <main+0x87c0>
mov    0x4(%ebp),%eax
movl   $0x0,0x4c(%esp)
movzbl 0x9(%eax),%edx
test   %dl,%dl
je     b148 <main+0x8638>
mov    0x38(%esp),%edi
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %edi,0x8(%esp)
movzwl 0xa(%eax),%edx
add    %edx,%eax
mov    %eax,(%esp)
call   2630 <ntfs_ucstombs@plt>
test   %eax,%eax
mov    %eax,%edx
js     b39f <main+0x888f>
mov    0x80(%esp),%eax
test   %eax,%eax
je     b230 <main+0x8720>
mov    0x4c(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   2710 <strlen@plt>
mov    0x3c(%esp),%edx
cmp    $0x9,%eax
jbe    b298 <main+0x8788>
mov    0x34(%esp),%esi
mov    $0x8,%ecx
lea    -0x204e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    b298 <main+0x8788>
mov    0x34(%esp),%esi
xchg   %ax,%ax
mov    %esi,(%esp)
call   2380 <free@plt>
jmp    b148 <main+0x8638>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    0x4c(%esp),%esi
lea    0x1(%eax,%edx,1),%eax
mov    %eax,0x30(%esp)
test   %edx,%edx
je     b220 <main+0x8710>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     b220 <main+0x8710>
mov    0x30(%esp),%eax
cmp    %eax,0x7c(%esp)
jb     b3ba <main+0x88aa>
mov    0x80(%esp),%edi
test   %edi,%edi
jne    b2b0 <main+0x87a0>
mov    0x78(%esp),%eax
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x34(%esp)
mov    %eax,(%esp)
call   27f0 <strncpy@plt>
mov    0x34(%esp),%edx
add    0x78(%esp),%edx
lea    0x1(%edx),%eax
movb   $0x0,(%edx)
mov    %eax,0x78(%esp)
jmp    b220 <main+0x8710>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    0x34(%esp),%esi
lea    0x6(%eax,%edx,1),%eax
mov    %eax,0x30(%esp)
jmp    b240 <main+0x8730>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
mov    $0x2e,%ecx
addl   $0x5,0x78(%esp)
movl   $0x72657375,(%eax)
mov    %cx,0x4(%eax)
jmp    b265 <main+0x8755>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
mov    0xc(%eax),%eax
mov    0xd0(%eax),%esi
test   %esi,%esi
je     b370 <main+0x8860>
mov    0x30(%esp),%edi
mov    0x70(%esp),%ebp
jmp    b303 <main+0x87f3>
nop
mov    0x14(%ebp),%eax
shr    $0xa,%eax
and    $0x1,%eax
test   %eax,%eax
jne    b310 <main+0x8800>
mov    (%esi),%esi
test   %esi,%esi
je     b36c <main+0x885c>
mov    0x4(%esi),%eax
cmp    $0x4,%eax
je     b380 <main+0x8870>
cmp    $0x5,%eax
je     b2f0 <main+0x87e0>
lea    0x8(%esi),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x30(%esp)
call   2710 <strlen@plt>
mov    0x30(%esp),%ecx
mov    %eax,%edx
lea    0x1(%edi,%eax,1),%edi
mov    0x7c(%esp),%eax
test   %eax,%eax
je     b2fd <main+0x87ed>
cmp    %edi,0x7c(%esp)
jb     b3d6 <main+0x88c6>
lea    0x1(%edx),%eax
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x30(%esp)
mov    %eax,(%esp)
call   23c0 <memcpy@plt>
mov    0x78(%esp),%eax
mov    0x30(%esp),%edx
mov    (%esi),%esi
lea    0x1(%eax,%edx,1),%eax
test   %esi,%esi
mov    %eax,0x78(%esp)
jne    b303 <main+0x87f3>
mov    %edi,0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebp),%eax
mov    0xcc(%eax),%edx
test   %edx,%edx
je     b2fd <main+0x87ed>
mov    0x14(%ebp),%eax
shr    $0xe,%eax
and    $0x1,%eax
jmp    b2f9 <main+0x87e9>
call   27e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x30(%esp)
negl   0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   2380 <free@plt>
movl   $0xffffffde,0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffde,0x30(%esp)
mov    0x30(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     b4b8 <main+0x89a8>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     b4d4 <main+0x89c4>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    b450 <main+0x8940>
cmp    %ebp,%esi
jbe    b478 <main+0x8968>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    b458 <main+0x8948>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    b498 <main+0x8988>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     b46a <main+0x895a>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    b487 <main+0x8977>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    b458 <main+0x8948>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    b4e8 <main+0x89d8>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    b4ae <main+0x899e>
cmp    %ebp,%eax
jae    b454 <main+0x8944>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    b458 <main+0x8948>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    b42b <main+0x891b>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    b42b <main+0x891b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     b558 <main+0x8a48>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    b54d <main+0x8a3d>
cmp    0x4(%esp),%ebp
je     b558 <main+0x8a48>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    b458 <main+0x8948>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    b458 <main+0x8948>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    b5c0 <main+0x8ab0>
cmp    %ebp,%ecx
ja     b5f8 <main+0x8ae8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    b5a8 <main+0x8a98>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     b5e8 <main+0x8ad8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    b608 <main+0x8af8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    b678 <main+0x8b68>
cmp    %edx,%eax
jb     b678 <main+0x8b68>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     b688 <main+0x8b78>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    b669 <main+0x8b59>
cmp    (%esp),%esi
je     b688 <main+0x8b78>
mov    %edi,%eax
xor    %edx,%edx
jmp    b5ec <main+0x8adc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    b5ec <main+0x8adc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    b6e8 <main+0x8bd8>
cmp    %edi,%esi
jbe    b720 <main+0x8c10>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     b740 <main+0x8c30>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    b750 <main+0x8c40>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     b7e8 <main+0x8cd8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    b731 <main+0x8c21>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    b6db <main+0x8bcb>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     b7d4 <main+0x8cc4>
cmp    %eax,0xc(%esp)
jb     b7d0 <main+0x8cc0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    b7ae <main+0x8c9e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    b7ae <main+0x8c9e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     b701 <main+0x8bf1>
jmp    b711 <main+0x8c01>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   3d50 <main+0x1240>
add    $0x3579,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x3bc(%ebx),%esi
call   2214 <_init>
lea    -0x3c0(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     b85b <main+0x8d4b>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x3c0(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    b838 <main+0x8d28>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   3d50 <main+0x1240>
add    $0x34fe,%ebx
sub    $0x8,%esp
call   2430 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   3d50 <main+0x1240>
add    $0x34e7,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
gs
js     b927 <_IO_stdin_used+0x7b>
gs
jb     b924 <_IO_stdin_used+0x78>
popa
insb   (%dx),%es:(%edi)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
add    %dh,(%edx)
xor    %dh,(%ecx)
xor    (%esi),%ebp
xor    %ebp,(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     b93e <_IO_stdin_used+0x92>
je     b938 <_IO_stdin_used+0x8c>
jae    b901 <_IO_stdin_used+0x55>
xor    0x2e(%edi),%esp
arpl   %ax,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b94d <_IO_stdin_used+0xa1>
je     b94a <_IO_stdin_used+0x9e>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    b907 <_IO_stdin_used+0x5b>
sub    %ah,0xa2973
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    b96f <_IO_stdin_used+0xc3>
and    %ah,%gs:0x702f0073
jb     b97a <_IO_stdin_used+0xce>
arpl   %bp,(%edi)
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     b97b <_IO_stdin_used+0xcf>
insl   (%dx),%es:(%edi)
jae    b919 <_IO_stdin_used+0x6d>
data16
jne    b98f <_IO_stdin_used+0xe3>
bound  %ebp,%gs:0xa(%ebx,%ebp,2)
add    %ah,0x75(%esi)
jae    b98b <_IO_stdin_used+0xdf>
or     (%eax),%al
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x75662064,0x65(%edx),%edi
jae    b99f <_IO_stdin_used+0xf3>
pop    %edi
jb     b9a2 <_IO_stdin_used+0xf6>
popa
fs imul $0x2e000a29,%fs:0x28(%edx),%esi
2e
outsb  %ds:(%esi),(%dx)
je     b9b0 <_IO_stdin_used+0x104>
jae    b979 <_IO_stdin_used+0xcd>
xor    0x2d(%edi),%esp
add    %ah,0x25732573
xor    %dh,(%ecx)
xor    %ah,0x73(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
jo     b9d0 <_IO_stdin_used+0x124>
imul   $0x61662066,0x74(%esi),%ebp
imul   $0x6425203a,0x64(%ebp,%eiz,2),%ebp
and    %ah,(%ecx)
cmp    $0xa642520,%eax
add    %al,0x6f(%ebx)
jne    b9e5 <_IO_stdin_used+0x139>
and    %ch,%fs:0x6f(%esi)
je     b99f <_IO_stdin_used+0xf3>
outsl  %ds:(%esi),(%dx)
jo     b9e7 <_IO_stdin_used+0x13b>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%ebx,%edx,2)
arpl   %si,%gs:0x72(%ebp)
add    %dl,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e4f,%eax
add    %dl,0x65(%edx)
popa
fs
sub    $0x74697257,%eax
add    %ch,%gs:(%edi)
fs
gs
jbe    b9da <_IO_stdin_used+0x12e>
outsb  %ds:(%esi),(%dx)
jne    ba1a <_IO_stdin_used+0x16e>
insb   (%dx),%es:(%edi)
add    %ch,(%edi)
jae    ba15 <_IO_stdin_used+0x169>
imul   $0x70646f6d,0x2f(%esi),%ebp
jb     ba2b <_IO_stdin_used+0x17f>
bound  %esp,0x0(%ebp)
das
fs
gs
jbe    b9f3 <_IO_stdin_used+0x147>
data16
jne    ba3a <_IO_stdin_used+0x18e>
add    %al,%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     ba3e <_IO_stdin_used+0x192>
and    %ah,(%edi)
and    $0x46002773,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    ba62 <_IO_stdin_used+0x1b6>
and    %ah,(%edi)
and    $0x46002773,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    ba71 <_IO_stdin_used+0x1c5>
je     ba25 <_IO_stdin_used+0x179>
daa
and    $0x46002773,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     ba7b <_IO_stdin_used+0x1cf>
popa
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
and    %ah,(%edx,%eax,2)
imul   $0x69680070,0x61(%ebp,%ebp,2),%esi
bound  %esp,0x72(%ebp)
imul   $0x7379,0x73(%esi,%ebp,1),%bp
add    %ch,(%edx,%esi,2)
outsl  %ds:(%esi),(%dx)
add    %ch,(%edx,%eiz,2)
insb   (%dx),%es:(%edi)
imul   $0x2c,0x76(%ebp,%eiz,2),%esp
bound  %ebp,0x73(%ebx,%ebp,2)
imul   $0x75253d,0x65(%edx),%edi
sub    $0x64,%al
gs
popaw
jne    babd <_IO_stdin_used+0x211>
je     bab2 <_IO_stdin_used+0x206>
jo     baba <_IO_stdin_used+0x20e>
jb     bac4 <_IO_stdin_used+0x218>
imul   $0x736e6f69,0x73(%ebx),%esi
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    bad0 <_IO_stdin_used+0x224>
je     ba8d <_IO_stdin_used+0x1e1>
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
and    %ch,0x70(%edi)
je     badf <_IO_stdin_used+0x233>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    baa8 <_IO_stdin_used+0x1fc>
or     (%eax),%al
sub    $0x6f2d006f,%eax
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x56000a2e,0x65(%edx),%edi
gs
jb     bb14 <_IO_stdin_used+0x268>
imul   $0x20732520,0x6e(%edi),%ebp
and    $0x64252073,%eax
or     (%eax),%al
inc    %ebx
insl   (%dx),%es:(%edi)
fs
insb   (%dx),%es:(%edi)
imul   $0x74706f20,0x65(%esi),%ebp
imul   $0x25203a73,0x6e(%edi),%ebp
jae    bacd <_IO_stdin_used+0x221>
add    %cl,0x6f(%ebp)
jne    bb36 <_IO_stdin_used+0x28a>
je     baea <_IO_stdin_used+0x23e>
outsl  %ds:(%esi),(%dx)
jo     bb41 <_IO_stdin_used+0x295>
imul   $0x25203a73,0x6e(%edi),%ebp
jae    bae0 <_IO_stdin_used+0x234>
add    %ah,0x63202c73
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     bb4f <_IO_stdin_used+0x2a3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x6c000a64
outsl  %ds:(%esi),(%dx)
ja     bb64 <_IO_stdin_used+0x2b8>
je     bb5e <_IO_stdin_used+0x2b2>
jae    bb27 <_IO_stdin_used+0x27b>
xor    0x0(%edi),%esp
add    %al,(%eax)
add    %cl,(%edx)
and    $0x73252073,%eax
and    %ah,0x64252073
and    %ch,0x69685420
jb     bb78 <_IO_stdin_used+0x2cc>
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     bb7c <_IO_stdin_used+0x2d0>
je     bb86 <_IO_stdin_used+0x2da>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %al,0x69(%edx,%esi,2)
jbe    bb8f <_IO_stdin_used+0x2e3>
jb     bb36 <_IO_stdin_used+0x28a>
or     %ecx,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     bba2 <_IO_stdin_used+0x2f6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x58202c64
inc    %ecx
push   %esp
push   %esp
push   %edx
push   %ebx
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
sub    $0x20,%al
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
and    %al,0x43(%ecx)
dec    %esp
push   %ebx
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
or     (%edx),%cl
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     bbe4 <_IO_stdin_used+0x338>
jb     bbd6 <_IO_stdin_used+0x32a>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,0x3030322d
aaa
and    %bl,0x75(%ecx)
jb     bbe4 <_IO_stdin_used+0x338>
and    %dl,0x61(%eax)
imul   $0x63,0x75(%eax),%ebp
push   $0x430a7969
outsl  %ds:(%esi),(%dx)
jo     bc0b <_IO_stdin_used+0x35f>
jb     bbfd <_IO_stdin_used+0x351>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%esi)
sub    $0x39303032,%eax
and    %dl,0x7a(%ebx)
popa
bound  %ebp,0x6c(%edi)
arpl   %si,0x20(%ebx)
push   %ebx
jp     bc13 <_IO_stdin_used+0x367>
imul   $0x73,0x63(%ecx),%esp
imul   $0x79706f43,0xa(%ebx,%esi,2),%esi
jb     bc29 <_IO_stdin_used+0x37d>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edi)
sub    $0x32313032,%eax
and    %cl,0x65(%edx)
popa
outsb  %ds:(%esi),(%dx)
sub    $0x72656950,%eax
jb     bc42 <_IO_stdin_used+0x396>
and    %al,0x6e(%ecx)
fs
jb     bc48 <_IO_stdin_used+0x39c>
or     0x6f(%ebx),%al
jo     bc61 <_IO_stdin_used+0x3b5>
jb     bc53 <_IO_stdin_used+0x3a7>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %bh,(%ecx)
and    %al,0x72(%ebp)
imul   $0x7372614c,0x20(%ebx),%ebp
jae    bc71 <_IO_stdin_used+0x3c5>
outsb  %ds:(%esi),(%dx)
or     (%edx),%cl
push   %ebp
jae    bc69 <_IO_stdin_used+0x3bd>
cmp    %gs:(%bx,%si),%ah
and    %ah,(%eax)
and    %ah,0x2d5b2073
outsl  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     bc83 <_IO_stdin_used+0x3d7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %ebx
sub    $0x2e,%al
cs
cs
pop    %ebp
pop    %ebp
and    %bh,(%esp,%eiz,2)
gs
jbe    bc92 <_IO_stdin_used+0x3e6>
arpl   %sp,0x7c(%ebp)
imul   $0x665f6567,0x61(%ebp),%ebp
imul   $0x6f6d3c20,0x3e(%ebp,%eiz,2),%ebp
jne    bcab <_IO_stdin_used+0x3ff>
je     bc9e <_IO_stdin_used+0x3f2>
jo     bcb0 <_IO_stdin_used+0x404>
imul   $0x4f0a0a3e,0x74(%esi),%ebp
jo     bcbe <_IO_stdin_used+0x412>
imul   $0x20203a73,0x6e(%edi),%ebp
jb     bcc2 <_IO_stdin_used+0x416>
and    %ch,(%eax)
jb     bcbc <_IO_stdin_used+0x410>
popa
fs
sub    $0x796c6e6f,%eax
and    %ch,0x6f(%ebp)
jne    bcd1 <_IO_stdin_used+0x425>
je     bc8e <_IO_stdin_used+0x3e2>
sub    $0x20,%al
ja     bcd2 <_IO_stdin_used+0x426>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     bce1 <_IO_stdin_used+0x435>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    bca1 <_IO_stdin_used+0x3f5>
and    %dh,0x69(%ebp)
fs
cmp    $0x6967202c,%eax
fs
cmp    $0x20200a2c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    bcfb <_IO_stdin_used+0x44f>
popa
jae    bcfc <_IO_stdin_used+0x450>
cmp    $0x6d66202c,%eax
popa
jae    bd04 <_IO_stdin_used+0x458>
cmp    $0x6d64202c,%eax
popa
jae    bd0c <_IO_stdin_used+0x460>
cmp    $0x7473202c,%eax
jb     bd0d <_IO_stdin_used+0x461>
popa
insl   (%dx),%es:(%edi)
jae    bd0b <_IO_stdin_used+0x45f>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x3d(%ebp)
or     %cs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x6c(%eax)
gs
popa
jae    bd2d <_IO_stdin_used+0x481>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x74(%ebp,%eiz,2)
popa
imul   $0x74206e69,0x20(%ebx,%esi,2),%ebp
push   $0x616d2065
outsb  %ds:(%esi),(%dx)
jne    bd46 <_IO_stdin_used+0x49a>
insb   (%dx),%es:(%edi)
and    %ch,(%eax)
je     bd63 <_IO_stdin_used+0x4b7>
jo     bd51 <_IO_stdin_used+0x4a5>
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%esi)
data16
jae    bd24 <_IO_stdin_used+0x478>
xor    0x29(%edi),%esp
or     %cs:(%edx),%cl
inc    %ebp
js     bd61 <_IO_stdin_used+0x4b5>
insl   (%dx),%es:(%edi)
jo     bd6f <_IO_stdin_used+0x4c3>
cmp    %gs:(%eax),%ah
outsb  %ds:(%esi),(%dx)
je     bd6f <_IO_stdin_used+0x4c3>
jae    bd38 <_IO_stdin_used+0x48c>
xor    0x20(%edi),%esp
das
fs
gs
jbe    bd42 <_IO_stdin_used+0x496>
jae    bd79 <_IO_stdin_used+0x4cd>
popa
xor    %esp,(%eax)
das
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     bd4c <_IO_stdin_used+0x4a0>
ja     bd88 <_IO_stdin_used+0x4dc>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     bd97 <_IO_stdin_used+0x4eb>
or     (%edx),%cl
and    $0x73,%eax
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
imul   $0x69616620,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    bd7a <_IO_stdin_used+0x4ce>
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    bdc4 <_IO_stdin_used+0x518>
and    %ch,%fs:0x6f(%esi)
je     bd7e <_IO_stdin_used+0x4d2>
popa
fs and %ah,%fs:0x20(%ecx)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    bd8e <_IO_stdin_used+0x4e2>
outsb  %gs:(%esi),(%dx)
je     bde4 <_IO_stdin_used+0x538>
jns    bd94 <_IO_stdin_used+0x4e8>
sub    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x29646c6c
or     (%eax),%al
add    %al,(%eax)
push   %eax
gs
jb     bdf5 <_IO_stdin_used+0x549>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x61(%ebx)
arpl   %bp,0x65(%eax)
and    %bh,(%edx)
and    %ah,0x7720756c
jb     be08 <_IO_stdin_used+0x55c>
je     be06 <_IO_stdin_used+0x55a>
jae    bdcf <_IO_stdin_used+0x523>
and    %ah,0x7220756c
gs
popa
fs
jae    bdda <_IO_stdin_used+0x52e>
and    %ah,0x252e756c
xor    %ebp,0x25(%ebp,%esi,2)
and    $0x74696820,%eax
jae    bdc9 <_IO_stdin_used+0x51d>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     be32 <_IO_stdin_used+0x586>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
jo     be44 <_IO_stdin_used+0x598>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     be43 <_IO_stdin_used+0x597>
insl   (%dx),%es:(%edi)
jae    bde1 <_IO_stdin_used+0x535>
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    be48 <_IO_stdin_used+0x59c>
popa
je     be60 <_IO_stdin_used+0x5b4>
jb     be4d <_IO_stdin_used+0x5a1>
jo     be62 <_IO_stdin_used+0x5b6>
gs
popa
and    %ah,%fs:0x72(%ebp)
jb     be67 <_IO_stdin_used+0x5bb>
jb     be1a <_IO_stdin_used+0x56e>
jb     be61 <_IO_stdin_used+0x5b5>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x20646c6c
popa
je     be30 <_IO_stdin_used+0x584>
outsl  %ds:(%esi),(%dx)
data16
data16
jae    be7a <_IO_stdin_used+0x5ce>
je     be37 <_IO_stdin_used+0x58b>
and    $0x3a646c6c,%eax
and    %ah,0x20646c6c
cmp    $0x3e,%al
and    %ah,0x646c6c
add    %al,(%eax)
push   %edx
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%esi)
imul   $0x7845202e,0x64(%ebp,%eiz,2),%ebp
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    be74 <_IO_stdin_used+0x5c8>
and    %dh,0x61(%edi)
jae    be72 <_IO_stdin_used+0x5c6>
jb     beb9 <_IO_stdin_used+0x60d>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
daa
and    $0x2773,%eax
add    %dl,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%esi)
imul   $0x7845202e,0x64(%ebp,%eiz,2),%ebp
imul   $0x20676e69,0x74(%ebx),%esi
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    beac <_IO_stdin_used+0x600>
and    %dh,0x74(%ebx)
imul   $0x73657270,0x20(%esp,%ebp,2),%ebp
outsb  %gs:(%esi),(%dx)
je     beb4 <_IO_stdin_used+0x608>
popa
jae    beb7 <_IO_stdin_used+0x60b>
daa
and    $0x55002773,%eax
jae    bf04 <_IO_stdin_used+0x658>
jb     bec1 <_IO_stdin_used+0x615>
insl   (%dx),%es:(%edi)
popa
jo     bf15 <_IO_stdin_used+0x669>
imul   $0x69756220,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
je     bedb <_IO_stdin_used+0x62f>
and    %dl,0x6f(%eax)
jae    bf1d <_IO_stdin_used+0x671>
js     bed6 <_IO_stdin_used+0x62a>
inc    %ecx
inc    %ebx
dec    %esp
jae    bedb <_IO_stdin_used+0x62f>
imul   $0x657375,0x20(%esi),%ebp
add    %al,(%eax)
inc    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     bf44 <_IO_stdin_used+0x698>
push   $0x61207069
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax)
jb     bf4a <_IO_stdin_used+0x69e>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6e(%ebp)
outsw  %ds:(%esi),(%dx)
jb     bf4e <_IO_stdin_used+0x6a2>
gs add %al,%fs:%gs:(%eax)
add    %cl,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     bf69 <_IO_stdin_used+0x6bd>
push   $0x61207069
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax)
jb     bf6f <_IO_stdin_used+0x6c3>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %al,(%eax)
push   %ebp
jae    bf7c <_IO_stdin_used+0x6d0>
jb     bf39 <_IO_stdin_used+0x68d>
insl   (%dx),%es:(%edi)
popa
jo     bf8d <_IO_stdin_used+0x6e1>
imul   $0x69756220,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
je     bf53 <_IO_stdin_used+0x6a7>
and    %dl,0x6f(%eax)
jae    bf95 <_IO_stdin_used+0x6e9>
js     bf4e <_IO_stdin_used+0x6a2>
inc    %ecx
inc    %ebx
dec    %esp
jae    bf53 <_IO_stdin_used+0x6a7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     bf57 <_IO_stdin_used+0x6ab>
jne    bfac <_IO_stdin_used+0x700>
gs add %cl,%fs:%gs:0x6f(%ebp)
jne    bfae <_IO_stdin_used+0x702>
je     bf62 <_IO_stdin_used+0x6b6>
imul   $0x696e6564,0x20(%ebx),%esi
gs and %ah,%fs:%gs:0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    bfb8 <_IO_stdin_used+0x70c>
and    %dh,0x65(%ebx)
je     bfcd <_IO_stdin_used+0x721>
imul   $0x7320646e,0x61(%eax,%eiz,1),%esp
gs
je     bfca <_IO_stdin_used+0x71e>
imul   $0x20746f6f,0x72(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
je     bfd4 <_IO_stdin_used+0x728>
jae    bf9d <_IO_stdin_used+0x6f1>
xor    0x20(%edi),%esp
imul   $0x65736e69,0x20(%ebx),%esi
arpl   %si,0x72(%ebp)
and    %dh,%gs:0x69(%edi)
je     bfeb <_IO_stdin_used+0x73f>
and    %dh,0x65(%eax,%ebp,2)
or     0x78(%ebp),%ah
je     bff1 <_IO_stdin_used+0x745>
jb     bffc <_IO_stdin_used+0x750>
popa
insb   (%dx),%es:(%edi)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
and    %ch,0x62(%ecx,%ebp,2)
jb     bffc <_IO_stdin_used+0x750>
jb     c016 <_IO_stdin_used+0x76a>
and    %al,%cs:0x69(%ebp)
je     c00b <_IO_stdin_used+0x75f>
gs
jb     bfc6 <_IO_stdin_used+0x71a>
jb     c00d <_IO_stdin_used+0x761>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    c011 <_IO_stdin_used+0x765>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
je     c02a <_IO_stdin_used+0x77e>
imul   $0x69677465,0x73(%edi,%ebp,1),%esp
and    %ah,%fs:0x69(%edx)
je     bfe3 <_IO_stdin_used+0x737>
data16
jb     c035 <_IO_stdin_used+0x789>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     c04b <_IO_stdin_used+0x79f>
or     0x72(%edi),%ch
and    %dh,0x65(%edx)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
sub    $0x77204733,%eax
imul   $0x65746e69,0x20(%eax,%ebp,2),%esi
addr16 jb c053 <_IO_stdin_used+0x7a7>
je     c059 <_IO_stdin_used+0x7ad>
and    %al,%fs:0x55(%esi)
push   %ebx
inc    %ebp
and    %dh,0x75(%ebx)
jo     c06f <_IO_stdin_used+0x7c3>
outsl  %ds:(%esi),(%dx)
jb     c076 <_IO_stdin_used+0x7ca>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x61(%ebp)
imul   $0x69,0x20(%ebp),%esp
je     c02f <_IO_stdin_used+0x783>
jae    c076 <_IO_stdin_used+0x7ca>
je     c088 <_IO_stdin_used+0x7dc>
imul   $0x2e746f6f,0x72(%eax,%eiz,1),%esp
or     0x6c(%eax),%dl
gs
popa
jae    c087 <_IO_stdin_used+0x7db>
and    %dh,0x65(%ebx)
and    %ch,%gs:0x6f(%ebp)
jb     c090 <_IO_stdin_used+0x7e4>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     c09f <_IO_stdin_used+0x7f3>
popa
je     c09e <_IO_stdin_used+0x7f2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
or     0x74(%eax),%ch
je     c0af <_IO_stdin_used+0x803>
cmp    (%edi),%ch
das
je     c0b9 <_IO_stdin_used+0x80d>
js     c0ab <_IO_stdin_used+0x7ff>
jb     c0a9 <_IO_stdin_used+0x7fd>
arpl   %bp,%cs:0x6d(%edi)
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    c0c1 <_IO_stdin_used+0x815>
imul   $0x7366746e,0x2f(%ecx,%edi,2),%esi
sub    $0x662d6733,%eax
popa
jno    c092 <_IO_stdin_used+0x7e6>
and    0x6e(%ebp),%esi
jo     c0da <_IO_stdin_used+0x82e>
imul   $0x6567656c,0x69(%esi),%esi
or     %fs:(%eax),%al
add    %al,(%eax)
dec    %eax
dec    %ecx
dec    %esi
push   %esp
cmp    (%eax),%ah
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    c09e <_IO_stdin_used+0x7f2>
jae    c0e8 <_IO_stdin_used+0x83c>
outsl  %ds:(%esi),(%dx)
jne    c0ef <_IO_stdin_used+0x843>
and    %ah,%fs:0x65(%edx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     c0b9 <_IO_stdin_used+0x80d>
and    %ch,0x72(%edi)
and    %ch,0x61(%ebp)
imul   $0x6e,0x20(%ebp),%esp
je     c0ff <_IO_stdin_used+0x853>
jae    c0c8 <_IO_stdin_used+0x81c>
xor    0x20(%edi),%esp
jae    c105 <_IO_stdin_used+0x859>
je     c117 <_IO_stdin_used+0x86b>
imul   $0x2c746f6f,0x72(%eax,%eiz,1),%esp
and    %ch,0x72(%edi)
and    %ch,0x61(%edi,%ebp,2)
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%ebx)
jb     c134 <_IO_stdin_used+0x888>
gs
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    c13a <_IO_stdin_used+0x88e>
and    %ah,%gs:0x73(%ecx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     c0f8 <_IO_stdin_used+0x84c>
sub    %ah,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jo     c151 <_IO_stdin_used+0x8a5>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
data16
jne    c159 <_IO_stdin_used+0x8ad>
gs
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
imul   $0x20646f6d,0x73(%esi),%ebp
cmp    $0x70,%al
popa
je     c161 <_IO_stdin_used+0x8b5>
pop    %edi
je     c16b <_IO_stdin_used+0x8bf>
ds
das
data16
jne    c174 <_IO_stdin_used+0x8c8>
gs imul $0x20,%cs:%gs:0x27(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x72(%edi)
and    %ch,0x6e(%ecx)
jae    c180 <_IO_stdin_used+0x8d4>
outsl  %ds:(%esi),(%dx)
and    %bh,%fs:(%eax,%esi,2)
popa
je     c183 <_IO_stdin_used+0x8d7>
pop    %edi
je     c18d <_IO_stdin_used+0x8e1>
ds
das
data16
jne    c196 <_IO_stdin_used+0x8ea>
gs outsl %cs:%gs:(%esi),(%dx)
daa
sub    %ebp,(%esi)
and    %cl,0x61(%ebp)
imul   $0x61,0x20(%ebp),%esp
insb   (%dx),%es:(%edi)
jae    c1a2 <_IO_stdin_used+0x8f6>
and    %dh,0x75(%ebx)
jb     c19d <_IO_stdin_used+0x8f1>
and    %dh,0x61(%eax,%ebp,2)
je     c15e <_IO_stdin_used+0x8b2>
je     c1a8 <_IO_stdin_used+0x8fc>
and    %ah,%gs:0x75(%esi)
jae    c1ab <_IO_stdin_used+0x8ff>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20202020,0x65(%ebx),%esp
and    %ah,(%eax)
gs
js     c1bf <_IO_stdin_used+0x913>
jae    c1cc <_IO_stdin_used+0x920>
jae    c188 <_IO_stdin_used+0x8dc>
and    %cl,0x74(%ecx)
daa
jae    c180 <_IO_stdin_used+0x8d4>
jne    c1d5 <_IO_stdin_used+0x929>
jne    c1c5 <_IO_stdin_used+0x919>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    c188 <_IO_stdin_used+0x8dc>
imul   $0x642f2072,%gs:0x65(%eax,%ebp,2),%esi
64
gs
jbe    c1a3 <_IO_stdin_used+0x8f7>
data16
jne    c1ea <_IO_stdin_used+0x93e>
and    %ch,%gs:0x72(%edi)
and    %ch,(%edi)
fs
gs
jbe    c1b0 <_IO_stdin_used+0x904>
insl   (%dx),%es:(%edi)
imul   $0x7375662f,0x63(%ebx),%esi
gs add %dl,%cs:%gs:0x6e(%ebp)
jo     c202 <_IO_stdin_used+0x956>
imul   $0x6567656c,0x69(%esi),%esi
and    %dh,%fs:0x73(%ebp)
gs
jb     c1be <_IO_stdin_used+0x912>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6f(%esi)
je     c1c6 <_IO_stdin_used+0x91a>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c218 <_IO_stdin_used+0x96c>
je     c1cc <_IO_stdin_used+0x920>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    c224 <_IO_stdin_used+0x978>
arpl   %sp,0x73(%ebp)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,0x78(%ebp)
je     c232 <_IO_stdin_used+0x986>
jb     c23d <_IO_stdin_used+0x991>
popa
insb   (%dx),%es:(%edi)
and    %al,0x55(%esi)
push   %ebx
inc    %ebp
or     0x62(%ecx,%ebp,2),%ch
jb     c23d <_IO_stdin_used+0x991>
jb     c257 <_IO_stdin_used+0x9ab>
and    %al,%cs:0x69(%ebp)
je     c24c <_IO_stdin_used+0x9a0>
gs
jb     c207 <_IO_stdin_used+0x95b>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c259 <_IO_stdin_used+0x9ad>
je     c20d <_IO_stdin_used+0x961>
je     c257 <_IO_stdin_used+0x9ab>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    c263 <_IO_stdin_used+0x9b7>
and    %ah,%gs:0x73(%ecx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     c22c <_IO_stdin_used+0x980>
and    %ch,0x72(%edi)
and    %dh,0x65(%edx)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
sub    $0x77204733,%eax
imul   $0x65746e69,0x20(%eax,%ebp,2),%esi
addr16 jb c281 <_IO_stdin_used+0x9d5>
je     c287 <_IO_stdin_used+0x9db>
or     %fs:0x55(%esi),%al
push   %ebx
inc    %ebp
and    %dh,0x75(%ebx)
jo     c29d <_IO_stdin_used+0x9f1>
outsl  %ds:(%esi),(%dx)
jb     c2a4 <_IO_stdin_used+0x9f8>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x61(%ebp)
imul   $0x69,0x20(%ebp),%esp
je     c25d <_IO_stdin_used+0x9b1>
jae    c2a4 <_IO_stdin_used+0x9f8>
je     c2b6 <_IO_stdin_used+0xa0a>
imul   $0x2e746f6f,0x72(%eax,%eiz,1),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    c2b5 <_IO_stdin_used+0xa09>
and    %dh,0x65(%ebx)
and    %ch,%gs:0x6f(%ebp)
jb     c2be <_IO_stdin_used+0xa12>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     c2cd <_IO_stdin_used+0xa21>
popa
je     c2cc <_IO_stdin_used+0xa20>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
or     0x74(%eax),%ch
je     c2dd <_IO_stdin_used+0xa31>
cmp    (%edi),%ch
das
je     c2e7 <_IO_stdin_used+0xa3b>
js     c2d9 <_IO_stdin_used+0xa2d>
jb     c2d7 <_IO_stdin_used+0xa2b>
arpl   %bp,%cs:0x6d(%edi)
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    c2ef <_IO_stdin_used+0xa43>
imul   $0x7366746e,0x2f(%ecx,%edi,2),%esi
sub    $0x662d6733,%eax
popa
jno    c2c0 <_IO_stdin_used+0xa14>
and    0x6e(%ebp),%esi
jo     c308 <_IO_stdin_used+0xa5c>
imul   $0x6567656c,0x69(%esi),%esi
or     %fs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     c318 <_IO_stdin_used+0xa6c>
and    %ah,0x72(%esi)
gs and %cl,%gs:0x46(%ebp)
push   %esp
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
fs
jae    c2c5 <_IO_stdin_used+0xa19>
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6e65,%gs:0x69(%ebx),%sp
je     c2fb <_IO_stdin_used+0xa4f>
dec    %esp
imul   $0x656b2078,0x75(%esi),%ebp
jb     c353 <_IO_stdin_used+0xaa7>
gs
insb   (%dx),%es:(%edi)
and    %ah,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dl,%cs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%edx,%esi,2)
jbe    c361 <_IO_stdin_used+0xab5>
jb     c31e <_IO_stdin_used+0xa72>
data16
gs
popa
je     c378 <_IO_stdin_used+0xacc>
jb     c36a <_IO_stdin_used+0xabe>
jae    c327 <_IO_stdin_used+0xa7b>
popa
jb     c36f <_IO_stdin_used+0xac3>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     c338 <_IO_stdin_used+0xa8c>
popa
jbe    c37c <_IO_stdin_used+0xad0>
imul   $0x2820656c,0x62(%ecx,%eiz,2),%ebp
jae    c39c <_IO_stdin_used+0xaf0>
popa
jo     c348 <_IO_stdin_used+0xa9c>
imul   $0x6e6f,0x20(%ebp,%eiz,2),%bp
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
sub    $0x20,%al
bound  %ebp,0x6f(%edi)
je     c35b <_IO_stdin_used+0xaaf>
data16
jb     c3ad <_IO_stdin_used+0xb01>
insl   (%dx),%es:(%edi)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %cl,0x4c(%ecx,%ecx,2)
dec    %edi
sub    %ebp,(%eax,%eiz,1)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    c3cc <_IO_stdin_used+0xb20>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c3d0 <_IO_stdin_used+0xb24>
je     c384 <_IO_stdin_used+0xad8>
imul   $0x20746f6e,0x20(%ebx),%esi
jae    c3ce <_IO_stdin_used+0xb22>
data16
and    %dh,%gs:0x6e(%ebp)
insb   (%dx),%es:(%edi)
gs
jae    c3e9 <_IO_stdin_used+0xb3d>
and    %ch,0x74(%ecx)
daa
jae    c39c <_IO_stdin_used+0xaf0>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x75(%ebx)
jb     c3ea <_IO_stdin_used+0xb3e>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%esi)
data16
jae    c3bc <_IO_stdin_used+0xb10>
xor    0x20(%edi),%esp
jo     c406 <_IO_stdin_used+0xb5a>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    c3a4 <_IO_stdin_used+0xaf8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%esi)
je     c41c <_IO_stdin_used+0xb70>
jb     c40a <_IO_stdin_used+0xb5e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    c3cd <_IO_stdin_used+0xb21>
je     c414 <_IO_stdin_used+0xb68>
jb     c41e <_IO_stdin_used+0xb72>
imul   $0x20736574,0x61(%esi),%ebp
popa
data16
je     c421 <_IO_stdin_used+0xb75>
jb     c3de <_IO_stdin_used+0xb32>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x6d752720,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    c43a <_IO_stdin_used+0xb8e>
je     c3f5 <_IO_stdin_used+0xb49>
and    %cl,%cs:0x66(%ecx)
and    %bh,0x6f(%ecx)
jne    c3f7 <_IO_stdin_used+0xb4b>
ja     c442 <_IO_stdin_used+0xb96>
jae    c443 <_IO_stdin_used+0xb97>
and    %dh,0x69(%eax,%ebp,2)
jae    c3eb <_IO_stdin_used+0xb3f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%ebp)
jae    c461 <_IO_stdin_used+0xbb5>
popa
and    %dh,%gs:0x6f(%si)
and    %ah,0x73(%ecx,%ebp,2)
popa
jo     c46b <_IO_stdin_used+0xbbf>
gs
popa
jb     c41f <_IO_stdin_used+0xb73>
je     c469 <_IO_stdin_used+0xbbd>
outsb  %gs:(%esi),(%dx)
and    %bh,0x6f(%ecx)
jne    c428 <_IO_stdin_used+0xb7c>
jae    c472 <_IO_stdin_used+0xbc6>
outsl  %ds:(%esi),(%dx)
jne    c479 <_IO_stdin_used+0xbcd>
and    %dh,%fs:0x70(%ebp)
addr16 jb c475 <_IO_stdin_used+0xbc9>
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
popa
je     c43d <_IO_stdin_used+0xb91>
insb   (%dx),%es:(%edi)
gs
popa
jae    c496 <_IO_stdin_used+0xbea>
and    %ch,0x65(%ebx)
jb     c495 <_IO_stdin_used+0xbe9>
gs
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jbe    c49a <_IO_stdin_used+0xbee>
jb     c4aa <_IO_stdin_used+0xbfe>
imul   $0x362e3220,0x6e(%edi),%ebp
xor    %cs:(%eax),%dh
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     c466 <_IO_stdin_used+0xbba>
jb     c4ad <_IO_stdin_used+0xc01>
jno    c4bf <_IO_stdin_used+0xc13>
gs
jae    c4c1 <_IO_stdin_used+0xc15>
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     c473 <_IO_stdin_used+0xbc7>
data16
jb     c4c5 <_IO_stdin_used+0xc19>
insl   (%dx),%es:(%edi)
and    %bh,0x6f(%ecx)
jne    c4ce <_IO_stdin_used+0xc22>
and    %ah,0x73(%ecx,%ebp,2)
je     c4d4 <_IO_stdin_used+0xc28>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2020,0xa(%eax),%di
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebx)
jb     c4f0 <_IO_stdin_used+0xc44>
gs
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %dl,%cs:0x65(%eax,%ebp,2)
and    %ah,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     c4b8 <_IO_stdin_used+0xc0c>
ja     c4ff <_IO_stdin_used+0xc53>
bound  %esp,(%eax)
jo     c4ff <_IO_stdin_used+0xc53>
and    %ch,%gs:0x61(%bx,%si)
jae    c4c5 <_IO_stdin_used+0xc19>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     c50e <_IO_stdin_used+0xc62>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     c51d <_IO_stdin_used+0xc71>
popa
je     c51c <_IO_stdin_used+0xc70>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x74(%eax)
je     c534 <_IO_stdin_used+0xc88>
cmp    (%edi),%ch
das
je     c53e <_IO_stdin_used+0xc92>
js     c530 <_IO_stdin_used+0xc84>
jb     c52e <_IO_stdin_used+0xc82>
arpl   %bp,%cs:0x6d(%edi)
das
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    c546 <_IO_stdin_used+0xc9a>
imul   $0x7366746e,0x2f(%ecx,%edi,2),%esi
sub    $0x662d6733,%eax
popa
jno    c517 <_IO_stdin_used+0xc6b>
and    0x75(%esi),%esp
jae    c552 <_IO_stdin_used+0xca6>
xor    (%esi),%dh
or     (%edx),%cl
add    %al,(%eax)
add    %dl,0x65(%edx)
jno    c56d <_IO_stdin_used+0xcc1>
gs
jae    c56f <_IO_stdin_used+0xcc3>
gs and %ah,%fs:%gs:0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,%fs:0x73(%ecx)
and    %ah,0xa73
add    %al,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jne    c592 <_IO_stdin_used+0xce6>
je     c58b <_IO_stdin_used+0xcdf>
and    %ah,%fs:0x25282073
jae    c55b <_IO_stdin_used+0xcaf>
and    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
and    %ah,(%edx)
and    $0x202c2273,%eax
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x64252e64
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x59,%al
(bad)
(bad)
fcompl -0x1(%eax)
dec    %esp
pop    %eax
(bad)
lcall  *(%ecx,%ebx,2)
(bad)
(bad)
cld
pop    %eax
(bad)
lcall  *(%ecx,%ebx,2)
(bad)
(bad)
in     (%dx),%al
pop    %eax
(bad)
lcall  *(%ecx,%ebx,2)
(bad)
lcall  *(%ecx,%ebx,2)
(bad)
lcall  *(%ecx,%ebx,2)
(bad)
(bad)
mov    $0x1cffff58,%esp
pop    %ecx
(bad)
call   *%esp
push   %edi
(bad)
jmp    *%esp
mov    %edi,%?
jmp    *%esp
mov    %edi,%?
pushl  (%esi,%ecx,4)
(bad)
call   *-0x1(%esi,%ecx,4)
call   *-0x71430001(%esi,%ecx,4)
(bad)
(bad)
cld
(bad)
(bad)
ljmp   *0x746effff(%edi,%ecx,4)
data16
jae    c604 <_IO_stdin_used+0xd58>
arpl   %bp,0x73(%edi,%ebp,2)
add    %dh,%gs:0x65(%ebx)
je     c624 <_IO_stdin_used+0xd78>
jo     c610 <_IO_stdin_used+0xd64>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr32 imul $0x79727400,0x67(%bp),%ebp
79
pop    %edi
data16
jne    c633 <_IO_stdin_used+0xd87>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c634 <_IO_stdin_used+0xd88>
je     c5c8 <_IO_stdin_used+0xd1c>
outsb  %ds:(%esi),(%dx)
je     c631 <_IO_stdin_used+0xd85>
jae    c62c <_IO_stdin_used+0xd80>
data16
jne    c643 <_IO_stdin_used+0xd97>
gs
pop    %edi
jae    c635 <_IO_stdin_used+0xd89>
data16
gs
pop    %edi
jb     c63e <_IO_stdin_used+0xd92>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %ch,0x74(%esi)
data16
jae    c644 <_IO_stdin_used+0xd98>
data16
jne    c65b <_IO_stdin_used+0xdaf>
gs
pop    %edi
jb     c651 <_IO_stdin_used+0xda5>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
gs
js     c65d <_IO_stdin_used+0xdb1>
jae    c66a <_IO_stdin_used+0xdbe>
imul   $0x7365645f,0x67(%esi),%ebp
je     c5ff <_IO_stdin_used+0xd53>
outsb  %ds:(%esi),(%dx)
je     c668 <_IO_stdin_used+0xdbc>
jae    c663 <_IO_stdin_used+0xdb7>
data16
jne    c67a <_IO_stdin_used+0xdce>
gs
pop    %edi
jb     c670 <_IO_stdin_used+0xdc4>
popa
add    %ch,%fs:0x74(%esi)
data16
jae    c672 <_IO_stdin_used+0xdc6>
data16
jne    c689 <_IO_stdin_used+0xddd>
gs
pop    %edi
imul   $0x72,0x65(%esp,%ebp,2),%bp
outsb  %ds:(%esi),(%dx)
je     c688 <_IO_stdin_used+0xddc>
jae    c683 <_IO_stdin_used+0xdd7>
data16
jne    c69a <_IO_stdin_used+0xdee>
gs
pop    %edi
jb     c690 <_IO_stdin_used+0xde4>
popa
fs imul $0x7366746e,%fs:0x0(%edx),%esi
73
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     c69e <_IO_stdin_used+0xdf2>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6b(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
fs
gs
jbe    c6a4 <_IO_stdin_used+0xdf8>
data16
jne    c6bb <_IO_stdin_used+0xe0f>
add    %ah,%gs:0x65(%edi)
je     c6ad <_IO_stdin_used+0xe01>
data16
jne    c6c4 <_IO_stdin_used+0xe18>
gs
pop    %edi
data16
jae    c6ca <_IO_stdin_used+0xe1e>
jns    c6c8 <_IO_stdin_used+0xe1c>
add    %dh,%gs:0x73(%ebp)
popa
add    %ch,%gs:0x61(%di)
imul   $0x75736e75,0x0(%esi),%ebp
jo     c6db <_IO_stdin_used+0xe2f>
outsl  %ds:(%esi),(%dx)
jb     c6e2 <_IO_stdin_used+0xe36>
gs and %dh,%fs:%gs:0x65(%edx)
jo     c6d6 <_IO_stdin_used+0xe2a>
jb     c6ea <_IO_stdin_used+0xe3e>
and    %dh,%gs:0x6f(%eax)
imul   $0x68672e00,0x74(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jae    c6f9 <_IO_stdin_used+0xe4d>
sub    $0x7366746e,%eax
sub    $0x252d6733,%eax
xor    %dh,(%edx)
xor    %ch,0x75(%esp,%ebp,2)
add    %ah,0x54203a73
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x72(%ecx,%eiz,2)
and    %ch,%gs:0x6e(%bx,%di)
jo     c71d <_IO_stdin_used+0xe71>
je     c6ca <_IO_stdin_used+0xe1e>
bound  %esi,0x66(%ebp)
data16
gs
jb     c6b1 <_IO_stdin_used+0xe05>
outsb  %ds:(%esi),(%dx)
je     c71a <_IO_stdin_used+0xe6e>
jae    c6e3 <_IO_stdin_used+0xe37>
xor    0x5f(%edi),%esp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%eax)
and    $0x4d203a73,%eax
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     c745 <_IO_stdin_used+0xe99>
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
imul   $0x73662c00,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x3a732500,%eax
and    %dh,0x74(%ebx)
jb     c755 <_IO_stdin_used+0xea9>
jne    c763 <_IO_stdin_used+0xeb7>
and    %ah,0x61(%esi)
imul   $0x6f2500,0x64(%ebp,%eiz,2),%ebp
and    $0x79730069,%eax
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
js     c773 <_IO_stdin_used+0xec7>
je     c788 <_IO_stdin_used+0xedc>
jb     c716 <_IO_stdin_used+0xe6a>
ja     c781 <_IO_stdin_used+0xed5>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     c790 <_IO_stdin_used+0xee4>
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    c790 <_IO_stdin_used+0xee4>
je     c785 <_IO_stdin_used+0xed9>
jo     c78d <_IO_stdin_used+0xee1>
jb     c797 <_IO_stdin_used+0xeeb>
imul   $0x736e6f69,0x73(%ebx),%esi
sub    $0x0,%al
jb     c79a <_IO_stdin_used+0xeee>
insb   (%dx),%es:(%edi)
popa
je     c7a2 <_IO_stdin_used+0xef6>
insl   (%dx),%es:(%edi)
gs
sub    $0x0,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
popa
je     c7ab <_IO_stdin_used+0xeff>
insl   (%dx),%es:(%edi)
gs
sub    $0x0,%al
and    $0x73252073,%eax
and    %ah,0x64252073
or     (%eax),%al
and    $0x55203a73,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     c7cc <_IO_stdin_used+0xf20>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x6e683a6f
jbe    c7ca <_IO_stdin_used+0xf1e>
add    %ah,0x4e203a73
outsl  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x20736920,0x65(%ebx),%esp
jae    c7f8 <_IO_stdin_used+0xf4c>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6f000a2e,0x64(%ebp),%esp
jo     c809 <_IO_stdin_used+0xf5d>
imul   $0x65680073,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
jo     c79f <_IO_stdin_used+0xef3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6261746d,%eax
add    %dh,0x65(%esi)
jb     c80d <_IO_stdin_used+0xf61>
outsl  %ds:(%esi),(%dx)
jae    c813 <_IO_stdin_used+0xf67>
add    %dh,0x65(%esi)
jb     c826 <_IO_stdin_used+0xf7a>
imul   $0x616f6e00,0x6e(%edi),%ebp
je     c825 <_IO_stdin_used+0xf79>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     c82e <_IO_stdin_used+0xf82>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6c(%ebp,%eiz,2)
popa
jns    c82d <_IO_stdin_used+0xf81>
insl   (%dx),%es:(%edi)
je     c83a <_IO_stdin_used+0xf8e>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x61(%esi)
imul   $0x72,0x5f(%ebp),%esp
ja     c7dc <_IO_stdin_used+0xf30>
data16
jae    c84d <_IO_stdin_used+0xfa1>
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
pop    %edi
fs
gs
pop    %di
outsl  %ds:(%esi),(%dx)
jo     c861 <_IO_stdin_used+0xfb5>
jae    c7ef <_IO_stdin_used+0xf43>
popa
arpl   %bp,0x75(%eax,%eax,1)
insl   (%dx),%es:(%edi)
popa
jae    c863 <_IO_stdin_used+0xfb7>
add    %ah,0x6d(%esi)
popa
jae    c869 <_IO_stdin_used+0xfbd>
add    %ah,0x61(%ebp,%ebp,2)
jae    c86f <_IO_stdin_used+0xfc3>
add    %dh,0x69(%ebp)
add    %ah,%fs:0x69(%edi)
add    %dh,%fs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     c871 <_IO_stdin_used+0xfc5>
jae    c88d <_IO_stdin_used+0xfe1>
jae    c875 <_IO_stdin_used+0xfc9>
imul   $0x6800,0x73(%ebp,%eiz,2),%bp
imul   $0x5f646968,0x5f(%ebp,%eiz,2),%esp
imul   $0x6800,0x73(%ebp,%eiz,2),%bp
imul   $0x5f746f64,0x5f(%ebp,%eiz,2),%esp
imul   $0x6900,0x73(%ebp,%eiz,2),%bp
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     c8a5 <_IO_stdin_used+0xff9>
pop    %edi
arpl   %sp,0x73(%ecx)
add    %dh,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     c8c0 <_IO_stdin_used+0x1014>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    c854 <_IO_stdin_used+0xfa8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6d(%edi)
jo     c8cd <_IO_stdin_used+0x1021>
gs
jae    c8d1 <_IO_stdin_used+0x1025>
imul   $0x6c697300,0x6e(%edi),%ebp
outsb  %gs:(%esi),(%dx)
je     c869 <_IO_stdin_used+0xfbd>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     c8d2 <_IO_stdin_used+0x1026>
arpl   %bp,0x76(%edi)
gs
jb     c873 <_IO_stdin_used+0xfc7>
jb     c8da <_IO_stdin_used+0x102e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    c8de <_IO_stdin_used+0x1032>
pop    %edi
push   $0x72656269
imul   $0x7973,0x0(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    c904 <_IO_stdin_used+0x1058>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%ecx)
add    %ah,0x69(%edx)
addr16 pop %edi
ja     c908 <_IO_stdin_used+0x105c>
imul   $0x636f6c00,0x73(%ebp,%eiz,2),%esi
popa
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
data16
arpl   %bp,0x6e(%edi)
jbe    c8ab <_IO_stdin_used+0xfff>
jae    c921 <_IO_stdin_used+0x1075>
jb     c914 <_IO_stdin_used+0x1068>
popa
insl   (%dx),%es:(%edi)
jae    c912 <_IO_stdin_used+0x1066>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
jne    c932 <_IO_stdin_used+0x1086>
gs
jb     c921 <_IO_stdin_used+0x1075>
js     c925 <_IO_stdin_used+0x1079>
je     c93a <_IO_stdin_used+0x108e>
jb     c8c8 <_IO_stdin_used+0x101c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
popa
jne    c941 <_IO_stdin_used+0x1095>
outsl  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
pop    %edi
fs
gs
je     c937 <_IO_stdin_used+0x108b>
arpl   %bp,0x0(%eax)
jb     c940 <_IO_stdin_used+0x1094>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c94d <_IO_stdin_used+0x10a1>
je     c8e1 <_IO_stdin_used+0x1035>
bound  %ebp,0x73(%ebx,%ebp,2)
imul   $0x686e6900,0x65(%edx),%edi
gs
jb     c958 <_IO_stdin_used+0x10ac>
je     c8f1 <_IO_stdin_used+0x1045>
popa
fs
fs
jae    c95b <_IO_stdin_used+0x10af>
arpl   %si,0x72(%ebp)
imul   $0x74617473,0x0(%ebx,%esi,2),%esp
imul   $0x737072,0x67(%ebx),%esp
jne    c97d <_IO_stdin_used+0x10d1>
gs
jb     c97a <_IO_stdin_used+0x10ce>
popa
jo     c980 <_IO_stdin_used+0x10d4>
imul   $0x74617800,0x67(%esi),%ebp
je     c98b <_IO_stdin_used+0x10df>
insl   (%dx),%es:(%edi)
popa
jo     c98d <_IO_stdin_used+0x10e1>
imul   $0x73666500,0x67(%esi),%ebp
pop    %edi
jb     c988 <_IO_stdin_used+0x10dc>
ja     c929 <_IO_stdin_used+0x107d>
add    %al,(%eax)
add    %ah,0x4d203a73
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     c9af <_IO_stdin_used+0x1103>
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x69616620,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
gs add %al,%fs:%gs:(%eax)
daa
and    $0x6f202773,%eax
jo     c9c8 <_IO_stdin_used+0x111c>
imul   $0x6f687320,0x6e(%edi),%ebp
jne    c9c9 <_IO_stdin_used+0x111d>
outsb  %fs:(%esi),(%dx)
daa
je     c982 <_IO_stdin_used+0x10d6>
push   $0x20657661
jbe    c9ca <_IO_stdin_used+0x111e>
insb   (%dx),%es:(%edi)
jne    c9d1 <_IO_stdin_used+0x1125>
or     %cs:(%eax),%al
add    %ah,(%edi)
and    $0x6f202773,%eax
jo     c9ec <_IO_stdin_used+0x1140>
imul   $0x65656e20,0x6e(%edi),%ebp
fs
jae    c9a2 <_IO_stdin_used+0x10f6>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x63(%edi)
je     c9ea <_IO_stdin_used+0x113e>
insb   (%dx),%es:(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    c9f5 <_IO_stdin_used+0x1149>
or     (%eax),%al
add    %al,(%eax)
daa
and    $0x6f202773,%eax
jo     ca10 <_IO_stdin_used+0x1164>
imul   $0x6f687320,0x6e(%edi),%ebp
jne    ca11 <_IO_stdin_used+0x1165>
and    %ch,%fs:0x61(%eax)
jbe    ca10 <_IO_stdin_used+0x1164>
and    %ah,0x20(%ecx)
jbe    ca11 <_IO_stdin_used+0x1165>
insb   (%dx),%es:(%edi)
jne    ca18 <_IO_stdin_used+0x116c>
or     %cs:(%eax),%al
add    %al,(%eax)
daa
and    $0x6f202773,%eax
jo     ca34 <_IO_stdin_used+0x1188>
imul   $0x65656e20,0x6e(%edi),%ebp
fs
jae    c9ea <_IO_stdin_used+0x113e>
popa
and    %ah,0x63(%ebp,%eiz,2)
imul   $0x6176206c,0x61(%ebp),%ebp
insb   (%dx),%es:(%edi)
jne    ca3e <_IO_stdin_used+0x1192>
or     (%eax),%al
add    %ah,(%edi)
and    $0x69202773,%eax
jae    ca04 <_IO_stdin_used+0x1158>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
jae    ca60 <_IO_stdin_used+0x11b4>
jo     ca5d <_IO_stdin_used+0x11b1>
outsl  %ds:(%esi),(%dx)
jb     ca64 <_IO_stdin_used+0x11b8>
gs and %ch,%fs:%gs:0x70(%edi)
je     ca60 <_IO_stdin_used+0x11b4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    ca61 <_IO_stdin_used+0x11b5>
insb   (%dx),%es:(%edi)
imul   $0x64656d61,0x6e(%eax,%eiz,1),%esp
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %dh,0x74(%ebx)
jb     ca78 <_IO_stdin_used+0x11cc>
popa
insl   (%dx),%es:(%edi)
jae    ca37 <_IO_stdin_used+0x118b>
popa
arpl   %sp,0x65(%ebx)
jae    ca90 <_IO_stdin_used+0x11e4>
and    %ch,0x6e(%ecx)
je     ca87 <_IO_stdin_used+0x11db>
jb     ca8a <_IO_stdin_used+0x11de>
popa
arpl   %sp,0x2e(%ebp)
or     (%eax),%al
add    %al,(%eax)
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    caa0 <_IO_stdin_used+0x11f4>
je     ca9d <_IO_stdin_used+0x11f1>
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%bx,%di)
and    %ch,0x6f(%esi)
je     ca5e <_IO_stdin_used+0x11b2>
jae    cab5 <_IO_stdin_used+0x1209>
jo     cab2 <_IO_stdin_used+0x1206>
outsl  %ds:(%esi),(%dx)
jb     cab9 <_IO_stdin_used+0x120d>
gs and %ah,%fs:%gs:0x74(%ecx)
and    %dh,0x72(%eax)
gs
jae    cab5 <_IO_stdin_used+0x1209>
outsb  %ds:(%esi),(%dx)
je     ca81 <_IO_stdin_used+0x11d5>
and    %bl,0x6f(%ecx)
jne    ca78 <_IO_stdin_used+0x11cc>
push   $0x20657661
je     cace <_IO_stdin_used+0x1222>
and    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    cad3 <_IO_stdin_used+0x1227>
je     ca87 <_IO_stdin_used+0x11db>
jbe    cad8 <_IO_stdin_used+0x122c>
insb   (%dx),%es:(%edi)
jne    cad9 <_IO_stdin_used+0x122d>
and    %ah,%gs:0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
jne    cae9 <_IO_stdin_used+0x123d>
je     ca9d <_IO_stdin_used+0x11f1>
imul   $0x2065636e,0x6f(%eax,%eiz,1),%esi
popa
addr16 popa
imul   $0xa,0x2e(%esi),%ebp
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
bound  %ebp,0x73(%ebx,%ebp,2)
imul   $0x74706f20,0x65(%edx),%edi
imul   $0x20736920,0x6e(%edi),%ebp
imul   $0x6465726f,0x6e(%edi),%esp
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    cb1f <_IO_stdin_used+0x1273>
and    %ch,0x74(%esi)
data16
jae    caed <_IO_stdin_used+0x1241>
xor    0x20(%edi),%esp
insl   (%dx),%es:(%edi)
jne    cb39 <_IO_stdin_used+0x128d>
je     cae8 <_IO_stdin_used+0x123c>
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     cb36 <_IO_stdin_used+0x128a>
and    %ch,0x74(%ecx)
or     %cs:(%eax),%al
add    %ch,0x6f(%esi)
and    %ch,0x6f(%ebp)
jb     cb44 <_IO_stdin_used+0x1298>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     cb5f <_IO_stdin_used+0x12b3>
and    %dh,0x20(%edi,%ebp,2)
jae    cb60 <_IO_stdin_used+0x12b4>
outsl  %ds:(%esi),(%dx)
jb     cb54 <_IO_stdin_used+0x12a8>
and    %ah,(%edi)
jne    cb66 <_IO_stdin_used+0x12ba>
gs
jb     cb63 <_IO_stdin_used+0x12b7>
popa
jo     cb69 <_IO_stdin_used+0x12bd>
imul   $0x706f2027,0x67(%esi),%ebp
je     cb6b <_IO_stdin_used+0x12bf>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ch,0x6f(%esi)
and    %ch,0x6f(%ebp)
jb     cb74 <_IO_stdin_used+0x12c8>
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     cb8f <_IO_stdin_used+0x12e3>
and    %dh,0x20(%edi,%ebp,2)
jae    cb90 <_IO_stdin_used+0x12e4>
outsl  %ds:(%esi),(%dx)
jb     cb84 <_IO_stdin_used+0x12d8>
and    %ah,(%edi)
js     cb84 <_IO_stdin_used+0x12d8>
je     cb99 <_IO_stdin_used+0x12ed>
jb     cb94 <_IO_stdin_used+0x12e8>
popa
jo     cb9a <_IO_stdin_used+0x12ee>
imul   $0x706f2027,0x67(%esi),%ebp
je     cb9c <_IO_stdin_used+0x12f0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
and    $0x46203a73,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    cbbf <_IO_stdin_used+0x1313>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    cbbf <_IO_stdin_used+0x1313>
and    %ah,%gs:(%edi)
and    $0x2773,%eax
add    %al,(%eax)
and    $0x59203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    cb84 <_IO_stdin_used+0x12d8>
insl   (%dx),%es:(%edi)
jne    cbda <_IO_stdin_used+0x132e>
je     cb89 <_IO_stdin_used+0x12dd>
jae    cbdb <_IO_stdin_used+0x132f>
arpl   %bp,%gs:0x66(%ecx)
jns    cb91 <_IO_stdin_used+0x12e5>
gs
js     cbd5 <_IO_stdin_used+0x1329>
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x646e6120,0x65(%ebx),%esp
and    %ah,0x78(%ebp)
popa
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6f(%ebp)
jne    cc06 <_IO_stdin_used+0x135a>
je     cbba <_IO_stdin_used+0x130e>
jo     cc0b <_IO_stdin_used+0x135f>
imul   $0xa2e,0x74(%esi),%ebp
add    %ah,0x4e203a73
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
jne    cc1d <_IO_stdin_used+0x1371>
je     cc21 <_IO_stdin_used+0x1375>
outsl  %ds:(%esi),(%dx)
imul   $0x20736920,0x74(%esi),%ebp
jae    cc2b <_IO_stdin_used+0x137f>
arpl   %bp,%gs:0x66(%ecx)
imul   $0xa2e,0x64(%ebp),%esp
add    %al,(%eax)
int    $0xbc
(bad)
jmp    *%eax
mov    $0xbcf3ffff,%esp
(bad)
incl   (%esi)
mov    $0xb65fffff,%ebp
(bad)
dec    %ebp
mov    $0xbd4effff,%esp
(bad)
lcall  *(%ecx)
mov    $0xbd41ffff,%ebp
(bad)
pushl  -0x44c00001(,%edi,4)
(bad)
decl   -0x1(%ebx,%edi,4)
ljmp   *-0x45(%edx)
(bad)
incl   -0x5f000045(%ebp)
mov    $0xbbbbffff,%ebx
(bad)
call   *%esi
mov    $0xbbe9ffff,%ebx
(bad)
(bad)
cld
mov    $0xbc0fffff,%ebx
(bad)
pushl  (%ecx)
mov    $0xbc44ffff,%esp
(bad)
call   *-0x44(%edi)
(bad)
ljmp   *-0x44(%edx)
(bad)
(bad)
jge    cbe6 <_IO_stdin_used+0x133a>
(bad)
call   *0x76ffffbc(%eax)
mov    $0xb989ffff,%ecx
(bad)
(bad)
mov    $0xcfffffb9,%esp
mov    $0xbd4effff,%ecx
(bad)
decl   -0x43(%esi)
(bad)
jmp    *0x1effffbc(%ebx)
mov    $0xb68cffff,%ecx
(bad)
pushl  (%ecx)
mov    $0xb963ffff,%ecx
(bad)
jmp    *%edi
mov    $0xba26ffff,%ecx
(bad)
ljmp   *-0x1(%edx,%edi,4)
(bad)
jg     cc24 <_IO_stdin_used+0x1378>
(bad)
decl   -0x60000046(%edi)
mov    $0xbae4ffff,%edx
(bad)
ljmp   *(%ebx,%edi,4)
(bad)
ljmp   *0x74(%esi)
data16
jae    cce0 <_IO_stdin_used+0x1434>
jo     cce4 <_IO_stdin_used+0x1438>
jb     ccf8 <_IO_stdin_used+0x144c>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     ccfe <_IO_stdin_used+0x1452>
imul   $0x696d0073,0x6e(%edi),%ebp
jae    cd06 <nf_ns_trusted_prefix+0x2>
imul   $0x74706f5f,0x67(%esi),%ebp
imul   $0x6c61765f,0x6e(%edi),%ebp
jne    cd08 <nf_ns_trusted_prefix+0x4>
add    %ah,0x6f(%edx)
addr16 jne cd1c <nf_ns_security_prefix+0x8>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     cd21 <nf_ns_system_prefix_len+0x1>
imul   $0x6c61765f,0x6e(%edi),%ebp
jne    cd1b <nf_ns_security_prefix+0x7>
add    %dh,0x61(%eax)
jb     cd2e <nf_ns_user_prefix_len+0x2>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    cd2f <nf_ns_user_prefix_len+0x3>
je     cd22 <nf_ns_system_prefix_len+0x2>
outsl  %ds:(%esi),(%dx)
jo     cd3a <xattr_ntfs_3g+0x4>
imul   $0x746e0073,0x6e(%edi),%ebp
data16
jae    cd2f <nf_ns_user_prefix_len+0x3>
jae    cd46 <xattr_ntfs_3g+0x10>
jb     cd3d <xattr_ntfs_3g+0x7>
outsb  %ds:(%esi),(%dx)
jae    cd3c <xattr_ntfs_3g+0x6>
jb     cd4d <xattr_ntfs_3g+0x17>
add    %ch,0x74(%esi)
data16
jae    cd3e <xattr_ntfs_3g+0x8>
jae    cd55 <xattr_ntfs_3g+0x1f>
jb     cd44 <xattr_ntfs_3g+0xe>
jo     cd55 <xattr_ntfs_3g+0x1f>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     cd4e <xattr_ntfs_3g+0x18>
outsl  %ds:(%esi),(%dx)
je     cd5a <xattr_ntfs_3g+0x24>
gs
jb     cd21 <nf_ns_system_prefix_len+0x1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
insl   (%dx),%es:(%edi)
jo     cd70 <xattr_ntfs_3g+0x3a>
jns    cd2a <nf_ns_system_prefix+0x6>
or     %al,(%eax)
je     cd78 <xattr_ntfs_3g+0x42>
jne    cd7b <xattr_ntfs_3g+0x45>
je     cd6f <xattr_ntfs_3g+0x39>
fs add %al,%cs:%fs:(%eax)
or     %eax,(%eax)
jae    cd7b <xattr_ntfs_3g+0x45>
arpl   %si,0x72(%ebp)
imul   $0x7000000,0x2e(%ecx,%edi,2),%esi
pop    %es
add    %al,(%eax)
jae    cd9f <xattr_ntfs_3g+0x69>
jae    cd9c <xattr_ntfs_3g+0x66>
gs
insl   (%dx),%es:(%edi)
add    %al,%cs:0x75000000
add    $0x75000000,%eax
jne    cda5 <xattr_ntfs_3g+0x6f>
gs
jb     cd63 <xattr_ntfs_3g+0x2d>
outsb  %ds:(%esi),(%dx)
je     cd9f <xattr_ntfs_3g+0x69>
jae    cd68 <xattr_ntfs_3g+0x32>
xor    0x2e(%edi),%esp
add    %ebx,(%ebx)
add    (%ebx),%edi
call   3c00cd4a <_end+0x3bffdc66>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
(bad)
incl   (%edx,%eax,1)
add    %al,(%eax)
rcrb   -0x1(%ebp)
ljmp   *(%eax)
sldt   (%eax)
inc    %eax
jno    cd5e <xattr_ntfs_3g+0x28>
ljmp   *(%eax)
add    (%eax),%al
add    %dl,0x58ffff71(%eax)
add    (%eax),%al
add    %ah,(%eax)
jb     cd6e <xattr_ntfs_3g+0x38>
incl   0x72e00000(%edx,%eax,1)
(bad)
inc    %esp
add    (%eax),%al
add    %dl,0x73(%eax)
(bad)
push   %eax
add    (%eax),%al
add    %dh,%al
jae    cd86 <xattr_ntfs_3g+0x50>
jmp    *(%eax)
add    (%eax),%eax
add    %ah,0x74(%eax)
(bad)
lcall  *0x3(%eax)
add    %al,(%eax)
lock jne cd96 <xattr_ntfs_3g+0x60>
pushl  0x30000003(%eax)
ja     cd9e <xattr_ntfs_3g+0x68>
push   %eax
add    (%eax),%eax
add    %dl,0x7a(%eax)
(bad)
pushl  (%eax)
add    $0x0,%al
add    %al,(%eax)
jl     cdae <xattr_ntfs_3g+0x78>
pushl  0x4(%eax)
add    %al,(%eax)
adc    %bh,-0x1(%edi,%edi,8)
test   %al,(%eax,%eax,1)
add    %dh,(%eax)
jge    cdbe <xattr_ntfs_3g+0x88>
inc    %esp
add    $0x0,%al
add    %ah,0x7d(%eax)
(bad)
push   %eax
add    $0x0,%al
add    %dl,%al
cmp    $0xffffffff,%edi
xor    %al,0x85e00000
(bad)
pushl  0x5(%eax)
add    %al,(%eax)
mov    0xb0ffff88,%al
add    $0x89200000,%eax
(bad)
(bad)
clc
add    $0x8a800000,%eax
(bad)
call   *0x6(%eax)
add    %al,(%eax)
and    %cl,0x6a8ffff(%ebp)
add    %al,(%eax)
adcb   $0x0,0x6ecffff(%edx)
add    %dh,(%eax)
xchg   %eax,%ebx
(bad)
incl   0x7(%eax)
add    %al,(%eax)
rclb   0x788ffff(%ebx)
add    %al,(%eax)
adcb   $0x0,0x7d0ff(%edi,%edi,8)
and    %dl,0x818ffff(%ebp)
add    %al,(%eax)
xor    %bl,0x858ffff(%ecx)
add    %al,(%eax)
sbbb   $0x0,0x8b0ffff(%ebx)
add    %al,(%eax)
sahf
(bad)
push   %eax
or     %al,(%eax)
add    %dh,0x48ffff9f(%eax)
or     %eax,(%eax)
add    %ah,(%eax)
mov    %al,0x9a0ffff
add    %al,(%eax)
nop
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
clc
or     %eax,(%eax)
add    %al,0x38ffffa7(%eax)
or     (%eax),%al
add    %dl,-0x6f000058(%eax)
or     (%eax),%al
add    %dl,%al
test   $0xae8ffff,%eax
add    %al,(%eax)
add    %ch,0xb40ffff(%ebx)
add    %al,(%eax)
mov    $0xb3,%al
(bad)
lcall  *-0x4ffffff5(%eax)
mov    $0xff,%ah
lcall  *(%eax)
or     $0x0,%al
add    %ah,%al
mov    $0xff,%ch
call   *0xc(%eax)
add    %al,(%eax)
add    %bh,0xca8ffff(%edx)
add    %al,(%eax)
and    %bh,0xd18ffff(%edi)
add    %al,(%eax)
loopne ce62 <xattr_ntfs_3g+0x12c>
(bad)
pushl  0xd(%eax)
add    %al,(%eax)
inc    %eax
(bad)
pushf
or     $0xc6200000,%eax
(bad)
(bad)
fmull  0xc9800000
(bad)
jmp    *(%eax)
push   %cs
add    %al,(%eax)
loopne ce87 <xattr_ntfs_3g+0x151>
(bad)
lcall  *0xe(%eax)
add    %al,(%eax)
inc    %eax
lret   $0xffff
nop
push   %cs
add    %al,(%eax)
mov    $0xcc,%al
(bad)
call   *%eax
push   %cs
add    %al,(%eax)
rcl    $0xff,%cl
lcall  *0xf(%eax)
add    %al,(%eax)
add    %dl,%bl
(bad)
pushl  -0x2ffffff1(%eax)
aam    $0xff
lcall  *(%eax,%edx,1)
add    %al,(%eax)
push   %eax
loopne ceee <xattr_ntfs_3g+0x1b8>
jmp    *0x10(%eax)
add    %al,(%eax)
loopne ced9 <xattr_ntfs_3g+0x1a3>
(bad)
jmp    *-0x4ffffff0(%eax)
out    %al,$0xff
jmp    *(%eax)
adc    %eax,(%eax)
add    %dh,(%eax)
call   1159cf09 <_end+0x1158de25>
add    %al,(%eax)
pusha
jmp    11c5cf11 <_end+0x11c4de2d>
add    %al,(%eax)
shr    $0xff,%dl
pushl  (%eax)
adc    (%eax),%al
add    %dh,(%eax)
jmp    cf1e <xattr_ntfs_3g+0x1e8>
ljmp   *0x0(%edx,%edx,1)
add    %al,-0x15(%eax)
(bad)
.byte 0xff
adcb   $0x0,(%edx)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     cf43 <xattr_ntfs_3g+0x20d>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
hlt
push   %edx
(bad)
call   *%eax
or     %al,(%eax)
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     cf63 <xattr_ntfs_3g+0x22d>
js     cf61 <xattr_ntfs_3g+0x22b>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sub    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%eax)
outsl  %ds:(%esi),(%dx)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cb5fdfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
jo     cf9e <xattr_ntfs_3g+0x268>
add    %al,(%eax)
xor    %ch,-0x1(%edi)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
push   %eax
add    0xc(%esi,%ecx,1),%bh
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pushf
add    %al,(%eax)
add    %dl,0xb3ffff(%edi,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x6f,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
faddl  (%eax)
add    %al,(%eax)
adc    $0x70,%al
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ah,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
or     %al,(%ecx)
add    %al,(%eax)
pop    %eax
jo     d03a <xattr_ntfs_3g+0x304>
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
pop    %esi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
enter  $0xff70,$0xff
imul   $0x0,(%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jbe    d08f <xattr_ntfs_3g+0x359>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
add    %dh,-0x1(%ecx)
incl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffd7,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
jno    d0e4 <xattr_ntfs_3g+0x3ae>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x1,$0x0
cmp    %dh,-0x1(%edx)
pushl  (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e4e
aad    $0xa
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
or     %al,(%edx)
add    %al,(%eax)
cmp    %dh,-0x1(%ebx)
call   *0x3
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
rorb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
dec    %eax
add    (%eax),%al
add    %bl,(%eax)
jbe    d17a <xattr_ntfs_3g+0x444>
ljmp   *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x1800e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %al,(%edx)
add    %al,(%eax)
mov    %dh,-0x1(%edi)
incl   0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pushf
add    (%eax),%al
add    %al,0x112ffff(%edi,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2d00e51
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,%ah
add    (%eax),%al
add    %ah,-0x1(%eax,%edi,2)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %cl,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     %al,(%ebx)
add    %al,(%eax)
push   $0x6cffff78
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x49,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %bl,0xeffff7e(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1d00e46
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    %al,(%ebx)
add    %al,(%eax)
push   $0xb6ffff80
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb4,0x2700e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %cl,%al
add    (%eax),%eax
add    %ch,%al
(bad)
(bad)
(bad)
js     d2fe <xattr_ntfs_3g+0x5c8>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    %eax,(%edx)
push   %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x10(%esi,%ecx,1),%edx
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%eax)
add    $0x0,%al
add    %ah,(%eax)
cmp    $0xffffffff,%edi
pop    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x55,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,0x4(%eax)
add    %al,(%eax)
sub    %al,0x297ff(%edi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x49,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
rolb   $0x0,(%eax,%eax,1)
jo     d378 <xattr_ntfs_3g+0x642>
(bad)
lcall  *0x5(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
jle    d417 <xattr_ntfs_3g+0x6e1>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %al,-0x74740000(,%eax,1)
(bad)
ljmp   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
jnp    d462 <xattr_ntfs_3g+0x72c>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0x14(%esi,%ecx,1),%edx
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %bl,0x5(%eax)
add    %al,(%eax)
call   9900d418 <_end+0x98ffe334>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
add    %eax,(%edx)
jae    d4b1 <xattr_ntfs_3g+0x77b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x10(%esi,%ecx,1),%edx
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ah,0x40000005(%eax)
mov    %?,%edi
ljmp   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
add    %eax,(%edx)
jl     d4f9 <xattr_ntfs_3g+0x7c3>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0x10(%esi,%ecx,1),%edx
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ch,%al
add    $0x8ca80000,%eax
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
add    %eax,(%edx)
jp     d541 <xattr_ntfs_3g+0x80b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x10(%esi,%ecx,1),%edx
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    %al,(%esi)
add    %al,(%eax)
add    %cl,0x40affff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
orb    $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,0x6(%eax)
add    %al,(%eax)
rclb   0x246ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x6,$0x0
enter  $0xff92,$0xff
jp     d600 <xattr_ntfs_3g+0x8ca>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
pop    %es
add    %al,(%eax)
or     %dl,0x1aaffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x7(%eax)
add    %al,(%eax)
pusha
xchg   %eax,%esi
(bad)
ljmp   *0x2(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,0x78000007(%eax)
cwtl
(bad)
ljmp   *0x2(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x42,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
fisttpll (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
adc    %cl,(%eax)
add    %al,(%eax)
nop
lcall  $0x0,$0x2ecffff
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffab,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,0x8(%eax)
add    %al,(%eax)
inc    %eax
popf
(bad)
incl   (%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x2,0x1c00e46
lea    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,-0x7fffff8(%eax)
popf
(bad)
(bad)
add    %eax,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
or     %eax,(%eax)
add    %ah,%al
sahf
(bad)
ljmp   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x9(%eax)
add    %al,(%eax)
mov    $0xacffff9f,%eax
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1e00e51
mov    $0xa,%ch
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
pop    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
jl     d8da <xattr_ntfs_3g+0xba4>
add    %al,(%eax)
mov    $0x9,%al
add    %al,(%eax)
adc    %ch,0xfdffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x49,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
jno    d924 <xattr_ntfs_3g+0xbee>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
xor    %cl,(%edx)
add    %al,(%eax)
nop
test   $0xff,%al
jmp    *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
push   %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,0xa(%eax)
add    %al,(%eax)
mov    %ch,0x416ffff(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x23,0x3700e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %al,%al
or     (%eax),%al
add    %dl,-0x53(%eax)
(bad)
call   *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
push   %es
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
add    %ecx,%cs:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,(%eax)
or     (%eax),%eax
add    %al,(%eax)
mov    $0xff,%dl
(bad)
mov    $0x5,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x2700e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
fisttp (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x6800000b(%eax)
mov    $0xff,%bh
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xb,%ah
add    %al,(%eax)
pushf
mov    $0xff,%bh
call   *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x65,0x1900e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,%ah
or     (%eax),%eax
add    %bh,(%eax,%edi,4)
(bad)
lcall  *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
fwait
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    %cl,(%eax,%eax,1)
add    %bl,-0x45(%eax)
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
jo     dbaa <xattr_ntfs_3g+0xe74>
add    %al,(%eax)
cmpb   $0x0,0x54ffff(%ebx)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
test   $0xc,%al
add    %al,(%eax)
test   $0xbb,%al
(bad)
ljmp   *0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,%al
or     $0x0,%al
add    %bl,%al
mov    $0x50bffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e4e
mov    $0xa,%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
or     $0x4ea00000,%eax
(bad)
(bad)
(bad)
adc    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30aba02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,0xd(%eax)
add    %al,(%eax)
pusha
ret    $0xffff
cmp    %al,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0xc8000000
or     $0xc3480000,%eax
(bad)
dec    %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe1,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,(%esi,%ecx,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
(bad)
(bad)
jl     dd75 <xattr_ntfs_3g+0x103f>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
xchg   %eax,%esi
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
js     ddb4 <xattr_ntfs_3g+0x107e>
add    %al,(%eax)
call   8c00dd7c <_end+0x8bffec98>
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edi
add    %bh,0x3800000e(%eax)
sar    %cl,%edi
dec    %edx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x45,0x3700e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
cmp    %cl,(%edi)
add    %al,(%eax)
mov    %dl,%ch
(bad)
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
jo     dead <xattr_ntfs_3g+0x1177>
add    %al,(%eax)
rcl    %dh
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
fmull  (%edi)
add    %al,(%eax)
xchg   %eax,%esp
xlat   %ds:(%ebx)
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     df33 <xattr_ntfs_3g+0x11fd>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    df6a <xattr_ntfs_3g+0x1234>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,0x10(%eax)
add    %al,(%eax)
mov    %bl,%al
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,-0x27440000(%eax,%edx,1)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,-0x47fffff0(%eax)
fdivr  %st(7),%st
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,%ds:(%eax)
lock
.byte 0x3d
add    %al,(%eax)
xchg   %eax,%edx
movl   $0x100,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
lcall  $0x0,$0xc7
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
lahf
movl   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
movl   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
scas   %es:(%edi),%eax
movl   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
xor    $0xba,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
mov    $0xc7,%bh
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
ret    $0xc7
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,0x30000c7(%edi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%al
movl   $0x400,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
aam    $0xc7
add    %al,(%eax)
add    $0x1000000,%eax
add    %al,(%eax)
add    %bl,%ah
movl   $0x600,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%bl
movl   $0x700,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,-0x46(%ebx)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %ebx
mov    $0x90000,%edx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
out    %eax,(%dx)
movl   $0xa00,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,%bl
movl   $0xb00,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
stc
movl   $0xc00,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
inc    %edi
add    %al,(%eax)
or     $0x4000000,%eax
add    %al,(%eax)
add    %al,0xe0000c8
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
enter  $0x0,$0xf
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,0x100000c8
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,(%eax,%ecx,8)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sub    %eax,%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
cmp    %al,%cl
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %esi
enter  $0x0,$0x14
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,-0x38(%esi)
add    %al,(%eax)
adc    $0x1000000,%eax
add    %al,(%eax)
add    %dl,0x0(%eax,%ecx,8)
add    %dl,(%esi)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,-0x38(%edx)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,-0x38(%ebx)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
imul   $0x190000,%eax,%ecx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jae    eb42 <optionlist+0x102>
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
test   %cl,%al
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
mov    %ecx,%eax
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
nop
enter  $0x0,$0x1c
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,0x1d0000c8(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %ah,0x1e0000(%eax,%ecx,8)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
mov    %al,0x1f0000c8
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,0x200000c8(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %bh,0x210000c8(%ebp)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%al
enter  $0x0,$0x22
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x230000ba(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%bh
enter  $0x0,$0x24
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bl,%cl
enter  $0x0,$0x25
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,%cl
enter  $0x0,$0x26
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %ch,%cl
enter  $0x0,$0x27
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,%cl
enter  $0x0,$0x28
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,%ch
enter  $0x0,$0x29
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,(%eax)
leave
add    %al,(%eax)
sub    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
adc    $0xc9,%al
add    %al,(%eax)
sub    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
and    %ecx,%ecx
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sub    $0x1000002,%eax
add    %al,(%eax)
add    %bl,%ah
pop    %es
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    $0x8,%al
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
adc    $0x22,%al
add    %al,(%eax)
or     $0x94000000,%eax
mov    $0x190000,%eax
add    %al,(%eax)
(bad)
jmp    1becae <_end+0x1afbca>
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
enter  $0xe9,$0x0
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0x1c000000
or     $0x60000,%eax
add    %al,(%eax)
pop    %esp
add    (%eax),%al
add    %cl,(%edx)
add    %al,(%eax)
add    %bh,%ch
or     (%eax),%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x20000(%ebp,%ebp,8)
add    %al,(%eax)
pusha
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dh,0x110000(%ebp,%ebx,1)
add    %al,(%eax)
xchg   %eax,%esp
sbb    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%eax
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x74(%edi)
sbb    %eax,(%eax)
add    %bh,%bh
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x1a(%edi)
sbb    %al,(%eax)
add    %bh,%dl
(bad)
ljmp   *0x56(%edi)
je     ed72 <optionlist+0x332>
add    %al,(%eax)
push   %esi
and    (%eax),%al
add    %ah,0x22(%esi)
add    %al,(%eax)
jbe    edbc <optionlist+0x37c>
add    %al,(%eax)
xchg   %ah,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
and    (%eax),%al
add    %ah,-0x49ffffde(%esi)
and    (%eax),%al
add    %al,%dh
and    (%eax),%al
add    %dl,%dh
and    (%eax),%al
add    %ah,%dh
and    (%eax),%al
add    %dh,%dh
and    (%eax),%al
add    %al,(%esi)
and    (%eax),%eax
add    %dl,(%esi)
and    (%eax),%eax
add    %ah,(%esi)
and    (%eax),%eax
add    %dh,(%esi)
and    (%eax),%eax
add    %al,0x23(%esi)
add    %al,(%eax)
push   %esi
and    (%eax),%eax
add    %ah,0x23(%esi)
add    %al,(%eax)
jbe    edfd <optionlist+0x3bd>
add    %al,(%eax)
xchg   %ah,(%ebx)
add    %al,(%eax)
xchg   %eax,%esi
and    (%eax),%eax
add    %ah,-0x49ffffdd(%esi)
and    (%eax),%eax
add    %al,%dh
and    (%eax),%eax
add    %dl,%dh
and    (%eax),%eax
add    %ah,%dh
and    (%eax),%eax
add    %dh,%dh
and    (%eax),%eax
add    %al,(%esi)
and    $0x0,%al
add    %dl,(%esi)
and    $0x0,%al
add    %ah,(%esi)
and    $0x0,%al
add    %dh,(%esi)
and    $0x0,%al
add    %al,0x24(%esi)
add    %al,(%eax)
push   %esi
and    $0x0,%al
add    %ah,0x24(%esi)
add    %al,(%eax)
jbe    ee3e <optionlist+0x3fe>
add    %al,(%eax)
xchg   %ah,(%eax,%eax,1)
add    %dl,-0x59ffffdc(%esi)
and    $0x0,%al
add    %dh,-0x39ffffdc(%esi)
and    $0x0,%al
add    %dl,%dh
and    $0x0,%al
add    %ah,%dh
and    $0x0,%al
add    %dh,%dh
and    $0x0,%al
add    %al,(%esi)
and    $0x25160000,%eax
add    %al,(%eax)
es
and    $0x25360000,%eax
add    %al,(%eax)
inc    %esi
and    $0x25560000,%eax
add    %al,(%eax)
and    $0x0,%ax
jbe    ee7f <optionlist+0x43f>
add    %al,(%eax)
xchg   %ah,0x25960000
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
and    $0x25b60000,%eax
add    %al,(%eax)
(bad)
and    $0x25d60000,%eax
add    %al,(%eax)
out    %al,$0x25
add    %al,(%eax)
mulb   0x26060000
add    %al,(%eax)
push   %ss
add    %al,%es:(%eax)
es add %al,%es:(%eax)
ss add %al,%ss:%es:(%eax)
inc    %esi
add    %al,%es:(%eax)
push   %esi
add    %al,%es:(%eax)
data16
add    %al,%es:(%eax)
jbe    eec0 <optionlist+0x480>
add    %al,(%eax)
xchg   %ah,(%esi)
add    %al,(%eax)
xchg   %eax,%esi
add    %al,%es:(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,%es:(%eax)
mov    $0x26,%dh
add    %al,(%eax)
(bad)
add    %al,%es:(%eax)
(bad)
add    %al,%es:(%eax)
out    %al,$0x26
add    %al,(%eax)
mulb   (%esi)
add    %al,(%eax)
push   %es
daa
add    %al,(%eax)
push   %ss
daa
add    %al,(%eax)
es
daa
add    %al,(%eax)
ss
daa
add    %al,(%eax)
inc    %esi
daa
add    %al,(%eax)
push   %esi
daa
add    %al,(%eax)
data16
daa
add    %al,(%eax)
jbe    ef01 <optionlist+0x4c1>
add    %al,(%eax)
xchg   %ah,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
daa
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
daa
add    %al,(%eax)
mov    $0x27,%dh
add    %al,(%eax)
(bad)
daa
add    %al,(%eax)
(bad)
daa
add    %al,(%eax)
out    %al,$0x27
add    %al,(%eax)
mulb   (%edi)
add    %al,(%eax)
push   %es
sub    %al,(%eax)
add    %dl,(%esi)
sub    %al,(%eax)
add    %ah,(%esi)
sub    %al,(%eax)
add    %dh,(%esi)
sub    %al,(%eax)
add    %al,0x28(%esi)
add    %al,(%eax)
push   %esi
sub    %al,(%eax)
add    %ah,0x28(%esi)
add    %al,(%eax)
jbe    ef42 <optionlist+0x502>
add    %al,(%eax)
xchg   %ch,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
sub    %al,(%eax)
add    %ah,-0x49ffffd8(%esi)
sub    %al,(%eax)
add    %al,%dh
sub    %al,(%eax)
add    %dl,%dh
sub    %al,(%eax)
add    %ah,%dh
sub    %al,(%eax)
add    %dh,%dh
sub    %al,(%eax)
add    %al,(%esi)
sub    %eax,(%eax)
add    %dl,(%esi)
sub    %eax,(%eax)
add    %ah,(%esi)
sub    %eax,(%eax)
add    %dh,(%esi)
sub    %eax,(%eax)
add    %al,0x29(%esi)
add    %al,(%eax)
push   %esi
sub    %eax,(%eax)
add    %ah,0x29(%esi)
add    %al,(%eax)
jbe    ef83 <optionlist+0x543>
add    %al,(%eax)
xchg   %ch,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
sub    %eax,(%eax)
add    %ah,-0x49ffffd7(%esi)
sub    %eax,(%eax)
add    %al,%dh
sub    %eax,(%eax)
add    %dl,%dh
sub    %eax,(%eax)
add    %ah,%dh
sub    %eax,(%eax)
add    %dh,%dh
sub    %eax,(%eax)
add    %al,(%esi)
sub    (%eax),%al
add    %dl,(%esi)
sub    (%eax),%al
add    %ah,(%esi)
sub    (%eax),%al
add    %dh,(%esi)
sub    (%eax),%al
add    %al,0x2a(%esi)
add    %al,(%eax)
push   %esi
sub    (%eax),%al
add    %ah,0x2a(%esi)
add    %al,(%eax)
jbe    efc4 <optionlist+0x584>
add    %al,(%eax)
xchg   %ch,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
sub    (%eax),%al
add    %ah,-0x49ffffd6(%esi)
sub    (%eax),%al
add    %al,%dh
sub    (%eax),%al
add    %dl,%dh
sub    (%eax),%al
add    %ah,%dh
sub    (%eax),%al
add    %dh,%dh
sub    (%eax),%al
add    %al,(%esi)
sub    (%eax),%eax
add    %dl,(%eax)
sub    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    $0xf0,%al
add    %al,(%eax)
cmpb   $0x0,(%esi)
add    %al,0x49(%eax)
add    %al,(%eax)
adc    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%al
je     f033 <optionlist+0x5f3>
add    %al,0x78(%eax)
add    %al,(%eax)
(bad)
jno    f03b <optionlist+0x5fb>
add    %al,%al
popa
add    %al,(%eax)
adc    %ah,0x0(%ecx)
add    %ah,(%eax)
xchg   %eax,%edi
add    %al,(%eax)
rclb   $0x0,0x60700000(%esi)
add    %dh,%al
cltd
add    %al,(%eax)
loopne f0ab <optionlist+0x66b>
add    %al,(%eax)
lock insb (%dx),%es:(%edi)
add    %al,(%eax)
pusha
bound  %eax,(%eax)
add    %ah,0x6f(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adcb   $0x0,-0x6de00000(%edi)
add    %al,0x6b(%eax)
add    %al,(%eax)
shrb   $0x0,0x0(%eax)
xor    %al,0x0(%ecx)
add    %ah,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
xor    %al,0x0(%ebx)
add    %ah,-0x74(%eax)
add    %al,(%eax)
inc    %eax
xchg   %eax,(%eax)
add    %dh,0x66(%eax)
add    %al,(%eax)
and    %al,0x56600000(%ebx)
add    %al,(%eax)
rcrb   $0x0,0x0(%edi)
rclb   $0x0,0x0(%edi)
repnz
.byte 0xba
xor    %esi,%ss:(%ebx)
xor    $0x34,%al
gs
data16
xor    $0x64,%al
xor    %dh,(%esi)
xor    (%eax),%edi
aaa
arpl   %si,0x34323332
cmp    %esi,%gs:(%ecx)
xor    (%ecx),%si
xor    %gs:0x39(%edx,%eiz,2),%esp
xor    %dh,(%ebx,%eiz,2)
aaa
cmp    %bh,(%ecx)
cs fs bound %si,%cs:%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
xchg   %eax,%esp
cmpsl  %es:(%edi),%ds:(%esi)
.byte 0xb8
