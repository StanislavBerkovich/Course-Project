das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bh,0x69e6ac0f(%eax)
mov    $0xc92763b4,%ebp
pushf
sub    %bh,0x4b55abac(%esi)
pop    %esi
.byte 0x29
.byte 0x87
add    (%eax),%eax
add    %al,(%eax)
add    %al,%ds:(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,0x0(%eax)
mov    $0x21,%dl
mov    %ds,(%edi)
or     %al,0x3(%eax,%eax,1)
mov    0x3e000004,%al
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
dec    %ecx
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x297c92e3,%edx
sbb    $0x50bc1c8c,%eax
jbe    8048186 <_init-0xbda>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804819d <_init-0xbc3>
dec    %ebx
jecxz  80481b4 <_init-0xbac>
fdivs  0x58(%ecx)
sbb    $0x96,%al
mov    0x62e49789,%al
inc    %ecx
cmc
mov    $0xea0ef18d,%ecx
shr    %cl,%edi
push   %cs
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %esi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     8048473 <_init-0x8ed>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
flds   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loope  80484d3 <_init-0x88d>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pop    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
lret
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     $0x60000003,%eax
add    %eax,0x8
add    %dl,(%eax)
add    %bl,(%eax)
add    %ah,(%eax)
add    (%eax),%eax
add    %dl,(%ebx,%eax,1)
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ah,-0x3fffffff(%esi)
add    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,%ch
add    (%eax),%al
add    %ah,0x1(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,(%esi)
add    (%eax),%al
add    %ah,0x5(%ecx,%eax,1)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
lock add (%eax),%al
add    %al,0x4080501(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,0x24000000(%edi)
rolb   %cl,(%eax,%ecx,1)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
lldt   (%ebx,%eax,1)
add    %al,(%eax)
pusha
add    %eax,0x8
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ah,(%eax)
add    %eax,(%eax)
add    %al,0x4080501(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ch,0x2(%ecx)
add    %al,(%eax)
pusha
add    %eax,0x408
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ch,0x0(%edx)
add    %al,(%eax)
pusha
lea    (%eax,%ecx,1),%eax
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
jg     80486a2 <_init-0x6be>
add    %al,(%eax)
or     $0xd2,%al
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %dl,%bl
add    %al,(%eax)
add    %ah,0x4080501(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,(%edx,%eax,1)
add    %al,(%eax)
les    (%ecx),%eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
jae    804873b <_init-0x625>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     804874f <_init-0x611>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804877a <_init-0x5e6>
popa
jb     804877d <_init-0x5e3>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    804876f <_init-0x5f1>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048790 <_init-0x5d0>
gs
jae    8048720 <_init-0x640>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     804878c <_init-0x5d4>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x65730074,0x69(%esi),%ebp
je     80487aa <_init-0x5b6>
jae    80487a9 <_init-0x5b7>
jb     80487ad <_init-0x5b3>
popa
je     80487b0 <_init-0x5b0>
arpl   %bp,0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
arpl   %bp,(%esi)
jae    80487cb <_init-0x595>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80487d9 <_init-0x587>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    80487e6 <_init-0x57a>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jo     80487f2 <_init-0x56e>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     80487f9 <_init-0x567>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     804880b <_init-0x555>
outsl  %ds:(%esi),(%dx)
ja     80487fd <_init-0x563>
add    %dh,0x74(%ebx)
jb     804880d <_init-0x553>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048810 <_init-0x550>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048820 <_init-0x540>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     804882c <_init-0x534>
gs
js     804882f <_init-0x531>
add    %ah,0x72(%ebp)
jb     804882f <_init-0x531>
jb     80487c2 <_init-0x59e>
pop    %edi
pop    %edi
jae    804883a <_init-0x526>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     80487ea <_init-0x576>
pop    %edi
gs
js     8048857 <_init-0x509>
je     80487f0 <_init-0x570>
jo     8048864 <_init-0x4fc>
outsl  %ds:(%esi),(%dx)
addr16 jb 8048857 <_init-0x509>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048880 <_init-0x4e0>
gs
jb     8048884 <_init-0x4dc>
pop    %edi
popaw
imul   $0x7974635f,0x5f(%eax,%eax,1),%ebp
jo     8048882 <_init-0x4de>
pop    %edi
addr16
gs
je     8048881 <_init-0x4df>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    804889a <_init-0x4c6>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     804882d <_init-0x533>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80488aa <_init-0x4b6>
jb     80488a4 <_init-0x4bc>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     80488a4 <_init-0x4bc>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    80488ac <_init-0x4b4>
je     8048849 <_init-0x517>
pop    %edi
pop    %edi
gs
jb     80488c0 <_init-0x4a0>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
data16
jo     80488df <_init-0x481>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     80488dd <_init-0x483>
outsl  %ds:(%esi),(%dx)
jne    80488f0 <_init-0x470>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80488f8 <_init-0x468>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    804890a <_init-0x456>
popa
jae    804890b <_init-0x455>
add    %ch,0x62(%ebp)
jae    804890e <_init-0x452>
outsb  %ds:(%esi),(%dx)
imul   $0x6c66755f,0x5f(%eax,%eax,1),%esi
outsl  %ds:(%esi),(%dx)
ja     80488b1 <_init-0x4af>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     8048934 <_init-0x42c>
je     8048924 <_init-0x43c>
je     80488fb <_init-0x465>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     804893e <_init-0x422>
outsb  %ds:(%esi),(%dx)
jbe    80488dc <_init-0x484>
outsl  %ds:(%esi),(%dx)
jo     8048953 <_init-0x40d>
popa
jb     8048949 <_init-0x417>
add    %bl,0x5f(%edi)
data16
jb     804894d <_init-0x413>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     8048966 <_init-0x3fa>
add    %ah,0x73(%esi)
arpl   %sp,0x6e(%ecx)
data16
add    %ah,0x65(%edi)
je     804896f <_init-0x3f1>
jo     8048976 <_init-0x3ea>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
js     8048979 <_init-0x3e7>
imul   $0x64,0x6f(%esi),%ebp
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x77(%esi)
jb     8048985 <_init-0x3db>
je     8048983 <_init-0x3dd>
add    %bl,0x5f(%edi)
data16
jo     8048989 <_init-0x3d7>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048999 <_init-0x3c7>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 80489a0 <_init-0x3c0>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     80489c5 <_init-0x39b>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     80489c1 <_init-0x39f>
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     80489c9 <_init-0x397>
js     80489da <_init-0x386>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x69666b6d,0x0(%esi),%ebp
outsw  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     80489db <_init-0x385>
insl   (%dx),%es:(%edi)
jo     804897b <_init-0x3e5>
pop    %edi
pop    %edi
jae    80489f3 <_init-0x36d>
jb     80489f5 <_init-0x36b>
outsl  %ds:(%esi),(%dx)
jne    80489f0 <_init-0x370>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048a0f <_init-0x351>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x74757066,0x0(%esi),%ebp
jae    8048a06 <_init-0x35a>
jne    8048a17 <_init-0x349>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     8048a2b <_init-0x335>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048a36 <_init-0x32a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8048a3a <_init-0x326>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048a3e <_init-0x322>
js     8048a44 <_init-0x31c>
je     80489dd <_init-0x383>
pop    %edi
gs
fs
popa
je     8048a44 <_init-0x31c>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8048a60 <_init-0x300>
popa
jb     8048a63 <_init-0x2fd>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x6000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000000
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000200
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %eax,(%eax)
pop    %es
add    %al,0x10000000(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
and    $0x10000003,%eax
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edi)
add    %ch,(%edi)
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x60000,(%ecx),%ecx
cmp    (%ebx),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x50000,%eax
inc    %edi
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x351,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
pop    %ebx
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
add    %gs:(%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
cld
incl   (%eax,%ecx,1)
push   %es
sbb    $0x0,%al
add    %ah,0x1(%eax)
add    $0x410508,%eax
add    %ah,0x5(%ecx,%eax,1)
or     %al,0x80000042
add    %eax,0x430508
add    %ah,0x5080501(%eax)
dec    %edx
add    %al,(%eax)
rolb   $0x5,(%ecx)
or     %al,0xc4000040
add    %eax,0x4b0508
or     $0x0,%al
add    $0x10708,%eax
add    %dl,(%eax)
add    %al,0x20708
add    %dl,(%eax,%eax,1)
add    $0x40708,%eax
add    %bl,(%eax)
add    %al,0x50708
add    %bl,(%eax,%eax,1)
add    $0x60708,%eax
add    %ah,(%eax)
add    %al,0x70708
add    %ah,(%eax,%eax,1)
add    $0x80708,%eax
add    %ch,(%eax)
add    %al,0x90708
add    %ch,(%eax,%eax,1)
add    $0xa0708,%eax
add    %dh,(%eax)
add    %al,0xb0708
add    %dh,(%eax,%eax,1)
add    $0xc0708,%eax
add    %bh,(%eax)
add    %al,0xd0708
add    %bh,(%eax,%eax,1)
add    $0xe0708,%eax
add    %al,0x0(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%eax,1)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x0(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%eax,1)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x0(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%eax,1)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x0(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%eax,1)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
add    %al,0x170708
add    %ah,0x5(%eax,%eax,1)
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,0x0(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%eax,1)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x0(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%eax,1)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x0(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%eax,1)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
addb   $0x5,(%eax)
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
test   %al,(%eax)
add    $0x200708,%eax
add    %cl,0x7080500(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%eax,1)
add    %al,(%eax)
nop
add    %al,0x230708
add    %dl,0x24070805(%eax,%eax,1)
add    %al,(%eax)
cwtl
add    %al,0x250708
add    %bl,0x26070805(%eax,%eax,1)
add    %al,(%eax)
mov    0x7080500,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,0x280708
add    %ch,0x7080500(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070805(%eax,%eax,1)
add    %al,(%eax)
mov    $0x0,%al
add    $0x2b0708,%eax
add    %dh,0x2c070805(%eax,%eax,1)
add    %al,(%eax)
mov    $0x7080500,%eax
sub    $0xbc0000,%eax
add    $0x2e0708,%eax
add    %al,%al
add    %al,0x300708
add    %al,%ah
add    %al,0x310708
add    %cl,%al
add    %al,0x320708
add    %cl,%ah
add    %al,0x340708
add    %dl,%al
add    %al,0x350708
add    %dl,%ah
add    %al,0x360708
add    %bl,%al
add    %al,0x370708
add    %bl,%ah
add    %al,0x380708
add    %ah,%al
add    %al,0x390708
add    %ah,%ah
add    %al,0x3a0708
add    %ch,%al
add    %al,0x3b0708
add    %ch,%ah
add    %al,0x3c0708
add    %dh,%al
add    %al,0x3d0708
push   %ebx
sub    $0x8,%esp
call   8049820 <calloc@plt+0x6f0>
add    $0x7297,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048d7e <_init+0x1e>
call   8048f40 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8050004
jmp    *0x8050008
add    %al,(%eax)
jmp    *0x805000c
push   $0x0
jmp    8048d90 <_init+0x30>
jmp    *0x8050010
push   $0x8
jmp    8048d90 <_init+0x30>
jmp    *0x8050014
push   $0x10
jmp    8048d90 <_init+0x30>
jmp    *0x8050018
push   $0x18
jmp    8048d90 <_init+0x30>
jmp    *0x805001c
push   $0x20
jmp    8048d90 <_init+0x30>
jmp    *0x8050020
push   $0x28
jmp    8048d90 <_init+0x30>
jmp    *0x8050024
push   $0x30
jmp    8048d90 <_init+0x30>
jmp    *0x8050028
push   $0x38
jmp    8048d90 <_init+0x30>
jmp    *0x805002c
push   $0x40
jmp    8048d90 <_init+0x30>
jmp    *0x8050030
push   $0x48
jmp    8048d90 <_init+0x30>
jmp    *0x8050034
push   $0x50
jmp    8048d90 <_init+0x30>
jmp    *0x8050038
push   $0x58
jmp    8048d90 <_init+0x30>
jmp    *0x805003c
push   $0x60
jmp    8048d90 <_init+0x30>
jmp    *0x8050040
push   $0x68
jmp    8048d90 <_init+0x30>
jmp    *0x8050044
push   $0x70
jmp    8048d90 <_init+0x30>
jmp    *0x8050048
push   $0x78
jmp    8048d90 <_init+0x30>
jmp    *0x805004c
push   $0x80
jmp    8048d90 <_init+0x30>
jmp    *0x8050050
push   $0x88
jmp    8048d90 <_init+0x30>
jmp    *0x8050054
push   $0x90
jmp    8048d90 <_init+0x30>
jmp    *0x8050058
push   $0x98
jmp    8048d90 <_init+0x30>
jmp    *0x805005c
push   $0xa0
jmp    8048d90 <_init+0x30>
jmp    *0x8050060
push   $0xa8
jmp    8048d90 <_init+0x30>
jmp    *0x8050064
push   $0xb0
jmp    8048d90 <_init+0x30>
jmp    *0x8050068
push   $0xb8
jmp    8048d90 <_init+0x30>
jmp    *0x805006c
push   $0xc0
jmp    8048d90 <_init+0x30>
jmp    *0x8050070
push   $0xc8
jmp    8048d90 <_init+0x30>
jmp    *0x8050074
push   $0xd0
jmp    8048d90 <_init+0x30>
jmp    *0x8050078
push   $0xd8
jmp    8048d90 <_init+0x30>
jmp    *0x805007c
push   $0xe0
jmp    8048d90 <_init+0x30>
jmp    *0x8050080
push   $0xe8
jmp    8048d90 <_init+0x30>
jmp    *0x8050084
push   $0xf0
jmp    8048d90 <_init+0x30>
jmp    *0x8050088
push   $0xf8
jmp    8048d90 <_init+0x30>
jmp    *0x805008c
push   $0x100
jmp    8048d90 <_init+0x30>
jmp    *0x8050090
push   $0x108
jmp    8048d90 <_init+0x30>
jmp    *0x8050094
push   $0x110
jmp    8048d90 <_init+0x30>
jmp    *0x8050098
push   $0x118
jmp    8048d90 <_init+0x30>
jmp    *0x805009c
push   $0x120
jmp    8048d90 <_init+0x30>
jmp    *0x80500a0
push   $0x128
jmp    8048d90 <_init+0x30>
jmp    *0x80500a4
push   $0x130
jmp    8048d90 <_init+0x30>
jmp    *0x80500a8
push   $0x138
jmp    8048d90 <_init+0x30>
jmp    *0x80500ac
push   $0x140
jmp    8048d90 <_init+0x30>
jmp    *0x80500b0
push   $0x148
jmp    8048d90 <_init+0x30>
jmp    *0x80500b4
push   $0x150
jmp    8048d90 <_init+0x30>
jmp    *0x80500b8
push   $0x158
jmp    8048d90 <_init+0x30>
jmp    *0x80500bc
push   $0x160
jmp    8048d90 <_init+0x30>
jmp    *0x80500c0
push   $0x168
jmp    8048d90 <_init+0x30>
jmp    *0x80500c4
push   $0x170
jmp    8048d90 <_init+0x30>
jmp    *0x80500c8
push   $0x178
jmp    8048d90 <_init+0x30>
jmp    *0x80500cc
push   $0x180
jmp    8048d90 <_init+0x30>
jmp    *0x80500d0
push   $0x188
jmp    8048d90 <_init+0x30>
jmp    *0x80500d4
push   $0x190
jmp    8048d90 <_init+0x30>
jmp    *0x80500d8
push   $0x198
jmp    8048d90 <_init+0x30>
jmp    *0x80500dc
push   $0x1a0
jmp    8048d90 <_init+0x30>
jmp    *0x80500e0
push   $0x1a8
jmp    8048d90 <_init+0x30>
jmp    *0x80500e4
push   $0x1b0
jmp    8048d90 <_init+0x30>
jmp    *0x80500e8
push   $0x1b8
jmp    8048d90 <_init+0x30>
jmp    *0x80500ec
push   $0x1c0
jmp    8048d90 <_init+0x30>
jmp    *0x80500f0
push   $0x1c8
jmp    8048d90 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x50,%esp
mov    0xc(%ebp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804a310 <calloc@plt+0x11e0>
movl   $0x804de3d,0x4(%esp)
movl   $0x6,(%esp)
call   8049050 <setlocale@plt>
movl   $0x804d89c,0x4(%esp)
movl   $0x804d88e,(%esp)
call   8049090 <bindtextdomain@plt>
movl   $0x804d88e,(%esp)
call   8048e70 <textdomain@plt>
movl   $0x8049ca0,(%esp)
call   804d1d0 <calloc@plt+0x40a0>
mov    0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x804d960,0xc(%esp)
movl   $0x804d8be,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048f80 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049323 <calloc@plt+0x1f3>
cmp    $0xffffff7e,%eax
je     8049317 <calloc@plt+0x1e7>
jle    80491fb <calloc@plt+0xcb>
cmp    $0x5a,%eax
lea    0x0(%esi),%esi
je     80491f3 <calloc@plt+0xc3>
cmp    $0x6d,%eax
jne    804930b <calloc@plt+0x1db>
mov    0x80501c4,%esi
jmp    804919d <calloc@plt+0x6d>
mov    0x80501c4,%edi
jmp    804919d <calloc@plt+0x6d>
cmp    $0xffffff7d,%eax
jne    804930b <calloc@plt+0x1db>
mov    0x8050108,%eax
movl   $0x0,0x14(%esp)
movl   $0x804d8ae,0x10(%esp)
movl   $0x804d88a,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80501c0,%eax
movl   $0x804d843,0x4(%esp)
mov    %eax,(%esp)
call   804be60 <calloc@plt+0x2d30>
movl   $0x0,(%esp)
call   8048f50 <exit@plt>
lea    0x1(%edx),%eax
mov    $0x4,%esi
cmp    %eax,0x8(%ebp)
jle    8049265 <calloc@plt+0x135>
mov    (%ebx,%eax,4),%eax
cmpb   $0x70,(%eax)
setne  %al
movzbl %al,%eax
lea    0x2(%eax,%eax,1),%esi
mov    0x8(%ebp),%eax
sub    %edx,%eax
cmp    %esi,%eax
jge    80493de <calloc@plt+0x2ae>
mov    0x8(%ebp),%eax
mov    -0x4(%ebx,%eax,4),%eax
mov    %eax,(%esp)
call   804b820 <calloc@plt+0x26f0>
movl   $0x5,0x8(%esp)
movl   $0x804d8e0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8048e50 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
cmp    $0x4,%esi
jne    804930b <calloc@plt+0x1db>
mov    0x8(%ebp),%ebx
sub    0x80501a0,%ebx
cmp    $0x2,%ebx
jne    804930b <calloc@plt+0x1db>
movl   $0x5,0x8(%esp)
movl   $0x804d764,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x804ddec,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8050164,%eax
mov    %eax,(%esp)
call   8049080 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   80498f0 <calloc@plt+0x7c0>
movl   $0x0,(%esp)
call   80498f0 <calloc@plt+0x7c0>
test   %esi,%esi
je     80495b1 <calloc@plt+0x481>
mov    %esi,(%esp)
call   8049e10 <calloc@plt+0xce0>
test   %eax,%eax
mov    %eax,%esi
je     8049771 <calloc@plt+0x641>
movl   $0x0,(%esp)
call   80490d0 <umask@plt>
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1b6,(%esp)
mov    %eax,0x8(%esp)
call   804a1a0 <calloc@plt+0x1070>
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
call   8048de0 <free@plt>
testl  $0xfffffe00,0x2c(%esp)
jne    80495be <calloc@plt+0x48e>
mov    0x80501a0,%edx
cmp    %edx,0x8(%ebp)
jg     8049248 <calloc@plt+0x118>
mov    0x8(%ebp),%eax
mov    $0x2,%esi
sub    %edx,%eax
cmp    $0x1,%eax
jg     80493de <calloc@plt+0x2ae>
movl   $0x5,0x8(%esp)
movl   $0x804d8d0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
jmp    804930b <calloc@plt+0x1db>
cmp    %eax,%esi
jl     80495f7 <calloc@plt+0x4c7>
test   %edi,%edi
je     8049400 <calloc@plt+0x2d0>
mov    %edi,(%esp)
call   8048fd0 <setfscreatecon@plt>
mov    0x80501a0,%edx
test   %eax,%eax
js     80497aa <calloc@plt+0x67a>
add    $0x1,%edx
lea    0x0(,%edx,4),%ecx
mov    (%ebx,%edx,4),%edx
movzbl (%edx),%eax
cmp    $0x63,%al
je     804942a <calloc@plt+0x2fa>
jle    804966e <calloc@plt+0x53e>
cmp    $0x70,%al
je     80496c5 <calloc@plt+0x595>
cmp    $0x75,%al
jne    804967e <calloc@plt+0x54e>
movl   $0x2000,0x28(%esp)
mov    0x4(%ebx,%ecx,1),%eax
mov    0x8(%ebx,%ecx,1),%edi
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,%edx
mov    %eax,0x24(%esp)
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
call   804c210 <calloc@plt+0x30e0>
test   %eax,%eax
jne    8049473 <calloc@plt+0x343>
cmpl   $0x0,0x3c(%esp)
je     80494b9 <calloc@plt+0x389>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804b820 <calloc@plt+0x26f0>
movl   $0x5,0x8(%esp)
movl   $0x804d804,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
lea    0x40(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804c210 <calloc@plt+0x30e0>
test   %eax,%eax
jne    80494ec <calloc@plt+0x3bc>
cmpl   $0x0,0x44(%esp)
je     804952e <calloc@plt+0x3fe>
mov    %edi,(%esp)
call   804b820 <calloc@plt+0x26f0>
movl   $0x5,0x8(%esp)
movl   $0x804d824,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
mov    0x40(%esp),%eax
xor    %edx,%edx
mov    0x38(%esp),%ecx
xor    %al,%al
shld   $0xc,%eax,%edx
and    $0xfffff000,%ecx
shl    $0xc,%eax
or     %edx,%ecx
movzbl 0x40(%esp),%edx
mov    %eax,%esi
mov    0x38(%esp),%eax
and    $0xfff,%eax
shl    $0x8,%eax
or     %edx,%eax
or     %eax,%esi
cmp    $0xffffffff,%ecx
je     804971b <calloc@plt+0x5eb>
mov    0x80501a0,%eax
lea    0x48(%esp),%edx
mov    %esi,0x48(%esp)
mov    %ecx,0x4c(%esp)
mov    (%ebx,%eax,4),%eax
mov    %edx,0xc(%esp)
mov    0x28(%esp),%edx
or     0x2c(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80490e0 <__xmknod@plt>
test   %eax,%eax
jne    80496e1 <calloc@plt+0x5b1>
movl   $0x0,(%esp)
call   8048f50 <exit@plt>
movl   $0x1b6,0x2c(%esp)
jmp    8049387 <calloc@plt+0x257>
movl   $0x5,0x8(%esp)
movl   $0x804d738,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
jmp    8049387 <calloc@plt+0x257>
add    %esi,%edx
mov    (%ebx,%edx,4),%eax
mov    %eax,(%esp)
call   804b820 <calloc@plt+0x26f0>
movl   $0x5,0x8(%esp)
movl   $0x804d8f9,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8048e50 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
cmp    $0x2,%esi
jne    804930b <calloc@plt+0x1db>
mov    0x8(%ebp),%ebx
sub    0x80501a0,%ebx
cmp    $0x4,%ebx
jne    804930b <calloc@plt+0x1db>
movl   $0x5,0x8(%esp)
movl   $0x804d79c,0x4(%esp)
jmp    80492de <calloc@plt+0x1ae>
cmp    $0x62,%al
movl   $0x6000,0x28(%esp)
je     8049432 <calloc@plt+0x302>
mov    %edx,(%esp)
call   804b820 <calloc@plt+0x26f0>
movl   $0x5,0x8(%esp)
movl   $0x804d91f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048e50 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
jmp    804930b <calloc@plt+0x1db>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    -0x4(%ebx,%ecx,1),%eax
mov    %eax,(%esp)
call   8049100 <mkfifo@plt>
test   %eax,%eax
je     80495a5 <calloc@plt+0x475>
mov    0x80501a0,%eax
mov    (%ebx,%eax,4),%eax
mov    %eax,(%esp)
call   804b820 <calloc@plt+0x26f0>
mov    %eax,%ebx
call   8049000 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x804d9c5,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <error@plt>
jmp    80495a5 <calloc@plt+0x475>
cmp    $0xffffffff,%esi
jne    8049569 <calloc@plt+0x439>
movl   $0x5,0x8(%esp)
movl   $0x804d90a,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x20(%esp)
call   8048e50 <dcgettext@plt>
mov    0x24(%esp),%ecx
mov    %edi,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
mov    0x20(%esp),%ecx
jmp    8049569 <calloc@plt+0x439>
movl   $0x5,0x8(%esp)
movl   $0x804d8c3,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8048ef0 <error@plt>
jmp    804933d <calloc@plt+0x20d>
mov    %edi,(%esp)
call   804b820 <calloc@plt+0x26f0>
movl   $0x5,0x8(%esp)
movl   $0x804d7d0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %eax,%edi
call   8049000 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <error@plt>
mov    0x80501a0,%edx
jmp    8049400 <calloc@plt+0x2d0>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804d1c0
push   $0x804d150
push   %ecx
push   %esi
push   $0x8049140
call   8048fc0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8050163,%eax
sub    $0x8050160,%eax
cmp    $0x6,%eax
ja     8049840 <calloc@plt+0x710>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804983f <calloc@plt+0x70f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8050160,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8050160,%eax
sub    $0x8050160,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049879 <calloc@plt+0x749>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049878 <calloc@plt+0x748>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8050160,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80501c8
jne    80498bc <calloc@plt+0x78c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049830 <calloc@plt+0x700>
movb   $0x1,0x80501c8
leave
repz ret
xchg   %ax,%ax
mov    0x804ff08,%eax
test   %eax,%eax
je     80498e8 <calloc@plt+0x7b8>
mov    $0x0,%eax
test   %eax,%eax
je     80498e8 <calloc@plt+0x7b8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x804ff08,(%esp)
call   *%eax
leave
jmp    8049860 <calloc@plt+0x730>
nop
jmp    8049860 <calloc@plt+0x730>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80501d4,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     8049944 <calloc@plt+0x814>
movl   $0x804d228,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8050164,%eax
mov    %eax,(%esp)
call   8049080 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8048f50 <exit@plt>
movl   $0x804d250,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d280,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d2b4,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d300,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d34c,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d394,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d3c4,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d3fc,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d504,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
movl   $0x5,0x8(%esp)
movl   $0x804d584,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x804d843,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
mov    0x80501d4,%eax
mov    %eax,(%esp)
call   8049d70 <calloc@plt+0xc40>
movl   $0x5,0x8(%esp)
movl   $0x804d849,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x804d860,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804d876,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x804d644,0xc(%esp)
movl   $0x804d88a,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
mov    0x80501c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804d66c,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8049050 <setlocale@plt>
test   %eax,%eax
je     8049bf5 <calloc@plt+0xac5>
movl   $0x3,0x8(%esp)
movl   $0x804d898,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <strncmp@plt>
test   %eax,%eax
jne    8049c39 <calloc@plt+0xb09>
mov    0x80501d4,%eax
mov    %eax,(%esp)
call   8049d70 <calloc@plt+0xc40>
movl   $0x5,0x8(%esp)
movl   $0x804d6f4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
jmp    804993c <calloc@plt+0x80c>
mov    0x80501d4,%eax
mov    %eax,(%esp)
call   8049d70 <calloc@plt+0xc40>
movl   $0x5,0x8(%esp)
movl   $0x804d6ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048e50 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
jmp    8049bf5 <calloc@plt+0xac5>
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x80501d0
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x80501cc
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80501c0,%eax
mov    %eax,(%esp)
call   804ca50 <calloc@plt+0x3920>
test   %eax,%eax
je     8049cc9 <calloc@plt+0xb99>
cmpb   $0x0,0x80501cc
je     8049ce0 <calloc@plt+0xbb0>
call   8049000 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8049ce0 <calloc@plt+0xbb0>
mov    0x8050164,%eax
mov    %eax,(%esp)
call   804ca50 <calloc@plt+0x3920>
test   %eax,%eax
jne    8049d38 <calloc@plt+0xc08>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x804d9b5,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %eax,%ebx
mov    0x80501d0,%eax
test   %eax,%eax
je     8049d45 <calloc@plt+0xc15>
mov    %eax,(%esp)
call   804b5f0 <calloc@plt+0x24c0>
mov    %eax,%esi
call   8049000 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x804d9c1,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <error@plt>
mov    0x805010c,%eax
mov    %eax,(%esp)
call   8048dd0 <_exit@plt>
call   8049000 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x804d9c5,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <error@plt>
jmp    8049d38 <calloc@plt+0xc08>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    8049d8b <calloc@plt+0xc5b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8049d80 <calloc@plt+0xc50>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     8049db9 <calloc@plt+0xc89>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     8049db9 <calloc@plt+0xc89>
cmp    $0x2f,%cl
je     8049dc0 <calloc@plt+0xc90>
test   %bl,%bl
je     8049d98 <calloc@plt+0xc68>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    8049da2 <calloc@plt+0xc72>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8049d98 <calloc@plt+0xc68>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048fb0 <strlen@plt>
cmp    $0x1,%eax
jbe    8049def <calloc@plt+0xcbf>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     8049df8 <calloc@plt+0xcc8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    8049de5 <calloc@plt+0xcb5>
nop
jmp    8049def <calloc@plt+0xcbf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
movsbl (%ebx),%eax
lea    -0x30(%eax),%edx
cmp    $0x7,%dl
mov    %ebx,%edx
jbe    8049ec0 <calloc@plt+0xd90>
test   %al,%al
mov    $0x1,%esi
je     804a0eb <calloc@plt+0xfbb>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
mov    $0x1,%ecx
je     8049e53 <calloc@plt+0xd23>
and    $0xffffffef,%eax
xor    %ecx,%ecx
cmp    $0x2d,%al
sete   %cl
add    $0x1,%edx
movzbl (%edx),%eax
add    %ecx,%esi
test   %al,%al
jne    8049e40 <calloc@plt+0xd10>
cmp    $0xfffffff,%esi
ja     804a12d <calloc@plt+0xffd>
shl    $0x4,%esi
mov    %esi,(%esp)
xor    %ebp,%ebp
call   804bf50 <calloc@plt+0x2e20>
mov    %eax,0xc(%esp)
xor    %edi,%edi
movzbl (%ebx),%eax
cmp    $0x61,%al
je     804a040 <calloc@plt+0xf10>
jle    8049ee8 <calloc@plt+0xdb8>
cmp    $0x6f,%al
je     804a060 <calloc@plt+0xf30>
cmp    $0x75,%al
je     804a058 <calloc@plt+0xf28>
cmp    $0x67,%al
lea    0x0(%esi),%esi
je     804a050 <calloc@plt+0xf20>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    8049ed7 <calloc@plt+0xda7>
lea    0x0(%esi,%eiz,1),%esi
movsbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x7,%cl
ja     804a068 <calloc@plt+0xf38>
lea    -0x30(%eax,%esi,8),%esi
add    $0x1,%edx
cmp    $0xfff,%esi
jbe    8049ec8 <calloc@plt+0xd98>
jmp    8049eb2 <calloc@plt+0xd82>
cmp    $0x2d,%al
je     8049ef6 <calloc@plt+0xdc6>
cmp    $0x3d,%al
xchg   %ax,%ax
je     8049ef6 <calloc@plt+0xdc6>
cmp    $0x2b,%al
jne    8049ea6 <calloc@plt+0xd76>
mov    %ebp,%esi
add    $0x1,%ebp
shl    $0x4,%esi
mov    %al,0xb(%esp)
add    0xc(%esp),%esi
jmp    8049f62 <calloc@plt+0xe32>
cmp    $0x6f,%cl
je     804a028 <calloc@plt+0xef8>
cmp    $0x75,%cl
jne    8049fb0 <calloc@plt+0xe80>
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x1c0,%eax
movzbl 0xb(%esp),%ecx
mov    %dl,0x1(%esi)
mov    %eax,%edx
and    %edi,%edx
test   %edi,%edi
mov    %eax,0x8(%esi)
cmovne %edx,%eax
mov    %cl,(%esi)
mov    %edi,0x4(%esi)
mov    %eax,0xc(%esi)
movzbl (%ebx),%eax
cmp    $0x2b,%al
je     8049f58 <calloc@plt+0xe28>
mov    %eax,%edx
and    $0xffffffef,%edx
cmp    $0x2d,%dl
jne    804a0f4 <calloc@plt+0xfc4>
add    $0x10,%esi
add    $0x1,%ebp
mov    %al,0xb(%esp)
movsbl 0x1(%ebx),%ecx
lea    0x1(%ebx),%eax
cmp    $0x67,%cl
je     804a010 <calloc@plt+0xee0>
jg     8049f08 <calloc@plt+0xdd8>
lea    -0x30(%ecx),%edx
cmp    $0x7,%dl
ja     8049fb0 <calloc@plt+0xe80>
xor    %edx,%edx
xchg   %ax,%ax
jmp    8049f97 <calloc@plt+0xe67>
lea    0x0(%esi),%esi
movsbl (%eax),%ecx
lea    -0x30(%ecx),%ebx
cmp    $0x7,%bl
ja     804a0b8 <calloc@plt+0xf88>
lea    -0x30(%ecx,%edx,8),%edx
add    $0x1,%eax
cmp    $0xfff,%edx
jbe    8049f88 <calloc@plt+0xe58>
jmp    8049eb2 <calloc@plt+0xd82>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
mov    $0x1,%edx
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
sub    $0x58,%ecx
cmp    $0x20,%cl
ja     8049f27 <calloc@plt+0xdf7>
movzbl %cl,%ecx
jmp    *0x804d9c8(,%ecx,4)
xchg   %ax,%ax
mov    $0x2,%edx
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl (%ebx),%ecx
jmp    8049fc0 <calloc@plt+0xe90>
or     $0x49,%eax
jmp    8049fe0 <calloc@plt+0xeb0>
lea    0x0(%esi),%esi
or     $0x92,%al
jmp    8049fe0 <calloc@plt+0xeb0>
lea    0x0(%esi,%eiz,1),%esi
or     $0x2,%ah
jmp    8049fe0 <calloc@plt+0xeb0>
lea    0x0(%esi),%esi
or     $0xc,%ah
jmp    8049fe0 <calloc@plt+0xeb0>
lea    0x0(%esi),%esi
or     $0x124,%eax
jmp    8049fe0 <calloc@plt+0xeb0>
nop
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x38,%eax
jmp    8049f27 <calloc@plt+0xdf7>
lea    0x0(%esi),%esi
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x7,%eax
jmp    8049f27 <calloc@plt+0xdf7>
lea    0x0(%esi),%esi
mov    $0xfff,%edi
add    $0x1,%ebx
jmp    8049e7e <calloc@plt+0xd4e>
lea    0x0(%esi),%esi
or     $0x438,%edi
jmp    804a045 <calloc@plt+0xf15>
or     $0x9c0,%edi
jmp    804a045 <calloc@plt+0xf15>
or     $0x207,%edi
jmp    804a045 <calloc@plt+0xf15>
test   %al,%al
jne    8049eb2 <calloc@plt+0xd82>
sub    %ebx,%edx
mov    $0xfff,%ebx
cmp    $0x4,%edx
jg     804a08a <calloc@plt+0xf5a>
mov    %esi,%ebx
and    $0xc00,%ebx
or     $0x3ff,%ebx
movl   $0x20,(%esp)
call   804bf50 <calloc@plt+0x2e20>
movb   $0x3d,(%eax)
movb   $0x1,0x1(%eax)
movl   $0xfff,0x4(%eax)
mov    %esi,0x8(%eax)
mov    %ebx,0xc(%eax)
movb   $0x0,0x11(%eax)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %edi,%edi
jne    8049eb2 <calloc@plt+0xd82>
cmp    $0x2c,%cl
jne    804a100 <calloc@plt+0xfd0>
movzbl 0xb(%esp),%ebx
mov    $0xfff,%edi
movb   $0x1,0x1(%esi)
movl   $0xfff,0x4(%esi)
mov    %edx,0x8(%esi)
mov    %bl,(%esi)
mov    %eax,%ebx
mov    $0xfff,%eax
jmp    8049f40 <calloc@plt+0xe10>
mov    $0x10,%si
jmp    8049e6e <calloc@plt+0xd3e>
cmp    $0x2c,%al
jne    804a110 <calloc@plt+0xfe0>
add    $0x1,%ebx
jmp    8049e7c <calloc@plt+0xd4c>
test   %cl,%cl
je     804a0c5 <calloc@plt+0xf95>
jmp    8049eb2 <calloc@plt+0xd82>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    8049ea6 <calloc@plt+0xd76>
mov    0xc(%esp),%edi
mov    %ebp,%eax
shl    $0x4,%eax
movb   $0x0,0x1(%edi,%eax,1)
mov    %edi,%eax
jmp    8049eb4 <calloc@plt+0xd84>
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x78,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80490c0 <__xstat64@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804a197 <calloc@plt+0x1067>
movl   $0x20,(%esp)
mov    0x20(%esp),%ebx
call   804bf50 <calloc@plt+0x2e20>
movb   $0x3d,(%eax)
mov    %eax,%edx
movb   $0x1,0x1(%eax)
movl   $0xfff,0x4(%eax)
mov    %ebx,0x8(%eax)
movl   $0xfff,0xc(%eax)
movb   $0x0,0x11(%eax)
add    $0x78,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xd,%esp
mov    0x2d(%esp),%ecx
mov    0x21(%esp),%eax
movzbl 0x25(%esp),%edx
movl   $0x0,0x5(%esp)
movzbl 0x1(%ecx),%esi
and    $0xfff,%eax
mov    %dl,(%esp)
mov    %esi,%ebx
test   %bl,%bl
je     804a2e4 <calloc@plt+0x11b4>
movzbl %dl,%edi
mov    %edi,0x9(%esp)
mov    0x29(%esp),%edi
mov    %eax,0x21(%esp)
not    %edi
mov    %edi,0x1(%esp)
jmp    804a273 <calloc@plt+0x1143>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3,%al
jne    804a237 <calloc@plt+0x1107>
and    0x21(%esp),%ebx
mov    %ebx,%ebp
and    $0x124,%ebx
cmp    $0x1,%ebx
mov    %ebp,%ebx
sbb    %esi,%esi
and    $0x92,%ebx
not    %esi
and    $0x124,%esi
cmp    $0x1,%ebx
sbb    %ebx,%ebx
not    %ebx
and    $0x92,%ebx
or     %esi,%ebx
mov    %ebp,%esi
and    $0x49,%esi
cmp    $0x1,%esi
sbb    %esi,%esi
not    %esi
and    $0x49,%esi
or     %esi,%ebx
or     %ebp,%ebx
mov    0x1(%esp),%ebp
mov    %edx,%esi
test   %edi,%edi
not    %esi
cmovne %edi,%ebp
and    %ebx,%esi
movzbl (%ecx),%ebx
and    %ebp,%esi
cmp    $0x2d,%bl
je     804a300 <calloc@plt+0x11d0>
cmp    $0x3d,%bl
je     804a2b0 <calloc@plt+0x1180>
cmp    $0x2b,%bl
jne    804a266 <calloc@plt+0x1136>
or     %esi,0x5(%esp)
or     %esi,0x21(%esp)
add    $0x10,%ecx
movzbl 0x1(%ecx),%esi
mov    %esi,%eax
test   %al,%al
je     804a2e0 <calloc@plt+0x11b0>
cmpb   $0x1,(%esp)
mov    %esi,%eax
mov    0xc(%ecx),%ebx
mov    0x4(%ecx),%edi
sbb    %edx,%edx
not    %edx
and    $0xc00,%edx
not    %ebx
and    %ebx,%edx
cmp    $0x2,%al
mov    0x8(%ecx),%ebx
jne    804a1f0 <calloc@plt+0x10c0>
mov    0x21(%esp),%ebp
mov    %ebx,%esi
or     $0x49,%esi
and    $0x49,%ebp
or     0x9(%esp),%ebp
cmovne %esi,%ebx
jmp    804a237 <calloc@plt+0x1107>
lea    0x0(%esi),%esi
mov    %edi,%ebp
xor    %ebx,%ebx
not    %ebp
test   %edi,%edi
cmovne %ebp,%ebx
add    $0x10,%ecx
or     %edx,%ebx
and    %ebx,0x21(%esp)
mov    %ebx,%edx
or     %esi,0x21(%esp)
not    %edx
movzbl 0x1(%ecx),%esi
and    $0xfff,%edx
or     %edx,0x5(%esp)
mov    %esi,%eax
test   %al,%al
jne    804a273 <calloc@plt+0x1143>
mov    0x21(%esp),%eax
mov    0x31(%esp),%edx
test   %edx,%edx
je     804a2f6 <calloc@plt+0x11c6>
mov    0x31(%esp),%edi
mov    0x5(%esp),%ecx
mov    %ecx,(%edi)
add    $0xd,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
or     %esi,0x5(%esp)
not    %esi
and    %esi,0x21(%esp)
jmp    804a266 <calloc@plt+0x1136>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804a393 <calloc@plt+0x1263>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049060 <strrchr@plt>
test   %eax,%eax
je     804a37f <calloc@plt+0x124f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804a37f <calloc@plt+0x124f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x804da84,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804a37f <calloc@plt+0x124f>
mov    $0x3,%ecx
mov    $0x804da8c,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804a37f <calloc@plt+0x124f>
lea    0x4(%eax),%ebx
mov    %ebx,0x8050160
mov    %ebx,0x80501d4
mov    %ebx,0x8050180
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8050164,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804da4c,(%esp)
mov    %eax,0xc(%esp)
call   8048e90 <fwrite@plt>
call   80490b0 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     804a3e1 <calloc@plt+0x12b1>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   80490b0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     804a420 <calloc@plt+0x12f0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804cad0 <calloc@plt+0x39a0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    804a488 <calloc@plt+0x1358>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    804a470 <calloc@plt+0x1340>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x2d,0x3(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x38,0x4(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x0,0x5(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x60,(%esi)
mov    $0x804da9f,%eax
mov    $0x804da90,%edx
cmovne %edx,%eax
jmp    804a418 <calloc@plt+0x12e8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804da99,%eax
cmp    $0x7,%edi
mov    $0x804da97,%edx
cmovne %edx,%eax
jmp    804a418 <calloc@plt+0x12e8>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    804a470 <calloc@plt+0x1340>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x31,0x2(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x38,0x3(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x30,0x4(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x33,0x5(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x30,0x6(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x0,0x7(%eax)
jne    804a470 <calloc@plt+0x1340>
cmpb   $0x60,(%esi)
mov    $0x804da9b,%eax
mov    $0x804da94,%edx
cmovne %edx,%eax
jmp    804a418 <calloc@plt+0x12e8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8048ea0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804adb8 <calloc@plt+0x1c88>
mov    0x94(%esp),%eax
jmp    *0x804dae0(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804abc0 <calloc@plt+0x1a90>
test   %al,%al
je     804abd3 <calloc@plt+0x1aa3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804aba8 <calloc@plt+0x1a78>
cmpb   $0x0,0x58(%esp)
je     804aba8 <calloc@plt+0x1a78>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804aba8 <calloc@plt+0x1a78>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8048e40 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804ac40 <calloc@plt+0x1b10>
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804a958 <calloc@plt+0x1828>
movzbl %bl,%eax
jmp    *0x804db04(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     804a798 <calloc@plt+0x1668>
cmpl   $0x3,0x94(%esp)
jne    804a6f8 <calloc@plt+0x15c8>
testb  $0x4,0x98(%esp)
je     804a6f8 <calloc@plt+0x15c8>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    804a6f8 <calloc@plt+0x15c8>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    804a6f8 <calloc@plt+0x15c8>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     804a6f8 <calloc@plt+0x15c8>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     804a6f8 <calloc@plt+0x15c8>
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
cmp    %edi,%ebp
jae    804a6be <calloc@plt+0x158e>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804a6ce <calloc@plt+0x159e>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a6de <calloc@plt+0x15ae>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    804a6ee <calloc@plt+0x15be>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     804a706 <calloc@plt+0x15d6>
cmpb   $0x0,0x5a(%esp)
jne    804a72b <calloc@plt+0x15fb>
mov    0x34(%esp),%edx
test   %edx,%edx
je     804a72b <calloc@plt+0x15fb>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    804a732 <calloc@plt+0x1602>
cmpb   $0x0,0x24(%esp)
je     804a748 <calloc@plt+0x1618>
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
cmp    %edi,%ebp
jae    804a745 <calloc@plt+0x1615>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    804a756 <calloc@plt+0x1626>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    804a598 <calloc@plt+0x1468>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804ada8 <calloc@plt+0x1c78>
test   %al,%al
jne    804a6f8 <calloc@plt+0x15c8>
test   %esi,%esi
jne    804a6f8 <calloc@plt+0x15c8>
cmpl   $0x2,0x94(%esp)
jne    804a6f8 <calloc@plt+0x15c8>
nop
cmpb   $0x0,0x2f(%esp)
je     804a6f8 <calloc@plt+0x15c8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804a4e0 <calloc@plt+0x13b0>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804aed2 <calloc@plt+0x1da2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804ae1b <calloc@plt+0x1ceb>
cmpb   $0x0,0x58(%esp)
je     804a6f8 <calloc@plt+0x15c8>
mov    %eax,%ebx
jmp    804a732 <calloc@plt+0x1602>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    804a823 <calloc@plt+0x16f3>
nop
mov    $0x66,%eax
jmp    804a823 <calloc@plt+0x16f3>
nop
mov    $0x76,%eax
jmp    804a823 <calloc@plt+0x16f3>
nop
mov    $0x6e,%eax
jmp    804a815 <calloc@plt+0x16e5>
nop
mov    $0x74,%eax
jmp    804a815 <calloc@plt+0x16e5>
nop
cmpb   $0x0,0x58(%esp)
je     804ad90 <calloc@plt+0x1c60>
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
cmp    %edi,%ebp
jae    804a882 <calloc@plt+0x1752>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    804a8c8 <calloc@plt+0x1798>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804a8c8 <calloc@plt+0x1798>
cmp    %eax,%edi
ja     804ae30 <calloc@plt+0x1d00>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a8be <calloc@plt+0x178e>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    804a706 <calloc@plt+0x15d6>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    804a823 <calloc@plt+0x16f3>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804a8fe <calloc@plt+0x17ce>
cmpb   $0x0,0x2f(%esp)
je     804a8fe <calloc@plt+0x17ce>
test   %dl,%dl
jne    804a748 <calloc@plt+0x1618>
mov    %ebx,%eax
jmp    804a815 <calloc@plt+0x16e5>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    804a6f8 <calloc@plt+0x15c8>
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
cmp    %edi,%ebp
jae    804a92d <calloc@plt+0x17fd>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804a93d <calloc@plt+0x180d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a94d <calloc@plt+0x181d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    804a6f8 <calloc@plt+0x15c8>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804ac50 <calloc@plt+0x1b20>
call   8049120 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     804a6f8 <calloc@plt+0x15c8>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804aa04 <calloc@plt+0x18d4>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
cmp    %edi,%ebp
jae    804a9b3 <calloc@plt+0x1883>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804a9c6 <calloc@plt+0x1896>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804a9dc <calloc@plt+0x18ac>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    804a74b <calloc@plt+0x161b>
cmp    %edi,%ebp
jae    804a9f9 <calloc@plt+0x18c9>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804a9a0 <calloc@plt+0x1870>
cmpb   $0x0,0x24(%esp)
je     804a9e5 <calloc@plt+0x18b5>
cmp    %edi,%ebp
jae    804aa17 <calloc@plt+0x18e7>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804a9e5 <calloc@plt+0x18b5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804aed7 <calloc@plt+0x1da7>
test   %edi,%edi
je     804addd <calloc@plt+0x1cad>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804da99,0x3c(%esp)
movb   $0x22,(%eax)
jmp    804a578 <calloc@plt+0x1448>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804da99,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    804a578 <calloc@plt+0x1448>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    804a578 <calloc@plt+0x1448>
lea    0x0(%esi,%eiz,1),%esi
je     804aaec <calloc@plt+0x19bc>
mov    0x94(%esp),%edx
mov    $0x804daa3,%eax
call   804a3f0 <calloc@plt+0x12c0>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x804da97,%eax
call   804a3f0 <calloc@plt+0x12c0>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804ab1a <calloc@plt+0x19ea>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804ab1a <calloc@plt+0x19ea>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804ab0f <calloc@plt+0x19df>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804ab08 <calloc@plt+0x19d8>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8048fb0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    804a578 <calloc@plt+0x1448>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804da97,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    804a578 <calloc@plt+0x1448>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804aef3 <calloc@plt+0x1dc3>
test   %edi,%edi
je     804adfc <calloc@plt+0x1ccc>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804da97,0x3c(%esp)
movb   $0x27,(%eax)
jmp    804a578 <calloc@plt+0x1448>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    804a630 <calloc@plt+0x1500>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    804a5b8 <calloc@plt+0x1488>
test   %ebp,%ebp
jne    804abec <calloc@plt+0x1abc>
cmpl   $0x2,0x94(%esp)
jne    804abec <calloc@plt+0x1abc>
cmpb   $0x0,0x2f(%esp)
jne    804a7a8 <calloc@plt+0x1678>
cmpb   $0x0,0x2f(%esp)
jne    804ac22 <calloc@plt+0x1af2>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804ac22 <calloc@plt+0x1af2>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804ac22 <calloc@plt+0x1af2>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804ac17 <calloc@plt+0x1ae7>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804ac10 <calloc@plt+0x1ae0>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    804a7f2 <calloc@plt+0x16c2>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    804a7f2 <calloc@plt+0x16c2>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    804a630 <calloc@plt+0x1500>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804adbd <calloc@plt+0x1c8d>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048ed0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804ae3d <calloc@plt+0x1d0d>
cmp    $0xffffffff,%eax
je     804ae58 <calloc@plt+0x1d28>
cmp    $0xfffffffe,%eax
je     804ae73 <calloc@plt+0x1d43>
cmpb   $0x0,0x2f(%esp)
je     804ad1f <calloc@plt+0x1bef>
cmpl   $0x2,0x94(%esp)
jne    804ad1f <calloc@plt+0x1bef>
cmp    $0x1,%eax
je     804ad1f <calloc@plt+0x1bef>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804ad18 <calloc@plt+0x1be8>
movzbl %al,%eax
jmp    *0x804dd00(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804ad00 <calloc@plt+0x1bd0>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048e80 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048e00 <mbsinit@plt>
test   %eax,%eax
je     804ac91 <calloc@plt+0x1b61>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804a983 <calloc@plt+0x1853>
and    0x58(%esp),%dl
jmp    804a98d <calloc@plt+0x185d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    804a7a8 <calloc@plt+0x1678>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     804a6f8 <calloc@plt+0x15c8>
add    $0x1,%esi
jmp    804a598 <calloc@plt+0x1468>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    804a779 <calloc@plt+0x1649>
call   80490b0 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8048fb0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804ac6e <calloc@plt+0x1b3e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804da99,0x3c(%esp)
jmp    804a578 <calloc@plt+0x1448>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804da97,0x3c(%esp)
jmp    804a578 <calloc@plt+0x1448>
cmpb   $0x0,0x2f(%esp)
je     804a823 <calloc@plt+0x16f3>
jmp    804a7a8 <calloc@plt+0x1678>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    804a8ae <calloc@plt+0x177e>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804ad65 <calloc@plt+0x1c35>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804ad65 <calloc@plt+0x1c35>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804aec8 <calloc@plt+0x1d98>
cmpb   $0x0,(%eax)
je     804aec8 <calloc@plt+0x1d98>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804aeb6 <calloc@plt+0x1d86>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804aec0 <calloc@plt+0x1d90>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804aeb0 <calloc@plt+0x1d80>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804ad65 <calloc@plt+0x1c35>
call   8048e60 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804da99,0x3c(%esp)
jmp    804a578 <calloc@plt+0x1448>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804da97,0x3c(%esp)
jmp    804a578 <calloc@plt+0x1448>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049000 <__errno_location@plt>
test   %edi,%edi
mov    0x8050150,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804b09c <calloc@plt+0x1f6c>
cmp    0x805015c,%edi
jb     804afa8 <calloc@plt+0x1e78>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804b0a1 <calloc@plt+0x1f71>
cmp    $0x8050154,%esi
lea    0x0(,%ebp,8),%eax
je     804b070 <calloc@plt+0x1f40>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804bfc0 <calloc@plt+0x2e90>
mov    %eax,%esi
mov    %eax,0x8050150
mov    0x805015c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048fe0 <memset@plt>
mov    %ebp,0x805015c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804a4e0 <calloc@plt+0x13b0>
cmp    %eax,%ebp
ja     804b057 <calloc@plt+0x1f27>
lea    0x1(%eax),%ebp
cmp    $0x80501e0,%esi
mov    %ebp,(%edi)
je     804b012 <calloc@plt+0x1ee2>
mov    %esi,(%esp)
call   8048de0 <free@plt>
mov    %ebp,(%esp)
call   804bf50 <calloc@plt+0x2e20>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804a4e0 <calloc@plt+0x13b0>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804bfc0 <calloc@plt+0x2e90>
mov    0x8050158,%edx
mov    %eax,%esi
mov    %eax,0x8050150
mov    0x8050154,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804af7f <calloc@plt+0x1e4f>
call   80490b0 <abort@plt>
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049000 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x80502e0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804c160 <calloc@plt+0x3030>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x80502e0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804b110 <calloc@plt+0x1fe0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x80502e0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x80502e0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x80502e0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x80502e0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804b1c3 <calloc@plt+0x2093>
test   %ecx,%ecx
je     804b1c3 <calloc@plt+0x2093>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   80490b0 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x80502e0,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049000 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804a4e0 <calloc@plt+0x13b0>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x80502e0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049000 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   804a4e0 <calloc@plt+0x13b0>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804bf50 <calloc@plt+0x2e20>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   804a4e0 <calloc@plt+0x13b0>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804b2f8 <calloc@plt+0x21c8>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b230 <calloc@plt+0x2100>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805015c,%edi
mov    0x8050150,%esi
cmp    $0x1,%edi
jbe    804b373 <calloc@plt+0x2243>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048de0 <free@plt>
cmp    %edi,%ebx
jne    804b360 <calloc@plt+0x2230>
mov    0x4(%esi),%eax
cmp    $0x80501e0,%eax
je     804b399 <calloc@plt+0x2269>
mov    %eax,(%esp)
call   8048de0 <free@plt>
movl   $0x100,0x8050154
00
movl   $0x80501e0,0x8050158
08
cmp    $0x8050154,%esi
je     804b3b3 <calloc@plt+0x2283>
mov    %esi,(%esp)
call   8048de0 <free@plt>
movl   $0x8050154,0x8050150
08
movl   $0x1,0x805015c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x80502e0,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x80502e0,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x80502e0,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x80502e0,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804a3c0 <calloc@plt+0x1290>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804af10 <calloc@plt+0x1de0>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804a3c0 <calloc@plt+0x1290>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804af10 <calloc@plt+0x1de0>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804b450 <calloc@plt+0x2320>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804b480 <calloc@plt+0x2350>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x80502e0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x80502e4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x80502e8,%eax
mov    %eax,0x18(%esp)
mov    0x80502ec,%eax
mov    %eax,0x1c(%esp)
mov    0x80502f0,%eax
mov    %eax,0x20(%esp)
mov    0x80502f4,%eax
mov    %eax,0x24(%esp)
mov    0x80502f8,%eax
mov    %eax,0x28(%esp)
mov    0x80502fc,%eax
mov    %eax,0x2c(%esp)
mov    0x8050300,%eax
mov    %eax,0x30(%esp)
mov    0x8050304,%eax
mov    %eax,0x34(%esp)
mov    0x8050308,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805030c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804af10 <calloc@plt+0x1de0>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b510 <calloc@plt+0x23e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804b510 <calloc@plt+0x23e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b510 <calloc@plt+0x23e0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x80502e0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x80502e4,%eax
mov    %eax,0x14(%esp)
mov    0x80502e8,%eax
mov    %eax,0x18(%esp)
mov    0x80502ec,%eax
mov    %eax,0x1c(%esp)
mov    0x80502f0,%eax
mov    %eax,0x20(%esp)
mov    0x80502f4,%eax
mov    %eax,0x24(%esp)
mov    0x80502f8,%eax
mov    %eax,0x28(%esp)
mov    0x80502fc,%eax
mov    %eax,0x2c(%esp)
mov    0x8050300,%eax
mov    %eax,0x30(%esp)
mov    0x8050304,%eax
mov    %eax,0x34(%esp)
mov    0x8050308,%eax
mov    %eax,0x38(%esp)
mov    0x805030c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804b190 <calloc@plt+0x2060>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804af10 <calloc@plt+0x1de0>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804b650 <calloc@plt+0x2520>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804b650 <calloc@plt+0x2520>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804b650 <calloc@plt+0x2520>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8050120,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8050120,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8050120,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8050120,0x4(%esp)
jmp    804af10 <calloc@plt+0x1de0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804bcf8 <calloc@plt+0x2bc8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x804dde4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049080 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ddf7,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x804e080,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049080 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804de54,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804bd20 <calloc@plt+0x2bf0>
jmp    *0x804e058(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804dfb8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8049080 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804dfe8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8048e50 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049080 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   80490b0 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ddfb,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049080 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804de0b,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049080 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804de22,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049080 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804df20,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049080 <__fprintf_chk@plt>
jmp    804b99f <calloc@plt+0x286f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804df40,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049080 <__fprintf_chk@plt>
jmp    804b99f <calloc@plt+0x286f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804df64,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049080 <__fprintf_chk@plt>
jmp    804b99f <calloc@plt+0x286f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804df8c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048e50 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049080 <__fprintf_chk@plt>
jmp    804b99f <calloc@plt+0x286f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x804ddf0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049080 <__fprintf_chk@plt>
jmp    804b891 <calloc@plt+0x2761>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e01c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8048e50 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804ba2a <calloc@plt+0x28fa>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804bdca <calloc@plt+0x2c9a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804bdc0 <calloc@plt+0x2c90>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804b840 <calloc@plt+0x2710>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804be22 <calloc@plt+0x2cf2>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804be10 <calloc@plt+0x2ce0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804b840 <calloc@plt+0x2710>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804be00 <calloc@plt+0x2cd0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x804de3e,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x804d860,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804d876,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
movl   $0x804d644,0xc(%esp)
movl   $0x804d88a,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049020 <__printf_chk@plt>
mov    0x80501c0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804d66c,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048f70 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048f20 <malloc@plt>
test   %eax,%eax
je     804bf69 <calloc@plt+0x2e39>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804bf64 <calloc@plt+0x2e34>
lea    0x0(%esi),%esi
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804bfa9 <calloc@plt+0x2e79>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804bf50 <calloc@plt+0x2e20>
call   804c1c0 <calloc@plt+0x3090>
xchg   %ax,%ax
jmp    804bf50 <calloc@plt+0x2e20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804bfe8 <calloc@plt+0x2eb8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048f10 <realloc@plt>
test   %eax,%eax
je     804bffb <calloc@plt+0x2ecb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804bfd0 <calloc@plt+0x2ea0>
mov    %eax,(%esp)
call   8048de0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804bfe0 <calloc@plt+0x2eb0>
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804c043 <calloc@plt+0x2f13>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804bfc0 <calloc@plt+0x2e90>
call   804c1c0 <calloc@plt+0x3090>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804c090 <calloc@plt+0x2f60>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804c0a8 <calloc@plt+0x2f78>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804bfc0 <calloc@plt+0x2e90>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804c079 <calloc@plt+0x2f49>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804c079 <calloc@plt+0x2f49>
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804c0e8 <calloc@plt+0x2fb8>
cmp    $0xaaaaaaa9,%eax
ja     804c0f4 <calloc@plt+0x2fc4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804bfc0 <calloc@plt+0x2e90>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804c0d0 <calloc@plt+0x2fa0>
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804bf50 <calloc@plt+0x2e20>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048fe0 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049130 <calloc@plt>
test   %eax,%eax
je     804c14f <calloc@plt+0x301f>
add    $0x1c,%esp
ret
nop
call   804c1c0 <calloc@plt+0x3090>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804bf50 <calloc@plt+0x2e20>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048df0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048fb0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804c160 <calloc@plt+0x3030>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x804e0af,0x4(%esp)
movl   $0x0,(%esp)
call   8048e50 <dcgettext@plt>
mov    0x805010c,%edx
movl   $0x804d9c5,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8048ef0 <error@plt>
call   80490b0 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebx
cmp    $0x24,%esi
ja     804ca1f <calloc@plt+0x38ef>
movzbl (%edi),%edx
lea    0x4c(%esp),%eax
test   %ebx,%ebx
cmove  %eax,%ebx
mov    %edx,0x18(%esp)
call   8049120 <__ctype_b_loc@plt>
mov    0x18(%esp),%edx
mov    (%eax),%ebp
mov    %edi,%eax
jmp    804c256 <calloc@plt+0x3126>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
movzbl %dl,%ecx
testb  $0x20,0x1(%ebp,%ecx,2)
jne    804c250 <calloc@plt+0x3120>
cmp    $0x2d,%dl
jne    804c278 <calloc@plt+0x3148>
mov    $0x4,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049000 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8048e10 <__strtoull_internal@plt>
mov    (%ebx),%esi
cmp    %edi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     804c379 <calloc@plt+0x3249>
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    804c2e8 <calloc@plt+0x31b8>
xor    %edi,%edi
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     804c2ca <calloc@plt+0x319a>
movzbl (%esi),%edx
test   %dl,%dl
jne    804c2f8 <calloc@plt+0x31c8>
mov    0x7c(%esp),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    %edi,%eax
mov    %edx,0x4(%esi)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x22,%eax
mov    $0x1,%edi
jne    804c265 <calloc@plt+0x3135>
jmp    804c2b8 <calloc@plt+0x3188>
movsbl %dl,%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8048f90 <strchr@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     804c3d0 <calloc@plt+0x32a0>
mov    0x80(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8048f90 <strchr@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     804c35d <calloc@plt+0x322d>
movzbl 0x1(%esi),%eax
cmp    $0x44,%al
je     804c99b <calloc@plt+0x386b>
cmp    $0x69,%al
je     804c982 <calloc@plt+0x3852>
cmp    $0x42,%al
je     804c99b <calloc@plt+0x386b>
mov    $0x1,%ebp
mov    $0x400,%eax
sub    $0x42,%edx
cmp    $0x35,%dl
ja     804c3d0 <calloc@plt+0x32a0>
movzbl %dl,%edx
jmp    *0x804e0f8(,%edx,4)
mov    0x80(%esp),%eax
test   %eax,%eax
je     804c265 <calloc@plt+0x3135>
movzbl (%edi),%edx
test   %dl,%dl
je     804c265 <calloc@plt+0x3135>
movsbl %dl,%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8048f90 <strchr@plt>
mov    0x20(%esp),%edx
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %eax,%eax
jne    804c31e <calloc@plt+0x31ee>
jmp    804c265 <calloc@plt+0x3135>
mov    0x7c(%esp),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    %edi,%eax
mov    %edx,0x4(%esi)
or     $0x2,%eax
jmp    804c26a <calloc@plt+0x313a>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
cmp    %edx,0x1c(%esp)
mov    %eax,%ecx
mov    %edx,0x30(%esp)
ja     804ca05 <calloc@plt+0x38d5>
jb     804c42c <calloc@plt+0x32fc>
cmp    %ecx,0x18(%esp)
ja     804ca05 <calloc@plt+0x38d5>
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
imul   0x18(%esp),%edx
imul   0x20(%esp),%eax
add    %edx,%eax
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mull   0x20(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jb     804ca05 <calloc@plt+0x38d5>
ja     804c476 <calloc@plt+0x3346>
cmp    0x18(%esp),%ecx
jb     804ca05 <calloc@plt+0x38d5>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%ecx
mov    0x24(%esp),%edx
imul   %eax,%ecx
mov    0x18(%esp),%eax
imul   %edx,%eax
add    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
or     %eax,%edi
add    %ebp,%esi
mov    %edi,%eax
or     $0x2,%eax
mov    %esi,(%ebx)
cmpb   $0x0,(%esi)
cmovne %eax,%edi
jmp    804c2ca <calloc@plt+0x319a>
cmpl   $0x7fffffff,0x1c(%esp)
ja     804c9b7 <calloc@plt+0x3887>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    804c4a4 <calloc@plt+0x3374>
cmpl   $0x7fffff,0x1c(%esp)
ja     804c9b7 <calloc@plt+0x3887>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    804c4a4 <calloc@plt+0x3374>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
mov    $0x7,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    804c598 <calloc@plt+0x3468>
ja     804c555 <calloc@plt+0x3425>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     804c5a2 <calloc@plt+0x3472>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     804c9aa <calloc@plt+0x387a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    804c549 <calloc@plt+0x3419>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    804c58b <calloc@plt+0x345b>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
mov    $0x8,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    804c646 <calloc@plt+0x3516>
ja     804c603 <calloc@plt+0x34d3>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     804c650 <calloc@plt+0x3520>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     804c9aa <calloc@plt+0x387a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    804c5f7 <calloc@plt+0x34c7>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    804c639 <calloc@plt+0x3509>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
mov    $0x4,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jb     804c9d1 <calloc@plt+0x38a1>
ja     804c6c1 <calloc@plt+0x3591>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     804c9d1 <calloc@plt+0x38a1>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
jne    804c6a3 <calloc@plt+0x3573>
mov    0x2c(%esp),%eax
jmp    804c4a4 <calloc@plt+0x3374>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
mov    $0x5,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
jmp    804c79a <calloc@plt+0x366a>
ja     804c755 <calloc@plt+0x3625>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     804c7a4 <calloc@plt+0x3674>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
je     804c702 <calloc@plt+0x35d2>
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jae    804c749 <calloc@plt+0x3619>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    804c78b <calloc@plt+0x365b>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
cmp    %edx,0x1c(%esp)
ja     804c9b7 <calloc@plt+0x3887>
jb     804c7f6 <calloc@plt+0x36c6>
cmp    %eax,0x18(%esp)
ja     804c9b7 <calloc@plt+0x3887>
mov    0x1c(%esp),%edx
mov    0x24(%esp),%eax
imul   0x20(%esp),%edx
imul   0x18(%esp),%eax
lea    (%eax,%edx,1),%ecx
jmp    804c48e <calloc@plt+0x335e>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
mov    $0x3,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jb     804c9eb <calloc@plt+0x38bb>
ja     804c86a <calloc@plt+0x373a>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     804c9eb <calloc@plt+0x38bb>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
jne    804c84c <calloc@plt+0x371c>
jmp    804c702 <calloc@plt+0x35d2>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   804d020 <calloc@plt+0x3ef0>
mov    $0x6,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    804c939 <calloc@plt+0x3809>
ja     804c8fa <calloc@plt+0x37ca>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     804c943 <calloc@plt+0x3813>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     804c9aa <calloc@plt+0x387a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    804c8ee <calloc@plt+0x37be>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    804c930 <calloc@plt+0x3800>
cmpl   $0x3fffff,0x1c(%esp)
ja     804c9b7 <calloc@plt+0x3887>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0xa,%eax,%edx
shl    $0xa,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    804c4a4 <calloc@plt+0x3374>
xor    %eax,%eax
cmpb   $0x42,0x2(%esi)
sete   %al
mov    %eax,%ebp
mov    $0x400,%eax
lea    0x1(%ebp,%ebp,1),%ebp
jmp    804c367 <calloc@plt+0x3237>
mov    $0x2,%ebp
mov    $0x3e8,%eax
jmp    804c367 <calloc@plt+0x3237>
mov    0x2c(%esp),%eax
mov    0x74(%esp),%ebx
jmp    804c4a4 <calloc@plt+0x3374>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0xffffffff,0x1c(%esp)
jmp    804c4a4 <calloc@plt+0x3374>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    804c6f7 <calloc@plt+0x35c7>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    804c8a0 <calloc@plt+0x3770>
mov    $0x1,%eax
movl   $0xffffffff,0x18(%esp)
movl   $0xffffffff,0x1c(%esp)
jmp    804c4a4 <calloc@plt+0x3374>
movl   $0x804e1d0,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x804e0c0,0x4(%esp)
movl   $0x804e0d0,(%esp)
call   8049110 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8048ec0 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804ce90 <calloc@plt+0x3d60>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    804ca90 <calloc@plt+0x3960>
test   %dl,%dl
je     804ca87 <calloc@plt+0x3957>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     804cab0 <calloc@plt+0x3980>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    804ca87 <calloc@plt+0x3957>
call   8049000 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049000 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049040 <nl_langinfo@plt>
mov    0x8050310,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x804de3d,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804cb9c <calloc@plt+0x3a6c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804cb67 <calloc@plt+0x3a37>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804cb40 <calloc@plt+0x3a10>
nop
mov    %ebp,(%esp)
call   8048fb0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8048fb0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804cb98 <calloc@plt+0x3a68>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048da0 <strcmp@plt>
test   %eax,%eax
je     804cb5b <calloc@plt+0x3a2b>
cmp    $0x2a,%bl
jne    804cb20 <calloc@plt+0x39f0>
cmpb   $0x0,0x1(%ebp)
jne    804cb20 <calloc@plt+0x39f0>
mov    %ebp,(%esp)
call   8048fb0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x804e1e4,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804ce5d <calloc@plt+0x3d2d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804cb67 <calloc@plt+0x3a37>
movl   $0x804e1ea,(%esp)
call   8048f00 <getenv@plt>
test   %eax,%eax
je     804cbb5 <calloc@plt+0x3a85>
cmpb   $0x0,(%eax)
jne    804cdc3 <calloc@plt+0x3c93>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x804e1db,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804cdb4 <calloc@plt+0x3c84>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8048f20 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804ce53 <calloc@plt+0x3d23>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048df0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804cc1c <calloc@plt+0x3aec>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048db0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804cd98 <calloc@plt+0x3c68>
movl   $0x804d9bf,0x4(%esp)
mov    %eax,(%esp)
call   8048f60 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804cd90 <calloc@plt+0x3c60>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804cd76 <calloc@plt+0x3c46>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804cc80 <calloc@plt+0x3b50>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804cc80 <calloc@plt+0x3b50>
cmp    $0x23,%eax
je     804cded <calloc@plt+0x3cbd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048ff0 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x804e1fa,0x4(%esp)
mov    %esi,(%esp)
call   8048fa0 <fscanf@plt>
cmp    $0x1,%eax
jle    804ce10 <calloc@plt+0x3ce0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8048fb0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8048fb0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804ce2e <calloc@plt+0x3cfe>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8048f20 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804ce62 <calloc@plt+0x3d32>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8048eb0 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8048eb0 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804cc8c <calloc@plt+0x3b5c>
mov    %esi,(%esp)
call   8049030 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804ce10 <calloc@plt+0x3ce0>
jmp    804cc95 <calloc@plt+0x3b65>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80490f0 <close@plt>
mov    $0x804de3d,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048de0 <free@plt>
mov    %ebp,0x8050310
jmp    804cb0f <calloc@plt+0x39df>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804cbdb <calloc@plt+0x3aab>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8048fb0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804cdb4 <calloc@plt+0x3c84>
lea    -0x1(%eax),%eax
jmp    804cbc4 <calloc@plt+0x3a94>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804ce07 <calloc@plt+0x3cd7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804ce7c <calloc@plt+0x3d4c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804cde8 <calloc@plt+0x3cb8>
cmp    $0xffffffff,%eax
jne    804cc80 <calloc@plt+0x3b50>
mov    %esi,(%esp)
call   804ce90 <calloc@plt+0x3d60>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804cd98 <calloc@plt+0x3c68>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804cd9d <calloc@plt+0x3c6d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8048f10 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804cd2c <calloc@plt+0x3bfc>
mov    $0x804de3d,%ebp
jmp    804cda9 <calloc@plt+0x3c79>
call   8048e60 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x804de3d,%ebp
call   8048de0 <free@plt>
mov    %esi,(%esp)
call   804ce90 <calloc@plt+0x3d60>
jmp    804cd9d <calloc@plt+0x3c6d>
mov    %esi,(%esp)
call   8049030 <__uflow@plt>
jmp    804ce02 <calloc@plt+0x3cd2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049010 <fileno@plt>
test   %eax,%eax
js     804cf18 <calloc@plt+0x3de8>
mov    %ebx,(%esp)
call   8048f30 <__freading@plt>
test   %eax,%eax
jne    804cee8 <calloc@plt+0x3db8>
mov    %ebx,(%esp)
call   804cf30 <calloc@plt+0x3e00>
test   %eax,%eax
je     804cf18 <calloc@plt+0x3de8>
call   8049000 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048e20 <fclose@plt>
test   %edi,%edi
je     804ceda <calloc@plt+0x3daa>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049010 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049070 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804ceb2 <calloc@plt+0x3d82>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048e20 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804cf48 <calloc@plt+0x3e18>
mov    %ebx,(%esp)
call   8048f30 <__freading@plt>
test   %eax,%eax
jne    804cf58 <calloc@plt+0x3e28>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048dc0 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804cf48 <calloc@plt+0x3e18>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804cf90 <calloc@plt+0x3e60>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048dc0 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804cfd0 <calloc@plt+0x3ea0>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048e30 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804cfaf <calloc@plt+0x3e7f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804cfaf <calloc@plt+0x3e7f>
mov    %ebx,(%esp)
call   8049010 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049070 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804d017 <calloc@plt+0x3ee7>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804d00f <calloc@plt+0x3edf>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    804d070 <calloc@plt+0x3f40>
cmp    %ebp,%ecx
ja     804d0a8 <calloc@plt+0x3f78>
test   %ecx,%ecx
mov    %ecx,%esi
jne    804d058 <calloc@plt+0x3f28>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     804d098 <calloc@plt+0x3f68>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    804d0b8 <calloc@plt+0x3f88>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    804d128 <calloc@plt+0x3ff8>
cmp    %edx,%eax
jb     804d128 <calloc@plt+0x3ff8>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     804d138 <calloc@plt+0x4008>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    804d119 <calloc@plt+0x3fe9>
cmp    (%esp),%esi
je     804d138 <calloc@plt+0x4008>
mov    %edi,%eax
xor    %edx,%edx
jmp    804d09c <calloc@plt+0x3f6c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    804d09c <calloc@plt+0x3f6c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049820 <calloc@plt+0x6f0>
add    $0x2ea5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   8048d60 <_init>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804d1a9 <calloc@plt+0x4079>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804d188 <calloc@plt+0x4058>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804d1c0 <calloc@plt+0x4090>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   8049820 <calloc@plt+0x6f0>
add    $0x2e2a,%ebx
sub    $0x18,%esp
lea    0x104(%ebx),%eax
test   %eax,%eax
je     804d208 <calloc@plt+0x40d8>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048ee0 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    804d1eb <calloc@plt+0x40bb>
push   %ebx
sub    $0x8,%esp
call   8049820 <calloc@plt+0x6f0>
add    $0x2deb,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %esp
jb     804d2a4 <_IO_stdin_used+0x80>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     804d25c <_IO_stdin_used+0x38>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804d2a5 <_IO_stdin_used+0x81>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     804d2b4 <_IO_stdin_used+0x90>
popa
je     804d2b3 <_IO_stdin_used+0x8f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %cl,%cs:0x41(%esi)
dec    %ebp
inc    %ebp
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
and    %bl,0x4d(%ebx)
inc    %ecx
dec    %edx
dec    %edi
push   %edx
and    %cl,0x49(%ebp)
dec    %esi
dec    %edi
push   %edx
pop    %ebp
or     (%eax),%al
add    %al,0x72(%ebx)
gs
popa
je     804d2eb <_IO_stdin_used+0xc7>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %cl,%gs:0x41(%esi)
dec    %ebp
inc    %ebp
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    804d30d <_IO_stdin_used+0xe9>
outsb  %ds:(%esi),(%dx)
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
or     %cs:(%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
dec    %ebp
popa
outsb  %ds:(%esi),(%dx)
fs
popa
je     804d32b <_IO_stdin_used+0x107>
jb     804d337 <_IO_stdin_used+0x113>
and    %ah,0x72(%ecx)
addr16 jne 804d331 <_IO_stdin_used+0x10d>
outsb  %gs:(%esi),(%dx)
je     804d33b <_IO_stdin_used+0x117>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     804d33e <_IO_stdin_used+0x11a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804d2f9 <_IO_stdin_used+0xd5>
popa
jb     804d341 <_IO_stdin_used+0x11d>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     804d353 <_IO_stdin_used+0x12f>
jb     804d35f <_IO_stdin_used+0x13b>
and    %ah,0x6f(%esi)
jb     804d30b <_IO_stdin_used+0xe7>
jae    804d355 <_IO_stdin_used+0x131>
outsl  %ds:(%esi),(%dx)
jb     804d364 <_IO_stdin_used+0x140>
and    %ch,0x70(%edi)
je     804d35e <_IO_stdin_used+0x13a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804d319 <_IO_stdin_used+0xf5>
je     804d36a <_IO_stdin_used+0x146>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c6d
sub    $0x65646f6d,%eax
cmp    $0x45444f4d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
jae    804d37c <_IO_stdin_used+0x158>
je     804d339 <_IO_stdin_used+0x115>
imul   $0x6570,0x20(%ebp,%eiz,2),%bp
jb     804d38f <_IO_stdin_used+0x16b>
imul   $0x206e6f69,0x73(%ebx),%esi
bound  %ebp,0x74(%ecx)
jae    804d34e <_IO_stdin_used+0x12a>
je     804d39f <_IO_stdin_used+0x17b>
and    %cl,0x4f(%ebp)
inc    %esp
inc    %ebp
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804d35b <_IO_stdin_used+0x137>
popa
cmp    $0x2d207772,%eax
and    %dh,0x6d(%ebp)
popa
jae    804d3b2 <_IO_stdin_used+0x18e>
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c5a
sub    $0x746e6f63,%eax
gs
js     804d3cf <_IO_stdin_used+0x1ab>
cmp    $0x20585443,%eax
and    %dh,0x65(%ebx)
je     804d385 <_IO_stdin_used+0x161>
je     804d3cf <_IO_stdin_used+0x1ab>
and    %dl,%gs:0x45(%ebx)
dec    %esp
imul   $0x65732078,0x75(%esi),%ebp
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     804d3f5 <_IO_stdin_used+0x1d1>
and    %ch,0x66(%edi)
and    %cl,0x41(%esi)
dec    %ebp
inc    %ebp
and    %dh,0x20(%edi,%ebp,2)
inc    %ebx
push   %esp
pop    %eax
or     (%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     804d3c1 <_IO_stdin_used+0x19d>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     804d417 <_IO_stdin_used+0x1f3>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    804d43a <_IO_stdin_used+0x216>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    804d44c <_IO_stdin_used+0x228>
jo     804d44f <_IO_stdin_used+0x22b>
je     804d3fc <_IO_stdin_used+0x1d8>
jbe    804d443 <_IO_stdin_used+0x21f>
jb     804d453 <_IO_stdin_used+0x22f>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804d457 <_IO_stdin_used+0x233>
popa
je     804d456 <_IO_stdin_used+0x232>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x420a0000,0x0(%edx,%ecx,1),%esi
outsl  %ds:(%esi),(%dx)
je     804d469 <_IO_stdin_used+0x245>
and    %cl,0x41(%ebp)
dec    %edx
dec    %edi
push   %edx
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x49(%ebp)
dec    %esi
dec    %edi
push   %edx
and    %ch,0x75(%ebp)
jae    804d48a <_IO_stdin_used+0x266>
and    %ah,0x65(%edx)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x65687720,0x64(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
and    %ch,0x73(%ecx)
and    %ah,0x2c(%edx)
and    %ah,0x2c(%ebx)
and    %ch,0x72(%edi)
and    %dh,0x2c(%ebp)
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
jns    804d450 <_IO_stdin_used+0x22c>
insl   (%dx),%es:(%edi)
jne    804d4bc <_IO_stdin_used+0x298>
je     804d46b <_IO_stdin_used+0x247>
bound  %esp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
imul   $0x68772064,0x65(%esp,%esi,2),%esi
outsb  %gs:(%esi),(%dx)
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
and    %ch,0x73(%ecx)
and    %dh,0x2e(%eax)
and    %ah,(%eax)
dec    %ecx
data16
and    %cl,0x41(%ebp)
dec    %edx
dec    %edi
push   %edx
and    %ch,0x72(%edi)
and    %cl,0x49(%ebp)
dec    %esi
dec    %edi
push   %edx
and    %ah,0x65(%edx)
imul   $0x74697720,0x73(%bp),%ebp
push   $0x20783020
outsl  %ds:(%esi),(%dx)
jb     804d4ab <_IO_stdin_used+0x287>
xor    %bl,0x2c(%eax)
or     0x74(%ecx),%ch
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
je     804d4fe <_IO_stdin_used+0x2da>
jb     804d50b <_IO_stdin_used+0x2e7>
jb     804d502 <_IO_stdin_used+0x2de>
je     804d504 <_IO_stdin_used+0x2e0>
and    %ah,%fs:0x73(%ecx)
and    %ch,0x65(%eax)
js     804d509 <_IO_stdin_used+0x2e5>
fs arpl %bp,%fs:%gs:0x6d(%ecx)
popa
insb   (%dx),%es:(%edi)
cmp    (%eax),%esp
outsl  %ds:(%esi),(%dx)
je     804d51c <_IO_stdin_used+0x2f8>
gs
jb     804d52e <_IO_stdin_used+0x30a>
imul   $0x6669202c,0x65(%ebx),%esi
and    %ch,0x74(%ecx)
and    %ah,0x65(%edx)
imul   $0x74697720,0x73(%bp),%ebp
push   $0x202c3020
popa
jae    804d4f4 <_IO_stdin_used+0x2d0>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x6c(%ecx,%eiz,2)
cmp    (%edx),%ecx
outsl  %ds:(%esi),(%dx)
je     804d546 <_IO_stdin_used+0x322>
gs
jb     804d558 <_IO_stdin_used+0x334>
imul   $0x7361202c,0x65(%ebx),%esi
and    %ah,0x63(%ebp,%eiz,2)
imul   $0x20202e6c,0x61(%ebp),%ebp
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ch,0x61(%ebp)
jns    804d51c <_IO_stdin_used+0x2f8>
bound  %esp,0x3a(%ebp)
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
and    %ah,(%eax)
bound  %esp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x72(%ebx)
gs
popa
je     804d579 <_IO_stdin_used+0x355>
and    %ah,0x20(%ecx)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x28,(%eax),%esp
bound  %esi,0x66(%ebp)
data16
gs
jb     804d58a <_IO_stdin_used+0x366>
sub    %esp,%fs:(%eax)
jae    804d59a <_IO_stdin_used+0x376>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ah,0x2c(%ebx)
and    %dh,0x20(%ebp)
and    %ah,(%eax)
arpl   %si,0x65(%edx)
popa
je     804d5a9 <_IO_stdin_used+0x385>
and    %ah,0x20(%ecx)
arpl   %bp,0x61(%eax)
jb     804d5ad <_IO_stdin_used+0x389>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ch,(%eax)
jne    804d5c2 <_IO_stdin_used+0x39e>
bound  %esi,0x66(%ebp)
data16
gs
jb     804d5c0 <_IO_stdin_used+0x39c>
sub    %esp,%fs:(%eax)
jae    804d5d0 <_IO_stdin_used+0x3ac>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %dh,0x20(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x72(%ebx)
gs
popa
je     804d5df <_IO_stdin_used+0x3bb>
and    %ah,0x20(%ecx)
inc    %esi
dec    %ecx
inc    %esi
dec    %edi
or     (%eax),%al
add    %cl,(%edx)
dec    %esi
dec    %edi
push   %esp
inc    %ebp
cmp    (%eax),%ah
jns    804d5fc <_IO_stdin_used+0x3d8>
jne    804d601 <_IO_stdin_used+0x3dd>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x61(%ebp)
jns    804d5ba <_IO_stdin_used+0x396>
push   $0x20657661
imul   $0x206e776f,0x20(%ebx,%esi,2),%esi
jbe    804d60e <_IO_stdin_used+0x3ea>
jb     804d61e <_IO_stdin_used+0x3fa>
imul   $0x20666f20,0x6e(%edi),%ebp
and    $0x77202c73,%eax
push   $0x20686369
jne    804d631 <_IO_stdin_used+0x40d>
jne    804d621 <_IO_stdin_used+0x3fd>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    804d5e4 <_IO_stdin_used+0x3c0>
jae    804d63b <_IO_stdin_used+0x417>
jo     804d62d <_IO_stdin_used+0x409>
jb     804d63d <_IO_stdin_used+0x419>
gs
fs
gs
jae    804d5d9 <_IO_stdin_used+0x3b5>
je     804d639 <_IO_stdin_used+0x415>
and    %dh,%gs:0x65(%esi)
jb     804d64a <_IO_stdin_used+0x426>
imul   $0x73656420,0x6e(%edi),%ebp
arpl   %si,0x69(%edx)
bound  %esp,0x64(%ebp)
and    %ch,0x65(%eax)
jb     804d64e <_IO_stdin_used+0x42a>
and    %ah,%cs:(%eax)
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    804d657 <_IO_stdin_used+0x433>
and    %dh,0x65(%edx)
data16
gs
jb     804d619 <_IO_stdin_used+0x3f5>
je     804d66a <_IO_stdin_used+0x446>
and    %bh,0x6f(%ecx)
jne    804d672 <_IO_stdin_used+0x44e>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
daa
jae    804d629 <_IO_stdin_used+0x405>
outsl  %fs:(%esi),(%dx)
arpl   %si,0x6d(%ebp)
outsb  %gs:(%esi),(%dx)
je     804d673 <_IO_stdin_used+0x44f>
je     804d67d <_IO_stdin_used+0x459>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     0x6f(%esi),%ah
jb     804d63b <_IO_stdin_used+0x417>
fs
gs
je     804d680 <_IO_stdin_used+0x45c>
imul   $0x756f6261,0x20(%ebx,%esi,2),%ebp
je     804d649 <_IO_stdin_used+0x425>
je     804d693 <_IO_stdin_used+0x46f>
and    %ch,%gs:0x70(%edi)
je     804d69a <_IO_stdin_used+0x476>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804d655 <_IO_stdin_used+0x431>
imul   $0x6f707075,0x73(%eax,%eiz,1),%esi
jb     804d6b3 <_IO_stdin_used+0x48f>
jae    804d66f <_IO_stdin_used+0x44b>
or     (%eax),%al
add    %ch,0x74(%eax)
je     804d6b8 <_IO_stdin_used+0x494>
cmp    (%edi),%ch
das
ja     804d6c4 <_IO_stdin_used+0x4a0>
ja     804d67d <_IO_stdin_used+0x459>
outsb  %ds:(%si),(%dx)
jne    804d681 <_IO_stdin_used+0x45d>
outsl  %ds:(%esi),(%dx)
jb     804d6bd <_IO_stdin_used+0x499>
das
jae    804d6c8 <_IO_stdin_used+0x4a4>
data16
je     804d6d3 <_IO_stdin_used+0x4af>
popa
jb     804d6c4 <_IO_stdin_used+0x4a0>
das
arpl   %bp,0x72(%edi)
gs
jne    804d6da <_IO_stdin_used+0x4b6>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     804d6d3 <_IO_stdin_used+0x4af>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804d699 <_IO_stdin_used+0x475>
jne    804d6ee <_IO_stdin_used+0x4ca>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     804d6ff <_IO_stdin_used+0x4db>
popa
jb     804d6f0 <_IO_stdin_used+0x4cc>
cmp    (%eax),%ah
cmp    $0x68,%al
je     804d705 <_IO_stdin_used+0x4e1>
jo     804d6cd <_IO_stdin_used+0x4a9>
das
das
ja     804d70e <_IO_stdin_used+0x4ea>
ja     804d6c7 <_IO_stdin_used+0x4a3>
outsb  %ds:(%si),(%dx)
jne    804d6cb <_IO_stdin_used+0x4a7>
outsl  %ds:(%esi),(%dx)
jb     804d707 <_IO_stdin_used+0x4e3>
das
addr16
gs
je     804d70d <_IO_stdin_used+0x4e9>
gs
insb   (%dx),%es:(%edi)
jo     804d6d8 <_IO_stdin_used+0x4b4>
or     %ds:(%eax),%al
push   %edx
gs
jo     804d71f <_IO_stdin_used+0x4fb>
jb     804d726 <_IO_stdin_used+0x502>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    804d728 <_IO_stdin_used+0x504>
popa
je     804d728 <_IO_stdin_used+0x504>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 804d6e7 <_IO_stdin_used+0x4c3>
je     804d738 <_IO_stdin_used+0x514>
and    %bh,(%eax,%ebp,2)
je     804d742 <_IO_stdin_used+0x51e>
jo     804d70a <_IO_stdin_used+0x4e6>
das
das
je     804d746 <_IO_stdin_used+0x522>
popa
outsb  %ds:(%esi),(%dx)
jae    804d744 <_IO_stdin_used+0x520>
popa
je     804d744 <_IO_stdin_used+0x520>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     804d751 <_IO_stdin_used+0x52d>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     804d74f <_IO_stdin_used+0x52b>
das
je     804d750 <_IO_stdin_used+0x52c>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     804d718 <_IO_stdin_used+0x4f4>
arpl   %bp,0x6d(%edi)
jo     804d769 <_IO_stdin_used+0x545>
gs
je     804d765 <_IO_stdin_used+0x541>
and    %ah,0x63(%edi,%ebp,2)
jne    804d773 <_IO_stdin_used+0x54f>
outsb  %gs:(%esi),(%dx)
je     804d76b <_IO_stdin_used+0x547>
je     804d775 <_IO_stdin_used+0x551>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     804d787 <_IO_stdin_used+0x563>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     804d783 <_IO_stdin_used+0x55f>
jne    804d794 <_IO_stdin_used+0x570>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x75(%ebp)
jae    804d7b5 <_IO_stdin_used+0x591>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    804d76a <_IO_stdin_used+0x546>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    804d76f <_IO_stdin_used+0x54b>
imul   $0x6570,0x20(%ebp,%eiz,2),%bp
jb     804d7c5 <_IO_stdin_used+0x5a1>
imul   $0x206e6f69,0x73(%ebx),%esi
bound  %ebp,0x74(%ecx)
jae    804d764 <_IO_stdin_used+0x540>
push   %ebx
jo     804d7cc <_IO_stdin_used+0x5a8>
arpl   %bp,0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804d792 <_IO_stdin_used+0x56e>
jb     804d7d9 <_IO_stdin_used+0x5b5>
jno    804d7eb <_IO_stdin_used+0x5c7>
imul   $0x6a616d20,0x65(%edx),%esi
outsl  %ds:(%esi),(%dx)
jb     804d7a0 <_IO_stdin_used+0x57c>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x69(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     804d7aa <_IO_stdin_used+0x586>
fs
gs
jbe    804d7f7 <_IO_stdin_used+0x5d3>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    804d801 <_IO_stdin_used+0x5dd>
bound  %esp,0x72(%ebp)
jae    804d7c7 <_IO_stdin_used+0x5a3>
add    %al,(%eax)
add    %al,0x69(%esi)
outsw  %ds:(%esi),(%dx)
jae    804d7c2 <_IO_stdin_used+0x59e>
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     804d7c9 <_IO_stdin_used+0x5a5>
push   $0x20657661
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     804d7d4 <_IO_stdin_used+0x5b0>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x69(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     804d7de <_IO_stdin_used+0x5ba>
fs
gs
jbe    804d82b <_IO_stdin_used+0x607>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    804d835 <_IO_stdin_used+0x611>
bound  %esp,0x72(%ebp)
jae    804d7fb <_IO_stdin_used+0x5d7>
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    804d841 <_IO_stdin_used+0x61d>
je     804d7fe <_IO_stdin_used+0x5da>
fs
gs
popaw
jne    804d850 <_IO_stdin_used+0x62c>
je     804d806 <_IO_stdin_used+0x5e2>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     804d85a <_IO_stdin_used+0x636>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     804d85e <_IO_stdin_used+0x63a>
js     804d86f <_IO_stdin_used+0x64b>
and    %dh,0x20(%edi,%ebp,2)
and    $0x73,%eax
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x61(%ebp)
push   $0x6f
jb     804d832 <_IO_stdin_used+0x60e>
fs
gs
jbe    804d87f <_IO_stdin_used+0x65b>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    804d889 <_IO_stdin_used+0x665>
bound  %esp,0x72(%ebp)
and    %ah,0x69000073
outsb  %ds:(%esi),(%dx)
jbe    804d889 <_IO_stdin_used+0x665>
insb   (%dx),%es:(%edi)
imul   $0x726f6e69,0x6d(%eax,%eiz,1),%esp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6d756e20,0x65(%ebx),%esp
bound  %esp,0x72(%ebp)
and    %ah,0x6b6d0073
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %cl,%fs:(%edx)
push   %edx
gs
jo     804d8bd <_IO_stdin_used+0x699>
jb     804d8c4 <_IO_stdin_used+0x6a0>
and    %ah,0x75622073
addr16 jae 804d879 <_IO_stdin_used+0x655>
je     804d8ca <_IO_stdin_used+0x6a6>
and    %ah,0x62000a73
jne    804d8ca <_IO_stdin_used+0x6a6>
sub    $0x65726f63,%eax
jne    804d8de <_IO_stdin_used+0x6ba>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     804d8dc <_IO_stdin_used+0x6b8>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    804d8c6 <_IO_stdin_used+0x6a2>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     804d8f7 <_IO_stdin_used+0x6d3>
jne    804d908 <_IO_stdin_used+0x6e4>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
das
jne    804d912 <_IO_stdin_used+0x6ee>
jb     804d8d0 <_IO_stdin_used+0x6ac>
jae    804d90b <_IO_stdin_used+0x6e7>
popa
jb     804d90b <_IO_stdin_used+0x6e7>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x76(%ecx,%eiz,2)
imul   $0x654b6361,0x4d(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jp     804d925 <_IO_stdin_used+0x701>
add    %ch,%gs:0x3a(%ebp)
pop    %edx
cmp    (%eax),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6f(%ebp)
fs add %ch,%fs:%gs:0x69(%ebp)
jae    804d947 <_IO_stdin_used+0x723>
imul   $0x65706f20,0x67(%esi),%ebp
jb     804d93e <_IO_stdin_used+0x71a>
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x69(%ebp)
jae    804d957 <_IO_stdin_used+0x733>
imul   $0x65706f20,0x67(%esi),%ebp
jb     804d94e <_IO_stdin_used+0x72a>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x66(%ecx)
je     804d959 <_IO_stdin_used+0x735>
jb     804d916 <_IO_stdin_used+0x6f2>
and    $0x78650073,%eax
je     804d96f <_IO_stdin_used+0x74b>
popa
and    %ch,0x70(%edi)
gs
jb     804d965 <_IO_stdin_used+0x741>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6e690073
jbe    804d96f <_IO_stdin_used+0x74b>
insb   (%dx),%es:(%edi)
imul   $0x63697665,0x64(%eax,%eiz,1),%esp
and    %ah,%gs:0x73252073
add    %ch,0x6e(%ecx)
jbe    804d984 <_IO_stdin_used+0x760>
insb   (%dx),%es:(%edi)
imul   $0x63697665,0x64(%eax,%eiz,1),%esp
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ah,%gs:0x6f630073
outsb  %ds:(%esi),(%dx)
je     804d9a0 <_IO_stdin_used+0x77c>
js     804d9b1 <_IO_stdin_used+0x78d>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804d943 <_IO_stdin_used+0x71f>
jbe    804d9aa <_IO_stdin_used+0x786>
jb     804d9ba <_IO_stdin_used+0x796>
imul   $0x0,0x6e(%edi),%ebp
add    %al,(%eax)
flds   %ss:(%eax,%ecx,1)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %edx
add    %al,(%eax)
add    %cl,%bl
fadds  (%eax,%ecx,1)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,(%esi)
flds   (%eax,%ecx,1)
jle    804d98d <_IO_stdin_used+0x769>
(bad)
incl   -0x27(%ebx)
add    $0x8,%al
jge    804d99d <_IO_stdin_used+0x779>
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,(%eax)
xor    %cs:(%ecx),%dh
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     804d9c1 <_IO_stdin_used+0x79d>
and    $0x25203a73,%eax
jae    804d9c8 <_IO_stdin_used+0x7a4>
fcomps -0x60d8f7fc(%edi)
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
or     %ah,-0x5ffff7fc(%eax)
add    $0x8,%al
clc
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
daa
lahf
add    $0x8,%al
lock lahf
add    $0x8,%al
call   490cdeec <_end+0x4107dbd8>
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 804dab3 <_IO_stdin_used+0x88f>
xor    %bl,0x20(%ebp)
ja     804dabe <_IO_stdin_used+0x89a>
jae    804da7f <_IO_stdin_used+0x85b>
jo     804dac2 <_IO_stdin_used+0x89e>
jae    804dad6 <_IO_stdin_used+0x8b2>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    804dad3 <_IO_stdin_used+0x8af>
push   $0x206e6120
gs
js     804dad9 <_IO_stdin_used+0x8b5>
arpl   %sp,(%eax)
jae    804daf1 <_IO_stdin_used+0x8cd>
jae    804daee <_IO_stdin_used+0x8ca>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     804db0e <_IO_stdin_used+0x8ea>
jb     804db0c <_IO_stdin_used+0x8e8>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    804db32 <_IO_stdin_used+0x90e>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    804db28 <_IO_stdin_used+0x904>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
pop    %eax
movsl  %ds:(%esi),%es:(%edi)
add    $0x8,%al
cmp    %ch,-0x5497f7fc(%ebx)
add    $0x8,%al
sub    %ch,-0x5597f7fc(%edx)
add    $0x8,%al
cwtl
stos   %al,%es:(%edi)
add    $0x8,%al
shrb   $0x4,-0x553ff7fc(%edx)
or     %al,%al
stos   %al,%es:(%edi)
add    $0x8,%al
pusha
test   $0x4,%al
or     %bl,-0x57(%eax)
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa8d80804,%eax
add    $0x8,%al
cmp    %ch,-0x57a7f7fc(%eax)
add    $0x8,%al
push   %eax
test   $0x4,%al
or     %cl,-0x58(%eax)
add    $0x8,%al
inc    %eax
test   $0x4,%al
or     %dl,(%eax)
test   $0x4,%al
or     %bl,-0x57(%eax)
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa9580804,%eax
add    $0x8,%al
pop    %eax
test   $0xa7890804,%eax
add    $0x8,%al
mov    %esp,-0x5876f7fc(%edi)
add    $0x8,%al
andl   $0xa6f80804,-0x5876f7fc(%edi)
a6
add    $0x8,%al
mov    %esp,-0x56f7f7fc(%edi)
add    $0x8,%al
mov    %esp,-0x5876f7fc(%edi)
add    $0x8,%al
mov    %esp,-0x5907f7fc(%edi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    %esp,-0x5876f7fc(%edi)
add    $0x8,%al
mov    %esp,-0x5876f7fc(%edi)
add    $0x8,%al
dec    %eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
pop    %eax
test   $0xa6f80804,%eax
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    %esp,-0x5717f7fc(%edi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    %esp,-0x5907f7fc(%edi)
add    $0x8,%al
mov    %esp,-0x5907f7fc(%edi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
clc
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
pusha
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    %esp,-0x589ff7fc(%edi)
add    $0x8,%al
andl   $0xad800804,-0x527ff7fc(%edi)
ad
add    $0x8,%al
sbb    %ch,-0x527ff7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x527ff7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x52e7f7fc(%ebp)
add    $0x8,%al
sbb    %ch,-0x527ff7fc(%ebp)
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %ah,-0x52f7fb26(%ebp)
fiaddl (%eax,%ecx,1)
mov    $0xda,%bl
add    $0x8,%al
int3
loopne 804ddd3 <_IO_stdin_used+0xbaf>
or     %al,%al
fiaddl (%eax,%ecx,1)
enter  $0x4da,$0x8
cmpsl  %es:(%edi),%ds:(%esi)
fadds  (%eax,%ecx,1)
iret
fiaddl (%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
and    $0x25282073,%eax
jae    804de14 <_IO_stdin_used+0xbf0>
and    %ah,0x25000a73
jae    804de13 <_IO_stdin_used+0xbef>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     804de67 <_IO_stdin_used+0xc43>
je     804de74 <_IO_stdin_used+0xc50>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     804de77 <_IO_stdin_used+0xc53>
je     804de84 <_IO_stdin_used+0xc60>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     804de8e <_IO_stdin_used+0xc6a>
je     804de9b <_IO_stdin_used+0xc77>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804de60 <_IO_stdin_used+0xc3c>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     804deb2 <_IO_stdin_used+0xc8e>
jb     804deb9 <_IO_stdin_used+0xc95>
and    %ah,0x75(%edx)
addr16 jae 804de6b <_IO_stdin_used+0xc47>
je     804debc <_IO_stdin_used+0xc98>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    804dec1 <_IO_stdin_used+0xc9d>
and    %al,0x50(%edi)
dec    %esp
jbe    804de95 <_IO_stdin_used+0xc71>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     804dee4 <_IO_stdin_used+0xcc0>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     804de9a <_IO_stdin_used+0xc76>
insb   (%dx),%es:(%edi)
popa
je     804dee3 <_IO_stdin_used+0xcbf>
jb     804dea0 <_IO_stdin_used+0xc7c>
cmp    $0x68,%al
je     804def8 <_IO_stdin_used+0xcd4>
jo     804dec0 <_IO_stdin_used+0xc9c>
das
das
outsb  %ds:(%si),(%dx)
jne    804deba <_IO_stdin_used+0xc96>
outsl  %ds:(%esi),(%dx)
jb     804def6 <_IO_stdin_used+0xcd2>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 804df08 <_IO_stdin_used+0xce4>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    804dec9 <_IO_stdin_used+0xca5>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     804df2d <_IO_stdin_used+0xd09>
popa
jb     804df1e <_IO_stdin_used+0xcfa>
cmp    (%eax),%ah
jns    804df2c <_IO_stdin_used+0xd08>
jne    804dedf <_IO_stdin_used+0xcbb>
popa
jb     804df27 <_IO_stdin_used+0xd03>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     804df47 <_IO_stdin_used+0xd23>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     804df51 <_IO_stdin_used+0xd2d>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     804df6e <_IO_stdin_used+0xd4a>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     804df6d <_IO_stdin_used+0xd49>
outsb  %ds:(%esi),(%dx)
je     804df2b <_IO_stdin_used+0xd07>
jo     804df72 <_IO_stdin_used+0xd4e>
jb     804df7c <_IO_stdin_used+0xd58>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     804df8c <_IO_stdin_used+0xd68>
je     804df99 <_IO_stdin_used+0xd75>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804df5e <_IO_stdin_used+0xd3a>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804dfac <_IO_stdin_used+0xd88>
je     804dfb9 <_IO_stdin_used+0xd95>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804df7e <_IO_stdin_used+0xd5a>
and    %ah,0x250a2c73
jae    804df86 <_IO_stdin_used+0xd62>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804dfd0 <_IO_stdin_used+0xdac>
je     804dfdd <_IO_stdin_used+0xdb9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804dfa2 <_IO_stdin_used+0xd7e>
and    %ah,0x250a2c73
jae    804dfaa <_IO_stdin_used+0xd86>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804dff8 <_IO_stdin_used+0xdd4>
je     804e005 <_IO_stdin_used+0xde1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804dfca <_IO_stdin_used+0xda6>
and    %ah,0x250a2c73
jae    804dfd2 <_IO_stdin_used+0xdae>
and    %ah,0x25202c73
jae    804dfda <_IO_stdin_used+0xdb6>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e024 <_IO_stdin_used+0xe00>
je     804e031 <_IO_stdin_used+0xe0d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804dff6 <_IO_stdin_used+0xdd2>
and    %ah,0x250a2c73
jae    804dffe <_IO_stdin_used+0xdda>
and    %ah,0x25202c73
jae    804e006 <_IO_stdin_used+0xde2>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e054 <_IO_stdin_used+0xe30>
je     804e061 <_IO_stdin_used+0xe3d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e026 <_IO_stdin_used+0xe02>
and    %ah,0x250a2c73
jae    804e02e <_IO_stdin_used+0xe0a>
and    %ah,0x25202c73
jae    804e036 <_IO_stdin_used+0xe12>
and    %ah,0x250a2c73
jae    804e03e <_IO_stdin_used+0xe1a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e088 <_IO_stdin_used+0xe64>
je     804e095 <_IO_stdin_used+0xe71>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e05a <_IO_stdin_used+0xe36>
and    %ah,0x250a2c73
jae    804e062 <_IO_stdin_used+0xe3e>
and    %ah,0x25202c73
jae    804e06a <_IO_stdin_used+0xe46>
and    %ah,0x250a2c73
jae    804e072 <_IO_stdin_used+0xe4e>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
push   %eax
mov    $0xba580804,%edx
add    $0x8,%al
cwtl
mov    $0xbae00804,%edx
add    $0x8,%al
cmp    %bh,-0x446ff7fc(%ebx)
add    $0x8,%al
clc
mov    $0xbc700804,%ebx
add    $0x8,%al
adc    %bh,-0x4657f7fc(%ecx)
add    $0x8,%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     804e0fd <_IO_stdin_used+0xed9>
jb     804e0ef <_IO_stdin_used+0xecb>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     804e111 <_IO_stdin_used+0xeed>
popa
jb     804e102 <_IO_stdin_used+0xede>
and    %al,0x6f(%esi)
jne    804e110 <_IO_stdin_used+0xeec>
fs
popa
je     804e10f <_IO_stdin_used+0xeeb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804e12e <_IO_stdin_used+0xf0a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:0x62(%ecx,%ebp,2)
das
js     804e139 <_IO_stdin_used+0xf15>
je     804e13a <_IO_stdin_used+0xf16>
je     804e139 <_IO_stdin_used+0xf15>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
xor    %ah,(%eax)
cmp    $0x3d,%al
and    %dh,0x74(%ebx)
jb     804e14d <_IO_stdin_used+0xf29>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     804e15c <_IO_stdin_used+0xf38>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
pop    %edx
leave
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
mov    $0xc8,%al
add    $0x8,%al
rol    %bl
add    $0x8,%al
adc    %cl,%al
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
mov    $0xd00804c7,%ebx
ret
add    $0x8,%al
jmp    804e0e9 <_IO_stdin_used+0xec5>
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
or     %edi,%eax
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
movb   $0x8,(%si)
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
mov    $0xb0804c5,%ecx
lds    (%eax,%ecx,1),%eax
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
loop   804e13e <_IO_stdin_used+0xf1a>
add    $0x8,%al
mov    %al,0xd00804c4
ret
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
adc    %cl,%al
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
mov    $0xd00804c7,%ebx
ret
add    $0x8,%al
jmp    804e169 <_IO_stdin_used+0xf45>
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
movb   $0x8,(%si)
rol    %bl
add    $0x8,%al
rol    %bl
add    $0x8,%al
mov    $0x780804c4,%edx
jae    804e247 <_IO_stdin_used+0x1023>
jb     804e249 <_IO_stdin_used+0x1025>
outsl  %ds:(%esi),(%dx)
jne    804e245 <_IO_stdin_used+0x1021>
popa
js     804e1db <_IO_stdin_used+0xfb7>
das
jne    804e251 <_IO_stdin_used+0x102d>
jb     804e20f <_IO_stdin_used+0xfeb>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %ebx,(%ebx)
add    (%ebx),%edi
push   %eax
add    (%eax),%al
add    %cl,0x0(%ecx)
add    %al,(%eax)
mov    %gs,0x26cffff(%ebx)
add    %al,(%eax)
cmp    $0xaf,%al
(bad)
pushl  -0x13fffffe(%eax)
mov    $0xff,%dh
call   *0x7c000002(%eax)
mov    $0x2d4ffff,%edx
add    %al,(%eax)
mov    %?,0x2e8ffff(%edx)
add    %al,(%eax)
pushf
mov    $0x2fcffff,%edx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x328ffff,%ebx
add    %al,(%eax)
int3
mov    $0x348ffff,%ebx
add    %al,(%eax)
or     $0xbc,%al
(bad)
ljmp   *0x0(%ebx,%eax,1)
add    %bh,(%edi,%edi,4)
(bad)
inc    %esp
add    (%eax),%eax
add    %bl,0x3e8ffff(%edi,%edi,4)
add    %al,(%eax)
or     $0xc1,%al
(bad)
ljmp   *(%eax)
add    $0x0,%al
add    %bh,0x468ffff(%ecx,%eax,8)
add    %al,(%eax)
in     (%dx),%al
sar    $0xff,%edi
xchg   %eax,%esp
add    $0x0,%al
add    %bl,%ah
ret    $0xffff
int3
add    $0x0,%al
add    %cl,0x510ffff(,%ecx,8)
add    %al,(%eax)
lods   %ds:(%esi),%al
into
(bad)
call   *0x5(%eax)
add    %al,(%eax)
in     (%dx),%al
into
(bad)
incl   -0x30f40000(%ebp,%eax,1)
(bad)
lcall  *0x2c000005(%eax)
iret
(bad)
ljmp   *-0x30940000(%ebp,%eax,1)
(bad)
call   *%eax
add    $0xcf8c0000,%eax
(bad)
jmp    *%esp
add    $0xcfcc0000,%eax
(bad)
decl   (%eax)
push   %es
add    %al,(%eax)
sub    $0xd0,%al
(bad)
(bad)
cmp    $0x6,%al
add    %al,(%eax)
or     $0xd1,%al
(bad)
(bad)
js     804e2dc <_IO_stdin_used+0x10b8>
add    %al,(%eax)
cmp    $0xd1,%al
(bad)
call   *-0x33fffffa(%eax)
sar    %edi
inc    %esp
push   %es
add    %al,(%eax)
in     (%dx),%al
sar    %edi
(bad)
fadds  (%esi)
add    %al,(%eax)
or     $0xd2,%al
(bad)
(bad)
in     (%dx),%al
push   %es
add    %al,(%eax)
sub    $0xd2,%al
(bad)
incl   (%eax)
pop    %es
add    %al,(%eax)
dec    %esp
sar    %cl,%bh
call   *(%edi,%eax,1)
add    %al,(%eax)
jl     804e2dc <_IO_stdin_used+0x10b8>
(bad)
pushl  (%edi,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
sar    %cl,%bh
call   *0x0(%edi,%eax,1)
add    %bl,%ah
sar    %cl,%bh
ljmp   *0x0(%edi,%eax,1)
add    %cl,(%ebx,%edx,8)
(bad)
incl   -0x2c440000(%edi,%eax,1)
(bad)
ljmp   *-0x13fffff9(%eax)
sar    %cl,%edi
inc    %eax
pop    %es
add    %al,(%eax)
sbb    $0xd4,%al
(bad)
(bad)
fadds  (%edi)
add    %al,(%eax)
dec    %esp
aam    $0xff
push   %eax
pop    %es
add    %al,(%eax)
cld
aam    $0xff
call   *(%eax,%ecx,1)
add    %al,(%eax)
cmp    $0xd5,%al
(bad)
ljmp   *(%eax,%ecx,1)
add    %al,(%eax)
jl     804e32f <_IO_stdin_used+0x110b>
(bad)
incl   0x0(%eax,%ecx,1)
add    %bh,0x85cffff(%ebp,%edx,8)
add    %al,(%eax)
(bad)
(bad)
pushl  0x8(%eax)
add    %al,(%eax)
cld
aad    $0xff
incl   -0x29e40000(%eax,%ecx,1)
(bad)
lcall  *0x3c000008(%eax)
(bad)
(bad)
ljmp   *-0x24540000(%eax,%ecx,1)
(bad)
decl   0x9(%eax)
add    %al,(%eax)
cld
(bad)
jmp    *0x9(%eax)
add    %al,(%eax)
pop    %esp
fdivr  %st,%st(7)
incl   -0x23640000(%ecx,%ecx,1)
(bad)
lcall  *-0x22b40000(%ecx,%ecx,1)
(bad)
inc    %eax
or     %eax,(%eax)
add    %bh,-0x1(%ebp,%ebx,8)
jmp    *%esp
or     %eax,(%eax)
add    %ch,0xa08ffff(%ebp,%ebx,8)
add    %al,(%eax)
mov    $0x1cffffdd,%esp
or     (%eax),%al
add    %cl,(%esi,%ebx,8)
(bad)
decl   0x0(%edx,%ecx,1)
add    %cl,-0x1(%esi,%ebx,8)
(bad)
js     804e3e0 <_IO_stdin_used+0x11bc>
add    %al,(%eax)
lods   %ds:(%esi),%al
fdivrp %st,%st(7)
ljmp   *-0x3fffff6(%eax)
fdivrp %st,%st(7)
dec    %esp
or     (%eax),%al
add    %ch,(%edi,%ebx,8)
(bad)
(bad)
in     (%dx),%al
or     (%eax),%al
add    %bl,-0x1(%edi,%ebx,8)
decl   (%eax)
or     (%eax),%eax
add    %cl,0xb28ffff(%edi,%ebx,8)
add    %al,(%eax)
mov    $0x48ffffdf,%esp
or     (%eax),%eax
add    %cl,(%eax,%eiz,8)
(bad)
lcall  *0x0(%ebx,%ecx,1)
add    %cl,-0x1(%eax,%ebp,8)
pushl  -0x17340000(%ebx,%ecx,1)
(bad)
decl   (%esp,%ecx,1)
add    %al,(%eax)
mov    %gs,%esp
(bad)
decl   0x0(%esp,%ecx,1)
add    %ch,0xc94ffff(,%ebp,8)
add    %al,(%eax)
mov    %gs,%ebp
(bad)
inc    %eax
or     $0x0,%al
add    %bl,(%esi,%ebp,8)
(bad)
lcall  *(%eax)
or     $0xef4c0000,%eax
(bad)
incl   -0x10440000(%ebp,%ecx,1)
(bad)
inc    %eax
or     $0xefcc0000,%eax
(bad)
call   *%esp
.byte 0xd
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     804e46f <_IO_stdin_used+0x124b>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %ch,0x3b0ffff(%ecx)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     804e48f <_IO_stdin_used+0x126b>
js     804e48d <_IO_stdin_used+0x1269>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,-0x1(%esp,%esi,4)
decl   0x3(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
test   %ch,0x6bcff(%edi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %ebx
xchg   %al,(%ecx,%ecx,2)
addl   $0x0,0x100000
add    %al,-0x48600000(%eax,%eax,1)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x64000000(%eax)
mov    $0xff,%bh
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,-0x48680000(%eax,%eax,1)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
fadds  (%eax)
add    %al,(%eax)
cmp    $0xb8,%al
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%al
add    %al,(%eax)
add    %bh,-0x1(%eax,%edi,4)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,(%ecx,%eax,1)
add    %al,(%eax)
cwtl
mov    $0x322ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
icebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
je     804e5cf <_IO_stdin_used+0x13ab>
add    %al,(%eax)
jo     804e58d <_IO_stdin_used+0x1369>
(bad)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x7ff1bcfe(%ebx)
add    %eax,(%edx)
push   %esi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cwtl
add    %eax,(%eax)
add    %ch,0x16fffff(%ebx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x3210e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fadds  (%ecx)
add    %al,(%eax)
fdivrl 0xadff(%edi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%edx)
add    %al,(%eax)
dec    %esp
mov    $0x26ffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
inc    %esp
add    (%eax),%al
add    %dl,-0x43(%eax)
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %cl,(%eax)
mov    $0xa2fffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
rolb   $0x0,(%edx)
add    %dh,%ah
(bad)
(bad)
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,-0x1(%ecx,%ecx,8)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%eax,1)
add    %al,(%eax)
pusha
leave
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x3(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
leave
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %bh,-0x37(%eax)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%ebx)
add    %dl,0x19ffff(%ecx,%ecx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
add    (%eax),%eax
add    %ah,0x38ffffc9(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
mov    $0xbc000003,%eax
leave
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
add    (%eax),%eax
add    %ch,%al
leave
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,(%eax)
add    $0x0,%al
add    %cl,0x2bffff(%edx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    $0x0,%al
add    %ah,0x84ffff(%edx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
je     804e8d2 <_IO_stdin_used+0x16ae>
add    %al,(%eax)
add    %cl,%bl
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0xc000004(%eax)
lret
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x34e80000(%esp,%eax,1)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x24000004(%eax)
lret
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
les    (%eax,%eax,1),%eax
add    %dh,(%eax)
lret
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,%ah
add    $0x0,%al
add    %al,-0x35(%eax)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,-0x34b00000(,%eax,1)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sbb    $0x5,%al
add    %al,(%eax)
push   $0x2bffffcb
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
xor    $0x5,%al
add    %al,(%eax)
or     $0xff,%bl
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
add    $0xcc0c0000,%eax
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jo     804e9cf <_IO_stdin_used+0x17ab>
add    %al,(%eax)
and    $0xcc,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %al,0xcc3c0000
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    0x54000005,%al
int3
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
les    0xcce00000,%eax
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
faddl  0xcd080000
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
hlt
add    $0xcd300000,%eax
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
or     $0x6,%al
add    %al,(%eax)
pop    %eax
int    $0xff
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
push   %es
add    %al,(%eax)
fs
int    $0xff
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%eax,1)
add    %al,(%eax)
jo     804ea5f <_IO_stdin_used+0x183b>
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x6(%eax)
add    %al,(%eax)
jl     804ea73 <_IO_stdin_used+0x184f>
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x5c000000(%eax)
push   %es
add    %al,(%eax)
mov    %cl,%ch
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
clc
push   %es
add    %al,(%eax)
pop    %esp
sar    %cl,%bh
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,(%eax)
pop    %es
add    %al,(%eax)
xchg   %eax,%esp
sar    %cl,%bh
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    $0x7,%al
add    %al,(%eax)
rcl    %dl
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
pop    %es
add    %al,(%eax)
clc
sar    %cl,%bh
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
jo     804ebd1 <_IO_stdin_used+0x19ad>
add    %al,(%eax)
test   %dl,%bl
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
pop    %es
add    %al,(%eax)
nop
sar    %cl,%edi
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x9c000007,%eax
sar    %cl,%edi
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
int3
pop    %es
add    %al,(%eax)
cwtl
sar    %cl,%edi
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cld
pop    %es
add    %al,(%eax)
mov    $0x38ffffd3,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
sub    %cl,(%eax)
add    %al,(%eax)
int3
sar    %cl,%edi
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
or     %al,(%eax)
add    %bh,%ah
sar    %cl,%edi
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
jl     804ecde <_IO_stdin_used+0x1aba>
add    %al,(%eax)
sub    %dl,%ah
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bl,-0x2bc80000(%eax,%ecx,1)
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x4c000008,%eax
aam    $0xff
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,%al
or     %al,(%eax)
add    %bl,-0x1(%esp,%edx,8)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,%al
or     %al,(%eax)
add    %ch,-0x1(%esp,%edx,8)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0x0(%eax,%eax,1)
add    %cl,(%ecx,%ecx,1)
add    %al,(%eax)
test   $0xd4,%al
(bad)
pushl  (%ebx)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   $0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x0(%ecx,%ecx,1)
add    %dl,0x78ffffdc(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     804ede7 <_IO_stdin_used+0x1bc3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xb8000009,%esp
fdivr  %st,%st(7)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,%ah
or     %eax,(%eax)
add    %bh,(%eax)
loopne 804ee5a <_IO_stdin_used+0x1c36>
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
inc    %esp
or     (%eax),%al
add    %dl,0x5dffffe0(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,0xa(%eax)
add    %al,(%eax)
(bad)
loopne 804eece <_IO_stdin_used+0x1caa>
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0xc8000000
or     (%eax),%al
add    %bh,%ah
loopne 804ef26 <_IO_stdin_used+0x1d02>
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%ecx,1)
add    %al,(%eax)
shl    $0xff,%cl
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,0xb(%eax)
add    %al,(%eax)
hlt
loope  804efce <_IO_stdin_used+0x1daa>
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,-0x1e100000(%ebx,%ecx,1)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0xc0
cwtl
add    $0x8,%al
.byte 0xa0
cwtl
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
test   %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
pusha
lea    (%eax,%ecx,1),%eax
or     $0xc000000,%eax
rolb   %cl,(%eax,%ecx,1)
sbb    %eax,(%eax)
add    %al,(%eax)
add    %bh,%bh
add    $0x8,%al
sbb    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0xff,%al
add    $0x8,%al
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
rolb   0x60804(%esi)
add    %al,(%eax)
adc    %al,0xa0804(%edx)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    (%eax),%eax
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x208
add    %dl,%al
add    %eax,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dl,0x1108048b(%eax)
add    %al,(%eax)
add    %bl,-0x75(%eax)
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x28(%edi)
mov    (%eax,%ecx,1),%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x40(%edi)
mov    (%eax,%ecx,1),%al
add    %al,(%eax)
or     $0xff,%al
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lea    (%eax,%ecx,1),%eax
mov    $0x8d,%dh
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
(bad)
lea    (%eax,%ecx,1),%eax
out    %al,$0x8d
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
push   %es
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
mov    %es:(%eax,%ecx,1),%es
mov    %ss:(%eax,%ecx,1),%es
inc    %esi
mov    (%eax,%ecx,1),%es
push   %esi
mov    (%eax,%ecx,1),%es
data16
mov    (%eax,%ecx,1),%es
jbe    804ffd0 <_IO_stdin_used+0x2dac>
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8050011 <_IO_stdin_used+0x2ded>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    8050052 <_IO_stdin_used+0x2e2e>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
mov    $0xd9,%al
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,0x5(%ecx,%eax,1)
or     %al,(%eax)
add    %eax,(%eax)
add    %ah,%al
add    %eax,0x108
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x64,0x6f(%esi),%ebp
add    %al,(%eax)
add    %al,(%edi)
.byte 0xe9
cltd
.byte 0xc2
