das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bh,-0x4e(%esi)
xchg   %esp,(%esi)
sub    %eax,-0x16(%edx)
mov    $0x58,%al
insl   (%dx),%es:(%edi)
sar    $0xa8,%bh
out    %al,$0x44
pop    %es
push   %eax
in     $0xe7,%eax
cs
add    (%eax),%eax
add    %al,(%eax)
pusha
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax,%eax,2)
dec    %eax
add    %ah,0x60121d(,%ebp,2)
add    %al,(%eax)
popa
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
sub    %ebx,0x50bc1c8c
jbe    8048176 <__snprintf_chk@plt-0x101a>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804818d <__snprintf_chk@plt-0x1003>
dec    %ebx
jecxz  80481a4 <__snprintf_chk@plt-0xfec>
xchg   %eax,%esi
mov    0x62e59789,%al
inc    %ecx
cmc
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
dec    %ebx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jge    8048306 <__snprintf_chk@plt-0xe8a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loope  8048409 <__snprintf_chk@plt-0xd87>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax),%es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x2
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
arpl   %ax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    8048569 <__snprintf_chk@plt-0xc27>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    8048627 <__snprintf_chk@plt-0xb69>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%bl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x1
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebp
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x0,$0x0
adc    (%eax),%al
add    %al,(%eax)
or     (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0xc0000001
repz add $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %al,%dh
add    (%eax),%eax
add    %ah,-0xd(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bh,(%edx,%eax,1)
add    %al,(%eax)
fs
repz add $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,%cl
add    (%eax),%eax
add    %al,0x40805f3(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,(%ebx)
add    %al,(%eax)
add    %ah,0x5(%ebx,%ebx,4)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
verr   %bx
add    %al,(%eax)
add    %al,0x40805f3(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ah,%dl
add    (%eax),%al
add    %ah,-0xd(%eax)
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bl,0x0(%ebx)
add    %al,(%eax)
mov    0x40805f3,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,(%edx)
add    (%eax),%al
add    %al,%ah
repz add $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    80488fb <__snprintf_chk@plt-0x895>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048909 <__snprintf_chk@plt-0x887>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048916 <__snprintf_chk@plt-0x87a>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jb     8048911 <__snprintf_chk@plt-0x87f>
ja     804891f <__snprintf_chk@plt-0x871>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jo     804892e <__snprintf_chk@plt-0x862>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     8048935 <__snprintf_chk@plt-0x85b>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048947 <__snprintf_chk@plt-0x849>
outsl  %ds:(%esi),(%dx)
ja     8048939 <__snprintf_chk@plt-0x857>
add    %dh,0x74(%ebx)
jb     8048949 <__snprintf_chk@plt-0x847>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     804894c <__snprintf_chk@plt-0x844>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     804895c <__snprintf_chk@plt-0x834>
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jae    8048966 <__snprintf_chk@plt-0x82a>
jb     8048958 <__snprintf_chk@plt-0x838>
jne    8048966 <__snprintf_chk@plt-0x82a>
add    %dh,0x74(%ebx)
popa
je     8048972 <__snprintf_chk@plt-0x81e>
data16
jae    8048935 <__snprintf_chk@plt-0x85b>
xor    $0x0,%al
arpl   %sp,%fs:0x65(%edi)
je     804897b <__snprintf_chk@plt-0x815>
gs
js     804897e <__snprintf_chk@plt-0x812>
add    %ah,0x63(%esi)
push   $0x726964
gs
jb     8048987 <__snprintf_chk@plt-0x809>
outsl  %ds:(%esi),(%dx)
jb     8048918 <__snprintf_chk@plt-0x878>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8048982 <__snprintf_chk@plt-0x80e>
jae    8048921 <__snprintf_chk@plt-0x86f>
imul   $0x63617073,0x77(%ebx),%esi
add    %bl,%gs:0x5f(%edi)
jae    80489a2 <__snprintf_chk@plt-0x7ee>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048952 <__snprintf_chk@plt-0x83e>
pop    %edi
gs
js     80489bf <__snprintf_chk@plt-0x7d1>
je     8048958 <__snprintf_chk@plt-0x838>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jb     80489c0 <__snprintf_chk@plt-0x7d0>
push   $0x74730072
jb     80489d7 <__snprintf_chk@plt-0x7b9>
jo     80489d4 <__snprintf_chk@plt-0x7bc>
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 80489ce <__snprintf_chk@plt-0x7c2>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    80489f7 <__snprintf_chk@plt-0x799>
gs
jb     80489fb <__snprintf_chk@plt-0x795>
pop    %edi
popaw
imul   $0x6c617773,0x69(%eax,%eax,1),%ebp
outsb  %ds:(%esi),(%dx)
jne    8048a02 <__snprintf_chk@plt-0x78e>
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048a01 <__snprintf_chk@plt-0x78f>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048a1a <__snprintf_chk@plt-0x776>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     80489ad <__snprintf_chk@plt-0x7e3>
jae    8048a14 <__snprintf_chk@plt-0x77c>
je     8048a1e <__snprintf_chk@plt-0x772>
outsb  %ds:(%esi),(%dx)
je     8048a19 <__snprintf_chk@plt-0x777>
outsb  %ds:(%esi),(%dx)
je     80489b7 <__snprintf_chk@plt-0x7d9>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048a34 <__snprintf_chk@plt-0x75c>
jb     8048a2e <__snprintf_chk@plt-0x762>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048a2e <__snprintf_chk@plt-0x762>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048a36 <__snprintf_chk@plt-0x75a>
je     80489d3 <__snprintf_chk@plt-0x7bd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
arpl   %bp,%gs:0x6e(%edi)
jbe    80489de <__snprintf_chk@plt-0x7b2>
pop    %edi
pop    %edi
gs
jb     8048a55 <__snprintf_chk@plt-0x73b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     8048a65 <__snprintf_chk@plt-0x72b>
jo     8048a7d <__snprintf_chk@plt-0x713>
add    %bl,0x5f(%edi)
data16
js     8048a7d <__snprintf_chk@plt-0x713>
je     8048a6d <__snprintf_chk@plt-0x723>
je     8048a44 <__snprintf_chk@plt-0x74c>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048a87 <__snprintf_chk@plt-0x709>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x77,(%eax),%eax
arpl   %si,0x77(%ebx)
imul   $0x64747300,0x68(%esp,%esi,2),%esp
outsl  %ds:(%esi),(%dx)
jne    8048aa1 <__snprintf_chk@plt-0x6ef>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %dh,0x74(%ebx)
jb     8048aa9 <__snprintf_chk@plt-0x6e7>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048ab1 <__snprintf_chk@plt-0x6df>
add    %ah,0x65(%edi)
je     8048abe <__snprintf_chk@plt-0x6d2>
outsb  %ds:(%esi),(%dx)
je     8048ab9 <__snprintf_chk@plt-0x6d7>
outsb  %ds:(%esi),(%dx)
je     8048a57 <__snprintf_chk@plt-0x739>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     8048ace <__snprintf_chk@plt-0x6c2>
je     8048aa5 <__snprintf_chk@plt-0x6eb>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8048adb <__snprintf_chk@plt-0x6b5>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048a79 <__snprintf_chk@plt-0x717>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x6168006f,0x66(%bp),%ebp
jae    8048af6 <__snprintf_chk@plt-0x69a>
outsb  %ds:(%esi),(%dx)
je     8048afb <__snprintf_chk@plt-0x695>
jo     8048b02 <__snprintf_chk@plt-0x68e>
add    %bl,0x5f(%edi)
js     8048b06 <__snprintf_chk@plt-0x68a>
je     8048af6 <__snprintf_chk@plt-0x69a>
je     8048acd <__snprintf_chk@plt-0x6c3>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048b10 <__snprintf_chk@plt-0x680>
outsb  %ds:(%esi),(%dx)
jbe    8048aae <__snprintf_chk@plt-0x6e2>
outsl  %ds:(%esi),(%dx)
jo     8048b25 <__snprintf_chk@plt-0x66b>
popa
jb     8048b1b <__snprintf_chk@plt-0x675>
add    %bl,0x5f(%edi)
data16
jb     8048b1f <__snprintf_chk@plt-0x671>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     8048b38 <__snprintf_chk@plt-0x658>
add    %dh,0x63(%edi)
ja     8048b34 <__snprintf_chk@plt-0x65c>
fs
je     8048b36 <__snprintf_chk@plt-0x65a>
add    %bl,0x5f(%edi)
jae    8048b41 <__snprintf_chk@plt-0x64f>
jo     8048b47 <__snprintf_chk@plt-0x649>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048b61 <__snprintf_chk@plt-0x62f>
jo     8048b68 <__snprintf_chk@plt-0x628>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8048b68 <__snprintf_chk@plt-0x628>
ja     8048b6b <__snprintf_chk@plt-0x625>
add    %ah,0x77(%esi)
jb     8048b75 <__snprintf_chk@plt-0x61b>
je     8048b73 <__snprintf_chk@plt-0x61d>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8048b74 <__snprintf_chk@plt-0x61c>
arpl   %bp,0x73(%edi,%ebp,2)
add    %bl,%gs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
data16
jo     8048b92 <__snprintf_chk@plt-0x5fe>
outsb  %ds:(%esi),(%dx)
imul   $0x72747300,%fs:0x67(%esi),%ebp
jbe    8048b9d <__snprintf_chk@plt-0x5f3>
jb     8048bad <__snprintf_chk@plt-0x5e3>
arpl   %bp,0x70(%ebp)
add    %ch,0x65(%ebx,%esi,2)
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048bad <__snprintf_chk@plt-0x5e3>
push   $0x73690072
ja     8048bb4 <__snprintf_chk@plt-0x5dc>
outsb  %ds:(%esi),(%dx)
je     8048bc6 <__snprintf_chk@plt-0x5ca>
insb   (%dx),%es:(%edi)
add    %ah,0x6e(%ebp)
fs
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048bc2 <__snprintf_chk@plt-0x5ce>
outsb  %ds:(%esi),(%dx)
je     8048b60 <__snprintf_chk@plt-0x630>
imul   $0x7000766e,0x6f(%ebx),%esp
jb     8048bd8 <__snprintf_chk@plt-0x5b8>
addr16 jb 8048bcd <__snprintf_chk@plt-0x5c3>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048bf2 <__snprintf_chk@plt-0x59e>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048bee <__snprintf_chk@plt-0x5a2>
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
pop    %edi
imul   $0x616e,0x5f(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8048c07 <__snprintf_chk@plt-0x589>
outsl  %ds:(%esi),(%dx)
jo     8048c10 <__snprintf_chk@plt-0x580>
outsb  %ds:(%esi),(%dx)
add    %dh,0x63(%edi)
jae    8048c25 <__snprintf_chk@plt-0x56b>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
jae    8048c2c <__snprintf_chk@plt-0x564>
popa
je     8048c21 <__snprintf_chk@plt-0x56f>
jae    8048bf3 <__snprintf_chk@plt-0x59d>
xor    $0x0,%al
data16
arpl   %bp,0x74(%esi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
jae    8048c39 <__snprintf_chk@plt-0x557>
jb     8048c34 <__snprintf_chk@plt-0x55c>
outsb  %ds:(%esi),(%dx)
je     8048c34 <__snprintf_chk@plt-0x55c>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048c3f <__snprintf_chk@plt-0x551>
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     8048c4c <__snprintf_chk@plt-0x544>
js     8048c5d <__snprintf_chk@plt-0x533>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x636e7973,0x0(%esi),%ebp
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
popa
je     8048c32 <__snprintf_chk@plt-0x55e>
xor    $0x0,%al
jae    8048c74 <__snprintf_chk@plt-0x51c>
jb     8048c65 <__snprintf_chk@plt-0x52b>
insl   (%dx),%es:(%edi)
jo     8048c05 <__snprintf_chk@plt-0x58b>
pop    %edi
pop    %edi
jae    8048c7d <__snprintf_chk@plt-0x513>
jb     8048c7f <__snprintf_chk@plt-0x511>
outsl  %ds:(%esi),(%dx)
jne    8048c7a <__snprintf_chk@plt-0x516>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048c99 <__snprintf_chk@plt-0x4f7>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x766f5f5f,0x0(%esi),%ebp
gs
jb     8048c98 <__snprintf_chk@plt-0x4f8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048c36 <__snprintf_chk@plt-0x55a>
data16
jo     8048cae <__snprintf_chk@plt-0x4e2>
je     8048cae <__snprintf_chk@plt-0x4e2>
pop    %edi
jne    8048cac <__snprintf_chk@plt-0x4e4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     8048cc0 <__snprintf_chk@plt-0x4d0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048ccb <__snprintf_chk@plt-0x4c5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8048ccf <__snprintf_chk@plt-0x4c1>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048cd3 <__snprintf_chk@plt-0x4bd>
js     8048cd9 <__snprintf_chk@plt-0x4b7>
je     8048c72 <__snprintf_chk@plt-0x51e>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048cef <__snprintf_chk@plt-0x4a1>
popa
jb     8048cf2 <__snprintf_chk@plt-0x49e>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
push   %es
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x4000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%eax,%eax,1)
push   %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
pop    %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
std
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x70000,(%ecx),%ecx
pop    %es
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
adc    (%eax,%eax,1),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x41d,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
daa
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
xor    %eax,(%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %bh,(%ebx)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
cld
out    %eax,(%dx)
add    $0x2b0608,%eax
add    %ah,-0xd(%eax)
add    $0x610508,%eax
add    %ah,0x5(%ebx,%esi,8)
or     %al,0x80000062
repz add $0x630508,%eax
add    %ah,0x50805f3(%eax)
add    %al,(%bx,%si)
(bad)
repz add $0x600508,%eax
add    %al,%ah
repz add $0x680508,%eax
or     $0xf0,%al
add    $0x10708,%eax
add    %dl,(%eax)
lock add $0x20708,%eax
add    %dl,(%eax,%esi,8)
add    $0x30708,%eax
add    %bl,(%eax)
lock add $0x40708,%eax
add    %bl,(%eax,%esi,8)
add    $0x50708,%eax
add    %ah,(%eax)
lock add $0x60708,%eax
add    %ah,(%eax,%esi,8)
add    $0x70708,%eax
add    %ch,(%eax)
lock add $0x80708,%eax
add    %ch,(%eax,%esi,8)
add    $0x90708,%eax
add    %dh,(%eax)
lock add $0xa0708,%eax
add    %dh,(%eax,%esi,8)
add    $0xb0708,%eax
add    %bh,(%eax)
lock add $0xc0708,%eax
add    %bh,(%eax,%esi,8)
add    $0xd0708,%eax
add    %al,-0x10(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%esi,8)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
lock add $0x100708,%eax
add    %cl,0x5(%eax,%esi,8)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,-0x10(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%esi,8)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,-0x10(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%esi,8)
or     %al,(%edi)
adc    $0xf0600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%esi,8)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x70805f0
sbb    %al,(%eax)
add    %ch,0x5(%eax,%esi,8)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,-0x10(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%esi,8)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,-0x10(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%esi,8)
or     %al,(%edi)
sbb    $0xf0800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%esi,8)
add    %al,(%eax)
mov    %dh,%al
add    $0x200708,%eax
add    %cl,0x21070805(%eax,%esi,8)
add    %al,(%eax)
nop
lock add $0x220708,%eax
add    %dl,0x23070805(%eax,%esi,8)
add    %al,(%eax)
cwtl
lock add $0x240708,%eax
add    %bl,0x25070805(%eax,%esi,8)
add    %al,(%eax)
mov    0x70805f0,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
lock add $0x270708,%eax
add    %ch,0x70805f0(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%esi,8)
add    %al,(%eax)
mov    $0xf0,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%esi,8)
add    %al,(%eax)
mov    $0x70805f0,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%esi,8)
add    %al,(%eax)
(bad)
lock add $0x2e0708,%eax
add    %al,%ah
lock add $0x2f0708,%eax
add    %cl,%al
lock add $0x300708,%eax
add    %cl,%ah
lock add $0x310708,%eax
add    %dl,%al
lock add $0x320708,%eax
add    %dl,%ah
lock add $0x330708,%eax
add    %bl,%al
lock add $0x340708,%eax
add    %bl,%ah
lock add $0x350708,%eax
add    %ah,%al
lock add $0x360708,%eax
add    %ah,%ah
lock add $0x370708,%eax
add    %ch,%al
lock add $0x380708,%eax
add    %ch,%ah
lock add $0x390708,%eax
add    %dh,%al
lock add $0x3a0708,%eax
add    %dh,%ah
lock add $0x3b0708,%eax
add    %bh,%al
lock add $0x3c0708,%eax
add    %bh,%ah
lock add $0x3d0708,%eax
add    %al,(%eax)
icebp
add    $0x3e0708,%eax
add    %al,(%ecx,%esi,8)
add    $0x3f0708,%eax
add    %cl,(%eax)
icebp
add    $0x400708,%eax
add    %cl,(%ecx,%esi,8)
add    $0x410708,%eax
add    %dl,(%eax)
icebp
add    $0x420708,%eax
add    %dl,(%ecx,%esi,8)
add    $0x430708,%eax
add    %bl,(%eax)
icebp
add    $0x440708,%eax
add    %bl,(%ecx,%esi,8)
add    $0x450708,%eax
add    %ah,(%eax)
icebp
add    $0x460708,%eax
add    %ah,(%ecx,%esi,8)
add    $0x470708,%eax
add    %ch,(%eax)
icebp
add    $0x480708,%eax
add    %ch,(%ecx,%esi,8)
add    $0x490708,%eax
add    %dh,(%eax)
icebp
add    $0x4a0708,%eax
add    %dh,(%ecx,%esi,8)
add    $0x4b0708,%eax
add    %bh,(%eax)
icebp
add    $0x4c0708,%eax
add    %bh,(%ecx,%esi,8)
add    $0x4d0708,%eax
add    %al,-0xf(%eax)
add    $0x4e0708,%eax
add    %al,0x5(%ecx,%esi,8)
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
dec    %eax
icebp
add    $0x500708,%eax
add    %cl,0x5(%ecx,%esi,8)
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
push   %eax
icebp
add    $0x520708,%eax
add    %dl,0x5(%ecx,%esi,8)
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
pop    %eax
icebp
add    $0x540708,%eax
add    %bl,0x5(%ecx,%esi,8)
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pusha
icebp
add    $0x560708,%eax
add    %ah,0x5(%ecx,%esi,8)
or     %al,(%edi)
push   %edi
add    %al,(%eax)
push   $0x70805f1
pop    %eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
icebp
add    $0x590708,%eax
add    %dh,-0xf(%eax)
add    $0x5a0708,%eax
add    %dh,0x5(%ecx,%esi,8)
or     %al,(%edi)
pop    %ebx
add    %al,(%eax)
js     8049123 <__snprintf_chk@plt-0x6d>
add    $0x5c0708,%eax
add    %bh,0x5(%ecx,%esi,8)
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
xor    $0x5,%cl
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
test   %dh,%cl
add    $0x5f0708,%eax
push   %ebx
sub    $0x8,%esp
call   804a9b0 <__sprintf_chk@plt+0x1240>
add    $0x15ea7,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804916e <__snprintf_chk@plt-0x22>
call   8049430 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x805f004
jmp    *0x805f008
add    %al,(%eax)
jmp    *0x805f00c
push   $0x0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f010
push   $0x8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f014
push   $0x10
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f018
push   $0x18
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f01c
push   $0x20
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f020
push   $0x28
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f024
push   $0x30
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f028
push   $0x38
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f02c
push   $0x40
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f030
push   $0x48
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f034
push   $0x50
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f038
push   $0x58
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f03c
push   $0x60
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f040
push   $0x68
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f044
push   $0x70
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f048
push   $0x78
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f04c
push   $0x80
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f050
push   $0x88
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f054
push   $0x90
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f058
push   $0x98
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f05c
push   $0xa0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f060
push   $0xa8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f064
push   $0xb0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f068
push   $0xb8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f06c
push   $0xc0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f070
push   $0xc8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f074
push   $0xd0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f078
push   $0xd8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f07c
push   $0xe0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f080
push   $0xe8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f084
push   $0xf0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f088
push   $0xf8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f08c
push   $0x100
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f090
push   $0x108
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f094
push   $0x110
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f098
push   $0x118
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f09c
push   $0x120
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0a0
push   $0x128
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0a4
push   $0x130
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0a8
push   $0x138
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0ac
push   $0x140
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0b0
push   $0x148
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0b4
push   $0x150
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0b8
push   $0x158
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0bc
push   $0x160
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0c0
push   $0x168
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0c4
push   $0x170
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0c8
push   $0x178
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0cc
push   $0x180
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0d0
push   $0x188
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0d4
push   $0x190
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0d8
push   $0x198
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0dc
push   $0x1a0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0e0
push   $0x1a8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0e4
push   $0x1b0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0e8
push   $0x1b8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0ec
push   $0x1c0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0f0
push   $0x1c8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0f4
push   $0x1d0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0f8
push   $0x1d8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f0fc
push   $0x1e0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f100
push   $0x1e8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f104
push   $0x1f0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f108
push   $0x1f8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f10c
push   $0x200
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f110
push   $0x208
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f114
push   $0x210
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f118
push   $0x218
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f11c
push   $0x220
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f120
push   $0x228
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f124
push   $0x230
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f128
push   $0x238
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f12c
push   $0x240
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f130
push   $0x248
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f134
push   $0x250
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f138
push   $0x258
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f13c
push   $0x260
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f140
push   $0x268
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f144
push   $0x270
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f148
push   $0x278
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f14c
push   $0x280
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f150
push   $0x288
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f154
push   $0x290
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f158
push   $0x298
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f15c
push   $0x2a0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f160
push   $0x2a8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f164
push   $0x2b0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f168
push   $0x2b8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f16c
push   $0x2c0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f170
push   $0x2c8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f174
push   $0x2d0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f178
push   $0x2d8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f17c
push   $0x2e0
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f180
push   $0x2e8
jmp    8049180 <__snprintf_chk@plt-0x10>
jmp    *0x805f184
push   $0x2f0
jmp    8049180 <__snprintf_chk@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
and    $0xfffffff0,%esp
sub    $0xa0,%esp
mov    0xc(%ebp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804f710 <__sprintf_chk@plt+0x5fa0>
movl   $0x805b0bc,0x4(%esp)
movl   $0x6,(%esp)
call   8049620 <setlocale@plt>
movl   $0x8059c50,0x4(%esp)
movl   $0x8059c26,(%esp)
call   80496b0 <bindtextdomain@plt>
movl   $0x8059c26,(%esp)
call   80492d0 <textdomain@plt>
movl   $0x804cc40,(%esp)
call   8059b00 <__sprintf_chk@plt+0x10390>
movl   $0x5,0x8(%esp)
movl   $0x805a964,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x805f440
00
movl   $0x0,0x805f43c
00
movb   $0x0,0x805f45e
movb   $0x0,0x805f45c
movl   $0xffffffff,0x805f458
ff
movb   $0x0,0x805f435
movb   $0x0,0x805f449
movl   $0x0,0x805f444
00
movb   $0x0,0x805f434
movl   $0x1,0x805f400
00
movl   $0x0,0x805f404
00
call   8049290 <dcgettext@plt>
mov    %eax,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0xc(%ebp),%eax
movl   $0x8059ea0,0xc(%esp)
movl   $0x8059c62,0x8(%esp)
movl   $0xffffffff,0x40(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049470 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049c98 <__sprintf_chk@plt+0x528>
cmp    $0x6b,%eax
je     8049c40 <__sprintf_chk@plt+0x4d0>
jg     80498f8 <__sprintf_chk@plt+0x188>
cmp    $0x48,%eax
je     8049c1d <__sprintf_chk@plt+0x4ad>
nop
jle    8049940 <__sprintf_chk@plt+0x1d0>
cmp    $0x61,%eax
je     8049c11 <__sprintf_chk@plt+0x4a1>
nop
jg     80499e2 <__sprintf_chk@plt+0x272>
cmp    $0x50,%eax
je     8049b73 <__sprintf_chk@plt+0x403>
cmp    $0x54,%eax
jne    80499d6 <__sprintf_chk@plt+0x266>
cmpl   $0x4,0x805f3f0
je     804a6d5 <__sprintf_chk@plt+0xf65>
movb   $0x1,0x805f435
jmp    8049860 <__sprintf_chk@plt+0xf0>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x78,%eax
je     8049bea <__sprintf_chk@plt+0x47a>
jle    80499b0 <__sprintf_chk@plt+0x240>
cmp    $0x82,%eax
je     8049bde <__sprintf_chk@plt+0x46e>
jg     8049a0c <__sprintf_chk@plt+0x29c>
cmp    $0x80,%eax
je     8049b8a <__sprintf_chk@plt+0x41a>
cmp    $0x81,%eax
jne    80499d6 <__sprintf_chk@plt+0x266>
movb   $0x1,0x805f448
jmp    8049860 <__sprintf_chk@plt+0xf0>
lea    0x0(%esi),%esi
cmp    $0xffffff7e,%eax
je     8049ba2 <__sprintf_chk@plt+0x432>
jle    8049a9f <__sprintf_chk@plt+0x32f>
cmp    $0x42,%eax
jne    8049bae <__sprintf_chk@plt+0x43e>
mov    0x805f3c4,%eax
movl   $0x805f450,0x8(%esp)
movl   $0x805f458,0x4(%esp)
mov    %eax,(%esp)
call   804ee60 <__sprintf_chk@plt+0x56f0>
test   %eax,%eax
je     8049860 <__sprintf_chk@plt+0xf0>
mov    0x805f3c4,%edx
movl   $0x8059ea0,0xc(%esp)
movl   $0x42,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    0x40(%esp),%edx
mov    %edx,0x4(%esp)
call   8052b80 <__sprintf_chk@plt+0x9410>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6d,%eax
je     8049a7c <__sprintf_chk@plt+0x30c>
jl     8049b96 <__sprintf_chk@plt+0x426>
cmp    $0x74,%eax
je     8049bb7 <__sprintf_chk@plt+0x447>
cmp    $0x76,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     8049860 <__sprintf_chk@plt+0xf0>
movl   $0x1,(%esp)
call   804bcf0 <__sprintf_chk@plt+0x2580>
cmp    $0x68,%eax
je     8049b50 <__sprintf_chk@plt+0x3e0>
cmp    $0x69,%eax
jne    80499d6 <__sprintf_chk@plt+0x266>
cmpl   $0x4,0x805f3f0
je     804a6ea <__sprintf_chk@plt+0xf7a>
movl   $0x1,0x805f3f0
00
jmp    8049860 <__sprintf_chk@plt+0xf0>
cmp    $0x83,%eax
je     8049b0c <__sprintf_chk@plt+0x39c>
cmp    $0x84,%eax
jne    80499d6 <__sprintf_chk@plt+0x266>
movl   $0x5,0x8(%esp)
movl   $0x805a990,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059c81,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049290 <dcgettext@plt>
mov    %edi,0x10(%esp)
movl   $0x8059c8b,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   80493b0 <error@plt>
movl   $0x0,0x805f458
00
movl   $0x100000,0x805f450
00
movl   $0x0,0x805f454
00
jmp    8049860 <__sprintf_chk@plt+0xf0>
cmp    $0xffffff7d,%eax
jne    80499d6 <__sprintf_chk@plt+0x266>
movl   $0x8059c96,0x4(%esp)
movl   $0x8059ca9,(%esp)
call   8050110 <__sprintf_chk@plt+0x69a0>
movl   $0x0,0x1c(%esp)
movl   $0x8059cbb,0x18(%esp)
movl   $0x8059cc7,0x14(%esp)
movl   $0x8059c22,0x8(%esp)
movl   $0x8059cd7,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x805f2f4,%eax
mov    %eax,0xc(%esp)
mov    0x805f3c0,%eax
mov    %eax,(%esp)
call   80526c0 <__sprintf_chk@plt+0x8f50>
movl   $0x0,(%esp)
call   8049440 <exit@plt>
mov    0x805f3f0,%eax
cmp    $0x1,%eax
je     804a6ea <__sprintf_chk@plt+0xf7a>
test   %bl,%bl
jne    8049c63 <__sprintf_chk@plt+0x4f3>
cmpb   $0x0,0x805f435
jne    804a6d5 <__sprintf_chk@plt+0xf65>
mov    0x805f3c4,%eax
movl   $0x4,0x805f3f0
00
test   %eax,%eax
je     8049860 <__sprintf_chk@plt+0xf0>
call   804c0b0 <__sprintf_chk@plt+0x2940>
jmp    8049860 <__sprintf_chk@plt+0xf0>
movl   $0xb0,0x805f458
00
movl   $0x1,0x805f450
00
movl   $0x0,0x805f454
00
jmp    8049860 <__sprintf_chk@plt+0xf0>
cmpl   $0x4,0x805f3f0
je     8049c6b <__sprintf_chk@plt+0x4fb>
mov    $0x1,%ebx
jmp    8049860 <__sprintf_chk@plt+0xf0>
movb   $0x0,0x805f448
jmp    8049860 <__sprintf_chk@plt+0xf0>
movb   $0x1,0x805f45d
jmp    8049860 <__sprintf_chk@plt+0xf0>
movl   $0x0,(%esp)
call   804bcf0 <__sprintf_chk@plt+0x2580>
cmp    $0x46,%eax
jne    80499d6 <__sprintf_chk@plt+0x266>
movl   $0x8,(%esp)
mov    0x805f3c4,%edi
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x805f440,%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x805f440
jmp    8049860 <__sprintf_chk@plt+0xf0>
movb   $0x1,0x805f434
jmp    8049860 <__sprintf_chk@plt+0xf0>
movl   $0x8,(%esp)
mov    0x805f3c4,%edi
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x805f43c,%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x805f43c
jmp    8049860 <__sprintf_chk@plt+0xf0>
movb   $0x1,0x805f45e
jmp    8049860 <__sprintf_chk@plt+0xf0>
movl   $0x90,0x805f458
00
movl   $0x1,0x805f450
00
movl   $0x0,0x805f454
00
jmp    8049860 <__sprintf_chk@plt+0xf0>
movl   $0x0,0x805f458
00
movl   $0x400,0x805f450
00
movl   $0x0,0x805f454
00
jmp    8049860 <__sprintf_chk@plt+0xf0>
test   %eax,%eax
jne    8049b22 <__sprintf_chk@plt+0x3b2>
movl   $0x8059c75,0x10(%esp)
movl   $0x8059c93,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80493b0 <error@plt>
jmp    80499d6 <__sprintf_chk@plt+0x266>
cmpl   $0xffffffff,0x805f458
je     804a474 <__sprintf_chk@plt+0xd04>
mov    0x805f3f0,%eax
cmp    $0x4,%eax
je     8049cb8 <__sprintf_chk@plt+0x548>
sub    $0x1,%eax
jne    8049da5 <__sprintf_chk@plt+0x635>
mov    0x805f440,%esi
test   %esi,%esi
je     8049d52 <__sprintf_chk@plt+0x5e2>
movb   $0x0,0x3c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805f43c,%edi
test   %edi,%edi
je     8049d40 <__sprintf_chk@plt+0x5d0>
mov    (%esi),%ebx
jmp    8049ce7 <__sprintf_chk@plt+0x577>
xchg   %ax,%ax
mov    0x4(%edi),%edi
test   %edi,%edi
je     8049d40 <__sprintf_chk@plt+0x5d0>
mov    (%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
jne    8049ce0 <__sprintf_chk@plt+0x570>
mov    %ebx,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x5,0x8(%esp)
movl   $0x805a9d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049290 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80493b0 <error@plt>
movb   $0x1,0x3c(%esp)
mov    0x4(%esi),%esi
test   %esi,%esi
jne    8049cd0 <__sprintf_chk@plt+0x560>
cmpb   $0x0,0x3c(%esp)
jne    804a468 <__sprintf_chk@plt+0xcf8>
mov    0x805f3a0,%eax
cmp    %eax,0x8(%ebp)
jg     8049dc5 <__sprintf_chk@plt+0x655>
cmpl   $0x0,0x805f440
mov    $0x1,%eax
je     804a778 <__sprintf_chk@plt+0x1008>
mov    %eax,(%esp)
call   80539b0 <__sprintf_chk@plt+0xa240>
test   %eax,%eax
mov    %eax,0x805f438
je     804a6ff <__sprintf_chk@plt+0xf8f>
cmpb   $0x0,0x805f448
jne    8049dea <__sprintf_chk@plt+0x67a>
cmpl   $0x4,0x805f3f0
ja     804a6b1 <__sprintf_chk@plt+0xf41>
mov    0x805f3f0,%eax
jmp    *0x8059e4c(,%eax,4)
testb  $0x10,0x805f458
jne    8049ddb <__sprintf_chk@plt+0x66b>
test   %bl,%bl
je     8049cb8 <__sprintf_chk@plt+0x548>
movl   $0x3,0x805f3f0
00
jmp    8049cb8 <__sprintf_chk@plt+0x548>
mov    0x8(%ebp),%ecx
sub    %eax,%ecx
cmp    $0x2aaaaaa,%ecx
jbe    804a545 <__sprintf_chk@plt+0xdd5>
call   8052a20 <__sprintf_chk@plt+0x92b0>
movl   $0x2,0x805f3f0
00
jmp    8049cb8 <__sprintf_chk@plt+0x548>
call   8049750 <sync@plt>
jmp    8049d8c <__sprintf_chk@plt+0x61c>
xor    %edx,%edx
xor    %eax,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
cmpb   $0x0,0x805f435
je     8049e0f <__sprintf_chk@plt+0x69f>
xor    %edx,%edx
mov    $0x1,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
mov    $0x8059c34,%edx
mov    $0x2,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x3,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
mov    $0x8059c39,%edx
mov    $0x4,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x5,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0xa,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
call   804ac00 <__sprintf_chk@plt+0x1490>
mov    0x805f3a0,%eax
cmp    %eax,0x8(%ebp)
mov    %eax,0x3c(%esp)
jle    804a658 <__sprintf_chk@plt+0xee8>
movb   $0x1,0x805f45c
mov    0xc(%ebp),%ecx
mov    0x3c(%esp),%eax
mov    (%ecx,%eax,4),%ebx
test   %ebx,%ebx
je     8049f12 <__sprintf_chk@plt+0x7a2>
sub    0x805f3a0,%eax
imul   $0x60,%eax,%eax
add    0x34(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x10(%eax),%eax
and    $0xb000,%eax
cmp    $0x2000,%eax
jne    804a1bc <__sprintf_chk@plt+0xa4c>
mov    0x805f438,%edi
test   %edi,%edi
je     804a1bc <__sprintf_chk@plt+0xa4c>
xor    %esi,%esi
lea    0x0(%esi),%esi
mov    (%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
cmove  %edi,%esi
mov    0x18(%edi),%edi
test   %edi,%edi
jne    8049eb8 <__sprintf_chk@plt+0x748>
test   %esi,%esi
je     804a1bc <__sprintf_chk@plt+0xa4c>
movzbl 0x14(%esi),%eax
mov    0x4(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%ecx
and    $0x1,%eax
shr    %cl
and    $0x1,%ecx
mov    %ecx,0x8(%esp)
xor    %ecx,%ecx
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
mov    (%esi),%eax
call   804b030 <__sprintf_chk@plt+0x18c0>
addl   $0x1,0x3c(%esp)
mov    0x3c(%esp),%eax
cmp    0x8(%ebp),%eax
jne    8049e6f <__sprintf_chk@plt+0x6ff>
cmpb   $0x0,0x805f449
je     804a2bc <__sprintf_chk@plt+0xb4c>
cmpb   $0x0,0x805f434
je     8049f7c <__sprintf_chk@plt+0x80c>
cmpb   $0x0,0x805f1d8
mov    $0x805b379,%edx
mov    $0x8059ddb,%eax
movl   $0x0,0x10(%esp)
cmove  %eax,%edx
xor    %ecx,%ecx
movl   $0x805f400,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804b030 <__sprintf_chk@plt+0x18c0>
movl   $0x0,0x30(%esp)
mov    0x30(%esp),%eax
cmp    0x805f3e0,%eax
jae    804a2f9 <__sprintf_chk@plt+0xb89>
mov    0x805f3e8,%eax
test   %eax,%eax
je     804a198 <__sprintf_chk@plt+0xa28>
mov    0x30(%esp),%ecx
xor    %edi,%edi
xor    %ebx,%ebx
mov    0x805f3e4,%edx
lea    0x0(,%ecx,4),%esi
mov    (%edx,%ecx,4),%edx
mov    %esi,0x38(%esp)
mov    (%edx),%esi
nop
mov    0x805f3ec,%edx
sub    $0x1,%eax
cmp    %eax,%ebx
sete   %al
movzbl %al,%eax
mov    (%edx,%edi,1),%edx
shl    $0x3,%eax
mov    0x10(%edx),%ecx
mov    %eax,0xc(%esp)
mov    0x14(%edx),%eax
mov    %esi,(%esp)
mov    %ecx,0x40(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   804f470 <__sprintf_chk@plt+0x5d00>
mov    0x805f3c0,%edx
mov    %eax,%esi
test   %esi,%esi
je     804a184 <__sprintf_chk@plt+0xa14>
mov    %edx,0x4(%esp)
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    %esi,(%esp)
call   8049200 <free@plt>
mov    0x805f3e8,%eax
cmp    %eax,%ebx
jae    804a198 <__sprintf_chk@plt+0xa28>
mov    0x805f3e4,%edx
test   %ebx,%ebx
mov    0x38(%esp),%ecx
lea    0x0(,%ebx,4),%edi
mov    (%edx,%ecx,1),%edx
mov    (%edx,%ebx,4),%esi
je     8049fc0 <__sprintf_chk@plt+0x850>
mov    0x805f3c0,%edx
mov    0x14(%edx),%ecx
cmp    0x18(%edx),%ecx
mov    %edx,0x34(%esp)
mov    %ecx,0x3c(%esp)
jae    804a920 <__sprintf_chk@plt+0x11b0>
mov    0x3c(%esp),%edx
mov    0x34(%esp),%ecx
add    $0x1,%edx
mov    %edx,0x14(%ecx)
mov    0x3c(%esp),%ecx
movb   $0x20,(%ecx)
jmp    8049fc0 <__sprintf_chk@plt+0x850>
xor    %edx,%edx
xor    %eax,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
cmpb   $0x0,0x805f435
je     804a09e <__sprintf_chk@plt+0x92e>
xor    %edx,%edx
mov    $0x1,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x6,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x7,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x8,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x9,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0xa,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
jmp    8049e51 <__sprintf_chk@plt+0x6e1>
xor    %edx,%edx
xor    %eax,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
cmpb   $0x0,0x805f435
je     804a0fd <__sprintf_chk@plt+0x98d>
xor    %edx,%edx
mov    $0x1,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x2,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x3,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
jmp    8049e2f <__sprintf_chk@plt+0x6bf>
cmpl   $0x0,0x805f3e8
jne    8049e51 <__sprintf_chk@plt+0x6e1>
mov    $0x805aa30,%eax
call   804c0b0 <__sprintf_chk@plt+0x2940>
jmp    8049e51 <__sprintf_chk@plt+0x6e1>
xor    %edx,%edx
xor    %eax,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
cmpb   $0x0,0x805f435
je     804a156 <__sprintf_chk@plt+0x9e6>
xor    %edx,%edx
mov    $0x1,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x2,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x3,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
xor    %edx,%edx
mov    $0x4,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
mov    $0x8059cf8,%edx
jmp    8049e3b <__sprintf_chk@plt+0x6cb>
mov    0x805f3e4,%eax
mov    0x38(%esp),%ecx
mov    (%eax,%ecx,1),%eax
mov    (%eax,%edi,1),%eax
jmp    804a009 <__sprintf_chk@plt+0x899>
mov    0x805f3c0,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804a96c <__sprintf_chk@plt+0x11fc>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
addl   $0x1,0x30(%esp)
jmp    8049f84 <__sprintf_chk@plt+0x814>
mov    %ebx,(%esp)
call   8049680 <canonicalize_file_name@plt>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     804a1d5 <__sprintf_chk@plt+0xa65>
cmpb   $0x2f,(%eax)
je     804a306 <__sprintf_chk@plt+0xb96>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x805f438,%esi
movl   $0x0,0x2c(%esp)
mov    0x38(%esp),%edi
jmp    804a202 <__sprintf_chk@plt+0xa92>
mov    0x10(%esi),%ecx
cmp    %ecx,0x4(%edi)
mov    (%edi),%eax
je     804a249 <__sprintf_chk@plt+0xad9>
mov    0x18(%esi),%esi
test   %esi,%esi
je     804a4b1 <__sprintf_chk@plt+0xd41>
cmpl   $0xffffffff,0x10(%esi)
jne    804a1f5 <__sprintf_chk@plt+0xa85>
cmpl   $0xffffffff,0xc(%esi)
jne    804a1f5 <__sprintf_chk@plt+0xa85>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
jne    804a524 <__sprintf_chk@plt+0xdb4>
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    %eax,0xc(%esi)
mov    %edx,0x10(%esi)
jmp    804a1f5 <__sprintf_chk@plt+0xa85>
cmp    0xc(%esi),%eax
jne    804a1ff <__sprintf_chk@plt+0xa8f>
movl   $0x8059d18,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
je     804a1ff <__sprintf_chk@plt+0xa8f>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804a279 <__sprintf_chk@plt+0xb09>
testb  $0x1,0x14(%eax)
jne    804a279 <__sprintf_chk@plt+0xb09>
testb  $0x1,0x14(%esi)
jne    804a1ff <__sprintf_chk@plt+0xa8f>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
jne    804a2a9 <__sprintf_chk@plt+0xb39>
mov    0x10(%esi),%ecx
cmp    %ecx,0x44(%esp)
mov    0x40(%esp),%eax
je     804a7ab <__sprintf_chk@plt+0x103b>
movl   $0xfffffffe,0xc(%esi)
movl   $0xffffffff,0x10(%esi)
jmp    804a1ff <__sprintf_chk@plt+0xa8f>
cmpl   $0x0,0x805f444
jne    804a2f9 <__sprintf_chk@plt+0xb89>
movl   $0x5,0x8(%esp)
movl   $0x8059d1d,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80493b0 <error@plt>
mov    0x805f444,%eax
mov    %eax,(%esp)
call   8049440 <exit@plt>
mov    %eax,%edi
or     $0xffffffff,%ecx
mov    0x805f438,%esi
xor    %eax,%eax
repnz scas %es:(%edi),%al
mov    %ebx,0x24(%esp)
movl   $0x0,0x28(%esp)
not    %ecx
lea    -0x1(%ecx),%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    %eax,%ebx
jmp    804a39a <__sprintf_chk@plt+0xc2a>
movl   $0x8059d18,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
je     804a397 <__sprintf_chk@plt+0xc27>
test   %ebx,%ebx
je     804a358 <__sprintf_chk@plt+0xbe8>
testb  $0x1,0x14(%ebx)
nop
jne    804a358 <__sprintf_chk@plt+0xbe8>
testb  $0x1,0x14(%esi)
jne    804a397 <__sprintf_chk@plt+0xc27>
mov    0x4(%esi),%edx
or     $0xffffffff,%ecx
xor    %eax,%eax
mov    %edx,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%ecx),%edi
cmp    %edi,0x2c(%esp)
jb     804a397 <__sprintf_chk@plt+0xc27>
cmp    0x28(%esp),%edi
jb     804a397 <__sprintf_chk@plt+0xc27>
cmp    $0x1,%edi
je     804a515 <__sprintf_chk@plt+0xda5>
cmp    %edi,0x2c(%esp)
je     804a441 <__sprintf_chk@plt+0xcd1>
mov    0x30(%esp),%eax
cmpb   $0x2f,-0x1(%eax,%ecx,1)
je     804a441 <__sprintf_chk@plt+0xcd1>
mov    0x18(%esi),%esi
test   %esi,%esi
jne    804a330 <__sprintf_chk@plt+0xbc0>
mov    0x30(%esp),%eax
mov    %ebx,%esi
mov    %ebx,0x2c(%esp)
mov    0x24(%esp),%ebx
mov    %eax,(%esp)
call   8049200 <free@plt>
test   %esi,%esi
je     804a1e1 <__sprintf_chk@plt+0xa71>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
jne    804a1e1 <__sprintf_chk@plt+0xa71>
mov    0x38(%esp),%ecx
mov    0x40(%esp),%eax
mov    0x4(%ecx),%ecx
cmp    %ecx,0x44(%esp)
jne    804a1e1 <__sprintf_chk@plt+0xa71>
mov    0x38(%esp),%ecx
cmp    (%ecx),%eax
jne    804a1e1 <__sprintf_chk@plt+0xa71>
mov    0x2c(%esp),%esi
movzbl 0x14(%esi),%eax
mov    0x4(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%ecx
and    $0x1,%eax
shr    %cl
and    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %ebx,%ecx
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
mov    (%esi),%eax
call   804b030 <__sprintf_chk@plt+0x18c0>
jmp    8049f12 <__sprintf_chk@plt+0x7a2>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80496c0 <strncmp@plt>
test   %eax,%eax
cmovne 0x28(%esp),%edi
cmove  %esi,%ebx
mov    %edi,0x28(%esp)
jmp    804a397 <__sprintf_chk@plt+0xc27>
movl   $0x1,(%esp)
call   8049440 <exit@plt>
test   %bl,%bl
je     804a62f <__sprintf_chk@plt+0xebf>
movl   $0x8059cda,(%esp)
movl   $0x0,0x805f458
00
call   80493c0 <getenv@plt>
test   %eax,%eax
je     804a8d4 <__sprintf_chk@plt+0x1164>
mov    $0x200,%eax
xor    %edx,%edx
mov    %eax,0x805f450
mov    %edx,0x805f454
jmp    8049ca5 <__sprintf_chk@plt+0x535>
cmpl   $0x0,0x2c(%esp)
jne    804a400 <__sprintf_chk@plt+0xc90>
mov    0x38(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804c230 <__sprintf_chk@plt+0x2ac0>
test   %eax,%eax
mov    %eax,%ebx
je     8049f12 <__sprintf_chk@plt+0x7a2>
mov    %eax,%edx
xor    %ecx,%ecx
movl   $0x0,0x10(%esp)
xor    %eax,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804b030 <__sprintf_chk@plt+0x18c0>
mov    %ebx,(%esp)
call   8049200 <free@plt>
jmp    8049f12 <__sprintf_chk@plt+0x7a2>
movl   $0x1,0x28(%esp)
mov    %esi,%ebx
jmp    804a397 <__sprintf_chk@plt+0xc27>
call   8049570 <__errno_location@plt>
cmpl   $0x5,(%eax)
je     804a8e0 <__sprintf_chk@plt+0x1170>
movl   $0xfffffffe,0xc(%esi)
movl   $0xffffffff,0x10(%esi)
jmp    804a1f5 <__sprintf_chk@plt+0xa85>
imul   $0x60,%ecx,%eax
mov    %eax,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x805f3a0,%ebx
mov    0xc(%ebp),%esi
mov    %eax,0x34(%esp)
jmp    804a56a <__sprintf_chk@plt+0xdfa>
mov    %edi,(%esp)
call   8049710 <close@plt>
add    $0x1,%ebx
cmp    0x8(%ebp),%ebx
jge    8049d5c <__sprintf_chk@plt+0x5ec>
movl   $0x100,0x4(%esp)
mov    (%esi,%ebx,4),%eax
mov    %eax,(%esp)
call   80491b0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804a5b3 <__sprintf_chk@plt+0xe43>
mov    %ebx,%eax
sub    0x805f3a0,%eax
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
imul   $0x60,%eax,%eax
add    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   8049320 <__fxstat64@plt>
test   %eax,%eax
je     804a55f <__sprintf_chk@plt+0xdef>
mov    %ebx,%eax
sub    0x805f3a0,%eax
imul   $0x60,%eax,%eax
add    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%esi,%ebx,4),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
jne    804a5e6 <__sprintf_chk@plt+0xe76>
test   %edi,%edi
js     804a567 <__sprintf_chk@plt+0xdf7>
jmp    804a55f <__sprintf_chk@plt+0xdef>
mov    (%esi,%ebx,4),%eax
mov    %eax,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
mov    %eax,0x3c(%esp)
call   8049570 <__errno_location@plt>
mov    0x3c(%esp),%ecx
movl   $0x805b601,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
movl   $0x1,0x805f444
00
movl   $0x0,(%esi,%ebx,4)
jmp    804a5dd <__sprintf_chk@plt+0xe6d>
movl   $0x8059cea,(%esp)
call   80493c0 <getenv@plt>
movl   $0x805f450,0x8(%esp)
movl   $0x805f458,0x4(%esp)
mov    %eax,(%esp)
call   804ee60 <__sprintf_chk@plt+0x56f0>
jmp    8049ca5 <__sprintf_chk@plt+0x535>
cmpb   $0x0,0x805f45e
je     804a7bd <__sprintf_chk@plt+0x104d>
mov    0x805f438,%ebx
jmp    804a6a8 <__sprintf_chk@plt+0xf38>
movzbl 0x14(%ebx),%eax
mov    0x4(%ebx),%edx
movl   $0x1,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%ecx
and    $0x1,%eax
shr    %cl
and    $0x1,%ecx
mov    %ecx,0x8(%esp)
xor    %ecx,%ecx
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
mov    (%ebx),%eax
call   804b030 <__sprintf_chk@plt+0x18c0>
mov    0x18(%ebx),%ebx
test   %ebx,%ebx
jne    804a66d <__sprintf_chk@plt+0xefd>
jmp    8049f24 <__sprintf_chk@plt+0x7b4>
movl   $0x8059e68,0xc(%esp)
movl   $0x1e7,0x8(%esp)
movl   $0x8059b75,0x4(%esp)
movl   $0x8059d01,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x8059c75,0x10(%esp)
movl   $0x8059c90,0xc(%esp)
jmp    8049c7b <__sprintf_chk@plt+0x50b>
movl   $0x8059c75,0x10(%esp)
movl   $0x8059c7e,0xc(%esp)
jmp    8049c7b <__sprintf_chk@plt+0x50b>
mov    0x805f3a0,%eax
cmp    %eax,0x8(%ebp)
jle    804a728 <__sprintf_chk@plt+0xfb8>
cmpb   $0x0,0x805f45e
jne    804a728 <__sprintf_chk@plt+0xfb8>
cmpb   $0x0,0x805f45d
jne    804a728 <__sprintf_chk@plt+0xfb8>
cmpl   $0x0,0x805f440
je     804a93a <__sprintf_chk@plt+0x11ca>
mov    $0x1,%ebx
mov    $0x805b0bc,%esi
movl   $0x5,0x8(%esp)
movl   $0x805aa04,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%edi
call   8049570 <__errno_location@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8059c8b,0x8(%esp)
mov    (%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
jmp    8049d83 <__sprintf_chk@plt+0x613>
cmpl   $0x0,0x805f43c
jne    8049d6e <__sprintf_chk@plt+0x5fe>
cmpb   $0x0,0x805f435
jne    8049d6e <__sprintf_chk@plt+0x5fe>
cmpb   $0x0,0x805f1f4
jne    8049d6e <__sprintf_chk@plt+0x5fe>
movzbl 0x805f45d,%eax
jmp    8049d6e <__sprintf_chk@plt+0x5fe>
cmp    0xc(%esi),%eax
jne    804a2a9 <__sprintf_chk@plt+0xb39>
mov    %esi,0x2c(%esp)
jmp    804a1ff <__sprintf_chk@plt+0xa8f>
mov    0x805f438,%esi
movl   $0x0,0x3c(%esp)
test   %esi,%esi
je     804a89c <__sprintf_chk@plt+0x112c>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <__xstat64@plt>
add    $0x1,%eax
je     804a877 <__sprintf_chk@plt+0x1107>
movl   $0x2f,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049480 <strchr@plt>
test   %eax,%eax
je     804a877 <__sprintf_chk@plt+0x1107>
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x3c(%esp),%ebx
jmp    804a81e <__sprintf_chk@plt+0x10ae>
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
je     804a877 <__sprintf_chk@plt+0x1107>
cmp    %eax,0x4(%ebx)
jne    804a81b <__sprintf_chk@plt+0x10ab>
cmp    %ecx,(%ebx)
jne    804a81b <__sprintf_chk@plt+0x10ab>
mov    0x8(%ebx),%edi
movl   $0x2f,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049480 <strchr@plt>
test   %eax,%eax
je     804a864 <__sprintf_chk@plt+0x10f4>
mov    0x4(%edi),%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
mov    0x4(%esi),%edi
not    %ecx
lea    -0x1(%ecx),%edx
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
not    %ecx
sub    $0x1,%ecx
cmp    %ecx,%edx
jbe    804a867 <__sprintf_chk@plt+0x10f7>
mov    %esi,0x8(%ebx)
mov    0x3c(%esp),%eax
mov    0x18(%esi),%esi
mov    %eax,0x3c(%esp)
jmp    804a7cb <__sprintf_chk@plt+0x105b>
movl   $0x10,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x40(%esp),%ecx
mov    0x44(%esp),%ebx
mov    %ecx,(%eax)
mov    0x3c(%esp),%ecx
mov    %esi,0x8(%eax)
mov    %ebx,0x4(%eax)
mov    %ecx,0xc(%eax)
jmp    804a86b <__sprintf_chk@plt+0x10fb>
movl   $0x0,0x805f438
00
mov    0x3c(%esp),%eax
jmp    804a8cb <__sprintf_chk@plt+0x115b>
mov    0x8(%eax),%edx
mov    0x805f438,%ecx
mov    0xc(%eax),%ebx
mov    %edx,0x805f438
mov    %ecx,0x18(%edx)
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %ebx,%eax
test   %eax,%eax
jne    804a8ac <__sprintf_chk@plt+0x113c>
jmp    804a665 <__sprintf_chk@plt+0xef5>
mov    $0x400,%eax
xor    %edx,%edx
jmp    804a4a1 <__sprintf_chk@plt+0xd31>
mov    %eax,0x30(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
mov    0x30(%esp),%edx
movl   $0x805b601,0x8(%esp)
mov    %eax,0xc(%esp)
mov    (%edx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
movl   $0x1,0x805f444
00
jmp    804a532 <__sprintf_chk@plt+0xdc2>
movl   $0x20,0x4(%esp)
mov    %edx,(%esp)
call   8049640 <__overflow@plt>
mov    0x805f3e8,%eax
jmp    8049fc0 <__sprintf_chk@plt+0x850>
cmpl   $0x0,0x805f43c
jne    804a728 <__sprintf_chk@plt+0xfb8>
movl   $0x5,0x8(%esp)
xor    %ebx,%ebx
movl   $0x8059d37,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%esi
jmp    804a732 <__sprintf_chk@plt+0xfc2>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049640 <__overflow@plt>
jmp    804a1b2 <__sprintf_chk@plt+0xa42>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8059af0
push   $0x8059a80
push   %ecx
push   %esi
push   $0x8049780
call   8049500 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x805f34b,%eax
sub    $0x805f348,%eax
cmp    $0x6,%eax
ja     804a9d0 <__sprintf_chk@plt+0x1260>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804a9cf <__sprintf_chk@plt+0x125f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805f348,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x805f348,%eax
sub    $0x805f348,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804aa09 <__sprintf_chk@plt+0x1299>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804aa08 <__sprintf_chk@plt+0x1298>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x805f348,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x805f3c8
jne    804aa4c <__sprintf_chk@plt+0x12dc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a9c0 <__sprintf_chk@plt+0x1250>
movb   $0x1,0x805f3c8
leave
repz ret
xchg   %ax,%ax
mov    0x805ef10,%eax
test   %eax,%eax
je     804aa78 <__sprintf_chk@plt+0x1308>
mov    $0x0,%eax
test   %eax,%eax
je     804aa78 <__sprintf_chk@plt+0x1308>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805ef10,(%esp)
call   *%eax
leave
jmp    804a9f0 <__sprintf_chk@plt+0x1280>
nop
jmp    804a9f0 <__sprintf_chk@plt+0x1280>
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x805f3e0,%eax
mov    0x805f3e4,%edx
add    $0x1,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x805f3e0
ja     804aada <__sprintf_chk@plt+0x136a>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    0x805f3e0,%edx
mov    %eax,0x805f3e4
lea    -0x4(%eax,%edx,4),%ebx
mov    0x805f3e8,%eax
cmp    $0x3fffffff,%eax
ja     804aada <__sprintf_chk@plt+0x136a>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %eax,(%ebx)
add    $0x18,%esp
pop    %ebx
ret
call   8052a20 <__sprintf_chk@plt+0x92b0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
cmp    $0xffffffff,%ecx
mov    0x54(%esp),%edi
mov    0x58(%esp),%ebp
mov    0x5c(%esp),%esi
mov    %edi,0x28(%esp)
mov    0x60(%esp),%edi
mov    %ebp,0x2c(%esp)
mov    0x805f458,%ebp
jb     804ab0f <__sprintf_chk@plt+0x139f>
cmp    $0xfffffffd,%edx
ja     804ab50 <__sprintf_chk@plt+0x13e0>
mov    0x50(%esp),%ebx
add    %eax,%ebx
test   %al,%al
jne    804ab5b <__sprintf_chk@plt+0x13eb>
mov    %esi,0x18(%esp)
mov    0x28(%esp),%esi
mov    %edi,0x1c(%esp)
mov    0x2c(%esp),%edi
mov    %ebp,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
call   804dff0 <__sprintf_chk@plt+0x4880>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x50(%esp),%ebx
add    $0x1,%ebx
test   %al,%al
je     804aba8 <__sprintf_chk@plt+0x1438>
mov    %esi,0x18(%esp)
mov    %edx,%eax
mov    0x28(%esp),%esi
mov    %edi,0x1c(%esp)
mov    0x2c(%esp),%edi
neg    %eax
mov    %ecx,%edx
adc    $0x0,%edx
neg    %edx
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804dff0 <__sprintf_chk@plt+0x4880>
movb   $0x2d,-0x1(%eax)
add    $0x3c,%esp
sub    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
mov    $0x805b379,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %ebx
sub    $0x4,%esp
movzbl (%eax),%ebx
test   %bl,%bl
je     804abed <__sprintf_chk@plt+0x147d>
call   8049740 <__ctype_b_loc@plt>
mov    %edi,%edx
lea    0x0(%esi),%esi
mov    (%eax),%ecx
testb  $0x2,(%ecx,%ebx,2)
je     804abe3 <__sprintf_chk@plt+0x1473>
movb   $0x3f,(%edx)
add    $0x1,%edx
movzbl (%edx),%ebx
test   %bl,%bl
jne    804abd8 <__sprintf_chk@plt+0x1468>
add    $0x4,%esp
mov    %edi,%eax
pop    %ebx
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2ec,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2dc(%esp)
xor    %eax,%eax
call   804aa80 <__sprintf_chk@plt+0x1310>
mov    0x805f3e8,%ecx
test   %ecx,%ecx
jne    804ac4d <__sprintf_chk@plt+0x14dd>
jmp    804ad0a <__sprintf_chk@plt+0x159a>
nop
mov    0x805f3ec,%eax
add    $0x1,%ebp
cmp    %ebp,0x805f3e8
mov    (%eax,%ebx,1),%esi
mov    0x10(%esi),%eax
mov    %eax,0x10(%esi)
jbe    804ad0a <__sprintf_chk@plt+0x159a>
mov    0x805f3ec,%esi
lea    0x0(,%ebp,4),%ebx
movl   $0x5,0x8(%esp)
movl   $0x0,0x4c(%esp)
add    %ebx,%esi
mov    (%esi),%eax
mov    0xc(%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%edx
mov    (%esi),%eax
cmpl   $0x2,(%eax)
je     804ad30 <__sprintf_chk@plt+0x15c0>
mov    %edx,(%esp)
call   8049560 <__strdup@plt>
mov    %eax,0x4c(%esp)
test   %eax,%eax
je     804af50 <__sprintf_chk@plt+0x17e0>
call   804abc0 <__sprintf_chk@plt+0x1450>
mov    0x805f3e0,%edx
mov    0x805f3e4,%eax
mov    -0x4(%eax,%edx,4),%eax
mov    0x4c(%esp),%edx
mov    %edx,(%eax,%ebx,1)
mov    0x805f3ec,%eax
mov    (%eax,%ebx,1),%esi
mov    0x4c(%esp),%eax
mov    0x10(%esi),%edi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f6e0 <__sprintf_chk@plt+0x5f70>
cmp    %eax,%edi
ja     804ac30 <__sprintf_chk@plt+0x14c0>
mov    0x4c(%esp),%eax
add    $0x1,%ebp
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f6e0 <__sprintf_chk@plt+0x5f70>
cmp    %ebp,0x805f3e8
mov    %eax,0x10(%esi)
ja     804ac4d <__sprintf_chk@plt+0x14dd>
mov    0x2dc(%esp),%eax
xor    %gs:0x14,%eax
jne    804af6e <__sprintf_chk@plt+0x17fe>
add    $0x2ec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x805f3f0,%eax
test   %eax,%eax
jne    804aea8 <__sprintf_chk@plt+0x1738>
mov    0x805f458,%eax
mov    %eax,0x2c(%esp)
mov    0x2c(%esp),%eax
mov    0x805f454,%edx
mov    %ebx,0x38(%esp)
and    $0x124,%eax
mov    %eax,0x3c(%esp)
mov    0x805f450,%eax
mov    %edx,%edi
mov    %edx,0x34(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x30(%esp)
mov    %eax,%esi
mov    %eax,0x20(%esp)
jmp    804ad7c <__sprintf_chk@plt+0x160c>
test   %bl,%bl
je     804adea <__sprintf_chk@plt+0x167a>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%ecx
mov    0x20(%esp),%eax
or     %edx,%ecx
mov    0x24(%esp),%edx
sete   %bl
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    %eax,0x20(%esp)
mov    %esi,%eax
and    $0x3ff,%eax
test   %eax,%eax
sete   %al
shrd   $0xa,%edi,%esi
shr    $0xa,%edi
test   %al,%al
mov    %edx,0x24(%esp)
jne    804ad78 <__sprintf_chk@plt+0x1608>
mov    %ebx,%edi
movzbl %al,%eax
mov    0x38(%esp),%ebx
mov    %edi,%ecx
movzbl %cl,%esi
cmp    %eax,%esi
jge    804af30 <__sprintf_chk@plt+0x17c0>
mov    0x3c(%esp),%edi
or     $0xb8,%edi
mov    %edi,%eax
mov    0x34(%esp),%edx
or     $0x1,%ah
test   $0x20,%edi
cmove  %eax,%edi
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x4(%esp)
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x1,0x10(%esp)
movl   $0x0,0x14(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
call   804dff0 <__sprintf_chk@plt+0x4880>
movl   $0x5,0x8(%esp)
movl   $0x8059b68,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049290 <dcgettext@plt>
movl   $0x8059b6e,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8053470 <__sprintf_chk@plt+0x9d00>
cmp    $0xffffffff,%eax
je     804af48 <__sprintf_chk@plt+0x17d8>
mov    0x4c(%esp),%eax
jmp    804ac9a <__sprintf_chk@plt+0x152a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4,%eax
je     804af58 <__sprintf_chk@plt+0x17e8>
cmp    $0x3,%eax
jne    804ac8e <__sprintf_chk@plt+0x151e>
mov    0x805f450,%esi
lea    0x50(%esp),%eax
mov    0x805f454,%edi
mov    %eax,0x8(%esp)
mov    %edx,0x20(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804f030 <__sprintf_chk@plt+0x58c0>
movl   $0x5,0x8(%esp)
movl   $0x8059b68,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049290 <dcgettext@plt>
mov    0x20(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8053470 <__sprintf_chk@plt+0x9d00>
cmp    $0xffffffff,%eax
jne    804ae9b <__sprintf_chk@plt+0x172b>
movl   $0x0,0x4c(%esp)
jmp    804ae9b <__sprintf_chk@plt+0x172b>
xchg   %ax,%ax
jle    804af73 <__sprintf_chk@plt+0x1803>
mov    0x2c(%esp),%edi
and    $0x104,%edi
or     $0x98,%edi
jmp    804ae0a <__sprintf_chk@plt+0x169a>
nop
movl   $0x0,0x4c(%esp)
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi),%esi
mov    0x805f458,%eax
test   $0x10,%al
mov    %eax,0x2c(%esp)
jne    804ac8e <__sprintf_chk@plt+0x151e>
jmp    804ad46 <__sprintf_chk@plt+0x15d6>
call   80492b0 <__stack_chk_fail@plt>
mov    0x3c(%esp),%edi
or     $0x98,%edi
jmp    804ae0a <__sprintf_chk@plt+0x169a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x805f3e8,%eax
lea    0x1(%eax),%ecx
mov    0x805f3ec,%eax
cmp    $0x3fffffff,%ecx
mov    %ecx,0x805f3e8
ja     804affb <__sprintf_chk@plt+0x188b>
shl    $0x2,%ecx
mov    %edx,%esi
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
imul   $0x1c,%ebx,%edx
mov    0x805f3e8,%ecx
add    $0x805f1c0,%edx
test   %esi,%esi
mov    %eax,0x805f3ec
mov    %edx,-0x4(%eax,%ecx,4)
je     804afe2 <__sprintf_chk@plt+0x1872>
mov    %esi,0xc(%edx)
imul   $0x1c,%ebx,%ebx
add    $0x805f1d0,%ebx
cmpb   $0x0,0x8(%ebx)
jne    804b000 <__sprintf_chk@plt+0x1890>
movb   $0x1,0x8(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   8052a20 <__sprintf_chk@plt+0x92b0>
movl   $0x8059e77,0xc(%esp)
movl   $0x15c,0x8(%esp)
movl   $0x8059b75,0x4(%esp)
movl   $0x8059b7e,(%esp)
call   8049730 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x3bc,%esp
mov    %ecx,0x20(%esp)
mov    0x3e0(%esp),%ecx
mov    %edx,0x34(%esp)
mov    0x3d0(%esp),%ebp
mov    0x3d4(%esp),%eax
mov    0x3dc(%esp),%ebx
mov    %ecx,0x28(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x3ac(%esp)
xor    %ecx,%ecx
cmpb   $0x0,0x3d8(%esp)
je     804b0a8 <__sprintf_chk@plt+0x1938>
cmpb   $0x0,0x805f45d
je     804b0a8 <__sprintf_chk@plt+0x1938>
mov    0x3ac(%esp),%eax
xor    %gs:0x14,%eax
jne    804bc59 <__sprintf_chk@plt+0x24e9>
add    $0x3bc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %al,%al
jne    804b0e8 <__sprintf_chk@plt+0x1978>
mov    0x805f440,%edi
test   %edi,%edi
je     804b100 <__sprintf_chk@plt+0x1990>
test   %ebp,%ebp
je     804b12d <__sprintf_chk@plt+0x19bd>
lea    0x0(%esi),%esi
mov    (%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
je     804bcc6 <__sprintf_chk@plt+0x2556>
mov    0x4(%edi),%edi
test   %edi,%edi
jne    804b0c0 <__sprintf_chk@plt+0x1950>
lea    0x0(%esi),%esi
jmp    804b087 <__sprintf_chk@plt+0x1917>
lea    0x0(%esi),%esi
cmpb   $0x0,0x805f45e
jne    804b0ac <__sprintf_chk@plt+0x193c>
cmpb   $0x0,0x805f45c
je     804b087 <__sprintf_chk@plt+0x1917>
jmp    804b0ac <__sprintf_chk@plt+0x193c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805f43c,%edi
test   %edi,%edi
je     804b12d <__sprintf_chk@plt+0x19bd>
test   %ebp,%ebp
je     804b12d <__sprintf_chk@plt+0x19bd>
xchg   %ax,%ax
mov    (%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
je     804b087 <__sprintf_chk@plt+0x1917>
mov    0x4(%edi),%edi
test   %edi,%edi
jne    804b110 <__sprintf_chk@plt+0x19a0>
mov    0x20(%esp),%eax
test   %eax,%eax
je     804b7b5 <__sprintf_chk@plt+0x2045>
test   %ebx,%ebx
je     804b909 <__sprintf_chk@plt+0x2199>
mov    (%ebx),%eax
mov    %eax,0x78(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x7c(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x80(%esp)
mov    0xc(%ebx),%eax
mov    %eax,0x84(%esp)
mov    0x10(%ebx),%eax
mov    %eax,0x88(%esp)
mov    0x14(%ebx),%eax
mov    %eax,0x8c(%esp)
mov    0x18(%ebx),%eax
mov    %eax,0x90(%esp)
mov    0x1c(%ebx),%eax
mov    %eax,0x94(%esp)
mov    0x20(%ebx),%eax
mov    %eax,0x98(%esp)
mov    0x24(%ebx),%eax
mov    %eax,0x9c(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0xa0(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0xa4(%esp)
mov    0x30(%ebx),%eax
mov    %eax,0xa8(%esp)
mov    0x84(%esp),%eax
or     0x80(%esp),%eax
jne    804b1d9 <__sprintf_chk@plt+0x1a69>
cmpb   $0x0,0x805f45e
je     804b56c <__sprintf_chk@plt+0x1dfc>
test   %ebx,%ebx
je     804b7c7 <__sprintf_chk@plt+0x2057>
call   804aa80 <__sprintf_chk@plt+0x1310>
test   %esi,%esi
mov    $0x805b379,%eax
cmove  %eax,%esi
mov    %esi,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
cmpb   $0x0,0x28(%esp)
mov    %eax,0x48(%esp)
je     804b258 <__sprintf_chk@plt+0x1ae8>
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
cmp    $0x24,%eax
jbe    804b258 <__sprintf_chk@plt+0x1ae8>
mov    0x48(%esp),%esi
movl   $0x8059b8c,0x4(%esp)
lea    -0x24(%esi,%eax,1),%eax
mov    %eax,(%esp)
call   8049720 <strspn@plt>
cmp    $0x24,%eax
jne    804b258 <__sprintf_chk@plt+0x1ae8>
mov    0x48(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804c590 <__sprintf_chk@plt+0x2e20>
test   %eax,%eax
mov    %eax,%esi
je     804b258 <__sprintf_chk@plt+0x1ae8>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %esi,0x48(%esp)
nop
mov    0xa0(%esp),%edx
test   %ebp,%ebp
mov    $0x805b379,%eax
cmove  %eax,%ebp
mov    0xa4(%esp),%esi
mov    0x9c(%esp),%eax
mov    0xa8(%esp),%edi
cmp    $0xffffffff,%edx
movl   $0x1,0xec(%esp)
00
movl   $0x0,0xf0(%esp)
00
movl   $0x1,0xe4(%esp)
00
movl   $0x0,0xe8(%esp)
00
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0xf4(%esp)
mov    %edx,0xf8(%esp)
mov    %esi,0x108(%esp)
mov    %edi,0x10c(%esp)
mov    %esi,0xfc(%esp)
mov    %edi,0x100(%esp)
movb   $0x0,0x104(%esp)
movl   $0xffffffff,0x110(%esp)
ff
movl   $0xffffffff,0x114(%esp)
ff
movb   $0x0,0x118(%esp)
jb     804b4c8 <__sprintf_chk@plt+0x1d58>
cmpl   $0xfffffffd,0x38(%esp)
jbe    804b4c8 <__sprintf_chk@plt+0x1d58>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%ecx
mov    0x805f454,%edx
mov    %eax,0x50(%esp)
mov    %eax,0xac(%esp)
mov    0x805f450,%eax
mov    %ecx,0x54(%esp)
mov    %ecx,0xb0(%esp)
mov    0x94(%esp),%ecx
mov    %edx,0xb8(%esp)
mov    0x84(%esp),%edx
mov    %eax,0xb4(%esp)
mov    0x80(%esp),%eax
mov    %ecx,0x40(%esp)
mov    %ecx,0xc8(%esp)
movzbl 0x98(%esp),%ecx
mov    %eax,0x20(%esp)
mov    %eax,0xbc(%esp)
mov    0x90(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0xc0(%esp)
mov    0x8c(%esp),%edx
test   %cl,%cl
mov    %eax,0x4c(%esp)
mov    %eax,0xc4(%esp)
mov    0x88(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %edx,0xd4(%esp)
mov    %eax,0x28(%esp)
mov    %eax,0xd0(%esp)
je     804b3d5 <__sprintf_chk@plt+0x1c65>
cmpl   $0xffffffff,0x40(%esp)
mov    $0x1,%ecx
jae    804b74a <__sprintf_chk@plt+0x1fda>
cmpl   $0xffffffff,0x24(%esp)
mov    %cl,0xcc(%esp)
movl   $0xffffffff,0xd8(%esp)
ff
movl   $0xffffffff,0xdc(%esp)
ff
movb   $0x0,0xe0(%esp)
jb     804b470 <__sprintf_chk@plt+0x1d00>
cmpl   $0xfffffffd,0x20(%esp)
jbe    804b470 <__sprintf_chk@plt+0x1d00>
cmpb   $0x0,0x805f434
je     804b419 <__sprintf_chk@plt+0x1ca9>
test   %ebx,%ebx
je     804ba13 <__sprintf_chk@plt+0x22a3>
mov    0x805f3e8,%ecx
test   %ecx,%ecx
je     804b635 <__sprintf_chk@plt+0x1ec5>
xor    %esi,%esi
mov    %ebp,0x20(%esp)
mov    0x805f3ec,%eax
lea    0x0(,%esi,4),%edi
mov    (%eax,%esi,4),%eax
mov    0x8(%eax),%edx
cmp    $0x1,%edx
je     804b550 <__sprintf_chk@plt+0x1de0>
jb     804b540 <__sprintf_chk@plt+0x1dd0>
cmp    $0x2,%edx
jne    804b518 <__sprintf_chk@plt+0x1da8>
xor    %ebx,%ebx
cmpl   $0xa,(%eax)
ja     804b791 <__sprintf_chk@plt+0x2021>
mov    (%eax),%eax
jmp    *0x8059e20(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x2c(%esp)
jae    804b55c <__sprintf_chk@plt+0x1dec>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
sub    0x28(%esp),%eax
sbb    0x2c(%esp),%edx
mov    %eax,0xd8(%esp)
mov    $0x1,%eax
mov    %edx,0xdc(%esp)
mov    0x2c(%esp),%edx
cmp    %edx,0x24(%esp)
jb     804b4bc <__sprintf_chk@plt+0x1d4c>
ja     804b765 <__sprintf_chk@plt+0x1ff5>
mov    0x28(%esp),%edx
cmp    %edx,0x20(%esp)
jae    804b765 <__sprintf_chk@plt+0x1ff5>
mov    %al,0xe0(%esp)
jmp    804b408 <__sprintf_chk@plt+0x1c98>
cmp    $0xffffffff,%edi
jae    804b757 <__sprintf_chk@plt+0x1fe7>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
sub    %esi,%eax
sbb    %edi,%edx
cmp    %edi,0x3c(%esp)
mov    %eax,0x110(%esp)
mov    $0x1,%eax
mov    %edx,0x114(%esp)
jb     804b506 <__sprintf_chk@plt+0x1d96>
ja     804b76c <__sprintf_chk@plt+0x1ffc>
cmp    %esi,0x38(%esp)
jae    804b76c <__sprintf_chk@plt+0x1ffc>
mov    %al,0x118(%esp)
jmp    804b316 <__sprintf_chk@plt+0x1ba6>
lea    0x0(%esi),%esi
movl   $0x8059e60,0xc(%esp)
movl   $0x395,0x8(%esp)
movl   $0x8059b75,0x4(%esp)
movl   $0x8059ba4,(%esp)
call   8049730 <__assert_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0xac(%esp),%ebx
jmp    804b459 <__sprintf_chk@plt+0x1ce9>
lea    0x0(%esi,%eiz,1),%esi
lea    0xe4(%esp),%ebx
jmp    804b459 <__sprintf_chk@plt+0x1ce9>
cmpl   $0xfffffffd,0x28(%esp)
ja     804b408 <__sprintf_chk@plt+0x1c98>
jmp    804b47b <__sprintf_chk@plt+0x1d0b>
cmpb   $0x0,0x805f45c
je     804b087 <__sprintf_chk@plt+0x1917>
jmp    804b1d9 <__sprintf_chk@plt+0x1a69>
mov    0x18(%ebx),%eax
mov    0x1c(%ebx),%edx
mov    %eax,0x28(%esp)
movzbl 0x20(%ebx),%eax
mov    %edx,0x2c(%esp)
mov    0x8(%ebx),%edx
mov    0xc(%ebx),%ecx
mov    %edx,0xc(%esp)
lea    0x11f(%esp),%edx
mov    %ecx,0x10(%esp)
mov    (%ebx),%ecx
mov    0x4(%ebx),%ebx
mov    %edx,(%esp)
mov    0x28(%esp),%edx
mov    %ecx,0x4(%esp)
mov    0x2c(%esp),%ecx
mov    %ebx,0x8(%esp)
call   804aae0 <__sprintf_chk@plt+0x1370>
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x74(%esp)
test   %eax,%eax
je     804bca2 <__sprintf_chk@plt+0x2532>
call   804abc0 <__sprintf_chk@plt+0x1450>
mov    0x805f3ec,%eax
mov    (%eax,%edi,1),%ebp
mov    0x74(%esp),%eax
mov    0x10(%ebp),%ebx
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f6e0 <__sprintf_chk@plt+0x5f70>
cmp    %eax,%ebx
jbe    804b778 <__sprintf_chk@plt+0x2008>
mov    0x805f3ec,%eax
mov    (%eax,%edi,1),%ebp
mov    0x10(%ebp),%eax
mov    %eax,0x10(%ebp)
mov    0x805f3e0,%edx
add    $0x1,%esi
mov    0x805f3e4,%eax
cmp    %esi,0x805f3e8
mov    -0x4(%eax,%edx,4),%eax
mov    0x74(%esp),%edx
mov    %edx,(%eax,%edi,1)
ja     804b42d <__sprintf_chk@plt+0x1cbd>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
jmp    804b087 <__sprintf_chk@plt+0x1917>
mov    0x2c(%ebx),%eax
mov    0x30(%ebx),%edx
mov    %eax,0x28(%esp)
movzbl 0x34(%ebx),%eax
mov    %edx,0x2c(%esp)
jmp    804b590 <__sprintf_chk@plt+0x1e20>
mov    0x10(%ebx),%eax
mov    0x14(%ebx),%edx
mov    %eax,0x28(%esp)
mov    0x8(%ebx),%eax
mov    %edx,0x2c(%esp)
mov    0xc(%ebx),%edx
mov    0x2c(%esp),%ecx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    0x4(%ebx),%edx
mov    (%ebx),%eax
mov    %edx,0x8(%esp)
mov    0x28(%esp),%edx
mov    %eax,0x4(%esp)
lea    0x11f(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804aae0 <__sprintf_chk@plt+0x1370>
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x74(%esp)
jmp    804b5ce <__sprintf_chk@plt+0x1e5e>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x74(%esp)
jmp    804b5ce <__sprintf_chk@plt+0x1e5e>
mov    0x30(%ebx),%edx
mov    0x2c(%ebx),%eax
cmp    $0xffffffff,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
jb     804b7d3 <__sprintf_chk@plt+0x2063>
cmpl   $0xfffffffd,0x28(%esp)
jbe    804b7d3 <__sprintf_chk@plt+0x2063>
jmp    804b6f4 <__sprintf_chk@plt+0x1f84>
fstp   %st(0)
jmp    804b6f4 <__sprintf_chk@plt+0x1f84>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
movl   $0x2,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
je     804b70c <__sprintf_chk@plt+0x1f9c>
mov    $0x2d,%edx
mov    %dx,(%eax)
mov    %eax,0x74(%esp)
test   %eax,%eax
jne    804b5d6 <__sprintf_chk@plt+0x1e66>
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x74(%esp)
jmp    804b5ce <__sprintf_chk@plt+0x1e5e>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x74(%esp)
jmp    804b5ce <__sprintf_chk@plt+0x1e5e>
cmpl   $0xfffffffd,0x4c(%esp)
setbe  %cl
jmp    804b3d5 <__sprintf_chk@plt+0x1c65>
cmp    $0xfffffffd,%esi
ja     804b316 <__sprintf_chk@plt+0x1ba6>
jmp    804b4d1 <__sprintf_chk@plt+0x1d61>
xor    %eax,%eax
jmp    804b4bc <__sprintf_chk@plt+0x1d4c>
xor    %eax,%eax
xchg   %ax,%ax
jmp    804b506 <__sprintf_chk@plt+0x1d96>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f6e0 <__sprintf_chk@plt+0x5f70>
jmp    804b60d <__sprintf_chk@plt+0x1e9d>
movl   $0x8059e60,0xc(%esp)
movl   $0x3f7,0x8(%esp)
movl   $0x8059b75,0x4(%esp)
movl   $0x8059bbd,(%esp)
call   8049730 <__assert_fail@plt>
mov    0x34(%esp),%eax
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x20(%esp)
jmp    804b139 <__sprintf_chk@plt+0x19c9>
movb   $0x1,0x805f449
jmp    804b1e1 <__sprintf_chk@plt+0x1a71>
mov    0x1c(%ebx),%edx
mov    0x18(%ebx),%eax
cmp    $0xffffffff,%edx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
jb     804b7f1 <__sprintf_chk@plt+0x2081>
cmpl   $0xfffffffd,0x38(%esp)
ja     804b6f4 <__sprintf_chk@plt+0x1f84>
cmpb   $0x0,0x34(%ebx)
je     804b983 <__sprintf_chk@plt+0x2213>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %eax,0x58(%esp)
test   %edx,%edx
mov    %edx,0x5c(%esp)
fildll 0x58(%esp)
js     804bbaa <__sprintf_chk@plt+0x243a>
fstpl  0x68(%esp)
movzbl 0x20(%ebx),%ecx
fldl   0x68(%esp)
fchs
test   %cl,%cl
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
je     804bb6e <__sprintf_chk@plt+0x23fe>
neg    %eax
adc    $0x0,%edx
neg    %edx
mov    %eax,0x58(%esp)
test   %edx,%edx
mov    %edx,0x5c(%esp)
fildll 0x58(%esp)
js     804bb98 <__sprintf_chk@plt+0x2428>
fstpl  0x68(%esp)
fldl   0x68(%esp)
fchs
fadd   %st(1),%st
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jnp    804b976 <__sprintf_chk@plt+0x2206>
fxch   %st(1)
fmuls  0x805aa80
fnstcw 0x66(%esp)
movzwl 0x66(%esp),%eax
fdivp  %st,%st(1)
mov    $0xc,%ah
mov    %ax,0x64(%esp)
fldcw  0x64(%esp)
fistl  0x60(%esp)
fldcw  0x66(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x60(%esp)
fildl  0x60(%esp)
fld1
fld    %st(1)
fsub   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
jbe    804b8cb <__sprintf_chk@plt+0x215b>
fadd   %st(1),%st
fucomi %st(2),%st
jb     804b8d1 <__sprintf_chk@plt+0x2161>
fxch   %st(2)
fucomip %st(1),%st
ja     804bba3 <__sprintf_chk@plt+0x2433>
fstp   %st(1)
fadds  0x805aa7c
jmp    804b8d5 <__sprintf_chk@plt+0x2165>
fstp   %st(0)
fstp   %st(0)
jmp    804b8d5 <__sprintf_chk@plt+0x2165>
fstp   %st(0)
fstp   %st(0)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     804b6e9 <__sprintf_chk@plt+0x1f79>
lea    0x74(%esp),%eax
fstpl  0x8(%esp)
movl   $0x8059bb6,0x4(%esp)
mov    %eax,(%esp)
call   8053470 <__sprintf_chk@plt+0x9d00>
cmp    $0xffffffff,%eax
je     804b969 <__sprintf_chk@plt+0x21f9>
mov    0x74(%esp),%eax
jmp    804b710 <__sprintf_chk@plt+0x1fa0>
lea    0x78(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80537d0 <__sprintf_chk@plt+0xa060>
test   %eax,%eax
je     804b1bc <__sprintf_chk@plt+0x1a4c>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
mov    %eax,%ebx
call   8049570 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x805b601,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
movl   $0x1,0x805f444
00
jmp    804b087 <__sprintf_chk@plt+0x1917>
movl   $0x0,0x74(%esp)
jmp    804b718 <__sprintf_chk@plt+0x1fa8>
je     804b6f0 <__sprintf_chk@plt+0x1f80>
fxch   %st(1)
jmp    804b873 <__sprintf_chk@plt+0x2103>
cmpl   $0x28f5c28,0x2c(%esp)
ja     804bb8f <__sprintf_chk@plt+0x241f>
jb     804b9a1 <__sprintf_chk@plt+0x2231>
cmpl   $0xf5c28f5c,0x28(%esp)
ja     804bb8f <__sprintf_chk@plt+0x241f>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
add    0x28(%esp),%eax
adc    0x2c(%esp),%edx
mov    %eax,0x40(%esp)
mov    %edx,%ecx
or     %eax,%ecx
movzbl 0x20(%ebx),%ecx
mov    %edx,0x44(%esp)
je     804b9e6 <__sprintf_chk@plt+0x2276>
mov    0x44(%esp),%eax
mov    $0x1,%ebx
cmp    %eax,0x2c(%esp)
ja     804b9de <__sprintf_chk@plt+0x226e>
jb     804ba0f <__sprintf_chk@plt+0x229f>
mov    0x40(%esp),%eax
cmp    %eax,0x28(%esp)
jbe    804ba0f <__sprintf_chk@plt+0x229f>
cmp    %cl,%bl
je     804bbb5 <__sprintf_chk@plt+0x2445>
mov    0x2c(%esp),%edx
mov    0x28(%esp),%eax
mov    %edx,0x5c(%esp)
test   %edx,%edx
mov    %eax,0x58(%esp)
fildll 0x58(%esp)
js     804bc8c <__sprintf_chk@plt+0x251c>
fstpl  0x68(%esp)
fldl   0x68(%esp)
jmp    804b82c <__sprintf_chk@plt+0x20bc>
xor    %ebx,%ebx
jmp    804b9de <__sprintf_chk@plt+0x226e>
cmpl   $0xffffffff,0x3c(%esp)
jb     804ba21 <__sprintf_chk@plt+0x22b1>
cmpl   $0xfffffffd,0x38(%esp)
ja     804ba35 <__sprintf_chk@plt+0x22c5>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
add    %eax,0x805f424
adc    %edx,0x805f428
cmp    $0xffffffff,%edi
jb     804ba3f <__sprintf_chk@plt+0x22cf>
cmp    $0xfffffffd,%esi
ja     804ba4b <__sprintf_chk@plt+0x22db>
add    %esi,0x805f42c
adc    %edi,0x805f430
cmpl   $0xffffffff,0x24(%esp)
jb     804ba59 <__sprintf_chk@plt+0x22e9>
cmpl   $0xfffffffd,0x20(%esp)
ja     804ba83 <__sprintf_chk@plt+0x2313>
mov    0x50(%esp),%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x54(%esp),%edx
mov    %eax,%ebx
imul   %edi,%ebx
imul   %esi,%edx
add    %edx,%ebx
mul    %esi
add    %ebx,%edx
add    %eax,0x805f408
adc    %edx,0x805f40c
cmpl   $0xffffffff,0x2c(%esp)
jb     804ba91 <__sprintf_chk@plt+0x2321>
cmpl   $0xfffffffd,0x28(%esp)
ja     804babe <__sprintf_chk@plt+0x234e>
mov    0x28(%esp),%esi
mov    0x2c(%esp),%edi
mov    0x50(%esp),%edx
mov    0x54(%esp),%eax
imul   %edi,%edx
imul   %esi,%eax
lea    (%edx,%eax,1),%ebx
mov    %esi,%eax
mull   0x50(%esp)
add    %ebx,%edx
add    %eax,0x805f410
adc    %edx,0x805f414
cmpl   $0xffffffff,0x40(%esp)
jb     804bad0 <__sprintf_chk@plt+0x2360>
cmpl   $0xfffffffd,0x4c(%esp)
ja     804b419 <__sprintf_chk@plt+0x1ca9>
mov    0x50(%esp),%edi
mov    0x4c(%esp),%ebx
mov    0x40(%esp),%esi
mov    0x54(%esp),%eax
imul   %edi,%esi
imul   %ebx,%eax
add    %esi,%eax
mov    %eax,0x20(%esp)
mov    %ebx,%eax
movzbl 0x805f420,%ebx
mul    %edi
mov    0x20(%esp),%edi
mov    %eax,%esi
mov    %ebx,%eax
xor    $0x1,%eax
add    %edx,%edi
cmp    %al,%cl
jne    804bc7b <__sprintf_chk@plt+0x250b>
test   %bl,%bl
mov    0x805f418,%eax
mov    0x805f41c,%edx
je     804bb22 <__sprintf_chk@plt+0x23b2>
neg    %eax
adc    $0x0,%edx
neg    %edx
test   %cl,%cl
je     804bb2d <__sprintf_chk@plt+0x23bd>
neg    %esi
adc    $0x0,%edi
neg    %edi
cmp    %edx,%edi
ja     804bc5e <__sprintf_chk@plt+0x24ee>
jb     804bb3f <__sprintf_chk@plt+0x23cf>
cmp    %eax,%esi
jae    804bc5e <__sprintf_chk@plt+0x24ee>
sub    %esi,%eax
sbb    %edi,%edx
mov    %eax,0x805f418
mov    %edx,0x805f41c
test   %bl,%bl
je     804b419 <__sprintf_chk@plt+0x1ca9>
negl   0x805f418
adcl   $0x0,0x805f41c
negl   0x805f41c
jmp    804b419 <__sprintf_chk@plt+0x1ca9>
mov    %eax,0x58(%esp)
test   %edx,%edx
mov    %edx,0x5c(%esp)
fildll 0x58(%esp)
js     804bc97 <__sprintf_chk@plt+0x2527>
fstpl  0x68(%esp)
fldl   0x68(%esp)
jmp    804b861 <__sprintf_chk@plt+0x20f1>
movzbl 0x20(%ebx),%ecx
jmp    804b9e6 <__sprintf_chk@plt+0x2276>
fadds  0x805aa78
jmp    804b857 <__sprintf_chk@plt+0x20e7>
fstp   %st(0)
jmp    804b8d5 <__sprintf_chk@plt+0x2165>
fadds  0x805aa78
jmp    804b81e <__sprintf_chk@plt+0x20ae>
mov    0x2c(%esp),%edx
mov    $0x64,%ecx
mov    0x28(%esp),%eax
imul   $0x64,%edx,%ebx
mul    %ecx
mov    %edx,0x2c(%esp)
mov    0x44(%esp),%edx
add    %ebx,0x2c(%esp)
mov    0x2c(%esp),%ebx
mov    %eax,0x28(%esp)
mov    0x40(%esp),%eax
mov    0x28(%esp),%ecx
mov    %edx,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
mov    0x28(%esp),%ecx
movl   $0x0,0x3c(%esp)
mov    %ecx,(%esp)
mov    %eax,%ebx
xor    %eax,%eax
or     %edx,%ebx
mov    0x44(%esp),%edx
setne  %al
mov    0x2c(%esp),%ebx
mov    %eax,0x38(%esp)
mov    0x40(%esp),%eax
mov    %edx,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
add    0x38(%esp),%eax
adc    0x3c(%esp),%edx
mov    %eax,0x58(%esp)
mov    %edx,0x5c(%esp)
test   %edx,%edx
fildll 0x58(%esp)
js     804bcd9 <__sprintf_chk@plt+0x2569>
fstpl  0x68(%esp)
fldl   0x68(%esp)
jmp    804b8d5 <__sprintf_chk@plt+0x2165>
call   80492b0 <__stack_chk_fail@plt>
sub    %eax,%esi
mov    %ecx,%ebx
sbb    %edx,%edi
mov    %esi,0x805f418
mov    %edi,0x805f41c
mov    %cl,0x805f420
jmp    804bb4e <__sprintf_chk@plt+0x23de>
add    %esi,0x805f418
adc    %edi,0x805f41c
jmp    804b419 <__sprintf_chk@plt+0x1ca9>
fadds  0x805aa78
jmp    804ba02 <__sprintf_chk@plt+0x2292>
fadds  0x805aa78
jmp    804bb82 <__sprintf_chk@plt+0x2412>
movl   $0x8059e60,0xc(%esp)
movl   $0x3fb,0x8(%esp)
movl   $0x8059b75,0x4(%esp)
movl   $0x8059bd0,(%esp)
call   8049730 <__assert_fail@plt>
mov    0x805f43c,%edi
test   %edi,%edi
jne    804b110 <__sprintf_chk@plt+0x19a0>
jmp    804b12d <__sprintf_chk@plt+0x19bd>
fadds  0x805aa78
jmp    804bc4c <__sprintf_chk@plt+0x24dc>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805f468,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     804bd44 <__sprintf_chk@plt+0x25d4>
movl   $0x8059fc0,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805f364,%eax
mov    %eax,(%esp)
call   80496a0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049440 <exit@plt>
movl   $0x8059fe8,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a00c,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a070,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a0bc,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a278,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a378,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a564,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a594,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a5cc,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x8059bde,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a6ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a748,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    0x805f468,%eax
mov    %eax,(%esp)
call   804cdf0 <__sprintf_chk@plt+0x3680>
movl   $0x5,0x8(%esp)
movl   $0x8059be1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049290 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x8059bf8,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059c0e,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x805a81c,0xc(%esp)
movl   $0x8059c22,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
mov    0x805f3c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x805a844,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8049620 <setlocale@plt>
test   %eax,%eax
je     804c023 <__sprintf_chk@plt+0x28b3>
movl   $0x3,0x8(%esp)
movl   $0x8059c30,0x4(%esp)
mov    %eax,(%esp)
call   80496c0 <strncmp@plt>
test   %eax,%eax
jne    804c067 <__sprintf_chk@plt+0x28f7>
mov    0x805f468,%eax
mov    %eax,(%esp)
call   804cdf0 <__sprintf_chk@plt+0x3680>
movl   $0x5,0x8(%esp)
movl   $0x805a8cc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049290 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
jmp    804bd3c <__sprintf_chk@plt+0x25cc>
mov    0x805f468,%eax
mov    %eax,(%esp)
call   804cdf0 <__sprintf_chk@plt+0x3680>
movl   $0x5,0x8(%esp)
movl   $0x805a884,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049290 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
jmp    804c023 <__sprintf_chk@plt+0x28b3>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x1c(%esp)
mov    %eax,%esi
lea    0x0(%esi),%esi
movl   $0x2c,0x4(%esp)
mov    %esi,(%esp)
call   8049480 <strchr@plt>
test   %eax,%eax
je     804c1d8 <__sprintf_chk@plt+0x2a68>
lea    0x1(%eax),%edx
mov    %edx,0x18(%esp)
movb   $0x0,(%eax)
mov    $0x805f1c4,%ebp
xor    %edi,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%ebx
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
je     804c160 <__sprintf_chk@plt+0x29f0>
add    $0x1,%edi
add    $0x1c,%ebp
cmp    $0xb,%edi
jne    804c0f8 <__sprintf_chk@plt+0x2988>
movl   $0x5,0x8(%esp)
movl   $0x805a940,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80493b0 <error@plt>
movl   $0x1,(%esp)
call   804bcf0 <__sprintf_chk@plt+0x2580>
lea    0x0(%esi),%esi
imul   $0x1c,%edi,%eax
cmpb   $0x0,0x805f1d8(%eax)
jne    804c209 <__sprintf_chk@plt+0x2a99>
mov    $0x1,%eax
mov    %edi,%ecx
shl    %cl,%eax
test   $0x7eb,%eax
jne    804c1b8 <__sprintf_chk@plt+0x2a48>
test   $0x10,%al
jne    804c1c8 <__sprintf_chk@plt+0x2a58>
test   $0x4,%al
je     804c1e5 <__sprintf_chk@plt+0x2a75>
mov    $0x8059c34,%edx
mov    %edi,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
mov    0x18(%esp),%esi
test   %esi,%esi
jne    804c0c8 <__sprintf_chk@plt+0x2958>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %edi,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
jmp    804c194 <__sprintf_chk@plt+0x2a24>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8059c39,%edx
mov    %edi,%eax
call   804af90 <__sprintf_chk@plt+0x1820>
jmp    804c194 <__sprintf_chk@plt+0x2a24>
xchg   %ax,%ax
movl   $0x0,0x18(%esp)
jmp    804c0ea <__sprintf_chk@plt+0x297a>
movl   $0x8059e83,0xc(%esp)
movl   $0x1a2,0x8(%esp)
movl   $0x8059b75,0x4(%esp)
movl   $0x8059c3f,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a910,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %ebx,0xc(%esp)
jmp    804c136 <__sprintf_chk@plt+0x29c6>
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
mov    0x8(%ebp),%ebx
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0xe4(%ebp),%eax
mov    0xc(%ebp),%esi
mov    %eax,(%esp)
call   80519b0 <__sprintf_chk@plt+0x8240>
test   %eax,%eax
jne    804c533 <__sprintf_chk@plt+0x2dc3>
mov    0x10(%esi),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804c410 <__sprintf_chk@plt+0x2ca0>
mov    %ebx,(%esp)
call   804cd10 <__sprintf_chk@plt+0x35a0>
mov    %eax,(%esp)
mov    %eax,%ebx
call   80494c0 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x1f,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049220 <memcpy@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049200 <free@plt>
mov    %esi,(%esp)
call   8049280 <chdir@plt>
test   %eax,%eax
js     804c573 <__sprintf_chk@plt+0x2e03>
lea    -0xdc(%ebp),%eax
mov    %eax,0x8(%esp)
movl   $0x805aac0,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,-0xec(%ebp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
js     804c4e3 <__sprintf_chk@plt+0x2d73>
lea    -0x7c(%ebp),%ebx
jmp    804c34c <__sprintf_chk@plt+0x2bdc>
lea    0x0(%esi),%esi
mov    -0x7c(%ebp),%eax
mov    -0x78(%ebp),%edx
xor    -0xd8(%ebp),%edx
xor    -0xdc(%ebp),%eax
or     %eax,%edx
jne    804c400 <__sprintf_chk@plt+0x2c90>
mov    -0x24(%ebp),%eax
mov    -0x20(%ebp),%edx
xor    -0x80(%ebp),%edx
xor    -0x84(%ebp),%eax
or     %eax,%edx
je     804c400 <__sprintf_chk@plt+0x2c90>
movl   $0x805aabf,(%esp)
call   8049280 <chdir@plt>
test   %eax,%eax
js     804c4c0 <__sprintf_chk@plt+0x2d50>
mov    -0xec(%ebp),%edi
mov    %ebx,%esi
mov    $0x18,%ecx
rep movsl %ds:(%esi),%es:(%edi)
mov    %ebx,0x8(%esp)
movl   $0x805aabf,0x4(%esp)
movl   $0x3,(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
jns    804c2f8 <__sprintf_chk@plt+0x2b88>
movl   $0x805aabf,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x5,0x8(%esp)
movl   $0x805aac2,0x4(%esp)
mov    %eax,%esi
movl   $0x0,(%esp)
xor    %edi,%edi
call   8049290 <dcgettext@plt>
mov    %eax,%ebx
call   8049570 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0xc(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
call   8049570 <__errno_location@plt>
mov    %eax,%ebx
lea    -0xe4(%ebp),%eax
mov    (%ebx),%esi
mov    %eax,(%esp)
call   8051a20 <__sprintf_chk@plt+0x82b0>
test   %eax,%eax
jne    804c488 <__sprintf_chk@plt+0x2d18>
lea    -0xe4(%ebp),%eax
mov    %eax,(%esp)
call   8051a50 <__sprintf_chk@plt+0x82e0>
mov    %edi,%eax
mov    %esi,(%ebx)
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    804c57b <__sprintf_chk@plt+0x2e0b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8052a70 <__sprintf_chk@plt+0x9300>
mov    %eax,%edi
call   8049570 <__errno_location@plt>
mov    %eax,%ebx
jmp    804c3bc <__sprintf_chk@plt+0x2c4c>
lea    -0xdc(%ebp),%edi
mov    $0x18,%ecx
mov    %edi,-0xec(%ebp)
rep movsl %ds:(%esi),%es:(%edi)
mov    %ebx,(%esp)
call   8049280 <chdir@plt>
test   %eax,%eax
jns    804c2f0 <__sprintf_chk@plt+0x2b80>
mov    %ebx,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x5,0x8(%esp)
movl   $0x805aaa1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049290 <dcgettext@plt>
mov    %eax,%ebx
call   8049570 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
xor    %eax,%eax
jmp    804c3e6 <__sprintf_chk@plt+0x2c76>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x805aafc,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
jmp    804c3d4 <__sprintf_chk@plt+0x2c64>
nop
movl   $0x805aabf,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x5,0x8(%esp)
movl   $0x805aaa1,0x4(%esp)
mov    %eax,%esi
jmp    804c386 <__sprintf_chk@plt+0x2c16>
mov    %esi,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x5,0x8(%esp)
movl   $0x805aad4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049290 <dcgettext@plt>
mov    %eax,%esi
call   8049570 <__errno_location@plt>
mov    %edi,0xc(%esp)
xor    %edi,%edi
mov    %esi,0x8(%esp)
mov    %eax,%ebx
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
jmp    804c3bc <__sprintf_chk@plt+0x2c4c>
movl   $0x5,0x8(%esp)
movl   $0x805aa84,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%ebx
call   8049570 <__errno_location@plt>
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
xor    %eax,%eax
jmp    804c3e6 <__sprintf_chk@plt+0x2c76>
mov    %esi,(%esp)
jmp    804c436 <__sprintf_chk@plt+0x2cc6>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80492b0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc4(%esp),%eax
mov    %eax,%edx
and    $0x3,%eax
shr    $0x2,%edx
mov    %edx,%ecx
and    $0x1,%ecx
mov    %cl,0x2b(%esp)
mov    %eax,%ecx
mov    %eax,0x24(%esp)
sub    $0x1,%eax
test   %eax,%ecx
jne    804cb68 <__sprintf_chk@plt+0x33f8>
mov    0xc0(%esp),%ebx
test   %ebx,%ebx
je     804cb68 <__sprintf_chk@plt+0x33f8>
mov    0xc0(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804cb80 <__sprintf_chk@plt+0x3410>
cmp    $0x2f,%al
je     804ca85 <__sprintf_chk@plt+0x3315>
call   8052a70 <__sprintf_chk@plt+0x9300>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x20(%esp)
je     804cbf0 <__sprintf_chk@plt+0x3480>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__rawmemchr@plt>
mov    %eax,%ebx
mov    %eax,%esi
sub    %edi,%ebx
cmp    $0xfff,%ebx
mov    %eax,0x1c(%esp)
jle    804caba <__sprintf_chk@plt+0x334a>
mov    0xc0(%esp),%edi
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x34(%esp)
movzbl (%edi),%eax
test   %al,%al
je     804c791 <__sprintf_chk@plt+0x3021>
nop
cmp    $0x2f,%al
jne    804c668 <__sprintf_chk@plt+0x2ef8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movzbl (%edi),%eax
cmp    $0x2f,%al
je     804c658 <__sprintf_chk@plt+0x2ee8>
test   %al,%al
mov    %edi,%ebx
je     804c67f <__sprintf_chk@plt+0x2f0f>
mov    %edi,%ebx
jmp    804c674 <__sprintf_chk@plt+0x2f04>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     804c67f <__sprintf_chk@plt+0x2f0f>
add    $0x1,%ebx
movzbl (%ebx),%edx
cmp    $0x2f,%dl
jne    804c670 <__sprintf_chk@plt+0x2f00>
cmp    %edi,%ebx
je     804c791 <__sprintf_chk@plt+0x3021>
mov    %ebx,%ebp
sub    %edi,%ebp
cmp    $0x1,%ebp
je     804c860 <__sprintf_chk@plt+0x30f0>
cmp    $0x2,%ebp
je     804c870 <__sprintf_chk@plt+0x3100>
cmpb   $0x2f,-0x1(%esi)
mov    %esi,%eax
je     804c6ab <__sprintf_chk@plt+0x2f3b>
add    $0x1,%eax
movb   $0x2f,(%esi)
lea    (%eax,%ebp,1),%ecx
cmp    %ecx,0x1c(%esp)
ja     804c6f6 <__sprintf_chk@plt+0x2f86>
mov    0x20(%esp),%ecx
mov    0x1c(%esp),%esi
sub    %ecx,%eax
sub    %ecx,%esi
mov    %eax,0x2c(%esp)
mov    %esi,%eax
add    $0x1000,%eax
cmp    $0x1000,%ebp
lea    0x1(%ebp,%esi,1),%esi
cmovl  %eax,%esi
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    %eax,%ecx
add    %eax,%esi
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %esi,0x1c(%esp)
add    %ecx,%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049220 <memcpy@plt>
cmpl   $0x2,0x24(%esp)
sete   %dl
cmpb   $0x0,0x2b(%esp)
lea    (%eax,%ebp,1),%esi
movb   $0x0,(%esi)
jne    804c828 <__sprintf_chk@plt+0x30b8>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8049700 <__lxstat64@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
setne  %al
test   %al,%al
je     804c800 <__sprintf_chk@plt+0x3090>
call   8049570 <__errno_location@plt>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
mov    (%eax),%edi
je     804c971 <__sprintf_chk@plt+0x3201>
cmp    $0x1,%ecx
je     804c948 <__sprintf_chk@plt+0x31d8>
movl   $0x0,0x50(%esp)
cmpb   $0x0,(%ebx)
je     804c784 <__sprintf_chk@plt+0x3014>
cmpl   $0x2,0x24(%esp)
jne    804cb13 <__sprintf_chk@plt+0x33a3>
mov    %ebx,%edi
movzbl (%edi),%eax
test   %al,%al
jne    804c650 <__sprintf_chk@plt+0x2ee0>
mov    0x20(%esp),%eax
add    $0x1,%eax
cmp    %eax,%esi
ja     804caaa <__sprintf_chk@plt+0x333a>
lea    0x1(%esi),%eax
cmp    %eax,0x1c(%esp)
movb   $0x0,(%esi)
je     804c7c5 <__sprintf_chk@plt+0x3055>
mov    0x20(%esp),%ecx
sub    %ecx,%esi
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    %eax,0x20(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x30(%esp),%ecx
mov    0x20(%esp),%eax
test   %ecx,%ecx
je     804c93d <__sprintf_chk@plt+0x31cd>
mov    %ecx,(%esp)
mov    %eax,0x1c(%esp)
call   804d8d0 <__sprintf_chk@plt+0x4160>
mov    0x1c(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804c8c8 <__sprintf_chk@plt+0x3158>
cmp    $0x4000,%eax
jne    804c774 <__sprintf_chk@plt+0x3004>
mov    %ebx,%edi
jmp    804c786 <__sprintf_chk@plt+0x3016>
xchg   %ax,%ax
test   %dl,%dl
jne    804c76c <__sprintf_chk@plt+0x2ffc>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   80496e0 <__xstat64@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
setne  %al
jmp    804c748 <__sprintf_chk@plt+0x2fd8>
xchg   %ax,%ax
cmp    $0x2e,%al
jne    804c69d <__sprintf_chk@plt+0x2f2d>
mov    %ebx,%edi
jmp    804c786 <__sprintf_chk@plt+0x3016>
nop
cmp    $0x2e,%al
jne    804c69d <__sprintf_chk@plt+0x2f2d>
cmpb   $0x2e,0x1(%edi)
jne    804c69d <__sprintf_chk@plt+0x2f2d>
mov    0x20(%esp),%eax
mov    %ebx,%edi
add    $0x1,%eax
cmp    %eax,%esi
jbe    804c644 <__sprintf_chk@plt+0x2ed4>
lea    -0x1(%esi),%eax
cmp    %eax,0x20(%esp)
jae    804cc05 <__sprintf_chk@plt+0x3495>
cmpb   $0x2f,-0x2(%esi)
mov    %eax,%esi
je     804c644 <__sprintf_chk@plt+0x2ed4>
sub    $0x1,%esi
cmp    0x20(%esp),%esi
je     804c784 <__sprintf_chk@plt+0x3014>
cmpb   $0x2f,-0x1(%esi)
jne    804c8ac <__sprintf_chk@plt+0x313c>
mov    %ebx,%edi
jmp    804c786 <__sprintf_chk@plt+0x3016>
xchg   %ax,%ax
mov    0x30(%esp),%ecx
test   %ecx,%ecx
je     804cb22 <__sprintf_chk@plt+0x33b2>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804cf10 <__sprintf_chk@plt+0x37a0>
mov    0x2c(%esp),%edx
test   %al,%al
je     804c99b <__sprintf_chk@plt+0x322b>
test   %dl,%dl
jne    804c784 <__sprintf_chk@plt+0x3014>
mov    $0x28,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804d8d0 <__sprintf_chk@plt+0x4160>
call   8049570 <__errno_location@plt>
mov    %edi,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl (%ebx),%ecx
cmp    $0x2f,%cl
jne    804c964 <__sprintf_chk@plt+0x31f4>
lea    0x1(%ebx),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movzbl -0x1(%edx),%ecx
cmp    $0x2f,%cl
je     804c958 <__sprintf_chk@plt+0x31e8>
test   %cl,%cl
jne    804c971 <__sprintf_chk@plt+0x3201>
cmp    $0x2,%edi
je     804c784 <__sprintf_chk@plt+0x3014>
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
mov    0x1c(%esp),%eax
je     804c939 <__sprintf_chk@plt+0x31c9>
jmp    804c928 <__sprintf_chk@plt+0x31b8>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804ce90 <__sprintf_chk@plt+0x3720>
mov    0x6c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8053d90 <__sprintf_chk@plt+0xa620>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     804cbd0 <__sprintf_chk@plt+0x3460>
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   80494c0 <strlen@plt>
mov    0x38(%esp),%edx
test   %edx,%edx
mov    %eax,%ecx
je     804cae3 <__sprintf_chk@plt+0x3373>
lea    0x1(%ebp,%ecx,1),%edx
cmp    %edx,0x38(%esp)
jb     804cba3 <__sprintf_chk@plt+0x3433>
mov    %ebx,0x4(%esp)
mov    0x34(%esp),%ebx
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %ebx,%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   80491f0 <memmove@plt>
mov    %ebx,(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
call   8049220 <memcpy@plt>
cmpb   $0x2f,(%edi)
mov    %eax,%ebx
mov    %eax,0xc0(%esp)
mov    0x20(%esp),%eax
je     804cb98 <__sprintf_chk@plt+0x3428>
add    $0x1,%eax
cmp    %eax,%esi
jbe    804ca76 <__sprintf_chk@plt+0x3306>
lea    -0x1(%esi),%eax
cmp    %eax,0x20(%esp)
jae    804cc0c <__sprintf_chk@plt+0x349c>
cmpb   $0x2f,-0x2(%esi)
mov    %eax,%esi
je     804ca76 <__sprintf_chk@plt+0x3306>
sub    $0x1,%esi
cmp    0x20(%esp),%esi
je     804ca76 <__sprintf_chk@plt+0x3306>
cmpb   $0x2f,-0x1(%esi)
jne    804ca67 <__sprintf_chk@plt+0x32f7>
mov    %edi,(%esp)
mov    %ebx,%edi
call   8049200 <free@plt>
jmp    804c786 <__sprintf_chk@plt+0x3016>
movl   $0x1000,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
lea    0x1000(%eax),%ecx
mov    %eax,0x20(%esp)
lea    0x1(%eax),%esi
mov    %ecx,0x1c(%esp)
movb   $0x2f,(%eax)
jmp    804c625 <__sprintf_chk@plt+0x2eb5>
xor    %eax,%eax
cmpb   $0x2f,-0x1(%esi)
sete   %al
sub    %eax,%esi
jmp    804c7a0 <__sprintf_chk@plt+0x3030>
mov    0x20(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %eax,(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    %eax,0x20(%esp)
lea    (%eax,%ebx,1),%esi
add    $0x1000,%eax
mov    %eax,0x1c(%esp)
jmp    804c625 <__sprintf_chk@plt+0x2eb5>
lea    0x1(%ebp,%ecx,1),%eax
cmp    $0x1000,%eax
mov    %ecx,0x2c(%esp)
mov    %eax,%ecx
mov    $0x1000,%eax
cmovae %ecx,%eax
mov    %eax,(%esp)
mov    %eax,0x38(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x2c(%esp),%ecx
mov    %eax,0x34(%esp)
jmp    804ca0a <__sprintf_chk@plt+0x329a>
call   8049570 <__errno_location@plt>
mov    $0x14,%edi
jmp    804c971 <__sprintf_chk@plt+0x3201>
movl   $0x804dfd0,0x10(%esp)
movl   $0x804df80,0xc(%esp)
movl   $0x804dec0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x7,(%esp)
mov    %edx,0x2c(%esp)
call   804d700 <__sprintf_chk@plt+0x3f90>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,0x30(%esp)
jne    804c8d4 <__sprintf_chk@plt+0x3164>
call   8052a20 <__sprintf_chk@plt+0x92b0>
nop
call   8049570 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049570 <__errno_location@plt>
movl   $0x2,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x1(%eax),%esi
movb   $0x2f,(%eax)
jmp    804ca76 <__sprintf_chk@plt+0x3306>
mov    0x34(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    0x2c(%esp),%edx
mov    0x3c(%esp),%ecx
mov    %edx,0x38(%esp)
mov    %eax,0x34(%esp)
jmp    804ca0a <__sprintf_chk@plt+0x329a>
test   %dl,%dl
je     804cbf7 <__sprintf_chk@plt+0x3487>
call   8049570 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    804c784 <__sprintf_chk@plt+0x3014>
mov    $0xc,%edi
jmp    804c910 <__sprintf_chk@plt+0x31a0>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804c93d <__sprintf_chk@plt+0x31cd>
call   8049570 <__errno_location@plt>
mov    (%eax),%edi
xchg   %ax,%ax
jmp    804c910 <__sprintf_chk@plt+0x31a0>
mov    %eax,%esi
jmp    804c644 <__sprintf_chk@plt+0x2ed4>
mov    %eax,%esi
xchg   %ax,%ax
jmp    804ca76 <__sprintf_chk@plt+0x3306>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x805f464
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x805f460
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x805f3c0,%eax
mov    %eax,(%esp)
call   8054310 <__sprintf_chk@plt+0xaba0>
test   %eax,%eax
je     804cc69 <__sprintf_chk@plt+0x34f9>
cmpb   $0x0,0x805f460
je     804cc80 <__sprintf_chk@plt+0x3510>
call   8049570 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    804cc80 <__sprintf_chk@plt+0x3510>
mov    0x805f364,%eax
mov    %eax,(%esp)
call   8054310 <__sprintf_chk@plt+0xaba0>
test   %eax,%eax
jne    804ccd8 <__sprintf_chk@plt+0x3568>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x805ab2f,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%ebx
mov    0x805f464,%eax
test   %eax,%eax
je     804cce5 <__sprintf_chk@plt+0x3575>
mov    %eax,(%esp)
call   80515f0 <__sprintf_chk@plt+0x7e80>
mov    %eax,%esi
call   8049570 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x805ab3b,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
mov    0x805f2f8,%eax
mov    %eax,(%esp)
call   80491d0 <_exit@plt>
call   8049570 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x805b601,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
jmp    804ccd8 <__sprintf_chk@plt+0x3568>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804cd80 <__sprintf_chk@plt+0x3610>
test   %eax,%eax
je     804cd27 <__sprintf_chk@plt+0x35b7>
add    $0x1c,%esp
ret
call   8052a20 <__sprintf_chk@plt+0x92b0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   804cdf0 <__sprintf_chk@plt+0x3680>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    804cd78 <__sprintf_chk@plt+0x3608>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     804cd6c <__sprintf_chk@plt+0x35fc>
jmp    804cd78 <__sprintf_chk@plt+0x3608>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    804cd70 <__sprintf_chk@plt+0x3600>
mov    %eax,%edx
cmp    %edx,%esi
jb     804cd60 <__sprintf_chk@plt+0x35f0>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    804cd70 <__sprintf_chk@plt+0x3600>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804cd30 <__sprintf_chk@plt+0x35c0>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804cde8 <__sprintf_chk@plt+0x3678>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    804cde0 <__sprintf_chk@plt+0x3670>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    804cdcc <__sprintf_chk@plt+0x365c>
xor    %eax,%eax
jmp    804cdd2 <__sprintf_chk@plt+0x3662>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    804ce0b <__sprintf_chk@plt+0x369b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     804ce00 <__sprintf_chk@plt+0x3690>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     804ce39 <__sprintf_chk@plt+0x36c9>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     804ce39 <__sprintf_chk@plt+0x36c9>
cmp    $0x2f,%cl
je     804ce40 <__sprintf_chk@plt+0x36d0>
test   %bl,%bl
je     804ce18 <__sprintf_chk@plt+0x36a8>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    804ce22 <__sprintf_chk@plt+0x36b2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    804ce18 <__sprintf_chk@plt+0x36a8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
cmp    $0x1,%eax
jbe    804ce6f <__sprintf_chk@plt+0x36ff>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     804ce78 <__sprintf_chk@plt+0x3708>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    804ce65 <__sprintf_chk@plt+0x36f5>
nop
jmp    804ce6f <__sprintf_chk@plt+0x36ff>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
test   %esi,%esi
je     804cf00 <__sprintf_chk@plt+0x3790>
movl   $0x14,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    0x5c(%edi),%edx
mov    %eax,(%ebx)
mov    0x58(%edi),%eax
mov    %edx,0x8(%ebx)
mov    0x4(%edi),%edx
mov    %eax,0x4(%ebx)
mov    (%edi),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x10(%ebx)
mov    %eax,0xc(%ebx)
call   804dd10 <__sprintf_chk@plt+0x45a0>
test   %eax,%eax
je     804cf08 <__sprintf_chk@plt+0x3798>
cmp    %ebx,%eax
je     804cf00 <__sprintf_chk@plt+0x3790>
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804dfd0 <__sprintf_chk@plt+0x4860>
lea    0x0(%esi),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x38,%esp
mov    0x40(%esp),%ecx
mov    0x48(%esp),%ebx
test   %ecx,%ecx
je     804cf5a <__sprintf_chk@plt+0x37ea>
mov    0x44(%esp),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x1c(%esp)
mov    0x58(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0x4(%ebx),%edx
mov    %eax,0x20(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804d4b0 <__sprintf_chk@plt+0x3d40>
test   %eax,%eax
setne  %al
add    $0x38,%esp
pop    %ebx
ret
nop
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     804cfd6 <__sprintf_chk@plt+0x3866>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    804cfcf <__sprintf_chk@plt+0x385f>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     804cfc0 <__sprintf_chk@plt+0x3850>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    804cfad <__sprintf_chk@plt+0x383d>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     804cfc0 <__sprintf_chk@plt+0x3850>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     804cfa0 <__sprintf_chk@plt+0x3830>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    804cfc8 <__sprintf_chk@plt+0x3858>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    804cf78 <__sprintf_chk@plt+0x3808>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    804cfb6 <__sprintf_chk@plt+0x3846>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    804cf6e <__sprintf_chk@plt+0x37fe>
jmp    804cfc8 <__sprintf_chk@plt+0x3858>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ebx)
cmp    0x8(%ebx),%eax
jae    804d032 <__sprintf_chk@plt+0x38c2>
mov    (%ebx),%edx
add    $0x18,%esp
pop    %ebx
lea    (%edx,%eax,8),%eax
ret
call   80496d0 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
call   804d010 <__sprintf_chk@plt+0x38a0>
mov    0xc(%esp),%ecx
mov    %eax,%ebx
mov    %eax,(%ecx)
mov    (%eax),%eax
test   %eax,%eax
je     804d0c6 <__sprintf_chk@plt+0x3956>
cmp    %eax,%edi
je     804d07a <__sprintf_chk@plt+0x390a>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     804d0bf <__sprintf_chk@plt+0x394f>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     804d0a0 <__sprintf_chk@plt+0x3930>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     804d0f8 <__sprintf_chk@plt+0x3988>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edx),%eax
cmp    %edi,%eax
je     804d0d5 <__sprintf_chk@plt+0x3965>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    804d0d0 <__sprintf_chk@plt+0x3960>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    804d0a8 <__sprintf_chk@plt+0x3938>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     804d0a0 <__sprintf_chk@plt+0x3930>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    804d0a0 <__sprintf_chk@plt+0x3930>
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x805abb0,%edx
je     804d1a8 <__sprintf_chk@plt+0x3a38>
flds   0x8(%edx)
flds   0x805abc4
fxch   %st(1)
fucomi %st(1),%st
jbe    804d168 <__sprintf_chk@plt+0x39f8>
flds   0x805abc8
fucomip %st(1),%st
jbe    804d170 <__sprintf_chk@plt+0x3a00>
flds   0xc(%edx)
flds   0x805abcc
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804d178 <__sprintf_chk@plt+0x3a08>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     804d180 <__sprintf_chk@plt+0x3a10>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    804d188 <__sprintf_chk@plt+0x3a18>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     804d190 <__sprintf_chk@plt+0x3a20>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    804d198 <__sprintf_chk@plt+0x3a28>
jmp    804d1ad <__sprintf_chk@plt+0x3a3d>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    804d198 <__sprintf_chk@plt+0x3a28>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    804d198 <__sprintf_chk@plt+0x3a28>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    804d198 <__sprintf_chk@plt+0x3a28>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    804d198 <__sprintf_chk@plt+0x3a28>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    804d198 <__sprintf_chk@plt+0x3a28>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805abb0,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
cmp    0x4(%edx),%edi
mov    %edx,0x4(%esp)
mov    %cl,0xb(%esp)
jae    804d234 <__sprintf_chk@plt+0x3ac4>
mov    (%edi),%ebx
test   %ebx,%ebx
je     804d228 <__sprintf_chk@plt+0x3ab8>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
jne    804d1e7 <__sprintf_chk@plt+0x3a77>
jmp    804d21a <__sprintf_chk@plt+0x3aaa>
nop
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebp)
mov    %ebp,0x4(%eax)
je     804d218 <__sprintf_chk@plt+0x3aa8>
mov    %edx,%ebp
mov    0x0(%ebp),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804d010 <__sprintf_chk@plt+0x38a0>
mov    0x4(%ebp),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
jne    804d1d8 <__sprintf_chk@plt+0x3a68>
mov    %ebx,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,0x0(%ebp)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebp)
mov    %ebp,0x24(%esi)
jne    804d1e5 <__sprintf_chk@plt+0x3a75>
xchg   %ax,%ax
mov    (%edi),%ebx
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     804d248 <__sprintf_chk@plt+0x3ad8>
mov    0x4(%esp),%eax
add    $0x8,%edi
cmp    %edi,0x4(%eax)
ja     804d1c8 <__sprintf_chk@plt+0x3a58>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %esi,%eax
call   804d010 <__sprintf_chk@plt+0x38a0>
mov    %eax,%edx
mov    (%eax),%eax
test   %eax,%eax
je     804d292 <__sprintf_chk@plt+0x3b22>
mov    0x24(%esi),%eax
test   %eax,%eax
je     804d29a <__sprintf_chk@plt+0x3b2a>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    0x4(%edx),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%esp),%eax
cmp    %edi,0x4(%eax)
ja     804d1c8 <__sprintf_chk@plt+0x3a58>
jmp    804d234 <__sprintf_chk@plt+0x3ac4>
mov    %ebx,(%edx)
addl   $0x1,0xc(%esi)
jmp    804d271 <__sprintf_chk@plt+0x3b01>
movl   $0x8,(%esp)
mov    %edx,0xc(%esp)
call   80493f0 <malloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    804d266 <__sprintf_chk@plt+0x3af6>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    804d336 <__sprintf_chk@plt+0x3bc6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     804d32f <__sprintf_chk@plt+0x3bbf>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     804d32a <__sprintf_chk@plt+0x3bba>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    804d320 <__sprintf_chk@plt+0x3bb0>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     804d308 <__sprintf_chk@plt+0x3b98>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    804d381 <__sprintf_chk@plt+0x3c11>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     804d37a <__sprintf_chk@plt+0x3c0a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     804d37a <__sprintf_chk@plt+0x3c0a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    804d370 <__sprintf_chk@plt+0x3c00>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     804d358 <__sprintf_chk@plt+0x3be8>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     804d38c <__sprintf_chk@plt+0x3c1c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    804d3fe <__sprintf_chk@plt+0x3c8e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     804d3f7 <__sprintf_chk@plt+0x3c87>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     804d3f2 <__sprintf_chk@plt+0x3c82>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    804d3e8 <__sprintf_chk@plt+0x3c78>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     804d3d0 <__sprintf_chk@plt+0x3c60>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x805ab42,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   80496a0 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x805ab5a,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80496a0 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x805ab8c,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x805aa80
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   80496a0 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x805ab72,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80496a0 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   804d010 <__sprintf_chk@plt+0x38a0>
mov    (%eax),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    804d4da <__sprintf_chk@plt+0x3d6a>
jmp    804d4f3 <__sprintf_chk@plt+0x3d83>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
cmp    %ecx,%esi
je     804d502 <__sprintf_chk@plt+0x3d92>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    804d500 <__sprintf_chk@plt+0x3d90>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    804d4d8 <__sprintf_chk@plt+0x3d68>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
add    $0x10,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     804d541 <__sprintf_chk@plt+0x3dd1>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     804d537 <__sprintf_chk@plt+0x3dc7>
jmp    804d547 <__sprintf_chk@plt+0x3dd7>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    804d547 <__sprintf_chk@plt+0x3dd7>
mov    (%edx),%eax
test   %eax,%eax
je     804d530 <__sprintf_chk@plt+0x3dc0>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   80496d0 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   804d010 <__sprintf_chk@plt+0x38a0>
mov    %eax,%ebx
mov    %eax,%ecx
jmp    804d577 <__sprintf_chk@plt+0x3e07>
lea    0x0(%esi),%esi
mov    0x4(%ecx),%ecx
test   %ecx,%ecx
je     804d582 <__sprintf_chk@plt+0x3e12>
cmp    %esi,(%ecx)
jne    804d570 <__sprintf_chk@plt+0x3e00>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    804d59b <__sprintf_chk@plt+0x3e2b>
mov    0x4(%edi),%edx
jmp    804d58e <__sprintf_chk@plt+0x3e1e>
nop
mov    (%ebx),%eax
test   %eax,%eax
jne    804d597 <__sprintf_chk@plt+0x3e27>
add    $0x8,%ebx
cmp    %edx,%ebx
jb     804d588 <__sprintf_chk@plt+0x3e18>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
pop    %ebx
mov    (%eax),%eax
pop    %esi
pop    %edi
ret
jmp    804d5b0 <__sprintf_chk@plt+0x3e40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    804d608 <__sprintf_chk@plt+0x3e98>
mov    (%edi),%edx
test   %edx,%edx
je     804d5fc <__sprintf_chk@plt+0x3e8c>
cmp    %eax,%ebx
jbe    804d608 <__sprintf_chk@plt+0x3e98>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     804d5fc <__sprintf_chk@plt+0x3e8c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     804d608 <__sprintf_chk@plt+0x3e98>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    804d5e8 <__sprintf_chk@plt+0x3e78>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     804d5ca <__sprintf_chk@plt+0x3e5a>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    804d678 <__sprintf_chk@plt+0x3f08>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    804d64b <__sprintf_chk@plt+0x3edb>
jmp    804d662 <__sprintf_chk@plt+0x3ef2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     804d678 <__sprintf_chk@plt+0x3f08>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    804d648 <__sprintf_chk@plt+0x3ed8>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     804d634 <__sprintf_chk@plt+0x3ec4>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     804d6c2 <__sprintf_chk@plt+0x3f52>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    804d6a8 <__sprintf_chk@plt+0x3f38>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x804cff0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x804d000,%eax
cmove  %eax,%esi
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804d838 <__sprintf_chk@plt+0x40c8>
test   %ebx,%ebx
mov    $0x805abb0,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   804d100 <__sprintf_chk@plt+0x3990>
test   %al,%al
je     804d821 <__sprintf_chk@plt+0x40b1>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    804d7b0 <__sprintf_chk@plt+0x4040>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x805abd0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804d818 <__sprintf_chk@plt+0x40a8>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x40(%esp)
jmp    804d7b2 <__sprintf_chk@plt+0x4042>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   804cf60 <__sprintf_chk@plt+0x37f0>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     804d81a <__sprintf_chk@plt+0x40aa>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     804d821 <__sprintf_chk@plt+0x40b1>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   8049760 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     804d821 <__sprintf_chk@plt+0x40b1>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   8049200 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804d80c <__sprintf_chk@plt+0x409c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    804d8b6 <__sprintf_chk@plt+0x4146>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     804d8ae <__sprintf_chk@plt+0x413e>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    804d872 <__sprintf_chk@plt+0x4102>
jmp    804d896 <__sprintf_chk@plt+0x4126>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     804d880 <__sprintf_chk@plt+0x4110>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    804d870 <__sprintf_chk@plt+0x4100>
test   %edx,%edx
je     804d8a1 <__sprintf_chk@plt+0x4131>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     804d858 <__sprintf_chk@plt+0x40e8>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     804d8e8 <__sprintf_chk@plt+0x4178>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    804d95a <__sprintf_chk@plt+0x41ea>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    804d921 <__sprintf_chk@plt+0x41b1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    804d90a <__sprintf_chk@plt+0x419a>
jmp    804d919 <__sprintf_chk@plt+0x41a9>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049200 <free@plt>
test   %ebx,%ebx
jne    804d908 <__sprintf_chk@plt+0x4198>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     804d8f8 <__sprintf_chk@plt+0x4188>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    804d932 <__sprintf_chk@plt+0x41c2>
jmp    804d941 <__sprintf_chk@plt+0x41d1>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049200 <free@plt>
test   %ebx,%ebx
jne    804d930 <__sprintf_chk@plt+0x41c0>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049200 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    804d921 <__sprintf_chk@plt+0x41b1>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    804d97a <__sprintf_chk@plt+0x420a>
jmp    804d987 <__sprintf_chk@plt+0x4217>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    804d978 <__sprintf_chk@plt+0x4208>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     804d968 <__sprintf_chk@plt+0x41f8>
jmp    804d8eb <__sprintf_chk@plt+0x417b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    804da00 <__sprintf_chk@plt+0x4290>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x805abd0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804dae0 <__sprintf_chk@plt+0x4370>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,%eax
jmp    804da02 <__sprintf_chk@plt+0x4292>
fstp   %st(0)
call   804cf60 <__sprintf_chk@plt+0x37f0>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     804dae2 <__sprintf_chk@plt+0x4372>
cmp    %ebx,0x8(%esi)
je     804dad0 <__sprintf_chk@plt+0x4360>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   8049760 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804dae2 <__sprintf_chk@plt+0x4372>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   804d1b0 <__sprintf_chk@plt+0x3a40>
test   %al,%al
mov    %eax,%ebx
jne    804daf0 <__sprintf_chk@plt+0x4380>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   804d1b0 <__sprintf_chk@plt+0x3a40>
test   %al,%al
je     804db25 <__sprintf_chk@plt+0x43b5>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   804d1b0 <__sprintf_chk@plt+0x3a40>
test   %al,%al
je     804db25 <__sprintf_chk@plt+0x43b5>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   80496d0 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebx
test   %edi,%edi
je     804dcb8 <__sprintf_chk@plt+0x4548>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   804d040 <__sprintf_chk@plt+0x38d0>
test   %eax,%eax
je     804db78 <__sprintf_chk@plt+0x4408>
test   %ebx,%ebx
je     804dbf8 <__sprintf_chk@plt+0x4488>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804dbb8 <__sprintf_chk@plt+0x4448>
jmp    804dc08 <__sprintf_chk@plt+0x4498>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     804dcc0 <__sprintf_chk@plt+0x4550>
mov    0x24(%esi),%eax
test   %eax,%eax
je     804dcd4 <__sprintf_chk@plt+0x4564>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esi),%eax
call   804d100 <__sprintf_chk@plt+0x3990>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804dbb0 <__sprintf_chk@plt+0x4440>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    804dc58 <__sprintf_chk@plt+0x44e8>
fmulp  %st,%st(1)
jmp    804dc5a <__sprintf_chk@plt+0x44ea>
lea    0x0(%esi),%esi
fstp   %st(1)
flds   0x805abd0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804dcea <__sprintf_chk@plt+0x457a>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   804d9a0 <__sprintf_chk@plt+0x4230>
test   %al,%al
je     804dcec <__sprintf_chk@plt+0x457c>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   804d040 <__sprintf_chk@plt+0x38d0>
test   %eax,%eax
je     804dbb8 <__sprintf_chk@plt+0x4448>
call   80496d0 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    804db6e <__sprintf_chk@plt+0x43fe>
movl   $0x8,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
jne    804dbd7 <__sprintf_chk@plt+0x4467>
jmp    804dcec <__sprintf_chk@plt+0x457c>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    804db6e <__sprintf_chk@plt+0x43fe>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804db30 <__sprintf_chk@plt+0x43c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804db30 <__sprintf_chk@plt+0x43c0>
cmp    $0xffffffff,%eax
je     804dd48 <__sprintf_chk@plt+0x45d8>
test   %eax,%eax
mov    %ebx,%eax
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804dd3e <__sprintf_chk@plt+0x45ce>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   804d040 <__sprintf_chk@plt+0x38d0>
test   %eax,%eax
mov    %eax,%edi
je     804de88 <__sprintf_chk@plt+0x4718>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    804dd98 <__sprintf_chk@plt+0x4628>
jmp    804dda8 <__sprintf_chk@plt+0x4638>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    804dd98 <__sprintf_chk@plt+0x4628>
lea    0x14(%esi),%eax
call   804d100 <__sprintf_chk@plt+0x3990>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    804dd90 <__sprintf_chk@plt+0x4620>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     804de90 <__sprintf_chk@plt+0x4720>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   804d9a0 <__sprintf_chk@plt+0x4230>
test   %al,%al
jne    804dd98 <__sprintf_chk@plt+0x4628>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    804de6a <__sprintf_chk@plt+0x46fa>
lea    0x0(%esi,%eiz,1),%esi
jmp    804de79 <__sprintf_chk@plt+0x4709>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049200 <free@plt>
test   %ebx,%ebx
jne    804de68 <__sprintf_chk@plt+0x46f8>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    804dd98 <__sprintf_chk@plt+0x4628>
nop
xor    %ebp,%ebp
jmp    804dd98 <__sprintf_chk@plt+0x4628>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    804de3f <__sprintf_chk@plt+0x46cf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80543d0 <__sprintf_chk@plt+0xac60>
mov    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
mov    0x8(%esp),%ecx
mov    0xc(%esp),%ebx
mov    0x4(%ecx),%eax
mov    0x8(%ecx),%edx
xor    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
or     %eax,%edx
je     804df50 <__sprintf_chk@plt+0x47e0>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%edx
xor    0x10(%ebx),%edx
xor    0xc(%ebx),%eax
or     %eax,%edx
jne    804df49 <__sprintf_chk@plt+0x47d9>
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
mov    (%ecx),%eax
mov    %eax,0x8(%esp)
pop    %ebx
jmp    8051840 <__sprintf_chk@plt+0x80d0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%ecx
xor    0x8(%esi),%ecx
xor    0x4(%esi),%edx
or     %edx,%ecx
je     804dfa8 <__sprintf_chk@plt+0x4838>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x10(%ebx),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
jne    804df9f <__sprintf_chk@plt+0x482f>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
sete   %al
jmp    804df9f <__sprintf_chk@plt+0x482f>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049200 <free@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    %gs:0x14,%ecx
mov    %ecx,0xbc(%esp)
xor    %ecx,%ecx
mov    0xec(%esp),%ecx
mov    0xe0(%esp),%eax
mov    0xe4(%esp),%edx
mov    0xf4(%esp),%edi
and    $0x3,%ecx
mov    0xf0(%esp),%esi
mov    %eax,0x50(%esp)
mov    0xe8(%esp),%eax
mov    %ecx,0x58(%esp)
mov    0xec(%esp),%ecx
mov    %edx,0x54(%esp)
mov    0xfc(%esp),%edx
mov    %eax,%ebp
and    $0x20,%ecx
mov    %eax,0x4c(%esp)
mov    0xf8(%esp),%eax
cmp    $0x1,%ecx
mov    %ecx,0x64(%esp)
sbb    %ecx,%ecx
mov    %ecx,0x40(%esp)
andl   $0xffffffe8,0x40(%esp)
addl   $0x400,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049670 <localeconv@plt>
mov    (%eax),%ecx
mov    %eax,%ebx
mov    %ecx,(%esp)
mov    %ecx,0x60(%esp)
call   80494c0 <strlen@plt>
mov    $0x1,%edx
mov    %eax,%ecx
lea    -0x1(%eax),%eax
cmp    $0x10,%eax
mov    $0x805aac0,%eax
cmovb  %ecx,%edx
mov    0x8(%ebx),%ecx
cmovb  0x60(%esp),%eax
mov    %edx,0x68(%esp)
mov    %ecx,0x6c(%esp)
mov    0x4(%ebx),%ecx
mov    %eax,0x60(%esp)
mov    %ecx,(%esp)
mov    %ecx,%ebx
call   80494c0 <strlen@plt>
mov    %ebp,%ecx
cmp    $0x11,%eax
mov    $0x805b0bc,%eax
cmovb  %ebx,%eax
add    $0x288,%ecx
cmp    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    %ecx,0x48(%esp)
ja     804e432 <__sprintf_chk@plt+0x4cc2>
jae    804e428 <__sprintf_chk@plt+0x4cb8>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
or     %eax,%edx
je     804e668 <__sprintf_chk@plt+0x4ef8>
mov    0x54(%esp),%edx
mov    0x50(%esp),%eax
mov    %edx,0x8c(%esp)
test   %edx,%edx
mov    %eax,0x88(%esp)
fildll 0x88(%esp)
js     804e9a8 <__sprintf_chk@plt+0x5238>
mov    %esi,0x88(%esp)
test   %edi,%edi
mov    %edi,0x8c(%esp)
fildll 0x88(%esp)
js     804e988 <__sprintf_chk@plt+0x5218>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%eax
mov    %edx,0x8c(%esp)
test   %edx,%edx
mov    %eax,0x88(%esp)
fildll 0x88(%esp)
js     804e998 <__sprintf_chk@plt+0x5228>
fdivrp %st,%st(1)
testb  $0x10,0xec(%esp)
fmulp  %st,%st(1)
je     804e538 <__sprintf_chk@plt+0x4dc8>
fildl  0x40(%esp)
xor    %ebp,%ebp
fld    %st(0)
jmp    804e1a4 <__sprintf_chk@plt+0x4a34>
fstp   %st(1)
fxch   %st(2)
fld    %st(0)
add    $0x1,%ebp
fmul   %st(2),%st
fxch   %st(3)
fucomi %st(3),%st
jb     804e1c0 <__sprintf_chk@plt+0x4a50>
cmp    $0x8,%ebp
jne    804e1a0 <__sprintf_chk@plt+0x4a30>
fstp   %st(2)
fstp   %st(2)
jmp    804e1c4 <__sprintf_chk@plt+0x4a54>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(2)
fstp   %st(2)
fdivp  %st,%st(1)
cmpl   $0x1,0x58(%esp)
fld    %st(0)
je     804e298 <__sprintf_chk@plt+0x4b28>
fstp   %st(0)
fldt   0x805ac30
fucomip %st(1),%st
jbe    804e980 <__sprintf_chk@plt+0x5210>
flds   0x805ac1c
fxch   %st(1)
fucomi %st(1),%st
jae    804eb80 <__sprintf_chk@plt+0x5410>
fstp   %st(1)
fnstcw 0x86(%esp)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fld    %st(0)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x88(%esp),%ecx
mov    0x8c(%esp),%ebx
mov    0x58(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
test   %esi,%esi
jne    804e271 <__sprintf_chk@plt+0x4b01>
mov    %ecx,0x88(%esp)
test   %ebx,%ebx
mov    %ebx,0x8c(%esp)
fildll 0x88(%esp)
js     804ed15 <__sprintf_chk@plt+0x55a5>
fxch   %st(1)
xor    %edx,%edx
mov    $0x1,%eax
fucomi %st(1),%st
fstp   %st(1)
jp     804e271 <__sprintf_chk@plt+0x4b01>
je     804ecb8 <__sprintf_chk@plt+0x5548>
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x88(%esp)
test   %edx,%edx
mov    %edx,0x8c(%esp)
fildll 0x88(%esp)
js     804ecc1 <__sprintf_chk@plt+0x5551>
fxch   %st(1)
jmp    804e29a <__sprintf_chk@plt+0x4b2a>
xchg   %ax,%ax
fxch   %st(1)
fstpt  0x20(%esp)
mov    0x4c(%esp),%edi
movl   $0x805abda,0xc(%esp)
fstpt  0x10(%esp)
mov    %edi,(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049770 <__sprintf_chk@plt>
mov    %edi,(%esp)
call   80494c0 <strlen@plt>
mov    0x68(%esp),%edi
mov    0x64(%esp),%edx
add    $0x1,%edi
mov    %eax,%esi
xor    %eax,%eax
test   %edx,%edx
sete   %al
lea    0x1(%edi,%eax,1),%eax
cmp    %eax,%esi
fldt   0x20(%esp)
ja     804e310 <__sprintf_chk@plt+0x4ba0>
testb  $0x8,0xec(%esp)
je     804e588 <__sprintf_chk@plt+0x4e18>
mov    0x4c(%esp),%eax
cmpb   $0x30,-0x1(%eax,%esi,1)
jne    804e590 <__sprintf_chk@plt+0x4e20>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x58(%esp)
fmuls  0x805ac20
je     804e3e8 <__sprintf_chk@plt+0x4c78>
fldt   0x805ac30
fucomip %st(1),%st
jbe    804e3e8 <__sprintf_chk@plt+0x4c78>
flds   0x805ac1c
fxch   %st(1)
fucomi %st(1),%st
jae    804ec58 <__sprintf_chk@plt+0x54e8>
fstp   %st(1)
fnstcw 0x86(%esp)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fld    %st(0)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x88(%esp),%ecx
mov    0x8c(%esp),%ebx
mov    0x58(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
test   %esi,%esi
jne    804e3c0 <__sprintf_chk@plt+0x4c50>
mov    %ecx,0x88(%esp)
test   %ebx,%ebx
mov    %ebx,0x8c(%esp)
fildll 0x88(%esp)
js     804ed22 <__sprintf_chk@plt+0x55b2>
fxch   %st(1)
xor    %edx,%edx
mov    $0x1,%eax
fucomip %st(1),%st
fstp   %st(0)
jp     804e3c2 <__sprintf_chk@plt+0x4c52>
jne    804e3c2 <__sprintf_chk@plt+0x4c52>
xor    %eax,%eax
xor    %edx,%edx
jmp    804e3c2 <__sprintf_chk@plt+0x4c52>
nop
fstp   %st(0)
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x88(%esp)
test   %edx,%edx
mov    %edx,0x8c(%esp)
fildll 0x88(%esp)
jns    804e3e8 <__sprintf_chk@plt+0x4c78>
fadds  0x805aa78
lea    0x0(%esi),%esi
fdivs  0x805ac20
mov    0x4c(%esp),%edi
movl   $0x805abd4,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
fstpt  0x10(%esp)
call   8049770 <__sprintf_chk@plt>
mov    %edi,(%esp)
xor    %edi,%edi
call   80494c0 <strlen@plt>
mov    %eax,%esi
jmp    804e598 <__sprintf_chk@plt+0x4e28>
nop
cmp    %esi,0x38(%esp)
jbe    804e0f9 <__sprintf_chk@plt+0x4989>
mov    %edi,%eax
or     %esi,%eax
je     804e11d <__sprintf_chk@plt+0x49ad>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
or     %eax,%edx
jne    804e11d <__sprintf_chk@plt+0x49ad>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    0x50(%esp),%edi
mov    0x54(%esp),%ebp
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,%ebx
mov    %eax,%esi
mov    %edx,0xc(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
mov    $0xa,%ecx
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
imul   $0xa,%edx,%edx
mov    %edx,0x20(%esp)
mul    %ecx
mov    %eax,0x50(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x54(%esp)
mov    0x50(%esp),%edx
add    %eax,0x54(%esp)
mov    0x54(%esp),%ecx
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x70(%esp)
mov    %edx,0x74(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    0x54(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x24(%esp)
mov    0x50(%esp),%edx
mov    %eax,0x20(%esp)
mov    %edx,(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
cmp    0x74(%esp),%ebx
mov    %eax,0x50(%esp)
jae    804ebd0 <__sprintf_chk@plt+0x5460>
mov    $0x3,%ebx
jmp    804e6f4 <__sprintf_chk@plt+0x4f84>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x58(%esp)
je     804e54d <__sprintf_chk@plt+0x4ddd>
fldt   0x805ac30
fucomip %st(1),%st
ja     804e8c0 <__sprintf_chk@plt+0x5150>
mov    0x4c(%esp),%edi
mov    $0xffffffff,%ebp
fstpt  0x10(%esp)
movl   $0x805abd4,0xc(%esp)
mov    %edi,(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049770 <__sprintf_chk@plt>
mov    %edi,(%esp)
xor    %edi,%edi
call   80494c0 <strlen@plt>
mov    %eax,%esi
jmp    804e598 <__sprintf_chk@plt+0x4e28>
fstp   %st(0)
jmp    804e598 <__sprintf_chk@plt+0x4e28>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
mov    0x48(%esp),%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
sub    %esi,%ebx
sub    %edi,%esi
mov    %eax,0x4(%esp)
add    %ebx,%esi
mov    %ebx,(%esp)
call   80491f0 <memmove@plt>
testb  $0x4,0xec(%esp)
jne    804e7c8 <__sprintf_chk@plt+0x5058>
testb  $0x80,0xec(%esp)
je     804e63d <__sprintf_chk@plt+0x4ecd>
cmp    $0xffffffff,%ebp
je     804e9b8 <__sprintf_chk@plt+0x5248>
mov    0xec(%esp),%eax
mov    %ebp,%edi
and    $0x100,%eax
or     %eax,%edi
je     804e63d <__sprintf_chk@plt+0x4ecd>
testb  $0x40,0xec(%esp)
jne    804e8a0 <__sprintf_chk@plt+0x5130>
test   %ebp,%ebp
je     804ee22 <__sprintf_chk@plt+0x56b2>
mov    0x64(%esp),%esi
mov    0x48(%esp),%edi
test   %esi,%esi
lea    0x1(%edi),%edx
je     804e888 <__sprintf_chk@plt+0x5118>
movzbl 0x805ac10(%ebp),%ecx
mov    0x48(%esp),%edi
mov    %cl,(%edi)
test   %eax,%eax
je     804ee2b <__sprintf_chk@plt+0x56bb>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
jne    804e870 <__sprintf_chk@plt+0x5100>
lea    0x1(%edx),%eax
mov    %eax,0x48(%esp)
movb   $0x42,(%edx)
mov    0xbc(%esp),%edi
xor    %gs:0x14,%edi
mov    0x48(%esp),%eax
movb   $0x0,(%eax)
mov    %ebx,%eax
jne    804ee1d <__sprintf_chk@plt+0x56ad>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    %eax,%ecx
mov    %edx,%ebx
mov    0x54(%esp),%edx
mov    %eax,0x78(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0x70(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,%ebp
mov    %ecx,%eax
imul   %ebx,%ebp
mov    %edx,%ebx
mull   0x50(%esp)
imul   %ecx,%ebx
mov    %eax,0x20(%esp)
mov    0x70(%esp),%eax
add    %ebp,%ebx
mov    %edx,0x24(%esp)
add    %ebx,0x24(%esp)
mov    0x24(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    0x50(%esp),%ecx
mov    0x54(%esp),%ebx
xor    %ecx,%eax
xor    %ebx,%edx
or     %eax,%edx
jne    804e11d <__sprintf_chk@plt+0x49ad>
xor    %ebx,%ebx
movl   $0x0,0x50(%esp)
mov    0xec(%esp),%eax
and    $0x10,%eax
mov    %eax,0x7c(%esp)
je     804ea20 <__sprintf_chk@plt+0x52b0>
xor    %edi,%edi
mov    0x40(%esp),%esi
cmpl   $0x0,0x24(%esp)
jbe    804ec40 <__sprintf_chk@plt+0x54d0>
xor    %ebp,%ebp
mov    %ebp,%ecx
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x78(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
mov    0x50(%esp),%ecx
xor    %edx,%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
lea    (%eax,%eax,4),%eax
lea    (%ecx,%eax,2),%eax
mov    %ebx,%ecx
divl   0x40(%esp)
sar    %ecx
lea    (%ecx,%edx,2),%ebp
mov    0x24(%esp),%ecx
mov    0x20(%esp),%edx
add    %ebp,%ebx
mov    %eax,0x70(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    0x78(%esp),%ecx
cmp    %ebp,0x40(%esp)
mov    %eax,0x20(%esp)
mov    0x70(%esp),%eax
mov    %edx,0x24(%esp)
mov    %eax,0x50(%esp)
jbe    804ecf8 <__sprintf_chk@plt+0x5588>
test   %ebx,%ebx
setne  %bl
movzbl %bl,%ebx
add    $0x1,%ecx
cmp    0x24(%esp),%edi
jbe    804ecd0 <__sprintf_chk@plt+0x5560>
cmpl   $0x0,0x24(%esp)
mov    %ecx,%ebp
jbe    804ed2f <__sprintf_chk@plt+0x55bf>
mov    0x48(%esp),%esi
jmp    804ea29 <__sprintf_chk@plt+0x52b9>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
sub    %ebx,%esi
mov    $0xffffffff,%edi
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,0x4(%esp)
add    %esi,%ebx
movl   $0x29,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x20(%esp)
lea    0x93(%esp),%eax
mov    %eax,(%esp)
call   8049410 <__memcpy_chk@plt>
mov    %ebx,%eax
mov    %edi,%ebx
mov    %ebp,0x60(%esp)
mov    %eax,%edi
mov    0x6c(%esp),%ebp
jmp    804e82a <__sprintf_chk@plt+0x50ba>
mov    0x20(%esp),%eax
sub    %eax,%edi
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
movzbl 0x0(%ebp),%eax
test   %al,%al
je     804e83f <__sprintf_chk@plt+0x50cf>
movzbl %al,%edx
cmp    $0x7e,%al
mov    %edx,%ebx
cmova  %esi,%ebx
add    $0x1,%ebp
cmp    %esi,%ebx
cmova  %esi,%ebx
sub    %ebx,%esi
sub    %ebx,%edi
lea    0x93(%esp),%eax
add    %esi,%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049220 <memcpy@plt>
test   %esi,%esi
jne    804e810 <__sprintf_chk@plt+0x50a0>
mov    0x60(%esp),%ebp
mov    %edi,%ebx
jmp    804e5c4 <__sprintf_chk@plt+0x4e54>
test   %ebp,%ebp
je     804e633 <__sprintf_chk@plt+0x4ec3>
movb   $0x69,(%edx)
add    $0x1,%edx
jmp    804e633 <__sprintf_chk@plt+0x4ec3>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ebp
mov    $0x6b,%ecx
jne    804e612 <__sprintf_chk@plt+0x4ea2>
jmp    804e619 <__sprintf_chk@plt+0x4ea9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%edi
lea    0x289(%edi),%esi
mov    %esi,0x48(%esp)
movb   $0x20,0x288(%edi)
jmp    804e5f7 <__sprintf_chk@plt+0x4e87>
lea    0x0(%esi),%esi
flds   0x805ac1c
fxch   %st(1)
fucomi %st(1),%st
jae    804eb30 <__sprintf_chk@plt+0x53c0>
fstp   %st(1)
fnstcw 0x86(%esp)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fld    %st(0)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x88(%esp),%ecx
mov    0x8c(%esp),%ebx
mov    0x58(%esp),%edi
xor    %eax,%eax
xor    %edx,%edx
test   %edi,%edi
jne    804e950 <__sprintf_chk@plt+0x51e0>
mov    %ecx,0x88(%esp)
test   %ebx,%ebx
mov    %ebx,0x8c(%esp)
fildll 0x88(%esp)
js     804ed08 <__sprintf_chk@plt+0x5598>
fxch   %st(1)
xor    %edx,%edx
mov    $0x1,%eax
fucomip %st(1),%st
fstp   %st(0)
jp     804e952 <__sprintf_chk@plt+0x51e2>
je     804eca8 <__sprintf_chk@plt+0x5538>
jmp    804e952 <__sprintf_chk@plt+0x51e2>
fstp   %st(0)
add    %ecx,%eax
adc    %ebx,%edx
mov    %eax,0x88(%esp)
test   %edx,%edx
mov    %edx,0x8c(%esp)
fildll 0x88(%esp)
jns    804e54d <__sprintf_chk@plt+0x4ddd>
fadds  0x805aa78
jmp    804e54d <__sprintf_chk@plt+0x4ddd>
xchg   %ax,%ax
fld    %st(0)
jmp    804e29a <__sprintf_chk@plt+0x4b2a>
nop
fadds  0x805aa78
jmp    804e15f <__sprintf_chk@plt+0x49ef>
nop
lea    0x0(%esi,%eiz,1),%esi
fadds  0x805aa78
jmp    804e184 <__sprintf_chk@plt+0x4a14>
nop
lea    0x0(%esi,%eiz,1),%esi
fadds  0x805aa78
jmp    804e142 <__sprintf_chk@plt+0x49d2>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x0,0x3c(%esp)
ja     804e9cc <__sprintf_chk@plt+0x525c>
xor    %ebp,%ebp
cmpl   $0x1,0x38(%esp)
jbe    804e5d7 <__sprintf_chk@plt+0x4e67>
mov    0x40(%esp),%esi
mov    $0x1,%edx
xor    %ecx,%ecx
mov    %edx,%eax
xor    %edi,%edi
mov    $0x1,%ebp
mov    %ecx,%edx
mov    %ebx,0x20(%esp)
xchg   %ax,%ax
mov    %edx,%ecx
mov    %edi,%ebx
imul   %eax,%ebx
imul   %esi,%ecx
mul    %esi
add    %ebx,%ecx
add    %ecx,%edx
cmp    %edx,0x3c(%esp)
ja     804ea10 <__sprintf_chk@plt+0x52a0>
jb     804ea06 <__sprintf_chk@plt+0x5296>
cmp    %eax,0x38(%esp)
ja     804ea10 <__sprintf_chk@plt+0x52a0>
mov    0x20(%esp),%ebx
jmp    804e5d7 <__sprintf_chk@plt+0x4e67>
nop
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    804e9e8 <__sprintf_chk@plt+0x5278>
jmp    804ea06 <__sprintf_chk@plt+0x5296>
lea    0x0(%esi),%esi
mov    0x48(%esp),%esi
mov    $0xffffffff,%ebp
cmpl   $0x1,0x58(%esp)
je     804ec08 <__sprintf_chk@plt+0x5498>
mov    0x58(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
jne    804ea47 <__sprintf_chk@plt+0x52d7>
add    0x50(%esp),%ebx
test   %ebx,%ebx
setg   %al
test   %al,%al
je     804eac0 <__sprintf_chk@plt+0x5350>
mov    0x7c(%esp),%edi
addl   $0x1,0x20(%esp)
adcl   $0x0,0x24(%esp)
test   %edi,%edi
je     804eac0 <__sprintf_chk@plt+0x5350>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    0x24(%esp),%edx
mov    %eax,%ecx
xor    0x20(%esp),%eax
or     %eax,%edx
jne    804eac0 <__sprintf_chk@plt+0x5350>
cmp    $0x8,%ebp
mov    %ecx,0x20(%esp)
mov    %ebx,0x24(%esp)
je     804eac0 <__sprintf_chk@plt+0x5350>
add    $0x1,%ebp
testb  $0x8,0xec(%esp)
movl   $0x1,0x20(%esp)
movl   $0x0,0x24(%esp)
jne    804eac0 <__sprintf_chk@plt+0x5350>
mov    0x68(%esp),%edi
lea    -0x1(%esi),%eax
movb   $0x30,-0x1(%esi)
sub    %edi,%eax
mov    %eax,%esi
mov    0x60(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
xchg   %ax,%ax
mov    %esi,%ebx
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    $0x1,%ebx
mov    0x24(%esp),%edx
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
mov    0x24(%esp),%edx
add    $0x30,%eax
mov    %al,(%ebx)
mov    0x20(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
jne    804eac8 <__sprintf_chk@plt+0x5358>
jmp    804e5b6 <__sprintf_chk@plt+0x4e46>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw 0x86(%esp)
fsub   %st,%st(1)
fxch   %st(1)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x8c(%esp),%ebx
mov    0x88(%esp),%ecx
lea    -0x80000000(%ebx),%eax
mov    %eax,%ebx
jmp    804e910 <__sprintf_chk@plt+0x51a0>
lea    0x0(%esi),%esi
fnstcw 0x86(%esp)
fsub   %st,%st(1)
fxch   %st(1)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x8c(%esp),%ebx
mov    0x88(%esp),%ecx
lea    -0x80000000(%ebx),%eax
mov    %eax,%ebx
jmp    804e233 <__sprintf_chk@plt+0x4ac3>
lea    0x0(%esi),%esi
ja     804ebf0 <__sprintf_chk@plt+0x5480>
cmp    0x70(%esp),%esi
ja     804ebf0 <__sprintf_chk@plt+0x5480>
cmp    0x74(%esp),%ebx
jbe    804ee34 <__sprintf_chk@plt+0x56c4>
mov    $0x2,%ebx
jmp    804e6f4 <__sprintf_chk@plt+0x4f84>
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%eax
xor    %ebx,%ebx
mov    0x74(%esp),%edx
mov    %eax,%edi
or     %edx,%edi
setne  %bl
jmp    804e6f4 <__sprintf_chk@plt+0x4f84>
xchg   %ax,%ax
mov    0x20(%esp),%eax
movl   $0x0,0x5c(%esp)
and    $0x1,%eax
mov    %eax,0x58(%esp)
mov    %ebx,%eax
cltd
add    0x58(%esp),%eax
adc    0x5c(%esp),%edx
mov    %eax,%edi
xor    %eax,%eax
or     %edx,%edi
mov    0x50(%esp),%edi
setne  %al
add    %eax,%edi
cmp    $0x5,%edi
setg   %al
jmp    804ea47 <__sprintf_chk@plt+0x52d7>
cmp    %esi,0x20(%esp)
jae    804e719 <__sprintf_chk@plt+0x4fa9>
mov    0x48(%esp),%esi
xor    %ebp,%ebp
jmp    804ea29 <__sprintf_chk@plt+0x52b9>
lea    0x0(%esi),%esi
fnstcw 0x86(%esp)
fsub   %st,%st(1)
fxch   %st(1)
movzwl 0x86(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x84(%esp)
fldcw  0x84(%esp)
fistpll 0x88(%esp)
fldcw  0x86(%esp)
mov    0x8c(%esp),%ebx
mov    0x88(%esp),%ecx
lea    -0x80000000(%ebx),%eax
mov    %eax,%ebx
jmp    804e37f <__sprintf_chk@plt+0x4c0f>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
jmp    804e952 <__sprintf_chk@plt+0x51e2>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
jmp    804e271 <__sprintf_chk@plt+0x4b01>
fadds  0x805aa78
fxch   %st(1)
jmp    804e29a <__sprintf_chk@plt+0x4b2a>
xchg   %ax,%ax
jb     804ecdc <__sprintf_chk@plt+0x556c>
cmp    0x20(%esp),%esi
ja     804e7ac <__sprintf_chk@plt+0x503c>
cmp    $0x8,%ecx
nop
jne    804e720 <__sprintf_chk@plt+0x4fb0>
mov    %ecx,%ebp
mov    0x48(%esp),%esi
jmp    804ea29 <__sprintf_chk@plt+0x52b9>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,0x40(%esp)
sbb    %ebx,%ebx
not    %ebx
add    $0x3,%ebx
jmp    804e79f <__sprintf_chk@plt+0x502f>
fadds  0x805aa78
fxch   %st(1)
jmp    804e93b <__sprintf_chk@plt+0x51cb>
fadds  0x805aa78
fxch   %st(1)
jmp    804e25e <__sprintf_chk@plt+0x4aee>
fadds  0x805aa78
fxch   %st(1)
jmp    804e3aa <__sprintf_chk@plt+0x4c3a>
cmpl   $0x9,0x20(%esp)
ja     804e7b9 <__sprintf_chk@plt+0x5049>
cmpl   $0x1,0x58(%esp)
je     804edca <__sprintf_chk@plt+0x565a>
mov    0x58(%esp),%ecx
test   %ebx,%ebx
setg   %al
test   %ecx,%ecx
sete   %dl
and    %edx,%eax
test   %al,%al
je     804edae <__sprintf_chk@plt+0x563e>
mov    0x70(%esp),%eax
add    $0x1,%eax
cmp    $0xa,%eax
mov    %eax,0x50(%esp)
je     804edef <__sprintf_chk@plt+0x567f>
movzbl 0x50(%esp),%eax
xor    %ebx,%ebx
mov    0x4c(%esp),%edi
add    $0x30,%eax
mov    %al,0x287(%edi)
mov    0x68(%esp),%eax
lea    0x287(%edi),%esi
sub    %eax,%esi
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
movl   $0x0,0x50(%esp)
jmp    804ea29 <__sprintf_chk@plt+0x52b9>
mov    0x70(%esp),%eax
test   %eax,%eax
jne    804ed6d <__sprintf_chk@plt+0x55fd>
testb  $0x8,0xec(%esp)
jne    804edde <__sprintf_chk@plt+0x566e>
movl   $0x0,0x50(%esp)
jmp    804ed6d <__sprintf_chk@plt+0x55fd>
mov    0x70(%esp),%eax
and    $0x1,%eax
add    %ebx,%eax
cmp    $0x2,%eax
setg   %al
jmp    804ed55 <__sprintf_chk@plt+0x55e5>
mov    0x48(%esp),%esi
movl   $0x0,0x50(%esp)
jmp    804ea29 <__sprintf_chk@plt+0x52b9>
addl   $0x1,0x20(%esp)
mov    0x20(%esp),%esi
adcl   $0x0,0x24(%esp)
mov    0x24(%esp),%edi
mov    %esi,%eax
xor    $0xa,%eax
or     %edi,%eax
jne    804ee4b <__sprintf_chk@plt+0x56db>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movl   $0x0,0x50(%esp)
jmp    804ea29 <__sprintf_chk@plt+0x52b9>
call   80492b0 <__stack_chk_fail@plt>
mov    0x48(%esp),%edx
jmp    804e61f <__sprintf_chk@plt+0x4eaf>
mov    %edx,0x48(%esp)
jmp    804e63d <__sprintf_chk@plt+0x4ecd>
jb     804e52a <__sprintf_chk@plt+0x4dba>
cmp    0x70(%esp),%esi
xchg   %ax,%ax
jae    804ebe2 <__sprintf_chk@plt+0x5472>
jmp    804e52a <__sprintf_chk@plt+0x4dba>
xor    %ebx,%ebx
lea    0x0(%esi),%esi
jmp    804edb6 <__sprintf_chk@plt+0x5646>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%ebx
mov    0x48(%esp),%esi
test   %ebx,%ebx
je     804ef90 <__sprintf_chk@plt+0x5820>
xor    %edi,%edi
cmpb   $0x27,(%ebx)
je     804ef08 <__sprintf_chk@plt+0x5798>
movl   $0x4,0xc(%esp)
movl   $0x805abfc,0x8(%esp)
movl   $0x805ac04,0x4(%esp)
mov    %ebx,(%esp)
call   8053e90 <__sprintf_chk@plt+0xa720>
test   %eax,%eax
js     804ef18 <__sprintf_chk@plt+0x57a8>
or     0x805abfc(,%eax,4),%edi
mov    $0x1,%edx
movl   $0x1,(%esi)
xor    %ecx,%ecx
movl   $0x0,0x4(%esi)
mov    0x44(%esp),%eax
mov    %edi,(%eax)
xor    %eax,%eax
or     %edx,%ecx
je     804eed8 <__sprintf_chk@plt+0x5768>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8059cda,(%esp)
call   80493c0 <getenv@plt>
test   %eax,%eax
je     804ef80 <__sprintf_chk@plt+0x5810>
mov    $0x200,%eax
xor    %edx,%edx
mov    %eax,(%esi)
mov    $0x4,%eax
mov    %edx,0x4(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    $0x4,%di
jmp    804ee81 <__sprintf_chk@plt+0x5711>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
movl   $0x805abea,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8052c30 <__sprintf_chk@plt+0x94c0>
test   %eax,%eax
jne    804efe0 <__sprintf_chk@plt+0x5870>
movzbl (%ebx),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    804ef75 <__sprintf_chk@plt+0x5805>
mov    0x2c(%esp),%edx
cmp    %edx,%ebx
jne    804ef68 <__sprintf_chk@plt+0x57f8>
jmp    804eff8 <__sprintf_chk@plt+0x5888>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%ebx
je     804eff8 <__sprintf_chk@plt+0x5888>
add    $0x1,%ebx
movzbl (%ebx),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     804ef60 <__sprintf_chk@plt+0x57f0>
mov    (%esi),%edx
mov    0x4(%esi),%ecx
jmp    804eec0 <__sprintf_chk@plt+0x5750>
nop
mov    $0x400,%eax
xor    %edx,%edx
jmp    804eef3 <__sprintf_chk@plt+0x5783>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8059ced,(%esp)
call   80493c0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804ee76 <__sprintf_chk@plt+0x5706>
movl   $0x805abe0,(%esp)
call   80493c0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804ee76 <__sprintf_chk@plt+0x5706>
movl   $0x8059cda,(%esp)
call   80493c0 <getenv@plt>
test   %eax,%eax
je     804f022 <__sprintf_chk@plt+0x58b2>
mov    $0x200,%edx
xor    %ecx,%ecx
mov    %edx,(%esi)
xor    %edi,%edi
mov    %ecx,0x4(%esi)
jmp    804eec0 <__sprintf_chk@plt+0x5750>
nop
mov    0x44(%esp),%edx
mov    0x4(%esi),%ecx
movl   $0x0,(%edx)
mov    (%esi),%edx
jmp    804eec8 <__sprintf_chk@plt+0x5758>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x42,-0x1(%edx)
je     804f010 <__sprintf_chk@plt+0x58a0>
or     $0x80,%edi
or     $0x20,%edi
jmp    804ef75 <__sprintf_chk@plt+0x5805>
lea    0x0(%esi,%eiz,1),%esi
or     $0x180,%edi
cmpb   $0x69,-0x2(%edx)
jne    804ef75 <__sprintf_chk@plt+0x5805>
jmp    804f004 <__sprintf_chk@plt+0x5894>
mov    $0x400,%edx
xor    %ecx,%ecx
jmp    804efd3 <__sprintf_chk@plt+0x5863>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
lea    0x14(%eax),%edi
movb   $0x0,0x14(%eax)
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8059920 <__sprintf_chk@plt+0x101b0>
add    $0x30,%eax
mov    %al,(%edi)
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    %eax,%esi
mov    %edx,%eax
or     %esi,%eax
mov    %edx,%ebx
jne    804f050 <__sprintf_chk@plt+0x58e0>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebx
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
testb  $0x2,0x54(%esp)
mov    %eax,0x14(%esp)
mov    %eax,%edi
je     804f210 <__sprintf_chk@plt+0x5aa0>
movl   $0x0,0x18(%esp)
mov    %edi,%esi
xor    %edi,%edi
mov    0x4c(%esp),%eax
mov    (%eax),%eax
cmp    %eax,%esi
jbe    804f1e2 <__sprintf_chk@plt+0x5a72>
mov    %eax,0x14(%esp)
xor    %ebp,%ebp
mov    0x50(%esp),%edx
mov    0x4c(%esp),%ecx
test   %edx,%edx
mov    %eax,(%ecx)
je     804f202 <__sprintf_chk@plt+0x5a92>
xor    %ecx,%ecx
cmpl   $0x1,0x50(%esp)
je     804f11c <__sprintf_chk@plt+0x59ac>
mov    %ebp,%ecx
and    $0x1,%ebp
shr    %ecx
add    %ecx,%ebp
xor    %eax,%eax
testb  $0x4,0x54(%esp)
cmovne %eax,%ebp
testb  $0x8,0x54(%esp)
cmovne %eax,%ecx
mov    0x48(%esp),%eax
test   %eax,%eax
je     804f1b5 <__sprintf_chk@plt+0x5a45>
mov    0x48(%esp),%eax
test   %ebp,%ebp
lea    -0x1(%ebp),%edx
lea    -0x1(%ebx,%eax,1),%esi
je     804f162 <__sprintf_chk@plt+0x59f2>
cmp    %esi,%ebx
jae    804f162 <__sprintf_chk@plt+0x59f2>
xor    %eax,%eax
jmp    804f157 <__sprintf_chk@plt+0x59e7>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %esi,%ebx
je     804f162 <__sprintf_chk@plt+0x59f2>
add    $0x1,%ebx
cmp    %eax,%edx
movb   $0x20,-0x1(%ebx)
jne    804f150 <__sprintf_chk@plt+0x59e0>
mov    %ecx,0x1c(%esp)
mov    0x14(%esp),%ecx
mov    %esi,%eax
sub    %ebx,%eax
movb   $0x0,(%ebx)
mov    %ebx,(%esp)
cmp    %ecx,%eax
cmova  %ecx,%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   80495b0 <mempcpy@plt>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
lea    -0x1(%ecx),%ebx
mov    %eax,%edx
je     804f1b2 <__sprintf_chk@plt+0x5a42>
cmp    %eax,%esi
jbe    804f1b2 <__sprintf_chk@plt+0x5a42>
xor    %eax,%eax
jmp    804f1a7 <__sprintf_chk@plt+0x5a37>
nop
add    $0x1,%eax
cmp    %esi,%edx
je     804f1b2 <__sprintf_chk@plt+0x5a42>
add    $0x1,%edx
cmp    %eax,%ebx
movb   $0x20,-0x1(%edx)
jne    804f1a0 <__sprintf_chk@plt+0x5a30>
movb   $0x0,(%edx)
add    0x14(%esp),%ebp
add    %ecx,%ebp
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %edi,(%esp)
call   8049200 <free@plt>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
cmp    %eax,%esi
jae    804f459 <__sprintf_chk@plt+0x5ce9>
mov    0x50(%esp),%edx
sub    %esi,%eax
mov    0x4c(%esp),%ecx
mov    %eax,%ebp
mov    %esi,%eax
test   %edx,%edx
mov    %eax,(%ecx)
jne    804f10a <__sprintf_chk@plt+0x599a>
mov    %ebp,%ecx
xor    %ebp,%ebp
jmp    804f11c <__sprintf_chk@plt+0x59ac>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049330 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804f0d8 <__sprintf_chk@plt+0x5968>
mov    0x40(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049650 <mbstowcs@plt>
cmp    $0xffffffff,%eax
jne    804f260 <__sprintf_chk@plt+0x5af0>
testb  $0x1,0x54(%esp)
jne    804f425 <__sprintf_chk@plt+0x5cb5>
movl   $0x0,0x18(%esp)
xor    %edi,%edi
mov    $0xffffffff,%ebp
jmp    804f1bb <__sprintf_chk@plt+0x5a4b>
xchg   %ax,%ax
lea    0x1(%eax),%ebp
lea    0x0(,%ebp,4),%esi
mov    %esi,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804f438 <__sprintf_chk@plt+0x5cc8>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049650 <mbstowcs@plt>
test   %eax,%eax
je     804f0e0 <__sprintf_chk@plt+0x5970>
mov    0x18(%esp),%eax
movl   $0x0,-0x4(%eax,%esi,1)
mov    %eax,%esi
mov    (%eax),%eax
test   %eax,%eax
je     804f3cf <__sprintf_chk@plt+0x5c5f>
xor    %ecx,%ecx
mov    %ebx,0x44(%esp)
mov    %esi,%ebx
mov    %ecx,%esi
mov    %eax,(%esp)
call   80492f0 <iswprint@plt>
test   %eax,%eax
jne    804f2d7 <__sprintf_chk@plt+0x5b67>
movl   $0xfffd,(%ebx)
mov    $0x1,%esi
add    $0x4,%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    804f2c0 <__sprintf_chk@plt+0x5b50>
mov    0x18(%esp),%ecx
mov    %esi,%eax
mov    %ebp,0x4(%esp)
mov    0x44(%esp),%ebx
mov    %al,0x1c(%esp)
mov    %ecx,(%esp)
call   80495e0 <wcswidth@plt>
cmpb   $0x0,0x1c(%esp)
mov    %eax,%esi
je     804f3e1 <__sprintf_chk@plt+0x5c71>
mov    0x18(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049360 <wcstombs@plt>
add    $0x1,%eax
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804f410 <__sprintf_chk@plt+0x5ca0>
mov    0x4c(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
mov    0x18(%esp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     804f44e <__sprintf_chk@plt+0x5cde>
mov    %edi,0x14(%esp)
mov    %ebx,%ebp
xor    %esi,%esi
mov    %eax,%edi
mov    %edx,%ebx
jmp    804f37d <__sprintf_chk@plt+0x5c0d>
lea    0x0(%esi,%eiz,1),%esi
add    %esi,%eax
cmp    %eax,%ebx
jb     804f39b <__sprintf_chk@plt+0x5c2b>
add    $0x4,%edi
mov    (%edi),%ecx
test   %ecx,%ecx
je     804f400 <__sprintf_chk@plt+0x5c90>
mov    %eax,%esi
mov    %ecx,(%esp)
call   80491e0 <wcwidth@plt>
cmp    $0xffffffff,%eax
jne    804f368 <__sprintf_chk@plt+0x5bf8>
mov    $0x1,%eax
add    %esi,%eax
cmp    %eax,%ebx
movl   $0xfffd,(%edi)
jae    804f36e <__sprintf_chk@plt+0x5bfe>
mov    %ebp,%ebx
mov    %edi,%ebp
mov    0x14(%esp),%edi
mov    0x1c(%esp),%eax
movl   $0x0,0x0(%ebp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   8049360 <wcstombs@plt>
mov    %edi,0x40(%esp)
mov    %eax,0x14(%esp)
jmp    804f0e4 <__sprintf_chk@plt+0x5974>
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80495e0 <wcswidth@plt>
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    (%eax),%eax
cmp    %eax,%esi
jbe    804f1e0 <__sprintf_chk@plt+0x5a70>
lea    0x1(%edi),%eax
mov    %eax,0x1c(%esp)
jmp    804f32a <__sprintf_chk@plt+0x5bba>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%ebx
mov    %eax,%esi
mov    %edi,%ebp
mov    0x14(%esp),%edi
jmp    804f3a3 <__sprintf_chk@plt+0x5c33>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x54(%esp)
mov    $0xffffffff,%ebp
je     804f1bb <__sprintf_chk@plt+0x5a4b>
jmp    804f0e4 <__sprintf_chk@plt+0x5974>
mov    0x14(%esp),%esi
xor    %edi,%edi
movl   $0x0,0x18(%esp)
jmp    804f0e4 <__sprintf_chk@plt+0x5974>
testb  $0x1,0x54(%esp)
je     804f24a <__sprintf_chk@plt+0x5ada>
mov    0x14(%esp),%esi
xor    %edi,%edi
jmp    804f0e4 <__sprintf_chk@plt+0x5974>
mov    0x18(%esp),%ebp
xor    %esi,%esi
jmp    804f3a3 <__sprintf_chk@plt+0x5c33>
mov    %esi,%eax
xor    %ebp,%ebp
jmp    804f0f8 <__sprintf_chk@plt+0x5988>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
mov    (%esi),%eax
mov    %eax,0x1c(%esp)
jmp    804f48a <__sprintf_chk@plt+0x5d1a>
lea    0x0(%esi),%esi
mov    %ebp,%edi
lea    0x1(%eax),%ebx
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   80493d0 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804f4e0 <__sprintf_chk@plt+0x5d70>
mov    0x1c(%esp),%eax
mov    %eax,(%esi)
mov    0x4c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804f0b0 <__sprintf_chk@plt+0x5940>
cmp    $0xffffffff,%eax
je     804f4f8 <__sprintf_chk@plt+0x5d88>
cmp    %eax,%ebx
jbe    804f488 <__sprintf_chk@plt+0x5d18>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   8049200 <free@plt>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
xor    %ebp,%ebp
call   8049200 <free@plt>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x50(%esp),%ebx
mov    0x54(%esp),%eax
add    %ebx,%eax
mov    %eax,0x18(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804f650 <__sprintf_chk@plt+0x5ee0>
cmp    0x18(%esp),%ebx
jae    804f6d4 <__sprintf_chk@plt+0x5f64>
xor    %esi,%esi
lea    0x24(%esp),%edi
jmp    804f573 <__sprintf_chk@plt+0x5e03>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%al
jge    804f563 <__sprintf_chk@plt+0x5df3>
sub    $0x20,%eax
cmp    $0x3,%al
ja     804f589 <__sprintf_chk@plt+0x5e19>
add    $0x1,%ebx
add    $0x1,%esi
cmp    %ebx,0x18(%esp)
jbe    804f6d0 <__sprintf_chk@plt+0x5f60>
movzbl (%ebx),%eax
cmp    $0x3f,%al
jle    804f558 <__sprintf_chk@plt+0x5de8>
cmp    $0x41,%al
jl     804f589 <__sprintf_chk@plt+0x5e19>
cmp    $0x5f,%al
jle    804f563 <__sprintf_chk@plt+0x5df3>
sub    $0x61,%eax
cmp    $0x1d,%al
jbe    804f563 <__sprintf_chk@plt+0x5df3>
mov    0x58(%esp),%eax
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
and    $0x2,%eax
mov    %eax,0x1c(%esp)
jmp    804f5c7 <__sprintf_chk@plt+0x5e57>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x7fffffff,%ecx
sub    %esi,%ecx
cmp    %ecx,%eax
jg     804f698 <__sprintf_chk@plt+0x5f28>
add    %eax,%esi
mov    %edi,(%esp)
add    %ebp,%ebx
call   8049230 <mbsinit@plt>
test   %eax,%eax
jne    804f569 <__sprintf_chk@plt+0x5df9>
mov    0x18(%esp),%eax
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     804f638 <__sprintf_chk@plt+0x5ec8>
cmp    $0xfffffffe,%eax
je     804f6b8 <__sprintf_chk@plt+0x5f48>
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80491e0 <wcwidth@plt>
test   %eax,%eax
jns    804f5a8 <__sprintf_chk@plt+0x5e38>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    804f643 <__sprintf_chk@plt+0x5ed3>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80492c0 <iswcntrl@plt>
test   %eax,%eax
jne    804f5b9 <__sprintf_chk@plt+0x5e49>
cmp    $0x7fffffff,%esi
je     804f698 <__sprintf_chk@plt+0x5f28>
add    $0x1,%esi
jmp    804f5b9 <__sprintf_chk@plt+0x5e49>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x58(%esp)
je     804f563 <__sprintf_chk@plt+0x5df3>
mov    $0xffffffff,%eax
jmp    804f69d <__sprintf_chk@plt+0x5f2d>
lea    0x0(%esi),%esi
cmp    0x18(%esp),%ebx
jae    804f6d4 <__sprintf_chk@plt+0x5f64>
call   8049740 <__ctype_b_loc@plt>
mov    0x58(%esp),%esi
mov    0x18(%esp),%edi
and    $0x2,%esi
mov    (%eax),%ecx
xor    %eax,%eax
jmp    804f677 <__sprintf_chk@plt+0x5f07>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    %edi,%ebx
je     804f69d <__sprintf_chk@plt+0x5f2d>
add    $0x1,%ebx
movzbl -0x1(%ebx),%edx
movzwl (%ecx,%edx,2),%edx
test   $0x40,%dh
jne    804f690 <__sprintf_chk@plt+0x5f20>
test   %esi,%esi
jne    804f643 <__sprintf_chk@plt+0x5ed3>
and    $0x2,%edx
jne    804f673 <__sprintf_chk@plt+0x5f03>
cmp    $0x7fffffff,%eax
jne    804f670 <__sprintf_chk@plt+0x5f00>
nop
mov    $0x7fffffff,%eax
mov    0x2c(%esp),%edx
xor    %gs:0x14,%edx
jne    804f6d8 <__sprintf_chk@plt+0x5f68>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
testb  $0x1,0x58(%esp)
jne    804f643 <__sprintf_chk@plt+0x5ed3>
mov    0x18(%esp),%ebx
add    $0x1,%esi
cmp    %ebx,0x18(%esp)
ja     804f573 <__sprintf_chk@plt+0x5e03>
mov    %esi,%eax
jmp    804f69d <__sprintf_chk@plt+0x5f2d>
xor    %eax,%eax
jmp    804f69d <__sprintf_chk@plt+0x5f2d>
call   80492b0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    0x24(%esp),%edx
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804f510 <__sprintf_chk@plt+0x5da0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804f793 <__sprintf_chk@plt+0x6023>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049630 <strrchr@plt>
test   %eax,%eax
je     804f77f <__sprintf_chk@plt+0x600f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804f77f <__sprintf_chk@plt+0x600f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x805ac78,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804f77f <__sprintf_chk@plt+0x600f>
mov    $0x3,%ecx
mov    $0x805ac80,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804f77f <__sprintf_chk@plt+0x600f>
lea    0x4(%eax),%ebx
mov    %ebx,0x805f360
mov    %ebx,0x805f468
mov    %ebx,0x805f380
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x805f364,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805ac40,(%esp)
mov    %eax,0xc(%esp)
call   8049300 <fwrite@plt>
call   80496d0 <abort@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
movl   $0x2,0x4(%esp)
lea    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
call   8051ac0 <__sprintf_chk@plt+0x8350>
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
je     804faf3 <__sprintf_chk@plt+0x6383>
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8055350 <__sprintf_chk@plt+0xbbe0>
test   %eax,%eax
mov    %eax,%esi
je     804faf3 <__sprintf_chk@plt+0x6383>
call   8049330 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804fdf0 <__sprintf_chk@plt+0x6680>
cmp    %esi,%ebx
movl   $0x0,0x4(%ebp)
mov    %ebx,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
jae    804fe50 <__sprintf_chk@plt+0x66e0>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    804f8ad <__sprintf_chk@plt+0x613d>
mov    0x3c(%esp),%ebx
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x805b640(,%edx,4),%edx
bt     %eax,%edx
jae    804f898 <__sprintf_chk@plt+0x6128>
movl   $0x1,0x40(%esp)
movsbl (%ebx),%edi
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
test   %edi,%edi
movb   $0x1,0x38(%esp)
jne    804f942 <__sprintf_chk@plt+0x61d2>
call   80496d0 <abort@plt>
mov    %ebp,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fffa <__sprintf_chk@plt+0x688a>
movb   $0x1,0x2c(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     804fd50 <__sprintf_chk@plt+0x65e0>
cmp    $0xfffffffe,%eax
je     804fdc0 <__sprintf_chk@plt+0x6650>
test   %eax,%eax
jne    804fdb0 <__sprintf_chk@plt+0x6640>
mov    0x3c(%esp),%ebx
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%ebx)
jne    805001e <__sprintf_chk@plt+0x68ae>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8050047 <__sprintf_chk@plt+0x68d7>
xor    %edi,%edi
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804f886 <__sprintf_chk@plt+0x6116>
test   %edi,%edi
movb   $0x0,0x2c(%esp)
movb   $0x1,0x38(%esp)
je     804f893 <__sprintf_chk@plt+0x6123>
mov    0x3c(%esp),%ebx
mov    0x40(%esp),%eax
movzbl 0x44(%esp),%edx
movb   $0x0,0x38(%esp)
add    %ebx,%eax
cmp    %eax,%esi
mov    %eax,0x3c(%esp)
ja     804f850 <__sprintf_chk@plt+0x60e0>
test   %dl,%dl
je     804fe50 <__sprintf_chk@plt+0x66e0>
mov    %edi,(%esp)
call   8049550 <iswalnum@plt>
test   %eax,%eax
sete   0x1f(%esp)
mov    0x18(%esp),%eax
lea    0x68(%esp),%edi
movb   $0x0,0x64(%esp)
cmpb   $0x0,0x64(%esp)
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
mov    %esi,0x14(%esp)
jne    804fb89 <__sprintf_chk@plt+0x6419>
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    804fd18 <__sprintf_chk@plt+0x65a8>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
mov    0x80(%esp),%edx
movb   $0x1,0x70(%esp)
test   %edx,%edx
jne    804fb4a <__sprintf_chk@plt+0x63da>
movzbl 0x38(%esp),%ebx
mov    0x14(%esp),%esi
test   %bl,%bl
jne    804fde0 <__sprintf_chk@plt+0x6670>
cmpb   $0x0,0x2c(%esp)
jne    804ff11 <__sprintf_chk@plt+0x67a1>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    804fefc <__sprintf_chk@plt+0x678c>
movl   $0x1,0x40(%esp)
movsbl (%edx),%edi
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
movb   $0x1,0x38(%esp)
test   %bl,%bl
je     804fa7b <__sprintf_chk@plt+0x630b>
test   %edi,%edi
je     804fa90 <__sprintf_chk@plt+0x6320>
cmpb   $0x0,0x44(%esp)
je     804fa90 <__sprintf_chk@plt+0x6320>
mov    %edi,(%esp)
call   8049550 <iswalnum@plt>
test   %eax,%eax
jne    804fa9b <__sprintf_chk@plt+0x632b>
xchg   %ax,%ax
cmpb   $0x0,0x1f(%esp)
jne    804fff0 <__sprintf_chk@plt+0x6880>
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
movzbl (%esi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x805b640(,%edx,4),%edx
bt     %eax,%edx
jae    804fe60 <__sprintf_chk@plt+0x66f0>
movl   $0x1,0x40(%esp)
movsbl (%esi),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    804fb2a <__sprintf_chk@plt+0x63ba>
xor    %ebx,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %ebx,%eax
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
jne    8050042 <__sprintf_chk@plt+0x68d2>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    804f7f8 <__sprintf_chk@plt+0x6088>
lea    0x0(%esi),%esi
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
movb   $0x1,0x70(%esp)
movzbl 0x38(%esp),%ebx
test   %bl,%bl
je     804fc18 <__sprintf_chk@plt+0x64a8>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    804fc60 <__sprintf_chk@plt+0x64f0>
mov    0x40(%esp),%eax
add    %eax,0x3c(%esp)
mov    0x78(%esp),%eax
add    %eax,0x74(%esp)
cmpb   $0x0,0x64(%esp)
movb   $0x0,0x38(%esp)
movb   $0x0,0x70(%esp)
je     804f9d0 <__sprintf_chk@plt+0x6260>
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     804fb38 <__sprintf_chk@plt+0x63c8>
cmp    $0xfffffffe,%eax
je     804fd70 <__sprintf_chk@plt+0x6600>
test   %eax,%eax
jne    804fbf7 <__sprintf_chk@plt+0x6487>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805001e <__sprintf_chk@plt+0x68ae>
mov    0x80(%esp),%esi
test   %esi,%esi
jne    8050047 <__sprintf_chk@plt+0x68d7>
mov    %edi,(%esp)
movb   $0x1,0x7c(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fa06 <__sprintf_chk@plt+0x6296>
movb   $0x0,0x64(%esp)
jmp    804fa06 <__sprintf_chk@plt+0x6296>
xchg   %ax,%ax
cmpb   $0x0,0x2c(%esp)
jne    804fc8d <__sprintf_chk@plt+0x651d>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    804fc78 <__sprintf_chk@plt+0x6508>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     804fb64 <__sprintf_chk@plt+0x63f4>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    804fb64 <__sprintf_chk@plt+0x63f4>
jmp    804f893 <__sprintf_chk@plt+0x6123>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fffa <__sprintf_chk@plt+0x688a>
movb   $0x1,0x2c(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     804fd38 <__sprintf_chk@plt+0x65c8>
cmp    $0xfffffffe,%eax
je     804fd90 <__sprintf_chk@plt+0x6620>
test   %eax,%eax
jne    804fcf1 <__sprintf_chk@plt+0x6581>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805001e <__sprintf_chk@plt+0x68ae>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8050047 <__sprintf_chk@plt+0x68d7>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fc53 <__sprintf_chk@plt+0x64e3>
movb   $0x0,0x2c(%esp)
jmp    804fc53 <__sprintf_chk@plt+0x64e3>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fffa <__sprintf_chk@plt+0x688a>
movb   $0x1,0x64(%esp)
jmp    804fb89 <__sprintf_chk@plt+0x6419>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
jmp    804fc53 <__sprintf_chk@plt+0x64e3>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    0x3c(%esp),%ebx
jmp    804f946 <__sprintf_chk@plt+0x61d6>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    804fb45 <__sprintf_chk@plt+0x63d5>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    804fc53 <__sprintf_chk@plt+0x64e3>
lea    0x0(%esi),%esi
mov    0x48(%esp),%edi
jmp    804f91b <__sprintf_chk@plt+0x61ab>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    804f946 <__sprintf_chk@plt+0x61d6>
xchg   %ax,%ax
mov    0x48(%esp),%edi
movzbl 0x44(%esp),%ebx
jmp    804fa73 <__sprintf_chk@plt+0x6303>
xchg   %ax,%ax
cmp    %esi,%ebx
mov    $0x1,%edi
jae    804fe12 <__sprintf_chk@plt+0x66a2>
call   8049740 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edi
shr    $0x3,%di
xor    $0x1,%edi
and    $0x1,%edi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movzbl (%esi,%eax,1),%ebx
test   %bl,%bl
je     804fe33 <__sprintf_chk@plt+0x66c3>
call   8049740 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%ebx,2)
jne    804fe3d <__sprintf_chk@plt+0x66cd>
mov    %edi,%eax
test   %al,%al
jne    804fff0 <__sprintf_chk@plt+0x6880>
cmpb   $0x0,(%esi)
je     804faf3 <__sprintf_chk@plt+0x6383>
lea    0x1(%esi),%ebx
jmp    804f7f8 <__sprintf_chk@plt+0x6088>
xchg   %ax,%ax
movb   $0x1,0x1f(%esp)
jmp    804f979 <__sprintf_chk@plt+0x6209>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fffa <__sprintf_chk@plt+0x688a>
movb   $0x1,0x2c(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     804fb22 <__sprintf_chk@plt+0x63b2>
cmp    $0xfffffffe,%eax
je     804ffa1 <__sprintf_chk@plt+0x6831>
test   %eax,%eax
jne    804fedd <__sprintf_chk@plt+0x676d>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805001e <__sprintf_chk@plt+0x68ae>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
jne    8050047 <__sprintf_chk@plt+0x68d7>
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fae6 <__sprintf_chk@plt+0x6376>
movb   $0x0,0x2c(%esp)
jmp    804fae6 <__sprintf_chk@plt+0x6376>
mov    %ebp,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fffa <__sprintf_chk@plt+0x688a>
movb   $0x1,0x2c(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     804ffbc <__sprintf_chk@plt+0x684c>
cmp    $0xfffffffe,%eax
je     804ffd2 <__sprintf_chk@plt+0x6862>
test   %eax,%eax
jne    804ff79 <__sprintf_chk@plt+0x6809>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805001e <__sprintf_chk@plt+0x68ae>
mov    0x48(%esp),%ebx
test   %ebx,%ebx
jne    8050047 <__sprintf_chk@plt+0x68d7>
xor    %edi,%edi
jmp    804ff7d <__sprintf_chk@plt+0x680d>
mov    0x48(%esp),%edi
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     804fa6e <__sprintf_chk@plt+0x62fe>
movb   $0x0,0x2c(%esp)
jmp    804fa6e <__sprintf_chk@plt+0x62fe>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    %eax,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    804f7f8 <__sprintf_chk@plt+0x6088>
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
jmp    804fa6e <__sprintf_chk@plt+0x62fe>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    804fa6e <__sprintf_chk@plt+0x62fe>
mov    $0x1,%ebx
jmp    804faf5 <__sprintf_chk@plt+0x6385>
movl   $0x805ace0,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805ac92,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805ace0,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805aca9,(%esp)
call   8049730 <__assert_fail@plt>
call   80492b0 <__stack_chk_fail@plt>
movl   $0x805ace0,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805acc0,(%esp)
call   8049730 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %esi,0x4(%esp)
call   8049290 <dcgettext@plt>
cmp    %esi,%eax
mov    %eax,%ebx
je     80500a3 <__sprintf_chk@plt+0x6933>
mov    %esi,%edx
call   804f7c0 <__sprintf_chk@plt+0x6050>
test   %al,%al
je     80500b0 <__sprintf_chk@plt+0x6940>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   80494c0 <strlen@plt>
lea    0x4(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x805acd2,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
mov    %edi,%ebx
call   8049770 <__sprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049290 <dcgettext@plt>
mov    %ebx,%ebp
mov    %eax,0x18(%esp)
call   8054400 <__sprintf_chk@plt+0xac90>
movl   $0x805acda,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   8054210 <__sprintf_chk@plt+0xaaa0>
test   %eax,%eax
jne    8050228 <__sprintf_chk@plt+0x6ab8>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
je     80502e8 <__sprintf_chk@plt+0x6b78>
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
jne    80501b8 <__sprintf_chk@plt+0x6a48>
cmp    %ebx,%esi
jne    8050308 <__sprintf_chk@plt+0x6b98>
cmp    %ebx,%edi
xchg   %ax,%ax
jne    80501a0 <__sprintf_chk@plt+0x6a30>
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8050192 <__sprintf_chk@plt+0x6a22>
mov    %edi,(%esp)
call   8049200 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%edx
mov    0x18(%esp),%eax
call   804f7c0 <__sprintf_chk@plt+0x6050>
test   %al,%al
jne    8050200 <__sprintf_chk@plt+0x6a90>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     80501e2 <__sprintf_chk@plt+0x6a72>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
call   804f7c0 <__sprintf_chk@plt+0x6050>
test   %al,%al
jne    8050200 <__sprintf_chk@plt+0x6a90>
test   %ebp,%ebp
je     8050320 <__sprintf_chk@plt+0x6bb0>
mov    0x18(%esp),%eax
mov    %ebp,%edx
call   804f7c0 <__sprintf_chk@plt+0x6050>
test   %al,%al
je     8050320 <__sprintf_chk@plt+0x6bb0>
lea    0x0(%esi),%esi
test   %esi,%esi
je     805020c <__sprintf_chk@plt+0x6a9c>
mov    %esi,(%esp)
call   8049200 <free@plt>
test   %edi,%edi
mov    0x18(%esp),%eax
je     8050194 <__sprintf_chk@plt+0x6a24>
mov    %edi,(%esp)
call   8049200 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x8(%esp)
movl   $0x805acda,0x4(%esp)
mov    %ebx,(%esp)
call   8052b40 <__sprintf_chk@plt+0x93d0>
mov    %edi,(%esp)
mov    %eax,%esi
call   80494c0 <strlen@plt>
mov    %eax,%ebp
lea    0xb(%eax),%eax
mov    %eax,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8049220 <memcpy@plt>
mov    0x1c(%esp),%edx
mov    $0x5449,%ecx
add    %edx,%ebp
mov    %cx,0x8(%ebp)
movl   $0x52542f2f,0x0(%ebp)
movl   $0x4c534e41,0x4(%ebp)
movb   $0x0,0xa(%ebp)
mov    %edx,0x8(%esp)
movl   $0x805acda,0x4(%esp)
mov    %ebx,(%esp)
call   8052b40 <__sprintf_chk@plt+0x93d0>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   8049200 <free@plt>
test   %ebp,%ebp
je     80503a0 <__sprintf_chk@plt+0x6c30>
movl   $0x3f,0x4(%esp)
mov    %ebp,(%esp)
call   8049480 <strchr@plt>
test   %eax,%eax
je     805038f <__sprintf_chk@plt+0x6c1f>
mov    %ebp,(%esp)
mov    %esi,%ebx
xor    %ebp,%ebp
call   8049200 <free@plt>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
jne    805016c <__sprintf_chk@plt+0x69fc>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     80503a8 <__sprintf_chk@plt+0x6c38>
mov    %ebx,%edi
mov    %ebp,%ebx
movl   $0x0,0x1c(%esp)
jmp    805016c <__sprintf_chk@plt+0x69fc>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     805018c <__sprintf_chk@plt+0x6a1c>
mov    %esi,(%esp)
call   8049200 <free@plt>
jmp    805018c <__sprintf_chk@plt+0x6a1c>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   80494c0 <strlen@plt>
lea    0x4(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %ebx,0x14(%esp)
movl   $0x805acd2,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   8049770 <__sprintf_chk@plt>
test   %esi,%esi
je     805037c <__sprintf_chk@plt+0x6c0c>
mov    %esi,(%esp)
call   8049200 <free@plt>
test   %edi,%edi
mov    %ebp,%eax
je     8050194 <__sprintf_chk@plt+0x6a24>
mov    %ebp,0x18(%esp)
jmp    8050214 <__sprintf_chk@plt+0x6aa4>
test   %esi,%esi
je     80503b7 <__sprintf_chk@plt+0x6c47>
mov    %esi,0x1c(%esp)
mov    %ebp,%edi
mov    %esi,%ebx
jmp    805016c <__sprintf_chk@plt+0x69fc>
mov    %esi,%ebx
jmp    805015e <__sprintf_chk@plt+0x69ee>
nop
mov    %ebp,0x1c(%esp)
mov    %ebp,%edi
mov    0x40(%esp),%ebx
jmp    805016c <__sprintf_chk@plt+0x69fc>
mov    %ebp,%ebx
jmp    80502f0 <__sprintf_chk@plt+0x6b80>
xchg   %ax,%ax
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     80503e1 <__sprintf_chk@plt+0x6c71>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   80496d0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     8050420 <__sprintf_chk@plt+0x6cb0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8054400 <__sprintf_chk@plt+0xac90>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    8050488 <__sprintf_chk@plt+0x6d18>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    8050470 <__sprintf_chk@plt+0x6d00>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x2d,0x3(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x38,0x4(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x0,0x5(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x60,(%esi)
mov    $0x805acfe,%eax
mov    $0x805acf3,%edx
cmovne %edx,%eax
jmp    8050418 <__sprintf_chk@plt+0x6ca8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8059b8a,%eax
cmp    $0x7,%edi
mov    $0x805b4f7,%edx
cmovne %edx,%eax
jmp    8050418 <__sprintf_chk@plt+0x6ca8>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    8050470 <__sprintf_chk@plt+0x6d00>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x31,0x2(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x38,0x3(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x30,0x4(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x33,0x5(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x30,0x6(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x0,0x7(%eax)
jne    8050470 <__sprintf_chk@plt+0x6d00>
cmpb   $0x60,(%esi)
mov    $0x805acfa,%eax
mov    $0x805acf7,%edx
cmovne %edx,%eax
jmp    8050418 <__sprintf_chk@plt+0x6ca8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     8050db8 <__sprintf_chk@plt+0x7648>
mov    0x94(%esp),%eax
jmp    *0x805ad40(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     8050bc0 <__sprintf_chk@plt+0x7450>
test   %al,%al
je     8050bd3 <__sprintf_chk@plt+0x7463>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     8050ba8 <__sprintf_chk@plt+0x7438>
cmpb   $0x0,0x58(%esp)
je     8050ba8 <__sprintf_chk@plt+0x7438>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     8050ba8 <__sprintf_chk@plt+0x7438>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049270 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    8050c40 <__sprintf_chk@plt+0x74d0>
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     8050958 <__sprintf_chk@plt+0x71e8>
movzbl %bl,%eax
jmp    *0x805ad64(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     8050798 <__sprintf_chk@plt+0x7028>
cmpl   $0x3,0x94(%esp)
jne    80506f8 <__sprintf_chk@plt+0x6f88>
testb  $0x4,0x98(%esp)
je     80506f8 <__sprintf_chk@plt+0x6f88>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    80506f8 <__sprintf_chk@plt+0x6f88>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    80506f8 <__sprintf_chk@plt+0x6f88>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     80506f8 <__sprintf_chk@plt+0x6f88>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     80506f8 <__sprintf_chk@plt+0x6f88>
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
cmp    %edi,%ebp
jae    80506be <__sprintf_chk@plt+0x6f4e>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    80506ce <__sprintf_chk@plt+0x6f5e>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    80506de <__sprintf_chk@plt+0x6f6e>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    80506ee <__sprintf_chk@plt+0x6f7e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     8050706 <__sprintf_chk@plt+0x6f96>
cmpb   $0x0,0x5a(%esp)
jne    805072b <__sprintf_chk@plt+0x6fbb>
mov    0x34(%esp),%edx
test   %edx,%edx
je     805072b <__sprintf_chk@plt+0x6fbb>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    8050732 <__sprintf_chk@plt+0x6fc2>
cmpb   $0x0,0x24(%esp)
je     8050748 <__sprintf_chk@plt+0x6fd8>
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
cmp    %edi,%ebp
jae    8050745 <__sprintf_chk@plt+0x6fd5>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    8050756 <__sprintf_chk@plt+0x6fe6>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    8050598 <__sprintf_chk@plt+0x6e28>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     8050da8 <__sprintf_chk@plt+0x7638>
test   %al,%al
jne    80506f8 <__sprintf_chk@plt+0x6f88>
test   %esi,%esi
jne    80506f8 <__sprintf_chk@plt+0x6f88>
cmpl   $0x2,0x94(%esp)
jne    80506f8 <__sprintf_chk@plt+0x6f88>
nop
cmpb   $0x0,0x2f(%esp)
je     80506f8 <__sprintf_chk@plt+0x6f88>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   80504e0 <__sprintf_chk@plt+0x6d70>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    8050ed2 <__sprintf_chk@plt+0x7762>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     8050e1b <__sprintf_chk@plt+0x76ab>
cmpb   $0x0,0x58(%esp)
je     80506f8 <__sprintf_chk@plt+0x6f88>
mov    %eax,%ebx
jmp    8050732 <__sprintf_chk@plt+0x6fc2>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    8050823 <__sprintf_chk@plt+0x70b3>
nop
mov    $0x66,%eax
jmp    8050823 <__sprintf_chk@plt+0x70b3>
nop
mov    $0x76,%eax
jmp    8050823 <__sprintf_chk@plt+0x70b3>
nop
mov    $0x6e,%eax
jmp    8050815 <__sprintf_chk@plt+0x70a5>
nop
mov    $0x74,%eax
jmp    8050815 <__sprintf_chk@plt+0x70a5>
nop
cmpb   $0x0,0x58(%esp)
je     8050d90 <__sprintf_chk@plt+0x7620>
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
cmp    %edi,%ebp
jae    8050882 <__sprintf_chk@plt+0x7112>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    80508c8 <__sprintf_chk@plt+0x7158>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     80508c8 <__sprintf_chk@plt+0x7158>
cmp    %eax,%edi
ja     8050e30 <__sprintf_chk@plt+0x76c0>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    80508be <__sprintf_chk@plt+0x714e>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    8050706 <__sprintf_chk@plt+0x6f96>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    8050823 <__sprintf_chk@plt+0x70b3>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     80508fe <__sprintf_chk@plt+0x718e>
cmpb   $0x0,0x2f(%esp)
je     80508fe <__sprintf_chk@plt+0x718e>
test   %dl,%dl
jne    8050748 <__sprintf_chk@plt+0x6fd8>
mov    %ebx,%eax
jmp    8050815 <__sprintf_chk@plt+0x70a5>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    80506f8 <__sprintf_chk@plt+0x6f88>
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
cmp    %edi,%ebp
jae    805092d <__sprintf_chk@plt+0x71bd>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    805093d <__sprintf_chk@plt+0x71cd>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    805094d <__sprintf_chk@plt+0x71dd>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    80506f8 <__sprintf_chk@plt+0x6f88>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    8050c50 <__sprintf_chk@plt+0x74e0>
call   8049740 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     80506f8 <__sprintf_chk@plt+0x6f88>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    8050a04 <__sprintf_chk@plt+0x7294>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
cmp    %edi,%ebp
jae    80509b3 <__sprintf_chk@plt+0x7243>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    80509c6 <__sprintf_chk@plt+0x7256>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    80509dc <__sprintf_chk@plt+0x726c>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    805074b <__sprintf_chk@plt+0x6fdb>
cmp    %edi,%ebp
jae    80509f9 <__sprintf_chk@plt+0x7289>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    80509a0 <__sprintf_chk@plt+0x7230>
cmpb   $0x0,0x24(%esp)
je     80509e5 <__sprintf_chk@plt+0x7275>
cmp    %edi,%ebp
jae    8050a17 <__sprintf_chk@plt+0x72a7>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    80509e5 <__sprintf_chk@plt+0x7275>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    8050ed7 <__sprintf_chk@plt+0x7767>
test   %edi,%edi
je     8050ddd <__sprintf_chk@plt+0x766d>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8059b8a,0x3c(%esp)
movb   $0x22,(%eax)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8059b8a,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    8050578 <__sprintf_chk@plt+0x6e08>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
lea    0x0(%esi,%eiz,1),%esi
je     8050aec <__sprintf_chk@plt+0x737c>
mov    0x94(%esp),%edx
mov    $0x805ad02,%eax
call   80503f0 <__sprintf_chk@plt+0x6c80>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x805b4f7,%eax
call   80503f0 <__sprintf_chk@plt+0x6c80>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    8050b1a <__sprintf_chk@plt+0x73aa>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     8050b1a <__sprintf_chk@plt+0x73aa>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    8050b0f <__sprintf_chk@plt+0x739f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8050b08 <__sprintf_chk@plt+0x7398>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805b4f7,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    8050578 <__sprintf_chk@plt+0x6e08>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    8050ef3 <__sprintf_chk@plt+0x7783>
test   %edi,%edi
je     8050dfc <__sprintf_chk@plt+0x768c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805b4f7,0x3c(%esp)
movb   $0x27,(%eax)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    8050630 <__sprintf_chk@plt+0x6ec0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    80505b8 <__sprintf_chk@plt+0x6e48>
test   %ebp,%ebp
jne    8050bec <__sprintf_chk@plt+0x747c>
cmpl   $0x2,0x94(%esp)
jne    8050bec <__sprintf_chk@plt+0x747c>
cmpb   $0x0,0x2f(%esp)
jne    80507a8 <__sprintf_chk@plt+0x7038>
cmpb   $0x0,0x2f(%esp)
jne    8050c22 <__sprintf_chk@plt+0x74b2>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     8050c22 <__sprintf_chk@plt+0x74b2>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     8050c22 <__sprintf_chk@plt+0x74b2>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    8050c17 <__sprintf_chk@plt+0x74a7>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8050c10 <__sprintf_chk@plt+0x74a0>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    80507f2 <__sprintf_chk@plt+0x7082>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    80507f2 <__sprintf_chk@plt+0x7082>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    8050630 <__sprintf_chk@plt+0x6ec0>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     8050dbd <__sprintf_chk@plt+0x764d>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8050e3d <__sprintf_chk@plt+0x76cd>
cmp    $0xffffffff,%eax
je     8050e58 <__sprintf_chk@plt+0x76e8>
cmp    $0xfffffffe,%eax
je     8050e73 <__sprintf_chk@plt+0x7703>
cmpb   $0x0,0x2f(%esp)
je     8050d1f <__sprintf_chk@plt+0x75af>
cmpl   $0x2,0x94(%esp)
jne    8050d1f <__sprintf_chk@plt+0x75af>
cmp    $0x1,%eax
je     8050d1f <__sprintf_chk@plt+0x75af>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     8050d18 <__sprintf_chk@plt+0x75a8>
movzbl %al,%eax
jmp    *0x805af60(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    8050d00 <__sprintf_chk@plt+0x7590>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80492f0 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8050c91 <__sprintf_chk@plt+0x7521>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    8050983 <__sprintf_chk@plt+0x7213>
and    0x58(%esp),%dl
jmp    805098d <__sprintf_chk@plt+0x721d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    80507a8 <__sprintf_chk@plt+0x7038>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     80506f8 <__sprintf_chk@plt+0x6f88>
add    $0x1,%esi
jmp    8050598 <__sprintf_chk@plt+0x6e28>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    8050779 <__sprintf_chk@plt+0x7009>
call   80496d0 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    8050c6e <__sprintf_chk@plt+0x74fe>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8059b8a,0x3c(%esp)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805b4f7,0x3c(%esp)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
cmpb   $0x0,0x2f(%esp)
je     8050823 <__sprintf_chk@plt+0x70b3>
jmp    80507a8 <__sprintf_chk@plt+0x7038>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    80508ae <__sprintf_chk@plt+0x713e>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8050d65 <__sprintf_chk@plt+0x75f5>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8050d65 <__sprintf_chk@plt+0x75f5>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    8050ec8 <__sprintf_chk@plt+0x7758>
cmpb   $0x0,(%eax)
je     8050ec8 <__sprintf_chk@plt+0x7758>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    8050eb6 <__sprintf_chk@plt+0x7746>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     8050ec0 <__sprintf_chk@plt+0x7750>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     8050eb0 <__sprintf_chk@plt+0x7740>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    8050d65 <__sprintf_chk@plt+0x75f5>
call   80492b0 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8059b8a,0x3c(%esp)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805b4f7,0x3c(%esp)
jmp    8050578 <__sprintf_chk@plt+0x6e08>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049570 <__errno_location@plt>
test   %edi,%edi
mov    0x805f330,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     805109c <__sprintf_chk@plt+0x792c>
cmp    0x805f33c,%edi
jb     8050fa8 <__sprintf_chk@plt+0x7838>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     80510a1 <__sprintf_chk@plt+0x7931>
cmp    $0x805f334,%esi
lea    0x0(,%ebp,8),%eax
je     8051070 <__sprintf_chk@plt+0x7900>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    %eax,%esi
mov    %eax,0x805f330
mov    0x805f33c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049530 <memset@plt>
mov    %ebp,0x805f33c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   80504e0 <__sprintf_chk@plt+0x6d70>
cmp    %eax,%ebp
ja     8051057 <__sprintf_chk@plt+0x78e7>
lea    0x1(%eax),%ebp
cmp    $0x805f480,%esi
mov    %ebp,(%edi)
je     8051012 <__sprintf_chk@plt+0x78a2>
mov    %esi,(%esp)
call   8049200 <free@plt>
mov    %ebp,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   80504e0 <__sprintf_chk@plt+0x6d70>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8052820 <__sprintf_chk@plt+0x90b0>
mov    0x805f338,%edx
mov    %eax,%esi
mov    %eax,0x805f330
mov    0x805f334,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8050f7f <__sprintf_chk@plt+0x780f>
call   80496d0 <abort@plt>
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049570 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x805f580,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   80529c0 <__sprintf_chk@plt+0x9250>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x805f580,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    8051110 <__sprintf_chk@plt+0x79a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x805f580,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x805f580,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x805f580,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x805f580,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     80511c3 <__sprintf_chk@plt+0x7a53>
test   %ecx,%ecx
je     80511c3 <__sprintf_chk@plt+0x7a53>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   80496d0 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x805f580,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049570 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   80504e0 <__sprintf_chk@plt+0x6d70>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x805f580,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049570 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   80504e0 <__sprintf_chk@plt+0x6d70>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   80504e0 <__sprintf_chk@plt+0x6d70>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     80512f8 <__sprintf_chk@plt+0x7b88>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051230 <__sprintf_chk@plt+0x7ac0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805f33c,%edi
mov    0x805f330,%esi
cmp    $0x1,%edi
jbe    8051373 <__sprintf_chk@plt+0x7c03>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049200 <free@plt>
cmp    %edi,%ebx
jne    8051360 <__sprintf_chk@plt+0x7bf0>
mov    0x4(%esi),%eax
cmp    $0x805f480,%eax
je     8051399 <__sprintf_chk@plt+0x7c29>
mov    %eax,(%esp)
call   8049200 <free@plt>
movl   $0x100,0x805f334
00
movl   $0x805f480,0x805f338
08
cmp    $0x805f334,%esi
je     80513b3 <__sprintf_chk@plt+0x7c43>
mov    %esi,(%esp)
call   8049200 <free@plt>
movl   $0x805f334,0x805f330
08
movl   $0x1,0x805f33c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x805f580,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x805f580,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x805f580,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x805f580,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   80503c0 <__sprintf_chk@plt+0x6c50>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8050f10 <__sprintf_chk@plt+0x77a0>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   80503c0 <__sprintf_chk@plt+0x6c50>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8050f10 <__sprintf_chk@plt+0x77a0>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8051450 <__sprintf_chk@plt+0x7ce0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8051480 <__sprintf_chk@plt+0x7d10>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x805f580,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x805f584,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x805f588,%eax
mov    %eax,0x18(%esp)
mov    0x805f58c,%eax
mov    %eax,0x1c(%esp)
mov    0x805f590,%eax
mov    %eax,0x20(%esp)
mov    0x805f594,%eax
mov    %eax,0x24(%esp)
mov    0x805f598,%eax
mov    %eax,0x28(%esp)
mov    0x805f59c,%eax
mov    %eax,0x2c(%esp)
mov    0x805f5a0,%eax
mov    %eax,0x30(%esp)
mov    0x805f5a4,%eax
mov    %eax,0x34(%esp)
mov    0x805f5a8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805f5ac,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   8050f10 <__sprintf_chk@plt+0x77a0>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051510 <__sprintf_chk@plt+0x7da0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8051510 <__sprintf_chk@plt+0x7da0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051510 <__sprintf_chk@plt+0x7da0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x805f580,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x805f584,%eax
mov    %eax,0x14(%esp)
mov    0x805f588,%eax
mov    %eax,0x18(%esp)
mov    0x805f58c,%eax
mov    %eax,0x1c(%esp)
mov    0x805f590,%eax
mov    %eax,0x20(%esp)
mov    0x805f594,%eax
mov    %eax,0x24(%esp)
mov    0x805f598,%eax
mov    %eax,0x28(%esp)
mov    0x805f59c,%eax
mov    %eax,0x2c(%esp)
mov    0x805f5a0,%eax
mov    %eax,0x30(%esp)
mov    0x805f5a4,%eax
mov    %eax,0x34(%esp)
mov    0x805f5a8,%eax
mov    %eax,0x38(%esp)
mov    0x805f5ac,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8051190 <__sprintf_chk@plt+0x7a20>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8050f10 <__sprintf_chk@plt+0x77a0>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8051650 <__sprintf_chk@plt+0x7ee0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8051650 <__sprintf_chk@plt+0x7ee0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8051650 <__sprintf_chk@plt+0x7ee0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x805f300,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x805f300,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x805f300,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x805f300,0x4(%esp)
jmp    8050f10 <__sprintf_chk@plt+0x77a0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   804cdf0 <__sprintf_chk@plt+0x3680>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   804cdf0 <__sprintf_chk@plt+0x3680>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804ce50 <__sprintf_chk@plt+0x36e0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   804ce50 <__sprintf_chk@plt+0x36e0>
cmp    %eax,%ebp
je     8051898 <__sprintf_chk@plt+0x8128>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049270 <memcmp@plt>
test   %eax,%eax
jne    8051884 <__sprintf_chk@plt+0x8114>
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   804cd10 <__sprintf_chk@plt+0x35a0>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   804cd10 <__sprintf_chk@plt+0x35a0>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
je     805190d <__sprintf_chk@plt+0x819d>
call   8049570 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x805b601,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   80496e0 <__xstat64@plt>
test   %eax,%eax
jne    8051968 <__sprintf_chk@plt+0x81f8>
mov    0x68(%esp),%ecx
xor    %edi,%edi
mov    0x6c(%esp),%eax
xor    0xcc(%esp),%eax
xor    0xc8(%esp),%ecx
or     %ecx,%eax
je     8051990 <__sprintf_chk@plt+0x8220>
mov    %ebx,(%esp)
call   8049200 <free@plt>
mov    %esi,(%esp)
call   8049200 <free@plt>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x805b601,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80493b0 <error@plt>
jmp    8051929 <__sprintf_chk@plt+0x81b9>
lea    0x0(%esi),%esi
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
xor    0x74(%esp),%eax
xor    0x70(%esp),%edx
or     %eax,%edx
sete   %al
mov    %eax,%edi
jmp    8051945 <__sprintf_chk@plt+0x81d5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%ebx)
movl   $0x0,0x4(%esp)
movl   $0x805aac0,(%esp)
call   8054390 <__sprintf_chk@plt+0xac20>
test   %eax,%eax
mov    %eax,(%ebx)
js     80519f0 <__sprintf_chk@plt+0x8280>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8054270 <__sprintf_chk@plt+0xab00>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80494a0 <getcwd@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
sete   %al
add    $0x18,%esp
movzbl %al,%eax
neg    %eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
js     8051a38 <__sprintf_chk@plt+0x82c8>
mov    %eax,0x4(%esp)
jmp    8049660 <fchdir@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %eax,0x4(%esp)
jmp    8053520 <__sprintf_chk@plt+0x9db0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
js     8051a66 <__sprintf_chk@plt+0x82f6>
mov    %eax,(%esp)
call   8049710 <close@plt>
mov    0x4(%ebx),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049200 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   8049580 <memchr@plt>
test   %eax,%eax
je     8051ab0 <__sprintf_chk@plt+0x8340>
sub    %ebx,%eax
add    $0x14,%esp
add    $0x1,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049560 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8052075 <__sprintf_chk@plt+0x8905>
call   8049330 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8051da0 <__sprintf_chk@plt+0x8630>
mov    0x84(%esp),%ebx
test   %ebx,%ebx
jne    8051e58 <__sprintf_chk@plt+0x86e8>
mov    0x18(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    %esi,0x34(%esp)
call   80494c0 <strlen@plt>
mov    %esi,%edx
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%esi,%eax,1),%ebp
cmp    %ebp,%esi
mov    %ebp,0x20(%esp)
jb     8051be4 <__sprintf_chk@plt+0x8474>
jmp    8051cc5 <__sprintf_chk@plt+0x8555>
lea    0x0(%esi),%esi
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8051ce8 <__sprintf_chk@plt+0x8578>
movl   $0x1,0x38(%esp)
movsbl (%edx),%eax
mov    $0x1,%esi
mov    0x20(%esp),%ebp
mov    0x34(%esp),%edi
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
test   %ebx,%ebx
movb   $0x1,0x30(%esp)
je     8051c85 <__sprintf_chk@plt+0x8515>
cmp    $0x1,%ebx
je     8051d08 <__sprintf_chk@plt+0x8598>
cmp    $0x2,%ebx
jne    8051d40 <__sprintf_chk@plt+0x85d0>
cmpb   $0x0,0x3c(%esp)
je     8051d40 <__sprintf_chk@plt+0x85d0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049420 <iswspace@plt>
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebx
lea    0x0(%esi,%eiz,1),%esi
lea    (%edi,%esi,1),%edx
cmp    %ebp,%edx
mov    %edx,0x34(%esp)
movb   $0x0,0x30(%esp)
jae    8051cbc <__sprintf_chk@plt+0x854c>
cmpb   $0x0,0x24(%esp)
lea    0x28(%esp),%edi
je     8051b50 <__sprintf_chk@plt+0x83e0>
mov    0x34(%esp),%eax
mov    %edi,0xc(%esp)
sub    %eax,%ebp
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8051d50 <__sprintf_chk@plt+0x85e0>
cmp    $0xfffffffe,%eax
je     8051d80 <__sprintf_chk@plt+0x8610>
test   %eax,%eax
jne    8051d70 <__sprintf_chk@plt+0x8600>
mov    0x34(%esp),%ecx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ecx)
jne    805207a <__sprintf_chk@plt+0x890a>
mov    0x40(%esp),%edx
test   %edx,%edx
jne    8052051 <__sprintf_chk@plt+0x88e1>
mov    %edi,(%esp)
mov    %ecx,0x14(%esp)
movb   $0x1,0x3c(%esp)
call   8049230 <mbsinit@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     8051c6e <__sprintf_chk@plt+0x84fe>
movb   $0x0,0x24(%esp)
test   %ebx,%ebx
mov    0x20(%esp),%ebp
mov    %ecx,%edi
mov    0x38(%esp),%esi
movb   $0x1,0x30(%esp)
jne    8051b99 <__sprintf_chk@plt+0x8429>
cmpb   $0x0,0x3c(%esp)
mov    $0x1,%ebx
je     8051bd0 <__sprintf_chk@plt+0x8460>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049420 <iswspace@plt>
lea    (%edi,%esi,1),%edx
mov    %edx,0x34(%esp)
movb   $0x0,0x30(%esp)
test   %eax,%eax
sete   %bl
cmp    %ebp,%edx
jb     8051be4 <__sprintf_chk@plt+0x8474>
cmp    $0x2,%ebx
je     805200d <__sprintf_chk@plt+0x889d>
mov    0x5c(%esp),%esi
xor    %gs:0x14,%esi
mov    0x18(%esp),%eax
jne    805204c <__sprintf_chk@plt+0x88dc>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x28(%esp),%edi
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8052028 <__sprintf_chk@plt+0x88b8>
movb   $0x1,0x24(%esp)
jmp    8051bf3 <__sprintf_chk@plt+0x8483>
xchg   %ax,%ax
cmpb   $0x0,0x3c(%esp)
je     8051bd0 <__sprintf_chk@plt+0x8460>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049420 <iswspace@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    $0x2,%eax
cmovne %edi,%ecx
cmovne %eax,%ebx
mov    %ecx,0x1c(%esp)
jmp    8051bd0 <__sprintf_chk@plt+0x8460>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8051bd0 <__sprintf_chk@plt+0x8460>
lea    0x0(%esi),%esi
movl   $0x1,0x38(%esp)
mov    0x20(%esp),%ebp
mov    $0x1,%esi
movb   $0x0,0x3c(%esp)
mov    0x34(%esp),%edi
jmp    8051b8c <__sprintf_chk@plt+0x841c>
nop
mov    0x34(%esp),%ecx
jmp    8051c50 <__sprintf_chk@plt+0x84e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ebp
mov    0x34(%esp),%edi
movb   $0x0,0x3c(%esp)
mov    %ebp,%edx
sub    %edi,%edx
mov    %edx,0x38(%esp)
mov    %edx,%esi
jmp    8051b8c <__sprintf_chk@plt+0x841c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
je     8051e11 <__sprintf_chk@plt+0x86a1>
mov    0x18(%esp),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
mov    %edx,0x14(%esp)
je     8052019 <__sprintf_chk@plt+0x88a9>
call   8049740 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    (%eax),%eax
jmp    8051dda <__sprintf_chk@plt+0x866a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     8051de4 <__sprintf_chk@plt+0x8674>
movzbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8051dd0 <__sprintf_chk@plt+0x8660>
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80491f0 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8051cc5 <__sprintf_chk@plt+0x8555>
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   80494c0 <strlen@plt>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
ja     8051cc5 <__sprintf_chk@plt+0x8555>
call   8049740 <__ctype_b_loc@plt>
mov    0x18(%esp),%esi
jmp    8051e46 <__sprintf_chk@plt+0x86d6>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%ebx)
sub    $0x1,%ebx
cmp    %ebx,%esi
ja     8051cc5 <__sprintf_chk@plt+0x8555>
movzbl (%ebx),%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
jne    8051e38 <__sprintf_chk@plt+0x86c8>
jmp    8051cc5 <__sprintf_chk@plt+0x8555>
nop
mov    0x18(%esp),%ebx
mov    %ebx,(%esp)
mov    %ebx,0x34(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%ebx,%eax,1),%edx
cmp    %edx,%ebx
mov    %edx,0x20(%esp)
jae    8052022 <__sprintf_chk@plt+0x88b2>
lea    0x40(%esp),%ebp
mov    %edx,%esi
lea    0x28(%esp),%edi
jmp    8051f05 <__sprintf_chk@plt+0x8795>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x805b640(,%edx,4),%edx
bt     %eax,%edx
jae    8051f80 <__sprintf_chk@plt+0x8810>
movl   $0x1,0x38(%esp)
movsbl (%ebx),%eax
mov    0x34(%esp),%ebx
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x1,0x30(%esp)
mov    %eax,(%esp)
call   8049420 <iswspace@plt>
test   %eax,%eax
je     8051fb6 <__sprintf_chk@plt+0x8846>
mov    0x20(%esp),%esi
add    0x38(%esp),%ebx
movb   $0x0,0x30(%esp)
cmp    %ebx,%esi
mov    %ebx,0x34(%esp)
jbe    8051fb6 <__sprintf_chk@plt+0x8846>
cmpb   $0x0,0x24(%esp)
je     8051ea0 <__sprintf_chk@plt+0x8730>
mov    0x34(%esp),%eax
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
sub    %eax,%esi
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8051fa0 <__sprintf_chk@plt+0x8830>
cmp    $0xfffffffe,%eax
je     8051ff8 <__sprintf_chk@plt+0x8888>
test   %eax,%eax
jne    8051fe8 <__sprintf_chk@plt+0x8878>
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ebx)
jne    805207a <__sprintf_chk@plt+0x890a>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    8052051 <__sprintf_chk@plt+0x88e1>
mov    %edi,(%esp)
movb   $0x1,0x3c(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8051ed3 <__sprintf_chk@plt+0x8763>
movb   $0x0,0x24(%esp)
jmp    8051ed3 <__sprintf_chk@plt+0x8763>
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8052028 <__sprintf_chk@plt+0x88b8>
movb   $0x1,0x24(%esp)
jmp    8051f0c <__sprintf_chk@plt+0x879c>
lea    0x0(%esi),%esi
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80491f0 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8051cc5 <__sprintf_chk@plt+0x8555>
jmp    8051b0b <__sprintf_chk@plt+0x839b>
mov    0x34(%esp),%ebx
jmp    8051f61 <__sprintf_chk@plt+0x87f1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
mov    0x20(%esp),%eax
movb   $0x0,0x3c(%esp)
sub    %ebx,%eax
mov    %eax,0x38(%esp)
jmp    8051fb1 <__sprintf_chk@plt+0x8841>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
jmp    8051cc5 <__sprintf_chk@plt+0x8555>
mov    0x18(%esp),%ebx
jmp    8051de4 <__sprintf_chk@plt+0x8674>
mov    0x18(%esp),%ebx
jmp    8051fb6 <__sprintf_chk@plt+0x8846>
movl   $0x805b051,0xc(%esp)
movl   $0x8b,0x8(%esp)
movl   $0x805b044,0x4(%esp)
movl   $0x805ac92,(%esp)
call   8049730 <__assert_fail@plt>
call   80492b0 <__stack_chk_fail@plt>
movl   $0x805b051,0xc(%esp)
movl   $0xa7,0x8(%esp)
movl   $0x805b044,0x4(%esp)
movl   $0x805acc0,(%esp)
call   8049730 <__assert_fail@plt>
call   8052a20 <__sprintf_chk@plt+0x92b0>
movl   $0x805b051,0xc(%esp)
movl   $0xa6,0x8(%esp)
movl   $0x805b044,0x4(%esp)
movl   $0x805aca9,(%esp)
call   8049730 <__assert_fail@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     8052558 <__sprintf_chk@plt+0x8de8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x805b063,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80496a0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805b076,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x805b300,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80496a0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805b0d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8052580 <__sprintf_chk@plt+0x8e10>
jmp    *0x805b2d8(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b238,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049290 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   80496a0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b268,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049290 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80496a0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   80496d0 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b07a,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80496a0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b08a,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80496a0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b0a1,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80496a0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b1a0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049290 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   80496a0 <__fprintf_chk@plt>
jmp    80521ff <__sprintf_chk@plt+0x8a8f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b1c0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049290 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80496a0 <__fprintf_chk@plt>
jmp    80521ff <__sprintf_chk@plt+0x8a8f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b1e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049290 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80496a0 <__fprintf_chk@plt>
jmp    80521ff <__sprintf_chk@plt+0x8a8f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b20c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049290 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80496a0 <__fprintf_chk@plt>
jmp    80521ff <__sprintf_chk@plt+0x8a8f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x805b06f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80496a0 <__fprintf_chk@plt>
jmp    80520f1 <__sprintf_chk@plt+0x8981>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x805b29c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049290 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    805228a <__sprintf_chk@plt+0x8b1a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     805262a <__sprintf_chk@plt+0x8eba>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    8052620 <__sprintf_chk@plt+0x8eb0>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80520a0 <__sprintf_chk@plt+0x8930>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     8052682 <__sprintf_chk@plt+0x8f12>
add    $0x1,%eax
cmp    $0xa,%eax
jne    8052670 <__sprintf_chk@plt+0x8f00>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80520a0 <__sprintf_chk@plt+0x8930>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052660 <__sprintf_chk@plt+0x8ef0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x805b0bd,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x8059bf8,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059c0e,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
movl   $0x805a81c,0xc(%esp)
movl   $0x8059c22,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <__printf_chk@plt>
mov    0x805f3c0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x805a844,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
je     80527c9 <__sprintf_chk@plt+0x9059>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     80527c4 <__sprintf_chk@plt+0x9054>
lea    0x0(%esi),%esi
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8052809 <__sprintf_chk@plt+0x9099>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80527b0 <__sprintf_chk@plt+0x9040>
call   8052a20 <__sprintf_chk@plt+0x92b0>
xchg   %ax,%ax
jmp    80527b0 <__sprintf_chk@plt+0x9040>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     8052848 <__sprintf_chk@plt+0x90d8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
test   %eax,%eax
je     805285b <__sprintf_chk@plt+0x90eb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     8052830 <__sprintf_chk@plt+0x90c0>
mov    %eax,(%esp)
call   8049200 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     8052840 <__sprintf_chk@plt+0x90d0>
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     80528a3 <__sprintf_chk@plt+0x9133>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    8052820 <__sprintf_chk@plt+0x90b0>
call   8052a20 <__sprintf_chk@plt+0x92b0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     80528f0 <__sprintf_chk@plt+0x9180>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8052908 <__sprintf_chk@plt+0x9198>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    8052820 <__sprintf_chk@plt+0x90b0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    80528d9 <__sprintf_chk@plt+0x9169>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    80528d9 <__sprintf_chk@plt+0x9169>
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     8052948 <__sprintf_chk@plt+0x91d8>
cmp    $0xaaaaaaa9,%eax
ja     8052954 <__sprintf_chk@plt+0x91e4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8052820 <__sprintf_chk@plt+0x90b0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    8052930 <__sprintf_chk@plt+0x91c0>
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049530 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049760 <calloc@plt>
test   %eax,%eax
je     80529af <__sprintf_chk@plt+0x923f>
add    $0x1c,%esp
ret
nop
call   8052a20 <__sprintf_chk@plt+0x92b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049220 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   80529c0 <__sprintf_chk@plt+0x9250>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x805b32f,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    0x805f2f8,%edx
movl   $0x805b601,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   80493b0 <error@plt>
call   80496d0 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80494a0 <getcwd@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8052a98 <__sprintf_chk@plt+0x9328>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8052a8e <__sprintf_chk@plt+0x931e>
call   8052a20 <__sprintf_chk@plt+0x92b0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8056310 <__sprintf_chk@plt+0xcba0>
test   %eax,%eax
mov    %eax,%ebx
js     8052af0 <__sprintf_chk@plt+0x9380>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8052ae6 <__sprintf_chk@plt+0x9376>
call   8052a20 <__sprintf_chk@plt+0x92b0>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8056600 <__sprintf_chk@plt+0xce90>
test   %eax,%eax
mov    %eax,%ebx
je     8052b28 <__sprintf_chk@plt+0x93b8>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8052b1e <__sprintf_chk@plt+0x93ae>
call   8052a20 <__sprintf_chk@plt+0x92b0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80567f0 <__sprintf_chk@plt+0xd080>
test   %eax,%eax
mov    %eax,%ebx
je     8052b70 <__sprintf_chk@plt+0x9400>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8052b66 <__sprintf_chk@plt+0x93f6>
call   8052a20 <__sprintf_chk@plt+0x92b0>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x805f2f8,%esi
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    0x48(%esp),%edi
cmp    $0x3,%eax
ja     8052c07 <__sprintf_chk@plt+0x9497>
cmp    $0x2,%eax
jae    8052c00 <__sprintf_chk@plt+0x9490>
sub    $0x1,%eax
mov    $0x805b35b,%ecx
jne    8052bfb <__sprintf_chk@plt+0x948b>
test   %edx,%edx
js     8052c13 <__sprintf_chk@plt+0x94a3>
mov    0x4c(%esp),%eax
shl    $0x4,%edx
mov    $0x805b378,%ebx
mov    (%eax,%edx,1),%edi
movl   $0x5,0x8(%esp)
mov    %ecx,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    0x50(%esp),%edx
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80493b0 <error@plt>
call   80496d0 <abort@plt>
mov    $0x805b37c,%ecx
jmp    8052bac <__sprintf_chk@plt+0x943c>
cmp    $0x4,%eax
mov    $0x805b340,%ecx
je     8052bac <__sprintf_chk@plt+0x943c>
jmp    8052bfb <__sprintf_chk@plt+0x948b>
mov    %edi,%eax
mov    $0x805b378,%ebx
sub    %edx,%ebx
mov    %al,0x2e(%esp)
lea    0x2e(%esp),%edi
movb   $0x0,0x2f(%esp)
jmp    8052bbf <__sprintf_chk@plt+0x944f>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebx
cmp    $0x24,%esi
ja     805343f <__sprintf_chk@plt+0x9ccf>
movzbl (%edi),%edx
lea    0x4c(%esp),%eax
test   %ebx,%ebx
cmove  %eax,%ebx
mov    %edx,0x18(%esp)
call   8049740 <__ctype_b_loc@plt>
mov    0x18(%esp),%edx
mov    (%eax),%ebp
mov    %edi,%eax
jmp    8052c76 <__sprintf_chk@plt+0x9506>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
movzbl %dl,%ecx
testb  $0x20,0x1(%ebp,%ecx,2)
jne    8052c70 <__sprintf_chk@plt+0x9500>
cmp    $0x2d,%dl
jne    8052c98 <__sprintf_chk@plt+0x9528>
mov    $0x4,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049240 <__strtoull_internal@plt>
mov    (%ebx),%esi
cmp    %edi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8052d99 <__sprintf_chk@plt+0x9629>
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    8052d08 <__sprintf_chk@plt+0x9598>
xor    %edi,%edi
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     8052cea <__sprintf_chk@plt+0x957a>
movzbl (%esi),%edx
test   %dl,%dl
jne    8052d18 <__sprintf_chk@plt+0x95a8>
mov    0x7c(%esp),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    %edi,%eax
mov    %edx,0x4(%esi)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x22,%eax
mov    $0x1,%edi
jne    8052c85 <__sprintf_chk@plt+0x9515>
jmp    8052cd8 <__sprintf_chk@plt+0x9568>
movsbl %dl,%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8049480 <strchr@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8052df0 <__sprintf_chk@plt+0x9680>
mov    0x80(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8049480 <strchr@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8052d7d <__sprintf_chk@plt+0x960d>
movzbl 0x1(%esi),%eax
cmp    $0x44,%al
je     80533bb <__sprintf_chk@plt+0x9c4b>
cmp    $0x69,%al
je     80533a2 <__sprintf_chk@plt+0x9c32>
cmp    $0x42,%al
je     80533bb <__sprintf_chk@plt+0x9c4b>
mov    $0x1,%ebp
mov    $0x400,%eax
sub    $0x42,%edx
cmp    $0x35,%dl
ja     8052df0 <__sprintf_chk@plt+0x9680>
movzbl %dl,%edx
jmp    *0x805b3d8(,%edx,4)
mov    0x80(%esp),%eax
test   %eax,%eax
je     8052c85 <__sprintf_chk@plt+0x9515>
movzbl (%edi),%edx
test   %dl,%dl
je     8052c85 <__sprintf_chk@plt+0x9515>
movsbl %dl,%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8049480 <strchr@plt>
mov    0x20(%esp),%edx
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %eax,%eax
jne    8052d3e <__sprintf_chk@plt+0x95ce>
jmp    8052c85 <__sprintf_chk@plt+0x9515>
mov    0x7c(%esp),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%esi)
mov    %edi,%eax
mov    %edx,0x4(%esi)
or     $0x2,%eax
jmp    8052c8a <__sprintf_chk@plt+0x951a>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
cmp    %edx,0x1c(%esp)
mov    %eax,%ecx
mov    %edx,0x30(%esp)
ja     8053425 <__sprintf_chk@plt+0x9cb5>
jb     8052e4c <__sprintf_chk@plt+0x96dc>
cmp    %ecx,0x18(%esp)
ja     8053425 <__sprintf_chk@plt+0x9cb5>
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
imul   0x18(%esp),%edx
imul   0x20(%esp),%eax
add    %edx,%eax
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mull   0x20(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jb     8053425 <__sprintf_chk@plt+0x9cb5>
ja     8052e96 <__sprintf_chk@plt+0x9726>
cmp    0x18(%esp),%ecx
jb     8053425 <__sprintf_chk@plt+0x9cb5>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%ecx
mov    0x24(%esp),%edx
imul   %eax,%ecx
mov    0x18(%esp),%eax
imul   %edx,%eax
add    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
or     %eax,%edi
add    %ebp,%esi
mov    %edi,%eax
or     $0x2,%eax
mov    %esi,(%ebx)
cmpb   $0x0,(%esi)
cmovne %eax,%edi
jmp    8052cea <__sprintf_chk@plt+0x957a>
cmpl   $0x7fffffff,0x1c(%esp)
ja     80533d7 <__sprintf_chk@plt+0x9c67>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
cmpl   $0x7fffff,0x1c(%esp)
ja     80533d7 <__sprintf_chk@plt+0x9c67>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    $0x7,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    8052fb8 <__sprintf_chk@plt+0x9848>
ja     8052f75 <__sprintf_chk@plt+0x9805>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8052fc2 <__sprintf_chk@plt+0x9852>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     80533ca <__sprintf_chk@plt+0x9c5a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    8052f69 <__sprintf_chk@plt+0x97f9>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8052fab <__sprintf_chk@plt+0x983b>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    $0x8,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    8053066 <__sprintf_chk@plt+0x98f6>
ja     8053023 <__sprintf_chk@plt+0x98b3>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8053070 <__sprintf_chk@plt+0x9900>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     80533ca <__sprintf_chk@plt+0x9c5a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    8053017 <__sprintf_chk@plt+0x98a7>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8053059 <__sprintf_chk@plt+0x98e9>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    $0x4,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80533f1 <__sprintf_chk@plt+0x9c81>
ja     80530e1 <__sprintf_chk@plt+0x9971>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     80533f1 <__sprintf_chk@plt+0x9c81>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
jne    80530c3 <__sprintf_chk@plt+0x9953>
mov    0x2c(%esp),%eax
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    $0x5,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
jmp    80531ba <__sprintf_chk@plt+0x9a4a>
ja     8053175 <__sprintf_chk@plt+0x9a05>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     80531c4 <__sprintf_chk@plt+0x9a54>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
je     8053122 <__sprintf_chk@plt+0x99b2>
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jae    8053169 <__sprintf_chk@plt+0x99f9>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    80531ab <__sprintf_chk@plt+0x9a3b>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
cmp    %edx,0x1c(%esp)
ja     80533d7 <__sprintf_chk@plt+0x9c67>
jb     8053216 <__sprintf_chk@plt+0x9aa6>
cmp    %eax,0x18(%esp)
ja     80533d7 <__sprintf_chk@plt+0x9c67>
mov    0x1c(%esp),%edx
mov    0x24(%esp),%eax
imul   0x20(%esp),%edx
imul   0x18(%esp),%eax
lea    (%eax,%edx,1),%ecx
jmp    8052eae <__sprintf_chk@plt+0x973e>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    $0x3,%ecx
mov    %ecx,0x3c(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
mov    %edx,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805340b <__sprintf_chk@plt+0x9c9b>
ja     805328a <__sprintf_chk@plt+0x9b1a>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
jb     805340b <__sprintf_chk@plt+0x9c9b>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ecx
mov    0x18(%esp),%eax
imul   %edx,%ecx
mov    %ecx,0x30(%esp)
mov    0x24(%esp),%ecx
imul   0x18(%esp),%ecx
mov    %ecx,%edx
mov    0x30(%esp),%ecx
add    %edx,%ecx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
subl   $0x1,0x3c(%esp)
jne    805326c <__sprintf_chk@plt+0x9afc>
jmp    8053122 <__sprintf_chk@plt+0x99b2>
cltd
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
call   80597f0 <__sprintf_chk@plt+0x10080>
mov    $0x6,%ecx
mov    %ebx,0x74(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
mov    %edx,0x30(%esp)
mov    %eax,0x2c(%esp)
jmp    8053359 <__sprintf_chk@plt+0x9be9>
ja     805331a <__sprintf_chk@plt+0x9baa>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8053363 <__sprintf_chk@plt+0x9bf3>
mov    0x1c(%esp),%edx
mov    0x20(%esp),%ebx
mov    0x18(%esp),%eax
imul   %edx,%ebx
mov    %ebx,0x34(%esp)
mov    0x24(%esp),%ebx
imul   0x18(%esp),%ebx
mov    %ebx,%edx
mov    0x34(%esp),%ebx
add    %edx,%ebx
mull   0x20(%esp)
mov    %edx,0x1c(%esp)
xor    %edx,%edx
add    %ebx,0x1c(%esp)
mov    %eax,0x18(%esp)
or     %edx,0x2c(%esp)
sub    $0x1,%ecx
je     80533ca <__sprintf_chk@plt+0x9c5a>
mov    0x1c(%esp),%eax
cmp    %eax,0x30(%esp)
jae    805330e <__sprintf_chk@plt+0x9b9e>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8053350 <__sprintf_chk@plt+0x9be0>
cmpl   $0x3fffff,0x1c(%esp)
ja     80533d7 <__sprintf_chk@plt+0x9c67>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0xa,%eax,%edx
shl    $0xa,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
xor    %eax,%eax
cmpb   $0x42,0x2(%esi)
sete   %al
mov    %eax,%ebp
mov    $0x400,%eax
lea    0x1(%ebp,%ebp,1),%ebp
jmp    8052d87 <__sprintf_chk@plt+0x9617>
mov    $0x2,%ebp
mov    $0x3e8,%eax
jmp    8052d87 <__sprintf_chk@plt+0x9617>
mov    0x2c(%esp),%eax
mov    0x74(%esp),%ebx
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0xffffffff,0x1c(%esp)
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    8053117 <__sprintf_chk@plt+0x99a7>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%edx
movl   $0xffffffff,0x1c(%esp)
jmp    80532c0 <__sprintf_chk@plt+0x9b50>
mov    $0x1,%eax
movl   $0xffffffff,0x18(%esp)
movl   $0xffffffff,0x1c(%esp)
jmp    8052ec4 <__sprintf_chk@plt+0x9754>
movl   $0x805b4b0,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x805b3a1,0x4(%esp)
movl   $0x805b3b0,(%esp)
call   8049730 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8053d30 <__sprintf_chk@plt+0xa5c0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%eax),%eax
test   %eax,%eax
js     80534b8 <__sprintf_chk@plt+0x9d48>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   8049710 <close@plt>
test   %eax,%eax
jne    80534ba <__sprintf_chk@plt+0x9d4a>
add    $0x1c,%esp
repz ret
movl   $0x805b51b,0xc(%esp)
movl   $0x3f,0x8(%esp)
movl   $0x805b4bb,0x4(%esp)
movl   $0x805b4cc,(%esp)
call   8049730 <__assert_fail@plt>
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x10900,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   80494f0 <openat64@plt>
test   %eax,%eax
mov    %eax,%esi
js     8053518 <__sprintf_chk@plt+0x9da8>
mov    %ebx,%eax
call   80534a0 <__sprintf_chk@plt+0x9d30>
xor    %eax,%eax
mov    %esi,(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    805350e <__sprintf_chk@plt+0x9d9e>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
mov    %edi,(%esp)
call   8049280 <chdir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80535e8 <__sprintf_chk@plt+0x9e78>
call   8049570 <__errno_location@plt>
cmpl   $0x24,(%eax)
mov    %eax,0x18(%esp)
je     8053555 <__sprintf_chk@plt+0x9de5>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   80494c0 <strlen@plt>
movl   $0xffffff9c,0x2c(%esp)
test   %eax,%eax
lea    (%edi,%eax,1),%esi
je     8053732 <__sprintf_chk@plt+0x9fc2>
cmp    $0xfff,%eax
jbe    8053756 <__sprintf_chk@plt+0x9fe6>
xor    %edx,%edx
mov    %edi,%ebx
cmpb   $0x2f,(%edi)
lea    0x1(%edi),%eax
jne    8053651 <__sprintf_chk@plt+0x9ee1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
add    $0x1,%edx
cmpb   $0x2f,-0x1(%eax)
je     8053590 <__sprintf_chk@plt+0x9e20>
cmp    $0x2,%edx
je     80535f4 <__sprintf_chk@plt+0x9e84>
lea    0x2c(%esp),%ebp
mov    $0x805ac7e,%edx
mov    %ebp,%eax
call   80534e0 <__sprintf_chk@plt+0x9d70>
test   %eax,%eax
jne    80536e2 <__sprintf_chk@plt+0x9f72>
cmpb   $0x2f,(%ebx)
jne    8053651 <__sprintf_chk@plt+0x9ee1>
movl   $0x805b524,0xc(%esp)
movl   $0xa1,0x8(%esp)
movl   $0x805b4bb,0x4(%esp)
movl   $0x805b4ed,(%esp)
call   8049730 <__assert_fail@plt>
add    $0x3c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x3(%edi),%eax
mov    %esi,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049580 <memchr@plt>
test   %eax,%eax
je     8053700 <__sprintf_chk@plt+0x9f90>
lea    0x2c(%esp),%ebp
mov    %edi,%edx
movb   $0x0,(%eax)
mov    %eax,0x1c(%esp)
mov    %ebp,%eax
call   80534e0 <__sprintf_chk@plt+0x9d70>
mov    0x1c(%esp),%ecx
movb   $0x2f,(%ecx)
test   %eax,%eax
jne    80536e2 <__sprintf_chk@plt+0x9f72>
cmpb   $0x2f,0x1(%ecx)
lea    0x1(%ecx),%ebx
jne    8053651 <__sprintf_chk@plt+0x9ee1>
lea    0x2(%ecx),%eax
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     8053646 <__sprintf_chk@plt+0x9ed6>
cmp    %ebx,%esi
jb     805379e <__sprintf_chk@plt+0xa02e>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
sub    %ebx,%eax
cmp    $0xfff,%eax
jle    80536cd <__sprintf_chk@plt+0x9f5d>
movl   $0x1000,0x8(%esp)
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049490 <memrchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     8053700 <__sprintf_chk@plt+0x9f90>
movb   $0x0,(%eax)
sub    %ebx,%eax
cmp    $0xfff,%eax
jg     805377a <__sprintf_chk@plt+0xa00a>
lea    0x2c(%esp),%ebp
mov    %ebx,%edx
mov    %ebp,%eax
call   80534e0 <__sprintf_chk@plt+0x9d70>
movb   $0x2f,(%edi)
test   %eax,%eax
jne    80536e2 <__sprintf_chk@plt+0x9f72>
cmpb   $0x2f,0x1(%edi)
lea    0x1(%edi),%ebx
jne    8053660 <__sprintf_chk@plt+0x9ef0>
lea    0x2(%edi),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
add    $0x1,%eax
cmpb   $0x2f,-0x1(%eax)
je     80536c0 <__sprintf_chk@plt+0x9f50>
jmp    8053660 <__sprintf_chk@plt+0x9ef0>
cmp    %ebx,%esi
lea    0x2c(%esp),%ebp
jbe    8053714 <__sprintf_chk@plt+0x9fa4>
mov    %ebx,%edx
mov    %ebp,%eax
call   80534e0 <__sprintf_chk@plt+0x9d70>
test   %eax,%eax
je     8053714 <__sprintf_chk@plt+0x9fa4>
mov    0x18(%esp),%esi
mov    %ebp,%eax
mov    (%esi),%ebx
call   80534a0 <__sprintf_chk@plt+0x9d30>
mov    %ebx,(%esi)
add    $0x3c,%esp
mov    $0xffffffff,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    $0xffffffff,%ebx
movl   $0x24,(%eax)
jmp    805354b <__sprintf_chk@plt+0x9ddb>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049660 <fchdir@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    80536e2 <__sprintf_chk@plt+0x9f72>
mov    %ebp,%eax
call   80534a0 <__sprintf_chk@plt+0x9d30>
jmp    805354b <__sprintf_chk@plt+0x9ddb>
movl   $0x805b524,0xc(%esp)
movl   $0x7d,0x8(%esp)
movl   $0x805b4bb,0x4(%esp)
movl   $0x805b4d9,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805b524,0xc(%esp)
movl   $0x7e,0x8(%esp)
movl   $0x805b4bb,0x4(%esp)
movl   $0x805b4e1,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805b524,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x805b4bb,0x4(%esp)
movl   $0x805b508,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805b524,0xc(%esp)
movl   $0xa2,0x8(%esp)
movl   $0x805b4bb,0x4(%esp)
movl   $0x805b4f9,(%esp)
call   8049730 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x200,%esp
mov    0x805f340,%esi
mov    %gs:0x14,%eax
mov    %eax,0x1fc(%esp)
xor    %eax,%eax
mov    0x210(%esp),%edi
mov    0x218(%esp),%ebx
test   %esi,%esi
js     8053968 <__sprintf_chk@plt+0xa1f8>
lea    0x14(%esp),%eax
test   %esi,%esi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
je     80538b8 <__sprintf_chk@plt+0xa148>
call   8049210 <statvfs64@plt>
test   %eax,%eax
js     8053960 <__sprintf_chk@plt+0xa1f0>
mov    0x18(%esp),%ecx
test   %ecx,%ecx
jne    8053830 <__sprintf_chk@plt+0xa0c0>
mov    0x14(%esp),%ecx
cmp    $0xffffffff,%ecx
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
je     8053843 <__sprintf_chk@plt+0xa0d3>
mov    %ecx,%eax
xor    %edx,%edx
mov    %eax,(%ebx)
mov    0x1c(%esp),%eax
mov    %edx,0x4(%ebx)
mov    0x20(%esp),%edx
mov    0x30(%esp),%ecx
mov    %eax,0x8(%ebx)
mov    0x24(%esp),%eax
mov    %edx,0xc(%ebx)
mov    0x28(%esp),%edx
mov    %ecx,%edi
and    $0x80000000,%edi
mov    %eax,0x10(%ebx)
xor    %eax,%eax
neg    %eax
mov    %edx,0x14(%ebx)
mov    %edi,%edx
adc    $0x0,%edx
xor    %esi,%esi
or     0x2c(%esp),%eax
neg    %edx
mov    %eax,0x18(%ebx)
mov    %edx,%eax
mov    0x38(%esp),%edx
or     %ecx,%eax
mov    %eax,0x1c(%ebx)
mov    0x34(%esp),%eax
shr    $0x1f,%ecx
mov    %cl,0x20(%ebx)
mov    %edx,0x28(%ebx)
mov    0x40(%esp),%edx
mov    %eax,0x24(%ebx)
mov    0x3c(%esp),%eax
mov    %edx,0x30(%ebx)
mov    %eax,0x2c(%ebx)
jmp    8053943 <__sprintf_chk@plt+0xa1d3>
lea    0x0(%esi),%esi
call   80493e0 <statfs64@plt>
test   %eax,%eax
js     8053960 <__sprintf_chk@plt+0xa1f0>
mov    0x50(%esp),%ecx
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
cmp    $0xffffffff,%ecx
je     80538db <__sprintf_chk@plt+0xa16b>
mov    %ecx,%eax
cltd
mov    %eax,(%ebx)
mov    0x1c(%esp),%eax
mov    %edx,0x4(%ebx)
mov    0x20(%esp),%edx
mov    0x30(%esp),%ecx
mov    %eax,0x8(%ebx)
mov    0x24(%esp),%eax
mov    %edx,0xc(%ebx)
mov    0x28(%esp),%edx
mov    %ecx,%edi
and    $0x80000000,%edi
mov    %eax,0x10(%ebx)
xor    %eax,%eax
neg    %eax
mov    %edx,0x14(%ebx)
mov    %edi,%edx
adc    $0x0,%edx
or     0x2c(%esp),%eax
neg    %edx
mov    %eax,0x18(%ebx)
mov    %edx,%eax
mov    0x38(%esp),%edx
or     %ecx,%eax
mov    %eax,0x1c(%ebx)
mov    0x34(%esp),%eax
shr    $0x1f,%ecx
mov    %cl,0x20(%ebx)
mov    %edx,0x28(%ebx)
mov    0x40(%esp),%edx
mov    %eax,0x24(%ebx)
mov    0x3c(%esp),%eax
mov    %edx,0x30(%ebx)
mov    %eax,0x2c(%ebx)
mov    0x1fc(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    80539a3 <__sprintf_chk@plt+0xa233>
add    $0x200,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%esi
jmp    8053943 <__sprintf_chk@plt+0xa1d3>
nop
lea    0x76(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   80492a0 <uname@plt>
test   %eax,%eax
jne    8053998 <__sprintf_chk@plt+0xa228>
lea    0xf8(%esp),%eax
movl   $0x805b52f,0x4(%esp)
mov    %eax,(%esp)
call   8049510 <strverscmp@plt>
mov    %eax,%esi
not    %esi
shr    $0x1f,%esi
mov    %esi,0x805f340
jmp    8053804 <__sprintf_chk@plt+0xa094>
call   80492b0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x805ab39,0x4(%esp)
movl   $0x805b536,(%esp)
call   80493a0 <setmntent@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8053d1e <__sprintf_chk@plt+0xa5ae>
lea    0x2c(%esp),%eax
mov    %eax,0x14(%esp)
nop
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049370 <getmntent@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8053b68 <__sprintf_chk@plt+0xa3f8>
movl   $0x1c,(%esp)
mov    $0x805b540,%edi
call   80527b0 <__sprintf_chk@plt+0x9040>
mov    %eax,%ebx
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,(%ebx)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    %eax,0x4(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80529f0 <__sprintf_chk@plt+0x9280>
mov    $0x7,%ecx
orb    $0x4,0x14(%ebx)
movb   $0x1,0x1b(%esp)
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %eax,0x8(%ebx)
seta   %dl
setb   %cl
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    %eax,%esi
mov    $0x5,%ecx
mov    $0x805b547,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    $0x6,%ecx
mov    %eax,%esi
mov    $0x805b54c,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    $0x8,%ecx
mov    %eax,%esi
mov    $0x805b552,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    %eax,%esi
mov    $0x7,%ecx
mov    $0x805b55a,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    8053b98 <__sprintf_chk@plt+0xa428>
lea    0x0(%esi),%esi
movzbl 0x14(%ebx),%eax
mov    (%ebx),%esi
and    $0xfffffffe,%eax
or     0x1b(%esp),%al
mov    %al,0x14(%ebx)
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   8049480 <strchr@plt>
mov    $0x1,%edx
test   %eax,%eax
je     8053b20 <__sprintf_chk@plt+0xa3b0>
movzbl 0x14(%ebx),%eax
add    %edx,%edx
movl   $0xffffffff,0xc(%ebx)
movl   $0xffffffff,0x10(%ebx)
and    $0xfffffffd,%eax
or     %edx,%eax
mov    %al,0x14(%ebx)
mov    0x14(%esp),%eax
mov    %ebx,(%eax)
lea    0x18(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    80539e0 <__sprintf_chk@plt+0xa270>
nop
xor    %edx,%edx
cmpb   $0x2f,(%esi)
jne    8053af1 <__sprintf_chk@plt+0xa381>
cmpb   $0x2f,0x1(%esi)
jne    8053af1 <__sprintf_chk@plt+0xa381>
mov    0x8(%ebx),%ebp
mov    $0x6,%ecx
mov    $0x805b59f,%edi
mov    $0x1,%edx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%eax
cmp    %cl,%al
je     8053af1 <__sprintf_chk@plt+0xa381>
mov    $0x805b5a5,%edi
mov    %ebp,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %dl
jmp    8053af1 <__sprintf_chk@plt+0xa381>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80495d0 <endmntent@plt>
test   %eax,%eax
je     8053cb8 <__sprintf_chk@plt+0xa548>
mov    0x14(%esp),%eax
movl   $0x0,(%eax)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x8,%ecx
mov    %eax,%esi
mov    $0x805b561,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    %eax,%esi
mov    $0x7,%ecx
mov    $0x805b569,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    $0xb,%ecx
mov    %eax,%esi
mov    $0x805b570,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    $0x6,%ecx
mov    %eax,%esi
mov    $0x805b57b,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    $0x6,%ecx
mov    %eax,%esi
mov    $0x805b581,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    %eax,%esi
mov    $0x7,%ecx
mov    $0x805b587,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    %eax,%esi
mov    $0x7,%ecx
mov    $0x805b58e,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     8053ac8 <__sprintf_chk@plt+0xa358>
mov    %eax,%esi
mov    $0x5,%ecx
mov    $0x805b595,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
movb   $0x0,0x1b(%esp)
seta   %cl
setb   %al
cmp    %al,%cl
jne    8053ac8 <__sprintf_chk@plt+0xa358>
movl   $0x805b59a,0x4(%esp)
mov    %ebp,(%esp)
call   8049310 <hasmntopt@plt>
test   %eax,%eax
sete   0x1b(%esp)
jmp    8053ac8 <__sprintf_chk@plt+0xa358>
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    0x14(%esp),%eax
movl   $0x0,(%eax)
mov    0x2c(%esp),%ebx
test   %ebx,%ebx
jne    8053cea <__sprintf_chk@plt+0xa57a>
jmp    8053d15 <__sprintf_chk@plt+0xa5a5>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049200 <free@plt>
test   %ebp,%ebp
mov    %ebp,0x2c(%esp)
je     8053d15 <__sprintf_chk@plt+0xa5a5>
mov    %ebp,%ebx
mov    (%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
testb  $0x4,0x14(%ebx)
je     8053cd8 <__sprintf_chk@plt+0xa568>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
jmp    8053cd8 <__sprintf_chk@plt+0xa568>
mov    %edi,(%esi)
xor    %eax,%eax
jmp    8053b8a <__sprintf_chk@plt+0xa41a>
xor    %eax,%eax
jmp    8053b8a <__sprintf_chk@plt+0xa41a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8056bb0 <__sprintf_chk@plt+0xd440>
test   %eax,%eax
je     8053d6f <__sprintf_chk@plt+0xa5ff>
mov    0x1c(%esp),%edx
test   %edx,%edx
js     8053d76 <__sprintf_chk@plt+0xa606>
mov    0x30(%esp),%ecx
mov    %eax,(%ecx)
mov    %edx,%eax
add    $0x2c,%esp
ret
mov    $0xffffffff,%eax
jmp    8053d6b <__sprintf_chk@plt+0xa5fb>
mov    %eax,(%esp)
call   8049200 <free@plt>
call   8049570 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    $0xffffffff,%eax
jmp    8053d6b <__sprintf_chk@plt+0xa5fb>
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x401,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebp
lea    0x1(%eax),%edx
cmp    $0x400,%eax
cmovbe %edx,%ebx
nop
mov    %ebx,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8053df8 <__sprintf_chk@plt+0xa688>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   80492e0 <readlink@plt>
test   %eax,%eax
mov    %eax,%edi
js     8053e18 <__sprintf_chk@plt+0xa6a8>
cmp    %edi,%ebx
ja     8053e48 <__sprintf_chk@plt+0xa6d8>
mov    %esi,(%esp)
call   8049200 <free@plt>
cmp    $0x3fffffff,%ebx
ja     8053e08 <__sprintf_chk@plt+0xa698>
add    %ebx,%ebx
mov    %ebx,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8053dbe <__sprintf_chk@plt+0xa64e>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x7ffffffe,%ebx
ja     8053e58 <__sprintf_chk@plt+0xa6e8>
mov    $0x7fffffff,%ebx
jmp    8053db0 <__sprintf_chk@plt+0xa640>
nop
call   8049570 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x22,%edx
je     8053dd4 <__sprintf_chk@plt+0xa664>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8049200 <free@plt>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    8053dfa <__sprintf_chk@plt+0xa68a>
lea    0x0(%esi),%esi
movb   $0x0,(%esi,%edi,1)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049570 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804bcf0 <__sprintf_chk@plt+0x2580>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    %eax,%ebp
mov    0x44(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     8053f72 <__sprintf_chk@plt+0xa802>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movb   $0x0,0x1f(%esp)
movl   $0xffffffff,0x18(%esp)
jmp    8053f16 <__sprintf_chk@plt+0xa7a6>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8053f48 <__sprintf_chk@plt+0xa7d8>
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
imul   0x4c(%esp),%eax
add    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049270 <memcmp@plt>
movzbl 0x1f(%esp),%edx
test   %eax,%eax
mov    $0x1,%eax
cmovne %eax,%edx
mov    %dl,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8053f50 <__sprintf_chk@plt+0xa7e0>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80496c0 <strncmp@plt>
test   %eax,%eax
jne    8053f04 <__sprintf_chk@plt+0xa794>
mov    %edi,(%esp)
call   80494c0 <strlen@plt>
cmp    %ebp,%eax
je     8053f68 <__sprintf_chk@plt+0xa7f8>
cmpl   $0xffffffff,0x18(%esp)
jne    8053ec8 <__sprintf_chk@plt+0xa758>
mov    %ebx,0x18(%esp)
jmp    8053f04 <__sprintf_chk@plt+0xa794>
nop
movb   $0x1,0x1f(%esp)
jmp    8053f04 <__sprintf_chk@plt+0xa794>
nop
cmpb   $0x0,0x1f(%esp)
jne    8053f7c <__sprintf_chk@plt+0xa80c>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,0x18(%esp)
jmp    8053f57 <__sprintf_chk@plt+0xa7e7>
mov    $0xfffffffe,%eax
jmp    8053f5b <__sprintf_chk@plt+0xa7eb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     8054018 <__sprintf_chk@plt+0xa8a8>
movl   $0x805b5c5,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8051800 <__sprintf_chk@plt+0x8090>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8051450 <__sprintf_chk@plt+0x7ce0>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   80493b0 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x805b5aa,0x4(%esp)
movl   $0x0,(%esp)
call   8049290 <dcgettext@plt>
mov    %eax,%esi
jmp    8053fba <__sprintf_chk@plt+0xa84a>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x805f364,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x805b5e2,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   8049290 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   8049460 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    80540cd <__sprintf_chk@plt+0xa95d>
jmp    8054118 <__sprintf_chk@plt+0xa9a8>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x805b5f7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x805f364,%eax
mov    %eax,(%esp)
call   80496a0 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     8054118 <__sprintf_chk@plt+0xa9a8>
test   %esi,%esi
je     8054090 <__sprintf_chk@plt+0xa920>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049270 <memcmp@plt>
test   %eax,%eax
jne    8054090 <__sprintf_chk@plt+0xa920>
mov    %ebp,(%esp)
call   8051820 <__sprintf_chk@plt+0x80b0>
movl   $0x805b5ff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x805f364,%eax
mov    %eax,(%esp)
call   80496a0 <__fprintf_chk@plt>
jmp    80540bb <__sprintf_chk@plt+0xa94b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805f364,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    8054136 <__sprintf_chk@plt+0xa9c6>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049640 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebp
mov    0x38(%esp),%ebx
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
call   8053e90 <__sprintf_chk@plt+0xa720>
test   %eax,%eax
js     8054187 <__sprintf_chk@plt+0xaa17>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8053f90 <__sprintf_chk@plt+0xa820>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8054030 <__sprintf_chk@plt+0xa8c0>
call   *0x44(%esp)
mov    $0xffffffff,%eax
jmp    805417f <__sprintf_chk@plt+0xaa0f>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     8054203 <__sprintf_chk@plt+0xaa93>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    80541eb <__sprintf_chk@plt+0xaa7b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     8054203 <__sprintf_chk@plt+0xaa93>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049270 <memcmp@plt>
test   %eax,%eax
jne    80541e0 <__sprintf_chk@plt+0xaa70>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x18(%esp),%ecx
cmp    %ecx,%ebx
jne    8054232 <__sprintf_chk@plt+0xaac2>
jmp    8054265 <__sprintf_chk@plt+0xaaf5>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ecx
cmp    %dl,%al
jne    8054256 <__sprintf_chk@plt+0xaae6>
movzbl (%ebx),%eax
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
movzbl (%ecx),%edx
lea    0x20(%eax),%esi
cmova  %eax,%esi
mov    %esi,%eax
lea    -0x41(%edx),%ebp
cmp    $0x19,%ebp
lea    0x20(%edx),%edi
cmovbe %edi,%edx
test   %al,%al
jne    8054228 <__sprintf_chk@plt+0xaab8>
mov    %esi,%eax
movzbl %dl,%edx
movzbl %al,%eax
pop    %ebx
sub    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   80569a0 <__sprintf_chk@plt+0xd230>
test   %eax,%eax
mov    %eax,%edx
js     80542d8 <__sprintf_chk@plt+0xab68>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     80542d0 <__sprintf_chk@plt+0xab60>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   80569a0 <__sprintf_chk@plt+0xd230>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    80542d0 <__sprintf_chk@plt+0xab60>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   80569a0 <__sprintf_chk@plt+0xd230>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049350 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   8056900 <__sprintf_chk@plt+0xd190>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    8054350 <__sprintf_chk@plt+0xabe0>
test   %dl,%dl
je     8054347 <__sprintf_chk@plt+0xabd7>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     8054370 <__sprintf_chk@plt+0xac00>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    8054347 <__sprintf_chk@plt+0xabd7>
call   8049570 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049570 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80491b0 <open64@plt>
mov    %eax,(%esp)
call   80568c0 <__sprintf_chk@plt+0xd150>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
movsbl (%edx),%ecx
test   %cl,%cl
je     80543f8 <__sprintf_chk@plt+0xac88>
xor    %eax,%eax
lea    0x0(%esi),%esi
ror    $0x17,%eax
add    $0x1,%edx
add    %ecx,%eax
movsbl (%edx),%ecx
test   %cl,%cl
jne    80543e0 <__sprintf_chk@plt+0xac70>
xor    %edx,%edx
divl   0x8(%esp)
mov    %edx,%eax
ret
xor    %edx,%edx
jmp    80543f5 <__sprintf_chk@plt+0xac85>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049610 <nl_langinfo@plt>
mov    0x805f5b0,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x805b0bc,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     80544cc <__sprintf_chk@plt+0xad5c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     8054497 <__sprintf_chk@plt+0xad27>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    8054470 <__sprintf_chk@plt+0xad00>
nop
mov    %ebp,(%esp)
call   80494c0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   80494c0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     80544c8 <__sprintf_chk@plt+0xad58>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80491a0 <strcmp@plt>
test   %eax,%eax
je     805448b <__sprintf_chk@plt+0xad1b>
cmp    $0x2a,%bl
jne    8054450 <__sprintf_chk@plt+0xace0>
cmpb   $0x0,0x1(%ebp)
jne    8054450 <__sprintf_chk@plt+0xace0>
mov    %ebp,(%esp)
call   80494c0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x805b60d,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805478d <__sprintf_chk@plt+0xb01d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    8054497 <__sprintf_chk@plt+0xad27>
movl   $0x805b613,(%esp)
call   80493c0 <getenv@plt>
test   %eax,%eax
je     80544e5 <__sprintf_chk@plt+0xad75>
cmpb   $0x0,(%eax)
jne    80546f3 <__sprintf_chk@plt+0xaf83>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x805b604,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     80546e4 <__sprintf_chk@plt+0xaf74>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8054783 <__sprintf_chk@plt+0xb013>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049220 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     805454c <__sprintf_chk@plt+0xaddc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   80491b0 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     80546c8 <__sprintf_chk@plt+0xaf58>
movl   $0x805ab39,0x4(%esp)
mov    %eax,(%esp)
call   8049450 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     80546c0 <__sprintf_chk@plt+0xaf50>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    80546a6 <__sprintf_chk@plt+0xaf36>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     80545b0 <__sprintf_chk@plt+0xae40>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    80545b0 <__sprintf_chk@plt+0xae40>
cmp    $0x23,%eax
je     805471d <__sprintf_chk@plt+0xafad>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049540 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x805b623,0x4(%esp)
mov    %esi,(%esp)
call   80494b0 <fscanf@plt>
cmp    $0x1,%eax
jle    8054740 <__sprintf_chk@plt+0xafd0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    805475e <__sprintf_chk@plt+0xafee>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   80493f0 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     8054792 <__sprintf_chk@plt+0xb022>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8049340 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8049340 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     80545bc <__sprintf_chk@plt+0xae4c>
mov    %esi,(%esp)
call   80495f0 <__uflow@plt>
cmp    $0xffffffff,%eax
je     8054740 <__sprintf_chk@plt+0xafd0>
jmp    80545c5 <__sprintf_chk@plt+0xae55>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049710 <close@plt>
mov    $0x805b0bc,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    %ebp,0x805f5b0
jmp    805443f <__sprintf_chk@plt+0xaccf>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    805450b <__sprintf_chk@plt+0xad9b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   80494c0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     80546e4 <__sprintf_chk@plt+0xaf74>
lea    -0x1(%eax),%eax
jmp    80544f4 <__sprintf_chk@plt+0xad84>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     8054737 <__sprintf_chk@plt+0xafc7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    80547ac <__sprintf_chk@plt+0xb03c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    8054718 <__sprintf_chk@plt+0xafa8>
cmp    $0xffffffff,%eax
jne    80545b0 <__sprintf_chk@plt+0xae40>
mov    %esi,(%esp)
call   8056900 <__sprintf_chk@plt+0xd190>
mov    0x10(%esp),%eax
test   %eax,%eax
je     80546c8 <__sprintf_chk@plt+0xaf58>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    80546cd <__sprintf_chk@plt+0xaf5d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   80493d0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    805465c <__sprintf_chk@plt+0xaeec>
mov    $0x805b0bc,%ebp
jmp    80546d9 <__sprintf_chk@plt+0xaf69>
call   80492b0 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x805b0bc,%ebp
call   8049200 <free@plt>
mov    %esi,(%esp)
call   8056900 <__sprintf_chk@plt+0xd190>
jmp    80546cd <__sprintf_chk@plt+0xaf5d>
mov    %esi,(%esp)
call   80495f0 <__uflow@plt>
jmp    8054732 <__sprintf_chk@plt+0xafc2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80491e0 <wcwidth@plt>
test   %eax,%eax
jns    80547e4 <__sprintf_chk@plt+0xb074>
mov    %ebx,(%esp)
call   80492c0 <iswcntrl@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
mov    (%ebx),%eax
lea    0x10(%ebx),%edx
cmp    %edx,%eax
je     8054828 <__sprintf_chk@plt+0xb0b8>
mov    %eax,(%esi)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ebx),%eax
test   %al,%al
mov    %al,0x8(%esi)
je     8054820 <__sprintf_chk@plt+0xb0b0>
mov    0xc(%ebx),%eax
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%ebx),%edx
lea    0x10(%esi),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   8049220 <memcpy@plt>
mov    %edi,(%esi)
jmp    8054809 <__sprintf_chk@plt+0xb099>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    %ecx,%eax
and    $0x1f,%ecx
shr    $0x5,%al
movzbl %al,%eax
mov    0x805b640(,%eax,4),%eax
shr    %cl,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8(%ebp),%eax
mov    %ecx,-0x30(%ebp)
mov    %eax,-0x34(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmp    $0x3fffffff,%ecx
jbe    80548b1 <__sprintf_chk@plt+0xb141>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    80549be <__sprintf_chk@plt+0xb24e>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    -0x30(%ebp),%eax
shl    $0x2,%eax
cmp    $0xfb7,%eax
jbe    8054959 <__sprintf_chk@plt+0xb1e9>
mov    %eax,(%esp)
mov    %edx,-0x2c(%ebp)
call   80587e0 <__sprintf_chk@plt+0xf070>
mov    -0x2c(%ebp),%edx
test   %eax,%eax
je     8054897 <__sprintf_chk@plt+0xb127>
xor    %ecx,%ecx
mov    $0x2,%esi
cmpl   $0x2,-0x30(%ebp)
movl   $0x1,0x4(%eax)
jbe    805491b <__sprintf_chk@plt+0xb1ab>
mov    %edi,-0x2c(%ebp)
mov    -0x30(%ebp),%edi
xchg   %ax,%ax
movzbl -0x1(%edx,%esi,1),%ebx
cmp    %bl,(%edx,%ecx,1)
jne    8054908 <__sprintf_chk@plt+0xb198>
jmp    8054980 <__sprintf_chk@plt+0xb210>
nop
sub    (%eax,%ecx,4),%ecx
cmp    %bl,(%edx,%ecx,1)
je     8054980 <__sprintf_chk@plt+0xb210>
test   %ecx,%ecx
jne    8054900 <__sprintf_chk@plt+0xb190>
mov    %esi,(%eax,%esi,4)
xor    %ecx,%ecx
add    $0x1,%esi
cmp    %edi,%esi
jne    80548f0 <__sprintf_chk@plt+0xb180>
mov    -0x2c(%ebp),%edi
mov    -0x34(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,(%esi)
movzbl (%edi),%ebx
mov    %edi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8054947 <__sprintf_chk@plt+0xb1d7>
cmp    %bl,(%edx,%ecx,1)
je     8054990 <__sprintf_chk@plt+0xb220>
test   %ecx,%ecx
je     8054970 <__sprintf_chk@plt+0xb200>
add    (%eax,%ecx,4),%edi
sub    (%eax,%ecx,4),%ecx
test   %bl,%bl
jne    8054934 <__sprintf_chk@plt+0xb1c4>
mov    %eax,(%esp)
call   8058840 <__sprintf_chk@plt+0xf0d0>
mov    $0x1,%eax
jmp    8054899 <__sprintf_chk@plt+0xb129>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x13(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
jmp    80548d0 <__sprintf_chk@plt+0xb160>
movzbl 0x1(%esi),%ebx
add    $0x1,%edi
add    $0x1,%esi
jmp    8054930 <__sprintf_chk@plt+0xb1c0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
mov    %esi,%ebx
sub    %ecx,%ebx
mov    %ebx,(%eax,%esi,4)
jmp    8054911 <__sprintf_chk@plt+0xb1a1>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,-0x30(%ebp)
lea    0x1(%esi),%ebx
mov    %ebx,-0x2c(%ebp)
je     80549a7 <__sprintf_chk@plt+0xb237>
movzbl 0x1(%esi),%ebx
mov    -0x2c(%ebp),%esi
jmp    8054930 <__sprintf_chk@plt+0xb1c0>
mov    -0x34(%ebp),%esi
mov    %edi,(%esi)
mov    %eax,(%esp)
call   8058840 <__sprintf_chk@plt+0xf0d0>
mov    $0x1,%eax
jmp    8054899 <__sprintf_chk@plt+0xb129>
call   80492b0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0xec,%esp
mov    %edx,(%esp)
mov    %eax,-0xe4(%ebp)
mov    %ecx,-0xe0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   80588b0 <__sprintf_chk@plt+0xf140>
cmp    $0x5d1745d,%eax
mov    %eax,-0xdc(%ebp)
jbe    8054a24 <__sprintf_chk@plt+0xb2b4>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    805531b <__sprintf_chk@plt+0xbbab>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
imul   $0x2c,-0xdc(%ebp),%eax
cmp    $0xfb7,%eax
jbe    8054cce <__sprintf_chk@plt+0xb55e>
mov    %eax,(%esp)
call   80587e0 <__sprintf_chk@plt+0xf070>
mov    %eax,-0xd0(%ebp)
mov    -0xd0(%ebp),%edi
test   %edi,%edi
je     8054a0a <__sprintf_chk@plt+0xb29a>
mov    -0xdc(%ebp),%eax
lea    -0xc0(%ebp),%esi
mov    %ebx,-0xb4(%ebp)
lea    0x10(%edi),%ebx
movb   $0x0,-0xc4(%ebp)
movl   $0x0,-0xc0(%ebp)
00
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
mov    %eax,-0xd4(%ebp)
movl   $0x0,-0xbc(%ebp)
00
movb   $0x0,-0xb8(%ebp)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0xc4(%ebp)
jne    8054d07 <__sprintf_chk@plt+0xb597>
mov    -0xb4(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8054cf0 <__sprintf_chk@plt+0xb580>
movl   $0x1,-0xb0(%ebp)
00
movsbl (%edx),%eax
movb   $0x1,-0xac(%ebp)
mov    %eax,-0xa8(%ebp)
mov    -0xa8(%ebp),%eax
movb   $0x1,-0xb8(%ebp)
test   %eax,%eax
jne    8054da0 <__sprintf_chk@plt+0xb630>
mov    -0xd4(%ebp),%eax
cmpl   $0x2,-0xdc(%ebp)
movl   $0x1,0x4(%eax)
jbe    8054bca <__sprintf_chk@plt+0xb45a>
mov    -0xd0(%ebp),%esi
xor    %ebx,%ebx
movl   $0x2,-0xd8(%ebp)
00
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x30(%esi),%ecx
jmp    8054b54 <__sprintf_chk@plt+0xb3e4>
xchg   %ax,%ax
cmpb   $0x0,0x8(%eax)
je     8054b64 <__sprintf_chk@plt+0xb3f4>
mov    0xc(%eax),%eax
cmp    %eax,0x34(%esi)
sete   %dl
test   %dl,%dl
jne    8054b98 <__sprintf_chk@plt+0xb428>
test   %ebx,%ebx
mov    -0xd4(%ebp),%eax
je     80550a8 <__sprintf_chk@plt+0xb938>
sub    (%eax,%ebx,4),%ebx
mov    -0xd0(%ebp),%edi
lea    (%ebx,%ebx,4),%eax
test   %cl,%cl
lea    (%edi,%eax,8),%eax
jne    8054b30 <__sprintf_chk@plt+0xb3c0>
mov    0x2c(%esi),%edi
xor    %edx,%edx
cmp    0x4(%eax),%edi
jne    8054b3f <__sprintf_chk@plt+0xb3cf>
mov    %edi,0x8(%esp)
mov    (%eax),%eax
mov    %ecx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   8049270 <memcmp@plt>
mov    -0xcc(%ebp),%ecx
test   %eax,%eax
sete   %dl
test   %dl,%dl
je     8054b43 <__sprintf_chk@plt+0xb3d3>
mov    -0xd8(%ebp),%edi
add    $0x1,%ebx
mov    -0xd4(%ebp),%ecx
mov    %edi,%eax
sub    %ebx,%eax
mov    %eax,(%ecx,%edi,4)
addl   $0x1,-0xd8(%ebp)
add    $0x28,%esi
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd8(%ebp)
jne    8054b28 <__sprintf_chk@plt+0xb3b8>
mov    -0xe0(%ebp),%eax
xor    %ebx,%ebx
movb   $0x0,-0x8c(%ebp)
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,(%eax)
mov    -0xe4(%ebp),%eax
movb   $0x0,-0x80(%ebp)
movb   $0x0,-0x54(%ebp)
movl   $0x0,-0x50(%ebp)
mov    %eax,-0x7c(%ebp)
mov    %eax,-0x44(%ebp)
movl   $0x0,-0x4c(%ebp)
movb   $0x0,-0x48(%ebp)
movl   $0x0,-0xd8(%ebp)
00
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8054c87 <__sprintf_chk@plt+0xb517>
movzbl -0x3c(%ebp),%ebx
mov    -0xd8(%ebp),%eax
test   %bl,%bl
mov    -0xd0(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
jne    80551a3 <__sprintf_chk@plt+0xba33>
mov    0x4(%eax),%ecx
xor    %edx,%edx
cmp    -0x40(%ebp),%ecx
je     8054df0 <__sprintf_chk@plt+0xb680>
mov    %edx,%eax
test   %al,%al
je     8054e38 <__sprintf_chk@plt+0xb6c8>
mov    -0x40(%ebp),%eax
add    %eax,-0x44(%ebp)
addl   $0x1,-0xd8(%ebp)
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd8(%ebp)
movb   $0x0,-0x48(%ebp)
je     8054e0f <__sprintf_chk@plt+0xb69f>
xor    %ebx,%ebx
cmpb   $0x0,-0x54(%ebp)
jne    8054fcf <__sprintf_chk@plt+0xb85f>
mov    -0x44(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8054fb8 <__sprintf_chk@plt+0xb848>
movl   $0x1,-0x40(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x3c(%ebp)
mov    %eax,-0x38(%ebp)
movb   $0x1,-0x48(%ebp)
jmp    8054c30 <__sprintf_chk@plt+0xb4c0>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
mov    %eax,-0xd0(%ebp)
jmp    8054a44 <__sprintf_chk@plt+0xb2d4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80552d3 <__sprintf_chk@plt+0xbb63>
movb   $0x1,-0xc4(%ebp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    -0xb4(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0xb0(%ebp)
je     80550b8 <__sprintf_chk@plt+0xb948>
cmp    $0xfffffffe,%eax
je     8055173 <__sprintf_chk@plt+0xba03>
test   %eax,%eax
jne    8054d7b <__sprintf_chk@plt+0xb60b>
mov    -0xb4(%ebp),%eax
movl   $0x1,-0xb0(%ebp)
00
cmpb   $0x0,(%eax)
jne    8055320 <__sprintf_chk@plt+0xbbb0>
mov    -0xa8(%ebp),%eax
test   %eax,%eax
jne    80552f7 <__sprintf_chk@plt+0xbb87>
mov    %esi,(%esp)
movb   $0x1,-0xac(%ebp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8054ae0 <__sprintf_chk@plt+0xb370>
movb   $0x0,-0xc4(%ebp)
jmp    8054ae0 <__sprintf_chk@plt+0xb370>
xchg   %ax,%ax
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
mov    $0x1,%eax
cmp    %ecx,%edx
je     80550e6 <__sprintf_chk@plt+0xb976>
mov    %edx,-0x10(%ebx)
mov    -0xb0(%ebp),%edx
test   %al,%al
mov    %al,-0x8(%ebx)
mov    %edx,-0xc(%ebx)
je     8054dd5 <__sprintf_chk@plt+0xb665>
mov    -0xa8(%ebp),%eax
mov    %eax,-0x4(%ebx)
mov    -0xb0(%ebp),%eax
add    $0x28,%ebx
add    %eax,-0xb4(%ebp)
movb   $0x0,-0xb8(%ebp)
jmp    8054a98 <__sprintf_chk@plt+0xb328>
mov    -0x44(%ebp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049270 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8054c58 <__sprintf_chk@plt+0xb4e8>
mov    -0x7c(%ebp),%eax
mov    -0xe0(%ebp),%edi
mov    %eax,(%edi)
mov    -0xd0(%ebp),%eax
mov    %eax,(%esp)
call   8058840 <__sprintf_chk@plt+0xf0d0>
mov    $0x1,%eax
jmp    8054a0c <__sprintf_chk@plt+0xb29c>
lea    0x0(%esi),%esi
mov    -0xd8(%ebp),%eax
test   %eax,%eax
je     8055060 <__sprintf_chk@plt+0xb8f0>
mov    -0xd8(%ebp),%edi
mov    -0xd4(%ebp),%eax
mov    (%eax,%edi,4),%ebx
sub    %ebx,-0xd8(%ebp)
test   %ebx,%ebx
je     8055098 <__sprintf_chk@plt+0xb928>
movzbl -0x80(%ebp),%esi
lea    -0x88(%ebp),%edi
mov    %esi,%eax
test   %al,%al
je     8054e92 <__sprintf_chk@plt+0xb722>
movzbl -0x74(%ebp),%esi
mov    %esi,%eax
test   %al,%al
jne    8054ed5 <__sprintf_chk@plt+0xb765>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
sub    $0x1,%ebx
movb   $0x0,-0x80(%ebp)
je     8055098 <__sprintf_chk@plt+0xb928>
xor    %esi,%esi
cmpb   $0x0,-0x8c(%ebp)
jne    8054eff <__sprintf_chk@plt+0xb78f>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8054ee8 <__sprintf_chk@plt+0xb778>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
mov    %esi,%eax
test   %al,%al
movb   $0x1,-0x80(%ebp)
je     8054e7d <__sprintf_chk@plt+0xb70d>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    8054e7d <__sprintf_chk@plt+0xb70d>
call   80496d0 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80552d3 <__sprintf_chk@plt+0xbb63>
movb   $0x1,-0x8c(%ebp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    -0xcc(%ebp),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8054f90 <__sprintf_chk@plt+0xb820>
cmp    $0xfffffffe,%eax
je     8054fa0 <__sprintf_chk@plt+0xb830>
test   %eax,%eax
jne    8054f65 <__sprintf_chk@plt+0xb7f5>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    8055320 <__sprintf_chk@plt+0xbbb0>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    80552f7 <__sprintf_chk@plt+0xbb87>
mov    %edi,(%esp)
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8054ecb <__sprintf_chk@plt+0xb75b>
movb   $0x0,-0x8c(%ebp)
jmp    8054ecb <__sprintf_chk@plt+0xb75b>
lea    0x0(%esi),%esi
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    8054ecb <__sprintf_chk@plt+0xb75b>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    8054ecb <__sprintf_chk@plt+0xb75b>
nop
lea    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80552d3 <__sprintf_chk@plt+0xbb63>
movb   $0x1,-0x54(%ebp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    -0x44(%ebp),%esi
lea    -0x50(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x40(%ebp)
je     8055193 <__sprintf_chk@plt+0xba23>
cmp    $0xfffffffe,%eax
je     8055289 <__sprintf_chk@plt+0xbb19>
test   %eax,%eax
jne    8055034 <__sprintf_chk@plt+0xb8c4>
mov    -0x44(%ebp),%eax
movl   $0x1,-0x40(%ebp)
cmpb   $0x0,(%eax)
jne    8055320 <__sprintf_chk@plt+0xbbb0>
mov    -0x38(%ebp),%edx
test   %edx,%edx
jne    80552f7 <__sprintf_chk@plt+0xbb87>
lea    -0x50(%ebp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
movb   $0x1,-0x3c(%ebp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8054cc5 <__sprintf_chk@plt+0xb555>
movb   $0x0,-0x54(%ebp)
jmp    8054cc5 <__sprintf_chk@plt+0xb555>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x80(%ebp),%edx
test   %dl,%dl
je     8055110 <__sprintf_chk@plt+0xb9a0>
movzbl -0x74(%ebp),%edx
test   %dl,%dl
jne    8055163 <__sprintf_chk@plt+0xb9f3>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
mov    -0x40(%ebp),%eax
movb   $0x0,-0x80(%ebp)
add    %eax,-0x44(%ebp)
movb   $0x0,-0x48(%ebp)
jmp    8054c85 <__sprintf_chk@plt+0xb515>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x48(%ebp),%ebx
jmp    8054c28 <__sprintf_chk@plt+0xb4b8>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xd8(%ebp),%edi
mov    %edi,(%eax,%edi,4)
jmp    8054bae <__sprintf_chk@plt+0xb43e>
xchg   %ax,%ax
movl   $0x1,-0xb0(%ebp)
00
movb   $0x0,-0xac(%ebp)
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
xor    %eax,%eax
movb   $0x1,-0xb8(%ebp)
cmp    %ecx,%edx
jne    8054db9 <__sprintf_chk@plt+0xb649>
mov    -0xb0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049220 <memcpy@plt>
mov    %ebx,-0x10(%ebx)
movzbl -0xac(%ebp),%eax
jmp    8054dbc <__sprintf_chk@plt+0xb64c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x8c(%ebp)
lea    -0x88(%ebp),%ebx
jne    80551fe <__sprintf_chk@plt+0xba8e>
mov    -0x7c(%ebp),%ecx
movzbl (%ecx),%eax
mov    %eax,%ebx
shr    $0x5,%bl
movzbl %bl,%ebx
mov    0x805b640(,%ebx,4),%ebx
bt     %eax,%ebx
jae    80551d5 <__sprintf_chk@plt+0xba65>
movl   $0x1,-0x78(%ebp)
movsbl (%ecx),%eax
mov    $0x1,%edx
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
test   %dl,%dl
movb   $0x1,-0x80(%ebp)
je     8055078 <__sprintf_chk@plt+0xb908>
mov    -0x70(%ebp),%ecx
test   %ecx,%ecx
jne    8055078 <__sprintf_chk@plt+0xb908>
jmp    8054edc <__sprintf_chk@plt+0xb76c>
mov    -0xb4(%ebp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,-0xac(%ebp)
mov    %eax,-0xb0(%ebp)
jmp    80550c9 <__sprintf_chk@plt+0xb959>
movl   $0x1,-0x40(%ebp)
movb   $0x0,-0x3c(%ebp)
jmp    8054cc5 <__sprintf_chk@plt+0xb555>
mov    -0x38(%ebp),%edx
test   %edx,%edx
je     8054e1a <__sprintf_chk@plt+0xb6aa>
mov    -0xd8(%ebp),%eax
mov    -0xd0(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
cmpb   $0x0,0x8(%eax)
je     8054c4a <__sprintf_chk@plt+0xb4da>
cmp    0xc(%eax),%edx
sete   %al
jmp    8054c5a <__sprintf_chk@plt+0xb4ea>
lea    -0x88(%ebp),%ebx
mov    %ebx,(%esp)
mov    %edx,-0xcc(%ebp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80552d3 <__sprintf_chk@plt+0xbb63>
mov    -0xcc(%ebp),%edx
movb   $0x1,-0x8c(%ebp)
mov    %edx,-0xcc(%ebp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
mov    -0xcc(%ebp),%edx
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     80552a0 <__sprintf_chk@plt+0xbb30>
cmp    $0xfffffffe,%eax
je     80552b0 <__sprintf_chk@plt+0xbb40>
test   %eax,%eax
jne    8055264 <__sprintf_chk@plt+0xbaf4>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    8055320 <__sprintf_chk@plt+0xbbb0>
mov    -0x70(%ebp),%esi
test   %esi,%esi
jne    80552f7 <__sprintf_chk@plt+0xbb87>
mov    %ebx,(%esp)
movb   $0x1,-0x74(%ebp)
call   8049230 <mbsinit@plt>
mov    $0x1,%edx
test   %eax,%eax
je     8055157 <__sprintf_chk@plt+0xb9e7>
movb   $0x0,-0x8c(%ebp)
jmp    8055157 <__sprintf_chk@plt+0xb9e7>
mov    -0x44(%ebp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,-0x3c(%ebp)
mov    %eax,-0x40(%ebp)
jmp    8054cc5 <__sprintf_chk@plt+0xb555>
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    8055157 <__sprintf_chk@plt+0xb9e7>
mov    -0x7c(%ebp),%eax
mov    %edx,-0xcc(%ebp)
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
mov    -0xcc(%ebp),%edx
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    8055157 <__sprintf_chk@plt+0xb9e7>
movl   $0x805b660,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805ac92,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805b660,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805acc0,(%esp)
call   8049730 <__assert_fail@plt>
call   80492b0 <__stack_chk_fail@plt>
movl   $0x805b660,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805aca9,(%esp)
call   8049730 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x15c,%esp
mov    0x170(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x174(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,%edi
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
call   8049330 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80557a0 <__sprintf_chk@plt+0xc030>
movsbl (%edi),%eax
lea    0x38(%esp),%ebx
mov    %edi,0x44(%esp)
movb   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x805b640(,%edx,4),%edx
movl   $0x0,0x3c(%esp)
movb   $0x0,0x40(%esp)
bt     %eax,%edx
jae    8055700 <__sprintf_chk@plt+0xbf90>
movl   $0x1,0x48(%esp)
mov    %eax,0x50(%esp)
movb   $0x1,0x4c(%esp)
mov    0x50(%esp),%ebx
movb   $0x1,0x40(%esp)
test   %ebx,%ebx
je     80559a8 <__sprintf_chk@plt+0xc238>
mov    0x20(%esp),%eax
movb   $0x0,0xa4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0x6c(%esp)
mov    %eax,0x7c(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
movb   $0x0,0x78(%esp)
mov    %eax,0xb4(%esp)
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xac(%esp)
00
movb   $0x0,0xb0(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
movb   $0x1,0x28(%esp)
jne    805564d <__sprintf_chk@plt+0xbedd>
mov    0xb4(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    80559b8 <__sprintf_chk@plt+0xc248>
movl   $0x1,0xb8(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0xbc(%esp)
mov    %eax,0xc0(%esp)
mov    0xc0(%esp),%ecx
movb   $0x1,0xb0(%esp)
test   %ecx,%ecx
je     80559a0 <__sprintf_chk@plt+0xc230>
mov    $0x1,%edx
cmpl   $0x9,0x24(%esp)
seta   %al
and    0x28(%esp),%al
mov    %al,0x14(%esp)
je     80555f0 <__sprintf_chk@plt+0xbe80>
mov    0x24(%esp),%eax
lea    (%eax,%eax,4),%eax
cmp    %eax,0x1c(%esp)
jb     8056000 <__sprintf_chk@plt+0xc890>
mov    0x1c(%esp),%esi
sub    0x2c(%esp),%esi
je     8055590 <__sprintf_chk@plt+0xbe20>
movzbl 0x78(%esp),%ebx
lea    0x70(%esp),%edi
test   %bl,%bl
je     8055530 <__sprintf_chk@plt+0xbdc0>
movzbl 0x84(%esp),%ebx
test   %bl,%bl
jne    8055585 <__sprintf_chk@plt+0xbe15>
mov    0x80(%esp),%eax
add    %eax,0x7c(%esp)
sub    $0x1,%esi
movb   $0x0,0x78(%esp)
je     8056118 <__sprintf_chk@plt+0xc9a8>
xor    %ebx,%ebx
cmpb   $0x0,0x6c(%esp)
jne    8055a3d <__sprintf_chk@plt+0xc2cd>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8055a28 <__sprintf_chk@plt+0xc2b8>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movzbl 0x14(%esp),%ebx
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
test   %bl,%bl
movb   $0x1,0x78(%esp)
je     8055515 <__sprintf_chk@plt+0xbda5>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    8055515 <__sprintf_chk@plt+0xbda5>
cmpb   $0x0,0x78(%esp)
je     8056118 <__sprintf_chk@plt+0xc9a8>
movzbl 0x84(%esp),%eax
mov    %al,0x14(%esp)
cmpb   $0x0,0x14(%esp)
je     8056010 <__sprintf_chk@plt+0xc8a0>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    8056010 <__sprintf_chk@plt+0xc8a0>
mov    0x20(%esp),%edx
lea    0x30(%esp),%ecx
mov    0x18(%esp),%eax
call   80549d0 <__sprintf_chk@plt+0xb260>
test   %al,%al
jne    80562d6 <__sprintf_chk@plt+0xcb66>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
nop
mov    0x1c(%esp),%eax
addl   $0x1,0x24(%esp)
test   %dl,%dl
lea    0x1(%eax),%ebx
je     8055ad8 <__sprintf_chk@plt+0xc368>
cmpb   $0x0,0x4c(%esp)
je     8055ad8 <__sprintf_chk@plt+0xc368>
mov    0x50(%esp),%eax
cmp    %eax,0xc0(%esp)
sete   %al
test   %al,%al
jne    8055b13 <__sprintf_chk@plt+0xc3a3>
mov    0xb8(%esp),%eax
add    %eax,0xb4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0xb0(%esp)
mov    %ebx,0x1c(%esp)
je     805546c <__sprintf_chk@plt+0xbcfc>
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0xb4(%esp),%ebx
lea    0xa8(%esp),%esi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xc0(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xb8(%esp)
je     8056170 <__sprintf_chk@plt+0xca00>
cmp    $0xfffffffe,%eax
je     80559f8 <__sprintf_chk@plt+0xc288>
test   %eax,%eax
jne    80556ce <__sprintf_chk@plt+0xbf5e>
mov    0xb4(%esp),%eax
movl   $0x1,0xb8(%esp)
00
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0xc0(%esp),%ecx
test   %ecx,%ecx
jne    80560be <__sprintf_chk@plt+0xc94e>
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
movb   $0x1,0xbc(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80554ab <__sprintf_chk@plt+0xbd3b>
movb   $0x0,0xa4(%esp)
jmp    80554ab <__sprintf_chk@plt+0xbd3b>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0x34(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x44(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x48(%esp)
je     80559e0 <__sprintf_chk@plt+0xc270>
cmp    $0xfffffffe,%eax
je     8056233 <__sprintf_chk@plt+0xcac3>
test   %eax,%eax
jne    805577d <__sprintf_chk@plt+0xc00d>
mov    0x44(%esp),%eax
movl   $0x1,0x48(%esp)
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0x50(%esp),%esi
test   %esi,%esi
jne    80560be <__sprintf_chk@plt+0xc94e>
mov    %ebx,(%esp)
movb   $0x1,0x4c(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80553dd <__sprintf_chk@plt+0xbc6d>
movb   $0x0,0x34(%esp)
jmp    80553dd <__sprintf_chk@plt+0xbc6d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
mov    0x18(%esp),%edi
movzbl (%ecx),%eax
mov    %eax,%ebx
test   %bl,%bl
mov    %al,0x14(%esp)
mov    %edi,%eax
je     8055928 <__sprintf_chk@plt+0xc1b8>
movzbl (%edi),%eax
test   %al,%al
je     80559a0 <__sprintf_chk@plt+0xc230>
lea    0x1(%edi),%esi
xor    %ebx,%ebx
mov    %ecx,0x28(%esp)
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
movb   $0x1,0x24(%esp)
mov    0x18(%esp),%edx
lea    (%edx,%ebx,1),%ecx
add    $0x1,%ebx
cmp    0x14(%esp),%al
mov    %ecx,0x1c(%esp)
je     8055948 <__sprintf_chk@plt+0xc1d8>
cmpb   $0x0,(%esi)
je     80559a0 <__sprintf_chk@plt+0xc230>
add    $0x1,%edi
cmp    $0x9,%ebx
jbe    805587d <__sprintf_chk@plt+0xc10d>
cmpb   $0x0,0x24(%esp)
je     805587d <__sprintf_chk@plt+0xc10d>
lea    (%ebx,%ebx,4),%eax
cmp    %edi,%eax
ja     8055878 <__sprintf_chk@plt+0xc108>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     8055840 <__sprintf_chk@plt+0xc0d0>
mov    %edi,%eax
sub    0x2c(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80495c0 <strnlen@plt>
mov    %edi,0x2c(%esp)
add    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax)
jne    8055878 <__sprintf_chk@plt+0xc108>
mov    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   80494c0 <strlen@plt>
lea    0x30(%esp),%edx
mov    %edx,(%esp)
mov    %ebp,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8054870 <__sprintf_chk@plt+0xb100>
test   %al,%al
jne    80562d6 <__sprintf_chk@plt+0xcb66>
movl   $0x0,0x28(%esp)
movb   $0x0,0x24(%esp)
jmp    805587d <__sprintf_chk@plt+0xc10d>
lea    0x0(%esi),%esi
movb   $0x1,0x24(%esp)
movzbl (%esi),%eax
add    $0x1,%esi
jmp    80557de <__sprintf_chk@plt+0xc06e>
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
mov    0x1c(%esp),%ebx
mov    0x128(%esp),%eax
add    %eax,0x124(%esp)
add    $0x2,%ebx
cmpb   $0x0,0x114(%esp)
mov    %ebx,%esi
movb   $0x0,0x120(%esp)
jne    8055d43 <__sprintf_chk@plt+0xc5d3>
mov    0x124(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8055f78 <__sprintf_chk@plt+0xc808>
movl   $0x1,0x128(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x12c(%esp)
mov    %eax,0x130(%esp)
mov    0x130(%esp),%eax
movb   $0x1,0x120(%esp)
test   %eax,%eax
jne    8055cc3 <__sprintf_chk@plt+0xc553>
mov    0xb4(%esp),%eax
lea    0x0(%esi),%esi
mov    0x14c(%esp),%esi
xor    %gs:0x14,%esi
jne    80562df <__sprintf_chk@plt+0xcb6f>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%ebp
movzbl 0x1(%ebp),%eax
test   %al,%al
je     8055994 <__sprintf_chk@plt+0xc224>
movzbl (%esi),%ecx
test   %cl,%cl
je     80559a0 <__sprintf_chk@plt+0xc230>
cmp    %cl,%al
lea    0x2(%edi),%edx
jne    8056110 <__sprintf_chk@plt+0xc9a0>
neg    %edi
lea    0x0(%ebp,%edi,1),%ebp
add    0x1c(%esp),%edi
jmp    805598b <__sprintf_chk@plt+0xc21b>
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
test   %cl,%cl
je     80559a0 <__sprintf_chk@plt+0xc230>
add    $0x1,%edx
cmp    %cl,%al
jne    8056110 <__sprintf_chk@plt+0xc9a0>
movzbl 0x0(%ebp,%edx,1),%eax
test   %al,%al
jne    8055978 <__sprintf_chk@plt+0xc208>
mov    0x1c(%esp),%eax
jmp    8055928 <__sprintf_chk@plt+0xc1b8>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8055928 <__sprintf_chk@plt+0xc1b8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
jmp    8055928 <__sprintf_chk@plt+0xc1b8>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0xa4(%esp)
jmp    805564d <__sprintf_chk@plt+0xbedd>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x48(%esp)
movb   $0x0,0x4c(%esp)
movb   $0x1,0x40(%esp)
jmp    80553ee <__sprintf_chk@plt+0xbc7e>
nop
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0xbc(%esp)
mov    %eax,0xb8(%esp)
movb   $0x1,0xb0(%esp)
xor    %edx,%edx
jmp    80554c7 <__sprintf_chk@plt+0xbd57>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0x6c(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     8055c70 <__sprintf_chk@plt+0xc500>
cmp    $0xfffffffe,%eax
je     8055c88 <__sprintf_chk@plt+0xc518>
test   %eax,%eax
jne    8055ab1 <__sprintf_chk@plt+0xc341>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0x88(%esp),%edx
test   %edx,%edx
jne    80560be <__sprintf_chk@plt+0xc94e>
mov    %edi,(%esp)
movb   $0x1,0x84(%esp)
call   8049230 <mbsinit@plt>
movzbl 0x14(%esp),%ebx
test   %eax,%eax
je     805557c <__sprintf_chk@plt+0xbe0c>
movb   $0x0,0x6c(%esp)
jmp    805557c <__sprintf_chk@plt+0xbe0c>
mov    0xb8(%esp),%edx
xor    %eax,%eax
cmp    0x48(%esp),%edx
jne    805561d <__sprintf_chk@plt+0xbead>
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049270 <memcmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     8055625 <__sprintf_chk@plt+0xbeb5>
mov    0xbc(%esp),%edx
lea    0x118(%esp),%edi
mov    0xa4(%esp),%eax
mov    %edx,0xf4(%esp)
mov    0xc0(%esp),%edx
mov    %eax,0xdc(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0xf8(%esp)
mov    0xc4(%esp),%edx
mov    %eax,0xe0(%esp)
mov    0xac(%esp),%eax
mov    %edx,0xfc(%esp)
mov    0xc8(%esp),%edx
mov    %eax,0xe4(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x100(%esp)
mov    0xcc(%esp),%edx
mov    %eax,0xe8(%esp)
mov    0xb4(%esp),%eax
movb   $0x0,0xe8(%esp)
mov    %edx,0x104(%esp)
mov    0xd0(%esp),%edx
mov    %eax,0xec(%esp)
mov    0xb8(%esp),%eax
add    %eax,0xec(%esp)
mov    %edx,0x108(%esp)
mov    0xd4(%esp),%edx
mov    %eax,0xf0(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x10c(%esp)
mov    0xd8(%esp),%edx
mov    %eax,0x124(%esp)
mov    %edx,0x110(%esp)
movb   $0x0,0x114(%esp)
movsbl (%eax),%eax
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
movb   $0x0,0x120(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x805b640(,%edx,4),%edx
bt     %eax,%edx
jae    8056030 <__sprintf_chk@plt+0xc8c0>
movl   $0x1,0x128(%esp)
00
mov    %eax,0x130(%esp)
movb   $0x1,0x12c(%esp)
mov    0x130(%esp),%edx
movb   $0x1,0x120(%esp)
test   %edx,%edx
jne    805589b <__sprintf_chk@plt+0xc12b>
call   80496d0 <abort@plt>
nop
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
jmp    805557c <__sprintf_chk@plt+0xbe0c>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x84(%esp)
mov    %eax,0x80(%esp)
jmp    805557c <__sprintf_chk@plt+0xbe0c>
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
movb   $0x1,0x120(%esp)
movzbl 0xe8(%esp),%ebx
test   %bl,%bl
je     8055de8 <__sprintf_chk@plt+0xc678>
movzbl 0xf4(%esp),%ebx
test   %bl,%bl
jne    8055e4d <__sprintf_chk@plt+0xc6dd>
mov    0xf0(%esp),%edx
mov    $0x1,%eax
cmp    0x128(%esp),%edx
je     8055f50 <__sprintf_chk@plt+0xc7e0>
test   %al,%al
lea    0x1(%esi),%edx
jne    8056168 <__sprintf_chk@plt+0xc9f8>
mov    0xf0(%esp),%eax
mov    %edx,%esi
add    %eax,0xec(%esp)
mov    0x128(%esp),%eax
add    %eax,0x124(%esp)
cmpb   $0x0,0x114(%esp)
movb   $0x0,0xe8(%esp)
movb   $0x0,0x120(%esp)
je     80558c8 <__sprintf_chk@plt+0xc158>
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     8055ca8 <__sprintf_chk@plt+0xc538>
cmp    $0xfffffffe,%eax
je     8055fb0 <__sprintf_chk@plt+0xc840>
test   %eax,%eax
jne    8055dbd <__sprintf_chk@plt+0xc64d>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0x130(%esp),%eax
test   %eax,%eax
jne    80560be <__sprintf_chk@plt+0xc94e>
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8055907 <__sprintf_chk@plt+0xc197>
movb   $0x0,0x114(%esp)
jmp    8055907 <__sprintf_chk@plt+0xc197>
lea    0x0(%esi),%esi
cmpb   $0x0,0xdc(%esp)
lea    0xe0(%esp),%ebp
jne    8055e9f <__sprintf_chk@plt+0xc72f>
mov    0xec(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8055e80 <__sprintf_chk@plt+0xc710>
movl   $0x1,0xf0(%esp)
00
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
mov    %eax,0xf8(%esp)
test   %bl,%bl
movb   $0x1,0xe8(%esp)
je     8055ce3 <__sprintf_chk@plt+0xc573>
mov    0xf8(%esp),%eax
test   %eax,%eax
je     8055928 <__sprintf_chk@plt+0xc1b8>
cmpb   $0x0,0x12c(%esp)
je     8055ce3 <__sprintf_chk@plt+0xc573>
cmp    0x130(%esp),%eax
setne  %al
jmp    8055cfc <__sprintf_chk@plt+0xc58c>
lea    0x0(%esi,%eiz,1),%esi
lea    0xe0(%esp),%ebp
mov    %ebp,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0xdc(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0xec(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    0x14(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xf8(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xf0(%esp)
je     8055f98 <__sprintf_chk@plt+0xc828>
cmp    $0xfffffffe,%eax
je     8055fd8 <__sprintf_chk@plt+0xc868>
test   %eax,%eax
jne    8055f21 <__sprintf_chk@plt+0xc7b1>
mov    0xec(%esp),%eax
movl   $0x1,0xf0(%esp)
00
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0xf8(%esp),%eax
test   %eax,%eax
jne    80560be <__sprintf_chk@plt+0xc94e>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8055e3d <__sprintf_chk@plt+0xc6cd>
movb   $0x0,0xdc(%esp)
jmp    8055e3d <__sprintf_chk@plt+0xc6cd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x124(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049270 <memcmp@plt>
test   %eax,%eax
setne  %al
jmp    8055cfc <__sprintf_chk@plt+0xc58c>
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0x114(%esp)
jmp    8055d43 <__sprintf_chk@plt+0xc5d3>
lea    0x0(%esi),%esi
movl   $0x1,0xf0(%esp)
00
movb   $0x0,0xf4(%esp)
jmp    8055e3d <__sprintf_chk@plt+0xc6cd>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    8055cbb <__sprintf_chk@plt+0xc54b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0xf4(%esp)
mov    %eax,0xf0(%esp)
jmp    8055e3d <__sprintf_chk@plt+0xc6cd>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x28(%esp)
jmp    80555f0 <__sprintf_chk@plt+0xbe80>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x1,0x28(%esp)
mov    %eax,0x2c(%esp)
jmp    80555f0 <__sprintf_chk@plt+0xbe80>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0x114(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     8055888 <__sprintf_chk@plt+0xc118>
cmp    $0xfffffffe,%eax
je     8056272 <__sprintf_chk@plt+0xcb02>
test   %eax,%eax
jne    80560e8 <__sprintf_chk@plt+0xc978>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0x130(%esp),%eax
test   %eax,%eax
je     80560e8 <__sprintf_chk@plt+0xc978>
movl   $0x805b660,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805acc0,(%esp)
call   8049730 <__assert_fail@plt>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8055c53 <__sprintf_chk@plt+0xc4e3>
movb   $0x0,0x114(%esp)
jmp    8055c53 <__sprintf_chk@plt+0xc4e3>
lea    0x0(%esi),%esi
mov    %edx,%edi
jmp    8055802 <__sprintf_chk@plt+0xc092>
nop
cmpb   $0x0,0x6c(%esp)
lea    0x70(%esp),%ebx
jne    80561a1 <__sprintf_chk@plt+0xca31>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8056188 <__sprintf_chk@plt+0xca18>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
movb   $0x1,0x78(%esp)
jmp    80555a7 <__sprintf_chk@plt+0xbe37>
lea    0x0(%esi),%esi
mov    %esi,%ebx
jmp    8055625 <__sprintf_chk@plt+0xbeb5>
nop
movl   $0x1,0xb8(%esp)
00
movb   $0x0,0xbc(%esp)
jmp    8055a16 <__sprintf_chk@plt+0xc2a6>
lea    0x70(%esp),%ebx
mov    %ebx,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     80562b2 <__sprintf_chk@plt+0xcb42>
movb   $0x1,0x6c(%esp)
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     8056295 <__sprintf_chk@plt+0xcb25>
cmp    $0xfffffffe,%eax
je     805624d <__sprintf_chk@plt+0xcadd>
test   %eax,%eax
jne    8056211 <__sprintf_chk@plt+0xcaa1>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    80562e4 <__sprintf_chk@plt+0xcb74>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    80560be <__sprintf_chk@plt+0xc94e>
mov    %ebx,(%esp)
movb   $0x1,0x84(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     805615b <__sprintf_chk@plt+0xc9eb>
movb   $0x0,0x6c(%esp)
jmp    805615b <__sprintf_chk@plt+0xc9eb>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x4c(%esp)
mov    %eax,0x48(%esp)
jmp    80559ed <__sprintf_chk@plt+0xc27d>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
mov    %eax,0x80(%esp)
jmp    805615b <__sprintf_chk@plt+0xc9eb>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    805589b <__sprintf_chk@plt+0xc12b>
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
jmp    805615b <__sprintf_chk@plt+0xc9eb>
movl   $0x805b660,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805ac92,(%esp)
call   8049730 <__assert_fail@plt>
mov    0x30(%esp),%eax
jmp    8055928 <__sprintf_chk@plt+0xc1b8>
call   80492b0 <__stack_chk_fail@plt>
movl   $0x805b660,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805aca9,(%esp)
call   8049730 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%eax
lea    0x4c(%esp),%ebx
mov    0x1078(%esp),%edi
lea    0x44(%esp),%ebp
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    0x107c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
mov    0x1080(%esp),%eax
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
call   80494d0 <iconv@plt>
mov    0x1074(%esp),%eax
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    %eax,0x40(%esp)
test   %eax,%eax
lea    0x48(%esp),%eax
mov    %eax,0x18(%esp)
jne    80563b8 <__sprintf_chk@plt+0xcc48>
jmp    8056408 <__sprintf_chk@plt+0xcc98>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    0x40(%esp),%edx
sub    %ebx,%eax
add    %eax,%esi
test   %edx,%edx
je     8056408 <__sprintf_chk@plt+0xcc98>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1000,0x48(%esp)
call   80494d0 <iconv@plt>
cmp    $0xffffffff,%eax
jne    80563a8 <__sprintf_chk@plt+0xcc38>
call   8049570 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x7,%eax
je     80563a8 <__sprintf_chk@plt+0xcc38>
cmp    $0x16,%eax
jne    805659b <__sprintf_chk@plt+0xce2b>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
movl   $0x1000,0x48(%esp)
call   80494d0 <iconv@plt>
cmp    $0xffffffff,%eax
je     805659b <__sprintf_chk@plt+0xce2b>
mov    0x44(%esp),%eax
sub    %ebx,%eax
add    %eax,%esi
mov    %esi,0x1c(%esp)
je     80565a8 <__sprintf_chk@plt+0xce38>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8056578 <__sprintf_chk@plt+0xce08>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edx
cmp    (%eax),%edx
ja     8056578 <__sprintf_chk@plt+0xce08>
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x0,0xc(%esp)
lea    0x3c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   80494d0 <iconv@plt>
mov    0x2c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x1074(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x1074(%esp),%eax
jmp    8056501 <__sprintf_chk@plt+0xcd91>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   80494d0 <iconv@plt>
cmp    $0xffffffff,%eax
je     80565b8 <__sprintf_chk@plt+0xce48>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    80564d8 <__sprintf_chk@plt+0xcd68>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   80494d0 <iconv@plt>
cmp    $0xffffffff,%eax
je     80565c6 <__sprintf_chk@plt+0xce56>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    80565f3 <__sprintf_chk@plt+0xce83>
mov    0x24(%esp),%eax
xor    %ebx,%ebx
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    0x20(%esp),%eax
mov    %ecx,(%eax)
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    80565f8 <__sprintf_chk@plt+0xce88>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
jne    8056475 <__sprintf_chk@plt+0xcd05>
call   8049570 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%ebx
jmp    8056554 <__sprintf_chk@plt+0xcde4>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
xor    %ebx,%ebx
movl   $0x0,(%eax)
jmp    8056554 <__sprintf_chk@plt+0xcde4>
xchg   %ax,%ax
call   8049570 <__errno_location@plt>
cmpl   $0x16,(%eax)
je     8056505 <__sprintf_chk@plt+0xcd95>
mov    0x24(%esp),%ecx
mov    $0xffffffff,%ebx
mov    0x28(%esp),%edi
cmp    %edi,(%ecx)
je     8056554 <__sprintf_chk@plt+0xcde4>
call   8049570 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %edi,(%esp)
call   8049200 <free@plt>
mov    %ebp,(%esi)
jmp    8056554 <__sprintf_chk@plt+0xcde4>
call   80496d0 <abort@plt>
call   80492b0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   80494c0 <strlen@plt>
mov    %eax,%ebx
shl    $0x4,%ebx
cmp    $0xfff,%eax
cmova  %eax,%ebx
lea    0x1(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     80567c9 <__sprintf_chk@plt+0xd059>
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80494d0 <iconv@plt>
mov    %esi,0x28(%esp)
mov    %ebx,0x2c(%esp)
jmp    80566d4 <__sprintf_chk@plt+0xcf64>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049570 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     805675b <__sprintf_chk@plt+0xcfeb>
cmp    $0x7,%ebx
jne    80567b4 <__sprintf_chk@plt+0xd044>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    80567a8 <__sprintf_chk@plt+0xd038>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   80493d0 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     80567a8 <__sprintf_chk@plt+0xd038>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80494d0 <iconv@plt>
cmp    $0xffffffff,%eax
je     8056678 <__sprintf_chk@plt+0xcf08>
jmp    805675b <__sprintf_chk@plt+0xcfeb>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049570 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x7,%ebx
jne    80567b4 <__sprintf_chk@plt+0xd044>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    80567a8 <__sprintf_chk@plt+0xd038>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   80493d0 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     80567a8 <__sprintf_chk@plt+0xd038>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80494d0 <iconv@plt>
cmp    $0xffffffff,%eax
je     8056710 <__sprintf_chk@plt+0xcfa0>
mov    0x28(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
movb   $0x0,(%eax)
mov    0x28(%esp),%eax
sub    %esi,%eax
cmp    %edi,%eax
jb     80567d8 <__sprintf_chk@plt+0xd068>
mov    %esi,%eax
jmp    80567c1 <__sprintf_chk@plt+0xd051>
movl   $0xc,0x0(%ebp)
mov    $0xc,%ebx
mov    %esi,(%esp)
call   8049200 <free@plt>
xor    %eax,%eax
mov    %ebx,0x0(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049570 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    80567c1 <__sprintf_chk@plt+0xd051>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80493d0 <realloc@plt>
test   %eax,%eax
cmove  %esi,%eax
jmp    80567c1 <__sprintf_chk@plt+0xd051>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
cmpb   $0x0,(%ebx)
je     8056817 <__sprintf_chk@plt+0xd0a7>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8054210 <__sprintf_chk@plt+0xaaa0>
test   %eax,%eax
jne    8056830 <__sprintf_chk@plt+0xd0c0>
mov    %ebx,(%esp)
call   8049560 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8056880 <__sprintf_chk@plt+0xd110>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80496f0 <iconv_open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     8056894 <__sprintf_chk@plt+0xd124>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8056600 <__sprintf_chk@plt+0xce90>
test   %eax,%eax
mov    %eax,%ebx
je     8056898 <__sprintf_chk@plt+0xd128>
mov    %esi,(%esp)
call   80494e0 <iconv_close@plt>
test   %eax,%eax
jns    8056825 <__sprintf_chk@plt+0xd0b5>
call   8049570 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049200 <free@plt>
mov    %edi,(%esi)
jmp    8056825 <__sprintf_chk@plt+0xd0b5>
call   8049570 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %ebx,%ebx
jmp    8056825 <__sprintf_chk@plt+0xd0b5>
call   8049570 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   80494e0 <iconv_close@plt>
mov    %edi,(%ebx)
xor    %ebx,%ebx
jmp    8056825 <__sprintf_chk@plt+0xd0b5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     80568ef <__sprintf_chk@plt+0xd17f>
mov    %ebx,(%esp)
call   8058ae0 <__sprintf_chk@plt+0xf370>
mov    %eax,%edi
call   8049570 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049710 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049590 <fileno@plt>
test   %eax,%eax
js     8056988 <__sprintf_chk@plt+0xd218>
mov    %ebx,(%esp)
call   8049400 <__freading@plt>
test   %eax,%eax
jne    8056958 <__sprintf_chk@plt+0xd1e8>
mov    %ebx,(%esp)
call   8056ac0 <__sprintf_chk@plt+0xd350>
test   %eax,%eax
je     8056988 <__sprintf_chk@plt+0xd218>
call   8049570 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049250 <fclose@plt>
test   %edi,%edi
je     805694a <__sprintf_chk@plt+0xd1da>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049590 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049690 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    8056922 <__sprintf_chk@plt+0xd1b2>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049250 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    8056a00 <__sprintf_chk@plt+0xd290>
mov    0x805f5b4,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     8056aa8 <__sprintf_chk@plt+0xd338>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049520 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8056a20 <__sprintf_chk@plt+0xd2b0>
movl   $0x1,0x805f5b4
00
test   %ebx,%ebx
js     80569f7 <__sprintf_chk@plt+0xd287>
cmpl   $0xffffffff,0x805f5b4
je     8056a50 <__sprintf_chk@plt+0xd2e0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049520 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049570 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    80569e0 <__sprintf_chk@plt+0xd270>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80569a0 <__sprintf_chk@plt+0xd230>
test   %eax,%eax
mov    %eax,%ebx
js     80569f7 <__sprintf_chk@plt+0xd287>
movl   $0xffffffff,0x805f5b4
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049520 <fcntl@plt>
test   %eax,%eax
js     8056a84 <__sprintf_chk@plt+0xd314>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049520 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    80569f7 <__sprintf_chk@plt+0xd287>
call   8049570 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049710 <close@plt>
mov    %edi,(%esi)
jmp    80569f7 <__sprintf_chk@plt+0xd287>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80569a0 <__sprintf_chk@plt+0xd230>
mov    %eax,%ebx
jmp    80569ea <__sprintf_chk@plt+0xd27a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8056ad8 <__sprintf_chk@plt+0xd368>
mov    %ebx,(%esp)
call   8049400 <__freading@plt>
test   %eax,%eax
jne    8056ae8 <__sprintf_chk@plt+0xd378>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80491c0 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     8056ad8 <__sprintf_chk@plt+0xd368>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   8056b20 <__sprintf_chk@plt+0xd3b0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80491c0 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     8056b60 <__sprintf_chk@plt+0xd3f0>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049260 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    8056b3f <__sprintf_chk@plt+0xd3cf>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    8056b3f <__sprintf_chk@plt+0xd3cf>
mov    %ebx,(%esp)
call   8049590 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049690 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     8056ba7 <__sprintf_chk@plt+0xd437>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    8056b9f <__sprintf_chk@plt+0xd42f>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   8058c50 <__sprintf_chk@plt+0xf4e0>
test   %eax,%eax
js     8057cb0 <__sprintf_chk@plt+0xe540>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8058b70 <__sprintf_chk@plt+0xf400>
test   %eax,%eax
js     8057ea8 <__sprintf_chk@plt+0xe738>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     8056de8 <__sprintf_chk@plt+0xd678>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     8056de8 <__sprintf_chk@plt+0xd678>
cmp    $0xf9f,%edx
ja     80578f8 <__sprintf_chk@plt+0xe188>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4f4(%ebp)
00
test   %eax,%eax
je     805792b <__sprintf_chk@plt+0xe1bb>
mov    -0x4f0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4b4(%ebp)
mov    -0x418(%ebp),%eax
xor    %edx,%edx
mov    %edx,%edi
mov    %ebx,%edx
mov    -0x4bc(%ebp),%esi
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
je     805747b <__sprintf_chk@plt+0xdd0b>
sub    %edx,%ebx
mov    %ebx,%eax
add    %edi,%eax
mov    %eax,%ecx
mov    $0xffffffff,%eax
cmovae %ecx,%eax
mov    -0x4b4(%ebp),%ecx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%ecx
jae    8057578 <__sprintf_chk@plt+0xde08>
test   %ecx,%ecx
je     8057350 <__sprintf_chk@plt+0xdbe0>
js     8057e90 <__sprintf_chk@plt+0xe720>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%ecx
cmp    %ecx,%eax
cmovb  %ecx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     8057e90 <__sprintf_chk@plt+0xe720>
cmp    -0x4bc(%ebp),%esi
sete   -0x4d8(%ebp)
test   %esi,%esi
je     8056d35 <__sprintf_chk@plt+0xd5c5>
cmpb   $0x0,-0x4d8(%ebp)
je     8057360 <__sprintf_chk@plt+0xdbf0>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     8057e90 <__sprintf_chk@plt+0xe720>
test   %edi,%edi
jne    8057638 <__sprintf_chk@plt+0xdec8>
add    -0x4b0(%ebp),%edi
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8049220 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     8057ef0 <__sprintf_chk@plt+0xe780>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     8057390 <__sprintf_chk@plt+0xdc20>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     80578c8 <__sprintf_chk@plt+0xe158>
cmp    $0x6e,%dl
je     8057610 <__sprintf_chk@plt+0xdea0>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    8056e50 <__sprintf_chk@plt+0xd6e0>
cmp    $0x41,%dl
je     8056e50 <__sprintf_chk@plt+0xd6e0>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    8056e61 <__sprintf_chk@plt+0xd6f1>
lea    0x0(%esi,%eiz,1),%esi
call   8049570 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     8056e0b <__sprintf_chk@plt+0xd69b>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8056e23 <__sprintf_chk@plt+0xd6b3>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%ebx
xor    %gs:0x14,%ebx
jne    80587bb <__sprintf_chk@plt+0xf04b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     80579c8 <__sprintf_chk@plt+0xe258>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%ebx
mov    0x8(%eax),%eax
add    $0x1,%ebx
movb   $0x25,-0x1(%ebx)
test   $0x1,%al
je     8056e8a <__sprintf_chk@plt+0xd71a>
mov    -0x4c0(%ebp),%ecx
mov    %ecx,%ebx
add    $0x2,%ebx
movb   $0x27,0x1(%ecx)
test   $0x2,%al
je     8056e94 <__sprintf_chk@plt+0xd724>
movb   $0x2d,(%ebx)
add    $0x1,%ebx
test   $0x4,%al
je     8056e9e <__sprintf_chk@plt+0xd72e>
movb   $0x2b,(%ebx)
add    $0x1,%ebx
test   $0x8,%al
je     8056ea8 <__sprintf_chk@plt+0xd738>
movb   $0x20,(%ebx)
add    $0x1,%ebx
test   $0x10,%al
je     8056eb2 <__sprintf_chk@plt+0xd742>
movb   $0x23,(%ebx)
add    $0x1,%ebx
test   $0x40,%al
je     8056ebc <__sprintf_chk@plt+0xd74c>
movb   $0x49,(%ebx)
add    $0x1,%ebx
test   $0x20,%al
je     8056ec6 <__sprintf_chk@plt+0xd756>
movb   $0x30,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%esi
cmp    %esi,%eax
je     8056eea <__sprintf_chk@plt+0xd77a>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    -0x4ac(%ebp),%edi
mov    0x18(%edi),%eax
mov    0x1c(%edi),%esi
cmp    %esi,%eax
je     8056f0e <__sprintf_chk@plt+0xd79e>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     8056f34 <__sprintf_chk@plt+0xd7c4>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     8057680 <__sprintf_chk@plt+0xdf10>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
movzbl 0x24(%ecx),%eax
movb   $0x0,0x1(%ebx)
mov    %al,(%ebx)
mov    0x14(%ecx),%eax
cmp    $0xffffffff,%eax
je     80578f0 <__sprintf_chk@plt+0xe180>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     80578e0 <__sprintf_chk@plt+0xe170>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    0x4(%eax),%eax
lea    0x1(%edx),%edi
mov    %edi,-0x4e8(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%edi
mov    %edi,%eax
add    $0x2,%eax
cmp    %eax,%edi
mov    %eax,%ecx
mov    %eax,-0x4ec(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    8057099 <__sprintf_chk@plt+0xd929>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     8057d37 <__sprintf_chk@plt+0xe5c7>
js     8057024 <__sprintf_chk@plt+0xd8b4>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    8057038 <__sprintf_chk@plt+0xd8c8>
call   8049570 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    80580e8 <__sprintf_chk@plt+0xe978>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     8056de8 <__sprintf_chk@plt+0xd678>
mov    %eax,(%esp)
call   8049200 <free@plt>
jmp    8056df3 <__sprintf_chk@plt+0xd683>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     8056ff0 <__sprintf_chk@plt+0xd880>
or     $0xffffffff,%eax
lea    0x0(%esi),%esi
mov    -0x4ec(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4bc(%ebp),%eax
mov    -0x4b0(%ebp),%edi
cmp    %eax,%edi
sete   %al
test   %edi,%edi
mov    %eax,%esi
je     805706d <__sprintf_chk@plt+0xd8fd>
test   %al,%al
je     8057940 <__sprintf_chk@plt+0xe1d0>
mov    -0x4b4(%ebp),%eax
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8057990 <__sprintf_chk@plt+0xe220>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%edi
mov    -0x4b8(%ebp),%esi
movb   $0x0,(%edi,%esi,1)
call   8049570 <__errno_location@plt>
mov    -0x4b4(%ebp),%edi
mov    %ebx,-0x4b4(%ebp)
mov    %esi,%ebx
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4f8(%ebp)
mov    %edi,%esi
mov    $0x7fffffff,%eax
sub    %ebx,%esi
cmovs  %eax,%esi
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     80578c8 <__sprintf_chk@plt+0xe158>
jmp    *0x805b674(,%eax,4)
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     80575b0 <__sprintf_chk@plt+0xde40>
cmp    $0x2,%ecx
jne    8057530 <__sprintf_chk@plt+0xddc0>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     8057490 <__sprintf_chk@plt+0xdd20>
cmp    %edx,%esi
jbe    80571a9 <__sprintf_chk@plt+0xda39>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%ebx,1)
jne    80578c8 <__sprintf_chk@plt+0xe158>
cmp    %edx,%eax
jle    80571b5 <__sprintf_chk@plt+0xda45>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%esi
ja     80580c0 <__sprintf_chk@plt+0xe950>
cmp    $0x7fffffff,%esi
je     8058110 <__sprintf_chk@plt+0xe9a0>
test   %edi,%edi
mov    $0xffffffff,%eax
lea    (%edi,%edi,1),%ecx
cmovs  %eax,%ecx
add    -0x4ec(%ebp),%edx
cmp    %edx,%ebx
ja     80571ea <__sprintf_chk@plt+0xda7a>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%edi
jae    80570ca <__sprintf_chk@plt+0xd95a>
test   %edi,%edi
je     8057600 <__sprintf_chk@plt+0xde90>
js     8056ffb <__sprintf_chk@plt+0xd88b>
add    %edi,%edi
cmp    %eax,%edi
cmovb  %eax,%edi
cmp    $0xffffffff,%edi
je     8056ffb <__sprintf_chk@plt+0xd88b>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     8057338 <__sprintf_chk@plt+0xdbc8>
test   %dl,%dl
jne    8057338 <__sprintf_chk@plt+0xdbc8>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     8056ffb <__sprintf_chk@plt+0xd88b>
test   %dl,%dl
jne    8057960 <__sprintf_chk@plt+0xe1f0>
mov    %esi,-0x4b0(%ebp)
jmp    80570ca <__sprintf_chk@plt+0xd95a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     8057878 <__sprintf_chk@plt+0xe108>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    8057cc8 <__sprintf_chk@plt+0xe558>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
jne    805712c <__sprintf_chk@plt+0xd9bc>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x1c(%esp)
jmp    80575ba <__sprintf_chk@plt+0xde4a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80493f0 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
jmp    8057251 <__sprintf_chk@plt+0xdae1>
lea    0x0(%esi),%esi
movl   $0xc,-0x4b4(%ebp)
00
jmp    8056cf7 <__sprintf_chk@plt+0xd587>
nop
mov    -0x4b4(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   80493d0 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
jmp    8056d55 <__sprintf_chk@plt+0xd5e5>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%edi
cmp    %edi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%edi
cmp    %edi,-0x4b4(%ebp)
jae    8057442 <__sprintf_chk@plt+0xdcd2>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    8057848 <__sprintf_chk@plt+0xe0d8>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ebx
cmp    %ebx,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     80578d0 <__sprintf_chk@plt+0xe160>
test   %bl,%bl
jne    80578d0 <__sprintf_chk@plt+0xe160>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8057d08 <__sprintf_chk@plt+0xe598>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%ebx
mov    %eax,%esi
movb   $0x25,(%eax,%ebx,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%edx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
jne    8056cbf <__sprintf_chk@plt+0xd54f>
mov    %edi,-0x4b8(%ebp)
mov    %esi,-0x4b0(%ebp)
jmp    8056d81 <__sprintf_chk@plt+0xd611>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    8057670 <__sprintf_chk@plt+0xdf00>
test   %eax,%eax
jns    80571ad <__sprintf_chk@plt+0xda3d>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    8057e23 <__sprintf_chk@plt+0xe6b3>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     80574d0 <__sprintf_chk@plt+0xdd60>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     80574e8 <__sprintf_chk@plt+0xdd78>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8057500 <__sprintf_chk@plt+0xdd90>
mov    %eax,(%esp)
call   8049200 <free@plt>
test   %ebx,%ebx
jne    805751d <__sprintf_chk@plt+0xddad>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    8056e31 <__sprintf_chk@plt+0xd6c1>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%ecx
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b0(%ebp)
jmp    8056d6b <__sprintf_chk@plt+0xd5fb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    805777d <__sprintf_chk@plt+0xe00d>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%edi
jmp    8057202 <__sprintf_chk@plt+0xda92>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%ebx
lea    -0x12(%ebx),%edx
cmp    $0x4,%edx
ja     80578c8 <__sprintf_chk@plt+0xe158>
mov    0x4(%eax),%eax
jmp    *0x805b6bc(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     8056d6b <__sprintf_chk@plt+0xd5fb>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8049220 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
jmp    8056d6b <__sprintf_chk@plt+0xd5fb>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    80570ca <__sprintf_chk@plt+0xd95a>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    8057cb8 <__sprintf_chk@plt+0xe548>
test   $0xc,%al
je     8056f34 <__sprintf_chk@plt+0xd7c4>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
jmp    8056f2e <__sprintf_chk@plt+0xd7be>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     8058070 <__sprintf_chk@plt+0xe900>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    8057de8 <__sprintf_chk@plt+0xe678>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    805712c <__sprintf_chk@plt+0xd9bc>
jmp    80575b0 <__sprintf_chk@plt+0xde40>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
je     80575b0 <__sprintf_chk@plt+0xde40>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    8057536 <__sprintf_chk@plt+0xddc6>
mov    %ecx,0x20(%esp)
jmp    805713f <__sprintf_chk@plt+0xd9cf>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    805777d <__sprintf_chk@plt+0xe00d>
jmp    80575b0 <__sprintf_chk@plt+0xde40>
xchg   %ax,%ax
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     8058020 <__sprintf_chk@plt+0xe8b0>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    8057da8 <__sprintf_chk@plt+0xe638>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
lea    0x0(%esi),%esi
js     8056ff0 <__sprintf_chk@plt+0xd880>
shll   -0x4b4(%ebp)
jmp    80573d1 <__sprintf_chk@plt+0xdc61>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    8057454 <__sprintf_chk@plt+0xdce4>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
nop
call   80496d0 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    %eax,%esi
jmp    8057426 <__sprintf_chk@plt+0xdcb6>
nop
mov    %edx,-0x4e8(%ebp)
jmp    8056fa7 <__sprintf_chk@plt+0xd837>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    8056f70 <__sprintf_chk@plt+0xd800>
nop
cmp    $0xffffffff,%edx
je     8056de8 <__sprintf_chk@plt+0xd678>
mov    %edx,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     8056de8 <__sprintf_chk@plt+0xd678>
mov    %eax,-0x4f4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    8056c7f <__sprintf_chk@plt+0xd50f>
movl   $0x0,-0x4b4(%ebp)
00
jmp    8056c8d <__sprintf_chk@plt+0xd51d>
lea    0x0(%esi),%esi
mov    -0x4b4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
mov    %eax,%edi
jmp    805707d <__sprintf_chk@plt+0xd90d>
nop
test   %ebx,%ebx
je     8057261 <__sprintf_chk@plt+0xdaf1>
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    80570ca <__sprintf_chk@plt+0xd95a>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
je     8057093 <__sprintf_chk@plt+0xd923>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    8057099 <__sprintf_chk@plt+0xd929>
lea    0x0(%esi,%eiz,1),%esi
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   8058b10 <__sprintf_chk@plt+0xf3a0>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    8057a18 <__sprintf_chk@plt+0xe2a8>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     80579f3 <__sprintf_chk@plt+0xe283>
je     8057a1a <__sprintf_chk@plt+0xe2aa>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    8056e61 <__sprintf_chk@plt+0xd6f1>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
mov    0x8(%eax),%ebx
mov    %ebx,-0x4c4(%ebp)
mov    %eax,%ebx
mov    0xc(%eax),%eax
mov    0x10(%ebx),%ebx
cmp    %ebx,%eax
je     8058301 <__sprintf_chk@plt+0xeb91>
mov    -0x4ac(%ebp),%esi
mov    0x14(%esi),%edx
cmp    $0xffffffff,%edx
je     8057e48 <__sprintf_chk@plt+0xe6d8>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    0x4(%edx),%edi
movl   $0x1,-0x4ec(%ebp)
00
test   %edi,%edi
js     8058396 <__sprintf_chk@plt+0xec26>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     8058231 <__sprintf_chk@plt+0xeac1>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     80582c2 <__sprintf_chk@plt+0xeb52>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    0x4(%eax),%esi
test   %esi,%esi
js     8058231 <__sprintf_chk@plt+0xeac1>
test   %esi,%esi
jne    8058268 <__sprintf_chk@plt+0xeaf8>
mov    $0xc,%eax
cmp    %eax,%edi
jbe    80587cc <__sprintf_chk@plt+0xf05c>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     8056ff0 <__sprintf_chk@plt+0xd880>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%edx
ja     8058312 <__sprintf_chk@plt+0xeba2>
mov    -0x4ac(%ebp),%eax
mov    %edx,-0x4f8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4e8(%ebp)
call   8058b10 <__sprintf_chk@plt+0xf3a0>
mov    -0x4f8(%ebp),%edx
test   %eax,%eax
fldt   -0x4e8(%ebp)
je     8058178 <__sprintf_chk@plt+0xea08>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     8058287 <__sprintf_chk@plt+0xeb17>
movb   $0x4e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x41,0x1(%edx)
movb   $0x4e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
mov    -0x4ec(%ebp),%esi
mov    %ecx,%ebx
sub    %edx,%ebx
test   %esi,%esi
je     8057b9d <__sprintf_chk@plt+0xe42d>
cmp    %ebx,%edi
jbe    8057b9d <__sprintf_chk@plt+0xe42d>
mov    %edx,%eax
sub    %ecx,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%ecx,%edi,1),%ebx
je     80584f1 <__sprintf_chk@plt+0xed81>
test   %edi,%edi
je     8057b9b <__sprintf_chk@plt+0xe42b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,%ebx
movb   $0x20,-0x1(%ecx)
jne    8057b90 <__sprintf_chk@plt+0xe420>
sub    %edx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    80578c8 <__sprintf_chk@plt+0xe158>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     805825a <__sprintf_chk@plt+0xeaea>
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
add    %ebx,%edi
cmovae %edi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    8057c6b <__sprintf_chk@plt+0xe4fb>
mov    -0x4b4(%ebp),%ecx
test   %ecx,%ecx
je     805835c <__sprintf_chk@plt+0xebec>
js     8056ff0 <__sprintf_chk@plt+0xd880>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     8057c33 <__sprintf_chk@plt+0xe4c3>
cmpb   $0x0,-0x4d8(%ebp)
je     805836b <__sprintf_chk@plt+0xebfb>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    8058548 <__sprintf_chk@plt+0xedd8>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x4b8(%ebp)
call   8049220 <memcpy@plt>
mov    -0x4b8(%ebp),%edx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%edx
je     8057ca5 <__sprintf_chk@plt+0xe535>
mov    %edx,(%esp)
call   8049200 <free@plt>
mov    -0x4b0(%ebp),%esi
jmp    8057454 <__sprintf_chk@plt+0xdce4>
xor    %eax,%eax
jmp    8056e31 <__sprintf_chk@plt+0xd6c1>
nop
movb   $0x4c,(%ebx)
add    $0x1,%ebx
jmp    8056f34 <__sprintf_chk@plt+0xd7c4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
nop
test   %bl,%bl
je     805743c <__sprintf_chk@plt+0xdccc>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    8057442 <__sprintf_chk@plt+0xdcd2>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     8056ff0 <__sprintf_chk@plt+0xd880>
mov    $0xc,%eax
jmp    8057038 <__sprintf_chk@plt+0xd8c8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
movl   $0x0,0x4(%eax)
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    8057454 <__sprintf_chk@plt+0xdce4>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %edi,%ecx
mov    %cl,(%eax)
jmp    8057454 <__sprintf_chk@plt+0xdce4>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %di,(%eax)
jmp    8057454 <__sprintf_chk@plt+0xdce4>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
mov    -0x4b0(%ebp),%eax
cmp    %eax,-0x4bc(%ebp)
je     80574be <__sprintf_chk@plt+0xdd4e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
jmp    80574be <__sprintf_chk@plt+0xdd4e>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     8057e6c <__sprintf_chk@plt+0xe6fc>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    8057e50 <__sprintf_chk@plt+0xe6e0>
movl   $0x1,-0x4ec(%ebp)
00
jmp    8057a72 <__sprintf_chk@plt+0xe302>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049570 <__errno_location@plt>
mov    %esi,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    8056ffb <__sprintf_chk@plt+0xd88b>
xchg   %ax,%ax
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     8057ec0 <__sprintf_chk@plt+0xe750>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8057ed8 <__sprintf_chk@plt+0xe768>
mov    %eax,(%esp)
call   8049200 <free@plt>
call   8049570 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    8056e31 <__sprintf_chk@plt+0xd6c1>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
mov    %eax,%edx
lea    0x1(%edi),%ebx
cmp    %edi,%ebx
cmovae %ebx,%edx
cmp    -0x4b4(%ebp),%edx
jbe    8057fac <__sprintf_chk@plt+0xe83c>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     80583a4 <__sprintf_chk@plt+0xec34>
mov    -0x4b4(%ebp),%esi
lea    (%esi,%esi,1),%edx
test   %esi,%esi
cmovns %edx,%eax
mov    %eax,-0x4b4(%ebp)
cmp    %edi,%ebx
mov    $0xffffffff,%eax
cmovae %ebx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    8057f53 <__sprintf_chk@plt+0xe7e3>
cmp    %edi,%ebx
jb     8056ff0 <__sprintf_chk@plt+0xd880>
mov    %ebx,-0x4b4(%ebp)
cmpl   $0xffffffff,-0x4b4(%ebp)
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     8057f8c <__sprintf_chk@plt+0xe81c>
cmpb   $0x0,-0x4ac(%ebp)
je     80583b3 <__sprintf_chk@plt+0xec43>
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     8056ff0 <__sprintf_chk@plt+0xd880>
test   %edi,%edi
jne    80585a5 <__sprintf_chk@plt+0xee35>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%edi,1)
je     8057fca <__sprintf_chk@plt+0xe85a>
cmp    %ebx,-0x4b4(%ebp)
ja     80583cc <__sprintf_chk@plt+0xec5c>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     8057fdc <__sprintf_chk@plt+0xe86c>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     8057ff4 <__sprintf_chk@plt+0xe884>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     805800c <__sprintf_chk@plt+0xe89c>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x4f0(%ebp),%eax
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    8056e31 <__sprintf_chk@plt+0xd6c1>
nop
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8049190 <__snprintf_chk@plt>
jmp    8057185 <__sprintf_chk@plt+0xda15>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    -0x4f8(%ebp),%ebx
add    %edx,%edi
mov    %ebx,(%eax)
jmp    8057ca5 <__sprintf_chk@plt+0xe535>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     8057009 <__sprintf_chk@plt+0xd899>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
jmp    8057009 <__sprintf_chk@plt+0xd899>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    80583ea <__sprintf_chk@plt+0xec7a>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     8058130 <__sprintf_chk@plt+0xe9c0>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     8058148 <__sprintf_chk@plt+0xe9d8>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     8058160 <__sprintf_chk@plt+0xe9f0>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    8056e31 <__sprintf_chk@plt+0xd6c1>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     80582a4 <__sprintf_chk@plt+0xeb34>
lea    0x1(%edx),%eax
fchs
mov    %eax,-0x4e8(%ebp)
movb   $0x2d,(%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    805840f <__sprintf_chk@plt+0xec9f>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     80578c8 <__sprintf_chk@plt+0xe158>
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4fc(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
mov    -0x4e8(%ebp),%eax
ja     8058588 <__sprintf_chk@plt+0xee18>
movb   $0x49,(%eax)
lea    0x3(%eax),%ecx
movb   $0x4e,0x1(%eax)
movb   $0x46,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
lea    0x0(%esi),%esi
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    8057b5f <__sprintf_chk@plt+0xe3ef>
mov    -0x4ac(%ebp),%eax
xor    %esi,%esi
movzbl 0x24(%eax),%edx
mov    $0x6,%eax
and    $0xffffffdf,%edx
cmp    $0x41,%dl
mov    $0x12,%edx
cmovne %eax,%esi
mov    $0xc,%al
cmovne %edx,%eax
jmp    8057abc <__sprintf_chk@plt+0xe34c>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%edi
jmp    8057c6b <__sprintf_chk@plt+0xe4fb>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    8057abc <__sprintf_chk@plt+0xe34c>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    8057acf <__sprintf_chk@plt+0xe35f>
movb   $0x6e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x61,0x1(%edx)
movb   $0x6e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
jmp    8057b5f <__sprintf_chk@plt+0xe3ef>
testb  $0x4,-0x4c4(%ebp)
je     8058338 <__sprintf_chk@plt+0xebc8>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x2b,(%edx)
jmp    80581b7 <__sprintf_chk@plt+0xea47>
add    $0x1,%edx
xor    %esi,%esi
cmp    %edx,%ebx
je     8057ab7 <__sprintf_chk@plt+0xe347>
nop
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     80582ec <__sprintf_chk@plt+0xeb7c>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    80582d0 <__sprintf_chk@plt+0xeb60>
jmp    8057aaf <__sprintf_chk@plt+0xe33f>
xor    %edi,%edi
movl   $0x0,-0x4ec(%ebp)
00
jmp    8057a72 <__sprintf_chk@plt+0xe302>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     8056ff0 <__sprintf_chk@plt+0xd880>
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    8057af1 <__sprintf_chk@plt+0xe381>
jmp    8056ff0 <__sprintf_chk@plt+0xd880>
testb  $0x8,-0x4c4(%ebp)
mov    %edx,-0x4e8(%ebp)
je     80581b7 <__sprintf_chk@plt+0xea47>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x20,(%edx)
jmp    80581b7 <__sprintf_chk@plt+0xea47>
movl   $0xc,-0x4b4(%ebp)
00
jmp    8057bf3 <__sprintf_chk@plt+0xe483>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
jmp    8057c4f <__sprintf_chk@plt+0xe4df>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    8057a72 <__sprintf_chk@plt+0xe302>
movl   $0xc,-0x4b4(%ebp)
00
jmp    8057f33 <__sprintf_chk@plt+0xe7c3>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
mov    %eax,%esi
jmp    8057f96 <__sprintf_chk@plt+0xe826>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    8057fca <__sprintf_chk@plt+0xe85a>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     805811e <__sprintf_chk@plt+0xe9ae>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049200 <free@plt>
jmp    805811e <__sprintf_chk@plt+0xe9ae>
fstp   %st(0)
jp     80578c8 <__sprintf_chk@plt+0xe158>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    80584a8 <__sprintf_chk@plt+0xed38>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    8058454 <__sprintf_chk@plt+0xece4>
test   %esi,%esi
lea    0x1(%eax),%ecx
je     8058218 <__sprintf_chk@plt+0xeaa8>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049610 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     80587ad <__sprintf_chk@plt+0xf03d>
lea    (%ebx,%esi,1),%ecx
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    8058498 <__sprintf_chk@plt+0xed28>
jmp    8058218 <__sprintf_chk@plt+0xeaa8>
cmp    $0x45,%al
jne    80585d3 <__sprintf_chk@plt+0xee63>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    8058698 <__sprintf_chk@plt+0xef28>
test   %esi,%esi
jne    8058698 <__sprintf_chk@plt+0xef28>
lea    0x1(%eax),%esi
mov    -0x4ac(%ebp),%eax
lea    0x4(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
movb   $0x30,0x3(%esi)
mov    %al,(%esi)
jmp    8058218 <__sprintf_chk@plt+0xeaa8>
testb  $0x20,-0x4c4(%ebp)
je     805865d <__sprintf_chk@plt+0xeeed>
mov    -0x4e8(%ebp),%esi
test   %esi,%esi
je     805865d <__sprintf_chk@plt+0xeeed>
cmp    %ecx,%esi
jae    805852d <__sprintf_chk@plt+0xedbd>
mov    %ebx,%eax
mov    %edx,-0x4c4(%ebp)
sub    $0x1,%ecx
movzbl (%ecx),%edx
sub    $0x1,%eax
cmp    %esi,%ecx
mov    %dl,(%eax)
jne    8058518 <__sprintf_chk@plt+0xeda8>
mov    -0x4c4(%ebp),%edx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     8057b9b <__sprintf_chk@plt+0xe42b>
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x30,-0x1(%ecx)
jne    8058538 <__sprintf_chk@plt+0xedc8>
jmp    8057b9b <__sprintf_chk@plt+0xe42b>
cmpb   $0x0,-0x4d8(%ebp)
je     8057c65 <__sprintf_chk@plt+0xe4f5>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
mov    %esi,-0x4b0(%ebp)
jmp    8057c6b <__sprintf_chk@plt+0xe4fb>
movb   $0x69,(%eax)
lea    0x3(%eax),%ecx
movb   $0x6e,0x1(%eax)
movb   $0x66,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
jmp    8058218 <__sprintf_chk@plt+0xeaa8>
cmpb   $0x0,-0x4ac(%ebp)
je     8057fa6 <__sprintf_chk@plt+0xe836>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    8057fac <__sprintf_chk@plt+0xe83c>
cmp    $0x47,%al
jne    80586f0 <__sprintf_chk@plt+0xef80>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
lea    0x1(%eax),%ecx
je     8058218 <__sprintf_chk@plt+0xeaa8>
lea    -0x1(%esi),%eax
xor    %ecx,%ecx
test   %esi,%esi
cmovne %eax,%ecx
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049610 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%esi
mov    $0x2e,%eax
mov    %esi,%ecx
test   %cl,%cl
mov    -0x4fc(%ebp),%ecx
cmovne %esi,%eax
mov    -0x4e8(%ebp),%esi
test   %ecx,%ecx
mov    %al,0x1(%esi)
je     80587ad <__sprintf_chk@plt+0xf03d>
add    %ebx,%ecx
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    805864d <__sprintf_chk@plt+0xeedd>
jmp    8058218 <__sprintf_chk@plt+0xeaa8>
cmp    %ecx,%edx
mov    %ebx,%esi
mov    %ecx,%eax
jae    8058679 <__sprintf_chk@plt+0xef09>
lea    0x0(%esi),%esi
sub    $0x1,%eax
movzbl (%eax),%ecx
sub    $0x1,%esi
cmp    %edx,%eax
mov    %cl,(%esi)
jne    8058668 <__sprintf_chk@plt+0xeef8>
mov    %edx,%ecx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     8057b9b <__sprintf_chk@plt+0xe42b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x20,-0x1(%ecx)
jne    8058688 <__sprintf_chk@plt+0xef18>
jmp    8057b9b <__sprintf_chk@plt+0xe42b>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049610 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     80587b4 <__sprintf_chk@plt+0xf044>
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    80586e0 <__sprintf_chk@plt+0xef70>
jmp    80584d1 <__sprintf_chk@plt+0xed61>
cmp    $0x41,%al
jne    80578c8 <__sprintf_chk@plt+0xe158>
mov    -0x4e8(%ebp),%ebx
mov    %ebx,%eax
add    $0x2,%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%ebx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%ebx)
jne    8058763 <__sprintf_chk@plt+0xeff3>
test   %esi,%esi
jne    8058763 <__sprintf_chk@plt+0xeff3>
mov    %ebx,%esi
add    $0x3,%esi
mov    -0x4ac(%ebp),%eax
lea    0x3(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
add    $0xf,%eax
mov    %al,(%esi)
mov    -0x4fc(%ebp),%eax
mov    %eax,-0x4e8(%ebp)
jmp    8058218 <__sprintf_chk@plt+0xeaa8>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
lea    0x4(%eax),%ebx
call   8049610 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x3(%ecx)
je     80587c5 <__sprintf_chk@plt+0xf055>
add    %ebx,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    80587a0 <__sprintf_chk@plt+0xf030>
jmp    8058738 <__sprintf_chk@plt+0xefc8>
mov    %ebx,%ecx
jmp    8058218 <__sprintf_chk@plt+0xeaa8>
mov    %ebx,%esi
jmp    80584d1 <__sprintf_chk@plt+0xed61>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80492b0 <__stack_chk_fail@plt>
mov    %ebx,%esi
jmp    8058738 <__sprintf_chk@plt+0xefc8>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    8057acf <__sprintf_chk@plt+0xe35f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
lea    0x8(%eax),%edx
cmp    %edx,%eax
ja     8058838 <__sprintf_chk@plt+0xf0c8>
mov    %edx,(%esp)
call   80493f0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     8058838 <__sprintf_chk@plt+0xf0c8>
lea    0x8(%eax),%ebx
mov    $0xff00ff01,%edx
movl   $0x1415fb4a,0x4(%eax)
mov    %ebx,%eax
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    %eax,%edx
mov    0x805f5c0(,%eax,4),%eax
mov    %ebx,0x805f5c0(,%edx,4)
mov    %eax,(%ecx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebx
mov    0x8(%esp),%ebx
test   %ebx,%ebx
je     8058852 <__sprintf_chk@plt+0xf0e2>
cmpl   $0x1415fb4a,-0x4(%ebx)
je     8058858 <__sprintf_chk@plt+0xf0e8>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    $0xff00ff01,%edx
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    0x805f5c0(,%eax,4),%ecx
test   %ecx,%ecx
je     8058852 <__sprintf_chk@plt+0xf0e2>
cmp    %ecx,%ebx
jne    8058886 <__sprintf_chk@plt+0xf116>
jmp    80588a5 <__sprintf_chk@plt+0xf135>
cmp    %edx,%ebx
je     8058890 <__sprintf_chk@plt+0xf120>
mov    %edx,%ecx
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    8058880 <__sprintf_chk@plt+0xf110>
jmp    8058852 <__sprintf_chk@plt+0xf0e2>
nop
sub    $0x8,%ecx
mov    -0x8(%ebx),%eax
sub    $0x8,%ebx
mov    %eax,(%ecx)
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    8049200 <free@plt>
lea    0x805f5c0(,%eax,4),%ecx
jmp    8058893 <__sprintf_chk@plt+0xf123>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
call   8049330 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8058a58 <__sprintf_chk@plt+0xf2e8>
mov    %ebx,0x24(%esp)
xor    %ebx,%ebx
movb   $0x0,0x14(%esp)
lea    0x30(%esp),%edi
cmpb   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
lea    0x18(%esp),%esi
movl   $0x0,0x1c(%esp)
movb   $0x0,0x20(%esp)
jne    8058990 <__sprintf_chk@plt+0xf220>
mov    0x24(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x805b640(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8058a10 <__sprintf_chk@plt+0xf2a0>
movl   $0x1,0x28(%esp)
movsbl (%edx),%eax
movb   $0x1,0x2c(%esp)
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
movb   $0x1,0x20(%esp)
test   %eax,%eax
jne    8058975 <__sprintf_chk@plt+0xf205>
mov    %ebx,%eax
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    8058ad1 <__sprintf_chk@plt+0xf361>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x28(%esp)
movb   $0x0,0x2c(%esp)
mov    0x28(%esp),%eax
add    $0x1,%ebx
add    %eax,0x24(%esp)
movb   $0x0,0x20(%esp)
cmpb   $0x0,0x14(%esp)
je     8058908 <__sprintf_chk@plt+0xf198>
call   8049330 <__ctype_get_mb_cur_max@plt>
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8051a80 <__sprintf_chk@plt+0x8310>
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049380 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x28(%esp)
je     8058968 <__sprintf_chk@plt+0xf1f8>
cmp    $0xfffffffe,%eax
je     8058a28 <__sprintf_chk@plt+0xf2b8>
test   %eax,%eax
jne    80589ec <__sprintf_chk@plt+0xf27c>
mov    0x24(%esp),%eax
movl   $0x1,0x28(%esp)
cmpb   $0x0,(%eax)
jne    8058aad <__sprintf_chk@plt+0xf33d>
mov    0x30(%esp),%edx
test   %edx,%edx
jne    8058a89 <__sprintf_chk@plt+0xf319>
mov    %esi,(%esp)
movb   $0x1,0x2c(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     805893b <__sprintf_chk@plt+0xf1cb>
movb   $0x0,0x14(%esp)
jmp    805893b <__sprintf_chk@plt+0xf1cb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049230 <mbsinit@plt>
test   %eax,%eax
je     8058a65 <__sprintf_chk@plt+0xf2f5>
movb   $0x1,0x14(%esp)
jmp    8058990 <__sprintf_chk@plt+0xf220>
xchg   %ax,%ax
mov    0x24(%esp),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   80494c0 <strlen@plt>
movb   $0x0,0x2c(%esp)
movb   $0x0,0x20(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
add    %eax,0x24(%esp)
jmp    8058985 <__sprintf_chk@plt+0xf215>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   80494c0 <strlen@plt>
jmp    805894a <__sprintf_chk@plt+0xf1da>
movl   $0x805b6d0,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805ac92,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805b6d0,0xc(%esp)
movl   $0xb0,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805acc0,(%esp)
call   8049730 <__assert_fail@plt>
movl   $0x805b6d0,0xc(%esp)
movl   $0xaf,0x8(%esp)
movl   $0x805ac84,0x4(%esp)
movl   $0x805aca9,(%esp)
call   8049730 <__assert_fail@plt>
call   80492b0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80569a0 <__sprintf_chk@plt+0xd230>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     8058b40 <__sprintf_chk@plt+0xf3d0>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     8058b50 <__sprintf_chk@plt+0xf3e0>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     8058bb2 <__sprintf_chk@plt+0xf442>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     8058c40 <__sprintf_chk@plt+0xf4d0>
mov    (%eax),%ebx
jmp    *0x805b6ec(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     8058b88 <__sprintf_chk@plt+0xf418>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    8058ba8 <__sprintf_chk@plt+0xf438>
movl   $0x805b6e3,0x4(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    8058ba8 <__sprintf_chk@plt+0xf438>
movl   $0x805b748,0x4(%eax)
jmp    8058ba8 <__sprintf_chk@plt+0xf438>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    8058cca <__sprintf_chk@plt+0xf55a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     8058cf8 <__sprintf_chk@plt+0xf588>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    8058cc0 <__sprintf_chk@plt+0xf550>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    8058dac <__sprintf_chk@plt+0xf63c>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    8058d9e <__sprintf_chk@plt+0xf62e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     8058e38 <__sprintf_chk@plt+0xf6c8>
cmp    $0x2b,%dl
je     8058e48 <__sprintf_chk@plt+0xf6d8>
cmp    $0x20,%dl
je     8058e58 <__sprintf_chk@plt+0xf6e8>
cmp    $0x23,%dl
je     8058e68 <__sprintf_chk@plt+0xf6f8>
cmp    $0x30,%dl
nop
je     8058e78 <__sprintf_chk@plt+0xf708>
cmp    $0x49,%dl
jne    8058e88 <__sprintf_chk@plt+0xf718>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    8058d58 <__sprintf_chk@plt+0xf5e8>
orl    $0x1,0x8(%ebx)
jmp    8058d98 <__sprintf_chk@plt+0xf628>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    8058db0 <__sprintf_chk@plt+0xf640>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    8058d4c <__sprintf_chk@plt+0xf5dc>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    8058de2 <__sprintf_chk@plt+0xf672>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     8058df9 <__sprintf_chk@plt+0xf689>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    8058de0 <__sprintf_chk@plt+0xf670>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     8059484 <__sprintf_chk@plt+0xfd14>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    8058d4c <__sprintf_chk@plt+0xf5dc>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    8058d98 <__sprintf_chk@plt+0xf628>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    8058d98 <__sprintf_chk@plt+0xf628>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    8058d98 <__sprintf_chk@plt+0xf628>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    8058d98 <__sprintf_chk@plt+0xf628>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    8058d98 <__sprintf_chk@plt+0xf628>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     8059114 <__sprintf_chk@plt+0xf9a4>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     8058ed4 <__sprintf_chk@plt+0xf764>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     805971a <__sprintf_chk@plt+0xffaa>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    8058eb0 <__sprintf_chk@plt+0xf740>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     80590c7 <__sprintf_chk@plt+0xf957>
add    $0x1,%esi
xor    %eax,%eax
jmp    8058f0e <__sprintf_chk@plt+0xf79e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     8058f20 <__sprintf_chk@plt+0xf7b0>
cmp    $0x6c,%dl
je     8058f28 <__sprintf_chk@plt+0xf7b8>
cmp    $0x6a,%dl
je     8058f30 <__sprintf_chk@plt+0xf7c0>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     8058f08 <__sprintf_chk@plt+0xf798>
cmp    $0x74,%dl
jne    8058f38 <__sprintf_chk@plt+0xf7c8>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    8058ee8 <__sprintf_chk@plt+0xf778>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    8058f08 <__sprintf_chk@plt+0xf798>
or     $0x4,%eax
jmp    8058f08 <__sprintf_chk@plt+0xf798>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    8058f08 <__sprintf_chk@plt+0xf798>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    8058f08 <__sprintf_chk@plt+0xf798>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     8059484 <__sprintf_chk@plt+0xfd14>
movzbl %cl,%ecx
jmp    *0x805b764(,%ecx,4)
movl   $0x11,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     8059620 <__sprintf_chk@plt+0xfeb0>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    805951b <__sprintf_chk@plt+0xfdab>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x28(%esp),%ecx
cmp    %eax,%edx
jb     8058fb7 <__sprintf_chk@plt+0xf847>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    8058fa0 <__sprintf_chk@plt+0xf830>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x28(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    80595a2 <__sprintf_chk@plt+0xfe32>
mov    0x24(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    8058ffa <__sprintf_chk@plt+0xf88a>
mov    0x4(%eax),%eax
jmp    8058cca <__sprintf_chk@plt+0xf55a>
mov    0x20(%esp),%eax
test   %eax,%eax
js     8059088 <__sprintf_chk@plt+0xf918>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     8059088 <__sprintf_chk@plt+0xf918>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     8059642 <__sprintf_chk@plt+0xfed2>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80493d0 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     8059088 <__sprintf_chk@plt+0xf918>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     8059721 <__sprintf_chk@plt+0xffb1>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    8058cca <__sprintf_chk@plt+0xf55a>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     80595b8 <__sprintf_chk@plt+0xfe48>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    80595b8 <__sprintf_chk@plt+0xfe48>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     805909d <__sprintf_chk@plt+0xf92d>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     80590b2 <__sprintf_chk@plt+0xf942>
mov    %eax,(%esp)
call   8049200 <free@plt>
call   8049570 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    8058ceb <__sprintf_chk@plt+0xf57b>
cmpb   $0x2a,0x1(%esi)
je     805936e <__sprintf_chk@plt+0xfbfe>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     80590f6 <__sprintf_chk@plt+0xf986>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    80590e8 <__sprintf_chk@plt+0xf978>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    8058edd <__sprintf_chk@plt+0xf76d>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    80591b8 <__sprintf_chk@plt+0xfa48>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     8059484 <__sprintf_chk@plt+0xfd14>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    805905c <__sprintf_chk@plt+0xf8ec>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %edi,%eax
ja     8059197 <__sprintf_chk@plt+0xfa27>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    8059180 <__sprintf_chk@plt+0xfa10>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    8059612 <__sprintf_chk@plt+0xfea2>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    8058ed4 <__sprintf_chk@plt+0xf764>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    80591c0 <__sprintf_chk@plt+0xfa50>
cmp    $0x24,%dl
jne    8059138 <__sprintf_chk@plt+0xf9c8>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     80591f2 <__sprintf_chk@plt+0xfa82>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    80591db <__sprintf_chk@plt+0xfa6b>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     8059484 <__sprintf_chk@plt+0xfd14>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    8059155 <__sprintf_chk@plt+0xf9e5>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xf,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
cmp    $0xf,%eax
movl   $0x16,0x24(%esp)
jg     8058f60 <__sprintf_chk@plt+0xf7f0>
test   $0x4,%al
jne    8058f60 <__sprintf_chk@plt+0xf7f0>
cmp    $0x7,%eax
movl   $0x15,0x24(%esp)
jg     8058f60 <__sprintf_chk@plt+0xf7f0>
test   $0x2,%al
movl   $0x12,0x24(%esp)
jne    8058f60 <__sprintf_chk@plt+0xf7f0>
and    $0x1,%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
addl   $0x14,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     80594cb <__sprintf_chk@plt+0xfd5b>
test   $0x4,%al
jne    80594cb <__sprintf_chk@plt+0xfd5b>
cmp    $0x7,%eax
jg     8059748 <__sprintf_chk@plt+0xffd8>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805978c <__sprintf_chk@plt+0x1001c>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x3,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xd,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
movl   $0x10,0x24(%esp)
movb   $0x73,0x1c(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
movl   $0xe,0x24(%esp)
movb   $0x63,0x1c(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
cmp    $0xf,%eax
jle    8059651 <__sprintf_chk@plt+0xfee1>
mov    %dl,0x1c(%esp)
movl   $0xc,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
cmp    $0xf,%eax
jg     80594dc <__sprintf_chk@plt+0xfd6c>
test   $0x4,%al
jne    80594dc <__sprintf_chk@plt+0xfd6c>
cmp    $0x7,%eax
jg     8059759 <__sprintf_chk@plt+0xffe9>
test   $0x2,%al
jne    805979d <__sprintf_chk@plt+0x1002d>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x4,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     80594ed <__sprintf_chk@plt+0xfd7d>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    805939b <__sprintf_chk@plt+0xfc2b>
cmp    $0x24,%dl
jne    80594ed <__sprintf_chk@plt+0xfd7d>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     80593cd <__sprintf_chk@plt+0xfc5d>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    80593b6 <__sprintf_chk@plt+0xfc46>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     8059484 <__sprintf_chk@plt+0xfd14>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     805966b <__sprintf_chk@plt+0xfefb>
mov    0x14(%esp),%eax
test   %eax,%eax
js     8059088 <__sprintf_chk@plt+0xf918>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     805942a <__sprintf_chk@plt+0xfcba>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     8059088 <__sprintf_chk@plt+0xf918>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8059088 <__sprintf_chk@plt+0xf918>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     80597ae <__sprintf_chk@plt+0x1003e>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80493d0 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     805908c <__sprintf_chk@plt+0xf91c>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     80597c6 <__sprintf_chk@plt+0x10056>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    8059676 <__sprintf_chk@plt+0xff06>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x30(%esp)
je     80594a1 <__sprintf_chk@plt+0xfd31>
mov    %eax,(%esp)
call   8049200 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     80594b6 <__sprintf_chk@plt+0xfd46>
mov    %eax,(%esp)
call   8049200 <free@plt>
call   8049570 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    8058ceb <__sprintf_chk@plt+0xf57b>
mov    %dl,0x1c(%esp)
movl   $0x9,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    %dl,0x1c(%esp)
movl   $0xa,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    80593fb <__sprintf_chk@plt+0xfc8b>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     8059484 <__sprintf_chk@plt+0xfd14>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    80593fb <__sprintf_chk@plt+0xfc8b>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     8059088 <__sprintf_chk@plt+0xf918>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     8059540 <__sprintf_chk@plt+0xfdd0>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     8059088 <__sprintf_chk@plt+0xf918>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8059088 <__sprintf_chk@plt+0xf918>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x28(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     80596d2 <__sprintf_chk@plt+0xff62>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80493d0 <realloc@plt>
mov    0x28(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     805908f <__sprintf_chk@plt+0xf91f>
cmp    %eax,0x30(%esp)
je     80596e8 <__sprintf_chk@plt+0xff78>
mov    0x68(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %ecx,0x4(%eax)
jmp    8058f87 <__sprintf_chk@plt+0xf817>
cmp    %eax,0x24(%esp)
je     8058fce <__sprintf_chk@plt+0xf85e>
jmp    805948f <__sprintf_chk@plt+0xfd1f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     8059088 <__sprintf_chk@plt+0xf918>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     8059739 <__sprintf_chk@plt+0xffc9>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   80493d0 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     805908c <__sprintf_chk@plt+0xf91c>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805976a <__sprintf_chk@plt+0xfffa>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    805916a <__sprintf_chk@plt+0xf9fa>
cmp    $0x5,%eax
je     8058ed1 <__sprintf_chk@plt+0xf761>
jmp    805948f <__sprintf_chk@plt+0xfd1f>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     8059484 <__sprintf_chk@plt+0xfd14>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    8058f72 <__sprintf_chk@plt+0xf802>
mov    %edx,(%esp)
call   80493f0 <malloc@plt>
mov    %eax,%esi
jmp    8059037 <__sprintf_chk@plt+0xf8c7>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %esi,%eax
ja     80596a0 <__sprintf_chk@plt+0xff30>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    8059689 <__sprintf_chk@plt+0xff19>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    80596bf <__sprintf_chk@plt+0xff4f>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    8058edd <__sprintf_chk@plt+0xf76d>
cmp    $0x5,%eax
jne    805948f <__sprintf_chk@plt+0xfd1f>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    8058edd <__sprintf_chk@plt+0xf76d>
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     80597bd <__sprintf_chk@plt+0x1004d>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8049220 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ecx
jmp    8059592 <__sprintf_chk@plt+0xfe22>
xor    %eax,%eax
jmp    8058ec1 <__sprintf_chk@plt+0xf751>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049220 <memcpy@plt>
jmp    805904c <__sprintf_chk@plt+0xf8dc>
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    %eax,%edx
jmp    80595e9 <__sprintf_chk@plt+0xfe79>
mov    %dl,0x1c(%esp)
movl   $0x7,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    %dl,0x1c(%esp)
movl   $0x8,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049220 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    8059602 <__sprintf_chk@plt+0xfe92>
mov    %dl,0x1c(%esp)
movl   $0x1,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    %dl,0x1c(%esp)
movl   $0x2,0x24(%esp)
jmp    8058f60 <__sprintf_chk@plt+0xf7f0>
mov    %eax,(%esp)
call   80493f0 <malloc@plt>
mov    %eax,%edx
jmp    805945b <__sprintf_chk@plt+0xfceb>
mov    0x30(%esp),%eax
jmp    805908f <__sprintf_chk@plt+0xf91f>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8049220 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    8059474 <__sprintf_chk@plt+0xfd04>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    8059840 <__sprintf_chk@plt+0x100d0>
cmp    %ebp,%ecx
ja     8059878 <__sprintf_chk@plt+0x10108>
test   %ecx,%ecx
mov    %ecx,%esi
jne    8059828 <__sprintf_chk@plt+0x100b8>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     8059868 <__sprintf_chk@plt+0x100f8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8059888 <__sprintf_chk@plt+0x10118>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    80598f8 <__sprintf_chk@plt+0x10188>
cmp    %edx,%eax
jb     80598f8 <__sprintf_chk@plt+0x10188>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     8059908 <__sprintf_chk@plt+0x10198>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    80598e9 <__sprintf_chk@plt+0x10179>
cmp    (%esp),%esi
je     8059908 <__sprintf_chk@plt+0x10198>
mov    %edi,%eax
xor    %edx,%edx
jmp    805986c <__sprintf_chk@plt+0x100fc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    805986c <__sprintf_chk@plt+0x100fc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    8059968 <__sprintf_chk@plt+0x101f8>
cmp    %edi,%esi
jbe    80599a0 <__sprintf_chk@plt+0x10230>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     80599c0 <__sprintf_chk@plt+0x10250>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    80599d0 <__sprintf_chk@plt+0x10260>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     8059a68 <__sprintf_chk@plt+0x102f8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    80599b1 <__sprintf_chk@plt+0x10241>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    805995b <__sprintf_chk@plt+0x101eb>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     8059a54 <__sprintf_chk@plt+0x102e4>
cmp    %eax,0xc(%esp)
jb     8059a50 <__sprintf_chk@plt+0x102e0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    8059a2e <__sprintf_chk@plt+0x102be>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    8059a2e <__sprintf_chk@plt+0x102be>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     8059981 <__sprintf_chk@plt+0x10211>
jmp    8059991 <__sprintf_chk@plt+0x10221>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a9b0 <__sprintf_chk@plt+0x1240>
add    $0x5575,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8049150 <__snprintf_chk@plt-0x40>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8059ad9 <__sprintf_chk@plt+0x10369>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8059ab8 <__sprintf_chk@plt+0x10348>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8059af0 <__sprintf_chk@plt+0x10380>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804a9b0 <__sprintf_chk@plt+0x1240>
add    $0x54fa,%ebx
sub    $0x18,%esp
lea    0x1a4(%ebx),%eax
test   %eax,%eax
je     8059b38 <__sprintf_chk@plt+0x103c8>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049390 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    8059b1b <__sprintf_chk@plt+0x103ab>
push   %ebx
sub    $0x8,%esp
call   804a9b0 <__sprintf_chk@plt+0x1240>
add    $0x54bb,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
and    $0x73252d73,%eax
add    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
add    %dh,0x72(%ebx)
arpl   %bp,(%edi)
fs
data16
arpl   %ax,%cs:(%eax)
and    %esp,(%edx)
imul   $0x2064,0x6c(%ebp),%sp
jne    8059bfb <_IO_stdin_used+0x97>
gs and %fs:%gs:(%eax),%al
sub    $0x33323130,%eax
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
popa
bound  %esp,0x64(%ebx)
gs
inc    %cx
inc    %edx
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
add    %ah,(%ecx)
and    0x61(%edx),%ah
and    %ah,%fs:0x69(%esi)
gs
insb   (%dx),%es:(%edi)
fs
pop    %edi
je     8059c2b <_IO_stdin_used+0xc7>
jo     8059c19 <_IO_stdin_used+0xb5>
and    (%eax),%al
and    $0x2566302e,%eax
and    $0x75222100,%eax
outsb  %ds:(%esi),(%dx)
push   $0x6c646e61
gs and %ah,%fs:%gs:0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %fs:(%eax),%al
and    %esp,(%edx)
gs
insl   (%dx),%es:(%edi)
jo     8059c4a <_IO_stdin_used+0xe6>
jns    8059bf8 <_IO_stdin_used+0x94>
arpl   %sp,0x6c(%ebp)
insb   (%dx),%es:(%edi)
and    (%eax),%al
inc    %esp
inc    %esi
add    %cl,(%edx)
push   %edx
gs
jo     8059c55 <_IO_stdin_used+0xf1>
jb     8059c5c <_IO_stdin_used+0xf8>
and    %ah,0x75622073
addr16 jae 8059c11 <_IO_stdin_used+0xad>
je     8059c62 <_IO_stdin_used+0xfe>
and    %ah,0x62000a73
jne    8059c62 <_IO_stdin_used+0xfe>
sub    $0x65726f63,%eax
jne    8059c76 <_IO_stdin_used+0x112>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     8059c74 <_IO_stdin_used+0x110>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    8059c5e <_IO_stdin_used+0xfa>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     8059c8f <_IO_stdin_used+0x12b>
jne    8059ca0 <_IO_stdin_used+0x13c>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
push   %ebx
imul   $0x61764100,0x65(%edx),%edi
imul   $0x766e6922,0x21(%eax,%eax,1),%ebp
popa
insb   (%dx),%es:(%edi)
imul   $0x646c6569,0x66(%eax,%eiz,1),%esp
and    (%eax),%al
das
jne    8059cc6 <_IO_stdin_used+0x162>
jb     8059c84 <_IO_stdin_used+0x120>
jae    8059cbf <_IO_stdin_used+0x15b>
popa
jb     8059cbf <_IO_stdin_used+0x15b>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x42(%ecx)
cmp    0x46(%ecx),%ch
cmp    0x48(%eax),%ch
imul   $0x54,0x50(%ebp,%ebp,2),%ebp
je     8059cab <_IO_stdin_used+0x147>
jbe    8059ceb <_IO_stdin_used+0x187>
cmp    (%eax),%al
sub    $0x74756f2d,%eax
jo     8059cf1 <_IO_stdin_used+0x18d>
je     8059c7e <_IO_stdin_used+0x11a>
sub    $0x61770069,%eax
jb     8059cf3 <_IO_stdin_used+0x18f>
imul   $0x2500203a,0x67(%esi),%ebp
jae    8059cb3 <_IO_stdin_used+0x14f>
jae    8059c90 <_IO_stdin_used+0x12c>
sub    $0x502d0054,%eax
add    %dl,0x72(%edi,%ebp,2)
bound  %ebp,-0x3d(%edx)
mov    $0x72,%dh
outsb  %ds:(%esi),(%dx)
and    %al,0x72(%edi)
popa
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8059d15 <_IO_stdin_used+0x1b1>
add    %dl,%fs:0x72(%edi,%ebp,2)
bound  %ebp,0x6f(%edx)
jb     8059d1f <_IO_stdin_used+0x1bb>
and    %al,0x72(%edi)
popa
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8059d27 <_IO_stdin_used+0x1c3>
add    %dl,%fs:0x61(%eax)
jne    8059d2b <_IO_stdin_used+0x1c7>
and    %al,0x67(%ebp)
addr16
gs
jb     8059d3a <_IO_stdin_used+0x1d6>
add    %al,0x76(%ecx,%eiz,2)
imul   $0x654b6361,0x4d(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jp     8059d3e <_IO_stdin_used+0x1da>
add    %ah,%gs:0x0(%esi,%eiz,2)
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %al,0x5f(%esi,%eax,2)
inc    %edx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
pop    %edi
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
add    %al,0x61(%ebx)
jo     8059d5d <_IO_stdin_used+0x1f9>
arpl   %bp,0x74(%ecx)
jns    8059d01 <_IO_stdin_used+0x19d>
and    %esp,(%edx)
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x65(%eax)
popa
fs
gs
jb     8059d71 <_IO_stdin_used+0x20d>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %fs:%gs:(%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
data16
jae    8059d1d <_IO_stdin_used+0x1b9>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    8059d9d <_IO_stdin_used+0x239>
gs
insl   (%dx),%es:(%edi)
jae    8059d4d <_IO_stdin_used+0x1e9>
jo     8059da1 <_IO_stdin_used+0x23d>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8059d9a <_IO_stdin_used+0x236>
add    %dl,%fs:0x61(%edi)
jb     8059da9 <_IO_stdin_used+0x245>
imul   $0x6100203a,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x2d(%ebx)
jae    8059db6 <_IO_stdin_used+0x252>
jp     8059db4 <_IO_stdin_used+0x250>
add    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    8059d57 <_IO_stdin_used+0x1f3>
push   $0x6e616d75
sub    $0x64616572,%eax
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jae    8059dd1 <_IO_stdin_used+0x26d>
add    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
add    %ch,0x65(%ebp)
addr16 popa
bound  %edi,0x74(%ecx)
gs
jae    8059d79 <_IO_stdin_used+0x215>
jo     8059dea <_IO_stdin_used+0x286>
jb     8059df1 <_IO_stdin_used+0x28d>
popa
bound  %ebp,0x6c(%ecx)
imul   $0x6e697270,0x0(%ecx,%edi,2),%esi
je     8059db8 <_IO_stdin_used+0x254>
je     8059e06 <_IO_stdin_used+0x2a2>
jo     8059df4 <_IO_stdin_used+0x290>
add    %ch,0x6f(%esi)
sub    $0x636e7973,%eax
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x65707974,%eax
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8059daa <_IO_stdin_used+0x246>
jbe    8059e11 <_IO_stdin_used+0x2ad>
jb     8059e21 <_IO_stdin_used+0x2bd>
imul   $0x756f7300,0x6e(%edi),%ebp
jb     8059e1a <_IO_stdin_used+0x2b6>
add    %al,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8059e38 <_IO_stdin_used+0x2d4>
jae    8059e35 <_IO_stdin_used+0x2d1>
gs
insl   (%dx),%es:(%edi)
add    %ah,0x73(%esi)
je     8059e41 <_IO_stdin_used+0x2dd>
jo     8059e2f <_IO_stdin_used+0x2cb>
add    %dl,0x70(%ecx,%edi,2)
add    %al,%gs:0x76(%ecx)
popa
imul   $0x6900656c,0x62(%ecx,%eiz,2),%ebp
je     8059e4c <_IO_stdin_used+0x2e8>
je     8059e40 <_IO_stdin_used+0x2dc>
insb   (%dx),%es:(%edi)
add    %cl,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    8059de8 <_IO_stdin_used+0x284>
imul   $0x49006465,0x73(%ebp),%esi
push   %ebp
jae    8059e57 <_IO_stdin_used+0x2f3>
add    %ch,%fs:0x61(%ecx)
jbe    8059e59 <_IO_stdin_used+0x2f5>
imul   $0x65657246,0x49(%eax,%eax,1),%ebp
add    %ch,0x70(%ecx)
arpl   %sp,0x6e(%ebp)
je     8059e08 <_IO_stdin_used+0x2a4>
dec    %ecx
push   %ebp
jae    8059e71 <_IO_stdin_used+0x30d>
and    $0x72617400,%eax
addr16
gs
je     8059e15 <_IO_stdin_used+0x2b1>
dec    %ebp
outsl  %ds:(%esi),(%dx)
jne    8059e87 <_IO_stdin_used+0x323>
je     8059e80 <_IO_stdin_used+0x31c>
and    %ch,%fs:0x6e(%edi)
add    %ah,(%eax)
mov    $0x4,%bh
or     %dh,0x5d0804b6(%eax)
mov    $0x4,%dh
or     %al,-0x4a(%esi)
add    $0x8,%al
jle    8059de7 <_IO_stdin_used+0x283>
add    $0x8,%al
lds    -0x49a2f7fc(%esi),%esi
add    $0x8,%al
inc    %esi
mov    $0x4,%dh
or     %bh,-0x4b(%esi)
add    $0x8,%al
lds    -0x48caf7fc(%esi),%esi
add    $0x8,%al
fbld   -0x5f7ff7fc(%eax)
add    $0x8,%al
icebp
popf
add    $0x8,%al
cmp    %ah,-0x5ee3f7fc(%ecx)
add    $0x8,%al
addr16
gs
je     8059ec3 <_IO_stdin_used+0x35f>
fs
gs
jbe    8059e68 <_IO_stdin_used+0x304>
addr16
gs
je     8059ecb <_IO_stdin_used+0x367>
imul   $0x5f64,0x6c(%ebp),%sp
insb   (%dx),%es:(%edi)
imul   $0x6c6c6100,0x74(%ebx),%esi
outsl  %ds:(%esi),(%dx)
arpl   %bx,0x66(%edi)
imul   $0x65640064,0x6c(%ebp),%esp
arpl   %bp,0x64(%edi)
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jne    8059f01 <_IO_stdin_used+0x39d>
jo     8059f04 <_IO_stdin_used+0x3a0>
je     8059ef0 <_IO_stdin_used+0x38c>
popa
jb     8059efb <_IO_stdin_used+0x397>
inc    %ecx
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
inc    %ebp
popf
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
push   %eax
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
push   %edi
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
popfw
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
imul   $0x0,0x805(%ebp),%ebx
00
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,-0x63(%edi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x63890000(%eax,%eax,1)
add    $0x208,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x79000000(%ebx)
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
test   %ebx,0x805(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x8059d(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x70000000(%ecx)
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x25000000(%eax)
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x60000000(%edx)
popf
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bl,0x108059d(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
popf
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%esi)
(bad)
ljmp   *0x8059d(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%ebp)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %dl,0x79(%edx,%esi,2)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     8059ff4 <_IO_stdin_used+0x490>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805a03d <_IO_stdin_used+0x4d9>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     805a04c <_IO_stdin_used+0x4e8>
popa
je     805a04b <_IO_stdin_used+0x4e7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bl,%cs:0x46(%ebx)
dec    %ecx
dec    %esp
inc    %ebp
pop    %ebp
cs cs or %cs:(%eax),%al
add    %al,(%eax)
add    %dl,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     805a031 <_IO_stdin_used+0x4cd>
imul   $0x616d726f,0x66(%esi),%ebp
je     805a083 <_IO_stdin_used+0x51f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    805a096 <_IO_stdin_used+0x532>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805a0a4 <_IO_stdin_used+0x540>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%edi)
and    %dh,0x68(%edi)
imul   $0x63616520,0x68(%ebx),%esp
push   $0x4c494620
inc    %ebp
and    %dh,0x65(%edx)
jae    805a0b3 <_IO_stdin_used+0x54f>
fs
gs
jae    805a07a <_IO_stdin_used+0x516>
or     0x72(%edi),%ch
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805a0d3 <_IO_stdin_used+0x56f>
gs
insl   (%dx),%es:(%edi)
jae    805a083 <_IO_stdin_used+0x51f>
bound  %edi,0x20(%ecx)
fs
gs
popaw
jne    805a0d8 <_IO_stdin_used+0x574>
je     805a09c <_IO_stdin_used+0x538>
or     (%eax),%al
or     0x61(%ebp),%cl
outsb  %ds:(%esi),(%dx)
fs
popa
je     805a0e7 <_IO_stdin_used+0x583>
jb     805a0f3 <_IO_stdin_used+0x58f>
and    %ah,0x72(%ecx)
addr16 jne 805a0ed <_IO_stdin_used+0x589>
outsb  %gs:(%esi),(%dx)
je     805a0f7 <_IO_stdin_used+0x593>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     805a0fa <_IO_stdin_used+0x596>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805a0b5 <_IO_stdin_used+0x551>
popa
jb     805a0fd <_IO_stdin_used+0x599>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     805a10f <_IO_stdin_used+0x5ab>
jb     805a11b <_IO_stdin_used+0x5b7>
and    %ah,0x6f(%esi)
jb     805a0c7 <_IO_stdin_used+0x563>
jae    805a111 <_IO_stdin_used+0x5ad>
outsl  %ds:(%esi),(%dx)
jb     805a120 <_IO_stdin_used+0x5bc>
and    %ch,0x70(%edi)
je     805a11a <_IO_stdin_used+0x5b6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805a0d5 <_IO_stdin_used+0x571>
je     805a126 <_IO_stdin_used+0x5c2>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c61
sub    $0x206c6c61,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x6564756c,0x63(%esi),%ebp
and    %ah,0x6d(%ebp,%esi,2)
insl   (%dx),%es:(%edi)
jns    805a102 <_IO_stdin_used+0x59e>
imul   $0x7973,0x20(%ebp,%eiz,2),%bp
jae    805a15f <_IO_stdin_used+0x5fb>
gs
insl   (%dx),%es:(%edi)
jae    805a0f9 <_IO_stdin_used+0x595>
and    %ah,(%eax)
sub    $0x2d202c42,%eax
sub    $0x636f6c62,%eax
imul   $0x3d,0x657a6973,%ebp
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
and    %ah,(%eax)
jae    805a16d <_IO_stdin_used+0x609>
popa
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%ebx)
jp     805a177 <_IO_stdin_used+0x613>
jae    805a134 <_IO_stdin_used+0x5d0>
bound  %edi,0x20(%ecx)
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     805a187 <_IO_stdin_used+0x623>
and    %dh,0x72(%eax)
imul   $0x20676e69,0x74(%esi),%ebp
je     805a196 <_IO_stdin_used+0x632>
gs
insl   (%dx),%es:(%edi)
and    %ah,%cs:(%eax)
inc    %ebp
cs
addr16
cs
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%edi)
sub    $0x20274d42,%eax
jo     805a1ce <_IO_stdin_used+0x66a>
imul   $0x69732073,0x74(%esi),%ebp
jp     805a1ca <_IO_stdin_used+0x666>
jae    805a187 <_IO_stdin_used+0x623>
imul   $0x74696e75,0x20(%esi),%ebp
jae    805a190 <_IO_stdin_used+0x62c>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,(%ecx)
sub    $0x30,%al
xor    $0x38,%al
sub    $0x35,%al
aaa
and    %ah,%ss:0x79(%edx)
je     805a1e6 <_IO_stdin_used+0x682>
jae    805a1b1 <_IO_stdin_used+0x64d>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
gs and %dl,%gs:0x49(%ebx)
pop    %edx
inc    %ebp
and    %ah,0x6f(%esi)
jb     805a219 <_IO_stdin_used+0x6b5>
popa
je     805a1cf <_IO_stdin_used+0x66b>
bound  %esp,0x6c(%ebp)
outsl  %ds:(%esi),(%dx)
ja     805a1e3 <_IO_stdin_used+0x67f>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x746f742d
popa
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
fs
jne    805a237 <_IO_stdin_used+0x6d3>
and    %ah,%gs:0x20(%ecx)
addr16 jb 805a23c <_IO_stdin_used+0x6d8>
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x74(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x2d202c68
sub    $0x616d7568,%eax
outsb  %ds:(%esi),(%dx)
sub    $0x64616572,%eax
popa
bound  %ebp,0x20(%ebp,%eiz,2)
and    %dh,0x72(%eax)
imul   $0x7a697320,0x74(%esi),%ebp
gs
jae    805a228 <_IO_stdin_used+0x6c4>
imul   $0x616d7568,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
fs
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
jb     805a28b <_IO_stdin_used+0x727>
popa
je     805a241 <_IO_stdin_used+0x6dd>
sub    %ah,0x2e(%ebp)
addr16
cs
sub    $0x20,%al
xor    %ecx,0x20(%ebx)
xor    (%ebx),%dh
xor    $0x4d,%al
and    %dh,(%edx)
inc    %edi
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c48,%eax
sub    $0x20206973,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x65736977,0x65(%ebx),%ebp
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %dh,0x73(%ebp)
and    %dh,%gs:0x6f(%eax)
ja     805a2c7 <_IO_stdin_used+0x763>
jb     805a2d7 <_IO_stdin_used+0x773>
and    %ch,0x66(%edi)
and    %dh,(%ecx)
xor    %dh,(%eax)
xor    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a291 <_IO_stdin_used+0x72d>
xor    %esi,(%eax)
xor    (%edx,%ecx,1),%dh
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c69,%eax
sub    $0x646f6e69,%eax
gs
jae    805a2a7 <_IO_stdin_used+0x743>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x73(%ecx,%ebp,2)
je     805a2b5 <_IO_stdin_used+0x751>
imul   $0x69206564,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jb     805a30e <_IO_stdin_used+0x7aa>
popa
je     805a30d <_IO_stdin_used+0x7a9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
jae    805a31f <_IO_stdin_used+0x7bb>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
jne    805a32d <_IO_stdin_used+0x7c9>
popa
or     %gs:(%bx,%si),%ah
and    %ch,0x2020206b
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6b(%ecx,%ebp,2)
and    %ch,%gs:0x6f6c622d
arpl   %bp,0x2d(%ebx)
jae    805a34e <_IO_stdin_used+0x7ea>
jp     805a34c <_IO_stdin_used+0x7e8>
cmp    $0x200a4b31,%eax
and    %ch,0x2d202c6c
sub    $0x61636f6c,%eax
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x69747369,0x6c(%eax,%eiz,1),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%si)
and    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805a397 <_IO_stdin_used+0x833>
gs
insl   (%dx),%es:(%edi)
jae    805a331 <_IO_stdin_used+0x7cd>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d6f6e2d,%eax
jae    805a3ad <_IO_stdin_used+0x849>
outsb  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     805a366 <_IO_stdin_used+0x802>
imul   $0x20656b6f,0x76(%esi),%ebp
jae    805a3c8 <_IO_stdin_used+0x864>
outsb  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
bound  %esp,0x66(%ebp)
outsl  %ds:(%esi),(%dx)
jb     805a3bd <_IO_stdin_used+0x859>
and    %ah,0x65(%edi)
je     805a3d1 <_IO_stdin_used+0x86d>
imul   $0x61737520,0x67(%esi),%ebp
and    %ch,%gs:0x6e(%bx,%di)
outsw  %ds:(%esi),(%dx)
and    %ch,(%eax)
fs
gs
popaw
jne    805a3df <_IO_stdin_used+0x87b>
je     805a39e <_IO_stdin_used+0x83a>
or     (%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x74756f2d
jo     805a3fa <_IO_stdin_used+0x896>
je     805a3e2 <_IO_stdin_used+0x87e>
cmp    $0x4c454946,%eax
inc    %esp
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
pop    %ebp
and    %ah,(%eax)
jne    805a40a <_IO_stdin_used+0x8a6>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     805a411 <_IO_stdin_used+0x8ad>
jne    805a417 <_IO_stdin_used+0x8b3>
and    %ah,0x6f(%esi)
jb     805a415 <_IO_stdin_used+0x8b1>
popa
je     805a3cb <_IO_stdin_used+0x867>
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
bound  %edi,0x20(%ecx)
inc    %esi
dec    %ecx
inc    %ebp
dec    %esp
inc    %esp
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x72(%edi)
and    %dh,0x72(%eax)
imul   $0x6c6c6120,0x74(%esi),%ebp
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
fs
jae    805a415 <_IO_stdin_used+0x8b1>
imul   $0x4c454946,0x20(%esi),%esp
inc    %esp
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
and    %ch,0x73(%ecx)
and    %ch,0x6d(%edi)
imul   $0x200a2e64,0x65(%esp,%esi,2),%esi
and    %ch,0x2d202c50
sub    $0x74726f70,%eax
popa
bound  %ebp,0x6c(%ecx)
imul   $0x20202020,0x20(%ecx,%edi,2),%esi
jne    805a49c <_IO_stdin_used+0x938>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
and    %ch,0x75(%edi)
je     805a4a9 <_IO_stdin_used+0x945>
jne    805a4af <_IO_stdin_used+0x94b>
and    %ah,0x6f(%esi)
jb     805a4ad <_IO_stdin_used+0x949>
popa
je     805a44d <_IO_stdin_used+0x8e9>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e79732d,%eax
arpl   %sp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e(%ecx)
jbe    805a4ce <_IO_stdin_used+0x96a>
imul   $0x73,0x20(%ebp),%esp
jns    805a4d3 <_IO_stdin_used+0x96f>
arpl   %sp,(%eax)
bound  %esp,0x66(%ebp)
outsl  %ds:(%esi),(%dx)
jb     805a4d2 <_IO_stdin_used+0x96e>
and    %ah,0x65(%edi)
je     805a4e6 <_IO_stdin_used+0x982>
imul   $0x61737520,0x67(%esi),%ebp
and    %ch,%gs:0x6e(%bx,%di)
outsw  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ch,0x2d202c74
sub    $0x65707974,%eax
cmp    $0x45505954,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x69747369,0x6c(%eax,%eiz,1),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%si)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805a527 <_IO_stdin_used+0x9c3>
gs
insl   (%dx),%es:(%edi)
jae    805a4d7 <_IO_stdin_used+0x973>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%edi,2)
and    %dl,%gs:0x50(%ecx,%ebx,2)
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c54
sub    $0x6e697270,%eax
je     805a4ff <_IO_stdin_used+0x99b>
je     805a54d <_IO_stdin_used+0x9e9>
jo     805a53b <_IO_stdin_used+0x9d7>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     805a550 <_IO_stdin_used+0x9ec>
imul   $0x6c696620,0x74(%esi),%ebp
and    %dh,%gs:0x79(%ebx)
jae    805a55f <_IO_stdin_used+0x9fb>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
or     %gs:(%eax),%ah
and    %ch,0x2d202c78
sub    $0x6c637865,%eax
jne    805a565 <_IO_stdin_used+0xa01>
gs
sub    $0x65707974,%eax
cmp    $0x45505954,%eax
and    %ah,(%eax)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x69747369,0x6c(%eax,%eiz,1),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%si)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805a59d <_IO_stdin_used+0xa39>
gs
insl   (%dx),%es:(%edi)
jae    805a54d <_IO_stdin_used+0x9e9>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805a551 <_IO_stdin_used+0x9ed>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%edi,2)
and    %dl,%gs:0x50(%ecx,%ebx,2)
inc    %ebp
or     (%eax),%ah
and    %ch,0x20202076
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
imul   $0x6465726f,0x6e(%edi),%esp
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     805a591 <_IO_stdin_used+0xa2d>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     805a5e7 <_IO_stdin_used+0xa83>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    805a60a <_IO_stdin_used+0xaa6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    805a61c <_IO_stdin_used+0xab8>
jo     805a61f <_IO_stdin_used+0xabb>
je     805a5cc <_IO_stdin_used+0xa68>
jbe    805a613 <_IO_stdin_used+0xaaf>
jb     805a623 <_IO_stdin_used+0xabf>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     805a627 <_IO_stdin_used+0xac3>
popa
je     805a626 <_IO_stdin_used+0xac2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x440a0000,0x0(%edx,%ecx,1),%esi
imul   $0x2079616c,0x70(%ebx),%esi
jbe    805a638 <_IO_stdin_used+0xad4>
insb   (%dx),%es:(%edi)
jne    805a63f <_IO_stdin_used+0xadb>
jae    805a5fc <_IO_stdin_used+0xa98>
popa
jb     805a644 <_IO_stdin_used+0xae0>
and    %ch,0x6e(%ecx)
and    %dh,0x6e(%ebp)
imul   $0x7420666f,0x20(%ebx,%esi,2),%esi
push   $0x69662065
jb     805a667 <_IO_stdin_used+0xb03>
je     805a616 <_IO_stdin_used+0xab2>
popa
jbe    805a65a <_IO_stdin_used+0xaf6>
imul   $0x5320656c,0x62(%ecx,%eiz,2),%ebp
dec    %ecx
pop    %edx
inc    %ebp
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x6f6c622d
arpl   %bp,0x2d(%ebx)
jae    805a67d <_IO_stdin_used+0xb19>
jp     805a67b <_IO_stdin_used+0xb17>
sub    $0xa,%al
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %ah,0x4c425f73
dec    %edi
inc    %ebx
dec    %ebx
pop    %edi
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
sub    $0x20,%al
inc    %edx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
pop    %edi
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
and    %ah,0x6e(%ecx)
and    %al,%fs:0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
and    %ah,0x6e(%ebp)
jbe    805a6b5 <_IO_stdin_used+0xb51>
jb     805a6bd <_IO_stdin_used+0xb59>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805a674 <_IO_stdin_used+0xb10>
jbe    805a6b7 <_IO_stdin_used+0xb53>
jb     805a6c1 <_IO_stdin_used+0xb5d>
popa
bound  %ebp,0x73(%ebp,%eiz,2)
or     %cs:0x74(%edi),%cl
push   $0x69777265
jae    805a6cd <_IO_stdin_used+0xb69>
sub    $0x20,%al
jne    805a6da <_IO_stdin_used+0xb76>
imul   $0x61666564,0x20(%ebx,%esi,2),%esi
jne    805a6e2 <_IO_stdin_used+0xb7e>
je     805a698 <_IO_stdin_used+0xb34>
je     805a6e9 <_IO_stdin_used+0xb85>
and    %dh,(%ecx)
xor    %dh,(%edx)
xor    $0x20,%al
bound  %edi,0x74(%ecx)
gs
jae    805a6a6 <_IO_stdin_used+0xb42>
sub    %ch,0x72(%edi)
and    %dh,0x69203231
data16
and    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
and    %ch,0x73(%ecx)
and    %dh,0x65(%ebx)
je     805a6d1 <_IO_stdin_used+0xb6d>
or     %cs:(%eax),%al
add    %cl,(%edx)
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ch,0x6e(%ecx)
je     805a721 <_IO_stdin_used+0xbbd>
addr16
gs
jb     805a6e0 <_IO_stdin_used+0xb7c>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x70(%edi)
je     805a731 <_IO_stdin_used+0xbcd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x6e(%ebp)
imul   $0x6d617865,0x28(%eax,%eiz,1),%esi
jo     805a745 <_IO_stdin_used+0xbe1>
cmp    %gs:(%eax),%ah
xor    %esi,(%eax)
dec    %ebp
and    %ch,0x73(%ecx)
and    %dh,(%ecx)
xor    %ch,(%edx)
xor    %esi,(%eax)
xor    (%edx,%ebp,1),%dh
xor    %esi,(%eax)
xor    (%ecx,%ebp,1),%dh
and    %ah,%cs:(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x20657261,0xa(%ebx,%esi,2),%esi
dec    %ebx
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
inc    %edi
sub    $0x20,%al
push   %esp
sub    $0x20,%al
push   %eax
sub    $0x20,%al
inc    %ebp
sub    $0x20,%al
pop    %edx
sub    $0x20,%al
pop    %ecx
and    %ch,(%eax)
jo     805a786 <_IO_stdin_used+0xc22>
ja     805a77e <_IO_stdin_used+0xc1a>
jb     805a78e <_IO_stdin_used+0xc2a>
and    %ch,0x66(%edi)
and    %dh,(%ecx)
xor    %dh,(%edx)
xor    $0x29,%al
and    %ch,0x72(%edi)
and    %cl,0x42(%ebx)
sub    $0x20,%al
dec    %ebp
inc    %edx
sub    $0x20,%al
cs cs and %ch,%cs:(%eax)
jo     805a7a6 <_IO_stdin_used+0xc42>
ja     805a79e <_IO_stdin_used+0xc3a>
jb     805a7ae <_IO_stdin_used+0xc4a>
and    %ch,0x66(%edi)
and    %dh,(%ecx)
xor    %dh,(%eax)
xor    %ch,(%ecx)
or     %cs:(%eax),%al
add    %cl,(%edx)
inc    %esi
dec    %ecx
inc    %ebp
dec    %esp
inc    %esp
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
sub    $0x61706573,%eax
jb     805a7c6 <_IO_stdin_used+0xc62>
je     805a7cc <_IO_stdin_used+0xc68>
and    %ch,%fs:0x73(%ecx,%ebp,2)
je     805a78e <_IO_stdin_used+0xc2a>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    805a7e3 <_IO_stdin_used+0xc7f>
outsb  %ds:(%esi),(%dx)
jae    805a799 <_IO_stdin_used+0xc35>
je     805a7ea <_IO_stdin_used+0xc86>
and    %ah,0x65(%edx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x64(%ebp,%esi,2)
gs fs and %ah,%cs:%fs:%gs:(%eax)
push   %esi
popa
insb   (%dx),%es:(%edi)
imul   $0x646c6569,0x66(%edx,%ecx,1),%esp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    805a7bc <_IO_stdin_used+0xc58>
popa
jb     805a804 <_IO_stdin_used+0xca0>
cmp    (%eax),%ah
daa
jae    805a813 <_IO_stdin_used+0xcaf>
jne    805a818 <_IO_stdin_used+0xcb4>
arpl   %sp,0x27(%ebp)
sub    $0x20,%al
daa
data16
jae    805a823 <_IO_stdin_used+0xcbf>
jns    805a821 <_IO_stdin_used+0xcbd>
gs
daa
sub    $0x20,%al
daa
imul   $0x2c276c61,0x74(%edi,%ebp,2),%esi
and    %ah,(%edi)
imul   $0x2c276465,0x73(%ebp),%esi
and    %ah,(%edi)
imul   $0x276c6961,0x76(%ecx),%esp
sub    $0x20,%al
daa
imul   $0x27746e65,0x63(%eax),%esi
sub    $0xa,%al
daa
jae    805a848 <_IO_stdin_used+0xce4>
jp     805a846 <_IO_stdin_used+0xce2>
daa
sub    $0x20,%al
daa
jne    805a85a <_IO_stdin_used+0xcf6>
gs
fs
daa
sub    $0x20,%al
daa
popa
jbe    805a851 <_IO_stdin_used+0xced>
imul   $0x63702720,0x2c(%edi,%eiz,1),%ebp
outsb  %gs:(%esi),(%dx)
je     805a823 <_IO_stdin_used+0xcbf>
and    %ah,0x6e(%ecx)
and    %ah,%fs:(%edi)
je     805a865 <_IO_stdin_used+0xd01>
jb     805a86d <_IO_stdin_used+0xd09>
gs
je     805a830 <_IO_stdin_used+0xccc>
and    %ch,(%eax)
jae    805a872 <_IO_stdin_used+0xd0e>
and    %ch,%gs:0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
sub    %ebp,%gs:0xa
push   $0x3a707474
das
das
ja     805a89c <_IO_stdin_used+0xd38>
ja     805a855 <_IO_stdin_used+0xcf1>
outsb  %ds:(%si),(%dx)
jne    805a859 <_IO_stdin_used+0xcf5>
outsl  %ds:(%esi),(%dx)
jb     805a895 <_IO_stdin_used+0xd31>
das
jae    805a8a0 <_IO_stdin_used+0xd3c>
data16
je     805a8ab <_IO_stdin_used+0xd47>
popa
jb     805a89c <_IO_stdin_used+0xd38>
das
arpl   %bp,0x72(%edi)
gs
jne    805a8b2 <_IO_stdin_used+0xd4e>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     805a8ab <_IO_stdin_used+0xd47>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     805a871 <_IO_stdin_used+0xd0d>
jne    805a8c6 <_IO_stdin_used+0xd62>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     805a8d7 <_IO_stdin_used+0xd73>
popa
jb     805a8c8 <_IO_stdin_used+0xd64>
cmp    (%eax),%ah
cmp    $0x68,%al
je     805a8dd <_IO_stdin_used+0xd79>
jo     805a8a5 <_IO_stdin_used+0xd41>
das
das
ja     805a8e6 <_IO_stdin_used+0xd82>
ja     805a89f <_IO_stdin_used+0xd3b>
outsb  %ds:(%si),(%dx)
jne    805a8a3 <_IO_stdin_used+0xd3f>
outsl  %ds:(%esi),(%dx)
jb     805a8df <_IO_stdin_used+0xd7b>
das
addr16
gs
je     805a8e5 <_IO_stdin_used+0xd81>
gs
insb   (%dx),%es:(%edi)
jo     805a8b0 <_IO_stdin_used+0xd4c>
or     %ds:(%eax),%al
push   %edx
gs
jo     805a8f7 <_IO_stdin_used+0xd93>
jb     805a8fe <_IO_stdin_used+0xd9a>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    805a900 <_IO_stdin_used+0xd9c>
popa
je     805a900 <_IO_stdin_used+0xd9c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 805a8bf <_IO_stdin_used+0xd5b>
je     805a910 <_IO_stdin_used+0xdac>
and    %bh,(%eax,%ebp,2)
je     805a91a <_IO_stdin_used+0xdb6>
jo     805a8e2 <_IO_stdin_used+0xd7e>
das
das
je     805a91e <_IO_stdin_used+0xdba>
popa
outsb  %ds:(%esi),(%dx)
jae    805a91c <_IO_stdin_used+0xdb8>
popa
je     805a91c <_IO_stdin_used+0xdb8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     805a929 <_IO_stdin_used+0xdc5>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     805a927 <_IO_stdin_used+0xdc3>
das
je     805a928 <_IO_stdin_used+0xdc4>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     805a8f0 <_IO_stdin_used+0xd8c>
arpl   %bp,0x6d(%edi)
jo     805a941 <_IO_stdin_used+0xddd>
gs
je     805a93d <_IO_stdin_used+0xdd9>
and    %ah,0x63(%edi,%ebp,2)
jne    805a94b <_IO_stdin_used+0xde7>
outsb  %gs:(%esi),(%dx)
je     805a943 <_IO_stdin_used+0xddf>
je     805a94d <_IO_stdin_used+0xde9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     805a95f <_IO_stdin_used+0xdfb>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     805a95b <_IO_stdin_used+0xdf7>
jne    805a96c <_IO_stdin_used+0xe08>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jo     805a987 <_IO_stdin_used+0xe23>
imul   $0x6f2d2d20,0x6e(%edi),%ebp
jne    805a990 <_IO_stdin_used+0xe2c>
jo     805a993 <_IO_stdin_used+0xe2f>
je     805a95a <_IO_stdin_used+0xdf6>
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %ah,%fs:(%edi)
and    $0x75202773,%eax
jae    805a994 <_IO_stdin_used+0xe30>
and    %ch,%fs:0x6f(%ebp)
jb     805a99a <_IO_stdin_used+0xe36>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
arpl   %sp,0x0(%ebp)
outsl  %ds:(%esi),(%dx)
jo     805a9b7 <_IO_stdin_used+0xe53>
imul   $0x6f2d2d20,0x6e(%edi),%ebp
jne    805a9c0 <_IO_stdin_used+0xe5c>
jo     805a9c3 <_IO_stdin_used+0xe5f>
je     805a98a <_IO_stdin_used+0xe26>
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %ah,%fs:(%edi)
and    $0x75202773,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ch,0x70(%edi)
je     805a9d1 <_IO_stdin_used+0xe6d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805a98c <_IO_stdin_used+0xe28>
and    $0x6e612073,%eax
and    %ah,%fs:0x72612073
and    %ch,%gs:0x75(%ebp)
je     805a9f3 <_IO_stdin_used+0xe8f>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    805a9a3 <_IO_stdin_used+0xe3f>
gs
js     805a9e9 <_IO_stdin_used+0xe85>
insb   (%dx),%es:(%edi)
jne    805a9fc <_IO_stdin_used+0xe98>
imul   $0x0,0x65(%esi),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     805aa02 <_IO_stdin_used+0xe9e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
sub    $0x67656d2d,%eax
popa
bound  %edi,0x74(%ecx)
gs
jae    805a9d0 <_IO_stdin_used+0xe6c>
and    %ch,0x73(%ecx)
and    %ah,0x70(%ebp,%eiz,2)
jb     805aa17 <_IO_stdin_used+0xeb3>
arpl   %sp,0x74(%ecx)
gs and %ah,%fs:%gs:0x6e(%ecx)
and    %dh,%fs:0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805aa34 <_IO_stdin_used+0xed0>
add    %al,%fs:(%eax)
add    %al,(%eax)
imul   $0x7973,0x20(%ebp,%eiz,2),%bp
jae    805aa51 <_IO_stdin_used+0xeed>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x6f622073
je     805aa54 <_IO_stdin_used+0xef0>
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs add %al,%fs:%gs:(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805aa2b <_IO_stdin_used+0xec7>
jb     805aa72 <_IO_stdin_used+0xf0e>
popa
and    %dh,%fs:0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ch,0x6f(%ebp)
jne    805aa8b <_IO_stdin_used+0xf27>
je     805aa84 <_IO_stdin_used+0xf20>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    805aa9e <_IO_stdin_used+0xf3a>
gs
insl   (%dx),%es:(%edi)
jae    805aa2e <_IO_stdin_used+0xeca>
add    %al,(%eax)
jae    805aaa1 <_IO_stdin_used+0xf3d>
jne    805aaa6 <_IO_stdin_used+0xf42>
arpl   %sp,0x2c(%ebp)
data16
jae    805aaae <_IO_stdin_used+0xf4a>
jns    805aaac <_IO_stdin_used+0xf48>
gs
sub    $0x69,%al
je     805aab0 <_IO_stdin_used+0xf4c>
je     805aaa4 <_IO_stdin_used+0xf40>
insb   (%dx),%es:(%edi)
sub    $0x69,%al
jne    805aabb <_IO_stdin_used+0xf57>
gs
fs
sub    $0x69,%al
popa
jbe    805aab0 <_IO_stdin_used+0xf4c>
imul   $0x6e656370,0x69(%esp,%ebp,1),%ebp
je     805aa85 <_IO_stdin_used+0xf21>
jae    805aac4 <_IO_stdin_used+0xf60>
jp     805aac2 <_IO_stdin_used+0xf5e>
sub    $0x75,%al
jae    805aac6 <_IO_stdin_used+0xf62>
fs
sub    $0x61,%al
jbe    805aac7 <_IO_stdin_used+0xf63>
imul   $0x746e6563,0x70(%esp,%ebp,1),%ebp
sub    $0x74,%al
popa
jb     805aada <_IO_stdin_used+0xf76>
gs
je     805aa76 <_IO_stdin_used+0xf12>
add    %al,(%eax)
add    %al,(%eax)
sbbb   $0x0,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
enter  $0x6342,$0x61
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805aaab <_IO_stdin_used+0xf47>
addr16
gs
je     805aaaf <_IO_stdin_used+0xf4b>
arpl   %si,0x72(%ebp)
jb     805aaf9 <_IO_stdin_used+0xf95>
outsb  %ds:(%esi),(%dx)
je     805aab7 <_IO_stdin_used+0xf53>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805aaa1 <_IO_stdin_used+0xf3d>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805aac8 <_IO_stdin_used+0xf64>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x6f(%si)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805aadc <_IO_stdin_used+0xf78>
and    $0x2e2e0073,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805aae9 <_IO_stdin_used+0xf85>
jae    805ab3f <_IO_stdin_used+0xfdb>
popa
je     805aaee <_IO_stdin_used+0xf8a>
and    $0x73,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805aafb <_IO_stdin_used+0xf97>
jae    805ab51 <_IO_stdin_used+0xfed>
popa
je     805ab00 <_IO_stdin_used+0xf9c>
arpl   %si,0x72(%ebp)
jb     805ab4a <_IO_stdin_used+0xfe6>
outsb  %ds:(%esi),(%dx)
je     805ab08 <_IO_stdin_used+0xfa4>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805ab12 <_IO_stdin_used+0xfae>
sub    %ch,0x6f(%esi)
ja     805ab17 <_IO_stdin_used+0xfb3>
and    $0x2973,%eax
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     805ab6d <_IO_stdin_used+0x1009>
je     805ab7f <_IO_stdin_used+0x101b>
jb     805ab7a <_IO_stdin_used+0x1016>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6c616974,0x69(%esi),%ebp
and    %dh,0x6f(%edi)
jb     805ab87 <_IO_stdin_used+0x1023>
imul   $0x72696420,0x67(%esi),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805ab2a <_IO_stdin_used+0xfc6>
cmp    %ch,(%esi)
xor    (%ecx),%dh
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     805ab3b <_IO_stdin_used+0xfd7>
and    $0x25203a73,%eax
jae    805ab42 <_IO_stdin_used+0xfde>
and    (%eax),%esp
outsb  %gs:(%esi),(%dx)
je     805abba <_IO_stdin_used+0x1056>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     805ab96 <_IO_stdin_used+0x1032>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 805abeb <_IO_stdin_used+0x1087>
cmp    (%eax),%ah
and    $0xa756c,%eax
add    %al,(%eax)
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
orb    $0x2e,0x25(%edi)
xor    %cl,0x0(%esi,%eiz,2)
and    $0x664c312e,%eax
add    %al,0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
add    %ah,0x45(%ebp)
addr16 inc %edi
imul   $0x4d,0x6d(%ebx),%ecx
jo     805ac44 <_IO_stdin_used+0x10e0>
je     805ac4a <_IO_stdin_used+0x10e6>
jns    805ac51 <_IO_stdin_used+0x10ed>
jp     805ac54 <_IO_stdin_used+0x10f0>
xor    %al,(%eax)
mov    $0x0,%al
add    %al,(%eax)
nop
add    %al,(%eax)
add    %dl,-0x63(%edi)
add    $0x59d6608,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %ebx
dec    %ebp
inc    %edi
push   %esp
push   %eax
inc    %ebp
pop    %edx
pop    %ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %edi
add    %al,(%eax)
and    %al,0x0(%ecx)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 805aca7 <_IO_stdin_used+0x1143>
xor    %bl,0x20(%ebp)
ja     805acb2 <_IO_stdin_used+0x114e>
jae    805ac73 <_IO_stdin_used+0x110f>
jo     805acb6 <_IO_stdin_used+0x1152>
jae    805acca <_IO_stdin_used+0x1166>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    805acc7 <_IO_stdin_used+0x1163>
push   $0x206e6120
gs
js     805accd <_IO_stdin_used+0x1169>
arpl   %sp,(%eax)
jae    805ace5 <_IO_stdin_used+0x1181>
jae    805ace2 <_IO_stdin_used+0x117e>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x62696c00,%eax
das
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     805acf3 <_IO_stdin_used+0x118f>
jb     805acbe <_IO_stdin_used+0x115a>
push   $0x73626d00
imul   $0x26282074,0x69(%esi),%ebp
imul   $0x74733e2d,0x72(%ebp,%eiz,2),%esi
popa
je     805ad0c <_IO_stdin_used+0x11a8>
sub    %eax,(%eax)
sub    0x74(%ecx),%ch
gs
jb     805acdc <_IO_stdin_used+0x1178>
arpl   %si,%ds:0x72(%ebp)
jo,pn  805ad2a <_IO_stdin_used+0x11c6>
jb     805acd8 <_IO_stdin_used+0x1174>
cmp    $0x5c27203d,%eax
xor    %ah,(%edi)
add    %ch,0x74(%ecx)
gs
jb     805acf2 <_IO_stdin_used+0x118e>
arpl   %si,%ds:0x72(%ebp)
ja,pn  805ad2f <_IO_stdin_used+0x11cb>
and    %bh,0x30203d
and    $0x25282073,%eax
jae    805ad02 <_IO_stdin_used+0x119e>
add    %dl,0x54(%ebp)
inc    %esi
sub    $0x626d0038,%eax
jne    805ad4d <_IO_stdin_used+0x11e9>
je     805ad4b <_IO_stdin_used+0x11e7>
jb     805ad47 <_IO_stdin_used+0x11e3>
insl   (%dx),%es:(%edi)
jne    805ad57 <_IO_stdin_used+0x11f3>
je     805ad56 <_IO_stdin_used+0x11f2>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     805ad66 <_IO_stdin_used+0x1202>
add    %ah,%dl
sbbb   $0xa1,0xafa100(%ecx)
pop    %es
gs
add    %ah,%dl
sbbb   $0x69,0x6c006000(%eax)
je     805ad6d <_IO_stdin_used+0x1209>
jb     805ad6b <_IO_stdin_used+0x1207>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    805ad91 <_IO_stdin_used+0x122d>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    805ad87 <_IO_stdin_used+0x1223>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %bl,0x5(%eax)
add    $0x50b3808,%eax
or     %ch,0xb(%eax)
add    $0x50a2808,%eax
or     %ch,0xa(%eax)
add    $0x50a9808,%eax
or     %al,%al
or     0x50ac008,%al
or     %al,%al
or     0x5086008,%al
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,%al
or     %al,0x5083808
or     %bl,0x8(%eax)
add    $0x5085008,%eax
or     %cl,0x8(%eax)
add    $0x5084008,%eax
or     %dl,(%eax)
or     %al,0x5095808
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5095808,%eax
or     %bl,0x9(%eax)
add    $0x5078908,%eax
or     %cl,-0x76f7faf9(%ecx)
pop    %es
add    $0x5078108,%eax
or     %cl,-0x7f7faf9(%ecx)
push   %es
add    $0x5078908,%eax
or     %cl,(%eax)
or     %eax,0x5078908
or     %cl,-0x76f7faf9(%ecx)
pop    %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x5078908,%eax
or     %cl,-0x76f7faf9(%ecx)
pop    %es
add    $0x5078908,%eax
or     %cl,0x6(%eax)
add    $0x5095808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %cl,-0x17f7faf9(%ecx)
or     %al,0x506f808
or     %cl,-0x7f7faf9(%ecx)
push   %es
add    $0x5078908,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %bh,%al
push   %es
add    $0x506f808,%eax
or     %ah,0x7(%eax)
add    $0x5078908,%eax
or     %ah,0x7(%eax)
add    $0x5078108,%eax
or     %al,-0x7ff7faf3(%eax)
or     $0xd180805,%eax
add    $0x50d8008,%eax
or     %bl,(%eax)
or     $0xd800805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d1808,%eax
or     %bl,(%eax)
or     $0xd180805,%eax
add    $0x50d8008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,-0x52f3f7fb(,%ebp,4)
add    $0x5ad1208,%eax
or     %bh,0x5(%ebx,%ebx,4)
or     %bl,(%edi)
lods   %ds:(%esi),%eax
add    $0x5ad2708,%eax
or     %bl,-0x64(%ebx)
add    $0x5ad2e08,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
das
insl   (%dx),%es:(%edi)
bound  %ebp,0x74(%ecx)
gs
jb     805b07d <_IO_stdin_used+0x1519>
push   $0x69626d00
je     805b0bb <_IO_stdin_used+0x1557>
jb     805b0b7 <_IO_stdin_used+0x1553>
insl   (%dx),%es:(%edi)
jne    805b0c7 <_IO_stdin_used+0x1563>
je     805b0c6 <_IO_stdin_used+0x1562>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     805b0d6 <_IO_stdin_used+0x1572>
add    %ah,0x25282073
jae    805b093 <_IO_stdin_used+0x152f>
and    %ah,0x25000a73
jae    805b092 <_IO_stdin_used+0x152e>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     805b0e6 <_IO_stdin_used+0x1582>
je     805b0f3 <_IO_stdin_used+0x158f>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     805b0f6 <_IO_stdin_used+0x1592>
je     805b103 <_IO_stdin_used+0x159f>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     805b10d <_IO_stdin_used+0x15a9>
je     805b11a <_IO_stdin_used+0x15b6>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b0df <_IO_stdin_used+0x157b>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     805b131 <_IO_stdin_used+0x15cd>
jb     805b138 <_IO_stdin_used+0x15d4>
and    %ah,0x75(%edx)
addr16 jae 805b0ea <_IO_stdin_used+0x1586>
je     805b13b <_IO_stdin_used+0x15d7>
cmp    (%eax),%ah
and    $0xa73,%eax
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    805b115 <_IO_stdin_used+0x15b1>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     805b164 <_IO_stdin_used+0x1600>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     805b11a <_IO_stdin_used+0x15b6>
insb   (%dx),%es:(%edi)
popa
je     805b163 <_IO_stdin_used+0x15ff>
jb     805b120 <_IO_stdin_used+0x15bc>
cmp    $0x68,%al
je     805b178 <_IO_stdin_used+0x1614>
jo     805b140 <_IO_stdin_used+0x15dc>
das
das
outsb  %ds:(%si),(%dx)
jne    805b13a <_IO_stdin_used+0x15d6>
outsl  %ds:(%esi),(%dx)
jb     805b176 <_IO_stdin_used+0x1612>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 805b188 <_IO_stdin_used+0x1624>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    805b149 <_IO_stdin_used+0x15e5>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     805b1ad <_IO_stdin_used+0x1649>
popa
jb     805b19e <_IO_stdin_used+0x163a>
cmp    (%eax),%ah
jns    805b1ac <_IO_stdin_used+0x1648>
jne    805b15f <_IO_stdin_used+0x15fb>
popa
jb     805b1a7 <_IO_stdin_used+0x1643>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     805b1c7 <_IO_stdin_used+0x1663>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     805b1d1 <_IO_stdin_used+0x166d>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     805b1ee <_IO_stdin_used+0x168a>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     805b1ed <_IO_stdin_used+0x1689>
outsb  %ds:(%esi),(%dx)
je     805b1ab <_IO_stdin_used+0x1647>
jo     805b1f2 <_IO_stdin_used+0x168e>
jb     805b1fc <_IO_stdin_used+0x1698>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     805b20c <_IO_stdin_used+0x16a8>
je     805b219 <_IO_stdin_used+0x16b5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b1de <_IO_stdin_used+0x167a>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805b22c <_IO_stdin_used+0x16c8>
je     805b239 <_IO_stdin_used+0x16d5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b1fe <_IO_stdin_used+0x169a>
and    %ah,0x250a2c73
jae    805b206 <_IO_stdin_used+0x16a2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805b250 <_IO_stdin_used+0x16ec>
je     805b25d <_IO_stdin_used+0x16f9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b222 <_IO_stdin_used+0x16be>
and    %ah,0x250a2c73
jae    805b22a <_IO_stdin_used+0x16c6>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805b278 <_IO_stdin_used+0x1714>
je     805b285 <_IO_stdin_used+0x1721>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b24a <_IO_stdin_used+0x16e6>
and    %ah,0x250a2c73
jae    805b252 <_IO_stdin_used+0x16ee>
and    %ah,0x25202c73
jae    805b25a <_IO_stdin_used+0x16f6>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805b2a4 <_IO_stdin_used+0x1740>
je     805b2b1 <_IO_stdin_used+0x174d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b276 <_IO_stdin_used+0x1712>
and    %ah,0x250a2c73
jae    805b27e <_IO_stdin_used+0x171a>
and    %ah,0x25202c73
jae    805b286 <_IO_stdin_used+0x1722>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805b2d4 <_IO_stdin_used+0x1770>
je     805b2e1 <_IO_stdin_used+0x177d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b2a6 <_IO_stdin_used+0x1742>
and    %ah,0x250a2c73
jae    805b2ae <_IO_stdin_used+0x174a>
and    %ah,0x25202c73
jae    805b2b6 <_IO_stdin_used+0x1752>
and    %ah,0x250a2c73
jae    805b2be <_IO_stdin_used+0x175a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     805b308 <_IO_stdin_used+0x17a4>
je     805b315 <_IO_stdin_used+0x17b1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    805b2da <_IO_stdin_used+0x1776>
and    %ah,0x250a2c73
jae    805b2e2 <_IO_stdin_used+0x177e>
and    %ah,0x25202c73
jae    805b2ea <_IO_stdin_used+0x1786>
and    %ah,0x250a2c73
jae    805b2f2 <_IO_stdin_used+0x178e>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
mov    $0x22,%al
add    $0x522b808,%eax
or     %bh,%al
and    0x5234008,%al
or     %bl,-0xff7fadd(%eax)
and    0x5245808,%eax
or     %dl,%al
and    $0x5,%al
or     %dh,0x21(%eax)
add    $0x5220808,%eax
or     %al,0x6f(%ebx)
jo     805b37d <_IO_stdin_used+0x1819>
jb     805b36f <_IO_stdin_used+0x180b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     805b391 <_IO_stdin_used+0x182d>
popa
jb     805b382 <_IO_stdin_used+0x181e>
and    %al,0x6f(%esi)
jne    805b390 <_IO_stdin_used+0x182c>
fs
popa
je     805b38f <_IO_stdin_used+0x182b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805b3ae <_IO_stdin_used+0x184a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:0x6e(%ecx)
jbe    805b3a5 <_IO_stdin_used+0x1841>
insb   (%dx),%es:(%edi)
imul   $0x20732573,0x25(%eax,%eiz,1),%esp
popa
jb     805b3b7 <_IO_stdin_used+0x1853>
jne    805b3bf <_IO_stdin_used+0x185b>
outsb  %gs:(%esi),(%dx)
je     805b376 <_IO_stdin_used+0x1812>
daa
and    $0x25002773,%eax
jae    805b383 <_IO_stdin_used+0x181f>
jae    805b380 <_IO_stdin_used+0x181c>
popa
jb     805b3ca <_IO_stdin_used+0x1866>
jne    805b3d2 <_IO_stdin_used+0x186e>
outsb  %gs:(%esi),(%dx)
je     805b389 <_IO_stdin_used+0x1825>
daa
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x72(%ecx,%eiz,2)
add    %ch,%gs:(%di)
sub    $0x6e690000,%eax
jbe    805b3e1 <_IO_stdin_used+0x187d>
insb   (%dx),%es:(%edi)
imul   $0x69666675,0x73(%eax,%eiz,1),%esp
js     805b3ab <_IO_stdin_used+0x1847>
imul   $0x73257325,0x20(%esi),%ebp
and    %ah,0x72(%ecx)
addr16 jne 805b405 <_IO_stdin_used+0x18a1>
outsb  %gs:(%esi),(%dx)
je     805b3bc <_IO_stdin_used+0x1858>
daa
and    $0x6c002773,%eax
imul   $0x72747378,0x2f(%edx),%esp
je     805b41a <_IO_stdin_used+0x18b6>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %dh,(%eax)
and    %bh,0x72747320(,%edi,1)
je     805b429 <_IO_stdin_used+0x18c5>
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     805b43c <_IO_stdin_used+0x18d8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
jp     805b40d <_IO_stdin_used+0x18a9>
add    $0x52df008,%eax
or     %dh,%al
sub    $0x32d00805,%eax
add    $0x52df008,%eax
or     %dh,(%eax)
xor    0x52df008,%al
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x531db08,%eax
or     %dh,%al
sub    $0x2e0b0805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x312b0805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x5308708,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x2fd90805,%eax
add    $0x52f2b08,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x2f020805,%eax
add    $0x52ec208,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x52df008,%eax
or     %dh,(%eax)
xor    0x52df008,%al
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x531db08,%eax
or     %dh,%al
sub    $0x2e0b0805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x52df008,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x5308708,%eax
or     %dh,%al
sub    $0x2df00805,%eax
add    $0x52eda08,%eax
or     %bh,0x73(%eax)
je     805b526 <_IO_stdin_used+0x19c2>
je     805b525 <_IO_stdin_used+0x19c1>
jne    805b525 <_IO_stdin_used+0x19c1>
popa
js     805b4bb <_IO_stdin_used+0x1957>
insb   (%dx),%es:(%edi)
imul   $0x69646863,0x2f(%edx),%esp
jb     805b4f2 <_IO_stdin_used+0x198e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%bx,%si)
and    %esp,(%eax)
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
popaw
imul   $0x6c203c20,0x30(%eax,%eax,1),%ebp
outsb  %gs:(%esi),(%dx)
add    %dh,(%eax,%esi,1)
cmp    %esi,(%esi)
and    %bh,0x6e656c20(,%edi,1)
add    %ch,(%edx)
imul   $0x27203d21,%fs:0x20(%edx),%esi
das
daa
add    %ah,0x72(%ecx,%ebp,2)
and    %bh,0x72696420(,%edi,1)
pop    %edi
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x6c(%ebx)
popa
jae    805b575 <_IO_stdin_used+0x1a11>
and    %ch,0x72696420
and    %bh,(%eax,%eiz,1)
xor    $0x30,%al
cmp    %esi,(%esi)
add    %ah,0x64(%ebx)
bound  %ebx,0x66(%edi)
jb     805b587 <_IO_stdin_used+0x1a23>
add    %ah,%gs:0x68(%ebx)
imul   $0x676e6f6c,%fs:0x5f(%edx),%esi
add    %dh,(%edx)
cs ss xor %cs:%ss:(%esi),%esi
add    %ch,(%edi)
gs
je     805b59d <_IO_stdin_used+0x1a39>
das
insl   (%dx),%es:(%edi)
je     805b59f <_IO_stdin_used+0x1a3b>
bound  %eax,(%eax)
popa
jne    805b5b7 <_IO_stdin_used+0x1a53>
outsl  %ds:(%esi),(%dx)
data16
jae    805b547 <_IO_stdin_used+0x19e3>
jo     805b5bb <_IO_stdin_used+0x1a57>
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    805b5c3 <_IO_stdin_used+0x1a5f>
bound  %esp,0x73(%esi)
add    %ah,0x62(%ebp,%eiz,2)
jne    805b5be <_IO_stdin_used+0x1a5a>
data16
jae    805b55a <_IO_stdin_used+0x19f6>
fs
gs
jbe    805b5ce <_IO_stdin_used+0x1a6a>
je     805b5d3 <_IO_stdin_used+0x1a6f>
add    %ah,0x75(%esi)
jae    805b5ca <_IO_stdin_used+0x1a66>
arpl   %si,0x0(%esp,%ebp,2)
insl   (%dx),%es:(%edi)
jno    805b5e1 <_IO_stdin_used+0x1a7d>
gs
jne    805b5d4 <_IO_stdin_used+0x1a70>
add    %dh,0x70(%edx)
arpl   %bx,0x70(%edi)
imul   $0x73007366,0x65(%eax),%esi
jns    805b5f1 <_IO_stdin_used+0x1a8d>
data16
jae    805b581 <_IO_stdin_used+0x1a1d>
fs
gs
jbe    805b5eb <_IO_stdin_used+0x1a87>
jae    805b587 <_IO_stdin_used+0x1a23>
imul   $0x6e,0x72(%ebp),%esp
data16
jae    805b58e <_IO_stdin_used+0x1a2a>
imul   $0x65726f,0x6e(%edi),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x69(%edx)
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x6d(%ebx)
bound  %esp,0x73(%esi)
add    %ah,0x69(%ebx)
data16
jae    805b5aa <_IO_stdin_used+0x1a46>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x72(%ecx)
addr16 jne 805b624 <_IO_stdin_used+0x1ac0>
outsb  %gs:(%esi),(%dx)
je     805b5db <_IO_stdin_used+0x1a77>
and    $0x6f662073,%eax
jb     805b5e2 <_IO_stdin_used+0x1a7e>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    805b63b <_IO_stdin_used+0x1ad7>
jne    805b641 <_IO_stdin_used+0x1add>
and    %ah,0x72(%ecx)
addr16 jne 805b641 <_IO_stdin_used+0x1add>
outsb  %gs:(%esi),(%dx)
je     805b5f8 <_IO_stdin_used+0x1a94>
and    $0x6f662073,%eax
jb     805b5ff <_IO_stdin_used+0x1a9b>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     805b664 <_IO_stdin_used+0x1b00>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x752f0073,%eax
jae    805b67a <_IO_stdin_used+0x1b16>
das
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
sbb    (%eax),%al
add    %ch,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg     805b651 <_IO_stdin_used+0x1aed>
add    %al,(%eax)
add    %ch,0x62(%ebp)
jne    805b6cd <_IO_stdin_used+0x1b69>
je     805b6cb <_IO_stdin_used+0x1b67>
jb     805b6c7 <_IO_stdin_used+0x1b63>
insl   (%dx),%es:(%edi)
jne    805b6d7 <_IO_stdin_used+0x1b73>
je     805b6d6 <_IO_stdin_used+0x1b72>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     805b6e6 <_IO_stdin_used+0x1b82>
add    %al,(%eax)
enter  $0x578,$0x8
cwtl
ja     805b680 <_IO_stdin_used+0x1b1c>
or     %cl,0x58080575(%eax)
ja     805b688 <_IO_stdin_used+0x1b24>
or     %ch,(%eax)
ja     805b68c <_IO_stdin_used+0x1b28>
or     %cl,(%eax)
jno    805b690 <_IO_stdin_used+0x1b2c>
or     %cl,(%eax)
jno    805b694 <_IO_stdin_used+0x1b30>
or     %cl,(%eax)
jno    805b698 <_IO_stdin_used+0x1b34>
or     %cl,(%eax)
jno    805b69c <_IO_stdin_used+0x1b38>
or     %dh,0x72(%eax)
add    $0x5727008,%eax
or     %ah,-0x3ff7fa8a(%eax)
ja     805b6ac <_IO_stdin_used+0x1b48>
or     %al,(%eax)
jae    805b6b0 <_IO_stdin_used+0x1b4c>
or     %al,(%eax)
jae    805b6b4 <_IO_stdin_used+0x1b50>
or     %cl,(%eax)
jno    805b6b8 <_IO_stdin_used+0x1b54>
or     %cl,(%eax)
jno    805b6bc <_IO_stdin_used+0x1b58>
or     %cl,(%eax)
jno    805b6c0 <_IO_stdin_used+0x1b5c>
or     %bh,0x7d(%eax)
add    $0x57d9008,%eax
or     %ah,0x78(%eax)
add    $0x5786008,%eax
or     %bl,0x7d(%eax)
add    $0x75626d08,%eax
imul   $0x6c756d5f,0x72(%ebp,%eiz,2),%esi
je     805b746 <_IO_stdin_used+0x1be2>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     805b756 <_IO_stdin_used+0x1bf2>
add    %ch,(%eax)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
sub    %eax,(%eax)
add    %al,(%eax)
inc    %eax
mov    %es,0x58bd808
or     %bl,%al
mov    0x58bc808,%eax
or     %cl,%al
mov    0x58ba008,%eax
or     %ah,-0x5ff7fa75(%eax)
mov    0x58ba008,%eax
or     %bh,-0x47f7fa75(%eax)
mov    0x58be808,%eax
or     %bh,%al
mov    0x58ba008,%eax
or     %ah,0x808058b(%eax)
mov    %es,0x58c2008
or     %ah,-0x5ff7fa75(%eax)
mov    0x58ba008,%eax
or     %ah,-0x5ff7fa75(%eax)
mov    0x58ba008,%eax
or     %ch,(%eax)
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
push   %ebp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,%dh
popl   0x5948408
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5931308,%eax
or     %al,-0x6cfef7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %dl,(%ebx)
xchg   %eax,%ebx
add    $0x5931308,%eax
or     %dl,(%ebx)
xchg   %eax,%ebx
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6d10f7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %ch,0x84080593
xchg   %eax,%esp
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %dl,(%ebx)
xchg   %eax,%ebx
add    $0x5948408,%eax
or     %bl,%al
xchg   %eax,%edx
add    $0x5929008,%eax
or     %dl,(%ebx)
xchg   %eax,%ebx
add    $0x5931308,%eax
or     %dl,(%ebx)
xchg   %eax,%ebx
add    $0x5948408,%eax
or     %dl,-0x7bf7fa6e(%eax)
xchg   %eax,%esp
add    $0x5948408,%eax
or     %al,-0x6b7bf7fb(%esp,%edx,4)
add    $0x5923c08,%eax
or     %ch,0x54080593
popl   0x5948408
or     %al,-0x6ddaf7fb(%esp,%edx,4)
add    $0x5948408,%eax
or     %ch,0x84080593
xchg   %eax,%esp
add    $0x5948408,%eax
.byte 0x8
.byte 0x2d
xchg   %eax,%ebx
.byte 0x5
.byte 0x8
add    %ebx,(%ebx)
add    (%ebx),%edi
nop
add    $0xb10000,%eax
add    %al,(%eax)
int3
fdivr  %st(6),%st
ljmp   *-0x21340000(%ebp,%eax,1)
(bad)
jmp    *-0x33fffff9(%eax)
icebp
(bad)
call   *%eax
add    $0xf22c0000,%eax
(bad)
push   %esp
add    $0xf30c0000,%eax
(bad)
jmp    *0x6(%eax)
add    %al,(%eax)
dec    %esp
repz (bad)
decl   -0x9240000(%esi,%eax,1)
(bad)
call   *%eax
push   %es
add    %al,(%eax)
jl     805b8f1 <_IO_stdin_used+0x1d8d>
(bad)
incl   (%eax)
pop    %es
add    %al,(%eax)
cmp    $0x4,%al
(bad)
incl   0x7(%eax)
add    %al,(%eax)
cld
pop    %es
(bad)
jmp    *0x7(%eax)
add    %al,(%eax)
jl     805b91b <_IO_stdin_used+0x1db7>
(bad)
inc    %eax
pop    %es
add    %al,(%eax)
fmull  (%edi,%edi,8)
push   %eax
pop    %es
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %edi,%edi
(bad)
js     805b92e <_IO_stdin_used+0x1dca>
add    %al,(%eax)
jl     805b93d <_IO_stdin_used+0x1dd9>
(bad)
decl   0x138c0000(%eax,%ecx,1)
(bad)
jmp    *0x5c000008(%eax)
adc    $0xff,%al
dec    %esp
or     %al,(%eax)
add    %bh,-0x1(%esp,%edx,1)
(bad)
call   d405b951 <optarg+0xcbffc58d>
adc    $0xff,%al
call   *(%ecx,%ecx,1)
add    %al,(%eax)
cmp    $0x15,%al
(bad)
call   *0x0(%ecx,%ecx,1)
add    %bl,0x974ffff(%ebp,%edx,1)
add    %al,(%eax)
fcoml  0x998ffff
add    %al,(%eax)
pop    %esp
push   %ss
(bad)
push   %eax
or     %eax,(%eax)
add    %ch,0xa14ffff(%esi,%edx,1)
add    %al,(%eax)
cmp    $0x17,%al
(bad)
call   *0xa(%eax)
add    %al,(%eax)
dec    %esp
pop    %ss
(bad)
jmp    *0x0(%edx,%ecx,1)
add    %bl,-0x1(%edi,%edx,1)
(bad)
js     805b998 <_IO_stdin_used+0x1e34>
add    %al,(%eax)
mov    %ss,(%edi)
(bad)
lcall  *0x184c0000(%edx,%ecx,1)
(bad)
decl   (%eax)
or     (%eax),%eax
add    %bh,%ah
sbb    %bh,%bh
lcall  *(%ebx,%ecx,1)
add    %al,(%eax)
or     $0x1a,%al
(bad)
pushl  0xb(%eax)
add    %al,(%eax)
sbb    $0x1a,%al
(bad)
incl   0x1a2c0000(%ebx,%ecx,1)
(bad)
lcall  *0x3c00000b(%eax)
sbb    %bh,%bh
ljmp   *0x1a8c0000(%ebx,%ecx,1)
(bad)
call   *%eax
or     (%eax),%eax
add    %ch,%ah
sbb    %bh,%bh
decl   (%esp,%ecx,1)
add    %al,(%eax)
cld
sbb    %edi,%edi
decl   0xc(%eax)
add    %al,(%eax)
pop    %esp
sbb    $0xff,%al
call   *-0x63fffff4(%eax)
sbb    $0xff,%al
pushl  -0x3fffff4(%eax)
sbb    $0xff,%al
(bad)
in     (%dx),%al
or     $0x0,%al
add    %bl,-0x1(%ebp,%ebx,1)
jmp    *0x1ddc0000(,%ecx,1)
(bad)
jmp    *0xd(%eax)
add    %al,(%eax)
sbb    $0x1e,%al
(bad)
incl   0x1e4c0000(%ebp,%ecx,1)
(bad)
lcall  *-0x73fffff3(%eax)
pop    %ds
(bad)
push   %eax
or     $0x201c0000,%eax
(bad)
jmp    *(%esi,%ecx,1)
add    %al,(%eax)
in     (%dx),%al
and    %bh,%bh
lcall  *0x0(%esi,%ecx,1)
add    %bh,-0x1(%edx,%eiz,1)
dec    %esp
push   %cs
add    %al,(%eax)
dec    %esp
and    $0xff,%al
ljmp   *(%eax)
sldt   (%eax)
pop    %esp
and    $0xff,%al
(bad)
cmp    $0xf,%al
add    %al,(%eax)
pushf
and    $0xff,%al
jmp    *0xf(%eax)
add    %al,(%eax)
or     $0x26,%al
(bad)
jmp    *0x4c00000f(%eax)
es
(bad)
dec    %esp
sldt   (%eax)
jl     805ba88 <_IO_stdin_used+0x1f24>
(bad)
jmp    *%esp
sldt   (%eax)
int3
es
(bad)
decl   (%eax)
adc    %al,(%eax)
add    %bl,(%edi,%eiz,1)
(bad)
pushl  (%eax,%edx,1)
add    %al,(%eax)
cmp    $0x27,%al
(bad)
call   *0x0(%eax,%edx,1)
add    %ch,0x1098ffff(%ebp,%esi,1)
add    %al,(%eax)
jl     805bac1 <_IO_stdin_used+0x1f5d>
(bad)
jmp    *%eax
adc    %al,(%eax)
add    %bh,%ah
aaa
(bad)
call   *(%ecx,%edx,1)
add    %al,(%eax)
mov    $0x54ffff3b,%esp
adc    %eax,(%eax)
add    %bl,-0x1(%esp,%edi,1)
(bad)
mov    $0x2c000011,%esp
ds
(bad)
(bad)
cld
adc    %eax,(%eax)
add    %bl,-0x1(%esi,%edi,1)
lcall  *(%edx,%edx,1)
add    %al,(%eax)
or     $0x3f,%al
(bad)
lcall  *0x0(%edx,%edx,1)
add    %bh,0x12a0ffff(%edi,%eax,2)
add    %al,(%eax)
pop    %esp
dec    %eax
(bad)
(bad)
call   1405bae3 <optarg+0xbffc71f>
dec    %ebx
(bad)
call   *0x0(%ebx,%edx,1)
add    %bh,(%ebx,%ecx,2)
(bad)
incl   0x2c000013(%eax)
dec    %esp
(bad)
(bad)
mov    $0x5c000013,%eax
push   %esi
(bad)
(bad)
cld
adc    (%eax),%eax
add    %bh,%ah
push   %edi
(bad)
(bad)
cmp    $0x14,%al
add    %al,(%eax)
cmp    $0x58,%al
(bad)
pushl  0x14(%eax)
add    %al,(%eax)
pop    %esp
pop    %eax
(bad)
incl   0x587c0000(%esp,%edx,1)
(bad)
lcall  *-0x43ffffec(%eax)
pop    %eax
(bad)
(bad)
mov    $0xdc000014,%esp
pop    %eax
(bad)
call   *%eax
adc    $0x0,%al
add    %bl,(%ecx,%ebx,2)
(bad)
push   %esp
adc    $0x0,%al
add    %bh,-0x1(%ecx,%ebx,2)
ljmp   *(%eax)
adc    $0x5a5c0000,%eax
(bad)
jmp    *0x0(%ebp,%edx,1)
add    %cl,0x157cffff(%edx,%ebx,2)
add    %al,(%eax)
sbb    $0x5b,%al
(bad)
pushl  0x3c000015(%eax)
pop    %ebx
(bad)
inc    %esp
adc    $0x5b5c0000,%eax
(bad)
(bad)
fcoms  0x5b7c0000
(bad)
(bad)
in     (%dx),%al
adc    $0x5b9c0000,%eax
(bad)
incl   (%eax)
push   %ss
add    %al,(%eax)
int3
pop    %ebx
(bad)
jmp    *(%eax)
push   %ss
add    %al,(%eax)
cld
pop    %ebx
(bad)
incl   0x16(%eax)
add    %al,(%eax)
sub    $0x5c,%al
(bad)
lcall  *0x16(%eax)
add    %al,(%eax)
pop    %esp
pop    %esp
(bad)
pushl  0x16(%eax)
add    %al,(%eax)
or     $0x5d,%al
(bad)
call   *0x5d3c0000(%esi,%edx,1)
(bad)
ljmp   *0x5d6c0000(%esi,%edx,1)
(bad)
inc    %esp
push   %ss
add    %al,(%eax)
pushf
pop    %ebp
(bad)
(bad)
fcoml  (%esi)
add    %al,(%eax)
dec    %esp
pop    %esi
(bad)
incl   (%eax)
pop    %ss
add    %al,(%eax)
mov    %ds,-0x1(%esi)
lcall  *(%eax)
pop    %ss
add    %al,(%eax)
int3
pop    %esi
(bad)
pushl  (%eax)
pop    %ss
add    %al,(%eax)
or     $0x5f,%al
(bad)
decl   0x17(%eax)
add    %al,(%eax)
sub    $0x5f,%al
(bad)
lcall  *0x0(%edi,%edx,1)
add    %cl,-0x1(%edi,%ebx,2)
pushl  0x17(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %edi
(bad)
incl   0x5f8c0000(%edi,%edx,1)
(bad)
lcall  *-0x3ffffe9(%eax)
pusha
(bad)
push   %eax
pop    %ss
add    %al,(%eax)
insb   (%dx),%es:(%edi)
popa
(bad)
lcall  *(%eax,%ebx,1)
add    %al,(%eax)
pushf
popa
(bad)
pushl  (%eax)
sbb    %al,(%eax)
add    %cl,%ah
popa
(bad)
call   *0x18(%eax)
add    %al,(%eax)
or     $0x62,%al
(bad)
decl   -0x13ffffe8(%eax)
addr16 (bad)
dec    %esp
sbb    %al,(%eax)
add    %bl,-0x1(%ebp,%ebp,2)
ljmp   *0x19(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
insl   (%dx),%es:(%edi)
(bad)
incl   0xc000019(%eax)
outsb  %ds:(%esi),(%dx)
(bad)
jmp    *0x6e4c0000(%ecx,%ebx,1)
(bad)
(bad)
mov    $0xfc000019,%esp
outsb  %ds:(%esi),(%dx)
(bad)
jmp    *%eax
sbb    %eax,(%eax)
add    %ch,(%edi,%ebp,2)
(bad)
incl   (%edx,%ebx,1)
add    %al,(%eax)
pop    %esp
outsl  %ds:(%esi),(%dx)
(bad)
ljmp   *(%eax)
sbb    (%eax),%al
add    %ch,-0x1(%edi,%ebp,2)
(bad)
cmp    $0x1a,%al
add    %al,(%eax)
mov    $0x6cffff6f,%esp
sbb    (%eax),%al
add    %bh,%ah
outsl  %ds:(%esi),(%dx)
(bad)
lcall  *0x5c00001a(%eax)
jo     805bc6a <_IO_stdin_used+0x2106>
dec    %eax
sbb    (%eax),%al
add    %ch,0x1aecffff(%eax,%esi,2)
add    %al,(%eax)
fdivl  -0x1(%eax)
decl   (%ebx,%ebx,1)
add    %al,(%eax)
or     $0x71,%al
(bad)
ljmp   *(%eax)
sbb    (%eax),%eax
add    %bh,(%ecx,%esi,2)
(bad)
decl   0x1b(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jno    805bc92 <_IO_stdin_used+0x212e>
ljmp   *0x1b(%eax)
add    %al,(%eax)
mov    $0x7cffff71,%esp
sbb    (%eax),%eax
add    %bh,%ah
jno    805bca2 <_IO_stdin_used+0x213e>
jmp    *0x4c00001b(%eax)
jb     805bcaa <_IO_stdin_used+0x2146>
inc    %esp
sbb    (%eax),%eax
add    %cl,0x1be8ffff(%edx,%esi,2)
add    %al,(%eax)
int3
jb     805bcba <_IO_stdin_used+0x2156>
decl   (%esp,%ebx,1)
add    %al,(%eax)
jl     805bd35 <_IO_stdin_used+0x21d1>
(bad)
pushl  (%eax)
sbb    $0x0,%al
add    %bh,0x1c88ffff(%ebx,%edi,2)
add    %al,(%eax)
in     (%dx),%al
jnp    805bcd2 <_IO_stdin_used+0x216e>
jmp    *0x2c00001c(%eax)
jl     805bcda <_IO_stdin_used+0x2176>
(bad)
mov    $0x6c00001c,%esp
jl     805bce2 <_IO_stdin_used+0x217e>
(bad)
call   2405bd05 <optarg+0x1bffc941>
jg     805bcea <_IO_stdin_used+0x2186>
lcall  *0x1d(%eax)
add    %al,(%eax)
cld
cmp    $0xff,%bh
nop
sbb    $0x847c0000,%eax
(bad)
call   *%eax
sbb    $0x84dc0000,%eax
(bad)
(bad)
in     (%dx),%al
sbb    $0x85bc0000,%eax
(bad)
lcall  *0x1e(%eax)
add    %al,(%eax)
faddl  0x1e70ffff(%ebp)
add    %al,(%eax)
faddl  0x1ec8ffff(%esi)
add    %al,(%eax)
jl     805bca9 <_IO_stdin_used+0x2145>
(bad)
(bad)
clc
push   %ds
add    %al,(%eax)
pushf
mov    %bh,%bh
decl   0x0(%edi,%ebx,1)
add    %cl,(%ecx,%ecx,4)
(bad)
decl   -0x76a40000(%edi,%ebx,1)
(bad)
dec    %eax
pop    %ds
add    %al,(%eax)
mov    $0x14ffff89,%esp
and    %al,(%eax)
add    %ch,(%edx,%ecx,4)
(bad)
decl   0x0(%eax,%eiz,1)
add    %bl,-0x1(%edx,%ecx,4)
jmp    *0x0(%eax,%eiz,1)
add    %bl,%ah
mov    %bh,%bh
(bad)
mov    $0x1c000020,%esp
mov    %edi,%edi
call   *%esp
and    %al,(%eax)
add    %cl,-0x1(%ebx,%ecx,4)
(bad)
call   1405bd91 <optarg+0xbffc9cd>
(bad)
(bad)
ljmp   *(%eax)
and    %eax,(%eax)
add    %bh,(%edi,%ecx,4)
(bad)
decl   0x21(%eax)
add    %al,(%eax)
pushf
(bad)
(bad)
incl   -0x43ffffdf(%eax)
(bad)
(bad)
call   *-0x6ee40000(%ecx,%eiz,1)
(bad)
inc    %esp
and    %eax,(%eax)
add    %bl,0x21f4ffff(%edx,%ebx,4)
add    %al,(%eax)
pop    %esp
stos   %al,%es:(%edi)
(bad)
(bad)
cmp    %ah,(%edx)
add    %al,(%eax)
dec    %esp
lods   %ds:(%esi),%eax
(bad)
(bad)
jl     805bdd0 <_IO_stdin_used+0x226c>
add    %al,(%eax)
cmp    $0xaf,%al
(bad)
(bad)
mov    $0xc000022,%esp
mov    $0xff,%al
incl   (%ebx,%eiz,1)
add    %al,(%eax)
dec    %esp
mov    $0xff,%al
incl   0x23(%eax)
add    %al,(%eax)
in     (%dx),%al
mov    $0xff,%al
decl   0xc000023(%eax)
mov    $0xff,%dl
call   *%eax
and    (%eax),%eax
add    %ch,-0x1(%edx,%esi,4)
(bad)
cld
and    (%eax),%eax
add    %bh,%ah
mov    $0xff,%dl
call   *0x0(%esp)
add    %ch,(%edi,%ecx,8)
(bad)
incl   -0x30740000(%esp)
(bad)
pushl  -0x3ffffdc(%eax)
iret
(bad)
(bad)
fsubs  (%eax,%eax,1)
add    %ch,(%edx,%edx,8)
(bad)
lcall  *(%eax)
and    $0xd25c0000,%eax
(bad)
pushl  (%eax)
and    $0xd2bc0000,%eax
(bad)
call   *0x0(%ebp,%eiz,1)
add    %bl,0x2590ffff(%ebx,%edx,8)
add    %al,(%eax)
cmp    $0xdf,%al
(bad)
call   *%eax
and    $0xe06c0000,%eax
(bad)
(bad)
cmp    $0x26,%al
add    %al,(%eax)
int3
loope  805be32 <_IO_stdin_used+0x22ce>
ljmp   *0x3c000026(%eax)
loop   805be3a <_IO_stdin_used+0x22d6>
jmp    *%esp
add    %al,%es:(%eax)
dec    %esp
loop   805be42 <_IO_stdin_used+0x22de>
(bad)
clc
add    %al,%es:(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805be5f <_IO_stdin_used+0x22fb>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %dl,%bl
(bad)
incl   (%eax)
push   %es
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805be7f <_IO_stdin_used+0x231b>
js     805be7d <_IO_stdin_used+0x2319>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%ah
jmp    805be8d <_IO_stdin_used+0x2329>
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx,%ecx,1),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %dh,(%eax)
in     (%dx),%al
(bad)
call   *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x44,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
rolb   (%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
in     (%dx),%al
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,%ah
add    %al,(%eax)
add    %bh,-0x7d000114(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x6800e46
sbb    %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %eax,(%eax)
add    %al,(%eax,%esi,8)
(bad)
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
popa
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     805bfbb <_IO_stdin_used+0x2457>
add    %al,(%eax)
je     805bfae <_IO_stdin_used+0x244a>
(bad)
pushl  0x41000000(%esp,%ecx,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x7d00e46
or     %gs:(%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0x1,%al
add    %al,(%eax)
hlt
cld
(bad)
(bad)
mov    $0x3,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
xchg   %eax,%esp
add    %bh,%bh
(bad)
jle    805c023 <_IO_stdin_used+0x24bf>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
adc    %al,(%edx)
add    %al,(%eax)
and    $0xd7,%al
(bad)
incl   (%ecx)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x2c,%eax
xor    %al,(%edx)
add    %al,(%eax)
mov    $0x1,%ah
(bad)
call   *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa01be03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x43,%al
or     0x2600000(%eax,%eax,1),%eax
add    %al,(%eax)
in     $0x4,%al
(bad)
incl   0x6(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
pop    %ebp
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
xor    %eax,(%edx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
call   f405c137 <optarg+0xebffcd73>
or     %bh,%bh
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%al
add    %ch,%al
or     %bh,%bh
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    (%eax),%eax
add    %ah,%ah
or     %bh,%bh
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %bh,(%ebx,%eax,1)
add    %al,(%eax)
mov    %cl,(%ebx)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
mov    %cs,(%ebx)
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
test   %al,(%ebx)
add    %al,(%eax)
mov    $0xb,%al
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
les    (%ebx),%eax
add    %al,(%eax)
loopne 805c21d <_IO_stdin_used+0x26b9>
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%eax
add    %ah,(%eax)
or     $0xff,%al
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
add    $0x0,%al
add    %bh,(%esp,%ecx,1)
(bad)
(bad)
jge    805c25a <_IO_stdin_used+0x26f6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pusha
add    $0x0,%al
add    %ah,-0x1(%esp,%ecx,1)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4502(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
test   %al,(%eax,%eax,1)
add    %dl,-0x7d0000f4(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
rolb   $0x0,(%eax,%eax,1)
in     $0xc,%al
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    $0x0,%al
add    %ah,%al
or     $0xff,%al
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
call   e405c339 <optarg+0xdbffcf75>
or     $0xff,%al
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0xc000000
add    $0xce80000,%eax
(bad)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
js     805c3c7 <_IO_stdin_used+0x2863>
add    %al,(%eax)
cmp    $0xd,%al
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    %es,0xdd80000
(bad)
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
loopne 805c42f <_IO_stdin_used+0x28cb>
add    %al,(%eax)
xchg   %eax,%esp
push   %cs
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
add    $0xe900000,%eax
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
push   %es
add    %al,(%eax)
mov    %cs,(%esi)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%esi,%eax,1)
add    %al,(%eax)
mov    %cl,(%esi)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %al,0x6(%eax)
add    %al,(%eax)
mov    $0xe,%ah
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %bh,0x0(%esi,%eax,1)
add    %bl,%al
push   %cs
(bad)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bh,-0x53fffffa(%eax)
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
les    (%edi),%ecx
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,(%eax)
pop    %es
add    %al,(%eax)
in     $0xf,%al
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa450204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,0x0(%edi,%eax,1)
add    %cl,(%eax)
adc    %bh,%bh
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,0x10300000(%edi,%eax,1)
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,%al
pop    %es
add    %al,(%eax)
je     805c62e <_IO_stdin_used+0x2aca>
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
hlt
pop    %es
add    %al,(%eax)
nop
adc    %bh,%bh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
or     %al,(%eax)
add    %ch,0x13cffff(%eax,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,0x8(%eax)
add    %al,(%eax)
xchg   %eax,%esp
adc    %edi,%edi
decl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
or     %al,(%eax)
add    %dh,%al
adc    %edi,%edi
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,%ah
or     %al,(%eax)
add    %cl,-0x750000ee(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bh,(%ecx,%ecx,1)
add    %al,(%eax)
test   $0x13,%al
(bad)
inc    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jnp    805c7af <_IO_stdin_used+0x2c4b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    805c7c2 <_IO_stdin_used+0x2c5e>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x1c000009(%eax)
adc    $0x5ffff,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
or     %eax,(%eax)
add    %bl,(%eax)
adc    $0x3cffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rorb   (%ecx)
add    %al,(%eax)
xor    $0x15,%al
(bad)
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
adc    %cl,(%edx)
add    %al,(%eax)
fs
push   %ss
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cmp    $0xa,%al
add    %al,(%eax)
js     805c8a0 <_IO_stdin_used+0x2d3c>
(bad)
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
push   %esp
or     (%eax),%al
add    %dl,0x42ffff16(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3cf5a4fe(%ebx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
js     805c8cc <_IO_stdin_used+0x2d68>
add    %al,(%eax)
mov    $0x4fffff16,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     (%eax),%al
add    %ah,%al
push   %ss
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,%ah
or     (%eax),%al
add    %ah,%al
push   %ss
(bad)
jmp    *0xe(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
pushw  %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
or     (%eax),%eax
add    %cl,0x1cbffff(,%eiz,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ecx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%ebp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dl,0xb(%eax)
add    %al,(%eax)
xchg   %eax,%esp
es
(bad)
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
test   %cl,(%ebx)
add    %al,(%eax)
loopne 805c9f8 <_IO_stdin_used+0x2e94>
(bad)
pushl  0x3(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1b,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%esp
add    %al,%ah
or     (%eax),%eax
add    %ah,0x2a(%eax)
(bad)
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x60,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebp),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,(%esp,%ecx,1)
add    %al,(%eax)
cwtl
sub    %bh,%bh
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff96,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     $0x0,%al
add    %ch,(%eax)
sub    $0xff,%al
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,0x2c380000(%esp,%ecx,1)
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %cl,%ah
or     $0x0,%al
add    %ch,-0x540000d4(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
push   %ecx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,(%eax)
or     $0x35140000,%eax
(bad)
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jo     805cb83 <_IO_stdin_used+0x301f>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x58000000
or     $0x356c0000,%eax
(bad)
ljmp   *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,%ah
or     $0x37b00000,%eax
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
lock or $0x37b40000,%eax
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,(%eax)
push   %cs
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cmp    %bh,%bh
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %cs
add    %al,(%eax)
pop    %eax
inc    %edx
(bad)
call   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %ch,0x43b80000(%esi,%ecx,1)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
push   %cs
add    %al,(%eax)
les    -0x1(%ebx),%eax
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
push   %cs
add    %al,(%eax)
rolb   -0x1(%ebx)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
sldt   (%eax)
faddl  -0x1(%ebx)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sub    $0xf,%al
add    %al,(%eax)
clc
inc    %ebx
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0xf(%eax)
add    %al,(%eax)
add    $0x44,%al
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
sldt   %fs:(%eax)
and    %al,-0x1(%edi,%edi,8)
pusha
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cwtl
sldt   (%eax)
dec    %esp
inc    %esp
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dl,%ah
sldt   (%eax)
lock inc %esp
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
sldt   (%eax)
or     %al,-0x1(%ebp)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
and    %dl,(%eax)
add    %al,(%eax)
fs
inc    %ebp
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%edx,1)
add    %al,(%eax)
jo     805cec7 <_IO_stdin_used+0x3363>
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x10(%eax)
add    %al,(%eax)
jl     805cedb <_IO_stdin_used+0x3377>
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x0(%eax,%edx,1)
add    %cl,0x17ffff45(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     805ceca <_IO_stdin_used+0x3366>
add    %al,(%eax)
xchg   %eax,%esp
inc    %ebp
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,-0x5bfffff0(%eax)
inc    %ebp
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,-0x4bfffff0(%eax)
inc    %ebp
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
enter  $0x10,$0x0
int3
inc    %ebp
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
loopne 805cf3a <_IO_stdin_used+0x33d6>
add    %al,(%eax)
in     $0x45,%al
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    $0x11,%al
add    %al,(%eax)
jo     805cf98 <_IO_stdin_used+0x3434>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sbb    $0x11,%al
add    %al,(%eax)
mov    %al,-0x1(%esi)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xor    $0x11,%al
add    %al,(%eax)
mov    0x23ffff46,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
adc    %eax,(%eax)
add    %bh,-0x5a0000ba(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jo     805cfcb <_IO_stdin_used+0x3467>
add    %al,(%eax)
inc    %esp
inc    %edi
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %dl,(%ecx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
inc    %edi
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    0x94000011,%al
inc    %edi
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xbc000011,%eax
inc    %edi
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
adc    %eax,(%eax)
add    %cl,%al
inc    %edi
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
adc    %eax,(%eax)
add    %dl,%ah
inc    %edi
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
adc    %eax,(%eax)
add    %ah,%al
inc    %edi
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%eax)
adc    (%eax),%al
add    %ch,%ah
inc    %edi
(bad)
ljmp   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x1f00e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x12(%eax)
add    %al,(%eax)
add    $0x49,%al
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     805d0c9 <_IO_stdin_used+0x3565>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ebx
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x49480000(%edx,%edx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    0x64000012,%al
dec    %ecx
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %al,%al
adc    (%eax),%al
add    %dh,-0x1(%ecx,%ecx,2)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bh,%al
adc    (%eax),%al
add    %bh,-0x1(%ecx,%ecx,2)
(bad)
fiadd  0x41000000
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
push   %ss
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %bh,(%ebx,%edx,1)
add    %al,(%eax)
sbb    %cl,-0x1(%edi)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
fcoms  (%ebx)
add    %al,(%eax)
in     (%dx),%al
push   %ebx
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dh,%al
adc    (%eax),%eax
add    %ah,(%esp,%edx,2)
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    $0x14,%al
add    %al,(%eax)
pusha
push   %esp
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
sub    $0x14,%al
add    %al,(%eax)
mov    %dl,-0x1(%edi,%edi,8)
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
push   %eax
adc    $0x0,%al
add    %dl,0x25ffff(,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
je     805d2d2 <_IO_stdin_used+0x376e>
add    %al,(%eax)
and    %dl,-0x1(%ebp)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
cwtl
adc    $0x0,%al
add    %ch,0x5ffff(,%edx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    $0x0,%al
add    %ch,(%eax)
push   %ebp
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fcoml  (%eax,%eax,1)
add    %cl,0x55(%eax)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
or     %dl,0x555c0000
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
cmp    %dl,0x558c0000
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
pop    %esp
adc    $0x55b80000,%eax
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bh,0x0(%ebp,%edx,1)
add    %cl,%al
push   %ebp
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
adc    $0x55dc0000,%eax
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,-0x13ffffeb(%eax)
push   %ebp
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,%al
adc    $0x55fc0000,%eax
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %ch,%ah
adc    $0x56380000,%eax
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    %dl,(%esi)
add    %al,(%eax)
push   %esp
push   %esi
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jne    805d479 <_IO_stdin_used+0x3915>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
xor    $0x16,%al
add    %al,(%eax)
adcb   $0xff,-0x1(%esi)
aaa
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
push   %ss
add    %al,(%eax)
pushf
push   %esi
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
jl     805d4dc <_IO_stdin_used+0x3978>
add    %al,(%eax)
mov    $0xabffff56,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x44000016(%eax)
push   %edi
(bad)
pushl  (%ebx)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   $0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
clc
push   %ss
add    %al,(%eax)
sub    $0x5f,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
adc    %dl,(%edi)
add    %al,(%eax)
inc    %esp
pop    %edi
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
and    %cl,0xe(%edi)
add    $0x42,%al
push   %cs
and    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%edi,%edx,1)
add    %al,(%eax)
push   $0x3fffff5f
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %bl,0x17(%eax)
add    %al,(%eax)
jl     805d605 <_IO_stdin_used+0x3aa1>
(bad)
jmp    *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
add    %al,(%ecx)
or     (%esi),%cl
adc    $0x48,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
enter  $0x17,$0x0
mov    $0xd8ffff61,%esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x6ff1b9fc(%ebx)
add    $0x3,%al
(bad)
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
fs
arpl   %di,%di
pushl  0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %al,0x18(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
data16
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
pop    %esp
sbb    %al,(%eax)
add    %ch,%al
data16
(bad)
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2400e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
enter  $0x18,$0x0
pop    %esp
addr16 (bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,%al
sbb    %al,(%eax)
add    %ah,-0x1(%edi,%eiz,2)
push   %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
cmp    %bl,(%ecx)
add    %al,(%eax)
or     $0x68,%al
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     805d7a7 <_IO_stdin_used+0x3c43>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,0x19(%eax)
add    %al,(%eax)
jl     805d81e <_IO_stdin_used+0x3cba>
(bad)
lcall  *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x48000019,%esp
imul   $0x66ff,%edi,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,%ah
sbb    %eax,(%eax)
add    %bh,0x69(%eax)
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %bh,(%eax)
sbb    (%eax),%al
add    %cl,0x5cffff(%ecx,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4b02
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
test   %bl,(%edx)
add    %al,(%eax)
mov    0x6fffff69,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xd800001a,%esp
imul   $0x23ff,%edi,%edi
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,%ah
sbb    (%eax),%al
add    %dh,%al
imul   $0x78ff,%edi,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     805d947 <_IO_stdin_used+0x3de3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x1b,%al
add    %al,(%eax)
sbb    %ch,-0x1(%edx)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
sbb    (%eax),%eax
add    %al,0x6a(%eax)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %eax
sbb    (%eax),%eax
add    %bl,-0x1(%edx,%ebp,2)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
cwtl
sbb    (%eax),%eax
add    %bl,%ah
insl   (%dx),%es:(%edi)
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bh,-0x13ffffe5(%eax)
insl   (%dx),%es:(%edi)
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lock sbb (%eax),%eax
add    %dl,(%esi,%ebp,2)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
add    $0x1c,%al
add    %al,(%eax)
and    %ch,-0x1(%esi)
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a72,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
xor    $0x1c,%al
add    %al,(%eax)
push   %eax
outsl  %ds:(%esi),(%dx)
(bad)
pushl  0x0(%ecx,%ecx,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30a4a02,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ah,0x0(%esp,%ebx,1)
add    %ah,-0x47000088(%eax)
sldt   (%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2f00e46
call   1c13e4dc <optarg+0x140df118>
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x1c00001c(%eax)
mov    %bh,%bh
(bad)
in     (%dx),%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
push   %esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
sbb    $0x0,%al
add    %cl,%al
mov    %bh,%bh
(bad)
jmp    805db3f <_IO_stdin_used+0x3fdb>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbd,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %ch,-0x73880000(,%ebx,1)
(bad)
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     805db9f <_IO_stdin_used+0x403b>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,0x0(%ebp,%ebx,1)
add    %al,(%eax)
(bad)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %dh,0x400001d(%eax)
(bad)
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,%al
sbb    $0x8d5c0000,%eax
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x1e(%eax)
add    %al,(%eax)
xor    $0x8e,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %ch,0x0(%esi,%ebx,1)
add    %ch,-0x72(%eax)
(bad)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
les    (%esi),%ebx
add    %al,(%eax)
mov    0x2affff8e,%al
sbb    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,%ah
push   %ds
add    %al,(%eax)
mov    0x5fffffaa,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
and    %bl,(%edi)
add    %al,(%eax)
aam    $0xaa
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5adfe(%ebx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %eax
or     %bl,%al
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
pop    %ds
add    %al,(%eax)
sbb    $0xab,%al
(bad)
jmp    *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
mov    %bl,(%edi)
add    %al,(%eax)
or     $0xad,%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
mov    0x2400001f,%al
lods   %ds:(%esi),%eax
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
les    (%edi),%ebx
add    %al,(%eax)
pusha
lods   %ds:(%esi),%eax
(bad)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%esi,%ebp,4)
(bad)
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
push   $0x40000000
and    %al,(%eax)
add    %ah,-0x1(%ecx,%edi,4)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
and    %al,(%eax)
add    %ch,(%eax)
mov    $0x157ffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     805df1f <_IO_stdin_used+0x43bb>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    805df56 <_IO_stdin_used+0x43f2>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bl,(%eax)
and    %eax,(%eax)
add    %bl,(%ebx,%edi,4)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,0x0(%ecx,%eiz,1)
add    %dl,-0x45(%eax)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x21(%eax)
add    %al,(%eax)
dec    %esp
mov    $0x3cffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
stos   %al,%es:(%edi)
add    $0x8,%al
.byte 0x30
stos   %al,%es:(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
push   %eax
xchg   %eax,%ecx
add    $0x8,%al
or     $0x3c000000,%eax
fwait
add    $0x1908,%eax
add    %cl,(%eax)
out    %eax,(%dx)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0xef,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
test   %cl,0x60804(%eax)
add    %al,(%eax)
hlt
addl   $0xa,(%eax,%ecx,1)
inc    %edi
add    $0x0,%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
lock add $0x208,%eax
add    %bh,%al
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,-0x72(%eax)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
and    %cl,0x120804(%esi)
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x60(%edi)
lea    (%eax,%ecx,1),%eax
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x34(%edi)
mov    %es,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0xef,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x59f7fb6f(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    805efd8 <_IO_stdin_used+0x5474>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    805f019 <_IO_stdin_used+0x54b5>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    805f05a <_IO_stdin_used+0x54f6>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    805f09b <_IO_stdin_used+0x5537>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    805f0dc <_IO_stdin_used+0x5578>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    805f11d <_IO_stdin_used+0x55b9>
add    $0x8,%al
mov    $0x9d,%dl
add    $0x208,%eax
add    %bh,0xe08059d(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,%ah
popf
add    $0x208,%eax
add    %cl,%bl
popf
add    $0x408,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %cl,-0x63(%ebx)
add    $0x8,%eax
add    %ch,-0x65(%esi)
add    $0x508,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ch,%cl
popf
add    $0x8,%eax
add    %ch,%bh
popf
add    $0x508,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
popf
add    $0x8,%eax
add    %dl,%al
popf
add    $0x508,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x2000000
sahf
add    $0x8,%eax
add    %cl,(%ecx)
sahf
add    $0x408,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,%dl
popf
add    $0x108,%eax
add    %ah,%cl
popf
add    $0x508,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %ch,%al
popf
add    $0x108,%eax
add    %ch,%dh
popf
add    $0x508,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%ah
popf
add    $0x108,%eax
add    %bh,%bl
popf
add    $0x508,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
sahf
add    $0x108,%eax
add    %cl,(%eax)
sahf
add    $0x408,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
sahf
add    $0x208,%eax
add    %dl,0x8059e
add    %al,(%eax)
add    %ch,(%edx)
stos   %eax,%es:(%edi)
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dh,(%ebx,%esi,8)
add    $0x10008,%eax
add    %al,0x10805f4(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
pushl  0x3e(%eax)
.byte 0x5
.byte 0x8
add    %al,(%eax)
add    %al,(%eax)
fs
data16
add    %al,(%eax)
.byte 0xb9
xor    (%edi),%edx
dec    %edi
