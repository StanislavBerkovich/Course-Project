das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,0x9d673e0(%edi)
outsb  %ds:(%esi),(%dx)
mov    $0x3133cb42,%esi
lods   %ds:(%esi),%eax
orl    $0xec53df88,-0x45(%ebp)
lods   %ds:(%esi),%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,%ss:(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,0x4012000(%esi)
in     $0x41,%al
sub    %esi,(%esi)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x427c92e3,%ebx
pop    %ecx
movsl  %ds:(%esi),%es:(%edi)
xlat   %ds:(%ebx)
lods   %ds:(%esi),%al
dec    %ebx
jecxz  1a0 <_init-0xb34>
pop    %eax
call   71d8eed3 <_end+0x71d85a53>
pop    %eax
sbb    $0xb0,%al
fmuls  -0x34(%ebp)
push   $0x7f
lcall  $0xeb0e,$0xf18db97c
shr    %cl,%edi
push   %cs
pop    %ebx
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %ds:(%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esi
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repz add (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,%ds:(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
dec    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
test   $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ch
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    (%eax),%eax
add    %ah,(%eax)
nop
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
add    (%bx,%si),%eax
add    %al,0x94(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,0x0(%ebx,%eax,1)
add    %bl,(%eax)
nop
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
jge    58c <_init-0x748>
add    %al,(%eax)
in     (%dx),%al
push   %eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
jne    59d <_init-0x737>
add    %al,(%eax)
call   40005f1 <_end+0x3ff7171>
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %bl,0x3(%ebx)
add    %al,(%eax)
and    %dl,0x0(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
jl     5bd <_init-0x717>
add    %al,(%eax)
sbb    $0x90,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
xor    %al,(%ebx)
add    %al,(%eax)
mov    $0xf,%al
add    %al,(%eax)
cmp    $0x12000017,%eax
add    %cl,0x18e00
add    %dl,%ah
or     $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %bh,0x1(%ebx)
add    %al,(%eax)
aam    $0x50
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     665 <_init-0x66f>
jae    62e <_init-0x6a6>
xor    0x2e(%edi),%esp
jae    675 <_init-0x65f>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     679 <_init-0x65b>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    6a4 <_init-0x630>
popa
jb     6a7 <_init-0x62d>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    699 <_init-0x63b>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    6ba <_init-0x61a>
gs
jae    64a <_init-0x68a>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     6b6 <_init-0x61e>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     6cd <_init-0x607>
jae    6c8 <_init-0x60c>
popa
je     6e0 <_init-0x5f4>
jb     6cd <_init-0x607>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    6e3 <_init-0x5f1>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     6f2 <_init-0x5e2>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    6f3 <_init-0x5e1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jo     6fb <_init-0x5d9>
jb     70f <_init-0x5c5>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     715 <_init-0x5bf>
imul   $0x66746e00,0x6e(%edi),%ebp
jae    709 <_init-0x5cb>
popa
je     721 <_init-0x5b3>
jb     70e <_init-0x5c6>
jo     726 <_init-0x5ae>
je     712 <_init-0x5c2>
jae    71a <_init-0x5ba>
popa
jb     71b <_init-0x5b9>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    722 <_init-0x5b2>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    72e <_init-0x5a6>
je     72a <_init-0x5aa>
push   $0x6c646e61
gs
jb     6d3 <_init-0x601>
outsb  %ds:(%esi),(%dx)
je     73c <_init-0x598>
jae    737 <_init-0x59d>
popa
je     74f <_init-0x585>
jb     73c <_init-0x598>
imul   $0x695f,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
je     75c <_init-0x578>
jb     74e <_init-0x586>
gs
data16
add    %ch,0x74(%esi)
data16
jae    751 <_init-0x583>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     75d <_init-0x577>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     768 <_init-0x56c>
jae    763 <_init-0x571>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    76e <_init-0x566>
jae    70d <_init-0x5c7>
outsb  %ds:(%esi),(%dx)
je     776 <_init-0x55e>
jae    771 <_init-0x563>
jne    781 <_init-0x553>
outsl  %ds:(%esi),(%dx)
jne    785 <_init-0x54f>
je     719 <_init-0x5bb>
outsb  %ds:(%esi),(%dx)
je     782 <_init-0x552>
jae    77d <_init-0x557>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x61(%ebp,%eiz,2)
jb     787 <_init-0x54d>
insb   (%dx),%es:(%edi)
gs
jbe    791 <_init-0x543>
insb   (%dx),%es:(%edi)
jae    72f <_init-0x5a5>
outsb  %ds:(%esi),(%dx)
je     798 <_init-0x53c>
jae    793 <_init-0x541>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    7a4 <_init-0x530>
add    %ch,0x74(%esi)
data16
jae    7a4 <_init-0x530>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     7b5 <_init-0x51f>
jae    7b0 <_init-0x524>
popa
je     7c8 <_init-0x50c>
jb     7b5 <_init-0x51f>
outsl  %ds:(%esi),(%dx)
jo     7be <_init-0x516>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    7bf <_init-0x515>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     7cb <_init-0x509>
outsl  %ds:(%esi),(%dx)
jne    7e3 <_init-0x4f1>
gs
jb     7e4 <_init-0x4f0>
add    %bl,0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    7dd <_init-0x4f7>
jne    7e3 <_init-0x4f1>
jae    7f0 <_init-0x4e4>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    7fc <_init-0x4d8>
je     7f8 <_init-0x4dc>
insb   (%dx),%es:(%edi)
gs
jbe    802 <_init-0x4d2>
insb   (%dx),%es:(%edi)
jae    7a0 <_init-0x534>
outsb  %ds:(%esi),(%dx)
je     809 <_init-0x4cb>
jae    804 <_init-0x4d0>
popa
je     81c <_init-0x4b8>
jb     809 <_init-0x4cb>
addr16
gs
je     80d <_init-0x4c7>
jae    815 <_init-0x4bf>
popa
jb     816 <_init-0x4be>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    81d <_init-0x4b7>
insl   (%dx),%es:(%edi)
popa
jo     832 <_init-0x4a2>
imul   $0x6961705f,0x67(%esi),%ebp
jb     83e <_init-0x496>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     845 <_init-0x48f>
gs
jae    849 <_init-0x48b>
add    %ch,0x74(%esi)
data16
jae    83b <_init-0x499>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
addr16
gs
je     843 <_init-0x491>
insb   (%dx),%es:(%edi)
gs
jbe    84d <_init-0x487>
insb   (%dx),%es:(%edi)
jae    7eb <_init-0x4e9>
outsb  %ds:(%esi),(%dx)
je     854 <_init-0x480>
jae    84f <_init-0x485>
jo     853 <_init-0x481>
je     85c <_init-0x478>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
je     86a <_init-0x46a>
pop    %edi
imul   $0x6e006564,0x6f(%esi),%ebp
je     86b <_init-0x469>
jae    866 <_init-0x46e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    879 <_init-0x45b>
je     80d <_init-0x4c7>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    880 <_init-0x454>
popa
je     898 <_init-0x43c>
jb     885 <_init-0x44f>
jo     89a <_init-0x43a>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    890 <_init-0x444>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     8a5 <_init-0x42f>
add    %ch,%fs:0x74(%esi)
data16
jae    8a6 <_init-0x42e>
popa
je     8be <_init-0x416>
jb     8ab <_init-0x429>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     8bc <_init-0x418>
jae    8b7 <_init-0x41d>
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     8c6 <_init-0x40e>
jae    8c1 <_init-0x413>
jne    8c7 <_init-0x40d>
jae    8da <_init-0x3fa>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8ef <_init-0x3e5>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8f4 <_init-0x3e0>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x70(%edi)
je     8fb <_init-0x3d9>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    913 <_init-0x3c1>
jb     915 <_init-0x3bf>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     91d <_init-0x3b7>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
gs
jb     92a <_init-0x3aa>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
js     942 <_init-0x392>
je     932 <_init-0x3a2>
je     909 <_init-0x3cb>
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     94c <_init-0x388>
popa
jb     942 <_init-0x392>
add    %bl,0x5f(%edi)
jae    94e <_init-0x386>
jo     954 <_init-0x380>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6f,(%eax),%eax
jo     962 <_init-0x372>
outsl  %ds:(%esi),(%dx)
jo     965 <_init-0x36f>
add    %ah,0x65(%edi)
je     965 <_init-0x36f>
jo     96c <_init-0x368>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     965 <_init-0x36f>
push   $0x5f5f0072
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     978 <_init-0x35c>
add    %ch,0x70(%edi)
je     97d <_init-0x357>
jb     98c <_init-0x348>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     99b <_init-0x339>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
jae    9b3 <_init-0x321>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    9cf <_init-0x305>
popa
jb     9d2 <_init-0x302>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    9c8 <_init-0x30c>
addr16 jo 9d8 <_init-0x2fc>
add    %bl,0x66(%edi)
jo     9d0 <_init-0x304>
push   $0x746e0077
data16
jae    9d8 <_init-0x2fc>
bound  %esi,0x67(%ebp)
jae    97e <_init-0x356>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    $0x3000000,%eax
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    $0x27300,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
xchg   %al,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    a75 <_init-0x25f>
imul   $0x50000,(%ecx),%ecx
nop
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x39c,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %dh,0x3(%eax)
add    %al,(%eax)
sbb    %cl,0x80000(%ebp)
add    %al,(%eax)
sbb    $0x8d,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,-0x73(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,-0x73(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
orb    $0x0,0x80000(%ebp)
add    %dl,0x800008d(%eax)
add    %al,(%eax)
add    %ah,0x800008d(%eax)
add    %al,(%eax)
add    %dh,0x800008d(%eax)
add    %al,(%eax)
add    %al,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%al
popl   (%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%edx,4)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %dl,0x80000(%eax)
add    %al,(%eax)
sbb    $0x90,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x8f,%ah
add    %al,(%eax)
push   %es
add    %eax,(%eax)
add    %bh,0x600008f(%eax)
add    $0x8fbc0000,%eax
add    %al,(%eax)
push   %es
push   %es
add    %al,(%eax)
rorb   $0x0,0xc060000(%edi)
add    %al,%ah
popl   (%eax)
add    %al,(%esi)
push   %cs
add    %al,(%eax)
enter  $0x8f,$0x0
push   %es
adc    %al,(%eax)
add    %cl,%ah
popl   (%eax)
add    %al,(%esi)
adc    (%eax),%al
add    %dl,%al
popl   (%eax)
add    %al,(%esi)
adc    (%eax),%eax
add    %dl,%ah
popl   (%eax)
add    %al,(%esi)
sbb    $0x0,%al
add    %bl,%ah
popl   (%eax)
add    %al,(%esi)
sub    (%eax),%al
add    %ah,%al
popl   (%eax)
add    %al,(%esi)
sub    $0x0,%al
add    %ah,%ah
popl   (%eax)
add    %al,(%esi)
add    %al,%cs:(%eax)
call   6000c10 <_end+0x5ff7790>
xor    (%eax),%eax
or     $0x8f,%al
add    %al,(%eax)
pop    %es
add    (%eax),%al
add    %dl,(%eax)
popl   (%eax)
add    %al,(%edi)
add    (%eax),%eax
add    %dl,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
add    $0x0,%al
add    %bl,(%eax)
popl   (%eax)
add    %al,(%edi)
pop    %es
add    %al,(%eax)
sbb    $0x8f,%al
add    %al,(%eax)
pop    %es
or     %al,(%eax)
add    %ah,(%eax)
popl   (%eax)
add    %al,(%edi)
or     %eax,(%eax)
add    %ah,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
or     (%eax),%al
add    %ch,(%eax)
popl   (%eax)
add    %al,(%edi)
or     (%eax),%eax
add    %ch,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
or     $0x8f300000,%eax
add    %al,(%eax)
pop    %es
sldt   (%eax)
xor    $0x8f,%al
add    %al,(%eax)
pop    %es
adc    %eax,(%eax)
add    %bh,(%eax)
popl   (%eax)
add    %al,(%edi)
adc    (%eax),%eax
add    %bh,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
adc    $0x0,%al
add    %al,-0x71(%eax)
add    %al,(%eax)
pop    %es
adc    $0x8f440000,%eax
add    %al,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
dec    %eax
popl   (%eax)
add    %al,(%edi)
pop    %ss
add    %al,(%eax)
dec    %esp
popl   (%eax)
add    %al,(%edi)
sbb    %al,(%eax)
add    %dl,-0x71(%eax)
add    %al,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %dl,0x0(%edi,%ecx,4)
add    %al,(%edi)
sbb    (%eax),%al
add    %bl,-0x71(%eax)
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %bl,0x0(%edi,%ecx,4)
add    %al,(%edi)
sbb    $0x0,%al
add    %ah,-0x71(%eax)
add    %al,(%eax)
pop    %es
sbb    $0x8f640000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
push   $0x700008f
pop    %ds
add    %al,(%eax)
insb   (%dx),%es:(%edi)
popl   (%eax)
add    %al,(%edi)
and    %al,(%eax)
add    %dh,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    %eax,(%eax)
add    %dh,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    (%eax),%al
add    %bh,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    (%eax),%eax
add    %bh,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    $0x0,%al
add    %al,0x700008f(%eax)
and    $0x8f840000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
mov    %cl,0x27070000(%edi)
add    %al,(%eax)
mov    %cs,0x28070000(%edi)
add    %al,(%eax)
nop
popl   (%eax)
add    %al,(%edi)
sub    %eax,(%eax)
add    %dl,0x2b070000(%edi,%ecx,4)
add    %al,(%eax)
cwtl
popl   (%eax)
add    %al,(%edi)
sub    $0x8f9c0000,%eax
add    %al,(%eax)
pop    %es
das
add    %al,(%eax)
mov    0x700008f,%al
xor    %al,(%eax)
add    %ah,0x31070000(%edi,%ecx,4)
add    %al,(%eax)
test   $0x8f,%al
add    %al,(%eax)
pop    %es
xor    (%eax),%al
add    %ch,0x34070000(%edi,%ecx,4)
add    %al,(%eax)
mov    $0x8f,%al
add    %al,(%eax)
pop    %es
.byte 0x35
push   %ebx
sub    $0x8,%esp
call   2730 <main+0x1780>
add    $0x8223,%ebx
mov    0xd4(%ebx),%eax
test   %eax,%eax
je     cf2 <_init+0x1e>
call   e50 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    d00 <_init+0x2c>
jmp    *0x10(%ebx)
push   $0x8
jmp    d00 <_init+0x2c>
jmp    *0x14(%ebx)
push   $0x10
jmp    d00 <_init+0x2c>
jmp    *0x18(%ebx)
push   $0x18
jmp    d00 <_init+0x2c>
jmp    *0x1c(%ebx)
push   $0x20
jmp    d00 <_init+0x2c>
jmp    *0x20(%ebx)
push   $0x28
jmp    d00 <_init+0x2c>
jmp    *0x24(%ebx)
push   $0x30
jmp    d00 <_init+0x2c>
jmp    *0x28(%ebx)
push   $0x38
jmp    d00 <_init+0x2c>
jmp    *0x2c(%ebx)
push   $0x40
jmp    d00 <_init+0x2c>
jmp    *0x30(%ebx)
push   $0x48
jmp    d00 <_init+0x2c>
jmp    *0x34(%ebx)
push   $0x50
jmp    d00 <_init+0x2c>
jmp    *0x38(%ebx)
push   $0x58
jmp    d00 <_init+0x2c>
jmp    *0x3c(%ebx)
push   $0x60
jmp    d00 <_init+0x2c>
jmp    *0x40(%ebx)
push   $0x68
jmp    d00 <_init+0x2c>
jmp    *0x44(%ebx)
push   $0x70
jmp    d00 <_init+0x2c>
jmp    *0x48(%ebx)
push   $0x78
jmp    d00 <_init+0x2c>
jmp    *0x4c(%ebx)
push   $0x80
jmp    d00 <_init+0x2c>
jmp    *0x50(%ebx)
push   $0x88
jmp    d00 <_init+0x2c>
jmp    *0x54(%ebx)
push   $0x90
jmp    d00 <_init+0x2c>
jmp    *0x58(%ebx)
push   $0x98
jmp    d00 <_init+0x2c>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    d00 <_init+0x2c>
jmp    *0x60(%ebx)
push   $0xa8
jmp    d00 <_init+0x2c>
jmp    *0x64(%ebx)
push   $0xb0
jmp    d00 <_init+0x2c>
jmp    *0x68(%ebx)
push   $0xb8
jmp    d00 <_init+0x2c>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    d00 <_init+0x2c>
jmp    *0x70(%ebx)
push   $0xc8
jmp    d00 <_init+0x2c>
jmp    *0x74(%ebx)
push   $0xd0
jmp    d00 <_init+0x2c>
jmp    *0x78(%ebx)
push   $0xd8
jmp    d00 <_init+0x2c>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    d00 <_init+0x2c>
jmp    *0x80(%ebx)
push   $0xe8
jmp    d00 <_init+0x2c>
jmp    *0x84(%ebx)
push   $0xf0
jmp    d00 <_init+0x2c>
jmp    *0x88(%ebx)
push   $0xf8
jmp    d00 <_init+0x2c>
jmp    *0x8c(%ebx)
push   $0x100
jmp    d00 <_init+0x2c>
jmp    *0x90(%ebx)
push   $0x108
jmp    d00 <_init+0x2c>
jmp    *0x94(%ebx)
push   $0x110
jmp    d00 <_init+0x2c>
jmp    *0x98(%ebx)
push   $0x118
jmp    d00 <_init+0x2c>
jmp    *0x9c(%ebx)
push   $0x120
jmp    d00 <_init+0x2c>
jmp    *0xa0(%ebx)
push   $0x128
jmp    d00 <_init+0x2c>
jmp    *0xa4(%ebx)
push   $0x130
jmp    d00 <_init+0x2c>
jmp    *0xa8(%ebx)
push   $0x138
jmp    d00 <_init+0x2c>
jmp    *0xac(%ebx)
push   $0x140
jmp    d00 <_init+0x2c>
jmp    *0xb0(%ebx)
push   $0x148
jmp    d00 <_init+0x2c>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   2730 <main+0x1780>
add    $0x7f45,%ebx
and    $0xfffffff0,%esp
sub    $0xe0,%esp
mov    0xc0(%ebx),%eax
mov    %eax,(%esp)
call   e20 <ntfs_log_set_handler@plt>
mov    0xe0(%ebx),%eax
movl   $0x0,0xc4(%esp)
00
movl   $0x0,0x144(%ebx)
00
movl   $0xffffffff,0x160(%ebx)
ff
movl   $0x0,(%eax)
lea    -0x1c0(%ebx),%eax
mov    %eax,0xbc(%esp)
lea    -0x3d88(%ebx),%eax
movl   $0xffffffff,0x164(%ebx)
ff
movl   $0xffffffff,0x168(%ebx)
ff
movl   $0xffffffff,0x16c(%ebx)
ff
movl   $0x0,0xb8(%esp)
00
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xa0(%esp)
00
mov    %eax,0xb0(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0xbc(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   e80 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     1318 <main+0x368>
cmp    $0x76,%eax
ja     12a8 <main+0x2f8>
mov    -0x35b8(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
movl   $0x10,(%esp)
addl   $0x1,0x14c(%ebx)
call   f70 <ntfs_log_set_levels@plt>
jmp    1060 <main+0xb0>
lea    0x0(%esi),%esi
mov    0x144(%ebx),%eax
test   %eax,%eax
je     1693 <main+0x6e3>
movl   $0x7,0x144(%ebx)
00
jmp    1060 <main+0xb0>
lea    0x0(%esi),%esi
movl   $0x4,(%esp)
addl   $0x1,0x148(%ebx)
call   dd0 <ntfs_log_clear_levels@plt>
jmp    1060 <main+0xb0>
cmpl   $0x1,0x144(%ebx)
sbb    %eax,%eax
add    $0x7,%eax
mov    %eax,0x144(%ebx)
jmp    1060 <main+0xb0>
nop
cmpl   $0x1,0x144(%ebx)
sbb    %eax,%eax
and    $0xfffffffa,%eax
add    $0x7,%eax
mov    %eax,0x144(%ebx)
jmp    1060 <main+0xb0>
lea    0x0(%esi),%esi
addl   $0x1,0x150(%ebx)
jmp    1060 <main+0xb0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x144(%ebx),%esi
test   %esi,%esi
jne    10d6 <main+0x126>
mov    0xe8(%ebx),%eax
mov    (%eax),%edx
lea    0x168(%ebx),%eax
mov    %eax,0x8(%esp)
sub    $0x8,%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   3b80 <main+0x2bd0>
test   %eax,%eax
je     10d6 <main+0x126>
movl   $0x2,0x144(%ebx)
00
jmp    1060 <main+0xb0>
lea    0x0(%esi),%esi
addl   $0x1,0xa8(%esp)
jmp    1060 <main+0xb0>
lea    0x0(%esi),%esi
mov    0x144(%ebx),%edx
test   %edx,%edx
jne    10d6 <main+0x126>
mov    0xe8(%ebx),%eax
lea    0xc4(%esp),%edx
movl   $0x4,0x144(%ebx)
00
mov    (%eax),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   f90 <strtol@plt>
mov    %eax,0x158(%ebx)
sar    $0x1f,%eax
mov    %eax,0x15c(%ebx)
mov    0xc4(%esp),%eax
test   %eax,%eax
je     1060 <main+0xb0>
cmpb   $0x1,(%eax)
sbbl   $0xffffffff,0xa0(%esp)
jmp    1060 <main+0xb0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x144(%ebx),%ecx
test   %ecx,%ecx
jne    10d6 <main+0x126>
mov    0xe8(%ebx),%eax
movl   $0x5,0x144(%ebx)
00
mov    (%eax),%eax
mov    %eax,0x154(%ebx)
jmp    1060 <main+0xb0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc4(%ebx),%eax
mov    $0x6,%ecx
mov    0xc(%ebp),%edi
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
lea    -0x3da5(%ebx),%edi
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     16d3 <main+0x723>
addl   $0x1,0xb8(%esp)
jmp    1060 <main+0xb0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x140(%ebx),%edi
test   %edi,%edi
je     1a9f <main+0xaef>
movl   $0x0,0x140(%ebx)
00
addl   $0x1,0xa0(%esp)
jmp    1060 <main+0xb0>
lea    0x0(%esi),%esi
mov    0xcc(%ebx),%eax
mov    0xc(%ebp),%edi
mov    (%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%eax
mov    0xc4(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
mov    %eax,0x18(%esp)
je     1608 <main+0x658>
lea    -0x3d9e(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xe0,0x8(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33ab(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
addl   $0x1,0xa0(%esp)
jmp    1060 <main+0xb0>
xchg   %ax,%ax
call   d40 <ntfs_log_get_levels@plt>
test   $0x10,%al
je     1328 <main+0x378>
addl   $0x1,0x14c(%ebx)
test   $0x4,%al
jne    1333 <main+0x383>
addl   $0x1,0x148(%ebx)
mov    0xb8(%esp),%eax
or     0xa8(%esp),%eax
je     1551 <main+0x5a1>
cmpl   $0x0,0xa8(%esp)
movl   $0x0,0x148(%ebx)
00
je     1489 <main+0x4d9>
lea    -0x3d76(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3d68(%ebx),%eax
lea    -0x3e06(%ebx),%edi
lea    -0x33b3(%ebx),%esi
mov    %eax,0x18(%esp)
lea    -0x3b9c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x44,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x3b54(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x45,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x3b2c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x46,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x3b04(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x47,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xb4(%ebx),%eax
mov    (%eax),%ecx
lea    0x11c(%ebx),%eax
mov    (%eax),%edx
lea    0x118(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x3d5c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x48,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xa0(%esp),%esi
or     0xb8(%esp),%esi
je     1535 <main+0x585>
lea    -0x3d68(%ebx),%eax
lea    -0x3e06(%ebx),%edx
mov    %eax,0x18(%esp)
lea    -0x33b9(%ebx),%edi
lea    -0x3ad4(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x62,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0xbc(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xb4(%ebx),%eax
mov    0xbc(%esp),%edx
mov    (%eax),%ecx
lea    0x11c(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3d58(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x63,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xa8(%esp),%eax
or     %esi,%eax
je     162f <main+0x67f>
mov    $0x1,%eax
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x144(%ebx),%eax
test   %eax,%eax
jne    1685 <main+0x6d5>
movl   $0x1,0x144(%ebx)
00
movl   $0x0,0x148(%ebx)
00
cmpl   $0x0,0x140(%ebx)
je     1ab9 <main+0xb09>
cmpl   $0x0,0x148(%ebx)
je     1596 <main+0x5e6>
cmpl   $0x0,0x14c(%ebx)
jne    16fc <main+0x74c>
cmpl   $0x7,0x144(%ebx)
je     1b06 <main+0xb56>
mov    0x16c(%ebx),%edi
cmp    %edi,0x164(%ebx)
mov    0x160(%ebx),%eax
jl     1489 <main+0x4d9>
jle    16eb <main+0x73b>
lea    -0x3bc4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x104,0x8(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33ab(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
addl   $0x1,0xa0(%esp)
jmp    1489 <main+0x4d9>
lea    -0x3c98(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    12f1 <main+0x341>
call   3160 <main+0x21b0>
cmpl   $0x1,0x150(%ebx)
sbb    %eax,%eax
and    $0xf0000000,%eax
add    $0x10000001,%eax
mov    %eax,0x4(%esp)
mov    0x140(%ebx),%eax
mov    %eax,(%esp)
call   35a0 <main+0x25f0>
test   %eax,%eax
mov    %eax,0xb8(%esp)
je     1544 <main+0x594>
mov    0x144(%ebx),%eax
sub    $0x2,%eax
cmp    $0x4,%eax
ja     1b2d <main+0xb7d>
mov    -0x33dc(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
sub    $0x1,%eax
jne    1573 <main+0x5c3>
jmp    1569 <main+0x5b9>
mov    0xe8(%ebx),%eax
mov    (%eax),%edx
lea    0x168(%ebx),%eax
mov    %eax,0x8(%esp)
sub    $0x8,%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   3b80 <main+0x2bd0>
test   %eax,%eax
je     10d6 <main+0x126>
movl   $0x3,0x144(%ebx)
00
jmp    1060 <main+0xb0>
mov    %eax,(%esp)
call   e70 <ntfs_log_parse_option@plt>
cmp    $0x1,%eax
adcl   $0x0,0xa0(%esp)
jmp    1060 <main+0xb0>
cmp    0x168(%ebx),%eax
jbe    1489 <main+0x4d9>
jmp    15c1 <main+0x611>
lea    -0x3c4c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33ab(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xfc,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
addl   $0x1,0xa0(%esp)
jmp    1596 <main+0x5e6>
lea    0xc4(%esp),%edx
xor    %eax,%eax
mov    %edx,%edi
mov    $0x7,%ecx
rep stos %eax,%es:(%edi)
mov    0xb8(%esp),%edi
lea    -0x63c0(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x7fffffff,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
movl   $0xffffffff,0xcc(%esp)
ff
movl   $0xffffffff,0xd0(%esp)
ff
call   2d10 <main+0x1d60>
cmpl   $0x0,0xd0(%esp)
js     1a98 <main+0xae8>
mov    0xc4(%esp),%eax
mov    0xc8(%esp),%edx
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   f60 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     2698 <main+0x16e8>
mov    %eax,%edx
mov    %edi,%eax
call   2860 <main+0x18b0>
mov    %esi,(%esp)
xor    %esi,%esi
call   f00 <ntfs_inode_close@plt>
jmp    1a2c <main+0xa7c>
mov    0x154(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   e60 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
je     1a98 <main+0xae8>
mov    %eax,%edx
mov    0xb8(%esp),%eax
call   2860 <main+0x18b0>
mov    %eax,%esi
jmp    1a2c <main+0xa7c>
mov    0x164(%ebx),%eax
mov    0x16c(%ebx),%edx
mov    0x160(%ebx),%ecx
mov    0x168(%ebx),%esi
cmp    %edx,%eax
je     25fa <main+0x164a>
mov    %eax,0x1c(%esp)
lea    -0x38a8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3391(%ebx),%eax
mov    %esi,0x20(%esp)
mov    %edx,0x24(%esp)
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x1f9,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xb8(%esp),%eax
mov    0x164(%ebx),%edi
mov    0x160(%ebx),%esi
mov    0x16c(%ebx),%edx
movzbl 0x24(%eax),%ecx
movzbl 0x16(%eax),%eax
sub    %eax,%ecx
shrd   %cl,%edi,%esi
sar    %cl,%edi
mov    %edi,%eax
sar    $0x1f,%eax
test   $0x20,%cl
cmovne %edi,%esi
cmovne %eax,%edi
mov    0x168(%ebx),%eax
mov    %esi,0x160(%ebx)
mov    %edi,0x164(%ebx)
shrd   %cl,%edx,%eax
sar    %cl,%edx
test   $0x20,%cl
je     18f5 <main+0x945>
mov    %edx,%eax
sar    $0x1f,%edx
mov    %eax,0x168(%ebx)
lea    -0x6350(%ebx),%ecx
mov    %eax,0xc(%esp)
mov    0xb8(%esp),%eax
mov    %esi,0x4(%esp)
movl   $0x0,0x18(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x16c(%ebx)
call   2d10 <main+0x1d60>
mov    %eax,%esi
jmp    1a2c <main+0xa7c>
mov    0x164(%ebx),%eax
mov    0x16c(%ebx),%edx
mov    0x160(%ebx),%ecx
mov    0x168(%ebx),%esi
cmp    %edx,%eax
je     2649 <main+0x1699>
mov    %eax,0x1c(%esp)
lea    -0x3880(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3391(%ebx),%eax
mov    %esi,0x20(%esp)
mov    %edx,0x24(%esp)
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x204,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x6350(%ebx),%eax
mov    0x16c(%ebx),%edx
mov    %eax,0x14(%esp)
mov    0x168(%ebx),%eax
movl   $0x0,0x18(%esp)
mov    %edx,0x10(%esp)
mov    0x164(%ebx),%edx
mov    %eax,0xc(%esp)
mov    0x160(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   2d10 <main+0x1d60>
mov    %eax,%esi
jmp    1a2c <main+0xa7c>
mov    0x158(%ebx),%eax
mov    0x15c(%ebx),%edx
mov    0xb8(%esp),%esi
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
call   f60 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     1a4a <main+0xa9a>
mov    %eax,%edx
mov    %esi,%eax
call   2860 <main+0x18b0>
mov    %edi,(%esp)
mov    %eax,%esi
call   f00 <ntfs_inode_close@plt>
mov    0xb8(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   d30 <ntfs_umount@plt>
mov    %esi,%eax
jmp    1549 <main+0x599>
mov    0x158(%ebx),%eax
mov    0x15c(%ebx),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3d1b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3391(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x213,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    $0x1,%esi
jmp    1a2c <main+0xa7c>
mov    0xc4(%ebx),%eax
mov    0xc(%ebp),%edi
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
mov    %eax,0x140(%ebx)
jmp    1060 <main+0xb0>
cmpl   $0x1,0x8(%ebp)
jle    1af9 <main+0xb49>
lea    -0x3c74(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x33ab(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
addl   $0x1,0xa0(%esp)
jmp    1580 <main+0x5d0>
lea    -0x3c10(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x101,0x8(%esp)
jmp    15e3 <main+0x633>
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   48f0 <main+0x3940>
movl   $0x0,0x94(%esp)
00
movl   $0x0,0xa0(%esp)
00
movl   $0x0,0xa4(%esp)
00
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xac(%esp)
00
mov    %eax,0xbc(%esp)
movl   $0xd1,(%eax)
mov    0xbc(%esp),%eax
mov    %eax,(%esp)
call   4990 <main+0x39e0>
test   %eax,%eax
mov    0xbc(%esp),%eax
jne    1ca5 <main+0xcf5>
testb  $0x1,0x4(%eax)
je     1b80 <main+0xbd0>
mov    0x8(%eax),%eax
movl   $0x0,0x4(%esp)
addl   $0x1,0x94(%esp)
mov    %eax,(%esp)
call   f50 <ntfs_attr_get_search_ctx@plt>
mov    %eax,0xb0(%esp)
xchg   %ax,%ax
mov    0xb0(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   3ca0 <main+0x2cf0>
test   %eax,%eax
je     1c80 <main+0xcd0>
cmpb   $0x0,0x8(%eax)
je     1bc8 <main+0xc18>
mov    %eax,0x4(%esp)
mov    0xb8(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   e00 <ntfs_mapping_pairs_decompress@plt>
mov    0x14(%eax),%edi
mov    0x10(%eax),%esi
cmp    $0x0,%edi
jl     1c59 <main+0xca9>
jle    1c94 <main+0xce4>
lea    0x18(%eax),%edx
mov    %eax,%ecx
lea    0x0(%esi),%esi
mov    0xc(%ecx),%ecx
test   %ecx,%ecx
js     1c42 <main+0xc92>
mov    0xbc(%esp),%ecx
testb  $0x10,0x4(%ecx)
je     1c70 <main+0xcc0>
add    %esi,0xa0(%esp)
adc    %edi,0xa4(%esp)
mov    %edx,%ecx
add    $0x18,%edx
mov    -0x4(%edx),%edi
mov    -0x8(%edx),%esi
cmp    $0x0,%edi
jl     1c59 <main+0xca9>
jg     1c20 <main+0xc70>
cmp    $0x0,%esi
ja     1c20 <main+0xc70>
mov    %eax,(%esp)
lea    0x0(%esi,%eiz,1),%esi
call   d70 <free@plt>
jmp    1bc8 <main+0xc18>
lea    0x0(%esi),%esi
add    %esi,0xa8(%esp)
adc    %edi,0xac(%esp)
jmp    1c42 <main+0xc92>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   ea0 <ntfs_attr_put_search_ctx@plt>
jmp    1b80 <main+0xbd0>
cmp    $0x0,%esi
jbe    1c59 <main+0xca9>
lea    0x0(%esi,%eiz,1),%esi
jmp    1c15 <main+0xc65>
mov    %eax,(%esp)
call   4950 <main+0x39a0>
mov    0xb8(%esp),%edi
movzbl 0x24(%edi),%eax
movzbl 0x16(%edi),%ecx
mov    %eax,%edx
sub    %ecx,%edx
mov    %eax,0xbc(%esp)
mov    0x5c(%edi),%eax
mov    %edx,0x90(%esp)
mov    0x60(%edi),%edx
mov    %ecx,0x88(%esp)
mov    %eax,0xb0(%esp)
mov    %edx,0xb4(%esp)
mov    %edx,%ecx
mov    %eax,%edx
sub    0xa0(%esp),%edx
sbb    0xa4(%esp),%ecx
mov    0xbc(%esp),%eax
mov    %edx,0x98(%esp)
mov    0xa8(%esp),%edx
sub    %edx,0x98(%esp)
mov    0x98(%esp),%esi
mov    %ecx,0x9c(%esp)
mov    0xac(%esp),%ecx
sbb    %ecx,0x9c(%esp)
mov    %eax,%ecx
mov    0x9c(%esp),%edi
xor    %eax,%eax
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
cmovne %esi,%edi
cmovne %eax,%esi
mov    %esi,0x98(%esp)
mov    0xa0(%esp),%esi
xor    %edx,%edx
mov    %edi,0x9c(%esp)
mov    0xa4(%esp),%edi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
cmovne %esi,%edi
cmovne %edx,%esi
mov    %esi,0xa0(%esp)
mov    0xa8(%esp),%esi
xor    %eax,%eax
mov    %edi,0xa4(%esp)
mov    0xac(%esp),%edi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
cmovne %esi,%edi
cmovne %eax,%esi
mov    %esi,0x80(%esp)
xor    %ecx,%ecx
mov    %edi,0x84(%esp)
mov    0xb8(%esp),%edi
mov    %ecx,0xac(%esp)
mov    0x18(%edi),%edx
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    %edx,0xa8(%esp)
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%esi
sar    $0x1f,%esi
test   $0x20,%cl
cmovne %edx,%eax
cmovne %esi,%edx
mov    %eax,%esi
mov    0x94(%esp),%eax
mov    $0x64,%ecx
mov    %edx,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
imul   %ecx
mov    %esi,0x78(%esp)
mov    %edi,0x7c(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   4f10 <main+0x3f60>
movzbl 0x88(%esp),%ecx
mov    %eax,0x48(%esp)
mov    0x98(%esp),%eax
mov    %edx,0x4c(%esp)
mov    0x9c(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
shrd   %cl,%edi,%esi
shr    %cl,%edi
test   $0x20,%cl
je     1e4a <main+0xe9a>
mov    %edi,%esi
xor    %edi,%edi
movzbl 0xbc(%esp),%ecx
mov    %esi,0x70(%esp)
mov    %eax,%esi
mov    %edi,0x74(%esp)
mov    %edx,%edi
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     1e6c <main+0xebc>
mov    %edx,%eax
xor    %edx,%edx
imul   $0x64,%edi,%ecx
mov    $0x64,%edi
mov    %eax,0x68(%esp)
mov    %esi,%eax
mov    0xa8(%esp),%esi
mov    %edx,0x6c(%esp)
mul    %edi
mov    0xac(%esp),%edi
mov    %esi,0x8(%esp)
add    %ecx,%edx
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   4f10 <main+0x3f60>
mov    0xb0(%esp),%esi
mov    0xb4(%esp),%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   4f10 <main+0x3f60>
mov    0x80(%esp),%esi
mov    0x84(%esp),%edi
movzbl 0x88(%esp),%ecx
mov    %eax,0x40(%esp)
mov    %esi,%eax
mov    %edx,0x44(%esp)
mov    %edi,%edx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     1ef6 <main+0xf46>
mov    %edx,%eax
xor    %edx,%edx
movzbl 0xbc(%esp),%ecx
mov    %eax,0x60(%esp)
mov    %esi,%eax
mov    %edx,0x64(%esp)
mov    %edi,%edx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     1f18 <main+0xf68>
mov    %edx,%eax
xor    %edx,%edx
imul   $0x64,%edi,%ecx
mov    $0x64,%edi
mov    %eax,0x58(%esp)
mov    %esi,%eax
mov    %edx,0x5c(%esp)
mul    %edi
mov    %edx,%edi
mov    0xa8(%esp),%edx
mov    %eax,%esi
add    %ecx,%edi
mov    0xac(%esp),%ecx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
call   4f10 <main+0x3f60>
mov    0xb0(%esp),%esi
mov    0xb4(%esp),%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   4f10 <main+0x3f60>
movzbl 0x88(%esp),%ecx
mov    %eax,0x38(%esp)
mov    0xa0(%esp),%eax
mov    %edx,0x3c(%esp)
mov    0xa4(%esp),%edx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     1fa2 <main+0xff2>
mov    %edx,%eax
xor    %edx,%edx
movzbl 0xbc(%esp),%ecx
mov    %eax,0x88(%esp)
mov    0xa0(%esp),%eax
mov    %edx,0x8c(%esp)
mov    0xa4(%esp),%edx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     1fd4 <main+0x1024>
mov    %edx,%eax
xor    %edx,%edx
mov    %eax,0x50(%esp)
mov    $0x64,%eax
mov    %edx,0x54(%esp)
mull   0xa0(%esp)
imul   $0x64,0xa4(%esp),%ecx
mov    %edx,0xb4(%esp)
mov    0xa8(%esp),%edx
add    %ecx,0xb4(%esp)
mov    0xac(%esp),%ecx
mov    %eax,0xb0(%esp)
mov    %edx,0x8(%esp)
mov    0xb0(%esp),%edx
mov    %ecx,0xc(%esp)
mov    0xb4(%esp),%ecx
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
call   4f10 <main+0x3f60>
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0xb0(%esp)
lea    -0x3e06(%ebx),%esi
mov    %edi,0xb4(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   4f10 <main+0x3f60>
mov    0xb8(%esp),%edi
mov    %eax,0x30(%esp)
movzwl 0x14(%edi),%eax
lea    -0x33c8(%ebx),%edi
movl   $0x0,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3858(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x165,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x34(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xa8(%esp),%edx
lea    -0x3838(%ebx),%eax
mov    0xac(%esp),%ecx
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x8,0xc(%esp)
movl   $0x166,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
movzbl 0x90(%esp),%ecx
mov    $0x1,%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x167,0x8(%esp)
shl    %cl,%eax
mov    %eax,0x18(%esp)
sar    $0x1f,%eax
mov    %eax,0x1c(%esp)
lea    -0x3818(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
movzbl 0xbc(%esp),%ecx
mov    0xb0(%esp),%eax
mov    0xb4(%esp),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     2160 <main+0x11b0>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x18(%esp)
lea    -0x37f8(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x168,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edx
lea    -0x37d8(%ebx),%eax
mov    0xb4(%esp),%ecx
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x8,0xc(%esp)
movl   $0x169,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
movzbl 0x90(%esp),%ecx
mov    0xb4(%esp),%edx
mov    0xb0(%esp),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
test   $0x20,%cl
je     21ff <main+0x124f>
mov    %edx,%eax
sar    $0x1f,%edx
mov    %eax,0x18(%esp)
lea    -0x37b8(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x16a,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x78(%esp),%edx
lea    -0x3798(%ebx),%eax
mov    0x7c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x16b,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x94(%esp),%edx
lea    -0x3778(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,%ecx
sar    $0x1f,%ecx
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0x8,0xc(%esp)
movl   $0x16c,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %esi,0x4(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x3758(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x16d,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x98(%esp),%edx
lea    -0x3738(%ebx),%eax
mov    0x9c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x16e,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x70(%esp),%edx
lea    -0x3718(%ebx),%eax
mov    0x74(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x16f,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x68(%esp),%edx
lea    -0x36f8(%ebx),%eax
mov    0x6c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x170,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x40(%esp),%edx
lea    -0x36d8(%ebx),%eax
mov    0x44(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x171,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x80(%esp),%edx
lea    -0x36b8(%ebx),%eax
mov    0x84(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x172,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x60(%esp),%edx
lea    -0x3698(%ebx),%eax
mov    0x64(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x173,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x58(%esp),%edx
lea    -0x3678(%ebx),%eax
mov    0x5c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x174,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x38(%esp),%edx
lea    -0x3658(%ebx),%eax
mov    0x3c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x175,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xa0(%esp),%edx
lea    -0x3638(%ebx),%eax
mov    0xa4(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x176,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x88(%esp),%edx
lea    -0x3618(%ebx),%eax
mov    0x8c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x177,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x50(%esp),%edx
lea    -0x35f8(%ebx),%eax
mov    0x54(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x178,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %esi,0x4(%esp)
xor    %esi,%esi
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x35d8(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    1a2c <main+0xa7c>
cmp    %esi,%ecx
jne    1854 <main+0x8a4>
mov    %eax,0x1c(%esp)
lea    -0x3d52(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3391(%ebx),%eax
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x1f7,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    189e <main+0x8ee>
cmp    %esi,%ecx
jne    1959 <main+0x9a9>
mov    %eax,0x1c(%esp)
lea    -0x3d37(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3391(%ebx),%eax
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x202,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    19a3 <main+0x9f3>
mov    0x158(%ebx),%eax
xor    %esi,%esi
mov    0x15c(%ebx),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3d1b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3391(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x222,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    1a2c <main+0xa7c>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   271f <main+0x176f>
add    $0x6803,%ebx
lea    -0x3e50(%ebx),%eax
push   %eax
lea    -0x3ec0(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0xd8(%ebx)
call   eb0 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2730 <main+0x1780>
add    $0x67b7,%ebx
sub    $0x14,%esp
lea    0x123(%ebx),%eax
lea    0x120(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     276b <main+0x17bb>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0xb8(%ebx),%eax
test   %eax,%eax
je     2765 <main+0x17b5>
mov    %edx,(%esp)
call   *%eax
jmp    2765 <main+0x17b5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2730 <main+0x1780>
add    $0x6777,%ebx
sub    $0x14,%esp
lea    0x120(%ebx),%eax
lea    0x120(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    27b4 <main+0x1804>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0xe4(%ebx),%ecx
test   %ecx,%ecx
je     27ae <main+0x17fe>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    27ae <main+0x17fe>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2730 <main+0x1780>
add    $0x6727,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x120(%ebx)
jne    280f <main+0x185f>
mov    0xd0(%ebx),%eax
test   %eax,%eax
je     2803 <main+0x1853>
mov    0x104(%ebx),%eax
mov    %eax,(%esp)
call   dc0 <__cxa_finalize@plt>
call   2740 <main+0x1790>
movb   $0x1,0x120(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2730 <main+0x1780>
add    $0x66d7,%ebx
sub    $0x14,%esp
mov    -0x1e0(%ebx),%eax
test   %eax,%eax
je     2851 <main+0x18a1>
mov    0xdc(%ebx),%eax
test   %eax,%eax
je     2851 <main+0x18a1>
lea    -0x1e0(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    2780 <main+0x17d0>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   2730 <main+0x1780>
add    $0x6695,%ebx
sub    $0x47c,%esp
lea    0x6c(%esp),%edi
mov    %edx,(%esp)
movl   $0x400,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x5c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x46c(%esp)
xor    %eax,%eax
call   3de0 <main+0x2e30>
lea    -0x3e10(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x48(%esp)
mov    %eax,0x4(%esp)
lea    -0x33c3(%ebx),%eax
mov    %edi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x18b,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,0x44(%esp)
call   d20 <ntfs_log_redirect@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   f50 <ntfs_attr_get_search_ctx@plt>
mov    %eax,0x50(%esp)
lea    -0x3df8(%ebx),%eax
mov    %eax,0x58(%esp)
xchg   %ax,%ax
mov    0x50(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   3ca0 <main+0x2cf0>
test   %eax,%eax
mov    %eax,%esi
je     2af0 <main+0x1b40>
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x190,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
cmpb   $0x0,0x8(%esi)
je     2ab0 <main+0x1b00>
lea    -0x3dea(%ebx),%eax
mov    0x48(%esp),%ebp
mov    %eax,0x14(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x192,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x5c(%esp),%ecx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
call   e00 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x54(%esp)
je     2908 <main+0x1958>
lea    -0x3cc0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x44(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x195,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x14(%edi),%ecx
mov    0x10(%edi),%ebp
cmp    $0x0,%ecx
jle    2b20 <main+0x1b70>
mov    0x54(%esp),%eax
lea    0x18(%eax),%esi
mov    %eax,%edi
lea    -0x3ddc(%ebx),%eax
mov    %eax,0x4c(%esp)
lea    0x0(%esi),%esi
mov    0x8(%edi),%eax
mov    0xc(%edi),%edx
mov    %eax,0x38(%esp)
mov    (%edi),%eax
mov    %edx,0x3c(%esp)
mov    0x4(%edi),%edx
mov    0x38(%esp),%edi
mov    %ebp,0x28(%esp)
mov    0x3c(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x4c(%esp),%eax
mov    %ecx,0x2c(%esp)
mov    %edi,0x20(%esp)
mov    %esi,%edi
add    $0x18,%esi
mov    %ebp,0x24(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
movl   $0x19b,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    -0x4(%esi),%ecx
mov    -0x8(%esi),%ebp
cmp    $0x0,%ecx
jl     2a9e <main+0x1aee>
jg     2a20 <main+0x1a70>
cmp    $0x0,%ebp
ja     2a20 <main+0x1a70>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   d70 <free@plt>
jmp    2908 <main+0x1958>
nop
lea    -0x3de6(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1a0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    2908 <main+0x1958>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   ea0 <ntfs_attr_put_search_ctx@plt>
xor    %eax,%eax
mov    0x46c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    2b35 <main+0x1b85>
add    $0x47c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     2a9e <main+0x1aee>
cmp    $0x0,%ebp
ja     2a07 <main+0x1a57>
nop
jmp    2a9e <main+0x1aee>
call   50c0 <main+0x4110>
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    0xc(%esp),%edx
mov    0x14(%esp),%eax
mov    0x18(%esp),%ecx
test   %edx,%edx
je     2b88 <main+0x1bd8>
mov    0x10(%esp),%esi
test   %esi,%esi
je     2b88 <main+0x1bd8>
test   %eax,%eax
je     2b88 <main+0x1bd8>
test   %ecx,%ecx
je     2b88 <main+0x1bd8>
mov    0x8(%eax),%esi
mov    0xc(%eax),%edi
add    0x10(%eax),%esi
adc    0x14(%eax),%edi
cmp    0xc(%ecx),%edi
jl     2b7a <main+0x1bca>
jg     2b90 <main+0x1be0>
cmp    0x8(%ecx),%esi
ja     2b90 <main+0x1be0>
xor    %eax,%eax
pop    %esi
pop    %edi
xchg   %ax,%ax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
mov    (%edx),%eax
mov    0x4(%edx),%edx
mov    %esi,0x8(%ecx)
mov    %edi,0xc(%ecx)
mov    %eax,(%ecx)
xor    %eax,%eax
mov    %edx,0x4(%ecx)
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   2730 <main+0x1780>
add    $0x633b,%ebx
test   %esi,%esi
je     2cc3 <main+0x1d13>
mov    0x54(%esp),%edx
test   %edx,%edx
je     2cc3 <main+0x1d13>
mov    0x58(%esp),%eax
test   %eax,%eax
je     2cc3 <main+0x1d13>
movl   $0x400,(%esp)
call   e10 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     2cd0 <main+0x1d20>
movl   $0x400,0x8(%esp)
lea    -0x339d(%ebx),%ebp
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   3de0 <main+0x2e30>
mov    (%esi),%eax
lea    -0x3e06(%ebx),%ecx
mov    0x4(%esi),%edx
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x18(%esp)
lea    -0x3db8(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %edi,0x20(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1ba,0x8(%esp)
mov    %ecx,0x2c(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xc(%esi),%eax
mov    0x54(%esp),%edx
movl   $0x400,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   41d0 <main+0x3220>
mov    0x2c(%esp),%ecx
lea    -0x3daa(%ebx),%eax
mov    %ebp,(%esp)
xor    %ebp,%ebp
mov    %edi,0x18(%esp)
mov    %eax,0x14(%esp)
mov    %ecx,0x4(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1bd,0x8(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   d70 <free@plt>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x3dc1(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e06(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x339d(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1b5,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    2cc3 <main+0x1d13>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%eax
mov    0xa0(%esp),%edx
call   2730 <main+0x1780>
add    $0x61d3,%ebx
mov    %eax,0x70(%esp)
mov    0xa8(%esp),%eax
test   %edx,%edx
mov    %eax,0x60(%esp)
mov    0xac(%esp),%eax
mov    %eax,0x78(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x68(%esp)
je     3147 <main+0x2197>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     3147 <main+0x2197>
mov    0xa0(%esp),%eax
mov    %eax,(%esp)
call   48f0 <main+0x3940>
mov    %eax,0x6c(%esp)
movl   $0x41,(%eax)
lea    -0x338c(%ebx),%eax
mov    %eax,0x7c(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   4990 <main+0x39e0>
test   %eax,%eax
jne    30db <main+0x212b>
mov    0x6c(%esp),%eax
testb  $0x40,0x4(%eax)
je     2d92 <main+0x1de2>
mov    %eax,%edi
mov    0x8(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x7c(%esp),%eax
movl   $0x40,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x3e02(%ebx),%eax
mov    %eax,0x58(%esp)
mov    %eax,0x4(%esp)
lea    -0x3305(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x54(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x8(%edi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   f50 <ntfs_attr_get_search_ctx@plt>
mov    %eax,0x64(%esp)
lea    -0x3361(%ebx),%eax
mov    %eax,0x74(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x64(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   3ca0 <main+0x2cf0>
test   %eax,%eax
je     30bb <main+0x210b>
cmpb   $0x0,0x8(%eax)
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
jne    2e90 <main+0x1ee0>
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x47,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3328(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    2e28 <main+0x1e78>
nop
mov    %eax,0x4(%esp)
mov    0xa0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   e00 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,%ebp
je     30e7 <main+0x2137>
mov    0x64(%esp),%eax
mov    0x58(%esp),%edi
mov    0x54(%esp),%esi
mov    0x4(%eax),%eax
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x51,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x74(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x3356(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x53,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x14(%ebp),%edx
mov    0x10(%ebp),%eax
cmp    $0x0,%edx
jle    3088 <main+0x20d8>
lea    -0x3344(%ebx),%edi
lea    0x18(%ebp),%ecx
mov    %edi,0x5c(%esp)
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%esi
test   %edi,%edi
mov    %esi,0x38(%esp)
mov    %edi,0x3c(%esp)
js     3058 <main+0x20a8>
mov    %eax,%esi
mov    %edx,%edi
add    0x38(%esp),%esi
adc    0x3c(%esp),%edi
mov    %ecx,0x50(%esp)
mov    %esi,0x40(%esp)
mov    0x0(%ebp),%esi
mov    %edi,0x44(%esp)
mov    0x4(%ebp),%edi
mov    %eax,0x30(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x34(%esp)
mov    0x3c(%esp),%edx
mov    %esi,0x48(%esp)
addl   $0xffffffff,0x40(%esp)
adcl   $0xffffffff,0x44(%esp)
mov    0x40(%esp),%esi
mov    %eax,0x20(%esp)
mov    0x48(%esp),%eax
mov    %edi,0x4c(%esp)
mov    0x44(%esp),%edi
mov    %edx,0x24(%esp)
mov    0x4c(%esp),%edx
mov    %esi,0x28(%esp)
mov    %eax,0x18(%esp)
mov    0x5c(%esp),%eax
mov    %edi,0x2c(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
movl   $0x10,0xc(%esp)
movl   $0x60,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x50(%esp),%ecx
cmp    0x60(%esp),%edi
jl     3058 <main+0x20a8>
jg     3008 <main+0x2058>
mov    0x70(%esp),%eax
cmp    %eax,0x40(%esp)
jb     3058 <main+0x20a8>
mov    0x68(%esp),%eax
cmp    %eax,0x3c(%esp)
jg     3058 <main+0x20a8>
jl     301e <main+0x206e>
mov    0x78(%esp),%eax
cmp    %eax,0x38(%esp)
ja     3058 <main+0x20a8>
mov    0x64(%esp),%eax
mov    0xb8(%esp),%edi
mov    %ecx,0x38(%esp)
mov    0x4(%eax),%edx
mov    0x6c(%esp),%eax
mov    0x8(%eax),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   *0xb4(%esp)
mov    0x38(%esp),%ecx
test   %eax,%eax
jne    30ab <main+0x20fb>
lea    0x0(%esi),%esi
mov    %ecx,%ebp
add    $0x18,%ecx
mov    -0x4(%ecx),%edx
mov    -0x8(%ecx),%eax
cmp    $0x0,%edx
jg     2f40 <main+0x1f90>
jl     2e28 <main+0x1e78>
cmp    $0x0,%eax
ja     2f40 <main+0x1f90>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    2e28 <main+0x1e78>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
jl     2e28 <main+0x1e78>
cmp    $0x0,%eax
lea    0x0(%esi,%eiz,1),%esi
jbe    2e28 <main+0x1e78>
jmp    2f33 <main+0x1f83>
add    $0x8c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   ea0 <ntfs_attr_put_search_ctx@plt>
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   4990 <main+0x39e0>
test   %eax,%eax
je     2da6 <main+0x1df6>
movl   $0x0,0x64(%esp)
xor    %esi,%esi
jmp    3122 <main+0x2172>
lea    -0x337f(%ebx),%eax
mov    $0xffffffff,%esi
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x4d,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   ea0 <ntfs_attr_put_search_ctx@plt>
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   4950 <main+0x39a0>
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x8c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   2730 <main+0x1780>
add    $0x5d9a,%ebx
sub    $0x28,%esp
movl   $0x6,(%esp)
lea    -0x332c(%ebx),%eax
mov    %eax,0x4(%esp)
call   f20 <setlocale@plt>
xor    %edx,%edx
test   %eax,%eax
je     3198 <main+0x21e8>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   f20 <setlocale@plt>
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x8c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x315c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2482(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   2730 <main+0x1780>
add    $0x5cf0,%ebx
test   %esi,%esi
je     32b7 <main+0x2307>
mov    (%esi),%eax
test   %eax,%eax
je     3298 <main+0x22e8>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   f30 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,%edi
js     3272 <main+0x22c2>
cmp    0x48(%esp),%edi
lea    0x2(%eax,%eax,1),%ebp
mov    (%esi),%eax
jge    3280 <main+0x22d0>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   d80 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   d70 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   df0 <realloc@plt>
test   %eax,%eax
je     32b0 <main+0x2300>
mov    %eax,(%esi)
jmp    3252 <main+0x22a2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   f30 <ntfs_mbstoucs@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%edi
jmp    3266 <main+0x22b6>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    3274 <main+0x22c4>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%esi
call   2730 <main+0x1780>
add    $0x5c1a,%ebx
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     3400 <main+0x2450>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   f80 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     33a0 <main+0x23f0>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   db0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
mov    %eax,%edi
jne    3438 <main+0x2488>
testb  $0x1,0x2c(%esp)
je     3420 <main+0x2470>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     34e8 <main+0x2538>
lea    -0x32d3(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2495(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   ef0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0x18(%esp)
je     34c0 <main+0x2510>
lea    -0x3130(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe1,0x8(%esp)
lea    -0x32f8(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    -0x2495(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   ef0 <__errno_location@plt>
xor    %edi,%edi
movl   $0x16,(%eax)
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
lea    -0x310c(%ebx),%eax
lea    -0x32f8(%ebx),%edi
lea    -0x2495(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    0xb4(%esp),%edx
test   %edx,%edx
jne    3560 <main+0x25b0>
lea    -0x30e0(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeb,0x8(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    33ee <main+0x243e>
lea    0x0(%esi),%esi
lea    -0x32f0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    33d4 <main+0x2424>
nop
lea    -0x30b4(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x32f8(%ebx),%ebp
lea    -0x3dad(%ebx),%eax
lea    -0x2495(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x2fdc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    33ee <main+0x243e>
nop
lea    -0x32d3(%ebx),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xee,0x8(%esp)
mov    %esi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    33ee <main+0x243e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   2730 <main+0x1780>
add    $0x5950,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     3748 <main+0x2798>
mov    %ebp,%edi
and    $0x10000000,%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   32d0 <main+0x2320>
test   %eax,%eax
je     36c8 <main+0x2718>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   f10 <ntfs_mount@plt>
test   %eax,%eax
je     3648 <main+0x2698>
testb  $0x1,0x12(%eax)
mov    %eax,%esi
je     3638 <main+0x2688>
test   %edi,%edi
je     3758 <main+0x27a8>
lea    -0x2900(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24a8(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x138,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x32be(%ebx),%eax
lea    -0x32f8(%ebx),%ebp
lea    -0x24a8(%ebx),%edi
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x11d,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
call   ef0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
jne    36d8 <main+0x2728>
lea    -0x2f70(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5,%eax
je     37b3 <main+0x2803>
cmp    $0x1,%eax
je     37f2 <main+0x2842>
cmp    $0x5f,%eax
je     3870 <main+0x28c0>
cmp    $0x10,%eax
je     3831 <main+0x2881>
cmp    $0x6,%eax
nop
jne    36c8 <main+0x2718>
lea    -0x2b74(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x129,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    3638 <main+0x2688>
lea    0x0(%esi,%eiz,1),%esi
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    3638 <main+0x2688>
lea    -0x2aa0(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24a8(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
call   d30 <ntfs_umount@plt>
jmp    3638 <main+0x2688>
lea    -0x2ebc(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x121,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    3638 <main+0x2688>
lea    -0x2e10(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x123,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    3638 <main+0x2688>
lea    -0x30b4(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x127,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    3638 <main+0x2688>
lea    -0x2d98(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x125,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    3638 <main+0x2688>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%esi
call   2730 <main+0x1780>
add    $0x5641,%ebx
movl   $0x0,0x3c(%esp)
test   %esi,%esi
jne    38e8 <main+0x2938>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     38d1 <main+0x2921>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   de0 <strtoll@plt>
test   %edx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
js     3a00 <main+0x2a50>
call   ef0 <__errno_location@plt>
cmpl   $0x22,(%eax)
je     3a00 <main+0x2a50>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     3b30 <main+0x2b80>
mov    0x58(%esp),%edx
test   %edx,%edx
je     39d0 <main+0x2a20>
movzbl (%eax),%esi
mov    %esi,%ecx
cmp    $0x4d,%cl
je     398e <main+0x29de>
jle    3a48 <main+0x2a98>
mov    %esi,%ecx
cmp    $0x6b,%cl
je     39ad <main+0x29fd>
jg     3a90 <main+0x2ae0>
cmp    $0x54,%cl
xchg   %ax,%ax
je     3aa0 <main+0x2af0>
cmp    $0x67,%cl
jne    3a67 <main+0x2ab7>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    39dd <main+0x2a2d>
xchg   %ax,%ax
movzbl (%eax),%edi
mov    %edi,%ecx
test   %cl,%cl
jne    3ac8 <main+0x2b18>
mov    0x54(%esp),%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x40,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x32a9(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x162,0x8(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24b9(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x2d,%cl
je     39dd <main+0x2a2d>
jle    3b20 <main+0x2b70>
mov    %esi,%ecx
cmp    $0x47,%cl
je     396f <main+0x29bf>
cmp    $0x4b,%cl
je     39ad <main+0x29fd>
mov    %eax,0x18(%esp)
lea    -0x2884(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x174,0x8(%esp)
jmp    3a26 <main+0x2a76>
nop
mov    %esi,%ecx
cmp    $0x6d,%cl
je     398e <main+0x29de>
cmp    $0x74,%cl
jne    3a67 <main+0x2ab7>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    396f <main+0x29bf>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%cl
je     39dd <main+0x2a2d>
sub    %esi,%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
lea    -0x3295(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24b9(%ebx),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    38de <main+0x292e>
nop
test   %cl,%cl
je     39dd <main+0x2a2d>
jmp    3a67 <main+0x2ab7>
lea    0x0(%esi),%esi
lea    -0x28b8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24b9(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    38de <main+0x292e>
jmp    3b80 <main+0x2bd0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   2730 <main+0x1780>
add    $0x5371,%ebx
test   %esi,%esi
je     3c18 <main+0x2c68>
mov    0x34(%esp),%edx
test   %edx,%edx
je     3c18 <main+0x2c68>
mov    0x38(%esp),%eax
test   %eax,%eax
je     3c18 <main+0x2c68>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   e90 <strchr@plt>
cmp    %eax,%esi
mov    %eax,%edi
je     3c30 <main+0x2c80>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   38b0 <main+0x2900>
test   %eax,%eax
je     3c58 <main+0x2ca8>
test   %edi,%edi
je     3c48 <main+0x2c98>
cmpb   $0x0,0x1(%edi)
jne    3c68 <main+0x2cb8>
mov    0x10(%esp),%esi
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0x14(%esp),%edi
mov    0x34(%esp),%ecx
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    $0x1,%eax
mov    %edx,0x4(%ecx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
jmp    3bdf <main+0x2c2f>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
jmp    3bf8 <main+0x2c48>
xchg   %ax,%ax
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   38b0 <main+0x2900>
test   %eax,%eax
je     3c58 <main+0x2ca8>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    3bf8 <main+0x2c48>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   2730 <main+0x1780>
add    $0x5252,%ebx
test   %esi,%esi
je     3d18 <main+0x2d68>
mov    0x40(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   f40 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    3d10 <main+0x2d60>
mov    0x4(%esi),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    3d07 <main+0x2d57>
lea    0x0(%esi,%eiz,1),%esi
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    3d07 <main+0x2d57>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
call   2730 <main+0x1780>
add    $0x51c1,%ebx
test   %eax,%eax
je     3d88 <main+0x2dd8>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   f50 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%esi
je     3d98 <main+0x2de8>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   3ca0 <main+0x2cf0>
mov    %esi,(%esp)
mov    %eax,%edi
call   ea0 <ntfs_attr_put_search_ctx@plt>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    3d7b <main+0x2dcb>
nop
lea    -0x2854(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24ce(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1ee,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    3d7b <main+0x2dcb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%ecx
call   2730 <main+0x1780>
add    $0x510a,%ebx
test   %ecx,%ecx
jne    3e18 <main+0x2e68>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc4(%esp),%edx
test   %edx,%edx
je     3e00 <main+0x2e50>
mov    0xc0(%esp),%eax
lea    0x4c(%esp),%edi
mov    $0x15,%ecx
mov    %edi,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x5,0x28(%esp)
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x2830(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   f50 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     4185 <main+0x31d5>
mov    $0x4,%ebp
mov    %ebp,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   3ca0 <main+0x2cf0>
test   %eax,%eax
je     3fa8 <main+0x2ff8>
movzwl 0x14(%eax),%edi
add    %eax,%edi
movzbl 0x41(%edi),%ebp
cmp    0x20(%esp),%ebp
jg     3e98 <main+0x2ee8>
mov    (%edi),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     3ee5 <main+0x2f35>
mov    %eax,(%esp)
call   d70 <free@plt>
movl   $0x0,(%esi)
movl   $0x0,0xc(%esp)
add    $0x42,%edi
mov    %esi,0x8(%esp)
movzbl -0x2(%edi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   e30 <ntfs_ucstombs@plt>
test   %eax,%eax
js     3f10 <main+0x2f60>
mov    %ebp,0x20(%esp)
jmp    3e98 <main+0x2ee8>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x23d,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24e3(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
movl   $0x1e,(%esp)
call   d60 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     405b <main+0x30ab>
mov    0xc0(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x327d(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1e,0x4(%esp)
mov    %edi,(%esp)
call   d10 <__snprintf_chk@plt>
mov    %edi,(%esi)
jmp    3f08 <main+0x2f58>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   ea0 <ntfs_attr_put_search_ctx@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
je     3fd5 <main+0x3025>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   f00 <ntfs_inode_close@plt>
mov    %ebp,%eax
mov    %edi,%ecx
xor    $0x5,%eax
movzwl %di,%edi
or     %edi,%eax
je     40aa <main+0x30fa>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   f60 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     4068 <main+0x30b8>
addl   $0x1,0x30(%esp)
add    $0x4,%esi
cmpl   $0x14,0x30(%esp)
jne    3e68 <main+0x2eb8>
lea    -0x2800(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24e3(%ebx),%eax
movl   $0x14,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3273(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24e3(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x257,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    0x48(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x20(%esp)
lea    -0x3258(%ebx),%eax
lea    0x9c(%esp),%esi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     4116 <main+0x3166>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    0xc8(%esp),%edi
movl   $0x2f,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0xc4(%esp),%eax
sub    %ebp,%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   d10 <__snprintf_chk@plt>
cmp    %eax,%edi
jle    4149 <main+0x3199>
add    %eax,%ebp
sub    $0x4,%esi
cmp    0x20(%esp),%esi
jne    40c8 <main+0x3118>
mov    0x3c(%esp),%eax
lea    0x50(%eax),%edi
mov    %eax,%esi
mov    (%esi),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   d70 <free@plt>
cmp    %edi,%esi
jne    4128 <main+0x3178>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3253(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24e3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    411f <main+0x316f>
lea    -0x2854(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24e3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x223,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    3e0d <main+0x2e5d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   2730 <main+0x1780>
add    $0x4d20,%ebx
test   %esi,%esi
jne    4200 <main+0x3250>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     41ea <main+0x323a>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   d50 <ntfs_attr_find_in_attrdef@plt>
test   %eax,%eax
mov    %eax,%edi
je     43b8 <main+0x3408>
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   d90 <ntfs_ucsnlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   e30 <ntfs_ucstombs@plt>
test   %eax,%eax
js     4390 <main+0x33e0>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x3dad(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   ee0 <snprintf@plt>
cmp    0x5c(%esp),%eax
jge    4348 <main+0x3398>
movzbl 0x9(%esi),%edx
test   %dl,%dl
je     41f5 <main+0x3245>
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
add    %eax,%edi
sub    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movzwl 0xa(%esi),%eax
movl   $0x0,0x2c(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   e30 <ntfs_ucstombs@plt>
test   %eax,%eax
js     4420 <main+0x3470>
mov    0x2c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x3230(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   d10 <__snprintf_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   d70 <free@plt>
cmp    %esi,%ebp
jg     41f5 <main+0x3245>
lea    -0x270c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b4,0x8(%esp)
jmp    436a <main+0x33ba>
lea    0x0(%esi),%esi
lea    -0x2764(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29a,0x8(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24f7(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x27bc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x28f,0x8(%esp)
jmp    436a <main+0x33ba>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x295,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2784(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24f7(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x323a(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   ee0 <snprintf@plt>
jmp    4286 <main+0x32d6>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2744(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x24f7(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2aa,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
lea    -0x323a(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   ee0 <snprintf@plt>
jmp    41f5 <main+0x3245>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   2730 <main+0x1780>
add    $0x4a68,%ebx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     45fe <main+0x364e>
mov    0x114(%ebx),%edx
cmp    0x1c(%esp),%edx
mov    0x110(%ebx),%eax
jle    4588 <main+0x35d8>
mov    0x64(%ecx),%eax
mov    0xbc(%ebx),%edx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   ed0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     4613 <main+0x3663>
lea    0x380(%ebx),%edx
mov    $0xffffffff,%eax
mov    %edx,%edi
mov    $0x80,%ecx
rep stos %eax,%es:(%edi)
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    %edx,0x14(%esp)
mov    %ebp,%edx
sar    $0x3,%edx
movl   $0x200,0xc(%esp)
and    $0xfffff000,%eax
mov    %eax,0x110(%ebx)
shrd   $0x3,%ebp,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x114(%ebx)
call   ec0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     45b5 <main+0x3605>
mov    %esi,(%esp)
call   e40 <ntfs_attr_close@plt>
mov    0x18(%esp),%esi
mov    $0x1,%edx
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    %esi,%ecx
shrd   $0x3,%edi,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x380(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jl     4594 <main+0x35e4>
cmp    0x18(%esp),%eax
ja     44c4 <main+0x3514>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,0x1c(%esp)
jl     4557 <main+0x35a7>
jg     44c4 <main+0x3514>
cmp    %eax,0x18(%esp)
jbe    4557 <main+0x35a7>
xchg   %ax,%ax
jmp    44c4 <main+0x3514>
lea    -0x3215(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x250c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2eb,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   e40 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    4580 <main+0x35d0>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    4580 <main+0x35d0>
lea    -0x322b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x250c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2e1,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    4580 <main+0x35d0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   2730 <main+0x1780>
add    $0x4888,%ebx
test   %edi,%edi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     4775 <main+0x37c5>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
mov    0x10c(%ebx),%edx
and    $0xffff,%ecx
mov    %eax,%esi
mov    0x108(%ebx),%eax
cmp    %edx,%ecx
jge    4748 <main+0x3798>
lea    0x180(%ebx),%ebp
xor    %eax,%eax
mov    $0x80,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    0x40(%esp),%edi
and    $0xfffff000,%esi
xor    %edx,%edx
mov    %esi,%eax
shrd   $0x3,%edx,%eax
mov    %edx,0x10c(%ebx)
sar    $0x3,%edx
mov    %esi,0x108(%ebx)
mov    0x7c(%edi),%ecx
mov    %ebp,0x14(%esp)
movl   $0x200,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   ec0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     4787 <main+0x37d7>
mov    0x18(%esp),%edi
mov    $0x1,%edx
mov    0x1c(%esp),%ebp
mov    %edi,%eax
mov    %edi,%ecx
shrd   $0x3,%ebp,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x180(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     4752 <main+0x37a2>
cmp    %eax,%esi
jb     46b4 <main+0x3704>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,%ecx
jl     4711 <main+0x3761>
jg     46b4 <main+0x3704>
cmp    %eax,%esi
jbe    4711 <main+0x3761>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    46b4 <main+0x3704>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    473a <main+0x378a>
lea    -0x31ff(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2520(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x325,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    473a <main+0x378a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   2730 <main+0x1780>
add    $0x4720,%ebx
test   %eax,%eax
je     48bf <main+0x390f>
mov    0xc(%eax),%esi
test   %esi,%esi
je     48b8 <main+0x3908>
mov    0x4(%eax),%edx
mov    (%eax),%edi
cmp    $0x0,%edx
ja     4808 <main+0x3858>
cmp    $0xa,%edi
jbe    4878 <main+0x38c8>
movzbl 0x10(%esi),%ecx
cmp    $0x3,%cl
je     48a8 <main+0x38f8>
mov    0x8(%eax),%eax
test   %eax,%eax
je     4840 <main+0x3890>
mov    0x24(%eax),%edx
mov    0x20(%eax),%edi
mov    %edx,%ebp
or     %edi,%ebp
je     4840 <main+0x3890>
and    $0xffff,%edx
je     48a0 <main+0x38f0>
cmp    $0x3,%cl
jne    4840 <main+0x3890>
xor    $0xb,%edi
or     %edx,%edi
je     4878 <main+0x38c8>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x30,(%esp)
call   3d30 <main+0x2d80>
test   %eax,%eax
je     48b8 <main+0x3908>
movzwl 0x14(%eax),%edx
mov    (%eax,%edx,1),%ecx
movzwl 0x4(%eax,%edx,1),%edx
xor    %eax,%eax
mov    %ecx,%edi
xor    $0x5,%edi
or     %edx,%edi
je     487d <main+0x38cd>
cmp    $0x0,%edx
ja     4888 <main+0x38d8>
cmp    $0xa,%ecx
ja     4888 <main+0x38d8>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x3,0x10(%esi)
jne    487d <main+0x38cd>
xor    $0xb,%ecx
xor    %eax,%eax
or     %edx,%ecx
sete   %al
jmp    487d <main+0x38cd>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edi
jbe    4878 <main+0x38c8>
jmp    4830 <main+0x3880>
nop
xor    $0xb,%edi
or     %edx,%edi
lea    0x0(%esi),%esi
jne    4815 <main+0x3865>
jmp    4878 <main+0x38c8>
mov    $0xffffffff,%eax
jmp    487d <main+0x38cd>
nop
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    487d <main+0x38cd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   2730 <main+0x1780>
add    $0x4602,%ebx
test   %esi,%esi
je     4938 <main+0x3988>
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   fa0 <calloc@plt>
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %esi,0xc(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    492d <main+0x397d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   2730 <main+0x1780>
add    $0x45a2,%ebx
test   %esi,%esi
je     497f <main+0x39cf>
mov    0x8(%esi),%eax
test   %eax,%eax
je     4977 <main+0x39c7>
mov    %eax,(%esp)
call   f00 <ntfs_inode_close@plt>
mov    %esi,(%esp)
call   d70 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   2730 <main+0x1780>
add    $0x4560,%ebx
test   %esi,%esi
je     4efa <main+0x3f4a>
mov    0x8(%esi),%eax
test   %eax,%eax
je     49c4 <main+0x3a14>
mov    %eax,(%esp)
call   f00 <ntfs_inode_close@plt>
movl   $0x0,0x8(%esi)
mov    0xc(%esi),%edi
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%ebp
sar    $0x1f,%ebp
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebp,%edx
mov    %eax,0x28(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x2c(%esp)
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jle    4d90 <main+0x3de0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   4660 <main+0x36b0>
cmp    $0xffffffff,%eax
je     4da8 <main+0x3df8>
test   %eax,%eax
je     4bb0 <main+0x3c00>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    0xc(%esi),%ecx
orl    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   f60 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     4d30 <main+0x3d80>
mov    0x8(%eax),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   3d30 <main+0x2d80>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   3d30 <main+0x2d80>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   3d30 <main+0x2d80>
test   %ebp,%ebp
je     4d80 <main+0x3dd0>
orl    $0x40,0x4(%esi)
test   %edi,%edi
je     4ab7 <main+0x3b07>
orl    $0x40,0x4(%esi)
test   %eax,%eax
je     4abf <main+0x3b0f>
orl    $0x4,0x4(%esi)
testb  $0x8,(%esi)
je     4b3b <main+0x3b8b>
mov    0x8(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   f50 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     4ed6 <main+0x3f26>
mov    %eax,0x20(%esp)
mov    0xc8(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x90,(%esp)
call   f40 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    4b33 <main+0x3b83>
orl    $0x8,0x4(%esi)
mov    %edi,(%esp)
call   ea0 <ntfs_attr_put_search_ctx@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   47d0 <main+0x3820>
test   %eax,%eax
je     4d20 <main+0x3d70>
cmp    $0x1,%eax
mov    0x4(%esi),%eax
jne    4d10 <main+0x3d60>
or     $0x10,%eax
mov    %eax,0x4(%esi)
test   %eax,(%esi)
jne    4b9a <main+0x3bea>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   f00 <ntfs_inode_close@plt>
test   %eax,%eax
jne    4e00 <main+0x3e50>
movl   $0x0,0x8(%esi)
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jge    4cf8 <main+0x3d48>
mov    0x8(%esi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x4(%esi)
movl   $0x70,0x4(%esp)
movl   $0x1,(%esp)
call   fa0 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
je     4e59 <main+0x3ea9>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    %eax,(%edi)
mov    0xc(%esi),%eax
mov    %edx,0x4(%edi)
mov    %eax,0xc(%edi)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   d60 <ntfs_malloc@plt>
mov    %eax,0x8(%edi)
mov    0x8(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     4ea0 <main+0x3ef0>
mov    0xc(%esi),%eax
mov    0xbc(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   ed0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     4eb2 <main+0x3f02>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    0x1c(%edx),%ecx
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
imul   %ecx,%eax
mov    %eax,%ebp
mov    %ecx,%eax
mull   0x10(%esi)
mov    %edi,(%esp)
mov    %edx,%ecx
add    %ebp,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   ec0 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0xc(%esi),%eax
cmp    $0x0,%edx
mov    0x1c(%eax),%eax
jg     4ce4 <main+0x3d34>
jge    4ce0 <main+0x3d30>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3195(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2530(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x44a,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   e40 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    4ba4 <main+0x3bf4>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
jb     4c80 <main+0x3cd0>
mov    %edi,(%esp)
call   e40 <ntfs_attr_close@plt>
mov    0x4(%esi),%eax
jmp    4b60 <main+0x3bb0>
lea    0x0(%esi,%eiz,1),%esi
jg     4d06 <main+0x3d56>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jbe    4b9a <main+0x3bea>
mov    0xc(%esi),%edi
jmp    4a10 <main+0x3a60>
xchg   %ax,%ax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    4b60 <main+0x3bb0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    4b60 <main+0x3bb0>
xchg   %ax,%ax
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x31e4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2530(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x404,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
jmp    4b7e <main+0x3bce>
lea    0x0(%esi),%esi
orl    $0x80,0x4(%esi)
jmp    4aaf <main+0x3aff>
lea    0x0(%esi,%eiz,1),%esi
jl     4b9a <main+0x3bea>
cmp    %eax,0x28(%esp)
ja     4a10 <main+0x3a60>
jmp    4b9a <main+0x3bea>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x26ec(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2530(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x3fa,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3177(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2530(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x459,0x8(%esp)
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
call   ef0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    -0x31c9(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x434,0x8(%esp)
lea    -0x32f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2530(%ebx),%eax
mov    %eax,(%esp)
call   d20 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   d70 <free@plt>
mov    $0xffffffff,%eax
jmp    4ba4 <main+0x3bf4>
lea    -0x31ae(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x443,0x8(%esp)
jmp    4e7b <main+0x3ecb>
lea    -0x2854(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x41f,0x8(%esp)
jmp    4e7b <main+0x3ecb>
call   ef0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    4ba4 <main+0x3bf4>
nop
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    4f60 <main+0x3fb0>
cmp    %ebp,%ecx
ja     4f98 <main+0x3fe8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    4f48 <main+0x3f98>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     4f88 <main+0x3fd8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    4fa8 <main+0x3ff8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    5018 <main+0x4068>
cmp    %edx,%eax
jb     5018 <main+0x4068>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     5028 <main+0x4078>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    5009 <main+0x4059>
cmp    (%esp),%esi
je     5028 <main+0x4078>
mov    %edi,%eax
xor    %edx,%edx
jmp    4f8c <main+0x3fdc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    4f8c <main+0x3fdc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2730 <main+0x1780>
add    $0x3eb5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x1e4(%ebx),%esi
call   cd4 <_init>
lea    -0x1e8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     509b <main+0x40eb>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x1e8(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    5078 <main+0x40c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   2730 <main+0x1780>
add    $0x3e3a,%ebx
sub    $0x8,%esp
call   da0 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   2730 <main+0x1780>
add    $0x3e23,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
inc    %esp
jne    5160 <_IO_stdin_used+0x74>
jo     512f <_IO_stdin_used+0x43>
and    %ah,0x6e000a73
je     5163 <_IO_stdin_used+0x77>
jae    5162 <_IO_stdin_used+0x76>
insb   (%dx),%es:(%edi)
jne    5175 <_IO_stdin_used+0x89>
je     5169 <_IO_stdin_used+0x7d>
jb     5134 <_IO_stdin_used+0x48>
arpl   %ax,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     5133 <_IO_stdin_used+0x47>
sub    $0x6f6e0020,%eax
outsb  %ds:(%esi),(%dx)
sub    $0x69736572,%eax
fs outsb %fs:%gs:(%esi),(%dx)
je     512d <_IO_stdin_used+0x41>
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x646c6c38
and    %ah,0x646c6c38
and    %ah,0x646c6c38
or     (%eax),%al
and    %esp,0x75(%edx)
data16
data16
gs
jb     5151 <_IO_stdin_used+0x65>
add    %cl,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x20756c6c
and    $0x252f0073,%eax
jae    5164 <_IO_stdin_used+0x78>
add    %ch,0x676f6c2d
sub    $0x6b6e5500,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     51d7 <_IO_stdin_used+0xeb>
and    %ch,0x70(%edi)
je     51d7 <_IO_stdin_used+0xeb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x3a463a63
pushw  $0x493f
cmp    0x6c(%ecx),%ch
jno    51f9 <_IO_stdin_used+0x10d>
cmp    0x56(%esi),%dh
add    %dh,(%edx)
xor    %dh,(%ecx)
xor    (%esi),%ebp
xor    %ebp,(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
outsb  %ds:(%esi),(%dx)
je     5201 <_IO_stdin_used+0x115>
jae    5200 <_IO_stdin_used+0x114>
insb   (%dx),%es:(%edi)
jne    5213 <_IO_stdin_used+0x127>
je     5207 <_IO_stdin_used+0x11b>
jb     51a4 <_IO_stdin_used+0xb8>
or     0x73250a73,%ah
and    $0x53000a73,%eax
gs
popa
jb     5216 <_IO_stdin_used+0x12a>
push   $0x20676e69
outsw  %ds:(%esi),(%dx)
jb     51dc <_IO_stdin_used+0xf0>
jae    5223 <_IO_stdin_used+0x137>
arpl   %si,0x72(%edi,%ebp,2)
and    %ah,0xa756c6c
add    %dl,0x65(%ebx)
popa
jb     5231 <_IO_stdin_used+0x145>
push   $0x20676e69
outsw  %ds:(%esi),(%dx)
jb     51f7 <_IO_stdin_used+0x10b>
arpl   %bp,0x73(%ebp,%esi,2)
je     5242 <_IO_stdin_used+0x156>
jb     51ff <_IO_stdin_used+0x113>
and    $0xa756c6c,%eax
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     520c <_IO_stdin_used+0x120>
outsl  %ds:(%esi),(%dx)
jo     5254 <_IO_stdin_used+0x168>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0xa756c6c
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%esi)
jb     526d <_IO_stdin_used+0x181>
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     5211 <_IO_stdin_used+0x125>
imul   $0x6e69006f,0x66(%esi),%ebp
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x73(%ecx,%eiz,2)
je     5221 <_IO_stdin_used+0x135>
jno    5298 <_IO_stdin_used+0x1ac>
imul   $0x63657300,0x74(%ebp),%esp
je     529b <_IO_stdin_used+0x1af>
jb     522e <_IO_stdin_used+0x142>
jbe    5295 <_IO_stdin_used+0x1a9>
jb     5294 <_IO_stdin_used+0x1a8>
outsl  %ds:(%esi),(%dx)
jae    529a <_IO_stdin_used+0x1ae>
add    %dh,0x65(%esi)
jb     52ad <_IO_stdin_used+0x1c1>
imul   $0x20000000,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esi
inc    %ebx
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x4e(%ebx,%eax,2)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x6e(%ebp,%eiz,2)
addr16 je 52cb <_IO_stdin_used+0x1df>
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x70(%edi)
je     52d5 <_IO_stdin_used+0x1e9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x72202773,%eax
gs
jno    52ed <_IO_stdin_used+0x201>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 52f2 <_IO_stdin_used+0x206>
outsb  %gs:(%esi),(%dx)
je     52b7 <_IO_stdin_used+0x1cb>
or     (%eax),%al
add    %bl,0x6f(%ecx)
jne    52b0 <_IO_stdin_used+0x1c4>
insl   (%dx),%es:(%edi)
jne    5306 <_IO_stdin_used+0x21a>
je     52b5 <_IO_stdin_used+0x1c9>
jae    5307 <_IO_stdin_used+0x21b>
arpl   %bp,%gs:0x66(%ecx)
jns    52bd <_IO_stdin_used+0x1d1>
gs
js     5301 <_IO_stdin_used+0x215>
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0xa2e,0x65(%ebx),%esp
add    %bl,0x6f(%ecx)
jne    52d8 <_IO_stdin_used+0x1ec>
insl   (%dx),%es:(%edi)
popa
jns    52dc <_IO_stdin_used+0x1f0>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     52e0 <_IO_stdin_used+0x1f4>
jne    5335 <_IO_stdin_used+0x249>
and    %ch,%gs:0x6975712d
gs
je     52ec <_IO_stdin_used+0x200>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:0x74(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    5314 <_IO_stdin_used+0x228>
insl   (%dx),%es:(%edi)
popa
jns    5318 <_IO_stdin_used+0x22c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    531d <_IO_stdin_used+0x231>
jae    536f <_IO_stdin_used+0x283>
arpl   %bp,%gs:0x66(%ecx)
jns    5325 <_IO_stdin_used+0x239>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x63(%ecx)
je     5376 <_IO_stdin_used+0x28a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
sub    $0x666e692d,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x20,%al
sub    $0x756c632d,%eax
jae    5394 <_IO_stdin_used+0x2a8>
gs
jb     534f <_IO_stdin_used+0x263>
and    %ch,0x6365732d
je     539a <_IO_stdin_used+0x2ae>
jb     534d <_IO_stdin_used+0x261>
outsl  %ds:(%esi),(%dx)
jb     5350 <_IO_stdin_used+0x264>
sub    $0x73616c2d,%eax
je     5365 <_IO_stdin_used+0x279>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x75(%di)
jae    53be <_IO_stdin_used+0x2d2>
and    %ah,0x65(%edx)
and    %ch,0x6e(%ecx)
and    %ah,0x73(%ecx)
arpl   %sp,0x6e(%ebp)
imul   $0x64726f20,%fs:0x67(%esi),%ebp
gs
jb     538f <_IO_stdin_used+0x2a3>
or     (%eax),%al
add    %cl,(%edx)
and    $0x25762073,%eax
jae    538c <_IO_stdin_used+0x2a0>
sub    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     53d9 <_IO_stdin_used+0x2ed>
jae    53a2 <_IO_stdin_used+0x2b6>
xor    0x29(%edi),%esp
and    %ch,0x6e694620
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     53aa <_IO_stdin_used+0x2be>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6e(%ecx)
jns    53b1 <_IO_stdin_used+0x2c5>
imul   $0x6573206e,0x65(%bp),%esi
arpl   %si,0x72(%edi,%ebp,2)
and    %ch,0x72(%edi)
and    %ah,0x6c(%ebx)
jne    5418 <_IO_stdin_used+0x32c>
je     540c <_IO_stdin_used+0x320>
jb     53d7 <_IO_stdin_used+0x2eb>
or     (%edx),%cl
add    %al,0x6f(%ebx)
jo     5429 <_IO_stdin_used+0x33d>
jb     541b <_IO_stdin_used+0x32f>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x33303032,%eax
and    %dl,0x69(%edx)
arpl   %bp,0x61(%eax)
jb     542f <_IO_stdin_used+0x343>
and    %dl,0x75(%edx)
jae    5443 <_IO_stdin_used+0x357>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     5451 <_IO_stdin_used+0x365>
jb     5443 <_IO_stdin_used+0x357>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,0x746e4120
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %al,0x6c(%ecx)
je     5452 <_IO_stdin_used+0x366>
jo     5454 <_IO_stdin_used+0x368>
jb     5462 <_IO_stdin_used+0x376>
popa
imul   $0xa,0x76(%edi),%ebp
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     5479 <_IO_stdin_used+0x38d>
jb     546b <_IO_stdin_used+0x37f>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,0x3030322d
and    %dl,%ss:0x7a(%ebx)
popa
bound  %ebp,0x6c(%edi)
arpl   %si,0x20(%ebx)
push   %ebx
jp     5481 <_IO_stdin_used+0x395>
imul   $0x73,0x63(%ecx),%esp
imul   $0x0,0xa(%ebx,%esi,2),%esi
or     0x73(%ebp),%dl
popa
cmp    %gs:(%bx,%si),%ah
and    $0x6f5b2073,%eax
jo     54af <_IO_stdin_used+0x3c3>
imul   $0x64205d73,0x6e(%edi),%ebp
gs
jbe    54ae <_IO_stdin_used+0x3c2>
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c69,%eax
sub    $0x6f666e69,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x666e6920,0x74(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     54da <_IO_stdin_used+0x3ee>
popa
je     54d9 <_IO_stdin_used+0x3ed>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    54ec <_IO_stdin_used+0x400>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    54ef <_IO_stdin_used+0x403>
and    %ch,%gs:(%eax)
fs
gs
popaw
jne    54f7 <_IO_stdin_used+0x40b>
je     54b6 <_IO_stdin_used+0x3ca>
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c63,%eax
sub    $0x73756c63,%eax
je     5504 <_IO_stdin_used+0x418>
jb     54c1 <_IO_stdin_used+0x3d5>
push   %edx
inc    %ecx
dec    %esi
inc    %edi
inc    %ebp
and    %ah,(%eax)
dec    %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x66,(%eax),%esp
outsl  %ds:(%esi),(%dx)
jb     54d1 <_IO_stdin_used+0x3e5>
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x65(%edx)
arpl   %si,0x20(%ebx,%esi,2)
imul   $0x73696874,0x20(%esi),%ebp
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x66(%bx)
and    %ah,0x6c(%ebx)
jne    5541 <_IO_stdin_used+0x455>
je     5535 <_IO_stdin_used+0x449>
jb     5545 <_IO_stdin_used+0x459>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c73
sub    $0x74636573,%eax
outsl  %ds:(%esi),(%dx)
jb     5504 <_IO_stdin_used+0x418>
push   %edx
inc    %ecx
dec    %esi
inc    %edi
inc    %ebp
and    %ah,(%eax)
and    %cl,0x6f(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
outsl  %ds:(%esi),(%dx)
jb     5515 <_IO_stdin_used+0x429>
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x65(%edx)
arpl   %si,0x20(%ebx,%esi,2)
imul   $0x73696874,0x20(%esi),%ebp
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    5520 <_IO_stdin_used+0x434>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c49,%eax
sub    $0x646f6e69,%eax
and    %cl,%gs:0x55(%esi)
dec    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
push   $0x6920776f
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jb     55a7 <_IO_stdin_used+0x4bb>
popa
je     55a6 <_IO_stdin_used+0x4ba>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    55b9 <_IO_stdin_used+0x4cd>
and    %dh,0x69(%eax,%ebp,2)
jae    556b <_IO_stdin_used+0x47f>
imul   $0x200a6564,0x6f(%esi),%ebp
and    %ah,(%eax)
and    %ch,0x2d202c46
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %cl,%gs:0x41(%esi)
dec    %ebp
inc    %ebp
and    %ah,(%eax)
push   %ebx
push   $0x6920776f
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jb     55e2 <_IO_stdin_used+0x4f6>
popa
je     55e1 <_IO_stdin_used+0x4f5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    55f4 <_IO_stdin_used+0x508>
and    %dh,0x69(%eax,%ebp,2)
jae    55a6 <_IO_stdin_used+0x4ba>
imul   $0x200a,0xa(%ebp,%eiz,2),%bp
and    %ah,(%eax)
and    %ch,0x2d202c66
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebp
jae    560d <_IO_stdin_used+0x521>
and    %ch,0x73(%ebp,%eiz,2)
jae    55ce <_IO_stdin_used+0x4e2>
arpl   %sp,0x75(%ecx)
je     561c <_IO_stdin_used+0x530>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c71
sub    $0x65697571,%eax
je     55e6 <_IO_stdin_used+0x4fa>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x73(%ebp,%eiz,2)
jae    55f4 <_IO_stdin_used+0x508>
outsl  %ds:(%esi),(%dx)
jne    564b <_IO_stdin_used+0x55f>
jo     564e <_IO_stdin_used+0x562>
je     55e5 <_IO_stdin_used+0x4f9>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    5651 <_IO_stdin_used+0x565>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jb     565d <_IO_stdin_used+0x571>
and    %ch,0x75(%edi)
je     566d <_IO_stdin_used+0x581>
jne    5673 <_IO_stdin_used+0x587>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c56
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
push   %esi
gs
jb     5690 <_IO_stdin_used+0x5a4>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     5694 <_IO_stdin_used+0x5a8>
popa
je     5693 <_IO_stdin_used+0x5a7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x69687420,0x74(%esi),%ebp
jae    5671 <_IO_stdin_used+0x585>
push   $0xa706c65
or     (%eax),%al
push   %ebx
gs
popa
jb     56c0 <_IO_stdin_used+0x5d4>
push   $0x20676e69
outsw  %ds:(%esi),(%dx)
jb     5686 <_IO_stdin_used+0x59a>
jae    56cd <_IO_stdin_used+0x5e1>
arpl   %si,0x72(%edi,%ebp,2)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%di)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    56a5 <_IO_stdin_used+0x5b9>
and    $0xa756c6c,%eax
add    %al,(%eax)
add    %dl,0x65(%ebx)
popa
jb     56e8 <_IO_stdin_used+0x5fc>
push   $0x20676e69
outsw  %ds:(%esi),(%dx)
jb     56ae <_IO_stdin_used+0x5c2>
arpl   %bp,0x73(%ebp,%esi,2)
je     56f9 <_IO_stdin_used+0x60d>
jb     56b6 <_IO_stdin_used+0x5ca>
jb     56f9 <_IO_stdin_used+0x60d>
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%di)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    56ce <_IO_stdin_used+0x5e2>
and    $0xa756c6c,%eax
add    %al,(%eax)
bound  %edi,0x74(%ecx)
gs
jae    56ce <_IO_stdin_used+0x5e2>
jo     5715 <_IO_stdin_used+0x629>
jb     56d2 <_IO_stdin_used+0x5e6>
jae    5719 <_IO_stdin_used+0x62d>
arpl   %si,0x72(%edi,%ebp,2)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x79(%edx)
je     5731 <_IO_stdin_used+0x645>
jae    56ee <_IO_stdin_used+0x602>
jo     5735 <_IO_stdin_used+0x649>
jb     56f2 <_IO_stdin_used+0x606>
arpl   %bp,0x73(%ebp,%esi,2)
je     573d <_IO_stdin_used+0x651>
jb     56fa <_IO_stdin_used+0x60e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    5710 <_IO_stdin_used+0x624>
jo     5757 <_IO_stdin_used+0x66b>
jb     5714 <_IO_stdin_used+0x628>
arpl   %bp,0x73(%ebp,%esi,2)
je     575f <_IO_stdin_used+0x673>
jb     571c <_IO_stdin_used+0x630>
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x79(%edx)
je     5771 <_IO_stdin_used+0x685>
jae    572e <_IO_stdin_used+0x642>
jo     5775 <_IO_stdin_used+0x689>
jb     5732 <_IO_stdin_used+0x646>
jbe    5783 <_IO_stdin_used+0x697>
insb   (%dx),%es:(%edi)
jne    5784 <_IO_stdin_used+0x698>
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    5750 <_IO_stdin_used+0x664>
jo     5797 <_IO_stdin_used+0x6ab>
jb     5754 <_IO_stdin_used+0x668>
jbe    57a5 <_IO_stdin_used+0x6b9>
insb   (%dx),%es:(%edi)
jne    57a6 <_IO_stdin_used+0x6ba>
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x6c(%ebx)
jne    57bf <_IO_stdin_used+0x6d3>
je     57b3 <_IO_stdin_used+0x6c7>
jb     57c3 <_IO_stdin_used+0x6d7>
and    %dh,0x65(%eax)
jb     5775 <_IO_stdin_used+0x689>
jbe    57c6 <_IO_stdin_used+0x6da>
insb   (%dx),%es:(%edi)
jne    57c7 <_IO_stdin_used+0x6db>
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %ch,0x6e(%ecx)
imul   $0x657a696c,0x61(%ecx,%ebp,2),%esi
and    %ch,%fs:0x66(%ebp)
je     5798 <_IO_stdin_used+0x6ac>
jb     57df <_IO_stdin_used+0x6f3>
arpl   %bp,0x72(%edi)
fs
jae    57a0 <_IO_stdin_used+0x6b4>
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ch,0x66(%ebp)
je     57ac <_IO_stdin_used+0x6c0>
jb     57f3 <_IO_stdin_used+0x707>
arpl   %bp,0x72(%edi)
fs
jae    57b4 <_IO_stdin_used+0x6c8>
imul   $0x20657375,0x20(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %ch,0x66(%ebp)
je     57cc <_IO_stdin_used+0x6e0>
jb     5813 <_IO_stdin_used+0x727>
arpl   %bp,0x72(%edi)
fs
jae    57d4 <_IO_stdin_used+0x6e8>
jo     581b <_IO_stdin_used+0x72f>
jb     581b <_IO_stdin_used+0x72f>
outsb  %gs:(%esi),(%dx)
je     581d <_IO_stdin_used+0x731>
and    %ah,%gs:(%bx,%si)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x79(%edx)
je     5831 <_IO_stdin_used+0x745>
jae    57ee <_IO_stdin_used+0x702>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x72(%esi)
gs and %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    5810 <_IO_stdin_used+0x724>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x72(%esi)
gs and %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x6c(%ebx)
jne    587f <_IO_stdin_used+0x793>
je     5873 <_IO_stdin_used+0x787>
jb     5883 <_IO_stdin_used+0x797>
and    %ch,0x66(%edi)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %dh,0x65(%eax)
jb     588f <_IO_stdin_used+0x7a3>
outsb  %gs:(%esi),(%dx)
je     5891 <_IO_stdin_used+0x7a5>
and    %ah,%gs:0x72(%bp)
gs and %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x79(%edx)
je     58b1 <_IO_stdin_used+0x7c5>
jae    586e <_IO_stdin_used+0x782>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x73(%ebp)
gs
jb     5876 <_IO_stdin_used+0x78a>
fs
popa
je     58bb <_IO_stdin_used+0x7cf>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    5890 <_IO_stdin_used+0x7a4>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x73(%ebp)
gs
jb     5898 <_IO_stdin_used+0x7ac>
fs
popa
je     58dd <_IO_stdin_used+0x7f1>
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x6c(%ebx)
jne    58ff <_IO_stdin_used+0x813>
je     58f3 <_IO_stdin_used+0x807>
jb     5903 <_IO_stdin_used+0x817>
and    %ch,0x66(%edi)
and    %dh,0x73(%ebp)
gs
jb     58b9 <_IO_stdin_used+0x7cd>
fs
popa
je     58fe <_IO_stdin_used+0x812>
and    %ah,(%eax)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %dh,0x65(%eax)
jb     590f <_IO_stdin_used+0x823>
outsb  %gs:(%esi),(%dx)
je     5911 <_IO_stdin_used+0x825>
and    %dh,%gs:0x73(%di)
gs
jb     58d8 <_IO_stdin_used+0x7ec>
fs
popa
je     591d <_IO_stdin_used+0x831>
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %ah,0x79(%edx)
je     5931 <_IO_stdin_used+0x845>
jae    58ee <_IO_stdin_used+0x802>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
je     5936 <_IO_stdin_used+0x84a>
fs
popa
je     593a <_IO_stdin_used+0x84e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %dh,0x65(%ebx)
arpl   %si,0x72(%edi,%ebp,2)
jae    5910 <_IO_stdin_used+0x824>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
je     5958 <_IO_stdin_used+0x86c>
fs
popa
je     595c <_IO_stdin_used+0x870>
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %ah,0x6c(%ebx)
jne    597f <_IO_stdin_used+0x893>
je     5973 <_IO_stdin_used+0x887>
jb     5983 <_IO_stdin_used+0x897>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
je     5979 <_IO_stdin_used+0x88d>
fs
popa
je     597d <_IO_stdin_used+0x891>
and    %ah,(%eax)
and    %ah,(%eax)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %dh,0x65(%eax)
jb     598f <_IO_stdin_used+0x8a3>
outsb  %gs:(%esi),(%dx)
je     5991 <_IO_stdin_used+0x8a5>
and    %ch,%gs:0x65(%di)
je     5998 <_IO_stdin_used+0x8ac>
fs
popa
je     599c <_IO_stdin_used+0x8b0>
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%edx)
and    %ah,0xa756c6c
add    %ch,-0x7f00007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
decl   -0x7d(%eax)
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
lcall  *(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
(bad)
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
lcall  *-0x5700007e(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
ljmp   *0x48ffff83(%eax)
(bad)
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
cmp    %al,-0x7c570001(%edx)
(bad)
decl   -0x7d(%eax)
(bad)
lcall  *(%eax)
(bad)
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
add    %al,-0x7c570001(%edx)
(bad)
ljmp   *-0x5700007d(%eax)
cmp    $0xffffffff,%edi
test   $0x83,%al
(bad)
(bad)
call   a9005a92 <_end+0xa8ffc612>
cmp    $0xffffffff,%edi
enter  $0xff81,$0xff
test   $0x83,%al
(bad)
ljmp   *-0x4f00007d(%eax)
cmp    $0xff8a39ff,%edi
pushl  (%ecx,%ecx,4)
(bad)
push   %eax
mov    %bh,%bh
push   %esi
mov    %bh,%bh
incl   -0x78(%ebx)
(bad)
ljmp   *0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
add    %ah,0x6d(%ebp,%esi,2)
jo     5ba1 <_IO_stdin_used+0xab5>
imul   $0x7375,0x0(%ebp,%eiz,2),%bp
popa
add    %dh,%gs:0x65(%bp)
jb     5bc4 <_IO_stdin_used+0xad8>
imul   $0x72617000,0x6e(%edi),%ebp
jae    5bbf <_IO_stdin_used+0xad3>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     5bd2 <_IO_stdin_used+0xae6>
imul   $0x72700073,0x6e(%edi),%ebp
imul   $0x74616d5f,0x74(%esi),%ebp
arpl   %bp,0x0(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x646f6e49,0x0(%esi),%ebp
cmp    %gs:(%eax),%ah
and    $0xa756c6c,%eax
add    %al,0x6f(%ebx)
jne    5bf1 <_IO_stdin_used+0xb05>
outsb  %fs:(%esi),(%dx)
daa
je     5baa <_IO_stdin_used+0xabe>
jb     5bf1 <_IO_stdin_used+0xb05>
popa
and    %dh,%fs:0x65(%eax,%ebp,2)
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
jae    5bcb <_IO_stdin_used+0xadf>
or     (%eax),%al
or     %ebx,0x30(%ebx)
js     5bc9 <_IO_stdin_used+0xadd>
xor    %dh,(%edx)
pop    %eax
pop    %ebp
or     (%eax),%al
or     %ecx,(%ecx)
push   %esi
inc    %ebx
dec    %esi
or     %ecx,0x4e(%ebx,%eax,2)
or     %ecx,0x6e(%ebp,%eiz,2)
addr16 je 5c22 <_IO_stdin_used+0xb36>
or     (%eax),%al
or     %ecx,(%ecx)
and    $0x9646c6c,%eax
and    $0x2d646c6c,%eax
and    $0x20646c6c,%eax
sub    %ah,0x29646c6c
or     (%eax),%al
add    %al,(%eax)
add    %dh,(%eax)
js     5c00 <_IO_stdin_used+0xb14>
xor    %dh,(%edx)
js     5bff <_IO_stdin_used+0xb13>
jae    5c4c <_IO_stdin_used+0xb60>
imul   $0x2d206465,0x70(%eax),%esi
and    %ah,0x74(%ecx)
je     5c5f <_IO_stdin_used+0xb73>
and    %ch,0x73(%ecx)
and    %dh,0x65(%edx)
jae    5c5e <_IO_stdin_used+0xb72>
fs outsb %fs:%gs:(%esi),(%dx)
je     5c04 <_IO_stdin_used+0xb18>
add    %ah,0x6c(%ebx)
jne    5c72 <_IO_stdin_used+0xb86>
je     5c66 <_IO_stdin_used+0xb7a>
jb     5c62 <_IO_stdin_used+0xb76>
imul   $0x7500,0x64(%esi),%bp
je     5c74 <_IO_stdin_used+0xb88>
insb   (%dx),%es:(%edi)
jae    5c3c <_IO_stdin_used+0xb50>
arpl   %ax,(%eax)
push   %esp
push   $0x65642065
jbe    5c81 <_IO_stdin_used+0xb95>
arpl   %sp,0x20(%ebp)
and    $0x6f642073,%eax
gs
jae    5c91 <_IO_stdin_used+0xba5>
daa
je     5c46 <_IO_stdin_used+0xb5a>
gs
js     5c92 <_IO_stdin_used+0xba6>
jae    5c9f <_IO_stdin_used+0xbb3>
or     (%eax),%al
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     5c94 <_IO_stdin_used+0xba8>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
je     5ca5 <_IO_stdin_used+0xbb9>
outsb  %ds:(%esi),(%dx)
jne    5ca4 <_IO_stdin_used+0xbb8>
or     %cs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    5cbe <_IO_stdin_used+0xbd2>
je     5c72 <_IO_stdin_used+0xb86>
daa
and    $0x49002773,%eax
outsb  %ds:(%esi),(%dx)
jbe    5cbc <_IO_stdin_used+0xbd0>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
daa
and    $0xa2e2773,%eax
add    %cl,0x6e(%ecx)
jbe    5cd0 <_IO_stdin_used+0xbe4>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     5c9a <_IO_stdin_used+0xbae>
daa
and    $0x27732a2e,%eax
or     %cs:(%eax),%al
cmp    $0x4d,%al
inc    %esi
push   %esp
and    $0x3e756c6c,%eax
add    %al,0x6f(%ebx)
jne    5cfd <_IO_stdin_used+0xc11>
outsb  %fs:(%esi),(%dx)
daa
je     5cb6 <_IO_stdin_used+0xbca>
outsl  %ds:(%esi),(%dx)
jo     5cfe <_IO_stdin_used+0xc12>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
and    $0x732563,%eax
push   %eax
popa
je     5d19 <_IO_stdin_used+0xc2d>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    5cda <_IO_stdin_used+0xbee>
je     5d2e <_IO_stdin_used+0xc42>
jne    5d2c <_IO_stdin_used+0xc40>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
cmp    $0x55,%al
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,%ds:(%eax)
and    $0x43002973,%eax
outsl  %ds:(%esi),(%dx)
jne    5d45 <_IO_stdin_used+0xc59>
outsb  %fs:(%esi),(%dx)
daa
je     5cfe <_IO_stdin_used+0xc12>
outsl  %ds:(%esi),(%dx)
jo     5d46 <_IO_stdin_used+0xc5a>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    5d5b <_IO_stdin_used+0xc6f>
outsb  %fs:(%esi),(%dx)
daa
je     5d14 <_IO_stdin_used+0xc28>
jb     5d5b <_IO_stdin_used+0xc6f>
popa
and    %ah,%fs:(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    5d71 <_IO_stdin_used+0xc85>
outsb  %fs:(%esi),(%dx)
daa
je     5d2a <_IO_stdin_used+0xc3e>
jb     5d71 <_IO_stdin_used+0xc85>
popa
and    %ah,%fs:0x242f5446(,%ecx,2)
inc    %edx
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x72(%ebp)
jb     5d8f <_IO_stdin_used+0xca3>
jb     5d42 <_IO_stdin_used+0xc56>
jb     5d89 <_IO_stdin_used+0xc9d>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
dec    %edi
jne    5dae <_IO_stdin_used+0xcc2>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     5dbd <_IO_stdin_used+0xcd1>
and    %ah,%cs:(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     5db6 <_IO_stdin_used+0xcca>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    5dc2 <_IO_stdin_used+0xcd6>
outsb  %fs:(%esi),(%dx)
daa
je     5d7b <_IO_stdin_used+0xc8f>
outsl  %ds:(%esi),(%dx)
jo     5dc3 <_IO_stdin_used+0xcd7>
outsb  %ds:(%esi),(%dx)
and    %ah,0x242f5446(,%ecx,2)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
add    %al,0x6f(%ebx)
jne    5ddb <_IO_stdin_used+0xcef>
outsb  %fs:(%esi),(%dx)
daa
je     5d94 <_IO_stdin_used+0xca8>
jb     5ddb <_IO_stdin_used+0xcef>
popa
and    %cl,%fs:0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x756c6c
inc    %ebp
jb     5dfe <_IO_stdin_used+0xd12>
outsl  %ds:(%esi),(%dx)
jb     5daf <_IO_stdin_used+0xcc3>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    5e15 <_IO_stdin_used+0xd29>
je     5dd2 <_IO_stdin_used+0xce6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
sub    $0x20,%al
jne    5e2f <_IO_stdin_used+0xd43>
imul   $0x66656420,0x67(%esi),%ebp
popa
jne    5e32 <_IO_stdin_used+0xd46>
je     5de8 <_IO_stdin_used+0xcfc>
daa
and    $0xa2e2773,%eax
add    %al,(%eax)
inc    %ebp
jb     5e45 <_IO_stdin_used+0xd59>
outsl  %ds:(%esi),(%dx)
jb     5df6 <_IO_stdin_used+0xd0a>
addr16
gs
je     5e4e <_IO_stdin_used+0xd62>
imul   $0x666e6920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     5e51 <_IO_stdin_used+0xd65>
popa
je     5e50 <_IO_stdin_used+0xd64>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    5e63 <_IO_stdin_used+0xd77>
and    %ah,0x46000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     5e67 <_IO_stdin_used+0xd7b>
jb     5e71 <_IO_stdin_used+0xd85>
imul   $0x65687720,0x65(%esi),%ebp
je     5e75 <_IO_stdin_used+0xd89>
gs
jb     5e30 <_IO_stdin_used+0xd44>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    5e88 <_IO_stdin_used+0xd9c>
je     5e81 <_IO_stdin_used+0xd95>
add    %al,%fs:(%eax)
add    %dl,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     5e8f <_IO_stdin_used+0xda3>
and    %ch,%gs:0x70(%edi)
je     5e9b <_IO_stdin_used+0xdaf>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2065726f,0x6e(%edi),%esp
je     5ea9 <_IO_stdin_used+0xdbd>
imul   $0x6f727265,0x20(%ebx),%esi
jb     5e78 <_IO_stdin_used+0xd8c>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    5ec5 <_IO_stdin_used+0xdd9>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    5ed6 <_IO_stdin_used+0xdea>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5ee0 <_IO_stdin_used+0xdf4>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     5ee1 <_IO_stdin_used+0xdf5>
popa
fs
jns    5ea0 <_IO_stdin_used+0xdb4>
gs
js     5ee6 <_IO_stdin_used+0xdfa>
insb   (%dx),%es:(%edi)
jne    5ef9 <_IO_stdin_used+0xe0d>
imul   $0x6f20796c,0x65(%esi),%esi
jo     5ef4 <_IO_stdin_used+0xe08>
outsb  %ds:(%esi),(%dx)
gs fs or %cs:%fs:%gs:0x65(%eax,%ebp,2),%dl
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5f0a <_IO_stdin_used+0xe1e>
and    %ch,%gs:0x61(%ebp)
jns    5ec3 <_IO_stdin_used+0xdd7>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
jb     5f0f <_IO_stdin_used+0xe23>
popa
fs
jns    5ece <_IO_stdin_used+0xde2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    5f20 <_IO_stdin_used+0xe34>
je     5f19 <_IO_stdin_used+0xe2d>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     5eda <_IO_stdin_used+0xdee>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5f27 <_IO_stdin_used+0xe3b>
gs
jb     5ee2 <_IO_stdin_used+0xdf6>
jae    5f33 <_IO_stdin_used+0xe47>
data16
je     5f3e <_IO_stdin_used+0xe52>
popa
jb     5f2f <_IO_stdin_used+0xe43>
and    %ch,0x61(%ebp)
jns    5eef <_IO_stdin_used+0xe03>
jne    5f44 <_IO_stdin_used+0xe58>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x68(%edi)
imul   $0x756f630a,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     5f54 <_IO_stdin_used+0xe68>
imul   $0x6620,0x64(%ebp),%sp
outsl  %ds:(%esi),(%dx)
jb     5f14 <_IO_stdin_used+0xe28>
gs
js     5f58 <_IO_stdin_used+0xe6c>
insl   (%dx),%es:(%edi)
jo     5f66 <_IO_stdin_used+0xe7a>
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     5f28 <_IO_stdin_used+0xe3c>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
data16
jne    5f86 <_IO_stdin_used+0xe9a>
gs
jb     5f3d <_IO_stdin_used+0xe51>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    5f48 <_IO_stdin_used+0xe5c>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6f(%esi)
jb     5f97 <_IO_stdin_used+0xeab>
and    %ch,%gs:0x70(%edi)
je     5fa3 <_IO_stdin_used+0xeb7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
jbe    5fb2 <_IO_stdin_used+0xec6>
imul   $0x20736968,0x74(%eax,%eiz,1),%esp
arpl   %bp,0x65(%eax)
arpl   %bp,0x2c(%ebx)
and    %ah,0x75(%edx)
je     5f76 <_IO_stdin_used+0xe8a>
je     5fc0 <_IO_stdin_used+0xed4>
imul   $0x6e207369,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
je     5f82 <_IO_stdin_used+0xe96>
jb     5fc9 <_IO_stdin_used+0xedd>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:0x6e(%ecx),%ah
and    %ch,%fs:0x61(%ebp)
jns    5f96 <_IO_stdin_used+0xeaa>
insb   (%dx),%es:(%edi)
gs
popa
and    %dh,%fs:0x20(%edi,%ebp,2)
fs
popa
je     5fe3 <_IO_stdin_used+0xef7>
and    %ah,0x6f(%ebx)
jb     5ff9 <_IO_stdin_used+0xf0d>
jne    5ff9 <_IO_stdin_used+0xf0d>
je     5ff4 <_IO_stdin_used+0xf08>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x65642065
jbe    6001 <_IO_stdin_used+0xf15>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    6013 <_IO_stdin_used+0xf27>
daa
je     5fc8 <_IO_stdin_used+0xedc>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    6021 <_IO_stdin_used+0xf35>
and    %bh,%gs:0x6f(%ecx)
jne    5fe5 <_IO_stdin_used+0xef9>
jae    602c <_IO_stdin_used+0xf40>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    6045 <_IO_stdin_used+0xf59>
arpl   %sp,0x3f(%ebp)
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    606a <_IO_stdin_used+0xf7e>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     6062 <_IO_stdin_used+0xf76>
jb     6077 <_IO_stdin_used+0xf8b>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    6043 <_IO_stdin_used+0xf57>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     603d <_IO_stdin_used+0xf51>
das
fs
gs
jbe    6051 <_IO_stdin_used+0xf65>
push   $0x29316164
aas
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%edi)
push   $0x77207265
popa
jns    605a <_IO_stdin_used+0xf6e>
popa
jb     60ac <_IO_stdin_used+0xfc0>
jne    60ad <_IO_stdin_used+0xfc1>
fs
aas
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    60bc <_IO_stdin_used+0xfd0>
jae    60c9 <_IO_stdin_used+0xfdd>
outsb  %gs:(%esi),(%dx)
je     6087 <_IO_stdin_used+0xf9b>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %ch,0x6e(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     60e5 <_IO_stdin_used+0xff9>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
bound  %ebp,0x6f(%edi)
je     609f <_IO_stdin_used+0xfb3>
imul   $0x45434957,0x54(%eax,%eiz,1),%esi
and    %ecx,(%edx)
push   %esp
push   $0x73752065
popa
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
data16
and    %dh,0x61(%eax)
jb     6102 <_IO_stdin_used+0x1016>
insl   (%dx),%es:(%edi)
gs
je     610a <_IO_stdin_used+0x101e>
jb     60c7 <_IO_stdin_used+0xfdb>
imul   $0x79726576,0x20(%ebx),%esi
and    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
inc    %ecx
dec    %esi
push   %esp
and    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    60d8 <_IO_stdin_used+0xfec>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %dh,0x69(%eax,%ebp,2)
jae    6103 <_IO_stdin_used+0x1017>
jae    6154 <_IO_stdin_used+0x1068>
data16
je     615f <_IO_stdin_used+0x1073>
popa
jb     6150 <_IO_stdin_used+0x1064>
or     %cs:(%eax),%al
add    %al,(%eax)
push   %esp
push   $0x544e2065
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     6171 <_IO_stdin_used+0x1085>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     6174 <_IO_stdin_used+0x1088>
fs and %dl,%cs:%fs:0x6c(%eax)
gs
popa
jae    617d <_IO_stdin_used+0x1091>
and    %dh,0x65(%edx)
jae    6192 <_IO_stdin_used+0x10a6>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     619a <_IO_stdin_used+0x10ae>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
and    %cl,(%edx)
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     61a5 <_IO_stdin_used+0x10b9>
jb     61ae <_IO_stdin_used+0x10c2>
jns    6170 <_IO_stdin_used+0x1084>
and    %dh,0x6f(%ebx)
and    %ch,0x6f(%ebp)
jne    61ba <_IO_stdin_used+0x10ce>
je     61b7 <_IO_stdin_used+0x10cb>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jne    61c1 <_IO_stdin_used+0x10d5>
and    %ah,%fs:0x65(%edx)
and    %ah,0x6e(%edi,%ebp,2)
and    %dh,%gs:0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    6194 <_IO_stdin_used+0x10a8>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    61e1 <_IO_stdin_used+0x10f5>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    61f2 <_IO_stdin_used+0x1106>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x6f(%edx)
jne    6200 <_IO_stdin_used+0x1114>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %al,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x72612073,0x65(%ebx),%esp
cmp    %gs:(%edx),%cl
and    %al,0x29(%ecx)
and    %dl,0x68(%ebx)
jne    622c <_IO_stdin_used+0x1140>
outsl  %fs:(%esi),(%dx)
ja     622a <_IO_stdin_used+0x113e>
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     6237 <_IO_stdin_used+0x114b>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     622f <_IO_stdin_used+0x1143>
jb     6238 <_IO_stdin_used+0x114c>
jns    61fc <_IO_stdin_used+0x1110>
or     (%eax),%ah
inc    %edx
sub    %esp,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x6b(%ebx),%esp
and    %ah,(%edi)
push   %ebx
popa
data16
gs
insb   (%dx),%es:(%edi)
jns    6205 <_IO_stdin_used+0x1119>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    6250 <_IO_stdin_used+0x1164>
and    %cl,0x61(%eax)
jb     6254 <_IO_stdin_used+0x1168>
ja     6253 <_IO_stdin_used+0x1167>
jb     6259 <_IO_stdin_used+0x116d>
daa
and    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     627c <_IO_stdin_used+0x1190>
and    %dh,0x73(%ecx,%eiz,2)
imul   $0x72,0x61(%edx),%esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x6f(%esi)
je     6283 <_IO_stdin_used+0x1197>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
gs
popa
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     6293 <_IO_stdin_used+0x11a7>
and    %ah,0x73(%ecx,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %dh,0x68(%si)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x43200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
push   %ebp
jae    62b5 <_IO_stdin_used+0x11c9>
and    %ah,(%edi)
inc    %ebp
push   $0x65
arpl   %si,0x20(%edi,%eiz,1)
data16
jb     62cb <_IO_stdin_used+0x11df>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     62d8 <_IO_stdin_used+0x11ec>
and    %al,0x78(%ebp)
jo     62d6 <_IO_stdin_used+0x11ea>
outsl  %ds:(%esi),(%dx)
jb     62d2 <_IO_stdin_used+0x11e6>
jb     628f <_IO_stdin_used+0x11a3>
je     62e0 <_IO_stdin_used+0x11f4>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    6299 <_IO_stdin_used+0x11ad>
jb     62e0 <_IO_stdin_used+0x11f4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    62e4 <_IO_stdin_used+0x11f8>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x44200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    62b7 <_IO_stdin_used+0x11cb>
jb     62fa <_IO_stdin_used+0x120e>
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
jo     6316 <_IO_stdin_used+0x122a>
gs
jbe    6310 <_IO_stdin_used+0x1224>
outsl  %ds:(%esi),(%dx)
jne    631d <_IO_stdin_used+0x1231>
insb   (%dx),%es:(%edi)
jns    62cd <_IO_stdin_used+0x11e1>
je     6317 <_IO_stdin_used+0x122b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     62d7 <_IO_stdin_used+0x11eb>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
addr16 popa
imul   $0x63696877,0x20(%esi),%ebp
push   $0x6c697720
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x75(%ecx)
je     6347 <_IO_stdin_used+0x125b>
insl   (%dx),%es:(%edi)
popa
je     6345 <_IO_stdin_used+0x1259>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    6302 <_IO_stdin_used+0x1216>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x65687420,0x65(%edx),%edi
and    %ch,0x6f(%edx)
jne    6367 <_IO_stdin_used+0x127b>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
inc    %ebp
sub    %esp,(%eax)
push   %ebx
jne    6363 <_IO_stdin_used+0x1277>
insl   (%dx),%es:(%edi)
imul   $0x63726f66,0x27(%eax,%eiz,1),%esi
gs
daa
and    %ch,0x70(%edi)
je     637a <_IO_stdin_used+0x128e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x73207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    639c <_IO_stdin_used+0x12b0>
imul   $0x20746920,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     6353 <_IO_stdin_used+0x1267>
jb     639a <_IO_stdin_used+0x12ae>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs sub %ebp,%fs:%gs:(%esi)
or     (%eax),%ah
inc    %esi
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
je     63ae <_IO_stdin_used+0x12c2>
jae    63b7 <_IO_stdin_used+0x12cb>
outsl  %ds:(%esi),(%dx)
jne    63bb <_IO_stdin_used+0x12cf>
je     6389 <_IO_stdin_used+0x129d>
and    %cl,0x6f(%ebp)
jne    63c2 <_IO_stdin_used+0x12d6>
je     6376 <_IO_stdin_used+0x128a>
je     63c0 <_IO_stdin_used+0x12d4>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    63cc <_IO_stdin_used+0x12e0>
and    %dh,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,(%edi)
jb     63ea <_IO_stdin_used+0x12fe>
daa
and    %ch,0x6f(%ebp)
jne    63ef <_IO_stdin_used+0x1303>
je     63a3 <_IO_stdin_used+0x12b7>
outsl  %ds:(%esi),(%dx)
jo     63fa <_IO_stdin_used+0x130e>
imul   $0x59000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    63b0 <_IO_stdin_used+0x12c4>
jae    63f7 <_IO_stdin_used+0x130b>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
popa
and    %dl,0x6f(%ebx)
data16
je     63f6 <_IO_stdin_used+0x130a>
inc    %ecx
dec    %ecx
inc    %esp
das
inc    %esi
popa
imul   $0x41,0x52(%ebp),%esp
dec    %ecx
inc    %esp
and    %ch,0x61(%eax)
jb     6419 <_IO_stdin_used+0x132d>
ja     6418 <_IO_stdin_used+0x132c>
jb     641e <_IO_stdin_used+0x1332>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x75(%ebp)
jae    6436 <_IO_stdin_used+0x134a>
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x63(%ecx)
je     6437 <_IO_stdin_used+0x134b>
jbe    6431 <_IO_stdin_used+0x1345>
je     6437 <_IO_stdin_used+0x134b>
fs
sub    $0xa,%al
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     63ff <_IO_stdin_used+0x1313>
fs
gs
jbe    644c <_IO_stdin_used+0x1360>
arpl   %sp,0x20(%ebp)
jne    6456 <_IO_stdin_used+0x136a>
fs
gs
jb     640c <_IO_stdin_used+0x1320>
das
fs
gs
jbe    6420 <_IO_stdin_used+0x1334>
insl   (%dx),%es:(%edi)
popa
jo     6465 <_IO_stdin_used+0x1379>
gs
jb     6424 <_IO_stdin_used+0x1338>
and    %ch,(%eax)
gs cs and %ch,%cs:%gs:(%bx)
fs
gs
jbe    6433 <_IO_stdin_used+0x1347>
insl   (%dx),%es:(%edi)
popa
jo     6478 <_IO_stdin_used+0x138c>
gs
jb     643a <_IO_stdin_used+0x134e>
outsb  %ds:(%esi),(%dx)
jbe    6477 <_IO_stdin_used+0x138b>
imul   $0x61686165,%fs:0x5f(%ecx),%esp
popa
bound  %esp,0x63(%ebx)
xor    %ebp,(%ecx)
or     0x20(%edi,%ebp,2),%dh
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    6492 <_IO_stdin_used+0x13a6>
je     6446 <_IO_stdin_used+0x135a>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    6497 <_IO_stdin_used+0x13ab>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
insl   (%dx),%es:(%edi)
jb     64a1 <_IO_stdin_used+0x13b5>
imul   $0x75636f64,0x20(%edi,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     64ae <_IO_stdin_used+0x13c2>
je     64b8 <_IO_stdin_used+0x13cc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     6476 <_IO_stdin_used+0x138a>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    64d2 <_IO_stdin_used+0x13e6>
and    %ch,%gs:0x73(%ecx)
and    %dh,0x63(%ebx)
push   $0x6c756465
gs and %ah,%fs:%gs:0x6f(%esi)
jb     6498 <_IO_stdin_used+0x13ac>
arpl   %bp,0x65(%eax)
arpl   %bp,0x2e(%ebx)
or     0x6c(%eax),%dl
gs
popa
jae    64ea <_IO_stdin_used+0x13fe>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     64ab <_IO_stdin_used+0x13bf>
imul   $0x6957206f,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     650a <_IO_stdin_used+0x141e>
and    %dl,0x49(%edi,%edx,2)
inc    %ebx
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     64c2 <_IO_stdin_used+0x13d6>
jne    6517 <_IO_stdin_used+0x142b>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     6512 <_IO_stdin_used+0x1426>
gs
daa
and    %ch,0x70(%edi)
je     651f <_IO_stdin_used+0x1433>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:0x4f(%esi),%cl
push   %esp
inc    %ebp
cmp    (%eax),%ah
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    64e7 <_IO_stdin_used+0x13fb>
push   $0x6e206461
outsl  %ds:(%esi),(%dx)
je     64ef <_IO_stdin_used+0x1403>
jae    6534 <_IO_stdin_used+0x1448>
push   $0x6c756465
gs and %ah,%fs:%gs:0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx,%eiz,2)
je     6508 <_IO_stdin_used+0x141c>
je     6553 <_IO_stdin_used+0x1467>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    6559 <_IO_stdin_used+0x146d>
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    651b <_IO_stdin_used+0x142f>
jbe    656c <_IO_stdin_used+0x1480>
insb   (%dx),%es:(%edi)
jne    656d <_IO_stdin_used+0x1481>
or     %gs:0x73(%ebp),%dh
imul   $0x66746e20,0x67(%esi),%ebp
jae    657a <_IO_stdin_used+0x148e>
outsl  %ds:(%esi),(%dx)
jne    657e <_IO_stdin_used+0x1492>
je     6532 <_IO_stdin_used+0x1446>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%ebx)
jne    658e <_IO_stdin_used+0x14a2>
outsl  %fs:(%esi),(%dx)
ja     658c <_IO_stdin_used+0x14a0>
and    %dh,0x79(%ebx)
jae    6597 <_IO_stdin_used+0x14ab>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     6590 <_IO_stdin_used+0x14a4>
jb     6599 <_IO_stdin_used+0x14ad>
jns    655b <_IO_stdin_used+0x146f>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
imul   $0x70697263,0x73(%eax,%eiz,1),%esi
je     65b4 <_IO_stdin_used+0x14c8>
and    %ch,0x6e(%ecx)
and    %bh,0x6f(%ecx)
jne    65bb <_IO_stdin_used+0x14cf>
or     0x73(%ecx,%ebp,2),%ah
je     65c1 <_IO_stdin_used+0x14d5>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x2e,0x6e(%ebp),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    65ce <_IO_stdin_used+0x14e2>
and    %dh,0x65(%edx)
jo     65dd <_IO_stdin_used+0x14f1>
jb     65e4 <_IO_stdin_used+0x14f8>
and    %dh,0x20(%edi,%ebp,2)
jns    65e5 <_IO_stdin_used+0x14f9>
jne    65ea <_IO_stdin_used+0x14fe>
and    %ah,0x73(%ecx,%ebp,2)
je     65f0 <_IO_stdin_used+0x1504>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     65f3 <_IO_stdin_used+0x1507>
jb     6603 <_IO_stdin_used+0x1517>
or     (%eax),%ch
dec    %esi
dec    %edi
push   %esp
and    %dh,0x20(%edi,%ebp,2)
jne    660e <_IO_stdin_used+0x1522>
and    %ebp,(%ecx)
and    %dh,0x61(%eax,%ebp,2)
je     65c3 <_IO_stdin_used+0x14d7>
imul   $0x63732074,0x69(%esi),%ebp
jb     6615 <_IO_stdin_used+0x1529>
jo     6622 <_IO_stdin_used+0x1536>
jae    65d0 <_IO_stdin_used+0x14e4>
imul   $0x6c,0x6c(%ecx),%ebp
and    %ch,0x74(%esi)
data16
jae    6627 <_IO_stdin_used+0x153b>
outsl  %ds:(%esi),(%dx)
jne    662b <_IO_stdin_used+0x153f>
je     65df <_IO_stdin_used+0x14f3>
outsl  %ds:(%esi),(%dx)
jb     65e2 <_IO_stdin_used+0x14f6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    6634 <_IO_stdin_used+0x1548>
je     65f6 <_IO_stdin_used+0x150a>
outsb  %ds:(%esi),(%dx)
je     6631 <_IO_stdin_used+0x1545>
jae    65fa <_IO_stdin_used+0x150e>
data16
jne    6643 <_IO_stdin_used+0x1557>
and    %ah,%gs:0x72(%ebp,%esi,2)
imul   $0x7568730a,0x67(%esi),%ebp
je     6642 <_IO_stdin_used+0x1556>
outsl  %ds:(%esi),(%dx)
ja     664f <_IO_stdin_used+0x1563>
and    %ch,0x6e(%ecx)
jae    665a <_IO_stdin_used+0x156e>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     6657 <_IO_stdin_used+0x156b>
jb     6614 <_IO_stdin_used+0x1528>
jne    6663 <_IO_stdin_used+0x1577>
outsl  %ds:(%esi),(%dx)
jne    6667 <_IO_stdin_used+0x157b>
je     6629 <_IO_stdin_used+0x153d>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6f762079,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    6681 <_IO_stdin_used+0x1595>
and    %ch,%gs:0x6f(%ebp)
jne    6688 <_IO_stdin_used+0x159c>
je     663c <_IO_stdin_used+0x1550>
ja     667f <_IO_stdin_used+0x1593>
jae    6640 <_IO_stdin_used+0x1554>
outsw  %ds:(%esi),(%dx)
jb     6687 <_IO_stdin_used+0x159b>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     6696 <_IO_stdin_used+0x15aa>
gs
daa
and    %ch,0x6f(%ebp)
jne    66a8 <_IO_stdin_used+0x15bc>
je     665c <_IO_stdin_used+0x1570>
outsl  %ds:(%esi),(%dx)
jo     66b3 <_IO_stdin_used+0x15c7>
imul   $0xa2e,0x6e(%edi),%ebp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     66b1 <_IO_stdin_used+0x15c5>
jb     66bc <_IO_stdin_used+0x15d0>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     66c4 <_IO_stdin_used+0x15d8>
jb     6683 <_IO_stdin_used+0x1597>
and    %dh,0x74(%ebx)
jb     66d0 <_IO_stdin_used+0x15e4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
daa
je     6687 <_IO_stdin_used+0x159b>
jb     66ce <_IO_stdin_used+0x15e2>
je     66e0 <_IO_stdin_used+0x15f4>
jb     66db <_IO_stdin_used+0x15ef>
and    %ah,0x20(%ecx)
jae    66e7 <_IO_stdin_used+0x15fb>
data32 imul $0xa,0x2e(%eax),%di
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    66e1 <_IO_stdin_used+0x15f5>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
jae    6700 <_IO_stdin_used+0x1614>
data32 imul $0x2527,0x20(%eax),%di
jae    66bb <_IO_stdin_used+0x15cf>
and    %ah,%cs:(%eax)
push   %ebp
jae    66ff <_IO_stdin_used+0x1613>
and    %dl,0x20(%esp,%ebp,1)
inc    %edi
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     66c7 <_IO_stdin_used+0x15db>
dec    %ebx
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    671c <_IO_stdin_used+0x1630>
outsb  %fs:(%esi),(%dx)
daa
je     66d5 <_IO_stdin_used+0x15e9>
arpl   %si,0x65(%edx)
popa
je     6720 <_IO_stdin_used+0x1634>
and    %ah,0x20(%ecx)
jae    6725 <_IO_stdin_used+0x1639>
popa
jb     6726 <_IO_stdin_used+0x163a>
push   $0x6e6f6320
je     672f <_IO_stdin_used+0x1643>
js     6740 <_IO_stdin_used+0x1654>
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    6740 <_IO_stdin_used+0x1654>
outsb  %fs:(%esi),(%dx)
daa
je     66f9 <_IO_stdin_used+0x160d>
je     674d <_IO_stdin_used+0x1661>
popa
outsb  %ds:(%esi),(%dx)
jae    674b <_IO_stdin_used+0x165f>
popa
je     6747 <_IO_stdin_used+0x165b>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     6759 <_IO_stdin_used+0x166d>
outsb  %ds:(%esi),(%dx)
je     6717 <_IO_stdin_used+0x162b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
push   %esp
push   $0x69642065
jb     676d <_IO_stdin_used+0x1681>
arpl   %si,0x72(%edi,%ebp,2)
jns    672e <_IO_stdin_used+0x1642>
jae    6784 <_IO_stdin_used+0x1698>
jb     6787 <_IO_stdin_used+0x169b>
arpl   %si,0x72(%ebp,%esi,2)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     6744 <_IO_stdin_used+0x1658>
sub    %ch,0x76(%edi)
gs
jb     674a <_IO_stdin_used+0x165e>
and    $0x6e202964,%eax
gs
jae    67a6 <_IO_stdin_used+0x16ba>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0xa2e,0x73(%ebp),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    67b4 <_IO_stdin_used+0x16c8>
outsb  %fs:(%esi),(%dx)
daa
je     676d <_IO_stdin_used+0x1681>
je     67c1 <_IO_stdin_used+0x16d5>
popa
outsb  %ds:(%esi),(%dx)
jae    67bf <_IO_stdin_used+0x16d3>
popa
je     67bb <_IO_stdin_used+0x16cf>
and    %ah,0x74(%ecx)
je     67cd <_IO_stdin_used+0x16e1>
imul   $0x74206574,0x75(%edx),%esp
jns    67d4 <_IO_stdin_used+0x16e8>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     67d3 <_IO_stdin_used+0x16e7>
outsb  %ds:(%esi),(%dx)
je     6791 <_IO_stdin_used+0x16a5>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     67fa <_IO_stdin_used+0x170e>
imul   $0x74206574,0x75(%edx),%esp
jns    6801 <_IO_stdin_used+0x1715>
and    %dh,%gs:(%eax)
js     67bb <_IO_stdin_used+0x16cf>
xor    %dh,(%edx)
js     67a4 <_IO_stdin_used+0x16b8>
add    %al,(%eax)
inc    %ecx
je     6813 <_IO_stdin_used+0x1727>
jb     680a <_IO_stdin_used+0x171e>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    67cf <_IO_stdin_used+0x16e3>
je     6823 <_IO_stdin_used+0x1737>
jne    6821 <_IO_stdin_used+0x1735>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x6f(%ebx)
jne    682c <_IO_stdin_used+0x1740>
outsb  %fs:(%esi),(%dx)
daa
je     67e5 <_IO_stdin_used+0x16f9>
je     6839 <_IO_stdin_used+0x174d>
popa
outsb  %ds:(%esi),(%dx)
jae    6837 <_IO_stdin_used+0x174b>
popa
je     6833 <_IO_stdin_used+0x1747>
and    %ah,0x74(%ecx)
je     6845 <_IO_stdin_used+0x1759>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     684b <_IO_stdin_used+0x175f>
outsb  %ds:(%esi),(%dx)
je     6809 <_IO_stdin_used+0x171d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ecx
je     686b <_IO_stdin_used+0x177f>
jb     6862 <_IO_stdin_used+0x1776>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    6827 <_IO_stdin_used+0x173b>
je     687b <_IO_stdin_used+0x178f>
jne    6879 <_IO_stdin_used+0x178d>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x72(%ebp)
jb     6887 <_IO_stdin_used+0x179b>
jb     683a <_IO_stdin_used+0x174e>
jb     6881 <_IO_stdin_used+0x1795>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     689e <_IO_stdin_used+0x17b2>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
push   %esp
push   $0x70207369
jb     68b3 <_IO_stdin_used+0x17c7>
addr16 jb 68a8 <_IO_stdin_used+0x17bc>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x6f(%ebx)
data16
je     68cd <_IO_stdin_used+0x17e1>
popa
jb     68be <_IO_stdin_used+0x17d2>
sub    $0x20,%al
jb     68c2 <_IO_stdin_used+0x17d6>
insb   (%dx),%es:(%edi)
gs
popa
jae    68c7 <_IO_stdin_used+0x17db>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     688a <_IO_stdin_used+0x179e>
je     68d4 <_IO_stdin_used+0x17e8>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     68d9 <_IO_stdin_used+0x17ed>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    68ed <_IO_stdin_used+0x1801>
or     0x6e(%ecx),%ah
and    %bh,%fs:0x6f(%ecx)
jne    68b1 <_IO_stdin_used+0x17c5>
popa
jb     68f9 <_IO_stdin_used+0x180d>
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jb     6907 <_IO_stdin_used+0x181b>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     6911 <_IO_stdin_used+0x1825>
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     68d6 <_IO_stdin_used+0x17ea>
arpl   %sp,0x72(%ebp)
je     691c <_IO_stdin_used+0x1830>
imul   $0x646e6f63,0x20(%esi),%ebp
imul   $0x202e736e,0x6f(%ecx,%ebp,2),%esi
and    %cl,0x74(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
jae    68f4 <_IO_stdin_used+0x1808>
ja     693f <_IO_stdin_used+0x1853>
je     6940 <_IO_stdin_used+0x1854>
or     0x42(%ecx),%al
push   %ebx
dec    %edi
dec    %esp
push   %ebp
push   %esp
inc    %ebp
dec    %esp
pop    %ecx
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jb     6915 <_IO_stdin_used+0x1829>
fs
gs
je     695a <_IO_stdin_used+0x186e>
imul   $0x64616572,0x20(%ebx,%esi,2),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     6971 <_IO_stdin_used+0x1885>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    6985 <_IO_stdin_used+0x1899>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0xa(%ebp)
outsw  %ds:(%esi),(%dx)
jne    6999 <_IO_stdin_used+0x18ad>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
dec    %ecx
dec    %esi
inc    %edi
and    (%eax),%ah
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     69b2 <_IO_stdin_used+0x18c6>
and    %dh,%fs:0x69(%edi)
je     69bb <_IO_stdin_used+0x18cf>
and    %dh,0x69(%eax,%ebp,2)
jae    6979 <_IO_stdin_used+0x188d>
jo     69cd <_IO_stdin_used+0x18e1>
outsl  %ds:(%esi),(%dx)
addr16 jb 69c0 <_IO_stdin_used+0x18d4>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     6985 <_IO_stdin_used+0x1899>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x3a746120,0x65(%esi),%ebp
or     0x74(%eax),%ch
je     69e4 <_IO_stdin_used+0x18f8>
cmp    (%edi),%ch
das
ja     69f0 <_IO_stdin_used+0x1904>
ja     69a9 <_IO_stdin_used+0x18bd>
outsb  %ds:(%si),(%dx)
jne    69ad <_IO_stdin_used+0x18c1>
outsl  %ds:(%esi),(%dx)
jb     69e9 <_IO_stdin_used+0x18fd>
das
arpl   %bp,0x70(%edi)
jns    69f4 <_IO_stdin_used+0x1908>
gs
data16
je     69bb <_IO_stdin_used+0x18cf>
addr16 jo 69fb <_IO_stdin_used+0x190f>
cs
push   $0xa6c6d74
add    %al,(%eax)
add    %al,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     6a05 <_IO_stdin_used+0x1919>
jb     6a15 <_IO_stdin_used+0x1929>
daa
and    %ah,0x6d(%ebp)
popa
imul   $0x65726464,0x61(%eax,%eiz,1),%ebp
jae    6a24 <_IO_stdin_used+0x1938>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
je     6a1c <_IO_stdin_used+0x1930>
jae    69e5 <_IO_stdin_used+0x18f9>
xor    0x2d(%edi),%esp
fs
gs
jbe    6a24 <_IO_stdin_used+0x1938>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     69d8 <_IO_stdin_used+0x18ec>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
data16
je     6a33 <_IO_stdin_used+0x1947>
outsb  %ds:(%esi),(%dx)
gs
js     6a4c <_IO_stdin_used+0x1960>
pop    %edi
jb     6a40 <_IO_stdin_used+0x1954>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x74(%ebp)
imul   $0x7274666d,0x5f(%ebx,%esi,2),%ebp
arpl   %bx,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    6a65 <_IO_stdin_used+0x1979>
add    %dh,%gs:0x74(%ebp)
imul   $0x73756c63,0x5f(%ebx,%esi,2),%ebp
je     6a65 <_IO_stdin_used+0x1979>
jb     6a61 <_IO_stdin_used+0x1975>
imul   $0x657375,0x5f(%esi),%ebp
jne    6a7f <_IO_stdin_used+0x1993>
imul   $0x72747461,0x5f(%ebx,%esi,2),%ebp
pop    %edi
addr16
gs
je     6a77 <_IO_stdin_used+0x198b>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebp)
imul   $0x646f6e69,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
addr16
gs
je     6a8c <_IO_stdin_used+0x19a0>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f74,0x73(%edx),%si
popa
je     6ab4 <_IO_stdin_used+0x19c8>
jb     6aab <_IO_stdin_used+0x19bf>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x74(%ebp)
imul   $0x73726170,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
jae    6abe <_IO_stdin_used+0x19d2>
jp     6abc <_IO_stdin_used+0x19d0>
add    %dh,0x74(%ebp)
imul   $0x6e756f6d,0x5f(%ebx,%esi,2),%ebp
je     6ac3 <_IO_stdin_used+0x19d7>
jbe    6ad5 <_IO_stdin_used+0x19e9>
insb   (%dx),%es:(%edi)
jne    6ad6 <_IO_stdin_used+0x19ea>
add    %dh,%gs:0x74(%ebp)
imul   $0x696c6176,0x5f(%ebx,%esi,2),%ebp
fs
pop    %edi
fs
gs
jbe    6ae4 <_IO_stdin_used+0x19f8>
arpl   %sp,0x0(%ebp)
jne    6af4 <_IO_stdin_used+0x1a08>
imul   $0x5f746573,0x5f(%ebx,%esi,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
loopne 6a96 <_IO_stdin_used+0x19aa>
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%eax)
jo     6a40 <_IO_stdin_used+0x1954>
(bad)
(bad)
cld
add    %al,(%eax)
add    %ah,(%eax)
movsl  %ds:(%esi),%es:(%edi)
(bad)
jmp    *%eax
add    %eax,(%eax)
add    %dl,%al
mov    $0x120ffff,%ebp
add    %al,(%eax)
mov    $0xc0,%al
(bad)
jmp    *0x0(%ecx,%eax,1)
add    %ah,(%eax)
sar    $0xff,%edi
mov    0x80000001,%al
ret    $0xffff
adc    %al,(%edx)
add    %al,(%eax)
rol    %dh
(bad)
(bad)
jl     6ad4 <_IO_stdin_used+0x19e8>
add    %al,(%eax)
jo     6a9d <_IO_stdin_used+0x19b1>
(bad)
ljmp   *0x40000002(%eax)
enter  $0xffff,$0x0
add    (%eax),%eax
add    %dl,(%eax)
lret
(bad)
incl   -0x31e00000(%ebx,%eax,1)
(bad)
(bad)
faddl  (%ebx)
add    %al,(%eax)
lock sar %bh
(bad)
cmp    %al,(%eax,%eax,1)
add    %dl,(%eax)
sar    %cl,%bh
call   *-0x2d600000(%esp,%eax,1)
(bad)
inc    %esp
add    $0x0,%al
add    %dl,-0x2d(%eax)
(bad)
(bad)
cld
add    $0x0,%al
add    %al,-0x29(%eax)
(bad)
ljmp   *0x0(%ebp,%eax,1)
add    %dh,%al
fcos
inc    %esp
add    $0xdbd00000,%eax
(bad)
incl   (%esi,%eax,1)
add    %al,(%eax)
inc    %eax
(bad)
incl   0x0(%esi,%eax,1)
add    %dl,-0x22(%eax)
(bad)
incl   -0x21a00000(%esi,%eax,1)
(bad)
lcall  *-0x3ffffffa(%eax)
fdivrp %st,%st(7)
inc    %esp
push   %es
add    %al,(%eax)
add    %bl,%bh
(bad)
push   %eax
push   %es
add    %al,(%eax)
and    $0xff,%ah
(bad)
js     6b61 <_IO_stdin_used+0x1a75>
add    %al,(%eax)
mov    $0xe5,%al
(bad)
jmp    *%esp
pop    %es
add    %al,(%eax)
and    %ah,%dh
(bad)
jmp    *(%eax)
or     %al,(%eax)
add    %dh,(%eax)
out    %al,$0xff
pushl  (%eax,%ecx,1)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     6b8b <_IO_stdin_used+0x1a9f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    0x2b0ffff,%eax
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     6bab <_IO_stdin_used+0x1abf>
js     6ba9 <_IO_stdin_used+0x1abd>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
test   $0xbc,%al
(bad)
(bad)
fiaddl (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x9900e51
popf
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
inc    %esp
mov    $0x65ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
jnp    6c1b <_IO_stdin_used+0x1b2f>
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%esi),%eax
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3a(%ebx),%edx
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %bh,-0x41(%eax)
(bad)
lcall  *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
cmp    %ah,0x173dffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa059703,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
xor    %al,(%ecx)
add    %al,(%eax)
push   $0x47ffffc0
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
xchg   %eax,%edi
add    (%edx),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
test   %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
pushf
add    %eax,(%eax)
add    %cl,-0x1(%esp,%eax,8)
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,%al
add    %eax,(%eax)
add    %al,%al
(bad)
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %bh,(%eax)
(bad)
enter  $0x2,$0x0
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0x43140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,-0x387c0000(%edx,%eax,1)
(bad)
decl   (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
cld
add    (%eax),%al
add    %bh,(%edx,%ecx,8)
(bad)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
or     %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
pop    %eax
add    (%eax),%eax
add    %dh,0x1cffffcc(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x3,%ah
add    %al,(%eax)
je     6efb <_IO_stdin_used+0x1e0f>
(bad)
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebp),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
in     $0x3,%al
add    %al,(%eax)
aam    $0xcd
(bad)
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %bl,(%esp,%eax,1)
add    %al,(%eax)
dec    %esp
into
(bad)
jmp    *%esi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ecx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,-0x2e340000(%esp,%eax,1)
(bad)
jmp    *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x61500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     $0x4,%al
add    %al,(%eax)
and    $0xd4,%al
(bad)
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
and    $0x5,%al
add    %al,(%eax)
(bad)
aad    $0xff
ljmp   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
fs
add    $0xd6f40000,%eax
(bad)
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    $0xd7c40000,%eax
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,-0x3ffffffb(%eax)
xlat   %ds:(%ebx)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ah,%ah
add    $0xd7f40000,%eax
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
adc    %al,(%esi)
add    %al,(%eax)
or     %bl,%al
(bad)
(bad)
jg     7193 <_IO_stdin_used+0x20a7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x98000000
push   %es
add    %al,(%eax)
add    %bl,%ch
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %al,(%edi,%eax,1)
add    %al,(%eax)
(bad)
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,0x7(%eax)
add    %al,(%eax)
clc
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edi,%eax,1)
add    %dh,%ah
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %ch,(%eax)
shlb   (%edi)
add    %al,(%eax)
pushf
push   %ecx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
std
push   %ecx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %al,(%esi)
push   %edx
add    %al,(%eax)
data16
add    %al,(%eax)
add    %cl,(%edx,%edx,2)
add    %al,(%eax)
push   $0x11000000
push   %edx
add    %al,(%eax)
imul   $0x52160000,(%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
add    %al,(%eax)
add    %bl,(%edx,%edx,2)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,(%ecx)
push   %edx
add    %al,(%eax)
jno    8dbe <_IO_stdin_used+0x3cd2>
add    %al,(%eax)
daa
push   %edx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jae    8dce <_IO_stdin_used+0x3ce2>
add    %al,(%eax)
cs
push   %edx
add    %al,(%eax)
jbe    8dde <_IO_stdin_used+0x3cf2>
add    %al,(%eax)
ss
push   %edx
add    %al,(%eax)
push   %esi
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jae    8e10 <_IO_stdin_used+0x3d24>
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
aam    $0xc
add    %al,(%eax)
or     $0xd4000000,%eax
push   %eax
add    %al,(%eax)
sbb    %eax,(%eax)
add    %al,(%eax)
sbb    %cl,0x1b0000(%ebp)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
sbb    $0x8d,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0xf8000000
add    $0x60000,%eax
add    %al,(%eax)
clc
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %bh,0xb0000(%ebx,%eax,1)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
popl   (%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,0x110000(%ebx,%ecx,1)
add    %al,(%eax)
xchg   %eax,%esp
or     (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x34(%edi)
or     (%eax),%al
add    %bh,%bh
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x4c(%edi)
or     %eax,(%eax)
add    %bh,%dl
(bad)
ljmp   *0x11(%edi)
add    %cl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ss
or     $0xd260000,%eax
add    %al,(%eax)
ss
or     $0xd460000,%eax
add    %al,(%eax)
push   %esi
or     $0xd660000,%eax
add    %al,(%eax)
jbe    8f33 <_IO_stdin_used+0x3e47>
add    %al,(%eax)
xchg   %cl,0xd960000
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
or     $0xdb60000,%eax
add    %al,(%eax)
(bad)
or     $0xdd60000,%eax
add    %al,(%eax)
out    %al,$0xd
add    %al,(%eax)
(bad)
or     $0xe060000,%eax
add    %al,(%eax)
push   %ss
push   %cs
add    %al,(%eax)
es
push   %cs
add    %al,(%eax)
ss
push   %cs
add    %al,(%eax)
inc    %esi
push   %cs
add    %al,(%eax)
push   %esi
push   %cs
add    %al,(%eax)
pushw  %cs
add    %al,(%eax)
jbe    8f74 <_IO_stdin_used+0x3e88>
add    %al,(%eax)
xchg   %cl,(%esi)
add    %al,(%eax)
xchg   %eax,%esi
push   %cs
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
push   %cs
add    %al,(%eax)
mov    $0xe,%dh
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
out    %al,$0xe
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
push   %es
sldt   (%eax)
push   %ss
sldt   (%eax)
sldt   %es:(%eax)
sldt   %ss:(%eax)
inc    %esi
sldt   (%eax)
push   %esi
sldt   (%eax)
data16
sldt   (%eax)
jbe    8fb5 <_IO_stdin_used+0x3ec9>
add    %al,(%eax)
xchg   %cl,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
sldt   (%eax)
cmpsb  %es:(%edi),%ds:(%esi)
sldt   (%eax)
mov    $0xf,%al
add    %al,(%eax)
add    %al,(%eax)
add    $0x90,%al
add    %al,(%eax)
(bad)
out    %eax,(%dx)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
lock (bad)
incl   (%eax)
add    %al,(%eax)
cmp    $0x68,%al
cwtl
.byte 0x69
xor    %dh,%gs:(%edi)
xor    0x30(%esi,%esi,1),%esp
cmp    %esi,(%esi)
bound  %esp,%gs:0x34(%ebp)
xor    0x62(%ebx),%ah
xor    (%ebx),%esi
xor    (%ecx),%esi
popa
cmp    %dh,%fs:(%ecx)
xor    $0x64,%al
bound  %esp,0x38(%edx)
cmp    %ah,0x35(%esi,%eiz,2)
xor    0x63(%ebp),%esp
popa
arpl   %bp,(%esi)
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
(bad)
scas   %es:(%edi),%eax
jl     5a <_init-0xc7a>
