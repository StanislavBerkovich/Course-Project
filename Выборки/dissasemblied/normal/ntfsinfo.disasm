das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dl,%bl
cld
rcrb   $0x9a,(%eax)
es
inc    %edx
xchg   %ah,(%ebx)
xchg   %ah,-0x4d(%bx,%si)
adc    $0x43460456,%eax
bound  %esp,(%ecx)
add    (%eax),%eax
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,0x4012000(%esi)
in     $0x41,%al
sub    %ecx,0x0(%esi)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,0x0(%edi)
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0x427c92e3,%ebx
pop    %ecx
movsl  %ds:(%esi),%es:(%edi)
xlat   %ds:(%ebx)
lods   %ds:(%esi),%al
dec    %ebx
jecxz  1a0 <_init-0xfb4>
pop    %eax
call   71d8eed3 <_end+0x71d7fa13>
pop    %eax
sbb    $0xb0,%al
fmuls  -0x34(%ebp)
push   $0x7f
lcall  $0xeb0e,$0xf18db97c
shr    %cl,%edi
push   %cs
jl     20d <_init-0xf47>
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
hlt
add    %eax,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dh,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,(%dx)
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,0x3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,%al
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
cmp    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %eax
add    $0x0,%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%ebp)
add    %al,(%eax)
and    (%eax),%al
add    %al,(%eax)
jl     3aa <_init-0xdaa>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    4ae <_init-0xca6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x4,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%eax,%eax,1),%eax
adc    (%eax),%al
add    %al,(%eax)
sub    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fwait
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    $0x0,%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%edi)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
adc    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%ebx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
faddl  (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ecx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x4
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,%dl
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%edx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
adc    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addb   $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    $0x0,%al
add    %dh,(%eax)
lock add %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
in     (%dx),%al
add    $0x0,%al
add    %al,%al
hlt
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
icebp
add    $0x0,%al
add    %ch,(%eax)
lock add %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
mov    $0x64000003,%ebx
popl   (%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
cli
add    $0x0,%al
add    %ah,-0x71(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verr   %ax
add    $0x0,%al
add    %dh,(%eax)
lock add %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
add    %eax,0xf02c0000
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
mov    $0x4,%ch
add    %al,(%eax)
push   %eax
adc    $0x33440000,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x26200,%eax
add    %dl,0x0(%ecx,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %dh,(%esi)
add    (%eax),%al
add    %dh,(%edi,%ecx,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     7e5 <_init-0x96f>
jae    7ae <_init-0x9a6>
xor    0x2e(%edi),%esp
jae    7f5 <_init-0x95f>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     7f9 <_init-0x95b>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    824 <_init-0x930>
popa
jb     827 <_init-0x92d>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    819 <_init-0x93b>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    83a <_init-0x91a>
gs
jae    7ca <_init-0x98a>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     836 <_init-0x91e>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     84d <_init-0x907>
jae    848 <_init-0x90c>
popa
je     860 <_init-0x8f4>
jb     84d <_init-0x907>
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x74(%esi)
data16
jae    858 <_init-0x8fc>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    85e <_init-0x8f6>
popa
jb     867 <_init-0x8ed>
pop    %edi
gs
jno    87b <_init-0x8d9>
popa
insb   (%dx),%es:(%edi)
add    %ch,0x74(%esi)
data16
jae    86d <_init-0x8e7>
jb     87c <_init-0x8d8>
pop    %edi
jo     885 <_init-0x8cf>
gs
popa
add    %al,%fs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    886 <_init-0x8ce>
addr16
gs
je     88a <_init-0x8ca>
popa
je     8a2 <_init-0x8b2>
jb     899 <_init-0x8bb>
bound  %esi,0x74(%ebp)
gs
pop    %edi
jbe    898 <_init-0x8bc>
insb   (%dx),%es:(%edi)
jne    89f <_init-0x8b5>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8a9 <_init-0x8ab>
add    %ch,0x74(%esi)
data16
jae    8a6 <_init-0x8ae>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     8b5 <_init-0x89f>
outsb  %ds:(%esi),(%dx)
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %ebx
dec    %ecx
dec    %ecx
add    %ch,0x74(%esi)
data16
jae    8c5 <_init-0x88f>
insl   (%dx),%es:(%edi)
jae    8dd <_init-0x877>
pop    %edi
jo     8db <_init-0x879>
jae    8e2 <_init-0x872>
pop    %edi
jb     8d6 <_init-0x87e>
popa
fs
pop    %edi
imul   $0x70,0x75(%eax),%di
outsb  %ds:(%esi),(%dx)
je     8e3 <_init-0x871>
jae    8de <_init-0x876>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jo     8e6 <_init-0x86e>
jb     8fa <_init-0x85a>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     900 <_init-0x854>
imul   $0x66746e00,0x6e(%edi),%ebp
jae    8f4 <_init-0x860>
popa
je     90c <_init-0x848>
jb     8f9 <_init-0x85b>
jo     911 <_init-0x843>
je     8fd <_init-0x857>
jae    905 <_init-0x84f>
popa
jb     906 <_init-0x84e>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    90d <_init-0x847>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    919 <_init-0x83b>
je     915 <_init-0x83f>
push   $0x6c646e61
gs
jb     8be <_init-0x896>
outsb  %ds:(%esi),(%dx)
je     927 <_init-0x82d>
jae    922 <_init-0x832>
popa
je     93a <_init-0x81a>
jb     927 <_init-0x82d>
imul   $0x695f,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
je     947 <_init-0x80d>
jb     939 <_init-0x81b>
gs
data16
add    %ch,0x74(%esi)
data16
jae    93c <_init-0x818>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     948 <_init-0x80c>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     953 <_init-0x801>
jae    94e <_init-0x806>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    959 <_init-0x7fb>
jae    8f8 <_init-0x85c>
outsb  %ds:(%esi),(%dx)
je     961 <_init-0x7f3>
jae    95c <_init-0x7f8>
jbe    96e <_init-0x7e6>
insb   (%dx),%es:(%edi)
jne    96f <_init-0x7e5>
gs
pop    %edi
addr16
gs
je     967 <_init-0x7ed>
data16
jb     970 <_init-0x7e4>
gs
pop    %edi
jae    97f <_init-0x7d5>
popa
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
je     97c <_init-0x7d8>
jae    977 <_init-0x7dd>
addr16 jne 984 <_init-0x7d0>
fs
pop    %edi
imul   $0x6f72657a,0x5f(%ebx),%esi
add    %ch,0x74(%esi)
data16
jae    989 <_init-0x7cb>
jne    999 <_init-0x7bb>
outsl  %ds:(%esi),(%dx)
jne    99d <_init-0x7b7>
je     931 <_init-0x823>
outsb  %ds:(%esi),(%dx)
je     99a <_init-0x7ba>
jae    995 <_init-0x7bf>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x61(%ebp,%eiz,2)
jb     99f <_init-0x7b5>
insb   (%dx),%es:(%edi)
gs
jbe    9a9 <_init-0x7ab>
insb   (%dx),%es:(%edi)
jae    947 <_init-0x80d>
outsb  %ds:(%esi),(%dx)
je     9b0 <_init-0x7a4>
jae    9ab <_init-0x7a9>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    9bc <_init-0x798>
add    %ch,0x74(%esi)
data16
jae    9bc <_init-0x798>
imul   $0x725f7865,0x64(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     9c7 <_init-0x78d>
addr16
gs
je     96c <_init-0x7e8>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %ebx
inc    %esp
dec    %eax
add    %ch,0x74(%esi)
data16
jae    9df <_init-0x775>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     9f0 <_init-0x764>
jae    9eb <_init-0x769>
popa
je     a03 <_init-0x751>
jb     9f0 <_init-0x764>
outsl  %ds:(%esi),(%dx)
jo     9f9 <_init-0x75b>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    9fa <_init-0x75a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     a06 <_init-0x74e>
outsl  %ds:(%esi),(%dx)
jne    a1e <_init-0x736>
gs
jb     a1f <_init-0x735>
add    %bl,0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    a18 <_init-0x73c>
jne    a1e <_init-0x736>
jae    a2b <_init-0x729>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    a25 <_init-0x72f>
addr16
gs
je     a29 <_init-0x72b>
popa
je     a41 <_init-0x713>
jb     a38 <_init-0x71c>
bound  %esi,0x74(%ebp)
gs
pop    %edi
jbe    a37 <_init-0x71d>
insb   (%dx),%es:(%edi)
jne    a3e <_init-0x716>
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    a50 <_init-0x704>
je     a4c <_init-0x708>
insb   (%dx),%es:(%edi)
gs
jbe    a56 <_init-0x6fe>
insb   (%dx),%es:(%edi)
jae    9f4 <_init-0x760>
outsb  %ds:(%esi),(%dx)
je     a5d <_init-0x6f7>
jae    a58 <_init-0x6fc>
popa
je     a70 <_init-0x6e4>
jb     a5d <_init-0x6f7>
addr16
gs
je     a61 <_init-0x6f3>
jae    a69 <_init-0x6eb>
popa
jb     a6a <_init-0x6ea>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    a71 <_init-0x6e3>
insl   (%dx),%es:(%edi)
popa
jo     a86 <_init-0x6ce>
imul   $0x6961705f,0x67(%esi),%ebp
jb     a92 <_init-0x6c2>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     a99 <_init-0x6bb>
gs
jae    a9d <_init-0x6b7>
add    %ch,0x74(%esi)
data16
jae    a8f <_init-0x6c5>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
addr16
gs
je     a97 <_init-0x6bd>
insb   (%dx),%es:(%edi)
gs
jbe    aa1 <_init-0x6b3>
insb   (%dx),%es:(%edi)
jae    a3f <_init-0x715>
outsb  %ds:(%esi),(%dx)
je     aa8 <_init-0x6ac>
jae    aa3 <_init-0x6b1>
popa
je     abb <_init-0x699>
jb     aa8 <_init-0x6ac>
jb     ab0 <_init-0x6a4>
popa
fs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ch,0x74(%esi)
data16
jae    ab5 <_init-0x69f>
addr16 jne ac2 <_init-0x692>
fs
pop    %edi
je     acc <_init-0x688>
pop    %edi
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
je     acb <_init-0x689>
jae    ac6 <_init-0x68e>
jae    ad2 <_init-0x682>
fs
pop    %edi
je     adc <_init-0x678>
pop    %edi
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
je     adb <_init-0x679>
jae    ad6 <_init-0x67e>
jo     ada <_init-0x67a>
je     ae3 <_init-0x671>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
je     af1 <_init-0x663>
pop    %edi
imul   $0x6e006564,0x6f(%esi),%ebp
je     af2 <_init-0x662>
jae    aed <_init-0x667>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b00 <_init-0x654>
je     a94 <_init-0x6c0>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    b07 <_init-0x64d>
popa
je     b1f <_init-0x635>
jb     b0c <_init-0x648>
jo     b21 <_init-0x633>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    b17 <_init-0x63d>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     b2c <_init-0x628>
add    %ch,%fs:0x74(%esi)
data16
jae    b2d <_init-0x627>
popa
je     b45 <_init-0x60f>
jb     b32 <_init-0x622>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %edi
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %ecx
add    %ch,0x74(%esi)
data16
jae    b58 <_init-0x5fc>
push   $0x656d6f
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
add    %ch,0x74(%esi)
data16
jae    b6f <_init-0x5e5>
imul   $0x5f746567,0x5f(%ebp),%esp
jbe    b7c <_init-0x5d8>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    b7f <_init-0x5d5>
jne    b85 <_init-0x5cf>
jae    b98 <_init-0x5bc>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    bad <_init-0x5a7>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %bl,0x5f(%edi)
jo     bb8 <_init-0x59c>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     bbb <_init-0x599>
je     b54 <_init-0x600>
jae    bbb <_init-0x599>
je     bc4 <_init-0x590>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     bd0 <_init-0x584>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     bd3 <_init-0x581>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x75(%eax)
je     be4 <_init-0x570>
add    %dh,0x75(%eax)
je     bd9 <_init-0x57b>
push   $0x72007261
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    bf8 <_init-0x55c>
jb     bfa <_init-0x55a>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
gs
jb     c08 <_init-0x54c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x64747300,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    c1c <_init-0x538>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
js     c27 <_init-0x52d>
je     c17 <_init-0x53d>
je     bee <_init-0x566>
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     c31 <_init-0x523>
popa
jb     c27 <_init-0x52d>
add    %bl,0x5f(%edi)
jae    c33 <_init-0x521>
jo     c39 <_init-0x51b>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6f,(%eax),%eax
jo     c47 <_init-0x50d>
outsl  %ds:(%esi),(%dx)
jo     c4a <_init-0x50a>
add    %ah,0x65(%edi)
je     c4a <_init-0x50a>
jo     c51 <_init-0x503>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%bp,%di)
je     c53 <_init-0x501>
imul   $0x667562,0x65(%esi),%ebp
jae    c64 <_init-0x4f0>
jb     c55 <_init-0x4ff>
push   $0x5f5f0072
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     c68 <_init-0x4ec>
add    %bl,0x5f(%edi)
jae    c78 <_init-0x4dc>
jb     c73 <_init-0x4e1>
outsb  %ds:(%esi),(%dx)
je     c73 <_init-0x4e1>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x70(%edi)
je     c7b <_init-0x4d9>
jb     c8a <_init-0x4ca>
add    %dh,0x74(%ebx)
jb     c80 <_init-0x4d4>
insl   (%dx),%es:(%edi)
jo     c20 <_init-0x534>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     ca0 <_init-0x4b4>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
jae    cb8 <_init-0x49c>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    cd4 <_init-0x480>
popa
jb     cd7 <_init-0x47d>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    ccd <_init-0x487>
addr16 jo cdd <_init-0x477>
add    %bl,0x66(%edi)
jo     cd5 <_init-0x47f>
push   $0x746e0077
data16
jae    cdd <_init-0x477>
bound  %esi,0x67(%ebp)
jae    c83 <_init-0x4d1>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    $0x3b100,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
or     0x100000,%eax
add    %al,(%eax)
jae    dad <_init-0x3a7>
imul   $0x50000,(%ecx),%ecx
adc    $0x10000005,%eax
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x521,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
sub    0x100000,%eax
add    %al,(%eax)
je     dd7 <_init-0x37d>
imul   $0x20000,(%ecx),%ecx
xor    $0x5,%eax
add    %al,(%eax)
nop
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    0x80000ec,%al
add    %al,(%eax)
add    %ah,0x80000(%esp,%ebp,8)
add    %al,(%eax)
test   $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xec,%ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x80000ec,%eax
add    %al,(%eax)
add    %al,%al
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
enter  $0xec,$0x0
or     %al,(%eax)
add    %al,(%eax)
int3
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
shr    %ah
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
aam    $0xec
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fsubr  %st(4),%st
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fsubr  %st,%st(4)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
loopne e42 <_init-0x312>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
in     $0xec,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
call   8000f55 <_end+0x7ff1a95>
add    %al,(%eax)
add    %ch,%ah
in     (%dx),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%ch
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %ch,%ch
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %ch,%ch
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %ch,%ch
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
in     (%dx),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
in     (%dx),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
in     (%dx),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jo     e9b <_init-0x2b9>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    $0x0,%ch
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%ah
out    %eax,(%dx)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    %dh,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    $0xf0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pushf
out    %eax,(%dx)
add    %al,(%eax)
push   %es
add    %eax,(%eax)
add    %ah,0x60000ef(%eax)
add    (%eax),%al
add    %ah,0x9060000(%edi,%ebp,8)
add    %al,(%eax)
test   $0xef,%al
add    %al,(%eax)
push   %es
or     (%eax),%al
add    %ch,0x11060000(%edi,%ebp,8)
add    %al,(%eax)
mov    $0xef,%al
add    %al,(%eax)
push   %es
adc    (%eax),%eax
add    %dh,0x14060000(%edi,%ebp,8)
add    %al,(%eax)
mov    $0x60000ef,%eax
push   %ss
add    %al,(%eax)
mov    $0x60000ef,%esp
sbb    %al,(%eax)
add    %al,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
sbb    (%eax),%al
add    %al,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
and    $0xefc80000,%eax
add    %al,(%eax)
push   %es
add    %al,%ss:(%eax)
shr    %bh
add    %al,(%eax)
push   %es
cmp    (%eax),%al
add    %dl,%ah
out    %eax,(%dx)
add    %al,(%eax)
push   %es
cmp    $0x0,%al
add    %bl,%al
out    %eax,(%dx)
add    %al,(%eax)
push   %es
aas
add    %al,(%eax)
fsubr  %st,%st(7)
add    %al,(%eax)
push   %es
inc    %ecx
add    %al,(%eax)
loopne f4d <_init-0x207>
add    %al,(%eax)
push   %es
inc    %ebx
add    %al,(%eax)
in     $0xef,%al
add    %al,(%eax)
push   %es
inc    %esp
add    %al,(%eax)
call   6001060 <_end+0x5ff1ba0>
dec    %edx
lods   %ds:(%esi),%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
add    (%eax),%eax
add    %dh,0x70000ee(%eax)
add    $0x0,%al
add    %dh,0x5070000(%esi,%ebp,8)
add    %al,(%eax)
mov    $0x70000ee,%eax
push   %es
add    %al,(%eax)
mov    $0x70000ee,%esp
pop    %es
add    %al,(%eax)
shr    $0x0,%dh
add    %al,(%edi)
or     %al,(%eax)
add    %al,%ah
out    %al,(%dx)
add    %al,(%eax)
pop    %es
or     (%eax),%eax
add    %cl,%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
or     $0x0,%al
add    %cl,%ah
out    %al,(%dx)
add    %al,(%eax)
pop    %es
or     $0xeed00000,%eax
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
aam    $0xee
add    %al,(%eax)
pop    %es
sldt   (%eax)
fsubr  %st(6),%st
add    %al,(%eax)
pop    %es
adc    %al,(%eax)
add    %bl,%ah
out    %al,(%dx)
add    %al,(%eax)
pop    %es
adc    (%eax),%al
add    %ah,%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
adc    $0xeee40000,%eax
add    %al,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
call   70010df <_end+0x6ff1c1f>
sbb    %eax,(%eax)
add    %ch,%ah
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sbb    (%eax),%al
add    %dh,%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %dh,%ah
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sbb    $0x0,%al
add    %bh,%al
out    %al,(%dx)
add    %al,(%eax)
pop    %es
sbb    $0xeefc0000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
add    %ch,%bh
add    %al,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
add    $0xef,%al
add    %al,(%eax)
pop    %es
and    %al,(%eax)
add    %cl,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
and    %eax,(%eax)
add    %cl,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
and    (%eax),%al
add    %dl,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
and    (%eax),%eax
add    %dl,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
and    $0x0,%al
add    %bl,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
and    $0xef1c0000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
and    %ch,%bh
add    %al,(%eax)
pop    %es
daa
add    %al,(%eax)
and    $0xef,%al
add    %al,(%eax)
pop    %es
sub    %al,(%eax)
add    %ch,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
sub    %eax,(%eax)
add    %ch,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
sub    (%eax),%al
add    %dh,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
sub    (%eax),%eax
add    %dh,(%edi,%ebp,8)
add    %al,(%eax)
pop    %es
sub    $0x0,%al
add    %bh,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
sub    $0xef3c0000,%eax
add    %al,(%eax)
pop    %es
add    %al,%cs:(%eax)
inc    %eax
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
das
add    %al,(%eax)
inc    %esp
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
xor    %al,(%eax)
add    %cl,-0x11(%eax)
add    %al,(%eax)
pop    %es
xor    %eax,(%eax)
add    %cl,0x0(%edi,%ebp,8)
add    %al,(%edi)
xor    (%eax),%al
add    %dl,-0x11(%eax)
add    %al,(%eax)
pop    %es
xor    (%eax),%eax
add    %dl,0x0(%edi,%ebp,8)
add    %al,(%edi)
xor    $0x0,%al
add    %bl,-0x11(%eax)
add    %al,(%eax)
pop    %es
xor    $0xef5c0000,%eax
add    %al,(%eax)
pop    %es
aaa
add    %al,(%eax)
pusha
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
cmp    %al,(%eax)
add    %ah,0x0(%edi,%ebp,8)
add    %al,(%edi)
cmp    %eax,(%eax)
add    %ch,-0x11(%eax)
add    %al,(%eax)
pop    %es
cmp    (%eax),%eax
add    %ch,0x0(%edi,%ebp,8)
add    %al,(%edi)
cmp    $0xef700000,%eax
add    %al,(%eax)
pop    %es
add    %al,%ds:(%eax)
je     10f5 <_init-0x5f>
add    %al,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
js     10fd <_init-0x57>
add    %al,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
jl     1105 <_init-0x4f>
add    %al,(%eax)
pop    %es
inc    %ebp
add    %al,(%eax)
sub    $0x0,%bh
add    %al,(%edi)
inc    %esi
add    %al,(%eax)
test   %ch,%bh
add    %al,(%eax)
pop    %es
inc    %edi
add    %al,(%eax)
mov    %ch,%bh
add    %al,(%eax)
pop    %es
dec    %eax
add    %al,(%eax)
mov    %gs,%edi
add    %al,(%eax)
pop    %es
dec    %ecx
add    %al,(%eax)
nop
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
dec    %ebx
add    %al,(%eax)
xchg   %eax,%esp
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
dec    %esp
add    %al,(%eax)
cwtl
out    %eax,(%dx)
add    %al,(%eax)
pop    %es
dec    %ebp
push   %ebx
sub    $0x8,%esp
call   48d0 <main+0x3380>
add    $0xdd43,%ebx
mov    0x124(%ebx),%eax
test   %eax,%eax
je     1172 <_init+0x1e>
call   1340 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    1180 <_init+0x2c>
jmp    *0x10(%ebx)
push   $0x8
jmp    1180 <_init+0x2c>
jmp    *0x14(%ebx)
push   $0x10
jmp    1180 <_init+0x2c>
jmp    *0x18(%ebx)
push   $0x18
jmp    1180 <_init+0x2c>
jmp    *0x1c(%ebx)
push   $0x20
jmp    1180 <_init+0x2c>
jmp    *0x20(%ebx)
push   $0x28
jmp    1180 <_init+0x2c>
jmp    *0x24(%ebx)
push   $0x30
jmp    1180 <_init+0x2c>
jmp    *0x28(%ebx)
push   $0x38
jmp    1180 <_init+0x2c>
jmp    *0x2c(%ebx)
push   $0x40
jmp    1180 <_init+0x2c>
jmp    *0x30(%ebx)
push   $0x48
jmp    1180 <_init+0x2c>
jmp    *0x34(%ebx)
push   $0x50
jmp    1180 <_init+0x2c>
jmp    *0x38(%ebx)
push   $0x58
jmp    1180 <_init+0x2c>
jmp    *0x3c(%ebx)
push   $0x60
jmp    1180 <_init+0x2c>
jmp    *0x40(%ebx)
push   $0x68
jmp    1180 <_init+0x2c>
jmp    *0x44(%ebx)
push   $0x70
jmp    1180 <_init+0x2c>
jmp    *0x48(%ebx)
push   $0x78
jmp    1180 <_init+0x2c>
jmp    *0x4c(%ebx)
push   $0x80
jmp    1180 <_init+0x2c>
jmp    *0x50(%ebx)
push   $0x88
jmp    1180 <_init+0x2c>
jmp    *0x54(%ebx)
push   $0x90
jmp    1180 <_init+0x2c>
jmp    *0x58(%ebx)
push   $0x98
jmp    1180 <_init+0x2c>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    1180 <_init+0x2c>
jmp    *0x60(%ebx)
push   $0xa8
jmp    1180 <_init+0x2c>
jmp    *0x64(%ebx)
push   $0xb0
jmp    1180 <_init+0x2c>
jmp    *0x68(%ebx)
push   $0xb8
jmp    1180 <_init+0x2c>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    1180 <_init+0x2c>
jmp    *0x70(%ebx)
push   $0xc8
jmp    1180 <_init+0x2c>
jmp    *0x74(%ebx)
push   $0xd0
jmp    1180 <_init+0x2c>
jmp    *0x78(%ebx)
push   $0xd8
jmp    1180 <_init+0x2c>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    1180 <_init+0x2c>
jmp    *0x80(%ebx)
push   $0xe8
jmp    1180 <_init+0x2c>
jmp    *0x84(%ebx)
push   $0xf0
jmp    1180 <_init+0x2c>
jmp    *0x88(%ebx)
push   $0xf8
jmp    1180 <_init+0x2c>
jmp    *0x8c(%ebx)
push   $0x100
jmp    1180 <_init+0x2c>
jmp    *0x90(%ebx)
push   $0x108
jmp    1180 <_init+0x2c>
jmp    *0x94(%ebx)
push   $0x110
jmp    1180 <_init+0x2c>
jmp    *0x98(%ebx)
push   $0x118
jmp    1180 <_init+0x2c>
jmp    *0x9c(%ebx)
push   $0x120
jmp    1180 <_init+0x2c>
jmp    *0xa0(%ebx)
push   $0x128
jmp    1180 <_init+0x2c>
jmp    *0xa4(%ebx)
push   $0x130
jmp    1180 <_init+0x2c>
jmp    *0xa8(%ebx)
push   $0x138
jmp    1180 <_init+0x2c>
jmp    *0xac(%ebx)
push   $0x140
jmp    1180 <_init+0x2c>
jmp    *0xb0(%ebx)
push   $0x148
jmp    1180 <_init+0x2c>
jmp    *0xb4(%ebx)
push   $0x150
jmp    1180 <_init+0x2c>
jmp    *0xb8(%ebx)
push   $0x158
jmp    1180 <_init+0x2c>
jmp    *0xbc(%ebx)
push   $0x160
jmp    1180 <_init+0x2c>
jmp    *0xc0(%ebx)
push   $0x168
jmp    1180 <_init+0x2c>
jmp    *0xc4(%ebx)
push   $0x170
jmp    1180 <_init+0x2c>
jmp    *0xc8(%ebx)
push   $0x178
jmp    1180 <_init+0x2c>
jmp    *0xcc(%ebx)
push   $0x180
jmp    1180 <_init+0x2c>
jmp    *0xd0(%ebx)
push   $0x188
jmp    1180 <_init+0x2c>
jmp    *0xd4(%ebx)
push   $0x190
jmp    1180 <_init+0x2c>
jmp    *0xd8(%ebx)
push   $0x198
jmp    1180 <_init+0x2c>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    1180 <_init+0x2c>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    1180 <_init+0x2c>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    1180 <_init+0x2c>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    1180 <_init+0x2c>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    1180 <_init+0x2c>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    1180 <_init+0x2c>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    1180 <_init+0x2c>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    1180 <_init+0x2c>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   48d0 <main+0x3380>
add    $0xd945,%ebx
and    $0xfffffff0,%esp
sub    $0xc0,%esp
mov    0xc(%ebp),%esi
mov    %gs:0x14,%eax
mov    %eax,0xbc(%esp)
xor    %eax,%eax
mov    0x128(%ebx),%eax
lea    -0x5757(%ebx),%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   13d0 <setlinebuf@plt>
mov    0x10c(%ebx),%eax
mov    %eax,(%esp)
call   12f0 <ntfs_log_set_handler@plt>
mov    0x13c(%ebx),%eax
movl   $0xffffffff,0x1e8(%ebx)
ff
movl   $0xffffffff,0x1ec(%ebx)
ff
movl   $0x0,0x1e4(%ebx)
00
movl   $0x0,(%eax)
lea    -0x1a0(%ebx),%eax
movl   $0x0,0x58(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x78(%esp)
mov    %eax,0x68(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   1390 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     1808 <main+0x2b8>
cmp    $0x76,%eax
ja     17d8 <main+0x288>
mov    -0x3a60(%ebx,%eax,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x11c(%ebx),%eax
cmpl   $0x3f,(%eax)
jne    1d5b <main+0x80b>
addl   $0x1,0x58(%esp)
jmp    15f0 <main+0xa0>
xchg   %ax,%ax
addl   $0x1,0x1f8(%ebx)
jmp    15f0 <main+0xa0>
lea    0x0(%esi,%eiz,1),%esi
addl   $0x1,0x64(%esp)
jmp    15f0 <main+0xa0>
nop
lea    -0x48e0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36d3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xe1,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
addl   $0x1,0x78(%esp)
jmp    15f0 <main+0xa0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1e4(%ebx),%eax
test   %eax,%eax
je     4088 <main+0x2b38>
xchg   %ax,%ax
addl   $0x1,0x78(%esp)
jmp    15f0 <main+0xa0>
lea    0x0(%esi),%esi
mov    0x110(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%esi,%eax,4),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xfb,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x48ac(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36d3(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    16c0 <main+0x170>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1e0(%ebx),%eax
test   %eax,%eax
jne    16c0 <main+0x170>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x1e0(%ebx)
jmp    15f0 <main+0xa0>
lea    0x0(%esi),%esi
movl   $0x10,(%esp)
addl   $0x1,0x1f4(%ebx)
call   1500 <ntfs_log_set_levels@plt>
jmp    15f0 <main+0xa0>
addl   $0x1,0x1fc(%ebx)
jmp    15f0 <main+0xa0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
addl   $0x1,0x1f0(%ebx)
call   12b0 <ntfs_log_clear_levels@plt>
jmp    15f0 <main+0xa0>
addl   $0x1,0x200(%ebx)
jmp    15f0 <main+0xa0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1e8(%ebx),%eax
and    0x1ec(%ebx),%eax
cmp    $0xffffffff,%eax
jne    16c0 <main+0x170>
mov    0x148(%ebx),%eax
lea    0x1e8(%ebx),%edx
mov    (%eax),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   74f0 <main+0x5fa0>
test   %eax,%eax
je     16c0 <main+0x170>
jmp    15f0 <main+0xa0>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x18(%esp)
lea    -0x5773(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xff,0x8(%esp)
jmp    1702 <main+0x1b2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   11f0 <ntfs_log_get_levels@plt>
test   $0x10,%al
je     1818 <main+0x2c8>
addl   $0x1,0x1f4(%ebx)
test   $0x4,%al
jne    1823 <main+0x2d3>
addl   $0x1,0x1f0(%ebx)
mov    0x58(%esp),%eax
or     0x64(%esp),%eax
je     1cc7 <main+0x777>
cmpl   $0x0,0x64(%esp)
movl   $0x0,0x1f0(%ebx)
00
je     191a <main+0x3ca>
lea    -0x5747(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5739(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x47c4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
lea    -0x5730(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x4780(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x4760(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x5722(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x473c(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x4718(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x5705(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x56ea(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0xfc(%ebx),%eax
mov    (%eax),%ecx
lea    0x18c(%ebx),%eax
mov    (%eax),%edx
lea    0x188(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x56cd(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x78(%esp),%esi
or     0x58(%esp),%esi
je     1972 <main+0x422>
lea    -0x5739(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x46f8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
mov    0xfc(%ebx),%eax
mov    (%eax),%edx
lea    0x18c(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x56c9(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x64(%esp),%eax
or     %esi,%eax
jne    487a <main+0x332a>
call   6da0 <main+0x5850>
cmpl   $0x1,0x1f8(%ebx)
sbb    %eax,%eax
and    $0xf0000000,%eax
add    $0x10000001,%eax
mov    %eax,0x4(%esp)
mov    0x1e0(%ebx),%eax
mov    %eax,(%esp)
call   71e0 <main+0x5c90>
test   %eax,%eax
mov    %eax,0x40(%esp)
je     4811 <main+0x32c1>
mov    0x200(%ebx),%edi
test   %edi,%edi
je     19c8 <main+0x478>
jmp    2901 <main+0x13b1>
fstp   %st(0)
lea    0x0(%esi),%esi
mov    0x1e8(%ebx),%edx
mov    0x1ec(%ebx),%ecx
mov    %edx,%eax
and    %ecx,%eax
cmp    $0xffffffff,%eax
mov    0x1e4(%ebx),%eax
je     2fe0 <main+0x1a90>
test   %eax,%eax
je     402e <main+0x2ade>
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1360 <ntfs_pathname_to_inode@plt>
mov    %eax,0x4c(%esp)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     3927 <main+0x23d7>
mov    0x8(%eax),%esi
mov    0x4(%eax),%edx
mov    (%eax),%eax
movzwl 0x16(%esi),%edi
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x5473(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
mov    %esi,%edx
lea    -0x5bbf(%ebx),%eax
call   4fa0 <main+0x3a50>
movzwl 0x10(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4204(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x12(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x41e0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x14(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x5456(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    -0x5438(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
test   %di,%di
je     390c <main+0x23bc>
test   $0x1,%di
jne    3eb2 <main+0x2962>
test   $0x2,%di
jne    3f2e <main+0x29de>
test   $0x4,%di
jne    3f10 <main+0x29c0>
test   $0x8,%di
jne    3ef2 <main+0x29a2>
test   %di,%di
jne    3ed0 <main+0x2980>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0x18(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x41bc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x1c(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x419c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x24(%esi),%edx
mov    0x20(%esi),%eax
mov    %edx,%ecx
or     %eax,%ecx
jne    38db <main+0x238b>
movzwl 0x28(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4154(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    -0x53ea(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x14(%esi),%eax
movzwl 0x6(%esi),%edx
mov    %eax,%ecx
mov    %eax,0x68(%esp)
movzwl 0x4(%esi),%eax
lea    (%eax,%edx,2),%edi
cmp    %edi,%ecx
lea    -0x53dc(%ebx),%eax
mov    %eax,0x78(%esp)
jle    1bf5 <main+0x6a5>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%esi,%edi,1),%eax
add    $0x1,%edi
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
cmp    %edi,0x68(%esp)
jg     1bd0 <main+0x680>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0x4c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   14d0 <ntfs_attr_get_search_ctx@plt>
movl   $0x0,0x48(%esp)
movl   $0x0,0x60(%esp)
mov    %eax,0x78(%esp)
lea    -0x40f4(%ebx),%eax
mov    %eax,0x44(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x20(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   14c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    2600 <main+0x10b0>
mov    0x78(%esp),%eax
mov    0x4(%eax),%edi
mov    (%edi),%esi
lea    -0x1(%esi),%eax
cmp    $0xfffffffd,%eax
jbe    1db0 <main+0x860>
mov    %esi,%eax
call   4a00 <main+0x34b0>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4130(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
cmpl   $0x0,0x1e0(%ebx)
je     40d5 <main+0x2b85>
cmpl   $0xffffffff,0x1ec(%ebx)
je     3fab <main+0x2a5b>
cmpl   $0x0,0x1f0(%ebx)
je     1cf7 <main+0x7a7>
cmpl   $0x0,0x1f4(%ebx)
jne    3cd7 <main+0x2787>
cmpl   $0xffffffff,0x1ec(%ebx)
je     401c <main+0x2acc>
cmpl   $0x0,0x1e4(%ebx)
je     191a <main+0x3ca>
cmpl   $0x1,0x8(%ebp)
jle    1d51 <main+0x801>
lea    -0x47f8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36d3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x126,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
addl   $0x1,0x78(%esp)
jmp    191a <main+0x3ca>
mov    0x110(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%esi,%eax,4),%eax
mov    %eax,(%esp)
call   1380 <ntfs_log_parse_option@plt>
test   %eax,%eax
jne    15f0 <main+0xa0>
mov    0x110(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%esi,%eax,4),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf6,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5789(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    1702 <main+0x1b2>
xchg   %ax,%ax
mov    0x4c(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,0x58(%esp)
mov    0x78(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax),%edx
mov    0x4(%eax),%ecx
mov    %esi,%eax
mov    %edx,0x68(%esp)
mov    %ecx,0x6c(%esp)
call   4a00 <main+0x34b0>
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    %esi,0xc(%esp)
lea    -0x3708(%ebx),%esi
movl   $0x1,(%esp)
mov    %ecx,0x1c(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %edx,0x18(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x508,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x40b8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x64(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x57c5(%ebx),%edx
cmpb   $0x0,0x8(%edi)
lea    -0x57c8(%ebx),%eax
movl   $0x1,(%esp)
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x53d6(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x9(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x50b,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x53c4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0xa(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x50e,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x53a9(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzbl 0x9(%edi),%eax
test   %al,%al
jne    22b0 <main+0xd60>
movzwl 0xc(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5375(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xe(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4070(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x10(%edi),%eax
cmpb   $0x0,0x8(%edi)
je     21f0 <main+0xca0>
mov    0x14(%edi),%edx
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x530d(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x536,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x18(%edi),%eax
mov    0x1c(%edi),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x404c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x539,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x20(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x53c,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x402c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzbl 0x22(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4008(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x14(%edi),%eax
or     0x10(%edi),%eax
je     2698 <main+0x1148>
mov    0x1f4(%ebx),%ecx
test   %ecx,%ecx
jne    2328 <main+0xdd8>
mov    0x78(%esp),%eax
mov    0x4(%eax),%edi
mov    (%edi),%edx
cmp    $0x80,%edx
je     367c <main+0x212c>
ja     2158 <main+0xc08>
cmp    $0x40,%edx
je     3163 <main+0x1c13>
ja     2590 <main+0x1040>
cmp    $0x20,%edx
je     3401 <main+0x1eb1>
cmp    $0x30,%edx
je     314d <main+0x1bfd>
cmp    $0x10,%edx
je     20f5 <main+0xba5>
lea    -0x4d3d(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x3b84(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
cmpb   $0x0,0x8(%edi)
jne    1c38 <main+0x6e8>
lea    -0x3b44(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
movzwl 0x14(%edi),%eax
mov    $0x80,%edx
cmpl   $0x80,0x10(%edi)
cmovbe 0x10(%edi),%edx
add    %edi,%eax
call   5060 <main+0x3b10>
jmp    1c38 <main+0x6e8>
movzwl 0x14(%edi),%esi
add    %edi,%esi
cmpl   $0x0,0x1fc(%ebx)
je     3b87 <main+0x2637>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
lea    -0x5bc0(%ebx),%eax
call   4b70 <main+0x3620>
mov    0x10(%edi),%eax
cmp    $0x30,%eax
je     1c38 <main+0x6e8>
cmp    $0x48,%eax
je     414e <main+0x2bfe>
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ed4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xc0,%edx
je     1c38 <main+0x6e8>
jbe    2764 <main+0x1214>
cmp    $0xe0,%edx
je     3258 <main+0x1d08>
jbe    2f1f <main+0x19cf>
cmp    $0xf0,%edx
je     1c38 <main+0x6e8>
cmp    $0x100,%edx
jne    209d <main+0xb4d>
cmpl   $0x0,0x1f4(%ebx)
je     1c38 <main+0x6e8>
lea    0x88(%esp),%eax
mov    %eax,0x10(%esp)
movzbl 0x9(%edi),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edi),%eax
movl   $0x100,0x4(%esp)
lea    (%edi,%eax,1),%ecx
mov    0x4c(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   1440 <ntfs_attr_readall@plt>
test   %eax,%eax
mov    %eax,%esi
je     25da <main+0x108a>
mov    0x88(%esp),%edx
call   5060 <main+0x3b10>
jmp    25da <main+0x108a>
xchg   %ax,%ax
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x535a(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x14(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x52a,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5a4c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzbl 0x16(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5341(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movsbl 0x17(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x52f,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5326(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    205c <main+0xb0c>
lea    0x0(%esi),%esi
lea    0x88(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movzwl 0xa(%edi),%eax
movl   $0x0,0x88(%esp)
00
add    %edi,%eax
mov    %eax,(%esp)
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
jle    3e7b <main+0x292b>
mov    0x88(%esp),%edx
test   %edx,%edx
je     3e7b <main+0x292b>
lea    -0x538e(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x68(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%esp),%edx
mov    %edx,(%esp)
call   1220 <free@plt>
jmp    1f08 <main+0x9b8>
xchg   %ax,%ax
mov    0x58(%esp),%eax
mov    %edi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   12e0 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x38(%esp)
je     4051 <main+0x2b01>
lea    -0x52d3(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    %edi,%ecx
mov    0x10(%edi),%edi
mov    0x14(%ecx),%esi
addl   $0x1,0x48(%esp)
mov    %esi,%eax
or     %edi,%eax
je     25e8 <main+0x1098>
lea    -0x529d(%ebx),%eax
mov    %eax,0x3c(%esp)
mov    %esi,%eax
mov    %ecx,%esi
addl   $0x1,0x60(%esp)
mov    %eax,%ecx
movl   $0xffffffff,0x58(%esp)
movl   $0xffffffff,0x5c(%esp)
jmp    2446 <main+0xef6>
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    0x4(%esi),%edx
mov    %edi,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x50(%esp)
mov    0x68(%esp),%eax
mov    %edx,0x54(%esp)
mov    0x6c(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x54(%esp),%edx
mov    %eax,0x8(%esp)
lea    -0x52b8(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x5c(%esp),%eax
test   %eax,%eax
js     2510 <main+0xfc0>
mov    0x8(%esi),%edi
mov    0xc(%esi),%ecx
mov    0x5c(%esp),%edx
mov    0x58(%esp),%eax
xor    %ecx,%edx
xor    %edi,%eax
or     %eax,%edx
je     2520 <main+0xfd0>
addl   $0x1,0x48(%esp)
mov    %edi,%eax
mov    %ecx,%edx
add    0x10(%esi),%eax
adc    0x14(%esi),%edx
mov    %eax,0x58(%esp)
mov    %edx,0x5c(%esp)
add    $0x18,%esi
mov    0x14(%esi),%ecx
mov    0x10(%esi),%edi
mov    0x60(%esp),%eax
mov    %ecx,%edx
add    $0x1,%eax
or     %edi,%edx
je     25e8 <main+0x1098>
mov    %eax,0x60(%esp)
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    %edx,0x6c(%esp)
mov    0x6c(%esp),%edx
mov    %eax,0x68(%esp)
test   %edx,%edx
jns    23a0 <main+0xe50>
mov    0x68(%esp),%eax
mov    0x6c(%esp),%edx
add    $0x5,%eax
adc    $0x0,%edx
cmp    $0x0,%edx
jbe    2530 <main+0xfe0>
mov    0x68(%esp),%eax
mov    0x6c(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3f7c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x4f6,0x8(%esp)
mov    %ecx,0x50(%esp)
mov    %eax,0x4(%esp)
lea    -0x3716(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x50(%esp),%ecx
lea    -0x578e(%ebx),%eax
mov    %eax,0x68(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    0x4(%esi),%edx
mov    %ecx,0x18(%esp)
mov    0x68(%esp),%ecx
mov    %edi,0x14(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0xc(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    2428 <main+0xed8>
xchg   %ax,%ax
mov    0x8(%esi),%eax
mov    0xc(%esi),%edx
jmp    241a <main+0xeca>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
mov    %ecx,%edx
jmp    241a <main+0xeca>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4,%eax
ja     2477 <main+0xf27>
shl    $0x2,%eax
mov    -0x3884(%ebx,%eax,1),%eax
add    %ebx,%eax
jmp    *%eax
lea    -0x57b9(%ebx),%eax
mov    %eax,0x68(%esp)
jmp    24d8 <main+0xf88>
lea    -0x57c1(%ebx),%eax
mov    %eax,0x68(%esp)
jmp    24d8 <main+0xf88>
lea    -0x57a9(%ebx),%eax
mov    %eax,0x68(%esp)
jmp    24d8 <main+0xf88>
lea    -0x579f(%ebx),%eax
mov    %eax,0x68(%esp)
jmp    24d8 <main+0xf88>
lea    -0x5795(%ebx),%eax
mov    %eax,0x68(%esp)
jmp    24d8 <main+0xf88>
nop
cmp    $0x60,%edx
je     30d2 <main+0x1b82>
cmp    $0x70,%edx
je     2ff5 <main+0x1aa5>
cmp    $0x50,%edx
jne    209d <main+0xb4d>
mov    0x4c(%esp),%eax
cmpb   $0x0,0x8(%edi)
mov    0xc(%eax),%edx
jne    3a91 <main+0x2541>
movzwl 0x14(%edi),%eax
lea    (%edi,%eax,1),%esi
lea    -0x5bbf(%ebx),%edx
mov    %esi,%eax
call   58f0 <main+0x43a0>
cmpb   $0x0,0x8(%edi)
je     1c38 <main+0x6e8>
mov    %esi,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
nop
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    205c <main+0xb0c>
lea    0x0(%esi,%eiz,1),%esi
call   1430 <__errno_location@plt>
cmpl   $0x2,(%eax)
je     2f9a <main+0x1a4a>
lea    -0x3b1c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36ed(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x8fe,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   13b0 <ntfs_attr_put_search_ctx@plt>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1450 <ntfs_inode_close@plt>
mov    0x40(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   11c0 <ntfs_umount@plt>
xor    %eax,%eax
mov    0xbc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    480c <main+0x32bc>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%edi),%eax
mov    0x34(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x52f0(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x28(%edi),%eax
mov    0x2c(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3fe8(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x38(%edi),%eax
mov    0x3c(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3fc4(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
cmpb   $0x0,0x22(%edi)
jne    2733 <main+0x11e3>
movzwl 0xc(%edi),%eax
test   $0x1,%al
jne    2733 <main+0x11e3>
test   %ax,%ax
jns    204e <main+0xafe>
mov    0x40(%edi),%eax
mov    0x44(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3fa0(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    204e <main+0xafe>
cmp    $0xa0,%edx
je     3776 <main+0x2226>
cmp    $0xb0,%edx
je     1c38 <main+0x6e8>
cmp    $0x90,%edx
jne    209d <main+0xb4d>
movzwl 0x14(%edi),%esi
mov    %edi,%edx
mov    0x4c(%esp),%eax
add    %edi,%esi
mov    %esi,(%esp)
call   6aa0 <main+0x5550>
movl   $0x1,(%esp)
mov    %eax,%edi
lea    -0x4f1f(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
cmp    $0x1,%edi
je     4496 <main+0x2f46>
cmp    $0x3,%edi
je     44b1 <main+0x2f61>
cmp    $0x2,%edi
je     4281 <main+0x2d31>
cmp    $0x4,%edi
je     4595 <main+0x3045>
cmp    $0x6,%edi
je     45b0 <main+0x3060>
cmp    $0x7,%edi
je     45cb <main+0x307b>
cmp    $0x5,%edi
je     443e <main+0x2eee>
lea    -0x5e52(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0x4(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4ec3(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3cd4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4c(%esp),%eax
mov    0xc(%eax),%eax
mov    0x18(%eax),%eax
cmp    %eax,0x8(%esi)
movsbl 0xc(%esi),%eax
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
jb     409f <main+0x2b4f>
lea    -0x3c8c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
lea    0x10(%esi),%edx
lea    -0x5bc0(%ebx),%eax
call   4ef0 <main+0x39a0>
mov    0x10(%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x70b,0x8(%esp)
lea    0x10(%esi,%eax,1),%esi
lea    -0x4ea5(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x37cb(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    %edi,%edx
mov    %esi,%eax
call   5bf0 <main+0x46a0>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4e8f(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
lea    -0x56ad(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x40(%esp),%esi
mov    (%esi),%eax
mov    0x8(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5699(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    (%esi),%eax
mov    0x4(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5684(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5670(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x565e(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x12(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x564a(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
testb  $0x1,0x12(%esi)
jne    40ba <main+0x2b6a>
mov    0x40(%esp),%eax
cmpw   $0x0,0x12(%eax)
js     43ac <main+0x2e5c>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0x40(%esp),%edi
movzbl 0x11(%edi),%eax
mov    %eax,0xc(%esp)
movzbl 0x10(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5619(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x14(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5601(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x18(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x55ee(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x20(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x55db(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x5c(%edi),%eax
mov    0x60(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4508(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    -0x55c4(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x1c(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x55b3(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x27(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x559d(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x2c(%edi),%eax
mov    0x30(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5583(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x34(%edi),%eax
mov    0x38(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5569(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x3c(%edi),%eax
mov    0x40(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5552(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x44(%edi),%eax
mov    0x48(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x553d(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4c(%edi),%eax
mov    0x50(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x44e8(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x54(%edi),%eax
mov    0x58(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x44bc(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x78(%edi),%eax
movzbl 0x24(%edi),%ecx
mov    0x20(%eax),%edx
mov    0x1c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%esi
sar    $0x1f,%esi
test   $0x20,%cl
cmovne %edx,%eax
cmovne %esi,%edx
mov    %eax,0x70(%esp)
lea    -0x43dc(%ebx),%esi
mov    %edx,0x74(%esp)
fildll 0x70(%esp)
flds   -0x36c0(%ebx)
fmul   %st,%st(1)
fstpl  0x68(%esp)
fildll 0x5c(%edi)
fdivrp %st,%st(1)
mov    %eax,0x8(%esp)
lea    -0x448c(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
fstpl  0x10(%esp)
call   1460 <__printf_chk@plt>
mov    0x6c(%edi),%eax
mov    0x70(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4464(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x94(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5523(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x98(%edi),%eax
mov    0x9c(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4438(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0xb8(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4408(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x74(%edi),%eax
mov    0x20(%eax),%eax
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1460 <__printf_chk@plt>
lea    -0x550b(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x64(%edi),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x43b4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x64(%edi),%eax
mov    0x10(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x438c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x64(%edi),%eax
mov    0x18(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4368(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x64(%edi),%eax
mov    0x20(%eax),%eax
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1460 <__printf_chk@plt>
lea    -0x4348(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x4320(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x68(%edi),%eax
mov    0x4(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x54f2(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    -0x42fc(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x68(%edi),%eax
mov    0x14(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x54df(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
mov    0x18(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x54c3(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
mov    0x20(%eax),%edx
mov    0x1c(%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x42dc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x54ac(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x42b8(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
mov    0x38(%eax),%edx
mov    0x34(%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4294(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
mov    0x3c(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5490(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
movzbl 0x40(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4270(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x68(%edi),%eax
movzbl 0x41(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x424c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    %edi,(%esp)
call   1540 <ntfs_volume_get_free_space@plt>
test   %eax,%eax
fldl   0x68(%esp)
jne    19c3 <main+0x473>
mov    0x40(%esp),%ecx
mov    0xbc(%ecx),%eax
mov    0xc0(%ecx),%edx
mov    %eax,0x70(%esp)
mov    %edx,0x74(%esp)
fildll 0x70(%esp)
fmulp  %st,%st(1)
fildll 0x5c(%ecx)
fdivrp %st,%st(1)
mov    %eax,0x8(%esp)
lea    -0x4228(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
fstpl  0x10(%esp)
call   1460 <__printf_chk@plt>
jmp    19c8 <main+0x478>
cmp    $0xd0,%edx
jne    209d <main+0xb4d>
movzwl 0x14(%edi),%esi
add    %edi,%esi
movzwl (%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3bf0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x2(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x4dfd(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3bd0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
lea    -0x4d22(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
cmpl   $0x0,0x1f4(%ebx)
je     2648 <main+0x10f8>
mov    0x48(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x3adc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    2648 <main+0x10f8>
test   %eax,%eax
jne    19ef <main+0x49f>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    2660 <main+0x1110>
movzwl 0x14(%edi),%esi
add    %edi,%esi
movzbl 0x9(%esi),%eax
mov    %eax,0xc(%esp)
movzbl 0x8(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x503a(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    -0x5020(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
test   $0x1,%al
jne    3b68 <main+0x2618>
test   $0x2,%al
jne    3cb8 <main+0x2768>
test   $0x4,%al
jne    3c99 <main+0x2749>
test   $0x8,%al
jne    3c7a <main+0x272a>
test   $0x10,%al
lea    0x0(%esi),%esi
jne    3c5b <main+0x270b>
test   $0x20,%al
jne    3c3c <main+0x26ec>
test   $0x40,%ah
jne    3c21 <main+0x26d1>
cmpw   $0x0,0xa(%esi)
js     4404 <main+0x2eb4>
movzwl 0xa(%esi),%eax
test   $0xc03f,%eax
jne    3979 <main+0x2429>
lea    -0x4f9f(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
movzwl 0xa(%esi),%eax
test   $0x3fc0,%eax
je     1c38 <main+0x6e8>
and    $0x3fc0,%eax
mov    %eax,0x8(%esp)
lea    -0x4f8d(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
mov    0x10(%edi),%eax
test   %eax,%eax
je     3966 <main+0x2416>
shr    %eax
lea    0x88(%esp),%edx
movl   $0x0,0x88(%esp)
00
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movzwl 0x14(%edi),%eax
lea    (%edi,%eax,1),%ecx
mov    %ecx,(%esp)
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
jle    43c7 <main+0x2e77>
mov    0x88(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5068(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
movzwl 0x14(%edi),%edx
lea    -0x5bc0(%ebx),%eax
add    %edi,%edx
call   5430 <main+0x3ee0>
jmp    1c38 <main+0x6e8>
mov    0x4c(%esp),%eax
movzwl 0x14(%edi),%edx
mov    0xc(%eax),%eax
movzbl 0x10(%eax),%eax
mov    %eax,0x7c(%esp)
fildl  0x7c(%esp)
flds   -0x36bc(%ebx)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jb     3a72 <main+0x2522>
lea    (%edi,%edx,1),%eax
mov    0x10(%edi),%esi
lea    0x97(%esp),%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x68(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
lea    -0x50ee(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
cmp    $0x10,%esi
jbe    411f <main+0x2bcf>
mov    0x68(%esp),%eax
lea    0x10(%eax),%esi
mov    %esi,(%esp)
call   13f0 <ntfs_guid_is_zero@plt>
test   %eax,%eax
je     429c <main+0x2d4c>
lea    -0x4cfa(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x68(%esp),%eax
lea    0x20(%eax),%esi
mov    %esi,(%esp)
call   13f0 <ntfs_guid_is_zero@plt>
test   %eax,%eax
je     4521 <main+0x2fd1>
lea    -0x50ac(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x68(%esp),%esi
add    $0x30,%esi
mov    %esi,(%esp)
call   13f0 <ntfs_guid_is_zero@plt>
test   %eax,%eax
jne    413b <main+0x2beb>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
lea    -0x5091(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
mov    0x4c(%esp),%eax
cmpb   $0x0,0x8(%edi)
mov    0xc(%eax),%ecx
jne    3998 <main+0x2448>
cmpl   $0x0,0x1f4(%ebx)
mov    0x10(%edi),%eax
je     1c38 <main+0x6e8>
movzwl 0x14(%edi),%esi
mov    %eax,0x68(%esp)
movl   $0x0,0x6c(%esp)
movl   $0x0,0x64(%esp)
add    %edi,%esi
lea    -0x4dcb(%ebx),%eax
mov    %eax,0x58(%esp)
lea    -0x4d9d(%ebx),%eax
mov    %eax,0x50(%esp)
lea    -0x4d83(%ebx),%eax
mov    %eax,0x3c(%esp)
lea    -0x4d68(%ebx),%eax
mov    %eax,0x38(%esp)
lea    -0x4d59(%ebx),%eax
mov    %eax,0x34(%esp)
lea    -0x4da2(%ebx),%eax
mov    %eax,0x2c(%esp)
nop
mov    0x58(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x4(%esi),%eax
test   %al,%al
je     3e57 <main+0x2907>
cmp    $0x80,%al
je     3e68 <main+0x2918>
mov    %eax,0x8(%esp)
lea    -0x4db4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x5(%esi),%eax
lea    0x8(%esi),%edi
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x6(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x38(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x34(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x5(%esi),%edx
cmp    $0xb,%dl
jne    33b4 <main+0x1e64>
lea    -0x4d4e(%ebx),%eax
movl   $0xb,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x30(%esp)
call   14f0 <strncmp@plt>
mov    0x30(%esp),%edx
test   %eax,%eax
je     3f4c <main+0x29fc>
movzbl %dl,%edx
lea    0x9(%esi,%edx,1),%eax
mov    %eax,0x8(%esp)
lea    -0x4d5f(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
mov    (%esi),%eax
test   %eax,%eax
je     33f0 <main+0x1ea0>
add    %eax,%esi
mov    %esi,%ecx
sub    0x64(%esp),%ecx
mov    %ecx,%eax
cltd
cmp    0x6c(%esp),%edx
jle    3e42 <main+0x28f2>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
mov    0x4c(%esp),%eax
cmpl   $0x0,0x1f4(%ebx)
mov    0xc(%eax),%esi
je     1c38 <main+0x6e8>
mov    %edi,(%esp)
call   1370 <ntfs_get_attribute_value_length@plt>
or     %eax,%edx
je     436f <main+0x2e1f>
mov    %eax,(%esp)
call   1210 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,0x38(%esp)
je     1c38 <main+0x6e8>
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   1300 <ntfs_get_attribute_value@plt>
mov    %eax,%edi
or     %edi,%edx
je     454c <main+0x2ffc>
lea    -0x51b1(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
mov    0x38(%esp),%eax
mov    %eax,%esi
add    %edi,%eax
mov    %eax,0x50(%esp)
lea    -0x5198(%ebx),%eax
mov    %eax,0x3c(%esp)
cmp    0x50(%esp),%esi
jae    441f <main+0x2ecf>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    (%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x4(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x5180(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x6(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x5164(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x7(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x514a(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%esi),%eax
mov    0xc(%esi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3e28(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x14(%esi),%eax
mov    0x10(%esi),%edx
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0xc(%esp)
lea    -0x3e08(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x18(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x5130(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    -0x5119(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x6(%esi),%eax
test   %al,%al
je     431f <main+0x2dcf>
lea    0x88(%esp),%edx
mov    %eax,0x4(%esp)
lea    0x1a(%esi),%eax
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
movl   $0x0,0x88(%esp)
00
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
jle    4332 <main+0x2de2>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
lea    -0x50fa(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x4(%esi),%eax
movzbl 0x6(%esi),%edx
mov    %eax,%ecx
mov    %eax,0x68(%esp)
movzbl 0x7(%esi),%eax
lea    (%eax,%edx,2),%edi
cmp    %edi,%ecx
lea    -0x53dc(%ebx),%eax
mov    %eax,0x58(%esp)
jle    3665 <main+0x2115>
xchg   %ax,%ax
movzbl (%esi,%edi,1),%eax
add    $0x1,%edi
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
cmp    %edi,0x68(%esp)
jg     3640 <main+0x20f0>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
movzwl 0x4(%esi),%eax
add    %eax,%esi
jmp    347f <main+0x1f2f>
cmpl   $0x0,0x1f4(%ebx)
je     1c38 <main+0x6e8>
mov    0x4c(%esp),%ecx
cmpl   $0x0,0x20(%ecx)
mov    (%ecx),%edx
mov    0x4(%ecx),%eax
js     4514 <main+0x2fc4>
xor    $0x9,%edx
or     %eax,%edx
jne    1c38 <main+0x6e8>
movzbl 0x9(%edi),%eax
test   %al,%al
je     1c38 <main+0x6e8>
movzwl 0xa(%edi),%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
add    %edi,%esi
movzbl %al,%edi
lea    0x168(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   12a0 <ntfs_names_are_equal@plt>
test   %eax,%eax
je     1c38 <main+0x6e8>
lea    0x88(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   1440 <ntfs_attr_readall@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x58(%esp)
je     483d <main+0x32ed>
lea    -0x51e5(%ebx),%eax
mov    %eax,0x3c(%esp)
mov    0x10(%edi),%ecx
test   %ecx,%ecx
je     3765 <main+0x2215>
cmpl   $0x0,(%edi)
je     3765 <main+0x2215>
mov    0x88(%esp),%esi
mov    0xc(%edi),%edx
mov    0x8(%edi),%eax
mov    %esi,0x68(%esp)
mov    0x8c(%esp),%esi
cmp    %esi,%edx
jbe    463e <main+0x30ee>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
mov    0x4c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11d0 <ntfs_index_root_get@plt>
test   %eax,%eax
mov    %eax,0x68(%esp)
je     4459 <main+0x2f09>
mov    0x68(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    0x4c(%esp),%eax
call   6aa0 <main+0x5550>
movzwl 0xa(%edi),%esi
add    %edi,%esi
movzbl 0x9(%edi),%edi
movl   $0x0,0x10(%esp)
mov    %eax,0x38(%esp)
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xb0,0x4(%esp)
mov    %eax,(%esp)
call   1440 <ntfs_attr_readall@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     4244 <main+0x2cf4>
lea    0x88(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xa0,0x4(%esp)
mov    %eax,(%esp)
call   1440 <ntfs_attr_readall@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     45e6 <main+0x3096>
mov    0x28(%esp),%ecx
mov    %eax,%edi
xor    %esi,%esi
add    0x88(%esp),%eax
movl   $0x0,0x2c(%esp)
movl   $0x0,0x30(%esp)
mov    %eax,%edx
lea    -0x4e60(%ebx),%eax
mov    %ecx,0x58(%esp)
mov    %eax,0x34(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%edi
jae    3876 <main+0x2326>
mov    0x58(%esp),%eax
movzbl (%eax),%eax
bt     %esi,%eax
jb     3d1b <main+0x27cb>
mov    0x68(%esp),%eax
add    $0x1,%esi
add    0x8(%eax),%edi
cmp    $0x7,%esi
jle    3848 <main+0x22f8>
addl   $0x1,0x58(%esp)
xor    %esi,%esi
cmp    %edx,%edi
jb     384c <main+0x22fc>
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4e8f(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x2c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4e16(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
and    $0xffff,%edx
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x4178(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1b6e <main+0x61e>
lea    -0x53ef(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1b10 <main+0x5c0>
lea    -0x4d0d(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36c5(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x948,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    2660 <main+0x1110>
lea    -0x5052(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    1c38 <main+0x6e8>
mov    %eax,0x8(%esp)
lea    -0x4fa9(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    309f <main+0x1b4f>
mov    0x30(%edi),%eax
mov    0x34(%edi),%edx
cmpl   $0x0,0x1f4(%ebx)
mov    %eax,0x68(%esp)
mov    %edx,0x6c(%esp)
je     1c38 <main+0x6e8>
mov    %edi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x58(%esp)
call   12e0 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,%edi
je     42e2 <main+0x2d92>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   1210 <ntfs_malloc@plt>
mov    0x58(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     3a65 <main+0x2515>
mov    %eax,0x18(%esp)
mov    0x6c(%esp),%edx
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   14a0 <ntfs_rl_pread@plt>
cmp    %edx,0x6c(%esp)
je     4623 <main+0x30d3>
lea    -0x4de0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x7d2,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3870(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1220 <free@plt>
mov    %edi,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
mov    %eax,0x8(%esp)
lea    -0x3dc8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x3c(%esp)
call   12e0 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,0x68(%esp)
je     47cf <main+0x327f>
mov    0x30(%edi),%eax
mov    0x34(%edi),%ecx
mov    %eax,(%esp)
mov    %eax,0x50(%esp)
mov    %ecx,0x58(%esp)
call   1210 <ntfs_malloc@plt>
mov    0x3c(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
je     38ca <main+0x237a>
mov    %eax,0x18(%esp)
mov    0x50(%esp),%eax
mov    0x68(%esp),%ecx
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x58(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
call   14a0 <ntfs_rl_pread@plt>
cmp    %edx,0x58(%esp)
je     42c7 <main+0x2d77>
lea    -0x3d64(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x426,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3760(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
mov    %esi,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
lea    -0x500e(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
jmp    3043 <main+0x1af3>
mov    0x4(%esi),%edx
mov    (%esi),%eax
call   51d0 <main+0x3c80>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5287(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
call   51d0 <main+0x3c80>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x526e(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x14(%esi),%edx
mov    0x10(%esi),%eax
call   51d0 <main+0x3c80>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5256(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x1c(%esi),%edx
mov    0x18(%esi),%eax
call   51d0 <main+0x3c80>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x523f(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    (%edi),%edx
jmp    2108 <main+0xbb8>
lea    -0x4fc9(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    3077 <main+0x1b27>
lea    -0x4fd7(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
jmp    306e <main+0x1b1e>
lea    -0x4fe0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
jmp    3066 <main+0x1b16>
lea    -0x4fed(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
jmp    305b <main+0x1b0b>
lea    -0x4ffb(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
jmp    3053 <main+0x1b03>
lea    -0x5007(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0xa(%esi),%eax
jmp    304b <main+0x1afb>
lea    -0x4834(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36d3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
addl   $0x1,0x78(%esp)
jmp    1cf7 <main+0x7a7>
mov    0x68(%esp),%eax
mov    0x8(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   11e0 <ntfs_mst_post_read_fixup@plt>
test   %eax,%eax
jne    44cc <main+0x2f7c>
mov    0x34(%esp),%eax
lea    -0x385e(%ebx),%ecx
mov    %ecx,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x72b,0x8(%esp)
mov    %ecx,0x50(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x50(%esp),%ecx
cmpl   $0x0,0x1f4(%ebx)
jne    3f95 <main+0x2a45>
mov    0x10(%edi),%eax
mov    0x14(%edi),%edx
mov    %ecx,(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x4e49(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x10,0xc(%esp)
movl   $0x731,0x8(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x18(%edi),%eax
cmpl   $0x0,0x1f4(%ebx)
lea    0x18(%edi,%eax,1),%ecx
jne    3f6e <main+0x2a1e>
mov    0x38(%esp),%edx
mov    %ecx,%eax
call   5bf0 <main+0x46a0>
cmp    $0xffffffff,%eax
je     3e32 <main+0x28e2>
add    %eax,0x30(%esp)
addl   $0x1,0x2c(%esp)
mov    %eax,0x18(%esp)
lea    -0x4e2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x774,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3840(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x3c(%esp),%edx
add    0x88(%esp),%edx
jmp    385c <main+0x230c>
jl     32d0 <main+0x1d80>
cmp    0x68(%esp),%ecx
jb     32d0 <main+0x1d80>
jmp    33f0 <main+0x1ea0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    3312 <main+0x1dc2>
lea    -0x4dbc(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    3312 <main+0x1dc2>
lea    -0x4098(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x519,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1f08 <main+0x9b8>
lea    -0x5424(%ebx),%eax
and    $0xfffffffe,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1ae6 <main+0x596>
movzwl %di,%edi
lea    -0x53ff(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1b10 <main+0x5c0>
lea    -0x540b(%ebx),%eax
and    $0xfffffff7,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1b07 <main+0x5b7>
lea    -0x5411(%ebx),%eax
and    $0xfffffffb,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1afc <main+0x5ac>
lea    -0x541c(%ebx),%eax
and    $0xfffffffd,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    1af1 <main+0x5a1>
mov    0x14(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4d42(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    33d5 <main+0x1e85>
lea    0x18(%edi),%edx
lea    -0x5bc1(%ebx),%eax
mov    %ecx,0x50(%esp)
call   4ef0 <main+0x39a0>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0x50(%esp),%ecx
jmp    3ddd <main+0x288d>
mov    %edi,%edx
lea    -0x5bc1(%ebx),%eax
call   4fa0 <main+0x3a50>
mov    0x50(%esp),%ecx
jmp    3d81 <main+0x2831>
cmpl   $0xffffffff,0x1e8(%ebx)
jne    1ce1 <main+0x791>
cmpl   $0x0,0x1e4(%ebx)
jne    1ce1 <main+0x791>
cmpl   $0x0,0x200(%ebx)
jne    1ce1 <main+0x791>
cmpl   $0x1,0x8(%ebp)
jle    4012 <main+0x2ac2>
lea    -0x4860(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36d3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x119,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
addl   $0x1,0x78(%esp)
jmp    1ce1 <main+0x791>
cmpl   $0xffffffff,0x1e8(%ebx)
jne    1d04 <main+0x7b4>
jmp    191a <main+0x3ca>
mov    0x40(%esp),%eax
and    $0xffff,%ecx
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   14e0 <ntfs_inode_open@plt>
mov    %eax,0x4c(%esp)
jmp    1a0b <main+0x4bb>
lea    -0x3f48(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x579,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    205c <main+0xb0c>
mov    0x110(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%esi,%eax,4),%eax
mov    %eax,0x1e4(%ebx)
jmp    15f0 <main+0xa0>
lea    -0x3cb4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    288c <main+0x133c>
lea    -0x5634(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    29b3 <main+0x1463>
cmpl   $0x1,0x8(%ebp)
jle    4115 <main+0x2bc5>
lea    -0x4888(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x36d3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x112,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
addl   $0x1,0x78(%esp)
jmp    1cd4 <main+0x784>
lea    -0x4cfa(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x50ac(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
lea    -0x507e(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    1c38 <main+0x6e8>
mov    0x24(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5226(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x28(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x520d(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x2c(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x51f5(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x30(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x51e3(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x34(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x51cc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x38(%esi),%eax
mov    0x3c(%esi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f24(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x40(%esi),%eax
mov    0x44(%esi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f00(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    1c38 <main+0x6e8>
lea    -0x3c40(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x75d,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3840(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    38ca <main+0x237a>
lea    -0x4ef0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
lea    -0x50dc(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    31f1 <main+0x1ca1>
cmp    %eax,0x50(%esp)
jne    3b17 <main+0x25c7>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    25c3 <main+0x1073>
lea    -0x3bac(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x7da,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3870(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1c38 <main+0x6e8>
lea    -0x5042(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    3605 <main+0x20b5>
lea    -0x510f(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2f5,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x372a(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    3605 <main+0x20b5>
lea    -0x3e70(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2c0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x372a(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1c38 <main+0x6e8>
lea    -0x562d(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    29c2 <main+0x1472>
lea    -0x3d00(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x456,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x378f(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1c38 <main+0x6e8>
lea    -0x4fb8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    3082 <main+0x1b32>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
lea    -0x3de8(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    1c38 <main+0x6e8>
lea    -0x4ecd(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
lea    -0x3c68(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x752,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3840(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1c38 <main+0x6e8>
lea    -0x4f09(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
lea    -0x4efb(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
lea    -0x4e74(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x728,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x385e(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x3c(%esp),%edx
add    0x88(%esp),%edx
jmp    385c <main+0x230c>
mov    0x24(%ecx),%eax
mov    (%eax),%edx
mov    0x4(%eax),%eax
jmp    369c <main+0x214c>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
lea    -0x50c4(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    3216 <main+0x1cc6>
lea    -0x3e48(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2c9,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x372a(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
jmp    1c38 <main+0x6e8>
lea    -0x4ee5(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
lea    -0x4edd(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
lea    -0x4ed5(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    2809 <main+0x12b9>
lea    -0x3c1c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x764,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3840(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    38be <main+0x236e>
cmp    %eax,0x68(%esp)
jne    3a25 <main+0x24d5>
mov    %edi,(%esp)
call   1220 <free@plt>
mov    %esi,0x64(%esp)
jmp    3293 <main+0x1d43>
jb     464a <main+0x30fa>
cmp    0x68(%esp),%eax
jae    3765 <main+0x2215>
cmp    $0x0,%esi
mov    %ecx,0x50(%esp)
movl   $0x0,0x54(%esp)
ja     4665 <main+0x3115>
cmp    %ecx,0x68(%esp)
jbe    3765 <main+0x2215>
add    0x50(%esp),%eax
adc    0x54(%esp),%edx
cmp    %edx,%esi
ja     4681 <main+0x3131>
jb     3765 <main+0x2215>
cmp    %eax,0x68(%esp)
jbe    3765 <main+0x2215>
mov    0x3c(%esp),%eax
lea    -0x37b1(%ebx),%esi
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x48e,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    (%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x490,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5996(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x4(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x493,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5983(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x8(%edi),%eax
mov    0xc(%edi),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x4f53(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x496,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x10(%edi),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x499,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x4f37(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    0x14(%edi),%eax
lea    -0x5bc0(%ebx),%edx
call   58f0 <main+0x43a0>
mov    0x10(%edi),%eax
add    $0xf,%eax
and    $0xfffffff0,%eax
add    %eax,%edi
jmp    3739 <main+0x21e9>
lea    -0x3d30(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x42e,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x3760(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1c38 <main+0x6e8>
call   8f20 <main+0x79d0>
mov    0x1e0(%ebx),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x56c3(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movl   $0x1,(%esp)
call   1350 <exit@plt>
lea    -0x4f71(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x4ba,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x379d(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    1c38 <main+0x6e8>
lea    -0x4530(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
movl   $0x1,(%esp)
call   1350 <exit@plt>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   48c6 <main+0x3376>
add    $0xa5fc,%ebx
lea    -0x5f90(%ebx),%eax
push   %eax
lea    -0x6000(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x12c(%ebx)
call   13c0 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   48d0 <main+0x3380>
add    $0xa5b7,%ebx
sub    $0x14,%esp
lea    0x193(%ebx),%eax
lea    0x190(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     490b <main+0x33bb>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x104(%ebx),%eax
test   %eax,%eax
je     4905 <main+0x33b5>
mov    %edx,(%esp)
call   *%eax
jmp    4905 <main+0x33b5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   48d0 <main+0x3380>
add    $0xa577,%ebx
sub    $0x14,%esp
lea    0x190(%ebx),%eax
lea    0x190(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    4954 <main+0x3404>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x140(%ebx),%ecx
test   %ecx,%ecx
je     494e <main+0x33fe>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    494e <main+0x33fe>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   48d0 <main+0x3380>
add    $0xa527,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x1a0(%ebx)
jne    49af <main+0x345f>
mov    0x120(%ebx),%eax
test   %eax,%eax
je     49a3 <main+0x3453>
mov    0x164(%ebx),%eax
mov    %eax,(%esp)
call   1290 <__cxa_finalize@plt>
call   48e0 <main+0x3390>
movb   $0x1,0x1a0(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   48d0 <main+0x3380>
add    $0xa4d7,%ebx
sub    $0x14,%esp
mov    -0x208(%ebx),%eax
test   %eax,%eax
je     49f1 <main+0x34a1>
mov    0x138(%ebx),%eax
test   %eax,%eax
je     49f1 <main+0x34a1>
lea    -0x208(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    4920 <main+0x33d0>
xchg   %ax,%ax
xchg   %ax,%ax
nop
call   6d8e <main+0x583e>
add    $0xa49b,%ecx
cmp    $0x80,%eax
mov    %eax,%edx
je     4b68 <main+0x3618>
jbe    4a60 <main+0x3510>
cmp    $0xd0,%eax
je     4ac8 <main+0x3578>
ja     4aa0 <main+0x3550>
cmp    $0xa0,%eax
je     4ad8 <main+0x3588>
jbe    4b30 <main+0x35e0>
cmp    $0xb0,%edx
lea    -0x35ac(%ecx),%eax
je     4a58 <main+0x3508>
cmp    $0xc0,%edx
lea    -0x5ea0(%ecx),%eax
jne    4a98 <main+0x3548>
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
cmp    $0x30,%eax
je     4b60 <main+0x3610>
lea    0x0(%esi,%eiz,1),%esi
jbe    4ae8 <main+0x3598>
cmp    $0x50,%eax
je     4ae0 <main+0x3590>
jbe    4b48 <main+0x35f8>
cmp    $0x60,%edx
lea    -0x5edf(%ecx),%eax
je     4a58 <main+0x3508>
cmp    $0x70,%edx
lea    -0x5ed2(%ecx),%eax
je     4a58 <main+0x3508>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e53(%ecx),%eax
ret
nop
cmp    $0xf0,%eax
je     4ad0 <main+0x3580>
jbe    4b18 <main+0x35c8>
cmp    $0x100,%edx
lea    -0x5e6f(%ecx),%eax
je     4a58 <main+0x3508>
cmp    $0xffffffff,%edx
lea    -0x5e58(%ecx),%eax
jne    4a98 <main+0x3548>
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e91(%ecx),%eax
ret
nop
lea    -0x5e7d(%ecx),%eax
ret
nop
lea    -0x5eb2(%ecx),%eax
ret
nop
lea    -0x5ef4(%ecx),%eax
ret
nop
cmp    $0x10,%edx
lea    -0x5f30(%ecx),%eax
je     4a58 <main+0x3508>
cmp    $0x20,%edx
lea    -0x5f1a(%ecx),%eax
je     4a58 <main+0x3508>
test   %edx,%edx
lea    -0x5f38(%ecx),%eax
jne    4a98 <main+0x3548>
repz ret
lea    0x0(%esi),%esi
cmp    $0xe0,%edx
lea    -0x5e81(%ecx),%eax
jne    4a98 <main+0x3548>
repz ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x90,%edx
lea    -0x5ebe(%ecx),%eax
jne    4a98 <main+0x3548>
repz ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%edx
lea    -0x5eff(%ecx),%eax
jne    4a98 <main+0x3548>
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5f0a(%ecx),%eax
ret
nop
lea    -0x355b(%ecx),%eax
ret
nop
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
call   48d0 <main+0x3380>
add    $0xa325,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
mov    %edi,%esi
lea    -0x5e4a(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
test   $0x1,%edi
jne    4ed0 <main+0x3980>
test   $0x2,%esi
jne    4eb0 <main+0x3960>
test   $0x4,%esi
jne    4e90 <main+0x3940>
test   $0x10,%esi
jne    4e70 <main+0x3920>
test   $0x20,%esi
jne    4e50 <main+0x3900>
test   $0x40,%esi
jne    4e30 <main+0x38e0>
test   $0x80,%esi
jne    4e08 <main+0x38b8>
test   $0x100,%esi
jne    4de0 <main+0x3890>
test   $0x200,%esi
jne    4db8 <main+0x3868>
test   $0x400,%esi
jne    4d90 <main+0x3840>
test   $0x800,%esi
jne    4d68 <main+0x3818>
test   $0x1000,%esi
jne    4d40 <main+0x37f0>
test   $0x2000,%esi
jne    4d18 <main+0x37c8>
test   $0x4000,%esi
jne    4cc0 <main+0x3770>
cmp    $0x30,%ebp
je     4ce5 <main+0x3795>
test   $0x20000000,%esi
jne    4ca0 <main+0x3750>
test   %esi,%esi
je     4c77 <main+0x3727>
lea    -0x5d85(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
lea    -0x5d74(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5d91(%ebx),%eax
and    $0xdfffffff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c59 <main+0x3709>
xchg   %ax,%ax
lea    -0x5da7(%ebx),%eax
and    $0xffffbfff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
cmp    $0x30,%ebp
jne    4c51 <main+0x3701>
test   $0x10000000,%esi
je     4c51 <main+0x3701>
lea    -0x5d9c(%ebx),%eax
and    $0xefffffff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c51 <main+0x3701>
lea    0x0(%esi),%esi
lea    -0x5dbc(%ebx),%eax
and    $0xffffdfff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c40 <main+0x36f0>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5dc5(%ebx),%eax
and    $0xffffefff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c34 <main+0x36e4>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5dd1(%ebx),%eax
and    $0xfffff7ff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c28 <main+0x36d8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5de0(%ebx),%eax
and    $0xfffffbff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c1c <main+0x36cc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5ded(%ebx),%eax
and    $0xfffffdff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c10 <main+0x36c0>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5df8(%ebx),%eax
and    $0xfffffeff,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4c04 <main+0x36b4>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e00(%ebx),%eax
and    $0xffffff7f,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4bf8 <main+0x36a8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e08(%ebx),%eax
and    $0xffffffbf,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4bec <main+0x369c>
xchg   %ax,%ax
lea    -0x5e11(%ebx),%eax
and    $0xffffffdf,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4be0 <main+0x3690>
xchg   %ax,%ax
lea    -0x5e1c(%ebx),%eax
and    $0xffffffef,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4bd4 <main+0x3684>
xchg   %ax,%ax
lea    -0x5e24(%ebx),%eax
and    $0xfffffffb,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4bc8 <main+0x3678>
xchg   %ax,%ax
lea    -0x5e2c(%ebx),%eax
and    $0xfffffffd,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4bbc <main+0x366c>
xchg   %ax,%ax
lea    -0x5e36(%ebx),%eax
and    $0xfffffffe,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    4bb0 <main+0x3660>
xchg   %ax,%ax
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x9fa4,%ebx
sub    $0x20,%esp
mov    (%edx),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c5c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x5d69(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c3c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0xc(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c1c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x9ef4,%ebx
sub    $0x20,%esp
movzwl 0x4(%edx),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x4bfc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x6(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x4bd8(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x4(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
movzwl (%edi,%eax,1),%eax
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x4bb0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%edi),%eax
mov    0xc(%edi),%edx
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b90(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   48d0 <main+0x3380>
add    $0x9e34,%ebx
test   %edx,%edx
mov    %edx,0x18(%esp)
je     5159 <main+0x3c09>
mov    %eax,%ebp
xor    %esi,%esi
lea    -0x5d4e(%ebx),%eax
mov    %eax,0x28(%esp)
lea    -0x5d3e(%ebx),%eax
movl   $0x10,0x1c(%esp)
mov    %eax,0x2c(%esp)
xchg   %ax,%ax
mov    0x28(%esp),%eax
mov    %esi,%edi
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
cmp    %esi,0x18(%esp)
jbe    5184 <main+0x3c34>
cmp    0x1c(%esp),%esi
jae    516f <main+0x3c1f>
lea    0x11(%esi),%eax
mov    %eax,0x20(%esp)
lea    -0x5d46(%ebx),%eax
lea    0x1(%esi),%edi
mov    %esi,0x24(%esp)
mov    %eax,%esi
jmp    50ea <main+0x3b9a>
xchg   %ax,%ax
mov    %edx,%edi
movzbl -0x1(%ebp,%edi,1),%eax
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1460 <__printf_chk@plt>
cmp    0x18(%esp),%edi
je     5180 <main+0x3c30>
lea    0x1(%edi),%edx
cmp    0x20(%esp),%edx
jne    50e8 <main+0x3b98>
mov    0x24(%esp),%esi
cmp    0x1c(%esp),%esi
jae    516f <main+0x3c1f>
mov    $0x2e,%edi
jmp    512e <main+0x3bde>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0x1c(%esp),%esi
jae    5168 <main+0x3c18>
movzbl 0x0(%ebp,%esi,1),%eax
lea    -0x20(%eax),%ecx
cmp    $0x5e,%cl
cmova  %edi,%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   1420 <putchar@plt>
cmp    %esi,0x18(%esp)
ja     5128 <main+0x3bd8>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%esi),%eax
mov    %eax,0x1c(%esp)
movl   $0xa,(%esp)
call   1420 <putchar@plt>
jmp    50a0 <main+0x3b50>
mov    0x24(%esp),%esi
cmp    0x1c(%esp),%edi
jae    51bf <main+0x3c6f>
mov    %esi,0x20(%esp)
mov    0x1c(%esp),%esi
mov    %ebp,0x24(%esp)
mov    %edi,%ebp
mov    0x2c(%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
add    $0x1,%ebp
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
cmp    %esi,%ebp
jb     51a0 <main+0x3c50>
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebp
cmp    %esi,0x18(%esp)
ja     5116 <main+0x3bc6>
jmp    514d <main+0x3bfd>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x9cc3,%ebx
sub    $0x4c,%esp
movl   $0x2a69c000,0x8(%esp)
movl   $0xc9,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8b50 <main+0x7600>
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
movl   $0x989680,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%esi
call   8b50 <main+0x7600>
and    $0x7ffff,%esi
movl   $0x15180,0x8(%esp)
lea    0x1(%esi),%edi
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8cd0 <main+0x7780>
mov    $0x24924925,%edx
mov    %eax,%ebp
mov    %edi,%eax
mul    %edx
mov    %edi,%eax
and    $0x1ffff,%ebp
sub    %edx,%eax
shr    %eax
lea    (%edx,%eax,1),%ecx
mov    $0x396b06bd,%edx
shr    $0x2,%ecx
lea    0x0(,%ecx,8),%eax
sub    %ecx,%eax
mov    %edi,%ecx
sub    %eax,%ecx
mov    %esi,%eax
mul    %edx
shr    $0xf,%edx
imul   $0xfffdc54f,%edx,%eax
imul   $0x190,%edx,%edi
mov    $0x1323aa0d,%edx
add    %eax,%esi
lea    0x3(%esi,%esi,2),%eax
mul    %edx
shr    $0xd,%edx
imul   $0xffff7154,%edx,%eax
imul   $0x64,%edx,%edx
add    %eax,%esi
mov    %esi,%eax
lea    0x641(%edi,%edx,1),%edi
mov    $0x166db073,%edx
mul    %edx
shr    $0x7,%edx
imul   $0xfffffa4b,%edx,%eax
lea    (%edi,%edx,4),%edi
mov    $0x77975b9,%edx
add    %eax,%esi
lea    0x3(%esi,%esi,2),%eax
mul    %edx
shr    $0x5,%edx
imul   $0xfffffe93,%edx,%eax
add    %edx,%edi
mov    $0x51eb851f,%edx
add    %eax,%esi
mov    %edi,%eax
mul    %edx
mov    %edx,%eax
shr    $0x5,%eax
imul   $0x64,%eax,%eax
cmp    %eax,%edi
jne    5420 <main+0x3ed0>
shr    $0x7,%edx
imul   $0x190,%edx,%edx
cmp    %edx,%edi
setne  %al
test   %al,%al
je     53cb <main+0x3e7b>
cmp    $0x3a,%esi
ja     53c8 <main+0x3e78>
mov    %esi,%eax
mov    $0x8421085,%edx
mul    %edx
mov    %esi,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x4,%edx
lea    0x1(%edx),%eax
imul   $0xffffffe1,%edx,%edx
mov    %eax,0x38(%esp)
lea    0x1(%esi,%edx,1),%eax
mov    %eax,0x3c(%esp)
mov    %edi,0x28(%esp)
mov    %ebp,%eax
mov    $0x88888889,%edi
mul    %edi
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,%esi
mov    %ebp,%edx
shr    $0x5,%esi
imul   $0x3c,%esi,%eax
sub    %eax,%edx
mov    %esi,%eax
mov    %edx,0x24(%esp)
mul    %edi
mov    %ebp,%eax
shr    $0x5,%edx
imul   $0x3c,%edx,%edx
sub    %edx,%esi
mov    $0x91a2b3c5,%edx
mul    %edx
mov    0x3c(%esp),%eax
mov    %esi,0x20(%esp)
lea    0x1c0(%ebx),%esi
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
mov    0x38(%esp),%eax
shr    $0xb,%edx
mov    %edx,0x1c(%esp)
mov    -0x1e4(%ebx,%eax,4),%eax
mov    %eax,0x14(%esp)
mov    -0x200(%ebx,%ecx,4),%eax
mov    %eax,0x10(%esp)
lea    -0x4b70(%ebx),%eax
mov    %eax,0xc(%esp)
call   1530 <__sprintf_chk@plt>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1,%esi
cmp    $0x3b,%esi
jbe    5310 <main+0x3dc0>
lea    0xa1(%esi,%esi,4),%eax
mov    $0xd62b80d7,%edx
mul    %edx
mov    %edx,0x38(%esp)
mov    $0x66666667,%edx
shrl   $0x7,0x38(%esp)
imul   $0x99,0x38(%esp),%eax
sub    $0xa2,%eax
mov    %eax,0x3c(%esp)
imul   %edx
mov    0x3c(%esp),%eax
sar    %edx
sar    $0x1f,%eax
sub    %edx,%eax
add    %esi,%eax
mov    %eax,0x3c(%esp)
jmp    5336 <main+0x3de6>
lea    0x0(%esi,%eiz,1),%esi
test   $0x3,%edi
setne  %al
jmp    52ff <main+0x3daf>
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %esi
mov    %edx,%esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x9a64,%ebx
sub    $0x30,%esp
movzwl 0x4(%esi),%eax
mov    (%edx),%edx
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x18(%esp)
mov    %eax,0x10(%esp)
lea    -0x4b4c(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x1fc(%ebx),%edx
test   %edx,%edx
je     5680 <main+0x4130>
mov    0x28(%esi),%eax
mov    0x2c(%esi),%edx
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b28(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x30(%esi),%eax
mov    0x34(%esi),%edx
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0xc(%esp)
lea    -0x5cb3(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x40(%esi),%eax
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b04(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x38(%esi),%eax
mov    $0x30,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   4b70 <main+0x3620>
testb  $0x4,0x39(%esi)
je     55f0 <main+0x40a0>
mov    0x3c(%esi),%eax
test   %eax,%eax
jne    5750 <main+0x4200>
movzbl 0x41(%esi),%edx
cmp    $0x1,%dl
je     5740 <main+0x41f0>
jb     5730 <main+0x41e0>
cmp    $0x2,%dl
lea    -0x5d26(%ebx),%eax
je     5560 <main+0x4010>
cmp    $0x3,%dl
lea    -0x5d22(%ebx),%eax
lea    -0x5d2e(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0xc(%esp)
lea    -0x5c46(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzbl 0x40(%esi),%eax
test   %al,%al
je     5658 <main+0x4108>
lea    0x2c(%esp),%edx
lea    0x42(%esi),%ecx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
movl   $0x0,0x2c(%esp)
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
jle    5778 <main+0x4228>
mov    0x2c(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5c33(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x3c(%esi),%eax
test   %eax,%eax
je     5530 <main+0x3fe0>
movzwl 0x3c(%esi),%eax
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x5c79(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x3e(%esi),%eax
test   %ax,%ax
je     5530 <main+0x3fe0>
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0x5c5f(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    5530 <main+0x3fe0>
lea    0x0(%esi),%esi
lea    -0x5c14(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
call   51d0 <main+0x3c80>
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5d18(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x14(%esi),%edx
mov    0x10(%esi),%eax
call   51d0 <main+0x3c80>
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5cfe(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x1c(%esi),%edx
mov    0x18(%esi),%eax
call   51d0 <main+0x3c80>
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5ce5(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x20(%esi),%eax
mov    0x24(%esi),%edx
call   51d0 <main+0x3c80>
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5ccd(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
jmp    5483 <main+0x3f33>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5d3a(%ebx),%eax
jmp    5560 <main+0x4010>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5d34(%ebx),%eax
jmp    5560 <main+0x4010>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
lea    -0x5c95(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    5530 <main+0x3fe0>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4ae4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x373d(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x34c,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x96d3,%ebx
sub    $0x3c,%esp
movzbl (%edx),%eax
mov    %edi,0x8(%esp)
lea    0x8(%ebp),%esi
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5be0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x4(%ebp),%eax
test   %eax,%eax
mov    %eax,0x20(%esp)
je     58e8 <main+0x4398>
lea    -0x4ab8(%ebx),%eax
mov    $0x1,%ebp
mov    %eax,0x24(%esp)
lea    -0x5bd0(%ebx),%eax
mov    %eax,0x28(%esp)
lea    -0x5be8(%ebx),%eax
mov    %eax,0x2c(%esp)
jmp    58ce <main+0x437e>
lea    0x0(%esi),%esi
lea    -0x5bf9(%ebx),%ecx
jb     584d <main+0x42fd>
cmp    $0x2,%al
lea    -0x5bee(%ebx),%ecx
cmovne 0x2c(%esp),%ecx
mov    0x4(%esi),%eax
add    $0x1,%ebp
mov    %eax,0x14(%esp)
movzbl 0x1(%esi),%eax
mov    %ecx,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
lea    0x8(%esi),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1240 <ntfs_sid_to_mbs@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x1c(%esp),%ecx
mov    %ecx,(%esp)
call   1220 <free@plt>
movzwl 0x2(%esi),%eax
add    %eax,%esi
cmp    0x20(%esp),%ebp
ja     58e8 <main+0x4398>
movzbl (%esi),%eax
cmp    $0x1,%al
jne    5838 <main+0x42e8>
lea    -0x5bf3(%ebx),%ecx
jmp    584d <main+0x42fd>
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x95a3,%ebx
sub    $0x1c,%esp
movzbl (%eax),%eax
mov    %edx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5bbe(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x2(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5bab(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x4(%esi),%eax
cmpw   $0x0,0x2(%esi)
jns    5ae8 <main+0x4598>
test   %eax,%eax
jne    5a78 <main+0x4528>
lea    -0x5b1d(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%esi),%eax
test   %eax,%eax
je     5ac5 <main+0x4575>
add    %esi,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1240 <ntfs_sid_to_mbs@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,%ebp
mov    %eax,0xc(%esp)
lea    -0x5b04(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    %ebp,(%esp)
call   1220 <free@plt>
lea    -0x5ad7(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x2(%esi),%eax
test   $0x10,%al
je     5b78 <main+0x4628>
test   $0x20,%al
jne    5bc8 <main+0x4678>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0xc(%esi),%edx
lea    -0x5bc2(%ebx),%eax
lea    -0x5bc1(%ebx),%ecx
add    %esi,%edx
test   %edi,%edi
cmove  %ecx,%eax
call   57c0 <main+0x4270>
lea    -0x5abb(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
movzwl 0x2(%esi),%eax
test   $0x4,%al
je     5b90 <main+0x4640>
test   $0x20,%al
jne    5ba8 <main+0x4658>
movl   $0xa,(%esp)
call   1420 <putchar@plt>
mov    0x10(%esi),%edx
lea    -0x5bc2(%ebx),%eax
lea    -0x5bc1(%ebx),%ecx
add    %esi,%edx
test   %edi,%edi
cmove  %ecx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    57c0 <main+0x4270>
nop
add    %esi,%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1240 <ntfs_sid_to_mbs@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,%ebp
mov    %eax,0xc(%esp)
lea    -0x5b31(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    %ebp,(%esp)
call   1220 <free@plt>
mov    0x8(%esi),%eax
test   %eax,%eax
jne    5984 <main+0x4434>
lea    -0x5af0(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    59c6 <main+0x4476>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
lea    -0x5b95(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
mov    0x8(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5b7a(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0xc(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5b5f(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
mov    0x10(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x5b48(%ebx),%eax
mov    %eax,0x4(%esp)
call   1460 <__printf_chk@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5070(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
jmp    5a1b <main+0x44cb>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5070(%ebx),%eax
mov    %eax,(%esp)
call   1330 <puts@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x5ac5(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    5a49 <main+0x44f9>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5ac5(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1460 <__printf_chk@plt>
jmp    59f4 <main+0x44a4>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x92a5,%ebx
sub    $0x8c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
mov    %edx,0x34(%esp)
movl   $0x2,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    0x1f4(%ebx),%eax
lea    -0x5aa3(%ebx),%ecx
mov    %ecx,0x48(%esp)
lea    -0x1(%edx),%ecx
lea    -0x5c1f(%ebx),%edi
lea    -0x37f7(%ebx),%esi
test   %eax,%eax
mov    %ecx,0x30(%esp)
jne    5c76 <main+0x4726>
movzwl 0xc(%ebp),%eax
and    $0x2,%eax
movzwl %ax,%eax
test   %eax,%eax
jne    5e08 <main+0x48b8>
movzwl 0x8(%ebp),%edx
add    %edx,%ebp
addl   $0x1,0x2c(%esp)
test   %eax,%eax
mov    0x2c(%esp),%edx
lea    -0x1(%edx),%ecx
mov    %ecx,0x30(%esp)
je     5c4a <main+0x46fa>
movzwl 0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x657,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0xa(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x65a,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5a86(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0xc(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x65c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5a6b(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0xc(%ebp),%eax
test   $0x1,%al
jne    5ee8 <main+0x4998>
test   $0x2,%al
jne    5e08 <main+0x48b8>
cmpl   $0x1,0x34(%esp)
jne    5e58 <main+0x4908>
movzwl 0x4(%ebp),%eax
mov    0x0(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x24(%esp)
mov    %eax,0x1c(%esp)
lea    -0x4a6c(%ebx),%eax
mov    %edx,0x20(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x66b,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    0x10(%ebp),%edx
lea    -0x5bc1(%ebx),%eax
call   5430 <main+0x3ee0>
movzwl 0x8(%ebp),%eax
test   %ax,%ax
je     5dd8 <main+0x4888>
add    %eax,%ebp
lea    -0x51e5(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x686,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x1f4(%ebx),%eax
jmp    5c62 <main+0x4712>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4954(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x681,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
xchg   %ax,%ax
lea    -0x5805(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x688,0x8(%esp)
mov    %edi,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x30(%esp),%eax
mov    0x7c(%esp),%esi
xor    %gs:0x14,%esi
jne    6a8b <main+0x553b>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movzwl 0x0(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x673,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5a4d(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x2(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x678,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5a31(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x34(%esp),%eax
cmp    $0x7,%eax
ja     69c0 <main+0x5470>
mov    -0x3aa0(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   1470 <ntfs_ie_get_vcn@plt>
mov    %ebp,(%esp)
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
call   1470 <ntfs_ie_get_vcn@plt>
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x661,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x40(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x44(%esp)
mov    0x3c(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x40(%esp),%eax
mov    %edx,0x24(%esp)
mov    0x44(%esp),%edx
mov    %eax,0x18(%esp)
lea    -0x4a8c(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0xc(%ebp),%eax
jmp    5d2a <main+0x47da>
nop
mov    0x10(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5be,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x59b3(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x380b(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x0(%ebp),%ecx
add    %ebp,%ecx
mov    (%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x61c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5890(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3820(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x40(%esp)
mov    %eax,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x4(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x61e,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x587f(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x4998(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x623,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x14(%ecx),%edx
mov    0x10(%ecx),%eax
call   51d0 <main+0x3c80>
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x626,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x5866(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x18(%ecx),%eax
mov    0x1c(%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x5851(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x62b,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x20(%ecx),%eax
mov    0x24(%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x5833(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x630,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x28(%ecx),%eax
mov    0x2c(%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x4978(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x635,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
cmpw   $0x30,0x2(%ebp)
jbe    5d90 <main+0x4840>
add    $0x30,%ecx
mov    %ecx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   1240 <ntfs_sid_to_mbs@plt>
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x639,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    %eax,0x40(%esp)
lea    -0x5818(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%edx
mov    %edx,(%esp)
call   1220 <free@plt>
jmp    5d90 <main+0x4840>
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%ebp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1240 <ntfs_sid_to_mbs@plt>
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5b8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    %eax,0x38(%esp)
lea    -0x59c4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x380b(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x38(%esp),%edx
mov    %edx,(%esp)
call   1220 <free@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x0(%ebp),%ecx
add    %ebp,%ecx
mov    (%ecx),%eax
lea    -0x3820(%ebx),%edx
mov    %edx,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x58c1(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x615,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x38(%esp),%edx
mov    0x4(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x618,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x58a8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    5d90 <main+0x4840>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebp),%eax
lea    -0x380b(%ebx),%ecx
mov    %ecx,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x59e0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x5af,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x14(%ebp),%eax
mov    0x18(%ebp),%edx
mov    0x38(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x4a24(%ebx),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5b4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    5d90 <main+0x4840>
lea    0x0(%esi),%esi
lea    0x57(%esp),%eax
mov    %eax,0x38(%esp)
mov    %eax,0x4(%esp)
lea    0x10(%ebp),%eax
mov    %eax,(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
mov    0x38(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5ab,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x59f2(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x380b(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x0(%ebp),%ecx
add    %ebp,%ecx
movzwl 0x4(%ecx),%eax
mov    (%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x5949(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3820(%ebx),%eax
mov    %edx,0x18(%esp)
movl   $0x5fe,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,0x40(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%ecx
movzwl 0x6(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x601,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5931(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x38(%esp),%eax
mov    0x4c(%esp),%ecx
mov    %eax,0x4(%esp)
lea    0x8(%ecx),%eax
mov    %eax,(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
mov    0x38(%esp),%eax
mov    0x40(%esp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x5913(%ebx),%eax
mov    %ecx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x605,0x8(%esp)
mov    %edi,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x38(%esp),%eax
mov    0x4c(%esp),%ecx
mov    %eax,0x4(%esp)
lea    0x18(%ecx),%eax
mov    %eax,(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
mov    0x38(%esp),%eax
mov    0x40(%esp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x58f6(%ebx),%eax
mov    %ecx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x609,0x8(%esp)
mov    %edi,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x4c(%esp),%ecx
mov    0x38(%esp),%eax
add    $0x28,%ecx
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   1280 <ntfs_guid_to_mbs@plt>
mov    0x38(%esp),%eax
mov    0x40(%esp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x58d9(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x60c,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    5d90 <main+0x4840>
nop
mov    0x10(%ebp),%eax
lea    -0x380b(%ebx),%edx
mov    %edx,(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x5a08(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x5a2,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x14(%ebp),%eax
mov    0x38(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x4a44(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x5a7,0x8(%esp)
mov    %edi,0x4(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x0(%ebp),%ecx
add    %ebp,%ecx
mov    (%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5e7,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5996(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3820(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x40(%esp)
mov    %eax,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x4(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5ea,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5983(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x49dc(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x5ef,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x10(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5f2,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x49b8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x14(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5f4,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5967(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    5d90 <main+0x4840>
lea    0x0(%esi),%esi
mov    0x10(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x59e,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x4a44(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x380b(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x0(%ebp),%ecx
add    %ebp,%ecx
mov    (%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5d8,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x5996(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3820(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x40(%esp)
mov    %eax,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x4(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5db,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x5983(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%edx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x18(%esp)
lea    -0x49dc(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x24(%esp)
mov    %edx,0x1c(%esp)
movl   $0x5e0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0x40(%esp),%ecx
mov    0x10(%ecx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x5e3,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x49b8(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    5d90 <main+0x4840>
mov    0x34(%esp),%eax
lea    -0x4a04(%ebx),%edx
mov    %edx,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x380b(%ebx),%eax
movl   $0x5c2,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x5a15(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x67a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movzwl 0x0(%ebp),%ecx
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
add    %ebp,%ecx
cmp    $0x7,%eax
ja     6a50 <main+0x5500>
mov    -0x3a80(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3820(%ebx),%eax
movl   $0x63f,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    5d90 <main+0x4840>
call   8f20 <main+0x79d0>
lea    0x57(%esp),%eax
mov    %eax,0x38(%esp)
jmp    64af <main+0x4f5f>
lea    0x0(%esi),%esi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x70,%esp
call   48d0 <main+0x3380>
add    $0x83f3,%ebx
mov    0x80(%esp),%eax
mov    %gs:0x14,%esi
mov    %esi,0x6c(%esp)
xor    %esi,%esi
cmpb   $0x0,0x9(%edx)
je     6b1b <main+0x55cb>
mov    (%eax),%ecx
test   %ecx,%ecx
je     6b38 <main+0x55e8>
cmp    $0x30,%ecx
mov    $0x1,%eax
je     6b1d <main+0x55cd>
lea    -0x4908(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5c1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x37df(%ebx),%eax
mov    %ecx,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x69f,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
xor    %eax,%eax
mov    0x6c(%esp),%esi
xor    %gs:0x14,%esi
jne    6d89 <main+0x5839>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   8410 <main+0x6ec0>
test   %eax,%eax
jle    6b1b <main+0x55cb>
lea    0x2c(%esp),%esi
movl   $0x40,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   7a20 <main+0x64d0>
mov    %eax,%ecx
xor    %eax,%eax
test   %ecx,%ecx
jle    6b1d <main+0x55cd>
mov    0x1c(%esp),%edx
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x4,0x4(%esp)
add    %edx,%eax
mov    %eax,0x8(%esp)
mov    0x100(%ebx),%eax
mov    %eax,(%esp)
call   12a0 <ntfs_names_are_equal@plt>
mov    0x1c(%esp),%edx
mov    %eax,%ecx
mov    $0x3,%eax
test   %ecx,%ecx
jne    6b1d <main+0x55cd>
movl   $0x0,0x18(%esp)
mov    0x144(%ebx),%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
add    %edx,%eax
mov    %eax,0x8(%esp)
call   12a0 <ntfs_names_are_equal@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     6c11 <main+0x56c1>
mov    $0x2,%eax
jmp    6b1d <main+0x55cd>
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x9(%edx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
add    %edx,%eax
mov    %eax,0x8(%esp)
call   12a0 <ntfs_names_are_equal@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    6c07 <main+0x56b7>
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x2,0x4(%esp)
add    %edx,%eax
mov    %eax,0x8(%esp)
mov    0x130(%ebx),%eax
mov    %eax,(%esp)
call   12a0 <ntfs_names_are_equal@plt>
mov    0x1c(%esp),%edx
mov    %eax,%ecx
mov    $0x7,%eax
test   %ecx,%ecx
jne    6b1d <main+0x55cd>
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x2,0x4(%esp)
add    %edx,%eax
mov    %eax,0x8(%esp)
mov    0x114(%ebx),%eax
mov    %eax,(%esp)
call   12a0 <ntfs_names_are_equal@plt>
mov    0x1c(%esp),%edx
mov    %eax,%ecx
mov    $0x5,%eax
test   %ecx,%ecx
jne    6b1d <main+0x55cd>
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x2,0x4(%esp)
add    %eax,%edx
mov    0x134(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   12a0 <ntfs_names_are_equal@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     6b1d <main+0x55cd>
lea    -0x57e8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11b0 <strcmp@plt>
mov    %eax,%edx
mov    $0x6,%eax
test   %edx,%edx
je     6b1d <main+0x55cd>
lea    -0x57d8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11b0 <strcmp@plt>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x4,%eax
jmp    6b1d <main+0x55cd>
call   8f20 <main+0x79d0>
mov    (%esp),%ecx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   48d0 <main+0x3380>
add    $0x80fa,%ebx
sub    $0x28,%esp
movl   $0x6,(%esp)
lea    -0x5bbf(%ebx),%eax
mov    %eax,0x4(%esp)
call   1490 <setlocale@plt>
xor    %edx,%edx
test   %eax,%eax
je     6dd8 <main+0x5888>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   1490 <setlocale@plt>
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x8c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x351c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2842(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   48d0 <main+0x3380>
add    $0x8050,%ebx
test   %esi,%esi
je     6ef7 <main+0x59a7>
mov    (%esi),%eax
test   %eax,%eax
je     6ed8 <main+0x5988>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   14b0 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,%edi
js     6eb2 <main+0x5962>
cmp    0x48(%esp),%edi
lea    0x2(%eax,%eax,1),%ebp
mov    (%esi),%eax
jge    6ec0 <main+0x5970>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1230 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   12d0 <realloc@plt>
test   %eax,%eax
je     6ef0 <main+0x59a0>
mov    %eax,(%esi)
jmp    6e92 <main+0x5942>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   14b0 <ntfs_mbstoucs@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%edi
jmp    6ea6 <main+0x5956>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    6eb4 <main+0x5964>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%esi
call   48d0 <main+0x3380>
add    $0x7f7a,%ebx
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     7040 <main+0x5af0>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   1510 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     6fe0 <main+0x5a90>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1270 <ntfs_check_if_mounted@plt>
test   %eax,%eax
mov    %eax,%edi
jne    7078 <main+0x5b28>
testb  $0x1,0x2c(%esp)
je     7060 <main+0x5b10>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     7128 <main+0x5bd8>
lea    -0x3693(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2855(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   1430 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0x18(%esp)
je     7100 <main+0x5bb0>
lea    -0x34f0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe1,0x8(%esp)
lea    -0x36b8(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    -0x2855(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1430 <__errno_location@plt>
xor    %edi,%edi
movl   $0x16,(%eax)
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
lea    -0x34cc(%ebx),%eax
lea    -0x36b8(%ebx),%edi
lea    -0x2855(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    0xb4(%esp),%edx
test   %edx,%edx
jne    71a0 <main+0x5c50>
lea    -0x34a0(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeb,0x8(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    702e <main+0x5ade>
lea    0x0(%esi),%esi
lea    -0x36b0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    7014 <main+0x5ac4>
nop
lea    -0x3474(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x36b8(%ebx),%ebp
lea    -0x5854(%ebx),%eax
lea    -0x2855(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x339c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    702e <main+0x5ade>
nop
lea    -0x3693(%ebx),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xee,0x8(%esp)
mov    %esi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    702e <main+0x5ade>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   48d0 <main+0x3380>
add    $0x7cb0,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     7388 <main+0x5e38>
mov    %ebp,%edi
and    $0x10000000,%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   6f10 <main+0x59c0>
test   %eax,%eax
je     7308 <main+0x5db8>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   1480 <ntfs_mount@plt>
test   %eax,%eax
je     7288 <main+0x5d38>
testb  $0x1,0x12(%eax)
mov    %eax,%esi
je     7278 <main+0x5d28>
test   %edi,%edi
je     7398 <main+0x5e48>
lea    -0x2cc0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2868(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x138,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x367e(%ebx),%eax
lea    -0x36b8(%ebx),%ebp
lea    -0x2868(%ebx),%edi
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x11d,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
call   1430 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
jne    7318 <main+0x5dc8>
lea    -0x3330(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5,%eax
je     73f3 <main+0x5ea3>
cmp    $0x1,%eax
je     7432 <main+0x5ee2>
cmp    $0x5f,%eax
je     74b0 <main+0x5f60>
cmp    $0x10,%eax
je     7471 <main+0x5f21>
cmp    $0x6,%eax
nop
jne    7308 <main+0x5db8>
lea    -0x2f34(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x129,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    7278 <main+0x5d28>
lea    0x0(%esi,%eiz,1),%esi
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    7278 <main+0x5d28>
lea    -0x2e60(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2868(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
call   11c0 <ntfs_umount@plt>
jmp    7278 <main+0x5d28>
lea    -0x327c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x121,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    7278 <main+0x5d28>
lea    -0x31d0(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x123,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    7278 <main+0x5d28>
lea    -0x3474(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x127,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    7278 <main+0x5d28>
lea    -0x3158(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x125,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    7278 <main+0x5d28>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%esi
call   48d0 <main+0x3380>
add    $0x79a1,%ebx
movl   $0x0,0x3c(%esp)
test   %esi,%esi
jne    7528 <main+0x5fd8>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     7511 <main+0x5fc1>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   12c0 <strtoll@plt>
test   %edx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
js     7640 <main+0x60f0>
call   1430 <__errno_location@plt>
cmpl   $0x22,(%eax)
je     7640 <main+0x60f0>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     7770 <main+0x6220>
mov    0x58(%esp),%edx
test   %edx,%edx
je     7610 <main+0x60c0>
movzbl (%eax),%esi
mov    %esi,%ecx
cmp    $0x4d,%cl
je     75ce <main+0x607e>
jle    7688 <main+0x6138>
mov    %esi,%ecx
cmp    $0x6b,%cl
je     75ed <main+0x609d>
jg     76d0 <main+0x6180>
cmp    $0x54,%cl
xchg   %ax,%ax
je     76e0 <main+0x6190>
cmp    $0x67,%cl
jne    76a7 <main+0x6157>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    761d <main+0x60cd>
xchg   %ax,%ax
movzbl (%eax),%edi
mov    %edi,%ecx
test   %cl,%cl
jne    7708 <main+0x61b8>
mov    0x54(%esp),%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x40,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x3669(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x162,0x8(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2879(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x2d,%cl
je     761d <main+0x60cd>
jle    7760 <main+0x6210>
mov    %esi,%ecx
cmp    $0x47,%cl
je     75af <main+0x605f>
cmp    $0x4b,%cl
je     75ed <main+0x609d>
mov    %eax,0x18(%esp)
lea    -0x2c44(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x174,0x8(%esp)
jmp    7666 <main+0x6116>
nop
mov    %esi,%ecx
cmp    $0x6d,%cl
je     75ce <main+0x607e>
cmp    $0x74,%cl
jne    76a7 <main+0x6157>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    75af <main+0x605f>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%cl
je     761d <main+0x60cd>
sub    %esi,%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
lea    -0x3655(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2879(%ebx),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    751e <main+0x5fce>
nop
test   %cl,%cl
je     761d <main+0x60cd>
jmp    76a7 <main+0x6157>
lea    0x0(%esi),%esi
lea    -0x2c78(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2879(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    751e <main+0x5fce>
jmp    77c0 <main+0x6270>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   48d0 <main+0x3380>
add    $0x76d1,%ebx
test   %esi,%esi
je     7858 <main+0x6308>
mov    0x34(%esp),%edx
test   %edx,%edx
je     7858 <main+0x6308>
mov    0x38(%esp),%eax
test   %eax,%eax
je     7858 <main+0x6308>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   13a0 <strchr@plt>
cmp    %eax,%esi
mov    %eax,%edi
je     7870 <main+0x6320>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   74f0 <main+0x5fa0>
test   %eax,%eax
je     7898 <main+0x6348>
test   %edi,%edi
je     7888 <main+0x6338>
cmpb   $0x0,0x1(%edi)
jne    78a8 <main+0x6358>
mov    0x10(%esp),%esi
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0x14(%esp),%edi
mov    0x34(%esp),%ecx
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    $0x1,%eax
mov    %edx,0x4(%ecx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
jmp    781f <main+0x62cf>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
jmp    7838 <main+0x62e8>
xchg   %ax,%ax
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   74f0 <main+0x5fa0>
test   %eax,%eax
je     7898 <main+0x6348>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    7838 <main+0x62e8>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   48d0 <main+0x3380>
add    $0x75b2,%ebx
test   %esi,%esi
je     7958 <main+0x6408>
mov    0x40(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   14c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    7950 <main+0x6400>
mov    0x4(%esi),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    7947 <main+0x63f7>
lea    0x0(%esi,%eiz,1),%esi
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    7947 <main+0x63f7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
call   48d0 <main+0x3380>
add    $0x7521,%ebx
test   %eax,%eax
je     79c8 <main+0x6478>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   14d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%esi
je     79d8 <main+0x6488>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   78e0 <main+0x6390>
mov    %esi,(%esp)
mov    %eax,%edi
call   13b0 <ntfs_attr_put_search_ctx@plt>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    79bb <main+0x646b>
nop
lea    -0x2c14(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x288e(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1ee,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    79bb <main+0x646b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%ecx
call   48d0 <main+0x3380>
add    $0x746a,%ebx
test   %ecx,%ecx
jne    7a58 <main+0x6508>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc4(%esp),%edx
test   %edx,%edx
je     7a40 <main+0x64f0>
mov    0xc0(%esp),%eax
lea    0x4c(%esp),%edi
mov    $0x15,%ecx
mov    %edi,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x5,0x28(%esp)
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x2bf0(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   14d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     7dc5 <main+0x6875>
mov    $0x4,%ebp
mov    %ebp,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   78e0 <main+0x6390>
test   %eax,%eax
je     7be8 <main+0x6698>
movzwl 0x14(%eax),%edi
add    %eax,%edi
movzbl 0x41(%edi),%ebp
cmp    0x20(%esp),%ebp
jg     7ad8 <main+0x6588>
mov    (%edi),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     7b25 <main+0x65d5>
mov    %eax,(%esp)
call   1220 <free@plt>
movl   $0x0,(%esi)
movl   $0x0,0xc(%esp)
add    $0x42,%edi
mov    %esi,0x8(%esp)
movzbl -0x2(%edi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
js     7b50 <main+0x6600>
mov    %ebp,0x20(%esp)
jmp    7ad8 <main+0x6588>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x23d,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a3(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
movl   $0x1e,(%esp)
call   1210 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     7c9b <main+0x674b>
mov    0xc0(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x363d(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1e,0x4(%esp)
mov    %edi,(%esp)
call   1190 <__snprintf_chk@plt>
mov    %edi,(%esi)
jmp    7b48 <main+0x65f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   13b0 <ntfs_attr_put_search_ctx@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
je     7c15 <main+0x66c5>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1450 <ntfs_inode_close@plt>
mov    %ebp,%eax
mov    %edi,%ecx
xor    $0x5,%eax
movzwl %di,%edi
or     %edi,%eax
je     7cea <main+0x679a>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   14e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     7ca8 <main+0x6758>
addl   $0x1,0x30(%esp)
add    $0x4,%esi
cmpl   $0x14,0x30(%esp)
jne    7aa8 <main+0x6558>
lea    -0x2bc0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a3(%ebx),%eax
movl   $0x14,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3633(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a3(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x257,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    0x48(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x20(%esp)
lea    -0x3618(%ebx),%eax
lea    0x9c(%esp),%esi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     7d56 <main+0x6806>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    0xc8(%esp),%edi
movl   $0x2f,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0xc4(%esp),%eax
sub    %ebp,%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   1190 <__snprintf_chk@plt>
cmp    %eax,%edi
jle    7d89 <main+0x6839>
add    %eax,%ebp
sub    $0x4,%esi
cmp    0x20(%esp),%esi
jne    7d08 <main+0x67b8>
mov    0x3c(%esp),%eax
lea    0x50(%eax),%edi
mov    %eax,%esi
mov    (%esi),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   1220 <free@plt>
cmp    %edi,%esi
jne    7d68 <main+0x6818>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3613(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    7d5f <main+0x680f>
lea    -0x2c14(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x223,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    7a4d <main+0x64fd>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   48d0 <main+0x3380>
add    $0x7080,%ebx
test   %esi,%esi
jne    7e40 <main+0x68f0>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     7e2a <main+0x68da>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   1200 <ntfs_attr_find_in_attrdef@plt>
test   %eax,%eax
mov    %eax,%edi
je     7ff8 <main+0x6aa8>
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   1250 <ntfs_ucsnlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
js     7fd0 <main+0x6a80>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x5854(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1410 <snprintf@plt>
cmp    0x5c(%esp),%eax
jge    7f88 <main+0x6a38>
movzbl 0x9(%esi),%edx
test   %dl,%dl
je     7e35 <main+0x68e5>
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
add    %eax,%edi
sub    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movzwl 0xa(%esi),%eax
movl   $0x0,0x2c(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   1310 <ntfs_ucstombs@plt>
test   %eax,%eax
js     8060 <main+0x6b10>
mov    0x2c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x35f0(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   1190 <__snprintf_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1220 <free@plt>
cmp    %esi,%ebp
jg     7e35 <main+0x68e5>
lea    -0x2acc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b4,0x8(%esp)
jmp    7faa <main+0x6a5a>
lea    0x0(%esi),%esi
lea    -0x2b24(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29a,0x8(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28b7(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2b7c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x28f,0x8(%esp)
jmp    7faa <main+0x6a5a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x295,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2b44(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28b7(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x35fa(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1410 <snprintf@plt>
jmp    7ec6 <main+0x6976>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2b04(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28b7(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2aa,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
lea    -0x35fa(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   1410 <snprintf@plt>
jmp    7e35 <main+0x68e5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   48d0 <main+0x3380>
add    $0x6dc8,%ebx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     823e <main+0x6cee>
mov    0x184(%ebx),%edx
cmp    0x1c(%esp),%edx
mov    0x180(%ebx),%eax
jle    81c8 <main+0x6c78>
mov    0x64(%ecx),%eax
mov    0x108(%ebx),%edx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   1400 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     8253 <main+0x6d03>
lea    0x420(%ebx),%edx
mov    $0xffffffff,%eax
mov    %edx,%edi
mov    $0x80,%ecx
rep stos %eax,%es:(%edi)
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    %edx,0x14(%esp)
mov    %ebp,%edx
sar    $0x3,%edx
movl   $0x200,0xc(%esp)
and    $0xfffff000,%eax
mov    %eax,0x180(%ebx)
shrd   $0x3,%ebp,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x184(%ebx)
call   13e0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     81f5 <main+0x6ca5>
mov    %esi,(%esp)
call   1320 <ntfs_attr_close@plt>
mov    0x18(%esp),%esi
mov    $0x1,%edx
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    %esi,%ecx
shrd   $0x3,%edi,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x420(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jl     81d4 <main+0x6c84>
cmp    0x18(%esp),%eax
ja     8104 <main+0x6bb4>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,0x1c(%esp)
jl     8197 <main+0x6c47>
jg     8104 <main+0x6bb4>
cmp    %eax,0x18(%esp)
jbe    8197 <main+0x6c47>
xchg   %ax,%ax
jmp    8104 <main+0x6bb4>
lea    -0x35d5(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28cc(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2eb,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1320 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    81c0 <main+0x6c70>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    81c0 <main+0x6c70>
lea    -0x35eb(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28cc(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2e1,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    81c0 <main+0x6c70>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   48d0 <main+0x3380>
add    $0x6be8,%ebx
test   %edi,%edi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     83b5 <main+0x6e65>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
mov    0x17c(%ebx),%edx
and    $0xffff,%ecx
mov    %eax,%esi
mov    0x178(%ebx),%eax
cmp    %edx,%ecx
jge    8388 <main+0x6e38>
lea    0x220(%ebx),%ebp
xor    %eax,%eax
mov    $0x80,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    0x40(%esp),%edi
and    $0xfffff000,%esi
xor    %edx,%edx
mov    %esi,%eax
shrd   $0x3,%edx,%eax
mov    %edx,0x17c(%ebx)
sar    $0x3,%edx
mov    %esi,0x178(%ebx)
mov    0x7c(%edi),%ecx
mov    %ebp,0x14(%esp)
movl   $0x200,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   13e0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     83c7 <main+0x6e77>
mov    0x18(%esp),%edi
mov    $0x1,%edx
mov    0x1c(%esp),%ebp
mov    %edi,%eax
mov    %edi,%ecx
shrd   $0x3,%ebp,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x220(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     8392 <main+0x6e42>
cmp    %eax,%esi
jb     82f4 <main+0x6da4>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,%ecx
jl     8351 <main+0x6e01>
jg     82f4 <main+0x6da4>
cmp    %eax,%esi
jbe    8351 <main+0x6e01>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    82f4 <main+0x6da4>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    837a <main+0x6e2a>
lea    -0x35bf(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28e0(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x325,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    837a <main+0x6e2a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   48d0 <main+0x3380>
add    $0x6a80,%ebx
test   %eax,%eax
je     84ff <main+0x6faf>
mov    0xc(%eax),%esi
test   %esi,%esi
je     84f8 <main+0x6fa8>
mov    0x4(%eax),%edx
mov    (%eax),%edi
cmp    $0x0,%edx
ja     8448 <main+0x6ef8>
cmp    $0xa,%edi
jbe    84b8 <main+0x6f68>
movzbl 0x10(%esi),%ecx
cmp    $0x3,%cl
je     84e8 <main+0x6f98>
mov    0x8(%eax),%eax
test   %eax,%eax
je     8480 <main+0x6f30>
mov    0x24(%eax),%edx
mov    0x20(%eax),%edi
mov    %edx,%ebp
or     %edi,%ebp
je     8480 <main+0x6f30>
and    $0xffff,%edx
je     84e0 <main+0x6f90>
cmp    $0x3,%cl
jne    8480 <main+0x6f30>
xor    $0xb,%edi
or     %edx,%edi
je     84b8 <main+0x6f68>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x30,(%esp)
call   7970 <main+0x6420>
test   %eax,%eax
je     84f8 <main+0x6fa8>
movzwl 0x14(%eax),%edx
mov    (%eax,%edx,1),%ecx
movzwl 0x4(%eax,%edx,1),%edx
xor    %eax,%eax
mov    %ecx,%edi
xor    $0x5,%edi
or     %edx,%edi
je     84bd <main+0x6f6d>
cmp    $0x0,%edx
ja     84c8 <main+0x6f78>
cmp    $0xa,%ecx
ja     84c8 <main+0x6f78>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x3,0x10(%esi)
jne    84bd <main+0x6f6d>
xor    $0xb,%ecx
xor    %eax,%eax
or     %edx,%ecx
sete   %al
jmp    84bd <main+0x6f6d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edi
jbe    84b8 <main+0x6f68>
jmp    8470 <main+0x6f20>
nop
xor    $0xb,%edi
or     %edx,%edi
lea    0x0(%esi),%esi
jne    8455 <main+0x6f05>
jmp    84b8 <main+0x6f68>
mov    $0xffffffff,%eax
jmp    84bd <main+0x6f6d>
nop
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    84bd <main+0x6f6d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   48d0 <main+0x3380>
add    $0x6962,%ebx
test   %esi,%esi
je     8578 <main+0x7028>
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   1520 <calloc@plt>
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %esi,0xc(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    856d <main+0x701d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   48d0 <main+0x3380>
add    $0x6902,%ebx
test   %esi,%esi
je     85bf <main+0x706f>
mov    0x8(%esi),%eax
test   %eax,%eax
je     85b7 <main+0x7067>
mov    %eax,(%esp)
call   1450 <ntfs_inode_close@plt>
mov    %esi,(%esp)
call   1220 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   48d0 <main+0x3380>
add    $0x68c0,%ebx
test   %esi,%esi
je     8b3a <main+0x75ea>
mov    0x8(%esi),%eax
test   %eax,%eax
je     8604 <main+0x70b4>
mov    %eax,(%esp)
call   1450 <ntfs_inode_close@plt>
movl   $0x0,0x8(%esi)
mov    0xc(%esi),%edi
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%ebp
sar    $0x1f,%ebp
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebp,%edx
mov    %eax,0x28(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x2c(%esp)
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jle    89d0 <main+0x7480>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   82a0 <main+0x6d50>
cmp    $0xffffffff,%eax
je     89e8 <main+0x7498>
test   %eax,%eax
je     87f0 <main+0x72a0>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    0xc(%esi),%ecx
orl    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   14e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     8970 <main+0x7420>
mov    0x8(%eax),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   7970 <main+0x6420>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   7970 <main+0x6420>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   7970 <main+0x6420>
test   %ebp,%ebp
je     89c0 <main+0x7470>
orl    $0x40,0x4(%esi)
test   %edi,%edi
je     86f7 <main+0x71a7>
orl    $0x40,0x4(%esi)
test   %eax,%eax
je     86ff <main+0x71af>
orl    $0x4,0x4(%esi)
testb  $0x8,(%esi)
je     877b <main+0x722b>
mov    0x8(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   14d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     8b16 <main+0x75c6>
mov    %eax,0x20(%esp)
mov    0x118(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x90,(%esp)
call   14c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    8773 <main+0x7223>
orl    $0x8,0x4(%esi)
mov    %edi,(%esp)
call   13b0 <ntfs_attr_put_search_ctx@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8410 <main+0x6ec0>
test   %eax,%eax
je     8960 <main+0x7410>
cmp    $0x1,%eax
mov    0x4(%esi),%eax
jne    8950 <main+0x7400>
or     $0x10,%eax
mov    %eax,0x4(%esi)
test   %eax,(%esi)
jne    87da <main+0x728a>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1450 <ntfs_inode_close@plt>
test   %eax,%eax
jne    8a40 <main+0x74f0>
movl   $0x0,0x8(%esi)
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jge    8938 <main+0x73e8>
mov    0x8(%esi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x4(%esi)
movl   $0x70,0x4(%esp)
movl   $0x1,(%esp)
call   1520 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
je     8a99 <main+0x7549>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    %eax,(%edi)
mov    0xc(%esi),%eax
mov    %edx,0x4(%edi)
mov    %eax,0xc(%edi)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   1210 <ntfs_malloc@plt>
mov    %eax,0x8(%edi)
mov    0x8(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     8ae0 <main+0x7590>
mov    0xc(%esi),%eax
mov    0x108(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   1400 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     8af2 <main+0x75a2>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    0x1c(%edx),%ecx
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
imul   %ecx,%eax
mov    %eax,%ebp
mov    %ecx,%eax
mull   0x10(%esi)
mov    %edi,(%esp)
mov    %edx,%ecx
add    %ebp,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   13e0 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0xc(%esi),%eax
cmp    $0x0,%edx
mov    0x1c(%eax),%eax
jg     8924 <main+0x73d4>
jge    8920 <main+0x73d0>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3555(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f0(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x44a,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   1320 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    87e4 <main+0x7294>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
jb     88c0 <main+0x7370>
mov    %edi,(%esp)
call   1320 <ntfs_attr_close@plt>
mov    0x4(%esi),%eax
jmp    87a0 <main+0x7250>
lea    0x0(%esi,%eiz,1),%esi
jg     8946 <main+0x73f6>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jbe    87da <main+0x728a>
mov    0xc(%esi),%edi
jmp    8650 <main+0x7100>
xchg   %ax,%ax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    87a0 <main+0x7250>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    87a0 <main+0x7250>
xchg   %ax,%ax
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x35a4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f0(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x404,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
jmp    87be <main+0x726e>
lea    0x0(%esi),%esi
orl    $0x80,0x4(%esi)
jmp    86ef <main+0x719f>
lea    0x0(%esi,%eiz,1),%esi
jl     87da <main+0x728a>
cmp    %eax,0x28(%esp)
ja     8650 <main+0x7100>
jmp    87da <main+0x728a>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2aac(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f0(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x3fa,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3537(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f0(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x459,0x8(%esp)
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
call   1430 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    -0x3589(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x434,0x8(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f0(%ebx),%eax
mov    %eax,(%esp)
call   11a0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   1220 <free@plt>
mov    $0xffffffff,%eax
jmp    87e4 <main+0x7294>
lea    -0x356e(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x443,0x8(%esp)
jmp    8abb <main+0x756b>
lea    -0x2c14(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x41f,0x8(%esp)
jmp    8abb <main+0x756b>
call   1430 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    87e4 <main+0x7294>
nop
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edi
mov    0x20(%esp),%edx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
test   %edi,%edi
mov    %edi,%ecx
mov    %eax,%ebp
js     8c18 <main+0x76c8>
test   %ebp,%ebp
mov    0x4(%esp),%esi
mov    %eax,%edi
js     8c34 <main+0x76e4>
test   %edi,%edi
mov    %ecx,%ebp
mov    %edx,0x8(%esp)
mov    %edi,%eax
mov    %edx,%ecx
mov    %esi,0x4(%esp)
jne    8bb0 <main+0x7660>
cmp    %ebp,%esi
jbe    8bd8 <main+0x7688>
mov    %ebp,%edx
mov    %ecx,%eax
xor    %ebp,%ebp
div    %esi
mov    %eax,%ecx
jmp    8bb8 <main+0x7668>
lea    0x0(%esi),%esi
cmp    %ebp,%edi
jbe    8bf8 <main+0x76a8>
xor    %ebp,%ebp
xor    %ecx,%ecx
mov    %ecx,%eax
mov    (%esp),%ecx
mov    %ebp,%edx
test   %ecx,%ecx
je     8bca <main+0x767a>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
jne    8be7 <main+0x7697>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%esi
mov    %ebp,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    %ecx,%eax
div    %esi
mov    %eax,%ecx
jmp    8bb8 <main+0x7668>
nop
bsr    %edi,%edi
xor    $0x1f,%edi
jne    8c48 <main+0x76f8>
mov    0x8(%esp),%edi
cmp    %edi,0x4(%esp)
jbe    8c0e <main+0x76be>
cmp    %ebp,%eax
jae    8bb4 <main+0x7664>
xor    %ebp,%ebp
mov    $0x1,%ecx
jmp    8bb8 <main+0x7668>
nop
neg    %edx
mov    0x4(%esp),%esi
mov    %eax,%edi
adc    $0x0,%ecx
neg    %ecx
test   %ebp,%ebp
movl   $0xffffffff,(%esp)
jns    8b8b <main+0x763b>
neg    %esi
adc    $0x0,%edi
notl   (%esp)
neg    %edi
jmp    8b8b <main+0x763b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    0x4(%esp),%esi
shl    %cl,%eax
mov    %eax,%edx
mov    $0x20,%eax
sub    %edi,%eax
mov    %eax,%ecx
shr    %cl,%esi
mov    %edi,%ecx
mov    %esi,0xc(%esp)
mov    0x4(%esp),%esi
or     %edx,0xc(%esp)
mov    %ebp,%edx
shl    %cl,%esi
mov    %eax,%ecx
mov    %esi,0x4(%esp)
mov    0x8(%esp),%esi
shr    %cl,%edx
mov    %edi,%ecx
shl    %cl,%ebp
mov    %eax,%ecx
shr    %cl,%esi
or     %ebp,%esi
mov    %esi,%eax
divl   0xc(%esp)
mov    %edx,%ebp
mov    %eax,%esi
mull   0x4(%esp)
cmp    %edx,%ebp
mov    %edx,0x4(%esp)
jb     8cb8 <main+0x7768>
mov    0x8(%esp),%edx
mov    %edi,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8cad <main+0x775d>
cmp    0x4(%esp),%ebp
je     8cb8 <main+0x7768>
mov    %esi,%ecx
xor    %ebp,%ebp
jmp    8bb8 <main+0x7668>
xchg   %ax,%ax
lea    -0x1(%esi),%ecx
xor    %ebp,%ebp
jmp    8bb8 <main+0x7668>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x34(%esp),%edx
mov    0x3c(%esp),%eax
mov    0x30(%esp),%ebp
mov    0x38(%esp),%edi
test   %edx,%edx
mov    %eax,%esi
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,0xc(%esp)
js     8db8 <main+0x7868>
test   %esi,%esi
mov    %edi,%edx
mov    %eax,%ecx
js     8da8 <main+0x7858>
mov    0x4(%esp),%edi
mov    %ecx,%eax
mov    %edx,%ecx
mov    (%esp),%esi
test   %eax,%eax
mov    %edx,0x10(%esp)
mov    %edi,%ebp
mov    %esi,0x14(%esp)
mov    %esi,%edi
mov    %ebp,%esi
jne    8d40 <main+0x77f0>
cmp    %esi,%edx
jbe    8d88 <main+0x7838>
mov    %esi,%edx
mov    0x14(%esp),%eax
div    %ecx
mov    %edx,%esi
mov    %esi,%eax
xor    %edx,%edx
jmp    8d49 <main+0x77f9>
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%eax
jbe    8d60 <main+0x7810>
mov    (%esp),%eax
mov    %esi,%edx
mov    0xc(%esp),%ecx
test   %ecx,%ecx
je     8d58 <main+0x7808>
neg    %eax
adc    $0x0,%edx
neg    %edx
add    $0x20,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
bsr    %eax,%edx
mov    %edx,(%esp)
xorl   $0x1f,(%esp)
jne    8dd8 <main+0x7888>
cmp    %edi,%ecx
jbe    8e70 <main+0x7920>
cmp    %esi,%eax
jb     8e70 <main+0x7920>
mov    %edi,%eax
mov    %ebp,%edx
jmp    8d49 <main+0x77f9>
lea    0x0(%esi),%esi
test   %edx,%edx
jne    8d97 <main+0x7847>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%ecx
mov    %esi,%eax
xor    %edx,%edx
div    %ecx
mov    %edi,%eax
div    %ecx
mov    %edx,%esi
jmp    8d36 <main+0x77e6>
lea    0x0(%esi),%esi
neg    %edx
adc    $0x0,%ecx
neg    %ecx
jmp    8d0b <main+0x77bb>
lea    0x0(%esi,%eiz,1),%esi
negl   (%esp)
adcl   $0x0,0x4(%esp)
negl   0x4(%esp)
movl   $0xffffffff,0xc(%esp)
jmp    8cff <main+0x77af>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%edx
movl   $0x20,0x18(%esp)
mov    0x10(%esp),%ebp
sub    %edx,0x18(%esp)
mov    %edx,%ecx
shl    %cl,%eax
movzbl 0x18(%esp),%ecx
mov    %ebp,%edi
shr    %cl,%edi
mov    %edx,%ecx
shl    %cl,%ebp
movzbl 0x18(%esp),%ecx
or     %eax,%edi
mov    %edx,%eax
mov    %esi,%edx
mov    %ebp,0x1c(%esp)
shr    %cl,%edx
mov    %eax,%ecx
mov    0x14(%esp),%eax
shl    %cl,%esi
movzbl 0x18(%esp),%ecx
shr    %cl,%eax
movzbl (%esp),%ecx
or     %esi,%eax
mov    0x14(%esp),%esi
div    %edi
shl    %cl,%esi
mov    %esi,0x14(%esp)
mov    %edx,%esi
mul    %ebp
mov    %edx,0x10(%esp)
mov    0x10(%esp),%ebp
mov    %eax,%edx
cmp    %ebp,%esi
mov    %ebp,%ecx
jb     8e84 <main+0x7934>
cmp    %eax,0x14(%esp)
jb     8e80 <main+0x7930>
mov    (%esp),%ebp
mov    0x14(%esp),%edi
sub    %edx,%edi
sbb    %ecx,%esi
mov    %esi,%eax
mov    %ebp,%ecx
shr    %cl,%edi
movzbl 0x18(%esp),%ecx
shl    %cl,%eax
mov    %ebp,%ecx
or     %eax,%edi
shr    %cl,%esi
mov    %edi,%eax
mov    %esi,%edx
jmp    8d49 <main+0x77f9>
nop
sub    %ecx,%edi
sbb    %eax,%esi
mov    %esi,%ebp
jmp    8d7c <main+0x782c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%esi
jne    8e48 <main+0x78f8>
mov    0x10(%esp),%ecx
mov    %eax,%edx
sub    0x1c(%esp),%edx
sbb    %edi,%ecx
jmp    8e48 <main+0x78f8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   48d0 <main+0x3380>
add    $0x5ff5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x20c(%ebx),%esi
call   1154 <_init>
lea    -0x210(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8efb <main+0x79ab>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x210(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    8ed8 <main+0x7988>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   48d0 <main+0x3380>
add    $0x5f7a,%ebx
sub    $0x8,%esp
call   1260 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   48d0 <main+0x3380>
add    $0x5f63,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
and    $0x55,%al
dec    %esi
push   %ebp
push   %ebx
inc    %ebp
inc    %esp
add    %ah,(%ebx,%edx,2)
push   %esp
inc    %ecx
dec    %esi
inc    %esp
inc    %ecx
push   %edx
inc    %esp
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ah,(%ecx,%eax,2)
push   %esp
push   %esp
push   %edx
dec    %ecx
inc    %edx
push   %ebp
push   %esp
inc    %ebp
pop    %edi
dec    %esp
dec    %ecx
push   %ebx
push   %esp
add    %ah,(%esi,%eax,2)
dec    %ecx
dec    %esp
inc    %ebp
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ah,(%edi,%ecx,2)
inc    %edx
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
pop    %edi
dec    %ecx
inc    %esp
add    %ah,(%ebx,%edx,2)
inc    %ebp
inc    %ebx
push   %ebp
push   %edx
dec    %ecx
push   %esp
pop    %ecx
pop    %edi
inc    %esp
inc    %ebp
push   %ebx
inc    %ebx
push   %edx
dec    %ecx
push   %eax
push   %esp
dec    %edi
push   %edx
add    %ah,(%esi,%edx,2)
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ah,(%esi,%edx,2)
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ah,(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
dec    %edi
dec    %edi
push   %esp
add    %ah,(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ah,(%edx,%edx,2)
inc    %ebp
push   %eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
push   %eax
dec    %edi
dec    %ecx
dec    %esi
push   %esp
add    %ah,0x4e495f41(,%eax,2)
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ah,0x50240041(,%eax,2)
push   %edx
dec    %edi
push   %eax
inc    %ebp
push   %edx
push   %esp
pop    %ecx
pop    %edi
push   %ebx
inc    %ebp
push   %esp
add    %ah,(%esp,%ecx,2)
dec    %edi
inc    %edi
inc    %edi
inc    %ebp
inc    %esp
pop    %edi
push   %ebp
push   %esp
dec    %ecx
dec    %esp
dec    %ecx
push   %esp
pop    %ecx
pop    %edi
push   %ebx
push   %esp
push   %edx
inc    %ebp
inc    %ecx
dec    %ebp
add    %ah,0x2400444e(,%eax,2)
push   %ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ah,0x6c694673
and    %ah,%gs:0x74(%ecx)
je     90d3 <_IO_stdin_used+0x16f>
imul   $0x3a736574,0x75(%edx),%esp
or     %eax,(%eax)
and    %dl,0x45(%edx)
inc    %ecx
inc    %esp
dec    %edi
dec    %esi
dec    %esp
pop    %ecx
add    %ah,(%eax)
dec    %eax
dec    %ecx
inc    %esp
inc    %esp
inc    %ebp
dec    %esi
add    %ah,(%eax)
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
add    %ah,(%eax)
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
add    %ah,(%eax)
inc    %ecx
push   %edx
inc    %ebx
dec    %eax
dec    %ecx
push   %esi
inc    %ebp
add    %ah,(%eax)
inc    %esp
inc    %ebp
push   %esi
dec    %ecx
inc    %ebx
inc    %ebp
add    %ah,(%eax)
dec    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
dec    %esp
add    %ah,(%eax)
push   %esp
inc    %ebp
dec    %ebp
push   %eax
dec    %edi
push   %edx
inc    %ecx
push   %edx
pop    %ecx
add    %ah,(%eax)
push   %ebx
push   %eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %ah,(%eax)
push   %edx
inc    %ebp
push   %eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
push   %eax
dec    %edi
dec    %ecx
dec    %esi
push   %esp
add    %ah,(%eax)
inc    %ebx
dec    %edi
dec    %ebp
push   %eax
push   %edx
inc    %ebp
push   %ebx
push   %ebx
inc    %ebp
inc    %esp
add    %ah,(%eax)
dec    %edi
inc    %esi
inc    %esi
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
add    %ah,(%eax)
dec    %esi
dec    %edi
push   %esp
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
inc    %ebp
dec    %esi
push   %esp
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
inc    %ebp
inc    %esp
add    %ah,(%eax)
inc    %ebp
dec    %esi
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
inc    %ebp
inc    %esp
add    %ah,(%eax)
dec    %ecx
xor    (%eax),%esi
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
add    %ah,(%eax)
push   %esi
dec    %ecx
inc    %ebp
push   %edi
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
add    %ah,(%eax)
push   %ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
cmp    (%eax),%ah
xor    %bh,0x25(%eax)
xor    %bh,(%eax)
js     912c <_IO_stdin_used+0x1c8>
and    %ch,(%eax)
xor    %bh,0x25(%eax)
xor    %bh,(%eax)
js     915e <_IO_stdin_used+0x1fa>
or     (%eax),%al
and    $0x646e4973,%eax
gs
js     915f <_IO_stdin_used+0x1fb>
push   %ebx
imul   $0x2009093a,0x65(%edx),%edi
and    $0x30282075,%eax
js     9173 <_IO_stdin_used+0x20f>
js     9179 <_IO_stdin_used+0x215>
or     (%eax),%al
or     %esp,0x20583430
and    %al,(%eax)
and    $0x68683230,%eax
pop    %eax
and    %al,(%eax)
and    %ah,(%eax)
and    %al,(%eax)
push   %eax
dec    %edi
push   %ebx
dec    %ecx
pop    %eax
add    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
xor    (%edx),%esi
add    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
xor    (%edx),%esi
and    %ah,(%esi)
and    %al,0x53(%edi,%ecx,2)
add    %ch,(%eax)
jne    91ef <_IO_stdin_used+0x28b>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
sub    %eax,(%eax)
and    $0x6c694673,%eax
and    %al,%gs:0x72(%ebx)
gs
popa
je     91fe <_IO_stdin_used+0x29a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
and    %ah,0x73250073
inc    %esi
imul   $0x65746c41,0x20(%ebp,%eiz,2),%ebp
jb     9214 <_IO_stdin_used+0x2b0>
and    %dl,%fs:0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
and    %ah,0x73250073
dec    %ebp
inc    %esi
push   %esp
and    %al,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
gs and %dl,%fs:%gs:0x69(%si)
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
and    %ah,0x73250073
dec    %esp
popa
jae    924d <_IO_stdin_used+0x2e9>
and    %al,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    9246 <_IO_stdin_used+0x2e2>
and    %dl,%fs:0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
and    %ah,0x73250073
inc    %esp
popa
je     9254 <_IO_stdin_used+0x2f0>
and    %dl,0x69(%ebx)
jp     925d <_IO_stdin_used+0x2f9>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     922a <_IO_stdin_used+0x2c6>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9232 <_IO_stdin_used+0x2ce>
or     (%eax),%al
and    $0x70655273,%eax
popa
jb     9286 <_IO_stdin_used+0x322>
and    %dh,%gs:0x6f(%eax)
imul   $0x67617420,0x74(%esi),%ebp
cmp    (%ecx),%cl
and    %dh,(%eax)
js     9249 <_IO_stdin_used+0x2e5>
js     9230 <_IO_stdin_used+0x2cc>
add    %ah,0x20414573
dec    %esp
outsb  %gs:(%esi),(%dx)
addr16 je 929a <_IO_stdin_used+0x336>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282064,%eax
js     9262 <_IO_stdin_used+0x2fe>
js     9268 <_IO_stdin_used+0x304>
or     (%eax),%al
and    $0x73655273,%eax
gs
jb     92bf <_IO_stdin_used+0x35b>
gs cmp %fs:%gs:(%ecx),%cl
or     %esp,(%eax)
and    $0x30282064,%eax
js     927b <_IO_stdin_used+0x317>
js     9281 <_IO_stdin_used+0x31d>
or     (%eax),%al
and    $0x6d614e73,%eax
gs
jae    92d2 <_IO_stdin_used+0x36e>
popa
arpl   %sp,0x3a(%ebp)
or     %ecx,(%ecx)
and    %ah,0x25000a73
jae    92b6 <_IO_stdin_used+0x352>
imul   $0x3a656d61,0x6e(%ebp,%eiz,2),%ebp
or     %ecx,(%ecx)
and    %ah,(%edi)
and    $0xa2773,%eax
outsb  %ds:(%esi),(%dx)
je     92ea <_IO_stdin_used+0x386>
jae    92ef <_IO_stdin_used+0x38b>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%eax)
and    $0x6c694673,%eax
and    %cl,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
jne    930b <_IO_stdin_used+0x3a7>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
fs
aas
and    %edi,(%edi)
or     (%eax),%al
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     92ad <_IO_stdin_used+0x349>
fs outsb %fs:%gs:(%esi),(%dx)
jns    92b2 <_IO_stdin_used+0x34e>
popa
jne    9319 <_IO_stdin_used+0x3b5>
imul   $0x6f6e6b6e,0x75(%eax,%eax,1),%esi
ja     932d <_IO_stdin_used+0x3c9>
add    %ah,0x76655273
imul   $0x20096e6f,0x69(%ebx),%esi
and    $0x25000a75,%eax
jae    92dc <_IO_stdin_used+0x378>
or     %esp,(%eax)
push   %ebx
dec    %ecx
inc    %esp
cmp    (%eax),%ah
and    $0x9000a73,%eax
or     %ecx,(%ecx)
add    %ah,0x65520973
jbe    9352 <_IO_stdin_used+0x3ee>
jae    9354 <_IO_stdin_used+0x3f0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x25000a75,%eax
jae    9301 <_IO_stdin_used+0x39d>
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     936f <_IO_stdin_used+0x40b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%ecx),%cl
or     %esp,(%eax)
xor    %bh,0x25(%eax)
xor    %dh,(%eax,%edi,2)
or     (%eax),%al
and    $0x774f0973,%eax
outsb  %ds:(%esi),(%dx)
gs
jb     9334 <_IO_stdin_used+0x3d0>
push   %ebx
dec    %ecx
inc    %esp
and    %dh,0x6f(%eax)
imul   $0x93a7265,0x74(%esi),%ebp
and    %ah,0x25000a70
jae    9332 <_IO_stdin_used+0x3ce>
inc    %edi
jb     939b <_IO_stdin_used+0x437>
jne    939e <_IO_stdin_used+0x43a>
and    %dl,0x49(%ebx)
inc    %esp
and    %dh,0x6f(%eax)
imul   $0x93a7265,0x74(%esi),%ebp
and    %ah,0x25000a70
jae    934d <_IO_stdin_used+0x3e9>
push   %ebx
inc    %ecx
inc    %ebx
dec    %esp
and    %dh,0x6f(%eax)
imul   $0x93a7265,0x74(%esi),%ebp
or     %esp,(%eax)
and    $0x25000a70,%eax
jae    9364 <_IO_stdin_used+0x400>
inc    %esp
inc    %ecx
inc    %ebx
dec    %esp
and    %dh,0x6f(%eax)
imul   $0x93a7265,0x74(%esi),%ebp
or     %esp,(%eax)
and    $0x25000a70,%eax
jae    937b <_IO_stdin_used+0x417>
dec    %edi
ja     93e3 <_IO_stdin_used+0x47f>
gs
jb     9398 <_IO_stdin_used+0x434>
push   %ebx
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x25000a73,%eax
jae    938f <_IO_stdin_used+0x42b>
dec    %edi
ja     93f7 <_IO_stdin_used+0x493>
gs
jb     93ac <_IO_stdin_used+0x448>
push   %ebx
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
insl   (%dx),%es:(%edi)
imul   $0xa676e69,0x73(%ebx),%esi
add    %ah,0x72470973
outsl  %ds:(%esi),(%dx)
jne    9414 <_IO_stdin_used+0x4b0>
and    %dl,0x49(%ebx)
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x25000a73,%eax
jae    93bc <_IO_stdin_used+0x458>
inc    %edi
jb     9425 <_IO_stdin_used+0x4c1>
jne    9428 <_IO_stdin_used+0x4c4>
and    %dl,0x49(%ebx)
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
insl   (%dx),%es:(%edi)
imul   $0xa676e69,0x73(%ebx),%esi
add    %ah,0x79530973
jae    9444 <_IO_stdin_used+0x4e0>
gs
insl   (%dx),%es:(%edi)
and    %al,0x43(%ecx)
dec    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    944d <_IO_stdin_used+0x4e9>
je     9448 <_IO_stdin_used+0x4e4>
add    %ah,%fs:0x69440973
jae    944f <_IO_stdin_used+0x4eb>
jb     9453 <_IO_stdin_used+0x4ef>
je     9459 <_IO_stdin_used+0x4f5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
jb     946e <_IO_stdin_used+0x50a>
and    %al,0x43(%ecx)
dec    %esp
cmp    (%ecx),%cl
and    %al,(%eax)
or     %ecx,(%ecx)
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     9475 <_IO_stdin_used+0x511>
jns    9425 <_IO_stdin_used+0x4c1>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 9473 <_IO_stdin_used+0x50f>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     943b <_IO_stdin_used+0x4d7>
js     9441 <_IO_stdin_used+0x4dd>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %ebx
gs
jns    9440 <_IO_stdin_used+0x4dc>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 948e <_IO_stdin_used+0x52a>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     9456 <_IO_stdin_used+0x4f2>
js     945c <_IO_stdin_used+0x4f8>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
fs
gs
js     945d <_IO_stdin_used+0x4f9>
outsb  %gs:(%esi),(%dx)
je     94b3 <_IO_stdin_used+0x54f>
jns    9463 <_IO_stdin_used+0x4ff>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 9483 <_IO_stdin_used+0x51f>
or     %esp,(%eax)
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     945c <_IO_stdin_used+0x4f8>
add    %cl,(%ecx)
or     %eax,0x74(%ecx,%eiz,2)
popa
and    %ch,0x66(%edi)
data16
jae    94c4 <_IO_stdin_used+0x560>
je     949b <_IO_stdin_used+0x537>
or     %ecx,(%ecx)
and    %ah,0x30282075
js     9490 <_IO_stdin_used+0x52c>
js     9496 <_IO_stdin_used+0x532>
or     (%eax),%al
or     %ecx,(%ecx)
inc    %esp
popa
je     94d6 <_IO_stdin_used+0x572>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 94e4 <_IO_stdin_used+0x580>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     94ac <_IO_stdin_used+0x548>
js     94b2 <_IO_stdin_used+0x54e>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %ebx
gs
jns    94b1 <_IO_stdin_used+0x54d>
inc    %esp
popa
je     94f6 <_IO_stdin_used+0x592>
cmp    (%edx),%cl
add    %cl,(%ecx)
or     %ecx,0x65(%ebx)
jns    94be <_IO_stdin_used+0x55a>
push   $0x3a687361
or     %ecx,(%ecx)
and    %dh,(%eax)
js     94ce <_IO_stdin_used+0x56a>
xor    %bh,(%eax)
js     94b7 <_IO_stdin_used+0x553>
add    %cl,(%ecx)
or     %ecx,0x65(%ebx)
jns    94d4 <_IO_stdin_used+0x570>
inc    %edi
push   %ebp
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
or     %ecx,0x65(%ebx)
jns    94e6 <_IO_stdin_used+0x582>
jb     952d <_IO_stdin_used+0x5c9>
jo     952b <_IO_stdin_used+0x5c7>
jb     953f <_IO_stdin_used+0x5db>
and    %dh,%gs:0x67(%ecx,%eiz,2)
cmp    (%ecx),%cl
and    %dh,(%eax)
js     94fc <_IO_stdin_used+0x598>
xor    %bh,(%eax)
js     94e5 <_IO_stdin_used+0x581>
add    %cl,(%ecx)
or     %ecx,0x65(%ebx)
jns    9502 <_IO_stdin_used+0x59e>
push   %ebx
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
or     %ecx,0x65(%ebx)
jns    9513 <_IO_stdin_used+0x5af>
outsl  %ds:(%esi),(%dx)
ja     9564 <_IO_stdin_used+0x600>
gs
jb     9519 <_IO_stdin_used+0x5b5>
imul   $0x75252009,0x9(%edx,%edi,1),%esp
and    %ch,(%eax)
xor    %bh,0x25(%eax)
js     9531 <_IO_stdin_used+0x5cd>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %eax
popa
jae    9578 <_IO_stdin_used+0x614>
cmp    (%ecx),%cl
or     %ecx,(%ecx)
and    %dh,(%eax)
js     953d <_IO_stdin_used+0x5d9>
xor    %bh,(%eax)
js     9526 <_IO_stdin_used+0x5c2>
add    %cl,(%ecx)
or     %edx,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x93a6469,0x20(%ecx,%edi,2),%esi
or     %esp,(%eax)
and    $0x30282075,%eax
js     955a <_IO_stdin_used+0x5f6>
js     9560 <_IO_stdin_used+0x5fc>
or     (%eax),%al
or     %ecx,(%ecx)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
jo     95a7 <_IO_stdin_used+0x643>
fs imul $0x20093a29,%fs:0x67(%esi),%ebp
20
xor    %bh,0x25(%eax)
xor    %bh,(%eax)
js     9560 <_IO_stdin_used+0x5fc>
add    %cl,(%ecx)
or     %ecx,0x46(%ebp)
push   %esp
and    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
or     %esp,(%eax)
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9578 <_IO_stdin_used+0x614>
add    %cl,(%ecx)
or     %ecx,0x46(%ebp)
push   %esp
and    %dl,0x65(%ebx)
jno    95ee <_IO_stdin_used+0x68a>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
dec    %esi
jne    95ee <_IO_stdin_used+0x68a>
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
and    %dh,(%eax)
js     95af <_IO_stdin_used+0x64b>
js     9596 <_IO_stdin_used+0x632>
add    %cl,(%ecx)
or     %eax,0x69(%edx)
jb     9607 <_IO_stdin_used+0x6a3>
push   $0x6c6f7620
jne    9607 <_IO_stdin_used+0x6a3>
and    %ch,%gs:0x64(%ecx)
and    %al,0x55(%edi)
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
and    %ah,0x9000a73
or     %eax,0x69(%edx)
jb     9624 <_IO_stdin_used+0x6c0>
push   $0x6a626f20
arpl   %si,%gs:0x69(%eax,%eiz,1)
and    %al,%fs:0x55(%edi)
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
and    %ah,0x9000a73
or     %eax,0x6d(%edi,%ebp,2)
popa
imul   $0x47206469,0x20(%esi),%ebp
push   %ebp
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
or     %ecx,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     9607 <_IO_stdin_used+0x6a3>
imul   $0x75252009,0x9(%edx,%edi,1),%esp
and    %ch,(%eax)
xor    %bh,0x25(%eax)
js     961f <_IO_stdin_used+0x6bb>
or     (%eax),%al
or     %ecx,(%ecx)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     9631 <_IO_stdin_used+0x6cd>
js     9637 <_IO_stdin_used+0x6d3>
or     (%eax),%al
or     %ecx,(%ecx)
push   %esi
gs
jb     9689 <_IO_stdin_used+0x725>
imul   $0x2009093a,0x6e(%edi),%ebp
and    $0x9000a75,%eax
or     %edx,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     9689 <_IO_stdin_used+0x725>
and    %ah,0x6c(%esi)
popa
addr16 jae 9669 <_IO_stdin_used+0x705>
or     %ecx,(%ecx)
and    %dh,(%eax)
js     965a <_IO_stdin_used+0x6f6>
xor    %bh,(%eax)
js     9643 <_IO_stdin_used+0x6df>
add    %cl,(%ecx)
or     %ecx,0x73(%ecx,%eiz,2)
je     9661 <_IO_stdin_used+0x6fd>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
gs cmp %fs:%gs:(%bx,%di),%cl
or     %esp,(%eax)
and    $0x9090073,%eax
push   %esp
push   $0x68736572
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    %fs:(%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     968c <_IO_stdin_used+0x728>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9694 <_IO_stdin_used+0x730>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %esp
imul   $0x9093a74,0x69(%ebp),%ebp
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     96a7 <_IO_stdin_used+0x743>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     96af <_IO_stdin_used+0x74b>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %edi
ja     96fb <_IO_stdin_used+0x797>
gs
jb     96b0 <_IO_stdin_used+0x74c>
push   %ebx
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
inc    %ebp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ch,0x6e(%ecx)
fs
gs
js     96c9 <_IO_stdin_used+0x765>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x72,(%eax),%esp
gs
popa
arpl   %bp,0x65(%eax)
or     %fs:(%eax),%al
das
and    $0x45,%al
js     9731 <_IO_stdin_used+0x7cd>
outsb  %gs:(%esi),(%dx)
fs
das
and    $0x51,%al
jne    9734 <_IO_stdin_used+0x7d0>
je     9728 <_IO_stdin_used+0x7c4>
add    %ch,(%edi)
and    $0x45,%al
js     9741 <_IO_stdin_used+0x7dd>
outsb  %gs:(%esi),(%dx)
fs
das
and    $0x4f,%al
bound  %ebp,0x49(%edx)
add    %cl,%fs:0x6f(%esi)
add    %bl,0x65(%ecx)
jae    96df <_IO_stdin_used+0x77b>
cmp    $0x48,%al
dec    %edi
dec    %esp
inc    %ebp
or     %eax,%ds:(%eax)
cmp    $0x52,%al
dec    %esp
pop    %edi
dec    %esi
dec    %edi
push   %esp
pop    %edi
dec    %ebp
inc    %ecx
push   %eax
push   %eax
inc    %ebp
inc    %esp
add    %bh,%ds:0x4e454f4e(,%eax,2)
push   %esp
or     %eax,%ds:(%eax)
cmp    $0x45,%al
dec    %ecx
dec    %esi
push   %esi
inc    %ecx
dec    %esp
or     %eax,%ds:(%eax)
cmp    $0x45,%al
dec    %ecx
dec    %edi
or     %eax,%ds:(%eax)
aas
aas
aas
or     %eax,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     978c <_IO_stdin_used+0x828>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %dl,0x6e(%ebp)
push   $0x6c646e61
gs and %ch,%fs:%gs:0x70(%edi)
je     97a4 <_IO_stdin_used+0x840>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%ebx)
jae    97a7 <_IO_stdin_used+0x843>
cmp    (%eax),%ah
and    $0xa2e64,%eax
sub    $0x6866643a,%eax
imul   $0x716d3a46,(%edx),%edi
je     97aa <_IO_stdin_used+0x846>
jbe    97ae <_IO_stdin_used+0x84a>
add    %dh,(%edx)
xor    %dh,(%ecx)
xor    (%esi),%ebp
xor    %ebp,(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
outsb  %ds:(%esi),(%dx)
je     97d0 <_IO_stdin_used+0x86c>
jae    97d5 <_IO_stdin_used+0x871>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
jo     97ed <_IO_stdin_used+0x889>
jb     97df <_IO_stdin_used+0x87b>
addr16 push $0x63282074
sub    %eax,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x35303032,%eax
and    %dl,0x69(%edx)
arpl   %bp,0x61(%eax)
jb     97f7 <_IO_stdin_used+0x893>
and    %dl,0x75(%edx)
jae    980b <_IO_stdin_used+0x8a7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,(%eax)
and    %ah,(%eax)
and    %dh,(%edx)
xor    %dh,(%eax)
xor    $0x2d,%al
xor    (%eax),%dh
xor    %dh,0x76755920
popa
insb   (%dx),%es:(%edi)
and    %al,0x6c(%esi)
gs
fs
gs
insb   (%dx),%es:(%edi)
add    %ah,(%eax)
and    %ah,(%eax)
and    %dh,(%edx)
xor    %dh,(%eax)
xor    $0x2d,%al
xor    (%eax),%dh
xor    %dh,(%edi)
and    %bl,0x75(%ecx)
jb     9829 <_IO_stdin_used+0x8c5>
and    %dl,0x61(%eax)
imul   $0x63,0x75(%eax),%ebp
push   $0xa007969
and    $0x73250a73,%eax
and    $0x46000a73,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     984f <_IO_stdin_used+0x8eb>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9865 <_IO_stdin_used+0x901>
and    %cl,%gs:0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     986d <_IO_stdin_used+0x909>
popa
je     986c <_IO_stdin_used+0x908>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %al,(%eax)
or     %ecx,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x7325203a,0x65(%ebx),%esp
or     (%eax),%al
or     %eax,0x76(%ebp,%eiz,2)
imul   $0x61747320,0x65(%ebx),%esp
je     988e <_IO_stdin_used+0x92a>
cmp    (%eax),%ah
and    $0xa756c,%eax
or     %edx,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    98a3 <_IO_stdin_used+0x93f>
and    %cl,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0x9000a73,%eax
push   %esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    98b5 <_IO_stdin_used+0x951>
and    %dl,%gs:0x74(%ebx)
popa
je     98b4 <_IO_stdin_used+0x950>
cmp    (%eax),%ah
and    $0xa756c,%eax
or     %edx,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    98c9 <_IO_stdin_used+0x965>
and    %al,%gs:0x6c(%esi)
popa
addr16 jae 989e <_IO_stdin_used+0x93a>
and    %dh,(%eax)
js     988d <_IO_stdin_used+0x929>
xor    %dh,(%eax,%edi,2)
add    %ah,(%eax)
inc    %esp
dec    %ecx
push   %edx
push   %esp
pop    %ecx
add    %ah,(%eax)
dec    %ebp
dec    %edi
inc    %esp
dec    %ecx
inc    %esi
dec    %ecx
inc    %ebp
inc    %esp
pop    %edi
inc    %edx
pop    %ecx
pop    %edi
inc    %ebx
dec    %eax
dec    %ebx
inc    %esp
push   %ebx
dec    %ebx
add    %cl,(%ecx)
push   %esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    98fa <_IO_stdin_used+0x996>
and    %dl,%gs:0x65(%esi)
jb     9906 <_IO_stdin_used+0x9a2>
imul   $0x7525203a,0x6e(%edi),%ebp
cs
and    $0x9000a75,%eax
push   %ebx
arpl   %si,%gs:0x72(%edi,%ebp,2)
and    %dl,0x69(%ebx)
jp     9910 <_IO_stdin_used+0x9ac>
cmp    (%eax),%ah
and    $0xa7568,%eax
or     %eax,0x6c(%ebx)
jne    992a <_IO_stdin_used+0x9c6>
je     991e <_IO_stdin_used+0x9ba>
jb     98db <_IO_stdin_used+0x977>
push   %ebx
imul   $0x7525203a,0x65(%edx),%edi
or     (%eax),%al
or     %ecx,0x6e(%ecx)
fs
gs
js     98ec <_IO_stdin_used+0x988>
inc    %edx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
push   %ebx
imul   $0x7525203a,0x65(%edx),%edi
or     (%eax),%al
dec    %ebp
inc    %esi
push   %esp
and    %cl,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     9953 <_IO_stdin_used+0x9ef>
popa
je     9952 <_IO_stdin_used+0x9ee>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %al,(%eax)
or     %ecx,0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %dl,%fs:0x69(%ebx)
jp     9962 <_IO_stdin_used+0x9fe>
cmp    (%eax),%ah
and    $0x9000a75,%eax
dec    %ebp
inc    %esi
push   %esp
and    %bl,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
and    %cl,%gs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     997b <_IO_stdin_used+0xa17>
jo     9980 <_IO_stdin_used+0xa1c>
imul   $0x7525203a,0x72(%ebp),%esp
or     (%eax),%al
or     %ecx,0x46(%ebp)
push   %esp
and    %al,0x74(%ecx,%eiz,2)
popa
and    %dl,0x6f(%eax)
jae    9994 <_IO_stdin_used+0xa30>
je     9996 <_IO_stdin_used+0xa32>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
dec    %ebp
inc    %esi
push   %esp
and    %bl,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
and    %dl,%gs:0x74(%ebx)
popa
jb     99ba <_IO_stdin_used+0xa56>
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
dec    %ebp
inc    %esi
push   %esp
and    %bl,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
and    %al,%gs:0x6e(%ebp)
cmp    %fs:(%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
dec    %ebp
inc    %esi
push   %esp
and    %bl,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
and    %dl,%gs:0x6f(%eax)
jae    99da <_IO_stdin_used+0xa76>
je     99dc <_IO_stdin_used+0xa78>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
pop    %edi
dec    %ebp
inc    %esi
push   %esp
dec    %ebp
imul   $0x7a695320,0x72(%edx),%esi
cmp    %gs:(%eax),%ah
and    $0x46000a64,%eax
dec    %ecx
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
imul   $0x6e492070,0x61(%ebp,%ebp,2),%esi
outsw  %ds:(%esi),(%dx)
jb     9a14 <_IO_stdin_used+0xab0>
popa
je     9a13 <_IO_stdin_used+0xaaf>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %al,(%eax)
or     %eax,0x61(%edx)
jae    9a18 <_IO_stdin_used+0xab4>
and    %cl,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%eax),%ah
and    $0xa756c6c,%eax
add    %cl,(%ecx)
inc    %ecx
je     9a39 <_IO_stdin_used+0xad5>
jb     9a30 <_IO_stdin_used+0xacc>
bound  %esi,0x74(%ebp)
and    %cl,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %cl,%gs:0x6e(%ebp,%eiz,2)
addr16 je 9a3f <_IO_stdin_used+0xadb>
cmp    (%eax),%ah
and    $0x9000a75,%eax
inc    %ecx
je     9a55 <_IO_stdin_used+0xaf1>
jb     9a4c <_IO_stdin_used+0xae8>
bound  %esi,0x74(%ebp)
and    %dl,%gs:0x74(%ebx)
popa
je     9a52 <_IO_stdin_used+0xaee>
cmp    (%eax),%ah
and    $0xa756c,%eax
or     %eax,0x74(%ecx)
je     9a6b <_IO_stdin_used+0xb07>
imul   $0x44206574,0x75(%edx),%esp
popa
je     9a64 <_IO_stdin_used+0xb00>
and    %dl,0x69(%ebx)
jp     9a6d <_IO_stdin_used+0xb09>
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     9a88 <_IO_stdin_used+0xb24>
gs
jae    9a8c <_IO_stdin_used+0xb28>
imul   $0x6f6c4220,0x6e(%edi),%ebp
arpl   %bp,0x20(%ebx)
push   %ebx
imul   $0x7525203a,0x65(%edx),%edi
or     (%eax),%al
inc    %esp
jne    9a9d <_IO_stdin_used+0xb39>
jo     9a9b <_IO_stdin_used+0xb37>
outsb  %ds:(%esi),(%dx)
and    %cl,0x6e(%bx,%di)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x20756c6c
sub    %dh,(%eax)
js     9a69 <_IO_stdin_used+0xb05>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9a71 <_IO_stdin_used+0xb0d>
or     (%eax),%al
inc    %ecx
je     9ac1 <_IO_stdin_used+0xb5d>
jb     9ab8 <_IO_stdin_used+0xb54>
bound  %esi,0x74(%ebp)
and    %cl,%gs:0x66(%edi)
data16
jae    9abe <_IO_stdin_used+0xb5a>
je     9a95 <_IO_stdin_used+0xb31>
or     %esp,(%eax)
and    $0x30282075,%eax
js     9a89 <_IO_stdin_used+0xb25>
js     9a8f <_IO_stdin_used+0xb2b>
or     (%eax),%al
dec    %ebp
inc    %esi
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %al,%fs:0x6c(%esi)
popa
addr16 jae 9ab3 <_IO_stdin_used+0xb4f>
or     %esp,(%eax)
add    %cl,0x4e(%ecx)
pop    %edi
push   %ebp
push   %ebx
inc    %ebp
and    %al,(%eax)
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %al,(%eax)
dec    %ecx
push   %ebx
pop    %edi
xor    $0x20,%al
add    %dl,0x49(%esi)
inc    %ebp
push   %edi
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
and    %al,(%eax)
push   %ebp
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
cmp    (%eax),%ah
xor    %bh,0x25(%eax)
xor    %dh,(%eax,%edi,2)
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %cl,%gs:0x46(%ebp)
push   %esp
and    %dl,0x61(%eax)
fs imul $0x2500093a,%fs:0x67(%esi),%ebp
25
xor    %dh,(%edx)
js     9ae9 <_IO_stdin_used+0xb85>
add    %cl,(%ecx)
push   %edx
gs
jae    9b38 <_IO_stdin_used+0xbd4>
fs outsb %fs:%gs:(%esi),(%dx)
je     9b0e <_IO_stdin_used+0xbaa>
and    %cl,(%ecx)
or     %esp,(%eax)
and    $0x9000a73,%eax
dec    %esi
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ebp,%eiz,2)
addr16 je 9b50 <_IO_stdin_used+0xbec>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     9b18 <_IO_stdin_used+0xbb4>
js     9b1e <_IO_stdin_used+0xbba>
or     (%eax),%al
or     %ecx,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
data16
jae    9b67 <_IO_stdin_used+0xc03>
je     9b3e <_IO_stdin_used+0xbda>
or     %ecx,(%ecx)
and    %ah,0x30282075
js     9b33 <_IO_stdin_used+0xbcf>
js     9b39 <_IO_stdin_used+0xbd5>
or     (%eax),%al
or     %eax,0x74(%ecx)
je     9b89 <_IO_stdin_used+0xc25>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
daa
and    $0xa2773,%eax
or     %eax,0x74(%ecx)
je     9ba2 <_IO_stdin_used+0xc3e>
imul   $0x66206574,0x75(%edx),%esp
insb   (%dx),%es:(%edi)
popa
addr16 jae 9b76 <_IO_stdin_used+0xc12>
or     %esp,(%eax)
xor    %bh,0x25(%eax)
xor    %dh,(%eax,%edi,2)
or     (%eax),%al
or     %eax,0x74(%ecx,%eiz,2)
popa
and    %dh,0x69(%ebx)
jp     9bb5 <_IO_stdin_used+0xc51>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     9b80 <_IO_stdin_used+0xc1c>
js     9b86 <_IO_stdin_used+0xc22>
or     (%eax),%al
or     %edx,0x65(%edx)
jae    9bcd <_IO_stdin_used+0xc69>
fs outsb %fs:%gs:(%esi),(%dx)
je     9b89 <_IO_stdin_used+0xc25>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 9ba9 <_IO_stdin_used+0xc45>
or     %ecx,(%ecx)
and    %dh,(%eax)
js     9b9a <_IO_stdin_used+0xc36>
xor    %dh,(%edx)
js     9b83 <_IO_stdin_used+0xc1f>
add    %cl,(%ecx)
push   %edx
gs
jae    9be4 <_IO_stdin_used+0xc80>
jb     9bf7 <_IO_stdin_used+0xc93>
gs
fs
push   %edx
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282064,%eax
js     9bb4 <_IO_stdin_used+0xc50>
js     9bba <_IO_stdin_used+0xc56>
or     (%eax),%al
or     %ecx,0x77(%edi,%ebp,2)
gs
jae    9c0e <_IO_stdin_used+0xcaa>
and    %dl,0x43(%esi)
dec    %esi
or     %ecx,(%ecx)
and    %ah,0x20646c6c
sub    %dh,(%eax)
js     9bcf <_IO_stdin_used+0xc6b>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9bd7 <_IO_stdin_used+0xc73>
or     (%eax),%al
or     %eax,0x74(%ecx,%eiz,2)
popa
and    %dh,0x69(%ebx)
jp     9c1f <_IO_stdin_used+0xcbb>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     9bec <_IO_stdin_used+0xc88>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9bf4 <_IO_stdin_used+0xc90>
or     (%eax),%al
or     %edx,0x75(%edx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x4356093a,0x74(%ebx),%esi
dec    %esi
or     %ecx,(%ecx)
dec    %esp
inc    %ebx
dec    %esi
or     %ecx,(%ecx)
dec    %esp
outsb  %gs:(%esi),(%dx)
addr16 je 9c4f <_IO_stdin_used+0xceb>
add    %cl,(%ecx)
or     %ecx,(%ecx)
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9bfb <_IO_stdin_used+0xc97>
or     %esi,(%eax)
js     9c1b <_IO_stdin_used+0xcb7>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9c03 <_IO_stdin_used+0xc9f>
or     %esi,(%eax)
js     9c23 <_IO_stdin_used+0xcbf>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9c0c <_IO_stdin_used+0xca8>
add    %cl,(%ecx)
or     %ecx,(%ecx)
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9c16 <_IO_stdin_used+0xcb2>
or     %esp,0x78300973
and    $0xa786c6c,%eax
add    %cl,(%ecx)
inc    %esi
imul   $0x61657243,0x20(%ebp,%eiz,2),%ebp
je     9c8e <_IO_stdin_used+0xd2a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
and    %ah,0x46090073
imul   $0x65746c41,0x20(%ebp,%eiz,2),%ebp
jb     9ca3 <_IO_stdin_used+0xd3f>
and    %dl,%fs:0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
and    %ah,0x4d090073
inc    %esi
push   %esp
and    %al,0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
gs and %dl,%fs:%gs:0x69(%si)
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
and    %ah,0x4c090073
popa
jae    9cda <_IO_stdin_used+0xd76>
and    %al,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    9cd3 <_IO_stdin_used+0xd6f>
and    %dl,%fs:0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
and    %ah,0x4d090073
popa
js     9ce8 <_IO_stdin_used+0xd84>
insl   (%dx),%es:(%edi)
jne    9cef <_IO_stdin_used+0xd8b>
and    %dh,0x65(%esi)
jb     9cfa <_IO_stdin_used+0xd96>
imul   $0x20093a73,0x6e(%edi),%ebp
and    $0xa2075,%eax
or     %edx,0x65(%esi)
jb     9d0b <_IO_stdin_used+0xda7>
imul   $0x6d756e20,0x6e(%edi),%ebp
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0xa2075,%eax
or     %eax,0x6c(%ebx)
popa
jae    9d24 <_IO_stdin_used+0xdc0>
and    %cl,0x44(%ecx)
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0xa2075,%eax
or     %edx,0x73(%ebp)
gs
jb     9ce3 <_IO_stdin_used+0xd7f>
dec    %ecx
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     9cf5 <_IO_stdin_used+0xd91>
js     9cfb <_IO_stdin_used+0xd97>
or     (%eax),%al
or     %edx,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x93a4449,0x20(%ecx,%edi,2),%esi
or     %esp,(%eax)
and    $0x30282075,%eax
js     9d10 <_IO_stdin_used+0xdac>
js     9d16 <_IO_stdin_used+0xdb2>
or     (%eax),%al
or     %eax,0x6d(%ebp,%esi,2)
jo     9d5e <_IO_stdin_used+0xdfa>
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%bx,%di)
je     9d6e <_IO_stdin_used+0xe0a>
imul   $0x6c206574,0x75(%edx),%esp
imul   $0x909003a,0x74(%ebx),%esi
inc    %ecx
je     9d81 <_IO_stdin_used+0xe1d>
jb     9d78 <_IO_stdin_used+0xe14>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
cmp    %gs:(%ecx),%cl
xor    %bh,0x25(%eax)
js     9d29 <_IO_stdin_used+0xdc5>
add    %cl,(%ecx)
or     %edx,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ch,%fs:0x6e(%ebp,%eiz,2)
addr16 je 9d97 <_IO_stdin_used+0xe33>
cmp    (%ecx),%cl
and    $0x30282075,%eax
js     9d5d <_IO_stdin_used+0xdf9>
js     9d63 <_IO_stdin_used+0xdff>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %esi
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ebp,%eiz,2)
addr16 je 9db1 <_IO_stdin_used+0xe4d>
cmp    (%ecx),%cl
and    $0x30282075,%eax
js     9d77 <_IO_stdin_used+0xe13>
js     9d7d <_IO_stdin_used+0xe19>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %esi
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
data16
jae    9dc7 <_IO_stdin_used+0xe63>
je     9d9e <_IO_stdin_used+0xe3a>
or     %esp,0x30282075
js     9d91 <_IO_stdin_used+0xe2d>
js     9d97 <_IO_stdin_used+0xe33>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jae    9dea <_IO_stdin_used+0xe86>
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3a(%ebp)
or     %esp,0x30282075
js     9da8 <_IO_stdin_used+0xe44>
js     9dae <_IO_stdin_used+0xe4a>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %esi
popa
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %eax,(%eax)
outsb  %ds:(%esi),(%dx)
je     9dfa <_IO_stdin_used+0xe96>
jae    9df5 <_IO_stdin_used+0xe91>
jne    9dfb <_IO_stdin_used+0xe97>
jae    9e0e <_IO_stdin_used+0xeaa>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x20(%ebx)
popaw
imul   $0x50090900,0x64(%ebp,%eiz,2),%ebp
popa
fs imul $0x900093a,%fs:0x67(%esi),%ebp
09
dec    %edi
bound  %ebp,0x65(%edx)
arpl   %si,0x49(%eax,%eiz,1)
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
inc    %edx
imul   $0x6f562068,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    9e3d <_IO_stdin_used+0xed9>
and    %cl,%gs:0x44(%ecx)
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
inc    %edx
imul   $0x624f2068,0x74(%edx),%esi
push   $0x65
arpl   %si,0x49(%eax,%eiz,1)
inc    %esp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x9000a73,%eax
inc    %edx
imul   $0x624f2068,0x74(%edx),%esi
push   $0x65
arpl   %si,0x49(%eax,%eiz,1)
inc    %esp
cmp    (%ecx),%cl
and    %ch,0x69(%ebp)
jae    9e7e <_IO_stdin_used+0xf1a>
imul   $0x6f440900,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
imul   $0x93a4449,0x20(%esi),%ebp
or     %ecx,(%ecx)
and    %ah,0x9000a73
inc    %esp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x93a4449,0x20(%esi),%ebp
or     %esp,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x676e69,0x73(%ebx),%esi
or     %edx,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9eab <_IO_stdin_used+0xf47>
and    %cl,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
daa
and    $0xa2773,%eax
or     %edx,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9ec1 <_IO_stdin_used+0xf5d>
and    %cl,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
jne    9ece <_IO_stdin_used+0xf6a>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs add %cl,%fs:%gs:(%ecx)
push   %esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    9ed9 <_IO_stdin_used+0xf75>
and    %dl,%gs:0x65(%esi)
jb     9ee5 <_IO_stdin_used+0xf81>
imul   $0x2009093a,0x6e(%edi),%ebp
and    $0x64252e64,%eax
or     (%eax),%al
or     %edx,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9ef3 <_IO_stdin_used+0xf8f>
and    %al,%gs:0x6c(%esi)
popa
addr16 jae 9ec8 <_IO_stdin_used+0xf64>
or     %ecx,(%ecx)
and    %al,(%eax)
inc    %esp
dec    %ecx
push   %edx
push   %esp
pop    %ecx
and    %al,(%eax)
push   %edx
inc    %ebp
push   %ebx
dec    %ecx
pop    %edx
inc    %ebp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
and    %al,(%eax)
push   %ebp
push   %eax
inc    %edi
pop    %edi
dec    %edi
dec    %esi
pop    %edi
dec    %ebp
dec    %edi
push   %ebp
dec    %esi
push   %esp
and    %al,(%eax)
dec    %ebp
dec    %edi
push   %ebp
dec    %esi
push   %esp
inc    %ebp
inc    %esp
pop    %edi
dec    %esi
push   %esp
xor    $0x20,%al
add    %al,0x4c(%ebp,%eax,2)
pop    %edi
push   %ebp
push   %ebx
dec    %esi
and    %al,(%eax)
push   %edx
inc    %ebp
push   %eax
inc    %ecx
dec    %ecx
push   %edx
pop    %edi
dec    %edi
inc    %edx
dec    %edx
dec    %ecx
inc    %esp
and    %al,(%eax)
inc    %ebx
dec    %eax
dec    %ebx
inc    %esp
push   %ebx
dec    %ebx
pop    %edi
push   %ebp
dec    %esi
inc    %esp
inc    %ebp
push   %edx
push   %edi
inc    %ecx
pop    %ecx
and    %al,(%eax)
dec    %ebp
dec    %edi
inc    %esp
pop    %edi
inc    %edx
pop    %ecx
pop    %edi
inc    %ebx
dec    %eax
dec    %ebx
inc    %esp
push   %ebx
dec    %ebx
and    %al,(%eax)
sub    %dh,(%eax)
js     9f20 <_IO_stdin_used+0xfbc>
xor    %dh,(%eax,%edi,2)
sub    %ecx,(%edx)
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x65(%ebx)
je     9f2a <_IO_stdin_used+0xfc6>
sub    %dh,(%eax)
js     9f3e <_IO_stdin_used+0xfda>
xor    %dh,(%eax)
xor    %ch,(%ecx)
add    %cl,(%ecx)
or     %ecx,(%ecx)
or     %esp,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x6c(%esi)
popa
addr16 jae 9f60 <_IO_stdin_used+0xffc>
and    %dh,(%eax)
js     9f4f <_IO_stdin_used+0xfeb>
xor    %dh,(%eax,%edi,2)
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     9fa0 <_IO_stdin_used+0x103c>
popa
and    %ah,%fs:(%ebx,%edx,2)
inc    %esp
push   %ebx
and    %ah,0x74(%ecx)
je     9fb9 <_IO_stdin_used+0x1055>
imul   $0x9006574,0x75(%edx),%esp
or     %ecx,0x66(%edi)
data16
jae    9fb9 <_IO_stdin_used+0x1055>
je     9f90 <_IO_stdin_used+0x102c>
or     %ecx,(%ecx)
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     9f88 <_IO_stdin_used+0x1024>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     9f90 <_IO_stdin_used+0x102c>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %esp
outsb  %gs:(%esi),(%dx)
addr16 je 9fd9 <_IO_stdin_used+0x1075>
cmp    (%ecx),%cl
or     %ecx,(%ecx)
and    %ah,0x30282075
js     9fa2 <_IO_stdin_used+0x103e>
js     9fa8 <_IO_stdin_used+0x1044>
or     (%eax),%al
or     %ecx,0x6e(%ecx)
fs
gs
js     9fed <_IO_stdin_used+0x1089>
and    %al,%fs:0x74(%ecx)
je     a000 <_IO_stdin_used+0x109c>
and    %dl,0x70(%ecx,%edi,2)
cmp    %gs:(%ecx),%cl
and    %al,(%eax)
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %dl,0x45(%ebx)
inc    %ebx
push   %ebp
push   %edx
inc    %ebp
pop    %edi
push   %ebx
inc    %esp
dec    %eax
add    %dl,0x45(%ebx)
inc    %ebx
push   %ebp
push   %edx
inc    %ebp
pop    %edi
push   %ebx
dec    %ecx
dec    %ecx
add    %cl,0x42(%edi)
dec    %edx
dec    %ecx
inc    %esp
pop    %edi
dec    %edi
add    %dl,0x55(%ecx)
dec    %edi
push   %esp
inc    %ecx
pop    %edi
dec    %edi
add    %dl,0x55(%ecx)
dec    %edi
push   %esp
inc    %ecx
pop    %edi
push   %ecx
add    %dl,0x45(%edx)
push   %eax
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
pop    %edi
push   %edx
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
popa
je     a04e <_IO_stdin_used+0x10ea>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x75(%edx)
insb   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     a01c <_IO_stdin_used+0x10b8>
js     a022 <_IO_stdin_used+0x10be>
or     (%eax),%al
or     %eax,0x6d(%ebp,%esi,2)
jo     a06a <_IO_stdin_used+0x1106>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
fs
gs
js     a02a <_IO_stdin_used+0x10c6>
jb     a07b <_IO_stdin_used+0x1117>
outsl  %ds:(%esi),(%dx)
je     a049 <_IO_stdin_used+0x10e5>
or     (%eax),%al
or     %ecx,0x6e(%ecx)
fs
gs
js     a038 <_IO_stdin_used+0x10d4>
outsb  %gs:(%esi),(%dx)
je     a08e <_IO_stdin_used+0x112a>
imul   $0x746f7420,0x73(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
cmp    (%ecx),%cl
and    %ah,0x44000a64
popa
insl   (%dx),%es:(%edi)
popa
gs and %cl,%fs:%gs:0x4e(%bx,%di)
inc    %esp
pop    %eax
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
add    %cl,%fs:(%ecx)
inc    %esp
jne    a0b1 <_IO_stdin_used+0x114d>
jo     a0af <_IO_stdin_used+0x114b>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
fs
gs
js     a06f <_IO_stdin_used+0x110b>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0xa,(%edx),%edi
add    %cl,(%ecx)
or     %ecx,0x6f(%esi)
fs and %dl,%fs:%gs:0x43(%esi)
dec    %esi
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     a093 <_IO_stdin_used+0x112f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a09b <_IO_stdin_used+0x1137>
or     (%eax),%al
or     %ecx,0x6e(%ecx)
fs
gs
js     a09b <_IO_stdin_used+0x1137>
outsb  %gs:(%esi),(%dx)
je     a0f1 <_IO_stdin_used+0x118d>
imul   $0x2009093a,0x73(%ebp),%esp
and    $0x9000a64,%eax
dec    %ecx
dec    %esi
inc    %esp
pop    %eax
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
and    %dh,0x74(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
cmp    (%ecx),%cl
and    %ah,0x9000a64
dec    %esi
inc    %ebp
inc    %ebp
inc    %esp
pop    %edi
inc    %ebp
inc    %ecx
and    %ah,0x6f(%ebx)
jne    a11e <_IO_stdin_used+0x11ba>
je     a0ec <_IO_stdin_used+0x1188>
or     %ecx,(%ecx)
and    %ah,0x30282075
js     a0e1 <_IO_stdin_used+0x117d>
js     a0e7 <_IO_stdin_used+0x1183>
or     (%eax),%al
outsb  %ds:(%esi),(%dx)
je     a129 <_IO_stdin_used+0x11c5>
jae    a124 <_IO_stdin_used+0x11c0>
jb     a133 <_IO_stdin_used+0x11cf>
pop    %edi
jo     a13c <_IO_stdin_used+0x11d8>
gs
popa
and    %ah,%fs:0x61(%esi)
imul   $0x45090a00,0x64(%ebp,%eiz,2),%ebp
inc    %ecx
and    %ah,0x6c(%esi)
popa
addr16 jae a11a <_IO_stdin_used+0x11b6>
or     %ecx,(%ecx)
and    %al,(%eax)
dec    %esi
inc    %ebp
inc    %ebp
inc    %esp
pop    %edi
inc    %ebp
inc    %ecx
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     a125 <_IO_stdin_used+0x11c1>
or     (%eax),%al
dec    %esi
dec    %edi
dec    %esi
inc    %ebp
add    %cl,(%ecx)
dec    %esi
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ebp,%eiz,2)
addr16 je a177 <_IO_stdin_used+0x1213>
cmp    (%ecx),%cl
and    %ah,0x30282064
js     a13e <_IO_stdin_used+0x11da>
js     a144 <_IO_stdin_used+0x11e0>
or     (%eax),%al
or     %edx,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    a188 <_IO_stdin_used+0x1224>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je a192 <_IO_stdin_used+0x122e>
cmp    (%ecx),%cl
and    %ah,0x30282064
js     a159 <_IO_stdin_used+0x11f5>
js     a15f <_IO_stdin_used+0x11fb>
or     (%eax),%al
or     %ecx,0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
daa
and    $0xa2773,%eax
or     %edx,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    a1b2 <_IO_stdin_used+0x124e>
cmp    (%ecx),%cl
or     %esp,(%eax)
add    %dl,0x45(%ebx)
push   %esp
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
inc    %edx
dec    %ecx
push   %esp
push   %ebx
add    %dh,(%eax)
and    $0x6e000a6f,%eax
je     a1cc <_IO_stdin_used+0x1268>
jae    a195 <_IO_stdin_used+0x1231>
xor    0x2d(%edi),%esp
fs
gs
jbe    a1d4 <_IO_stdin_used+0x1270>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     a17e <_IO_stdin_used+0x121a>
inc    %ebp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:%gs:0x65(%edx)
popa
arpl   %bp,0x65(%eax)
add    %al,%fs:0x72(%ebp)
jb     a206 <_IO_stdin_used+0x12a2>
jb     a1b9 <_IO_stdin_used+0x1255>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
imul   $0x646f6e20,%fs:0x67(%esi),%ebp
add    %cl,%gs:(%ecx)
inc    %edx
imul   $0x6f562068,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    a21f <_IO_stdin_used+0x12bb>
and    %cl,%gs:0x44(%ecx)
cmp    (%ecx),%cl
and    %ch,0x69(%ebp)
jae    a230 <_IO_stdin_used+0x12cc>
imul   $0x6e755300,0x67(%esi),%ebp
add    %cl,0x6f(%ebp)
outsb  %ds:(%esi),(%dx)
add    %dl,0x65(%ebp,%esi,2)
add    %dl,0x65(%edi)
add    %dl,%fs:0x75(%eax,%ebp,2)
add    %al,0x72(%esi)
imul   $0x746153,(%eax),%eax
dec    %edx
popa
outsb  %ds:(%esi),(%dx)
add    %al,0x65(%esi)
bound  %eax,(%eax)
dec    %ebp
popa
jb     a1e9 <_IO_stdin_used+0x1285>
inc    %ecx
jo     a25e <_IO_stdin_used+0x12fa>
add    %cl,0x61(%ebp)
jns    a1f1 <_IO_stdin_used+0x128d>
dec    %edx
jne    a262 <_IO_stdin_used+0x12fe>
add    %cl,0x75(%edx)
insb   (%dx),%es:(%edi)
add    %al,0x75(%ecx)
add    %dl,0x65(%bp,%di)
jo     a201 <_IO_stdin_used+0x129d>
dec    %edi
arpl   %si,0x4e(%eax,%eax,1)
outsl  %ds:(%esi),(%dx)
jbe    a209 <_IO_stdin_used+0x12a5>
inc    %esp
arpl   %ax,%gs:(%eax)
outsw  %ds:(%esi),(%dx)
jb     a274 <_IO_stdin_used+0x1310>
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     a218 <_IO_stdin_used+0x12b4>
imul   $0x66006564,0x6f(%esi),%ebp
imul   $0x65697571,0x0(%ebp,%eiz,2),%ebp
je     a229 <_IO_stdin_used+0x12c5>
jbe    a290 <_IO_stdin_used+0x132c>
jb     a28f <_IO_stdin_used+0x132b>
outsl  %ds:(%esi),(%dx)
jae    a295 <_IO_stdin_used+0x1331>
add    %dh,0x65(%esi)
jb     a2a8 <_IO_stdin_used+0x1344>
imul   $0x746f6e00,0x6e(%edi),%ebp
imul   $0x74666d00,0x65(%ebp),%ebp
add    %ah,0x746e4573
jb     a2b4 <_IO_stdin_used+0x1350>
gs
jae    a26e <_IO_stdin_used+0x130a>
dec    %edi
data16
data16
jae    a2b8 <_IO_stdin_used+0x1354>
je     a28f <_IO_stdin_used+0x132b>
or     %ecx,(%ecx)
and    %ah,0x30282075
js     a284 <_IO_stdin_used+0x1320>
js     a28a <_IO_stdin_used+0x1326>
or     (%eax),%al
add    %ah,0x6c6c4173
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %dl,%fs:%gs:0x69(%ebx)
jp     a2d9 <_IO_stdin_used+0x1375>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     a2a4 <_IO_stdin_used+0x1340>
js     a2aa <_IO_stdin_used+0x1346>
or     (%eax),%al
add    %ah,0x646e4973
gs
js     a2ac <_IO_stdin_used+0x1348>
push   $0x65646165
jb     a2b3 <_IO_stdin_used+0x134f>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae a2d3 <_IO_stdin_used+0x136f>
or     %esp,(%eax)
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     a2ac <_IO_stdin_used+0x1348>
add    %al,(%eax)
and    $0x64705573,%eax
and    %dl,%cs:0x65(%ebx)
jno    a2dd <_IO_stdin_used+0x1379>
and    %al,0x72(%ecx)
jb     a315 <_IO_stdin_used+0x13b1>
jns    a2d6 <_IO_stdin_used+0x1372>
dec    %edi
data16
data16
cmp    %cs:(%ecx),%cl
and    %ah,0x30282075
js     a2e9 <_IO_stdin_used+0x1385>
js     a2ef <_IO_stdin_used+0x138b>
or     (%eax),%al
and    $0x64705573,%eax
and    %dl,%cs:0x65(%ebx)
jno    a301 <_IO_stdin_used+0x139d>
and    %al,0x72(%ecx)
jb     a339 <_IO_stdin_used+0x13d5>
jns    a2fa <_IO_stdin_used+0x1396>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    a34c <_IO_stdin_used+0x13e8>
je     a31a <_IO_stdin_used+0x13b6>
or     %esp,(%eax)
and    $0x30282075,%eax
js     a30e <_IO_stdin_used+0x13aa>
js     a314 <_IO_stdin_used+0x13b0>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x64705573
and    %dl,%cs:0x65(%ebx)
jno    a329 <_IO_stdin_used+0x13c5>
and    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
and    %ah,0x30282075
js     a331 <_IO_stdin_used+0x13cd>
js     a337 <_IO_stdin_used+0x13d3>
or     (%eax),%al
and    $0x676f4c73,%eax
inc    %esi
imul   $0x2e716553,0x20(%ebp,%eiz,2),%ebp
and    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
and    %dh,(%eax)
js     a350 <_IO_stdin_used+0x13ec>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a339 <_IO_stdin_used+0x13d5>
add    %ah,0x25207333
xor    0x20(%ebx),%esi
and    $0x25207532,%eax
xor    %dh,(%edx)
jne    a37b <_IO_stdin_used+0x1417>
and    $0x3a753230,%eax
and    $0x20753230,%eax
and    $0x55207534,%eax
push   %esp
inc    %ebx
or     (%eax),%al
and    $0x72615073,%eax
outsb  %gs:(%esi),(%dx)
je     a37d <_IO_stdin_used+0x1419>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    a3a1 <_IO_stdin_used+0x143d>
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     a397 <_IO_stdin_used+0x1433>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a39f <_IO_stdin_used+0x143b>
or     (%eax),%al
and    $0x6c6c4173,%eax
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %dl,%fs:%gs:0x69(%ebx)
jp     a3ed <_IO_stdin_used+0x1489>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     a3ba <_IO_stdin_used+0x1456>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a3c2 <_IO_stdin_used+0x145e>
or     (%eax),%al
add    %ah,0x6c694673
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %cl,%gs:0x6e(%ebp,%eiz,2)
addr16 je a415 <_IO_stdin_used+0x14b1>
cmp    (%ecx),%cl
and    %ah,0x30282064
js     a3dc <_IO_stdin_used+0x1478>
js     a3e2 <_IO_stdin_used+0x147e>
or     (%eax),%al
add    %ch,0x74(%esi)
data16
jae    a42a <_IO_stdin_used+0x14c6>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     a438 <_IO_stdin_used+0x14d4>
jb     a405 <_IO_stdin_used+0x14a1>
and    %ah,0x6f(%ebx)
jne    a43c <_IO_stdin_used+0x14d8>
and    %ch,%fs:0x6f(%esi)
je     a3f6 <_IO_stdin_used+0x1492>
jo     a439 <_IO_stdin_used+0x14d5>
jb     a44d <_IO_stdin_used+0x14e9>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %ah,0x45434173
cmp    (%ecx),%cl
or     %esp,(%eax)
je     a46c <_IO_stdin_used+0x1508>
jo     a45a <_IO_stdin_used+0x14f6>
cmp    0x66202073,%ah
insb   (%dx),%es:(%edi)
popa
addr16 jae a43a <_IO_stdin_used+0x14d6>
xor    %bh,0x25(%eax)
js     a425 <_IO_stdin_used+0x14c1>
and    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    a447 <_IO_stdin_used+0x14e3>
xor    %bh,0x25(%eax)
js     a41c <_IO_stdin_used+0x14b8>
add    %al,(%eax)
or     %ecx,(%ecx)
push   %ebx
jne    a47b <_IO_stdin_used+0x1517>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %dl,%fs:%gs:0x43(%esi)
dec    %esi
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     a453 <_IO_stdin_used+0x14ef>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a45b <_IO_stdin_used+0x14f7>
or     (%eax),%al
or     %ecx,(%ecx)
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
and    %ah,0x20756c6c
sub    %dh,(%eax)
js     a479 <_IO_stdin_used+0x1515>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a481 <_IO_stdin_used+0x151d>
or     (%eax),%al
add    %al,(%eax)
or     %ecx,(%ecx)
dec    %ebx
gs
jns    a482 <_IO_stdin_used+0x151e>
jae    a4c9 <_IO_stdin_used+0x1565>
arpl   %si,0x72(%ebp)
imul   $0x93a6469,0x20(%ecx,%edi,2),%esi
and    %ah,0x30282075
js     a49c <_IO_stdin_used+0x1538>
js     a4a2 <_IO_stdin_used+0x153e>
or     (%eax),%al
add    %cl,(%ecx)
or     %ecx,0x65(%ebx)
jns    a4a2 <_IO_stdin_used+0x153e>
imul   $0x6469,0x20(%ebp,%eiz,2),%bp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     a4bb <_IO_stdin_used+0x1557>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a4c3 <_IO_stdin_used+0x155f>
or     (%eax),%al
or     %ecx,(%ecx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
fs
gs
js     a4c4 <_IO_stdin_used+0x1560>
popa
je     a51b <_IO_stdin_used+0x15b7>
jb     a4c9 <_IO_stdin_used+0x1565>
je     a524 <_IO_stdin_used+0x15c0>
jo     a512 <_IO_stdin_used+0x15ae>
and    %ch,0x73(%ecx)
and    %dl,0x4e(%ebp)
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
cmp    (%eax),%ah
or     %esp,(%eax)
xor    %bh,0x25(%eax)
xor    %bh,(%eax)
js     a4cd <_IO_stdin_used+0x1569>
add    %cl,(%ecx)
or     %ecx,0x66(%edi)
data16
jae    a530 <_IO_stdin_used+0x15cc>
je     a4ed <_IO_stdin_used+0x1589>
imul   $0x53445324,0x20(%esi),%ebp
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     a506 <_IO_stdin_used+0x15a2>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a50e <_IO_stdin_used+0x15aa>
or     (%eax),%al
add    %cl,(%ecx)
or     %ecx,0x6e(%ebp,%eiz,2)
addr16 je a558 <_IO_stdin_used+0x15f4>
and    %ch,0x6e(%ecx)
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     a528 <_IO_stdin_used+0x15c4>
js     a52e <_IO_stdin_used+0x15ca>
or     (%eax),%al
add    %cl,(%ecx)
or     %eax,0x79(%edx)
je     a573 <_IO_stdin_used+0x160f>
jae    a530 <_IO_stdin_used+0x15cc>
jne    a585 <_IO_stdin_used+0x1621>
gs cmp %fs:%gs:(%ecx),%cl
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     a546 <_IO_stdin_used+0x15e2>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a54e <_IO_stdin_used+0x15ea>
or     (%eax),%al
add    %cl,(%ecx)
or     %eax,0x78(%ebp)
arpl   %sp,0x65(%ebp)
fs gs and %dh,%fs:%gs:0x6d(%ecx,%ebp,2)
cmp    %gs:(%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     a569 <_IO_stdin_used+0x1605>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     a571 <_IO_stdin_used+0x160d>
or     (%eax),%al
add    %al,(%eax)
or     %edx,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
jb     a5cc <_IO_stdin_used+0x1668>
jne    a5cc <_IO_stdin_used+0x1668>
je     a57e <_IO_stdin_used+0x161a>
imul   $0x65207865,0x64(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     a5da <_IO_stdin_used+0x1676>
jns    a596 <_IO_stdin_used+0x1632>
and    %dh,0x6b(%ebx)
imul   $0x20676e69,0x70(%eax),%esi
je     a5de <_IO_stdin_used+0x167a>
and    %dh,%gs:0x65(%edx)
insl   (%dx),%es:(%edi)
popa
imul   $0x6f207265,0x64(%esi),%ebp
data16
and    %dh,0x69(%eax,%ebp,2)
jae    a5aa <_IO_stdin_used+0x1646>
imul   $0x62207865,0x64(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x2e(%ebx)
or     (%eax),%al
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
fs
gs
js     a5c6 <_IO_stdin_used+0x1662>
popa
je     a61d <_IO_stdin_used+0x16b9>
jb     a614 <_IO_stdin_used+0x16b0>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
cmp    %gs:(%eax),%ah
xor    %bh,0x25(%eax)
xor    %bl,0xa(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
jo     a637 <_IO_stdin_used+0x16d3>
imul   $0x27542720,0x6e(%edi),%ebp
and    %ch,0x73(%ecx)
and    %ah,0x70(%ebp,%eiz,2)
jb     a638 <_IO_stdin_used+0x16d4>
arpl   %sp,0x74(%ecx)
gs
fs
sub    $0x20,%al
imul   $0x72207361,0x77(%eax,%eiz,1),%esi
gs
jo     a651 <_IO_stdin_used+0x16ed>
popa
arpl   %sp,0x64(%ebp)
and    %ah,0x79(%edx)
and    %ah,(%edi)
je     a617 <_IO_stdin_used+0x16b3>
or     %cs:(%eax),%al
add    %cl,0x70(%edi)
je     a661 <_IO_stdin_used+0x16fd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x72202773,%eax
gs
jno    a679 <_IO_stdin_used+0x1715>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne a67e <_IO_stdin_used+0x171a>
outsb  %gs:(%esi),(%dx)
je     a643 <_IO_stdin_used+0x16df>
or     (%eax),%al
add    %bl,0x6f(%ecx)
jne    a63c <_IO_stdin_used+0x16d8>
insl   (%dx),%es:(%edi)
jne    a692 <_IO_stdin_used+0x172e>
je     a641 <_IO_stdin_used+0x16dd>
jae    a693 <_IO_stdin_used+0x172f>
arpl   %bp,%gs:0x66(%ecx)
jns    a649 <_IO_stdin_used+0x16e5>
gs
js     a68d <_IO_stdin_used+0x1729>
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0xa2e,0x65(%ebx),%esp
add    %bl,0x6f(%ecx)
jne    a664 <_IO_stdin_used+0x1700>
insl   (%dx),%es:(%edi)
jne    a6ba <_IO_stdin_used+0x1756>
je     a669 <_IO_stdin_used+0x1705>
jae    a6bb <_IO_stdin_used+0x1757>
arpl   %bp,%gs:0x66(%ecx)
jns    a671 <_IO_stdin_used+0x170d>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
gs
popa
jb     a6d0 <_IO_stdin_used+0x176c>
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    a6dc <_IO_stdin_used+0x1778>
or     %cs:(%eax),%al
add    %bl,0x6f(%ecx)
jne    a690 <_IO_stdin_used+0x172c>
insl   (%dx),%es:(%edi)
popa
jns    a694 <_IO_stdin_used+0x1730>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     a698 <_IO_stdin_used+0x1734>
jne    a6ed <_IO_stdin_used+0x1789>
and    %ch,%gs:0x6975712d
gs
je     a6a4 <_IO_stdin_used+0x1740>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:0x74(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    a6cc <_IO_stdin_used+0x1768>
insl   (%dx),%es:(%edi)
popa
jns    a6d0 <_IO_stdin_used+0x176c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     a6d4 <_IO_stdin_used+0x1770>
jae    a726 <_IO_stdin_used+0x17c2>
arpl   %bp,%gs:0x66(%ecx)
jns    a6dc <_IO_stdin_used+0x1778>
sub    $0x6f6e692d,%eax
fs and %ah,%fs:%gs:0x6e(%ecx)
and    %ch,%fs:0x6c69662d
and    %dh,%gs:0x67(%edi,%ebp,2)
gs
je     a73d <_IO_stdin_used+0x17d9>
gs
jb     a706 <_IO_stdin_used+0x17a2>
or     (%eax),%al
add    %al,(%eax)
or     0x25762073,%ah
jae    a704 <_IO_stdin_used+0x17a0>
sub    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     a751 <_IO_stdin_used+0x17ed>
jae    a71a <_IO_stdin_used+0x17b6>
xor    0x29(%edi),%esp
and    %ch,0x73694420
jo     a764 <_IO_stdin_used+0x1800>
popa
jns    a71b <_IO_stdin_used+0x17b7>
imul   $0x616d726f,0x66(%esi),%ebp
je     a76d <_IO_stdin_used+0x1809>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    a780 <_IO_stdin_used+0x181c>
and    %ah,0x6e(%ecx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    a787 <_IO_stdin_used+0x1823>
gs or  %cs:%gs:(%edx),%cl
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x34303032,%eax
and    %cl,0x61(%ebp)
je     a7a6 <_IO_stdin_used+0x1842>
push   $0x4a207765
and    %al,%cs:0x61(%esi)
outsb  %ds:(%esi),(%dx)
je     a7ad <_IO_stdin_used+0x1849>
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x36303032,%eax
and    %al,0x6e(%ecx)
je     a7c1 <_IO_stdin_used+0x185d>
outsb  %ds:(%esi),(%dx)
and    %al,0x6c(%ecx)
je     a7b9 <_IO_stdin_used+0x1855>
jo     a7bb <_IO_stdin_used+0x1857>
jb     a7c9 <_IO_stdin_used+0x1865>
popa
imul   $0x0,0x76(%edi),%ebp
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %dh,(%edx)
xor    %dh,(%eax)
xor    0x36303032,%ebp
and    %dl,0x7a(%ebx)
popa
bound  %ebp,0x6c(%edi)
arpl   %si,0x20(%ebx)
push   %ebx
jp     a7df <_IO_stdin_used+0x187b>
imul   $0x73,0x63(%ecx),%esp
imul   $0x20200000,0x0(%ebx,%esi,2),%esi
and    %ah,(%eax)
xor    (%eax),%dh
xor    %dh,(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %esp
outsl  %gs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
jb     a801 <_IO_stdin_used+0x189d>
and    %cl,0x6f(%esi)
jb     a814 <_IO_stdin_used+0x18b0>
addr16 ret
movsl  %ds:(%esi),%es:(%edi)
jb     a80b <_IO_stdin_used+0x18a7>
add    %cl,(%edx)
push   %ebp
jae    a80d <_IO_stdin_used+0x18a9>
cmp    %gs:(%bx,%si),%ah
and    $0x6f5b2073,%eax
jo     a82b <_IO_stdin_used+0x18c7>
imul   $0x64205d73,0x6e(%edi),%ebp
gs
jbe    a82a <_IO_stdin_used+0x18c6>
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c69,%eax
sub    $0x646f6e69,%eax
and    %cl,%gs:0x55(%esi)
dec    %ebp
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
imul   $0x616d726f,0x66(%esi),%ebp
je     a853 <_IO_stdin_used+0x18ef>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    a866 <_IO_stdin_used+0x1902>
and    %dh,0x69(%eax,%ebp,2)
jae    a818 <_IO_stdin_used+0x18b4>
imul   $0x200a6564,0x6f(%esi),%ebp
and    %ah,(%eax)
and    %ch,0x2d202c46
sub    $0x656c6966,%eax
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
and    %ah,(%eax)
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
imul   $0x616d726f,0x66(%esi),%ebp
je     a88d <_IO_stdin_used+0x1929>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    a8a0 <_IO_stdin_used+0x193c>
and    %dh,0x69(%eax,%ebp,2)
jae    a852 <_IO_stdin_used+0x18ee>
imul   $0x6128,0x20(%ebp,%eiz,2),%bp
bound  %esi,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    a8b3 <_IO_stdin_used+0x194f>
and    %dh,%gs:0x61(%eax)
je     a8ad <_IO_stdin_used+0x1949>
sub    %ecx,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c6d,%eax
sub    $0x2074666d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x6d(%ebp,%esi,2)
jo     a881 <_IO_stdin_used+0x191d>
imul   $0x616d726f,0x66(%esi),%ebp
je     a8d3 <_IO_stdin_used+0x196f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    a8e6 <_IO_stdin_used+0x1982>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    a8e9 <_IO_stdin_used+0x1985>
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c74
sub    $0x69746f6e,%eax
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %al,0x6e(%edi,%ebp,2)
daa
je     a8b9 <_IO_stdin_used+0x1955>
jb     a900 <_IO_stdin_used+0x199c>
jo     a90c <_IO_stdin_used+0x19a8>
jb     a913 <_IO_stdin_used+0x19af>
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    a91a <_IO_stdin_used+0x19b6>
popa
insl   (%dx),%es:(%edi)
jo     a91d <_IO_stdin_used+0x19b9>
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c66,%eax
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebp
jae    a929 <_IO_stdin_used+0x19c5>
and    %ch,0x73(%ebp,%eiz,2)
jae    a8ea <_IO_stdin_used+0x1986>
arpl   %sp,0x75(%ecx)
je     a938 <_IO_stdin_used+0x19d4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c71
sub    $0x65697571,%eax
je     a902 <_IO_stdin_used+0x199e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x73(%ebp,%eiz,2)
jae    a90c <_IO_stdin_used+0x19a8>
outsl  %ds:(%esi),(%dx)
jne    a963 <_IO_stdin_used+0x19ff>
jo     a966 <_IO_stdin_used+0x1a02>
je     a8fd <_IO_stdin_used+0x1999>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    a969 <_IO_stdin_used+0x1a05>
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jb     a971 <_IO_stdin_used+0x1a0d>
and    %ch,0x75(%edi)
je     a981 <_IO_stdin_used+0x1a1d>
jne    a987 <_IO_stdin_used+0x1a23>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c56
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
inc    %esp
imul   $0x2079616c,0x70(%ebx),%esi
jbe    a998 <_IO_stdin_used+0x1a34>
jb     a9a8 <_IO_stdin_used+0x1a44>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     a9ac <_IO_stdin_used+0x1a48>
popa
je     a9ab <_IO_stdin_used+0x1a47>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ecx,%ebp,2)
jo     a9cb <_IO_stdin_used+0x1a67>
popa
jns    a982 <_IO_stdin_used+0x1a1e>
je     a9cc <_IO_stdin_used+0x1a68>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%edx),%cl
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     a9dd <_IO_stdin_used+0x1a79>
jb     a9f1 <_IO_stdin_used+0x1a8d>
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x70(%edi)
je     a9fa <_IO_stdin_used+0x1a96>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    a995 <_IO_stdin_used+0x1a31>
add    %al,(%eax)
add    %cl,(%ecx)
push   %esi
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    aa0b <_IO_stdin_used+0x1aa7>
and    %dl,%gs:0x69(%ebx)
jp     aa09 <_IO_stdin_used+0x1aa5>
and    %ch,0x6e(%ecx)
and    %al,0x6c(%ebx)
jne    aa1f <_IO_stdin_used+0x1abb>
je     aa13 <_IO_stdin_used+0x1aaf>
jb     aa23 <_IO_stdin_used+0x1abf>
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
inc    %ebx
jne    aa2e <_IO_stdin_used+0x1aca>
jb     aa23 <_IO_stdin_used+0x1abf>
outsb  %ds:(%esi),(%dx)
je     a9e1 <_IO_stdin_used+0x1a7d>
push   %eax
outsl  %ds:(%esi),(%dx)
jae    aa2e <_IO_stdin_used+0x1aca>
je     aa30 <_IO_stdin_used+0x1acc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %al,0x69(%esi)
jb     aa44 <_IO_stdin_used+0x1ae0>
je     a9f3 <_IO_stdin_used+0x1a8f>
inc    %esp
popa
je     aa38 <_IO_stdin_used+0x1ad4>
and    %bl,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
cmp    %gs:(%eax),%ah
and    $0xa646c6c,%eax
add    %cl,(%ecx)
inc    %ebx
jne    aa5a <_IO_stdin_used+0x1af6>
jb     aa4f <_IO_stdin_used+0x1aeb>
outsb  %ds:(%esi),(%dx)
je     aa0d <_IO_stdin_used+0x1aa9>
push   %eax
outsl  %ds:(%esi),(%dx)
jae    aa5a <_IO_stdin_used+0x1af6>
je     aa5c <_IO_stdin_used+0x1af8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dl,0x65(%ebx)
arpl   %bp,0x6e(%edi)
and    %al,%fs:0x74(%ecx,%eiz,2)
popa
and    %bl,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
cmp    %gs:(%eax),%ah
and    $0xa646c6c,%eax
add    %al,(%eax)
add    %al,(%eax)
or     %eax,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %ah,%fs:%gs:0x6c(%ebx)
jne    aa96 <_IO_stdin_used+0x1b32>
je     aa8a <_IO_stdin_used+0x1b26>
jb     aa9a <_IO_stdin_used+0x1b36>
and    %ah,0x20646c6c
sub    %ah,0x6c312e32
and    $0x2925,%ax
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%ecx)
dec    %esp
inc    %ebx
dec    %esi
and    %ch,0x66(%edi)
and    %al,0x74(%ecx,%eiz,2)
popa
and    %al,0x74(%ecx)
je     aabf <_IO_stdin_used+0x1b5b>
imul   $0x66206574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
jb     aa77 <_IO_stdin_used+0x1b13>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
pop    %edi
dec    %ebp
inc    %esi
push   %esp
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %al,(%eax)
or     %ecx,0x4e(%ebx,%eax,2)
and    %ch,0x66(%edi)
and    %al,0x74(%ecx,%eiz,2)
popa
and    %al,0x74(%ecx)
je     aaeb <_IO_stdin_used+0x1b87>
imul   $0x66206574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
jb     aaa3 <_IO_stdin_used+0x1b3f>
inc    %esi
imul   $0x4d54464d,0x5f(%ebp,%eiz,2),%ebp
imul   $0x6c25203a,0x72(%edx),%esi
insb   (%dx),%es:(%edi)
or     %fs:(%eax),%al
add    %cl,(%ecx)
push   %ebx
imul   $0x20666f20,0x65(%edx),%edi
inc    %ecx
je     ab18 <_IO_stdin_used+0x1bb4>
jb     ab0f <_IO_stdin_used+0x1bab>
bound  %esi,0x74(%ebp)
and    %al,%gs:0x66(%ebp,%eiz,2)
imul   $0x6e6f6974,0x69(%esi),%ebp
and    %dl,0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0xa64,%eax
add    %al,(%eax)
or     %ecx,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %al,0x74(%ecx)
je     ab34 <_IO_stdin_used+0x1bd0>
arpl   %bp,0x65(%eax)
and    %al,%fs:0x78(%ebp)
je     ab41 <_IO_stdin_used+0x1bdd>
outsb  %ds:(%esi),(%dx)
je     aaff <_IO_stdin_used+0x1b9b>
dec    %ecx
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    ab20 <_IO_stdin_used+0x1bbc>
and    %ah,0xa64
or     %eax,0x49(%esi)
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
imul   $0x464d2070,0x61(%ebp,%ebp,2),%esi
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %cl,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    (%eax),%ah
and    $0xa756c6c,%eax
add    %al,(%eax)
add    %cl,(%ecx)
push   %ebx
je     ab79 <_IO_stdin_used+0x1c15>
je     ab7f <_IO_stdin_used+0x1c1b>
and    %ch,0x66(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
imul   $0x6e492070,0x61(%ebp,%ebp,2),%esi
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%eax),%ah
and    $0xa756c,%eax
add    %al,(%eax)
or     %ecx,0x6e(%ebp,%eiz,2)
addr16 je aba7 <_IO_stdin_used+0x1c43>
and    %ch,0x66(%edi)
and    %al,0x74(%ecx)
je     abb9 <_IO_stdin_used+0x1c55>
imul   $0x4c206574,0x75(%edx),%esp
imul   $0x7525203a,0x74(%ebx),%esi
or     (%eax),%al
add    %al,0x49(%esi)
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
imul   $0x61442070,0x61(%ebp,%ebp,2),%esi
je     abc9 <_IO_stdin_used+0x1c65>
and    %al,0x74(%ecx)
je     abdf <_IO_stdin_used+0x1c7b>
imul   $0x49206574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
jb     abe6 <_IO_stdin_used+0x1c82>
popa
je     abe5 <_IO_stdin_used+0x1c81>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
or     %eax,0x63(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     abfa <_IO_stdin_used+0x1c96>
gs
jae    abfe <_IO_stdin_used+0x1c9a>
gs and %dl,%fs:%gs:0x75(%edx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6f6e203a,0x74(%ebx),%esi
je     abbb <_IO_stdin_used+0x1c57>
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bh,%gs:0x65(%ecx)
je     aba4 <_IO_stdin_used+0x1c40>
or     %eax,0x74(%ecx)
je     ac1b <_IO_stdin_used+0x1cb7>
imul   $0x54206574,0x75(%edx),%esp
jns    ac22 <_IO_stdin_used+0x1cbe>
gs
jae    abef <_IO_stdin_used+0x1c8b>
and    %ch,0x6f(%esi)
je     abda <_IO_stdin_used+0x1c76>
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bh,%gs:0x65(%ecx)
je     abc3 <_IO_stdin_used+0x1c5f>
add    %cl,(%ecx)
inc    %ecx
je     ac3c <_IO_stdin_used+0x1cd8>
jb     ac33 <_IO_stdin_used+0x1ccf>
bound  %esi,0x74(%ebp)
and    %al,%gs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %dl,%fs:%gs:0x69(%ebx)
jp     ac42 <_IO_stdin_used+0x1cde>
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %al,(%eax)
add    %al,(%eax)
or     %eax,0x74(%ecx)
je     ac5f <_IO_stdin_used+0x1cfb>
imul   $0x49206574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ecx,%ebp,2),%esi
and    %dl,%fs:0x69(%ebx)
jp     ac68 <_IO_stdin_used+0x1d04>
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %al,(%eax)
or     %eax,0x74(%ecx)
je     ac83 <_IO_stdin_used+0x1d1f>
imul   $0x43206574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     ac8e <_IO_stdin_used+0x1d2a>
gs
jae    ac92 <_IO_stdin_used+0x1d2e>
gs and %dl,%fs:%gs:0x69(%ebx)
jp     ac8b <_IO_stdin_used+0x1d27>
cmp    (%eax),%ah
and    $0xa646c6c,%eax
add    %al,(%eax)
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     aca8 <_IO_stdin_used+0x1d44>
gs
jae    acac <_IO_stdin_used+0x1d48>
imul   $0x6f6c4220,0x6e(%edi),%ebp
arpl   %bp,0x20(%ebx)
push   %ebx
imul   $0x74694220,0x65(%edx),%edi
jae    ac87 <_IO_stdin_used+0x1d23>
and    %ah,0xa75
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     accc <_IO_stdin_used+0x1d68>
gs
jae    acd0 <_IO_stdin_used+0x1d6c>
imul   $0x6f6c4220,0x6e(%edi),%ebp
arpl   %bp,0x20(%ebx)
inc    %ebx
insb   (%dx),%es:(%edi)
jne    acde <_IO_stdin_used+0x1d7a>
je     acd2 <_IO_stdin_used+0x1d6e>
jb     ace2 <_IO_stdin_used+0x1d7e>
cmp    (%eax),%ah
and    $0xa75,%eax
add    %al,(%eax)
or     %eax,0x72(%esi)
gs and %al,%gs:0x6c(%ebx)
jne    acf5 <_IO_stdin_used+0x1d91>
je     ace9 <_IO_stdin_used+0x1d85>
jb     acf9 <_IO_stdin_used+0x1d95>
cmp    (%eax),%ah
and    $0x20646c6c,%eax
sub    %ah,0x6c312e32
and    $0x2925,%ax
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %dl,%fs:0x65(%ebx)
jno    acd9 <_IO_stdin_used+0x1d75>
and    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %ebp,(%esi)
cmp    (%ecx),%cl
and    %ah,0x30282075
js     ace0 <_IO_stdin_used+0x1d7c>
js     ace6 <_IO_stdin_used+0x1d82>
or     (%eax),%al
add    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %cl,0x61(%eax)
jb     ad32 <_IO_stdin_used+0x1dce>
and    %cl,0x6e(%ecx,%ebp,2)
imul   $0x9,0x3a(%ebx),%esi
and    %ah,0x30282075
js     ad03 <_IO_stdin_used+0x1d9f>
js     ad09 <_IO_stdin_used+0x1da5>
or     (%eax),%al
add    %al,(%eax)
inc    %edx
jns    ad5b <_IO_stdin_used+0x1df7>
gs
jae    ad0a <_IO_stdin_used+0x1da6>
push   %ebp
jae    ad52 <_IO_stdin_used+0x1dee>
cmp    %fs:(%ecx),%cl
or     %esp,(%eax)
and    $0x30282075,%eax
js     ad1e <_IO_stdin_used+0x1dba>
js     ad24 <_IO_stdin_used+0x1dc0>
and    %ah,0x79(%edx)
je     ad65 <_IO_stdin_used+0x1e01>
jae    ad0c <_IO_stdin_used+0x1da8>
add    %al,(%eax)
inc    %edx
jns    ad7b <_IO_stdin_used+0x1e17>
gs
jae    ad2a <_IO_stdin_used+0x1dc6>
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs cmp %fs:%gs:(%ecx),%cl
and    %ah,0x30282075
js     ad42 <_IO_stdin_used+0x1dde>
js     ad48 <_IO_stdin_used+0x1de4>
and    %ah,0x79(%edx)
je     ad89 <_IO_stdin_used+0x1e25>
jae    ad30 <_IO_stdin_used+0x1dcc>
add    %al,(%eax)
inc    %edx
popa
jae    ad91 <_IO_stdin_used+0x1e2d>
and    %cl,0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
cmp    %fs:(%ecx),%cl
and    %ah,0x20756c6c
sub    %dh,(%eax)
js     ad68 <_IO_stdin_used+0x1e04>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     ad70 <_IO_stdin_used+0x1e0c>
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x65(%esi)
js     adc4 <_IO_stdin_used+0x1e60>
and    %al,0x74(%ecx)
je     adc7 <_IO_stdin_used+0x1e63>
imul   $0x49206574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
jae    add3 <_IO_stdin_used+0x1e6f>
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3a(%ebp)
and    %ah,0x30282075
js     ad91 <_IO_stdin_used+0x1e2d>
js     ad97 <_IO_stdin_used+0x1e33>
or     (%eax),%al
push   %edi
imul   $0x7325203a,%gs:0x64(%edx),%esi
and    %ah,0x74(%ecx)
je     adf0 <_IO_stdin_used+0x1e8c>
imul   $0x74206574,0x75(%edx),%esp
jns    adf7 <_IO_stdin_used+0x1e93>
and    %dh,%gs:0x61(%edi)
jae    adad <_IO_stdin_used+0x1e49>
outsw  %ds:(%esi),(%dx)
jne    adff <_IO_stdin_used+0x1e9b>
fs
sub    $0x20,%al
jo     ae02 <_IO_stdin_used+0x1e9e>
gs
popa
jae    adff <_IO_stdin_used+0x1e9b>
and    %dh,0x65(%edx)
jo     ae0e <_IO_stdin_used+0x1eaa>
jb     ae15 <_IO_stdin_used+0x1eb1>
and    %dh,0x69(%eax,%ebp,2)
jae    add5 <_IO_stdin_used+0x1e71>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x6d(%ebp,%esi,2)
jo     ae1a <_IO_stdin_used+0x1eb6>
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%bx,%di)
je     ae2a <_IO_stdin_used+0x1ec6>
imul   $0x25206574,0x75(%edx),%esp
jae    ade1 <_IO_stdin_used+0x1e7d>
sub    %dh,(%eax)
js     adea <_IO_stdin_used+0x1e86>
js     adf0 <_IO_stdin_used+0x1e8c>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x66(%ebp)
je     adf1 <_IO_stdin_used+0x1e8d>
jb     ae38 <_IO_stdin_used+0x1ed4>
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x20646c6c
sub    %dh,(%eax)
js     ae06 <_IO_stdin_used+0x1ea2>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     ae0e <_IO_stdin_used+0x1eaa>
or     (%eax),%al
add    %cl,(%ecx)
inc    %ecx
je     ae60 <_IO_stdin_used+0x1efc>
jb     ae57 <_IO_stdin_used+0x1ef3>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x6e(%ebp,%eiz,2)
addr16 je ae61 <_IO_stdin_used+0x1efd>
cmp    (%ecx),%cl
and    %ah,0x30282075
js     ae28 <_IO_stdin_used+0x1ec4>
js     ae2e <_IO_stdin_used+0x1eca>
or     (%eax),%al
add    %al,0x72(%ebp)
jb     ae7b <_IO_stdin_used+0x1f17>
jb     ae48 <_IO_stdin_used+0x1ee4>
and    %ah,0x6f(%ebx)
jne    ae7f <_IO_stdin_used+0x1f1b>
outsb  %fs:(%esi),(%dx)
daa
je     ae38 <_IO_stdin_used+0x1ed4>
jo     ae7b <_IO_stdin_used+0x1f17>
jb     ae8f <_IO_stdin_used+0x1f2b>
and    %ah,%gs:0x74(%ecx)
je     ae94 <_IO_stdin_used+0x1f30>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
or     %eax,0x74(%ecx)
je     aea7 <_IO_stdin_used+0x1f43>
imul   $0x69206574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
jae    aeb3 <_IO_stdin_used+0x1f4f>
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3a(%ebp)
or     %esp,(%eax)
and    $0x30282075,%eax
js     ae72 <_IO_stdin_used+0x1f0e>
js     ae78 <_IO_stdin_used+0x1f14>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%ecx)
dec    %eax
imul   $0x20747365,0x68(%edi),%esp
push   %esi
inc    %ebx
dec    %esi
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     ae92 <_IO_stdin_used+0x1f2e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     ae9a <_IO_stdin_used+0x1f36>
or     (%eax),%al
add    %cl,(%ecx)
dec    %ebp
popa
jo     aee9 <_IO_stdin_used+0x1f85>
imul   $0x69617020,0x67(%esi),%ebp
jb     aef5 <_IO_stdin_used+0x1f91>
and    %ch,0x66(%edi)
data16
jae    aeed <_IO_stdin_used+0x1f89>
je     aec4 <_IO_stdin_used+0x1f60>
or     %esp,(%eax)
and    $0x30282075,%eax
js     aeb8 <_IO_stdin_used+0x1f54>
js     aebe <_IO_stdin_used+0x1f5a>
or     (%eax),%al
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     af10 <_IO_stdin_used+0x1fac>
gs
jae    af14 <_IO_stdin_used+0x1fb0>
imul   $0x696e7520,0x6e(%edi),%ebp
je     aee4 <_IO_stdin_used+0x1f80>
or     %esp,(%eax)
and    $0x30282075,%eax
js     aed8 <_IO_stdin_used+0x1f74>
js     aede <_IO_stdin_used+0x1f7a>
or     (%eax),%al
add    %cl,(%ecx)
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %dh,%fs:%gs:0x69(%ebx)
jp     af2c <_IO_stdin_used+0x1fc8>
cmp    (%ecx),%cl
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     aef9 <_IO_stdin_used+0x1f95>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     af01 <_IO_stdin_used+0x1f9d>
or     (%eax),%al
add    %al,(%eax)
or     %ecx,0x6e(%ecx)
imul   $0x657a696c,0x61(%ecx,%ebp,2),%esi
and    %dh,%fs:0x69(%ebx)
jp     af52 <_IO_stdin_used+0x1fee>
cmp    (%ecx),%cl
and    %ah,0x20756c6c
sub    %dh,(%eax)
js     af1e <_IO_stdin_used+0x1fba>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     af26 <_IO_stdin_used+0x1fc2>
or     (%eax),%al
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     af78 <_IO_stdin_used+0x2014>
gs
jae    af7c <_IO_stdin_used+0x2018>
gs and %dh,%fs:%gs:0x69(%ebx)
jp     af75 <_IO_stdin_used+0x2011>
cmp    (%ecx),%cl
and    %ah,0x20756c6c
sub    %dh,(%eax)
js     af41 <_IO_stdin_used+0x1fdd>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     af49 <_IO_stdin_used+0x1fe5>
or     (%eax),%al
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    af89 <_IO_stdin_used+0x2025>
insb   (%dx),%es:(%edi)
imul   $0x76204e43,0x4c(%eax,%eiz,1),%esp
popa
insb   (%dx),%es:(%edi)
jne    af9a <_IO_stdin_used+0x2036>
and    %ah,0x20786c6c
jo     af9e <_IO_stdin_used+0x203a>
jae    afb2 <_IO_stdin_used+0x204e>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     afae <_IO_stdin_used+0x204a>
jae    afa9 <_IO_stdin_used+0x2045>
fs
jne    afba <_IO_stdin_used+0x2056>
jo     afae <_IO_stdin_used+0x204a>
insb   (%dx),%es:(%edi)
arpl   %bp,0x28(%esi)
sub    %ebp,(%esi)
or     (%eax),%al
add    %al,0x72(%ebp)
jb     afcb <_IO_stdin_used+0x2067>
jb     af98 <_IO_stdin_used+0x2034>
and    %ah,0x6f(%ebx)
jne    afcf <_IO_stdin_used+0x206b>
outsb  %fs:(%esi),(%dx)
daa
je     af88 <_IO_stdin_used+0x2024>
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     afe1 <_IO_stdin_used+0x207d>
gs
jae    afe5 <_IO_stdin_used+0x2081>
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x5109000a,0x74(%ebx),%esi
jne    afef <_IO_stdin_used+0x208b>
je     afe3 <_IO_stdin_used+0x207f>
and    %ah,0x68(%ebx)
popa
jb     afef <_IO_stdin_used+0x208b>
gs cmp %fs:%gs:(%ecx),%cl
or     %esp,(%eax)
and    $0x20756c6c,%eax
sub    %dh,(%eax)
js     afbc <_IO_stdin_used+0x2058>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     afc4 <_IO_stdin_used+0x2060>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%ecx)
push   %ebp
jo     b008 <_IO_stdin_used+0x20a4>
popa
je     b00c <_IO_stdin_used+0x20a8>
and    %dl,0x65(%ebx)
jno    b021 <_IO_stdin_used+0x20bd>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
dec    %esi
jne    b021 <_IO_stdin_used+0x20bd>
bound  %esp,0x72(%ebp)
cmp    (%ecx),%cl
and    %ah,0x20756c6c
sub    %dh,(%eax)
js     afe8 <_IO_stdin_used+0x2084>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     aff0 <_IO_stdin_used+0x208c>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%ecx)
push   %ebx
imul   $0x20666f20,0x65(%edx),%edi
push   %ebx
push   %esp
inc    %ecx
dec    %esi
inc    %esp
inc    %ecx
push   %edx
inc    %esp
pop    %edi
dec    %ecx
dec    %esi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x30282075
js     b019 <_IO_stdin_used+0x20b5>
js     b01f <_IO_stdin_used+0x20bb>
and    %ah,%cs:(%eax)
dec    %ecx
je     b01c <_IO_stdin_used+0x20b8>
jae    b066 <_IO_stdin_used+0x2102>
outsl  %ds:(%esi),(%dx)
jne    b06d <_IO_stdin_used+0x2109>
and    %ah,%fs:0x65(%edx)
and    %ah,0x69(%ebp)
je     b072 <_IO_stdin_used+0x210e>
gs
jb     b02d <_IO_stdin_used+0x20c9>
aaa
xor    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jb     b033 <_IO_stdin_used+0x20cf>
xor    $0x38,%al
sub    $0x20,%al
jae    b088 <_IO_stdin_used+0x2124>
insl   (%dx),%es:(%edi)
gs
je     b085 <_IO_stdin_used+0x2121>
imul   $0x20736920,0x67(%esi),%ebp
ja     b098 <_IO_stdin_used+0x2134>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cs cs or %cs:(%bx,%si),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
je     b099 <_IO_stdin_used+0x2135>
jae    b094 <_IO_stdin_used+0x2130>
addr16
gs
je     b098 <_IO_stdin_used+0x2134>
popa
je     b0b0 <_IO_stdin_used+0x214c>
jb     b0a7 <_IO_stdin_used+0x2143>
bound  %esi,0x74(%ebp)
gs
pop    %edi
jbe    b0a6 <_IO_stdin_used+0x2142>
insb   (%dx),%es:(%edi)
jne    b0ad <_IO_stdin_used+0x2149>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je b0b7 <_IO_stdin_used+0x2153>
and    %ah,0x61(%esi)
imul   $0x746e0000,0x64(%ebp,%eiz,2),%ebp
data16
jae    b0bc <_IO_stdin_used+0x2158>
addr16
gs
je     b0c0 <_IO_stdin_used+0x215c>
popa
je     b0d8 <_IO_stdin_used+0x2174>
jb     b0cf <_IO_stdin_used+0x216b>
bound  %esi,0x74(%ebp)
gs
pop    %edi
jbe    b0ce <_IO_stdin_used+0x216a>
insb   (%dx),%es:(%edi)
jne    b0d5 <_IO_stdin_used+0x2171>
and    %ah,0x61(%esi)
imul   $0x53090900,0x64(%ebp,%eiz,2),%ebp
je     b0de <_IO_stdin_used+0x217a>
jb     b0f3 <_IO_stdin_used+0x218f>
imul   $0x4e435620,0x67(%esi),%ebp
cmp    (%ecx),%cl
and    $0x20646c6c,%eax
sub    %dh,(%eax)
js     b0b6 <_IO_stdin_used+0x2152>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     b0be <_IO_stdin_used+0x215a>
or     (%eax),%al
add    %cl,(%ecx)
or     %ecx,0x46(%ebp)
push   %esp
and    %dh,0x65(%edx)
data16
gs
jb     b109 <_IO_stdin_used+0x21a5>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3a(%ebp)
or     %esp,0x20646c6c
sub    %dh,(%eax)
js     b0d7 <_IO_stdin_used+0x2173>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     b0df <_IO_stdin_used+0x217b>
or     (%eax),%al
or     %eax,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x74(%ecx)
je     b136 <_IO_stdin_used+0x21d2>
imul   $0x6c206574,0x75(%edx),%esp
imul   $0x61657220,0x74(%ebx),%esi
arpl   %bp,0x65(%eax)
fs add %cl,%cs:%fs:(%ecx)
and    $0x4f,%al
inc    %edx
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
pop    %edi
dec    %ecx
inc    %esp
and    %ch,0x6f(%esi)
je     b108 <_IO_stdin_used+0x21a4>
jo     b15c <_IO_stdin_used+0x21f8>
gs
jae    b152 <_IO_stdin_used+0x21ee>
outsb  %ds:(%esi),(%dx)
je     b11e <_IO_stdin_used+0x21ba>
and    %cl,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    b116 <_IO_stdin_used+0x21b2>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dh,0x65(%esi)
jb     b172 <_IO_stdin_used+0x220e>
imul   $0x203e2073,0x6e(%edi),%ebp
xor    (%esi),%ebp
xor    %cl,(%edx)
or     %ebp,0x61(%eax)
jbe    b174 <_IO_stdin_used+0x2210>
and    %ah,(%edi,%ecx,2)
inc    %edx
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
pop    %edi
dec    %ecx
inc    %esp
and    %bl,%cs:0x6f(%ecx)
jne    b192 <_IO_stdin_used+0x222e>
and    %dh,0x65(%esi)
jb     b198 <_IO_stdin_used+0x2234>
imul   $0x20666f20,0x6e(%edi),%ebp
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ah,0xa2e64
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    b1aa <_IO_stdin_used+0x2246>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     b1b8 <_IO_stdin_used+0x2254>
jb     b185 <_IO_stdin_used+0x2221>
and    %ah,0x6f(%ebx)
jne    b1bc <_IO_stdin_used+0x2258>
and    %ch,%fs:0x6f(%esi)
je     b176 <_IO_stdin_used+0x2212>
jb     b1bd <_IO_stdin_used+0x2259>
popa
and    %dh,%fs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x63736564,0x20(%ecx,%edi,2),%esi
jb     b1d3 <_IO_stdin_used+0x226f>
jo     b1e0 <_IO_stdin_used+0x227c>
outsl  %ds:(%esi),(%dx)
jb     b179 <_IO_stdin_used+0x2215>
add    %ch,0x74(%esi)
data16
jae    b1de <_IO_stdin_used+0x227a>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     b1ec <_IO_stdin_used+0x2288>
jb     b1b9 <_IO_stdin_used+0x2255>
and    %ah,0x6f(%ebx)
jne    b1f0 <_IO_stdin_used+0x228c>
and    %ch,%fs:0x6f(%esi)
je     b1aa <_IO_stdin_used+0x2246>
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     b203 <_IO_stdin_used+0x229f>
gs
jae    b207 <_IO_stdin_used+0x22a3>
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0xa,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
je     b209 <_IO_stdin_used+0x22a5>
jae    b20e <_IO_stdin_used+0x22aa>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     b21c <_IO_stdin_used+0x22b8>
jb     b1e9 <_IO_stdin_used+0x2285>
and    %ah,0x6f(%ebx)
jne    b220 <_IO_stdin_used+0x22bc>
and    %ch,%fs:0x6f(%esi)
je     b1da <_IO_stdin_used+0x2276>
jo     b21d <_IO_stdin_used+0x22b9>
jb     b231 <_IO_stdin_used+0x22cd>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    b232 <_IO_stdin_used+0x22ce>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
add    %cl,%gs:(%ecx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
fs
gs
js     b1f3 <_IO_stdin_used+0x228f>
inc    %edx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
push   %ebx
imul   $0x2520093a,0x65(%edx),%edi
jne    b203 <_IO_stdin_used+0x229f>
sub    %dh,(%eax)
js     b20c <_IO_stdin_used+0x22a8>
js     b212 <_IO_stdin_used+0x22ae>
or     (%eax),%al
add    %cl,(%ecx)
xor    $0x622d3231,%eax
jns    b268 <_IO_stdin_used+0x2304>
and    %dl,%gs:0x6e(%ebp)
imul   $0x20726550,0x20(%ebx,%esi,2),%esi
inc    %edx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x3a(%ebx)
or     %esp,(%eax)
and    $0x30282075,%eax
js     b234 <_IO_stdin_used+0x22d0>
js     b23a <_IO_stdin_used+0x22d6>
or     (%eax),%al
add    %cl,(%ecx)
inc    %ebx
insb   (%dx),%es:(%edi)
jne    b28c <_IO_stdin_used+0x2328>
je     b280 <_IO_stdin_used+0x231c>
jb     b290 <_IO_stdin_used+0x232c>
and    %dl,0x65(%eax)
jb     b242 <_IO_stdin_used+0x22de>
inc    %edx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x3a(%ebx)
or     %esp,(%eax)
and    $0x30282075,%eax
js     b256 <_IO_stdin_used+0x22f2>
js     b25c <_IO_stdin_used+0x22f8>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     b2a9 <_IO_stdin_used+0x2345>
popa
and    %ah,%fs:(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
dec    %edi
dec    %edi
push   %esp
and    %ah,0x74(%ecx)
je     b2c9 <_IO_stdin_used+0x2365>
imul   $0x6574,0x75(%edx),%esp
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     b2d1 <_IO_stdin_used+0x236d>
popa
and    %ah,%fs:(%edx,%eax,2)
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
and    %ah,0x74(%ecx)
je     b2ed <_IO_stdin_used+0x2389>
imul   $0x6574,0x75(%edx),%esp
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     b2f5 <_IO_stdin_used+0x2391>
popa
and    %ah,%fs:(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,0x74(%ecx)
je     b31b <_IO_stdin_used+0x23b7>
imul   $0x6574,0x75(%edx),%esp
or     %edx,0x61(%eax)
arpl   %bp,0x65(%ebx)
and    %al,%fs:0x41(%ebp)
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je b329 <_IO_stdin_used+0x23c5>
cmp    (%ecx),%cl
and    %ah,0x30282075
js     b2f0 <_IO_stdin_used+0x238c>
js     b2f6 <_IO_stdin_used+0x2392>
or     (%eax),%al
add    %cl,(%ecx)
push   %ebp
outsb  %ds:(%esi),(%dx)
jo     b336 <_IO_stdin_used+0x23d2>
arpl   %bp,0x65(%ebx)
and    %al,%fs:0x41(%ebp)
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je b34b <_IO_stdin_used+0x23e7>
cmp    (%ecx),%cl
and    %ah,0x30282075
js     b312 <_IO_stdin_used+0x23ae>
js     b318 <_IO_stdin_used+0x23b4>
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    b358 <_IO_stdin_used+0x23f4>
insl   (%dx),%es:(%edi)
popa
jo     b36d <_IO_stdin_used+0x2409>
imul   $0x6961705f,0x67(%esi),%ebp
jb     b379 <_IO_stdin_used+0x2415>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     b380 <_IO_stdin_used+0x241c>
gs
jae    b384 <_IO_stdin_used+0x2420>
and    %ah,0x61(%esi)
imul   $0x0,0x64(%ebp,%eiz,2),%ebp
cmp    $0x3d3d3d3d,%eax
and    %ah,(%eax)
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    b38e <_IO_stdin_used+0x242a>
and    %dh,0x65(%edx)
jo     b39d <_IO_stdin_used+0x2439>
jb     b3a4 <_IO_stdin_used+0x2440>
and    %dh,0x69(%eax,%ebp,2)
jae    b356 <_IO_stdin_used+0x23f2>
jne    b3a6 <_IO_stdin_used+0x2442>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     b3b4 <_IO_stdin_used+0x2450>
imul   $0x74206574,0x75(%edx),%esp
jns    b3bb <_IO_stdin_used+0x2457>
and    %dh,%gs:0x20(%edi,%ebp,2)
and    $0x3d3d2073,%eax
cmp    $0xa3d3d,%eax
add    %al,(%eax)
or     %eax,0x6d(%ebp,%esi,2)
jo     b3cb <_IO_stdin_used+0x2467>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%bp,%di)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x74(%ecx)
je     b3e7 <_IO_stdin_used+0x2483>
imul   $0x64206574,0x75(%edx),%esp
popa
je     b3e0 <_IO_stdin_used+0x247c>
cmp    (%eax),%al
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    b3f2 <_IO_stdin_used+0x248e>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     b400 <_IO_stdin_used+0x249c>
jb     b3cd <_IO_stdin_used+0x2469>
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     b409 <_IO_stdin_used+0x24a5>
gs and %ah,%fs:%gs:0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     b407 <_IO_stdin_used+0x24a3>
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
imul   $0x65206465,0x68(%ebx),%esi
outsb  %ds:(%esi),(%dx)
jne    b41d <_IO_stdin_used+0x24b9>
gs
jb     b414 <_IO_stdin_used+0x24b0>
je     b41e <_IO_stdin_used+0x24ba>
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%bx,%di)
je     b42e <_IO_stdin_used+0x24ca>
imul   $0x736574,0x75(%edx),%esp
add    %dl,0x74(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
jae    b409 <_IO_stdin_used+0x24a5>
and    %ah,0x2820756c
data16
jb     b439 <_IO_stdin_used+0x24d5>
insl   (%dx),%es:(%di)
outsb  %gs:(%esi),(%dx)
je     b451 <_IO_stdin_used+0x24ed>
cmp    (%eax),%ah
and    $0xa29756c,%eax
add    %al,(%eax)
add    %ah,(%eax)
jnp    b402 <_IO_stdin_used+0x249e>
jmp    *(%eax)
jnp    b406 <_IO_stdin_used+0x24a2>
lcall  *-0x6f000087(%eax)
ja     b40e <_IO_stdin_used+0x24aa>
decl   -0x3700008b(%eax)
je     b416 <_IO_stdin_used+0x24b2>
jmp    *-0x3f00008d(%eax)
jo     b41e <_IO_stdin_used+0x24ba>
pushl  -0x4f000085(%eax)
jnp    b426 <_IO_stdin_used+0x24c2>
decl   (%ebx)
jp     b42a <_IO_stdin_used+0x24c6>
incl   0x78(%eax)
(bad)
push   %eax
jnp    b432 <_IO_stdin_used+0x24ce>
push   %eax
outsb  %ds:(%esi),(%dx)
(bad)
pushl  (%edi)
je     b43a <_IO_stdin_used+0x24d6>
pushl  (%ebx)
jno    b43e <_IO_stdin_used+0x24da>
(bad)
cmp    %ch,(%ecx)
(bad)
incl   0x38ffff28(%eax)
sub    %edi,%edi
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
pushl  (%eax)
sub    %bh,%bh
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
lcall  *0x38ffff27(%eax)
sub    %edi,%edi
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
call   *(%eax)
sub    %bh,%bh
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
dec    %eax
daa
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
inc    %eax
daa
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
pushl  0x38ffff27(%eax)
sub    %edi,%edi
jmp    *-0xf0000d9(%edi)
sub    %bh,%bh
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
jmp    *%eax
sub    %bh,%bh
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
dec    %eax
sub    %bh,%bh
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
cmp    %ch,(%ecx)
(bad)
(bad)
mov    $0x38ffff28,%eax
sub    %edi,%edi
jmp    *-0x1f0000d8(%eax)
ss
(bad)
call   *%ecx
ss
(bad)
inc    %edx
ss
(bad)
jmp    *-0x4c0000ca(%edi)
ss
(bad)
ljmp   *0x74(%esi)
data16
jae    b694 <_IO_stdin_used+0x2730>
fs
jne    b6a5 <_IO_stdin_used+0x2741>
jo     b699 <_IO_stdin_used+0x2735>
popa
je     b6b1 <_IO_stdin_used+0x274d>
jb     b69e <_IO_stdin_used+0x273a>
gs
popa
add    %ch,0x74(%esi)
data16
jae    b6a6 <_IO_stdin_used+0x2742>
fs
jne    b6b7 <_IO_stdin_used+0x2753>
jo     b6ab <_IO_stdin_used+0x2747>
imul   $0x625f7865,0x64(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
je     b6c9 <_IO_stdin_used+0x2765>
jae    b6c4 <_IO_stdin_used+0x2760>
fs
jne    b6d5 <_IO_stdin_used+0x2771>
jo     b6c9 <_IO_stdin_used+0x2765>
popa
je     b6e1 <_IO_stdin_used+0x277d>
jb     b6ce <_IO_stdin_used+0x276a>
imul   $0x615f7865,0x64(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x66746e00,0x6e(%edi),%ebp
jae    b6e4 <_IO_stdin_used+0x2780>
fs
jne    b6f5 <_IO_stdin_used+0x2791>
jo     b6e9 <_IO_stdin_used+0x2785>
imul   $0x645f7865,0x64(%esi),%ebp
popa
je     b6f5 <_IO_stdin_used+0x2791>
add    %ch,0x74(%esi)
data16
jae    b6f9 <_IO_stdin_used+0x2795>
fs
jne    b70a <_IO_stdin_used+0x27a6>
jo     b6fe <_IO_stdin_used+0x279a>
imul   $0x6b5f7865,0x64(%esi),%ebp
gs
jns    b6a9 <_IO_stdin_used+0x2745>
outsb  %ds:(%esi),(%dx)
je     b712 <_IO_stdin_used+0x27ae>
jae    b70d <_IO_stdin_used+0x27a9>
fs
jne    b71e <_IO_stdin_used+0x27ba>
jo     b712 <_IO_stdin_used+0x27ae>
imul   $0x655f7865,0x64(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     b72f <_IO_stdin_used+0x27cb>
imul   $0x74656700,0x73(%ebp),%esp
pop    %edi
imul   $0x615f7865,0x64(%esi),%ebp
je     b742 <_IO_stdin_used+0x27de>
jb     b72f <_IO_stdin_used+0x27cb>
je     b74b <_IO_stdin_used+0x27e7>
jo     b739 <_IO_stdin_used+0x27d5>
add    %ch,0x74(%esi)
data16
jae    b739 <_IO_stdin_used+0x27d5>
fs
jne    b74a <_IO_stdin_used+0x27e6>
jo     b73e <_IO_stdin_used+0x27da>
popa
je     b756 <_IO_stdin_used+0x27f2>
jb     b743 <_IO_stdin_used+0x27df>
imul   $0x725f7865,0x64(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     b6ef <_IO_stdin_used+0x278b>
outsb  %ds:(%esi),(%dx)
je     b758 <_IO_stdin_used+0x27f4>
jae    b753 <_IO_stdin_used+0x27ef>
fs
jne    b764 <_IO_stdin_used+0x2800>
jo     b758 <_IO_stdin_used+0x27f4>
jae    b75f <_IO_stdin_used+0x27fb>
jae    b75c <_IO_stdin_used+0x27f8>
outsb  %gs:(%esi),(%dx)
je     b773 <_IO_stdin_used+0x280f>
jns    b703 <_IO_stdin_used+0x279f>
outsb  %ds:(%esi),(%dx)
je     b76c <_IO_stdin_used+0x2808>
jae    b767 <_IO_stdin_used+0x2803>
fs
jne    b778 <_IO_stdin_used+0x2814>
jo     b76c <_IO_stdin_used+0x2808>
jae    b773 <_IO_stdin_used+0x280f>
jae    b711 <_IO_stdin_used+0x27ad>
outsb  %ds:(%esi),(%dx)
je     b77a <_IO_stdin_used+0x2816>
jae    b775 <_IO_stdin_used+0x2811>
fs
jne    b786 <_IO_stdin_used+0x2822>
jo     b77a <_IO_stdin_used+0x2816>
popa
je     b792 <_IO_stdin_used+0x282e>
jb     b77f <_IO_stdin_used+0x281b>
jbe    b791 <_IO_stdin_used+0x282d>
insb   (%dx),%es:(%edi)
jne    b792 <_IO_stdin_used+0x282e>
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    b7a4 <_IO_stdin_used+0x2840>
fs
jne    b7b5 <_IO_stdin_used+0x2851>
jo     b7a9 <_IO_stdin_used+0x2845>
popa
je     b7c1 <_IO_stdin_used+0x285d>
jb     b7ae <_IO_stdin_used+0x284a>
jae    b7b6 <_IO_stdin_used+0x2852>
arpl   %si,0x72(%ebp)
imul   $0x63736564,0x5f(%ecx,%edi,2),%esi
jb     b7c7 <_IO_stdin_used+0x2863>
jo     b7d4 <_IO_stdin_used+0x2870>
outsl  %ds:(%esi),(%dx)
jb     b763 <_IO_stdin_used+0x27ff>
outsb  %ds:(%esi),(%dx)
je     b7cc <_IO_stdin_used+0x2868>
jae    b7c7 <_IO_stdin_used+0x2863>
fs
jne    b7d8 <_IO_stdin_used+0x2874>
jo     b7cc <_IO_stdin_used+0x2868>
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
add    %ch,%gs:0x74(%esi)
data16
jae    b7da <_IO_stdin_used+0x2876>
fs
jne    b7eb <_IO_stdin_used+0x2887>
jo     b7df <_IO_stdin_used+0x287b>
popa
je     b7f7 <_IO_stdin_used+0x2893>
jb     b7e4 <_IO_stdin_used+0x2880>
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x74(%ebx),%esi
jae    b7ee <_IO_stdin_used+0x288a>
fs
jne    b7ff <_IO_stdin_used+0x289b>
jo     b7f3 <_IO_stdin_used+0x288f>
insb   (%dx),%es:(%edi)
arpl   %bp,0x0(%esi)
outsb  %ds:(%esi),(%dx)
je     b801 <_IO_stdin_used+0x289d>
jae    b7fc <_IO_stdin_used+0x2898>
fs
jne    b80d <_IO_stdin_used+0x28a9>
jo     b801 <_IO_stdin_used+0x289d>
popa
je     b819 <_IO_stdin_used+0x28b5>
jb     b810 <_IO_stdin_used+0x28ac>
bound  %esi,0x74(%ebp)
gs
pop    %edi
push   $0x65646165
jb     b7b3 <_IO_stdin_used+0x284f>
outsb  %ds:(%esi),(%dx)
je     b81c <_IO_stdin_used+0x28b8>
jae    b817 <_IO_stdin_used+0x28b3>
fs
jne    b828 <_IO_stdin_used+0x28c4>
jo     b81c <_IO_stdin_used+0x28b8>
imul   $0x7461,0x5f(%ebp,%eiz,2),%bp
je     b838 <_IO_stdin_used+0x28d4>
imul   $0x736574,0x75(%edx),%esp
jo     b830 <_IO_stdin_used+0x28cc>
jb     b844 <_IO_stdin_used+0x28e0>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     b84a <_IO_stdin_used+0x28e6>
imul   $0x616d0073,0x6e(%edi),%ebp
imul   $0x42c80000,0x0(%esi),%ebp
add    %al,(%eax)
inc    %eax
inc    %eax
jne    b85e <_IO_stdin_used+0x28fa>
imul   $0x68540063,0x2e(%ebx,%esi,2),%ebp
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
outsl  %fs:(%esi),(%dx)
gs
jae    b871 <_IO_stdin_used+0x290d>
daa
je     b826 <_IO_stdin_used+0x28c2>
gs
js     b872 <_IO_stdin_used+0x290e>
jae    b87f <_IO_stdin_used+0x291b>
or     (%eax),%al
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     b874 <_IO_stdin_used+0x2910>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
je     b885 <_IO_stdin_used+0x2921>
outsb  %ds:(%esi),(%dx)
jne    b884 <_IO_stdin_used+0x2920>
or     %cs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    b89e <_IO_stdin_used+0x293a>
je     b852 <_IO_stdin_used+0x28ee>
daa
and    $0x49002773,%eax
outsb  %ds:(%esi),(%dx)
jbe    b89c <_IO_stdin_used+0x2938>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
daa
and    $0xa2e2773,%eax
add    %cl,0x6e(%ecx)
jbe    b8b0 <_IO_stdin_used+0x294c>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     b87a <_IO_stdin_used+0x2916>
daa
and    $0x27732a2e,%eax
or     %cs:(%eax),%al
cmp    $0x4d,%al
inc    %esi
push   %esp
and    $0x3e756c6c,%eax
add    %al,0x6f(%ebx)
jne    b8dd <_IO_stdin_used+0x2979>
outsb  %fs:(%esi),(%dx)
daa
je     b896 <_IO_stdin_used+0x2932>
outsl  %ds:(%esi),(%dx)
jo     b8de <_IO_stdin_used+0x297a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
and    $0x732563,%eax
push   %eax
popa
je     b8f9 <_IO_stdin_used+0x2995>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    b8ba <_IO_stdin_used+0x2956>
je     b90e <_IO_stdin_used+0x29aa>
jne    b90c <_IO_stdin_used+0x29a8>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
cmp    $0x55,%al
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,%ds:(%eax)
and    $0x43002973,%eax
outsl  %ds:(%esi),(%dx)
jne    b925 <_IO_stdin_used+0x29c1>
outsb  %fs:(%esi),(%dx)
daa
je     b8de <_IO_stdin_used+0x297a>
outsl  %ds:(%esi),(%dx)
jo     b926 <_IO_stdin_used+0x29c2>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    b93b <_IO_stdin_used+0x29d7>
outsb  %fs:(%esi),(%dx)
daa
je     b8f4 <_IO_stdin_used+0x2990>
jb     b93b <_IO_stdin_used+0x29d7>
popa
and    %ah,%fs:(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    b951 <_IO_stdin_used+0x29ed>
outsb  %fs:(%esi),(%dx)
daa
je     b90a <_IO_stdin_used+0x29a6>
jb     b951 <_IO_stdin_used+0x29ed>
popa
and    %ah,%fs:0x242f5446(,%ecx,2)
inc    %edx
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x72(%ebp)
jb     b96f <_IO_stdin_used+0x2a0b>
jb     b922 <_IO_stdin_used+0x29be>
jb     b969 <_IO_stdin_used+0x2a05>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
dec    %edi
jne    b98e <_IO_stdin_used+0x2a2a>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     b99d <_IO_stdin_used+0x2a39>
and    %ah,%cs:(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     b996 <_IO_stdin_used+0x2a32>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    b9a2 <_IO_stdin_used+0x2a3e>
outsb  %fs:(%esi),(%dx)
daa
je     b95b <_IO_stdin_used+0x29f7>
outsl  %ds:(%esi),(%dx)
jo     b9a3 <_IO_stdin_used+0x2a3f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x242f5446(,%ecx,2)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
add    %al,0x6f(%ebx)
jne    b9bb <_IO_stdin_used+0x2a57>
outsb  %fs:(%esi),(%dx)
daa
je     b974 <_IO_stdin_used+0x2a10>
jb     b9bb <_IO_stdin_used+0x2a57>
popa
and    %cl,%fs:0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x756c6c
inc    %ebp
jb     b9de <_IO_stdin_used+0x2a7a>
outsl  %ds:(%esi),(%dx)
jb     b98f <_IO_stdin_used+0x2a2b>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    b9f5 <_IO_stdin_used+0x2a91>
je     b9b2 <_IO_stdin_used+0x2a4e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
sub    $0x20,%al
jne    ba0f <_IO_stdin_used+0x2aab>
imul   $0x66656420,0x67(%esi),%ebp
popa
jne    ba12 <_IO_stdin_used+0x2aae>
je     b9c8 <_IO_stdin_used+0x2a64>
daa
and    $0xa2e2773,%eax
add    %al,(%eax)
inc    %ebp
jb     ba25 <_IO_stdin_used+0x2ac1>
outsl  %ds:(%esi),(%dx)
jb     b9d6 <_IO_stdin_used+0x2a72>
addr16
gs
je     ba2e <_IO_stdin_used+0x2aca>
imul   $0x666e6920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     ba31 <_IO_stdin_used+0x2acd>
popa
je     ba30 <_IO_stdin_used+0x2acc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    ba43 <_IO_stdin_used+0x2adf>
and    %ah,0x46000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     ba47 <_IO_stdin_used+0x2ae3>
jb     ba51 <_IO_stdin_used+0x2aed>
imul   $0x65687720,0x65(%esi),%ebp
je     ba55 <_IO_stdin_used+0x2af1>
gs
jb     ba10 <_IO_stdin_used+0x2aac>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    ba68 <_IO_stdin_used+0x2b04>
je     ba61 <_IO_stdin_used+0x2afd>
add    %al,%fs:(%eax)
add    %dl,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     ba6f <_IO_stdin_used+0x2b0b>
and    %ch,%gs:0x70(%edi)
je     ba7b <_IO_stdin_used+0x2b17>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2065726f,0x6e(%edi),%esp
je     ba89 <_IO_stdin_used+0x2b25>
imul   $0x6f727265,0x20(%ebx),%esi
jb     ba58 <_IO_stdin_used+0x2af4>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    baa5 <_IO_stdin_used+0x2b41>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    bab6 <_IO_stdin_used+0x2b52>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    bac0 <_IO_stdin_used+0x2b5c>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     bac1 <_IO_stdin_used+0x2b5d>
popa
fs
jns    ba80 <_IO_stdin_used+0x2b1c>
gs
js     bac6 <_IO_stdin_used+0x2b62>
insb   (%dx),%es:(%edi)
jne    bad9 <_IO_stdin_used+0x2b75>
imul   $0x6f20796c,0x65(%esi),%esi
jo     bad4 <_IO_stdin_used+0x2b70>
outsb  %ds:(%esi),(%dx)
gs fs or %cs:%fs:%gs:0x65(%eax,%ebp,2),%dl
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    baea <_IO_stdin_used+0x2b86>
and    %ch,%gs:0x61(%ebp)
jns    baa3 <_IO_stdin_used+0x2b3f>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
jb     baef <_IO_stdin_used+0x2b8b>
popa
fs
jns    baae <_IO_stdin_used+0x2b4a>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    bb00 <_IO_stdin_used+0x2b9c>
je     baf9 <_IO_stdin_used+0x2b95>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     baba <_IO_stdin_used+0x2b56>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     bb07 <_IO_stdin_used+0x2ba3>
gs
jb     bac2 <_IO_stdin_used+0x2b5e>
jae    bb13 <_IO_stdin_used+0x2baf>
data16
je     bb1e <_IO_stdin_used+0x2bba>
popa
jb     bb0f <_IO_stdin_used+0x2bab>
and    %ch,0x61(%ebp)
jns    bacf <_IO_stdin_used+0x2b6b>
jne    bb24 <_IO_stdin_used+0x2bc0>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x68(%edi)
imul   $0x756f630a,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     bb34 <_IO_stdin_used+0x2bd0>
imul   $0x6620,0x64(%ebp),%sp
outsl  %ds:(%esi),(%dx)
jb     baf4 <_IO_stdin_used+0x2b90>
gs
js     bb38 <_IO_stdin_used+0x2bd4>
insl   (%dx),%es:(%edi)
jo     bb46 <_IO_stdin_used+0x2be2>
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     bb08 <_IO_stdin_used+0x2ba4>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
data16
jne    bb66 <_IO_stdin_used+0x2c02>
gs
jb     bb1d <_IO_stdin_used+0x2bb9>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    bb28 <_IO_stdin_used+0x2bc4>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6f(%esi)
jb     bb77 <_IO_stdin_used+0x2c13>
and    %ch,%gs:0x70(%edi)
je     bb83 <_IO_stdin_used+0x2c1f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
jbe    bb92 <_IO_stdin_used+0x2c2e>
imul   $0x20736968,0x74(%eax,%eiz,1),%esp
arpl   %bp,0x65(%eax)
arpl   %bp,0x2c(%ebx)
and    %ah,0x75(%edx)
je     bb56 <_IO_stdin_used+0x2bf2>
je     bba0 <_IO_stdin_used+0x2c3c>
imul   $0x6e207369,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
je     bb62 <_IO_stdin_used+0x2bfe>
jb     bba9 <_IO_stdin_used+0x2c45>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:0x6e(%ecx),%ah
and    %ch,%fs:0x61(%ebp)
jns    bb76 <_IO_stdin_used+0x2c12>
insb   (%dx),%es:(%edi)
gs
popa
and    %dh,%fs:0x20(%edi,%ebp,2)
fs
popa
je     bbc3 <_IO_stdin_used+0x2c5f>
and    %ah,0x6f(%ebx)
jb     bbd9 <_IO_stdin_used+0x2c75>
jne    bbd9 <_IO_stdin_used+0x2c75>
je     bbd4 <_IO_stdin_used+0x2c70>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x65642065
jbe    bbe1 <_IO_stdin_used+0x2c7d>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    bbf3 <_IO_stdin_used+0x2c8f>
daa
je     bba8 <_IO_stdin_used+0x2c44>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    bc01 <_IO_stdin_used+0x2c9d>
and    %bh,%gs:0x6f(%ecx)
jne    bbc5 <_IO_stdin_used+0x2c61>
jae    bc0c <_IO_stdin_used+0x2ca8>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    bc25 <_IO_stdin_used+0x2cc1>
arpl   %sp,0x3f(%ebp)
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    bc4a <_IO_stdin_used+0x2ce6>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     bc42 <_IO_stdin_used+0x2cde>
jb     bc57 <_IO_stdin_used+0x2cf3>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    bc23 <_IO_stdin_used+0x2cbf>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     bc1d <_IO_stdin_used+0x2cb9>
das
fs
gs
jbe    bc31 <_IO_stdin_used+0x2ccd>
push   $0x29316164
aas
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%edi)
push   $0x77207265
popa
jns    bc3a <_IO_stdin_used+0x2cd6>
popa
jb     bc8c <_IO_stdin_used+0x2d28>
jne    bc8d <_IO_stdin_used+0x2d29>
fs
aas
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    bc9c <_IO_stdin_used+0x2d38>
jae    bca9 <_IO_stdin_used+0x2d45>
outsb  %gs:(%esi),(%dx)
je     bc67 <_IO_stdin_used+0x2d03>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %ch,0x6e(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     bcc5 <_IO_stdin_used+0x2d61>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
bound  %ebp,0x6f(%edi)
je     bc7f <_IO_stdin_used+0x2d1b>
imul   $0x45434957,0x54(%eax,%eiz,1),%esi
and    %ecx,(%edx)
push   %esp
push   $0x73752065
popa
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
data16
and    %dh,0x61(%eax)
jb     bce2 <_IO_stdin_used+0x2d7e>
insl   (%dx),%es:(%edi)
gs
je     bcea <_IO_stdin_used+0x2d86>
jb     bca7 <_IO_stdin_used+0x2d43>
imul   $0x79726576,0x20(%ebx),%esi
and    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
inc    %ecx
dec    %esi
push   %esp
and    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    bcb8 <_IO_stdin_used+0x2d54>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %dh,0x69(%eax,%ebp,2)
jae    bce3 <_IO_stdin_used+0x2d7f>
jae    bd34 <_IO_stdin_used+0x2dd0>
data16
je     bd3f <_IO_stdin_used+0x2ddb>
popa
jb     bd30 <_IO_stdin_used+0x2dcc>
or     %cs:(%eax),%al
add    %al,(%eax)
push   %esp
push   $0x544e2065
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     bd51 <_IO_stdin_used+0x2ded>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     bd54 <_IO_stdin_used+0x2df0>
fs and %dl,%cs:%fs:0x6c(%eax)
gs
popa
jae    bd5d <_IO_stdin_used+0x2df9>
and    %dh,0x65(%edx)
jae    bd72 <_IO_stdin_used+0x2e0e>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     bd7a <_IO_stdin_used+0x2e16>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
and    %cl,(%edx)
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     bd85 <_IO_stdin_used+0x2e21>
jb     bd8e <_IO_stdin_used+0x2e2a>
jns    bd50 <_IO_stdin_used+0x2dec>
and    %dh,0x6f(%ebx)
and    %ch,0x6f(%ebp)
jne    bd9a <_IO_stdin_used+0x2e36>
je     bd97 <_IO_stdin_used+0x2e33>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jne    bda1 <_IO_stdin_used+0x2e3d>
and    %ah,%fs:0x65(%edx)
and    %ah,0x6e(%edi,%ebp,2)
and    %dh,%gs:0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    bd74 <_IO_stdin_used+0x2e10>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    bdc1 <_IO_stdin_used+0x2e5d>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    bdd2 <_IO_stdin_used+0x2e6e>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x6f(%edx)
jne    bde0 <_IO_stdin_used+0x2e7c>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %al,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x72612073,0x65(%ebx),%esp
cmp    %gs:(%edx),%cl
and    %al,0x29(%ecx)
and    %dl,0x68(%ebx)
jne    be0c <_IO_stdin_used+0x2ea8>
outsl  %fs:(%esi),(%dx)
ja     be0a <_IO_stdin_used+0x2ea6>
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     be17 <_IO_stdin_used+0x2eb3>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     be0f <_IO_stdin_used+0x2eab>
jb     be18 <_IO_stdin_used+0x2eb4>
jns    bddc <_IO_stdin_used+0x2e78>
or     (%eax),%ah
inc    %edx
sub    %esp,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x6b(%ebx),%esp
and    %ah,(%edi)
push   %ebx
popa
data16
gs
insb   (%dx),%es:(%edi)
jns    bde5 <_IO_stdin_used+0x2e81>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    be30 <_IO_stdin_used+0x2ecc>
and    %cl,0x61(%eax)
jb     be34 <_IO_stdin_used+0x2ed0>
ja     be33 <_IO_stdin_used+0x2ecf>
jb     be39 <_IO_stdin_used+0x2ed5>
daa
and    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     be5c <_IO_stdin_used+0x2ef8>
and    %dh,0x73(%ecx,%eiz,2)
imul   $0x72,0x61(%edx),%esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x6f(%esi)
je     be63 <_IO_stdin_used+0x2eff>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
gs
popa
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     be73 <_IO_stdin_used+0x2f0f>
and    %ah,0x73(%ecx,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %dh,0x68(%si)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x43200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
push   %ebp
jae    be95 <_IO_stdin_used+0x2f31>
and    %ah,(%edi)
inc    %ebp
push   $0x65
arpl   %si,0x20(%edi,%eiz,1)
data16
jb     beab <_IO_stdin_used+0x2f47>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     beb8 <_IO_stdin_used+0x2f54>
and    %al,0x78(%ebp)
jo     beb6 <_IO_stdin_used+0x2f52>
outsl  %ds:(%esi),(%dx)
jb     beb2 <_IO_stdin_used+0x2f4e>
jb     be6f <_IO_stdin_used+0x2f0b>
je     bec0 <_IO_stdin_used+0x2f5c>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    be79 <_IO_stdin_used+0x2f15>
jb     bec0 <_IO_stdin_used+0x2f5c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    bec4 <_IO_stdin_used+0x2f60>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x44200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    be97 <_IO_stdin_used+0x2f33>
jb     beda <_IO_stdin_used+0x2f76>
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
jo     bef6 <_IO_stdin_used+0x2f92>
gs
jbe    bef0 <_IO_stdin_used+0x2f8c>
outsl  %ds:(%esi),(%dx)
jne    befd <_IO_stdin_used+0x2f99>
insb   (%dx),%es:(%edi)
jns    bead <_IO_stdin_used+0x2f49>
je     bef7 <_IO_stdin_used+0x2f93>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     beb7 <_IO_stdin_used+0x2f53>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
addr16 popa
imul   $0x63696877,0x20(%esi),%ebp
push   $0x6c697720
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x75(%ecx)
je     bf27 <_IO_stdin_used+0x2fc3>
insl   (%dx),%es:(%edi)
popa
je     bf25 <_IO_stdin_used+0x2fc1>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    bee2 <_IO_stdin_used+0x2f7e>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x65687420,0x65(%edx),%edi
and    %ch,0x6f(%edx)
jne    bf47 <_IO_stdin_used+0x2fe3>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
inc    %ebp
sub    %esp,(%eax)
push   %ebx
jne    bf43 <_IO_stdin_used+0x2fdf>
insl   (%dx),%es:(%edi)
imul   $0x63726f66,0x27(%eax,%eiz,1),%esi
gs
daa
and    %ch,0x70(%edi)
je     bf5a <_IO_stdin_used+0x2ff6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x73207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    bf7c <_IO_stdin_used+0x3018>
imul   $0x20746920,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     bf33 <_IO_stdin_used+0x2fcf>
jb     bf7a <_IO_stdin_used+0x3016>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs sub %ebp,%fs:%gs:(%esi)
or     (%eax),%ah
inc    %esi
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
je     bf8e <_IO_stdin_used+0x302a>
jae    bf97 <_IO_stdin_used+0x3033>
outsl  %ds:(%esi),(%dx)
jne    bf9b <_IO_stdin_used+0x3037>
je     bf69 <_IO_stdin_used+0x3005>
and    %cl,0x6f(%ebp)
jne    bfa2 <_IO_stdin_used+0x303e>
je     bf56 <_IO_stdin_used+0x2ff2>
je     bfa0 <_IO_stdin_used+0x303c>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    bfac <_IO_stdin_used+0x3048>
and    %dh,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,(%edi)
jb     bfca <_IO_stdin_used+0x3066>
daa
and    %ch,0x6f(%ebp)
jne    bfcf <_IO_stdin_used+0x306b>
je     bf83 <_IO_stdin_used+0x301f>
outsl  %ds:(%esi),(%dx)
jo     bfda <_IO_stdin_used+0x3076>
imul   $0x59000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    bf90 <_IO_stdin_used+0x302c>
jae    bfd7 <_IO_stdin_used+0x3073>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
popa
and    %dl,0x6f(%ebx)
data16
je     bfd6 <_IO_stdin_used+0x3072>
inc    %ecx
dec    %ecx
inc    %esp
das
inc    %esi
popa
imul   $0x41,0x52(%ebp),%esp
dec    %ecx
inc    %esp
and    %ch,0x61(%eax)
jb     bff9 <_IO_stdin_used+0x3095>
ja     bff8 <_IO_stdin_used+0x3094>
jb     bffe <_IO_stdin_used+0x309a>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x75(%ebp)
jae    c016 <_IO_stdin_used+0x30b2>
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x63(%ecx)
je     c017 <_IO_stdin_used+0x30b3>
jbe    c011 <_IO_stdin_used+0x30ad>
je     c017 <_IO_stdin_used+0x30b3>
fs
sub    $0xa,%al
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     bfdf <_IO_stdin_used+0x307b>
fs
gs
jbe    c02c <_IO_stdin_used+0x30c8>
arpl   %sp,0x20(%ebp)
jne    c036 <_IO_stdin_used+0x30d2>
fs
gs
jb     bfec <_IO_stdin_used+0x3088>
das
fs
gs
jbe    c000 <_IO_stdin_used+0x309c>
insl   (%dx),%es:(%edi)
popa
jo     c045 <_IO_stdin_used+0x30e1>
gs
jb     c004 <_IO_stdin_used+0x30a0>
and    %ch,(%eax)
gs cs and %ch,%cs:%gs:(%bx)
fs
gs
jbe    c013 <_IO_stdin_used+0x30af>
insl   (%dx),%es:(%edi)
popa
jo     c058 <_IO_stdin_used+0x30f4>
gs
jb     c01a <_IO_stdin_used+0x30b6>
outsb  %ds:(%esi),(%dx)
jbe    c057 <_IO_stdin_used+0x30f3>
imul   $0x61686165,%fs:0x5f(%ecx),%esp
popa
bound  %esp,0x63(%ebx)
xor    %ebp,(%ecx)
or     0x20(%edi,%ebp,2),%dh
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c072 <_IO_stdin_used+0x310e>
je     c026 <_IO_stdin_used+0x30c2>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    c077 <_IO_stdin_used+0x3113>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
insl   (%dx),%es:(%edi)
jb     c081 <_IO_stdin_used+0x311d>
imul   $0x75636f64,0x20(%edi,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     c08e <_IO_stdin_used+0x312a>
je     c098 <_IO_stdin_used+0x3134>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     c056 <_IO_stdin_used+0x30f2>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    c0b2 <_IO_stdin_used+0x314e>
and    %ch,%gs:0x73(%ecx)
and    %dh,0x63(%ebx)
push   $0x6c756465
gs and %ah,%fs:%gs:0x6f(%esi)
jb     c078 <_IO_stdin_used+0x3114>
arpl   %bp,0x65(%eax)
arpl   %bp,0x2e(%ebx)
or     0x6c(%eax),%dl
gs
popa
jae    c0ca <_IO_stdin_used+0x3166>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     c08b <_IO_stdin_used+0x3127>
imul   $0x6957206f,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     c0ea <_IO_stdin_used+0x3186>
and    %dl,0x49(%edi,%edx,2)
inc    %ebx
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     c0a2 <_IO_stdin_used+0x313e>
jne    c0f7 <_IO_stdin_used+0x3193>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     c0f2 <_IO_stdin_used+0x318e>
gs
daa
and    %ch,0x70(%edi)
je     c0ff <_IO_stdin_used+0x319b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:0x4f(%esi),%cl
push   %esp
inc    %ebp
cmp    (%eax),%ah
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    c0c7 <_IO_stdin_used+0x3163>
push   $0x6e206461
outsl  %ds:(%esi),(%dx)
je     c0cf <_IO_stdin_used+0x316b>
jae    c114 <_IO_stdin_used+0x31b0>
push   $0x6c756465
gs and %ah,%fs:%gs:0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx,%eiz,2)
je     c0e8 <_IO_stdin_used+0x3184>
je     c133 <_IO_stdin_used+0x31cf>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    c139 <_IO_stdin_used+0x31d5>
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    c0fb <_IO_stdin_used+0x3197>
jbe    c14c <_IO_stdin_used+0x31e8>
insb   (%dx),%es:(%edi)
jne    c14d <_IO_stdin_used+0x31e9>
or     %gs:0x73(%ebp),%dh
imul   $0x66746e20,0x67(%esi),%ebp
jae    c15a <_IO_stdin_used+0x31f6>
outsl  %ds:(%esi),(%dx)
jne    c15e <_IO_stdin_used+0x31fa>
je     c112 <_IO_stdin_used+0x31ae>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%ebx)
jne    c16e <_IO_stdin_used+0x320a>
outsl  %fs:(%esi),(%dx)
ja     c16c <_IO_stdin_used+0x3208>
and    %dh,0x79(%ebx)
jae    c177 <_IO_stdin_used+0x3213>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     c170 <_IO_stdin_used+0x320c>
jb     c179 <_IO_stdin_used+0x3215>
jns    c13b <_IO_stdin_used+0x31d7>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
imul   $0x70697263,0x73(%eax,%eiz,1),%esi
je     c194 <_IO_stdin_used+0x3230>
and    %ch,0x6e(%ecx)
and    %bh,0x6f(%ecx)
jne    c19b <_IO_stdin_used+0x3237>
or     0x73(%ecx,%ebp,2),%ah
je     c1a1 <_IO_stdin_used+0x323d>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x2e,0x6e(%ebp),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    c1ae <_IO_stdin_used+0x324a>
and    %dh,0x65(%edx)
jo     c1bd <_IO_stdin_used+0x3259>
jb     c1c4 <_IO_stdin_used+0x3260>
and    %dh,0x20(%edi,%ebp,2)
jns    c1c5 <_IO_stdin_used+0x3261>
jne    c1ca <_IO_stdin_used+0x3266>
and    %ah,0x73(%ecx,%ebp,2)
je     c1d0 <_IO_stdin_used+0x326c>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     c1d3 <_IO_stdin_used+0x326f>
jb     c1e3 <_IO_stdin_used+0x327f>
or     (%eax),%ch
dec    %esi
dec    %edi
push   %esp
and    %dh,0x20(%edi,%ebp,2)
jne    c1ee <_IO_stdin_used+0x328a>
and    %ebp,(%ecx)
and    %dh,0x61(%eax,%ebp,2)
je     c1a3 <_IO_stdin_used+0x323f>
imul   $0x63732074,0x69(%esi),%ebp
jb     c1f5 <_IO_stdin_used+0x3291>
jo     c202 <_IO_stdin_used+0x329e>
jae    c1b0 <_IO_stdin_used+0x324c>
imul   $0x6c,0x6c(%ecx),%ebp
and    %ch,0x74(%esi)
data16
jae    c207 <_IO_stdin_used+0x32a3>
outsl  %ds:(%esi),(%dx)
jne    c20b <_IO_stdin_used+0x32a7>
je     c1bf <_IO_stdin_used+0x325b>
outsl  %ds:(%esi),(%dx)
jb     c1c2 <_IO_stdin_used+0x325e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c214 <_IO_stdin_used+0x32b0>
je     c1d6 <_IO_stdin_used+0x3272>
outsb  %ds:(%esi),(%dx)
je     c211 <_IO_stdin_used+0x32ad>
jae    c1da <_IO_stdin_used+0x3276>
data16
jne    c223 <_IO_stdin_used+0x32bf>
and    %ah,%gs:0x72(%ebp,%esi,2)
imul   $0x7568730a,0x67(%esi),%ebp
je     c222 <_IO_stdin_used+0x32be>
outsl  %ds:(%esi),(%dx)
ja     c22f <_IO_stdin_used+0x32cb>
and    %ch,0x6e(%ecx)
jae    c23a <_IO_stdin_used+0x32d6>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     c237 <_IO_stdin_used+0x32d3>
jb     c1f4 <_IO_stdin_used+0x3290>
jne    c243 <_IO_stdin_used+0x32df>
outsl  %ds:(%esi),(%dx)
jne    c247 <_IO_stdin_used+0x32e3>
je     c209 <_IO_stdin_used+0x32a5>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6f762079,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    c261 <_IO_stdin_used+0x32fd>
and    %ch,%gs:0x6f(%ebp)
jne    c268 <_IO_stdin_used+0x3304>
je     c21c <_IO_stdin_used+0x32b8>
ja     c25f <_IO_stdin_used+0x32fb>
jae    c220 <_IO_stdin_used+0x32bc>
outsw  %ds:(%esi),(%dx)
jb     c267 <_IO_stdin_used+0x3303>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     c276 <_IO_stdin_used+0x3312>
gs
daa
and    %ch,0x6f(%ebp)
jne    c288 <_IO_stdin_used+0x3324>
je     c23c <_IO_stdin_used+0x32d8>
outsl  %ds:(%esi),(%dx)
jo     c293 <_IO_stdin_used+0x332f>
imul   $0xa2e,0x6e(%edi),%ebp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     c291 <_IO_stdin_used+0x332d>
jb     c29c <_IO_stdin_used+0x3338>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     c2a4 <_IO_stdin_used+0x3340>
jb     c263 <_IO_stdin_used+0x32ff>
and    %dh,0x74(%ebx)
jb     c2b0 <_IO_stdin_used+0x334c>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
daa
je     c267 <_IO_stdin_used+0x3303>
jb     c2ae <_IO_stdin_used+0x334a>
je     c2c0 <_IO_stdin_used+0x335c>
jb     c2bb <_IO_stdin_used+0x3357>
and    %ah,0x20(%ecx)
jae    c2c7 <_IO_stdin_used+0x3363>
data32 imul $0xa,0x2e(%eax),%di
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    c2c1 <_IO_stdin_used+0x335d>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
jae    c2e0 <_IO_stdin_used+0x337c>
data32 imul $0x2527,0x20(%eax),%di
jae    c29b <_IO_stdin_used+0x3337>
and    %ah,%cs:(%eax)
push   %ebp
jae    c2df <_IO_stdin_used+0x337b>
and    %dl,0x20(%esp,%ebp,1)
inc    %edi
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     c2a7 <_IO_stdin_used+0x3343>
dec    %ebx
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    c2fc <_IO_stdin_used+0x3398>
outsb  %fs:(%esi),(%dx)
daa
je     c2b5 <_IO_stdin_used+0x3351>
arpl   %si,0x65(%edx)
popa
je     c300 <_IO_stdin_used+0x339c>
and    %ah,0x20(%ecx)
jae    c305 <_IO_stdin_used+0x33a1>
popa
jb     c306 <_IO_stdin_used+0x33a2>
push   $0x6e6f6320
je     c30f <_IO_stdin_used+0x33ab>
js     c320 <_IO_stdin_used+0x33bc>
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    c320 <_IO_stdin_used+0x33bc>
outsb  %fs:(%esi),(%dx)
daa
je     c2d9 <_IO_stdin_used+0x3375>
je     c32d <_IO_stdin_used+0x33c9>
popa
outsb  %ds:(%esi),(%dx)
jae    c32b <_IO_stdin_used+0x33c7>
popa
je     c327 <_IO_stdin_used+0x33c3>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     c339 <_IO_stdin_used+0x33d5>
outsb  %ds:(%esi),(%dx)
je     c2f7 <_IO_stdin_used+0x3393>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
push   %esp
push   $0x69642065
jb     c34d <_IO_stdin_used+0x33e9>
arpl   %si,0x72(%edi,%ebp,2)
jns    c30e <_IO_stdin_used+0x33aa>
jae    c364 <_IO_stdin_used+0x3400>
jb     c367 <_IO_stdin_used+0x3403>
arpl   %si,0x72(%ebp,%esi,2)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     c324 <_IO_stdin_used+0x33c0>
sub    %ch,0x76(%edi)
gs
jb     c32a <_IO_stdin_used+0x33c6>
and    $0x6e202964,%eax
gs
jae    c386 <_IO_stdin_used+0x3422>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0xa2e,0x73(%ebp),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    c394 <_IO_stdin_used+0x3430>
outsb  %fs:(%esi),(%dx)
daa
je     c34d <_IO_stdin_used+0x33e9>
je     c3a1 <_IO_stdin_used+0x343d>
popa
outsb  %ds:(%esi),(%dx)
jae    c39f <_IO_stdin_used+0x343b>
popa
je     c39b <_IO_stdin_used+0x3437>
and    %ah,0x74(%ecx)
je     c3ad <_IO_stdin_used+0x3449>
imul   $0x74206574,0x75(%edx),%esp
jns    c3b4 <_IO_stdin_used+0x3450>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     c3b3 <_IO_stdin_used+0x344f>
outsb  %ds:(%esi),(%dx)
je     c371 <_IO_stdin_used+0x340d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     c3da <_IO_stdin_used+0x3476>
imul   $0x74206574,0x75(%edx),%esp
jns    c3e1 <_IO_stdin_used+0x347d>
and    %dh,%gs:(%eax)
js     c39b <_IO_stdin_used+0x3437>
xor    %dh,(%edx)
js     c384 <_IO_stdin_used+0x3420>
add    %al,(%eax)
inc    %ecx
je     c3f3 <_IO_stdin_used+0x348f>
jb     c3ea <_IO_stdin_used+0x3486>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    c3af <_IO_stdin_used+0x344b>
je     c403 <_IO_stdin_used+0x349f>
jne    c401 <_IO_stdin_used+0x349d>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x6f(%ebx)
jne    c40c <_IO_stdin_used+0x34a8>
outsb  %fs:(%esi),(%dx)
daa
je     c3c5 <_IO_stdin_used+0x3461>
je     c419 <_IO_stdin_used+0x34b5>
popa
outsb  %ds:(%esi),(%dx)
jae    c417 <_IO_stdin_used+0x34b3>
popa
je     c413 <_IO_stdin_used+0x34af>
and    %ah,0x74(%ecx)
je     c425 <_IO_stdin_used+0x34c1>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     c42b <_IO_stdin_used+0x34c7>
outsb  %ds:(%esi),(%dx)
je     c3e9 <_IO_stdin_used+0x3485>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ecx
je     c44b <_IO_stdin_used+0x34e7>
jb     c442 <_IO_stdin_used+0x34de>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    c407 <_IO_stdin_used+0x34a3>
je     c45b <_IO_stdin_used+0x34f7>
jne    c459 <_IO_stdin_used+0x34f5>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x72(%ebp)
jb     c467 <_IO_stdin_used+0x3503>
jb     c41a <_IO_stdin_used+0x34b6>
jb     c461 <_IO_stdin_used+0x34fd>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     c47e <_IO_stdin_used+0x351a>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
push   %esp
push   $0x70207369
jb     c493 <_IO_stdin_used+0x352f>
addr16 jb c488 <_IO_stdin_used+0x3524>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x6f(%ebx)
data16
je     c4ad <_IO_stdin_used+0x3549>
popa
jb     c49e <_IO_stdin_used+0x353a>
sub    $0x20,%al
jb     c4a2 <_IO_stdin_used+0x353e>
insb   (%dx),%es:(%edi)
gs
popa
jae    c4a7 <_IO_stdin_used+0x3543>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     c46a <_IO_stdin_used+0x3506>
je     c4b4 <_IO_stdin_used+0x3550>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     c4b9 <_IO_stdin_used+0x3555>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    c4cd <_IO_stdin_used+0x3569>
or     0x6e(%ecx),%ah
and    %bh,%fs:0x6f(%ecx)
jne    c491 <_IO_stdin_used+0x352d>
popa
jb     c4d9 <_IO_stdin_used+0x3575>
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jb     c4e7 <_IO_stdin_used+0x3583>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     c4f1 <_IO_stdin_used+0x358d>
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     c4b6 <_IO_stdin_used+0x3552>
arpl   %sp,0x72(%ebp)
je     c4fc <_IO_stdin_used+0x3598>
imul   $0x646e6f63,0x20(%esi),%ebp
imul   $0x202e736e,0x6f(%ecx,%ebp,2),%esi
and    %cl,0x74(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
jae    c4d4 <_IO_stdin_used+0x3570>
ja     c51f <_IO_stdin_used+0x35bb>
je     c520 <_IO_stdin_used+0x35bc>
or     0x42(%ecx),%al
push   %ebx
dec    %edi
dec    %esp
push   %ebp
push   %esp
inc    %ebp
dec    %esp
pop    %ecx
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jb     c4f5 <_IO_stdin_used+0x3591>
fs
gs
je     c53a <_IO_stdin_used+0x35d6>
imul   $0x64616572,0x20(%ebx,%esi,2),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     c551 <_IO_stdin_used+0x35ed>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    c565 <_IO_stdin_used+0x3601>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0xa(%ebp)
outsw  %ds:(%esi),(%dx)
jne    c579 <_IO_stdin_used+0x3615>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
dec    %ecx
dec    %esi
inc    %edi
and    (%eax),%ah
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     c592 <_IO_stdin_used+0x362e>
and    %dh,%fs:0x69(%edi)
je     c59b <_IO_stdin_used+0x3637>
and    %dh,0x69(%eax,%ebp,2)
jae    c559 <_IO_stdin_used+0x35f5>
jo     c5ad <_IO_stdin_used+0x3649>
outsl  %ds:(%esi),(%dx)
addr16 jb c5a0 <_IO_stdin_used+0x363c>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     c565 <_IO_stdin_used+0x3601>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x3a746120,0x65(%esi),%ebp
or     0x74(%eax),%ch
je     c5c4 <_IO_stdin_used+0x3660>
cmp    (%edi),%ch
das
ja     c5d0 <_IO_stdin_used+0x366c>
ja     c589 <_IO_stdin_used+0x3625>
outsb  %ds:(%si),(%dx)
jne    c58d <_IO_stdin_used+0x3629>
outsl  %ds:(%esi),(%dx)
jb     c5c9 <_IO_stdin_used+0x3665>
das
arpl   %bp,0x70(%edi)
jns    c5d4 <_IO_stdin_used+0x3670>
gs
data16
je     c59b <_IO_stdin_used+0x3637>
addr16 jo c5db <_IO_stdin_used+0x3677>
cs
push   $0xa6c6d74
add    %al,(%eax)
add    %al,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     c5e5 <_IO_stdin_used+0x3681>
jb     c5f5 <_IO_stdin_used+0x3691>
daa
and    %ah,0x6d(%ebp)
popa
imul   $0x65726464,0x61(%eax,%eiz,1),%ebp
jae    c604 <_IO_stdin_used+0x36a0>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
je     c5fc <_IO_stdin_used+0x3698>
jae    c5c5 <_IO_stdin_used+0x3661>
xor    0x2d(%edi),%esp
fs
gs
jbe    c604 <_IO_stdin_used+0x36a0>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     c5b8 <_IO_stdin_used+0x3654>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
data16
je     c613 <_IO_stdin_used+0x36af>
outsb  %ds:(%esi),(%dx)
gs
js     c62c <_IO_stdin_used+0x36c8>
pop    %edi
jb     c620 <_IO_stdin_used+0x36bc>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x74(%ebp)
imul   $0x7274666d,0x5f(%ebx,%esi,2),%ebp
arpl   %bx,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    c645 <_IO_stdin_used+0x36e1>
add    %dh,%gs:0x74(%ebp)
imul   $0x73756c63,0x5f(%ebx,%esi,2),%ebp
je     c645 <_IO_stdin_used+0x36e1>
jb     c641 <_IO_stdin_used+0x36dd>
imul   $0x657375,0x5f(%esi),%ebp
jne    c65f <_IO_stdin_used+0x36fb>
imul   $0x72747461,0x5f(%ebx,%esi,2),%ebp
pop    %edi
addr16
gs
je     c657 <_IO_stdin_used+0x36f3>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebp)
imul   $0x646f6e69,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
addr16
gs
je     c66c <_IO_stdin_used+0x3708>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f74,0x73(%edx),%si
popa
je     c694 <_IO_stdin_used+0x3730>
jb     c68b <_IO_stdin_used+0x3727>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x74(%ebp)
imul   $0x73726170,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
jae    c69e <_IO_stdin_used+0x373a>
jp     c69c <_IO_stdin_used+0x3738>
add    %dh,0x74(%ebp)
imul   $0x6e756f6d,0x5f(%ebx,%esi,2),%ebp
je     c6a3 <_IO_stdin_used+0x373f>
jbe    c6b5 <_IO_stdin_used+0x3751>
insb   (%dx),%es:(%edi)
jne    c6b6 <_IO_stdin_used+0x3752>
add    %dh,%gs:0x74(%ebp)
imul   $0x696c6176,0x5f(%ebx,%esi,2),%ebp
fs
pop    %edi
fs
gs
jbe    c6c4 <_IO_stdin_used+0x3760>
arpl   %sp,0x0(%ebp)
jne    c6d4 <_IO_stdin_used+0x3770>
imul   $0x5f746573,0x5f(%ebx,%esi,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
sub    %al,(%ecx)
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
adc    %cl,-0x1(%ebx)
incl   0x0(%ecx,%eax,1)
add    %ah,%al
dec    %esi
(bad)
ljmp   *(%esp,%eax,1)
add    %al,(%eax)
nop
cmp    $0xffffffff,%edi
push   $0x1
test   %edi,%edi
(bad)
jl     c69b <_IO_stdin_used+0x3737>
add    %al,(%eax)
orb    $0x0,0x1bcffff(%eax)
add    %dh,(%eax)
mov    %edi,%edi
push   %eax
add    %eax,(%eax)
add    %dh,%al
mov    %edi,%edi
jmp    *(%edx,%eax,1)
add    %al,(%eax)
pusha
mov    %edi,%edi
jmp    *0x0(%edx,%eax,1)
add    %al,%al
(bad)
(bad)
jmp    *-0x6eb00000(%edx,%eax,1)
(bad)
incl   (%eax)
add    (%eax),%eax
add    %al,0x40ffff92(%eax)
add    (%eax),%eax
add    %al,-0x4f00006b(%eax)
add    (%eax),%eax
add    %dh,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
push   %esp
add    (%eax),%eax
add    %bl,(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
lcall  *0x0(%esp,%eax,1)
add    %dh,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
pushl  0x4(%eax)
add    %al,(%eax)
shlb   0x49cffff(%edi)
add    %al,(%eax)
mov    0xf4ffffa8,%al
add    $0x0,%al
add    %dh,-0x55(%eax)
(bad)
(bad)
js     c70f <_IO_stdin_used+0x37ab>
add    %al,(%eax)
subb   $0x0,0x5d0ffff(%esi)
add    %dl,-0x4f(%eax)
(bad)
ljmp   *(%esi,%eax,1)
add    %al,(%eax)
jo     c6d0 <_IO_stdin_used+0x376c>
(bad)
decl   0x6(%eax)
mov    $0xff,%bl
(bad)
mov    $0xb0000006,%eax
mov    $0xff,%bl
push   %eax
push   %es
add    %al,(%eax)
mov    0x60ffffb7,%al
pop    %es
add    %al,(%eax)
push   %eax
mov    $0x7b8ffff,%edx
add    %al,(%eax)
xor    %bh,0x7f8ff(%edi,%edi,8)
add    %ah,0x38ffffbd(%eax)
or     %al,(%eax)
add    %dh,0x78ffffbe(%eax)
or     %al,(%eax)
add    %al,%al
mov    $0x88cffff,%esi
add    %al,(%eax)
and    %bh,0x8b8ffff(%edi)
add    %al,(%eax)
pusha
mov    $0x8e4ffff,%edi
add    %al,(%eax)
loopne c73a <_IO_stdin_used+0x37d6>
(bad)
ljmp   *0x0(%ecx,%ecx,1)
add    %ah,-0x3a(%eax)
(bad)
jmp    *-0x37d00000(%ecx,%ecx,1)
(bad)
(bad)
fmull  (%ecx)
add    %al,(%eax)
mov    0x18ffffc8,%al
or     (%eax),%al
add    %dh,0x2cffffc8(%eax)
or     (%eax),%al
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     c7b3 <_IO_stdin_used+0x384f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
les    -0x1(%ecx),%ecx
call   *%eax
add    (%eax),%eax
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     c7d3 <_IO_stdin_used+0x386f>
js     c7d1 <_IO_stdin_used+0x386d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,(%eax)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,-0x1(%ebx,%eax,4)
(bad)
jle    c7fd <_IO_stdin_used+0x3899>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3300e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dl,-0x79440000(%eax,%eax,1)
(bad)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    -0x3cbeeff2(%ebx),%dl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
enter  $0x0,$0x0
cmp    %al,0xbaffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    -0x3cbeeff2(%ecx),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
cld
add    %al,(%eax)
add    %al,%ah
xchg   %edi,%edi
ljmp   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cmp    $0x1,%al
add    %al,(%eax)
hlt
mov    %bh,%bh
lcall  *0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
jl     c91b <_IO_stdin_used+0x39b7>
add    %al,(%eax)
adc    $0x8b,%al
(bad)
decl   0x3(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    0x100e0a01(%ebp),%esp
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
test   %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
xor    $0x41100e01,%eax
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
fadds  (%ecx)
add    %al,(%eax)
dec    %eax
mov    %edi,%?
pushl  (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x15,0x3500e4e
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bl,(%eax)
add    (%eax),%al
add    %bh,(%eax)
(bad)
(bad)
push   %ebx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x68,0x3300e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
hlt
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,-0x37fffffe(%eax)
xchg   %eax,%ecx
(bad)
ljmp   *0xe(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e51
dec    %edx
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
int3
add    (%eax),%al
add    %dh,(%eax,%eiz,4)
(bad)
(bad)
out    %al,(%dx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
mov    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
add    $0x3,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
dec    %edx
(bad)
incl   0x0(%ebx,%esi,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa113803,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,(%ebx,%eax,1)
add    %al,(%eax)
mov    $0x4ffffa2,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x3(%eax)
add    %al,(%eax)
mov    $0x96ffffa2,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,0x0(%ebx,%eax,1)
add    %ch,(%ebx,%eiz,4)
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %cl,%ah
add    (%eax),%eax
add    %ah,0x2c8ffff(%ebx,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0x43140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,0x4(%eax)
add    %al,(%eax)
lock movsl %ds:(%esi),%es:(%edi)
(bad)
decl   (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
test   $0x4,%al
add    %al,(%eax)
test   $0xa8,%al
(bad)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
or     %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
add    $0x5,%al
add    %al,(%eax)
sbb    $0xab,%al
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pusha
add    $0xabe00000,%eax
(bad)
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebp),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
nop
add    $0xac400000,%eax
(bad)
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,%al
add    $0xacb80000,%eax
(bad)
jmp    *%esi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ecx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
push   %es
add    %al,(%eax)
cmp    %dh,0x2a5ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x61500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
nop
push   %es
add    %al,(%eax)
nop
mov    $0xff,%dl
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rolb   (%esi)
add    %al,(%eax)
xor    %dh,0x16bff(%edi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
adc    %al,(%edi)
add    %al,(%eax)
pusha
mov    $0xff,%ch
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
pop    %es
add    %al,(%eax)
xor    %dh,0x2ffff(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fs
pop    %es
add    %al,(%eax)
sub    $0xb6,%al
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,0x60000007(%eax)
mov    $0xff,%dh
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
mov    $0x74000007,%esp
mov    $0xff,%dh
(bad)
jg     cf67 <_IO_stdin_used+0x4003>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %esp
or     %al,(%eax)
add    %ch,-0x1(%ebx,%edi,4)
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
jl     d022 <_IO_stdin_used+0x40be>
add    %al,(%eax)
mov    $0xbc,%ah
(bad)
inc    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0x41100e0a(%ebp),%al
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,-0x41b40000(%eax,%ecx,1)
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,%al
or     %al,(%eax)
add    %al,0x2ffffbe(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%ecx,%ecx,1)
add    %al,(%eax)
jl     d064 <_IO_stdin_used+0x4100>
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
rorb   $0x0,0x0(%ecx)
jo     ecdf <_IO_stdin_used+0x5d7b>
add    %al,(%eax)
shll   $0x0,-0x5e3b0000(%ecx)
add    %cl,%cl
mov    0xa1cd0000,%eax
add    %al,(%eax)
shll   -0x5e2b0000(%ecx)
add    %al,(%eax)
fldenv 0x0(%ecx)
add    %al,(%eax)
frstor -0x5e1f0000(%ecx)
add    %al,(%eax)
in     $0xa1,%eax
add    %al,(%eax)
jmp    ed00ed72 <_end+0xecfff8b2>
mov    0xa1f10000,%eax
add    %al,(%eax)
cmc
mov    0xa1f90000,%eax
add    %al,(%eax)
std
mov    0xa2010000,%eax
add    %al,(%eax)
add    $0x90000a2,%eax
mov    %al,0x0
add    %al,(%eax)
or     $0xa2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
adc    0x0(%edx),%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0x18000000
mov    %al,0x10000
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0xa21e0000,(%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %ah,(%ebx)
mov    %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jno    ed4e <_IO_stdin_used+0x5dea>
add    %al,(%eax)
sub    %esp,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    ed5e <_IO_stdin_used+0x5dfa>
add    %al,(%eax)
xor    %esp,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esi
add    %al,(%eax)
add    %bh,(%ecx)
mov    %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,-0x5e(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
mov    $0x3,%cl
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
push   %esp
adc    %eax,(%eax)
add    %cl,0x34000000
popl   (%eax)
add    %bl,(%ecx)
add    %al,(%eax)
add    %dl,0x1b0000ec(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esp
in     (%dx),%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0x78000000
pop    %es
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,0x5(%ecx)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ah,0x20000ee(%eax)
add    %al,(%eax)
add    %ah,%al
add    %eax,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dh,0x0(%edi,%ecx,1)
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,%ah
or     $0x120000,%eax
add    %al,(%eax)
test   $0x1,%al
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sti
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x6c(%edi)
or     $0xffff0000,%eax
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x46(%edi)
or     $0x0,%al
add    %bh,%dl
(bad)
ljmp   *0x22(%edi)
mov    0xed,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x59ffffef(%esi)
adc    %eax,(%eax)
add    %dh,-0x39ffffef(%esi)
adc    %eax,(%eax)
add    %dl,%dh
adc    %eax,(%eax)
add    %ah,%dh
adc    %eax,(%eax)
add    %dh,%dh
adc    %eax,(%eax)
add    %al,(%esi)
adc    (%eax),%al
add    %dl,(%esi)
adc    (%eax),%al
add    %ah,(%esi)
adc    (%eax),%al
add    %dh,(%esi)
adc    (%eax),%al
add    %al,0x12(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%al
add    %ah,0x12(%esi)
add    %al,(%eax)
jbe    eef8 <_IO_stdin_used+0x5f94>
add    %al,(%eax)
xchg   %dl,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
adc    (%eax),%al
add    %ah,-0x49ffffee(%esi)
adc    (%eax),%al
add    %al,%dh
adc    (%eax),%al
add    %dl,%dh
adc    (%eax),%al
add    %ah,%dh
adc    (%eax),%al
add    %dh,%dh
adc    (%eax),%al
add    %al,(%esi)
adc    (%eax),%eax
add    %dl,(%esi)
adc    (%eax),%eax
add    %ah,(%esi)
adc    (%eax),%eax
add    %dh,(%esi)
adc    (%eax),%eax
add    %al,0x13(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%eax
add    %ah,0x13(%esi)
add    %al,(%eax)
jbe    ef39 <_IO_stdin_used+0x5fd5>
add    %al,(%eax)
xchg   %dl,(%ebx)
add    %al,(%eax)
xchg   %eax,%esi
adc    (%eax),%eax
add    %ah,-0x49ffffed(%esi)
adc    (%eax),%eax
add    %al,%dh
adc    (%eax),%eax
add    %dl,%dh
adc    (%eax),%eax
add    %ah,%dh
adc    (%eax),%eax
add    %dh,%dh
adc    (%eax),%eax
add    %al,(%esi)
adc    $0x0,%al
add    %dl,(%esi)
adc    $0x0,%al
add    %ah,(%esi)
adc    $0x0,%al
add    %dh,(%esi)
adc    $0x0,%al
add    %al,0x14(%esi)
add    %al,(%eax)
push   %esi
adc    $0x0,%al
add    %ah,0x14(%esi)
add    %al,(%eax)
jbe    ef7a <_IO_stdin_used+0x6016>
add    %al,(%eax)
xchg   %dl,(%eax,%eax,1)
add    %dl,-0x59ffffec(%esi)
adc    $0x0,%al
add    %dh,-0x39ffffec(%esi)
adc    $0x0,%al
add    %dl,%dh
adc    $0x0,%al
add    %ah,%dh
adc    $0x0,%al
add    %dh,%dh
adc    $0x0,%al
add    %al,(%esi)
adc    $0x15160000,%eax
add    %al,(%eax)
es
adc    $0x15360000,%eax
add    %al,(%eax)
inc    %esi
adc    $0x0,%eax
add    %al,(%eax)
push   %eax
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    $0xf0,%al
add    %al,(%eax)
and    $0x0,%al
push   %ebx
add    %al,0x53(%eax,%eax,1)
add    %bh,%bh
out    %eax,(%dx)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
lock (bad)
incl   (%eax)
add    %al,(%eax)
sbb    $0xc4,%al
js     eff3 <_IO_stdin_used+0x608f>
data16
arpl   %sp,0x30(%ebx)
xor    %edi,(%eax)
cmp    %esp,0x32(%ecx)
ss
xor    $0x32,%al
cmp    %dh,(%esi)
xor    (%ebx),%dh
ss
aaa
cmp    %dh,(%esi)
xor    %ah,%ss:0x33(%edx)
xor    %esi,0x34303635
xor    $0x36,%al
xor    $0x33,%al
xor    %ss:(%edx),%dh
xor    %ebp,(%esi)
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
jne    ffffffb5 <_end+0xffff0af5>
daa
.byte 0xd2
