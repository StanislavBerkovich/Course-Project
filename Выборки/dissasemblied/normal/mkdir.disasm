das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %ch,-0x56738432(%esi)
cmpsl  %es:(%edi),%ds:(%esi)
jg     8048151 <_init-0xdcb>
ss
inc    %esp
cmp    $0x10,%al
xor    -0x68(%ecx),%dl
lock push %ss
ret
.byte 0x8
.byte 0x8f
add    (%eax),%eax
add    %al,(%eax)
dec    %ebx
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,0x0(%eax)
mov    $0x21,%dl
mov    %ds,(%edi)
or     %al,0x3(%eax,%eax,1)
mov    0x4b000004,%al
add    %al,(%eax)
add    %cl,0x0(%esi)
add    %al,(%eax)
push   %esi
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x297c92e3,%edx
sbb    $0x50bc1c8c,%eax
jbe    8048186 <_init-0xd96>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804819d <_init-0xd7f>
dec    %ebx
jecxz  80481b4 <_init-0xd68>
fdivs  0x58(%ecx)
sbb    $0x96,%al
mov    0x62e49789,%al
inc    %ecx
cmc
mov    $0xea0ef18d,%ecx
shr    %cl,%edi
push   %cs
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
push   %cs
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
std
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incl   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    8048315 <_init-0xc07>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cwtl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     8048474 <_init-0xaa8>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     80484b2 <_init-0xa6a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repz add %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
incb   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
rolb   %cl,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebp
add    (%eax),%eax
add    %ah,0x80541(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %dh,0x3(%eax)
add    %al,(%eax)
pop    %eax
inc    %ebx
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ah,%bl
add    %eax,(%eax)
add    %al,(%eax)
inc    %edx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,0xa0000003
inc    %ecx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x2(%ecx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %ecx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %al,0x3(%eax)
add    %al,(%eax)
rolb   $0x8,0x5(%ecx)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
popl   (%eax)
add    %al,(%eax)
test   %al,(%ecx)
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ah,0x0(%ebx,%eax,1)
add    %ah,0x80541(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %al,0x0(%ecx,%eax,1)
add    %al,%al
inc    %ecx
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %dh,-0x5ffffffe(%ebx)
inc    %ecx
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ch,0x0(%edx)
add    %al,(%eax)
sbb    $0x8f,%al
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
jg     8048772 <_init-0x7aa>
add    %al,(%eax)
pop    %esp
add    %eax,0x8
add    %dl,(%edx)
add    %cl,(%esi)
add    %bl,%dl
add    %al,(%eax)
add    %ah,%al
inc    %ecx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,0x2(%edi)
add    %al,(%eax)
add    $0x42,%al
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
jae    804880b <_init-0x711>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     804881f <_init-0x6fd>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804884a <_init-0x6d2>
popa
jb     804884d <_init-0x6cf>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    804883f <_init-0x6dd>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048860 <_init-0x6bc>
gs
jae    80487f0 <_init-0x72c>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     804885c <_init-0x6c0>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x65730074,0x69(%esi),%ebp
je     804887a <_init-0x6a2>
jae    8048879 <_init-0x6a3>
jb     804887d <_init-0x69f>
popa
je     8048880 <_init-0x69c>
arpl   %bp,0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
arpl   %bp,(%esi)
jae    804889b <_init-0x681>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80488a9 <_init-0x673>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    80488b6 <_init-0x666>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     80488c9 <_init-0x653>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     80488d0 <_init-0x64c>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     80488e2 <_init-0x63a>
outsl  %ds:(%esi),(%dx)
ja     80488d4 <_init-0x648>
add    %dh,0x74(%ebx)
jb     80488e4 <_init-0x638>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     80488e7 <_init-0x635>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     80488f7 <_init-0x625>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048903 <_init-0x619>
gs
js     8048906 <_init-0x616>
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jo     80488fd <_init-0x61f>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x5f,%al
xor    (%eax),%al
data16
arpl   %bp,0x64(%eax)
imul   $0x6f727265,0x0(%edx),%esi
jb     80488ab <_init-0x671>
outsw  %ds:(%esi),(%dx)
jb     804891a <_init-0x602>
add    %bl,0x5f(%edi)
jae    8048928 <_init-0x5f4>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x646b6d00,0x74(%esi),%ebp
imul   $0x6c616572,0x0(%edx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     80488de <_init-0x63e>
pop    %edi
gs
js     804894b <_init-0x5d1>
je     80488e4 <_init-0x638>
jo     8048958 <_init-0x5c4>
outsl  %ds:(%esi),(%dx)
addr16 jb 804894b <_init-0x5d1>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048974 <_init-0x5a8>
gs
jb     8048978 <_init-0x5a4>
pop    %edi
popaw
imul   $0x7974635f,0x5f(%eax,%eax,1),%ebp
jo     8048976 <_init-0x5a6>
pop    %edi
addr16
gs
je     8048975 <_init-0x5a7>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    804898e <_init-0x58e>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048921 <_init-0x5fb>
insb   (%dx),%es:(%edi)
arpl   %bp,0x6f(%eax)
ja     8048995 <_init-0x587>
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80489a5 <_init-0x577>
jb     804899f <_init-0x57d>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     804899f <_init-0x57d>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    80489a7 <_init-0x575>
je     8048944 <_init-0x5d8>
pop    %edi
pop    %edi
gs
jb     80489bb <_init-0x561>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
data16
js     80489db <_init-0x541>
je     80489cb <_init-0x551>
je     80489a2 <_init-0x57a>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     80489e5 <_init-0x537>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
arpl   %bp,0x6f(%eax)
ja     80489f0 <_init-0x52c>
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    80489fd <_init-0x51f>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048a05 <_init-0x517>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    8048a17 <_init-0x505>
popa
jae    8048a18 <_init-0x504>
add    %dh,0x61(%edx)
imul   $0x73626d00,0x65(%ebx),%esi
imul   $0x5f5f0074,0x69(%esi),%ebp
jne    8048a26 <_init-0x4f6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80489c4 <_init-0x558>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     8048a47 <_init-0x4d5>
je     8048a37 <_init-0x4e5>
je     8048a0e <_init-0x50e>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048a51 <_init-0x4cb>
outsb  %ds:(%esi),(%dx)
jbe    80489ef <_init-0x52d>
outsl  %ds:(%esi),(%dx)
jo     8048a66 <_init-0x4b6>
popa
jb     8048a5c <_init-0x4c0>
add    %bl,0x5f(%edi)
data16
jb     8048a60 <_init-0x4bc>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     8048a79 <_init-0x4a3>
add    %bl,0x5f(%edi)
jae    8048a7a <_init-0x4a2>
jo     8048a80 <_init-0x49c>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
jae    8048a7d <_init-0x49f>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048a91 <_init-0x48b>
jo     8048a98 <_init-0x484>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x77(%esi)
jb     8048a9e <_init-0x47e>
je     8048a9c <_init-0x480>
add    %dh,0x61(%edi)
imul   $0x5f5f0064,0x69(%eax,%esi,2),%esi
data16
jo     8048aaa <_init-0x472>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 8048aba <_init-0x462>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048adf <_init-0x43d>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048adb <_init-0x441>
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     8048ae9 <_init-0x433>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     8048ae9 <_init-0x433>
js     8048afa <_init-0x422>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x69727766,0x0(%esi),%ebp
je     8048af8 <_init-0x424>
pop    %edi
jne    8048b04 <_init-0x418>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     8048b04 <_init-0x418>
insl   (%dx),%es:(%edi)
jo     8048aa4 <_init-0x478>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048b24 <_init-0x3f8>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x766f5f5f,0x0(%esi),%ebp
gs
jb     8048b23 <_init-0x3f9>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048ac1 <_init-0x45b>
data16
jo     8048b39 <_init-0x3e3>
je     8048b39 <_init-0x3e3>
pop    %edi
jne    8048b37 <_init-0x3e5>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     8048b4b <_init-0x3d1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048b56 <_init-0x3c6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8048b5a <_init-0x3c2>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048b5e <_init-0x3be>
js     8048b64 <_init-0x3b8>
je     8048afd <_init-0x41f>
pop    %edi
gs
fs
popa
je     8048b64 <_init-0x3b8>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8048b80 <_init-0x39c>
popa
jb     8048b83 <_init-0x399>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
or     %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %eax,(%eax)
or     %al,(%eax)
test   %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x90000,%eax
jne    8048c39 <_init-0x2e3>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %ss
imul   $0x80000,0xd(%ecx),%ebp
jg     8048c49 <_init-0x2d3>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8048c6d <_init-0x2af>
imul   $0x70000,(%ecx),%ecx
mov    %eax,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x60000,%eax
xchg   %eax,%ebp
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x39f,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
test   $0x10000003,%eax
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%ebx)
add    %dh,0x10000003(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
mov    $0x3,%edi
add    %al,(%eax)
cld
aas
add    $0x210608,%eax
add    %ah,0x5080541(%eax)
dec    %esi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %ecx
add    $0x4f0508,%eax
add    %al,%al
inc    %ecx
add    $0x500508,%eax
add    %ah,%al
inc    %ecx
add    $0x570508,%eax
add    %al,(%eax)
inc    %edx
add    $0x4d0508,%eax
add    %al,(%edx,%eax,2)
add    $0x580508,%eax
or     $0x40,%al
add    $0x10708,%eax
add    %dl,(%eax)
inc    %eax
add    $0x20708,%eax
add    %dl,(%eax,%eax,2)
add    $0x30708,%eax
add    %bl,(%eax)
inc    %eax
add    $0x40708,%eax
add    %bl,(%eax,%eax,2)
add    $0x50708,%eax
add    %ah,(%eax)
inc    %eax
add    $0x70708,%eax
add    %ah,(%eax,%eax,2)
add    $0x80708,%eax
add    %ch,(%eax)
inc    %eax
add    $0x90708,%eax
add    %ch,(%eax,%eax,2)
add    $0xa0708,%eax
add    %dh,(%eax)
inc    %eax
add    $0xb0708,%eax
add    %dh,(%eax,%eax,2)
add    $0xc0708,%eax
add    %bh,(%eax)
inc    %eax
add    $0xd0708,%eax
add    %bh,(%eax,%eax,2)
add    $0xe0708,%eax
add    %al,0x40(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%eax,2)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x40(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%eax,2)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x40(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%eax,2)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x40(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%eax,2)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
inc    %eax
add    $0x170708,%eax
add    %ah,0x5(%eax,%eax,2)
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,0x40(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%eax,2)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x40(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%eax,2)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x40(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%eax,2)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
addb   $0x8,0x5(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
test   %al,0x5(%eax)
or     %al,(%edi)
and    %al,(%eax)
add    %cl,0x7080540(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%eax,2)
add    %al,(%eax)
nop
inc    %eax
add    $0x230708,%eax
add    %dl,0x24070805(%eax,%eax,2)
add    %al,(%eax)
cwtl
inc    %eax
add    $0x250708,%eax
add    %bl,0x26070805(%eax,%eax,2)
add    %al,(%eax)
mov    0x7080540,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %eax
add    $0x280708,%eax
add    %ch,0x7080540(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070805(%eax,%eax,2)
add    %al,(%eax)
mov    $0x40,%al
add    $0x2b0708,%eax
add    %dh,0x2c070805(%eax,%eax,2)
add    %al,(%eax)
mov    $0x7080540,%eax
sub    $0x40bc0000,%eax
add    $0x2e0708,%eax
add    %al,%al
inc    %eax
add    $0x2f0708,%eax
add    %al,%ah
inc    %eax
add    $0x300708,%eax
add    %cl,%al
inc    %eax
add    $0x310708,%eax
add    %cl,%ah
inc    %eax
add    $0x320708,%eax
add    %dl,%al
inc    %eax
add    $0x330708,%eax
add    %dl,%ah
inc    %eax
add    $0x340708,%eax
add    %bl,%al
inc    %eax
add    $0x350708,%eax
add    %bl,%ah
inc    %eax
add    $0x360708,%eax
add    %ah,%al
inc    %eax
add    $0x370708,%eax
add    %ah,%ah
inc    %eax
add    $0x380708,%eax
add    %ch,%al
inc    %eax
add    $0x390708,%eax
add    %ch,%ah
inc    %eax
add    $0x3a0708,%eax
add    %dh,%al
inc    %eax
add    $0x3c0708,%eax
add    %dh,%ah
inc    %eax
add    $0x3d0708,%eax
add    %bh,%al
inc    %eax
add    $0x3e0708,%eax
add    %bh,%ah
inc    %eax
add    $0x3f0708,%eax
add    %al,(%eax)
inc    %ecx
add    $0x410708,%eax
add    %al,(%ecx,%eax,2)
add    $0x420708,%eax
add    %cl,(%eax)
inc    %ecx
add    $0x430708,%eax
add    %cl,(%ecx,%eax,2)
add    $0x440708,%eax
add    %dl,(%eax)
inc    %ecx
add    $0x450708,%eax
add    %dl,(%ecx,%eax,2)
add    $0x460708,%eax
add    %bl,(%eax)
inc    %ecx
add    $0x470708,%eax
add    %bl,(%ecx,%eax,2)
add    $0x480708,%eax
add    %ah,(%eax)
inc    %ecx
add    $0x490708,%eax
add    %ah,(%ecx,%eax,2)
add    $0x4a0708,%eax
push   %ebx
sub    $0x8,%esp
call   8049750 <fchmod@plt+0x3a0>
add    $0xb0db,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048f3a <_init+0x1e>
call   8049140 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8054004
jmp    *0x8054008
add    %al,(%eax)
jmp    *0x805400c
push   $0x0
jmp    8048f40 <_init+0x24>
jmp    *0x8054010
push   $0x8
jmp    8048f40 <_init+0x24>
jmp    *0x8054014
push   $0x10
jmp    8048f40 <_init+0x24>
jmp    *0x8054018
push   $0x18
jmp    8048f40 <_init+0x24>
jmp    *0x805401c
push   $0x20
jmp    8048f40 <_init+0x24>
jmp    *0x8054020
push   $0x28
jmp    8048f40 <_init+0x24>
jmp    *0x8054024
push   $0x30
jmp    8048f40 <_init+0x24>
jmp    *0x8054028
push   $0x38
jmp    8048f40 <_init+0x24>
jmp    *0x805402c
push   $0x40
jmp    8048f40 <_init+0x24>
jmp    *0x8054030
push   $0x48
jmp    8048f40 <_init+0x24>
jmp    *0x8054034
push   $0x50
jmp    8048f40 <_init+0x24>
jmp    *0x8054038
push   $0x58
jmp    8048f40 <_init+0x24>
jmp    *0x805403c
push   $0x60
jmp    8048f40 <_init+0x24>
jmp    *0x8054040
push   $0x68
jmp    8048f40 <_init+0x24>
jmp    *0x8054044
push   $0x70
jmp    8048f40 <_init+0x24>
jmp    *0x8054048
push   $0x78
jmp    8048f40 <_init+0x24>
jmp    *0x805404c
push   $0x80
jmp    8048f40 <_init+0x24>
jmp    *0x8054050
push   $0x88
jmp    8048f40 <_init+0x24>
jmp    *0x8054054
push   $0x90
jmp    8048f40 <_init+0x24>
jmp    *0x8054058
push   $0x98
jmp    8048f40 <_init+0x24>
jmp    *0x805405c
push   $0xa0
jmp    8048f40 <_init+0x24>
jmp    *0x8054060
push   $0xa8
jmp    8048f40 <_init+0x24>
jmp    *0x8054064
push   $0xb0
jmp    8048f40 <_init+0x24>
jmp    *0x8054068
push   $0xb8
jmp    8048f40 <_init+0x24>
jmp    *0x805406c
push   $0xc0
jmp    8048f40 <_init+0x24>
jmp    *0x8054070
push   $0xc8
jmp    8048f40 <_init+0x24>
jmp    *0x8054074
push   $0xd0
jmp    8048f40 <_init+0x24>
jmp    *0x8054078
push   $0xd8
jmp    8048f40 <_init+0x24>
jmp    *0x805407c
push   $0xe0
jmp    8048f40 <_init+0x24>
jmp    *0x8054080
push   $0xe8
jmp    8048f40 <_init+0x24>
jmp    *0x8054084
push   $0xf0
jmp    8048f40 <_init+0x24>
jmp    *0x8054088
push   $0xf8
jmp    8048f40 <_init+0x24>
jmp    *0x805408c
push   $0x100
jmp    8048f40 <_init+0x24>
jmp    *0x8054090
push   $0x108
jmp    8048f40 <_init+0x24>
jmp    *0x8054094
push   $0x110
jmp    8048f40 <_init+0x24>
jmp    *0x8054098
push   $0x118
jmp    8048f40 <_init+0x24>
jmp    *0x805409c
push   $0x120
jmp    8048f40 <_init+0x24>
jmp    *0x80540a0
push   $0x128
jmp    8048f40 <_init+0x24>
jmp    *0x80540a4
push   $0x130
jmp    8048f40 <_init+0x24>
jmp    *0x80540a8
push   $0x138
jmp    8048f40 <_init+0x24>
jmp    *0x80540ac
push   $0x140
jmp    8048f40 <_init+0x24>
jmp    *0x80540b0
push   $0x148
jmp    8048f40 <_init+0x24>
jmp    *0x80540b4
push   $0x150
jmp    8048f40 <_init+0x24>
jmp    *0x80540b8
push   $0x158
jmp    8048f40 <_init+0x24>
jmp    *0x80540bc
push   $0x160
jmp    8048f40 <_init+0x24>
jmp    *0x80540c0
push   $0x168
jmp    8048f40 <_init+0x24>
jmp    *0x80540c4
push   $0x170
jmp    8048f40 <_init+0x24>
jmp    *0x80540c8
push   $0x178
jmp    8048f40 <_init+0x24>
jmp    *0x80540cc
push   $0x180
jmp    8048f40 <_init+0x24>
jmp    *0x80540d0
push   $0x188
jmp    8048f40 <_init+0x24>
jmp    *0x80540d4
push   $0x190
jmp    8048f40 <_init+0x24>
jmp    *0x80540d8
push   $0x198
jmp    8048f40 <_init+0x24>
jmp    *0x80540dc
push   $0x1a0
jmp    8048f40 <_init+0x24>
jmp    *0x80540e0
push   $0x1a8
jmp    8048f40 <_init+0x24>
jmp    *0x80540e4
push   $0x1b0
jmp    8048f40 <_init+0x24>
jmp    *0x80540e8
push   $0x1b8
jmp    8048f40 <_init+0x24>
jmp    *0x80540ec
push   $0x1c0
jmp    8048f40 <_init+0x24>
jmp    *0x80540f0
push   $0x1c8
jmp    8048f40 <_init+0x24>
jmp    *0x80540f4
push   $0x1d0
jmp    8048f40 <_init+0x24>
jmp    *0x80540f8
push   $0x1d8
jmp    8048f40 <_init+0x24>
jmp    *0x80540fc
push   $0x1e0
jmp    8048f40 <_init+0x24>
jmp    *0x8054100
push   $0x1e8
jmp    8048f40 <_init+0x24>
jmp    *0x8054104
push   $0x1f0
jmp    8048f40 <_init+0x24>
jmp    *0x8054108
push   $0x1f8
jmp    8048f40 <_init+0x24>
jmp    *0x805410c
push   $0x200
jmp    8048f40 <_init+0x24>
jmp    *0x8054110
push   $0x208
jmp    8048f40 <_init+0x24>
jmp    *0x8054114
push   $0x210
jmp    8048f40 <_init+0x24>
jmp    *0x8054118
push   $0x218
jmp    8048f40 <_init+0x24>
jmp    *0x805411c
push   $0x220
jmp    8048f40 <_init+0x24>
jmp    *0x8054120
push   $0x228
jmp    8048f40 <_init+0x24>
jmp    *0x8054124
push   $0x230
jmp    8048f40 <_init+0x24>
push   %ebp
mov    %esp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x40,%esp
mov    0xc(%ebp),%ebx
movl   $0x0,0x2c(%esp)
movl   $0x1ff,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    (%ebx),%eax
movl   $0x0,0x3c(%esp)
mov    %eax,(%esp)
call   804a6e0 <fchmod@plt+0x1330>
movl   $0x8050c63,0x4(%esp)
movl   $0x6,(%esp)
call   80492a0 <setlocale@plt>
movl   $0x8050579,0x4(%esp)
movl   $0x805056b,(%esp)
call   8049310 <bindtextdomain@plt>
movl   $0x805056b,(%esp)
call   8049050 <textdomain@plt>
movl   $0x8049c80,(%esp)
call   8050120 <fchmod@plt+0x6d70>
mov    0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8050620,0xc(%esp)
movl   $0x80505b6,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049180 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804954c <fchmod@plt+0x19c>
cmp    $0x5a,%eax
je     8049541 <fchmod@plt+0x191>
jle    80494a8 <fchmod@plt+0xf8>
cmp    $0x70,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     8049534 <fchmod@plt+0x184>
cmp    $0x76,%eax
je     8049504 <fchmod@plt+0x154>
cmp    $0x6d,%eax
xchg   %ax,%ax
je     8049529 <fchmod@plt+0x179>
movl   $0x1,(%esp)
call   8049910 <fchmod@plt+0x560>
lea    0x0(%esi),%esi
cmp    $0xffffff7d,%eax
je     80494c2 <fchmod@plt+0x112>
cmp    $0xffffff7e,%eax
jne    8049496 <fchmod@plt+0xe6>
movl   $0x0,(%esp)
call   8049910 <fchmod@plt+0x560>
mov    0x8054148,%eax
movl   $0x0,0x14(%esp)
movl   $0x80505a0,0x10(%esp)
movl   $0x8050567,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x8054200,%eax
movl   $0x80505b0,0x4(%esp)
mov    %eax,(%esp)
call   804c800 <fchmod@plt+0x3450>
movl   $0x0,(%esp)
call   8049150 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x805058b,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %eax,0x3c(%esp)
jmp    804943d <fchmod@plt+0x8d>
mov    0x8054204,%edi
jmp    804943d <fchmod@plt+0x8d>
movl   $0x80498c0,0x2c(%esp)
jmp    804943d <fchmod@plt+0x8d>
mov    0x8054204,%esi
jmp    804943d <fchmod@plt+0x8d>
mov    0x8(%ebp),%eax
cmp    %eax,0x80541e0
je     804961c <fchmod@plt+0x26c>
test   %esi,%esi
je     804956f <fchmod@plt+0x1bf>
mov    %esi,(%esp)
call   80491d0 <setfscreatecon@plt>
test   %eax,%eax
js     8049687 <fchmod@plt+0x2d7>
cmpl   $0x0,0x2c(%esp)
je     8049655 <fchmod@plt+0x2a5>
movl   $0x0,(%esp)
call   8049360 <umask@plt>
mov    %eax,%esi
not    %eax
mov    %eax,%edx
and    $0x13f,%edx
or     $0xc0,%dl
test   %edi,%edi
mov    %edx,0x30(%esp)
je     8049679 <fchmod@plt+0x2c9>
mov    %edi,(%esp)
call   804a1e0 <fchmod@plt+0xe30>
test   %eax,%eax
mov    %eax,%edx
je     80496d9 <fchmod@plt+0x329>
lea    0x38(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x1ff,(%esp)
mov    %edx,0x1c(%esp)
call   804a570 <fchmod@plt+0x11c0>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x34(%esp)
call   8048fc0 <free@plt>
mov    0x80541e0,%eax
lea    0x2c(%esp),%edx
mov    0x8(%ebp),%ecx
mov    %edx,0xc(%esp)
movl   $0x8049820,0x8(%esp)
lea    (%ebx,%eax,4),%edx
sub    %eax,%ecx
mov    %edx,0x4(%esp)
mov    %ecx,(%esp)
call   804c0b0 <fchmod@plt+0x2d00>
mov    %eax,(%esp)
call   8049150 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x80505bd,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80490f0 <error@plt>
jmp    8049496 <fchmod@plt+0xe6>
test   %edi,%edi
je     80495eb <fchmod@plt+0x23b>
movl   $0x0,(%esp)
call   8049360 <umask@plt>
mov    %eax,%esi
not    %eax
and    $0x13f,%eax
or     $0xc0,%al
mov    %eax,0x30(%esp)
jmp    80495a1 <fchmod@plt+0x1f1>
and    $0x1ff,%eax
mov    %eax,0x34(%esp)
jmp    80495eb <fchmod@plt+0x23b>
mov    %esi,(%esp)
call   804bbf0 <fchmod@plt+0x2840>
movl   $0x5,0x8(%esp)
movl   $0x80504f4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8049030 <dcgettext@plt>
mov    %eax,%esi
call   8049230 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    %esi,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80490f0 <error@plt>
jmp    804956f <fchmod@plt+0x1bf>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   804bbf0 <fchmod@plt+0x2840>
movl   $0x5,0x8(%esp)
movl   $0x80505cd,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049030 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80490f0 <error@plt>
mov    0x1c(%esp),%edx
jmp    80495b3 <fchmod@plt+0x203>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8050110
push   $0x80500a0
push   %ecx
push   %esi
push   $0x80493c0
call   80491c0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80541a3,%eax
sub    $0x80541a0,%eax
cmp    $0x6,%eax
ja     8049770 <fchmod@plt+0x3c0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804976f <fchmod@plt+0x3bf>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80541a0,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80541a0,%eax
sub    $0x80541a0,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    80497a9 <fchmod@plt+0x3f9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     80497a8 <fchmod@plt+0x3f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80541a0,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8054208
jne    80497ec <fchmod@plt+0x43c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049760 <fchmod@plt+0x3b0>
movb   $0x1,0x8054208
leave
repz ret
xchg   %ax,%ax
mov    0x8053f08,%eax
test   %eax,%eax
je     8049818 <fchmod@plt+0x468>
mov    $0x0,%eax
test   %eax,%eax
je     8049818 <fchmod@plt+0x468>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8053f08,(%esp)
call   *%eax
leave
jmp    8049790 <fchmod@plt+0x3e0>
nop
jmp    8049790 <fchmod@plt+0x3e0>
xchg   %ax,%ax
nop
sub    $0x3c,%esp
mov    0x48(%esp),%eax
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x20(%esp)
movl   $0xffffffff,0x1c(%esp)
mov    0xc(%eax),%edx
movl   $0x8049880,0x14(%esp)
mov    %edx,0x18(%esp)
mov    0x8(%eax),%edx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049df0 <fchmod@plt+0xa40>
add    $0x3c,%esp
xor    $0x1,%eax
movzbl %al,%eax
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x10(%ebx),%eax
test   %eax,%eax
je     80498b3 <fchmod@plt+0x503>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804bbf0 <fchmod@plt+0x2840>
mov    %eax,0x8(%esp)
mov    0x10(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8054200,%eax
mov    %eax,(%esp)
call   8049be0 <fchmod@plt+0x830>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%ebx
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049220 <mkdir@plt>
test   %eax,%eax
jne    8049903 <fchmod@plt+0x553>
mov    0x4(%ebx),%eax
mov    0x20(%esp),%edx
mov    %ebx,0x4(%esp)
shr    $0x8,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049880 <fchmod@plt+0x4d0>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8054214,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     8049964 <fchmod@plt+0x5b4>
movl   $0x8050188,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80541a4,%eax
mov    %eax,(%esp)
call   8049300 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049150 <exit@plt>
movl   $0x80501b0,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
mov    0x8054200,%esi
movl   $0x5,0x8(%esp)
movl   $0x80501d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
mov    0x8054200,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050210,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
mov    0x8054200,%esi
movl   $0x5,0x8(%esp)
movl   $0x805025c,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
mov    0x8054200,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050398,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
mov    0x8054200,%esi
movl   $0x5,0x8(%esp)
movl   $0x80503c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
mov    0x8054214,%eax
mov    %eax,(%esp)
call   8049d50 <fchmod@plt+0x9a0>
movl   $0x5,0x8(%esp)
movl   $0x8050526,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049030 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x805053d,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8050553,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
movl   $0x8050400,0xc(%esp)
movl   $0x8050567,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
mov    0x8054200,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050428,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   80492a0 <setlocale@plt>
test   %eax,%eax
je     8049b57 <fchmod@plt+0x7a7>
movl   $0x3,0x8(%esp)
movl   $0x8050575,0x4(%esp)
mov    %eax,(%esp)
call   8049320 <strncmp@plt>
test   %eax,%eax
jne    8049b9b <fchmod@plt+0x7eb>
mov    0x8054214,%eax
mov    %eax,(%esp)
call   8049d50 <fchmod@plt+0x9a0>
movl   $0x5,0x8(%esp)
movl   $0x80504b0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049030 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
jmp    804995c <fchmod@plt+0x5ac>
mov    0x8054214,%eax
mov    %eax,(%esp)
call   8049d50 <fchmod@plt+0x9a0>
movl   $0x5,0x8(%esp)
movl   $0x8050468,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049030 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
jmp    8049b57 <fchmod@plt+0x7a7>
nop
push   %ebx
sub    $0x18,%esp
mov    0x8054214,%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   8049170 <fputs_unlocked@plt>
mov    %ebx,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8050690,(%esp)
call   8049250 <fwrite_unlocked@plt>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804cbb0 <fchmod@plt+0x3800>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    8049c47 <fchmod@plt+0x897>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0xa,(%eax)
add    $0x18,%esp
pop    %ebx
ret
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   80492c0 <__overflow@plt>
jmp    8049c42 <fchmod@plt+0x892>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8054210
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x805420c
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8054200,%eax
mov    %eax,(%esp)
call   804cca0 <fchmod@plt+0x38f0>
test   %eax,%eax
je     8049ca9 <fchmod@plt+0x8f9>
cmpb   $0x0,0x805420c
je     8049cc0 <fchmod@plt+0x910>
call   8049230 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8049cc0 <fchmod@plt+0x910>
mov    0x80541a4,%eax
mov    %eax,(%esp)
call   804cca0 <fchmod@plt+0x38f0>
test   %eax,%eax
jne    8049d18 <fchmod@plt+0x968>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x8050698,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8054210,%eax
test   %eax,%eax
je     8049d25 <fchmod@plt+0x975>
mov    %eax,(%esp)
call   804b9c0 <fchmod@plt+0x2610>
mov    %eax,%esi
call   8049230 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x80506a4,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80490f0 <error@plt>
mov    0x805414c,%eax
mov    %eax,(%esp)
call   8048fb0 <_exit@plt>
call   8049230 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x80506a8,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80490f0 <error@plt>
jmp    8049d18 <fchmod@plt+0x968>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    8049d6b <fchmod@plt+0x9bb>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8049d60 <fchmod@plt+0x9b0>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     8049d99 <fchmod@plt+0x9e9>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     8049d99 <fchmod@plt+0x9e9>
cmp    $0x2f,%cl
je     8049da0 <fchmod@plt+0x9f0>
test   %bl,%bl
je     8049d78 <fchmod@plt+0x9c8>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    8049d82 <fchmod@plt+0x9d2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8049d78 <fchmod@plt+0x9c8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
cmp    $0x1,%eax
jbe    8049dcf <fchmod@plt+0xa1f>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     8049dd8 <fchmod@plt+0xa28>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    8049dc5 <fchmod@plt+0xa15>
nop
jmp    8049dcf <fchmod@plt+0xa1f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%ebx
mov    0xd4(%esp),%edi
cmpb   $0x2f,(%ebx)
je     8049e1d <fchmod@plt+0xa6d>
mov    0xb4(%esp),%eax
cmpl   $0x4,(%eax)
je     8049fa8 <fchmod@plt+0xbf8>
mov    0xb8(%esp),%ecx
test   %ecx,%ecx
je     8049f38 <fchmod@plt+0xb88>
mov    0xbc(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0xb8(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x4(%esp)
call   804d120 <fchmod@plt+0x3d70>
test   %eax,%eax
mov    %eax,%esi
js     804a000 <fchmod@plt+0xc50>
cmpl   $0xffffffff,0xcc(%esp)
mov    0xc8(%esp),%ebp
mov    0xc0(%esp),%eax
sete   %cl
cmpl   $0xffffffff,0xd0(%esp)
sete   %dl
and    $0xc00,%ebp
and    $0x200,%eax
or     %eax,%ebp
sete   %al
and    %dl,%cl
mov    %eax,%ebp
mov    %cl,0x2a(%esp)
jne    8049f88 <fchmod@plt+0xbd8>
mov    0xc0(%esp),%eax
and    $0xffffffc0,%eax
mov    %eax,0x24(%esp)
mov    0x24(%esp),%eax
add    %ebx,%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049220 <mkdir@plt>
test   %eax,%eax
je     8049f40 <fchmod@plt+0xb90>
call   8049230 <__errno_location@plt>
mov    (%eax),%ebp
mov    %edi,%eax
test   %al,%al
je     804a020 <fchmod@plt+0xc70>
test   %ebp,%ebp
je     8049f78 <fchmod@plt+0xbc8>
cmp    $0x2,%ebp
jne    8049fb8 <fchmod@plt+0xc08>
mov    %ebx,(%esp)
call   804bbf0 <fchmod@plt+0x2840>
movl   $0x5,0x8(%esp)
movl   $0x80506ad,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049030 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   80490f0 <error@plt>
xor    %eax,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    8049e5f <fchmod@plt+0xaaf>
nop
mov    0xbc(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0xc4(%esp)
mov    0xc0(%esp),%eax
mov    %ebp,%edx
and    $0x100,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffffffe,%eax
add    $0x7,%eax
test   %dl,0x2a(%esp)
je     804a188 <fchmod@plt+0xdd8>
add    $0x9c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc0(%esp),%eax
mov    %ebp,%edx
and    $0xffffffed,%eax
test   %dl,%dl
cmovne 0xc0(%esp),%eax
mov    %eax,0x24(%esp)
jmp    8049eaf <fchmod@plt+0xaff>
nop
mov    0x4(%eax),%ebp
test   %ebp,%ebp
jne    8049ee7 <fchmod@plt+0xb37>
jmp    8049e1d <fchmod@plt+0xa6d>
mov    0xb8(%esp),%edx
test   %edx,%edx
je     8049ee7 <fchmod@plt+0xb37>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049350 <__xstat64@plt>
test   %eax,%eax
jne    8049ee7 <fchmod@plt+0xb37>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8049ee7 <fchmod@plt+0xb37>
jmp    8049f78 <fchmod@plt+0xbc8>
cmp    $0xffffffff,%eax
jne    8049f78 <fchmod@plt+0xbc8>
lea    0x0(%esi,%eiz,1),%esi
call   8049230 <__errno_location@plt>
mov    (%eax),%ebp
jmp    8049ee7 <fchmod@plt+0xb37>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x24(%esp)
mov    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0xb4(%esp),%eax
lea    0x30(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804bc40 <fchmod@plt+0x2890>
cmp    $0xffffffff,%eax
jl     8049f78 <fchmod@plt+0xbc8>
test   %eax,%eax
sete   0x2b(%esp)
call   8049230 <__errno_location@plt>
test   %ebp,%ebp
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x30(%esp),%eax
jne    804a100 <fchmod@plt+0xd50>
cmpb   $0x0,0x2b(%esp)
je     804a190 <fchmod@plt+0xde0>
test   %eax,%eax
jns    804a100 <fchmod@plt+0xd50>
testl  $0x100,0xc0(%esp)
00
je     804a100 <fchmod@plt+0xd50>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%esi
mov    %ebx,(%esp)
call   804bbf0 <fchmod@plt+0x2840>
mov    $0x80506e8,%edx
cmpb   $0x0,0x2a(%esp)
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    $0x80506c8,%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,%edx
test   %dl,%dl
jne    804a1b8 <fchmod@plt+0xe08>
mov    (%edi),%edx
mov    %eax,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
call   80490f0 <error@plt>
xor    %eax,%eax
jmp    8049f27 <fchmod@plt+0xb77>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc8(%esp),%edx
mov    $0x80506ab,%ecx
cmpb   $0x0,0x2b(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
mov    0xc0(%esp),%edx
cmovne %ecx,%esi
mov    %esi,0x4(%esp)
mov    %edx,0x14(%esp)
mov    0xd0(%esp),%edx
mov    %edx,0x10(%esp)
mov    0xcc(%esp),%edx
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x8(%esp)
call   804d270 <fchmod@plt+0x3ec0>
test   %eax,%eax
je     8049f78 <fchmod@plt+0xbc8>
test   %ebp,%ebp
je     804a17e <fchmod@plt+0xdce>
cmp    $0x2,%ebp
lea    0x0(%esi,%eiz,1),%esi
je     8049ee7 <fchmod@plt+0xb37>
mov    0xb8(%esp),%eax
test   %eax,%eax
je     8049ee7 <fchmod@plt+0xb37>
cmpl   $0x14,(%edi)
je     8049ee7 <fchmod@plt+0xb37>
xor    %esi,%esi
jmp    804a09d <fchmod@plt+0xced>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    804a02d <fchmod@plt+0xc7d>
nop
testb  $0x40,0xc0(%esp)
je     804a080 <fchmod@plt+0xcd0>
test   %eax,%eax
js     804a098 <fchmod@plt+0xce8>
mov    %eax,(%esp)
call   8049370 <close@plt>
xchg   %ax,%ax
jmp    804a098 <fchmod@plt+0xce8>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2b(%esp)
jne    804a1d1 <fchmod@plt+0xe21>
testb  $0x40,0xc0(%esp)
mov    0x2c(%esp),%edx
jne    804a0dd <fchmod@plt+0xd2d>
mov    0x34(%esp),%edx
jmp    804a0dd <fchmod@plt+0xd2d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
movsbl (%ebx),%eax
lea    -0x30(%eax),%edx
cmp    $0x7,%dl
mov    %ebx,%edx
jbe    804a290 <fchmod@plt+0xee0>
test   %al,%al
mov    $0x1,%esi
je     804a4bb <fchmod@plt+0x110b>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
mov    $0x1,%ecx
je     804a223 <fchmod@plt+0xe73>
and    $0xffffffef,%eax
xor    %ecx,%ecx
cmp    $0x2d,%al
sete   %cl
add    $0x1,%edx
movzbl (%edx),%eax
add    %ecx,%esi
test   %al,%al
jne    804a210 <fchmod@plt+0xe60>
cmp    $0xfffffff,%esi
ja     804a4fd <fchmod@plt+0x114d>
shl    $0x4,%esi
mov    %esi,(%esp)
xor    %ebp,%ebp
call   804c8f0 <fchmod@plt+0x3540>
mov    %eax,0xc(%esp)
xor    %edi,%edi
movzbl (%ebx),%eax
cmp    $0x61,%al
je     804a410 <fchmod@plt+0x1060>
jle    804a2b8 <fchmod@plt+0xf08>
cmp    $0x6f,%al
je     804a430 <fchmod@plt+0x1080>
cmp    $0x75,%al
je     804a428 <fchmod@plt+0x1078>
cmp    $0x67,%al
lea    0x0(%esi),%esi
je     804a420 <fchmod@plt+0x1070>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8048fc0 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    804a2a7 <fchmod@plt+0xef7>
lea    0x0(%esi,%eiz,1),%esi
movsbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x7,%cl
ja     804a438 <fchmod@plt+0x1088>
lea    -0x30(%eax,%esi,8),%esi
add    $0x1,%edx
cmp    $0xfff,%esi
jbe    804a298 <fchmod@plt+0xee8>
jmp    804a282 <fchmod@plt+0xed2>
cmp    $0x2d,%al
je     804a2c6 <fchmod@plt+0xf16>
cmp    $0x3d,%al
xchg   %ax,%ax
je     804a2c6 <fchmod@plt+0xf16>
cmp    $0x2b,%al
jne    804a276 <fchmod@plt+0xec6>
mov    %ebp,%esi
add    $0x1,%ebp
shl    $0x4,%esi
mov    %al,0xb(%esp)
add    0xc(%esp),%esi
jmp    804a332 <fchmod@plt+0xf82>
cmp    $0x6f,%cl
je     804a3f8 <fchmod@plt+0x1048>
cmp    $0x75,%cl
jne    804a380 <fchmod@plt+0xfd0>
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x1c0,%eax
movzbl 0xb(%esp),%ecx
mov    %dl,0x1(%esi)
mov    %eax,%edx
and    %edi,%edx
test   %edi,%edi
mov    %eax,0x8(%esi)
cmovne %edx,%eax
mov    %cl,(%esi)
mov    %edi,0x4(%esi)
mov    %eax,0xc(%esi)
movzbl (%ebx),%eax
cmp    $0x2b,%al
je     804a328 <fchmod@plt+0xf78>
mov    %eax,%edx
and    $0xffffffef,%edx
cmp    $0x2d,%dl
jne    804a4c4 <fchmod@plt+0x1114>
add    $0x10,%esi
add    $0x1,%ebp
mov    %al,0xb(%esp)
movsbl 0x1(%ebx),%ecx
lea    0x1(%ebx),%eax
cmp    $0x67,%cl
je     804a3e0 <fchmod@plt+0x1030>
jg     804a2d8 <fchmod@plt+0xf28>
lea    -0x30(%ecx),%edx
cmp    $0x7,%dl
ja     804a380 <fchmod@plt+0xfd0>
xor    %edx,%edx
xchg   %ax,%ax
jmp    804a367 <fchmod@plt+0xfb7>
lea    0x0(%esi),%esi
movsbl (%eax),%ecx
lea    -0x30(%ecx),%ebx
cmp    $0x7,%bl
ja     804a488 <fchmod@plt+0x10d8>
lea    -0x30(%ecx,%edx,8),%edx
add    $0x1,%eax
cmp    $0xfff,%edx
jbe    804a358 <fchmod@plt+0xfa8>
jmp    804a282 <fchmod@plt+0xed2>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebx
mov    $0x1,%edx
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
sub    $0x58,%ecx
cmp    $0x20,%cl
ja     804a2f7 <fchmod@plt+0xf47>
movzbl %cl,%ecx
jmp    *0x8050714(,%ecx,4)
xchg   %ax,%ax
mov    $0x2,%edx
lea    0x0(%esi),%esi
add    $0x1,%ebx
movzbl (%ebx),%ecx
jmp    804a390 <fchmod@plt+0xfe0>
or     $0x49,%eax
jmp    804a3b0 <fchmod@plt+0x1000>
lea    0x0(%esi),%esi
or     $0x92,%al
jmp    804a3b0 <fchmod@plt+0x1000>
lea    0x0(%esi,%eiz,1),%esi
or     $0x2,%ah
jmp    804a3b0 <fchmod@plt+0x1000>
lea    0x0(%esi),%esi
or     $0xc,%ah
jmp    804a3b0 <fchmod@plt+0x1000>
lea    0x0(%esi),%esi
or     $0x124,%eax
jmp    804a3b0 <fchmod@plt+0x1000>
nop
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x38,%eax
jmp    804a2f7 <fchmod@plt+0xf47>
lea    0x0(%esi),%esi
add    $0x2,%ebx
mov    $0x3,%edx
mov    $0x7,%eax
jmp    804a2f7 <fchmod@plt+0xf47>
lea    0x0(%esi),%esi
mov    $0xfff,%edi
add    $0x1,%ebx
jmp    804a24e <fchmod@plt+0xe9e>
lea    0x0(%esi),%esi
or     $0x438,%edi
jmp    804a415 <fchmod@plt+0x1065>
or     $0x9c0,%edi
jmp    804a415 <fchmod@plt+0x1065>
or     $0x207,%edi
jmp    804a415 <fchmod@plt+0x1065>
test   %al,%al
jne    804a282 <fchmod@plt+0xed2>
sub    %ebx,%edx
mov    $0xfff,%ebx
cmp    $0x4,%edx
jg     804a45a <fchmod@plt+0x10aa>
mov    %esi,%ebx
and    $0xc00,%ebx
or     $0x3ff,%ebx
movl   $0x20,(%esp)
call   804c8f0 <fchmod@plt+0x3540>
movb   $0x3d,(%eax)
movb   $0x1,0x1(%eax)
movl   $0xfff,0x4(%eax)
mov    %esi,0x8(%eax)
mov    %ebx,0xc(%eax)
movb   $0x0,0x11(%eax)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %edi,%edi
jne    804a282 <fchmod@plt+0xed2>
cmp    $0x2c,%cl
jne    804a4d0 <fchmod@plt+0x1120>
movzbl 0xb(%esp),%ebx
mov    $0xfff,%edi
movb   $0x1,0x1(%esi)
movl   $0xfff,0x4(%esi)
mov    %edx,0x8(%esi)
mov    %bl,(%esi)
mov    %eax,%ebx
mov    $0xfff,%eax
jmp    804a310 <fchmod@plt+0xf60>
mov    $0x10,%si
jmp    804a23e <fchmod@plt+0xe8e>
cmp    $0x2c,%al
jne    804a4e0 <fchmod@plt+0x1130>
add    $0x1,%ebx
jmp    804a24c <fchmod@plt+0xe9c>
test   %cl,%cl
je     804a495 <fchmod@plt+0x10e5>
jmp    804a282 <fchmod@plt+0xed2>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    804a276 <fchmod@plt+0xec6>
mov    0xc(%esp),%edi
mov    %ebp,%eax
shl    $0x4,%eax
movb   $0x0,0x1(%edi,%eax,1)
mov    %edi,%eax
jmp    804a284 <fchmod@plt+0xed4>
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x78,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049350 <__xstat64@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804a567 <fchmod@plt+0x11b7>
movl   $0x20,(%esp)
mov    0x20(%esp),%ebx
call   804c8f0 <fchmod@plt+0x3540>
movb   $0x3d,(%eax)
mov    %eax,%edx
movb   $0x1,0x1(%eax)
movl   $0xfff,0x4(%eax)
mov    %ebx,0x8(%eax)
movl   $0xfff,0xc(%eax)
movb   $0x0,0x11(%eax)
add    $0x78,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xd,%esp
mov    0x2d(%esp),%ecx
mov    0x21(%esp),%eax
movzbl 0x25(%esp),%edx
movl   $0x0,0x5(%esp)
movzbl 0x1(%ecx),%esi
and    $0xfff,%eax
mov    %dl,(%esp)
mov    %esi,%ebx
test   %bl,%bl
je     804a6b4 <fchmod@plt+0x1304>
movzbl %dl,%edi
mov    %edi,0x9(%esp)
mov    0x29(%esp),%edi
mov    %eax,0x21(%esp)
not    %edi
mov    %edi,0x1(%esp)
jmp    804a643 <fchmod@plt+0x1293>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3,%al
jne    804a607 <fchmod@plt+0x1257>
and    0x21(%esp),%ebx
mov    %ebx,%ebp
and    $0x124,%ebx
cmp    $0x1,%ebx
mov    %ebp,%ebx
sbb    %esi,%esi
and    $0x92,%ebx
not    %esi
and    $0x124,%esi
cmp    $0x1,%ebx
sbb    %ebx,%ebx
not    %ebx
and    $0x92,%ebx
or     %esi,%ebx
mov    %ebp,%esi
and    $0x49,%esi
cmp    $0x1,%esi
sbb    %esi,%esi
not    %esi
and    $0x49,%esi
or     %esi,%ebx
or     %ebp,%ebx
mov    0x1(%esp),%ebp
mov    %edx,%esi
test   %edi,%edi
not    %esi
cmovne %edi,%ebp
and    %ebx,%esi
movzbl (%ecx),%ebx
and    %ebp,%esi
cmp    $0x2d,%bl
je     804a6d0 <fchmod@plt+0x1320>
cmp    $0x3d,%bl
je     804a680 <fchmod@plt+0x12d0>
cmp    $0x2b,%bl
jne    804a636 <fchmod@plt+0x1286>
or     %esi,0x5(%esp)
or     %esi,0x21(%esp)
add    $0x10,%ecx
movzbl 0x1(%ecx),%esi
mov    %esi,%eax
test   %al,%al
je     804a6b0 <fchmod@plt+0x1300>
cmpb   $0x1,(%esp)
mov    %esi,%eax
mov    0xc(%ecx),%ebx
mov    0x4(%ecx),%edi
sbb    %edx,%edx
not    %edx
and    $0xc00,%edx
not    %ebx
and    %ebx,%edx
cmp    $0x2,%al
mov    0x8(%ecx),%ebx
jne    804a5c0 <fchmod@plt+0x1210>
mov    0x21(%esp),%ebp
mov    %ebx,%esi
or     $0x49,%esi
and    $0x49,%ebp
or     0x9(%esp),%ebp
cmovne %esi,%ebx
jmp    804a607 <fchmod@plt+0x1257>
lea    0x0(%esi),%esi
mov    %edi,%ebp
xor    %ebx,%ebx
not    %ebp
test   %edi,%edi
cmovne %ebp,%ebx
add    $0x10,%ecx
or     %edx,%ebx
and    %ebx,0x21(%esp)
mov    %ebx,%edx
or     %esi,0x21(%esp)
not    %edx
movzbl 0x1(%ecx),%esi
and    $0xfff,%edx
or     %edx,0x5(%esp)
mov    %esi,%eax
test   %al,%al
jne    804a643 <fchmod@plt+0x1293>
mov    0x21(%esp),%eax
mov    0x31(%esp),%edx
test   %edx,%edx
je     804a6c6 <fchmod@plt+0x1316>
mov    0x31(%esp),%edi
mov    0x5(%esp),%ecx
mov    %ecx,(%edi)
add    $0xd,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
or     %esi,0x5(%esp)
not    %esi
and    %esi,0x21(%esp)
jmp    804a636 <fchmod@plt+0x1286>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804a763 <fchmod@plt+0x13b3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   80492b0 <strrchr@plt>
test   %eax,%eax
je     804a74f <fchmod@plt+0x139f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804a74f <fchmod@plt+0x139f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x80507d0,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804a74f <fchmod@plt+0x139f>
mov    $0x3,%ecx
mov    $0x80507d8,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804a74f <fchmod@plt+0x139f>
lea    0x4(%eax),%ebx
mov    %ebx,0x80541a0
mov    %ebx,0x8054214
mov    %ebx,0x80541c0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80541a4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8050798,(%esp)
mov    %eax,0xc(%esp)
call   8049070 <fwrite@plt>
call   8049340 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     804a7b1 <fchmod@plt+0x1401>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8049340 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     804a7f0 <fchmod@plt+0x1440>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804cd60 <fchmod@plt+0x39b0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    804a858 <fchmod@plt+0x14a8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    804a840 <fchmod@plt+0x1490>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x2d,0x3(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x38,0x4(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x0,0x5(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x60,(%esi)
mov    $0x80507eb,%eax
mov    $0x80507dc,%edx
cmovne %edx,%eax
jmp    804a7e8 <fchmod@plt+0x1438>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80507e5,%eax
cmp    $0x7,%edi
mov    $0x80507e3,%edx
cmovne %edx,%eax
jmp    804a7e8 <fchmod@plt+0x1438>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    804a840 <fchmod@plt+0x1490>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x31,0x2(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x38,0x3(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x30,0x4(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x33,0x5(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x30,0x6(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x0,0x7(%eax)
jne    804a840 <fchmod@plt+0x1490>
cmpb   $0x60,(%esi)
mov    $0x80507e7,%eax
mov    $0x80507e0,%edx
cmovne %edx,%eax
jmp    804a7e8 <fchmod@plt+0x1438>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8049090 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804b188 <fchmod@plt+0x1dd8>
mov    0x94(%esp),%eax
jmp    *0x8050840(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804af90 <fchmod@plt+0x1be0>
test   %al,%al
je     804afa3 <fchmod@plt+0x1bf3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804af78 <fchmod@plt+0x1bc8>
cmpb   $0x0,0x58(%esp)
je     804af78 <fchmod@plt+0x1bc8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804af78 <fchmod@plt+0x1bc8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049010 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804b010 <fchmod@plt+0x1c60>
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804ad28 <fchmod@plt+0x1978>
movzbl %bl,%eax
jmp    *0x8050864(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     804ab68 <fchmod@plt+0x17b8>
cmpl   $0x3,0x94(%esp)
jne    804aac8 <fchmod@plt+0x1718>
testb  $0x4,0x98(%esp)
je     804aac8 <fchmod@plt+0x1718>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    804aac8 <fchmod@plt+0x1718>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    804aac8 <fchmod@plt+0x1718>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     804aac8 <fchmod@plt+0x1718>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     804aac8 <fchmod@plt+0x1718>
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
cmp    %edi,%ebp
jae    804aa8e <fchmod@plt+0x16de>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804aa9e <fchmod@plt+0x16ee>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804aaae <fchmod@plt+0x16fe>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    804aabe <fchmod@plt+0x170e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     804aad6 <fchmod@plt+0x1726>
cmpb   $0x0,0x5a(%esp)
jne    804aafb <fchmod@plt+0x174b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     804aafb <fchmod@plt+0x174b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    804ab02 <fchmod@plt+0x1752>
cmpb   $0x0,0x24(%esp)
je     804ab18 <fchmod@plt+0x1768>
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
cmp    %edi,%ebp
jae    804ab15 <fchmod@plt+0x1765>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    804ab26 <fchmod@plt+0x1776>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    804a968 <fchmod@plt+0x15b8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804b178 <fchmod@plt+0x1dc8>
test   %al,%al
jne    804aac8 <fchmod@plt+0x1718>
test   %esi,%esi
jne    804aac8 <fchmod@plt+0x1718>
cmpl   $0x2,0x94(%esp)
jne    804aac8 <fchmod@plt+0x1718>
nop
cmpb   $0x0,0x2f(%esp)
je     804aac8 <fchmod@plt+0x1718>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804a8b0 <fchmod@plt+0x1500>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804b2a2 <fchmod@plt+0x1ef2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804b1eb <fchmod@plt+0x1e3b>
cmpb   $0x0,0x58(%esp)
je     804aac8 <fchmod@plt+0x1718>
mov    %eax,%ebx
jmp    804ab02 <fchmod@plt+0x1752>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    804abf3 <fchmod@plt+0x1843>
nop
mov    $0x66,%eax
jmp    804abf3 <fchmod@plt+0x1843>
nop
mov    $0x76,%eax
jmp    804abf3 <fchmod@plt+0x1843>
nop
mov    $0x6e,%eax
jmp    804abe5 <fchmod@plt+0x1835>
nop
mov    $0x74,%eax
jmp    804abe5 <fchmod@plt+0x1835>
nop
cmpb   $0x0,0x58(%esp)
je     804b160 <fchmod@plt+0x1db0>
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
cmp    %edi,%ebp
jae    804ac52 <fchmod@plt+0x18a2>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    804ac98 <fchmod@plt+0x18e8>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804ac98 <fchmod@plt+0x18e8>
cmp    %eax,%edi
ja     804b200 <fchmod@plt+0x1e50>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804ac8e <fchmod@plt+0x18de>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    804aad6 <fchmod@plt+0x1726>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    804abf3 <fchmod@plt+0x1843>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804acce <fchmod@plt+0x191e>
cmpb   $0x0,0x2f(%esp)
je     804acce <fchmod@plt+0x191e>
test   %dl,%dl
jne    804ab18 <fchmod@plt+0x1768>
mov    %ebx,%eax
jmp    804abe5 <fchmod@plt+0x1835>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    804aac8 <fchmod@plt+0x1718>
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
cmp    %edi,%ebp
jae    804acfd <fchmod@plt+0x194d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804ad0d <fchmod@plt+0x195d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804ad1d <fchmod@plt+0x196d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    804aac8 <fchmod@plt+0x1718>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804b020 <fchmod@plt+0x1c70>
call   8049390 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     804aac8 <fchmod@plt+0x1718>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804add4 <fchmod@plt+0x1a24>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
cmp    %edi,%ebp
jae    804ad83 <fchmod@plt+0x19d3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804ad96 <fchmod@plt+0x19e6>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804adac <fchmod@plt+0x19fc>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    804ab1b <fchmod@plt+0x176b>
cmp    %edi,%ebp
jae    804adc9 <fchmod@plt+0x1a19>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804ad70 <fchmod@plt+0x19c0>
cmpb   $0x0,0x24(%esp)
je     804adb5 <fchmod@plt+0x1a05>
cmp    %edi,%ebp
jae    804ade7 <fchmod@plt+0x1a37>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804adb5 <fchmod@plt+0x1a05>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804b2a7 <fchmod@plt+0x1ef7>
test   %edi,%edi
je     804b1ad <fchmod@plt+0x1dfd>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80507e5,0x3c(%esp)
movb   $0x22,(%eax)
jmp    804a948 <fchmod@plt+0x1598>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80507e5,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    804a948 <fchmod@plt+0x1598>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    804a948 <fchmod@plt+0x1598>
lea    0x0(%esi,%eiz,1),%esi
je     804aebc <fchmod@plt+0x1b0c>
mov    0x94(%esp),%edx
mov    $0x80507ef,%eax
call   804a7c0 <fchmod@plt+0x1410>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x80507e3,%eax
call   804a7c0 <fchmod@plt+0x1410>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804aeea <fchmod@plt+0x1b3a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804aeea <fchmod@plt+0x1b3a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804aedf <fchmod@plt+0x1b2f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804aed8 <fchmod@plt+0x1b28>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    804a948 <fchmod@plt+0x1598>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80507e3,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    804a948 <fchmod@plt+0x1598>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804b2c3 <fchmod@plt+0x1f13>
test   %edi,%edi
je     804b1cc <fchmod@plt+0x1e1c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x80507e3,0x3c(%esp)
movb   $0x27,(%eax)
jmp    804a948 <fchmod@plt+0x1598>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    804aa00 <fchmod@plt+0x1650>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    804a988 <fchmod@plt+0x15d8>
test   %ebp,%ebp
jne    804afbc <fchmod@plt+0x1c0c>
cmpl   $0x2,0x94(%esp)
jne    804afbc <fchmod@plt+0x1c0c>
cmpb   $0x0,0x2f(%esp)
jne    804ab78 <fchmod@plt+0x17c8>
cmpb   $0x0,0x2f(%esp)
jne    804aff2 <fchmod@plt+0x1c42>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804aff2 <fchmod@plt+0x1c42>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804aff2 <fchmod@plt+0x1c42>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804afe7 <fchmod@plt+0x1c37>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804afe0 <fchmod@plt+0x1c30>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    804abc2 <fchmod@plt+0x1812>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    804abc2 <fchmod@plt+0x1812>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    804aa00 <fchmod@plt+0x1650>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804b18d <fchmod@plt+0x1ddd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   80490d0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804b20d <fchmod@plt+0x1e5d>
cmp    $0xffffffff,%eax
je     804b228 <fchmod@plt+0x1e78>
cmp    $0xfffffffe,%eax
je     804b243 <fchmod@plt+0x1e93>
cmpb   $0x0,0x2f(%esp)
je     804b0ef <fchmod@plt+0x1d3f>
cmpl   $0x2,0x94(%esp)
jne    804b0ef <fchmod@plt+0x1d3f>
cmp    $0x1,%eax
je     804b0ef <fchmod@plt+0x1d3f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804b0e8 <fchmod@plt+0x1d38>
movzbl %al,%eax
jmp    *0x8050a60(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804b0d0 <fchmod@plt+0x1d20>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049060 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048fe0 <mbsinit@plt>
test   %eax,%eax
je     804b061 <fchmod@plt+0x1cb1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804ad53 <fchmod@plt+0x19a3>
and    0x58(%esp),%dl
jmp    804ad5d <fchmod@plt+0x19ad>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    804ab78 <fchmod@plt+0x17c8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     804aac8 <fchmod@plt+0x1718>
add    $0x1,%esi
jmp    804a968 <fchmod@plt+0x15b8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    804ab49 <fchmod@plt+0x1799>
call   8049340 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804b03e <fchmod@plt+0x1c8e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80507e5,0x3c(%esp)
jmp    804a948 <fchmod@plt+0x1598>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80507e3,0x3c(%esp)
jmp    804a948 <fchmod@plt+0x1598>
cmpb   $0x0,0x2f(%esp)
je     804abf3 <fchmod@plt+0x1843>
jmp    804ab78 <fchmod@plt+0x17c8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    804ac7e <fchmod@plt+0x18ce>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804b135 <fchmod@plt+0x1d85>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804b135 <fchmod@plt+0x1d85>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804b298 <fchmod@plt+0x1ee8>
cmpb   $0x0,(%eax)
je     804b298 <fchmod@plt+0x1ee8>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804b286 <fchmod@plt+0x1ed6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804b290 <fchmod@plt+0x1ee0>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804b280 <fchmod@plt+0x1ed0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804b135 <fchmod@plt+0x1d85>
call   8049040 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80507e5,0x3c(%esp)
jmp    804a948 <fchmod@plt+0x1598>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x80507e3,0x3c(%esp)
jmp    804a948 <fchmod@plt+0x1598>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049230 <__errno_location@plt>
test   %edi,%edi
mov    0x8054190,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804b46c <fchmod@plt+0x20bc>
cmp    0x805419c,%edi
jb     804b378 <fchmod@plt+0x1fc8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804b471 <fchmod@plt+0x20c1>
cmp    $0x8054194,%esi
lea    0x0(,%ebp,8),%eax
je     804b440 <fchmod@plt+0x2090>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804c960 <fchmod@plt+0x35b0>
mov    %eax,%esi
mov    %eax,0x8054190
mov    0x805419c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049200 <memset@plt>
mov    %ebp,0x805419c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804a8b0 <fchmod@plt+0x1500>
cmp    %eax,%ebp
ja     804b427 <fchmod@plt+0x2077>
lea    0x1(%eax),%ebp
cmp    $0x8054220,%esi
mov    %ebp,(%edi)
je     804b3e2 <fchmod@plt+0x2032>
mov    %esi,(%esp)
call   8048fc0 <free@plt>
mov    %ebp,(%esp)
call   804c8f0 <fchmod@plt+0x3540>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804a8b0 <fchmod@plt+0x1500>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804c960 <fchmod@plt+0x35b0>
mov    0x8054198,%edx
mov    %eax,%esi
mov    %eax,0x8054190
mov    0x8054194,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804b34f <fchmod@plt+0x1f9f>
call   8049340 <abort@plt>
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049230 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8054320,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804cb00 <fchmod@plt+0x3750>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8054320,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804b4e0 <fchmod@plt+0x2130>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8054320,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8054320,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8054320,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8054320,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804b593 <fchmod@plt+0x21e3>
test   %ecx,%ecx
je     804b593 <fchmod@plt+0x21e3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049340 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8054320,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049230 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804a8b0 <fchmod@plt+0x1500>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8054320,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049230 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   804a8b0 <fchmod@plt+0x1500>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804c8f0 <fchmod@plt+0x3540>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   804a8b0 <fchmod@plt+0x1500>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804b6c8 <fchmod@plt+0x2318>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b600 <fchmod@plt+0x2250>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805419c,%edi
mov    0x8054190,%esi
cmp    $0x1,%edi
jbe    804b743 <fchmod@plt+0x2393>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048fc0 <free@plt>
cmp    %edi,%ebx
jne    804b730 <fchmod@plt+0x2380>
mov    0x4(%esi),%eax
cmp    $0x8054220,%eax
je     804b769 <fchmod@plt+0x23b9>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
movl   $0x100,0x8054194
00
movl   $0x8054220,0x8054198
08
cmp    $0x8054194,%esi
je     804b783 <fchmod@plt+0x23d3>
mov    %esi,(%esp)
call   8048fc0 <free@plt>
movl   $0x8054194,0x8054190
08
movl   $0x1,0x805419c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8054320,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8054320,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8054320,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8054320,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804a790 <fchmod@plt+0x13e0>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804b2e0 <fchmod@plt+0x1f30>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804a790 <fchmod@plt+0x13e0>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804b2e0 <fchmod@plt+0x1f30>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804b820 <fchmod@plt+0x2470>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804b850 <fchmod@plt+0x24a0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x8054320,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x8054324,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x8054328,%eax
mov    %eax,0x18(%esp)
mov    0x805432c,%eax
mov    %eax,0x1c(%esp)
mov    0x8054330,%eax
mov    %eax,0x20(%esp)
mov    0x8054334,%eax
mov    %eax,0x24(%esp)
mov    0x8054338,%eax
mov    %eax,0x28(%esp)
mov    0x805433c,%eax
mov    %eax,0x2c(%esp)
mov    0x8054340,%eax
mov    %eax,0x30(%esp)
mov    0x8054344,%eax
mov    %eax,0x34(%esp)
mov    0x8054348,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805434c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804b2e0 <fchmod@plt+0x1f30>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b8e0 <fchmod@plt+0x2530>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804b8e0 <fchmod@plt+0x2530>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b8e0 <fchmod@plt+0x2530>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x8054320,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x8054324,%eax
mov    %eax,0x14(%esp)
mov    0x8054328,%eax
mov    %eax,0x18(%esp)
mov    0x805432c,%eax
mov    %eax,0x1c(%esp)
mov    0x8054330,%eax
mov    %eax,0x20(%esp)
mov    0x8054334,%eax
mov    %eax,0x24(%esp)
mov    0x8054338,%eax
mov    %eax,0x28(%esp)
mov    0x805433c,%eax
mov    %eax,0x2c(%esp)
mov    0x8054340,%eax
mov    %eax,0x30(%esp)
mov    0x8054344,%eax
mov    %eax,0x34(%esp)
mov    0x8054348,%eax
mov    %eax,0x38(%esp)
mov    0x805434c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804b560 <fchmod@plt+0x21b0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804b2e0 <fchmod@plt+0x1f30>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804ba20 <fchmod@plt+0x2670>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804ba20 <fchmod@plt+0x2670>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804ba20 <fchmod@plt+0x2670>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8054160,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8054160,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8054160,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8054160,0x4(%esp)
jmp    804b2e0 <fchmod@plt+0x1f30>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
cmpl   $0x4,(%edx)
je     804bc30 <fchmod@plt+0x2880>
repz ret
lea    0x0(%esi),%esi
mov    0x4(%edx),%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x3c(%esp),%ebx
mov    0x38(%esp),%esi
test   %ebx,%ebx
je     804bd88 <fchmod@plt+0x29d8>
mov    %esi,%eax
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80491e0 <__open64_2@plt>
mov    %eax,(%ebx)
mov    %eax,%edi
call   8049230 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x4(%ebx)
test   %edi,%edi
js     804bcc0 <fchmod@plt+0x2910>
and    $0x4,%esi
je     804bcd8 <fchmod@plt+0x2928>
test   %ebx,%ebx
sete   %al
xor    %ebp,%ebp
test   %edi,%edi
js     804bcb4 <fchmod@plt+0x2904>
test   %al,%al
je     804bcb4 <fchmod@plt+0x2904>
call   8049230 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    %edi,(%esp)
call   8049370 <close@plt>
mov    %esi,(%ebx)
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049230 <__errno_location@plt>
mov    $0xffffffff,%ebp
cmpl   $0xd,(%eax)
jne    804bcb4 <fchmod@plt+0x2904>
and    $0x2,%esi
jne    804bcb4 <fchmod@plt+0x2904>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    (%eax),%ecx
cmp    $0x5,%ecx
ja     804bea1 <fchmod@plt+0x2af1>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x36,%al
jne    804bd30 <fchmod@plt+0x2980>
test   $0x8,%al
jne    804bdb8 <fchmod@plt+0x2a08>
test   $0x1,%al
je     804bea1 <fchmod@plt+0x2af1>
movl   $0x0,0x4(%esp)
movl   $0x80506ab,(%esp)
call   804cd20 <fchmod@plt+0x3970>
test   %eax,%eax
js     804be68 <fchmod@plt+0x2ab8>
mov    0x30(%esp),%edx
movl   $0x1,(%edx)
mov    %eax,0x4(%edx)
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
js     804bd58 <fchmod@plt+0x29a8>
mov    %edi,(%esp)
call   80492e0 <fchdir@plt>
mov    %eax,%ebp
test   %ebp,%ebp
jne    804bd78 <fchmod@plt+0x29c8>
mov    0x30(%esp),%eax
cmpl   $0x5,(%eax)
ja     804be40 <fchmod@plt+0x2a90>
mov    (%eax),%eax
jmp    *0x8050b94(,%eax,4)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049020 <chdir@plt>
mov    %eax,%ebp
jmp    804bd3e <fchmod@plt+0x298e>
mov    0x30(%esp),%eax
movl   $0x2,(%eax)
lea    0x0(%esi),%esi
test   %ebx,%ebx
sete   %al
jmp    804bc99 <fchmod@plt+0x28e9>
lea    0x0(%esi),%esi
test   $0x1,%esi
mov    $0xffffffff,%edi
je     804bcd8 <fchmod@plt+0x2928>
mov    0x34(%esp),%eax
movl   $0x30900,0x4(%esp)
mov    %eax,(%esp)
call   80491e0 <__open64_2@plt>
mov    %eax,%edi
jmp    804bc89 <fchmod@plt+0x28d9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
jns    804bd30 <fchmod@plt+0x2980>
nop
call   8049270 <fork@plt>
mov    0x30(%esp),%edx
cmp    $0x0,%eax
mov    %eax,0x4(%edx)
je     804bd30 <fchmod@plt+0x2980>
mov    $0x1,%eax
mov    $0xfffffffe,%ebp
jg     804bc99 <fchmod@plt+0x28e9>
movl   $0x4,(%edx)
call   8049230 <__errno_location@plt>
mov    0x30(%esp),%edx
mov    (%eax),%eax
mov    %eax,0x4(%edx)
jmp    804bd30 <fchmod@plt+0x2980>
xchg   %ax,%ax
mov    0x30(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     804bd78 <fchmod@plt+0x29c8>
movl   $0x8050bfd,0xc(%esp)
movl   $0x93,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b51,(%esp)
call   8049380 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8050bfd,0xc(%esp)
movl   $0x97,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b90,(%esp)
call   8049380 <__assert_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
call   8049230 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x74,%eax
jne    804be8a <fchmod@plt+0x2ada>
mov    0x30(%esp),%eax
movl   $0x3,(%eax)
movl   $0xffffffff,0x4(%eax)
jmp    804bdc8 <fchmod@plt+0x2a18>
cmp    $0xd,%eax
je     804be74 <fchmod@plt+0x2ac4>
mov    0x30(%esp),%edx
movl   $0x4,(%edx)
mov    %eax,0x4(%edx)
jmp    804bd30 <fchmod@plt+0x2980>
movl   $0x8050bf1,0xc(%esp)
movl   $0x5b,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b90,(%esp)
call   8049380 <__assert_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
cmpl   $0x4,(%edi)
ja     804bfa0 <fchmod@plt+0x2bf0>
mov    (%edi),%eax
jmp    *0x8050bac(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%ebx
cmp    $0x0,%ebx
je     804c00c <fchmod@plt+0x2c5c>
lea    0x1c(%esp),%esi
jg     804bf3e <fchmod@plt+0x2b8e>
lea    0x0(%esi),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049230 <__errno_location@plt>
mov    %eax,%ebx
mov    0x4(%edi),%eax
mov    %eax,(%ebx)
add    $0x20,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049230 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    804bfe8 <fchmod@plt+0x2c38>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   80490a0 <waitpid@plt>
test   %eax,%eax
js     804bf30 <fchmod@plt+0x2b80>
mov    0x1c(%esp),%eax
movl   $0xffffffff,0x4(%edi)
mov    %eax,%edx
and    $0x7f,%edx
je     804bf74 <fchmod@plt+0x2bc4>
mov    %edx,(%esp)
call   8048f50 <raise@plt>
mov    0x1c(%esp),%eax
add    $0x20,%esp
movzbl %ah,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   80492e0 <fchdir@plt>
test   %eax,%eax
jne    804bfc4 <fchmod@plt+0x2c14>
movl   $0x1,(%edi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8050be2,0xc(%esp)
movl   $0xda,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b90,(%esp)
call   8049380 <__assert_fail@plt>
call   8049230 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8049370 <close@plt>
mov    %esi,%eax
movl   $0x4,(%edi)
mov    %esi,0x4(%edi)
jmp    804bf22 <fchmod@plt+0x2b72>
movl   $0x8050be2,0xc(%esp)
movl   $0xd0,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b64,(%esp)
call   8049380 <__assert_fail@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048fb0 <_exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
cmpl   $0x4,(%ebx)
ja     804c080 <fchmod@plt+0x2cd0>
mov    (%ebx),%eax
jmp    *0x8050bc0(,%eax,4)
xchg   %ax,%ax
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049370 <close@plt>
movl   $0x5,(%ebx)
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x4(%ebx),%eax
test   %eax,%eax
js     804c043 <fchmod@plt+0x2c93>
movl   $0x8050bd4,0xc(%esp)
movl   $0xef,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b80,(%esp)
call   8049380 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8050bd4,0xc(%esp)
movl   $0xf3,0x8(%esp)
movl   $0x8050b44,0x4(%esp)
movl   $0x8050b90,(%esp)
call   8049380 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x54(%esp),%ebp
movl   $0x0,0x28(%esp)
sub    $0x1,%ebx
jns    804c0e4 <fchmod@plt+0x2d34>
jmp    804c170 <fchmod@plt+0x2dc0>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
cmp    $0xffffffff,%ebx
je     804c170 <fchmod@plt+0x2dc0>
mov    0x0(%ebp,%ebx,4),%eax
cmpb   $0x2f,(%eax)
je     804c0d8 <fchmod@plt+0x2d28>
test   %ebx,%ebx
jle    804c170 <fchmod@plt+0x2dc0>
xor    %esi,%esi
xor    %eax,%eax
lea    0x28(%esp),%edx
xor    %edi,%edi
mov    %ebp,0x54(%esp)
mov    %esi,%ebp
mov    0x54(%esp),%esi
mov    %ebx,0x1c(%esp)
mov    %edx,%ebx
mov    %edx,0x18(%esp)
jmp    804c15a <fchmod@plt+0x2daa>
lea    0x0(%esi,%eiz,1),%esi
mov    0x5c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi,%edi,4),%eax
mov    %eax,(%esp)
call   *0x58(%esp)
cmp    %eax,%ebp
cmovl  %eax,%ebp
mov    0x4(%esi,%edi,4),%eax
cmpb   $0x2f,(%eax)
je     804c14d <fchmod@plt+0x2d9d>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   804bed0 <fchmod@plt+0x2b20>
cmp    %eax,%ebp
cmovl  %eax,%ebp
add    $0x1,%edi
cmp    0x1c(%esp),%edi
je     804c1c8 <fchmod@plt+0x2e18>
mov    0x28(%esp),%eax
cmp    $0x3,%eax
jne    804c118 <fchmod@plt+0x2d68>
mov    0x2c(%esp),%eax
test   %eax,%eax
jg     804c133 <fchmod@plt+0x2d83>
jmp    804c118 <fchmod@plt+0x2d68>
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%eax
xor    %esi,%esi
xor    %ebx,%ebx
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804c020 <fchmod@plt+0x2c70>
cmp    %ebx,0x50(%esp)
jle    804c1bc <fchmod@plt+0x2e0c>
mov    %ebp,%edi
mov    0x5c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%edi,%ebx,4),%eax
mov    %eax,(%esp)
call   *0x58(%esp)
cmp    %eax,%esi
cmovl  %eax,%esi
add    $0x1,%ebx
cmp    0x50(%esp),%ebx
jne    804c198 <fchmod@plt+0x2de8>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,0x54(%esp)
mov    0x1c(%esp),%ebx
mov    %ebp,%esi
mov    0x54(%esp),%ebp
jmp    804c17c <fchmod@plt+0x2dcc>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804c698 <fchmod@plt+0x32e8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8050c0a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049300 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8050c1d,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x8050ec0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049300 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8050c7c,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804c6c0 <fchmod@plt+0x3310>
jmp    *0x8050e80(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050de0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049030 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8049300 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050e10,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049030 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049300 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049340 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050c21,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049300 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050c31,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049300 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050c48,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049300 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050d48,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049030 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049300 <__fprintf_chk@plt>
jmp    804c33f <fchmod@plt+0x2f8f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050d68,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049030 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049300 <__fprintf_chk@plt>
jmp    804c33f <fchmod@plt+0x2f8f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050d8c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049030 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049300 <__fprintf_chk@plt>
jmp    804c33f <fchmod@plt+0x2f8f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050db4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049030 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049300 <__fprintf_chk@plt>
jmp    804c33f <fchmod@plt+0x2f8f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x8050c16,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049300 <__fprintf_chk@plt>
jmp    804c231 <fchmod@plt+0x2e81>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050e44,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049030 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804c3ca <fchmod@plt+0x301a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804c76a <fchmod@plt+0x33ba>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804c760 <fchmod@plt+0x33b0>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c1e0 <fchmod@plt+0x2e30>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804c7c2 <fchmod@plt+0x3412>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804c7b0 <fchmod@plt+0x3400>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804c1e0 <fchmod@plt+0x2e30>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c7a0 <fchmod@plt+0x33f0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x8050c64,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
movl   $0x805053d,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8050553,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
movl   $0x8050400,0xc(%esp)
movl   $0x8050567,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <__printf_chk@plt>
mov    0x8054200,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8050428,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049170 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049120 <malloc@plt>
test   %eax,%eax
je     804c909 <fchmod@plt+0x3559>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804c904 <fchmod@plt+0x3554>
lea    0x0(%esi),%esi
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804c949 <fchmod@plt+0x3599>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804c8f0 <fchmod@plt+0x3540>
call   804cb60 <fchmod@plt+0x37b0>
xchg   %ax,%ax
jmp    804c8f0 <fchmod@plt+0x3540>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804c988 <fchmod@plt+0x35d8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049110 <realloc@plt>
test   %eax,%eax
je     804c99b <fchmod@plt+0x35eb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804c970 <fchmod@plt+0x35c0>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804c980 <fchmod@plt+0x35d0>
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804c9e3 <fchmod@plt+0x3633>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804c960 <fchmod@plt+0x35b0>
call   804cb60 <fchmod@plt+0x37b0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804ca30 <fchmod@plt+0x3680>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804ca48 <fchmod@plt+0x3698>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804c960 <fchmod@plt+0x35b0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804ca19 <fchmod@plt+0x3669>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804ca19 <fchmod@plt+0x3669>
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804ca88 <fchmod@plt+0x36d8>
cmp    $0xaaaaaaa9,%eax
ja     804ca94 <fchmod@plt+0x36e4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804c960 <fchmod@plt+0x35b0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804ca70 <fchmod@plt+0x36c0>
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804c8f0 <fchmod@plt+0x3540>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049200 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80493a0 <calloc@plt>
test   %eax,%eax
je     804caef <fchmod@plt+0x373f>
add    $0x1c,%esp
ret
nop
call   804cb60 <fchmod@plt+0x37b0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804c8f0 <fchmod@plt+0x3540>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048fd0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80491a0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804cb00 <fchmod@plt+0x3750>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8050eef,0x4(%esp)
movl   $0x0,(%esp)
call   8049030 <dcgettext@plt>
mov    0x805414c,%edx
movl   $0x80506a8,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   80490f0 <error@plt>
call   8049340 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7fc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x7ec(%esp)
xor    %eax,%eax
mov    0x818(%esp),%eax
lea    0x1c(%esp),%edi
mov    %edi,(%esp)
mov    0x810(%esp),%ebp
movl   $0x7d0,0x18(%esp)
mov    %eax,0xc(%esp)
mov    0x814(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   804d640 <fchmod@plt+0x4290>
mov    0x18(%esp),%esi
test   %eax,%eax
mov    %eax,%ebx
je     804cc81 <fchmod@plt+0x38d1>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049070 <fwrite@plt>
cmp    %eax,%esi
ja     804cc58 <fchmod@plt+0x38a8>
cmp    %edi,%ebx
je     804cc34 <fchmod@plt+0x3884>
mov    %ebx,(%esp)
call   8048fc0 <free@plt>
test   %esi,%esi
js     804cc76 <fchmod@plt+0x38c6>
mov    0x7ec(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    804cc90 <fchmod@plt+0x38e0>
add    $0x7fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %edi,%ebx
mov    $0xffffffff,%esi
je     804cc38 <fchmod@plt+0x3888>
call   8049230 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%edi
mov    %ebx,(%esp)
call   8048fc0 <free@plt>
mov    %ebp,(%edi)
jmp    804cc38 <fchmod@plt+0x3888>
call   8049230 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    %ebp,(%esp)
mov    $0xffffffff,%esi
call   804d630 <fchmod@plt+0x4280>
jmp    804cc38 <fchmod@plt+0x3888>
call   8049040 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80490c0 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804d4a0 <fchmod@plt+0x40f0>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    804cce0 <fchmod@plt+0x3930>
test   %dl,%dl
je     804ccd7 <fchmod@plt+0x3927>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     804cd00 <fchmod@plt+0x3950>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    804ccd7 <fchmod@plt+0x3927>
call   8049230 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049230 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048f80 <open64@plt>
mov    %eax,(%esp)
call   804d460 <fchmod@plt+0x40b0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049290 <nl_langinfo@plt>
mov    0x8054350,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x8050c63,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804ce2c <fchmod@plt+0x3a7c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804cdf7 <fchmod@plt+0x3a47>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804cdd0 <fchmod@plt+0x3a20>
nop
mov    %ebp,(%esp)
call   80491a0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   80491a0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804ce28 <fchmod@plt+0x3a78>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048f70 <strcmp@plt>
test   %eax,%eax
je     804cdeb <fchmod@plt+0x3a3b>
cmp    $0x2a,%bl
jne    804cdb0 <fchmod@plt+0x3a00>
cmpb   $0x0,0x1(%ebp)
jne    804cdb0 <fchmod@plt+0x3a00>
mov    %ebp,(%esp)
call   80491a0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x8050f09,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804d0ed <fchmod@plt+0x3d3d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804cdf7 <fchmod@plt+0x3a47>
movl   $0x8050f0f,(%esp)
call   8049100 <getenv@plt>
test   %eax,%eax
je     804ce45 <fchmod@plt+0x3a95>
cmpb   $0x0,(%eax)
jne    804d053 <fchmod@plt+0x3ca3>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x8050f00,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804d044 <fchmod@plt+0x3c94>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049120 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804d0e3 <fchmod@plt+0x3d33>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804ceac <fchmod@plt+0x3afc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048f80 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804d028 <fchmod@plt+0x3c78>
movl   $0x80505b4,0x4(%esp)
mov    %eax,(%esp)
call   8049160 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d020 <fchmod@plt+0x3c70>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804d006 <fchmod@plt+0x3c56>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804cf10 <fchmod@plt+0x3b60>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804cf10 <fchmod@plt+0x3b60>
cmp    $0x23,%eax
je     804d07d <fchmod@plt+0x3ccd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049210 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8050f1f,0x4(%esp)
mov    %esi,(%esp)
call   8049190 <fscanf@plt>
cmp    $0x1,%eax
jle    804d0a0 <fchmod@plt+0x3cf0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   80491a0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804d0be <fchmod@plt+0x3d0e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049120 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804d0f2 <fchmod@plt+0x3d42>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   80490b0 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   80490b0 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804cf1c <fchmod@plt+0x3b6c>
mov    %esi,(%esp)
call   8049280 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804d0a0 <fchmod@plt+0x3cf0>
jmp    804cf25 <fchmod@plt+0x3b75>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049370 <close@plt>
mov    $0x8050c63,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    %ebp,0x8054350
jmp    804cd9f <fchmod@plt+0x39ef>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804ce6b <fchmod@plt+0x3abb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   80491a0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804d044 <fchmod@plt+0x3c94>
lea    -0x1(%eax),%eax
jmp    804ce54 <fchmod@plt+0x3aa4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804d097 <fchmod@plt+0x3ce7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804d10c <fchmod@plt+0x3d5c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804d078 <fchmod@plt+0x3cc8>
cmp    $0xffffffff,%eax
jne    804cf10 <fchmod@plt+0x3b60>
mov    %esi,(%esp)
call   804d4a0 <fchmod@plt+0x40f0>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804d028 <fchmod@plt+0x3c78>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804d02d <fchmod@plt+0x3c7d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049110 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804cfbc <fchmod@plt+0x3c0c>
mov    $0x8050c63,%ebp
jmp    804d039 <fchmod@plt+0x3c89>
call   8049040 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x8050c63,%ebp
call   8048fc0 <free@plt>
mov    %esi,(%esp)
call   804d4a0 <fchmod@plt+0x40f0>
jmp    804d02d <fchmod@plt+0x3c7d>
mov    %esi,(%esp)
call   8049280 <__uflow@plt>
jmp    804d092 <fchmod@plt+0x3ce2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
movb   $0x0,0x1f(%esp)
mov    %ebx,%edi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
movzbl -0x1(%ebx),%eax
test   %al,%al
je     804d1f8 <fchmod@plt+0x3e48>
movzbl (%ebx),%edx
cmp    $0x2f,%dl
je     804d208 <fchmod@plt+0x3e58>
cmp    $0x2f,%al
jne    804d138 <fchmod@plt+0x3d88>
test   %dl,%dl
je     804d138 <fchmod@plt+0x3d88>
test   %esi,%esi
lea    0x0(%esi),%esi
je     804d138 <fchmod@plt+0x3d88>
mov    %esi,%eax
sub    %edi,%eax
cmp    $0x1,%eax
je     804d228 <fchmod@plt+0x3e78>
cmp    $0x2,%eax
movb   $0x0,(%esi)
jne    804d180 <fchmod@plt+0x3dd0>
cmpb   $0x2e,(%edi)
je     804d250 <fchmod@plt+0x3ea0>
mov    0x4c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   *0x48(%esp)
test   %eax,%eax
je     804d218 <fchmod@plt+0x3e68>
cmp    $0x1,%eax
je     804d21d <fchmod@plt+0x3e6d>
xor    %ebp,%ebp
cmp    $0xffffffff,%eax
jne    804d1ae <fchmod@plt+0x3dfe>
call   8049230 <__errno_location@plt>
mov    (%eax),%ebp
xor    %eax,%eax
cmpb   $0x0,0x1f(%esp)
jne    804d268 <fchmod@plt+0x3eb8>
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804bc40 <fchmod@plt+0x2890>
cmp    $0xffffffff,%eax
je     804d238 <fchmod@plt+0x3e88>
test   %eax,%eax
movb   $0x2f,(%esi)
jne    804d238 <fchmod@plt+0x3e88>
mov    %ebx,%edi
add    $0x1,%ebx
movzbl -0x1(%ebx),%eax
test   %al,%al
jne    804d147 <fchmod@plt+0x3d97>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
sub    0x40(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x2f,%al
cmovne %ebx,%esi
jmp    804d138 <fchmod@plt+0x3d88>
lea    0x0(%esi),%esi
mov    $0x3,%eax
xor    %ebp,%ebp
movb   $0x1,0x1f(%esp)
jmp    804d1bb <fchmod@plt+0x3e0b>
xchg   %ax,%ax
cmpb   $0x2e,(%edi)
je     804d1e3 <fchmod@plt+0x3e33>
movb   $0x0,(%esi)
jmp    804d180 <fchmod@plt+0x3dd0>
lea    0x0(%esi),%esi
test   %ebp,%ebp
mov    %eax,%edi
je     804d1fe <fchmod@plt+0x3e4e>
call   8049230 <__errno_location@plt>
mov    %eax,%edx
mov    %edi,%eax
cmpl   $0x2,(%edx)
jne    804d1fe <fchmod@plt+0x3e4e>
mov    %ebp,(%edx)
jmp    804d1fe <fchmod@plt+0x3e4e>
cmpb   $0x2e,0x1(%edi)
jne    804d180 <fchmod@plt+0x3dd0>
xor    %ebp,%ebp
xor    %eax,%eax
movb   $0x0,0x1f(%esp)
jmp    804d1bb <fchmod@plt+0x3e0b>
mov    $0x1,%al
jmp    804d21f <fchmod@plt+0x3e6f>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
test   %esi,%esi
js     804d300 <fchmod@plt+0x3f50>
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049080 <__fxstat64@plt>
mov    %eax,%ebx
test   %ebx,%ebx
jne    804d2c2 <fchmod@plt+0x3f12>
mov    0x20(%esp),%edi
mov    %edi,%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804d320 <fchmod@plt+0x3f70>
call   8049230 <__errno_location@plt>
mov    $0xffffffff,%ebx
movl   $0x14,(%eax)
test   %esi,%esi
js     804d2dd <fchmod@plt+0x3f2d>
test   %ebx,%ebx
je     804d2e8 <fchmod@plt+0x3f38>
call   8049230 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%edi
mov    %esi,(%esp)
call   8049370 <close@plt>
mov    %ebp,(%edi)
add    $0x7c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
call   8049370 <close@plt>
add    $0x7c,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x94(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049350 <__xstat64@plt>
mov    %eax,%ebx
jmp    804d29c <fchmod@plt+0x3eec>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x9c(%esp)
je     804d3c8 <fchmod@plt+0x4018>
mov    0x9c(%esp),%eax
cmp    %eax,0x28(%esp)
je     804d3c8 <fchmod@plt+0x4018>
test   %esi,%esi
mov    0xa0(%esp),%eax
js     804d3f0 <fchmod@plt+0x4040>
mov    %eax,0x8(%esp)
mov    0x9c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80491b0 <fchown@plt>
test   %eax,%eax
jne    804d3e8 <fchmod@plt+0x4038>
test   $0x49,%edi
jne    804d420 <fchmod@plt+0x4070>
xor    %edx,%edx
mov    0xa4(%esp),%eax
xor    %edi,%eax
or     %edx,%eax
test   %eax,0xa8(%esp)
je     804d2c2 <fchmod@plt+0x3f12>
mov    0xa8(%esp),%eax
and    $0xfff,%edi
not    %eax
and    %eax,%edi
or     0xa4(%esp),%edi
test   %esi,%esi
js     804d437 <fchmod@plt+0x4087>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80493b0 <fchmod@plt>
mov    %eax,%ebx
jmp    804d2c6 <fchmod@plt+0x3f16>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0xa0(%esp)
je     804d375 <fchmod@plt+0x3fc5>
mov    0xa0(%esp),%eax
cmp    %eax,0x2c(%esp)
jne    804d33f <fchmod@plt+0x3f8f>
jmp    804d375 <fchmod@plt+0x3fc5>
lea    0x0(%esi),%esi
mov    %eax,%ebx
jmp    804d2c2 <fchmod@plt+0x3f12>
nop
mov    %eax,0x8(%esp)
mov    0x9c(%esp),%eax
cmpl   $0xffffffff,0x98(%esp)
mov    %eax,0x4(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
je     804d42d <fchmod@plt+0x407d>
call   80492d0 <lchown@plt>
jmp    804d365 <fchmod@plt+0x3fb5>
lea    0x0(%esi),%esi
mov    %edi,%edx
and    $0xc00,%edx
jmp    804d377 <fchmod@plt+0x3fc7>
call   8048f90 <chown@plt>
jmp    804d365 <fchmod@plt+0x3fb5>
mov    0x94(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049330 <chmod@plt>
mov    %eax,%ebx
jmp    804d2dd <fchmod@plt+0x3f2d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     804d48f <fchmod@plt+0x40df>
mov    %ebx,(%esp)
call   804f270 <fchmod@plt+0x5ec0>
mov    %eax,%edi
call   8049230 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049370 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049240 <fileno@plt>
test   %eax,%eax
js     804d528 <fchmod@plt+0x4178>
mov    %ebx,(%esp)
call   8049130 <__freading@plt>
test   %eax,%eax
jne    804d4f8 <fchmod@plt+0x4148>
mov    %ebx,(%esp)
call   804d540 <fchmod@plt+0x4190>
test   %eax,%eax
je     804d528 <fchmod@plt+0x4178>
call   8049230 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048ff0 <fclose@plt>
test   %edi,%edi
je     804d4ea <fchmod@plt+0x413a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049240 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   80492f0 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804d4c2 <fchmod@plt+0x4112>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048ff0 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804d558 <fchmod@plt+0x41a8>
mov    %ebx,(%esp)
call   8049130 <__freading@plt>
test   %eax,%eax
jne    804d568 <fchmod@plt+0x41b8>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048fa0 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804d558 <fchmod@plt+0x41a8>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804d5a0 <fchmod@plt+0x41f0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048fa0 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804d5e0 <fchmod@plt+0x4230>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049000 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804d5bf <fchmod@plt+0x420f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804d5bf <fchmod@plt+0x420f>
mov    %ebx,(%esp)
call   8049240 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   80492f0 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804d627 <fchmod@plt+0x4277>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804d61f <fchmod@plt+0x426f>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
orl    $0x20,(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   804f500 <fchmod@plt+0x6150>
test   %eax,%eax
js     804e740 <fchmod@plt+0x5390>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804f420 <fchmod@plt+0x6070>
test   %eax,%eax
js     804e938 <fchmod@plt+0x5588>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     804d878 <fchmod@plt+0x44c8>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     804d878 <fchmod@plt+0x44c8>
cmp    $0xf9f,%edx
ja     804e388 <fchmod@plt+0x4fd8>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4f4(%ebp)
00
test   %eax,%eax
je     804e3bb <fchmod@plt+0x500b>
mov    -0x4f0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4b4(%ebp)
mov    -0x418(%ebp),%eax
xor    %edx,%edx
mov    %edx,%edi
mov    %ebx,%edx
mov    -0x4bc(%ebp),%esi
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
je     804df0b <fchmod@plt+0x4b5b>
sub    %edx,%ebx
mov    %ebx,%eax
add    %edi,%eax
mov    %eax,%ecx
mov    $0xffffffff,%eax
cmovae %ecx,%eax
mov    -0x4b4(%ebp),%ecx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%ecx
jae    804e008 <fchmod@plt+0x4c58>
test   %ecx,%ecx
je     804dde0 <fchmod@plt+0x4a30>
js     804e920 <fchmod@plt+0x5570>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%ecx
cmp    %ecx,%eax
cmovb  %ecx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804e920 <fchmod@plt+0x5570>
cmp    -0x4bc(%ebp),%esi
sete   -0x4d8(%ebp)
test   %esi,%esi
je     804d7c5 <fchmod@plt+0x4415>
cmpb   $0x0,-0x4d8(%ebp)
je     804ddf0 <fchmod@plt+0x4a40>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     804e920 <fchmod@plt+0x5570>
test   %edi,%edi
jne    804e0c8 <fchmod@plt+0x4d18>
add    -0x4b0(%ebp),%edi
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8048fd0 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     804e980 <fchmod@plt+0x55d0>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     804de20 <fchmod@plt+0x4a70>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     804e358 <fchmod@plt+0x4fa8>
cmp    $0x6e,%dl
je     804e0a0 <fchmod@plt+0x4cf0>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    804d8e0 <fchmod@plt+0x4530>
cmp    $0x41,%dl
je     804d8e0 <fchmod@plt+0x4530>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    804d8f1 <fchmod@plt+0x4541>
lea    0x0(%esi,%eiz,1),%esi
call   8049230 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804d89b <fchmod@plt+0x44eb>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804d8b3 <fchmod@plt+0x4503>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%ebx
xor    %gs:0x14,%ebx
jne    804f24b <fchmod@plt+0x5e9b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     804e458 <fchmod@plt+0x50a8>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%ebx
mov    0x8(%eax),%eax
add    $0x1,%ebx
movb   $0x25,-0x1(%ebx)
test   $0x1,%al
je     804d91a <fchmod@plt+0x456a>
mov    -0x4c0(%ebp),%ecx
mov    %ecx,%ebx
add    $0x2,%ebx
movb   $0x27,0x1(%ecx)
test   $0x2,%al
je     804d924 <fchmod@plt+0x4574>
movb   $0x2d,(%ebx)
add    $0x1,%ebx
test   $0x4,%al
je     804d92e <fchmod@plt+0x457e>
movb   $0x2b,(%ebx)
add    $0x1,%ebx
test   $0x8,%al
je     804d938 <fchmod@plt+0x4588>
movb   $0x20,(%ebx)
add    $0x1,%ebx
test   $0x10,%al
je     804d942 <fchmod@plt+0x4592>
movb   $0x23,(%ebx)
add    $0x1,%ebx
test   $0x40,%al
je     804d94c <fchmod@plt+0x459c>
movb   $0x49,(%ebx)
add    $0x1,%ebx
test   $0x20,%al
je     804d956 <fchmod@plt+0x45a6>
movb   $0x30,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%esi
cmp    %esi,%eax
je     804d97a <fchmod@plt+0x45ca>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    -0x4ac(%ebp),%edi
mov    0x18(%edi),%eax
mov    0x1c(%edi),%esi
cmp    %esi,%eax
je     804d99e <fchmod@plt+0x45ee>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     804d9c4 <fchmod@plt+0x4614>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     804e110 <fchmod@plt+0x4d60>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
movzbl 0x24(%ecx),%eax
movb   $0x0,0x1(%ebx)
mov    %al,(%ebx)
mov    0x14(%ecx),%eax
cmp    $0xffffffff,%eax
je     804e380 <fchmod@plt+0x4fd0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804e358 <fchmod@plt+0x4fa8>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     804e370 <fchmod@plt+0x4fc0>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804e358 <fchmod@plt+0x4fa8>
mov    0x4(%eax),%eax
lea    0x1(%edx),%edi
mov    %edi,-0x4e8(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%edi
mov    %edi,%eax
add    $0x2,%eax
cmp    %eax,%edi
mov    %eax,%ecx
mov    %eax,-0x4ec(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804db29 <fchmod@plt+0x4779>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     804e7c7 <fchmod@plt+0x5417>
js     804dab4 <fchmod@plt+0x4704>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    804dac8 <fchmod@plt+0x4718>
call   8049230 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    804eb78 <fchmod@plt+0x57c8>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804d878 <fchmod@plt+0x44c8>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
jmp    804d883 <fchmod@plt+0x44d3>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     804da80 <fchmod@plt+0x46d0>
or     $0xffffffff,%eax
lea    0x0(%esi),%esi
mov    -0x4ec(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4bc(%ebp),%eax
mov    -0x4b0(%ebp),%edi
cmp    %eax,%edi
sete   %al
test   %edi,%edi
mov    %eax,%esi
je     804dafd <fchmod@plt+0x474d>
test   %al,%al
je     804e3d0 <fchmod@plt+0x5020>
mov    -0x4b4(%ebp),%eax
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804e420 <fchmod@plt+0x5070>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%edi
mov    -0x4b8(%ebp),%esi
movb   $0x0,(%edi,%esi,1)
call   8049230 <__errno_location@plt>
mov    -0x4b4(%ebp),%edi
mov    %ebx,-0x4b4(%ebp)
mov    %esi,%ebx
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4f8(%ebp)
mov    %edi,%esi
mov    $0x7fffffff,%eax
sub    %ebx,%esi
cmovs  %eax,%esi
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     804e358 <fchmod@plt+0x4fa8>
jmp    *0x8050f2c(,%eax,4)
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     804e040 <fchmod@plt+0x4c90>
cmp    $0x2,%ecx
jne    804dfc0 <fchmod@plt+0x4c10>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     804df20 <fchmod@plt+0x4b70>
cmp    %edx,%esi
jbe    804dc39 <fchmod@plt+0x4889>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%ebx,1)
jne    804e358 <fchmod@plt+0x4fa8>
cmp    %edx,%eax
jle    804dc45 <fchmod@plt+0x4895>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%esi
ja     804eb50 <fchmod@plt+0x57a0>
cmp    $0x7fffffff,%esi
je     804eba0 <fchmod@plt+0x57f0>
test   %edi,%edi
mov    $0xffffffff,%eax
lea    (%edi,%edi,1),%ecx
cmovs  %eax,%ecx
add    -0x4ec(%ebp),%edx
cmp    %edx,%ebx
ja     804dc7a <fchmod@plt+0x48ca>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%edi
jae    804db5a <fchmod@plt+0x47aa>
test   %edi,%edi
je     804e090 <fchmod@plt+0x4ce0>
js     804da8b <fchmod@plt+0x46db>
add    %edi,%edi
cmp    %eax,%edi
cmovb  %eax,%edi
cmp    $0xffffffff,%edi
je     804da8b <fchmod@plt+0x46db>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     804ddc8 <fchmod@plt+0x4a18>
test   %dl,%dl
jne    804ddc8 <fchmod@plt+0x4a18>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049110 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     804da8b <fchmod@plt+0x46db>
test   %dl,%dl
jne    804e3f0 <fchmod@plt+0x5040>
mov    %esi,-0x4b0(%ebp)
jmp    804db5a <fchmod@plt+0x47aa>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     804e308 <fchmod@plt+0x4f58>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    804e758 <fchmod@plt+0x53a8>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
jne    804dbbc <fchmod@plt+0x480c>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x1c(%esp)
jmp    804e04a <fchmod@plt+0x4c9a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049120 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
jmp    804dce1 <fchmod@plt+0x4931>
lea    0x0(%esi),%esi
movl   $0xc,-0x4b4(%ebp)
00
jmp    804d787 <fchmod@plt+0x43d7>
nop
mov    -0x4b4(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   8049110 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
jmp    804d7e5 <fchmod@plt+0x4435>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    804e358 <fchmod@plt+0x4fa8>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%edi
cmp    %edi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%edi
cmp    %edi,-0x4b4(%ebp)
jae    804ded2 <fchmod@plt+0x4b22>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    804e2d8 <fchmod@plt+0x4f28>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ebx
cmp    %ebx,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     804e360 <fchmod@plt+0x4fb0>
test   %bl,%bl
jne    804e360 <fchmod@plt+0x4fb0>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049110 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804e798 <fchmod@plt+0x53e8>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%ebx
mov    %eax,%esi
movb   $0x25,(%eax,%ebx,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%edx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
jne    804d74f <fchmod@plt+0x439f>
mov    %edi,-0x4b8(%ebp)
mov    %esi,-0x4b0(%ebp)
jmp    804d811 <fchmod@plt+0x4461>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    804e100 <fchmod@plt+0x4d50>
test   %eax,%eax
jns    804dc3d <fchmod@plt+0x488d>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    804e8b3 <fchmod@plt+0x5503>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804df60 <fchmod@plt+0x4bb0>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804df78 <fchmod@plt+0x4bc8>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804df90 <fchmod@plt+0x4be0>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
test   %ebx,%ebx
jne    804dfad <fchmod@plt+0x4bfd>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    804d8c1 <fchmod@plt+0x4511>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%ecx
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b0(%ebp)
jmp    804d7fb <fchmod@plt+0x444b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    804e20d <fchmod@plt+0x4e5d>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%edi
jmp    804dc92 <fchmod@plt+0x48e2>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%ebx
lea    -0x12(%ebx),%edx
cmp    $0x4,%edx
ja     804e358 <fchmod@plt+0x4fa8>
mov    0x4(%eax),%eax
jmp    *0x8050f74(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     804d7fb <fchmod@plt+0x444b>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8048fd0 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
jmp    804d7fb <fchmod@plt+0x444b>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    804db5a <fchmod@plt+0x47aa>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    804e748 <fchmod@plt+0x5398>
test   $0xc,%al
je     804d9c4 <fchmod@plt+0x4614>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
jmp    804d9be <fchmod@plt+0x460e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     804eb00 <fchmod@plt+0x5750>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    804e878 <fchmod@plt+0x54c8>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    804dbbc <fchmod@plt+0x480c>
jmp    804e040 <fchmod@plt+0x4c90>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
je     804e040 <fchmod@plt+0x4c90>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    804dfc6 <fchmod@plt+0x4c16>
mov    %ecx,0x20(%esp)
jmp    804dbcf <fchmod@plt+0x481f>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    804e20d <fchmod@plt+0x4e5d>
jmp    804e040 <fchmod@plt+0x4c90>
xchg   %ax,%ax
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     804eab0 <fchmod@plt+0x5700>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    804e838 <fchmod@plt+0x5488>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
lea    0x0(%esi),%esi
js     804da80 <fchmod@plt+0x46d0>
shll   -0x4b4(%ebp)
jmp    804de61 <fchmod@plt+0x4ab1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    804dee4 <fchmod@plt+0x4b34>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
nop
call   8049340 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    %eax,%esi
jmp    804deb6 <fchmod@plt+0x4b06>
nop
mov    %edx,-0x4e8(%ebp)
jmp    804da37 <fchmod@plt+0x4687>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    804da00 <fchmod@plt+0x4650>
nop
cmp    $0xffffffff,%edx
je     804d878 <fchmod@plt+0x44c8>
mov    %edx,(%esp)
call   8049120 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     804d878 <fchmod@plt+0x44c8>
mov    %eax,-0x4f4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    804d70f <fchmod@plt+0x435f>
movl   $0x0,-0x4b4(%ebp)
00
jmp    804d71d <fchmod@plt+0x436d>
lea    0x0(%esi),%esi
mov    -0x4b4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049110 <realloc@plt>
mov    %eax,%edi
jmp    804db0d <fchmod@plt+0x475d>
nop
test   %ebx,%ebx
je     804dcf1 <fchmod@plt+0x4941>
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804db5a <fchmod@plt+0x47aa>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
je     804db23 <fchmod@plt+0x4773>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    804db29 <fchmod@plt+0x4779>
lea    0x0(%esi,%eiz,1),%esi
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   804f3c0 <fchmod@plt+0x6010>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    804e4a8 <fchmod@plt+0x50f8>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     804e483 <fchmod@plt+0x50d3>
je     804e4aa <fchmod@plt+0x50fa>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    804d8f1 <fchmod@plt+0x4541>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
mov    0x8(%eax),%ebx
mov    %ebx,-0x4c4(%ebp)
mov    %eax,%ebx
mov    0xc(%eax),%eax
mov    0x10(%ebx),%ebx
cmp    %ebx,%eax
je     804ed91 <fchmod@plt+0x59e1>
mov    -0x4ac(%ebp),%esi
mov    0x14(%esi),%edx
cmp    $0xffffffff,%edx
je     804e8d8 <fchmod@plt+0x5528>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    804e358 <fchmod@plt+0x4fa8>
mov    0x4(%edx),%edi
movl   $0x1,-0x4ec(%ebp)
00
test   %edi,%edi
js     804ee26 <fchmod@plt+0x5a76>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     804ecc1 <fchmod@plt+0x5911>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     804ed52 <fchmod@plt+0x59a2>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804e358 <fchmod@plt+0x4fa8>
mov    0x4(%eax),%esi
test   %esi,%esi
js     804ecc1 <fchmod@plt+0x5911>
test   %esi,%esi
jne    804ecf8 <fchmod@plt+0x5948>
mov    $0xc,%eax
cmp    %eax,%edi
jbe    804f25c <fchmod@plt+0x5eac>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     804da80 <fchmod@plt+0x46d0>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%edx
ja     804eda2 <fchmod@plt+0x59f2>
mov    -0x4ac(%ebp),%eax
mov    %edx,-0x4f8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4e8(%ebp)
call   804f3c0 <fchmod@plt+0x6010>
mov    -0x4f8(%ebp),%edx
test   %eax,%eax
fldt   -0x4e8(%ebp)
je     804ec08 <fchmod@plt+0x5858>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     804ed17 <fchmod@plt+0x5967>
movb   $0x4e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x41,0x1(%edx)
movb   $0x4e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
mov    -0x4ec(%ebp),%esi
mov    %ecx,%ebx
sub    %edx,%ebx
test   %esi,%esi
je     804e62d <fchmod@plt+0x527d>
cmp    %ebx,%edi
jbe    804e62d <fchmod@plt+0x527d>
mov    %edx,%eax
sub    %ecx,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%ecx,%edi,1),%ebx
je     804ef81 <fchmod@plt+0x5bd1>
test   %edi,%edi
je     804e62b <fchmod@plt+0x527b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,%ebx
movb   $0x20,-0x1(%ecx)
jne    804e620 <fchmod@plt+0x5270>
sub    %edx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    804e358 <fchmod@plt+0x4fa8>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     804ecea <fchmod@plt+0x593a>
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
add    %ebx,%edi
cmovae %edi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804e6fb <fchmod@plt+0x534b>
mov    -0x4b4(%ebp),%ecx
test   %ecx,%ecx
je     804edec <fchmod@plt+0x5a3c>
js     804da80 <fchmod@plt+0x46d0>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     804e6c3 <fchmod@plt+0x5313>
cmpb   $0x0,-0x4d8(%ebp)
je     804edfb <fchmod@plt+0x5a4b>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804efd8 <fchmod@plt+0x5c28>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x4b8(%ebp)
call   8048fd0 <memcpy@plt>
mov    -0x4b8(%ebp),%edx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%edx
je     804e735 <fchmod@plt+0x5385>
mov    %edx,(%esp)
call   8048fc0 <free@plt>
mov    -0x4b0(%ebp),%esi
jmp    804dee4 <fchmod@plt+0x4b34>
xor    %eax,%eax
jmp    804d8c1 <fchmod@plt+0x4511>
nop
movb   $0x4c,(%ebx)
add    $0x1,%ebx
jmp    804d9c4 <fchmod@plt+0x4614>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
nop
test   %bl,%bl
je     804decc <fchmod@plt+0x4b1c>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804ded2 <fchmod@plt+0x4b22>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     804da80 <fchmod@plt+0x46d0>
mov    $0xc,%eax
jmp    804dac8 <fchmod@plt+0x4718>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
movl   $0x0,0x4(%eax)
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    804dee4 <fchmod@plt+0x4b34>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %edi,%ecx
mov    %cl,(%eax)
jmp    804dee4 <fchmod@plt+0x4b34>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %di,(%eax)
jmp    804dee4 <fchmod@plt+0x4b34>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
mov    -0x4b0(%ebp),%eax
cmp    %eax,-0x4bc(%ebp)
je     804df4e <fchmod@plt+0x4b9e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048fc0 <free@plt>
jmp    804df4e <fchmod@plt+0x4b9e>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     804e8fc <fchmod@plt+0x554c>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    804e8e0 <fchmod@plt+0x5530>
movl   $0x1,-0x4ec(%ebp)
00
jmp    804e502 <fchmod@plt+0x5152>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049230 <__errno_location@plt>
mov    %esi,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    804da8b <fchmod@plt+0x46db>
xchg   %ax,%ax
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804e950 <fchmod@plt+0x55a0>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804e968 <fchmod@plt+0x55b8>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
call   8049230 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    804d8c1 <fchmod@plt+0x4511>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
mov    %eax,%edx
lea    0x1(%edi),%ebx
cmp    %edi,%ebx
cmovae %ebx,%edx
cmp    -0x4b4(%ebp),%edx
jbe    804ea3c <fchmod@plt+0x568c>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     804ee34 <fchmod@plt+0x5a84>
mov    -0x4b4(%ebp),%esi
lea    (%esi,%esi,1),%edx
test   %esi,%esi
cmovns %edx,%eax
mov    %eax,-0x4b4(%ebp)
cmp    %edi,%ebx
mov    $0xffffffff,%eax
cmovae %ebx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804e9e3 <fchmod@plt+0x5633>
cmp    %edi,%ebx
jb     804da80 <fchmod@plt+0x46d0>
mov    %ebx,-0x4b4(%ebp)
cmpl   $0xffffffff,-0x4b4(%ebp)
je     804da80 <fchmod@plt+0x46d0>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     804ea1c <fchmod@plt+0x566c>
cmpb   $0x0,-0x4ac(%ebp)
je     804ee43 <fchmod@plt+0x5a93>
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804da80 <fchmod@plt+0x46d0>
test   %edi,%edi
jne    804f035 <fchmod@plt+0x5c85>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%edi,1)
je     804ea5a <fchmod@plt+0x56aa>
cmp    %ebx,-0x4b4(%ebp)
ja     804ee5c <fchmod@plt+0x5aac>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804ea6c <fchmod@plt+0x56bc>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804ea84 <fchmod@plt+0x56d4>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804ea9c <fchmod@plt+0x56ec>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x4f0(%ebp),%eax
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    804d8c1 <fchmod@plt+0x4511>
nop
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048f60 <__snprintf_chk@plt>
jmp    804dc15 <fchmod@plt+0x4865>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    -0x4f8(%ebp),%ebx
add    %edx,%edi
mov    %ebx,(%eax)
jmp    804e735 <fchmod@plt+0x5385>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     804da99 <fchmod@plt+0x46e9>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048fc0 <free@plt>
jmp    804da99 <fchmod@plt+0x46e9>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    804ee7a <fchmod@plt+0x5aca>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804ebc0 <fchmod@plt+0x5810>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804ebd8 <fchmod@plt+0x5828>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804ebf0 <fchmod@plt+0x5840>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    804d8c1 <fchmod@plt+0x4511>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     804ed34 <fchmod@plt+0x5984>
lea    0x1(%edx),%eax
fchs
mov    %eax,-0x4e8(%ebp)
movb   $0x2d,(%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    804ee9f <fchmod@plt+0x5aef>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     804e358 <fchmod@plt+0x4fa8>
jne    804e358 <fchmod@plt+0x4fa8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4fc(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
mov    -0x4e8(%ebp),%eax
ja     804f018 <fchmod@plt+0x5c68>
movb   $0x49,(%eax)
lea    0x3(%eax),%ecx
movb   $0x4e,0x1(%eax)
movb   $0x46,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
lea    0x0(%esi),%esi
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    804e5ef <fchmod@plt+0x523f>
mov    -0x4ac(%ebp),%eax
xor    %esi,%esi
movzbl 0x24(%eax),%edx
mov    $0x6,%eax
and    $0xffffffdf,%edx
cmp    $0x41,%dl
mov    $0x12,%edx
cmovne %eax,%esi
mov    $0xc,%al
cmovne %edx,%eax
jmp    804e54c <fchmod@plt+0x519c>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%edi
jmp    804e6fb <fchmod@plt+0x534b>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    804e54c <fchmod@plt+0x519c>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    804e55f <fchmod@plt+0x51af>
movb   $0x6e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x61,0x1(%edx)
movb   $0x6e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
jmp    804e5ef <fchmod@plt+0x523f>
testb  $0x4,-0x4c4(%ebp)
je     804edc8 <fchmod@plt+0x5a18>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x2b,(%edx)
jmp    804ec47 <fchmod@plt+0x5897>
add    $0x1,%edx
xor    %esi,%esi
cmp    %edx,%ebx
je     804e547 <fchmod@plt+0x5197>
nop
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     804ed7c <fchmod@plt+0x59cc>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    804ed60 <fchmod@plt+0x59b0>
jmp    804e53f <fchmod@plt+0x518f>
xor    %edi,%edi
movl   $0x0,-0x4ec(%ebp)
00
jmp    804e502 <fchmod@plt+0x5152>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     804da80 <fchmod@plt+0x46d0>
mov    %eax,(%esp)
call   8049120 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804e581 <fchmod@plt+0x51d1>
jmp    804da80 <fchmod@plt+0x46d0>
testb  $0x8,-0x4c4(%ebp)
mov    %edx,-0x4e8(%ebp)
je     804ec47 <fchmod@plt+0x5897>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x20,(%edx)
jmp    804ec47 <fchmod@plt+0x5897>
movl   $0xc,-0x4b4(%ebp)
00
jmp    804e683 <fchmod@plt+0x52d3>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049110 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
jmp    804e6df <fchmod@plt+0x532f>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    804e502 <fchmod@plt+0x5152>
movl   $0xc,-0x4b4(%ebp)
00
jmp    804e9c3 <fchmod@plt+0x5613>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8049110 <realloc@plt>
mov    %eax,%esi
jmp    804ea26 <fchmod@plt+0x5676>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8049110 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    804ea5a <fchmod@plt+0x56aa>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     804ebae <fchmod@plt+0x57fe>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048fc0 <free@plt>
jmp    804ebae <fchmod@plt+0x57fe>
fstp   %st(0)
jp     804e358 <fchmod@plt+0x4fa8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jne    804e358 <fchmod@plt+0x4fa8>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    804ef38 <fchmod@plt+0x5b88>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    804eee4 <fchmod@plt+0x5b34>
test   %esi,%esi
lea    0x1(%eax),%ecx
je     804eca8 <fchmod@plt+0x58f8>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049290 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     804f23d <fchmod@plt+0x5e8d>
lea    (%ebx,%esi,1),%ecx
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    804ef28 <fchmod@plt+0x5b78>
jmp    804eca8 <fchmod@plt+0x58f8>
cmp    $0x45,%al
jne    804f063 <fchmod@plt+0x5cb3>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    804f128 <fchmod@plt+0x5d78>
test   %esi,%esi
jne    804f128 <fchmod@plt+0x5d78>
lea    0x1(%eax),%esi
mov    -0x4ac(%ebp),%eax
lea    0x4(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
movb   $0x30,0x3(%esi)
mov    %al,(%esi)
jmp    804eca8 <fchmod@plt+0x58f8>
testb  $0x20,-0x4c4(%ebp)
je     804f0ed <fchmod@plt+0x5d3d>
mov    -0x4e8(%ebp),%esi
test   %esi,%esi
je     804f0ed <fchmod@plt+0x5d3d>
cmp    %ecx,%esi
jae    804efbd <fchmod@plt+0x5c0d>
mov    %ebx,%eax
mov    %edx,-0x4c4(%ebp)
sub    $0x1,%ecx
movzbl (%ecx),%edx
sub    $0x1,%eax
cmp    %esi,%ecx
mov    %dl,(%eax)
jne    804efa8 <fchmod@plt+0x5bf8>
mov    -0x4c4(%ebp),%edx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     804e62b <fchmod@plt+0x527b>
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x30,-0x1(%ecx)
jne    804efc8 <fchmod@plt+0x5c18>
jmp    804e62b <fchmod@plt+0x527b>
cmpb   $0x0,-0x4d8(%ebp)
je     804e6f5 <fchmod@plt+0x5345>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
mov    %esi,-0x4b0(%ebp)
jmp    804e6fb <fchmod@plt+0x534b>
movb   $0x69,(%eax)
lea    0x3(%eax),%ecx
movb   $0x6e,0x1(%eax)
movb   $0x66,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
jmp    804eca8 <fchmod@plt+0x58f8>
cmpb   $0x0,-0x4ac(%ebp)
je     804ea36 <fchmod@plt+0x5686>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804ea3c <fchmod@plt+0x568c>
cmp    $0x47,%al
jne    804f180 <fchmod@plt+0x5dd0>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
lea    0x1(%eax),%ecx
je     804eca8 <fchmod@plt+0x58f8>
lea    -0x1(%esi),%eax
xor    %ecx,%ecx
test   %esi,%esi
cmovne %eax,%ecx
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049290 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%esi
mov    $0x2e,%eax
mov    %esi,%ecx
test   %cl,%cl
mov    -0x4fc(%ebp),%ecx
cmovne %esi,%eax
mov    -0x4e8(%ebp),%esi
test   %ecx,%ecx
mov    %al,0x1(%esi)
je     804f23d <fchmod@plt+0x5e8d>
add    %ebx,%ecx
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    804f0dd <fchmod@plt+0x5d2d>
jmp    804eca8 <fchmod@plt+0x58f8>
cmp    %ecx,%edx
mov    %ebx,%esi
mov    %ecx,%eax
jae    804f109 <fchmod@plt+0x5d59>
lea    0x0(%esi),%esi
sub    $0x1,%eax
movzbl (%eax),%ecx
sub    $0x1,%esi
cmp    %edx,%eax
mov    %cl,(%esi)
jne    804f0f8 <fchmod@plt+0x5d48>
mov    %edx,%ecx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     804e62b <fchmod@plt+0x527b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x20,-0x1(%ecx)
jne    804f118 <fchmod@plt+0x5d68>
jmp    804e62b <fchmod@plt+0x527b>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8049290 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     804f244 <fchmod@plt+0x5e94>
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    804f170 <fchmod@plt+0x5dc0>
jmp    804ef61 <fchmod@plt+0x5bb1>
cmp    $0x41,%al
jne    804e358 <fchmod@plt+0x4fa8>
mov    -0x4e8(%ebp),%ebx
mov    %ebx,%eax
add    $0x2,%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%ebx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%ebx)
jne    804f1f3 <fchmod@plt+0x5e43>
test   %esi,%esi
jne    804f1f3 <fchmod@plt+0x5e43>
mov    %ebx,%esi
add    $0x3,%esi
mov    -0x4ac(%ebp),%eax
lea    0x3(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
add    $0xf,%eax
mov    %al,(%esi)
mov    -0x4fc(%ebp),%eax
mov    %eax,-0x4e8(%ebp)
jmp    804eca8 <fchmod@plt+0x58f8>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
lea    0x4(%eax),%ebx
call   8049290 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x3(%ecx)
je     804f255 <fchmod@plt+0x5ea5>
add    %ebx,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    804f230 <fchmod@plt+0x5e80>
jmp    804f1c8 <fchmod@plt+0x5e18>
mov    %ebx,%ecx
jmp    804eca8 <fchmod@plt+0x58f8>
mov    %ebx,%esi
jmp    804ef61 <fchmod@plt+0x5bb1>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049040 <__stack_chk_fail@plt>
mov    %ebx,%esi
jmp    804f1c8 <fchmod@plt+0x5e18>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    804e55f <fchmod@plt+0x51af>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804f2a0 <fchmod@plt+0x5ef0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    804f300 <fchmod@plt+0x5f50>
mov    0x8054354,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     804f3a8 <fchmod@plt+0x5ff8>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   80491f0 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804f320 <fchmod@plt+0x5f70>
movl   $0x1,0x8054354
00
test   %ebx,%ebx
js     804f2f7 <fchmod@plt+0x5f47>
cmpl   $0xffffffff,0x8054354
je     804f350 <fchmod@plt+0x5fa0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   80491f0 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049230 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    804f2e0 <fchmod@plt+0x5f30>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804f2a0 <fchmod@plt+0x5ef0>
test   %eax,%eax
mov    %eax,%ebx
js     804f2f7 <fchmod@plt+0x5f47>
movl   $0xffffffff,0x8054354
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80491f0 <fcntl@plt>
test   %eax,%eax
js     804f384 <fchmod@plt+0x5fd4>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   80491f0 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    804f2f7 <fchmod@plt+0x5f47>
call   8049230 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049370 <close@plt>
mov    %edi,(%esi)
jmp    804f2f7 <fchmod@plt+0x5f47>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804f2a0 <fchmod@plt+0x5ef0>
mov    %eax,%ebx
jmp    804f2ea <fchmod@plt+0x5f3a>
nop
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     804f3f0 <fchmod@plt+0x6040>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     804f400 <fchmod@plt+0x6050>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     804f462 <fchmod@plt+0x60b2>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     804f4f0 <fchmod@plt+0x6140>
mov    (%eax),%ebx
jmp    *0x8050f90(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     804f438 <fchmod@plt+0x6088>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    804f458 <fchmod@plt+0x60a8>
movl   $0x8050f88,0x4(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    804f458 <fchmod@plt+0x60a8>
movl   $0x8050fec,0x4(%eax)
jmp    804f458 <fchmod@plt+0x60a8>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    804f57a <fchmod@plt+0x61ca>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     804f5a8 <fchmod@plt+0x61f8>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    804f570 <fchmod@plt+0x61c0>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    804f65c <fchmod@plt+0x62ac>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    804f64e <fchmod@plt+0x629e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     804f6e8 <fchmod@plt+0x6338>
cmp    $0x2b,%dl
je     804f6f8 <fchmod@plt+0x6348>
cmp    $0x20,%dl
je     804f708 <fchmod@plt+0x6358>
cmp    $0x23,%dl
je     804f718 <fchmod@plt+0x6368>
cmp    $0x30,%dl
nop
je     804f728 <fchmod@plt+0x6378>
cmp    $0x49,%dl
jne    804f738 <fchmod@plt+0x6388>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    804f608 <fchmod@plt+0x6258>
orl    $0x1,0x8(%ebx)
jmp    804f648 <fchmod@plt+0x6298>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    804f660 <fchmod@plt+0x62b0>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    804f5fc <fchmod@plt+0x624c>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    804f692 <fchmod@plt+0x62e2>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     804f6a9 <fchmod@plt+0x62f9>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    804f690 <fchmod@plt+0x62e0>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     804fd34 <fchmod@plt+0x6984>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    804f5fc <fchmod@plt+0x624c>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    804f648 <fchmod@plt+0x6298>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    804f648 <fchmod@plt+0x6298>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    804f648 <fchmod@plt+0x6298>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    804f648 <fchmod@plt+0x6298>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    804f648 <fchmod@plt+0x6298>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     804f9c4 <fchmod@plt+0x6614>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     804f784 <fchmod@plt+0x63d4>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     804ffca <fchmod@plt+0x6c1a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    804f760 <fchmod@plt+0x63b0>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     804f977 <fchmod@plt+0x65c7>
add    $0x1,%esi
xor    %eax,%eax
jmp    804f7be <fchmod@plt+0x640e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     804f7d0 <fchmod@plt+0x6420>
cmp    $0x6c,%dl
je     804f7d8 <fchmod@plt+0x6428>
cmp    $0x6a,%dl
je     804f7e0 <fchmod@plt+0x6430>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     804f7b8 <fchmod@plt+0x6408>
cmp    $0x74,%dl
jne    804f7e8 <fchmod@plt+0x6438>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    804f798 <fchmod@plt+0x63e8>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    804f7b8 <fchmod@plt+0x6408>
or     $0x4,%eax
jmp    804f7b8 <fchmod@plt+0x6408>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    804f7b8 <fchmod@plt+0x6408>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    804f7b8 <fchmod@plt+0x6408>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     804fd34 <fchmod@plt+0x6984>
movzbl %cl,%ecx
jmp    *0x8051008(,%ecx,4)
movl   $0x11,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     804fed0 <fchmod@plt+0x6b20>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    804fdcb <fchmod@plt+0x6a1b>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x28(%esp),%ecx
cmp    %eax,%edx
jb     804f867 <fchmod@plt+0x64b7>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    804f850 <fchmod@plt+0x64a0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x28(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804fe52 <fchmod@plt+0x6aa2>
mov    0x24(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    804f8aa <fchmod@plt+0x64fa>
mov    0x4(%eax),%eax
jmp    804f57a <fchmod@plt+0x61ca>
mov    0x20(%esp),%eax
test   %eax,%eax
js     804f938 <fchmod@plt+0x6588>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     804f938 <fchmod@plt+0x6588>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     804fef2 <fchmod@plt+0x6b42>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049110 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804f938 <fchmod@plt+0x6588>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     804ffd1 <fchmod@plt+0x6c21>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    804f57a <fchmod@plt+0x61ca>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     804fe68 <fchmod@plt+0x6ab8>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    804fe68 <fchmod@plt+0x6ab8>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     804f94d <fchmod@plt+0x659d>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     804f962 <fchmod@plt+0x65b2>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
call   8049230 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    804f59b <fchmod@plt+0x61eb>
cmpb   $0x2a,0x1(%esi)
je     804fc1e <fchmod@plt+0x686e>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     804f9a6 <fchmod@plt+0x65f6>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    804f998 <fchmod@plt+0x65e8>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    804f78d <fchmod@plt+0x63dd>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    804fa68 <fchmod@plt+0x66b8>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     804fd34 <fchmod@plt+0x6984>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    804f90c <fchmod@plt+0x655c>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %edi,%eax
ja     804fa47 <fchmod@plt+0x6697>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    804fa30 <fchmod@plt+0x6680>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804fec2 <fchmod@plt+0x6b12>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    804f784 <fchmod@plt+0x63d4>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804fa70 <fchmod@plt+0x66c0>
cmp    $0x24,%dl
jne    804f9e8 <fchmod@plt+0x6638>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     804faa2 <fchmod@plt+0x66f2>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804fa8b <fchmod@plt+0x66db>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     804fd34 <fchmod@plt+0x6984>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    804fa05 <fchmod@plt+0x6655>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xf,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
cmp    $0xf,%eax
movl   $0x16,0x24(%esp)
jg     804f810 <fchmod@plt+0x6460>
test   $0x4,%al
jne    804f810 <fchmod@plt+0x6460>
cmp    $0x7,%eax
movl   $0x15,0x24(%esp)
jg     804f810 <fchmod@plt+0x6460>
test   $0x2,%al
movl   $0x12,0x24(%esp)
jne    804f810 <fchmod@plt+0x6460>
and    $0x1,%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
addl   $0x14,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     804fd7b <fchmod@plt+0x69cb>
test   $0x4,%al
jne    804fd7b <fchmod@plt+0x69cb>
cmp    $0x7,%eax
jg     804fff8 <fchmod@plt+0x6c48>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805003c <fchmod@plt+0x6c8c>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x3,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    804f810 <fchmod@plt+0x6460>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xd,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
movl   $0x10,0x24(%esp)
movb   $0x73,0x1c(%esp)
jmp    804f810 <fchmod@plt+0x6460>
movl   $0xe,0x24(%esp)
movb   $0x63,0x1c(%esp)
jmp    804f810 <fchmod@plt+0x6460>
cmp    $0xf,%eax
jle    804ff01 <fchmod@plt+0x6b51>
mov    %dl,0x1c(%esp)
movl   $0xc,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
cmp    $0xf,%eax
jg     804fd8c <fchmod@plt+0x69dc>
test   $0x4,%al
jne    804fd8c <fchmod@plt+0x69dc>
cmp    $0x7,%eax
jg     8050009 <fchmod@plt+0x6c59>
test   $0x2,%al
jne    805004d <fchmod@plt+0x6c9d>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x4,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     804fd9d <fchmod@plt+0x69ed>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804fc4b <fchmod@plt+0x689b>
cmp    $0x24,%dl
jne    804fd9d <fchmod@plt+0x69ed>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     804fc7d <fchmod@plt+0x68cd>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804fc66 <fchmod@plt+0x68b6>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     804fd34 <fchmod@plt+0x6984>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     804ff1b <fchmod@plt+0x6b6b>
mov    0x14(%esp),%eax
test   %eax,%eax
js     804f938 <fchmod@plt+0x6588>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     804fcda <fchmod@plt+0x692a>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     804f938 <fchmod@plt+0x6588>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     804f938 <fchmod@plt+0x6588>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     805005e <fchmod@plt+0x6cae>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049110 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     804f93c <fchmod@plt+0x658c>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     8050076 <fchmod@plt+0x6cc6>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    804ff26 <fchmod@plt+0x6b76>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x30(%esp)
je     804fd51 <fchmod@plt+0x69a1>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     804fd66 <fchmod@plt+0x69b6>
mov    %eax,(%esp)
call   8048fc0 <free@plt>
call   8049230 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    804f59b <fchmod@plt+0x61eb>
mov    %dl,0x1c(%esp)
movl   $0x9,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    %dl,0x1c(%esp)
movl   $0xa,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    804fcab <fchmod@plt+0x68fb>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     804fd34 <fchmod@plt+0x6984>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    804fcab <fchmod@plt+0x68fb>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     804f938 <fchmod@plt+0x6588>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     804fdf0 <fchmod@plt+0x6a40>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     804f938 <fchmod@plt+0x6588>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     804f938 <fchmod@plt+0x6588>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x28(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     804ff82 <fchmod@plt+0x6bd2>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049110 <realloc@plt>
mov    0x28(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     804f93f <fchmod@plt+0x658f>
cmp    %eax,0x30(%esp)
je     804ff98 <fchmod@plt+0x6be8>
mov    0x68(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %ecx,0x4(%eax)
jmp    804f837 <fchmod@plt+0x6487>
cmp    %eax,0x24(%esp)
je     804f87e <fchmod@plt+0x64ce>
jmp    804fd3f <fchmod@plt+0x698f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     804f938 <fchmod@plt+0x6588>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     804ffe9 <fchmod@plt+0x6c39>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8049110 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     804f93c <fchmod@plt+0x658c>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     805001a <fchmod@plt+0x6c6a>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    804fa1a <fchmod@plt+0x666a>
cmp    $0x5,%eax
je     804f781 <fchmod@plt+0x63d1>
jmp    804fd3f <fchmod@plt+0x698f>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     804fd34 <fchmod@plt+0x6984>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    804f822 <fchmod@plt+0x6472>
mov    %edx,(%esp)
call   8049120 <malloc@plt>
mov    %eax,%esi
jmp    804f8e7 <fchmod@plt+0x6537>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %esi,%eax
ja     804ff50 <fchmod@plt+0x6ba0>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    804ff39 <fchmod@plt+0x6b89>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804ff6f <fchmod@plt+0x6bbf>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    804f78d <fchmod@plt+0x63dd>
cmp    $0x5,%eax
jne    804fd3f <fchmod@plt+0x698f>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    804f78d <fchmod@plt+0x63dd>
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     805006d <fchmod@plt+0x6cbd>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8048fd0 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ecx
jmp    804fe42 <fchmod@plt+0x6a92>
xor    %eax,%eax
jmp    804f771 <fchmod@plt+0x63c1>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8048fd0 <memcpy@plt>
jmp    804f8fc <fchmod@plt+0x654c>
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    %eax,%edx
jmp    804fe99 <fchmod@plt+0x6ae9>
mov    %dl,0x1c(%esp)
movl   $0x7,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    %dl,0x1c(%esp)
movl   $0x8,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8048fd0 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    804feb2 <fchmod@plt+0x6b02>
mov    %dl,0x1c(%esp)
movl   $0x1,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    %dl,0x1c(%esp)
movl   $0x2,0x24(%esp)
jmp    804f810 <fchmod@plt+0x6460>
mov    %eax,(%esp)
call   8049120 <malloc@plt>
mov    %eax,%edx
jmp    804fd0b <fchmod@plt+0x695b>
mov    0x30(%esp),%eax
jmp    804f93f <fchmod@plt+0x658f>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8048fd0 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    804fd24 <fchmod@plt+0x6974>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049750 <fchmod@plt+0x3a0>
add    $0x3f55,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   8048f1c <_init>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     80500f9 <fchmod@plt+0x6d49>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    80500d8 <fchmod@plt+0x6d28>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8050110 <fchmod@plt+0x6d60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   8049750 <fchmod@plt+0x3a0>
add    $0x3eda,%ebx
sub    $0x18,%esp
lea    0x144(%ebx),%eax
test   %eax,%eax
je     8050158 <fchmod@plt+0x6da8>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80490e0 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805013b <fchmod@plt+0x6d8b>
push   %ebx
sub    $0x8,%esp
call   8049750 <fchmod@plt+0x3a0>
add    $0x3e9b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %esp
jb     8050204 <_IO_stdin_used+0x80>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     80501bc <_IO_stdin_used+0x38>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8050205 <_IO_stdin_used+0x81>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8050214 <_IO_stdin_used+0x90>
popa
je     8050213 <_IO_stdin_used+0x8f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %al,%cs:0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
cs cs or %cs:(%eax),%al
inc    %ebx
jb     805023c <_IO_stdin_used+0xb8>
popa
je     805023f <_IO_stdin_used+0xbb>
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
sub    %ch,0x65(%ecx)
jae    8050216 <_IO_stdin_used+0x92>
sub    $0x20,%al
imul   $0x79656874,0x20(%esi),%esp
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805021e <_IO_stdin_used+0x9a>
popa
insb   (%dx),%es:(%edi)
jb     8050267 <_IO_stdin_used+0xe3>
popa
fs
jns    8050226 <_IO_stdin_used+0xa2>
gs
js     8050272 <_IO_stdin_used+0xee>
jae    805027f <_IO_stdin_used+0xfb>
or     %cs:(%eax),%al
add    %al,(%eax)
or     0x61(%ebp),%cl
outsb  %ds:(%esi),(%dx)
fs
popa
je     8050287 <_IO_stdin_used+0x103>
jb     8050293 <_IO_stdin_used+0x10f>
and    %ah,0x72(%ecx)
addr16 jne 805028d <_IO_stdin_used+0x109>
outsb  %gs:(%esi),(%dx)
je     8050297 <_IO_stdin_used+0x113>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     805029a <_IO_stdin_used+0x116>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8050255 <_IO_stdin_used+0xd1>
popa
jb     805029d <_IO_stdin_used+0x119>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     80502af <_IO_stdin_used+0x12b>
jb     80502bb <_IO_stdin_used+0x137>
and    %ah,0x6f(%esi)
jb     8050267 <_IO_stdin_used+0xe3>
jae    80502b1 <_IO_stdin_used+0x12d>
outsl  %ds:(%esi),(%dx)
jb     80502c0 <_IO_stdin_used+0x13c>
and    %ch,0x70(%edi)
je     80502ba <_IO_stdin_used+0x136>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8050275 <_IO_stdin_used+0xf1>
je     80502c6 <_IO_stdin_used+0x142>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c6d
sub    $0x65646f6d,%eax
cmp    $0x45444f4d,%eax
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     8050294 <_IO_stdin_used+0x110>
imul   $0x6f6d,0x20(%ebp,%eiz,2),%bp
fs and %ch,%fs:%gs:(%eax)
popa
jae    80502a2 <_IO_stdin_used+0x11e>
imul   $0x6f6d6863,0x20(%esi),%ebp
sub    %ebp,%fs:(%eax,%eiz,1)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80502b1 <_IO_stdin_used+0x12d>
popa
cmp    $0x20787772,%eax
sub    $0x616d7520,%eax
jae    8050309 <_IO_stdin_used+0x185>
or     (%eax),%ah
and    %ch,0x2d202c70
sub    $0x65726170,%eax
outsb  %ds:(%esi),(%dx)
je     8050321 <_IO_stdin_used+0x19d>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6f(%esi)
and    %ah,0x72(%ebp)
jb     8050329 <_IO_stdin_used+0x1a5>
jb     80502dc <_IO_stdin_used+0x158>
imul   $0x73697865,0x20(%esi),%esp
je     805032e <_IO_stdin_used+0x1aa>
outsb  %ds:(%esi),(%dx)
addr16 sub $0x20,%al
insl   (%dx),%es:(%edi)
popa
imul   $0x70,0x20(%ebp),%esp
popa
jb     8050337 <_IO_stdin_used+0x1b3>
outsb  %ds:(%esi),(%dx)
je     80502f5 <_IO_stdin_used+0x171>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x20736120,0x73(%ebp),%esp
outsb  %ds:(%esi),(%dx)
gs gs fs gs or %fs:%gs:(%eax),%ah
and    %ch,0x2d202c76
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    805035f <_IO_stdin_used+0x1db>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x6d206120,0x74(%esi),%ebp
gs
jae    805037e <_IO_stdin_used+0x1fa>
popa
and    %ah,%gs:0x6f(%bp)
jb     8050333 <_IO_stdin_used+0x1af>
gs
popa
arpl   %bp,0x20(%eax)
arpl   %si,0x65(%edx)
popa
je     8050383 <_IO_stdin_used+0x1ff>
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8050334 <_IO_stdin_used+0x1b0>
and    %ah,(%eax)
sub    $0x2d202c5a,%eax
sub    $0x746e6f63,%eax
gs
js     80503ad <_IO_stdin_used+0x229>
cmp    $0x20585443,%eax
and    %dh,0x65(%ebx)
je     8050363 <_IO_stdin_used+0x1df>
je     80503ad <_IO_stdin_used+0x229>
and    %dl,%gs:0x45(%ebx)
dec    %esp
imul   $0x65732078,0x75(%esi),%ebp
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     80503d3 <_IO_stdin_used+0x24f>
and    %ch,0x66(%edi)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
arpl   %si,0x65(%edx)
popa
je     80503d3 <_IO_stdin_used+0x24f>
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80503b0 <_IO_stdin_used+0x22c>
je     8050401 <_IO_stdin_used+0x27d>
and    %al,0x54(%ebx)
pop    %eax
or     (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     80503c5 <_IO_stdin_used+0x241>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     805041b <_IO_stdin_used+0x297>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    805043e <_IO_stdin_used+0x2ba>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    8050450 <_IO_stdin_used+0x2cc>
jo     8050453 <_IO_stdin_used+0x2cf>
je     8050400 <_IO_stdin_used+0x27c>
jbe    8050447 <_IO_stdin_used+0x2c3>
jb     8050457 <_IO_stdin_used+0x2d3>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     805045b <_IO_stdin_used+0x2d7>
popa
je     805045a <_IO_stdin_used+0x2d6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x74680000,0x0(%edx,%ecx,1),%esi
je     8050474 <_IO_stdin_used+0x2f0>
cmp    (%edi),%ch
das
ja     8050480 <_IO_stdin_used+0x2fc>
ja     8050439 <_IO_stdin_used+0x2b5>
outsb  %ds:(%si),(%dx)
jne    805043d <_IO_stdin_used+0x2b9>
outsl  %ds:(%esi),(%dx)
jb     8050479 <_IO_stdin_used+0x2f5>
das
jae    8050484 <_IO_stdin_used+0x300>
data16
je     805048f <_IO_stdin_used+0x30b>
popa
jb     8050480 <_IO_stdin_used+0x2fc>
das
arpl   %bp,0x72(%edi)
gs
jne    8050496 <_IO_stdin_used+0x312>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     805048f <_IO_stdin_used+0x30b>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8050455 <_IO_stdin_used+0x2d1>
jne    80504aa <_IO_stdin_used+0x326>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     80504bb <_IO_stdin_used+0x337>
popa
jb     80504ac <_IO_stdin_used+0x328>
cmp    (%eax),%ah
cmp    $0x68,%al
je     80504c1 <_IO_stdin_used+0x33d>
jo     8050489 <_IO_stdin_used+0x305>
das
das
ja     80504ca <_IO_stdin_used+0x346>
ja     8050483 <_IO_stdin_used+0x2ff>
outsb  %ds:(%si),(%dx)
jne    8050487 <_IO_stdin_used+0x303>
outsl  %ds:(%esi),(%dx)
jb     80504c3 <_IO_stdin_used+0x33f>
das
addr16
gs
je     80504c9 <_IO_stdin_used+0x345>
gs
insb   (%dx),%es:(%edi)
jo     8050494 <_IO_stdin_used+0x310>
or     %ds:(%eax),%al
push   %edx
gs
jo     80504db <_IO_stdin_used+0x357>
jb     80504e2 <_IO_stdin_used+0x35e>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    80504e4 <_IO_stdin_used+0x360>
popa
je     80504e4 <_IO_stdin_used+0x360>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 80504a3 <_IO_stdin_used+0x31f>
je     80504f4 <_IO_stdin_used+0x370>
and    %bh,(%eax,%ebp,2)
je     80504fe <_IO_stdin_used+0x37a>
jo     80504c6 <_IO_stdin_used+0x342>
das
das
je     8050502 <_IO_stdin_used+0x37e>
popa
outsb  %ds:(%esi),(%dx)
jae    8050500 <_IO_stdin_used+0x37c>
popa
je     8050500 <_IO_stdin_used+0x37c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     805050d <_IO_stdin_used+0x389>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     805050b <_IO_stdin_used+0x387>
das
je     805050c <_IO_stdin_used+0x388>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     80504d4 <_IO_stdin_used+0x350>
arpl   %bp,0x6d(%edi)
jo     8050525 <_IO_stdin_used+0x3a1>
gs
je     8050521 <_IO_stdin_used+0x39d>
and    %ah,0x63(%edi,%ebp,2)
jne    805052f <_IO_stdin_used+0x3ab>
outsb  %gs:(%esi),(%dx)
je     8050527 <_IO_stdin_used+0x3a3>
je     8050531 <_IO_stdin_used+0x3ad>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     8050543 <_IO_stdin_used+0x3bf>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     805053f <_IO_stdin_used+0x3bb>
jne    8050550 <_IO_stdin_used+0x3cc>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8050565 <_IO_stdin_used+0x3e1>
je     8050522 <_IO_stdin_used+0x39e>
fs
gs
popaw
jne    8050574 <_IO_stdin_used+0x3f0>
je     805052a <_IO_stdin_used+0x3a6>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     805057e <_IO_stdin_used+0x3fa>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8050582 <_IO_stdin_used+0x3fe>
js     8050593 <_IO_stdin_used+0x40f>
and    %dh,0x20(%edi,%ebp,2)
and    $0x520a0073,%eax
gs
jo     805059a <_IO_stdin_used+0x416>
jb     80505a1 <_IO_stdin_used+0x41d>
and    %ah,0x75622073
addr16 jae 8050556 <_IO_stdin_used+0x3d2>
je     80505a7 <_IO_stdin_used+0x423>
and    %ah,0x62000a73
jne    80505a7 <_IO_stdin_used+0x423>
sub    $0x65726f63,%eax
jne    80505bb <_IO_stdin_used+0x437>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     80505b9 <_IO_stdin_used+0x435>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    80505a3 <_IO_stdin_used+0x41f>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     80505d4 <_IO_stdin_used+0x450>
jne    80505e5 <_IO_stdin_used+0x461>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
das
jne    80505ef <_IO_stdin_used+0x46b>
jb     80505ad <_IO_stdin_used+0x429>
jae    80505e8 <_IO_stdin_used+0x464>
popa
jb     80505e8 <_IO_stdin_used+0x464>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ah,%gs:0x72(%ebx)
gs
popa
je     80505f6 <_IO_stdin_used+0x472>
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80505bd <_IO_stdin_used+0x439>
and    $0x61440073,%eax
jbe    805060d <_IO_stdin_used+0x489>
and    %cl,%fs:0x61(%ebp)
arpl   %cx,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jp     8050617 <_IO_stdin_used+0x493>
add    %ch,%gs:0x6b(%ebp)
imul   $0x763a6d70,%fs:0x0(%edx),%esi
pop    %edx
cmp    (%eax),%al
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jo     805062d <_IO_stdin_used+0x4a9>
jb     805062b <_IO_stdin_used+0x4a7>
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x6e(%ecx)
jbe    8050632 <_IO_stdin_used+0x4ae>
insb   (%dx),%es:(%edi)
imul   $0x2065646f,0x6d(%eax,%eiz,1),%esp
and    $0x6f630073,%eax
outsb  %ds:(%esi),(%dx)
je     8050647 <_IO_stdin_used+0x4c3>
js     8050658 <_IO_stdin_used+0x4d4>
add    %ch,0x6f(%ebp)
fs add %dh,%fs:%gs:0x61(%eax)
jb     8050653 <_IO_stdin_used+0x4cf>
outsb  %ds:(%esi),(%dx)
je     8050664 <_IO_stdin_used+0x4e0>
add    %dh,0x65(%esi)
jb     8050658 <_IO_stdin_used+0x4d4>
outsl  %ds:(%esi),(%dx)
jae    805065e <_IO_stdin_used+0x4da>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     80505ff <_IO_stdin_used+0x47b>
jbe    8050666 <_IO_stdin_used+0x4e2>
jb     8050676 <_IO_stdin_used+0x4f2>
imul   $0x0,0x6e(%edi),%ebp
add    %al,(%eax)
fldl   0x10805
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %edx
add    %al,(%eax)
add    %ah,%ch
add    $0x10805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,%dl
add    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     805064e <_IO_stdin_used+0x4ca>
add    %al,(%eax)
repnz add $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    805065e <_IO_stdin_used+0x4da>
add    %al,(%eax)
cli
add    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jle    805066d <_IO_stdin_used+0x4e9>
(bad)
(bad)
incl   0x805
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jge    805067d <_IO_stdin_used+0x4f9>
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,(%edx)
and    %al,(%eax)
cmp    %ch,(%esi)
xor    (%ecx),%dh
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     80506a4 <_IO_stdin_used+0x520>
and    $0x25203a73,%eax
jae    80506ab <_IO_stdin_used+0x527>
add    %ah,%cs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80506d4 <_IO_stdin_used+0x550>
arpl   %si,0x65(%edx)
popa
je     805071f <_IO_stdin_used+0x59b>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80506e5 <_IO_stdin_used+0x561>
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80506ef <_IO_stdin_used+0x56b>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x65(%bx,%si)
jb     8050747 <_IO_stdin_used+0x5c3>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x66(%edi)
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805070f <_IO_stdin_used+0x58b>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x77(%bx)
outsb  %ds:(%esi),(%dx)
gs
jb     805071c <_IO_stdin_used+0x598>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%eax)
jb     8050771 <_IO_stdin_used+0x5ed>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x66(%edi)
and    %ah,0x73
test   $0xa3,%al
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
mull   -0x5c27f7fc(%edx)
add    $0x8,%al
shlb   -0x5c37f7fc(%ebx)
add    $0x8,%al
mull   -0x5d08f7fc(%edx)
add    $0x8,%al
shlb   $0x4,-0x5c47f7fc(%ebx)
or     %al,0x20(%ecx)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 80507ff <_IO_stdin_used+0x67b>
xor    %bl,0x20(%ebp)
ja     805080a <_IO_stdin_used+0x686>
jae    80507cb <_IO_stdin_used+0x647>
jo     805080e <_IO_stdin_used+0x68a>
jae    8050822 <_IO_stdin_used+0x69e>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    805081f <_IO_stdin_used+0x69b>
push   $0x206e6120
gs
js     8050825 <_IO_stdin_used+0x6a1>
arpl   %sp,(%eax)
jae    805083d <_IO_stdin_used+0x6b9>
jae    805083a <_IO_stdin_used+0x6b6>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     805085a <_IO_stdin_used+0x6d6>
jb     8050858 <_IO_stdin_used+0x6d4>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    805087e <_IO_stdin_used+0x6fa>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    8050874 <_IO_stdin_used+0x6f0>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
sub    %ch,-0x50f7f7fc(%ecx)
add    $0x8,%al
cmp    %ch,-0x5207f7fc(%edi)
add    $0x8,%al
cmp    %ch,-0x5197f7fc(%esi)
add    $0x8,%al
nop
scas   %es:(%edi),%al
add    $0x8,%al
nop
scas   %es:(%edi),%al
add    $0x8,%al
nop
scas   %es:(%edi),%al
add    $0x8,%al
xor    %ch,0x4ad2808(%esp,%eax,1)
or     %ch,(%eax)
lods   %ds:(%esi),%eax
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
test   $0xac,%al
add    $0x8,%al
or     %ch,0x4ac2808(%esp,%eax,1)
or     %ah,(%eax)
lods   %ds:(%esi),%al
add    $0x8,%al
sbb    %ch,0x4ac1008(%esp,%eax,1)
or     %ah,%al
stos   %eax,%es:(%edi)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
sub    %ch,-0x52d7f7fc(%ebp)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
push   %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
enter  $0x4aa,$0x8
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
fsubrs 0x4ab5908(%esp,%eax,1)
or     %bl,-0x55(%ecx)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
sbb    %ch,-0x52d7f7fc(%edx)
add    $0x8,%al
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
mov    $0xc80804ac,%eax
stos   %al,%es:(%edi)
add    $0x8,%al
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
enter  $0x4aa,$0x8
pop    %ecx
stos   %eax,%es:(%edi)
add    $0x8,%al
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
enter  $0x4aa,$0x8
xor    %ch,-0x54a6f7fc(%ebx)
add    $0x8,%al
xor    %ch,-0x54aef7fc(%ebx)
add    $0x8,%al
push   %eax
mov    $0x4,%cl
or     %dl,-0x4f(%eax)
add    $0x8,%al
call   580d0f1d <_end+0x5007cbc5>
mov    $0x4,%cl
or     %ch,%al
mov    $0x4,%al
or     %dl,-0x4f(%eax)
add    $0x8,%al
call   f00d0f2d <_end+0xe807cbd5>
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %ch,%al
mov    $0x4,%al
or     %dl,-0x4f(%eax)
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,%cl
pop    %es
add    $0x507f908,%eax
or     %bh,%bh
pop    %es
add    $0x50b4f08,%eax
or     %cl,(%eax,%ecx,1)
add    $0x5081408,%eax
or     %al,0x81b0805(%ebp,%eax,1)
add    $0x8,%eax
add    %ch,0x62(%ecx,%ebp,2)
das
jae    8050bab <_IO_stdin_used+0xa27>
jbe    8050bb1 <_IO_stdin_used+0xa2d>
ja     8050bb2 <_IO_stdin_used+0xa2e>
arpl   %ax,%cs:(%eax)
ja     8050bb7 <_IO_stdin_used+0xa33>
sub    $0x6c61763e,%eax
arpl   %bp,%cs:0x69(%eax)
insb   (%dx),%es:(%edi)
and    %bh,%fs:0x30203d
sub    %ch,(%edx)
pop    %edi
pop    %edi
gs
jb     8050bdd <_IO_stdin_used+0xa59>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x29292820,0x6e(%edi),%ebp
and    %bh,0x34203d
ja     8050be6 <_IO_stdin_used+0xa62>
sub    $0x6c61763e,%eax
arpl   %bp,%cs:0x69(%eax)
insb   (%dx),%es:(%edi)
and    %bh,%fs:(%eax,%eiz,1)
xor    %al,(%eax)
add    %al,(%eax)
inc    %eax
mov    $0xbd680804,%esi
add    $0x8,%al
js     8050b5b <_IO_stdin_used+0x9d7>
add    $0x8,%al
or     %bh,-0x4287f7fc(%esi)
add    $0x8,%al
js     8050b67 <_IO_stdin_used+0x9e3>
add    $0x8,%al
or     %bh,-0x40f7f7fc(%edi)
add    $0x8,%al
cmpb   $0x4,-0x410ff7fc(%edi)
or     %bl,(%eax)
mov    $0xc0430804,%edi
add    $0x8,%al
cmp    %al,%al
add    $0x8,%al
cmp    %al,%al
add    $0x8,%al
push   %eax
rolb   $0x43,(%eax,%ecx,1)
rolb   $0x73,(%eax,%ecx,1)
popa
jbe    8050c3d <_IO_stdin_used+0xab9>
ja     8050c3e <_IO_stdin_used+0xaba>
pop    %edi
imul   $0x6873,0x69(%esi),%bp
add    %dh,0x61(%ebx)
jbe    8050c4b <_IO_stdin_used+0xac7>
ja     8050c4c <_IO_stdin_used+0xac8>
pop    %edi
jb     8050c50 <_IO_stdin_used+0xacc>
jae    8050c61 <_IO_stdin_used+0xadd>
outsl  %ds:(%esi),(%dx)
jb     8050c55 <_IO_stdin_used+0xad1>
add    %dh,0x61(%ebx)
jbe    8050c5a <_IO_stdin_used+0xad6>
ja     8050c5b <_IO_stdin_used+0xad7>
pop    %edi
jae    8050c5b <_IO_stdin_used+0xad7>
jbe    8050c61 <_IO_stdin_used+0xadd>
add    %dh,0x61(%ebx)
jbe    8050c66 <_IO_stdin_used+0xae2>
ja     8050c67 <_IO_stdin_used+0xae3>
pop    %edi
arpl   %bp,0x64(%eax)
imul   $0x28207325,0x0(%edx),%esi
and    $0x25202973,%eax
jae    8050c1f <_IO_stdin_used+0xa9b>
add    %ah,0x73252073
or     (%eax),%al
sub    %al,0x29(%ebx)
add    %dl,0x72(%edi)
imul   $0x7962206e,0x65(%esp,%esi,2),%esi
and    %ah,0xa2e73
push   %edi
jb     8050c9d <_IO_stdin_used+0xb19>
je     8050caa <_IO_stdin_used+0xb26>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     8050cb4 <_IO_stdin_used+0xb30>
je     8050cc1 <_IO_stdin_used+0xb3d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050c86 <_IO_stdin_used+0xb02>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     8050cd8 <_IO_stdin_used+0xb54>
jb     8050cdf <_IO_stdin_used+0xb5b>
and    %ah,0x75(%edx)
addr16 jae 8050c91 <_IO_stdin_used+0xb0d>
je     8050ce2 <_IO_stdin_used+0xb5e>
cmp    (%eax),%ah
and    $0xa73,%eax
add    %al,(%eax)
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    8050ce9 <_IO_stdin_used+0xb65>
and    %al,0x50(%edi)
dec    %esp
jbe    8050cbd <_IO_stdin_used+0xb39>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     8050d0c <_IO_stdin_used+0xb88>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     8050cc2 <_IO_stdin_used+0xb3e>
insb   (%dx),%es:(%edi)
popa
je     8050d0b <_IO_stdin_used+0xb87>
jb     8050cc8 <_IO_stdin_used+0xb44>
cmp    $0x68,%al
je     8050d20 <_IO_stdin_used+0xb9c>
jo     8050ce8 <_IO_stdin_used+0xb64>
das
das
outsb  %ds:(%si),(%dx)
jne    8050ce2 <_IO_stdin_used+0xb5e>
outsl  %ds:(%esi),(%dx)
jb     8050d1e <_IO_stdin_used+0xb9a>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 8050d30 <_IO_stdin_used+0xbac>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    8050cf1 <_IO_stdin_used+0xb6d>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     8050d55 <_IO_stdin_used+0xbd1>
popa
jb     8050d46 <_IO_stdin_used+0xbc2>
cmp    (%eax),%ah
jns    8050d54 <_IO_stdin_used+0xbd0>
jne    8050d07 <_IO_stdin_used+0xb83>
popa
jb     8050d4f <_IO_stdin_used+0xbcb>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8050d6f <_IO_stdin_used+0xbeb>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     8050d79 <_IO_stdin_used+0xbf5>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     8050d96 <_IO_stdin_used+0xc12>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     8050d95 <_IO_stdin_used+0xc11>
outsb  %ds:(%esi),(%dx)
je     8050d53 <_IO_stdin_used+0xbcf>
jo     8050d9a <_IO_stdin_used+0xc16>
jb     8050da4 <_IO_stdin_used+0xc20>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     8050db4 <_IO_stdin_used+0xc30>
je     8050dc1 <_IO_stdin_used+0xc3d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050d86 <_IO_stdin_used+0xc02>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8050dd4 <_IO_stdin_used+0xc50>
je     8050de1 <_IO_stdin_used+0xc5d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050da6 <_IO_stdin_used+0xc22>
and    %ah,0x250a2c73
jae    8050dae <_IO_stdin_used+0xc2a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8050df8 <_IO_stdin_used+0xc74>
je     8050e05 <_IO_stdin_used+0xc81>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050dca <_IO_stdin_used+0xc46>
and    %ah,0x250a2c73
jae    8050dd2 <_IO_stdin_used+0xc4e>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8050e20 <_IO_stdin_used+0xc9c>
je     8050e2d <_IO_stdin_used+0xca9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050df2 <_IO_stdin_used+0xc6e>
and    %ah,0x250a2c73
jae    8050dfa <_IO_stdin_used+0xc76>
and    %ah,0x25202c73
jae    8050e02 <_IO_stdin_used+0xc7e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8050e4c <_IO_stdin_used+0xcc8>
je     8050e59 <_IO_stdin_used+0xcd5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050e1e <_IO_stdin_used+0xc9a>
and    %ah,0x250a2c73
jae    8050e26 <_IO_stdin_used+0xca2>
and    %ah,0x25202c73
jae    8050e2e <_IO_stdin_used+0xcaa>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8050e7c <_IO_stdin_used+0xcf8>
je     8050e89 <_IO_stdin_used+0xd05>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050e4e <_IO_stdin_used+0xcca>
and    %ah,0x250a2c73
jae    8050e56 <_IO_stdin_used+0xcd2>
and    %ah,0x25202c73
jae    8050e5e <_IO_stdin_used+0xcda>
and    %ah,0x250a2c73
jae    8050e66 <_IO_stdin_used+0xce2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8050eb0 <_IO_stdin_used+0xd2c>
je     8050ebd <_IO_stdin_used+0xd39>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8050e82 <_IO_stdin_used+0xcfe>
and    %ah,0x250a2c73
jae    8050e8a <_IO_stdin_used+0xd06>
and    %ah,0x25202c73
jae    8050e92 <_IO_stdin_used+0xd0e>
and    %ah,0x250a2c73
jae    8050e9a <_IO_stdin_used+0xd16>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
lock ret
add    $0x8,%al
clc
ret
add    $0x8,%al
cmp    %al,%ah
add    $0x8,%al
add    $0x4,%ah
or     %bl,%al
les    (%eax,%ecx,1),%eax
xor    %al,%ch
add    $0x8,%al
cwtl
lds    (%eax,%ecx,1),%eax
adc    %al,%dh
add    $0x8,%al
mov    $0xc2,%al
add    $0x8,%al
dec    %eax
ret
add    $0x8,%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     8050f3d <_IO_stdin_used+0xdb9>
jb     8050f2f <_IO_stdin_used+0xdab>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8050f51 <_IO_stdin_used+0xdcd>
popa
jb     8050f42 <_IO_stdin_used+0xdbe>
and    %al,0x6f(%esi)
jne    8050f50 <_IO_stdin_used+0xdcc>
fs
popa
je     8050f4f <_IO_stdin_used+0xdcb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8050f6e <_IO_stdin_used+0xdea>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:(%edi)
jne    8050f76 <_IO_stdin_used+0xdf2>
jb     8050f34 <_IO_stdin_used+0xdb0>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %al,(%eax)
add    %bl,-0x1d(%eax)
add    $0x8,%al
sub    %ah,%dl
add    $0x8,%al
sbb    %ah,%al
add    $0x8,%al
call   c00d141e <_end+0xb807d0c6>
loope  8050f43 <_IO_stdin_used+0xdbf>
or     %bl,-0x67f7fb25(%eax)
fildl  (%eax,%ecx,1)
cwtl
fildl  (%eax,%ecx,1)
cwtl
fildl  (%eax,%ecx,1)
add    %bl,%ch
add    $0x8,%al
add    %bl,%ch
add    $0x8,%al
xor    %ah,%cl
add    $0x8,%al
push   %eax
loop   8050f63 <_IO_stdin_used+0xddf>
or     %dl,-0x6ff7fb23(%eax)
fldl   (%eax,%ecx,1)
cwtl
fildl  (%eax,%ecx,1)
cwtl
fildl  (%eax,%ecx,1)
cwtl
fildl  (%eax,%ecx,1)
or     %ch,%al
add    $0x8,%al
and    %ch,%al
add    $0x8,%al
lock loop 8050f83 <_IO_stdin_used+0xdff>
or     %dh,%al
loop   8050f87 <_IO_stdin_used+0xe03>
or     %ch,%al
out    %eax,$0x4
or     %ch,(%eax)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
sub    %eax,(%eax)
add    %dh,%al
hlt
add    $0x8,%al
mov    %dh,%ah
add    $0x8,%al
mov    %dh,%ah
add    $0x8,%al
js     8050f92 <_IO_stdin_used+0xe0e>
add    $0x8,%al
js     8050f96 <_IO_stdin_used+0xe12>
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   $0x680804f4
hlt
add    $0x8,%al
cwtl
hlt
add    $0x8,%al
test   $0xf4,%al
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
mov    $0xd00804f4,%eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
push   %eax
hlt
add    $0x8,%al
sub    %al,(%eax)
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
dec    %esp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x8(%esi)
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
ret
sti
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
mov    $0xfb,%cl
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
ret
sti
add    $0x8,%al
ret
sti
add    $0x8,%al
ret
sti
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
lahf
sti
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
(bad)
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
ret
sti
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
mov    %bh,%bl
add    $0x8,%al
inc    %eax
sti
add    $0x8,%al
ret
sti
add    $0x8,%al
ret
sti
add    $0x8,%al
ret
sti
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
inc    %eax
sti
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
in     (%dx),%al
cli
add    $0x8,%al
(bad)
add    $0x8,%al
add    $0xf8,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
aad    $0xfa
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
(bad)
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
xor    $0xfd,%al
add    $0x8,%al
(bad)
add    $0x8,%al
add    %ebx,(%ebx)
add    (%ebx),%edi
clc
add    (%eax),%al
add    %bl,0x0(%esi)
add    %al,(%eax)
call   1d0510e6 <_end+0x14ffcd8e>
add    (%eax),%eax
add    %ch,-0x7e(%eax)
(bad)
pushl  -0x79380000(%ebx,%eax,1)
(bad)
(bad)
cmp    %al,(%ebx)
add    %al,(%eax)
sub    %al,0x350ffff(%edi)
add    %al,(%eax)
push   $0x70ffff87
add    (%eax),%eax
add    %bh,-0x6b000079(%eax)
add    (%eax),%eax
add    %cl,-0x27000076(%eax)
add    (%eax),%eax
add    %cl,(%eax)
mov    %edi,%edi
(bad)
cld
add    (%eax),%eax
add    %bl,(%eax)
mov    %edi,%edi
call   *(%eax)
add    $0x0,%al
add    %ch,(%eax)
mov    %edi,%edi
jmp    *(%esp,%eax,1)
add    %al,(%eax)
clc
mov    %edi,%edi
call   *0x4(%eax)
add    %al,(%eax)
pop    %eax
mov    %?,%edi
pushl  0x4(%eax)
add    %al,(%eax)
cwtl
mov    %?,%edi
call   *-0x6f780000(%esp,%eax,1)
(bad)
(bad)
in     (%dx),%al
add    $0x0,%al
add    %bh,0x44ffff93(%eax)
add    $0x94180000,%eax
(bad)
ljmp   *0x5(%eax)
add    %al,(%eax)
mov    %dl,0x5a8ffff(%ebp)
add    %al,(%eax)
cmp    %dl,0x5e8ffff(%esi)
add    %al,(%eax)
push   $0x14ffff96
push   %es
add    %al,(%eax)
pop    %eax
xchg   %eax,%edi
(bad)
decl   0x0(%esi,%eax,1)
add    %cl,-0x6f00005f(%eax)
push   %es
add    %al,(%eax)
sub    %ah,0x6d0ffff(%ebx)
add    %al,(%eax)
push   $0x4ffffa3
pop    %es
add    %al,(%eax)
mov    %ah,0x718ffff(%ebx)
add    %al,(%eax)
test   $0xa3,%al
(bad)
ljmp   *(%edi,%eax,1)
add    %al,(%eax)
call   590511d4 <_end+0x50ffce7c>
pop    %es
add    %al,(%eax)
or     %ah,0x764ff(%edi,%edi,8)
add    %cl,-0x5c(%eax)
(bad)
decl   -0x57fffff9(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
mov    $0x88000007,%esp
movsl  %ds:(%esi),%es:(%edi)
(bad)
(bad)
clc
pop    %es
add    %al,(%eax)
mov    $0x10ffffa5,%eax
or     %al,(%eax)
add    %cl,-0x5a(%eax)
(bad)
incl   0x0(%eax,%ecx,1)
add    %ch,-0x5a(%eax)
(bad)
lcall  *0x8(%eax)
add    %al,(%eax)
mov    %ah,0x86cffff(%esi)
add    %al,(%eax)
test   $0xa6,%al
(bad)
incl   -0x37fffff8(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
call   *-0x59080000(%eax,%ecx,1)
(bad)
pushl  -0x58d80000(%eax,%ecx,1)
(bad)
call   *%esp
or     %al,(%eax)
add    %bl,-0x59(%eax)
(bad)
(bad)
in     (%dx),%al
or     %al,(%eax)
add    %cl,0x4ffffa7(%eax)
or     %eax,(%eax)
add    %bh,(%eax)
test   $0xff,%al
ljmp   *(%eax)
or     %eax,(%eax)
add    %ch,-0x58(%eax)
(bad)
incl   0x9(%eax)
add    %al,(%eax)
cwtl
test   $0xff,%al
lcall  *0x9(%eax)
add    %al,(%eax)
enter  $0xffa8,$0xff
jo     80512cb <_IO_stdin_used+0x1147>
add    %al,(%eax)
js     805126f <_IO_stdin_used+0x10eb>
(bad)
call   *-0x56480000(%ecx,%ecx,1)
(bad)
ljmp   *-0x56080000(%ecx,%ecx,1)
(bad)
inc    %esp
or     %eax,(%eax)
add    %bh,(%eax)
stos   %al,%es:(%edi)
(bad)
(bad)
fmull  (%ecx)
add    %al,(%eax)
pop    %eax
stos   %al,%es:(%edi)
(bad)
push   %eax
or     %eax,(%eax)
add    %bh,-0x56(%eax)
(bad)
incl   (%edx,%ecx,1)
add    %al,(%eax)
cwtl
stos   %al,%es:(%edi)
(bad)
lcall  *(%eax)
or     (%eax),%al
add    %bh,0x2cffffaa(%eax)
or     (%eax),%al
add    %cl,%al
stos   %al,%es:(%edi)
(bad)
incl   0xa(%eax)
add    %al,(%eax)
call   5d0512bb <_end+0x54ffcf63>
or     (%eax),%al
add    %bh,-0x53(%eax)
(bad)
call   *-0x51380000(%edx,%ecx,1)
(bad)
incl   (%eax)
or     (%eax),%eax
add    %bl,-0x51(%eax)
(bad)
jmp    *(%ebx,%ecx,1)
add    %al,(%eax)
mov    %dh,0xb64ffff(%eax)
add    %al,(%eax)
clc
mov    $0xff,%ch
incl   (%eax)
or     $0x0,%al
add    %cl,-0x4a(%eax)
(bad)
lcall  *(%eax)
or     $0x0,%al
add    %ch,0x3cffffb6(%eax)
or     $0x0,%al
add    %ch,%al
mov    $0xff,%dh
call   *0x0(%esp,%ecx,1)
add    %bl,0x78ffffb7(%eax)
or     $0x0,%al
add    %cl,%al
mov    $0xff,%bh
lcall  *-0x48080000(%esp,%ecx,1)
(bad)
inc    %eax
or     $0x0,%al
add    %cl,(%eax)
mov    $0xcd4ffff,%eax
add    %al,(%eax)
pop    %eax
mov    $0xd04ffff,%eax
add    %al,(%eax)
cwtl
mov    $0xd30ffff,%eax
add    %al,(%eax)
clc
mov    $0xd60ffff,%eax
add    %al,(%eax)
dec    %eax
mov    $0xd84ffff,%ecx
add    %al,(%eax)
js     805134f <_IO_stdin_used+0x11cb>
(bad)
jmp    *-0x46580000(%ebp,%ecx,1)
(bad)
inc    %eax
or     $0xb9d80000,%eax
(bad)
jmp    *%eax
or     $0xba080000,%eax
(bad)
incl   (%eax)
push   %cs
add    %al,(%eax)
pop    %eax
mov    $0xe14ffff,%edx
add    %al,(%eax)
dec    %eax
mov    $0xe54ffff,%ebx
add    %al,(%eax)
enter  $0xffbb,$0xff
lods   %ds:(%esi),%al
push   %cs
add    %al,(%eax)
or     %bh,0xec4ff(%edi,%edi,8)
add    %cl,%al
mov    $0xf04ffff,%edi
add    %al,(%eax)
sbb    %al,%cl
(bad)
incl   0x0(%edi,%ecx,1)
add    %cl,(%eax)
ret
(bad)
lcall  *-0x3cb80000(%edi,%ecx,1)
(bad)
(bad)
fmuls  (%edi)
add    %al,(%eax)
call   290513bc <_end+0x20ffd064>
adc    %al,(%eax)
add    %cl,-0x3c(%eax)
(bad)
decl   0x0(%eax,%edx,1)
add    %bl,%al
(bad)
(bad)
jmp    *-0x3b180000(%eax,%edx,1)
(bad)
(bad)
mov    $0x18000010,%eax
loope  8051416 <_IO_stdin_used+0x1292>
(bad)
call   5005142d <_end+0x47ffd0d5>
loope  805141e <_IO_stdin_used+0x129a>
incl   (%eax)
adc    %eax,(%eax)
add    %ch,-0x1e(%eax)
(bad)
decl   0x11(%eax)
add    %al,(%eax)
enter  $0xffe2,$0xff
insb   (%dx),%es:(%edi)
adc    %eax,(%eax)
add    %ch,-0x5700001d(%eax)
adc    %eax,(%eax)
add    %cl,-0x11(%eax)
(bad)
(bad)
call   c0051456 <_end+0xb7ffd0fe>
out    %eax,(%dx)
(bad)
jmp    *(%edx,%edx,1)
add    %al,(%eax)
enter  $0xffef,$0xff
cmp    %dl,(%edx)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805146b <_IO_stdin_used+0x12e7>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
int3
jp     8051476 <_IO_stdin_used+0x12f2>
incl   0x4(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805148b <_IO_stdin_used+0x1307>
js     8051489 <_IO_stdin_used+0x1305>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,0x5dffff83(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
inc    %eax
add    0xe(%ebx),%dl
add    $0x1c,%al
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
rolb   0x38ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jb     80514d1 <_IO_stdin_used+0x134d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
lock cmp $0xffffffff,%edi
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xe(%edx),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
pushf
add    %al,(%eax)
add    %bl,(%esp,%eax,4)
(bad)
dec    %edi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x7eac0000(%eax,%eax,1)
(bad)
ljmp   *0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %ebx
xchg   %al,(%ecx,%ecx,2)
addl   $0x0,0x200000
add    %ah,%al
add    %al,(%eax)
add    %ch,0x79ffff86(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ecx),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,(%ecx,%eax,1)
add    %al,(%eax)
add    $0x87,%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
xchg   %edi,%edi
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%ecx,%eax,1)
add    %al,(%eax)
cld
xchg   %bh,%bh
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
pop    %eax
add    %eax,(%eax)
add    %ah,0x57ffff87(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
loopne 8051559 <_IO_stdin_used+0x13d5>
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,-0x78040000(%ecx,%eax,1)
(bad)
(bad)
ljmp   $0xe41,$0x3
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
xor    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%ah
add    %eax,(%eax)
add    %dl,0x322ffff(%ebx,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
icebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
add    (%eax),%al
add    %ch,-0x1(%esi,%ecx,4)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x7ff1bcfe(%ebx)
add    %eax,(%edx)
push   %esi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jo     80516c8 <_IO_stdin_used+0x1544>
add    %al,(%eax)
test   $0x8e,%al
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x52,0x3210e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x2,%al
add    %al,(%eax)
fmuls  0xadffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
lock add (%eax),%al
add    %cl,-0x70(%eax)
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
sbb    $0x3,%al
add    %al,(%eax)
dec    %esp
nop
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x0(%ebx,%eax,1)
add    %al,(%ecx,%edx,4)
(bad)
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
cwtl
add    (%eax),%eax
add    %dh,%al
lcall  $0x0,$0x196ffff
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bl,%al
add    (%eax),%eax
add    %dl,-0x64(%eax)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%esp,%eax,1)
add    %al,(%eax)
pop    %esp
pushf
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    $0x0,%al
add    %ch,-0x64(%eax)
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%esp,%eax,1)
add    %al,(%eax)
je     805182a <_IO_stdin_used+0x16a6>
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    $0x0,%al
add    %dl,0x19ffff9c(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esp,%eax,1)
add    %bl,0x38ffff(%esp,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
nop
add    $0x0,%al
add    %bh,0x60ffff9c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
les    (%eax,%eax,1),%eax
add    %ah,%ah
pushf
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,(%eax)
add    $0x9d880000,%eax
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
sbb    %al,0x9da00000
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
add    $0x9dfc0000,%eax
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x5(%eax)
add    %al,(%eax)
or     %bl,0x19ffff(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80519cf <_IO_stdin_used+0x184b>
add    %al,(%eax)
adc    $0x9e,%al
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x20000005(%eax)
sahf
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pushf
add    $0x9e2c0000,%eax
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,-0x61c40000(%ebp,%eax,1)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,%ah
add    $0x9e4c0000,%eax
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
hlt
add    $0x9e640000,%eax
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
or     $0x6,%al
add    %al,(%eax)
jl     8051a04 <_IO_stdin_used+0x1880>
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    %al,(%esi)
add    %al,(%eax)
or     %bl,0x24ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
dec    %eax
push   %es
add    %al,(%eax)
and    %bl,0x23ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pusha
push   %es
add    %al,(%eax)
cmp    %bl,0x23ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
js     8051ad4 <_IO_stdin_used+0x1950>
add    %al,(%eax)
push   %eax
lahf
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pushf
push   %es
add    %al,(%eax)
fcompl 0x33ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x6,%ah
add    %al,(%eax)
add    $0xa0,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
int3
push   %es
add    %al,(%eax)
sub    $0xa0,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
in     $0x6,%al
add    %al,(%eax)
push   %esp
mov    0x19ffff,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
clc
push   %es
add    %al,(%eax)
pusha
mov    0x17ffff,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
or     $0x7,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    0x1affff,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%edi)
add    %al,(%eax)
js     8051b1a <_IO_stdin_used+0x1996>
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%edi,%eax,1)
add    %al,(%eax)
test   %ah,0xbffff(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %eax
pop    %es
add    %al,(%eax)
andb   $0x0,0x14ffff(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
pop    %es
add    %al,(%eax)
mov    %fs,0x285ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   $0x9c000000
pop    %es
add    %al,(%eax)
fsubl  0x148ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jne    8051c1b <_IO_stdin_used+0x1a97>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ecx
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    %al,0xe(%ebx,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,(%eax)
or     %al,(%eax)
add    %al,%al
mov    %eax,0x84ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sub    $0x8,%al
add    %al,(%eax)
sub    $0xa4,%al
(bad)
ljmp   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x8,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x6c000000(%eax),%ebx
or     %al,(%eax)
add    %bl,0x567ffff(,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
or     %cl,(%ecx)
add    %al,(%eax)
lock test $0x4affff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,(%eax)
or     %eax,(%eax)
add    %ch,(%eax)
stos   %al,%es:(%edi)
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
or     %eax,(%eax)
add    %ah,-0x1(%edx,%ebp,4)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %esp
or     %eax,(%eax)
add    %cl,0xa7ffff(%edx,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
orb    $0x0,(%ecx)
add    %bl,(%eax)
stos   %eax,%es:(%edi)
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %eax,(%eax)
add    %ah,(%ebx,%ebp,4)
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
enter  $0x9,$0x0
xor    %ch,0x5ffff(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
fmull  (%ecx)
add    %al,(%eax)
sub    $0xab,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
or     $0xa,%al
add    %al,(%eax)
dec    %esp
stos   %eax,%es:(%edi)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
cmp    %cl,(%edx)
add    %al,(%eax)
pusha
stos   %eax,%es:(%edi)
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
push   $0x9000000a
stos   %eax,%es:(%edi)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    %cs,(%edx)
add    %al,(%eax)
mov    $0x29ffffab,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ch,-0x54340000(%edx,%ecx,1)
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0xa,$0x0
loopne 8051ecd <_IO_stdin_used+0x1d49>
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,%al
or     (%eax),%al
add    %dh,%al
stos   %eax,%es:(%edi)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,(%eax)
or     (%eax),%eax
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0xb,%al
add    %al,(%eax)
cmp    $0xac,%al
(bad)
jmp    *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10900e46
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,0x0(%ebx,%ecx,1)
add    %ch,%ah
lods   %ds:(%esi),%al
(bad)
(bad)
js     8051fba <_IO_stdin_used+0x1e36>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     8051fdb <_IO_stdin_used+0x1e57>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xb,%ah
add    %al,(%eax)
adc    $0xad,%al
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
int3
or     (%eax),%eax
add    %bh,0x3b9ffff(,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
or     $0xc,%al
add    %al,(%eax)
mov    $0x4cffffb0,%esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffd8,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x0(%esp,%ecx,1)
add    %cl,%ah
mov    $0xff,%cl
jmp    *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
imul   $0xc343140e,(%edx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,-0x4c9c0000(%esp,%ecx,1)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %ah,%al
or     $0x0,%al
add    %ch,-0x4d(%eax)
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sub    %cl,0xb3c00000
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x0(%ebp,%ecx,1)
add    %dh,%ah
mov    $0xff,%bl
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
or     $0xb42c0000,%eax
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
rorb   $0xff,0xb4280000
ljmp   *(%edx)
sbb    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
lock or $0xd0280000,%eax
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
push   %cs
add    %al,(%eax)
inc    %eax
sar    %bh
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,0xe(%eax)
add    %al,(%eax)
sbb    %dl,%cl
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
je     80522d8 <_IO_stdin_used+0x2154>
add    %al,(%eax)
push   %esp
sar    %edi
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,-0x7fffff2(%eax)
sar    %edi
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
lock push %cs
add    %al,(%eax)
pop    %eax
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,(%edi,%ecx,1)
add    %al,(%eax)
mov    %ds,%ebp
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0xf(%eax)
add    %al,(%eax)
mov    %bl,%ch
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
lock xchg %eax,%edi
add    $0x8,%al
.byte 0xd0
xchg   %eax,%edi
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
test   %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
sbb    $0x8f,%al
add    $0x8,%al
or     $0x5c000000,%eax
add    %eax,0x1908
add    %al,(%eax)
aas
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0x3f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
mov    0x6080487,%al
add    %al,(%eax)
add    %dl,(%eax)
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
leave
add    (%eax),%eax
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    $0x208,%eax
add    %bh,(%eax)
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ah,%ah
mov    %es,(%eax,%ecx,1)
adc    %eax,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    %es,(%eax,%ecx,1)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x1c(%edi)
mov    %es,(%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x6a(%edi)
mov    (%eax,%ecx,1),%eax
add    %al,(%eax)
or     $0x3f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x71(%esi)
add    $0x8,%al
popw   (%eax,%ecx,1)
jbe    8053fa5 <_IO_stdin_used+0x3e21>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    8053fe6 <_IO_stdin_used+0x3e62>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    8054027 <_IO_stdin_used+0x3ea3>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    8054068 <_IO_stdin_used+0x3ee4>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    80540a9 <_IO_stdin_used+0x3f25>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
xchg   %eax,%ebx
push   %es
add    $0x108,%eax
add    %al,(%esi)
add    %al,(%eax)
add    %dl,0x1000805(%ecx,%eax,2)
add    %al,(%eax)
and    %al,0x5(%edx)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x0,0x72(%ecx,%ebp,2),%esp
add    %al,(%eax)
pop    %esp
add    %ebx,0x37(%ebx)
