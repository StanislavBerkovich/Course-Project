das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,(%edi)
lcall  *(%eax)
xchg   %eax,%esi
in     $0xf8,%eax
fistpl -0x1c(%ebx)
fstpt  0x7e(%ebx)
mov    $0x6117eeb6,%edx
.byte 0x29
mov    $0x99,%bl
inc    %ebx
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
sub    %dl,(%eax)
mov    0x100012c,%al
add    %al,0x10015c03(%esi)
lds    0xfc00e20(%eax),%ecx
mov    0x1361c840,%al
dec    %eax
jno    1e9 <getpwnam@plt-0x24d7>
and    $0x500a1,%eax
pushf
or     %bh,0x4050019e(%ecx)
adc    $0x8c,%al
add    %ch,0x21(%eax)
sarb   $0x8a,-0x30(%ebp)
or     %al,(%eax)
roll   $0x68,(%edx,%esi,2)
add    0x721e53c(%eax),%ecx
rcrl   %cl,0x681028(%eax)
add    %al,(%eax)
push   $0x0
add    %al,(%eax)
imul   $0x0,(%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %ch,0x0(%ebp)
add    %al,(%eax)
jo     212 <getpwnam@plt-0x24ae>
add    %al,(%eax)
je     216 <getpwnam@plt-0x24aa>
add    %al,(%eax)
ja     21a <getpwnam@plt-0x24a6>
add    %al,(%eax)
jns    226 <getpwnam@plt-0x249a>
add    %al,(%eax)
jl     22a <getpwnam@plt-0x2496>
add    %al,(%eax)
jge    236 <getpwnam@plt-0x248a>
add    %al,(%eax)
jg     23a <getpwnam@plt-0x2486>
add    %al,(%eax)
addl   $0x830000,(%eax)
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
test   %eax,(%eax)
add    %al,(%eax)
xchg   %eax,(%eax)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
mov    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    (%eax),%eax
add    %al,(%eax)
lea    (%eax),%eax
add    %al,(%eax)
mov    (%eax),%es
add    %al,(%eax)
nop
add    %al,(%eax)
add    %dl,-0x6d000000(%edx)
add    %al,(%eax)
add    %dl,0x950000(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esi
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
add    %bl,-0x63000000(%ebx)
add    %al,(%eax)
add    %bl,0x0(%edi)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %ah,-0x5c000000(%edx)
add    %al,(%eax)
add    %ah,-0x57000000(%esi)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %al,(%eax)
scas   %es:(%edi),%al
add    %al,(%eax)
add    %ch,-0x50000000(%edi)
add    %al,(%eax)
add    %dh,-0x4d000000(%ecx)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
add    %bh,-0x46000000(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0xbe0000(%eax,%eax,1)
add    %al,(%eax)
mov    $0xc0000000,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%esi)
cmc
iret
lcall  $0x3fa5,$0x1c8a43ab
inc    %ebx
sbb    $0xd9,%al
lds    (%ebx),%esp
sbb    $0x9f,%al
pusha
lret   $0x8e50
in     $0x5a,%al
adc    %dh,-0x1190659d(%eax,%esi,1)
fwait
jl     341 <getpwnam@plt-0x237f>
leave
lret   $0x64da
xchg   %eax,%esp
add    %ebp,0x6e(%ecx)
out    %al,(%dx)
fwait
jl     2fa <getpwnam@plt-0x23c6>
lahf
in     (%dx),%al
fwait
dec    %eax
push   %eax
cmpsb  %es:(%edi),%ds:(%esi)
adc    %eax,(%edx)
jmp    b9e10a73 <_end+0xb9df217f>
push   %ebx
jp     3b1 <getpwnam@plt-0x230f>
xchg   %eax,%edi
das
andl   $0x69,-0x5a(%bp,%si)
loopne 3ad <getpwnam@plt-0x2313>
jp     366 <getpwnam@plt-0x235a>
lods   %ds:(%esi),%al
dec    %ebx
jecxz  314 <getpwnam@plt-0x23ac>
inc    %ebx
mov    0x392ee66b(%ecx,%ebp,4),%ds
repnz lret $0x28f4
xor    %eax,-0x1d318a95(%eax)
notl   (%edx)
(bad)
adc    %dh,(%eax)
push   %esi
cmpsl  %es:(%edi),%ds:(%esi)
xchg   %eax,%esp
repz ret
int3
push   %cs
repz in $0xe7,%eax
sub    (%edi),%edx
lahf
inc    %esi
cmp    %dh,0x3c98f582
pop    %ecx
jnp    3c9 <getpwnam@plt-0x22f7>
scas   %es:(%edi),%eax
ja     3e3 <getpwnam@plt-0x22dd>
push   %edx
adc    -0x2bf36b6a(%edi),%ebp
fdiv   %st,%st(1)
jno    3fa <getpwnam@plt-0x22c6>
cli
xchg   %ch,0x59(%eax,%eiz,1)
(bad)
enter  $0x24e1,$0x17
into
leave
xor    $0x44,%al
repnz push %esi
es
pop    %edi
insl   (%dx),%es:(%edi)
cmpsl  %es:(%edi),%ds:(%esi)
pusha
(bad)
sti
pop    %eax
call   9817f09b <_end+0x981607a7>
cmpsb  %es:(%edi),%ds:(%esi)
fidivrl -0x2b(%ecx)
push   %cs
xchg   %eax,%ebx
mov    $0x9757672c,%ebp
das
jns    3d2 <getpwnam@plt-0x22ee>
jnp    393 <getpwnam@plt-0x232d>
mov    %dl,%ah
outsw  %ds:(%esi),(%dx)
xor    $0x49571f56,%eax
cmp    $0xd4ec6480,%eax
xchg   %eax,%edx
sahf
inc    %edx
inc    %edx
jne    363 <getpwnam@plt-0x235d>
fwait
pop    %esi
adc    $0xaf,%al
push   %esi
(bad)  -0x19d515f7(%edi)
and    %dh,0x7a361b16(%eax)
xor    %ebx,%eax
or     %esi,%ecx
jle    397 <getpwnam@plt-0x2329>
xor    0xdcbb0d5(%esp,%edi,2),%dl
adc    $0xba,%al
insb   (%dx),%es:(%edi)
repnz mov $0xdd,%cl
(bad)
lods   %ds:(%esi),%al
hlt
xchg   %eax,%edi
(bad)
adc    $0x1b,%al
popa
incl   -0x26(%esi)
lds    0x453d7a02(%ebp,%eax,1),%eax
dec    %ecx
(bad)
(bad)  0x6a6829e1(%esp,%edx,8)
jg     3ad <getpwnam@plt-0x2313>
jl     3b6 <getpwnam@plt-0x230a>
mov    %eax,0x4542f629
aad    $0xec
das
cmp    %esp,%ebp
or     (%edi),%dl
or     %ebp,-0x6b67fa24(%eax)
mov    %al,0x3b8c0f55
insb   (%dx),%es:(%edi)
jmp    3919d1c6 <_end+0x3917e8d2>
pop    %ebp
repz xchg %eax,%esi
and    %ebp,0x7c92e3bb(%esp,%eax,1)
out    %al,$0xf9
cmp    %edi,-0x32(%edx)
xchg   %eax,%ebp
pop    %ds
add    $0x3,%al
out    %eax,$0xab
xor    -0x4d(%esi),%esp
inc    %edx
push   %esp
sbb    %edi,%ecx
daa
push   $0xf68e9bcc
imul   $0x22,0xe454794f,%edx
sbb    (%ebx),%al
inc    %ebp
(bad)
(bad)
cltd
or     $0xc0,%al
popf
cmp    -0x6b63e734(%esp,%edi,2),%dl
fcompl 0x29(%eax)
fnstenvs 0x58(%ecx)
.byte 0x1c
add    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
je     4a7 <getpwnam@plt-0x2219>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ecx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%esi)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xor    $0x3,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
js     518 <getpwnam@plt-0x21a8>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%edx)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
daa
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %ds:(%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%esi)
add    %al,(%eax)
and    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x6(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%edx),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %cs:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
in     $0x1,%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %es,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
push   %es
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
clc
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    $0x0,%al
add    %al,0x80001b9(%eax)
add    %eax,(%eax)
add    %dl,(%ecx)
add    %dl,0x46100
add    %ch,(%eax,%eax,8)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
xchg   %eax,%esp
add    $0x0,%al
add    %dh,(%esi)
dec    %edi
add    %eax,(%eax)
add    (%eax),%al
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
jae    b29 <getpwnam@plt-0x1b97>
add    %al,(%eax)
xor    0x1(%edi),%cl
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
lldt   0x58b00000(,%eax,1)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
ltr    -0x27fffffc(%ebx)
in     $0x1,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    %eax,0x30000005
lds    (%ecx),%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
fildl  0xc0640000
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
cwtl
add    (%eax),%eax
add    %ah,-0x3b(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
in     (%dx),%al
add    (%eax),%eax
add    %bl,(%eax,%ebp,8)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   %esp
add    $0x0,%al
add    %ah,-0x40(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
push   %ecx
push   %es
add    %al,(%eax)
push   %esp
lds    (%ecx),%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sub    (%eax,%eax,1),%al
add    %ah,(%eax)
call   40bbf <_end+0x222cb>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0xcc000004,%edi
in     $0x1,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x5,%bh
add    %al,(%eax)
xor    $0xe8,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     %eax,0xe5d00000
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
loopne bfb <getpwnam@plt-0x1ac5>
add    %al,(%eax)
add    $0x1,%al
add    %al,0x11000000(%eax)
add    %bl,(%eax)
add    %ch,0x4(%eax)
add    %al,(%eax)
and    $0xe8,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %ebx
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verw   %cx
add    $0x0,%al
add    %al,0x200015c(%eax)
add    %eax,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %cl,-0x2bfffffd(%ebp)
in     $0x1,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
clc
add    (%eax),%eax
add    %ch,(%ebx)
dec    %edi
add    %eax,(%eax)
pop    %es
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %dl,%al
add    $0xbb600000,%eax
add    %eax,(%eax)
aam    $0x1
add    %al,(%eax)
adc    %eax,(%eax)
adc    $0x3b500,%eax
add    %ah,%al
out    %eax,$0x1
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jge    c7c <getpwnam@plt-0x1a44>
add    %al,(%eax)
fsub   %st,%st(7)
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x4,%al
add    %al,(%eax)
add    $0x1,%ch
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   %ecx
add    $0xe8e80000,%eax
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
dec    %ebx
add    $0x0,%al
add    %cl,-0x3b(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
faddl  (%eax,%eax,1)
add    %dl,-0x3b(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xor    %al,0xe8280000
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
incb   0xe8000000
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
fiaddl (%ebx)
add    %al,(%eax)
dec    %eax
rolb   $0x0,(%ecx)
sbb    %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
inc    %esi
push   %es
add    %al,(%eax)
add    $0xe8,%al
add    %eax,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %eax,(%eax,%eax,1)
add    %ah,%ah
out    %eax,$0x1
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bh,(%ebx)
push   %es
add    %al,(%eax)
lock call 40d1f <_end+0x2242b>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
rolb   %cl,(%eax,%eax,1)
add    %bl,(%eax)
rolb   $0x0,(%ecx)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
jns    d3b <getpwnam@plt-0x1985>
add    %al,(%eax)
shr    $0x1,%al
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jns    d4a <getpwnam@plt-0x1976>
add    %al,(%eax)
mov    0x200015d,%al
add    %eax,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ah,(%eax)
add    $0x0,%al
add    %ah,%al
in     $0x1,%eax
add    %bh,%ah
add    %eax,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,(%ecx)
add    $0xc0300000,%eax
add    %eax,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
push   %ds
add    $0x43a00000,%eax
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verr   (%edi)
push   %es
add    %al,(%eax)
(bad)
in     $0x1,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
roll   (%ebx)
add    %al,(%eax)
cmp    $0xc5,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jp     da9 <getpwnam@plt-0x1917>
add    %al,(%eax)
in     $0xe8,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x0,%al
add    %cl,-0x18(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
call   38000dce <_end+0x37fe24da>
call   40dcf <_end+0x224db>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
icebp
add    $0x0,%al
add    %bl,%ah
in     $0x1,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jne    dec <getpwnam@plt-0x18d4>
add    %al,(%eax)
inc    %esp
call   40def <_end+0x224fb>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0xe0000003,%esp
pop    %edi
add    %eax,(%eax)
add    (%ecx),%al
add    %al,(%eax)
adc    %eax,(%eax)
lldt   (%eax)
add    $0x0,%al
add    %al,-0x3b(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
hlt
add    $0xc5380000,%eax
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    (%bx,%si),%eax
add    %cl,%al
in     $0x1,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
adc    (%esi),%al
add    %al,(%eax)
and    %al,%ch
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    %eax,0x28000003
dec    %edi
add    %eax,(%eax)
add    (%eax),%eax
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
jo     e5b <getpwnam@plt-0x1865>
add    %al,(%eax)
sub    $0xe8,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
and    $0xc8000005,%eax
call   180e6f <_end+0x16257b>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    $0x5,%al
add    %al,(%eax)
cld
out    %eax,$0x1
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
pop    %ecx
push   %es
add    %al,(%eax)
sbb    %ch,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     %eax,(%eax,%eax,1)
add    %bh,%al
out    %eax,$0x1
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
addl   $0x0,(%eax,%eax,1)
rcrb   $0x0,0x1(%esi)
add    (%ecx),%al
add    %al,(%eax)
adc    %eax,(%eax)
str    0x5(%edx)
add    %al,(%eax)
adc    $0xc0,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
pusha
push   %es
add    %al,(%eax)
inc    %eax
call   40ecf <_end+0x225db>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
lds    (%ebx),%eax
add    %al,(%eax)
lds    %fs:(%ecx),%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
adc    $0x44000004,%eax
lds    (%ecx),%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    %es,(%eax,%eax,1)
add    %ah,(%eax,%eax,8)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
test   %al,(%ebx)
add    %al,(%eax)
sub    %al,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
or     $0x10000003,%eax
sub    $0x1e20000,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x59100,%eax
add    %al,%ah
call   40f2f <_end+0x2263b>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
dec    %edi
add    (%eax),%eax
add    %ah,(%eax)
roll   $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
scas   %es:(%edi),%al
add    $0xc5340000,%eax
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sbb    %eax,(%esi)
add    %al,(%eax)
in     (%dx),%al
call   40f5f <_end+0x2266b>
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
test   %eax,0xc54c0000
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
movb   $0x0,(%eax,%eax,1)
sub    %al,%ch
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
cltd
add    $0xe8300000,%eax
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     %al,(%esi)
add    %al,(%eax)
sbb    $0xc5,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jb     faa <getpwnam@plt-0x1716>
add    %al,(%eax)
adc    $0x1300014f,%eax
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ah,0x3(%edx)
add    %al,(%eax)
hlt
call   fbf <getpwnam@plt-0x1701>
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
stc
add    $0x0,%al
add    %al,(%eax)
popa
add    %eax,(%eax)
add    (%ecx),%al
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
cmp    0xe8e00000,%eax
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   $0x2c000005
lds    (%ecx),%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
pop    %ecx
add    $0x0,%al
add    %dl,(%eax)
dec    %edi
add    %eax,(%eax)
add    $0x11000000,%eax
add    %cl,(%edi)
add    %al,%ch
add    $0x50bb0000,%eax
add    %eax,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
xor    (%eax,%eax,1),%eax
add    %ah,-0x18(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   $0x6
add    %al,(%eax)
rcrb   $0x0,0x1(%eax)
inc    %edx
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ch,0x20000003(%edx)
rolb   $0x0,(%ecx)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
loope  1049 <getpwnam@plt-0x1677>
add    %al,(%eax)
push   $0x40001c5
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,(%edx)
push   %es
add    %al,(%eax)
cmp    $0xe8,%al
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    0x80000004,%eax
les    (%ecx),%eax
add    %bl,0x110000(%eax,%eax,1)
sbb    %eax,(%eax)
mov    $0x4,%bh
add    %al,(%eax)
sub    $0x1,%al
add    %al,0x0(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
pusha
add    $0xc5c00000,%eax
add    %eax,(%eax)
add    %esp,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   %esi
add    (%eax),%eax
add    %ah,(%eax)
roll   $0x0,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    111b <getpwnam@plt-0x15a5>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    1129 <getpwnam@plt-0x1597>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     1125 <getpwnam@plt-0x159b>
jo     113d <getpwnam@plt-0x1583>
add    %dh,0x69(%ebx)
addr16 jae 113f <getpwnam@plt-0x1581>
jae    113c <getpwnam@plt-0x1584>
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
popa
fs imul $0x73727473,%fs:0x0(%edx),%esi
73
imul   $0x5f006c61,0x6e(%edi),%esp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
addr16 push $0x6d
jo     114b <getpwnam@plt-0x1575>
arpl   %bp,0x6b(%eax)
add    %ch,0x73(%ecx)
popa
insb   (%dx),%es:(%edi)
jo     115e <getpwnam@plt-0x1562>
popa
add    %dh,0x69(%eax)
jo     1161 <getpwnam@plt-0x155f>
add    %bl,0x5f(%edi)
jae    1175 <getpwnam@plt-0x154b>
jb     1167 <getpwnam@plt-0x1559>
jne    1175 <getpwnam@plt-0x154b>
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    1170 <getpwnam@plt-0x1550>
imul   $0x6c627369,%fs:0x0(%edx),%esi
popa
outsb  %ds:(%esi),(%dx)
imul   $0x66,(%eax),%eax
outsl  %ds:(%esi),(%dx)
jb     1186 <getpwnam@plt-0x153a>
add    %dh,0x61(%edi)
jb     118e <getpwnam@plt-0x1532>
js     1122 <getpwnam@plt-0x159e>
jae    118d <getpwnam@plt-0x1533>
addr16 jo 1199 <getpwnam@plt-0x1527>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    1198 <getpwnam@plt-0x1528>
add    %dh,0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     1139 <getpwnam@plt-0x1587>
jb     11a0 <getpwnam@plt-0x1520>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     1147 <getpwnam@plt-0x1579>
pop    %edi
gs
js     11b4 <getpwnam@plt-0x150c>
je     114d <getpwnam@plt-0x1573>
jae    11c3 <getpwnam@plt-0x14fd>
jb     11c1 <getpwnam@plt-0x14ff>
bound  %esi,0x6b(%edx)
add    %ah,0x65(%edi)
je     11c9 <getpwnam@plt-0x14f7>
imul   $0x6c6c69,0x6b(%eax,%eax,1),%esp
jae    11d7 <getpwnam@plt-0x14e9>
jb     11d8 <getpwnam@plt-0x14e8>
jo     11d5 <getpwnam@plt-0x14eb>
add    %ch,0x6d(%ecx)
popa
js     11d1 <getpwnam@plt-0x14ef>
imul   $0x70737369,0x0(%esi),%esi
popa
arpl   %sp,0x0(%ebp)
jae    11ee <getpwnam@plt-0x14d2>
jb     11f0 <getpwnam@plt-0x14d0>
outsl  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     11f7 <getpwnam@plt-0x14c9>
outsl  %ds:(%esi),(%dx)
imul   $0x73,(%eax),%eax
je     11fb <getpwnam@plt-0x14c5>
je     11fa <getpwnam@plt-0x14c6>
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     1206 <getpwnam@plt-0x14ba>
jns    1194 <getpwnam@plt-0x152c>
jae    120a <getpwnam@plt-0x14b6>
jb     11fb <getpwnam@plt-0x14c5>
push   $0x6c756e72
add    %ch,0x73(%ecx)
jo     1214 <getpwnam@plt-0x14ac>
imul   $0x74656700,0x74(%esi),%ebp
jo     1222 <getpwnam@plt-0x149e>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     1223 <getpwnam@plt-0x149d>
jo     121e <getpwnam@plt-0x14a2>
add    %dh,%fs:0x74(%ebx)
jb     1227 <getpwnam@plt-0x1499>
outsb  %gs:(%esi),(%dx)
add    %ch,0x73(%ecx)
js     1226 <getpwnam@plt-0x149a>
imul   $0x73690074,0x69(%edi),%esp
popa
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
jne    123b <getpwnam@plt-0x1485>
add    %dh,0x74(%ebx)
jb     1246 <getpwnam@plt-0x147a>
je     1247 <getpwnam@plt-0x1479>
add    %dh,0x74(%ebx)
jb     123d <getpwnam@plt-0x1483>
jae    124c <getpwnam@plt-0x1474>
outsb  %ds:(%esi),(%dx)
add    %ch,0x73(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1249 <getpwnam@plt-0x1477>
jb     11e6 <getpwnam@plt-0x14da>
pop    %edi
pop    %edi
gs
jb     125d <getpwnam@plt-0x1463>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x64686300,0x6e(%edi),%ebp
imul   $0x6e65706f,0x0(%edx),%esi
ss
xor    $0x0,%al
jb     126b <getpwnam@plt-0x1455>
popa
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     1278 <getpwnam@plt-0x1448>
jo     1290 <getpwnam@plt-0x1430>
add    %ah,0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
js     1295 <getpwnam@plt-0x142b>
je     1285 <getpwnam@plt-0x143b>
je     125c <getpwnam@plt-0x1464>
xor    $0x0,%al
pop    %edi
jae    1290 <getpwnam@plt-0x1430>
je     1297 <getpwnam@plt-0x1429>
insl   (%dx),%es:(%edi)
jo     1230 <getpwnam@plt-0x1490>
pop    %edi
pop    %edi
jae    12a8 <getpwnam@plt-0x1418>
jb     12aa <getpwnam@plt-0x1416>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %dh,0x73(%ebx,%eiz,2)
gs
je     12c0 <getpwnam@plt-0x1400>
addr16 jb 12c3 <getpwnam@plt-0x13fd>
add    %bl,0x5f(%edi)
jbe    12cb <getpwnam@plt-0x13f5>
outsb  %ds:(%esi),(%dx)
jo     12cd <getpwnam@plt-0x13f3>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6d,(%eax),%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
imul   $0x6c,0x6c(%ecx),%ebp
jo     12d8 <getpwnam@plt-0x13e8>
add    %dh,0x6d(%ebp)
popa
jae    12e2 <getpwnam@plt-0x13de>
add    %dh,0x74(%ebx)
jb     12df <getpwnam@plt-0x13e1>
popa
jae    12e4 <getpwnam@plt-0x13dc>
arpl   %bp,0x70(%ebp)
add    %dh,0x61(%edx)
imul   $0x74657300,0x65(%ebx),%esi
jo     12f5 <getpwnam@plt-0x13cb>
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esp
je     12f9 <getpwnam@plt-0x13c7>
je     12d0 <getpwnam@plt-0x13f0>
xor    $0x0,%al
imul   $0x72657070,0x75(%ebx),%esi
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
imul   $0x73785f5f,%fs:0x0(%edx),%esi
je     1313 <getpwnam@plt-0x13ad>
je     12ea <getpwnam@plt-0x13d6>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
imul   $0x68706172,0x67(%ebx),%esi
add    %dh,0x61(%edi)
imul   $0x63657865,0x0(%ebx,%esi,1),%esi
jbe    133d <getpwnam@plt-0x1383>
add    %ah,0x65(%edi)
je     1342 <getpwnam@plt-0x137e>
imul   $0x72746573,0x0(%si),%esp
insb   (%dx),%es:(%edi)
imul   $0x65670074,0x69(%ebp),%ebp
je     1352 <getpwnam@plt-0x136e>
ja     1355 <getpwnam@plt-0x136b>
add    %dh,0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     1365 <getpwnam@plt-0x135b>
jne    136b <getpwnam@plt-0x1355>
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    136e <getpwnam@plt-0x1352>
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     1376 <getpwnam@plt-0x134a>
push   $0x73710072
outsl  %ds:(%esi),(%dx)
jb     138f <getpwnam@plt-0x1331>
add    %dh,0x6d(%ecx,%ebp,2)
gs
jae    1322 <getpwnam@plt-0x139e>
pop    %edi
pop    %edi
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     1395 <getpwnam@plt-0x132b>
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     13a2 <getpwnam@plt-0x131e>
add    %bl,0x5f(%edi)
js     13ae <getpwnam@plt-0x1312>
je     139e <getpwnam@plt-0x1322>
je     133f <getpwnam@plt-0x1381>
addr16
gs
je     13b5 <getpwnam@plt-0x130b>
insb   (%dx),%es:(%edi)
imul   $0x69730074,0x69(%ebp),%ebp
addr16 jae 13b3 <getpwnam@plt-0x130d>
je     13bd <getpwnam@plt-0x1303>
popa
jae    13be <getpwnam@plt-0x1302>
add    %ch,0x73(%ecx)
imul   $0x73690074,%fs:0x69(%edi),%esp
arpl   %bp,0x74(%esi)
jb     13cf <getpwnam@plt-0x12f1>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    13d0 <getpwnam@plt-0x12f0>
add    %ah,0x61(%esi)
arpl   %sp,0x65(%ebx)
jae    13e6 <getpwnam@plt-0x12da>
popa
je     1376 <getpwnam@plt-0x134a>
jae    13ec <getpwnam@plt-0x12d4>
jb     13dd <getpwnam@plt-0x12e3>
insl   (%dx),%es:(%edi)
jo     137d <getpwnam@plt-0x1343>
pop    %edi
pop    %edi
jae    13f5 <getpwnam@plt-0x12cb>
jb     13f7 <getpwnam@plt-0x12c9>
outsl  %ds:(%esi),(%dx)
jne    13f2 <getpwnam@plt-0x12ce>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     13fa <getpwnam@plt-0x12c6>
jb     1409 <getpwnam@plt-0x12b7>
outsl  %ds:(%esi),(%dx)
jb     139a <getpwnam@plt-0x1326>
je     13ff <getpwnam@plt-0x12c1>
addr16
gs
je     1410 <getpwnam@plt-0x12b0>
addr16 jb 1413 <getpwnam@plt-0x12ad>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     1424 <getpwnam@plt-0x129c>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x63707473,0x0(%esi),%ebp
jo     1435 <getpwnam@plt-0x128b>
add    %dh,0x72(%edi)
imul   $0x63737973,0x0(%ebp,%eiz,2),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x72(%esi)
gs add %ch,%gs:0x73(%ecx)
jo     1449 <getpwnam@plt-0x1277>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x5f(%eax,%eax,1)
pop    %edi
outsb  %gs:(%esi),(%dx)
jbe    1447 <getpwnam@plt-0x1279>
jb     144f <getpwnam@plt-0x1271>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
jae    145a <getpwnam@plt-0x1266>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    1476 <getpwnam@plt-0x124a>
popa
jb     1479 <getpwnam@plt-0x1247>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x6f(%edx)
bound  %ebx,0x77(%edi)
popa
jb     1481 <getpwnam@plt-0x123f>
imul   $0x6c6e7300,0x67(%esi),%ebp
insw   (%dx),%es:(%edi)
je     141e <getpwnam@plt-0x12a2>
data16
jne    148f <getpwnam@plt-0x1231>
arpl   %sp,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
jae    149e <getpwnam@plt-0x1222>
popa
arpl   %bp,0x6e(%ebx)
js     14a4 <getpwnam@plt-0x121c>
add    %ah,0x73(%ecx,%eiz,2)
push   $0x7272655f
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x61(%eax)
jb     14b3 <getpwnam@plt-0x120d>
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
data16
je     1447 <getpwnam@plt-0x1279>
jno    14ac <getpwnam@plt-0x1214>
push   $0x737261
jae    14c4 <getpwnam@plt-0x11fc>
popa
arpl   %bp,0x6e(%ebx)
insb   (%dx),%es:(%edi)
gs
data16
je     1459 <getpwnam@plt-0x1267>
outsl  %ds:(%esi),(%dx)
jo     14d0 <getpwnam@plt-0x11f0>
jo     14d2 <getpwnam@plt-0x11ee>
jb     1460 <getpwnam@plt-0x1260>
fs
jno    14d6 <getpwnam@plt-0x11ea>
jns    14d3 <getpwnam@plt-0x11ed>
je     14c8 <getpwnam@plt-0x11f8>
js     1469 <getpwnam@plt-0x1257>
ja     14d3 <getpwnam@plt-0x11ed>
imul   $0x6d6f7270,0x68(%ebx),%esp
jo     14e8 <getpwnam@plt-0x11d8>
add    %ch,0x6f(%edi,%ebp,2)
jo     14e8 <getpwnam@plt-0x11d8>
gs
jae    14f1 <getpwnam@plt-0x11cf>
add    %ch,0x75(%edi)
je     14f2 <getpwnam@plt-0x11ce>
jne    14f8 <getpwnam@plt-0x11c8>
add    %dh,0x61(%eax)
jb     14fc <getpwnam@plt-0x11c4>
outsb  %gs:(%esi),(%dx)
gs
js     1502 <getpwnam@plt-0x11be>
arpl   %ax,(%eax)
je     1501 <getpwnam@plt-0x11bf>
imul   $0x73,0x75(%eax),%esi
push   $0x6b636162
add    %ah,0x6c(%edi,%ebp,2)
popa
je     1515 <getpwnam@plt-0x11ab>
je     1516 <getpwnam@plt-0x11aa>
add    %ch,0x70(%edi)
je     1515 <getpwnam@plt-0x11ab>
imul   $0x67726100,0x74(%ebx),%esi
jo     1526 <getpwnam@plt-0x119a>
jb     14b4 <getpwnam@plt-0x120c>
bound  %esp,0x63(%ecx)
imul   $0x78,0x65(%edi),%ebx
imul   $0x73757461,0x74(%ebx,%esi,2),%esi
add    %dh,0x74(%ebx)
popa
arpl   %bp,0x62(%ebx)
popa
jae    1532 <getpwnam@plt-0x118e>
add    %ah,0x68(%ebx)
arpl   %bp,%gs:0x6b(%ebx)
ja     153a <getpwnam@plt-0x1186>
add    %ah,0x6f(%edi)
je     154e <getpwnam@plt-0x1172>
imul   $0x646c68,0x63(%edi),%esp
jae    154d <getpwnam@plt-0x1173>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    14ef <getpwnam@plt-0x11d1>
gs
jbe    1553 <getpwnam@plt-0x116d>
insb   (%dx),%es:(%edi)
jae    1560 <getpwnam@plt-0x1160>
imul   $0x3274756f,0x0(%eax),%esi
add    %ch,0x6f(%eax)
insl   (%dx),%es:(%edi)
gs
jae    1577 <getpwnam@plt-0x1149>
jb     1505 <getpwnam@plt-0x11bb>
jae    157b <getpwnam@plt-0x1145>
popa
arpl   %bp,0x70(%ebx)
add    %dh,0x65(%edx)
imul   $0x65646f,%fs:0x6e(%edx),%esi
imul   $0x61006d75,0x6e(%esp,%ebp,2),%ebp
jb     1589 <getpwnam@plt-0x1137>
jae    159b <getpwnam@plt-0x1125>
outsb  %ds:(%esi),(%dx)
je     1586 <getpwnam@plt-0x113a>
js     1527 <getpwnam@plt-0x1199>
jae    159a <getpwnam@plt-0x1126>
jae    15a4 <getpwnam@plt-0x111c>
outsb  %ds:(%esi),(%dx)
je     158f <getpwnam@plt-0x1131>
js     1530 <getpwnam@plt-0x1190>
jae    15a5 <getpwnam@plt-0x111b>
je     15a6 <getpwnam@plt-0x111a>
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x70(%ebx)
arpl   %si,0x74(%ebx)
jb     153f <getpwnam@plt-0x1181>
jae    15a9 <getpwnam@plt-0x1117>
insb   (%dx),%es:(%edi)
jbe    15b0 <getpwnam@plt-0x1110>
add    %ah,0x74(%ecx)
popa
bound  %eax,(%eax)
jb     15b1 <getpwnam@plt-0x110f>
imul   $0x747369,%fs:0x6c(%edx),%esi
bound  %esp,0x73(%ecx)
gs
jo     15c0 <getpwnam@plt-0x1100>
add    %dh,0x69(%ebx)
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
fs add %ch,%fs:%gs:0x6f(%edx)
bound  %esp,0x74(%ebx)
insb   (%dx),%es:(%edi)
add    %dh,0x75(%ebx)
jo     15de <getpwnam@plt-0x10e2>
jb     15d5 <getpwnam@plt-0x10eb>
jae    15e5 <getpwnam@plt-0x10db>
imul   $0x72617000,0x74(%esi),%ebp
jae    15e0 <getpwnam@plt-0x10e0>
imul   $0x616c,0x0(%ebp,%eiz,2),%bp
jae    15f8 <getpwnam@plt-0x10c8>
arpl   %bp,0x64(%ebp)
outsb  %gs:(%esi),(%dx)
je     15fd <getpwnam@plt-0x10c3>
jns    158d <getpwnam@plt-0x1133>
imul   $0x65707974,0x5f(%ebx),%esi
add    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     160a <getpwnam@plt-0x10b6>
imul   $0x73657361,0x62(%eax,%eax,1),%esp
jns    1612 <getpwnam@plt-0x10ae>
je     1607 <getpwnam@plt-0x10b9>
js     15a8 <getpwnam@plt-0x1118>
popa
jb     1612 <getpwnam@plt-0x10ae>
xor    %al,(%eax)
bound  %esp,0x63(%ecx)
imul   $0x64,0x6e(%edi),%esp
jo     161f <getpwnam@plt-0x10a1>
add    %ah,%fs:0x66(%ebp,%eiz,2)
imul   $0x726176,0x73(%esi),%esp
pop    %edi
data16
jo     1625 <getpwnam@plt-0x109b>
push   $0x72700077
gs
jbe    1633 <getpwnam@plt-0x108d>
jb     1642 <getpwnam@plt-0x107e>
outsl  %ds:(%esi),(%dx)
jne    1647 <getpwnam@plt-0x1079>
add    %ch,0x65(%esi)
gs
fs
jo     164c <getpwnam@plt-0x1074>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     1652 <getpwnam@plt-0x106e>
add    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
jbe    1647 <getpwnam@plt-0x1079>
jb     1647 <getpwnam@plt-0x1079>
jae    165e <getpwnam@plt-0x1062>
popa
arpl   %bp,0x0(%ebx)
jo     165c <getpwnam@plt-0x1064>
imul   $0x7566006f,0x6e(%esi),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %si,0x74(%ebx)
jb     1666 <getpwnam@plt-0x105a>
outsb  %ds:(%esi),(%dx)
addr16 jae 166a <getpwnam@plt-0x1056>
jp     1668 <getpwnam@plt-0x1058>
add    %ah,0x61(%edx)
jae    166d <getpwnam@plt-0x1053>
bound  %esi,0x66(%ebp)
add    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
gs
jb     1614 <getpwnam@plt-0x10ac>
outsl  %fs:(%esi),(%dx)
jo     168a <getpwnam@plt-0x1036>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     1690 <getpwnam@plt-0x1030>
add    %dh,0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x73676973,%fs:0x67(%esi),%ebp
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x61(%edx,%esi,2)
jo     169d <getpwnam@plt-0x1023>
outsb  %ds:(%esi),(%dx)
je     163d <getpwnam@plt-0x1083>
jno    16b4 <getpwnam@plt-0x100c>
outsl  %ds:(%esi),(%dx)
je     16a7 <getpwnam@plt-0x1019>
data16
insb   (%dx),%es:(%edi)
popa
add    %ch,0x6e(%bx,%di)
je     16bb <getpwnam@plt-0x1005>
outsb  %gs:(%esi),(%dx)
imul   $0x72726500,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x6162006f,0x6e(%esi),%ebp
arpl   %bp,0x71(%ebx)
jne    16d1 <getpwnam@plt-0xfef>
je     16c9 <getpwnam@plt-0xff7>
insb   (%dx),%es:(%edi)
imul   $0x74706f00,0x74(%ebx),%esi
insb   (%dx),%es:(%edi)
gs
je     16e4 <getpwnam@plt-0xfdc>
gs
jb     16e6 <getpwnam@plt-0xfda>
add    %ah,0x75(%edx)
imul   $0x646d636e,0x69(%esp,%esi,2),%ebp
add    %ch,0x75(%edi)
je     16b4 <getpwnam@plt-0x100c>
add    %dh,0x61(%esi)
jb     16f1 <getpwnam@plt-0xfcf>
outsb  %ds:(%esi),(%dx)
imul   $0x64657265,0x68(%eax,%eax,1),%esi
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ecx,%ebp,2)
je     1698 <getpwnam@plt-0x1028>
gs
js     16fe <getpwnam@plt-0xfc2>
gs
jo     1712 <getpwnam@plt-0xfae>
imul   $0x74706f00,0x6e(%edi),%ebp
imul   $0x677261,0x6e(%edi),%ebp
popa
jb     1718 <getpwnam@plt-0xfa8>
je     1719 <getpwnam@plt-0xfa7>
pop    %edi
bound  %esi,0x66(%ebp)
add    %bh,0x79(%ecx)
insb   (%dx),%es:(%edi)
jbe    171c <getpwnam@plt-0xfa4>
insb   (%dx),%es:(%edi)
add    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
imul   $0x72617000,0x65(%edx),%edi
jae    1735 <getpwnam@plt-0xf8b>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
data16
je     16d6 <getpwnam@plt-0xfea>
ja     1747 <getpwnam@plt-0xf79>
jb     173e <getpwnam@plt-0xf82>
je     1741 <getpwnam@plt-0xf7f>
js     1752 <getpwnam@plt-0xf6e>
add    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x74(%ebx)
jb     1750 <getpwnam@plt-0xf70>
outsb  %ds:(%esi),(%dx)
add    %dh,0x68(%bp,%di)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jo     1752 <getpwnam@plt-0xf6e>
jb     1754 <getpwnam@plt-0xf6c>
insl   (%dx),%es:(%edi)
add    %dh,0x61(%eax)
je     1761 <getpwnam@plt-0xf5f>
outsl  %ds:(%esi),(%dx)
jo     1770 <getpwnam@plt-0xf50>
add    %ch,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
jne    1775 <getpwnam@plt-0xf4b>
arpl   %ax,(%eax)
insb   (%dx),%es:(%edi)
popa
jae    177c <getpwnam@plt-0xf44>
je     1779 <getpwnam@plt-0xf47>
imul   $0x0,0x6e(%ebp),%esp
fs
gs
data16
jo     1774 <getpwnam@plt-0xf4c>
je     177d <getpwnam@plt-0xf43>
jbe    1778 <getpwnam@plt-0xf48>
jb     1719 <getpwnam@plt-0xfa7>
push   $0x64657265
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
jne    1790 <getpwnam@plt-0xf30>
insb   (%dx),%es:(%edi)
jae    179b <getpwnam@plt-0xf25>
jb     1729 <getpwnam@plt-0xf97>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     1797 <getpwnam@plt-0xf29>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    17c2 <getpwnam@plt-0xefe>
popa
jb     17c5 <getpwnam@plt-0xefb>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    17b7 <getpwnam@plt-0xf09>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    17d8 <getpwnam@plt-0xee8>
gs
jae    1768 <getpwnam@plt-0xf58>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     17d4 <getpwnam@plt-0xeec>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%ecx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000200
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
or     %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
or     %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
or     %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0xa0000,%eax
fiadd  (%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%ecx
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
or     %eax,(%eax)
call   1000199f <_end+0xffe30ab>
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %cl,(%eax)
add    %dh,%bl
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    19cd <getpwnam@plt-0xcf3>
imul   $0x70000,(%ecx),%ecx
incl   (%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x60000,%eax
or     (%edi),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x715,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
jno    19fd <getpwnam@plt-0xcc3>
imul   $0x40000,(%ecx),%ecx
pop    %ds
pop    %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
sub    (%edi),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x20000,%eax
xor    $0x7,%eax
add    %al,(%eax)
push   %esp
mov    $0x1,%dh
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,-0x4a(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
mov    $0x1,%dh
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,-0x4a(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xorb   $0x0,0x80001(%esi)
add    %dl,0x80001b6(%eax)
add    %al,(%eax)
add    %ah,0x80001b6(%eax)
add    %al,(%eax)
add    %dh,0x80001b6(%eax)
add    %al,(%eax)
add    %al,%al
mov    $0x1,%dh
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%al
mov    $0x1,%dh
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
mov    $0x1,%dh
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%al
mov    $0x1,%dh
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,(%edi,%esi,4)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    %dh,0x80001(%edi)
add    %al,(%eax)
sub    $0xb7,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %dh,0x80001(%edi)
add    %al,(%eax)
xor    $0xb7,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    %dh,0x80001(%edi)
add    %al,(%eax)
cmp    $0xb7,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x1(%edi,%esi,4)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,-0x49(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
dec    %esp
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,-0x49(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %esp
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,-0x49(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pop    %esp
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,-0x49(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xorb   $0x0,0x80001(%edi)
add    %al,0x80001(%edi,%esi,4)
add    %al,(%eax)
mov    %dh,0x80001(%edi)
add    %al,(%eax)
mov    %?,0x80001(%edi)
add    %al,(%eax)
nop
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,0x80001(%edi,%esi,4)
add    %al,(%eax)
cwtl
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,0x80001(%edi,%esi,4)
add    %al,(%eax)
mov    0x80001b7,%al
add    %al,(%eax)
add    %ah,0x80001(%edi,%esi,4)
add    %al,(%eax)
test   $0xb7,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,0x80001b7(%eax)
add    %al,(%eax)
add    %dh,0x80001(%edi,%esi,4)
add    %al,(%eax)
mov    $0x80001b7,%eax
add    %al,(%eax)
add    %bh,0x80001(%edi,%esi,4)
add    %al,(%eax)
(bad)
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %al,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ch,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %ch,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%al
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%ah
mov    $0x1,%bh
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x80001,%eax
add    %al,(%eax)
add    $0xb8,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %bh,0x80001(%eax)
add    %al,(%eax)
or     $0xb8,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %bh,0x80001(%eax)
add    %al,(%eax)
adc    $0xb8,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %bh,0x80001(%eax)
add    %al,(%eax)
sbb    $0xb8,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %bh,0x80001(%eax)
add    %al,(%eax)
and    $0xb8,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    %bh,0x80001(%eax)
add    %al,(%eax)
sub    $0xb8,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %bh,0x80001(%eax)
add    %al,(%eax)
inc    %eax
mov    $0x80001,%eax
add    %al,(%eax)
dec    %eax
mov    $0x80001,%eax
add    %al,(%eax)
push   %eax
mov    $0x80001,%eax
add    %al,(%eax)
pop    %eax
mov    $0x80001,%eax
add    %al,(%eax)
pusha
mov    $0x80001,%eax
add    %al,(%eax)
push   $0x80001b8
add    %al,(%eax)
add    %dh,-0x48(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     1c56 <getpwnam@plt-0xa6a>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,0x80001(%eax)
add    %cl,0x80001b8(%eax)
add    %al,(%eax)
add    %dl,0x80001b8(%eax)
add    %al,(%eax)
add    %bl,0x80001b8(%eax)
add    %al,(%eax)
add    %ah,0x80001b8(%eax)
add    %al,(%eax)
add    %ch,0x80001b8(%eax)
add    %al,(%eax)
add    %dh,0x80001b8(%eax)
add    %al,(%eax)
add    %bh,0x80001b8(%eax)
add    %al,(%eax)
add    %al,%al
mov    $0x80001,%eax
add    %al,(%eax)
enter  $0x1b8,$0x0
or     %al,(%eax)
add    %al,(%eax)
sarb   0x80001(%eax)
add    %al,(%eax)
fdivrs 0x80001(%eax)
add    %al,(%eax)
loopne 1cbe <getpwnam@plt-0xa02>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
call   8001ec9 <_end+0x7fe35d5>
add    %al,(%eax)
add    %dh,%al
mov    $0x80001,%eax
add    %al,(%eax)
clc
mov    $0x80001,%eax
add    %al,(%eax)
add    %bh,0x80001(%ecx)
add    %al,(%eax)
or     %bh,0x80001(%ecx)
add    %al,(%eax)
adc    %bh,0x80001(%ecx)
add    %al,(%eax)
sbb    %bh,0x80001(%ecx)
add    %al,(%eax)
and    %bh,0x80001(%ecx)
add    %al,(%eax)
sub    %bh,0x80001(%ecx)
add    %al,(%eax)
xor    %bh,0x80001(%ecx)
add    %al,(%eax)
cmp    %bh,0x80001(%ecx)
add    %al,(%eax)
inc    %eax
mov    $0x80001,%ecx
add    %al,(%eax)
dec    %eax
mov    $0x80001,%ecx
add    %al,(%eax)
push   %eax
mov    $0x80001,%ecx
add    %al,(%eax)
pop    %eax
mov    $0x80001,%ecx
add    %al,(%eax)
pusha
mov    $0x80001,%ecx
add    %al,(%eax)
push   $0x80001b9
add    %al,(%eax)
add    %dh,-0x47(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,0x80001(%ecx)
add    %al,0x80001(%ecx,%edi,4)
add    %al,(%eax)
mov    %bh,0x80001(%ecx)
add    %al,(%eax)
mov    %?,0x80001(%ecx)
add    %al,(%eax)
nop
mov    $0x80001,%ecx
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x80001,%ecx
add    %al,(%eax)
cwtl
mov    $0x80001,%ecx
add    %al,(%eax)
pushf
mov    $0x80001,%ecx
add    %al,(%eax)
mov    0x80001b9,%al
add    %al,(%eax)
add    %ah,0x80001(%ecx,%edi,4)
add    %al,(%eax)
test   $0xb9,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0x80001,%ecx
add    %al,(%eax)
mov    $0xb9,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xb9,%ah
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x80001b9,%eax
add    %al,(%eax)
add    %bh,0x80001(%ecx,%edi,4)
add    %al,(%eax)
sarb   $0x0,0x80001(%ecx)
add    %al,%ah
mov    $0x80001,%ecx
add    %al,(%eax)
enter  $0x1b9,$0x0
or     %al,(%eax)
add    %al,(%eax)
int3
mov    $0x80001,%ecx
add    %al,(%eax)
sarb   0x80001(%ecx)
add    %al,(%eax)
aam    $0xb9
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fdivrs 0x80001(%ecx)
add    %al,(%eax)
fdivrl 0x80001(%ecx)
add    %al,(%eax)
loopne 1e17 <getpwnam@plt-0x8a9>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
in     $0xb9,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
call   800202a <_end+0x7fe3736>
add    %al,(%eax)
add    %ch,%ah
mov    $0x80001,%ecx
add    %al,(%eax)
lock mov $0x80001,%ecx
add    %al,(%eax)
hlt
mov    $0x80001,%ecx
add    %al,(%eax)
clc
mov    $0x80001,%ecx
add    %al,(%eax)
cld
mov    $0x80001,%ecx
add    %al,(%eax)
add    %bh,0x80001(%edx)
add    %al,(%eax)
add    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %bh,0x80001(%edx)
add    %al,(%eax)
or     $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %bh,0x80001(%edx)
add    %al,(%eax)
adc    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %bh,0x80001(%edx)
add    %al,(%eax)
sbb    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %bh,0x80001(%edx)
add    %al,(%eax)
and    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    %bh,0x80001(%edx)
add    %al,(%eax)
sub    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %bh,0x80001(%edx)
add    %al,(%eax)
xor    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmp    %bh,0x80001(%edx)
add    %al,(%eax)
cmp    $0xba,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
mov    $0x80001,%edx
add    %al,(%eax)
inc    %esp
mov    $0x80001,%edx
add    %al,(%eax)
dec    %eax
mov    $0x80001,%edx
add    %al,(%eax)
dec    %esp
mov    $0x80001,%edx
add    %al,(%eax)
push   %eax
mov    $0x80001,%edx
add    %al,(%eax)
push   %esp
mov    $0x80001,%edx
add    %al,(%eax)
pop    %eax
mov    $0x80001,%edx
add    %al,(%eax)
pop    %esp
mov    $0x80001,%edx
add    %al,(%eax)
pusha
mov    $0x80001,%edx
add    %al,(%eax)
fs
mov    $0x80001,%edx
add    %al,(%eax)
push   $0x80001ba
add    %al,(%eax)
add    %ch,0x1(%edx,%edi,4)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,-0x46(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
je     1f40 <getpwnam@plt-0x780>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     1f48 <getpwnam@plt-0x778>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jl     1f50 <getpwnam@plt-0x770>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,0x80001(%edx)
add    %cl,0x80001(%edx,%edi,4)
add    %al,(%eax)
pusha
mov    $0x80001,%ebx
add    %al,(%eax)
fs
mov    $0x80001,%ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x80001,%ebx
add    %al,(%eax)
jo     1f81 <getpwnam@plt-0x73f>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
js     1f89 <getpwnam@plt-0x737>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jl     1f91 <getpwnam@plt-0x72f>
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
test   %bh,0x80001(%ebx)
add    %al,(%eax)
mov    %bh,0x80001(%ebx)
add    %al,(%eax)
nop
mov    $0x80001,%ebx
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x80001,%ebx
add    %al,(%eax)
pushf
mov    $0x80001,%ebx
add    %al,(%eax)
mov    0x80001bb,%al
add    %al,(%eax)
add    %ch,0x80001bb(%eax)
add    %al,(%eax)
add    %ch,0x80001(%ebx,%edi,4)
add    %al,(%eax)
mov    $0xbb,%ah
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x80001bb,%eax
add    %al,(%eax)
add    %al,%al
mov    $0x80001,%ebx
add    %al,(%eax)
les    0x80001(%ebx),%edi
add    %al,(%eax)
int3
mov    $0x80001,%ebx
add    %al,(%eax)
sarb   0x80001(%ebx)
add    %al,(%eax)
fdivrs 0x80001(%ebx)
add    %al,(%eax)
fdivrl 0x80001(%ebx)
add    %al,(%eax)
in     $0xbb,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lock mov $0x80001,%ebx
add    %al,(%eax)
hlt
mov    $0x80001,%ebx
add    %al,(%eax)
cld
mov    $0x80001,%ebx
add    %al,(%eax)
add    %bh,0x800(%ecx,%eax,1)
add    %cl,(%eax)
mov    $0x80001,%esp
add    %al,(%eax)
or     $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %bh,0x800(%ecx,%eax,1)
add    %ah,(%eax)
mov    $0x80001,%esp
add    %al,(%eax)
and    $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sub    $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %bh,0x800(%ecx,%eax,1)
add    %bh,(%eax)
mov    $0x80001,%esp
add    %al,(%eax)
cmp    $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
mov    $0x80001,%esp
add    %al,(%eax)
dec    %eax
mov    $0x80001,%esp
add    %al,(%eax)
push   %eax
mov    $0x80001,%esp
add    %al,(%eax)
push   %esp
mov    $0x80001,%esp
add    %al,(%eax)
pop    %esp
mov    $0x80001,%esp
add    %al,(%eax)
pusha
mov    $0x80001,%esp
add    %al,(%eax)
push   $0x80001bc
add    %al,(%eax)
add    %ch,0x1(%esp,%edi,4)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,0x1(%esp,%edi,4)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,-0x44(%eax)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cmpb   $0x0,0x800(%ecx,%eax,1)
test   %bh,0x800(%ecx,%eax,1)
add    %cl,0x80001(%esp,%edi,4)
add    %al,(%eax)
nop
mov    $0x80001,%esp
add    %al,(%eax)
cwtl
mov    $0x80001,%esp
add    %al,(%eax)
pushf
mov    $0x80001,%esp
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x80001,%esp
add    %al,(%eax)
test   $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0xbc,%ah
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x80001bc,%esp
add    %al,(%eax)
add    %al,%al
mov    $0x80001,%esp
add    %al,(%eax)
enter  $0x1bc,$0x0
or     %al,(%eax)
add    %al,(%eax)
int3
mov    $0x80001,%esp
add    %al,(%eax)
aam    $0xbc
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fdivrs 0x800(%ecx,%eax,1)
add    %ah,%al
mov    $0x80001,%esp
add    %al,(%eax)
in     $0xbc,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
mov    $0x80001,%esp
add    %al,(%eax)
lock mov $0x80001,%esp
add    %al,(%eax)
clc
mov    $0x80001,%esp
add    %al,(%eax)
cld
mov    $0x80001,%esp
add    %al,(%eax)
add    $0xbd,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %bh,0x80001(%ebp)
add    %al,(%eax)
adc    %bh,0x80001(%ebp)
add    %al,(%eax)
adc    $0xbd,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    $0xbd,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %bh,0x80001(%ebp)
add    %al,(%eax)
sub    %bh,0x80001(%ebp)
add    %al,(%eax)
sub    $0xbd,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
les    0x80001(%edi),%edi
add    %al,(%eax)
enter  $0x1bf,$0x0
or     %al,(%eax)
add    %al,(%eax)
sarb   0x80001(%edi)
add    %al,(%eax)
fdivrs 0x80001(%edi)
add    %al,(%eax)
call   80023f8 <_end+0x7fe3b04>
add    %al,(%eax)
add    %al,(%eax,%eax,8)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
cwtl
rolb   $0x0,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
pushf
rolb   $0x0,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
test   $0xc0,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
rolb   $0x0,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x80001c0,%esp
add    %al,(%eax)
add    %cl,%al
rolb   $0x0,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
fadd   %st(0),%st
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
call   8002441 <_end+0x7fe3b4d>
add    %al,(%eax)
add    %bh,%al
rolb   $0x0,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
cld
rolb   $0x0,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
mov    %bh,-0x7ffeffff(%edx)
add    %al,(%eax)
or     %al,%al
add    %eax,(%eax)
add    %eax,-0x3ff40000(%eax)
add    %eax,(%eax)
add    %eax,-0x45540000(%eax)
add    %eax,(%eax)
add    %ebp,(%ebx)
add    %al,(%eax)
mov    $0x10001ba,%esp
push   %esi
add    %al,(%eax)
int3
mov    $0x1d010001,%edx
add    %al,(%eax)
fdivrl 0x16010001(%edx)
add    %al,(%eax)
in     (%dx),%al
mov    $0x4c010001,%edx
add    %al,(%eax)
cld
mov    $0x3d010001,%edx
add    %al,(%eax)
or     $0xbb,%al
add    %eax,(%eax)
add    %ebx,(%edx)
add    %al,(%eax)
sbb    $0xbb,%al
add    %eax,(%eax)
add    %ebx,0x0(%ebx)
add    %ch,(%ebx,%edi,4)
add    %eax,(%eax)
add    %edx,0xbb3c0000
add    %eax,(%eax)
add    %esi,(%ecx)
add    %al,(%eax)
dec    %esp
mov    $0x25010001,%ebx
add    %al,(%eax)
pop    %esp
mov    $0x20010001,%ebx
add    %al,(%eax)
mov    $0x60001bf,%esp
add    $0x0,%al
add    %al,%al
mov    $0x8060001,%edi
add    %al,(%eax)
int3
mov    $0x28060001,%edi
add    %al,(%eax)
aam    $0xbf
add    %eax,(%eax)
push   %es
xor    (%eax),%eax
add    %bl,%ah
mov    $0x53060001,%edi
add    %al,(%eax)
loopne 22f5 <getpwnam@plt-0x3cb>
add    %eax,(%eax)
push   %es
pop    %edx
add    %al,(%eax)
in     $0xbf,%al
add    %eax,(%eax)
push   %es
pop    %ebp
add    %al,(%eax)
sbb    %al,%al
add    %eax,(%eax)
add    %eax,-0x3fdc0000(%ecx)
add    %eax,(%eax)
add    %ecx,-0x3fd80000(%esi)
add    %eax,(%eax)
add    %ecx,-0x3fd40000(%esi)
add    %eax,(%eax)
add    %ecx,-0x3fa00000(%esi)
add    %eax,(%eax)
add    %ecx,-0x3f9c0000(%edi)
add    %eax,(%eax)
add    %eax,-0x3f780000(%edi)
add    %eax,(%eax)
add    %ebp,0x0(%eax,%eax,1)
mov    $0x10001c0,%eax
.byte 0xbb
cmp    %bh,0x1070001(%esi)
add    %al,(%eax)
cmp    $0xbe,%al
add    %eax,(%eax)
pop    %es
add    (%eax),%al
add    %al,-0x42(%eax)
add    %eax,(%eax)
pop    %es
add    (%eax),%eax
add    %al,0x1(%esi,%edi,4)
add    %al,(%edi)
add    $0x0,%al
add    %cl,-0x42(%eax)
add    %eax,(%eax)
pop    %es
add    $0xbe4c0000,%eax
add    %eax,(%eax)
pop    %es
push   %es
add    %al,(%eax)
push   %eax
mov    $0x7070001,%esi
add    %al,(%eax)
push   %esp
mov    $0xa070001,%esi
add    %al,(%eax)
pop    %eax
mov    $0xb070001,%esi
add    %al,(%eax)
pop    %esp
mov    $0xc070001,%esi
add    %al,(%eax)
pusha
mov    $0xd070001,%esi
add    %al,(%eax)
fs
mov    $0xe070001,%esi
add    %al,(%eax)
push   $0x70001be
sldt   (%eax)
insb   (%dx),%es:(%edi)
mov    $0x10070001,%esi
add    %al,(%eax)
jo     23b4 <getpwnam@plt-0x30c>
add    %eax,(%eax)
pop    %es
adc    %eax,(%eax)
add    %dh,0x1(%esi,%edi,4)
add    %al,(%edi)
adc    (%eax),%al
add    %bh,-0x42(%eax)
add    %eax,(%eax)
pop    %es
adc    (%eax),%eax
add    %bh,0x1(%esi,%edi,4)
add    %al,(%edi)
adc    $0x0,%al
add    %al,0x70001be(%eax)
adc    $0xbe840000,%eax
add    %eax,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
mov    %bh,0x17070001(%esi)
add    %al,(%eax)
mov    %?,0x18070001(%esi)
add    %al,(%eax)
nop
mov    $0x19070001,%esi
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x1a070001,%esi
add    %al,(%eax)
cwtl
mov    $0x1b070001,%esi
add    %al,(%eax)
pushf
mov    $0x1c070001,%esi
add    %al,(%eax)
mov    0x70001be,%al
sbb    $0xbea40000,%eax
add    %eax,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
test   $0xbe,%al
add    %eax,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0x20070001,%esi
add    %al,(%eax)
mov    $0xbe,%al
add    %eax,(%eax)
pop    %es
and    %eax,(%eax)
add    %dh,0x22070001(%esi,%edi,4)
add    %al,(%eax)
mov    $0x70001be,%eax
and    (%eax),%eax
add    %bh,0x24070001(%esi,%edi,4)
add    %al,(%eax)
sarb   $0x0,0x25070001(%esi)
add    %al,%ah
mov    $0x26070001,%esi
add    %al,(%eax)
enter  $0x1be,$0x0
pop    %es
daa
add    %al,(%eax)
int3
mov    $0x28070001,%esi
add    %al,(%eax)
sarb   0x29070001(%esi)
add    %al,(%eax)
aam    $0xbe
add    %eax,(%eax)
pop    %es
sub    (%eax),%al
add    %bl,%al
mov    $0x2b070001,%esi
add    %al,(%eax)
fdivrl 0x2c070001(%esi)
add    %al,(%eax)
loopne 2494 <getpwnam@plt-0x22c>
add    %eax,(%eax)
pop    %es
sub    $0xbee40000,%eax
add    %eax,(%eax)
pop    %es
add    %al,%cs:(%eax)
call   70026a7 <_end+0x6fe3db3>
das
add    %al,(%eax)
in     (%dx),%al
mov    $0x30070001,%esi
add    %al,(%eax)
lock mov $0x31070001,%esi
add    %al,(%eax)
hlt
mov    $0x32070001,%esi
add    %al,(%eax)
clc
mov    $0x33070001,%esi
add    %al,(%eax)
cld
mov    $0x34070001,%esi
add    %al,(%eax)
add    %bh,0x35070001(%edi)
add    %al,(%eax)
add    $0xbf,%al
add    %eax,(%eax)
pop    %es
add    %al,%ss:(%eax)
or     %bh,0x37070001(%edi)
add    %al,(%eax)
or     $0xbf,%al
add    %eax,(%eax)
pop    %es
cmp    %al,(%eax)
add    %dl,(%eax)
mov    $0x39070001,%edi
add    %al,(%eax)
adc    $0xbf,%al
add    %eax,(%eax)
pop    %es
cmp    (%eax),%al
add    %bl,(%eax)
mov    $0x3b070001,%edi
add    %al,(%eax)
sbb    $0xbf,%al
add    %eax,(%eax)
pop    %es
cmp    $0x0,%al
add    %ah,(%eax)
mov    $0x3d070001,%edi
add    %al,(%eax)
and    $0xbf,%al
add    %eax,(%eax)
pop    %es
add    %al,%ds:(%eax)
sub    %bh,0x3f070001(%edi)
add    %al,(%eax)
sub    $0xbf,%al
add    %eax,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
xor    %bh,0x41070001(%edi)
add    %al,(%eax)
xor    $0xbf,%al
add    %eax,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
cmp    %bh,0x43070001(%edi)
add    %al,(%eax)
cmp    $0xbf,%al
add    %eax,(%eax)
pop    %es
inc    %esp
add    %al,(%eax)
inc    %eax
mov    $0x45070001,%edi
add    %al,(%eax)
inc    %esp
mov    $0x46070001,%edi
add    %al,(%eax)
dec    %eax
mov    $0x47070001,%edi
add    %al,(%eax)
dec    %esp
mov    $0x48070001,%edi
add    %al,(%eax)
push   %eax
mov    $0x49070001,%edi
add    %al,(%eax)
push   %esp
mov    $0x4a070001,%edi
add    %al,(%eax)
pop    %eax
mov    $0x4b070001,%edi
add    %al,(%eax)
pop    %esp
mov    $0x4c070001,%edi
add    %al,(%eax)
pusha
mov    $0x4d070001,%edi
add    %al,(%eax)
fs
mov    $0x4e070001,%edi
add    %al,(%eax)
push   $0x70001bf
push   %eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x51070001,%edi
add    %al,(%eax)
jo     25b5 <getpwnam@plt-0x10b>
add    %eax,(%eax)
pop    %es
push   %edx
add    %al,(%eax)
je     25bd <getpwnam@plt-0x103>
add    %eax,(%eax)
pop    %es
push   %esp
add    %al,(%eax)
js     25c5 <getpwnam@plt-0xfb>
add    %eax,(%eax)
pop    %es
push   %ebp
add    %al,(%eax)
jl     25cd <getpwnam@plt-0xf3>
add    %eax,(%eax)
pop    %es
push   %esi
add    %al,(%eax)
cmpb   $0x0,0x57070001(%edi)
add    %al,0x58070001(%edi,%edi,4)
add    %al,(%eax)
mov    %bh,0x59070001(%edi)
add    %al,(%eax)
mov    %?,0x5b070001(%edi)
add    %al,(%eax)
nop
mov    $0x5c070001,%edi
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x5e070001,%edi
add    %al,(%eax)
cwtl
mov    $0x5f070001,%edi
add    %al,(%eax)
pushf
mov    $0x60070001,%edi
add    %al,(%eax)
mov    0x70001bf,%al
popa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x62070001,%edi
add    %al,(%eax)
test   $0xbf,%al
add    %eax,(%eax)
pop    %es
arpl   %ax,(%eax)
add    %ch,0x64070001(%edi,%edi,4)
add    %al,(%eax)
mov    $0xbf,%al
add    %eax,(%eax)
pop    %es
add    %al,%gs:(%eax)
mov    $0xbf,%ah
add    %eax,(%eax)
pop    %es
data16
add    %al,(%eax)
mov    $0x70001bf,%eax
add    %al,(%bx,%si)
push   %ebx
sub    $0x8,%esp
call   2f30 <main+0x220>
add    $0x19797,%ebx
mov    0x1a8(%ebx),%eax
test   %eax,%eax
je     26aa <getpwnam@plt-0x16>
call   29c0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x10(%ebx)
push   $0x8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x14(%ebx)
push   $0x10
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x18(%ebx)
push   $0x18
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x1c(%ebx)
push   $0x20
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x20(%ebx)
push   $0x28
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x24(%ebx)
push   $0x30
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x28(%ebx)
push   $0x38
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x2c(%ebx)
push   $0x40
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x30(%ebx)
push   $0x48
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x34(%ebx)
push   $0x50
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x38(%ebx)
push   $0x58
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x3c(%ebx)
push   $0x60
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x40(%ebx)
push   $0x68
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x44(%ebx)
push   $0x70
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x48(%ebx)
push   $0x78
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x4c(%ebx)
push   $0x80
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x50(%ebx)
push   $0x88
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x54(%ebx)
push   $0x90
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x58(%ebx)
push   $0x98
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x60(%ebx)
push   $0xa8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x64(%ebx)
push   $0xb0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x68(%ebx)
push   $0xb8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x70(%ebx)
push   $0xc8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x74(%ebx)
push   $0xd0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x78(%ebx)
push   $0xd8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x80(%ebx)
push   $0xe8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x84(%ebx)
push   $0xf0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x88(%ebx)
push   $0xf8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x8c(%ebx)
push   $0x100
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x90(%ebx)
push   $0x108
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x94(%ebx)
push   $0x110
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x98(%ebx)
push   $0x118
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x9c(%ebx)
push   $0x120
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xa0(%ebx)
push   $0x128
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xa4(%ebx)
push   $0x130
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xa8(%ebx)
push   $0x138
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xac(%ebx)
push   $0x140
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xb0(%ebx)
push   $0x148
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xb4(%ebx)
push   $0x150
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xb8(%ebx)
push   $0x158
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xbc(%ebx)
push   $0x160
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xc0(%ebx)
push   $0x168
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xc4(%ebx)
push   $0x170
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xc8(%ebx)
push   $0x178
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xcc(%ebx)
push   $0x180
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xd0(%ebx)
push   $0x188
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xd4(%ebx)
push   $0x190
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xd8(%ebx)
push   $0x198
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0xfc(%ebx)
push   $0x1e0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x100(%ebx)
push   $0x1e8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x104(%ebx)
push   $0x1f0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x108(%ebx)
push   $0x1f8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x10c(%ebx)
push   $0x200
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x110(%ebx)
push   $0x208
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x114(%ebx)
push   $0x210
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x118(%ebx)
push   $0x218
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x11c(%ebx)
push   $0x220
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x120(%ebx)
push   $0x228
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x124(%ebx)
push   $0x230
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x128(%ebx)
push   $0x238
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x12c(%ebx)
push   $0x240
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x130(%ebx)
push   $0x248
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x134(%ebx)
push   $0x250
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x138(%ebx)
push   $0x258
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x13c(%ebx)
push   $0x260
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x140(%ebx)
push   $0x268
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x144(%ebx)
push   $0x270
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x148(%ebx)
push   $0x278
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x14c(%ebx)
push   $0x280
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x150(%ebx)
push   $0x288
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x154(%ebx)
push   $0x290
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x158(%ebx)
push   $0x298
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x15c(%ebx)
push   $0x2a0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x160(%ebx)
push   $0x2a8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x164(%ebx)
push   $0x2b0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x168(%ebx)
push   $0x2b8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x16c(%ebx)
push   $0x2c0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x170(%ebx)
push   $0x2c8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x174(%ebx)
push   $0x2d0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x178(%ebx)
push   $0x2d8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x17c(%ebx)
push   $0x2e0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x180(%ebx)
push   $0x2e8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x184(%ebx)
push   $0x2f0
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x188(%ebx)
push   $0x2f8
jmp    26b0 <getpwnam@plt-0x10>
jmp    *0x18c(%ebx)
push   $0x300
jmp    26b0 <getpwnam@plt-0x10>
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0x19153,%ebx
test   %eax,%eax
je     2cfe <__ctype_b_loc@plt+0x3e>
cmpb   $0x0,(%eax)
je     2cfe <__ctype_b_loc@plt+0x3e>
mov    %eax,0x4(%esp)
lea    -0x6b08(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    -0x7458(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
push   %ebp
mov    %esp,%ebp
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x19112,%ebx
and    $0xfffffff0,%esp
sub    $0xc0,%esp
call   2ac0 <__errno_location@plt>
lea    0x27a8(%ebx),%edx
movl   $0x0,0x14(%esp)
mov    %eax,(%edx)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   2790 <_setjmp@plt>
test   %eax,%eax
jne    2e4d <main+0x13d>
lea    0x700(%ebx),%eax
lea    0x24(%esp),%edx
mov    %edx,(%eax)
call   2960 <getpid@plt>
lea    0x27b0(%ebx),%edx
mov    %eax,(%edx)
call   13ce0 <main+0x10fd0>
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   c2c0 <main+0x95b0>
mov    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   d830 <main+0xab20>
test   %eax,%eax
jne    2e22 <main+0x112>
lea    0x29b8(%ebx),%eax
movl   $0x3,0x14(%esp)
cmpb   $0x0,0x3(%eax)
jne    2e02 <main+0xf2>
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   c320 <main+0x9610>
lea    0x29ec(%ebx),%eax
movl   $0x4,0x14(%esp)
mov    (%eax),%eax
test   %eax,%eax
je     2dda <main+0xca>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   5470 <main+0x2760>
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x6(%eax)
je     2df5 <main+0xe5>
mov    $0x1,%eax
call   bd70 <main+0x9060>
call   110f0 <main+0xe3e0>
lea    0x29ec(%ebx),%eax
cmpl   $0x0,(%eax)
jne    2df0 <main+0xe0>
jmp    2de6 <main+0xd6>
lea    -0x70e5(%ebx),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
test   %eax,%eax
je     2daa <main+0x9a>
cmpb   $0x0,(%eax)
je     2daa <main+0x9a>
call   bee0 <main+0x91d0>
xchg   %ax,%ax
jmp    2daa <main+0x9a>
lea    -0x7101(%ebx),%eax
movl   $0x1,0x14(%esp)
call   bee0 <main+0x91d0>
lea    -0x70f4(%ebx),%eax
movl   $0x2,0x14(%esp)
call   bee0 <main+0x91d0>
jmp    2d96 <main+0x86>
call   13e30 <main+0x11120>
lea    0x70c(%ebx),%eax
mov    0x14(%esp),%esi
mov    (%eax),%eax
cmp    $0x4,%eax
je     2df0 <main+0xe0>
test   %esi,%esi
je     2df0 <main+0xe0>
lea    0x29b8(%ebx),%edx
cmpb   $0x0,0x3(%edx)
je     2df0 <main+0xe0>
lea    0x27ac(%ebx),%edx
cmpl   $0x0,(%edx)
jne    2df0 <main+0xe0>
test   %eax,%eax
je     2ecb <main+0x1bb>
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   c320 <main+0x9610>
lea    0x6fc(%ebx),%eax
movl   $0x0,(%eax)
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    2ee5 <main+0x1d5>
cmp    $0x1,%esi
je     2e35 <main+0x125>
cmp    $0x2,%esi
je     2d96 <main+0x86>
cmp    $0x3,%esi
nop
jne    2de6 <main+0xd6>
jmp    2db6 <main+0xa6>
lea    0x234(%ebx),%eax
mov    (%eax),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   11760 <main+0xea50>
jmp    2e8a <main+0x17a>
call   4790 <main+0x1a80>
lea    0x0(%esi),%esi
jmp    2eae <main+0x19e>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   2f24 <main+0x214>
add    $0x18f2a,%ebx
lea    -0x7acc(%ebx),%eax
push   %eax
lea    -0x7b3c(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x1ac(%ebx)
call   2a20 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2f30 <main+0x220>
add    $0x18ee3,%ebx
sub    $0x14,%esp
lea    0x2f7(%ebx),%eax
lea    0x2f4(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     2f6b <main+0x25b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x194(%ebx),%eax
test   %eax,%eax
je     2f65 <main+0x255>
mov    %edx,(%esp)
call   *%eax
jmp    2f65 <main+0x255>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2f30 <main+0x220>
add    $0x18ea3,%ebx
sub    $0x14,%esp
lea    0x2f4(%ebx),%eax
lea    0x2f4(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    2fb4 <main+0x2a4>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x1b4(%ebx),%ecx
test   %ecx,%ecx
je     2fae <main+0x29e>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    2fae <main+0x29e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2f30 <main+0x220>
add    $0x18e53,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x2f4(%ebx)
jne    300f <main+0x2ff>
mov    0x1a0(%ebx),%eax
test   %eax,%eax
je     3003 <main+0x2f3>
mov    0x1d8(%ebx),%eax
mov    %eax,(%esp)
call   2910 <__cxa_finalize@plt>
call   2f40 <main+0x230>
movb   $0x1,0x2f4(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2f30 <main+0x220>
add    $0x18e03,%ebx
sub    $0x14,%esp
mov    -0x7d0(%ebx),%eax
test   %eax,%eax
je     3051 <main+0x341>
mov    0x1b0(%ebx),%eax
test   %eax,%eax
je     3051 <main+0x341>
lea    -0x7d0(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    2f80 <main+0x270>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movzbl (%eax),%edx
call   2f30 <main+0x220>
add    $0x18dbb,%ebx
mov    %edx,%esi
shl    $0x4,%esi
test   %edx,%edx
je     3094 <main+0x384>
mov    %eax,%ecx
lea    0x0(%esi),%esi
add    $0x1,%ecx
add    %edx,%esi
movzbl (%ecx),%edx
test   %edx,%edx
jne    3088 <main+0x378>
mov    %esi,%eax
mov    $0xa41a41a5,%edx
mul    %edx
mov    %esi,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
lea    0x654(%ebx),%eax
shr    $0x5,%edx
imul   $0x27,%edx,%edx
sub    %edx,%esi
lea    (%eax,%esi,4),%ebp
mov    (%eax,%esi,4),%esi
test   %esi,%esi
jne    30c8 <main+0x3b8>
jmp    30db <main+0x3cb>
nop
mov    %esi,%ebp
mov    (%esi),%esi
test   %esi,%esi
je     30db <main+0x3cb>
mov    0x4(%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
jne    30c0 <main+0x3b0>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x18d33,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   3060 <main+0x350>
mov    (%eax),%edx
test   %edx,%edx
je     31a0 <main+0x490>
lea    0x6fc(%ebx),%edi
addl   $0x1,(%edi)
mov    (%eax),%esi
mov    0xc(%esi),%edx
test   $0x1,%dl
je     3170 <main+0x460>
or     $0x2,%edx
mov    %edx,0xc(%esi)
mov    %esi,(%eax)
mov    (%edi),%eax
lea    -0x1(%eax),%edx
xor    %eax,%eax
test   %edx,%edx
mov    %edx,(%edi)
jne    3149 <main+0x439>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    3158 <main+0x448>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
call   4790 <main+0x1a80>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%edx
mov    (%esi),%ebp
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   27a0 <free@plt>
mov    0x8(%esi),%edx
mov    %edx,(%esp)
call   27a0 <free@plt>
mov    %esi,(%esp)
mov    %ebp,%esi
call   27a0 <free@plt>
mov    0xc(%esp),%eax
jmp    312e <main+0x41e>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x18c73,%ebx
sub    $0x1c,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x654(%ebx),%eax
mov    %eax,0x8(%esp)
add    $0x9c,%eax
mov    %eax,0xc(%esp)
xchg   %ax,%ax
mov    0x8(%esp),%eax
mov    (%eax),%esi
mov    %eax,%ebp
test   %esi,%esi
je     3208 <main+0x4f8>
mov    0xc(%esi),%eax
test   $0x1,%al
je     3248 <main+0x538>
or     $0x2,%eax
mov    %eax,0xc(%esi)
mov    %esi,0x0(%ebp)
mov    %esi,%ebp
mov    (%esi),%esi
test   %esi,%esi
jne    31ec <main+0x4dc>
lea    0x0(%esi,%eiz,1),%esi
addl   $0x4,0x8(%esp)
mov    0xc(%esp),%eax
cmp    %eax,0x8(%esp)
jne    31e0 <main+0x4d0>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%edx
mov    (%eax),%eax
mov    %eax,0x8(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%edx)
jne    323e <main+0x52e>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    3276 <main+0x566>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%esi),%eax
mov    (%esi),%edi
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    %esi,(%esp)
call   27a0 <free@plt>
cmp    %edi,%esi
mov    %edi,0x0(%ebp)
je     31fc <main+0x4ec>
mov    %edi,%esi
jmp    31e8 <main+0x4d8>
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
call   3060 <main+0x350>
mov    (%eax),%edx
test   %edx,%edx
je     32aa <main+0x59a>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    32b0 <main+0x5a0>
mov    %edx,%eax
add    $0xc,%esp
ret
xor    %eax,%eax
testb  $0x1,0xc(%edx)
cmove  %edx,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x18b63,%ebx
sub    $0x1c,%esp
lea    -0x671a(%ebx),%edi
jmp    32e9 <main+0x5d9>
lea    0x0(%esi),%esi
cmp    $0x61,%esi
je     3380 <main+0x670>
mov    %edi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
mov    %eax,%esi
jne    32e0 <main+0x5d0>
lea    0x29cc(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     338f <main+0x67f>
lea    0x234(%ebx),%edi
jmp    3328 <main+0x618>
lea    0x0(%esi),%esi
mov    0x0(%ebp),%eax
lea    0x4(%eax),%edx
mov    0x4(%eax),%eax
mov    %edx,0x0(%ebp)
test   %eax,%eax
je     3370 <main+0x660>
mov    %eax,(%esp)
call   30f0 <main+0x3e0>
test   %eax,%eax
je     3318 <main+0x608>
mov    0x0(%ebp),%eax
mov    $0x1,%esi
mov    (%eax),%eax
mov    %eax,0xc(%esp)
lea    -0x7a84(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x7a7c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
mov    0x0(%ebp),%eax
lea    0x4(%eax),%edx
mov    0x4(%eax),%eax
mov    %edx,0x0(%ebp)
test   %eax,%eax
jne    3328 <main+0x618>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   31b0 <main+0x4a0>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    3387 <main+0x677>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   2f30 <main+0x220>
add    $0x18a7e,%ebx
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   d220 <main+0xa510>
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
lea    -0x7a6a(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x18a40,%ebx
mov    0x44(%esp),%ebp
cmpl   $0x1,0x40(%esp)
je     3521 <main+0x811>
lea    0x6fc(%ebx),%edi
movl   $0x0,0x18(%esp)
nop
add    $0x4,%ebp
mov    0x0(%ebp),%esi
test   %esi,%esi
je     3494 <main+0x784>
lea    0x1(%esi),%eax
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     34b5 <main+0x7a5>
lea    0x1(%eax),%ecx
movb   $0x0,(%eax)
mov    %esi,%eax
mov    %ecx,0x10(%esp)
call   3060 <main+0x350>
mov    (%eax),%edx
addl   $0x1,(%edi)
test   %edx,%edx
je     34d3 <main+0x7c3>
testb  $0x1,0xc(%edx)
je     34a0 <main+0x790>
mov    0x10(%esp),%eax
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   c130 <main+0x9420>
mov    0x14(%esp),%edx
andl   $0xfffffffd,0xc(%edx)
mov    %eax,0x8(%edx)
subl   $0x1,(%edi)
jne    3410 <main+0x700>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     3410 <main+0x700>
add    $0x4,%ebp
call   4790 <main+0x1a80>
mov    0x0(%ebp),%esi
test   %esi,%esi
jne    341a <main+0x70a>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%edx),%eax
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    0x14(%esp),%edx
jmp    3459 <main+0x749>
mov    %esi,%eax
call   3060 <main+0x350>
mov    (%eax),%eax
test   %eax,%eax
je     3557 <main+0x847>
mov    %eax,(%esp)
call   33a0 <main+0x690>
jmp    3410 <main+0x700>
movl   $0x10,(%esp)
mov    %eax,0x1c(%esp)
call   c0b0 <main+0x93a0>
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
call   c130 <main+0x9420>
mov    0x14(%esp),%edx
mov    %eax,0x4(%edx)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   c130 <main+0x9420>
mov    0x14(%esp),%edx
mov    0x1c(%esp),%ecx
movl   $0x0,0xc(%edx)
movl   $0x0,(%edx)
mov    %eax,0x8(%edx)
mov    %edx,(%ecx)
jmp    3474 <main+0x764>
lea    0x654(%ebx),%edi
lea    0x9c(%edi),%ebp
lea    0x0(%esi),%esi
mov    (%edi),%esi
test   %esi,%esi
je     3546 <main+0x836>
xchg   %ax,%ax
mov    %esi,(%esp)
call   33a0 <main+0x690>
mov    (%esi),%esi
test   %esi,%esi
jne    3538 <main+0x828>
add    $0x4,%edi
cmp    %ebp,%edi
jne    3530 <main+0x820>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x7a82(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x7a7c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x234(%ebx),%eax
mov    %esi,0xc(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
movl   $0x1,0x18(%esp)
jmp    3410 <main+0x700>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   2f30 <main+0x220>
add    $0x18896,%ebx
sub    $0x18,%esp
mov    %eax,0x4(%esp)
mov    0x2fc(%ebx),%edx
lea    -0x7a60(%ebx),%eax
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   4800 <main+0x1af0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%edx
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8(%ebp),%esi
mov    0xc(%ebp),%edi
lea    -0x8(%eax),%eax
call   2f30 <main+0x220>
add    $0x18853,%ebx
cmp    $0xf,%eax
mov    %esi,-0x30(%ebp)
mov    0x10(%ebp),%esi
mov    %edi,-0x2c(%ebp)
mov    0x14(%ebp),%edi
ja     3788 <main+0xa78>
mov    -0x79f0(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
mov    -0x30(%ebp),%edx
mov    -0x2c(%ebp),%eax
xor    %esi,%edx
xor    %edi,%eax
or     %eax,%edx
setne  %al
xor    %edx,%edx
movzbl %al,%eax
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edx,%edx
mov    $0x1,%eax
cmp    %edi,-0x2c(%ebp)
jl     3618 <main+0x908>
jg     3690 <main+0x980>
cmp    %esi,-0x30(%ebp)
jbe    3618 <main+0x908>
jmp    3690 <main+0x980>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
cmp    %edi,-0x2c(%ebp)
jg     3618 <main+0x908>
jl     3690 <main+0x980>
cmp    %esi,-0x30(%ebp)
jae    3618 <main+0x908>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    3690 <main+0x980>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
cmp    %edi,-0x2c(%ebp)
jl     3618 <main+0x908>
jg     3690 <main+0x980>
cmp    %esi,-0x30(%ebp)
jb     3618 <main+0x908>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    3690 <main+0x980>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
cmp    %edi,-0x2c(%ebp)
jg     3618 <main+0x908>
jl     3690 <main+0x980>
cmp    %esi,-0x30(%ebp)
ja     3618 <main+0x908>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xc(%ebp),%esp
xor    %eax,%eax
pop    %ebx
xor    %edx,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%edx
mov    -0x2c(%ebp),%eax
xor    %esi,%edx
xor    %edi,%eax
or     %eax,%edx
sete   %al
xor    %edx,%edx
movzbl %al,%eax
jmp    3618 <main+0x908>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%ecx
and    %esi,%ecx
mov    %ecx,%eax
mov    -0x2c(%ebp),%ecx
and    %edi,%ecx
mov    %ecx,%edx
jmp    3618 <main+0x908>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%eax
mov    %esi,%ecx
xor    %edi,%edi
mov    -0x2c(%ebp),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
and    $0x20,%ecx
cmovne %eax,%edx
cmovne %edi,%eax
jmp    3618 <main+0x908>
lea    0x0(%esi),%esi
mov    -0x2c(%ebp),%edx
mov    %esi,%ecx
mov    -0x30(%ebp),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%esi
sar    $0x1f,%esi
and    $0x20,%ecx
cmovne %edx,%eax
cmovne %esi,%edx
jmp    3618 <main+0x908>
mov    -0x2c(%ebp),%ecx
mov    -0x30(%ebp),%eax
imul   %esi,%ecx
imul   %edi,%eax
add    %eax,%ecx
mov    %esi,%eax
mull   -0x30(%ebp)
add    %ecx,%edx
jmp    3618 <main+0x908>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    %edi,%edx
add    -0x30(%ebp),%eax
adc    -0x2c(%ebp),%edx
jmp    3618 <main+0x908>
nop
mov    -0x30(%ebp),%ecx
or     -0x2c(%ebp),%edi
or     %esi,%ecx
mov    %edi,%edx
mov    %ecx,%eax
jmp    3618 <main+0x908>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%eax
mov    -0x2c(%ebp),%edx
sub    %esi,%eax
sbb    %edi,%edx
jmp    3618 <main+0x908>
nop
mov    -0x30(%ebp),%ecx
xor    -0x2c(%ebp),%edi
xor    %esi,%ecx
mov    %edi,%edx
mov    %ecx,%eax
jmp    3618 <main+0x908>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
or     %esi,%eax
je     37d3 <main+0xac3>
mov    %edx,-0x34(%ebp)
mov    -0x2c(%ebp),%ecx
lea    -0x28(%ebp),%eax
mov    -0x30(%ebp),%edx
mov    %esi,0xc(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   2780 <imaxdiv@plt>
mov    -0x34(%ebp),%edx
sub    $0x4,%esp
cmp    $0xd,%edx
je     37c8 <main+0xab8>
mov    -0x28(%ebp),%eax
mov    -0x24(%ebp),%edx
jmp    3618 <main+0x908>
mov    -0x20(%ebp),%eax
mov    -0x1c(%ebp),%edx
jmp    3618 <main+0x908>
lea    -0x7a40(%ebx),%eax
call   3590 <main+0x880>
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
xor    %edi,%edi
push   %esi
mov    $0x1,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x1863a,%ebx
sub    $0x1c,%esp
sub    $0x5,%eax
cmp    $0x1f,%eax
ja     3968 <main+0xc58>
mov    -0x79b0(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%ebp)
mov    %eax,0x0(%ebp)
call   3e70 <main+0x1160>
mov    0x34(%esp),%ecx
mov    %ebp,%edx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   37e0 <main+0xad0>
not    %eax
not    %edx
mov    %edi,%ecx
add    $0x1c,%esp
imul   %esi,%edx
imul   %eax,%ecx
pop    %ebx
add    %edx,%ecx
mul    %esi
pop    %esi
pop    %edi
pop    %ebp
add    %ecx,%edx
ret
xchg   %ax,%ax
mov    0x30(%esp),%eax
mov    0x4(%ebp),%edx
mov    %eax,0x2f8(%ebx)
mov    0x0(%ebp),%eax
jmp    3848 <main+0xb38>
lea    0x0(%esi),%esi
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
test   %edx,%edx
mov    %eax,0x2f8(%ebx)
mov    0x0(%ebp),%eax
je     3978 <main+0xc68>
mov    0x4(%ebp),%edx
jmp    3848 <main+0xb38>
xchg   %ax,%ax
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%ebp)
mov    %eax,0x0(%ebp)
call   3e70 <main+0x1160>
mov    0x34(%esp),%ecx
mov    %ebp,%edx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   37e0 <main+0xad0>
or     %edx,%eax
sete   %al
xor    %edx,%edx
movzbl %al,%eax
jmp    3848 <main+0xb38>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%ebp)
mov    %eax,0x0(%ebp)
call   3e70 <main+0x1160>
mov    %eax,%ecx
mov    0x30(%esp),%eax
mov    %ecx,0x30(%esp)
jmp    37fb <main+0xaeb>
lea    0x0(%esi),%esi
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%ebp)
mov    %eax,0x0(%ebp)
call   3e70 <main+0x1160>
neg    %esi
adc    $0x0,%edi
neg    %edi
mov    %eax,%ecx
mov    0x30(%esp),%eax
mov    %ecx,0x30(%esp)
jmp    37fb <main+0xaeb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
call   3d10 <main+0x1000>
cmpl   $0x23,0x2f8(%ebx)
mov    %eax,%ebp
jne    3985 <main+0xc75>
mov    %edx,0xc(%esp)
call   3e70 <main+0x1160>
mov    0xc(%esp),%edx
mov    %eax,0x2f8(%ebx)
mov    %ebp,%eax
jmp    3848 <main+0xb38>
lea    0x0(%esi),%esi
lea    -0x7a21(%ebx),%eax
call   3590 <main+0x880>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   13920 <main+0x10c10>
jmp    3848 <main+0xb38>
lea    -0x7a2f(%ebx),%eax
call   3590 <main+0x880>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %eax,0x10(%esp)
lea    0x38(%esp),%eax
mov    0x68(%esp),%ebp
mov    %eax,0x1c(%esp)
lea    0xffff86d0,%eax
call   2f30 <main+0x220>
add    $0x1847a,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x2c(%esp)
jmp    39ef <main+0xcdf>
lea    0x0(%esi),%esi
cmp    $0xf,%edi
ja     3a88 <main+0xd78>
movsbl -0x7938(%ebx,%esi,1),%ecx
cmp    %ecx,0x64(%esp)
jle    3a88 <main+0xd78>
mov    %esi,0x60(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
call   3e70 <main+0x1160>
mov    %eax,%esi
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   3e70 <main+0x1160>
mov    0x1c(%esp),%edx
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   37e0 <main+0xad0>
mov    0x2f8(%ebx),%esi
lea    -0x8(%esi),%edi
cmp    $0xf,%edi
ja     3a57 <main+0xd47>
mov    0x2c(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
add    %ebx,%ecx
movzbl -0x8(%edx,%ecx,1),%edx
cmp    %dl,-0x8(%esi,%ecx,1)
mov    %dl,0x2b(%esp)
mov    0x24(%esp),%edx
jl     3a90 <main+0xd80>
test   %ebp,%ebp
jne    39c8 <main+0xcb8>
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x14(%esp),%edx
mov    %eax,(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x4(%esp)
call   35c0 <main+0x8b0>
cmp    $0xf,%edi
jbe    39d1 <main+0xcc1>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movsbl 0x2b(%esp),%ecx
mov    %esi,(%esp)
mov    %ebp,0x8(%esp)
mov    %ecx,0x4(%esp)
call   3990 <main+0xc80>
mov    0x2f8(%ebx),%esi
lea    -0x8(%esi),%edi
jmp    3a57 <main+0xd47>
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x1836e,%ebx
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %esi,%edx
call   37e0 <main+0xad0>
mov    0x2f8(%ebx),%ecx
lea    -0x8(%ecx),%edi
mov    %ecx,%ebp
cmp    $0xf,%edi
mov    %edx,%ecx
mov    %eax,%edx
ja     3b14 <main+0xe04>
mov    0x44(%esp),%eax
mov    %ebp,(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,%eax
mov    %ecx,%edx
call   3990 <main+0xc80>
mov    0x2f8(%ebx),%ebp
mov    %edx,%ecx
mov    %eax,%edx
cmp    $0x3,%ebp
je     3b28 <main+0xe18>
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
mov    %ecx,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   3e70 <main+0x1160>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %eax,0x14(%esp)
lea    0x6f4(%ebx),%eax
mov    (%eax),%edi
mov    0x4(%eax),%ebp
mov    %edi,(%esi)
mov    %edx,%edi
xor    %edx,%edx
or     %ecx,%edi
sete   %dl
or     0x44(%esp),%edx
mov    %ebp,0x4(%esi)
mov    %edx,0x18(%esp)
call   3e70 <main+0x1160>
mov    0x18(%esp),%edx
mov    %edx,0x4(%esp)
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x14(%esp),%eax
call   3ab0 <main+0xda0>
or     %edx,%eax
setne  %dl
xor    %eax,%eax
test   %edi,%edi
setne  %al
add    $0x2c,%esp
and    %edx,%eax
xor    %ecx,%ecx
mov    %eax,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
mov    %ecx,%edx
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x1827e,%ebx
mov    0x30(%esp),%edx
mov    0x34(%esp),%ecx
mov    %edx,(%esp)
mov    %esi,%edx
mov    %ecx,0x4(%esp)
call   3ab0 <main+0xda0>
cmpl   $0x2,0x2f8(%ebx)
mov    %eax,%ebp
mov    %edx,%edi
je     3be0 <main+0xed0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   3e70 <main+0x1160>
mov    %ebp,%ecx
mov    %eax,0x8(%esp)
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%esi)
xor    %edx,%edx
or     %edi,%ecx
setne  %dl
or     0x34(%esp),%edx
mov    %eax,(%esi)
mov    %edx,0xc(%esp)
call   3e70 <main+0x1160>
mov    0xc(%esp),%edx
mov    %edx,0x4(%esp)
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x8(%esp),%eax
call   3ba0 <main+0xe90>
or     %ebp,%eax
or     %edi,%edx
or     %edx,%eax
setne  %al
add    $0x1c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
xor    %edx,%edx
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x181de,%ebx
mov    0x40(%esp),%edx
mov    0x44(%esp),%ecx
mov    %edx,(%esp)
mov    %edi,%edx
mov    %ecx,0x4(%esp)
call   3ba0 <main+0xe90>
cmpl   $0x25,0x2f8(%ebx)
je     3c80 <main+0xf70>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%esi
or     %edx,%eax
mov    %eax,%ebp
sete   %al
movzbl %al,%eax
or     %eax,%esi
call   3e70 <main+0x1160>
mov    %esi,%edx
call   3d10 <main+0x1000>
cmpl   $0x26,0x2f8(%ebx)
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    3cfe <main+0xfee>
call   3e70 <main+0x1160>
test   %ebp,%ebp
setne  %cl
movzbl %cl,%ebp
mov    %ecx,0x14(%esp)
or     0x44(%esp),%ebp
mov    %eax,%esi
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%edi)
mov    %eax,(%edi)
call   3e70 <main+0x1160>
mov    %edi,%edx
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   3c40 <main+0xf30>
mov    0x14(%esp),%ecx
test   %cl,%cl
je     3c73 <main+0xf63>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    3c73 <main+0xf63>
lea    -0x7a0f(%ebx),%eax
call   3590 <main+0x880>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x1810f,%ebx
sub    $0x3c,%esp
lea    0x6f4(%ebx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
call   3e70 <main+0x1160>
cmp    $0x6,%edi
mov    %eax,%ebp
jne    3e00 <main+0x10f0>
cmp    $0x1,%eax
setne  %al
mov    %eax,%edi
lea    -0x18(%ebp),%eax
cmp    $0x9,%eax
ja     3dd8 <main+0x10c8>
call   3e70 <main+0x1160>
mov    %esi,%edx
call   3d10 <main+0x1000>
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jne    3dd0 <main+0x10c0>
mov    %edi,%eax
test   %al,%al
je     3dac <main+0x109c>
mov    0x28(%esp),%eax
sub    $0xb,%ebp
mov    %eax,(%esp)
call   13920 <main+0x10c10>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %ebp,%eax
mov    %edx,0x4(%esp)
call   35c0 <main+0x8b0>
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   134a0 <main+0x10790>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%eax
test   %al,%al
je     3d59 <main+0x1049>
mov    %esi,0x4(%esp)
lea    0x28(%esp),%edx
mov    $0x6,%eax
mov    %ebp,(%esp)
call   3c40 <main+0xf30>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,0x4(%esp)
lea    0x28(%esp),%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   3c40 <main+0xf30>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x18006,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
lea    0x6f0(%ebx),%edx
mov    %eax,0x2fc(%ebx)
mov    %eax,(%edx)
call   3e70 <main+0x1160>
xor    %edx,%edx
call   3d10 <main+0x1000>
mov    0x2f8(%ebx),%ecx
test   %ecx,%ecx
jne    3e5c <main+0x114c>
add    $0x8,%esp
pop    %ebx
ret
lea    -0x7a01(%ebx),%eax
call   3590 <main+0x880>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17fb3,%ebx
sub    $0x2c,%esp
lea    0x6f0(%ebx),%edi
mov    (%edi),%esi
movzbl (%esi),%edx
cmp    $0x7e,%dl
movsbl %dl,%eax
ja     4048 <main+0x1338>
mov    -0x7920(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi),%esi
sub    $0x19,%eax
movzbl 0x1(%esi),%ecx
lea    0x1(%esi),%edx
cmp    $0x3d,%cl
je     3ec8 <main+0x11b8>
mov    %edx,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0xb,%eax
mov    %edx,%esi
lea    0x1(%esi),%edx
jmp    3eb7 <main+0x11a7>
lea    0x0(%esi),%esi
sub    $0x6,%eax
jmp    3ecd <main+0x11bd>
lea    0x0(%esi),%esi
mov    %esi,%edx
jmp    3eb7 <main+0x11a7>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%esi),%ecx
lea    0x1(%esi),%edx
cmp    $0x26,%cl
je     4088 <main+0x1378>
sub    $0x18,%eax
jmp    3eb2 <main+0x11a2>
lea    0x0(%esi),%esi
sub    $0x1a,%eax
jmp    3ecd <main+0x11bd>
lea    0x0(%esi),%esi
movzbl 0x1(%esi),%ecx
lea    0x1(%esi),%edx
cmp    $0x3d,%cl
je     4060 <main+0x1350>
cmp    $0x3e,%cl
jne    4058 <main+0x1348>
sub    $0x2e,%eax
mov    %edx,%esi
jmp    3eab <main+0x119b>
sub    $0x3c,%eax
jmp    3eab <main+0x119b>
movzbl 0x1(%esi),%ecx
lea    0x1(%esi),%edx
cmp    $0x3c,%cl
je     4078 <main+0x1368>
cmp    $0x3d,%cl
jne    4070 <main+0x1360>
sub    $0x34,%eax
mov    %edx,%esi
jmp    3ecd <main+0x11bd>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x14,%eax
jmp    3ecd <main+0x11bd>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   2bf0 <__strtoll_internal@plt>
lea    0x6f4(%ebx),%ecx
mov    %eax,(%ecx)
mov    $0x5,%eax
mov    %edx,0x4(%ecx)
jmp    3eb9 <main+0x11a9>
lea    0x0(%esi,%eiz,1),%esi
call   2cc0 <__ctype_b_loc@plt>
mov    %esi,%ebp
mov    (%eax),%edx
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x5f,%al
je     3fa8 <main+0x1298>
testb  $0x8,(%edx,%eax,2)
jne    3fa8 <main+0x1298>
mov    %esi,%edx
sub    %ebp,%edx
lea    0x1(%edx),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   c170 <main+0x9460>
mov    0x1c(%esp),%edx
lea    0x6f4(%ebx),%ecx
mov    %eax,(%ecx)
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   2b40 <mempcpy@plt>
mov    %esi,%edx
movb   $0x0,(%eax)
mov    $0x6,%eax
jmp    3eb7 <main+0x11a7>
xchg   %ax,%ax
cmpb   $0x3d,0x1(%esi)
lea    0x1(%esi),%edx
je     4098 <main+0x1388>
sub    $0x1a,%eax
jmp    3eb7 <main+0x11a7>
lea    0x0(%esi),%esi
sub    $0x49,%eax
jmp    3eab <main+0x119b>
movzbl 0x1(%esi),%ecx
lea    0x1(%esi),%edx
cmp    $0x7c,%cl
je     40a8 <main+0x1398>
sub    $0x69,%eax
jmp    3eb2 <main+0x11a2>
sub    $0x5a,%eax
jmp    3ecd <main+0x11bd>
add    $0x1,%esi
jmp    3e8a <main+0x117a>
sub    $0x18,%eax
jmp    3eab <main+0x119b>
mov    $0x4,%eax
jmp    3eb9 <main+0x11a9>
lea    0x0(%esi),%esi
sub    $0x33,%eax
jmp    3eb7 <main+0x11a7>
sub    $0x35,%eax
mov    %edx,%esi
jmp    3ecd <main+0x11bd>
lea    0x0(%esi),%esi
sub    $0x32,%eax
jmp    3eb7 <main+0x11a7>
sub    $0x2d,%eax
mov    %edx,%esi
jmp    3eab <main+0x119b>
lea    0x0(%esi),%esi
sub    $0x23,%eax
mov    %edx,%esi
jmp    3ecd <main+0x11bd>
lea    0x0(%esi),%esi
sub    $0xa,%eax
mov    %edx,%esi
jmp    3ecd <main+0x11bd>
lea    0x0(%esi),%esi
sub    $0x7a,%eax
mov    %edx,%esi
jmp    3ecd <main+0x11bd>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
mov    $0x4c,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17d5c,%ebx
sub    $0x1c,%esp
lea    -0x7724(%ebx),%edi
jmp    40f2 <main+0x13e2>
lea    0x0(%esi,%eiz,1),%esi
xor    $0x1,%eax
cmp    %esi,%edx
cmovne %eax,%ebp
mov    %edx,%esi
mov    %edi,(%esp)
call   e020 <main+0xb310>
mov    %eax,%edx
mov    %ebp,%eax
test   %edx,%edx
jne    40e8 <main+0x13d8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x17d10,%ebx
mov    0x34(%esp),%eax
mov    0x30(%esp),%ebp
test   %eax,%eax
mov    0x1e0(%ebx),%edi
jne    4208 <main+0x14f8>
lea    0x6fc(%ebx),%esi
addl   $0x1,(%esi)
mov    0x1dc(%ebx),%eax
cmp    0x1bc(%ebx),%eax
je     4167 <main+0x1457>
cmp    %eax,%edi
je     415b <main+0x144b>
mov    %eax,(%esp)
call   27a0 <free@plt>
lea    0x29b0(%ebx),%eax
mov    %eax,0x1dc(%ebx)
test   %ebp,%ebp
sete   %cl
je     41d0 <main+0x14c0>
cmp    %ebp,%edi
je     41d0 <main+0x14c0>
mov    %ebp,(%esp)
call   c130 <main+0x9420>
mov    %eax,%ebp
cmp    %edi,%ebp
je     4190 <main+0x1480>
cmp    0x1bc(%ebx),%edi
je     4190 <main+0x1480>
mov    %edi,(%esp)
call   27a0 <free@plt>
mov    %ebp,0x1e0(%ebx)
subl   $0x1,(%esi)
jne    41a7 <main+0x1497>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    4200 <main+0x14f0>
lea    -0x771e(%ebx),%eax
mov    %ebp,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0xc(%esp)
call   2a00 <getcwd@plt>
mov    0xc(%esp),%ecx
test   %eax,%eax
mov    %eax,%ebp
je     4228 <main+0x1518>
test   %cl,%cl
mov    %ebp,0x1dc(%ebx)
jne    417c <main+0x146c>
mov    %edi,%ebp
jmp    4190 <main+0x1480>
call   4790 <main+0x1a80>
jmp    41a7 <main+0x1497>
nop
lea    -0x7721(%ebx),%eax
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
jmp    4138 <main+0x1428>
nop
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   29b0 <strerror@plt>
mov    %eax,0x4(%esp)
lea    -0x771a(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
lea    0x29b0(%ebx),%ebp
mov    0xc(%esp),%ecx
jmp    41f2 <main+0x14e2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17bc3,%ebx
sub    $0x8c,%esp
call   40c0 <main+0x13b0>
mov    %eax,0x10(%esp)
lea    0x29cc(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     45dc <main+0x18cc>
movzbl 0x0(%ebp),%eax
cmp    $0x2d,%al
je     4510 <main+0x1800>
cmp    $0x2f,%al
mov    %ebp,%esi
je     4321 <main+0x1611>
cmp    $0x2e,%al
je     4578 <main+0x1868>
test   %al,%al
lea    -0x73bb(%ebx),%eax
cmove  %eax,%ebp
lea    -0x7706(%ebx),%eax
mov    %eax,(%esp)
lea    0x24(%esp),%edi
call   13870 <main+0x10b60>
mov    %eax,0x24(%esp)
jmp    431b <main+0x160b>
lea    0x0(%esi),%esi
movzbl (%eax),%eax
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %al,0xc(%esp)
call   6320 <main+0x3610>
movl   $0x3,(%esp)
mov    %eax,%esi
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
js     4317 <main+0x1607>
mov    0x38(%esp),%edx
and    $0xf000,%edx
cmp    $0x4000,%edx
je     4548 <main+0x1838>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    42d0 <main+0x15c0>
mov    %ebp,%esi
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
xor    %edi,%edi
testb  $0x1,0x10(%esp)
je     43c0 <main+0x16b0>
mov    %esi,(%esp)
call   2840 <chdir@plt>
test   %eax,%eax
mov    %eax,%esi
je     43a8 <main+0x1698>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    436c <main+0x165c>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    43a0 <main+0x1690>
test   %esi,%esi
jne    461f <main+0x190f>
testb  $0x2,0x10(%esp)
je     4393 <main+0x1683>
mov    0x1e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x6efa(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   4790 <main+0x1a80>
jmp    436c <main+0x165c>
nop
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   4110 <main+0x1400>
call   6f40 <main+0x4230>
jmp    4345 <main+0x1635>
nop
mov    %esi,(%esp)
call   d2f0 <main+0xa5e0>
cmpb   $0x2f,(%esi)
mov    %eax,0x14(%esp)
lea    0x1fc(%ebx),%eax
mov    (%eax),%edi
je     43f9 <main+0x16e9>
mov    0x1e0(%ebx),%eax
cmp    0x1bc(%ebx),%eax
je     45f1 <main+0x18e1>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   c5a0 <main+0x9890>
mov    %eax,%edi
mov    %esi,(%esp)
call   2a10 <strlen@plt>
mov    %edi,0x4(%esp)
add    $0x2,%eax
mov    %eax,(%esp)
call   c4d0 <main+0x97c0>
lea    0x1fc(%ebx),%ecx
cmpb   $0x2f,(%esi)
mov    (%ecx),%ecx
lea    0x1(%ecx),%edx
mov    %edx,0xc(%esp)
je     45c0 <main+0x18b0>
cmpb   $0x2f,-0x1(%eax)
mov    %eax,%edi
je     4436 <main+0x1726>
add    $0x1,%edi
movb   $0x2f,(%eax)
cmp    %edi,0xc(%esp)
jb     4598 <main+0x1888>
mov    0x14(%esp),%ecx
lea    -0x76ff(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %eax,0x18(%esp)
mov    %ecx,(%esp)
call   2b70 <strtok@plt>
test   %eax,%eax
je     44ea <main+0x17da>
mov    %esi,0x14(%esp)
mov    0xc(%esp),%esi
mov    %ebp,0x1c(%esp)
mov    %edi,%ebp
mov    0x18(%esp),%edi
jmp    4499 <main+0x1789>
xchg   %ax,%ax
movzbl 0x1(%eax),%ecx
cmp    $0x2e,%cl
je     44b8 <main+0x17a8>
test   %cl,%cl
jne    449e <main+0x178e>
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   2b70 <strtok@plt>
test   %eax,%eax
je     44e0 <main+0x17d0>
cmpb   $0x2e,(%eax)
je     4478 <main+0x1768>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   c5a0 <main+0x9890>
lea    0x1(%eax),%ebp
movb   $0x2f,(%eax)
jmp    4485 <main+0x1775>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2(%eax)
jne    449e <main+0x178e>
cmp    %ebp,%esi
jae    4485 <main+0x1775>
cmpb   $0x2f,-0x2(%ebp)
lea    -0x1(%ebp),%eax
mov    %eax,%ebp
jne    44d9 <main+0x17c9>
jmp    4485 <main+0x1775>
nop
sub    $0x1,%ebp
cmpb   $0x2f,-0x1(%ebp)
je     4485 <main+0x1775>
cmp    %esi,%ebp
jne    44d0 <main+0x17c0>
jmp    4485 <main+0x1775>
nop
mov    %ebp,%edi
mov    0x14(%esp),%esi
mov    0x1c(%esp),%ebp
cmp    %edi,0xc(%esp)
lea    0x1fc(%ebx),%eax
sbb    $0x0,%edi
movb   $0x0,(%edi)
mov    (%eax),%edi
test   %edi,%edi
je     45f1 <main+0x18e1>
mov    %edi,%esi
jmp    4337 <main+0x1627>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%ebp)
jne    42b5 <main+0x15a5>
lea    -0x7721(%ebx),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
orl    $0x2,0x10(%esp)
mov    %eax,%ebp
test   %ebp,%ebp
jne    4616 <main+0x1906>
lea    0x29b0(%ebx),%edx
movzbl (%edx),%eax
mov    %edx,%ebp
jmp    429c <main+0x158c>
nop
cmpb   $0x3a,0xc(%esp)
je     4321 <main+0x1611>
mov    0x10(%esp),%ecx
cmpb   $0x0,0xc(%esp)
mov    %ecx,%eax
setne  %dl
or     $0x2,%eax
test   %dl,%dl
cmove  %ecx,%eax
mov    %eax,0x10(%esp)
jmp    4321 <main+0x1611>
lea    0x0(%esi),%esi
movzbl 0x1(%ebp),%eax
cmp    $0x2e,%al
je     45b0 <main+0x18a0>
cmp    $0x2f,%al
je     431f <main+0x160f>
test   %al,%al
jne    42b5 <main+0x15a5>
mov    %ebp,%esi
jmp    4321 <main+0x1611>
nop
lea    0x2(%ecx),%eax
cmpb   $0x2f,0x1(%ecx)
cmovne 0xc(%esp),%eax
mov    %eax,0xc(%esp)
jmp    4440 <main+0x1730>
lea    0x0(%esi),%esi
movzbl 0x2(%ebp),%eax
cmp    $0x2e,%al
jne    457c <main+0x186c>
jmp    42b5 <main+0x15a5>
lea    0x0(%esi),%esi
mov    0x14(%esp),%edx
lea    0x1(%eax),%edi
movb   $0x2f,(%eax)
add    $0x1,%edx
cmpb   $0x2f,0x1(%esi)
je     45f8 <main+0x18e8>
mov    %edx,0x14(%esp)
jmp    4440 <main+0x1730>
lea    -0x6f1c(%ebx),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
mov    %eax,%ebp
jmp    452f <main+0x181f>
xor    %edi,%edi
jmp    4337 <main+0x1627>
cmpb   $0x2f,0x2(%esi)
je     45d3 <main+0x18c3>
lea    0x2(%eax),%edi
movb   $0x2f,0x1(%eax)
lea    0x2(%ecx),%eax
addl   $0x2,0x14(%esp)
mov    %eax,0xc(%esp)
jmp    4440 <main+0x1730>
movzbl 0x0(%ebp),%eax
jmp    429c <main+0x158c>
lea    -0x76fd(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
jmp    4640 <main+0x1930>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x177e5,%ebx
sub    $0x14,%esp
mov    0x1e0(%ebx),%esi
call   40c0 <main+0x13b0>
test   %eax,%eax
je     466f <main+0x195f>
mov    0x1dc(%ebx),%eax
cmp    0x1bc(%ebx),%eax
je     4690 <main+0x1980>
mov    %eax,%esi
lea    -0x6efa(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   11880 <main+0xeb70>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   4110 <main+0x1400>
mov    0x1dc(%ebx),%esi
jmp    466f <main+0x195f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17771,%ebx
sub    $0x2c,%esp
mov    %edx,0x1c(%esp)
lea    0x234(%ebx),%eax
lea    -0x76ee(%ebx),%edi
mov    (%eax),%esi
lea    0x29d0(%ebx),%eax
mov    (%eax),%ecx
lea    -0x7652(%ebx),%eax
test   %ecx,%ecx
cmove  %eax,%ecx
lea    0x720(%ebx),%eax
mov    (%eax),%edx
lea    -0x76e5(%ebx),%eax
test   %edx,%edx
cmovne %eax,%edi
lea    0x708(%ebx),%eax
mov    %edx,0x10(%esp)
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   11850 <main+0xeb40>
mov    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   11790 <main+0xea80>
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   11760 <main+0xea50>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x176d6,%ebx
sub    $0x18,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x70c(%ebx),%eax
mov    0x20(%esp),%edx
mov    %edx,(%eax)
lea    0x700(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   2b60 <__longjmp_chk@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17696,%ebx
sub    $0x18,%esp
lea    0x704(%ebx),%eax
movl   $0x0,(%eax)
movl   $0x0,(%esp)
call   2b00 <sigsetmask@plt>
lea    0x27ac(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    47cf <main+0x1abf>
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x3(%eax)
jne    47ef <main+0x1adf>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   2810 <signal@plt>
movl   $0x2,(%esp)
call   26d0 <raise@plt>
movl   $0x0,(%esp)
call   4750 <main+0x1a40>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17626,%ebx
sub    $0x18,%esp
lea    0x24(%esp),%edx
lea    0x718(%ebx),%eax
movl   $0x2,(%eax)
mov    0x20(%esp),%eax
call   46b0 <main+0x19a0>
call   115a0 <main+0xe890>
movl   $0x1,(%esp)
call   4750 <main+0x1a40>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x175e6,%ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
lea    0x28(%esp),%edx
call   46b0 <main+0x19a0>
call   115a0 <main+0xe890>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   4750 <main+0x1a40>
lea    0x0(%esi),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
lea    0x14(%esp),%edx
call   46b0 <main+0x19a0>
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   2f30 <main+0x220>
add    $0x1758f,%ebx
cmp    $0x14,%eax
jne    48d0 <main+0x1bc0>
testb  $0x1,0x24(%esp)
lea    -0x76d8(%ebx),%eax
jne    48c9 <main+0x1bb9>
testb  $0x2,0x24(%esp)
lea    -0x76cb(%ebx),%eax
lea    -0x70dd(%ebx),%edx
cmove  %edx,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
cmp    $0x2,%eax
je     48a8 <main+0x1b98>
mov    %eax,(%esp)
call   29b0 <strerror@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
call   6097 <main+0x3387>
add    $0x17537,%ecx
lea    0x714(%ecx),%eax
mov    (%eax),%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x20,%esp
call   2f30 <main+0x220>
add    $0x1750f,%ebx
test   %eax,%eax
lea    0x18(%esp),%edi
jne    4972 <main+0x1c62>
jmp    49aa <main+0x1c9a>
lea    0x0(%esi),%esi
cmp    $0x16,%eax
jg     496b <main+0x1c5b>
mov    0x10(%esi),%eax
test   %eax,%eax
je     496b <main+0x1c5b>
mov    %eax,(%esp)
movl   $0x3,0x8(%esp)
mov    %edi,0x4(%esp)
call   9270 <main+0x6560>
mov    0x18(%esp),%eax
movl   $0x1,0x8(%esp)
mov    0x4(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   e250 <main+0xb540>
mov    0x4(%esi),%esi
test   %esi,%esi
je     49aa <main+0x1c9a>
mov    %edi,0x1c(%esp)
mov    (%esi),%eax
cmp    $0x10,%eax
jl     496b <main+0x1c5b>
cmp    $0x14,%eax
jg     4930 <main+0x1c20>
movl   $0xa,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   9270 <main+0x6560>
mov    0x18(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x10(%esi)
mov    0x4(%esi),%esi
test   %esi,%esi
jne    4972 <main+0x1c62>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    49c0 <main+0x1cb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   2f30 <main+0x220>
add    $0x1745c,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     4a07 <main+0x1cf7>
mov    (%esi),%eax
cmp    $0xe,%eax
ja     4bc0 <main+0x1eb0>
mov    -0x76b4(%ebx,%eax,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi),%esi
lea    -0x1721c(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   *%eax
lea    0x2a94(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    4a20 <main+0x1d10>
and    $0x1,%edi
jne    4a59 <main+0x1d49>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   11010 <main+0xe300>
jmp    4a13 <main+0x1d03>
nop
lea    -0x1672c(%ebx),%eax
lea    0x29b8(%ebx),%edx
cmpb   $0x0,(%edx)
je     49fe <main+0x1cee>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   *%eax
lea    0x718(%ebx),%edx
xor    %eax,%eax
test   $0x2,%edi
sete   %al
neg    %eax
test   %eax,(%edx)
je     4a07 <main+0x1cf7>
movl   $0x4,(%esp)
call   4750 <main+0x1a40>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   70e0 <main+0x43d0>
lea    0x718(%ebx),%ebp
xor    %eax,%eax
mov    %eax,0x0(%ebp)
jmp    4a07 <main+0x1cf7>
lea    0x0(%esi),%esi
lea    -0x16bec(%ebx),%eax
jmp    4a2e <main+0x1d1e>
mov    0x4(%esi),%edx
lea    0x708(%ebx),%eax
mov    %edx,(%eax)
mov    0xc(%esi),%eax
call   4910 <main+0x1c00>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   10c40 <main+0xdf30>
movl   $0x1,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   10b20 <main+0xde10>
lea    0x718(%ebx),%ebp
test   %eax,%eax
je     4be8 <main+0x1ed8>
mov    0xc(%esi),%edx
test   %edx,%edx
je     4a78 <main+0x1d68>
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   104a0 <main+0xd790>
mov    0xc(%esp),%eax
jmp    4a78 <main+0x1d68>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x16d0c(%ebx),%eax
jmp    4a2e <main+0x1d1e>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5(%eax),%ebp
mov    %ebp,%edx
shr    %edx
sub    $0x1,%edx
or     %edi,%edx
and    $0x2,%edx
mov    %edx,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
lea    0x718(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
sete   %al
movzbl %al,%eax
cmp    %ebp,%eax
je     4a07 <main+0x1cf7>
lea    0x71c(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
jne    4a07 <main+0x1cf7>
mov    0x8(%esi),%esi
lea    -0x1746c(%ebx),%eax
jmp    49fe <main+0x1cee>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
lea    0x71c(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    4a07 <main+0x1cf7>
lea    0x718(%ebx),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     4b3e <main+0x1e2e>
mov    0xc(%esi),%esi
lea    -0x1746c(%ebx),%eax
test   %esi,%esi
jne    49fe <main+0x1cee>
xor    %eax,%eax
jmp    4a78 <main+0x1d68>
lea    -0x1712c(%ebx),%eax
jmp    49fe <main+0x1cee>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   4df0 <main+0x20e0>
jmp    4a07 <main+0x1cf7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
lea    0x718(%ebx),%ebp
xor    %eax,%eax
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
sete   %al
jmp    4a78 <main+0x1d68>
mov    %edi,%eax
and    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
mov    0x0(%ebp),%eax
jmp    4ac7 <main+0x1db7>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17213,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x24(%esp),%ebp
mov    0x4(%esi),%edx
lea    0x708(%ebx),%eax
mov    %edx,(%eax)
mov    %ebp,(%esp)
call   c2c0 <main+0x95b0>
lea    0x1c(%esp),%eax
mov    %eax,0x20(%esp)
movl   $0x2,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   9270 <main+0x6560>
mov    0xc(%esi),%esi
lea    0x718(%ebx),%eax
test   %esi,%esi
movl   $0x0,(%eax)
je     4cb2 <main+0x1fa2>
lea    0x71c(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    4cb2 <main+0x1fa2>
mov    0x8(%esi),%edi
test   %edi,%edi
jne    4c8f <main+0x1f7f>
jmp    4cc8 <main+0x1fb8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edi
test   %edi,%edi
je     4cc8 <main+0x1fb8>
mov    0x1c(%esp),%eax
mov    0x4(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   94f0 <main+0x67e0>
test   %eax,%eax
je     4c88 <main+0x1f78>
lea    0x71c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     4cd8 <main+0x1fc8>
mov    %ebp,(%esp)
call   c320 <main+0x9610>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%esi
test   %esi,%esi
jne    4c6f <main+0x1f5f>
jmp    4cb2 <main+0x1fa2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
mov    %ebp,(%esp)
call   c320 <main+0x9610>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17121,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
andl   $0x2,0x34(%esp)
lea    0x710(%ebx),%esi
addl   $0x1,(%esi)
movl   $0x2,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
lea    0x71c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    4d85 <main+0x2075>
lea    0x718(%ebx),%eax
cmpl   $0x9,(%edi)
mov    (%eax),%eax
je     4d5a <main+0x204a>
test   %eax,%eax
sete   %al
movzbl %al,%eax
test   %eax,%eax
jne    4d9d <main+0x208d>
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
lea    0x718(%ebx),%eax
mov    (%eax),%ebp
lea    0x71c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     4d26 <main+0x2016>
cmp    $0x2,%eax
jne    4dc8 <main+0x20b8>
mov    0x304(%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x304(%ebx)
jle    4db0 <main+0x20a0>
lea    0x718(%ebx),%eax
subl   $0x1,(%esi)
mov    %ebp,(%eax)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x71c(%ebx),%eax
movl   $0x0,(%eax)
jmp    4d26 <main+0x2016>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%eax
jne    4d9d <main+0x208d>
mov    0x304(%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x304(%ebx)
jg     4d9d <main+0x208d>
lea    0x71c(%ebx),%eax
movl   $0x0,(%eax)
jmp    4d9d <main+0x208d>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x17033,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
lea    0x2c(%esp),%edi
mov    0x4(%eax),%edx
lea    0x708(%ebx),%eax
mov    %edx,(%eax)
lea    0x34(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   c2c0 <main+0x95b0>
mov    0x60(%esp),%eax
mov    %edi,0x30(%esp)
mov    0x8(%eax),%ebp
test   %ebp,%ebp
je     4e7c <main+0x216c>
lea    0x71c(%ebx),%esi
jmp    4e47 <main+0x2137>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%ebp
test   %ebp,%ebp
je     4e78 <main+0x2168>
movl   $0x3,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   9270 <main+0x6560>
mov    (%esi),%eax
test   %eax,%eax
je     4e40 <main+0x2130>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   c320 <main+0x9610>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%esp),%edi
lea    0x718(%ebx),%eax
lea    0x710(%ebx),%ebp
movl   $0x0,(%edi)
mov    0x64(%esp),%ecx
mov    0x2c(%esp),%edi
movl   $0x0,(%eax)
mov    0x0(%ebp),%eax
and    $0x2,%ecx
mov    %ecx,0x1c(%esp)
add    $0x1,%eax
test   %edi,%edi
mov    %eax,0x0(%ebp)
je     4f10 <main+0x2200>
lea    0x71c(%ebx),%esi
mov    %esi,0x18(%esp)
mov    0x60(%esp),%esi
movl   $0x0,0x8(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
mov    0x18(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     4f2a <main+0x221a>
cmp    $0x2,%eax
jne    4f32 <main+0x2222>
mov    0x304(%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x304(%ebx)
jle    4f20 <main+0x2210>
mov    0x0(%ebp),%eax
sub    $0x1,%eax
mov    %eax,0x0(%ebp)
jmp    4e61 <main+0x2151>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
movl   $0x0,(%eax)
mov    (%edi),%edi
test   %edi,%edi
jne    4ebe <main+0x21ae>
jmp    4f0d <main+0x21fd>
cmp    $0x1,%eax
mov    0x18(%esp),%esi
jne    4f0d <main+0x21fd>
mov    0x304(%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x304(%ebx)
jg     4f0d <main+0x21fd>
movl   $0x0,(%esi)
jmp    4f0d <main+0x21fd>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x16ec4,%ebx
sub    $0xe0,%esp
mov    %eax,0x14(%esp)
mov    %edx,0x1c(%esp)
lea    0x29d8(%ebx),%eax
mov    (%eax),%edx
mov    %edx,0x30(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x34(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x38(%esp)
mov    0xc(%eax),%edx
mov    0x10(%eax),%eax
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
mov    0x300(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x700(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   2790 <_setjmp@plt>
test   %eax,%eax
mov    %eax,%edi
jne    5066 <main+0x2356>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x700(%ebx),%eax
lea    0x44(%esp),%edx
mov    %edx,(%eax)
lea    0x29d8(%ebx),%eax
movb   $0x0,0x4(%eax)
mov    0x14(%esp),%eax
addl   $0x1,(%eax)
mov    0x8(%eax),%eax
mov    %eax,0x300(%ebx)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
je     50f0 <main+0x23e0>
mov    0x1c(%esp),%edx
lea    0x29d8(%ebx),%eax
mov    0xf0(%esp),%ecx
sub    $0x1,%edx
mov    %edx,(%eax)
lea    0x4(%ecx),%edx
mov    %edx,0x8(%eax)
movl   $0x1,0xc(%eax)
movl   $0xffffffff,0x10(%eax)
call   13050 <main+0x10340>
mov    0xf4(%esp),%eax
and    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
movl   $0x0,(%esp)
call   13540 <main+0x10830>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
mov    0x18(%esp),%eax
mov    %eax,0x300(%ebx)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   142b0 <main+0x115a0>
lea    0x29d8(%ebx),%esi
mov    %esi,(%esp)
call   d410 <main+0xa700>
mov    0x30(%esp),%eax
mov    %eax,(%esi)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x40(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,0x10(%esi)
lea    0x700(%ebx),%eax
mov    %edx,(%eax)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    50d8 <main+0x23c8>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    5110 <main+0x2400>
lea    0x71c(%ebx),%eax
andl   $0xfffffffb,(%eax)
add    $0xe0,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     500e <main+0x22fe>
call   4790 <main+0x1a80>
jmp    500e <main+0x22fe>
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
jmp    50d8 <main+0x23c8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   2f30 <main+0x220>
add    $0x16cfa,%ebx
cmpl   $0x3,(%esi)
mov    0x4(%esi),%edx
sete   %al
mov    %eax,%ebp
lea    0x708(%ebx),%eax
mov    %edx,(%eax)
mov    0xc(%esi),%eax
call   4910 <main+0x1c00>
test   %ebp,%ebp
jne    515e <main+0x244e>
testb  $0x1,0x34(%esp)
jne    51c0 <main+0x24b0>
lea    0x6fc(%ebx),%edi
addl   $0x1,(%edi)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   b4b0 <main+0x87a0>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   b6c0 <main+0x89b0>
mov    0xc(%esp),%edx
test   %eax,%eax
je     5212 <main+0x2502>
xor    %eax,%eax
test   %ebp,%ebp
je     5208 <main+0x24f8>
lea    0x718(%ebx),%edx
mov    %eax,(%edx)
subl   $0x1,(%edi)
jne    51b2 <main+0x24a2>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    51f8 <main+0x24e8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x2a98(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    515e <main+0x244e>
movl   $0x0,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   10630 <main+0xd920>
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
call   2c30 <abort@plt>
nop
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   b980 <main+0x8c70>
jmp    5199 <main+0x2489>
subl   $0x1,(%edi)
jne    5228 <main+0x2518>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     5228 <main+0x2518>
call   4790 <main+0x1a80>
test   %ebp,%ebp
je     5231 <main+0x2521>
andl   $0xfffffffd,0x34(%esp)
orl    $0x1,0x34(%esp)
jmp    51cc <main+0x24bc>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %edx,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
call   2f30 <main+0x220>
add    $0x16bda,%ebx
mov    0x8(%ebp),%eax
test   %eax,%eax
je     5269 <main+0x2559>
nop
mov    (%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    5260 <main+0x2550>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
mov    %edx,0x4(%esp)
mov    $0xffffffff,%edi
mov    %ebp,(%esp)
call   b4b0 <main+0x87a0>
mov    0x8(%ebp),%esi
test   %esi,%esi
mov    %eax,0x1c(%esp)
je     535e <main+0x264e>
lea    0x0(%esi),%esi
mov    0x4(%esi),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
jne    52f8 <main+0x25e8>
mov    0xc(%edx),%eax
mov    %edx,0x18(%esp)
test   %eax,%eax
je     52f8 <main+0x25e8>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   e2d0 <main+0xb5c0>
mov    0x18(%esp),%edx
cmpb   $0x0,(%eax)
jne    52f8 <main+0x25e8>
lea    0x254(%ebx),%eax
mov    0x38(%eax),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x18(%esp)
add    $0x5,%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%edx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   6650 <main+0x3940>
lea    0x0(%esi),%esi
mov    (%esi),%edx
movl   $0xffffffff,0x24(%esp)
test   %edx,%edx
je     531a <main+0x260a>
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   2b30 <pipe@plt>
test   %eax,%eax
js     5453 <main+0x2743>
mov    0x4(%ebp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   b6c0 <main+0x89b0>
test   %eax,%eax
je     53b7 <main+0x26a7>
test   %edi,%edi
js     5344 <main+0x2634>
mov    %edi,(%esp)
call   2c80 <close@plt>
mov    0x24(%esp),%eax
mov    0x20(%esp),%edi
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    (%esi),%esi
test   %esi,%esi
jne    5298 <main+0x2588>
mov    0x4(%ebp),%esi
test   %esi,%esi
je     53a1 <main+0x2691>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0x18(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    538c <main+0x267c>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    5394 <main+0x2684>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   4790 <main+0x1a80>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   b980 <main+0x8c70>
lea    0x718(%ebx),%edx
mov    %eax,(%edx)
jmp    5365 <main+0x2655>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0x18(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    53e3 <main+0x26d3>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     53e3 <main+0x26d3>
call   4790 <main+0x1a80>
mov    0x24(%esp),%eax
test   %eax,%eax
js     53f7 <main+0x26e7>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
test   %edi,%edi
jle    5413 <main+0x2703>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   26e0 <dup2@plt>
mov    %edi,(%esp)
call   2c80 <close@plt>
mov    0x24(%esp),%eax
cmp    $0x1,%eax
jle    5438 <main+0x2728>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   26e0 <dup2@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    0x54(%esp),%eax
or     $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   49c0 <main+0x1cb0>
call   2c30 <abort@plt>
mov    %edi,(%esp)
call   2c80 <close@plt>
lea    -0x7678(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x169ae,%ebx
mov    0x40(%esp),%eax
lea    0x14(%esp),%ebp
mov    %eax,(%esp)
call   9c10 <main+0x6f00>
mov    %ebp,(%esp)
call   c2c0 <main+0x95b0>
lea    0x29f0(%ebx),%esi
jmp    54ed <main+0x27dd>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%ecx
mov    $0xfffffffe,%edx
test   %ecx,%ecx
je     54c1 <main+0x27b1>
lea    0x2a14(%ebx),%ecx
cmpl   $0x1,(%ecx)
sbb    %edx,%edx
or     $0xfffffffe,%edx
and    0x44(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   49c0 <main+0x1cb0>
lea    0x718(%ebx),%eax
mov    (%eax),%edi
mov    %ebp,(%esp)
call   c320 <main+0x9610>
lea    0x71c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    54fd <main+0x27ed>
movl   $0x0,(%esp)
call   103e0 <main+0xd6d0>
cmp    %esi,%eax
jne    54a8 <main+0x2798>
call   9c90 <main+0x6f80>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x16913,%ebx
sub    $0xcc,%esp
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
lea    0x720(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
lea    0x700(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x20(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   2790 <_setjmp@plt>
test   %eax,%eax
mov    %eax,%esi
jne    55de <main+0x28ce>
lea    0x700(%ebx),%eax
lea    0x24(%esp),%edx
mov    0xe0(%esp),%ecx
mov    %edx,(%eax)
lea    0x720(%ebx),%eax
mov    (%ecx),%edx
mov    %edx,(%eax)
lea    0x29cc(%ebx),%eax
lea    0x4(%ecx),%edx
mov    %edx,(%eax)
lea    0x29b4(%ebx),%eax
movl   $0x0,(%eax)
lea    -0x2cc(%ebx),%eax
add    $0x84,%eax
cmp    %eax,0x8(%esp)
je     5640 <main+0x2930>
mov    0xe0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
mov    0x8(%esp),%eax
call   *0x4(%eax)
mov    %eax,%edi
call   115a0 <main+0xe890>
lea    0x238(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
test   %edx,%edx
jne    5618 <main+0x2908>
lea    0x718(%ebx),%eax
or     %edi,%edx
mov    %edx,(%eax)
lea    0x21c(%ebx),%edx
mov    0x8(%edx),%eax
movl   $0x0,0x14(%edx)
mov    %eax,(%edx)
lea    0x720(%ebx),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
lea    0x700(%ebx),%eax
mov    0x20(%esp),%edx
mov    %edx,(%eax)
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x720(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    -0x7667(%ebx),%eax
mov    %eax,(%esp)
call   2a80 <warnx@plt>
mov    0x0(%ebp),%eax
mov    0x14(%eax),%edx
jmp    55d4 <main+0x28c4>
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
cmp    $0x1,%eax
jle    56d8 <main+0x29c8>
cmp    $0x2,%eax
mov    %ecx,%edi
mov    0x4(%ecx),%ebp
je     56b1 <main+0x29a1>
lea    0x1fc(%ebx),%eax
add    $0x8,%edi
mov    (%eax),%eax
jmp    5678 <main+0x2968>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1f8(%ebx),%ecx
cmp    (%ecx),%eax
je     56d0 <main+0x29c0>
movb   $0x20,(%eax)
add    $0x1,%eax
mov    %ebp,(%esp)
add    $0x4,%edi
mov    %eax,0x4(%esp)
call   c5a0 <main+0x9890>
mov    -0x4(%edi),%ebp
test   %ebp,%ebp
jne    5668 <main+0x2958>
lea    0x1f8(%ebx),%edx
cmp    (%edx),%eax
je     56e5 <main+0x29d5>
lea    0x1fc(%ebx),%edx
add    $0x1,%eax
movb   $0x0,-0x1(%eax)
sub    (%edx),%eax
mov    %eax,(%esp)
call   c170 <main+0x9460>
mov    %eax,%ebp
mov    0xe4(%esp),%eax
mov    %ebp,(%esp)
and    $0x2,%eax
mov    %eax,0x4(%esp)
call   5470 <main+0x2760>
mov    %eax,%edi
jmp    55bf <main+0x28af>
xchg   %ax,%ax
call   c4a0 <main+0x9790>
jmp    5672 <main+0x2962>
nop
xor    %edi,%edi
lea    0x0(%esi),%esi
jmp    55bf <main+0x28af>
call   c4a0 <main+0x9790>
lea    0x0(%esi),%esi
jmp    5698 <main+0x2988>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x16723,%ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
mov    0x4(%eax),%edx
lea    0x708(%ebx),%eax
mov    %edx,(%eax)
lea    0x64(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x3c(%esp)
call   c2c0 <main+0x95b0>
call   13050 <main+0x10340>
mov    0x90(%esp),%esi
movl   $0x2,0x5c(%esp)
movl   $0x0,0x54(%esp)
movl   $0x0,0x4c(%esp)
mov    0xc(%esi),%edi
mov    %eax,0x34(%esp)
lea    0x714(%ebx),%eax
test   %edi,%edi
movl   $0x0,(%eax)
lea    -0x3a4(%ebx),%eax
mov    %eax,0x60(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x18(%esp)
mov    %eax,0x58(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x50(%esp)
je     5d77 <main+0x3067>
mov    %eax,%esi
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
movl   $0x3,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   9270 <main+0x6560>
mov    (%esi),%eax
test   %eax,%eax
je     57c9 <main+0x2ab9>
xchg   %ax,%ax
mov    (%eax),%eax
add    $0x1,%ebp
test   %eax,%eax
jne    57c0 <main+0x2ab0>
mov    0x4(%edi),%edi
test   %edi,%edi
je     57d6 <main+0x2ac6>
mov    0x50(%esp),%esi
jmp    57a0 <main+0x2a90>
lea    0x8(,%ebp,4),%eax
mov    %eax,(%esp)
call   c170 <main+0x9460>
mov    %eax,0x20(%esp)
add    $0x4,%eax
mov    %eax,%edx
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     5d83 <main+0x3073>
xchg   %ax,%ax
mov    0x4(%eax),%ecx
add    $0x4,%edx
mov    %ecx,-0x4(%edx)
mov    (%eax),%eax
test   %eax,%eax
jne    5800 <main+0x2af0>
lea    0x29b8(%ebx),%eax
movl   $0x0,(%edx)
movl   $0x0,0x30(%esp)
cmpb   $0x0,0x3(%eax)
je     5837 <main+0x2b27>
mov    0x300(%ebx),%eax
test   %eax,%eax
je     5b9f <main+0x2e8f>
lea    0x2a9c(%ebx),%eax
movl   $0x2,0x10(%eax)
mov    0x90(%esp),%eax
mov    0x10(%eax),%eax
call   4910 <main+0x1c00>
mov    0x90(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   10c40 <main+0xdf30>
movl   $0x3,0x4(%esp)
mov    %eax,0x38(%esp)
mov    0x90(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   10b20 <main+0xde10>
mov    %eax,0x2c(%esp)
lea    0x254(%ebx),%eax
mov    0x38(%eax),%edi
mov    0x90(%esp),%eax
mov    0x8(%eax),%esi
test   %esi,%esi
je     58f2 <main+0x2be2>
mov    %ebp,0x1c(%esp)
mov    %esi,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x58(%esp),%esi
mov    %ebp,(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
call   9270 <main+0x6560>
mov    (%esi),%ecx
mov    0x4(%ecx),%ecx
mov    %ecx,(%esp)
call   13ab0 <main+0x10da0>
mov    (%esi),%eax
mov    0x4(%eax),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   130c0 <main+0x103b0>
mov    0x4(%ebp),%ebp
test   %eax,%eax
cmove  %esi,%edi
test   %ebp,%ebp
jne    58a8 <main+0x2b98>
mov    0x1c(%esp),%ebp
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x7(%eax)
jne    5bb3 <main+0x2ea3>
test   %ebp,%ebp
je     5b90 <main+0x2e80>
mov    0x20(%esp),%esi
lea    0x5(%edi),%eax
lea    0x5c(%esp),%ecx
mov    %eax,%edi
mov    %eax,0x28(%esp)
mov    $0x1,%eax
movl   $0xffffffff,0x1c(%esp)
mov    0x4(%esi),%esi
mov    %ecx,0x24(%esp)
mov    %ebp,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   6650 <main+0x3940>
mov    0x5c(%esp),%eax
cmp    $0xffffffff,%eax
je     5d68 <main+0x3058>
cmp    $0x2,%eax
jne    59e6 <main+0x2cd6>
cmpl   $0xffffffff,0x1c(%esp)
mov    0x60(%esp),%eax
je     5ac8 <main+0x2db8>
lea    -0x2cc(%ebx),%esi
lea    0x90(%esi),%edx
cmp    %edx,%eax
je     5ae8 <main+0x2dd8>
lea    0x60(%esi),%edx
cmp    %edx,%eax
jne    59e6 <main+0x2cd6>
lea    -0x656c(%ebx),%ecx
mov    0x28(%esp),%edi
mov    0x14(%esp),%ebp
mov    %ecx,0x20(%esp)
add    $0x4,%ebp
mov    0x0(%ebp),%esi
test   %esi,%esi
je     59e6 <main+0x2cd6>
cmpb   $0x2d,(%esi)
jne    5a96 <main+0x2d86>
movzbl 0x1(%esi),%eax
lea    0x2(%esi),%edx
test   %al,%al
je     5a96 <main+0x2d86>
cmp    $0x2d,%al
jne    59e2 <main+0x2cd2>
jmp    5a74 <main+0x2d64>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl -0x1(%edx),%eax
test   %al,%al
je     5ab8 <main+0x2da8>
lea    0x5(%ecx),%edi
cmp    $0x70,%al
je     59d0 <main+0x2cc0>
mov    0x18(%esp),%ebp
xor    %esi,%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
je     5afd <main+0x2ded>
mov    0x1c(%esp),%edi
lea    0x718(%ebx),%eax
mov    0x2c(%esp),%ecx
test   %edi,%edi
mov    %ecx,(%eax)
jg     5de3 <main+0x30d3>
mov    0x90(%esp),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
je     5a26 <main+0x2d16>
mov    %esi,(%esp)
call   104a0 <main+0xd790>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   10c00 <main+0xdef0>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   13740 <main+0x10a30>
mov    0x30(%esp),%eax
test   %eax,%eax
je     5a60 <main+0x2d50>
mov    %eax,0x4(%esp)
lea    -0x7659(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   c320 <main+0x9610>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x2(%esi)
jne    59e2 <main+0x2cd2>
mov    %ebp,%eax
add    $0x4,%ebp
mov    0x4(%eax),%esi
test   %esi,%esi
je     59e6 <main+0x2cd6>
test   %ebp,%ebp
je     59e6 <main+0x2cd6>
mov    %ebp,%eax
sub    0x14(%esp),%eax
mov    %ebp,0x14(%esp)
sar    $0x2,%eax
sub    %eax,0x18(%esp)
mov    $0x5,%eax
jmp    5938 <main+0x2c28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
lea    0x5(%eax),%edi
jmp    59a2 <main+0x2c92>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%esi
mov    %esi,0x1c(%esp)
lea    -0x2cc(%ebx),%esi
andl   $0x1,0x1c(%esp)
lea    0x90(%esi),%edx
cmp    %edx,%eax
jne    5989 <main+0x2c79>
mov    0x2c(%esp),%eax
mov    $0x1,%esi
mov    0x18(%esp),%ebp
test   %eax,%eax
jne    59f8 <main+0x2ce8>
mov    0x5c(%esp),%eax
cmp    $0x1,%eax
je     5d32 <main+0x3022>
cmp    $0x2,%eax
jne    5c96 <main+0x2f86>
mov    0x1c(%esp),%edx
test   %edx,%edx
setg   %al
test   %ebp,%ebp
mov    %eax,%edi
je     5d8c <main+0x307c>
test   %al,%al
jne    5d8c <main+0x307c>
mov    0x94(%esp),%eax
mov    %ebp,%edx
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
mov    0x60(%esp),%eax
call   5510 <main+0x2800>
test   %eax,%eax
je     5a10 <main+0x2d00>
lea    0x70c(%ebx),%eax
mov    (%eax),%eax
cmp    $0x4,%eax
je     5b74 <main+0x2e64>
test   %eax,%eax
lea    0x718(%ebx),%eax
jne    5dc2 <main+0x30b2>
movl   $0x82,(%eax)
lea    0x700(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   2b60 <__longjmp_chk@plt>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
movl   $0xffffffff,0x1c(%esp)
jmp    59ec <main+0x2cdc>
test   %ebp,%ebp
je     5837 <main+0x2b27>
mov    -0x4(%edx),%eax
mov    %eax,0x30(%esp)
jmp    5837 <main+0x2b27>
lea    0x254(%ebx),%eax
mov    0x68(%eax),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   10250 <main+0xd540>
lea    0x2a9c(%ebx),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   11720 <main+0xea10>
mov    0x54(%esp),%esi
xor    %eax,%eax
test   %esi,%esi
je     5c30 <main+0x2f20>
lea    -0x7459(%ebx),%ecx
mov    %edi,0x18(%esp)
mov    %esi,%edi
mov    %ecx,%esi
jmp    5bfd <main+0x2eed>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
mov    0x4(%edi),%ecx
mov    %ecx,0x8(%esp)
mov    $0x1,%ecx
sub    %eax,%ecx
mov    %ecx,%eax
add    %esi,%eax
mov    %eax,0x4(%esp)
lea    0x2a9c(%ebx),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
mov    (%edi),%edi
test   %edi,%edi
jne    5bf8 <main+0x2ee8>
mov    0x18(%esp),%edi
mov    $0x1,%eax
mov    0x4c(%esp),%esi
lea    -0x7459(%ebx),%ecx
test   %esi,%esi
je     5c7b <main+0x2f6b>
mov    %edi,0x18(%esp)
mov    %esi,%edi
mov    %ecx,%esi
jmp    5c4d <main+0x2f3d>
mov    $0x1,%eax
mov    0x4(%edi),%ecx
mov    %ecx,0x8(%esp)
mov    $0x1,%ecx
sub    %eax,%ecx
mov    %ecx,%eax
add    %esi,%eax
mov    %eax,0x4(%esp)
lea    0x2a9c(%ebx),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
mov    (%edi),%edi
test   %edi,%edi
jne    5c48 <main+0x2f38>
mov    0x18(%esp),%edi
lea    0x2a9c(%ebx),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   11760 <main+0xea50>
jmp    5902 <main+0x2bf2>
testb  $0x1,0x94(%esp)
je     5cb0 <main+0x2fa0>
lea    0x2a98(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     5e07 <main+0x30f7>
lea    0x6fc(%ebx),%ebp
addl   $0x1,0x0(%ebp)
mov    0x90(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   b4b0 <main+0x87a0>
movl   $0x0,0x8(%esp)
mov    %eax,%edx
mov    0x90(%esp),%eax
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
call   b6c0 <main+0x89b0>
test   %eax,%eax
je     5def <main+0x30df>
mov    0x18(%esp),%edx
mov    %edx,(%esp)
call   b980 <main+0x8c70>
lea    0x718(%ebx),%edx
mov    %eax,(%edx)
subl   $0x1,0x0(%ebp)
jne    5a10 <main+0x2d00>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     5a10 <main+0x2d00>
call   4790 <main+0x1a80>
jmp    5a10 <main+0x2d00>
movl   $0x1,(%esp)
call   13540 <main+0x10830>
mov    0x94(%esp),%eax
mov    %ebp,%edx
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
mov    0x60(%esp),%eax
call   4f60 <main+0x2250>
test   %eax,%eax
je     5a10 <main+0x2d00>
jmp    5b74 <main+0x2e64>
movl   $0x7f,0x2c(%esp)
xor    %esi,%esi
jmp    59f8 <main+0x2ce8>
mov    $0x8,%eax
xor    %ebp,%ebp
jmp    57dd <main+0x2acd>
mov    0x14(%esp),%edx
jmp    580f <main+0x2aff>
movl   $0x1,(%esp)
call   13540 <main+0x10830>
cmp    $0x1,%ebp
jle    5b2e <main+0x2e1e>
test   %esi,%esi
je     5b2e <main+0x2e1e>
mov    0x54(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   13800 <main+0x10af0>
jmp    5b2e <main+0x2e1e>
movl   $0x2,(%eax)
mov    %edi,%eax
test   %al,%al
jne    5b74 <main+0x2e64>
lea    0x6fc(%ebx),%eax
movl   $0x0,(%eax)
jmp    5d18 <main+0x3008>
movl   $0x1,(%esp)
call   4750 <main+0x1a40>
lea    0x704(%ebx),%eax
movl   $0x0,0x0(%ebp)
mov    (%eax),%eax
test   %eax,%eax
je     5e07 <main+0x30f7>
call   4790 <main+0x1a80>
mov    0x54(%esp),%eax
movl   $0x11,0x4(%esp)
mov    %eax,(%esp)
call   13800 <main+0x10af0>
mov    0x60(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   6480 <main+0x3770>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%esi
call   2f30 <main+0x220>
add    $0x15fd8,%ebx
test   %edi,%edi
movl   $0xffffffff,(%esi)
movl   $0x0,0x4(%esi)
movl   $0x0,0x8(%esi)
movl   $0x0,0xc(%esi)
je     5ec8 <main+0x31b8>
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   2b30 <pipe@plt>
test   %eax,%eax
js     5ed0 <main+0x31c0>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   b4b0 <main+0x87a0>
movl   $0x2,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   b6c0 <main+0x89b0>
test   %eax,%eax
je     5ede <main+0x31ce>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esi)
mov    %eax,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x7678(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x6fc(%ebx),%eax
movl   $0x0,(%eax)
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     5efb <main+0x31eb>
call   4790 <main+0x1a80>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    0x1c(%esp),%eax
cmp    $0x1,%eax
je     5f2c <main+0x321c>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   26e0 <dup2@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
call   80c0 <main+0x53b0>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   49c0 <main+0x1cb0>
call   2c30 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   2f30 <main+0x220>
add    $0x15ed2,%ebx
mov    0x24(%esp),%esi
cmpl   $0x1,0x20(%esp)
jle    5fb0 <main+0x32a0>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
test   %eax,%eax
jle    5fb7 <main+0x32a7>
lea    0x710(%ebx),%edx
mov    (%edx),%edx
cmp    %eax,%edx
jge    5f8c <main+0x327c>
test   %edx,%edx
jle    5fa8 <main+0x3298>
mov    %edx,%eax
mov    (%esi),%edx
lea    0x71c(%ebx),%ecx
mov    %eax,0x304(%ebx)
cmpb   $0x63,(%edx)
sete   %dl
movzbl %dl,%edx
add    $0x1,%edx
mov    %edx,(%ecx)
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    $0x1,%eax
jmp    5f7a <main+0x326a>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   d0b0 <main+0xa3a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0x15e56,%ebx
sub    $0x18,%esp
cmpl   $0x1,0x300(%ebx)
lea    0x71c(%ebx),%edx
sbb    %eax,%eax
and    $0x4,%eax
add    $0x4,%eax
mov    %eax,(%edx)
mov    0x24(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     6010 <main+0x3300>
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
lea    0x718(%ebx),%eax
mov    (%eax),%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0x15de3,%ebx
cmpl   $0x1,0x20(%esp)
jg     605d <main+0x334d>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x29b8(%ebx),%eax
movb   $0x0,0x3(%eax)
movb   $0x0,0x4(%eax)
call   d3d0 <main+0xa6c0>
lea    0x254(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    0x38(%eax),%eax
add    $0x5,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   6480 <main+0x3770>
mov    (%esp),%ecx
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x15d7c,%ebx
mov    0x30(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,0x8(%esp)
call   2a30 <execve@plt>
lea    -0x7657(%ebx),%edx
cmp    %edx,%edi
je     60f8 <main+0x33e8>
lea    0x27a8(%ebx),%eax
mov    (%eax),%ecx
cmpl   $0x8,(%ecx)
jne    60f8 <main+0x33e8>
mov    %edi,(%esi)
sub    $0x4,%esi
mov    %edx,(%esi)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   2a30 <execve@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %edx,0xc(%esp)
movzbl (%eax),%edx
call   2f30 <main+0x220>
add    $0x15d17,%ebx
movzbl %dl,%edi
mov    %edi,%eax
shl    $0x4,%eax
test   %dl,%dl
je     613f <main+0x342f>
mov    %esi,%ecx
jmp    6133 <main+0x3423>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %dl,%edi
add    $0x1,%ecx
movzbl (%ecx),%edx
add    %edi,%eax
test   %dl,%dl
jne    6130 <main+0x3420>
and    $0x7fff,%eax
mov    $0x8421085,%edx
mov    %eax,%ecx
mul    %edx
mov    %ecx,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x4,%edx
mov    %edx,%eax
shl    $0x5,%eax
sub    %edx,%eax
sub    %eax,%ecx
mov    0x314(%ebx,%ecx,4),%ebp
lea    0x314(%ebx,%ecx,4),%edi
test   %ebp,%ebp
jne    6181 <main+0x3471>
jmp    61b0 <main+0x34a0>
lea    0x0(%esi),%esi
mov    %ebp,%edi
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
je     61b0 <main+0x34a0>
lea    0xb(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
jne    6178 <main+0x3468>
test   %ebp,%ebp
je     61b0 <main+0x34a0>
lea    0x724(%ebx),%eax
mov    %edi,(%eax)
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esp),%edx
test   %edx,%edx
je     6198 <main+0x3488>
mov    %esi,(%esp)
call   2a10 <strlen@plt>
add    $0xc,%eax
mov    %eax,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,(%edi)
mov    %eax,%ebp
movl   $0x0,(%eax)
mov    $0xffffffff,%eax
mov    %ax,0x8(%ebp)
lea    0xb(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2950 <strcpy@plt>
jmp    6198 <main+0x3488>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x15c31,%ebx
sub    $0x1c,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x390(%ebx),%eax
mov    %edi,%ebp
lea    0x314(%ebx),%esi
mov    %eax,0xc(%esp)
nop
mov    %esi,%edi
lea    0x0(%esi),%esi
mov    (%edi),%eax
test   %eax,%eax
je     624e <main+0x353e>
movzwl 0x8(%eax),%edx
test   %dx,%dx
jne    6288 <main+0x3578>
cmp    %ebp,0x4(%eax)
jl     6298 <main+0x3588>
mov    (%eax),%edx
mov    %edx,(%edi)
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    (%edi),%eax
test   %eax,%eax
jne    622e <main+0x351e>
add    $0x4,%esi
cmp    0xc(%esp),%esi
jb     6220 <main+0x3510>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    627e <main+0x356e>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    629c <main+0x358c>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x2,%dx
jne    6298 <main+0x3588>
cmp    0x1e4(%ebx),%ebp
jle    623c <main+0x352c>
xchg   %ax,%ax
mov    %eax,%edi
jmp    6228 <main+0x3518>
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x15b74,%ebx
sub    $0x10,%esp
lea    0x6fc(%ebx),%esi
addl   $0x1,(%esi)
lea    0x724(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%edi
mov    (%edi),%edx
cmpw   $0x1,0x8(%edi)
mov    %edx,(%eax)
je     6310 <main+0x3600>
mov    %edi,(%esp)
call   27a0 <free@plt>
subl   $0x1,(%esi)
jne    62f8 <main+0x35e8>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    6300 <main+0x35f0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   4790 <main+0x1a80>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   142b0 <main+0x115a0>
jmp    62df <main+0x35cf>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   2f30 <main+0x220>
add    $0x15afc,%ebx
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,0x18(%esp)
je     6479 <main+0x3769>
movzbl (%eax),%eax
test   %al,%al
je     6468 <main+0x3758>
cmp    $0x3a,%al
je     6468 <main+0x3758>
cmp    $0x25,%al
jne    6376 <main+0x3666>
lea    0x0(%esi),%esi
jmp    6468 <main+0x3758>
lea    0x0(%esi),%esi
test   %al,%al
lea    0x0(%esi),%esi
je     6381 <main+0x3671>
cmp    $0x25,%al
je     6381 <main+0x3671>
add    $0x1,%ebp
movzbl 0x0(%ebp),%eax
cmp    $0x3a,%al
jne    6368 <main+0x3658>
mov    %ebp,%eax
sub    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   2a10 <strlen@plt>
mov    0x1c(%esp),%edx
lea    0x1f4(%ebx),%edi
lea    0x2(%edx,%eax,1),%esi
cmp    (%edi),%esi
jbe    63b9 <main+0x36a9>
lea    0x0(%esi,%eiz,1),%esi
call   c3b0 <main+0x96a0>
cmp    (%edi),%esi
ja     63b0 <main+0x36a0>
lea    0x1fc(%ebx),%eax
cmp    0x18(%esp),%ebp
mov    (%eax),%edi
je     63eb <main+0x36db>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%ecx
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
call   27b0 <memcpy@plt>
mov    0x1c(%esp),%eax
add    %edi,%eax
lea    0x1(%eax),%edi
movb   $0x2f,(%eax)
mov    0x44(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2950 <strcpy@plt>
lea    0x728(%ebx),%ecx
movl   $0x0,(%ecx)
movzbl 0x0(%ebp),%eax
cmp    $0x25,%al
je     6430 <main+0x3720>
cmp    $0x3a,%al
je     645b <main+0x374b>
mov    0x40(%esp),%eax
movl   $0x0,(%eax)
mov    %esi,(%esp)
call   c170 <main+0x9460>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%ebp),%edi
mov    %edi,(%ecx)
movzbl 0x1(%ebp),%eax
mov    %edi,%ebp
cmp    $0x3a,%al
jne    6453 <main+0x3743>
jmp    640f <main+0x36ff>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
movzbl 0x0(%ebp),%eax
cmp    $0x3a,%al
je     640f <main+0x36ff>
test   %al,%al
jne    6448 <main+0x3738>
cmp    $0x3a,%al
jne    6413 <main+0x3703>
mov    0x40(%esp),%eax
lea    0x1(%ebp),%edx
mov    %edx,(%eax)
jmp    641d <main+0x370d>
xchg   %ax,%ax
mov    0x18(%esp),%ebp
movl   $0x0,0x1c(%esp)
jmp    638b <main+0x367b>
xor    %eax,%eax
jmp    6425 <main+0x3715>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x159a3,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x48(%esp),%esi
movl   $0x20,0x4(%esp)
movl   $0x1,(%esp)
call   12e80 <main+0x10170>
mov    (%edi),%ecx
movl   $0x2f,0x4(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x18(%esp)
call   29f0 <strchr@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     654d <main+0x383d>
mov    0x18(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ecx,%eax
call   60a0 <main+0x3390>
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,0x14(%esp)
mov    0x14(%esp),%edx
mov    $0x7f,%eax
cmp    $0x2,%edx
je     6511 <main+0x3801>
cmp    $0xd,%edx
mov    $0x2,%al
mov    $0x7e,%edx
cmove  %edx,%eax
lea    0x718(%ebx),%edx
mov    %eax,(%edx)
mov    0x14(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   4890 <main+0x1b80>
mov    %eax,0xc(%esp)
mov    (%edi),%eax
movl   $0x4,(%esp)
mov    %eax,0x8(%esp)
lea    -0x6b08(%ebx),%eax
mov    %eax,0x4(%esp)
call   4840 <main+0x1b30>
movl   $0x2,0x14(%esp)
lea    0x44(%esp),%ebp
jmp    656a <main+0x385a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   c250 <main+0x9540>
mov    (%edi),%ecx
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   6320 <main+0x3610>
test   %eax,%eax
mov    %eax,%ecx
je     64f6 <main+0x37e6>
sub    $0x1,%esi
jns    6560 <main+0x3850>
lea    0x728(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    6560 <main+0x3850>
mov    0x18(%esp),%eax
mov    %edi,%edx
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
mov    %ecx,%eax
call   60a0 <main+0x3390>
lea    0x27a8(%ebx),%eax
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
mov    (%eax),%eax
cmp    $0x14,%eax
je     6560 <main+0x3850>
cmp    $0x2,%eax
cmove  0x14(%esp),%eax
mov    %eax,0x14(%esp)
jmp    6560 <main+0x3850>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x27,%edx
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x15849,%ebx
jmp    65fd <main+0x38ed>
nop
lea    0x0(%esi,%eiz,1),%esi
je     6638 <main+0x3928>
mov    0xc(%esp),%edx
lea    0x1(%esi),%edi
cmp    %edx,%edi
jae    662c <main+0x391c>
lea    -0x2cc(%ebx),%ecx
lea    (%edx,%edi,1),%esi
shr    %esi
lea    (%esi,%esi,2),%eax
mov    %edx,0xc(%esp)
lea    (%ecx,%eax,4),%ebp
lea    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   d330 <main+0xa620>
test   %eax,%eax
jns    65f0 <main+0x38e0>
mov    %esi,%edx
cmp    %edx,%edi
jb     65fd <main+0x38ed>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
call   2f30 <main+0x220>
add    $0x157cd,%ebx
mov    0xb0(%esp),%eax
movl   $0x2f,0x4(%esp)
mov    0xb4(%esp),%esi
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     66e0 <main+0x39d0>
testb  $0x2,0xb8(%esp)
movl   $0xffffffff,0x4(%esi)
jne    66b0 <main+0x39a0>
movl   $0x0,(%esi)
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   2c40 <__xstat64@plt>
test   %eax,%eax
jns    6698 <main+0x3988>
movl   $0xffffffff,(%esi)
jmp    669e <main+0x398e>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x254(%ebx),%edx
xor    %ecx,%ecx
mov    0xbc(%esp),%eax
mov    0x38(%edx),%edx
add    $0x5,%edx
cmp    %edx,%eax
sete   %cl
mov    %ecx,0x18(%esp)
je     6732 <main+0x3a22>
lea    -0x764f(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   26f0 <strstr@plt>
mov    0xb8(%esp),%edx
mov    0xb8(%esp),%ecx
or     $0x8,%edx
or     $0x28,%ecx
test   %eax,%eax
cmovne %ecx,%edx
mov    %edx,0xb8(%esp)
mov    0xb0(%esp),%eax
xor    %edx,%edx
call   6100 <main+0x33f0>
test   %eax,%eax
mov    %eax,%edi
je     677a <main+0x3a6a>
movswl 0x8(%eax),%ecx
mov    $0x4,%eax
cmp    $0x1,%cx
je     6763 <main+0x3a53>
mov    $0x8,%al
cmp    $0x2,%cx
mov    $0x20,%ebp
cmove  %ebp,%eax
test   %eax,0xb8(%esp)
jne    68d8 <main+0x3bc8>
cmpb   $0x0,0xa(%edi)
je     68c0 <main+0x3bb0>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   65d0 <main+0x38c0>
test   %eax,%eax
mov    %eax,%ebp
je     67da <main+0x3aca>
testb  $0x2,0x8(%eax)
jne    67b0 <main+0x3aa0>
testb  $0x8,0xb8(%esp)
je     67d0 <main+0x3ac0>
testb  $0x20,0xb8(%esp)
jne    67da <main+0x3aca>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%edx
test   %edx,%edx
jne    68f8 <main+0x3be8>
movl   $0x2,(%esi)
mov    %ebp,0x4(%esi)
jmp    669e <main+0x398e>
lea    0x0(%esi),%esi
mov    0x1e4(%ebx),%eax
test   %eax,%eax
jle    67b0 <main+0x3aa0>
test   %edi,%edi
movl   $0xffffffff,0x24(%esp)
je     67fe <main+0x3aee>
cmpb   $0x0,0xa(%edi)
je     67fe <main+0x3aee>
cmpw   $0x2,0x8(%edi)
je     6981 <main+0x3c71>
mov    0x4(%edi),%eax
mov    %eax,0x24(%esp)
lea    0xbc(%esp),%eax
movl   $0x2,0x28(%esp)
movl   $0xffffffff,0x1c(%esp)
mov    %eax,0x20(%esp)
mov    %edi,0x2c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   6320 <main+0x3610>
test   %eax,%eax
mov    %eax,%edi
je     6a17 <main+0x3d07>
mov    %edi,(%esp)
call   c250 <main+0x9540>
lea    0x728(%ebx),%eax
addl   $0x1,0x1c(%esp)
mov    (%eax),%eax
test   %eax,%eax
je     6898 <main+0x3b88>
lea    -0x75b1(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   d080 <main+0xa370>
test   %eax,%eax
jne    68e8 <main+0x3bd8>
testb  $0x4,0xb8(%esp)
jne    681d <main+0x3b0d>
lea    -0x7646(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x728(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   d080 <main+0xa370>
test   %eax,%eax
je     681d <main+0x3b0d>
lea    0x0(%esi),%esi
cmpb   $0x2f,(%edi)
jne    6948 <main+0x3c38>
mov    0x1c(%esp),%eax
cmp    %eax,0x24(%esp)
jl     6948 <main+0x3c38>
jg     681d <main+0x3b0d>
mov    0x2c(%esp),%edi
movswl 0x8(%edi),%ecx
lea    0x0(%esi),%esi
mov    0x4(%edi),%eax
movb   $0x0,0xa(%edi)
mov    %ecx,(%esi)
mov    %eax,0x4(%esi)
jmp    669e <main+0x398e>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x18(%esp)
xor    %edi,%edi
jmp    677a <main+0x3a6a>
nop
test   %ebp,%ebp
jne    67b0 <main+0x3aa0>
jmp    681d <main+0x3b0d>
lea    0x0(%esi),%esi
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
mov    0xb0(%esp),%eax
mov    $0x1,%edx
call   6100 <main+0x33f0>
mov    %eax,%edi
mov    $0x2,%eax
mov    %ax,0x8(%edi)
mov    %ebp,0x4(%edi)
lea    0x6fc(%ebx),%ecx
subl   $0x1,(%ecx)
jne    693c <main+0x3c2c>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     693c <main+0x3c2c>
call   4790 <main+0x1a80>
movswl 0x8(%edi),%ecx
jmp    68c0 <main+0x3bb0>
lea    0x0(%esi),%esi
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   2c40 <__xstat64@plt>
test   %eax,%eax
js     6990 <main+0x3c80>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     69b4 <main+0x3ca4>
movl   $0xd,0x28(%esp)
jmp    681d <main+0x3b0d>
mov    0x1e4(%ebx),%eax
mov    %eax,0x24(%esp)
jmp    67fe <main+0x3aee>
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
cmp    $0x14,%eax
je     681d <main+0x3b0d>
cmp    $0x2,%eax
cmove  0x28(%esp),%eax
mov    %eax,0x28(%esp)
jmp    681d <main+0x3b0d>
lea    0x728(%ebx),%eax
mov    %edi,%ebp
mov    (%eax),%eax
test   %eax,%eax
je     6a67 <main+0x3d57>
mov    %edi,(%esp)
call   2a10 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   c170 <main+0x9460>
mov    %edi,(%esp)
call   bf20 <main+0x9210>
mov    0xb0(%esp),%eax
xor    %edx,%edx
call   6100 <main+0x33f0>
mov    %eax,%edi
mov    %ebp,%eax
test   %edi,%edi
je     6ac0 <main+0x3db0>
cmpw   $0x1,0x8(%edi)
jne    6ac0 <main+0x3db0>
mov    %ebp,(%esp)
call   c250 <main+0x9540>
movswl 0x8(%edi),%ecx
jmp    68c0 <main+0x3bb0>
mov    0x18(%esp),%ecx
mov    0x2c(%esp),%edi
test   %ecx,%ecx
jne    6a81 <main+0x3d71>
testb  $0x1,0xb8(%esp)
je     66d3 <main+0x39c3>
mov    0x28(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   4890 <main+0x1b80>
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x6b08(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
jmp    66d3 <main+0x39c3>
mov    0x18(%esp),%edi
test   %edi,%edi
jne    6a92 <main+0x3d82>
mov    0x1c(%esp),%eax
movl   $0x0,(%esi)
mov    %eax,0x4(%esi)
jmp    669e <main+0x398e>
test   %edi,%edi
je     6a23 <main+0x3d13>
call   62b0 <main+0x35a0>
lea    0x0(%esi),%esi
jmp    6a23 <main+0x3d13>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
mov    0xb0(%esp),%eax
mov    $0x1,%edx
call   6100 <main+0x33f0>
mov    %eax,%edi
movw   $0x0,0x8(%eax)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%edi)
jmp    6920 <main+0x3c10>
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x7641(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x15343,%ebx
sub    $0x3c,%esp
lea    -0x67c7(%ebx),%eax
mov    %eax,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
mov    %eax,%esi
jne    6bad <main+0x3e9d>
lea    0x29cc(%ebx),%edi
mov    (%edi),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     6bbe <main+0x3eae>
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
jmp    6b75 <main+0x3e65>
xchg   %ax,%ax
cmp    $0x2,%ax
je     6b92 <main+0x3e82>
lea    0x254(%ebx),%eax
mov    0x38(%eax),%eax
mov    %ebp,(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
add    $0x5,%eax
mov    %eax,0xc(%esp)
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
call   6650 <main+0x3940>
mov    $0x1,%eax
cmpl   $0xffffffff,0x28(%esp)
cmove  %eax,%esi
mov    (%edi),%eax
mov    0x4(%eax),%ebp
lea    0x4(%eax),%edx
mov    %edx,(%edi)
test   %ebp,%ebp
je     6ba3 <main+0x3e93>
xor    %edx,%edx
mov    %ebp,%eax
call   6100 <main+0x33f0>
test   %eax,%eax
je     6b2e <main+0x3e1e>
movzwl 0x8(%eax),%eax
test   %ax,%ax
jne    6b28 <main+0x3e18>
call   62b0 <main+0x35a0>
jmp    6b2e <main+0x3e1e>
mov    0x1e4(%ebx),%eax
test   %eax,%eax
js     6b2e <main+0x3e1e>
call   62b0 <main+0x35a0>
jmp    6b2e <main+0x3e1e>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
call   61f0 <main+0x34e0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x314(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x390(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
jne    6bf2 <main+0x3ee2>
jmp    6c87 <main+0x3f77>
nop
mov    (%edi),%edi
test   %edi,%edi
je     6c87 <main+0x3f77>
cmpw   $0x0,0x8(%edi)
jne    6be8 <main+0x3ed8>
lea    0x254(%ebx),%eax
mov    0x4(%edi),%esi
mov    0x38(%eax),%eax
mov    %edi,0x14(%esp)
add    $0x5,%eax
mov    %eax,0x28(%esp)
lea    0xb(%edi),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,%ebp
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   6320 <main+0x3610>
mov    %eax,(%esp)
mov    %eax,%edi
call   c250 <main+0x9540>
sub    $0x1,%esi
jns    6c20 <main+0x3f10>
lea    0x238(%ebx),%edx
mov    %edi,%ebp
mov    0x14(%esp),%edi
mov    (%edx),%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   11720 <main+0xea10>
lea    -0x762c(%ebx),%eax
cmpb   $0x0,0xa(%edi)
jne    6c6b <main+0x3f5b>
lea    0x29b0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x6efa(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
mov    (%edi),%edi
test   %edi,%edi
jne    6bf2 <main+0x3ee2>
addl   $0x4,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x18(%esp)
jb     6bd8 <main+0x3ec8>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x1516f,%ebx
sub    $0x3c,%esp
lea    0x254(%ebx),%eax
mov    0x38(%eax),%eax
add    $0x5,%eax
mov    %eax,0x24(%esp)
mov    0x50(%esp),%eax
test   %eax,%eax
jne    6d18 <main+0x4008>
mov    %edx,(%esp)
call   10460 <main+0xd750>
mov    %ebp,%edx
test   %eax,%eax
je     6d54 <main+0x4044>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   11720 <main+0xea10>
mov    (%esi),%eax
cmp    0x4(%esi),%eax
je     6d40 <main+0x4030>
movb   $0xa,(%eax)
xor    %eax,%eax
addl   $0x1,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %esi,0x4(%esp)
call   11720 <main+0xea10>
mov    %ebp,(%esp)
call   10460 <main+0xd750>
test   %eax,%eax
je     6f0a <main+0x41fa>
lea    -0x762a(%ebx),%edx
jmp    6cf0 <main+0x3fe0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   11760 <main+0xea50>
xor    %eax,%eax
jmp    6d0b <main+0x3ffb>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   3290 <main+0x580>
test   %eax,%eax
mov    %eax,%edi
je     6d88 <main+0x4078>
lea    -0x75e4(%ebx),%eax
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   11720 <main+0xea10>
mov    %edi,(%esp)
call   33a0 <main+0x690>
xor    %eax,%eax
jmp    6d0b <main+0x3ffb>
xor    %edx,%edx
mov    %ebp,%eax
call   6100 <main+0x33f0>
test   %eax,%eax
mov    %eax,%edi
je     6ed6 <main+0x41c6>
movswl 0x8(%eax),%eax
mov    0x4(%edi),%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
cmp    $0x1,%eax
je     6dec <main+0x40dc>
cmp    $0x2,%eax
je     6e97 <main+0x4187>
test   %eax,%eax
je     6e1c <main+0x410c>
mov    0x50(%esp),%edx
mov    $0x7f,%eax
test   %edx,%edx
je     6d0b <main+0x3ffb>
lea    -0x75a9(%ebx),%edx
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
call   11720 <main+0xea10>
mov    0x14(%esp),%eax
jmp    6d0b <main+0x3ffb>
mov    0x50(%esp),%edi
test   %edi,%edi
je     6e0b <main+0x40fb>
lea    -0x75d4(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   11720 <main+0xea10>
jmp    6cfc <main+0x3fec>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   11720 <main+0xea10>
jmp    6cfc <main+0x3fec>
mov    0x2c(%esp),%eax
cmp    $0xffffffff,%eax
je     6e62 <main+0x4152>
lea    0x24(%esp),%ecx
mov    %esi,0x1c(%esp)
mov    %eax,%esi
mov    %ecx,0x14(%esp)
mov    %edi,0x18(%esp)
mov    0x14(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   6320 <main+0x3610>
mov    %eax,(%esp)
mov    %eax,%edi
call   c250 <main+0x9540>
sub    $0x1,%esi
jns    6e37 <main+0x4127>
mov    %edi,%eax
mov    0x1c(%esp),%esi
mov    0x18(%esp),%edi
mov    %eax,%ebp
mov    0x50(%esp),%eax
test   %eax,%eax
je     6e0b <main+0x40fb>
test   %edi,%edi
je     6eff <main+0x41ef>
lea    -0x7616(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x75dd(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11850 <main+0xeb40>
jmp    6cfc <main+0x3fec>
mov    0x50(%esp),%ecx
test   %ecx,%ecx
je     6e0b <main+0x40fb>
mov    0x2c(%esp),%eax
testb  $0x1,0x8(%eax)
je     6ece <main+0x41be>
lea    -0x7601(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x75bf(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   11850 <main+0xeb40>
jmp    6cfc <main+0x3fec>
lea    0x29b0(%ebx),%eax
jmp    6eb3 <main+0x41a3>
mov    0x24(%esp),%eax
movl   $0x2,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   6650 <main+0x3940>
mov    0x28(%esp),%eax
jmp    6daa <main+0x409a>
lea    0x29b0(%ebx),%eax
jmp    6e78 <main+0x4168>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   3290 <main+0x580>
test   %eax,%eax
je     6d88 <main+0x4078>
mov    0x8(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x75f8(%ebx),%eax
mov    %eax,0x4(%esp)
call   11850 <main+0xeb40>
jmp    6cfc <main+0x3fec>
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14ee4,%ebx
mov    0x1e4(%ebx),%edi
lea    0x314(%ebx),%ecx
lea    0x390(%ebx),%esi
mov    (%ecx),%eax
test   %eax,%eax
jne    6f74 <main+0x4264>
jmp    6f87 <main+0x4277>
cmp    $0x2,%dx
je     6f98 <main+0x4288>
mov    (%eax),%eax
test   %eax,%eax
je     6f87 <main+0x4277>
movzwl 0x8(%eax),%edx
test   %dx,%dx
jne    6f68 <main+0x4258>
movb   $0x1,0xa(%eax)
mov    (%eax),%eax
test   %eax,%eax
jne    6f74 <main+0x4264>
add    $0x4,%ecx
cmp    %esi,%ecx
jb     6f60 <main+0x4250>
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
testb  $0x2,0x8(%edx)
jne    6f6e <main+0x425e>
test   %edi,%edi
jle    6f6e <main+0x425e>
movb   $0x1,0xa(%eax)
jmp    6f81 <main+0x4271>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14e71,%ebx
sub    $0x2c,%esp
lea    0x254(%ebx),%eax
mov    0x38(%eax),%ecx
mov    0x40(%esp),%eax
movl   $0xffffffff,0x18(%esp)
movl   $0x270f,0x14(%esp)
add    $0x5,%ecx
lea    0x1(%eax),%esi
lea    -0x75b1(%ebx),%eax
mov    %eax,0x1c(%esp)
jmp    701c <main+0x430c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3a,%al
je     70b0 <main+0x43a0>
mov    %edi,0x14(%esp)
test   %al,%al
je     7076 <main+0x4366>
cmp    $0x25,%al
je     7048 <main+0x4338>
cmp    $0x3a,%al
sete   %al
movzbl %al,%eax
add    %eax,%edi
lea    0x1(%ebp),%ecx
add    $0x1,%esi
movzbl (%ecx),%edx
lea    -0x1(%esi),%ebp
movzbl -0x1(%esi),%eax
cmp    %al,%dl
je     7070 <main+0x4360>
test   %dl,%dl
je     6ff8 <main+0x42e8>
cmp    $0x3a,%dl
mov    %edi,0x14(%esp)
jne    7004 <main+0x42f4>
test   %al,%al
je     70b0 <main+0x43a0>
cmp    $0x25,%al
mov    %edi,0x14(%esp)
jne    700c <main+0x42fc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x18(%esp)
jne    7016 <main+0x4306>
mov    0x1c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d080 <main+0xa370>
test   %eax,%eax
movzbl -0x1(%esi),%eax
je     700c <main+0x42fc>
mov    %edi,0x18(%esp)
jmp    700c <main+0x42fc>
lea    0x0(%esi),%esi
test   %al,%al
mov    %ecx,%ebp
jne    7008 <main+0x42f8>
mov    0x1e4(%ebx),%eax
test   %eax,%eax
js     70c0 <main+0x43b0>
cmpl   $0xffffffff,0x18(%esp)
mov    $0x0,%eax
cmovne 0x14(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
call   61f0 <main+0x34e0>
mov    0x18(%esp),%eax
mov    %eax,0x1e4(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x1(%edi),%ecx
mov    %ecx,0x14(%esp)
jmp    7004 <main+0x42f4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
je     7093 <main+0x4383>
mov    %eax,0x1e4(%ebx)
jmp    7093 <main+0x4383>
jmp    70e0 <main+0x43d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14d43,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
lea    0x6fc(%ebx),%edi
addl   $0x1,(%edi)
mov    %esi,(%esp)
call   14230 <main+0x11520>
mov    $0x1,%edx
mov    %eax,%ebp
mov    0x8(%esi),%eax
call   6100 <main+0x33f0>
cmpw   $0x1,0x8(%eax)
je     7158 <main+0x4448>
mov    $0x1,%edx
mov    %dx,0x8(%eax)
mov    %ebp,0x4(%eax)
movb   $0x0,0xa(%eax)
subl   $0x1,(%edi)
jne    713e <main+0x442e>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    7148 <main+0x4438>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   142b0 <main+0x115a0>
mov    0xc(%esp),%eax
jmp    711d <main+0x440d>
lea    0x0(%esi),%esi
sub    $0xc,%esp
xor    %edx,%edx
mov    0x10(%esp),%eax
call   6100 <main+0x33f0>
test   %eax,%eax
je     7189 <main+0x4479>
cmpw   $0x1,0x8(%eax)
je     7190 <main+0x4480>
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
add    $0xc,%esp
jmp    62b0 <main+0x35a0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x14c7e,%ebx
mov    0x34(%esp),%edi
cmpl   $0x1,0x30(%esp)
jle    71ea <main+0x44da>
mov    $0x1,%ebp
lea    0x0(%esi,%eiz,1),%esi
lea    0x238(%ebx),%eax
mov    (%edi,%ebp,4),%edx
add    $0x1,%ebp
movl   $0x1,(%esp)
mov    (%eax),%eax
call   6cb0 <main+0x3fa0>
or     %eax,%esi
cmp    0x30(%esp),%ebp
jne    71c8 <main+0x44b8>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14c22,%ebx
sub    $0x10,%esp
lea    -0x759c(%ebx),%edi
mov    %edi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
je     7241 <main+0x4531>
cmp    $0x56,%eax
je     7258 <main+0x4548>
mov    %esi,%edx
or     $0x1,%edx
cmp    $0x76,%eax
mov    %edi,(%esp)
cmove  %edx,%esi
call   e020 <main+0xb310>
test   %eax,%eax
jne    7225 <main+0x4515>
lea    0x29cc(%ebx),%eax
test   %esi,%esi
mov    (%eax),%eax
mov    (%eax),%edx
jne    7260 <main+0x4550>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
or     $0x2,%esi
jmp    7219 <main+0x4509>
lea    0x0(%esi),%esi
test   %edx,%edx
je     724f <main+0x453f>
lea    0x238(%ebx),%eax
sub    $0x1,%esi
mov    %esi,0x20(%esp)
mov    (%eax),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    6cb0 <main+0x3fa0>
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x14b9e,%ebx
test   %edx,%edx
je     733e <main+0x462e>
mov    %eax,%esi
mov    0x3b4(%ebx),%eax
mov    %eax,0x4(%esp)
lea    (%edx,%edx,1),%eax
mov    %eax,(%esp)
call   c4d0 <main+0x97c0>
lea    (%esi,%edi,1),%edx
mov    0x44(%esp),%edi
lea    -0x5d2c(%ebx),%ecx
mov    0x44(%esp),%ebp
mov    %edx,0x14(%esp)
and    $0x31,%edi
mov    %edi,0x18(%esp)
lea    0x82(%ecx),%edi
and    $0x2,%ebp
mov    %edi,0x1c(%esp)
jmp    7323 <main+0x4613>
xchg   %ax,%ax
mov    0x18(%esp),%edx
test   %edx,%edx
je     7318 <main+0x4608>
mov    0x40(%esp),%edx
movsbl %cl,%edi
movzbl (%edx,%edi,1),%edi
mov    %edi,%edx
cmp    $0xc,%dl
je     7348 <main+0x4638>
testb  $0x1,0x44(%esp)
jne    730b <main+0x45fb>
mov    0x1c(%esp),%edx
cmp    %edx,0x40(%esp)
je     7318 <main+0x4608>
mov    %edi,%edx
cmp    $0x2,%dl
je     7348 <main+0x4638>
lea    0x0(%esi),%esi
mov    %cl,(%eax)
add    $0x1,%eax
cmp    0x14(%esp),%esi
je     7338 <main+0x4628>
add    $0x1,%esi
movzbl -0x1(%esi),%ecx
test   %cl,%cl
jne    72e0 <main+0x45d0>
test   %ebp,%ebp
jne    7318 <main+0x4608>
cmp    0x14(%esp),%esi
jne    7323 <main+0x4613>
mov    %eax,0x3b4(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movb   $0x81,(%eax)
add    $0x1,%eax
jmp    7318 <main+0x4608>
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14ad0,%ebx
sub    $0x20,%esp
movl   $0x20,(%esp)
mov    0x3b4(%ebx),%eax
mov    %eax,0x4(%esp)
call   c4d0 <main+0x97c0>
lea    -0x7598(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edi,0x10(%esp)
mov    %edx,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x3b4(%ebx)
call   114a0 <main+0xe790>
add    %eax,0x3b4(%ebx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    %eax,%ecx
push   %edi
mov    %edx,%ebp
push   %esi
mov    %ecx,%edi
push   %ebx
call   2f30 <main+0x220>
add    $0x14a6d,%ebx
sub    $0x3c,%esp
lea    -0x2cc(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    0x1(%edi),%eax
mov    %eax,0x14(%esp)
mov    %eax,%edx
movzbl (%edi),%eax
cmp    $0x3f,%al
je     7588 <main+0x4878>
jg     7450 <main+0x4740>
test   %al,%al
je     7618 <main+0x4908>
cmp    $0x2a,%al
jne    7458 <main+0x4748>
mov    %edi,%ecx
mov    %edx,%edi
movzbl 0x1(%ecx),%eax
cmp    $0x2a,%al
jne    740a <main+0x46fa>
add    $0x1,%edi
movzbl (%edi),%eax
cmp    $0x2a,%al
je     7400 <main+0x46f0>
cmp    $0x3f,%al
je     7431 <main+0x4721>
lea    -0x5b(%eax),%edx
cmp    $0x1,%dl
ja     749b <main+0x478b>
mov    %ebp,%edx
mov    %edi,%eax
call   73b0 <main+0x46a0>
test   %eax,%eax
jne    743e <main+0x472e>
nop
add    $0x1,%ebp
cmpb   $0x0,-0x1(%ebp)
je     7470 <main+0x4760>
mov    %ebp,%edx
mov    %edi,%eax
call   73b0 <main+0x46a0>
test   %eax,%eax
je     7428 <main+0x4718>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5b,%al
je     74b0 <main+0x47a0>
cmp    $0x5c,%al
je     7480 <main+0x4770>
mov    %ebp,0x18(%esp)
mov    0x14(%esp),%edi
mov    0x18(%esp),%ecx
cmp    %al,(%ecx)
lea    0x1(%ecx),%ebp
je     73d2 <main+0x46c2>
nop
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x1(%edi),%edx
test   %dl,%dl
je     7458 <main+0x4748>
add    $0x2,%edi
mov    %edx,%eax
mov    %ebp,0x18(%esp)
jmp    7460 <main+0x4750>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
movzbl 0x0(%ebp),%edx
cmp    %al,%dl
je     7431 <main+0x4721>
test   %dl,%dl
jne    7498 <main+0x4788>
xor    %eax,%eax
jmp    7472 <main+0x4762>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%edi),%eax
movl   $0x0,0x28(%esp)
cmp    $0x21,%al
je     7658 <main+0x4948>
lea    0x1(%ebp),%ecx
mov    %ecx,0x18(%esp)
movzbl 0x0(%ebp),%ecx
test   %cl,%cl
mov    %cl,0x13(%esp)
je     7470 <main+0x4760>
lea    0x1(%edx),%esi
movzbl (%edx),%edx
test   %dl,%dl
je     745c <main+0x474c>
xor    %ebp,%ebp
mov    %edi,0x2c(%esp)
mov    %ebp,%edi
jmp    750c <main+0x47fc>
nop
cmp    %dl,0x13(%esp)
mov    %eax,%edx
je     75b0 <main+0x48a0>
add    $0x1,%esi
cmp    $0x5d,%dl
je     7560 <main+0x4850>
test   %dl,%dl
je     7648 <main+0x4938>
cmp    $0x5b,%dl
je     75c0 <main+0x48b0>
cmp    $0x5c,%dl
je     75a0 <main+0x4890>
movzbl (%esi),%eax
cmp    $0x2d,%al
jne    74f0 <main+0x47e0>
movzbl 0x1(%esi),%ecx
cmp    $0x5d,%cl
je     74f0 <main+0x47e0>
lea    0x1(%esi),%eax
add    $0x2,%esi
cmp    $0x5c,%cl
cmove  %esi,%eax
cmp    0x13(%esp),%dl
jg     754f <main+0x483f>
movzbl 0x13(%esp),%ecx
mov    $0x1,%edx
cmp    (%eax),%cl
cmovle %edx,%edi
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%esi
add    $0x1,%esi
cmp    $0x5d,%dl
jne    7504 <main+0x47f4>
xchg   %ax,%ax
cmp    %edi,0x28(%esp)
je     7470 <main+0x4760>
mov    %esi,%edi
mov    0x18(%esp),%ebp
lea    0x1(%edi),%eax
mov    %eax,0x14(%esp)
mov    %eax,%edx
movzbl (%edi),%eax
cmp    $0x3f,%al
jne    73e6 <main+0x46d6>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x0(%ebp)
lea    0x1(%ebp),%eax
je     7470 <main+0x4760>
mov    %eax,%ebp
mov    0x14(%esp),%edi
jmp    73d2 <main+0x46c2>
movzbl (%esi),%edx
add    $0x1,%esi
jmp    751e <main+0x480e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%edi
jmp    74fc <main+0x47ec>
lea    0x0(%esi),%esi
movsbl 0x13(%esp),%eax
lea    -0x38c(%ebx),%ebp
mov    %edi,0x20(%esp)
mov    %ebp,%edi
mov    %edx,%ebp
mov    %eax,0x24(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   d080 <main+0xa370>
test   %eax,%eax
je     7630 <main+0x4920>
mov    %edi,%ebp
mov    0x20(%esp),%edi
mov    %eax,0x20(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   *0xc(%ebp)
mov    0x20(%esp),%ecx
movzbl (%ecx),%edx
mov    %ecx,%esi
test   %eax,%eax
setne  %al
movzbl %al,%eax
or     %eax,%edi
jmp    74fc <main+0x47ec>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x0,0x0(%ebp)
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%edi
cmp    0x1c(%esp),%edi
jb     75d7 <main+0x48c7>
mov    %ebp,%edx
mov    0x20(%esp),%edi
jmp    751e <main+0x480e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%edi
movzbl 0x1(%edi),%eax
jmp    745c <main+0x474c>
lea    0x0(%esi),%esi
lea    0x2(%edi),%edx
movl   $0x1,0x28(%esp)
jmp    74c4 <main+0x47b4>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x2c(%esp),%eax
mov    0x28(%esp),%esi
lea    -0x1(%eax),%edi
cmp    0x20(%esp),%edi
jae    76aa <main+0x499a>
jmp    7718 <main+0x4a08>
xchg   %ax,%ax
mov    %ebp,%edx
and    $0x1,%edx
test   %edx,%edx
je     769f <main+0x498f>
sub    $0x1,%ebp
lea    -0x2(%edi),%eax
sub    $0x1,%esi
cmp    0x20(%esp),%eax
jb     7718 <main+0x4a08>
mov    %eax,%edi
mov    0x34(%esp),%eax
mov    %esi,%edx
movzbl (%esi),%ecx
test   %eax,%eax
je     76be <main+0x49ae>
mov    0x24(%esp),%edx
movb   $0x0,(%esi)
mov    0x2c(%esp),%eax
mov    %ecx,0xc(%esp)
call   73b0 <main+0x46a0>
mov    0xc(%esp),%ecx
mov    %cl,(%esi)
test   %eax,%eax
jne    7728 <main+0x4a18>
mov    0x30(%esp),%edx
lea    -0x1(%edi),%eax
test   %edx,%edx
je     769f <main+0x498f>
sub    $0x1,%ebp
jns    7690 <main+0x4980>
cmp    %eax,0x20(%esp)
jae    7731 <main+0x4a21>
xor    %ebp,%ebp
cmpb   $0x81,-0x2(%edi)
lea    -0x2(%edi),%edx
jne    769f <main+0x498f>
mov    0x20(%esp),%ecx
jmp    7708 <main+0x49f8>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edx
cmpb   $0x81,(%edx)
jne    7690 <main+0x4980>
add    $0x1,%ebp
cmp    %edx,%ecx
jb     7700 <main+0x49f0>
jmp    7690 <main+0x4980>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebp,%ebp
jmp    769f <main+0x498f>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x34(%esp),%ebp
mov    0x24(%esp),%esi
jmp    7774 <main+0x4a64>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
test   %eax,%eax
je     776a <main+0x4a5a>
xor    %eax,%eax
cmpb   $0x81,(%edi)
sete   %al
add    %eax,%edi
add    $0x1,%edi
add    $0x1,%esi
test   %cl,%cl
je     77a8 <main+0x4a98>
test   %ebp,%ebp
movzbl (%esi),%ecx
mov    %esi,%edx
je     7784 <main+0x4a74>
mov    0x24(%esp),%edx
movb   $0x0,(%esi)
mov    0x2c(%esp),%eax
mov    %ecx,0xc(%esp)
call   73b0 <main+0x46a0>
mov    0xc(%esp),%ecx
mov    %cl,(%esi)
test   %eax,%eax
je     7758 <main+0x4a48>
add    $0x10,%esp
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    77c0 <main+0x4ab0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14662,%ebx
sub    $0x10,%esp
movl   $0x8,(%esp)
call   c170 <main+0x9460>
mov    %edi,(%esp)
mov    %eax,%esi
call   d2f0 <main+0xa5e0>
mov    %eax,0x4(%esi)
mov    0x398(%ebx),%eax
mov    %esi,(%eax)
mov    %esi,0x398(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    7810 <main+0x4b00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    %eax,0x10(%esp)
movzbl (%edx),%eax
call   2f30 <main+0x220>
add    $0x14604,%ebx
test   %al,%al
mov    %al,0x18(%esp)
je     7896 <main+0x4b86>
mov    %eax,%edx
xor    %eax,%eax
mov    %edi,0xc(%esp)
mov    %edi,%esi
mov    %edi,0x14(%esp)
mov    %eax,%edi
jmp    7858 <main+0x4b48>
movzbl 0x1(%esi),%edx
mov    $0x1,%edi
add    $0x1,%esi
test   %dl,%dl
je     7888 <main+0x4b78>
cmp    $0x3f,%dl
je     7848 <main+0x4b38>
cmp    $0x2a,%dl
je     7848 <main+0x4b38>
cmp    $0x5b,%dl
je     78f8 <main+0x4be8>
xor    %eax,%eax
cmp    $0x5c,%dl
sete   %al
cmpb   $0x2f,(%esi,%eax,1)
je     7940 <main+0x4c30>
lea    0x1(%esi,%eax,1),%esi
movzbl (%esi),%edx
test   %dl,%dl
jne    7858 <main+0x4b48>
mov    %edi,%eax
mov    0x14(%esp),%edi
test   %eax,%eax
jne    7978 <main+0x4c68>
mov    0x390(%ebx),%esi
mov    0x10(%esp),%edx
movzbl 0x18(%esp),%eax
jmp    78bc <main+0x4bac>
nop
add    $0x1,%edx
mov    %al,-0x1(%edx)
lea    0x1(%edi),%ecx
cmpb   $0x0,(%edi)
je     78d5 <main+0x4bc5>
movzbl 0x1(%edi),%eax
mov    %ecx,%edi
cmp    $0x5c,%al
jne    78a8 <main+0x4b98>
movzbl 0x1(%edi),%eax
add    $0x1,%edx
add    $0x1,%edi
lea    0x1(%edi),%ecx
mov    %al,-0x1(%edx)
cmpb   $0x0,(%edi)
jne    78b6 <main+0x4ba6>
cmp    0x10(%esp),%esi
jne    7ab0 <main+0x4da0>
mov    %esi,%eax
call   77c0 <main+0x4ab0>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%esi),%edx
lea    0x1(%esi),%ebp
mov    %ebp,%ecx
cmp    $0x21,%dl
mov    %edx,%eax
jne    7925 <main+0x4c15>
jmp    796c <main+0x4c5c>
lea    0x0(%esi),%esi
test   %al,%al
je     7938 <main+0x4c28>
cmp    $0x2f,%al
je     7938 <main+0x4c28>
movzbl 0x1(%ecx),%eax
lea    0x1(%ecx),%esi
cmp    $0x5d,%al
je     7960 <main+0x4c50>
mov    %esi,%ecx
cmp    $0x5c,%al
jne    7910 <main+0x4c00>
movzbl 0x1(%ecx),%eax
add    $0x1,%ecx
test   %al,%al
jne    7914 <main+0x4c04>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%esi
jmp    7854 <main+0x4b44>
nop
test   %edi,%edi
jne    7b5d <main+0x4e4d>
lea    0x1(%esi,%eax,1),%eax
mov    %eax,0xc(%esp)
movzbl (%eax),%edx
mov    %eax,%esi
jmp    7854 <main+0x4b44>
lea    0x0(%esi),%esi
mov    %ebp,%esi
mov    $0x1,%edi
jmp    7854 <main+0x4b44>
lea    0x2(%esi),%ecx
movzbl 0x2(%esi),%eax
jmp    7925 <main+0x4c15>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
cmp    0xc(%esp),%edi
jae    79cb <main+0x4cbb>
mov    %ebp,0x14(%esp)
movzbl 0x18(%esp),%eax
mov    0xc(%esp),%ebp
mov    0x10(%esp),%edx
jmp    79ab <main+0x4c9b>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edi),%ecx
add    $0x1,%edx
cmp    %ebp,%ecx
mov    %al,-0x1(%edx)
jae    79c3 <main+0x4cb3>
movzbl 0x1(%edi),%eax
mov    %ecx,%edi
cmp    $0x5c,%al
jne    7998 <main+0x4c88>
movzbl 0x1(%edi),%eax
add    $0x1,%edi
add    $0x1,%edx
lea    0x1(%edi),%ecx
cmp    %ebp,%ecx
mov    %al,-0x1(%edx)
jb     79a5 <main+0x4c95>
mov    0x14(%esp),%ebp
mov    %edx,0x10(%esp)
mov    0x390(%ebx),%eax
mov    0x10(%esp),%edi
cmp    %eax,%edi
je     7b68 <main+0x4e58>
lea    0x1(%eax),%edx
cmp    %edx,%edi
je     7b73 <main+0x4e63>
mov    0x10(%esp),%edi
movb   $0x0,-0x1(%edi)
mov    %eax,(%esp)
call   2cb0 <opendir@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     78e6 <main+0x4bd6>
mov    0x10(%esp),%eax
cmp    0x390(%ebx),%eax
je     7a14 <main+0x4d04>
movb   $0x2f,-0x1(%eax)
cmpb   $0x0,(%esi)
movl   $0x1,0x18(%esp)
je     7a30 <main+0x4d20>
movb   $0x0,(%esi)
lea    0x1(%esi,%ebp,1),%esi
movl   $0x0,0x18(%esp)
mov    0xc(%esp),%eax
movzbl (%eax),%eax
cmp    $0x5c,%al
mov    %al,0x1f(%esp)
je     7b4c <main+0x4e3c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    7af8 <main+0x4de8>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   2ba0 <readdir@plt>
test   %eax,%eax
je     7af8 <main+0x4de8>
cmpb   $0x2e,0xb(%eax)
jne    7a79 <main+0x4d69>
cmpb   $0x2e,0x1f(%esp)
jne    7a48 <main+0x4d38>
lea    0xb(%eax),%edi
mov    0xc(%esp),%eax
mov    %edi,%edx
call   73b0 <main+0x46a0>
test   %eax,%eax
je     7a48 <main+0x4d38>
mov    0x18(%esp),%edx
mov    0x10(%esp),%ecx
test   %edx,%edx
jne    7b30 <main+0x4e20>
add    $0x1,%edi
movzbl -0x1(%edi),%edx
lea    0x1(%ecx),%eax
test   %dl,%dl
mov    %dl,-0x1(%eax)
je     7ad8 <main+0x4dc8>
mov    %eax,%ecx
jmp    7a9b <main+0x4d8b>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   2c70 <__lxstat64@plt>
test   %eax,%eax
jns    78df <main+0x4bcf>
jmp    78e6 <main+0x4bd6>
lea    0x0(%esi),%esi
movb   $0x2f,(%ecx)
mov    %esi,%edx
call   7810 <main+0x4b00>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     7a58 <main+0x4d48>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   2c90 <closedir@plt>
mov    0x18(%esp),%eax
test   %eax,%eax
jne    78e6 <main+0x4bd6>
cmp    $0x1,%ebp
mov    %ebp,%edx
sbb    %eax,%eax
not    %edx
and    $0xffffffd3,%eax
add    $0x5c,%eax
mov    %al,(%esi,%edx,1)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   2950 <strcpy@plt>
mov    0x390(%ebx),%eax
call   77c0 <main+0x4ab0>
jmp    7a48 <main+0x4d38>
mov    0xc(%esp),%eax
movzbl 0x1(%eax),%eax
mov    %al,0x1f(%esp)
jmp    7a48 <main+0x4d38>
mov    %eax,%ebp
mov    0x14(%esp),%edi
jmp    797a <main+0x4c6a>
lea    -0x73bb(%ebx),%eax
jmp    79f0 <main+0x4ce0>
cmpb   $0x2f,(%eax)
jne    79e8 <main+0x4cd8>
lea    -0x76ff(%ebx),%eax
jmp    79f0 <main+0x4ce0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x1428e,%ebx
cmp    $0x1,%edx
mov    %eax,0xc(%esp)
jle    7c36 <main+0x4f26>
mov    0xc(%esp),%eax
mov    %edx,%ecx
sar    %ecx
lea    -0x1(%ecx),%edx
mov    %eax,%esi
jmp    7bc2 <main+0x4eb2>
mov    %edi,%esi
sub    $0x1,%edx
mov    (%esi),%edi
cmp    $0xffffffff,%edx
jne    7bc0 <main+0x4eb0>
mov    %ecx,%edx
movl   $0x0,(%esi)
mov    %ecx,0x8(%esp)
call   7b90 <main+0x4e80>
mov    0x8(%esp),%ecx
mov    %ebp,%edx
lea    0xc(%esp),%ebp
sub    %ecx,%edx
mov    %eax,%esi
mov    %edi,%eax
call   7b90 <main+0x4e80>
mov    %eax,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
js     7c20 <main+0x4f10>
mov    %esi,0x0(%ebp)
mov    (%esi),%edx
mov    %esi,%ebp
test   %edx,%edx
je     7c30 <main+0x4f20>
mov    %edx,%esi
jmp    7bf8 <main+0x4ee8>
lea    0x0(%esi),%esi
mov    %edi,0x0(%ebp)
mov    (%edi),%eax
mov    %edi,%ebp
test   %eax,%eax
je     7c40 <main+0x4f30>
mov    %eax,%edi
jmp    7bf8 <main+0x4ee8>
nop
mov    %edi,(%esi)
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%edi)
jmp    7c32 <main+0x4f22>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x141d3,%ebx
sub    $0x1c,%esp
mov    0x39c(%ebx),%edx
test   %edx,%edx
je     7d20 <main+0x5010>
mov    0x30(%esp),%eax
cmp    %eax,0x3a8(%ebx)
jg     7d28 <main+0x5018>
mov    0x3a0(%ebx),%edx
lea    0x3a0(%ebx),%ecx
mov    %ecx,0x39c(%ebx)
test   %edx,%edx
je     7db6 <main+0x50a6>
mov    0x4(%edx),%eax
cmp    %eax,0x30(%esp)
jg     7cb3 <main+0x4fa3>
jmp    7dbf <main+0x50af>
mov    0x4(%eax),%ecx
cmp    %ecx,0x30(%esp)
jle    7cb9 <main+0x4fa9>
mov    %eax,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    7ca8 <main+0x4f98>
mov    %edx,0x39c(%ebx)
lea    0x6fc(%ebx),%esi
jmp    7cd0 <main+0x4fc0>
nop
mov    0x39c(%ebx),%edx
mov    (%edx),%eax
test   %eax,%eax
je     7d10 <main+0x5000>
addl   $0x1,(%esi)
mov    0x39c(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    (%eax),%edi
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    %edi,0x0(%ebp)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    7cc8 <main+0x4fb8>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     7cc8 <main+0x4fb8>
call   4790 <main+0x1a80>
jmp    7cc8 <main+0x4fb8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edx),%eax
cmp    %eax,0x30(%esp)
jge    7d20 <main+0x5010>
mov    0x30(%esp),%eax
mov    %eax,0x8(%edx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x6fc(%ebx),%ebp
lea    0x3a0,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi,%ebx,1),%eax
test   %eax,%eax
je     7d78 <main+0x5068>
addl   $0x1,0x0(%ebp)
mov    (%esi,%ebx,1),%eax
mov    (%eax),%edi
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    %edi,(%esi,%ebx,1)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    7d38 <main+0x5028>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     7d38 <main+0x5028>
call   4790 <main+0x1a80>
mov    (%esi,%ebx,1),%eax
test   %eax,%eax
jne    7d3f <main+0x502f>
xchg   %ax,%ax
mov    0x3a4(%ebx),%eax
cmp    %eax,0x30(%esp)
jge    7d98 <main+0x5088>
movl   $0x0,0x39c(%ebx)
00
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x3a0(%ebx),%eax
mov    %eax,0x39c(%ebx)
mov    0x30(%esp),%eax
mov    %eax,0x3a8(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
mov    %ecx,%edx
jmp    7cbf <main+0x4faf>
mov    %edx,%eax
mov    %ecx,%edx
jmp    7cbf <main+0x4faf>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x14056,%ebx
sub    $0x18,%esp
mov    0x39c(%ebx),%eax
test   %eax,%eax
je     7e48 <main+0x5138>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
movl   $0x10,(%esp)
call   c0b0 <main+0x93a0>
mov    0x39c(%ebx),%edx
movl   $0x0,(%eax)
mov    %eax,(%edx)
lea    0x6fc(%ebx),%ecx
subl   $0x1,(%ecx)
jne    7e23 <main+0x5113>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    7e50 <main+0x5140>
mov    0x20(%esp),%edx
mov    %eax,0x39c(%ebx)
mov    %edx,0x4(%eax)
mov    0x24(%esp),%edx
mov    %edx,0x8(%eax)
mov    0x28(%esp),%edx
mov    %edx,0xc(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x3a0(%ebx),%eax
jmp    7e23 <main+0x5113>
mov    %eax,0xc(%esp)
call   4790 <main+0x1a80>
mov    0xc(%esp),%eax
jmp    7e23 <main+0x5113>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x13fc3,%ebx
sub    $0x2c,%esp
mov    0x39c(%ebx),%esi
test   %esi,%esi
je     80a9 <main+0x5399>
lea    0x254(%ebx),%eax
testb  $0x20,0x4(%eax)
je     7fa7 <main+0x5297>
lea    -0x657c(%ebx),%eax
add    $0x4,%eax
mov    %eax,0x1c(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x3a0(%ebx),%eax
mov    %eax,0x18(%esp)
nop
mov    0x18(%esp),%eax
mov    0x40(%esp),%ebp
mov    0x1c(%esp),%edx
mov    0xc(%eax),%ecx
add    0x4(%eax),%ebp
mov    %ecx,0x14(%esp)
test   %ecx,%ecx
mov    0x40(%esp),%ecx
cmovne 0x1bc(%ebx),%edx
xor    %edi,%edi
add    0x8(%eax),%ecx
mov    %edx,0xc(%esp)
mov    %ecx,0x8(%esp)
cmp    0x8(%esp),%ebp
jae    7f5d <main+0x524d>
movzbl 0x0(%ebp),%eax
mov    %ebp,%esi
cmp    $0x81,%al
movsbl %al,%ecx
je     7fc0 <main+0x52b0>
mov    0xc(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     7fb8 <main+0x52a8>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
jne    7f39 <main+0x5229>
movsbl (%esi),%eax
mov    %eax,0x4(%esp)
lea    -0x657c(%ebx),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
test   %edi,%edi
je     7fd0 <main+0x52c0>
cmp    %ebp,0x10(%esp)
jne    7fd0 <main+0x52c0>
lea    0x1(%esi),%ebp
mov    $0x1,%edi
cmp    0x8(%esp),%ebp
mov    %ebp,0x10(%esp)
jb     7ee6 <main+0x51d6>
mov    0x18(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x18(%esp)
jne    7eb0 <main+0x51a0>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    7f80 <main+0x5270>
mov    0x10(%esp),%eax
cmpb   $0x0,(%eax)
je     7f9f <main+0x528f>
movl   $0x8,(%esp)
call   c170 <main+0x9460>
mov    0x10(%esp),%edi
mov    %edi,0x4(%eax)
mov    0x44(%esp),%edi
mov    0x4(%edi),%edx
mov    %eax,(%edx)
mov    %eax,0x4(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%eax),%eax
add    $0x4,%eax
mov    %eax,0x1c(%esp)
jmp    7e9d <main+0x518d>
xchg   %ax,%ax
lea    0x1(%esi),%ebp
jmp    7ee0 <main+0x51d0>
lea    0x1(%ebp),%esi
movsbl 0x1(%ebp),%ecx
jmp    7ef7 <main+0x51e7>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x0(%ebp)
lea    0x1(%esi),%ebp
movl   $0x8,(%esp)
call   c170 <main+0x9460>
mov    0x10(%esp),%edx
mov    0x44(%esp),%ecx
mov    %edx,0x4(%eax)
mov    0x4(%ecx),%edx
mov    %eax,(%edx)
mov    0x14(%esp),%edx
mov    %eax,0x4(%ecx)
test   %edx,%edx
je     8018 <main+0x5308>
mov    0x18(%esp),%ecx
mov    0x40(%esp),%eax
mov    %ebp,0x10(%esp)
add    0x8(%ecx),%eax
mov    %eax,0x8(%esp)
jmp    7ee0 <main+0x51d0>
xchg   %ax,%ax
mov    0x18(%esp),%edx
mov    0x40(%esp),%eax
add    0x8(%edx),%eax
mov    %eax,0x8(%esp)
lea    -0x657c(%ebx),%eax
add    $0x4,%eax
mov    %eax,0x10(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    0x8(%esp),%ebp
jae    8088 <main+0x5378>
movzbl 0x0(%ebp),%eax
mov    %ebp,%esi
cmp    $0x81,%al
movsbl %al,%edx
je     80a0 <main+0x5390>
mov    0xc(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     8088 <main+0x5378>
movsbl (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
jne    8098 <main+0x5388>
test   %edi,%edi
je     8088 <main+0x5378>
lea    0x1(%esi),%ebp
xor    %edi,%edi
cmp    0x8(%esp),%ebp
jb     803e <main+0x532e>
lea    0x0(%esi),%esi
mov    %ebp,0x10(%esp)
jmp    7ee0 <main+0x51d0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%esi),%ebp
jmp    8038 <main+0x5328>
lea    0x0(%esi),%esi
lea    0x1(%ebp),%esi
movsbl 0x1(%ebp),%edx
jmp    804b <main+0x533b>
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
jmp    7f77 <main+0x5267>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x13d64,%ebx
sub    $0x10,%esp
mov    0x3a0(%ebx),%eax
test   %eax,%eax
je     8113 <main+0x5403>
lea    0x6fc(%ebx),%edi
addl   $0x1,(%edi)
jmp    80ea <main+0x53da>
xchg   %ax,%ax
mov    %esi,%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   27a0 <free@plt>
test   %esi,%esi
jne    80e8 <main+0x53d8>
movl   $0x0,0x3a0(%ebx)
00
subl   $0x1,(%edi)
jne    8113 <main+0x5403>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    8128 <main+0x5418>
movl   $0x0,0x39c(%ebx)
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   4790 <main+0x1a80>
jmp    8113 <main+0x5403>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x13cf3,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edi
lea    -0x6f04(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   2b90 <strpbrk@plt>
test   %eax,%eax
mov    %eax,%esi
je     81c4 <main+0x54b4>
test   $0x1,%edi
jne    81d0 <main+0x54c0>
mov    %edi,%eax
and    $0x8,%eax
mov    %eax,0x1c(%esp)
mov    %esi,%eax
and    $0x2,%edi
xor    %ebp,%ebp
mov    %edi,%ecx
movzbl (%esi),%edx
test   %dl,%dl
je     81b0 <main+0x54a0>
cmp    $0x88,%dl
je     8230 <main+0x5520>
cmp    $0x81,%dl
je     8240 <main+0x5530>
cmp    $0x5c,%dl
mov    %edi,%ecx
je     8260 <main+0x5550>
add    $0x1,%esi
add    $0x1,%eax
mov    %dl,-0x1(%eax)
movzbl (%esi),%edx
test   %dl,%dl
jne    8183 <main+0x5473>
mov    0x1c(%esp),%edx
movb   $0x0,(%eax)
test   %edx,%edx
je     81c4 <main+0x54b4>
add    $0x1,%eax
mov    %eax,0x3b4(%ebx)
mov    0x40(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
mov    %eax,%ebp
call   2a10 <strlen@plt>
mov    %edi,%ecx
sub    0x40(%esp),%ebp
and    $0x8,%ecx
mov    %ecx,0x1c(%esp)
lea    0x1(%ebp,%eax,1),%eax
jne    82a0 <main+0x5590>
test   $0x10,%edi
mov    %eax,(%esp)
jne    8288 <main+0x5578>
call   c170 <main+0x9460>
mov    0x40(%esp),%edx
mov    %eax,0x40(%esp)
test   %ebp,%ebp
mov    0x40(%esp),%eax
je     8175 <main+0x5465>
mov    %ebp,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   2b40 <mempcpy@plt>
jmp    8175 <main+0x5465>
xchg   %ax,%ax
not    %ebp
add    $0x1,%esi
mov    %edi,%ecx
jmp    817c <main+0x546c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%esi),%edx
test   %ecx,%ecx
mov    %edx,0x18(%esp)
jne    8270 <main+0x5560>
movzbl 0x1(%esi),%edx
mov    %edi,%ecx
mov    0x18(%esp),%esi
jmp    81a0 <main+0x5490>
lea    0x0(%esi),%esi
test   %ebp,%ebp
mov    $0x0,%ecx
cmovne %edi,%ecx
jmp    81a0 <main+0x5490>
nop
movb   $0x5c,(%eax)
mov    %edi,%ecx
movzbl 0x1(%esi),%edx
add    $0x1,%eax
mov    0x18(%esp),%esi
jmp    81a0 <main+0x5490>
lea    0x0(%esi),%esi
call   c0b0 <main+0x93a0>
mov    0x40(%esp),%edx
mov    %eax,0x40(%esp)
jmp    820d <main+0x54fd>
lea    0x0(%esi),%esi
lea    0x1fc(%ebx),%ecx
mov    0x40(%esp),%esi
sub    (%ecx),%esi
mov    0x3b4(%ebx),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   c4d0 <main+0x97c0>
mov    %eax,0x40(%esp)
lea    0x1fc(%ebx),%eax
add    (%eax),%esi
mov    %esi,%edx
lea    (%esi,%ebp,1),%esi
jmp    820d <main+0x54fd>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x13b43,%ebx
sub    $0x3c,%esp
lea    0x24(%esp),%esi
lea    0x1fc(%ebx),%eax
mov    0x3b4(%ebx),%ebp
mov    (%eax),%edi
mov    %ebp,%eax
sub    $0x2,%ebp
mov    %esi,(%esp)
sub    %edi,%eax
mov    %eax,0x4(%esp)
call   c280 <main+0x9570>
movb   $0x0,0x1(%ebp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x86,0x0(%ebp)
je     832f <main+0x561f>
sub    $0x1,%ebp
cmpb   $0x86,0x0(%ebp)
jne    8326 <main+0x5616>
cmp    %edi,%ebp
jbe    8361 <main+0x5651>
cmpb   $0x81,-0x1(%ebp)
lea    -0x1(%ebp),%edx
jne    8361 <main+0x5651>
mov    %ebp,%ecx
xor    %eax,%eax
sub    %edi,%ecx
jmp    8350 <main+0x5640>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edx
cmpb   $0x81,(%edx)
jne    8357 <main+0x5647>
add    $0x1,%eax
cmp    %ecx,%eax
jne    8348 <main+0x5638>
test   $0x1,%al
je     8361 <main+0x5651>
not    %eax
add    %eax,%ebp
jmp    8320 <main+0x5610>
mov    %ebp,%eax
sub    %edi,%eax
mov    %eax,(%esp)
mov    %eax,%edi
call   7c50 <main+0x4f40>
mov    %ebp,0x3b4(%ebx)
add    $0x1,%ebp
testb  $0x31,0x50(%esp)
je     838f <main+0x567f>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8130 <main+0x5420>
mov    %ebp,(%esp)
call   3e20 <main+0x1110>
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
call   c320 <main+0x9610>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
call   7350 <main+0x4640>
testl  $0x100,0x50(%esp)
jne    83d4 <main+0x56c4>
add    %edi,%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   7dd0 <main+0x50c0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    $0x2,%edx
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x3c,%esp
call   2f30 <main+0x220>
add    $0x13a37,%ebx
mov    0x54(%esp),%eax
sub    $0x4,%eax
cmp    $0x1,%eax
mov    0x3b0(%ebx),%edi
jbe    8421 <main+0x5711>
mov    0x60(%esp),%eax
and    $0x100,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffffff0,%edx
add    $0x22,%edx
mov    %esi,%eax
call   8c40 <main+0x5f30>
lea    0x1f8(%ebx),%edx
mov    0x3b4(%ebx),%eax
cmp    (%edx),%eax
je     85f0 <main+0x58e0>
movb   $0x0,(%eax)
add    $0x1,%eax
mov    %eax,0x3b4(%ebx)
lea    0x1fc(%ebx),%eax
mov    %edi,0x3b0(%ebx)
mov    0x58(%esp),%edi
mov    (%eax),%edx
add    %edx,%edi
cmpl   $0x4,0x54(%esp)
je     8540 <main+0x5830>
cmpl   $0x5,0x54(%esp)
je     8518 <main+0x5808>
mov    0x54(%esp),%eax
mov    %edi,%ecx
add    0x50(%esp),%edx
lea    -0x6(%eax),%esi
mov    0x60(%esp),%eax
mov    %edx,%ebp
and    $0x31,%eax
mov    %eax,0x20(%esp)
jne    8590 <main+0x5880>
lea    -0x1(%edx),%eax
movl   $0x2,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x24(%esp)
call   8130 <main+0x5420>
mov    0x24(%esp),%ecx
mov    %esi,%edx
sar    %edx
and    $0x1,%esi
cmp    %edx,%esi
lea    -0x146ec(%ebx),%eax
lea    -0x147bc(%ebx),%esi
cmove  %esi,%eax
mov    0x20(%esp),%esi
mov    %ecx,0x8(%esp)
mov    0x28(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %edx,0x2c(%esp)
mov    %esi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
call   *%eax
test   %eax,%eax
je     8600 <main+0x58f0>
mov    0x2c(%esp),%edx
test   %edx,%edx
jne    85d0 <main+0x58c0>
movb   $0x0,(%eax)
mov    %eax,0x3b4(%ebx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x0,0x8(%esp)
call   13370 <main+0x10660>
mov    %edi,%eax
mov    %edi,0x3b4(%ebx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
lea    0x29b0(%ebx),%eax
je     8585 <main+0x5875>
cmpb   $0x83,(%esi)
je     8578 <main+0x5868>
mov    %esi,%ecx
sub    %ebp,%ecx
mov    %eax,0x10(%esp)
sub    $0x1,%ecx
lea    -0x7578(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x10,0x5c(%esp)
je     8585 <main+0x5875>
lea    -0x7581(%ebx),%eax
lea    -0x7593(%ebx),%edi
jmp    854f <main+0x583f>
lea    0x0(%esi),%esi
movl   $0x9,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x24(%esp)
call   8130 <main+0x5420>
mov    0x24(%esp),%edx
cmp    %edi,%eax
mov    %eax,%ecx
je     8608 <main+0x58f8>
lea    0x1fc(%ebx),%eax
mov    0x58(%esp),%edi
mov    0x3b4(%ebx),%edx
mov    (%eax),%ebp
add    %ebp,%edi
add    0x50(%esp),%ebp
jmp    8492 <main+0x5782>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    %eax,%ebp
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2770 <memmove@plt>
lea    -0x1(%edi,%ebp,1),%eax
jmp    8502 <main+0x57f2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   c4a0 <main+0x9790>
jmp    843c <main+0x572c>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    850b <main+0x57fb>
nop
lea    0x1fc(%ebx),%eax
mov    %ecx,%edi
mov    (%eax),%ebp
add    0x50(%esp),%ebp
jmp    8492 <main+0x5782>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
lea    0x1(%eax),%ecx
mov    %eax,0x50(%esp)
movzbl (%eax),%eax
call   2f30 <main+0x220>
add    $0x137f6,%ebx
mov    %edx,0x3c(%esp)
mov    %ecx,0x40(%esp)
movsbl %al,%edi
and    $0xf,%eax
mov    %edi,0x28(%esp)
mov    %eax,0x30(%esp)
je     8c31 <main+0x5f21>
mov    0x3c(%esp),%eax
and    $0x100,%eax
mov    %eax,0x44(%esp)
mov    0x50(%esp),%eax
movzbl 0x1(%eax),%edx
jne    89e8 <main+0x5cd8>
movl   $0x1,0x5c(%esp)
mov    0x3b4(%ebx),%eax
mov    %edx,0x20(%esp)
mov    %eax,0x48(%esp)
lea    0x1fc(%ebx),%eax
mov    (%eax),%eax
sub    %eax,0x48(%esp)
mov    0x40(%esp),%eax
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
mov    0x44(%esp),%esi
xor    %ecx,%ecx
mov    0x20(%esp),%edx
lea    0x1(%eax),%ebp
mov    0x3c(%esp),%eax
mov    %ebp,0x4c(%esp)
and    $0x1,%eax
shl    $0x8,%eax
test   %esi,%esi
cmove  %ecx,%eax
mov    %eax,0x58(%esp)
mov    %edx,%eax
nop
mov    0x28(%esp),%ecx
movl   $0x2,0x20(%esp)
and    $0xf,%ecx
cmp    $0xa,%ecx
sete   %dl
cmp    $0x3,%ecx
sete   %cl
or     %ecx,%edx
movzbl %dl,%esi
test   %esi,%esi
mov    %esi,0x38(%esp)
jne    8708 <main+0x59f8>
mov    0x3c(%esp),%edi
and    $0x31,%edi
mov    %edi,0x20(%esp)
orl    $0x2,0x20(%esp)
lea    -0x5d2c(%ebx),%edi
mov    0x44(%esp),%edx
lea    0x82(%edi),%ecx
test   %edx,%edx
mov    %ecx,0x24(%esp)
je     8730 <main+0x5a20>
lea    -0x5e4c(%ebx),%edx
lea    0x82(%edx),%ecx
mov    %ecx,0x24(%esp)
sub    $0x21,%eax
cmp    $0x1f,%al
ja     89c8 <main+0x5cb8>
movzbl %al,%eax
mov    -0x755c(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
jne    877b <main+0x5a6b>
lea    0x254(%ebx),%eax
movl   $0x20,0x34(%esp)
testb  $0x20,0x4(%eax)
jne    877b <main+0x5a6b>
mov    0x8(%eax),%eax
movsbl 0x4(%eax),%eax
mov    %eax,0x34(%esp)
lea    0x29d8(%ebx),%eax
mov    0x8(%eax),%esi
test   %esi,%esi
je     88e8 <main+0x5bd8>
movzbl 0x34(%esp),%eax
xor    %edi,%edi
mov    %edi,0x2c(%esp)
mov    %al,0x6f(%esp)
lea    0x6f(%esp),%eax
mov    %eax,0x54(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esi
mov    -0x4(%esi),%ebp
test   %ebp,%ebp
je     8812 <main+0x5b02>
mov    %ebp,(%esp)
call   2a10 <strlen@plt>
mov    %eax,%edi
mov    0x20(%esp),%eax
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %ebp,%eax
call   7280 <main+0x4570>
mov    (%esi),%ebp
add    %edi,0x2c(%esp)
test   %ebp,%ebp
je     87a8 <main+0x5a98>
mov    0x34(%esp),%edi
test   %edi,%edi
je     87a8 <main+0x5a98>
mov    0x20(%esp),%eax
add    $0x4,%esi
mov    $0x1,%edx
addl   $0x1,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    0x54(%esp),%eax
call   7280 <main+0x4570>
mov    -0x4(%esi),%ebp
test   %ebp,%ebp
jne    87b2 <main+0x5aa2>
mov    0x2c(%esp),%edi
jmp    8828 <main+0x5b18>
lea    0x27b0(%ebx),%eax
mov    (%eax),%eax
cltd
call   7350 <main+0x4640>
mov    %eax,%edi
mov    0x38(%esp),%esi
test   %esi,%esi
je     8836 <main+0x5b26>
sub    %edi,0x3b4(%ebx)
mov    0x28(%esp),%eax
and    $0x10,%eax
cmp    $0x1,%eax
adc    $0xffffffff,%edi
cmpl   $0x3,0x30(%esp)
je     8ac6 <main+0x5db6>
cmpl   $0x2,0x30(%esp)
je     8a11 <main+0x5d01>
mov    0x30(%esp),%ecx
mov    %ecx,%eax
sub    $0x4,%eax
cmp    $0x1,%eax
ja     8ada <main+0x5dca>
test   %edi,%edi
jns    8ad1 <main+0x5dc1>
mov    0x3c(%esp),%eax
mov    0x48(%esp),%esi
mov    0x40(%esp),%edx
mov    %ecx,0x4(%esp)
and    $0xffffffce,%eax
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
call   83e0 <main+0x56d0>
test   %eax,%eax
je     8b74 <main+0x5e64>
mov    %esi,(%esp)
andl   $0xffffffef,0x28(%esp)
call   7c50 <main+0x4f40>
mov    0x50(%esp),%eax
movzbl 0x1(%eax),%eax
jmp    86d0 <main+0x59c0>
lea    0x29d8(%ebx),%eax
mov    (%eax),%eax
jmp    8820 <main+0x5b10>
lea    0x0(%esi),%esi
lea    0x27a4(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    8820 <main+0x5b10>
mov    $0xffffffff,%edi
jmp    8836 <main+0x5b26>
lea    0x0(%esi),%esi
lea    0x718(%ebx),%eax
mov    (%eax),%eax
jmp    8820 <main+0x5b10>
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   2c60 <strtol@plt>
test   %eax,%eax
js     88e8 <main+0x5bd8>
lea    0x29d8(%ebx),%edx
cmp    (%edx),%eax
jg     88e8 <main+0x5bd8>
test   %eax,%eax
je     89db <main+0x5ccb>
mov    0x8(%edx),%edx
mov    -0x4(%edx,%eax,4),%esi
test   %esi,%esi
je     88e8 <main+0x5bd8>
mov    %esi,(%esp)
call   2a10 <strlen@plt>
mov    %eax,%edi
mov    0x20(%esp),%eax
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   7280 <main+0x4570>
jmp    8828 <main+0x5b18>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3b4(%ebx),%eax
xor    %edi,%edi
movl   $0x11,(%esp)
mov    %eax,0x4(%esp)
call   c4d0 <main+0x97c0>
lea    0x29b8(%ebx),%ebp
mov    $0x10,%edx
lea    -0x6d71(%ebx),%esi
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%edx,%ebp,1)
je     89b3 <main+0x5ca3>
movzbl (%edx,%esi,1),%ecx
add    $0x1,%edi
add    $0x1,%eax
mov    %cl,-0x1(%eax)
sub    $0x1,%edx
cmp    $0xffffffff,%edx
jne    89a0 <main+0x5c90>
mov    %eax,0x3b4(%ebx)
jmp    8828 <main+0x5b18>
xchg   %ax,%ax
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
mov    %eax,%esi
jmp    8941 <main+0x5c31>
lea    0x29d0(%ebx),%eax
mov    (%eax),%esi
jmp    8941 <main+0x5c31>
cmp    $0x40,%dl
movl   $0x0,0x5c(%esp)
jne    867b <main+0x596b>
lea    0x29d8(%ebx),%eax
mov    (%eax),%edi
xor    %eax,%eax
test   %edi,%edi
setne  %al
mov    %eax,0x5c(%esp)
jmp    867b <main+0x596b>
mov    0x4c(%esp),%ebp
test   %edi,%edi
js     8bd8 <main+0x5ec8>
mov    0x5c(%esp),%ecx
test   %ecx,%ecx
je     8a4b <main+0x5d3b>
mov    0x44(%esp),%eax
lea    0x1fc(%ebx),%ecx
mov    %eax,0x8(%esp)
mov    0x3b4(%ebx),%eax
sub    (%ecx),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   7dd0 <main+0x50c0>
cmpl   $0x1,0x30(%esp)
je     8b83 <main+0x5e73>
mov    0x3b0(%ebx),%esi
mov    $0x1,%ecx
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x0(%ebp),%edx
cmp    $0xffffff81,%edx
je     8a98 <main+0x5d88>
cmp    $0xffffff84,%edx
lea    0x1(%ebp),%eax
je     8aa0 <main+0x5d90>
cmp    $0xffffff82,%edx
je     8ab0 <main+0x5da0>
cmp    $0xffffff83,%edx
mov    %eax,%ebp
jne    8a68 <main+0x5d58>
sub    $0x1,%ecx
jne    8a68 <main+0x5d58>
mov    %esi,0x3b0(%ebx)
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x2,%ebp
jmp    8a68 <main+0x5d58>
lea    0x0(%esi),%esi
test   %edi,%edi
mov    %eax,%ebp
js     8a68 <main+0x5d58>
mov    (%esi),%esi
jmp    8a68 <main+0x5d58>
lea    0x0(%esi),%esi
movzbl 0x1(%ebp),%eax
add    $0x2,%ebp
and    $0xf,%eax
cmp    $0x1,%al
setne  %al
movzbl %al,%eax
add    %eax,%ecx
jmp    8a68 <main+0x5d58>
mov    0x4c(%esp),%ebp
not    %edi
jmp    8a15 <main+0x5d05>
mov    0x4c(%esp),%ebp
jmp    8a1d <main+0x5d0d>
test   %edi,%edi
mov    0x4c(%esp),%ebp
js     8b8d <main+0x5e7d>
cmpl   $0xa,0x30(%esp)
je     8bfe <main+0x5eee>
cmpl   $0x1,0x30(%esp)
je     8beb <main+0x5edb>
test   %edi,%edi
js     8a56 <main+0x5d46>
lea    0x1f8(%ebx),%edx
mov    0x3b4(%ebx),%eax
cmp    (%edx),%eax
je     8c27 <main+0x5f17>
lea    0x1fc(%ebx),%ecx
add    $0x1,%eax
xor    %edx,%edx
movb   $0x0,-0x1(%eax)
mov    %eax,0x3b4(%ebx)
sub    (%ecx),%eax
mov    %eax,%esi
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,%eax
call   83e0 <main+0x56d0>
test   %eax,%eax
je     8c10 <main+0x5f00>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   7c50 <main+0x4f40>
jmp    8a25 <main+0x5d15>
cmpl   $0x1,0x30(%esp)
mov    0x4c(%esp),%ebp
jne    8a56 <main+0x5d46>
add    $0x7c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0xe(%eax)
je     8ae6 <main+0x5dd6>
lea    0x29b0(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x7593(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
sub    %eax,%ebp
mov    %eax,0x8(%esp)
mov    %ebp,%eax
sub    $0x1,%eax
mov    %eax,0x4(%esp)
lea    -0x7578(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%edx
mov    %ebp,%eax
or     $0x82,%dl
call   8c40 <main+0x5f30>
jmp    8a4b <main+0x5d3b>
mov    0x5c(%esp),%edx
mov    %ebp,%eax
test   %edx,%edx
je     8a90 <main+0x5d80>
jmp    8a25 <main+0x5d15>
xor    %eax,%eax
test   %edi,%edi
cmovns %edi,%eax
cltd
call   7350 <main+0x4640>
jmp    8a25 <main+0x5d15>
lea    0x1fc(%ebx),%eax
mov    (%eax),%eax
lea    -0x1(%eax,%esi,1),%eax
mov    %eax,0x3b4(%ebx)
jmp    8b63 <main+0x5e53>
call   c4a0 <main+0x9790>
jmp    8b18 <main+0x5e08>
lea    -0x756d(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
nop
push   %ebp
mov    %edx,%ecx
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x131df,%ebx
sub    $0xdc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xcc(%esp)
xor    %eax,%eax
mov    %edx,%eax
and    $0x180,%eax
add    $0xffffff80,%eax
sete   0x1f(%esp)
and    $0x4,%ecx
lea    -0x74b6(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x10(%esp)
je     8ca2 <main+0x5f92>
lea    -0x74b8(%ebx),%eax
and    $0x40,%edx
mov    %eax,%esi
lea    -0x74b7(%ebx),%eax
cmove  %esi,%eax
mov    %eax,0x10(%esp)
testb  $0x2,0xc(%esp)
je     8dd0 <main+0x60c0>
lea    0x1fc(%ebx),%eax
andl   $0xfffffffd,0xc(%esp)
cmpb   $0x7e,(%edi)
movl   $0x0,0x18(%esp)
mov    %eax,0x14(%esp)
je     8e37 <main+0x6127>
mov    0x14(%esp),%eax
mov    0x3b4(%ebx),%esi
mov    (%eax),%eax
sub    %eax,%esi
xor    %ebp,%ebp
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
lea    (%edi,%ebp,1),%eax
mov    %eax,(%esp)
call   2740 <strcspn@plt>
add    %eax,%ebp
movzbl (%edi,%ebp,1),%edx
movsbl %dl,%eax
test   %eax,%eax
je     8d06 <main+0x5ff6>
test   $0x80,%al
je     8d40 <main+0x6030>
cmp    $0xffffff87,%eax
je     8d40 <main+0x6030>
test   %ebp,%ebp
jne    8d47 <main+0x6037>
cmp    $0x3a,%dl
lea    0x1(%edi,%ebp,1),%ecx
je     8d83 <main+0x6073>
cmp    $0x3d,%dl
je     8db8 <main+0x60a8>
test   %dl,%dl
je     8d98 <main+0x6088>
add    $0x7f,%edx
cmp    $0x7,%dl
ja     9078 <main+0x6368>
movzbl %dl,%edx
mov    -0x74dc(%ebx,%edx,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
add    $0x1,%ebp
test   %ebp,%ebp
je     8d0a <main+0x5ffa>
mov    0x3b4(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x8(%esp)
call   c530 <main+0x9820>
mov    0x14(%esp),%ecx
mov    0x20(%esp),%edx
mov    %eax,0x3b4(%ebx)
sub    (%ecx),%eax
cmpb   $0x0,0x1f(%esp)
jne    8de8 <main+0x60d8>
cmp    $0x3a,%dl
mov    %eax,%esi
lea    0x1(%edi,%ebp,1),%ecx
jne    8d13 <main+0x6003>
cmpb   $0x7e,-0x1(%ecx)
lea    -0x1(%ecx),%edi
je     8e37 <main+0x6127>
xor    %ebp,%ebp
jmp    8cdd <main+0x5fcd>
nop
mov    0xcc(%esp),%eax
xor    %gs:0x14,%eax
jne    925c <main+0x654c>
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
testb  $0x40,0xc(%esp)
je     8e20 <main+0x6110>
lea    -0x1(%ecx),%edi
xor    %ebp,%ebp
jmp    8cdd <main+0x5fcd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1fc(%ebx),%eax
movl   $0x0,0x18(%esp)
mov    %eax,0x14(%esp)
jmp    8ccd <main+0x5fbd>
nop
mov    0x18(%esp),%ecx
test   %ecx,%ecx
jne    8d78 <main+0x6068>
cmp    %eax,%esi
jge    8d78 <main+0x6068>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x20(%esp)
call   7dd0 <main+0x50c0>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,%esi
jmp    8d0a <main+0x5ffa>
nop
orl    $0x40,0xc(%esp)
addl   $0x1,0x10(%esp)
cmpb   $0x7e,-0x1(%ecx)
lea    -0x1(%ecx),%edi
jne    8d90 <main+0x6080>
mov    0xc(%esp),%eax
mov    %edi,%esi
and    $0x4,%eax
movzbl 0x1(%esi),%edx
lea    0x1(%esi),%ecx
test   %dl,%dl
je     90b2 <main+0x63a2>
cmp    $0x88,%dl
je     8ccd <main+0x5fbd>
jle    90a0 <main+0x6390>
cmp    $0x2f,%dl
je     90b2 <main+0x63a2>
cmp    $0x3a,%dl
jne    8e76 <main+0x6166>
test   %eax,%eax
xchg   %ax,%ax
jne    90b2 <main+0x63a2>
mov    %ecx,%esi
jmp    8e40 <main+0x6130>
lea    0x0(%esi),%esi
xorl   $0x100,0x18(%esp)
je     9070 <main+0x6360>
lea    -0x6f01(%ebx),%eax
mov    %ecx,(%esp)
movl   $0x5,0x8(%esp)
mov    %ecx,0x20(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   2820 <memcmp@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
jne    9070 <main+0x6360>
mov    0xc(%esp),%edx
lea    0x1(%ecx),%eax
or     0x18(%esp),%edx
call   8620 <main+0x5910>
mov    0x3b4(%ebx),%esi
lea    0x1(%eax),%edi
mov    0x14(%esp),%eax
mov    (%eax),%eax
jmp    8cd9 <main+0x5fc9>
nop
mov    0xc(%esp),%eax
or     0x18(%esp),%eax
mov    %eax,%esi
mov    %eax,0x24(%esp)
mov    0x3b0(%ebx),%eax
mov    0x4(%eax),%edi
mov    %esi,%eax
and    $0x100,%eax
mov    %eax,0x2c(%esp)
jne    9088 <main+0x6378>
lea    -0x5d2c(%ebx),%eax
add    $0x82,%eax
mov    %eax,0x28(%esp)
lea    0x6fc(%ebx),%eax
mov    %ecx,0x20(%esp)
addl   $0x1,(%eax)
mov    0x14(%esp),%eax
lea    0x30(%esp),%esi
mov    0x3b4(%ebx),%ebp
sub    (%eax),%ebp
mov    %esi,(%esp)
mov    %ebp,0x4(%esp)
call   c280 <main+0x9570>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   5e40 <main+0x3130>
mov    %esi,(%esp)
call   c320 <main+0x9610>
mov    0x44(%esp),%eax
mov    0x40(%esp),%esi
mov    0x20(%esp),%ecx
test   %eax,%eax
jne    8fb9 <main+0x62a9>
mov    0x3c(%esp),%eax
lea    0x4c(%esp),%esi
lea    0x27a8(%ebx),%edi
test   %eax,%eax
js     90fa <main+0x63ea>
mov    %ecx,0x20(%esp)
jmp    8f97 <main+0x6287>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
cmpl   $0x4,(%eax)
jne    90f6 <main+0x63e6>
mov    0x3c(%esp),%eax
movl   $0x80,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   2720 <read@plt>
test   %eax,%eax
js     8f88 <main+0x6278>
mov    0x20(%esp),%ecx
je     90fa <main+0x63ea>
mov    0x24(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x28(%esp),%ecx
and    $0x31,%edx
mov    %edx,0x4(%esp)
mov    %eax,%edx
mov    %esi,%eax
mov    %ecx,(%esp)
call   7280 <main+0x4570>
mov    0x20(%esp),%ecx
jmp    8f68 <main+0x6258>
xchg   %ax,%ax
mov    0xc(%esp),%eax
lea    -0x1(%ecx),%edi
or     0x18(%esp),%eax
mov    %eax,(%esp)
call   82e0 <main+0x55d0>
mov    0x14(%esp),%eax
mov    0x3b4(%ebx),%esi
mov    (%eax),%eax
jmp    8cd9 <main+0x5fc9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
add    $0x1,%esi
mov    $0x1,%ebp
or     0xc(%esp),%eax
and    $0x120,%eax
cmp    $0x20,%eax
je     91da <main+0x64ca>
testb  $0x31,0xc(%esp)
mov    %ecx,%edi
je     8cdd <main+0x5fcd>
sub    $0x1,%edi
add    $0x1,%ebp
add    $0x1,%esi
jmp    8cdd <main+0x5fcd>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    %ecx,%eax
or     0x18(%esp),%edx
call   8620 <main+0x5910>
mov    0x3b4(%ebx),%esi
mov    %eax,%edi
mov    0x14(%esp),%eax
mov    (%eax),%eax
jmp    8cd9 <main+0x5fc9>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    9026 <main+0x6316>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edi
xor    %ebp,%ebp
jmp    8cdd <main+0x5fcd>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e4c(%ebx),%eax
add    $0x82,%eax
mov    %eax,0x28(%esp)
jmp    8f17 <main+0x6207>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x81,%dl
je     8ccd <main+0x5fbd>
cmp    $0x83,%dl
jne    8e76 <main+0x6166>
movb   $0x0,0x1(%esi)
cmpb   $0x0,0x1(%edi)
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
jne    91ea <main+0x64da>
lea    -0x6f1c(%ebx),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    %eax,%ebp
test   %ebp,%ebp
je     90ee <main+0x63de>
cmpb   $0x0,0x0(%ebp)
jne    920d <main+0x64fd>
mov    %dl,0x1(%esi)
jmp    8ccd <main+0x5fbd>
mov    0x20(%esp),%ecx
mov    0x40(%esp),%eax
test   %eax,%eax
je     9112 <main+0x6402>
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   27a0 <free@plt>
mov    0x20(%esp),%ecx
mov    0x3c(%esp),%eax
test   %eax,%eax
js     913e <main+0x642e>
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   2c80 <close@plt>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   b980 <main+0x8c70>
lea    0x714(%ebx),%edx
mov    0x20(%esp),%ecx
mov    %eax,(%edx)
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%esi
mov    (%eax),%eax
mov    %eax,0x20(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%esi)
jne    9169 <main+0x6459>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    924a <main+0x653a>
mov    0x14(%esp),%eax
mov    0x3b4(%ebx),%esi
mov    (%eax),%eax
cmp    %eax,%esi
ja     9187 <main+0x6477>
jmp    918d <main+0x647d>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%esi
cmp    %eax,%esi
je     918d <main+0x647d>
cmpb   $0xa,-0x1(%esi)
je     9180 <main+0x6470>
mov    0x2c(%esp),%edx
mov    %esi,0x3b4(%ebx)
test   %edx,%edx
jne    91c5 <main+0x64b5>
sub    %eax,%esi
mov    %esi,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
call   7dd0 <main+0x50c0>
mov    0x14(%esp),%eax
mov    0x3b4(%ebx),%esi
mov    0x20(%esp),%ecx
mov    (%eax),%eax
mov    0x3b0(%ebx),%edx
mov    %ecx,%edi
mov    (%edx),%edx
mov    %edx,0x3b0(%ebx)
jmp    8cd9 <main+0x5fc9>
cmpb   $0x5c,(%ecx)
mov    %ecx,%edi
jne    8cdd <main+0x5fcd>
jmp    9026 <main+0x6316>
lea    0x1(%edi),%eax
mov    %eax,(%esp)
call   26c0 <getpwnam@plt>
mov    0x20(%esp),%edx
test   %eax,%eax
je     90ee <main+0x63de>
mov    0x14(%eax),%ebp
mov    0x24(%esp),%ecx
jmp    90e0 <main+0x63d0>
mov    %dl,0x1(%esi)
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
call   2a10 <strlen@plt>
mov    0xc(%esp),%edx
and    $0x31,%edx
mov    %edx,0x4(%esp)
lea    -0x5f6c(%ebx),%edx
add    $0x82,%edx
mov    %edx,(%esp)
mov    %eax,%edx
mov    %ebp,%eax
call   7280 <main+0x4570>
mov    0x20(%esp),%ecx
mov    %ecx,%edi
jmp    8ccd <main+0x5fbd>
mov    %ecx,0x20(%esp)
call   4790 <main+0x1a80>
mov    0x20(%esp),%ecx
jmp    9169 <main+0x6459>
call   14370 <main+0x11660>
jmp    9270 <main+0x6560>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12bb3,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x48(%esp),%edi
mov    0x44(%esp),%ecx
mov    0xc(%eax),%edx
lea    0x1fc(%ebx),%esi
mov    0x8(%eax),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x3b0(%ebx)
mov    (%esi),%edx
mov    %edx,0x3b4(%ebx)
mov    %edi,%edx
call   8c40 <main+0x5f30>
lea    0x1f8(%ebx),%edx
mov    0x3b4(%ebx),%eax
cmp    (%edx),%eax
je     94d9 <main+0x67c9>
movb   $0x0,(%eax)
lea    0x1(%eax),%edx
mov    %eax,0x3b4(%ebx)
mov    0x1c(%esp),%eax
test   %eax,%eax
je     94b9 <main+0x67a9>
sub    (%esi),%edx
lea    0x394(%ebx),%esi
mov    %edx,(%esp)
call   c170 <main+0x9460>
and    $0x1,%edi
mov    %esi,0x398(%ebx)
mov    %eax,%ebp
je     9478 <main+0x6768>
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   7e60 <main+0x5150>
mov    0x398(%ebx),%eax
movl   $0x0,(%eax)
mov    0x394(%ebx),%edi
mov    %esi,0x398(%ebx)
test   %edi,%edi
je     9497 <main+0x6787>
lea    0x398,%eax
mov    %eax,0x14(%esp)
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x1(%eax)
jne    9457 <main+0x6747>
xchg   %ax,%ax
lea    -0x74bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   2b90 <strpbrk@plt>
test   %eax,%eax
je     9457 <main+0x6747>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
movl   $0x13,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8130 <main+0x5420>
mov    %eax,%ebp
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   2a10 <strlen@plt>
mov    $0x800,%edx
cmp    $0x800,%eax
cmovge %eax,%edx
mov    %edx,(%esp)
call   c0b0 <main+0x93a0>
mov    %ebp,%edx
mov    %eax,0x390(%ebx)
call   7810 <main+0x4b00>
mov    0x390(%ebx),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
cmp    0x4(%edi),%ebp
je     93cb <main+0x66bb>
mov    %ebp,(%esp)
call   27a0 <free@plt>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0x18(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    93f6 <main+0x66e6>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    94c8 <main+0x67b8>
mov    0x14(%esp),%eax
mov    (%eax,%ebx,1),%eax
cmp    %esi,%eax
je     9457 <main+0x6747>
movl   $0x0,(%eax)
mov    (%esi),%eax
test   %eax,%eax
je     94d2 <main+0x67c2>
mov    %eax,%ebp
xor    %edx,%edx
lea    0x0(%esi),%esi
mov    0x0(%ebp),%ebp
add    $0x1,%edx
test   %ebp,%ebp
jne    9418 <main+0x6708>
call   7b90 <main+0x4e80>
mov    %eax,(%esi)
jmp    9432 <main+0x6722>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    9430 <main+0x6720>
mov    %eax,%esi
mov    0x14(%esp),%eax
mov    %esi,(%eax,%ebx,1)
mov    (%edi),%edi
test   %edi,%edi
je     9497 <main+0x6787>
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x1(%eax)
je     9348 <main+0x6638>
mov    %edi,(%esi)
mov    %edi,%esi
movl   $0x0,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8130 <main+0x5420>
mov    0x14(%esp),%eax
mov    %edi,(%eax,%ebx,1)
jmp    9441 <main+0x6731>
nop
movl   $0x8,(%esp)
call   c170 <main+0x9460>
mov    0x398(%ebx),%edx
mov    %ebp,0x4(%eax)
mov    %eax,%esi
mov    %eax,(%edx)
mov    %eax,0x398(%ebx)
movl   $0x0,(%esi)
mov    0x394(%ebx),%eax
test   %eax,%eax
je     94b9 <main+0x67a9>
mov    0x1c(%esp),%ecx
mov    0x4(%ecx),%edx
mov    %eax,(%edx)
mov    0x398(%ebx),%eax
mov    %eax,0x4(%ecx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80c0 <main+0x53b0>
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
jmp    93f6 <main+0x66e6>
xor    %edx,%edx
jmp    9422 <main+0x6712>
lea    0x0(%esi,%eiz,1),%esi
call   c4a0 <main+0x9790>
jmp    92c7 <main+0x65b7>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12933,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
lea    0x14(%esp),%esi
mov    %esi,(%esp)
call   c2c0 <main+0x95b0>
mov    0xc(%ebp),%eax
mov    $0x12,%edx
lea    0x1fc(%ebx),%edi
mov    %eax,0x3b0(%ebx)
mov    (%edi),%eax
mov    %eax,0x3b4(%ebx)
mov    0x8(%ebp),%eax
call   8c40 <main+0x5f30>
lea    0x1f8(%ebx),%edx
mov    0x3b4(%ebx),%eax
cmp    (%edx),%eax
je     9580 <main+0x6870>
movb   $0x0,(%eax)
call   80c0 <main+0x53b0>
movl   $0x2,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8130 <main+0x5420>
mov    0x44(%esp),%edx
call   73b0 <main+0x46a0>
mov    %esi,(%esp)
mov    %eax,%edi
call   c320 <main+0x9610>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   c4a0 <main+0x9790>
mov    %eax,0x3b4(%ebx)
movb   $0x0,(%eax)
jmp    9549 <main+0x6839>
push   %ebx
call   2f30 <main+0x220>
add    $0x12896,%ebx
sub    $0x18,%esp
lea    0x734(%ebx),%edx
mov    0x1ec(%ebx),%eax
mov    (%edx),%edx
mov    %edx,0xc(%eax)
lea    0x2798(%ebx),%edx
mov    (%edx),%edx
mov    %edx,0x10(%eax)
lea    0x73c(%ebx),%edx
mov    (%edx),%edx
mov    %edx,0x14(%eax)
mov    0x1e8(%ebx),%edx
mov    %edx,0x4(%eax)
movl   $0x34,(%esp)
call   c0b0 <main+0x93a0>
mov    0x1ec(%ebx),%edx
movl   $0xffffffff,0x8(%eax)
mov    %edx,(%eax)
movl   $0x0,0x1c(%eax)
movl   $0x0,0x20(%eax)
mov    %eax,0x1ec(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
call   6097 <main+0x3387>
add    $0x12817,%ecx
lea    0x734(%ecx),%eax
addl   $0x1,(%eax)
lea    0x73c(%ecx),%eax
subl   $0x1,(%eax)
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x127f0,%ebx
mov    0x30(%esp),%eax
mov    0x34(%esp),%edi
mov    %eax,(%esp)
call   2a10 <strlen@plt>
lea    0x6fc(%ebx),%esi
addl   $0x1,(%esi)
mov    %eax,%ebp
mov    0x1ec(%ebx),%eax
mov    0x1c(%eax),%edx
test   %edx,%edx
je     96e8 <main+0x69d8>
movl   $0x14,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,%edx
mov    0x1ec(%ebx),%eax
mov    0x1c(%eax),%ecx
mov    %ecx,(%edx)
mov    %edx,0x1c(%eax)
lea    0x73c(%ebx),%eax
test   %edi,%edi
mov    %edi,0xc(%edx)
mov    (%eax),%ecx
mov    %ecx,0x4(%edx)
lea    0x734(%ebx),%ecx
mov    (%ecx),%eax
mov    %eax,0x8(%edx)
je     96ae <main+0x699e>
mov    0x30(%esp),%eax
orl    $0x1,0xc(%edi)
mov    %eax,0x10(%edx)
mov    0x30(%esp),%eax
lea    0x73c(%ebx),%edi
mov    %ebp,(%ecx)
mov    %eax,(%edi)
subl   $0x1,(%esi)
jne    96cd <main+0x69bd>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    96d8 <main+0x69c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x20(%eax),%edx
mov    %edx,0x1c(%eax)
jmp    9686 <main+0x6976>
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12733,%ebx
sub    $0x1c,%esp
mov    0x1ec(%ebx),%eax
lea    0x6fc(%ebx),%edi
mov    0x1c(%eax),%esi
addl   $0x1,(%edi)
mov    0xc(%esi),%eax
lea    0x73c(%ebx),%ebp
test   %eax,%eax
je     9769 <main+0x6a59>
mov    0x0(%ebp),%edx
movzbl -0x1(%edx),%edx
cmp    $0x9,%dl
je     9732 <main+0x6a22>
cmp    $0x20,%dl
jne    973b <main+0x6a2b>
lea    0x29f4(%ebx),%edx
orl    $0x1,(%edx)
mov    0x10(%esi),%edx
cmp    0x8(%eax),%edx
je     974e <main+0x6a3e>
mov    %edx,(%esp)
call   27a0 <free@plt>
mov    0xc(%esi),%eax
mov    0xc(%eax),%edx
mov    %edx,%ecx
and    $0xfffffffe,%ecx
and    $0x2,%edx
mov    %ecx,0xc(%eax)
je     9769 <main+0x6a59>
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   30f0 <main+0x3e0>
mov    0x4(%esi),%eax
mov    0x8(%esi),%edx
mov    %eax,0x0(%ebp)
lea    0x734(%ebx),%eax
mov    %edx,(%eax)
mov    0x1ec(%ebx),%eax
mov    (%esi),%edx
add    $0x20,%eax
mov    %edx,-0x4(%eax)
cmp    %eax,%esi
je     9794 <main+0x6a84>
mov    %esi,(%esp)
call   27a0 <free@plt>
subl   $0x1,(%edi)
jne    97a5 <main+0x6a95>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    97b0 <main+0x6aa0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12663,%ebx
sub    $0x1c,%esp
lea    0x734(%ebx),%eax
mov    (%eax),%edx
mov    0x1ec(%ebx),%eax
mov    0x1c(%eax),%ecx
test   %ecx,%ecx
jne    99df <main+0x6ccf>
cmp    $0xffffff9d,%edx
je     99d5 <main+0x6cc5>
mov    0x18(%eax),%ecx
test   %ecx,%ecx
je     99d5 <main+0x6cc5>
lea    0x21c(%ebx),%eax
mov    %eax,(%esp)
call   11560 <main+0xe850>
lea    0x2798(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
jle    98e8 <main+0x6bd8>
lea    0x73c(%ebx),%eax
mov    (%eax),%edi
jmp    9834 <main+0x6b24>
nop
add    $0x1,%edi
cmp    $0xa,%eax
je     98a8 <main+0x6b98>
test   %esi,%esi
jle    9855 <main+0x6b45>
movsbl (%edi),%eax
sub    $0x1,%esi
test   %eax,%eax
jne    9828 <main+0x6b18>
lea    0x1(%edi),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2770 <memmove@plt>
test   %esi,%esi
jg     9834 <main+0x6b24>
lea    0x73c(%ebx),%ecx
mov    %edi,%eax
sub    (%ecx),%eax
lea    0x734(%ebx),%ecx
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
js     98e8 <main+0x6bd8>
lea    0x2798(%ebx),%eax
lea    0x29b8(%ebx),%edx
mov    %esi,(%eax)
movzbl (%edi),%eax
movb   $0x0,(%edi)
cmpb   $0x0,0x8(%edx)
jne    98c0 <main+0x6bb0>
mov    %al,(%edi)
lea    0x73c(%ebx),%eax
lea    0x73c(%ebx),%ecx
mov    (%eax),%eax
lea    0x1(%eax),%edx
mov    %edx,(%ecx)
movsbl (%eax),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x73c(%ebx),%ecx
mov    %edi,%eax
sub    (%ecx),%eax
lea    0x734(%ebx),%ecx
sub    $0x1,%eax
mov    %eax,(%ecx)
jmp    986e <main+0x6b5e>
nop
lea    0x234(%ebx),%edx
mov    %eax,0xc(%esp)
lea    0x73c(%ebx),%eax
mov    (%edx),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%edx
mov    %edx,(%esp)
call   11720 <main+0xea10>
mov    0xc(%esp),%eax
jmp    9888 <main+0x6b78>
xchg   %ax,%ax
mov    0x1ec(%ebx),%eax
lea    0x73c(%ebx),%ecx
lea    0x27a8(%ebx),%ebp
mov    0x18(%eax),%edi
mov    %edi,(%ecx)
jmp    9918 <main+0x6c08>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    (%eax),%eax
cmp    $0x4,%eax
jne    9960 <main+0x6c50>
mov    0x1ec(%ebx),%eax
movl   $0x2000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   2720 <read@plt>
test   %eax,%eax
js     9908 <main+0x6bf8>
mov    %eax,%esi
jne    981d <main+0x6b0d>
lea    0x734(%ebx),%eax
movl   $0xffffff9d,(%eax)
lea    0x2798(%ebx),%eax
movl   $0xffffff9d,(%eax)
mov    $0xffffff7e,%eax
jmp    98a0 <main+0x6b90>
lea    0x0(%esi),%esi
mov    0x1ec(%ebx),%edx
mov    0x8(%edx),%edx
test   %edx,%edx
jne    993b <main+0x6c2b>
cmp    $0xb,%eax
jne    993b <main+0x6c2b>
movl   $0x0,0x8(%esp)
movl   $0x3,0x4(%esp)
movl   $0x0,(%esp)
call   2a70 <fcntl@plt>
test   %eax,%eax
js     993b <main+0x6c2b>
test   $0x8,%ah
je     993b <main+0x6c2b>
and    $0xf7,%ah
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x0,(%esp)
call   2a70 <fcntl@plt>
test   %eax,%eax
js     993b <main+0x6c2b>
lea    0x234(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    -0x74af(%ebx),%eax
mov    %eax,(%esp)
call   11720 <main+0xea10>
jmp    9912 <main+0x6c02>
mov    $0xffffff7e,%eax
jmp    98a0 <main+0x6b90>
cmp    $0xffffffff,%edx
jne    99ff <main+0x6cef>
mov    0xc(%ecx),%esi
test   %esi,%esi
je     99ff <main+0x6cef>
lea    0x73c(%ebx),%eax
mov    (%eax),%eax
movzbl -0x1(%eax),%eax
cmp    $0x20,%al
je     99ff <main+0x6cef>
cmp    $0x9,%al
jne    9a38 <main+0x6d28>
call   96f0 <main+0x69e0>
lea    0x734(%ebx),%eax
mov    (%eax),%eax
lea    -0x1(%eax),%edx
mov    %eax,0xc(%esp)
lea    0x734(%ebx),%eax
test   %edx,%edx
mov    %edx,(%eax)
js     97da <main+0x6aca>
lea    0x73c(%ebx),%edx
mov    (%edx),%eax
lea    0x1(%eax),%ecx
mov    %ecx,(%edx)
movsbl (%eax),%eax
jmp    98a0 <main+0x6b90>
mov    $0xffffff7f,%eax
jmp    98a0 <main+0x6b90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0x123d6,%ebx
lea    0x734(%ebx),%edx
subl   $0x1,(%edx)
js     9a80 <main+0x6d70>
lea    0x73c(%ebx),%edx
mov    (%edx),%eax
lea    0x1(%eax),%ecx
mov    %ecx,(%edx)
movsbl (%eax),%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
jmp    97c0 <main+0x6ab0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12395,%ebx
sub    $0x4,%esp
lea    0x734(%ebx),%esi
subl   $0x1,(%esi)
js     9ac8 <main+0x6db8>
lea    0x73c(%ebx),%edx
mov    (%edx),%eax
lea    0x1(%eax),%ecx
mov    %ecx,(%edx)
movsbl (%eax),%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   97c0 <main+0x6ab0>
cmp    $0xffffff7f,%eax
je     9aa6 <main+0x6d96>
jmp    9abb <main+0x6dab>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12343,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    0x6fc(%ebx),%edi
addl   $0x1,(%edi)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   29e0 <open@plt>
test   %eax,%eax
mov    %eax,%esi
js     9b90 <main+0x6e80>
cmp    $0x9,%eax
jle    9bc0 <main+0x6eb0>
testb  $0x1,0x34(%esp)
jne    9bd9 <main+0x6ec9>
mov    0x1ec(%ebx),%ebp
mov    0x18(%ebp),%eax
mov    %esi,0x8(%ebp)
test   %eax,%eax
je     9bee <main+0x6ede>
lea    0x734(%ebx),%eax
movl   $0x1,0x1e8(%ebx)
00
movl   $0x0,(%eax)
lea    0x2798(%ebx),%eax
movl   $0x0,(%eax)
subl   $0x1,(%edi)
jne    9b70 <main+0x6e60>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    9b80 <main+0x6e70>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
testb  $0x2,0x34(%esp)
jne    9b5f <main+0x6e4f>
lea    0x718(%ebx),%eax
movl   $0x7f,(%eax)
lea    -0x7492(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   4840 <main+0x1b30>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    %eax,(%esp)
call   10580 <main+0xd870>
testb  $0x1,0x34(%esp)
mov    %eax,%esi
je     9b29 <main+0x6e19>
call   9590 <main+0x6880>
mov    0x1ec(%ebx),%ebp
movl   $0x0,0x18(%ebp)
mov    %esi,0x8(%ebp)
movl   $0x2001,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,0x18(%ebp)
jmp    9b3d <main+0x6e2d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12215,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
call   9590 <main+0x6880>
lea    0x73c(%ebx),%eax
mov    %esi,(%eax)
mov    %esi,(%esp)
call   2a10 <strlen@plt>
lea    0x734(%ebx),%edx
movl   $0x1,0x1e8(%ebx)
00
mov    %eax,(%edx)
mov    0x1ec(%ebx),%eax
movl   $0x0,0x18(%eax)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    9c78 <main+0x6f68>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    9c80 <main+0x6f70>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
call   4790 <main+0x1a80>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12194,%ebx
sub    $0x10,%esp
lea    0x6fc(%ebx),%edi
mov    0x1ec(%ebx),%esi
addl   $0x1,(%edi)
mov    0x8(%esi),%eax
test   %eax,%eax
js     9cbf <main+0x6faf>
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    0x18(%esi),%eax
test   %eax,%eax
je     9cd5 <main+0x6fc5>
mov    %eax,(%esp)
call   27a0 <free@plt>
jmp    9cd5 <main+0x6fc5>
call   96f0 <main+0x69e0>
mov    0x1c(%esi),%eax
test   %eax,%eax
jne    9cd0 <main+0x6fc0>
mov    (%esi),%eax
mov    %esi,(%esp)
mov    %eax,0x1ec(%ebx)
call   27a0 <free@plt>
mov    0x1ec(%ebx),%eax
lea    0x734(%ebx),%edx
mov    0xc(%eax),%ecx
mov    %ecx,(%edx)
mov    0x10(%eax),%ecx
lea    0x2798(%ebx),%edx
mov    %ecx,(%edx)
mov    0x14(%eax),%ecx
lea    0x73c(%ebx),%edx
mov    0x4(%eax),%eax
mov    %ecx,(%edx)
mov    %eax,0x1e8(%ebx)
subl   $0x1,(%edi)
jne    9d2d <main+0x701d>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    9d38 <main+0x7028>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   4790 <main+0x1a80>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x120d5,%ebx
sub    $0x4,%esp
lea    0x754(%ebx),%esi
cmp    %esi,0x1ec(%ebx)
je     9d7d <main+0x706d>
xchg   %ax,%ax
call   9c90 <main+0x6f80>
cmp    %esi,0x1ec(%ebx)
jne    9d70 <main+0x7060>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12095,%ebx
sub    $0x14,%esp
lea    0x754(%ebx),%esi
cmp    %esi,0x1ec(%ebx)
je     9dbd <main+0x70ad>
xchg   %ax,%ax
call   9c90 <main+0x6f80>
cmp    %esi,0x1ec(%ebx)
jne    9db0 <main+0x70a0>
mov    0x8(%esi),%eax
test   %eax,%eax
jle    9dd9 <main+0x70c9>
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    0x1ec(%ebx),%eax
movl   $0x0,0x8(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x12045,%ebx
mov    0x3c0(%ebx),%esi
cmp    %esi,%eax
jne    9e02 <main+0x70f2>
jmp    9e5b <main+0x714b>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%esi
mov    0x18(%esi),%ecx
cmp    %ecx,%eax
jne    9e00 <main+0x70f0>
add    $0x18,%esi
mov    0x18(%ecx),%ecx
test   %edx,%edx
mov    %ecx,(%esi)
je     9e48 <main+0x7138>
cmp    $0x1,%edx
jne    9e45 <main+0x7135>
mov    0x3c0(%ebx),%edx
test   %edx,%edx
je     9e65 <main+0x7155>
cmpb   $0x1,0x16(%edx)
je     9e36 <main+0x7126>
jmp    9e6f <main+0x715f>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x1,0x16(%edx)
jne    9e40 <main+0x7130>
lea    0x18(%edx),%ecx
mov    0x18(%edx),%edx
test   %edx,%edx
jne    9e30 <main+0x7120>
mov    %edx,0x18(%eax)
mov    %eax,(%ecx)
pop    %ebx
pop    %esi
ret
mov    0x3c0(%ebx),%edx
lea    0x3c0(%ebx),%ecx
mov    %edx,0x18(%eax)
mov    %eax,(%ecx)
jmp    9e45 <main+0x7135>
mov    %eax,%ecx
lea    0x3c0(%ebx),%esi
jmp    9e0c <main+0x70fc>
xor    %edx,%edx
lea    0x3c0(%ebx),%ecx
jmp    9e40 <main+0x7130>
lea    0x3c0(%ebx),%ecx
jmp    9e40 <main+0x7130>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%ecx
movzwl 0x14(%eax),%eax
lea    (%eax,%eax,2),%edx
mov    0xc(%ecx),%eax
lea    (%eax,%edx,4),%edx
mov    -0x8(%edx),%edx
mov    %edx,%esi
movzbl %dh,%eax
and    $0x7f,%esi
je     9ead <main+0x719d>
cmp    $0x7f,%dl
je     9eb0 <main+0x71a0>
cmp    $0x2,%esi
je     9eb8 <main+0x71a8>
lea    0x80(%esi),%eax
pop    %esi
ret
nop
mov    %eax,%esi
jmp    9ea7 <main+0x7197>
lea    0x0(%esi,%eiz,1),%esi
orb    $0x1,0x17(%ecx)
jmp    9ea7 <main+0x7197>
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x11f61,%ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    0x3c0(%ebx),%esi
je     9eef <main+0x71df>
cmpb   $0x25,(%eax)
jne    9f77 <main+0x7267>
movsbl 0x1(%eax),%eax
test   %eax,%eax
jne    9f18 <main+0x7208>
lea    -0x7484(%ebx),%ecx
test   %esi,%esi
je     9f7d <main+0x726d>
test   %edx,%edx
je     9f0b <main+0x71fb>
testb  $0x2,0x17(%esi)
je     9faa <main+0x729a>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x2(%edi)
jne    9f2d <main+0x721d>
cmp    $0x25,%eax
je     9eef <main+0x71df>
cmp    $0x2b,%eax
je     9eef <main+0x71df>
cmp    $0x2d,%eax
je     9f90 <main+0x7280>
lea    0x1(%edi),%ebp
mov    %ebp,(%esp)
mov    %edx,0x14(%esp)
call   d1f0 <main+0xa4e0>
test   %eax,%eax
je     9fb2 <main+0x72a2>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   2c60 <strtol@plt>
cmp    0x3c8(%ebx),%eax
jae    9fb2 <main+0x72a2>
imul   $0x1c,%eax,%eax
mov    0x3cc(%ebx),%ecx
mov    0x14(%esp),%edx
lea    -0x1c(%ecx,%eax,1),%esi
testb  $0x8,0x17(%esi)
jne    9efd <main+0x71ed>
lea    -0x7465(%ebx),%ecx
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     9fa2 <main+0x7292>
mov    0x18(%esi),%esi
lea    -0x7475(%ebx),%ecx
jmp    9ef5 <main+0x71e5>
lea    -0x7475(%ebx),%ecx
jmp    9f7d <main+0x726d>
lea    -0x7324(%ebx),%ecx
jmp    9f7d <main+0x726d>
cmpb   $0x3f,0x1(%edi)
je     a019 <main+0x7309>
lea    -0xedac(%ebx),%edx
test   %esi,%esi
je     9f77 <main+0x7267>
lea    -0x7465(%ebx),%ecx
mov    %edi,0x1c(%esp)
mov    %edx,%edi
movl   $0x0,0x18(%esp)
mov    %ecx,0x14(%esp)
jmp    9ff1 <main+0x72e1>
lea    -0x7455(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x18(%esi),%esi
test   %esi,%esi
je     a00c <main+0x72fc>
mov    %ebp,0x4(%esp)
mov    0xc(%esi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
je     9fea <main+0x72da>
mov    0x18(%esp),%eax
test   %eax,%eax
je     9fdc <main+0x72cc>
mov    0x14(%esp),%ecx
mov    0x1c(%esp),%edi
jmp    9f7d <main+0x726d>
lea    0x2(%edi),%ebp
mov    0x190(%ebx),%edx
jmp    9fbe <main+0x72ae>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    0xc(%eax),%edx
movzwl 0x14(%eax),%eax
call   2f30 <main+0x220>
add    $0x11de7,%ebx
lea    0xc(%edx),%edi
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
cmp    %edi,%eax
mov    %eax,0xc(%esp)
lea    -0x7447(%ebx),%ebp
jbe    a084 <main+0x7374>
lea    0x0(%esi),%esi
mov    0x8(%edi),%edx
add    $0xc,%edi
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
call   11850 <main+0xeb40>
cmp    %edi,0xc(%esp)
ja     a068 <main+0x7358>
mov    %esi,0x4(%esp)
movl   $0xa,(%esp)
call   11760 <main+0xea50>
call   115a0 <main+0xe890>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    a0b0 <main+0x73a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    %edx,%ecx
push   %edi
movzbl %dh,%ebp
push   %esi
mov    %eax,%edi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x11d69,%ebx
and    $0x7f,%ecx
mov    0x40(%esp),%eax
je     a140 <main+0x7430>
movzbl %dl,%esi
cmp    $0x7f,%esi
cmove  %ebp,%ecx
test   %eax,%eax
je     a0fa <main+0x73ea>
cmp    $0x2,%ecx
je     a1c8 <main+0x74b8>
cmp    $0xd,%ecx
je     a1c8 <main+0x74b8>
cmp    $0x7f,%esi
je     a1c8 <main+0x74b8>
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
call   28f0 <strsignal@plt>
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
lea    -0x7458(%ebx),%eax
mov    %eax,0x8(%esp)
call   114a0 <main+0xe790>
mov    0x1c(%esp),%edx
and    $0x80,%edx
mov    %eax,%esi
jne    a1a0 <main+0x7490>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
test   %eax,%eax
jne    a132 <main+0x7422>
test   %ebp,%ebp
jne    a170 <main+0x7460>
lea    -0x7429(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x10,0x4(%esp)
call   114a0 <main+0xe790>
add    $0x2c,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x7432(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x10,0x4(%esp)
call   114a0 <main+0xe790>
add    $0x2c,%esp
pop    %ebx
mov    %eax,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x7441(%ebx),%eax
add    %esi,%edi
mov    %eax,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %edi,(%esp)
call   114a0 <main+0xe790>
add    %eax,%esi
jmp    a132 <main+0x7422>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %eax,%ecx
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x11c41,%ebx
sub    $0x16c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x15c(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x27a0(%ebx),%edx
xor    %eax,%eax
cmp    $0x1,%ecx
setne  %al
lea    0x2a94(%ebx),%ebp
mov    %ecx,%esi
mov    %eax,%edi
or     $0x2,%eax
mov    (%edx),%edx
test   %edx,%edx
cmove  %edi,%eax
lea    0x2a34(%ebx),%edi
mov    %eax,0x14(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x18(%esp)
nop
mov    0x14(%esp),%eax
movl   $0x0,(%edi)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   2ae0 <wait3@plt>
test   %esi,%esi
sete   %cl
test   %eax,%eax
setne  %dl
or     %dl,%cl
mov    %cl,0x10(%esp)
jne    a2ea <main+0x75da>
lea    0x28(%esp),%edx
mov    %edx,(%esp)
lea    0xa8(%esp),%esi
mov    %edx,0xc(%esp)
call   2a90 <sigfillset@plt>
mov    0xc(%esp),%edx
mov    %esi,0x8(%esp)
movl   $0x2,(%esp)
mov    %edx,0x4(%esp)
call   2760 <sigprocmask@plt>
mov    (%edi),%eax
test   %eax,%eax
je     a2c6 <main+0x75b6>
jmp    a2cd <main+0x75bd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   2b10 <sigsuspend@plt>
mov    (%edi),%ecx
test   %ecx,%ecx
jne    a2cd <main+0x75bd>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     a2b8 <main+0x75a8>
movl   $0x0,(%esp)
call   2b00 <sigsetmask@plt>
mov    (%edi),%esi
test   %esi,%esi
je     a3a2 <main+0x7692>
xor    %esi,%esi
jmp    a248 <main+0x7538>
test   %eax,%eax
mov    %eax,%esi
jle    a486 <main+0x7776>
mov    0x3c0(%ebx),%edi
mov    0x24(%esp),%eax
test   %edi,%edi
mov    %eax,0x10(%esp)
je     a378 <main+0x7668>
xchg   %ax,%ax
cmpb   $0x2,0x16(%edi)
je     a371 <main+0x7661>
movzwl 0x14(%edi),%eax
mov    0xc(%edi),%edx
movl   $0x0,0xc(%esp)
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%ebp
mov    $0x2,%eax
jmp    a348 <main+0x7638>
lea    0x0(%esi),%esi
mov    0x4(%edx),%ecx
cmp    $0xffffffff,%ecx
je     a35c <main+0x764c>
test   %eax,%eax
je     a341 <main+0x7631>
cmp    $0x7f,%cl
je     a398 <main+0x7688>
add    $0xc,%edx
cmp    %edx,%ebp
jbe    a365 <main+0x7655>
cmp    %esi,(%edx)
jne    a330 <main+0x7620>
mov    0x10(%esp),%ecx
mov    %edi,0xc(%esp)
cmp    $0xffffffff,%ecx
mov    %ecx,0x4(%edx)
jne    a338 <main+0x7628>
add    $0xc,%edx
xor    %eax,%eax
cmp    %edx,%ebp
ja     a348 <main+0x7638>
mov    0xc(%esp),%edx
test   %edx,%edx
jne    a3f7 <main+0x76e7>
mov    0x18(%edi),%edi
test   %edi,%edi
jne    a308 <main+0x75f8>
cmpb   $0x7f,0x10(%esp)
je     a486 <main+0x7776>
subl   $0x1,0x3bc(%ebx)
movb   $0x0,0x10(%esp)
jmp    a3a4 <main+0x7694>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x10(%edi)
mov    $0x1,%eax
jmp    a341 <main+0x7631>
xor    %esi,%esi
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%edi
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%edi)
jne    a3cf <main+0x76bf>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    a47c <main+0x776c>
cmpb   $0x0,0x10(%esp)
jne    a424 <main+0x7714>
mov    0x15c(%esp),%edi
xor    %gs:0x14,%edi
mov    %esi,%eax
jne    a4a2 <main+0x7792>
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %eax,%eax
je     a46a <main+0x775a>
mov    0xc(%esp),%edi
movzbl 0x16(%edi),%edx
orb    $0x10,0x17(%edi)
cmp    %edx,%eax
je     a46a <main+0x775a>
mov    0xc(%esp),%edi
cmp    $0x1,%eax
mov    %al,0x16(%edi)
je     a490 <main+0x7780>
mov    0x1c(%esp),%eax
cmp    %eax,%edi
sete   0x10(%esp)
jmp    a3a4 <main+0x7694>
mov    0x24(%esp),%edx
lea    0x12b(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,%eax
call   a0b0 <main+0x73a0>
test   %eax,%eax
je     a3d6 <main+0x76c6>
movb   $0xa,0x12b(%esp,%eax,1)
movb   $0x0,0x12c(%esp,%eax,1)
lea    0x234(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   11720 <main+0xea10>
jmp    a3d6 <main+0x76c6>
mov    0x1c(%esp),%eax
cmp    %eax,0xc(%esp)
sete   0x10(%esp)
jmp    a3a4 <main+0x7694>
call   4790 <main+0x1a80>
jmp    a3cf <main+0x76bf>
movb   $0x0,0x10(%esp)
jmp    a3a4 <main+0x7694>
mov    0xc(%esp),%edi
xor    %edx,%edx
mov    %edi,%eax
call   9de0 <main+0x70d0>
jmp    a417 <main+0x7707>
call   14370 <main+0x11660>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x20,%edx
push   %edi
mov    %eax,%edi
push   %esi
xor    %ebp,%ebp
push   %ebx
call   2f30 <main+0x220>
add    $0x1196a,%ebx
sub    $0x3c,%esp
mov    %eax,(%esp)
mov    %dx,0x2e(%esp)
call   2a10 <strlen@plt>
mov    0x3b8(%ebx),%edx
mov    %edx,0x4(%esp)
lea    0x8(,%eax,8),%eax
mov    %eax,(%esp)
call   c4d0 <main+0x97c0>
movl   $0x0,0x10(%esp)
mov    %eax,%edx
lea    -0x716c(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x7423(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x7424(%ebx),%eax
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi),%ecx
lea    0x1(%edi),%esi
test   %cl,%cl
je     a5af <main+0x789f>
cmp    $0x87,%cl
je     a698 <main+0x7988>
jg     a5d0 <main+0x78c0>
cmp    $0x83,%cl
je     a668 <main+0x7958>
jg     a620 <main+0x7910>
cmp    $0x81,%cl
nop
je     a6d0 <main+0x79c0>
cmp    $0x82,%cl
jne    a639 <main+0x7929>
movzbl 0x1(%edi),%eax
lea    0x2(%edi),%esi
movsbl %al,%edi
and    $0xf,%eax
cmp    $0xa,%al
mov    $0x24,%eax
mov    %edi,0x10(%esp)
je     a6fe <main+0x79ee>
lea    -0x7416(%ebx),%edi
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edi),%ecx
mov    %esi,%edi
lea    0x0(%esi),%esi
add    $0x1,%edx
add    $0x1,%ecx
mov    %al,-0x1(%edx)
movzbl -0x1(%ecx),%eax
test   %al,%al
jne    a590 <main+0x7880>
movzbl (%edi),%ecx
lea    0x1(%edi),%esi
test   %cl,%cl
jne    a52e <main+0x781e>
and    $0x1,%ebp
mov    %edx,%eax
je     a5bc <main+0x78ac>
add    $0x1,%edx
movb   $0x22,(%eax)
movb   $0x0,(%edx)
mov    %edx,0x3b8(%ebx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x24,%cl
je     a6b8 <main+0x79a8>
jle    a648 <main+0x7938>
cmp    $0x3d,%cl
xchg   %ax,%ax
jne    a6dc <main+0x79cc>
mov    0x10(%esp),%eax
test   %eax,%eax
je     a6f2 <main+0x79e2>
mov    0x10(%esp),%edi
lea    0x0(%ebp,%ebp,1),%ecx
mov    %edi,%eax
and    $0xf,%eax
cmp    $0x1,%eax
cmovne %ecx,%ebp
mov    0x1c(%esp),%ecx
and    $0x10,%edi
lea    (%ecx,%eax,4),%ecx
je     a6f9 <main+0x79e9>
movb   $0x3a,(%edx)
add    $0x1,%edx
movzbl (%ecx),%eax
jmp    a684 <main+0x7974>
cmp    $0x84,%cl
mov    $0x24,%eax
je     a6a8 <main+0x7998>
cmp    $0x86,%cl
lea    -0x7421(%ebx),%edi
je     a588 <main+0x7878>
mov    %cl,(%edx)
mov    %esi,%edi
add    $0x1,%edx
jmp    a520 <main+0x7810>
lea    0x0(%esi),%esi
cmp    $0x88,%cl
jne    a6b3 <main+0x79a3>
xor    $0x1,%ebp
mov    %esi,%edi
mov    $0x22,%ecx
mov    %cl,(%edx)
add    $0x1,%edx
jmp    a520 <main+0x7810>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%ecx
test   $0x1,%ebp
cmovne 0x18(%esp),%ecx
movl   $0x0,0x10(%esp)
sar    %ebp
movzbl (%ecx),%eax
add    $0x1,%ecx
test   %al,%al
mov    %esi,%edi
jne    a590 <main+0x7880>
jmp    a520 <main+0x7810>
xchg   %ax,%ax
mov    $0x29,%eax
lea    -0x741d(%ebx),%edi
jmp    a588 <main+0x7878>
lea    -0x7413(%ebx),%edi
jmp    a588 <main+0x7878>
cmp    $0x22,%cl
jne    a639 <main+0x7929>
movb   $0x5c,(%edx)
mov    %ecx,%eax
add    $0x1,%edx
mov    %cl,0x2e(%esp)
lea    0x2e(%esp),%edi
jmp    a588 <main+0x7878>
lea    0x0(%esi),%esi
movzbl 0x1(%edi),%ecx
add    $0x2,%edi
jmp    a657 <main+0x7947>
cmp    $0x5c,%cl
je     a6b8 <main+0x79a8>
cmp    $0x27,%cl
je     a6b8 <main+0x79a8>
mov    %cl,(%edx)
mov    %esi,%edi
add    $0x1,%edx
jmp    a520 <main+0x7810>
mov    %esi,%edi
jmp    a657 <main+0x7947>
movzbl (%ecx),%eax
jmp    a684 <main+0x7974>
lea    -0x741a(%ebx),%edi
jmp    a588 <main+0x7878>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x11716,%ebx
sub    $0x18,%esp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   27d0 <tcsetpgrp@plt>
test   %eax,%eax
jne    a734 <main+0x7a24>
add    $0x18,%esp
pop    %ebx
ret
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   29b0 <strerror@plt>
mov    %eax,0x4(%esp)
lea    -0x72fc(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x116c1,%ebx
sub    $0x1c,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
movzwl 0x14(%edi),%eax
mov    0xc(%edi),%ebp
lea    -0x1(%eax),%esi
cmp    $0xffffffff,%esi
je     a80d <main+0x7afd>
mov    0x8(%ebp),%ecx
cmp    0x1bc(%ebx),%ecx
je     a7a3 <main+0x7a93>
mov    %ecx,(%esp)
call   27a0 <free@plt>
sub    $0x1,%esi
add    $0xc,%ebp
cmp    $0xffffffff,%esi
jne    a790 <main+0x7a80>
mov    0xc(%edi),%edx
cmp    %edi,%edx
je     a7bd <main+0x7aad>
mov    %edx,(%esp)
call   27a0 <free@plt>
andb   $0xf7,0x17(%edi)
mov    $0x2,%edx
mov    %edi,%eax
call   9de0 <main+0x70d0>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%edx
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%edx)
jne    a7f4 <main+0x7ae4>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    a800 <main+0x7af0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%edx
jmp    a7b1 <main+0x7aa1>
jmp    a820 <main+0x7b10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
call   2f30 <main+0x220>
add    $0x115fd,%ebx
mov    %eax,0x1c(%esp)
mov    %edx,%eax
mov    %edx,0x2c(%esp)
mov    0xc(%eax),%ebp
mov    %gs:0x14,%edx
mov    %edx,0x8c(%esp)
xor    %edx,%edx
testb  $0x1,0xb0(%esp)
jne    a998 <main+0x7c88>
mov    0x2c(%esp),%edi
lea    0x3c(%esp),%esi
movl   $0x10,0x4(%esp)
mov    %esi,(%esp)
mov    %edi,%eax
sub    0x3cc(%ebx),%eax
sar    $0x2,%eax
imul   $0xb6db6db7,%eax,%eax
add    $0x1,%eax
mov    %eax,0xc(%esp)
lea    -0x7408(%ebx),%eax
mov    %eax,0x8(%esp)
call   114a0 <main+0xe790>
mov    %eax,0x20(%esp)
mov    0x3c0(%ebx),%eax
cmp    %eax,%edi
je     aac0 <main+0x7db0>
test   %eax,%eax
je     a8bd <main+0x7bad>
mov    0x2c(%esp),%edx
cmp    %edx,0x18(%eax)
je     aa9d <main+0x7d8d>
mov    0xb0(%esp),%eax
mov    0x20(%esp),%edi
and    $0x4,%eax
mov    %eax,0x28(%esp)
jne    aa70 <main+0x7d60>
mov    0x2c(%esp),%edx
movzwl 0x14(%edx),%eax
lea    (%eax,%eax,2),%eax
lea    0x0(%ebp,%eax,4),%eax
mov    %eax,0x24(%esp)
movzbl 0x16(%edx),%eax
test   %al,%al
je     aa58 <main+0x7d48>
mov    0x24(%esp),%edx
cmp    $0x1,%al
mov    -0x8(%edx),%edx
je     aab0 <main+0x7da0>
lea    (%esi,%edi,1),%eax
movl   $0x0,(%esp)
call   a0b0 <main+0x73a0>
add    %eax,%edi
mov    0x8(%ebp),%eax
mov    $0x0,%edx
movl   $0x20,0x10(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    $0x21,%eax
sub    %edi,%eax
cmovs  %edx,%eax
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
lea    -0x7400(%ebx),%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11850 <main+0xeb40>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    a9b8 <main+0x7ca8>
mov    0x1c(%esp),%edx
mov    0x2c(%esp),%eax
call   a030 <main+0x7320>
mov    0x2c(%esp),%eax
andb   $0xef,0x17(%eax)
cmpb   $0x2,0x16(%eax)
je     aad0 <main+0x7dc0>
mov    0x8c(%esp),%eax
xor    %gs:0x14,%eax
jne    aade <main+0x7dce>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x0(%ebp),%eax
mov    %eax,0x8(%esp)
lea    -0x740c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
jmp    a977 <main+0x7c67>
nop
lea    -0x73f8(%ebx),%eax
mov    %eax,0x28(%esp)
jmp    aa2f <main+0x7d1f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
movl   $0x20,0x10(%esp)
movl   $0x30,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
mov    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
call   114a0 <main+0xe790>
mov    0x8(%ebp),%ecx
movl   $0x20,0x10(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x14(%esp)
mov    $0x24,%ecx
sub    %eax,%ecx
mov    %ecx,%eax
mov    $0x0,%ecx
cmovs  %ecx,%eax
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
add    $0xc,%ebp
cmp    0x24(%esp),%ebp
jne    a9c8 <main+0x7cb8>
mov    0x1c(%esp),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   11760 <main+0xea50>
jmp    a965 <main+0x7c55>
lea    0x0(%esi,%eiz,1),%esi
lea    (%esi,%edi,1),%eax
add    $0x7,%edi
movl   $0x6e6e7552,(%eax)
movl   $0x676e69,0x4(%eax)
jmp    a914 <main+0x7c04>
mov    0x0(%ebp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x73f2(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edi,%eax
add    %esi,%eax
mov    %eax,(%esp)
call   114a0 <main+0xe790>
lea    (%eax,%edi,1),%edi
jmp    a8d5 <main+0x7bc5>
mov    0x20(%esp),%eax
movb   $0x2d,0x3a(%esp,%eax,1)
jmp    a8bd <main+0x7bad>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x10(%eax),%edx
jmp    a903 <main+0x7bf3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x2b,0x3a(%esp,%eax,1)
jmp    a8bd <main+0x7bad>
xchg   %ax,%ax
mov    0x2c(%esp),%eax
call   a760 <main+0x7a50>
jmp    a977 <main+0x7c67>
call   14370 <main+0x11660>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x1132e,%ebx
test   %eax,%eax
je     ab60 <main+0x7e50>
cmpl   $0x19,(%eax)
ja     ae30 <main+0x8120>
mov    (%eax),%eax
mov    -0x71ec(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
xchg   %ax,%ax
lea    -0x73b4(%ebx),%ebp
xchg   %ax,%ax
movzbl 0x8(%esi),%eax
lea    0xe(%esp),%edi
movb   $0x0,0xf(%esp)
add    $0x30,%eax
mov    %al,0xe(%esp)
mov    %edi,%eax
call   a4b0 <main+0x77a0>
mov    %ebp,%eax
call   a4b0 <main+0x77a0>
mov    (%esi),%eax
sub    $0x15,%eax
cmp    $0x1,%eax
mov    0xc(%esi),%eax
jbe    ae60 <main+0x8150>
call   aaf0 <main+0x7de0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x73bf(%ebx),%esi
xchg   %ax,%ax
mov    %esi,%eax
call   a4b0 <main+0x77a0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x73dd(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x4(%esi),%eax
call   aaf0 <main+0x7de0>
mov    0x8(%esi),%edi
lea    -0x7389(%ebx),%eax
call   a4b0 <main+0x77a0>
lea    -0x73d1(%ebx),%esi
mov    %edi,%eax
call   aaf0 <main+0x7de0>
jmp    ab70 <main+0x7e60>
lea    -0x73ee(%ebx),%edi
mov    0x4(%esi),%eax
call   aaf0 <main+0x7de0>
mov    %edi,%eax
call   a4b0 <main+0x77a0>
mov    0x8(%esi),%eax
jmp    ab5b <main+0x7e4b>
lea    0x0(%esi),%esi
lea    -0x73a6(%ebx),%ebp
jmp    ab28 <main+0x7e18>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
jmp    ab5b <main+0x7e4b>
mov    0xc(%esi),%edi
lea    -0x6ef6(%ebx),%ebp
test   %edi,%edi
je     ac18 <main+0x7f08>
lea    0x0(%esi),%esi
mov    %edi,%eax
call   aaf0 <main+0x7de0>
mov    0x4(%edi),%eax
test   %eax,%eax
je     ac18 <main+0x7f08>
mov    %ebp,%eax
call   a4b0 <main+0x77a0>
mov    0x4(%edi),%edi
test   %edi,%edi
jne    abf8 <main+0x7ee8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%esi
lea    -0x6ef6(%ebx),%edi
test   %esi,%esi
je     ab60 <main+0x7e50>
mov    %edi,%eax
call   a4b0 <main+0x77a0>
mov    %esi,%eax
call   aaf0 <main+0x7de0>
mov    0x4(%esi),%esi
test   %esi,%esi
jne    ac29 <main+0x7f19>
jmp    ab60 <main+0x7e50>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x739f(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x4(%esi),%eax
jmp    ab5b <main+0x7e4b>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x741f(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x8(%esi),%edi
lea    -0x741c(%ebx),%esi
jmp    aba7 <main+0x7e97>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x73b1(%ebx),%ebp
jmp    ab28 <main+0x7e18>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x73a5(%ebx),%ebp
jmp    ab28 <main+0x7e18>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%esi
jmp    ab70 <main+0x7e60>
mov    0x8(%esi),%eax
lea    -0x73ca(%ebx),%esi
call   a4b0 <main+0x77a0>
jmp    ab70 <main+0x7e60>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7379(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x8(%esi),%eax
lea    -0x7373(%ebx),%edi
mov    0x8(%eax),%eax
call   a4b0 <main+0x77a0>
lea    -0x737e(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0xc(%esi),%esi
test   %esi,%esi
je     ad19 <main+0x8009>
xchg   %ax,%ax
mov    0x8(%esi),%eax
call   aaf0 <main+0x7de0>
mov    %edi,%eax
call   a4b0 <main+0x77a0>
mov    0xc(%esi),%eax
call   aaf0 <main+0x7de0>
lea    -0x7370(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x4(%esi),%esi
test   %esi,%esi
jne    acf0 <main+0x7fe0>
lea    -0x73b9(%ebx),%esi
jmp    ab70 <main+0x7e60>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x73ab(%ebx),%ebp
jmp    ab28 <main+0x7e18>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x73e9(%ebx),%edi
jmp    abb6 <main+0x7ea6>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x73a9(%ebx),%ebp
jmp    ab28 <main+0x7e18>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x73ae(%ebx),%ebp
jmp    ab28 <main+0x7e18>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x739d(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x4(%esi),%eax
call   aaf0 <main+0x7de0>
lea    -0x7399(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0xc(%esi),%ecx
test   %ecx,%ecx
je     ae70 <main+0x8160>
mov    0x8(%esi),%eax
call   aaf0 <main+0x7de0>
lea    -0x7391(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0xc(%esi),%edi
lea    -0x73d6(%ebx),%esi
jmp    aba7 <main+0x7e97>
lea    0x0(%esi),%esi
lea    -0x73e4(%ebx),%eax
jmp    ab86 <main+0x7e76>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7383(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x10(%esi),%eax
call   a4b0 <main+0x77a0>
lea    -0x737e(%ebx),%eax
call   a4b0 <main+0x77a0>
mov    0x8(%esi),%edi
lea    -0x6ef6(%ebx),%ebp
test   %edi,%edi
je     ae18 <main+0x8108>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   aaf0 <main+0x7de0>
mov    0x4(%edi),%edx
test   %edx,%edx
je     ae18 <main+0x8108>
mov    %ebp,%eax
call   a4b0 <main+0x77a0>
mov    0x4(%edi),%edi
test   %edi,%edi
jne    adf8 <main+0x80e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%edi
jmp    ab96 <main+0x7e86>
lea    -0x736f(%ebx),%edi
jmp    abb6 <main+0x7ea6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%esi
lea    -0x73a3(%ebx),%edi
jmp    ae47 <main+0x8137>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   a4b0 <main+0x77a0>
mov    0x4(%esi),%eax
call   aaf0 <main+0x7de0>
mov    (%esi),%esi
test   %esi,%esi
jne    ae40 <main+0x8130>
jmp    ab60 <main+0x7e50>
lea    0x0(%esi),%esi
add    $0x30,%eax
mov    %edi,%esi
mov    %al,0xe(%esp)
jmp    ab70 <main+0x7e60>
xchg   %ax,%ax
mov    0x8(%esi),%edi
lea    -0x73d6(%ebx),%esi
jmp    aba7 <main+0x7e97>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10fa3,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
lea    0x27a0(%ebx),%eax
cmp    (%eax),%edi
je     afa6 <main+0x8296>
lea    0x27ac(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    afa6 <main+0x8296>
test   %edi,%edi
je     af40 <main+0x8230>
lea    -0x736c(%ebx),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   29e0 <open@plt>
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,%esi
js     afb0 <main+0x82a0>
mov    %esi,(%esp)
mov    %ebp,0x4(%esp)
call   10580 <main+0xd870>
mov    %eax,%esi
jmp    af11 <main+0x8201>
xchg   %ax,%ax
call   28a0 <getpgrp@plt>
cmp    %ebp,%eax
je     afd8 <main+0x82c8>
movl   $0x15,0x4(%esp)
movl   $0x0,(%esp)
call   28b0 <killpg@plt>
mov    %esi,(%esp)
call   2ad0 <tcgetpgrp@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    aef0 <main+0x81e0>
lea    -0x72d8(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
lea    0x29b8(%ebx),%eax
movb   $0x0,0x4(%eax)
jmp    af89 <main+0x8279>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c4(%ebx),%edi
mov    0x1f0(%ebx),%esi
mov    %edi,%edx
mov    %esi,%eax
call   a710 <main+0x7a00>
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   2bb0 <setpgid@plt>
movl   $0x14,(%esp)
call   10d40 <main+0xe030>
movl   $0x16,(%esp)
call   10d40 <main+0xe030>
movl   $0x15,(%esp)
call   10d40 <main+0xe030>
mov    %esi,(%esp)
xor    %edi,%edi
mov    $0xffffffff,%esi
call   2c80 <close@plt>
lea    0x27a0(%ebx),%eax
mov    %esi,0x1f0(%ebx)
mov    %edi,(%eax)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x3(%eax),%esi
jmp    afc1 <main+0x82b1>
lea    0x0(%esi),%esi
sub    $0x1,%esi
js     af1f <main+0x820f>
mov    %esi,(%esp)
call   2c20 <isatty@plt>
test   %eax,%eax
je     afb8 <main+0x82a8>
lea    0x0(%esi),%esi
jmp    aede <main+0x81ce>
lea    0x0(%esi),%esi
movl   $0x14,(%esp)
mov    %eax,0x3c4(%ebx)
call   10d40 <main+0xe030>
movl   $0x16,(%esp)
call   10d40 <main+0xe030>
movl   $0x15,(%esp)
call   10d40 <main+0xe030>
lea    0x27b0(%ebx),%eax
mov    (%eax),%ebp
movl   $0x0,(%esp)
mov    %ebp,0x4(%esp)
call   2bb0 <setpgid@plt>
mov    %ebp,%edx
mov    %esi,%eax
call   a710 <main+0x7a00>
jmp    af98 <main+0x8288>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x10df0,%ebx
mov    0x34(%esp),%ebp
cmpl   $0x1,0x30(%esp)
jle    b234 <main+0x8524>
mov    0x4(%ebp),%eax
lea    0x4(%ebp),%esi
cmpb   $0x2d,(%eax)
je     b1d0 <main+0x84c0>
xor    %ebp,%ebp
mov    $0xf,%edi
test   %eax,%eax
sete   %al
movzbl %al,%eax
cmp    %ebp,%eax
jne    b234 <main+0x8524>
test   %ebp,%ebp
je     b0d8 <main+0x83c8>
lea    0x238(%ebx),%eax
mov    (%eax),%edi
mov    (%esi),%eax
test   %eax,%eax
je     b180 <main+0x8470>
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
lea    -0x80(%eax),%edx
cmp    $0x81,%eax
cmovge %edx,%eax
lea    -0x1(%eax),%edx
cmp    $0x3f,%edx
ja     b280 <main+0x8570>
lea    -0x4ac(%ebx),%edx
mov    (%edx,%eax,4),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x6efa(%ebx),%eax
mov    %eax,0x4(%esp)
call   11850 <main+0xeb40>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
movl   $0x0,0xc(%esp)
lea    0x27a8(%ebx),%ebp
jmp    b0f9 <main+0x83e9>
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    (%esi),%eax
test   %eax,%eax
je     b14e <main+0x843e>
movzbl (%eax),%edx
cmp    $0x25,%dl
je     b170 <main+0x8460>
cmp    $0x2d,%dl
je     b160 <main+0x8450>
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   29d0 <kill@plt>
test   %eax,%eax
je     b0f0 <main+0x83e0>
mov    0x0(%ebp),%eax
add    $0x4,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   29b0 <strerror@plt>
mov    %eax,0x4(%esp)
lea    -0x6a69(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
mov    (%esi),%eax
movl   $0x1,0xc(%esp)
test   %eax,%eax
jne    b0f9 <main+0x83e9>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
neg    %eax
jmp    b10e <main+0x83fe>
nop
xor    %edx,%edx
call   9ec0 <main+0x71b0>
mov    0xc(%eax),%eax
mov    (%eax),%eax
neg    %eax
jmp    b10e <main+0x83fe>
lea    -0x735f(%ebx),%eax
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   11720 <main+0xea10>
lea    -0x4ac(%ebx),%eax
lea    -0x6efa(%ebx),%esi
lea    0x4(%eax),%ebp
add    $0x104,%eax
mov    %eax,0xc(%esp)
lea    0x0(%esi),%esi
mov    0x0(%ebp),%edx
add    $0x4,%ebp
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   11850 <main+0xeb40>
cmp    0xc(%esp),%ebp
jne    b1b0 <main+0x84a0>
xor    %eax,%eax
jmp    b152 <main+0x8442>
add    $0x1,%eax
movl   $0x1,0x4(%esp)
lea    0x8(%ebp),%esi
xor    %ebp,%ebp
mov    %eax,(%esp)
call   111b0 <main+0xe4a0>
test   %eax,%eax
mov    %eax,%edi
js     b1f5 <main+0x84e5>
mov    (%esi),%eax
jmp    b067 <main+0x8357>
xor    %ebp,%ebp
lea    -0x7363(%ebx),%esi
jmp    b20a <main+0x84fa>
nop
cmp    $0x73,%eax
je     b248 <main+0x8538>
mov    $0x1,%ebp
mov    %esi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
jne    b200 <main+0x84f0>
lea    0x29cc(%ebx),%eax
mov    (%eax),%esi
mov    %edi,%eax
shr    $0x1f,%eax
test   %al,%al
je     b1ee <main+0x84de>
test   %ebp,%ebp
je     b294 <main+0x8584>
cmp    $0x1,%ebp
je     b07b <main+0x836b>
lea    -0x72ac(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
lea    0x29d4(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   111b0 <main+0xe4a0>
test   %eax,%eax
mov    %eax,%edi
jns    b20a <main+0x84fa>
lea    0x29d4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    -0x7254(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
lea    -0x7230(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
mov    (%esi),%eax
jmp    b060 <main+0x8350>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10b83,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
xor    %edx,%edx
xor    %eax,%eax
call   a1e0 <main+0x74d0>
test   %eax,%eax
jg     b2b6 <main+0x85a6>
mov    0x3c0(%ebx),%ebp
mov    %edi,%esi
and    $0x8,%esi
test   %ebp,%ebp
je     b2f7 <main+0x85e7>
lea    0x0(%esi),%esi
test   %esi,%esi
je     b2e2 <main+0x85d2>
testb  $0x10,0x17(%ebp)
je     b2f0 <main+0x85e0>
mov    0x30(%esp),%eax
mov    %ebp,%edx
mov    %edi,(%esp)
call   a820 <main+0x7b10>
mov    0x18(%ebp),%ebp
test   %ebp,%ebp
jne    b2d8 <main+0x85c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10b21,%ebx
sub    $0x1c,%esp
lea    -0x735c(%ebx),%edi
jmp    b32d <main+0x861d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6c,%eax
sete   %al
movzbl %al,%eax
lea    0x1(%eax,%eax,2),%esi
mov    %edi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
jne    b320 <main+0x8610>
lea    0x238(%ebx),%eax
mov    (%eax),%ebp
lea    0x29cc(%ebx),%eax
mov    (%eax),%edi
mov    (%edi),%eax
test   %eax,%eax
je     b376 <main+0x8666>
nop
xor    %edx,%edx
add    $0x4,%edi
call   9ec0 <main+0x71b0>
mov    %esi,(%esp)
mov    %eax,%edx
mov    %ebp,%eax
call   a820 <main+0x7b10>
mov    (%edi),%eax
test   %eax,%eax
jne    b350 <main+0x8640>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   b2a0 <main+0x8590>
jmp    b36c <main+0x865c>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x7f,%ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10a8e,%ebx
sub    $0x1c,%esp
lea    0x29b0(%ebx),%eax
mov    %eax,(%esp)
call   e020 <main+0xb310>
lea    0x29cc(%ebx),%eax
mov    (%eax),%edi
mov    (%edi),%eax
test   %eax,%eax
je     b438 <main+0x8728>
cmpb   $0x25,(%eax)
je     b488 <main+0x8778>
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
mov    0x3c0(%ebx),%esi
test   %esi,%esi
jne    b3e7 <main+0x86d7>
jmp    b423 <main+0x8713>
mov    0x18(%esi),%esi
test   %esi,%esi
je     b423 <main+0x8713>
movzwl 0x14(%esi),%edx
mov    0xc(%esi),%ecx
lea    (%edx,%edx,2),%edx
lea    (%ecx,%edx,4),%edx
cmp    %eax,-0xc(%edx)
jne    b3e0 <main+0x86d0>
cmpb   $0x0,0x16(%esi)
jne    b416 <main+0x8706>
nop
xor    %edx,%edx
mov    $0x2,%eax
call   a1e0 <main+0x74d0>
test   %eax,%eax
jle    b470 <main+0x8760>
cmpb   $0x0,0x16(%esi)
je     b400 <main+0x86f0>
orb    $0x4,0x17(%esi)
mov    %esi,%eax
call   9e80 <main+0x7170>
mov    %eax,%ebp
add    $0x4,%edi
mov    (%edi),%eax
test   %eax,%eax
jne    b3c3 <main+0x86b3>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x3c0(%ebx),%eax
test   %eax,%eax
jne    b453 <main+0x8743>
jmp    b496 <main+0x8786>
lea    0x0(%esi,%eiz,1),%esi
orb    $0x4,0x17(%eax)
mov    0x18(%eax),%eax
test   %eax,%eax
je     b496 <main+0x8786>
cmpb   $0x0,0x16(%eax)
jne    b448 <main+0x8738>
xor    %edx,%edx
mov    $0x2,%eax
call   a1e0 <main+0x74d0>
test   %eax,%eax
jg     b438 <main+0x8728>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2a94(%ebx),%eax
mov    (%eax),%ebp
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
sub    $0xffffff80,%ebp
mov    %ebp,%eax
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edx,%edx
call   9ec0 <main+0x71b0>
mov    %eax,%esi
jmp    b410 <main+0x8700>
add    $0x1c,%esp
xor    %ebp,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10973,%ebx
sub    $0x2c,%esp
mov    0x3c8(%ebx),%ecx
mov    0x3cc(%ebx),%edi
mov    %ecx,%edx
sub    $0x1,%edx
js     b5b9 <main+0x88a9>
testb  $0x8,0x17(%edi)
je     b6a1 <main+0x8991>
lea    0x27a0(%ebx),%eax
mov    %edi,%esi
mov    %eax,0x14(%esp)
mov    (%eax),%ebp
jmp    b50d <main+0x87fd>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edx
add    $0x1c,%esi
cmp    $0xffffffff,%edx
je     b5c8 <main+0x88b8>
testb  $0x8,0x17(%esi)
je     b526 <main+0x8816>
movzwl 0x16(%esi),%eax
and    $0x4ff,%ax
cmp    $0x402,%ax
jne    b4f8 <main+0x87e8>
test   %ebp,%ebp
jne    b4f8 <main+0x87e8>
mov    %esi,%eax
call   a760 <main+0x7a50>
test   $0x1,%esi
mov    %esi,%edx
mov    $0x1c,%ecx
jne    b67f <main+0x896f>
test   $0x2,%dl
jne    b690 <main+0x8980>
mov    %ecx,%edi
xor    %eax,%eax
and    $0xfffffffc,%edi
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    %edi,%eax
jb     b549 <main+0x8839>
add    %eax,%edx
test   $0x2,%cl
je     b567 <main+0x8857>
xor    %edi,%edi
add    $0x2,%edx
mov    %di,-0x2(%edx)
and    $0x1,%ecx
je     b56f <main+0x885f>
movb   $0x0,(%edx)
mov    0x14(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     b57d <main+0x886d>
orb    $0x2,0x17(%esi)
mov    0x3c0(%ebx),%eax
mov    %esi,0x3c0(%ebx)
orb    $0x8,0x17(%esi)
cmpl   $0x1,0x44(%esp)
mov    %eax,0x18(%esi)
mov    %esi,0xc(%esi)
jle    b5af <main+0x889f>
mov    0x44(%esp),%eax
lea    (%eax,%eax,2),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,0xc(%esi)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x27a0(%ebx),%eax
mov    %eax,0x14(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x1c,%ecx,%esi
mov    %edi,(%esp)
lea    0x70(%esi),%eax
mov    %eax,0x4(%esp)
call   c0f0 <main+0x93e0>
mov    %eax,%ebp
sub    %edi,%ebp
mov    %eax,0x18(%esp)
je     b640 <main+0x8930>
lea    (%edi,%esi,1),%eax
mov    %esi,%edx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
add    %esi,%eax
test   %esi,%esi
mov    %eax,0x1c(%esp)
je     b6b2 <main+0x89a2>
nop
sub    $0x1c,%edx
mov    -0x10(%eax),%ecx
mov    %edx,%edi
sub    %esi,%edi
add    0x10(%esp),%edi
cmp    %edi,%ecx
jne    b617 <main+0x8907>
add    %ebp,%ecx
mov    %ecx,-0x10(%eax)
mov    -0x4(%eax),%ecx
test   %ecx,%ecx
je     b623 <main+0x8913>
add    %ebp,%ecx
mov    %ecx,-0x4(%eax)
sub    $0x1c,%eax
test   %edx,%edx
jne    b600 <main+0x88f0>
mov    0x3c0(%ebx),%eax
test   %eax,%eax
je     b646 <main+0x8936>
add    %ebp,%eax
mov    %eax,0x3c0(%ebx)
jmp    b646 <main+0x8936>
xchg   %ax,%ax
add    %esi,%eax
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%esi
addl   $0x4,0x3c8(%ebx)
mov    %eax,0x3cc(%ebx)
lea    -0x1c(%esi),%edx
lea    0x54(%esi),%eax
andb   $0xf7,0x17(%eax)
sub    $0x1c,%eax
cmp    %edx,%eax
jne    b661 <main+0x8951>
test   $0x1,%esi
mov    %esi,%edx
mov    $0x1c,%ecx
je     b539 <main+0x8829>
lea    0x1(%esi),%edx
mov    $0x1b,%cl
test   $0x2,%dl
movb   $0x0,(%esi)
je     b542 <main+0x8832>
xor    %ebp,%ebp
add    $0x2,%edx
mov    %bp,-0x2(%edx)
sub    $0x2,%ecx
jmp    b542 <main+0x8832>
lea    0x27a0(%ebx),%eax
mov    %edi,%esi
mov    %eax,0x14(%esp)
jmp    b526 <main+0x8816>
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    b62a <main+0x891a>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10763,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   2b80 <fork@plt>
test   %eax,%eax
mov    %eax,%edi
js     b959 <main+0x8c49>
je     b7b8 <main+0x8aa8>
test   %esi,%esi
lea    0x0(%esi),%esi
je     b7a1 <main+0x8a91>
cmpl   $0x2,0x38(%esp)
je     b726 <main+0x8a16>
testb  $0x2,0x17(%esi)
je     b71b <main+0x8a0b>
cmpw   $0x0,0x14(%esi)
je     b70f <main+0x89ff>
mov    0xc(%esi),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   2bb0 <setpgid@plt>
cmpl   $0x1,0x38(%esp)
je     b8b8 <main+0x8ba8>
movzwl 0x14(%esi),%eax
mov    0xc(%esi),%edx
lea    0x1(%eax),%ecx
lea    (%eax,%eax,2),%eax
mov    %cx,0x14(%esi)
lea    (%edx,%eax,4),%esi
lea    0x29b0(%ebx),%eax
mov    %edi,(%esi)
movl   $0xffffffff,0x4(%esi)
mov    %eax,0x8(%esi)
lea    0x27a0(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
je     b786 <main+0x8a76>
mov    0x34(%esp),%eax
test   %eax,%eax
je     b786 <main+0x8a76>
lea    0x1fc(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    %eax,0x3b8(%ebx)
mov    0x34(%esp),%eax
call   aaf0 <main+0x7de0>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c130 <main+0x9420>
mov    %eax,0x8(%esi)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edx,%edx
xor    %eax,%eax
call   a1e0 <main+0x74d0>
test   %eax,%eax
jle    b930 <main+0x8c20>
mov    0x3bc(%ebx),%ecx
test   %ecx,%ecx
jne    b790 <main+0x8a80>
xor    %eax,%eax
add    $0x1,%eax
mov    %eax,0x3bc(%ebx)
jmp    b786 <main+0x8a76>
lea    0x27ac(%ebx),%eax
mov    (%eax),%ebp
lea    0x1(%ebp),%ecx
mov    %ecx,(%eax)
call   9d90 <main+0x7080>
call   10ef0 <main+0xe1e0>
lea    0x27a0(%ebx),%eax
cmpl   $0x2,0x38(%esp)
movl   $0x0,(%eax)
je     b8af <main+0x8b9f>
testb  $0x2,0x17(%esi)
je     b8a8 <main+0x8b98>
test   %ebp,%ebp
jne    b8a8 <main+0x8b98>
cmpw   $0x0,0x14(%esi)
je     b94d <main+0x8c3d>
mov    0xc(%esi),%eax
mov    (%eax),%esi
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   2bb0 <setpgid@plt>
mov    0x38(%esp),%ebp
test   %ebp,%ebp
je     b93b <main+0x8c2b>
movl   $0x14,(%esp)
call   10d40 <main+0xe030>
movl   $0x16,(%esp)
call   10d40 <main+0xe030>
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x3(%eax)
je     b870 <main+0x8b60>
movl   $0x2,(%esp)
call   10d40 <main+0xe030>
movl   $0x3,(%esp)
call   10d40 <main+0xe030>
movl   $0xf,(%esp)
call   10d40 <main+0xe030>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c0(%ebx),%esi
test   %esi,%esi
je     b88e <main+0x8b7e>
lea    0x0(%esi),%esi
mov    %esi,%eax
call   a760 <main+0x7a50>
mov    0x18(%esi),%esi
test   %esi,%esi
jne    b880 <main+0x8b70>
movl   $0x0,0x3bc(%ebx)
00
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpl   $0x1,0x38(%esp)
je     b8d8 <main+0x8bc8>
test   %ebp,%ebp
jne    b870 <main+0x8b60>
jmp    b83c <main+0x8b2c>
lea    0x0(%esi),%esi
lea    0x27a4(%ebx),%eax
mov    $0x1,%edx
mov    %edi,(%eax)
mov    %esi,%eax
call   9de0 <main+0x70d0>
jmp    b726 <main+0x8a16>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2,(%esp)
call   10fc0 <main+0xe2b0>
movl   $0x3,(%esp)
call   10fc0 <main+0xe2b0>
cmpw   $0x0,0x14(%esi)
jne    b8af <main+0x8b9f>
movl   $0x0,(%esp)
lea    -0x734d(%ebx),%esi
call   2c80 <close@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   29e0 <open@plt>
test   %eax,%eax
je     b8af <main+0x8b9f>
lea    -0x7492(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
nop
mov    0x3bc(%ebx),%eax
jmp    b7ad <main+0x8a9d>
mov    0x1f0(%ebx),%eax
mov    %esi,%edx
call   a710 <main+0x7a00>
jmp    b824 <main+0x8b14>
call   2960 <getpid@plt>
mov    %eax,%esi
jmp    b808 <main+0x8af8>
test   %esi,%esi
je     b965 <main+0x8c55>
mov    %esi,%eax
nop
call   a760 <main+0x7a50>
lea    -0x7359(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   2f30 <main+0x220>
add    $0x1049d,%ebx
cmpb   $0x0,0x16(%esi)
jne    b9b2 <main+0x8ca2>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    $0x1,%eax
call   a1e0 <main+0x74d0>
cmpb   $0x0,0x16(%esi)
je     b9a0 <main+0x8c90>
mov    %esi,%eax
call   9e80 <main+0x7170>
testb  $0x2,0x17(%esi)
mov    %eax,%edi
jne    b9d0 <main+0x8cc0>
cmpb   $0x2,0x16(%esi)
je     b9f8 <main+0x8ce8>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x27b0(%ebx),%eax
mov    (%eax),%edx
mov    0x1f0(%ebx),%eax
call   a710 <main+0x7a00>
testb  $0x1,0x17(%esi)
je     b9c1 <main+0x8cb1>
movl   $0x2,(%esp)
call   26d0 <raise@plt>
jmp    b9c1 <main+0x8cb1>
nop
mov    %esi,%eax
call   a760 <main+0x7a50>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
call   2f30 <main+0x220>
add    $0x1040c,%ebx
mov    (%eax),%eax
cmpb   $0x66,(%eax)
setne  %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
lea    0x29b0(%ebx),%eax
mov    %eax,(%esp)
call   e020 <main+0xb310>
lea    0x29cc(%ebx),%eax
lea    0x6fc(%ebx),%edi
mov    (%eax),%ebp
lea    0x238(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x0(%ebp),%eax
mov    $0x1,%edx
call   9ec0 <main+0x71b0>
cmpl   $0x1,0x14(%esp)
mov    %eax,%esi
je     bb68 <main+0x8e58>
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   11720 <main+0xea10>
mov    0x18(%esp),%edx
mov    %esi,%eax
call   a030 <main+0x7320>
addl   $0x1,(%edi)
cmpb   $0x2,0x16(%esi)
je     baed <main+0x8ddd>
mov    0x14(%esp),%edx
mov    0xc(%esi),%eax
movb   $0x0,0x16(%esi)
test   %edx,%edx
mov    (%eax),%ecx
je     bb48 <main+0x8e38>
movl   $0x12,0x4(%esp)
mov    %ecx,(%esp)
call   28b0 <killpg@plt>
mov    0xc(%esi),%eax
movzwl 0x14(%esi),%edx
jmp    bad8 <main+0x8dc8>
nop
add    $0xc,%eax
sub    $0x1,%edx
je     baed <main+0x8ddd>
cmpb   $0x7f,0x4(%eax)
jne    bad0 <main+0x8dc0>
movl   $0xffffffff,0x4(%eax)
add    $0xc,%eax
sub    $0x1,%edx
jne    bad8 <main+0x8dc8>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
je     bb38 <main+0x8e28>
xor    %esi,%esi
mov    (%edi),%eax
lea    -0x1(%eax),%edx
test   %edx,%edx
mov    %edx,(%edi)
jne    bb13 <main+0x8e03>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     bb13 <main+0x8e03>
call   4790 <main+0x1a80>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     bb28 <main+0x8e18>
add    $0x4,%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    ba60 <main+0x8d50>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   b980 <main+0x8c70>
mov    %eax,%esi
jmp    baf7 <main+0x8de7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1f0(%ebx),%eax
mov    %ecx,%edx
mov    %ecx,0x1c(%esp)
call   a710 <main+0x7a00>
mov    0x1c(%esp),%ecx
jmp    bab6 <main+0x8da6>
lea    0x0(%esi),%esi
mov    $0x1,%edx
call   9de0 <main+0x70d0>
mov    %esi,%eax
sub    0x3cc(%ebx),%eax
sar    $0x2,%eax
imul   $0xb6db6db7,%eax,%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
lea    -0x7343(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
jmp    ba77 <main+0x8d67>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
call   2f30 <main+0x220>
add    $0x10273,%ebx
sub    $0x14,%esp
lea    0x279c(%ebx),%esi
mov    (%esi),%edx
test   %edx,%edx
jne    bbde <main+0x8ece>
mov    0x3c0(%ebx),%edx
test   %edx,%edx
je     bbde <main+0x8ece>
cmpb   $0x1,0x16(%edx)
je     bbe8 <main+0x8ed8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x234(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    -0x733d(%ebx),%eax
mov    %eax,(%esp)
call   11720 <main+0xea10>
mov    $0x1,%eax
movl   $0x2,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x10203,%ebx
sub    $0x8c,%esp
lea    0x14(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   c2c0 <main+0x95b0>
lea    0x254(%ebx),%eax
testb  $0x20,0x24(%eax)
jne    bd40 <main+0x9030>
mov    0x28(%eax),%eax
add    $0x9,%eax
lea    0x29b0(%ebx),%ebp
lea    0x3f4(%ebx),%esi
mov    %eax,0x10(%esp)
lea    0x10(%esp),%edi
nop
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   6320 <main+0x3610>
test   %eax,%eax
je     bd14 <main+0x9004>
cmpb   $0x0,(%eax)
je     bd03 <main+0x8ff3>
mov    %eax,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmpb   $0x0,(%edx)
jne    bc90 <main+0x8f80>
movb   $0x0,-0x1(%edx)
lea    0x20(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   2c40 <__xstat64@plt>
test   %eax,%eax
js     bd38 <main+0x9028>
mov    0x3d4(%ebx),%edx
mov    0x68(%esp),%eax
test   %edx,%edx
jne    bd01 <main+0x8ff1>
cmp    (%esi),%eax
je     bd01 <main+0x8ff1>
lea    0x728(%ebx),%eax
mov    (%eax),%edx
lea    -0x712c(%ebx),%eax
test   %edx,%edx
cmovne %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x6efa(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x204(%ebx),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
mov    0x68(%esp),%eax
mov    %eax,(%esi)
add    $0x4,%esi
lea    0x41c(%ebx),%eax
cmp    %eax,%esi
jb     bc70 <main+0x8f60>
mov    0xc(%esp),%eax
movl   $0x0,0x3d4(%ebx)
00
mov    %eax,(%esp)
call   c320 <main+0x9610>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,(%esi)
jmp    bd03 <main+0x8ff3>
mov    0x18(%eax),%eax
add    $0x5,%eax
jmp    bc5b <main+0x8f4b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   6097 <main+0x3387>
add    $0x100d7,%ecx
addl   $0x1,0x3d4(%ecx)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x100b3,%ebx
sub    $0x3c,%esp
mov    %eax,0x14(%esp)
lea    0x24(%esp),%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
lea    0x27a0(%ebx),%ebp
lea    0x29b8(%ebx),%edi
jmp    bdee <main+0x90de>
xor    %eax,%eax
cmpb   $0x0,0x3(%edi)
je     bdbc <main+0x90ac>
mov    0x14(%esp),%edx
test   %edx,%edx
jne    be98 <main+0x9188>
mov    %eax,(%esp)
call   103e0 <main+0xd6d0>
cmp    0x198(%ebx),%eax
je     be50 <main+0x9140>
cmpb   $0x0,0x5(%edi)
je     be18 <main+0x9108>
mov    %esi,(%esp)
call   c320 <main+0x9610>
lea    0x71c(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    bea8 <main+0x9198>
mov    %esi,(%esp)
call   c2c0 <main+0x95b0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     bda8 <main+0x9098>
lea    0x234(%ebx),%eax
movl   $0x8,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   b2a0 <main+0x8590>
jmp    bda8 <main+0x9098>
nop
lea    0x279c(%ebx),%edx
xor    %ecx,%ecx
cmpl   $0x2,(%edx)
sete   %cl
mov    %ecx,(%edx)
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   49c0 <main+0x1cb0>
lea    0x718(%ebx),%eax
movl   $0x0,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
jmp    bdd6 <main+0x90c6>
xchg   %ax,%ax
cmpl   $0x31,0x18(%esp)
jg     beae <main+0x919e>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
je     beae <main+0x919e>
call   bbb0 <main+0x8ea0>
test   %eax,%eax
jne    be88 <main+0x9178>
cmpb   $0x0,0x2(%edi)
je     beba <main+0x91aa>
lea    0x234(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    -0x711e(%ebx),%eax
mov    %eax,(%esp)
call   11720 <main+0xea10>
addl   $0x1,0x18(%esp)
jmp    bdd6 <main+0x90c6>
lea    0x0(%esi),%esi
call   bc20 <main+0x8f10>
mov    $0x1,%eax
jmp    bdbc <main+0x90ac>
nop
movl   $0x0,(%eax)
mov    0x1c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x3(%edi)
je     beae <main+0x919e>
lea    0x234(%ebx),%eax
mov    (%eax),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   11760 <main+0xea50>
jmp    beae <main+0x919e>
lea    0x0(%esi),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0xff46,%ebx
sub    $0x18,%esp
mov    %eax,(%esp)
call   10250 <main+0xd540>
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   9ae0 <main+0x6dd0>
test   %eax,%eax
js     bf17 <main+0x9207>
xor    %eax,%eax
call   bd70 <main+0x9060>
call   9c90 <main+0x6f80>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0xff03,%ebx
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   9ae0 <main+0x6dd0>
xor    %eax,%eax
call   bd70 <main+0x9060>
call   9c90 <main+0x6f80>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
call   2f30 <main+0x220>
add    $0xfec0,%ebx
cmpl   $0x1,0x90(%esp)
jle    bfe0 <main+0x92d0>
mov    0x94(%esp),%eax
mov    0x4(%eax),%esi
lea    0x254(%ebx),%eax
mov    0x38(%eax),%eax
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
add    $0x5,%eax
mov    %eax,0x14(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     bff0 <main+0x92e0>
mov    %esi,(%esp)
movl   $0x1,0x4(%esp)
call   9ae0 <main+0x6dd0>
lea    0x720(%ebx),%eax
mov    %esi,(%eax)
xor    %eax,%eax
call   bd70 <main+0x9060>
mov    %eax,%esi
call   9c90 <main+0x6f80>
add    $0x7c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x7c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x18(%esp),%eax
lea    0x14(%esp),%edi
mov    %eax,0xc(%esp)
jmp    c008 <main+0x92f8>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   c250 <main+0x9540>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   6320 <main+0x3610>
test   %eax,%eax
mov    %eax,%ebp
je     c04d <main+0x933d>
mov    0xc(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    c000 <main+0x92f0>
mov    0x28(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    c000 <main+0x92f0>
mov    %ebp,%esi
jmp    bfaa <main+0x929a>
lea    -0x70e1(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
nop
push   %ebx
call   2f30 <main+0x220>
add    $0xfdc6,%ebx
sub    $0x18,%esp
call   bbb0 <main+0x8ea0>
test   %eax,%eax
je     c07f <main+0x936f>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
cmpl   $0x1,0x20(%esp)
jle    c09d <main+0x938d>
mov    0x24(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
lea    0x718(%ebx),%edx
mov    %eax,(%edx)
movl   $0x4,(%esp)
call   4750 <main+0x1a40>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0xfd73,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2990 <malloc@plt>
test   %eax,%eax
je     c0d4 <main+0x93c4>
add    $0x18,%esp
pop    %ebx
ret
lea    -0x70d3(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   2f30 <main+0x220>
add    $0xfd2f,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2980 <realloc@plt>
test   %eax,%eax
je     c11c <main+0x940c>
add    $0x18,%esp
pop    %ebx
ret
lea    -0x70d3(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0xfcf3,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2ab0 <__strdup@plt>
test   %eax,%eax
je     c154 <main+0x9444>
add    $0x18,%esp
pop    %ebx
ret
lea    -0x70d3(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xfcb4,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
lea    0x7(%eax),%esi
mov    0x1f4(%ebx),%eax
and    $0xfffffff8,%esi
cmp    %eax,%esi
jbe    c238 <main+0x9528>
cmp    $0x1f7,%esi
jbe    c228 <main+0x9518>
lea    0x4(%esi),%edx
cmp    %edx,%esi
ja     c23c <main+0x952c>
mov    %esi,%edi
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
mov    %edx,(%esp)
call   c0b0 <main+0x93a0>
mov    0x200(%ebx),%edx
mov    %edx,(%eax)
lea    0x4(%eax),%edx
mov    %edi,0x1f4(%ebx)
add    %edx,%edi
mov    %edx,0x1fc(%ebx)
mov    %edi,0x1f8(%ebx)
mov    %eax,0x200(%ebx)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    c204 <main+0x94f4>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     c204 <main+0x94f4>
call   4790 <main+0x1a80>
mov    0x1f4(%ebx),%edx
mov    0x1fc(%ebx),%eax
sub    %esi,%edx
mov    %edx,0x1f4(%ebx)
lea    (%eax,%esi,1),%ecx
mov    %ecx,0x1fc(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    $0x1fc,%edx
mov    $0x1f8,%edi
jmp    c1b2 <main+0x94a2>
nop
mov    %eax,%edx
jmp    c20a <main+0x94fa>
lea    -0x70d3(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
call   6097 <main+0x3387>
add    $0xfbd7,%ecx
mov    0x4(%esp),%edx
mov    0x1fc(%ecx),%eax
mov    %edx,0x1fc(%ecx)
sub    %edx,%eax
add    %eax,0x1f4(%ecx)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
call   6097 <main+0x3387>
add    $0xfba7,%ecx
mov    0x4(%esp),%eax
mov    0x200(%ecx),%edx
mov    %edx,(%eax)
mov    0x1fc(%ecx),%edx
mov    %edx,0x4(%eax)
mov    0x1f4(%ecx),%edx
mov    %edx,0x8(%eax)
mov    0x8(%esp),%eax
mov    %eax,0x4(%esp)
jmp    c170 <main+0x9460>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    0x14(%esp),%eax
call   2f30 <main+0x220>
add    $0xfb5d,%ebx
mov    0x200(%ebx),%edx
mov    0x1fc(%ebx),%ebp
lea    0x4(%edx),%edi
cmp    %edi,%ebp
je     c308 <main+0x95f8>
mov    %edx,(%eax)
mov    0x1f4(%ebx),%edx
mov    %ebp,0x4(%eax)
mov    %edx,0x8(%eax)
mov    %esi,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    c170 <main+0x9460>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
cmp    0x19c(%ebx),%edx
setne  %cl
mov    %ecx,%esi
jmp    c2e8 <main+0x95d8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xfb04,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
lea    0x6fc(%ebx),%edi
addl   $0x1,(%edi)
mov    0x200(%ebx),%eax
cmp    %eax,(%esi)
je     c362 <main+0x9652>
mov    (%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x200(%ebx)
call   27a0 <free@plt>
mov    0x200(%ebx),%eax
cmp    %eax,(%esi)
jne    c348 <main+0x9638>
mov    0x4(%esi),%edx
mov    0x8(%esi),%eax
mov    %edx,0x1fc(%ebx)
mov    %eax,0x1f4(%ebx)
add    %edx,%eax
mov    %eax,0x1f8(%ebx)
subl   $0x1,(%edi)
jne    c38d <main+0x967d>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    c398 <main+0x9688>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   4790 <main+0x1a80>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xfa73,%ebx
sub    $0x1c,%esp
mov    0x1f4(%ebx),%edi
lea    (%edi,%edi,1),%esi
cmp    %esi,%edi
ja     c487 <main+0x9777>
lea    0x80(%esi),%eax
cmp    $0x7f,%esi
mov    0x1fc(%ebx),%ebp
cmovbe %eax,%esi
mov    0x200(%ebx),%eax
lea    0x4(%eax),%edx
cmp    %edx,%ebp
je     c420 <main+0x9710>
mov    %esi,(%esp)
call   c170 <main+0x9460>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   27b0 <memcpy@plt>
add    %esi,0x1f4(%ebx)
mov    %eax,0x1fc(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    0x19c(%ebx),%eax
je     c3f2 <main+0x96e2>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
mov    0x200(%ebx),%eax
lea    0x4(%esi),%edx
mov    (%eax),%edi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   c0f0 <main+0x93e0>
mov    %edi,(%eax)
lea    0x4(%eax),%edx
mov    %eax,0x200(%ebx)
lea    0x4(%eax,%esi,1),%eax
mov    %edx,0x1fc(%ebx)
mov    %esi,0x1f4(%ebx)
mov    %eax,0x1f8(%ebx)
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    c416 <main+0x9706>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     c416 <main+0x9706>
call   4790 <main+0x1a80>
jmp    c416 <main+0x9706>
lea    -0x70d3(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xf985,%ebx
sub    $0x4,%esp
mov    0x1f4(%ebx),%esi
call   c3b0 <main+0x96a0>
mov    0x1fc(%ebx),%eax
add    $0x4,%esp
pop    %ebx
add    %esi,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%esi
call   2f30 <main+0x220>
add    $0xf950,%ebx
mov    0x10(%esp),%edi
mov    0x1fc(%ebx),%edx
mov    0x1f4(%ebx),%eax
sub    %edx,%esi
sub    %esi,%eax
cmp    %eax,%edi
jbe    c51d <main+0x980d>
lea    0x0(%esi),%esi
call   c3b0 <main+0x96a0>
mov    0x1f4(%ebx),%edx
sub    %esi,%edx
cmp    %edi,%edx
jb     c500 <main+0x97f0>
mov    0x1fc(%ebx),%eax
add    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %edx,%eax
jmp    c517 <main+0x9807>
jmp    c530 <main+0x9820>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xf8f4,%ebx
sub    $0x10,%esp
mov    0x28(%esp),%esi
mov    0x24(%esp),%edi
mov    0x1fc(%ebx),%edx
mov    0x1f4(%ebx),%eax
sub    %edx,%esi
sub    %esi,%eax
cmp    %eax,%edi
jbe    c577 <main+0x9867>
lea    0x0(%esi),%esi
call   c3b0 <main+0x96a0>
mov    0x1f4(%ebx),%eax
sub    %esi,%eax
cmp    %eax,%edi
ja     c560 <main+0x9850>
mov    0x1fc(%ebx),%edx
mov    0x20(%esp),%eax
add    %edx,%esi
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   2b40 <mempcpy@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   2f30 <main+0x220>
add    $0xf882,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   2a10 <strlen@plt>
mov    0x24(%esp),%edx
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   c530 <main+0x9820>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x4(%edx),%ecx
call   2f30 <main+0x220>
add    $0xf83f,%ebx
test   $0x1,%al
je     c5f9 <main+0x98e9>
mov    (%edx),%ecx
cmp    $0xffffffff,%ecx
je     c628 <main+0x9918>
mov    0x20(%esp),%esi
mov    %ecx,%eax
xor    %edx,%edx
divl   (%esi)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x70bb(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    -0x70c6(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xf7df,%ebx
sub    $0x3c,%esp
lea    -0x70b5(%ebx),%esi
mov    %esi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
je     c682 <main+0x9972>
cmp    $0x70,%eax
je     c830 <main+0x9b20>
mov    %esi,(%esp)
mov    $0x1,%ebp
call   e020 <main+0xb310>
test   %eax,%eax
jne    c668 <main+0x9958>
test   %edi,%edi
je     c69a <main+0x998a>
movl   $0x0,(%esp)
call   2c20 <isatty@plt>
test   %eax,%eax
jne    c8e0 <main+0x9bd0>
lea    0x29cc(%ebx),%eax
mov    (%eax),%esi
mov    (%esi),%edi
test   %edi,%edi
je     c997 <main+0x9c87>
lea    0x1fc(%ebx),%eax
lea    0x27(%esp),%edx
mov    %edx,0x14(%esp)
mov    %ebp,0x1c(%esp)
mov    (%eax),%edi
mov    %edi,%eax
mov    %edi,%ecx
sub    %eax,%ecx
mov    %ecx,0x18(%esp)
lea    -0x1(%ecx),%ebp
mov    0x14(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   2720 <read@plt>
test   %eax,%eax
je     c70f <main+0x99ff>
cmp    $0x1,%eax
je     c840 <main+0x9b30>
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
cmpl   $0x4,(%eax)
jne    c70f <main+0x99ff>
lea    0x2a94(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     c6cd <main+0x99bd>
movl   $0x1,0x14(%esp)
lea    0x1fc(%ebx),%edx
mov    %edi,%eax
movl   $0x0,0x8(%esp)
sub    (%edx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   7dd0 <main+0x50c0>
lea    0x1f8(%ebx),%eax
cmp    (%eax),%edi
je     c948 <main+0x9c38>
movb   $0x0,(%edi)
lea    0x1fc(%ebx),%eax
add    $0x1,%edi
mov    (%eax),%ebp
sub    %ebp,%edi
mov    %edi,(%esp)
call   c170 <main+0x9460>
mov    %ebp,(%esp)
mov    %eax,%edi
call   d2f0 <main+0xa5e0>
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %eax,0x2c(%esp)
call   7e60 <main+0x5150>
mov    0x2c(%esp),%eax
movl   $0x0,(%eax)
call   80c0 <main+0x53b0>
mov    0x28(%esp),%ebp
test   %ebp,%ebp
jne    c7e1 <main+0x9ad1>
jmp    c8f9 <main+0x9be9>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    0x4(%ebp),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   8130 <main+0x5420>
movl   $0x0,0x8(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4(%esi),%eax
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    (%esi),%eax
mov    0x0(%ebp),%ebp
test   %eax,%eax
je     c820 <main+0x9b10>
test   %ebp,%ebp
je     c900 <main+0x9bf0>
mov    0x4(%esi),%edx
test   %edx,%edx
jne    c7a0 <main+0x9a90>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     c7a0 <main+0x9a90>
mov    0x18(%esp),%eax
sub    %edi,%eax
mov    0x4(%ebp),%edi
movl   $0x0,0x4(%esp)
add    %eax,%edi
mov    %edi,(%esp)
call   8130 <main+0x5420>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    0x14(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x29d4(%ebx),%eax
mov    (%eax),%edi
jmp    c65c <main+0x994c>
lea    0x0(%esi),%esi
movsbl 0x27(%esp),%eax
test   %al,%al
je     c6cd <main+0x99bd>
cmp    0x18(%esp),%ebp
jge    c938 <main+0x9c28>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
jne    c867 <main+0x9b57>
cmp    $0x5c,%al
je     c97b <main+0x9c6b>
cmp    $0xa,%al
je     c98a <main+0x9c7a>
lea    0x1f8(%ebx),%edx
mov    (%edx),%edx
sub    %edi,%edx
cmp    $0x1,%edx
jbe    c95f <main+0x9c4f>
mov    %eax,0x4(%esp)
lea    -0x6f04(%ebx),%eax
mov    %eax,(%esp)
call   29f0 <strchr@plt>
mov    %edi,%edx
test   %eax,%eax
je     c8a0 <main+0x9b90>
add    $0x1,%edx
movb   $0x81,(%edi)
movzbl 0x27(%esp),%eax
lea    0x1(%edx),%edi
cmp    0x18(%esp),%ebp
mov    %al,(%edx)
jl     c6cd <main+0x99bd>
mov    0x18(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   7dd0 <main+0x50c0>
lea    0x1fc(%ebx),%eax
mov    (%eax),%eax
jmp    c6c2 <main+0x99b2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x234(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   11720 <main+0xea10>
jmp    c69a <main+0x998a>
mov    (%esi),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x29b0(%ebx),%edi
xchg   %ax,%ax
add    $0x4,%esi
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    (%esi),%eax
test   %eax,%eax
jne    c908 <main+0x9bf8>
mov    0x14(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%al
jne    c86f <main+0x9b5f>
jmp    c8b4 <main+0x9ba4>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   c4a0 <main+0x9790>
mov    %eax,%edi
movb   $0x0,(%eax)
jmp    c74a <main+0x9a3a>
mov    %edi,0x4(%esp)
movl   $0x2,(%esp)
call   c4d0 <main+0x97c0>
mov    %eax,%edi
movsbl 0x27(%esp),%eax
jmp    c882 <main+0x9b72>
lea    0x1fc(%ebx),%eax
mov    %edi,%ebp
sub    (%eax),%ebp
jmp    c6cd <main+0x99bd>
movl   $0x0,0x14(%esp)
jmp    c717 <main+0x9a07>
lea    -0x70b1(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xf471,%ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
lea    -0x6744(%ebx),%esi
jmp    c9dd <main+0x9ccd>
mov    $0x1,%edi
mov    %esi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
jne    c9d8 <main+0x9cc8>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
movl   $0x0,(%esp)
call   2c50 <umask@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   2c50 <umask@plt>
lea    0x6fc(%ebx),%edx
subl   $0x1,(%edx)
jne    ca23 <main+0x9d13>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    cd33 <main+0xa023>
lea    0x29cc(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     cd3d <main+0xa02d>
call   2cc0 <__ctype_b_loc@plt>
mov    0x3c(%esp),%edi
movsbl (%edi),%edx
mov    (%eax),%eax
movzbl %dl,%ecx
testb  $0x8,0x1(%eax,%ecx,2)
jne    cb9f <main+0x9e8f>
not    %esi
mov    %esi,%eax
mov    %esi,%edi
sar    $0x6,%eax
lea    -0x709d(%ebx),%ecx
mov    %esi,0x2c(%esp)
sar    $0x3,%edi
mov    %eax,0x30(%esp)
mov    %esi,%eax
mov    %esi,0x24(%esp)
mov    0x3c(%esp),%esi
and    $0x49,%eax
mov    %ecx,0x18(%esp)
lea    -0x7098(%ebx),%ecx
mov    %edi,0x34(%esp)
xor    %edi,%edi
mov    %ecx,0x28(%esp)
lea    -0x7094(%ebx),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x38(%esp)
mov    %edi,0x20(%esp)
lea    0x0(%esi),%esi
test   %dl,%dl
je     ccce <main+0x9fbe>
mov    0x20(%esp),%edi
jmp    cad3 <main+0x9dc3>
xchg   %ax,%ax
cmp    $0x6f,%dl
je     cbf8 <main+0x9ee8>
mov    %edi,%eax
or     $0x40,%eax
cmp    $0x75,%dl
cmove  %eax,%edi
movzbl (%esi),%edx
test   %dl,%dl
je     cb16 <main+0x9e06>
mov    0x18(%esp),%eax
movsbl %dl,%ebp
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
je     cce0 <main+0x9fd0>
add    $0x1,%esi
cmp    $0x67,%dl
je     cbf0 <main+0x9ee0>
jg     cab8 <main+0x9da8>
cmp    $0x61,%dl
movzbl (%esi),%edx
mov    $0x49,%eax
cmove  %eax,%edi
test   %dl,%dl
jne    cad3 <main+0x9dc3>
mov    %edi,0x20(%esp)
xor    %ebp,%ebp
mov    0x20(%esp),%edi
mov    $0x49,%eax
mov    %ebp,0x4(%esp)
mov    %edx,0x14(%esp)
test   %edi,%edi
cmovne %edi,%eax
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     ccc3 <main+0x9fb3>
mov    0x14(%esp),%edx
add    $0x1,%esi
xor    %ebp,%ebp
mov    %edx,%edi
lea    0x0(%esi),%esi
movzbl (%esi),%ecx
test   %cl,%cl
je     cc10 <main+0x9f00>
movsbl %cl,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     cc10 <main+0x9f00>
sub    $0x58,%ecx
add    $0x1,%esi
cmp    $0x20,%cl
ja     cb58 <main+0x9e48>
movzbl %cl,%ecx
mov    -0x6fa0(%ebx,%ecx,4),%eax
add    %ebx,%eax
jmp    *%eax
xor    %ecx,%ecx
mov    %edi,%eax
mov    %ecx,%edi
lea    0x0(%esi),%esi
lea    -0x30(%edx),%esi
mov    %esi,%ecx
cmp    $0x7,%cl
ja     cdf9 <main+0xa0e9>
add    $0x1,%eax
lea    -0x30(%edx,%edi,8),%edi
movsbl (%eax),%edx
test   %dl,%dl
jne    cba8 <main+0x9e98>
mov    %edi,%ecx
mov    %ecx,(%esp)
call   2c50 <umask@plt>
xor    %eax,%eax
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
jne    ce25 <main+0xa115>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
or     $0x8,%edi
jmp    cacc <main+0x9dbc>
or     $0x1,%edi
jmp    cacc <main+0x9dbc>
movzbl (%esi),%ecx
or     $0x2,%ebp
test   %cl,%cl
jne    cb63 <main+0x9e53>
xchg   %ax,%ax
mov    %edi,%edx
and    $0x7,%ebp
imul   0x20(%esp),%ebp
cmp    $0x2d,%dl
mov    %esi,%eax
je     cd28 <main+0xa018>
cmp    $0x3d,%dl
je     cd08 <main+0x9ff8>
mov    0x24(%esp),%edi
or     %edi,%ebp
cmp    $0x2b,%dl
cmovne %edi,%ebp
mov    %ebp,0x24(%esp)
cmp    $0x2c,%cl
je     ccf0 <main+0x9fe0>
movsbl %cl,%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     ccc6 <main+0x9fb6>
mov    %ecx,%edx
jmp    caa8 <main+0x9d98>
lea    0x0(%esi),%esi
or     0x30(%esp),%ebp
jmp    cb58 <main+0x9e48>
lea    0x0(%esi,%eiz,1),%esi
or     $0x1,%ebp
jmp    cb58 <main+0x9e48>
or     $0x4,%ebp
jmp    cb58 <main+0x9e48>
or     0x2c(%esp),%ebp
jmp    cb58 <main+0x9e48>
lea    0x0(%esi,%eiz,1),%esi
or     0x34(%esp),%ebp
jmp    cb58 <main+0x9e48>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%edx
mov    %ebp,%eax
or     $0x1,%eax
test   %edx,%edx
cmovne %eax,%ebp
jmp    cb58 <main+0x9e48>
movzbl (%esi),%ecx
test   %cl,%cl
jne    ce0f <main+0xa0ff>
mov    0x24(%esp),%ecx
not    %ecx
jmp    cbc6 <main+0x9eb6>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x20(%esp)
jmp    cb1c <main+0x9e0c>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%eax),%ecx
add    $0x1,%esi
movl   $0x0,0x20(%esp)
mov    %ecx,%edx
jmp    caa8 <main+0x9d98>
xchg   %ax,%ax
mov    0x20(%esp),%edi
lea    0x0(,%edi,8),%edx
sub    %edi,%edx
not    %edx
and    %edx,0x24(%esp)
or     %ebp,0x24(%esp)
jmp    cc3e <main+0x9f2e>
lea    0x0(%esi,%eiz,1),%esi
not    %ebp
and    %ebp,0x24(%esp)
jmp    cc3e <main+0x9f2e>
call   4790 <main+0x1a80>
jmp    ca23 <main+0x9d13>
test   %edi,%edi
nop
je     cde2 <main+0xa0d2>
mov    %esi,%eax
mov    $0x75,%ecx
lea    0x4a(%esp),%esi
not    %eax
lea    -0x709b(%ebx),%edi
mov    %esi,%edx
mov    %esi,0x20(%esp)
lea    -0x70a7(%ebx),%esi
mov    %edi,0x18(%esp)
lea    0x3(%esi),%ebp
mov    $0x8,%edi
mov    %esi,0x1c(%esp)
mov    %cl,(%edx)
lea    0x2(%edx),%esi
mov    %edi,%ecx
movb   $0x3d,0x1(%edx)
mov    0x1c(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
bt     %ecx,%eax
jae    cd9a <main+0xa08a>
movzbl (%edx),%eax
add    $0x1,%esi
mov    %al,-0x1(%esi)
add    $0x1,%edx
sub    $0x1,%ecx
cmp    %ebp,%edx
jne    cd88 <main+0xa078>
sub    $0x3,%edi
mov    0x14(%esp),%eax
cmp    $0xffffffff,%edi
je     cdc4 <main+0xa0b4>
movb   $0x2c,(%esi)
lea    0x1(%esi),%edx
mov    0x18(%esp),%esi
addl   $0x1,0x18(%esp)
movzbl (%esi),%ecx
jmp    cd75 <main+0xa065>
mov    0x20(%esp),%eax
movb   $0x0,(%esi)
mov    %eax,0x4(%esp)
lea    -0x6a69(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
jmp    cbce <main+0x9ebe>
lea    -0x70a3(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   11880 <main+0xeb70>
jmp    cbce <main+0x9ebe>
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x6f17(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x708b(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
call   14370 <main+0x11660>
lea    0x0(%esi),%esi
push   %ebp
mov    $0x2,%ebp
push   %edi
push   %esi
mov    $0x66,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0xefe9,%ebx
sub    $0x2c,%esp
movl   $0x0,0xc(%esp)
movl   $0x3,0x8(%esp)
lea    -0x707a(%ebx),%edi
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
je     cea3 <main+0xa193>
cmp    $0x53,%eax
je     cf58 <main+0xa248>
cmp    $0x61,%eax
je     cf48 <main+0xa238>
cmp    $0x48,%eax
cmovne %eax,%esi
mov    0x8(%esp),%eax
mov    %edi,(%esp)
cmove  %ebp,%eax
mov    %eax,0x8(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
jne    ce74 <main+0xa164>
cmp    $0x74,%esi
lea    -0x7cc(%ebx),%ebp
je     cebb <main+0xa1ab>
xchg   %ax,%ax
add    $0x10,%ebp
movsbl 0xc(%ebp),%eax
cmp    %eax,%esi
jne    ceb0 <main+0xa1a0>
lea    0x29cc(%ebx),%eax
mov    (%eax),%edx
mov    (%edx),%eax
test   %eax,%eax
je     cf68 <main+0xa258>
mov    0xc(%esp),%esi
test   %esi,%esi
jne    d037 <main+0xa327>
mov    0x4(%edx),%ecx
test   %ecx,%ecx
jne    d037 <main+0xa327>
mov    $0xa,%ecx
mov    %eax,%esi
lea    -0x7058(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     cfc8 <main+0xa2b8>
lea    0x1(%eax),%edx
movsbl (%eax),%eax
cmp    $0x2f,%eax
jle    d030 <main+0xa320>
cmp    $0x39,%eax
jg     d070 <main+0xa360>
xor    %esi,%esi
jmp    cf21 <main+0xa211>
lea    0x0(%esi),%esi
cmp    $0x39,%eax
jg     d070 <main+0xa360>
add    $0x1,%edx
lea    (%esi,%esi,4),%ecx
lea    -0x30(%eax,%ecx,2),%esi
movsbl -0x1(%edx),%eax
cmp    $0x2f,%eax
jg     cf18 <main+0xa208>
test   %eax,%eax
jne    d070 <main+0xa360>
imul   0x8(%ebp),%esi
jmp    cfcd <main+0xa2bd>
lea    0x0(%esi),%esi
movl   $0x1,0xc(%esp)
jmp    ce68 <main+0xa158>
lea    0x0(%esi),%esi
movl   $0x1,0x8(%esp)
jmp    ce68 <main+0xa158>
lea    0x0(%esi),%esi
mov    0xc(%esp),%edx
test   %edx,%edx
je     d045 <main+0xa335>
lea    -0x7c4(%ebx),%ebp
lea    0x18(%esp),%edi
lea    -0x7043(%ebx),%esi
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    -0x4(%ebp),%eax
mov    %eax,(%esp)
call   28c0 <getrlimit@plt>
mov    -0x8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
mov    0x8(%esp),%eax
mov    %edi,%edx
mov    %ebp,(%esp)
add    $0x10,%ebp
call   c5e0 <main+0x98d0>
mov    -0x8(%ebp),%eax
test   %eax,%eax
jne    cf88 <main+0xa278>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%esi
lea    0x18(%esp),%edi
mov    %edi,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   28c0 <getrlimit@plt>
testb  $0x2,0x8(%esp)
je     cfeb <main+0xa2db>
mov    %esi,0x1c(%esp)
testb  $0x1,0x8(%esp)
je     cff6 <main+0xa2e6>
mov    %esi,0x18(%esp)
mov    %edi,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   2970 <setrlimit@plt>
test   %eax,%eax
jns    cfbe <main+0xa2ae>
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   29b0 <strerror@plt>
mov    %eax,0x4(%esp)
lea    -0x703c(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    cf34 <main+0xa224>
lea    -0x706b(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x18(%esp),%esi
add    $0x8,%ebp
mov    %esi,0x4(%esp)
mov    -0x4(%ebp),%eax
mov    %eax,(%esp)
call   28c0 <getrlimit@plt>
mov    0x8(%esp),%eax
mov    %esi,%edx
mov    %ebp,(%esp)
call   c5e0 <main+0x98d0>
jmp    cfbe <main+0xa2ae>
xchg   %ax,%ax
lea    -0x704e(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
jmp    d09b <main+0xa38b>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x1,%edx
cmp    -0x1(%eax),%cl
jne    d0a8 <main+0xa398>
movzbl (%edx),%ecx
test   %cl,%cl
jne    d090 <main+0xa380>
repz ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0xed76,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x6f17(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xed43,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
mov    0x54(%esp),%edi
call   2ac0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   2bf0 <__strtoll_internal@plt>
mov    %eax,0x18(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x1c(%esp)
test   %eax,%eax
jne    d17c <main+0xa46c>
mov    0x2c(%esp),%ebp
cmp    %esi,%ebp
je     d170 <main+0xa460>
call   2cc0 <__ctype_b_loc@plt>
mov    (%eax),%edi
mov    %ebp,%eax
jmp    d14c <main+0xa43c>
lea    0x0(%esi),%esi
mov    %eax,0x2c(%esp)
movzbl (%eax),%edx
add    $0x1,%eax
movzbl %dl,%ecx
testb  $0x20,0x1(%edi,%ecx,2)
jne    d148 <main+0xa438>
test   %dl,%dl
jne    d17c <main+0xa46c>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
je     d13a <main+0xa42a>
mov    %ebp,(%esp)
call   d0b0 <main+0xa3a0>
mov    %esi,(%esp)
call   d0b0 <main+0xa3a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   d0e0 <main+0xa3d0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   d0e0 <main+0xa3d0>
cmp    $0x0,%edx
jbe    d1d8 <main+0xa4c8>
mov    %esi,(%esp)
call   d0b0 <main+0xa3a0>
lea    0x0(%esi),%esi
cmp    $0x7fffffff,%eax
ja     d1cd <main+0xa4bd>
add    $0x18,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
movsbl (%eax),%edx
jmp    d20a <main+0xa4fa>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movsbl (%eax),%edx
test   %dl,%dl
je     d218 <main+0xa508>
sub    $0x30,%edx
cmp    $0x9,%edx
jbe    d200 <main+0xa4f0>
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xec03,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
lea    0x1fc(%ebx),%eax
mov    (%eax),%ebp
movl   $0x27,0x4(%esp)
mov    %edi,(%esp)
call   2aa0 <strchrnul@plt>
mov    %ebp,0x4(%esp)
mov    %eax,%esi
sub    %edi,%esi
lea    0x3(%esi),%eax
mov    %eax,(%esp)
call   c4d0 <main+0x97c0>
movb   $0x27,(%eax)
add    $0x1,%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2b40 <mempcpy@plt>
lea    (%edi,%esi,1),%ecx
movb   $0x27,(%eax)
lea    0x1(%eax),%ebp
cmpb   $0x27,(%ecx)
jne    d2dc <main+0xa5cc>
lea    0x1(%ecx),%edx
xor    %eax,%eax
jmp    d292 <main+0xa582>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %edx,%edi
add    $0x1,%edx
cmpb   $0x27,-0x1(%edx)
lea    0x1(%eax),%esi
je     d290 <main+0xa580>
add    $0x4,%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   c4d0 <main+0x97c0>
mov    0xc(%esp),%ecx
movb   $0x22,(%eax)
add    $0x1,%eax
mov    %esi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   2b40 <mempcpy@plt>
movb   $0x22,(%eax)
lea    0x1(%eax),%ebp
cmpb   $0x0,(%edi)
jne    d23e <main+0xa52e>
lea    0x1fc(%ebx),%eax
movb   $0x0,0x0(%ebp)
mov    (%eax),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   2f30 <main+0x220>
add    $0xeb31,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   2a10 <strlen@plt>
lea    0x1(%eax),%edi
mov    %edi,(%esp)
call   c170 <main+0x9460>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   27b0 <memcpy@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   2f30 <main+0x220>
add    $0xeaef,%ebx
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2700 <strcmp@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%edi
movl   $0x0,0xc(%esp)
cmp    %edi,0xc(%esp)
jb     d388 <main+0xa678>
jmp    d3b8 <main+0xa6a8>
lea    0x0(%esi),%esi
cmp    0xc(%esp),%esi
jbe    d3b8 <main+0xa6a8>
mov    %esi,%edi
mov    0xc(%esp),%eax
lea    (%edi,%eax,1),%esi
mov    0x24(%esp),%eax
shr    %esi
lea    (%eax,%esi,4),%ebp
lea    0x20(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   d330 <main+0xa620>
test   %eax,%eax
js     d380 <main+0xa670>
je     d3c1 <main+0xa6b1>
lea    0x1(%esi),%eax
mov    %eax,0xc(%esp)
jmp    d372 <main+0xa662>
nop
xor    %eax,%eax
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%eax
jmp    d3ba <main+0xa6aa>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xea55,%ebx
sub    $0x14,%esp
lea    0x29b8(%ebx),%esi
movsbl 0x3(%esi),%eax
mov    %eax,(%esp)
call   11090 <main+0xe380>
movsbl 0x4(%esi),%eax
mov    %eax,(%esp)
call   ae80 <main+0x8170>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   2f30 <main+0x220>
add    $0xea0d,%ebx
movzbl 0x4(%edi),%eax
test   %al,%al
je     d454 <main+0xa744>
mov    0x8(%edi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     d449 <main+0xa739>
xchg   %ax,%ax
mov    %eax,(%esp)
add    $0x4,%esi
call   27a0 <free@plt>
mov    (%esi),%eax
test   %eax,%eax
jne    d438 <main+0xa728>
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   2f30 <main+0x220>
add    $0xe9bc,%ebx
mov    (%esi),%edx
test   %edx,%edx
je     d4f7 <main+0xa7e7>
xor    %edi,%edi
xchg   %ax,%ax
add    $0x1,%edi
mov    (%esi,%edi,4),%eax
test   %eax,%eax
jne    d480 <main+0xa770>
lea    0x4(,%edi,4),%eax
mov    %eax,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,%ebp
mov    %eax,0xc(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     d500 <main+0xa7f0>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
add    $0x4,%ebp
add    $0x4,%esi
call   c130 <main+0x9420>
mov    %eax,-0x4(%ebp)
mov    (%esi),%eax
test   %eax,%eax
jne    d4a8 <main+0xa798>
lea    0x29d8(%ebx),%esi
movl   $0x0,0x0(%ebp)
mov    %esi,(%esp)
call   d410 <main+0xa700>
mov    0xc(%esp),%eax
movb   $0x1,0x4(%esi)
mov    %edi,(%esi)
movl   $0x1,0xc(%esi)
mov    %eax,0x8(%esi)
movl   $0xffffffff,0x10(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x4,%eax
xor    %edi,%edi
jmp    d491 <main+0xa781>
mov    0xc(%esp),%ebp
jmp    d4bf <main+0xa7af>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0xe90e,%ebx
test   %eax,%eax
je     d534 <main+0xa824>
lea    0x29ec(%ebx),%eax
movl   $0x0,(%eax)
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
lea    0x29cc(%ebx),%eax
mov    (%eax),%ecx
mov    (%ecx),%eax
test   %eax,%eax
je     d62b <main+0xa91b>
lea    0x29cc(%ebx),%esi
lea    0x4(%ecx),%ebp
lea    0x1(%eax),%edi
mov    %ebp,(%esi)
movsbl (%eax),%esi
cmp    $0x2d,%esi
je     d6c8 <main+0xa9b8>
cmp    $0x2b,%esi
jne    d791 <main+0xaa81>
movl   $0x0,0x14(%esp)
add    $0x1,%edi
movsbl -0x1(%edi),%ecx
test   %ecx,%ecx
je     d540 <main+0xa830>
mov    0xc(%esp),%esi
test   %esi,%esi
setne  %al
cmp    $0x63,%ecx
jne    d5bb <main+0xa8ab>
test   %al,%al
je     d5bb <main+0xa8ab>
lea    0x29ec(%ebx),%eax
mov    %edi,(%eax)
add    $0x1,%edi
movsbl -0x1(%edi),%ecx
test   %ecx,%ecx
je     d540 <main+0xa830>
mov    0xc(%esp),%esi
test   %esi,%esi
setne  %al
cmp    $0x63,%ecx
je     d596 <main+0xa886>
cmp    $0x6c,%ecx
jne    d5c4 <main+0xa8b4>
test   %al,%al
jne    d5f8 <main+0xa8e8>
xor    %eax,%eax
cmp    $0x6f,%ecx
je     d678 <main+0xa968>
nop
movsbl -0x6d71(%eax,%ebx,1),%edx
cmp    %edx,%ecx
je     d638 <main+0xa928>
add    $0x1,%eax
cmp    $0x11,%eax
jne    d5d0 <main+0xa8c0>
lea    -0x6ea8(%ebx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
xchg   %ax,%ax
movl   $0x1,0x10(%esp)
jmp    d57d <main+0xa86d>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2(%eax)
jne    d6dd <main+0xa9cd>
mov    %ebp,%edi
mov    0xc(%esp),%ebp
test   %ebp,%ebp
jne    d62b <main+0xa91b>
mov    0x4(%ecx),%ebp
test   %ebp,%ebp
jne    d62b <main+0xa91b>
mov    %edi,(%esp)
call   d460 <main+0xa750>
mov    0x10(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x14(%esp),%esi
lea    0x29b8(%ebx),%ebp
mov    %esi,%edx
test   %esi,%esi
mov    %dl,0x0(%ebp,%eax,1)
je     d57d <main+0xa86d>
cmp    $0x56,%ecx
je     d788 <main+0xaa78>
cmp    $0x45,%ecx
jne    d57d <main+0xa86d>
lea    0x29b8(%ebx),%eax
movb   $0x0,0x9(%eax)
jmp    d57d <main+0xa86d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x29cc(%ebx),%eax
xor    %ebp,%ebp
mov    (%eax),%eax
mov    (%eax),%esi
mov    %eax,0x18(%esp)
test   %esi,%esi
je     d71d <main+0xaa0d>
mov    -0x70c(%ebx,%ebp,4),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
je     d6f0 <main+0xa9e0>
add    $0x1,%ebp
cmp    $0x11,%ebp
jne    d690 <main+0xa980>
lea    -0x6ebd(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%eax),%edx
test   %dl,%dl
je     d80c <main+0xaafc>
cmp    $0x2d,%dl
je     d608 <main+0xa8f8>
movl   $0x1,0x14(%esp)
jmp    d57d <main+0xa86d>
lea    0x0(%esi),%esi
lea    0x29b8(%ebx),%esi
movzbl 0x14(%esp),%eax
mov    %al,(%esi,%ebp,1)
mov    0x18(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     d57d <main+0xa86d>
lea    0x29cc(%ebx),%eax
add    $0x4,%ebp
mov    %ebp,(%eax)
jmp    d57d <main+0xa86d>
mov    0x14(%esp),%edx
test   %edx,%edx
jne    d79e <main+0xaa8e>
lea    0x29b8(%ebx),%esi
lea    -0x6ec8(%ebx),%eax
xor    %ebp,%ebp
lea    -0x6ef0(%ebx),%edx
mov    %edi,0x1c(%esp)
mov    %eax,%edi
mov    %edx,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x70c(%ebx,%ebp,4),%ecx
lea    -0x6eed(%ebx),%edx
cmpb   $0x0,0x0(%ebp,%esi,1)
cmovne 0x18(%esp),%edx
add    $0x1,%ebp
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
call   11880 <main+0xeb70>
cmp    $0x11,%ebp
jne    d748 <main+0xaa38>
lea    0x29cc(%ebx),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%ebp
jmp    d702 <main+0xa9f2>
movb   $0x0,0xa(%ebp)
jmp    d57d <main+0xa86d>
lea    0x29cc(%ebx),%eax
mov    %ecx,(%eax)
jmp    d62b <main+0xa91b>
lea    0x238(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    -0x6eea(%ebx),%eax
mov    %eax,(%esp)
call   11720 <main+0xea10>
lea    0x29b8(%ebx),%esi
lea    -0x6ed1(%ebx),%eax
lea    -0x6c35(%ebx),%edx
mov    %edi,0x1c(%esp)
mov    %eax,%edi
mov    %edx,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x0(%ebp,%esi,1)
lea    -0x6ef4(%ebx),%edx
cmovne 0x18(%esp),%edx
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
mov    -0x70c(%ebx,%ebp,4),%edx
add    $0x1,%ebp
mov    %edx,0x4(%esp)
call   11880 <main+0xeb70>
cmp    $0x11,%ebp
jne    d7d8 <main+0xaac8>
jmp    d777 <main+0xaa67>
mov    0xc(%esp),%ebp
test   %ebp,%ebp
jne    d62b <main+0xa91b>
lea    0x29b8(%ebx),%eax
movb   $0x0,0x8(%eax)
movb   $0x0,0x7(%eax)
jmp    d62b <main+0xa91b>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edx
call   2f30 <main+0x220>
add    $0xe5ec,%ebx
mov    (%edx),%eax
test   %eax,%eax
je     d9f7 <main+0xace7>
xor    %ecx,%ecx
cmpb   $0x2d,(%eax)
sete   %cl
mov    %ecx,%ebp
lea    0x29d0(%ebx),%ecx
lea    0x29b8(%ebx),%esi
mov    %eax,(%ecx)
mov    0x30(%esp),%ecx
lea    0x4(%edx),%eax
test   %ecx,%ecx
cmovg  %eax,%edx
xor    %eax,%eax
xchg   %ax,%ax
movb   $0x2,(%esi,%eax,1)
add    $0x1,%eax
cmp    $0x11,%eax
jne    d878 <main+0xab68>
lea    0x29cc(%ebx),%edi
mov    $0x1,%al
mov    %edx,(%edi)
call   d510 <main+0xa800>
lea    0x29ec(%ebx),%ecx
mov    %eax,%edx
or     %ebp,%edx
mov    (%edi),%ebp
mov    (%ecx),%edi
mov    0x0(%ebp),%eax
test   %eax,%eax
je     d9fe <main+0xacee>
cmpb   $0x2,0x3(%esi)
je     d970 <main+0xac60>
cmpb   $0x2,0x4(%esi)
je     d960 <main+0xac50>
xor    %eax,%eax
jmp    d8d0 <main+0xabc0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x11,%eax
je     d8e2 <main+0xabd2>
cmpb   $0x2,(%esi,%eax,1)
jne    d8c8 <main+0xabb8>
movb   $0x0,(%esi,%eax,1)
add    $0x1,%eax
cmp    $0x11,%eax
jne    d8d0 <main+0xabc0>
test   %edi,%edi
je     d9c8 <main+0xacb8>
mov    0x0(%ebp),%eax
lea    0x4(%ebp),%edi
mov    %eax,(%ecx)
mov    0x4(%ebp),%eax
test   %eax,%eax
je     d90c <main+0xabfc>
lea    0x29d0(%ebx),%ecx
add    $0x4,%edi
mov    %eax,(%ecx)
lea    0x720(%ebx),%ecx
mov    %eax,(%ecx)
lea    0x29d8(%ebx),%ecx
mov    %edi,0x8(%ecx)
mov    (%edi),%ebp
movl   $0x1,0xc(%ecx)
movl   $0xffffffff,0x10(%ecx)
test   %ebp,%ebp
je     d944 <main+0xac34>
mov    (%ecx),%eax
lea    0x0(,%eax,4),%esi
sub    %esi,%edi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    (%edi,%eax,4),%esi
test   %esi,%esi
jne    d938 <main+0xac28>
mov    %eax,(%ecx)
mov    %edx,0x8(%esp)
call   d3d0 <main+0xa6c0>
mov    0x8(%esp),%edx
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
mov    %edx,%eax
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x3(%esi),%eax
mov    %al,0x4(%esi)
jmp    d8c0 <main+0xabb0>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x1,0x6(%esi)
jne    d8b6 <main+0xaba6>
movl   $0x0,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
call   2c20 <isatty@plt>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
test   %eax,%eax
je     d8b6 <main+0xaba6>
movl   $0x1,(%esp)
call   2c20 <isatty@plt>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
test   %eax,%eax
je     d8b6 <main+0xaba6>
movb   $0x1,0x3(%esi)
jmp    d8b6 <main+0xaba6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x6(%esi)
mov    %ebp,%edi
jne    d90c <main+0xabfc>
movl   $0x0,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   9ae0 <main+0x6dd0>
mov    0x0(%ebp),%eax
mov    0x8(%esp),%edx
jmp    d8f9 <main+0xabe9>
xor    %ebp,%ebp
jmp    d85a <main+0xab4a>
test   %edi,%edi
jne    da0b <main+0xacfb>
movb   $0x1,0x6(%esi)
jmp    d8ac <main+0xab9c>
lea    -0x6e95(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x1,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0xe3fb,%ebx
cmpl   $0x1,0x30(%esp)
jle    da4d <main+0xad3d>
mov    0x34(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
lea    0x29d8(%ebx),%ebp
cmp    0x0(%ebp),%eax
jg     db0b <main+0xadfb>
lea    0x6fc(%ebx),%ecx
addl   $0x1,(%ecx)
sub    %eax,0x0(%ebp)
test   %eax,%eax
mov    0x8(%ebp),%esi
jle    db07 <main+0xadf7>
xor    %edi,%edi
jmp    da7f <main+0xad6f>
nop
add    $0x1,%edi
cmp    %eax,%edi
je     da9f <main+0xad8f>
cmpb   $0x0,0x4(%ebp)
je     da78 <main+0xad68>
mov    (%esi,%edi,4),%edx
add    $0x1,%edi
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   27a0 <free@plt>
mov    0xc(%esp),%eax
cmp    %eax,%edi
jne    da7f <main+0xad6f>
mov    0x8(%ebp),%eax
lea    (%esi,%edi,4),%esi
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    -0x4(%esi),%edx
add    $0x4,%eax
test   %edx,%edx
mov    %edx,-0x4(%eax)
jne    daa8 <main+0xad98>
movl   $0x1,0xc(%ebp)
movl   $0xffffffff,0x10(%ebp)
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    daed <main+0xaddd>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    daf8 <main+0xade8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   4790 <main+0x1a80>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%eax
jmp    daa8 <main+0xad98>
lea    -0x6e7d(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   2f30 <main+0x220>
add    $0xe302,%ebx
cmpl   $0x1,0x20(%esp)
je     dba0 <main+0xae90>
lea    0x6fc(%ebx),%esi
addl   $0x1,(%esi)
xor    %eax,%eax
call   d510 <main+0xa800>
call   d3d0 <main+0xa6c0>
lea    0x29cc(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%edx
test   %edx,%edx
je     db62 <main+0xae52>
mov    %eax,(%esp)
call   d460 <main+0xa750>
mov    (%esi),%eax
lea    -0x1(%eax),%edx
xor    %eax,%eax
test   %edx,%edx
mov    %edx,(%esi)
jne    db7b <main+0xae6b>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    db88 <main+0xae78>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
call   4790 <main+0x1a80>
mov    0xc(%esp),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x29b0(%ebx),%eax
movl   $0x20,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   12f50 <main+0x10240>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0xe253,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   d1b0 <main+0xa4a0>
mov    $0x1,%edx
test   %eax,%eax
cmovne %eax,%edx
lea    0x29d8(%ebx),%eax
mov    %edx,0xc(%eax)
movl   $0xffffffff,0x10(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%edx
call   2f30 <main+0x220>
add    $0xe20c,%ebx
mov    0x64(%esp),%ecx
cmp    $0x2,%edx
jle    e00f <main+0xb2ff>
cmp    $0x3,%edx
je     dd18 <main+0xb008>
lea    0x29d8(%ebx),%esi
lea    0xc(%ecx),%eax
sub    $0x2,%edx
mov    %eax,0x20(%esp)
mov    0xc(%esi),%eax
cmp    %edx,%eax
jbe    dd35 <main+0xb025>
mov    0x8(%ecx),%eax
movl   $0xffffffff,0x10(%esi)
mov    %eax,0x24(%esp)
mov    0x4(%ecx),%eax
movl   $0xffffffff,0xc(%esi)
mov    %eax,0x28(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     dc8e <main+0xaf7e>
cmpb   $0x2d,(%eax)
je     ded0 <main+0xb1c0>
lea    0x3e(%esp),%eax
mov    $0x1,%edi
mov    $0x3f,%ecx
mov    %eax,0x28(%esp)
mov    0x1c(%esp),%ebp
sub    0x20(%esp),%ebp
movl   $0x40,0xc(%esp)
mov    %ecx,0x2c(%esp)
sar    $0x2,%ebp
add    $0x1,%ebp
mov    %ebp,%eax
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    -0x6e35(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   134a0 <main+0x10790>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
movl   $0x0,0x8(%esp)
movb   $0x0,0x3f(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %cl,0x3e(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    $0xffffffff,%eax
mov    %eax,0x10(%esi)
mov    %edi,%eax
mov    %ebp,0xc(%esi)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x29d8(%ebx),%esi
mov    0x8(%esi),%eax
mov    (%esi),%edi
mov    %eax,0x20(%esp)
mov    0xc(%esi),%eax
lea    0x1(%edi),%edx
cmp    %edx,%eax
ja     dc57 <main+0xaf47>
mov    0x8(%ecx),%edi
cmp    $0x1,%eax
mov    0x20(%esp),%edx
mov    %edi,0x24(%esp)
mov    0x4(%ecx),%edi
lea    -0x4(%edx,%eax,4),%ecx
movl   $0xffffffff,0xc(%esi)
mov    %ecx,0x1c(%esp)
mov    %edi,0x28(%esp)
mov    0x10(%esi),%edi
jle    dc7b <main+0xaf6b>
mov    %edi,%eax
shr    $0x1f,%eax
test   %al,%al
jne    dc7b <main+0xaf6b>
mov    -0x4(%ecx),%ebp
mov    %ebp,(%esp)
call   2a10 <strlen@plt>
cmp    %edi,%eax
jb     dc7b <main+0xaf6b>
add    %edi,%ebp
je     dc7b <main+0xaf6b>
movsbl 0x0(%ebp),%ecx
test   %cl,%cl
je     dc7b <main+0xaf6b>
mov    0x28(%esp),%edx
lea    0x1(%ebp),%edi
movzbl (%edx),%eax
jmp    ddba <main+0xb0aa>
lea    0x0(%esi),%esi
test   %al,%al
je     de00 <main+0xb0f0>
add    $0x1,%edx
movzbl (%edx),%eax
cmp    $0x3a,%al
je     dec8 <main+0xb1b8>
cmp    %al,%cl
jne    dda8 <main+0xb098>
cmpb   $0x3a,0x1(%edx)
je     df00 <main+0xb1f0>
lea    0x29b0(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x4(%esp)
lea    -0x6e67(%ebx),%eax
mov    %eax,(%esp)
call   13370 <main+0x10660>
lea    0x3e(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %eax,0x28(%esp)
jmp    de44 <main+0xb134>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
cmpb   $0x3a,(%eax)
je     df46 <main+0xb236>
lea    -0x6e60(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x204(%ebx),%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   11850 <main+0xeb40>
lea    -0x6e67(%ebx),%eax
mov    %eax,(%esp)
call   13510 <main+0x10800>
lea    0x3e(%esp),%eax
mov    $0x3f,%ecx
mov    %eax,0x28(%esp)
mov    0x1c(%esp),%ebp
sub    0x20(%esp),%ebp
movl   $0x40,0xc(%esp)
mov    %ecx,0x2c(%esp)
sar    $0x2,%ebp
add    $0x1,%ebp
mov    %ebp,%eax
sar    $0x1f,%eax
mov    %eax,0x8(%esp)
lea    -0x6e35(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   134a0 <main+0x10790>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
movl   $0x0,0x8(%esp)
movb   $0x0,0x3f(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %cl,0x3e(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
test   %edi,%edi
je     e005 <main+0xb2f5>
mov    0x1c(%esp),%ecx
mov    %edi,%eax
xor    %edi,%edi
sub    -0x4(%ecx),%eax
mov    %ebp,0xc(%esi)
mov    %eax,0x10(%esi)
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1,%edx
jmp    dd9d <main+0xb08d>
movsbl 0x1(%eax),%ecx
lea    0x1(%eax),%ebp
test   %cl,%cl
je     dc8e <main+0xaf7e>
addl   $0x4,0x1c(%esp)
cmp    $0x2d,%cl
jne    dd96 <main+0xb086>
cmpb   $0x0,0x2(%eax)
je     dc8e <main+0xaf7e>
jmp    dd96 <main+0xb086>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%ebp)
mov    0x1c(%esp),%eax
jne    df7b <main+0xb26b>
mov    (%eax),%edi
test   %edi,%edi
je     df88 <main+0xb278>
addl   $0x4,0x1c(%esp)
lea    -0x6e67(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
call   13370 <main+0x10660>
lea    0x3e(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %eax,0x28(%esp)
jmp    dca0 <main+0xaf90>
lea    0x3e(%esp),%eax
mov    %eax,0x28(%esp)
mov    %eax,0x4(%esp)
lea    -0x6e67(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %cl,0x3e(%esp)
movb   $0x0,0x3f(%esp)
call   13370 <main+0x10660>
mov    $0x3f,%ecx
jmp    de44 <main+0xb134>
cmp    (%eax),%edi
jne    df15 <main+0xb205>
nop
jmp    df10 <main+0xb200>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
cmpb   $0x3a,(%eax)
nop
je     dfd0 <main+0xb2c0>
lea    -0x6e4c(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    0x204(%ebx),%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   11850 <main+0xeb40>
lea    -0x6e67(%ebx),%eax
mov    %eax,(%esp)
call   13510 <main+0x10800>
lea    0x3e(%esp),%eax
mov    $0x3f,%ecx
mov    %eax,0x28(%esp)
jmp    dca0 <main+0xaf90>
lea    0x3e(%esp),%eax
mov    %eax,0x28(%esp)
mov    %eax,0x4(%esp)
lea    -0x6e67(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %cl,0x3e(%esp)
movb   $0x0,0x3f(%esp)
call   13370 <main+0x10660>
mov    $0x3a,%ecx
jmp    dca0 <main+0xaf90>
xor    %edi,%edi
or     $0xffffffff,%eax
jmp    dd03 <main+0xaff3>
lea    -0x6d94(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xde03,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
lea    0x29b4(%ebx),%edi
mov    (%edi),%esi
test   %esi,%esi
je     e080 <main+0xb370>
movsbl (%esi),%eax
test   %al,%al
je     e080 <main+0xb370>
lea    0x1(%esi),%ebp
movzbl (%edx),%ecx
jmp    e06b <main+0xb35b>
lea    0x0(%esi,%eiz,1),%esi
test   %cl,%cl
je     e0ed <main+0xb3dd>
add    $0x1,%edx
movzbl (%edx),%ecx
cmp    $0x3a,%cl
je     e0a0 <main+0xb390>
cmp    %cl,%al
jne    e058 <main+0xb348>
cmpb   $0x3a,0x1(%edx)
je     e0c8 <main+0xb3b8>
mov    %ebp,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x29cc(%ebx),%eax
mov    (%eax),%ebp
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     e094 <main+0xb384>
cmpb   $0x2d,(%ecx)
je     e0a8 <main+0xb398>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%edx
jmp    e04c <main+0xb33c>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%ecx)
lea    0x1(%ecx),%esi
je     e094 <main+0xb384>
add    $0x4,%ebp
mov    %ebp,(%eax)
movsbl 0x1(%ecx),%eax
cmp    $0x2d,%al
jne    e049 <main+0xb339>
cmpb   $0x0,0x2(%ecx)
jne    e049 <main+0xb339>
xor    %eax,%eax
jmp    e096 <main+0xb386>
cmpb   $0x0,0x1(%esi)
jne    e0e1 <main+0xb3d1>
lea    0x29cc(%ebx),%ecx
mov    (%ecx),%edx
lea    0x4(%edx),%esi
mov    %esi,(%ecx)
mov    (%edx),%ebp
test   %ebp,%ebp
je     e0ff <main+0xb3ef>
lea    0x29d4(%ebx),%edx
mov    %ebp,(%edx)
xor    %ebp,%ebp
jmp    e075 <main+0xb365>
mov    %eax,0x4(%esp)
lea    -0x6ea8(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
mov    %eax,0x4(%esp)
lea    -0x6e2e(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   2f30 <main+0x220>
add    $0xdd06,%ebx
sub    $0x18,%esp
movl   $0x10,(%esp)
call   c170 <main+0x9460>
lea    0x2a10(%ebx),%edx
movl   $0xf,(%eax)
mov    (%edx),%edx
movl   $0x0,0x4(%eax)
mov    %edx,0x8(%eax)
lea    0x2a08(%ebx),%edx
mov    (%edx),%edx
mov    %edx,0xc(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0xdcb6,%ebx
sub    $0x18,%esp
lea    0x1e8(%ebx),%edx
mov    (%edx),%ecx
lea    0x708(%ebx),%edx
mov    %ecx,(%edx)
mov    %eax,0x4(%esp)
lea    -0x6d60(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
jmp    e1b0 <main+0xb4a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x74,%esp
call   2f30 <main+0x220>
add    $0xdc72,%ebx
mov    %gs:0x14,%edx
mov    %edx,0x6c(%esp)
xor    %edx,%edx
test   %eax,%eax
js     e214 <main+0xb504>
mov    -0x66c(%ebx,%eax,4),%eax
lea    0x2c(%esp),%esi
mov    %eax,0x10(%esp)
lea    0x2a14(%ebx),%eax
mov    (%eax),%eax
movl   $0x40,0x4(%esp)
mov    %esi,(%esp)
mov    -0x66c(%ebx,%eax,4),%eax
mov    %eax,0xc(%esp)
lea    -0x6d4f(%ebx),%eax
mov    %eax,0x8(%esp)
call   114a0 <main+0xe790>
mov    %esi,%eax
call   e170 <main+0xb460>
lea    0x2a14(%ebx),%eax
lea    0x2c(%esp),%esi
mov    (%eax),%eax
movl   $0x40,0x4(%esp)
mov    %esi,(%esp)
mov    -0x66c(%ebx,%eax,4),%eax
mov    %eax,0xc(%esp)
lea    -0x6d32(%ebx),%eax
mov    %eax,0x8(%esp)
call   114a0 <main+0xe790>
jmp    e20d <main+0xb4fd>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    0x18(%esp),%ecx
call   2f30 <main+0x220>
add    $0xdbd0,%ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edx
test   %ecx,%ecx
jne    e275 <main+0xb565>
movl   $0x0,0x10(%esi)
movzbl (%edx),%eax
movsbl %al,%edi
sub    $0x30,%edi
cmp    $0x9,%edi
ja     e289 <main+0xb579>
cmpb   $0x0,0x1(%edx)
je     e2b0 <main+0xb5a0>
cmp    $0x2d,%al
je     e2a0 <main+0xb590>
test   %ecx,%ecx
nop
jne    e2b7 <main+0xb5a7>
call   e120 <main+0xb410>
mov    %eax,0x10(%esi)
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
cmpb   $0x0,0x1(%edx)
jne    e28d <main+0xb57d>
movl   $0xffffffff,0xc(%esi)
jmp    e29a <main+0xb58a>
nop
mov    %edi,0xc(%esi)
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x6d24(%ebx),%eax
call   e170 <main+0xb460>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   2f30 <main+0x220>
add    $0xdb4d,%ebx
movzbl (%esi),%edi
mov    %edi,%eax
cmp    $0x5f,%al
je     e308 <main+0xb5f8>
call   2cc0 <__ctype_b_loc@plt>
mov    %edi,%ecx
movzbl %cl,%edi
mov    (%eax),%eax
testb  $0x4,0x1(%eax,%edi,2)
je     e32f <main+0xb61f>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%edx
test   %dl,%dl
je     e32f <main+0xb61f>
cmp    $0x5f,%dl
mov    %edx,0xc(%esp)
je     e308 <main+0xb5f8>
call   2cc0 <__ctype_b_loc@plt>
mov    0xc(%esp),%edx
movzbl %dl,%edx
mov    (%eax),%eax
testb  $0x8,(%eax,%edx,2)
jne    e308 <main+0xb5f8>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   6097 <main+0x3387>
add    $0xdae7,%ecx
lea    0x738(%ecx),%eax
mov    (%eax),%eax
cmp    $0x1,%eax
je     e380 <main+0xb670>
cmp    $0x2,%eax
jne    e378 <main+0xb668>
lea    0x254(%ecx),%eax
mov    0x58(%eax),%eax
add    $0x4,%eax
mov    %eax,0x4(%esp)
jmp    10250 <main+0xd540>
lea    0x0(%esi),%esi
lea    0x29b0(%ecx),%eax
ret
nop
lea    0x254(%ecx),%eax
mov    0x48(%eax),%eax
add    $0x4,%eax
mov    %eax,0x4(%esp)
jmp    10250 <main+0xd540>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xda84,%ebx
sub    $0x20,%esp
lea    0x14(%esp),%esi
lea    0x29fc(%ebx),%edx
movl   $0x0,(%edx)
lea    0x738(%ebx),%edx
mov    %eax,(%edx)
lea    0x1f4(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   c280 <main+0x9570>
lea    0x234(%ebx),%eax
mov    (%eax),%edi
movl   $0x0,(%esp)
call   e340 <main+0xb630>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   11720 <main+0xea10>
mov    %esi,(%esp)
call   c320 <main+0x9610>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xda13,%ebx
sub    $0x1c,%esp
lea    0x29fc(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    e538 <main+0xb828>
lea    0x734(%ebx),%esi
lea    0x73c(%ebx),%edi
subl   $0x1,(%esi)
js     e4d0 <main+0xb7c0>
mov    (%edi),%eax
lea    0x1(%eax),%edx
mov    %edx,(%edi)
movsbl (%eax),%ebp
cmp    $0x23,%ebp
je     e4b7 <main+0xb7a7>
jle    e508 <main+0xb7f8>
cmp    $0x29,%ebp
je     e5d8 <main+0xb8c8>
jle    e4e0 <main+0xb7d0>
cmp    $0x5c,%ebp
je     e620 <main+0xb910>
cmp    $0x7c,%ebp
je     e588 <main+0xb878>
cmp    $0x3b,%ebp
je     e5f8 <main+0xb8e8>
lea    -0x5d2c(%ebx),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
lea    0x82(%eax),%edx
mov    %ebp,%eax
call   f400 <main+0xc6f0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffff7e,%eax
je     e4c1 <main+0xb7b1>
call   9a50 <main+0x6d40>
cmp    $0xa,%eax
jne    e4b0 <main+0xb7a0>
call   9610 <main+0x6900>
subl   $0x1,(%esi)
jns    e447 <main+0xb737>
nop
call   97c0 <main+0x6ab0>
mov    %eax,%ebp
jmp    e451 <main+0xb741>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x26,%ebp
je     e5b0 <main+0xb8a0>
cmp    $0x28,%ebp
jne    e482 <main+0xb772>
lea    0x2a14(%ebx),%eax
movl   $0x7,(%eax)
add    $0x1c,%esp
mov    $0x7,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x9,%ebp
je     e43e <main+0xb72e>
jg     e548 <main+0xb838>
cmp    $0xffffff7e,%ebp
jne    e658 <main+0xb948>
lea    0x2a14(%ebx),%eax
movl   $0x0,(%eax)
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x2,%eax
call   e3a0 <main+0xb690>
jmp    e432 <main+0xb722>
nop
cmp    $0xa,%ebp
jne    e670 <main+0xb960>
lea    0x1e8(%ebx),%eax
lea    0x29fc(%ebx),%ecx
addl   $0x1,(%eax)
lea    0x2a00(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%ecx)
lea    0x2a14(%ebx),%eax
movl   $0x1,(%eax)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   9a50 <main+0x6d40>
cmp    $0x7c,%eax
jne    e6c0 <main+0xb9b0>
lea    0x2a14(%ebx),%eax
movl   $0x5,(%eax)
mov    $0x5,%eax
jmp    e52d <main+0xb81d>
lea    0x0(%esi,%eiz,1),%esi
call   9a50 <main+0x6d40>
cmp    $0x26,%eax
jne    e6a0 <main+0xb990>
lea    0x2a14(%ebx),%eax
movl   $0x4,(%eax)
mov    $0x4,%eax
jmp    e52d <main+0xb81d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2a14(%ebx),%eax
movl   $0x8,(%eax)
add    $0x1c,%esp
mov    $0x8,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   9a50 <main+0x6d40>
cmp    $0x3b,%eax
jne    e6e0 <main+0xb9d0>
lea    0x2a14(%ebx),%eax
movl   $0x9,(%eax)
mov    $0x9,%eax
jmp    e52d <main+0xb81d>
lea    0x0(%esi,%eiz,1),%esi
call   9a50 <main+0x6d40>
cmp    $0xa,%eax
jne    e688 <main+0xb978>
lea    0x1e8(%ebx),%eax
addl   $0x1,(%eax)
lea    0x2a00(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     e43e <main+0xb72e>
mov    $0x2,%eax
call   e3a0 <main+0xb690>
jmp    e43e <main+0xb72e>
lea    0x0(%esi),%esi
cmp    $0xffffff7f,%ebp
je     e43e <main+0xb72e>
jmp    e482 <main+0xb772>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%ebp
je     e43e <main+0xb72e>
lea    0x0(%esi,%eiz,1),%esi
jmp    e482 <main+0xb772>
lea    0x0(%esi),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   9610 <main+0x6900>
jmp    e482 <main+0xb772>
lea    0x0(%esi),%esi
call   9610 <main+0x6900>
lea    0x2a14(%ebx),%eax
movl   $0x3,(%eax)
mov    $0x3,%eax
jmp    e52d <main+0xb81d>
nop
lea    0x0(%esi,%eiz,1),%esi
call   9610 <main+0x6900>
lea    0x2a14(%ebx),%eax
movl   $0x6,(%eax)
mov    $0x6,%eax
jmp    e52d <main+0xb81d>
nop
lea    0x0(%esi,%eiz,1),%esi
call   9610 <main+0x6900>
lea    0x2a14(%ebx),%eax
movl   $0x2,(%eax)
mov    $0x2,%eax
jmp    e52d <main+0xb81d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xd723,%ebx
sub    $0x2c,%esp
lea    0x29f4(%ebx),%eax
lea    0x29f0(%ebx),%esi
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
and    $0x4,%eax
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%edi
test   %edi,%edi
jne    e7f0 <main+0xbae0>
call   e410 <main+0xb700>
mov    %eax,%ebp
mov    0x18(%esp),%ecx
test   %ecx,%ecx
je     e77c <main+0xba6c>
cmp    $0x1,%ebp
jne    e77c <main+0xba6c>
lea    0x2a14(%ebx),%edi
jmp    e762 <main+0xba52>
xchg   %ax,%ax
call   e410 <main+0xb700>
cmp    $0x1,%eax
jne    e77a <main+0xba6a>
call   10300 <main+0xd5f0>
mov    (%esi),%edx
test   %edx,%edx
je     e758 <main+0xba48>
mov    (%edi),%eax
movl   $0x0,(%esi)
cmp    $0x1,%eax
je     e762 <main+0xba52>
mov    %eax,%ebp
cmp    $0xc,%ebp
jne    e848 <main+0xbb38>
lea    0x2a04(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    e848 <main+0xbb38>
testb  $0x2,0x1c(%esp)
jne    e808 <main+0xbaf8>
lea    0x29f4(%ebx),%eax
testb  $0x1,(%eax)
je     e848 <main+0xbb38>
lea    0x2a10(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   3290 <main+0x580>
test   %eax,%eax
je     e848 <main+0xbb38>
mov    0x8(%eax),%edx
cmpb   $0x0,(%edx)
je     e730 <main+0xba20>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   9630 <main+0x6920>
mov    (%esi),%edi
test   %edi,%edi
je     e73a <main+0xba2a>
lea    0x0(%esi),%esi
lea    0x2a14(%ebx),%eax
movl   $0x0,(%esi)
mov    (%eax),%ebp
jmp    e741 <main+0xba31>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x2a10(%ebx),%eax
lea    -0x6ac(%ebx),%edi
movl   $0x10,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   d360 <main+0xa650>
test   %eax,%eax
je     e79c <main+0xba8c>
sub    %edi,%eax
sar    $0x2,%eax
lea    0xd(%eax),%ebp
lea    0x2a14(%ebx),%eax
mov    %ebp,(%eax)
lea    0x0(%esi),%esi
lea    0x29f4(%ebx),%eax
movl   $0x0,(%eax)
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xd5c4,%ebx
sub    $0x10,%esp
lea    0x29f8(%ebx),%eax
mov    (%eax),%esi
cmpl   $0x17,(%esi)
je     e8b0 <main+0xbba0>
call   e700 <main+0xb9f0>
cmp    $0xc,%eax
jne    e952 <main+0xbc42>
mov    (%esi),%eax
cmp    $0x17,%eax
je     e8c0 <main+0xbbb0>
sub    $0x15,%eax
cmp    $0x1,%eax
jbe    e928 <main+0xbc18>
call   e120 <main+0xb410>
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x29f4(%ebx),%eax
movl   $0x8,(%eax)
jmp    e87e <main+0xbb6e>
xchg   %ax,%ax
lea    0x2a18(%ebx),%eax
mov    (%eax),%edi
lea    0x2a04(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     e920 <main+0xbc10>
lea    0x2a10(%ebx),%esi
movl   $0x0,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8130 <main+0x5420>
mov    (%esi),%eax
movl   $0x0,(%edi)
mov    %eax,0x8(%edi)
lea    0x2a0c(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    e90a <main+0xbbfa>
jmp    e94b <main+0xbc3b>
lea    0x0(%esi),%esi
mov    %eax,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    e908 <main+0xbbf8>
mov    %edi,(%edx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x18,(%esi)
jmp    e8d4 <main+0xbbc4>
lea    0x2a10(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   e250 <main+0xb540>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %edi,(%eax)
jmp    e8a7 <main+0xbb97>
or     $0xffffffff,%eax
call   e1b0 <main+0xb4a0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xd4c3,%ebx
sub    $0x4c,%esp
movl   $0x0,0x30(%esp)
lea    0x1e8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
call   e700 <main+0xb9f0>
sub    $0x7,%eax
cmp    $0x14,%eax
ja     eec5 <main+0xc1b5>
mov    -0x6bd0(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
xor    %eax,%eax
mov    $0x1c,%esi
call   f1f0 <main+0xc4e0>
mov    %eax,0x18(%esp)
call   e700 <main+0xb9f0>
cmp    %esi,%eax
jne    f0c1 <main+0xc3b1>
lea    0x29f4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
lea    0x30(%esp),%esi
lea    0x29f8(%ebx),%edi
movl   $0x3,(%eax)
jmp    e9ec <main+0xbcdc>
nop
mov    (%edi),%eax
mov    %eax,(%esi)
lea    0x4(%eax),%esi
call   e860 <main+0xbb50>
call   e700 <main+0xb9f0>
cmp    $0xb,%eax
je     e9e0 <main+0xbcd0>
lea    0x29f0(%ebx),%eax
addl   $0x1,(%eax)
movl   $0x0,(%esi)
mov    0x30(%esp),%esi
test   %esi,%esi
je     eef0 <main+0xc1e0>
mov    0x18(%esp),%edi
cmpl   $0x4,(%edi)
je     ea3a <main+0xbd2a>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    0x1c(%esp),%edx
movl   $0x2,(%eax)
mov    %edx,0x4(%eax)
mov    %edi,0x8(%eax)
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    %esi,0xc(%eax)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x10,(%esp)
mov    $0x8,%esi
call   c170 <main+0x9460>
mov    0x1c(%esp),%edx
mov    %eax,%edi
mov    %eax,0x18(%esp)
movl   $0x4,(%eax)
mov    %edx,0x4(%eax)
xor    %eax,%eax
call   f1f0 <main+0xc4e0>
movl   $0x0,0xc(%edi)
mov    %eax,0x8(%edi)
jmp    e9b2 <main+0xbca2>
lea    0x29f0(%ebx),%eax
mov    $0x1,%edi
xor    %esi,%esi
movl   $0x0,0x34(%esp)
lea    0x34(%esp),%ebp
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
addl   $0x1,(%eax)
lea    0x1e8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x18(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x29f4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x14(%esp),%eax
mov    %edi,(%eax)
call   e700 <main+0xb9f0>
cmp    $0xb,%eax
je     f01b <main+0xc30b>
cmp    $0xc,%eax
je     efe0 <main+0xc2d0>
cmp    $0x7,%eax
je     ef49 <main+0xc239>
lea    0x29f0(%ebx),%eax
addl   $0x1,(%eax)
mov    0xc(%esp),%eax
movl   $0x0,0x0(%ebp)
movl   $0x0,(%eax)
mov    0x10(%esp),%eax
movl   $0x0,(%eax)
movl   $0x14,(%esp)
call   c170 <main+0x9460>
mov    0x18(%esp),%edx
movl   $0x0,(%eax)
mov    %edx,0x4(%eax)
mov    0x34(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x38(%esp),%edx
mov    %edx,0x8(%eax)
mov    0x3c(%esp),%edx
mov    %edx,0x10(%eax)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    0x1c(%esp),%edx
movl   $0xc,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x18(%esp)
call   e700 <main+0xb9f0>
cmp    $0xc,%eax
jne    f0b7 <main+0xc3a7>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    0x18(%esp),%edx
lea    0x2a10(%ebx),%ebp
lea    0x2a08(%ebx),%edi
mov    %eax,0x8(%edx)
movl   $0xf,(%eax)
mov    0x0(%ebp),%edx
movl   $0x0,0x4(%eax)
mov    %edx,0x8(%eax)
mov    (%edi),%edx
mov    %edx,0xc(%eax)
lea    0x29f4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x7,(%eax)
call   e700 <main+0xb9f0>
cmp    $0x17,%eax
jne    f098 <main+0xc388>
mov    0x18(%esp),%eax
lea    0xc(%eax),%esi
mov    0x14(%esp),%eax
movl   $0x6,(%eax)
call   e700 <main+0xb9f0>
cmp    $0x13,%eax
je     eca9 <main+0xbf99>
lea    0x2a14(%ebx),%eax
cmpl   $0x7,(%eax)
je     eed0 <main+0xc1c0>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    %eax,(%esi)
mov    %eax,0x10(%esp)
add    $0x8,%eax
movl   $0xd,-0x8(%eax)
mov    %eax,0xc(%esp)
jmp    ec34 <main+0xbf24>
lea    0x0(%esi),%esi
lea    0x4(%esi),%eax
mov    %eax,0xc(%esp)
call   e700 <main+0xb9f0>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    0xc(%esp),%eax
mov    %esi,(%eax)
movl   $0xf,(%esi)
mov    0x0(%ebp),%eax
mov    %eax,0x8(%esi)
mov    (%edi),%eax
mov    %eax,0xc(%esi)
call   e700 <main+0xb9f0>
cmp    $0x6,%eax
je     ec28 <main+0xbf18>
lea    0x2a14(%ebx),%eax
movl   $0x0,0x4(%esi)
cmpl   $0x8,(%eax)
jne    f08e <main+0xc37e>
mov    $0x2,%eax
call   f1f0 <main+0xc4e0>
mov    0x10(%esp),%ecx
lea    0x4(%ecx),%esi
mov    %eax,0xc(%ecx)
mov    0x14(%esp),%eax
movl   $0x6,(%eax)
call   e700 <main+0xb9f0>
cmp    $0x13,%eax
jne    eeda <main+0xc1ca>
movl   $0x0,(%esi)
jmp    e9c9 <main+0xbcb9>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    %eax,%edi
mov    %eax,0x18(%esp)
movl   $0x8,(%eax)
xor    %eax,%eax
call   f1f0 <main+0xc4e0>
mov    %eax,0x4(%edi)
call   e700 <main+0xb9f0>
cmp    $0x18,%eax
jne    f079 <main+0xc369>
xor    %eax,%eax
call   f1f0 <main+0xc4e0>
mov    0x18(%esp),%edx
mov    %edx,%edi
mov    %eax,0x8(%edx)
jmp    ed33 <main+0xc023>
xchg   %ax,%ax
movl   $0x10,(%esp)
call   c170 <main+0x9460>
mov    %eax,0xc(%edi)
mov    %eax,%esi
movl   $0x8,(%eax)
xor    %eax,%eax
call   f1f0 <main+0xc4e0>
mov    %eax,0x4(%esi)
call   e700 <main+0xb9f0>
cmp    $0x18,%eax
jne    f079 <main+0xc369>
xor    %al,%al
mov    %esi,%edi
call   f1f0 <main+0xc4e0>
mov    %eax,0x8(%esi)
call   e700 <main+0xb9f0>
cmp    $0x11,%eax
je     ecf8 <main+0xbfe8>
lea    0x2a14(%ebx),%eax
cmpl   $0x12,(%eax)
je     f065 <main+0xc355>
lea    0x29f0(%ebx),%eax
mov    $0x14,%esi
movl   $0x0,0xc(%edi)
addl   $0x1,(%eax)
jmp    e9b2 <main+0xbca2>
movl   $0xc,(%esp)
call   c170 <main+0x9460>
mov    %eax,%edi
mov    %eax,0x18(%esp)
lea    0x2a14(%ebx),%eax
cmpl   $0x1a,(%eax)
setne  %al
movzbl %al,%eax
add    $0x9,%eax
mov    %eax,(%edi)
xor    %eax,%eax
call   f1f0 <main+0xc4e0>
mov    %eax,0x4(%edi)
call   e700 <main+0xb9f0>
cmp    $0xf,%eax
jne    f0ad <main+0xc39d>
xor    %eax,%eax
mov    $0x10,%esi
call   f1f0 <main+0xc4e0>
mov    0x18(%esp),%edx
mov    %eax,0x8(%edx)
jmp    e9b2 <main+0xbca2>
call   e700 <main+0xb9f0>
cmp    $0xc,%eax
jne    f0a2 <main+0xc392>
lea    0x2a04(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
jne    f0a2 <main+0xc392>
lea    0x2a10(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   e2d0 <main+0xb5c0>
cmpb   $0x0,(%eax)
jne    f0a2 <main+0xc392>
movl   $0x14,(%esp)
call   c170 <main+0x9460>
mov    0x1c(%esp),%ecx
movl   $0xb,(%eax)
mov    %eax,%edx
mov    %ecx,0x4(%eax)
mov    %eax,0x18(%esp)
mov    0x0(%ebp),%eax
mov    %eax,0x10(%edx)
lea    0x29f4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x7,(%eax)
call   e700 <main+0xb9f0>
cmp    $0x17,%eax
jne    eefc <main+0xc1ec>
lea    0x2c(%esp),%esi
lea    0x2a08(%ebx),%edi
jmp    ee6a <main+0xc15a>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x10,(%esp)
call   c170 <main+0x9460>
movl   $0xf,(%eax)
mov    0x0(%ebp),%edx
mov    %edx,0x8(%eax)
mov    (%edi),%edx
mov    %edx,0xc(%eax)
mov    %eax,(%esi)
lea    0x4(%eax),%esi
call   e700 <main+0xb9f0>
cmp    $0xc,%eax
je     ee48 <main+0xc138>
movl   $0x0,(%esi)
mov    0x18(%esp),%edx
mov    0x2c(%esp),%eax
mov    %eax,0x8(%edx)
lea    0x2a14(%ebx),%eax
mov    (%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
ja     eec5 <main+0xc1b5>
mov    0x14(%esp),%eax
movl   $0x7,(%eax)
call   e700 <main+0xb9f0>
cmp    $0xf,%eax
jne    f0ad <main+0xc39d>
xor    %al,%al
mov    $0x10,%esi
call   f1f0 <main+0xc4e0>
mov    0x18(%esp),%edx
mov    %eax,0xc(%edx)
jmp    e9b2 <main+0xbca2>
mov    $0xffffffff,%eax
call   e1b0 <main+0xb4a0>
nop
call   e700 <main+0xb9f0>
jmp    ec03 <main+0xbef3>
cmp    $0x9,%eax
lea    0x0(%esi),%esi
je     ebdc <main+0xbecc>
mov    $0x9,%eax
call   e1b0 <main+0xb4a0>
mov    0x18(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x10,(%esp)
call   c170 <main+0x9460>
lea    -0x6f01(%ebx),%edx
mov    %edx,0x8(%eax)
mov    0x18(%esp),%edx
movl   $0xf,(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x4(%eax)
mov    %eax,0x8(%edx)
lea    0x2a14(%ebx),%eax
cmpl   $0x2,(%eax)
je     ee95 <main+0xc185>
lea    0x29f0(%ebx),%eax
addl   $0x1,(%eax)
jmp    ee95 <main+0xc185>
mov    0x34(%esp),%eax
test   %eax,%eax
je     eafb <main+0xbdeb>
add    $0x4,%eax
cmp    %eax,%ebp
jne    eafb <main+0xbdeb>
mov    0x38(%esp),%edx
test   %edx,%edx
jne    eafb <main+0xbdeb>
mov    0x3c(%esp),%eax
test   %eax,%eax
jne    eafb <main+0xbdeb>
call   e700 <main+0xb9f0>
cmp    $0x8,%eax
jne    f08e <main+0xc37e>
mov    0x8(%esi),%edi
mov    %edi,(%esp)
call   e2d0 <main+0xb5c0>
cmpb   $0x0,(%eax)
jne    f083 <main+0xc373>
mov    %edi,(%esp)
call   65d0 <main+0x38c0>
test   %eax,%eax
je     efb0 <main+0xc2a0>
testb  $0x1,0x8(%eax)
jne    f083 <main+0xc373>
mov    0x14(%esp),%eax
movl   $0xe,(%esi)
movl   $0x7,(%eax)
lea    0x1e8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esi)
call   e960 <main+0xbc50>
mov    %eax,0xc(%esi)
mov    %esi,%eax
jmp    ea41 <main+0xbd31>
lea    0x0(%esi),%esi
movl   $0x10,(%esp)
call   c170 <main+0x9460>
test   %edi,%edi
movl   $0xf,(%eax)
mov    %eax,%esi
lea    0x2a10(%ebx),%eax
mov    (%eax),%edx
lea    0x2a08(%ebx),%eax
mov    %edx,0x8(%esi)
mov    (%eax),%eax
mov    %eax,0xc(%esi)
jne    f03a <main+0xc32a>
mov    %esi,0x0(%ebp)
xor    %edi,%edi
lea    0x4(%esi),%ebp
jmp    ead5 <main+0xbdc5>
lea    0x29f8(%ebx),%eax
mov    (%eax),%esi
mov    0x10(%esp),%eax
mov    %esi,(%eax)
lea    0x4(%esi),%eax
mov    %eax,0x10(%esp)
call   e860 <main+0xbb50>
jmp    ead5 <main+0xbdc5>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   e2d0 <main+0xb5c0>
mov    0x1c(%esp),%edx
cmp    %eax,%edx
je     f00e <main+0xc2fe>
cmpb   $0x3d,(%eax)
jne    f00e <main+0xc2fe>
mov    0xc(%esp),%eax
mov    %esi,(%eax)
lea    0x4(%esi),%eax
mov    %eax,0xc(%esp)
jmp    ead5 <main+0xbdc5>
xor    %eax,%eax
mov    $0x14,%esi
call   f1f0 <main+0xc4e0>
mov    %eax,0xc(%edi)
jmp    e9b2 <main+0xbca2>
mov    $0x18,%eax
call   e1b0 <main+0xb4a0>
lea    -0x6d00(%ebx),%eax
call   e170 <main+0xb460>
mov    $0x8,%eax
call   e1b0 <main+0xb4a0>
mov    $0x17,%eax
call   e1b0 <main+0xb4a0>
lea    -0x6d16(%ebx),%eax
call   e170 <main+0xb460>
mov    $0xf,%eax
call   e1b0 <main+0xb4a0>
mov    $0xc,%eax
call   e1b0 <main+0xb4a0>
mov    %esi,%eax
call   e1b0 <main+0xb4a0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xcd53,%ebx
sub    $0x1c,%esp
call   e700 <main+0xb9f0>
cmp    $0xd,%eax
je     f140 <main+0xc430>
lea    0x29f0(%ebx),%edi
movl   $0x0,0x4(%esp)
addl   $0x1,(%edi)
call   e960 <main+0xbc50>
mov    %eax,%esi
call   e700 <main+0xb9f0>
cmp    $0x6,%eax
je     f160 <main+0xc450>
mov    0x4(%esp),%eax
addl   $0x1,(%edi)
test   %eax,%eax
je     f130 <main+0xc420>
movl   $0x8,(%esp)
call   c170 <main+0x9460>
mov    %esi,0x4(%eax)
mov    %eax,%esi
movl   $0x19,(%eax)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x29f4(%ebx),%eax
movl   $0x1,0x4(%esp)
lea    0x29f0(%ebx),%edi
movl   $0x3,(%eax)
jmp    f0fd <main+0xc3ed>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc,(%esp)
call   c170 <main+0x9460>
movl   $0x1,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x8,(%esp)
mov    %eax,0x8(%esp)
call   c170 <main+0x9460>
mov    %edi,0xc(%esp)
mov    %eax,%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edi
mov    %ebp,0x8(%eax)
lea    0x29f4(%ebx),%eax
mov    %esi,0x4(%ebp)
mov    %eax,%ebp
jmp    f1aa <main+0xc49a>
lea    0x0(%esi),%esi
mov    %esi,%edi
movl   $0x8,(%esp)
call   c170 <main+0x9460>
movl   $0x7,0x0(%ebp)
mov    %eax,%esi
call   e960 <main+0xbc50>
mov    %eax,0x4(%esi)
mov    %esi,(%edi)
call   e700 <main+0xb9f0>
cmp    $0x6,%eax
je     f1a8 <main+0xc498>
movl   $0x0,(%esi)
mov    0xc(%esp),%edi
mov    0x8(%esp),%esi
jmp    f10e <main+0xc3fe>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xcc33,%ebx
sub    $0x2c,%esp
cmp    $0x2,%eax
mov    %eax,0x18(%esp)
lea    0x29f4(%ebx),%ecx
movl   $0x7,(%ecx)
je     f3ac <main+0xc69c>
lea    0x29f0(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x0,0x14(%esp)
call   f0d0 <main+0xc3c0>
mov    %eax,%esi
jmp    f26b <main+0xc55b>
xchg   %ax,%ax
cmp    $0x5,%eax
jne    f280 <main+0xc570>
mov    $0x6,%ebp
lea    0x29f4(%ebx),%eax
movl   $0x7,(%eax)
call   f0d0 <main+0xc3c0>
movl   $0xc,(%esp)
mov    %eax,%edi
call   c170 <main+0x9460>
mov    %esi,0x4(%eax)
mov    %eax,%esi
mov    %ebp,(%eax)
mov    %edi,0x8(%eax)
call   e700 <main+0xb9f0>
cmp    $0x4,%eax
jne    f238 <main+0xc528>
mov    $0x5,%ebp
jmp    f242 <main+0xc532>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %esi,%ebp
addl   $0x1,(%eax)
call   e700 <main+0xb9f0>
cmp    $0x3,%eax
mov    %eax,%edx
je     f350 <main+0xc640>
mov    0x14(%esp),%edi
mov    %esi,%ebp
test   %edi,%edi
je     f2c5 <main+0xc5b5>
movl   $0xc,(%esp)
mov    %edx,0x14(%esp)
call   c170 <main+0x9460>
mov    0x14(%esp),%edx
mov    %eax,%ebp
movl   $0x7,(%eax)
mov    %edi,0x4(%ebp)
mov    %esi,0x8(%ebp)
cmp    $0x1,%edx
je     f3d8 <main+0xc6c8>
jg     f300 <main+0xc5f0>
test   %edx,%edx
jne    f388 <main+0xc678>
lea    0x2a0c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     f3ef <main+0xc6df>
call   10300 <main+0xd5f0>
mov    0x10(%esp),%eax
addl   $0x1,(%eax)
mov    %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x3,%edx
jg     f388 <main+0xc678>
call   e700 <main+0xb9f0>
cmp    $0x1,%eax
je     f3d8 <main+0xc6c8>
mov    0x10(%esp),%eax
addl   $0x1,(%eax)
lea    0x29f4(%ebx),%eax
movl   $0x7,(%eax)
call   e700 <main+0xb9f0>
mov    0x10(%esp),%ecx
addl   $0x1,(%ecx)
cmpb   $0x0,-0x6b3a(%ebx,%eax,1)
jne    f3e8 <main+0xc6d8>
mov    %ebp,0x14(%esp)
jmp    f22d <main+0xc51d>
lea    0x0(%esi),%esi
mov    (%esi),%eax
cmp    $0x1,%eax
je     f3a0 <main+0xc690>
cmp    $0x2,%eax
je     f37c <main+0xc66c>
movl   $0x10,(%esp)
mov    %edx,0x1c(%esp)
call   c170 <main+0x9460>
mov    0x1c(%esp),%edx
mov    %eax,%esi
mov    %ebp,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x3,(%esi)
jmp    f299 <main+0xc589>
nop
cmpl   $0x1,0x18(%esp)
jne    f2ed <main+0xc5dd>
mov    $0xffffffff,%eax
call   e1b0 <main+0xb4a0>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esi)
jmp    f299 <main+0xc589>
call   e700 <main+0xb9f0>
lea    0x29f0(%ebx),%ecx
addl   $0x1,(%ecx)
cmpb   $0x0,-0x6b3a(%ebx,%eax,1)
mov    %ecx,0x10(%esp)
je     f225 <main+0xc515>
xor    %eax,%eax
jmp    f2f6 <main+0xc5e6>
nop
lea    0x0(%esi,%eiz,1),%esi
call   10300 <main+0xd5f0>
cmpl   $0x1,0x18(%esp)
jne    f31e <main+0xc60e>
mov    %ebp,%eax
jmp    f2f6 <main+0xc5e6>
call   9610 <main+0x6900>
jmp    f2ed <main+0xc5dd>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ecx
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xca1f,%ebx
sub    $0x6c,%esp
mov    0x8(%ebp),%eax
mov    %edx,-0x2c(%ebp)
movl   $0x0,-0x20(%ebp)
movl   $0x0,-0x44(%ebp)
mov    %eax,-0x30(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x5e4c(%ebx),%eax
movl   $0x0,-0x3c(%ebp)
movl   $0x0,-0x54(%ebp)
movl   $0x0,-0x34(%ebp)
add    $0x82,%eax
cmp    %eax,%edx
sete   %al
movzbl %al,%eax
mov    %eax,-0x38(%ebp)
lea    0x1fc(%ebx),%eax
movl   $0x0,-0x40(%ebp)
mov    (%eax),%esi
cmpl   $0x1,-0x30(%ebp)
jbe    f526 <main+0xc816>
cmp    $0xffffff7f,%ecx
je     fe90 <main+0xd180>
mov    0xc(%ebp),%eax
test   %eax,%eax
jne    f9f0 <main+0xcce0>
lea    0x1fc(%ebx),%edi
mov    %esi,%eax
sub    (%edi),%eax
mov    -0x30(%ebp),%edi
mov    %eax,-0x48(%ebp)
jmp    f4c2 <main+0xc7b2>
lea    0x0(%esi),%esi
mov    %cl,(%esi)
movsbl (%edi),%edx
add    $0x1,%esi
test   %dl,%dl
je     f4e8 <main+0xc7d8>
cmp    %ecx,%edx
jne    f4fd <main+0xc7ed>
call   9a90 <main+0x6d80>
add    $0x1,%edi
mov    %eax,%ecx
lea    0x1f8(%ebx),%eax
cmp    (%eax),%esi
jne    f4a8 <main+0xc798>
mov    %ecx,-0x4c(%ebp)
call   c4a0 <main+0x9790>
mov    -0x4c(%ebp),%ecx
mov    %eax,%esi
mov    %cl,(%esi)
movsbl (%edi),%edx
add    $0x1,%esi
test   %dl,%dl
jne    f4b4 <main+0xc7a4>
lea    0x0(%esi),%esi
cmp    $0xffffff7e,%ecx
je     fc18 <main+0xcf08>
cmp    $0xa,%ecx
je     fc18 <main+0xcf08>
lea    0x1fc(%ebx),%eax
mov    (%eax),%edx
mov    -0x48(%ebp),%eax
lea    0x1(%edx,%eax,1),%eax
sub    %eax,%esi
je     f521 <main+0xc811>
shr    $0x1f,%ecx
mov    %ecx,%edi
movsbl -0x1(%eax),%ecx
sub    %edi,%esi
jne    fd80 <main+0xd070>
mov    -0x48(%ebp),%esi
add    %edx,%esi
mov    %ecx,%edi
lea    0x1f8(%ebx),%eax
mov    (%eax),%edx
sub    %esi,%edx
cmp    $0x3,%edx
jbe    f5ce <main+0xc8be>
mov    -0x2c(%ebp),%eax
cmpb   $0xe,(%eax,%edi,1)
ja     f5f0 <main+0xc8e0>
movzbl (%eax,%edi,1),%eax
mov    -0x6b7c(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    -0x58(%ebp),%edi
mov    %esi,-0x50(%ebp)
call   9610 <main+0x6900>
lea    0x1fc(%ebx),%eax
mov    -0x50(%ebp),%esi
mov    -0x5c(%ebp),%edx
mov    (%eax),%eax
mov    %esi,%ecx
cmp    $0x1,%esi
mov    %cl,(%eax,%edx,1)
je     f586 <main+0xc876>
addl   $0x1,-0x34(%ebp)
cmpl   $0x1,-0x38(%ebp)
sbbl   $0xffffffff,-0x44(%ebp)
lea    0x1f8(%ebx),%eax
cmp    (%eax),%edi
je     100d8 <main+0xd3c8>
movb   $0x3d,(%edi)
lea    0x1(%edi),%esi
lea    0x0(%esi),%esi
lea    0x734(%ebx),%edx
subl   $0x1,(%edx)
js     f612 <main+0xc902>
lea    0x73c(%ebx),%edx
mov    (%edx),%eax
lea    0x1(%eax),%ecx
mov    %ecx,(%edx)
movsbl (%eax),%edi
lea    0x1f8(%ebx),%eax
mov    (%eax),%edx
sub    %esi,%edx
cmp    $0x3,%edx
ja     f53b <main+0xc82b>
mov    %esi,0x4(%esp)
movl   $0x4,(%esp)
call   c4d0 <main+0x97c0>
mov    %eax,%esi
mov    -0x2c(%ebp),%eax
cmpb   $0xe,(%eax,%edi,1)
jbe    f548 <main+0xc838>
lea    0x0(%esi),%esi
mov    -0x34(%ebp),%eax
test   %eax,%eax
je     f620 <main+0xc910>
cmp    $0xffffff7f,%edi
je     f5a0 <main+0xc890>
mov    %edi,%eax
add    $0x1,%esi
mov    %al,-0x1(%esi)
lea    0x734(%ebx),%edx
subl   $0x1,(%edx)
jns    f5ab <main+0xc89b>
call   97c0 <main+0x6ab0>
mov    %eax,%edi
jmp    f528 <main+0xc818>
xchg   %ax,%ax
lea    -0x608c(%ebx),%eax
mov    %edi,%ecx
add    $0x82,%eax
cmp    %eax,-0x2c(%ebp)
je     10223 <main+0xd513>
lea    -0x5d2c(%ebx),%eax
add    $0x82,%eax
cmp    %eax,-0x2c(%ebp)
je     f651 <main+0xc941>
mov    -0x30(%ebp),%eax
test   %eax,%eax
je     10243 <main+0xd533>
mov    -0x34(%ebp),%eax
test   %eax,%eax
jne    10238 <main+0xd528>
lea    0x1fc(%ebx),%eax
lea    0x1(%esi),%edi
movb   $0x0,(%esi)
mov    (%eax),%edx
mov    -0x30(%ebp),%eax
sub    %edx,%edi
test   %eax,%eax
je     fa50 <main+0xcd40>
lea    0x2a04(%ebx),%eax
mov    -0x40(%ebp),%ecx
mov    %edx,-0x2c(%ebp)
mov    %ecx,(%eax)
mov    -0x20(%ebp),%ecx
lea    0x2a08(%ebx),%eax
mov    %ecx,(%eax)
mov    %edi,(%esp)
call   c170 <main+0x9460>
lea    0x2a10(%ebx),%eax
mov    -0x2c(%ebp),%edx
mov    %edx,(%eax)
lea    0x2a14(%ebx),%eax
movl   $0xc,(%eax)
mov    $0xc,%eax
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    10206 <main+0xd4f6>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,-0x4c(%ebp)
lea    0x1fc(%ebx),%eax
mov    %esi,%edi
movl   $0x0,-0x48(%ebp)
mov    (%eax),%edx
sub    %edx,%edi
jne    fcb0 <main+0xcfa0>
mov    -0x4c(%ebp),%eax
test   %eax,%eax
je     f770 <main+0xca60>
lea    0x29fc(%ebx),%esi
mov    %edi,-0x50(%ebp)
mov    %edx,%edi
mov    (%esi),%eax
test   %eax,%eax
jne    fc68 <main+0xcf58>
call   9a50 <main+0x6d40>
cmp    $0xa,%eax
je     fc80 <main+0xcf70>
jle    fc48 <main+0xcf38>
cmp    $0x5c,%eax
je     fcf8 <main+0xcfe8>
cmp    $0x60,%eax
lea    0x0(%esi,%eiz,1),%esi
jne    fd50 <main+0xd040>
lea    0x1f8(%ebx),%eax
mov    %edi,%edx
mov    -0x50(%ebp),%edi
cmp    (%eax),%edx
je     ffaf <main+0xd29f>
lea    0x1fc(%ebx),%eax
add    $0x1,%edx
movb   $0x0,-0x1(%edx)
mov    (%eax),%eax
cmp    %eax,%edx
je     f770 <main+0xca60>
sub    %eax,%edx
mov    %edx,(%esp)
call   c170 <main+0x9460>
mov    %eax,(%esp)
call   9c10 <main+0x6f00>
xchg   %ax,%ax
mov    -0x20(%ebp),%esi
test   %esi,%esi
jne    f782 <main+0xca72>
jmp    fee7 <main+0xd1d7>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    f780 <main+0xca70>
movl   $0x8,(%esp)
call   c170 <main+0x9460>
mov    -0x4c(%ebp),%edx
test   %edx,%edx
mov    %eax,(%esi)
movl   $0x0,(%eax)
jne    fa98 <main+0xcd88>
mov    $0x2,%eax
call   f1f0 <main+0xc4e0>
mov    %eax,-0x4c(%ebp)
call   e700 <main+0xb9f0>
cmp    $0x8,%eax
jne    1022e <main+0xd51e>
mov    (%esi),%eax
mov    -0x4c(%ebp),%ecx
mov    %ecx,0x4(%eax)
lea    0x1f4(%ebx),%eax
cmp    (%eax),%edi
jb     f7e7 <main+0xcad7>
lea    0x0(%esi,%eiz,1),%esi
call   c3b0 <main+0x96a0>
lea    0x1f4(%ebx),%eax
cmp    (%eax),%edi
jae    f7d8 <main+0xcac8>
lea    0x1fc(%ebx),%eax
mov    (%eax),%edx
mov    -0x48(%ebp),%eax
test   %eax,%eax
je     f811 <main+0xcb01>
mov    -0x48(%ebp),%eax
mov    %edx,(%esp)
mov    %edi,0x8(%esp)
mov    %edx,-0x48(%ebp)
mov    %eax,0x4(%esp)
call   27b0 <memcpy@plt>
mov    -0x48(%ebp),%edx
add    %edi,%edx
lea    0x1(%edx),%esi
movb   $0x84,(%edx)
jmp    f5a0 <main+0xc890>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5f6c(%ebx),%eax
add    $0x82,%eax
mov    %eax,-0x2c(%ebp)
mov    -0x30(%ebp),%eax
test   %eax,%eax
jne    f5a0 <main+0xc890>
movb   $0x88,(%esi)
add    $0x1,%esi
jmp    f5a0 <main+0xc890>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x38(%ebp),%eax
test   %eax,%eax
je     fa38 <main+0xcd28>
movb   $0x81,(%esi)
mov    %edi,%eax
add    $0x1,%esi
mov    %al,(%esi)
add    $0x1,%esi
jmp    f607 <main+0xc8f7>
lea    0x0(%esi),%esi
mov    -0x3c(%ebp),%eax
test   %eax,%eax
je     feb2 <main+0xd1a2>
mov    %edi,%eax
add    $0x1,%esi
mov    %al,-0x1(%esi)
subl   $0x1,-0x3c(%ebp)
jmp    f5a0 <main+0xc890>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
add    $0x1,%esi
addl   $0x1,-0x3c(%ebp)
mov    %al,-0x1(%esi)
jmp    f5a0 <main+0xc890>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x34(%ebp),%eax
test   %eax,%eax
je     f5ff <main+0xc8ef>
subl   $0x1,-0x34(%ebp)
cmpl   $0x1,-0x44(%ebp)
movb   $0x83,(%esi)
adcl   $0xffffffff,-0x44(%ebp)
add    $0x1,%esi
jmp    f5a0 <main+0xc890>
lea    0x0(%esi),%esi
call   9a50 <main+0x6d40>
mov    %eax,%edx
lea    0x29f4(%ebx),%eax
testb  $0x8,(%eax)
jne    f8e3 <main+0xcbd3>
cmp    $0xffffff80,%edx
jge    fae0 <main+0xcdd0>
movb   $0x24,(%esi)
lea    0x1(%esi),%edi
call   9610 <main+0x6900>
mov    %edi,%esi
jmp    f5a0 <main+0xc890>
lea    0x0(%esi),%esi
mov    -0x34(%ebp),%eax
test   %eax,%eax
je     fa18 <main+0xcd08>
mov    -0x44(%ebp),%edx
test   %edx,%edx
jne    f91f <main+0xcc0f>
lea    -0x5d2c(%ebx),%eax
movl   $0x0,-0x38(%ebp)
add    $0x82,%eax
mov    %eax,-0x2c(%ebp)
addl   $0x1,-0x40(%ebp)
jmp    f82e <main+0xcb1e>
call   9a90 <main+0x6d80>
cmp    $0xffffff7e,%eax
je     fe9c <main+0xd18c>
cmp    $0xa,%eax
je     fd58 <main+0xd048>
mov    -0x38(%ebp),%edi
test   %edi,%edi
je     f970 <main+0xcc60>
cmp    $0x5c,%eax
je     f970 <main+0xcc60>
cmp    $0x60,%eax
je     f970 <main+0xcc60>
cmp    $0x24,%eax
je     f970 <main+0xcc60>
cmp    $0x22,%eax
jne    fded <main+0xd0dd>
mov    -0x30(%ebp),%ecx
test   %ecx,%ecx
jne    fded <main+0xd0dd>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x81,(%esi)
add    $0x2,%esi
mov    %al,-0x1(%esi)
addl   $0x1,-0x40(%ebp)
jmp    f5a0 <main+0xc890>
lea    0x0(%esi),%esi
mov    %edi,%ecx
lea    -0x5d2c(%ebx),%edi
mov    %esi,%edx
lea    0x82(%edi),%eax
cmp    %eax,-0x2c(%ebp)
je     10217 <main+0xd507>
lea    0x1e8(%ebx),%eax
add    $0x1,%esi
mov    %cl,(%edx)
addl   $0x1,(%eax)
lea    0x2a00(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    fce8 <main+0xcfd8>
call   9a50 <main+0x6d40>
mov    %eax,%ecx
jmp    f472 <main+0xc762>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e4c(%ebx),%eax
movl   $0x1,-0x38(%ebp)
add    $0x82,%eax
mov    %eax,-0x2c(%ebp)
jmp    f82e <main+0xcb1e>
lea    0x0(%esi),%esi
cmp    $0x9,%ecx
jne    f493 <main+0xc783>
lea    0x0(%esi,%eiz,1),%esi
call   9a90 <main+0x6d80>
cmp    $0x9,%eax
je     fa00 <main+0xccf0>
mov    %eax,%ecx
jmp    f493 <main+0xc783>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x30(%ebp),%ecx
test   %ecx,%ecx
je     f903 <main+0xcbf3>
mov    %edi,%eax
add    $0x1,%esi
mov    %al,-0x1(%esi)
movl   $0x0,-0x34(%ebp)
jmp    f5a0 <main+0xc890>
nop
mov    -0x30(%ebp),%eax
test   %eax,%eax
je     f853 <main+0xcb43>
mov    %edi,%eax
add    $0x1,%esi
mov    %al,-0x1(%esi)
jmp    f607 <main+0xc8f7>
mov    %ecx,%eax
and    $0xfffffffd,%eax
cmp    $0x3c,%eax
jne    fa88 <main+0xcd78>
mov    -0x40(%ebp),%esi
test   %esi,%esi
jne    fa88 <main+0xcd78>
cmp    $0x2,%edi
jg     fa88 <main+0xcd78>
movzbl (%edx),%eax
mov    %al,-0x2c(%ebp)
mov    %eax,%esi
sub    $0x30,%eax
cmp    $0x9,%al
jbe    ff34 <main+0xd224>
mov    %esi,%eax
test   %al,%al
je     ff34 <main+0xd224>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,-0x2c(%ebp)
call   9610 <main+0x6900>
mov    -0x2c(%ebp),%edx
jmp    f677 <main+0xc967>
lea    0x2a00(%ebx),%ecx
mov    $0x2,%eax
mov    (%ecx),%edx
mov    %ecx,-0x4c(%ebp)
movl   $0x0,(%ecx)
mov    %edx,-0x50(%ebp)
call   f1f0 <main+0xc4e0>
mov    -0x50(%ebp),%edx
mov    -0x4c(%ebp),%ecx
mov    %edx,(%ecx)
mov    (%esi),%edx
mov    %eax,0x4(%edx)
call   9c90 <main+0x6f80>
lea    0x29f0(%ebx),%eax
movl   $0x0,(%eax)
jmp    f7dd <main+0xcacd>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7b,%edx
je     fb28 <main+0xce18>
cmp    $0x28,%edx
je     fb28 <main+0xce18>
cmp    $0x5f,%edx
mov    %edx,-0x48(%ebp)
je     ffeb <main+0xd2db>
call   2cc0 <__ctype_b_loc@plt>
mov    -0x48(%ebp),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x4,0x1(%eax,%ecx,2)
jne    fb28 <main+0xce18>
lea    -0x61ac(%ebx),%eax
movsbl %dl,%ecx
testb  $0x11,0x82(%ecx,%eax,1)
je     f8e3 <main+0xcbd3>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x28,%edx
je     ff00 <main+0xd1f0>
lea    0x1(%esi),%eax
mov    %eax,-0x5c(%ebp)
lea    0x1fc(%ebx),%eax
lea    0x2(%esi),%edi
movb   $0x82,(%esi)
mov    (%eax),%eax
sub    %eax,-0x5c(%ebp)
cmp    $0x7b,%edx
jne    1020b <main+0xd4fb>
call   9a50 <main+0x6d40>
movl   $0x0,-0x50(%ebp)
mov    %eax,%edx
cmp    $0x5f,%edx
je     10009 <main+0xd2f9>
mov    %edx,-0x4c(%ebp)
call   2cc0 <__ctype_b_loc@plt>
mov    -0x4c(%ebp),%edx
mov    %edi,-0x58(%ebp)
mov    %esi,-0x60(%ebp)
mov    -0x50(%ebp),%esi
mov    %edx,%edi
mov    %eax,-0x48(%ebp)
mov    (%eax),%eax
mov    %eax,%ecx
mov    %edi,%eax
movzbl %al,%eax
testb  $0x4,0x1(%ecx,%eax,2)
jne    fc02 <main+0xcef2>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%edi),%eax
cmp    $0x9,%eax
jbe    ffbb <main+0xd2ab>
lea    -0x61ac(%ebx),%ecx
mov    %edi,%eax
mov    %al,-0x4c(%ebp)
mov    %edi,%eax
movsbl %al,%eax
testb  $0x11,0x82(%eax,%ecx,1)
je     f557 <main+0xc847>
call   9a50 <main+0x6d40>
cmp    $0x23,%edi
jne    1001a <main+0xd30a>
test   %esi,%esi
jne    1001a <main+0xd30a>
cmp    $0x5f,%eax
je     fe08 <main+0xd0f8>
mov    -0x48(%ebp),%ecx
mov    (%ecx),%ecx
testb  $0x8,(%ecx,%eax,2)
je     10052 <main+0xd342>
mov    %eax,%edi
mov    $0xa,%si
mov    %edi,%eax
movzbl %al,%eax
testb  $0x4,0x1(%ecx,%eax,2)
je     fb98 <main+0xce88>
mov    %edi,%edx
mov    -0x58(%ebp),%edi
mov    %esi,-0x50(%ebp)
mov    %edx,%ecx
mov    -0x48(%ebp),%esi
jmp    fe17 <main+0xd107>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1e8(%ebx),%eax
mov    $0xffffff7e,%ecx
lea    0x2a00(%ebx),%edx
mov    -0x48(%ebp),%esi
addl   $0x1,(%eax)
mov    (%edx),%edx
lea    0x29fc(%ebx),%eax
mov    %edx,(%eax)
lea    0x1fc(%ebx),%eax
mov    (%eax),%edx
add    %edx,%esi
jmp    f526 <main+0xc816>
lea    0x82(%eax),%edx
cmp    $0x1,%edx
ja     fd50 <main+0xd040>
lea    -0x6cba(%ebx),%eax
call   e170 <main+0xb460>
lea    0x0(%esi),%esi
mov    $0x2,%eax
call   e3a0 <main+0xb690>
call   9a50 <main+0x6d40>
cmp    $0xa,%eax
jne    f71a <main+0xca0a>
lea    0x1e8(%ebx),%eax
mov    $0xa,%ecx
addl   $0x1,(%eax)
lea    0x2a00(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esi)
lea    0x1f8(%ebx),%eax
cmp    (%eax),%edi
je     10031 <main+0xd321>
mov    %cl,(%edi)
add    $0x1,%edi
jmp    f702 <main+0xc9f2>
lea    0x1e(%edi),%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1b(%esp),%eax
mov    %eax,-0x48(%ebp)
andl   $0xfffffff0,-0x48(%ebp)
mov    -0x48(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %edx,-0x50(%ebp)
mov    %eax,(%esp)
call   27b0 <memcpy@plt>
mov    -0x50(%ebp),%edx
jmp    f6f0 <main+0xc9e0>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2,%eax
call   e3a0 <main+0xb690>
jmp    f9bf <main+0xccaf>
nop
call   9a50 <main+0x6d40>
cmp    $0xa,%eax
mov    %eax,%ecx
je     fdc5 <main+0xd0b5>
cmp    $0x60,%eax
je     fd40 <main+0xd030>
cmp    $0x5c,%eax
je     fd40 <main+0xd030>
cmp    $0x24,%eax
je     100ae <main+0xd39e>
cmp    $0x22,%eax
xchg   %ax,%ax
jne    fd29 <main+0xd019>
mov    -0x38(%ebp),%eax
test   %eax,%eax
jne    fd40 <main+0xd030>
lea    0x1f8(%ebx),%eax
cmp    (%eax),%edi
je     101f4 <main+0xd4e4>
movb   $0x5c,(%edi)
add    $0x1,%edi
lea    0x0(%esi),%esi
cmp    $0xffffff80,%ecx
jge    fc98 <main+0xcf88>
jmp    fc57 <main+0xcf47>
xchg   %ax,%ax
mov    %eax,%ecx
jmp    fc98 <main+0xcf88>
nop
lea    0x1e8(%ebx),%eax
addl   $0x1,(%eax)
lea    0x2a00(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     f5a0 <main+0xc890>
mov    $0x2,%eax
call   e3a0 <main+0xb690>
jmp    f5a0 <main+0xc890>
lea    0x1f(%esi),%edx
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x1b(%esp),%edi
and    $0xfffffff0,%edi
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,-0x4c(%ebp)
call   2b40 <mempcpy@plt>
movb   $0x0,(%eax)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   9630 <main+0x6920>
lea    0x1fc(%ebx),%eax
mov    -0x4c(%ebp),%ecx
mov    (%eax),%edx
jmp    f521 <main+0xc811>
lea    0x1e8(%ebx),%eax
addl   $0x1,(%eax)
lea    0x2a00(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     f702 <main+0xc9f2>
mov    $0x2,%eax
call   e3a0 <main+0xb690>
jmp    f702 <main+0xc9f2>
cmp    $0x7d,%eax
jne    fdfd <main+0xd0ed>
mov    -0x34(%ebp),%edx
test   %edx,%edx
jne    f970 <main+0xcc60>
movb   $0x5c,(%esi)
add    $0x1,%esi
jmp    f970 <main+0xcc60>
mov    -0x58(%ebp),%edi
mov    %eax,%ecx
mov    -0x48(%ebp),%esi
movl   $0xa,-0x50(%ebp)
lea    0x1f8(%ebx),%eax
cmp    (%eax),%edi
je     fed5 <main+0xd1c5>
mov    %cl,(%edi)
add    $0x1,%edi
call   9a50 <main+0x6d40>
cmp    $0x5f,%eax
mov    %eax,%ecx
je     fe17 <main+0xd107>
movzbl %al,%edx
mov    (%esi),%eax
testb  $0x8,(%eax,%edx,2)
jne    fe17 <main+0xd107>
mov    -0x50(%ebp),%eax
test   %eax,%eax
jne    f55d <main+0xc84d>
cmp    $0x25,%ecx
je     10082 <main+0xd372>
cmp    $0x3a,%ecx
je     ff21 <main+0xd211>
cmp    $0x23,%ecx
je     1011e <main+0xd40e>
lea    -0x6b40(%ebx),%esi
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     f562 <main+0xc852>
sub    %esi,%eax
add    $0x1,%eax
or     %eax,-0x50(%ebp)
jmp    f562 <main+0xc852>
xchg   %ax,%ax
call   9a90 <main+0x6d80>
mov    %eax,%ecx
jmp    f488 <main+0xc778>
movb   $0x81,(%esi)
lea    0x2(%esi),%edi
movb   $0x5c,0x1(%esi)
mov    %edi,%esi
call   9610 <main+0x6900>
jmp    f5a0 <main+0xc890>
call   9a50 <main+0x6d40>
cmp    $0x29,%eax
jne    feef <main+0xd1df>
movb   $0x87,(%esi)
mov    -0x2c(%ebp),%eax
add    $0x1,%esi
subl   $0x1,-0x54(%ebp)
cmove  -0x64(%ebp),%eax
mov    %eax,-0x2c(%ebp)
jmp    f5a0 <main+0xc890>
mov    %ecx,-0x48(%ebp)
call   c4a0 <main+0x9790>
mov    -0x48(%ebp),%ecx
mov    %eax,%edi
jmp    fe25 <main+0xd115>
lea    -0x20(%ebp),%esi
jmp    f788 <main+0xca78>
call   9610 <main+0x6900>
add    $0x1,%esi
movb   $0x29,-0x1(%esi)
jmp    f5a0 <main+0xc890>
call   9a50 <main+0x6d40>
cmp    $0x28,%eax
je     100b8 <main+0xd3a8>
xchg   %ax,%ax
call   9610 <main+0x6900>
movl   $0x0,-0x4c(%ebp)
jmp    f6d7 <main+0xc9c7>
call   9a50 <main+0x6d40>
movl   $0x10,-0x50(%ebp)
mov    %eax,%ecx
jmp    fe67 <main+0xd157>
movl   $0x14,(%esp)
mov    %ecx,-0x30(%ebp)
call   c170 <main+0x9460>
mov    -0x30(%ebp),%ecx
cmp    $0x3e,%ecx
mov    %eax,%esi
je     100ec <main+0xd3dc>
movl   $0x0,0x8(%eax)
call   9a50 <main+0x6d40>
cmp    $0x3c,%eax
je     10144 <main+0xd434>
cmp    $0x3e,%eax
je     10199 <main+0xd489>
cmp    $0x26,%eax
je     1018e <main+0xd47e>
movl   $0x12,(%esi)
call   9610 <main+0x6900>
movsbl -0x2c(%ebp),%eax
test   %al,%al
je     ff91 <main+0xd281>
sub    $0x30,%eax
mov    %eax,0x8(%esi)
lea    0x29f8(%ebx),%eax
mov    %esi,(%eax)
lea    0x2a14(%ebx),%eax
movl   $0xb,(%eax)
mov    $0xb,%eax
jmp    f6b4 <main+0xc9a4>
call   c4a0 <main+0x9790>
mov    %eax,%edx
jmp    f749 <main+0xca39>
mov    %edi,%edx
mov    -0x58(%ebp),%edi
mov    %esi,-0x50(%ebp)
mov    %edx,%ecx
lea    0x0(%esi),%esi
lea    0x1f8(%ebx),%eax
cmp    (%eax),%edi
je     10043 <main+0xd333>
mov    %cl,(%edi)
add    $0x1,%edi
call   9a50 <main+0x6d40>
mov    %eax,%ecx
lea    -0x30(%eax),%eax
cmp    $0x9,%eax
jbe    ffc8 <main+0xd2b8>
jmp    fe41 <main+0xd131>
lea    0x1(%esi),%eax
mov    %eax,-0x5c(%ebp)
lea    0x1fc(%ebx),%eax
lea    0x2(%esi),%edi
movb   $0x82,(%esi)
movl   $0x1,-0x50(%ebp)
mov    (%eax),%eax
sub    %eax,-0x5c(%ebp)
call   2cc0 <__ctype_b_loc@plt>
mov    $0x5f,%ecx
mov    %eax,%esi
jmp    fe17 <main+0xd107>
mov    %esi,-0x50(%ebp)
mov    %eax,%ecx
mov    -0x60(%ebp),%esi
movzbl -0x4c(%ebp),%eax
lea    0x3(%esi),%edi
mov    %al,0x2(%esi)
jmp    fe41 <main+0xd131>
mov    %ecx,-0x58(%ebp)
call   c4a0 <main+0x9790>
mov    -0x58(%ebp),%ecx
mov    %eax,%edi
jmp    fca6 <main+0xcf96>
mov    %ecx,-0x48(%ebp)
call   c4a0 <main+0x9790>
mov    -0x48(%ebp),%ecx
mov    %eax,%edi
jmp    ffd2 <main+0xd2c2>
mov    -0x60(%ebp),%esi
mov    %eax,-0x48(%ebp)
call   9a50 <main+0x6d40>
mov    -0x48(%ebp),%ecx
cmp    $0x7d,%eax
jne    10128 <main+0xd418>
cmp    $0x7d,%ecx
je     10128 <main+0xd418>
mov    %ecx,%eax
mov    $0x7d,%ecx
movl   $0xa,-0x50(%ebp)
jmp    10026 <main+0xd316>
mov    $0x6,%esi
mov    %ecx,-0x48(%ebp)
call   9a50 <main+0x6d40>
mov    -0x48(%ebp),%ecx
cmp    %eax,%ecx
jne    100d1 <main+0xd3c1>
add    $0x1,%esi
lea    0x1fc(%ebx),%eax
mov    %esi,%ecx
mov    -0x5c(%ebp),%edx
mov    (%eax),%eax
mov    %cl,(%eax,%edx,1)
jmp    f57a <main+0xc86a>
mov    $0x24,%ecx
jmp    fc98 <main+0xcf88>
addl   $0x1,-0x54(%ebp)
cmpl   $0x1,-0x54(%ebp)
je     101a4 <main+0xd494>
movb   $0x86,(%esi)
add    $0x1,%esi
jmp    f5a0 <main+0xc890>
call   9610 <main+0x6900>
jmp    10099 <main+0xd389>
nop
lea    0x0(%esi,%eiz,1),%esi
call   c4a0 <main+0x9790>
mov    %eax,%edi
jmp    f594 <main+0xc884>
movl   $0x1,0x8(%eax)
call   9a50 <main+0x6d40>
cmp    $0x3e,%eax
je     101e9 <main+0xd4d9>
cmp    $0x7c,%eax
je     101de <main+0xd4ce>
cmp    $0x26,%eax
jne    101ce <main+0xd4be>
movl   $0x15,(%esi)
jmp    ff83 <main+0xd273>
mov    $0x8,%esi
jmp    10087 <main+0xd377>
mov    %ecx,-0x48(%ebp)
call   9610 <main+0x6900>
mov    $0x23,%eax
mov    -0x48(%ebp),%ecx
movl   $0x0,-0x50(%ebp)
jmp    10026 <main+0xd316>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
movl   $0x0,0x8(%eax)
mov    %eax,%esi
movl   $0x17,(%eax)
movl   $0x10,(%esp)
call   c170 <main+0x9460>
lea    0x2a18(%ebx),%edi
mov    %esi,0x4(%eax)
mov    %eax,(%edi)
call   9a50 <main+0x6d40>
cmp    $0x2d,%eax
mov    (%edi),%eax
jne    101bd <main+0xd4ad>
movl   $0x1,0xc(%eax)
jmp    ff83 <main+0xd273>
movl   $0x16,(%esi)
jmp    ff83 <main+0xd273>
movl   $0x13,(%esi)
jmp    ff83 <main+0xd273>
mov    -0x2c(%ebp),%eax
mov    %eax,-0x64(%ebp)
lea    -0x608c(%ebx),%eax
add    $0x82,%eax
mov    %eax,-0x2c(%ebp)
jmp    100c6 <main+0xd3b6>
movl   $0x0,0xc(%eax)
call   9610 <main+0x6900>
jmp    ff83 <main+0xd273>
movl   $0x10,(%esi)
call   9610 <main+0x6900>
jmp    ff83 <main+0xd273>
movl   $0x11,(%esi)
jmp    ff83 <main+0xd273>
movl   $0x14,(%esi)
jmp    ff83 <main+0xd273>
mov    %ecx,-0x58(%ebp)
call   c4a0 <main+0x9790>
mov    -0x58(%ebp),%ecx
mov    %eax,%edi
jmp    fd37 <main+0xd027>
call   14370 <main+0x11660>
movl   $0x1,-0x50(%ebp)
jmp    fb5f <main+0xce4f>
cmp    0x1a4(%ebx),%edi
jne    f651 <main+0xc941>
lea    -0x6cee(%ebx),%eax
call   e170 <main+0xb460>
mov    $0x8,%eax
call   e1b0 <main+0xb4a0>
lea    -0x6cc6(%ebx),%eax
call   e170 <main+0xb460>
lea    -0x6ce1(%ebx),%eax
call   e170 <main+0xb460>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
call   2f30 <main+0x220>
add    $0xbbd1,%ebx
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   9c10 <main+0x6f00>
lea    0x2a00(%ebx),%esi
mov    (%esi),%edi
movl   $0x0,(%esi)
call   9a50 <main+0x6d40>
lea    -0x5e4c(%ebx),%edx
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
add    $0x82,%edx
call   f400 <main+0xc6f0>
mov    %edi,(%esi)
call   9c90 <main+0x6f80>
lea    0x2a10(%ebx),%eax
movl   $0xf,0x1c(%esp)
movl   $0x0,0x20(%esp)
mov    (%eax),%eax
mov    %eax,0x24(%esp)
lea    0x2a08(%ebx),%eax
mov    (%eax),%eax
movl   $0x100,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   9270 <main+0x6560>
lea    0x1fc(%ebx),%eax
mov    (%eax),%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xbb23,%ebx
sub    $0x1c,%esp
lea    0x2a0c(%ebx),%eax
mov    (%eax),%esi
movl   $0x0,(%eax)
test   %esi,%esi
jne    103a0 <main+0xd690>
jmp    103d8 <main+0xd6c8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
lea    -0x5e4c(%ebx),%ecx
mov    0xc(%esi),%edx
mov    0x8(%esi),%ebp
cmpl   $0x17,(%eax)
lea    0x82(%ecx),%edi
je     103c0 <main+0xd6b0>
mov    %edx,0xc(%esp)
call   9a50 <main+0x6d40>
mov    0xc(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
mov    %edi,%edx
call   f400 <main+0xc6f0>
movl   $0x10,(%esp)
call   c170 <main+0x9460>
lea    0x2a10(%ebx),%ecx
lea    0x2a08(%ebx),%edi
movl   $0xf,(%eax)
mov    (%ecx),%edx
movl   $0x0,0x4(%eax)
mov    %edx,0x8(%eax)
mov    (%edi),%edx
mov    %edx,0xc(%eax)
mov    0x4(%esi),%edx
mov    %eax,0xc(%edx)
mov    (%esi),%esi
test   %esi,%esi
je     103d8 <main+0xd6c8>
lea    0x29fc(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     10330 <main+0xd620>
mov    $0x2,%eax
call   e3a0 <main+0xb690>
jmp    10330 <main+0xd620>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5f6c(%ebx),%eax
lea    0x82(%eax),%edi
jmp    1034a <main+0xd63a>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xba45,%ebx
sub    $0x4,%esp
mov    0x10(%esp),%eax
test   %eax,%eax
lea    0x29f0(%ebx),%esi
lea    0x2a00(%ebx),%edx
movl   $0x0,(%esi)
mov    %eax,(%edx)
jne    10440 <main+0xd730>
lea    0x29fc(%ebx),%eax
movl   $0x0,(%eax)
call   e700 <main+0xb9f0>
test   %eax,%eax
je     10438 <main+0xd728>
cmp    $0x1,%eax
je     10448 <main+0xd738>
addl   $0x1,(%esi)
add    $0x4,%esp
pop    %ebx
mov    $0x1,%eax
pop    %esi
jmp    f1f0 <main+0xc4e0>
mov    %esi,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
call   e3a0 <main+0xb690>
jmp    1040c <main+0xd6fc>
nop
xor    %eax,%eax
lea    0x0(%esi),%esi
jmp    1043a <main+0xd72a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0xb9c6,%ebx
sub    $0x18,%esp
movl   $0x10,0x8(%esp)
lea    -0x6ac(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   d360 <main+0xa650>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xb983,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x2a1c(%ebx),%eax
xor    %edi,%edi
mov    (%eax),%ebp
jmp    104e6 <main+0xd7d6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xfffffffe,%eax
jle    104de <main+0xd7ce>
cmp    $0xffffffff,%eax
jne    104ef <main+0xd7df>
test   %esi,%esi
je     10548 <main+0xd838>
add    $0x1,%edi
cmp    $0xa,%edi
je     10503 <main+0xd7f3>
mov    0x4(%ebp,%edi,4),%eax
cmp    $0xfffffffd,%eax
jge    104d0 <main+0xd7c0>
test   %esi,%esi
je     10558 <main+0xd848>
mov    %eax,(%esp)
add    $0x1,%edi
call   2c80 <close@plt>
cmp    $0xa,%edi
jne    104e6 <main+0xd7d6>
mov    0x0(%ebp),%eax
lea    0x2a1c(%ebx),%edx
mov    %eax,(%edx)
mov    %ebp,(%esp)
call   27a0 <free@plt>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    1053d <main+0xd82d>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    10570 <main+0xd860>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   2c80 <close@plt>
jmp    104de <main+0xd7ce>
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   26e0 <dup2@plt>
mov    0x4(%ebp,%edi,4),%eax
jmp    104f3 <main+0xd7e3>
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0xb8a0,%ebx
mov    0x30(%esp),%ebp
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   2a70 <fcntl@plt>
test   %eax,%eax
mov    %eax,%esi
js     105e8 <main+0xd8d8>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
movl   $0x1,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   2a70 <fcntl@plt>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%edi
cmp    $0x9,%edi
je     105d8 <main+0xd8c8>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
test   %edi,%edi
je     105c0 <main+0xd8b0>
mov    %edi,(%esp)
call   29b0 <strerror@plt>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x6b1d(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
call   2f30 <main+0x220>
add    $0xb7e6,%ebx
test   %esi,%esi
je     10780 <main+0xda70>
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
testb  $0x1,0xa4(%esp)
je     10b08 <main+0xddf8>
lea    0x2a1c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x18(%esp)
nop
mov    (%esi),%eax
sub    $0x10,%eax
cmp    $0x6,%eax
ja     10870 <main+0xdb60>
mov    -0x6aec(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0xb(%eax)
jne    10940 <main+0xdc30>
mov    0x10(%esi),%edi
movl   $0x1b6,0x8(%esp)
movl   $0x241,0x4(%esp)
mov    %edi,(%esp)
call   2710 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     10a2a <main+0xdd1a>
mov    0x18(%esp),%eax
mov    0x8(%esi),%edx
test   %eax,%eax
je     10707 <main+0xd9f7>
lea    (%eax,%edx,4),%edi
mov    0x4(%edi),%eax
cmp    $0xfffffffe,%eax
jne    106fa <main+0xd9ea>
cmp    %ebp,%edx
mov    $0xff,%al
je     106fa <main+0xd9ea>
mov    %edx,0x4(%esp)
mov    %edx,(%esp)
call   10580 <main+0xd870>
mov    $0xffffffff,%edx
cmp    %ebp,%eax
mov    $0xfffffffd,%ecx
cmove  %ecx,%eax
mov    %eax,0x4(%edi)
cmp    %ebp,%edx
je     10738 <main+0xda28>
mov    (%esi),%ecx
mov    0x8(%esi),%eax
lea    -0x15(%ecx),%edx
cmp    $0x1,%edx
jbe    10828 <main+0xdb18>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   26e0 <dup2@plt>
test   %eax,%eax
js     10900 <main+0xdbf0>
mov    %ebp,(%esp)
call   2c80 <close@plt>
mov    0x4(%esi),%esi
test   %esi,%esi
jne    10678 <main+0xd968>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
je     10920 <main+0xdc10>
testb  $0x3,0xa4(%esp)
je     10780 <main+0xda70>
mov    0x18(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
js     10780 <main+0xda70>
lea    0x2a9c(%ebx),%edx
mov    %eax,0x10(%edx)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%ebp
cmp    0x8(%esi),%ebp
je     10738 <main+0xda28>
cmp    $0xffffffff,%ebp
jl     10738 <main+0xda28>
jmp    106cd <main+0xd9bd>
lea    0x0(%esi),%esi
mov    0x10(%esi),%edi
movl   $0x1b6,0x8(%esp)
movl   $0x441,0x4(%esp)
jmp    106bb <main+0xd9ab>
mov    0x10(%esi),%edi
movl   $0x1b6,0x8(%esp)
movl   $0x42,0x4(%esp)
jmp    106bb <main+0xd9ab>
mov    0x10(%esi),%edi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   2710 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    106cd <main+0xd9bd>
lea    0x27a8(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   4890 <main+0x1b80>
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x6b01(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi),%esi
test   %ebp,%ebp
js     108e0 <main+0xdbd0>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   26e0 <dup2@plt>
test   %eax,%eax
jns    10738 <main+0xda28>
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%edi
mov    %edi,(%esp)
call   29b0 <strerror@plt>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x6b1d(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   2b30 <pipe@plt>
test   %eax,%eax
js     10a5a <main+0xdd4a>
mov    0xc(%esi),%eax
cmpl   $0x18,(%esi)
mov    0x8(%eax),%edi
je     109f0 <main+0xdce0>
mov    %edi,(%esp)
call   2a10 <strlen@plt>
cmp    $0x1000,%eax
mov    %eax,%ebp
jbe    108e8 <main+0xdbd8>
movl   $0x2,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   b6c0 <main+0x89b0>
test   %eax,%eax
je     10a78 <main+0xdd68>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
mov    0x20(%esp),%ebp
jmp    10798 <main+0xda88>
lea    0x0(%esi),%esi
mov    %eax,%ebp
jmp    10730 <main+0xda20>
nop
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   114d0 <main+0xe7c0>
jmp    108c8 <main+0xdbb8>
xchg   %ax,%ax
lea    0x27a8(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%edi
mov    %ebp,(%esp)
call   2c80 <close@plt>
test   %edi,%edi
jns    10738 <main+0xda28>
jmp    1084e <main+0xdb3e>
nop
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     10762 <main+0xda52>
call   4790 <main+0x1a80>
jmp    10762 <main+0xda52>
lea    0x0(%esi),%esi
mov    0x10(%esi),%edi
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x4(%esp)
call   2c40 <__xstat64@plt>
test   %eax,%eax
js     10a15 <main+0xdd05>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     10a68 <main+0xdd58>
movl   $0x1b6,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   2710 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     10a2a <main+0xdd1a>
mov    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   2930 <__fxstat64@plt>
test   %eax,%eax
jns    106cd <main+0xd9bd>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    106cd <main+0xd9bd>
mov    %ebp,(%esp)
call   2c80 <close@plt>
lea    0x27a8(%ebx),%eax
mov    (%eax),%edx
movl   $0x11,(%edx)
jmp    10a30 <main+0xdd20>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
movl   $0x100,0x8(%esp)
movl   $0x0,0x4(%esp)
call   9270 <main+0x6560>
lea    0x1fc(%ebx),%eax
mov    (%eax),%edi
jmp    10893 <main+0xdb83>
movl   $0x1b6,0x8(%esp)
movl   $0xc1,0x4(%esp)
jmp    106bb <main+0xd9ab>
lea    0x27a8(%ebx),%eax
movl   $0x2,0x4(%esp)
mov    (%eax),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   4890 <main+0x1b80>
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x6b16(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    -0x7678(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x27a8(%ebx),%eax
mov    (%eax),%edx
movl   $0x11,(%edx)
jmp    10a30 <main+0xdd20>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   2c80 <close@plt>
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   2810 <signal@plt>
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   2810 <signal@plt>
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   2810 <signal@plt>
movl   $0x1,0x4(%esp)
movl   $0x14,(%esp)
call   2810 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
call   2810 <signal@plt>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   114d0 <main+0xe7c0>
movl   $0x0,(%esp)
call   2750 <_exit@plt>
movl   $0x0,0x18(%esp)
jmp    10678 <main+0xd968>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xb305,%ebx
sub    $0xc4,%esp
lea    0x700(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x20(%esp)
lea    0x6fc(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   2790 <_setjmp@plt>
add    %eax,%eax
je     10bb0 <main+0xdea0>
lea    0x700(%ebx),%ecx
mov    0x20(%esp),%edx
mov    %edx,(%ecx)
lea    0x70c(%ebx),%ecx
cmpl   $0x1,(%ecx)
jne    10be6 <main+0xded6>
mov    0x1c(%esp),%edx
lea    0x6fc(%ebx),%ecx
test   %edx,%edx
mov    %edx,(%ecx)
jne    10b8e <main+0xde7e>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    10b98 <main+0xde88>
add    $0xc4,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %eax,0xc(%esp)
call   4790 <main+0x1a80>
mov    0xc(%esp),%eax
add    $0xc4,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %eax,0x8(%esp)
mov    0xd4(%esp),%eax
lea    0x24(%esp),%edx
lea    0x700(%ebx),%esi
mov    %eax,0x4(%esp)
mov    0xd0(%esp),%eax
mov    %edx,(%esi)
mov    %eax,(%esp)
call   10630 <main+0xd920>
mov    0x20(%esp),%edx
mov    0x8(%esp),%eax
mov    %edx,(%esi)
jmp    10b72 <main+0xde62>
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   2b60 <__longjmp_chk@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xb224,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
lea    0x2a1c(%ebx),%edi
cmp    %esi,(%edi)
je     10c30 <main+0xdf20>
nop
movl   $0x0,(%esp)
call   104a0 <main+0xd790>
cmp    %esi,(%edi)
jne    10c20 <main+0xdf10>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xb1e4,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
lea    0x2a1c(%ebx),%edi
mov    (%edi),%esi
je     10c88 <main+0xdf78>
movl   $0x2c,(%esp)
call   c0b0 <main+0x93a0>
xor    %edx,%edx
mov    %esi,(%eax)
mov    %eax,(%edi)
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xfffffffe,0x4(%eax,%edx,4)
add    $0x1,%edx
cmp    $0xa,%edx
jne    10c78 <main+0xdf68>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
call   2f30 <main+0x220>
add    $0xb17f,%ebx
cmp    $0x11,%eax
je     10ce0 <main+0xdfd0>
lea    0x2a94(%ebx),%edx
cmp    $0x2,%eax
movb   $0x1,0x453(%ebx,%eax,1)
mov    %eax,(%edx)
jne    10cd7 <main+0xdfc7>
mov    0x49c(%ebx),%edx
test   %edx,%edx
je     10d10 <main+0xe000>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4d8(%ebx),%ecx
lea    0x2a34(%ebx),%eax
test   %ecx,%ecx
movl   $0x1,(%eax)
je     10cd7 <main+0xdfc7>
lea    0x2a94(%ebx),%eax
movb   $0x1,0x464(%ebx)
movl   $0x11,(%eax)
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
lea    0x6fc(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     10d30 <main+0xe020>
lea    0x704(%ebx),%eax
movl   $0x1,(%eax)
jmp    10cd7 <main+0xdfc7>
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
jmp    10d1c <main+0xe00c>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xb0e3,%ebx
sub    $0xac,%esp
mov    0xc0(%esp),%edi
mov    0x494(%ebx,%edi,4),%eax
test   %eax,%eax
je     10e4f <main+0xe13f>
cmpb   $0x1,(%eax)
sbb    %esi,%esi
not    %esi
add    $0x3,%esi
cmp    $0x11,%edi
mov    $0x2,%eax
cmove  %eax,%esi
lea    0x2a54(%ebx),%ebp
movsbl -0x1(%ebp,%edi,1),%eax
test   %al,%al
je     10df0 <main+0xe0e0>
cmp    $0x4,%al
je     10de1 <main+0xe0d1>
cmp    %eax,%esi
je     10de1 <main+0xe0d1>
cmp    $0x2,%esi
je     10e40 <main+0xe130>
xor    %eax,%eax
cmp    $0x3,%esi
sete   %al
mov    %eax,0x14(%esp)
mov    %esi,%eax
mov    %al,-0x1(%ebp,%edi,1)
lea    0x18(%esp),%eax
lea    0x14(%esp),%esi
mov    %eax,(%esp)
movl   $0x0,0x98(%esp)
00
call   2a90 <sigfillset@plt>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   2c00 <sigaction@plt>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   2c00 <sigaction@plt>
cmp    $0xffffffff,%eax
je     10de1 <main+0xe0d1>
cmpl   $0x1,0x14(%esp)
mov    $0x5,%eax
jne    10d93 <main+0xe083>
lea    0x29b8(%ebx),%eax
cmpb   $0x0,0x4(%eax)
je     10de1 <main+0xe0d1>
lea    -0x14(%edi),%eax
cmp    $0x2,%eax
ja     10de1 <main+0xe0d1>
mov    $0x3,%eax
jmp    10d93 <main+0xe083>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb18c(%ebx),%eax
mov    %eax,0x14(%esp)
jmp    10dac <main+0xe09c>
lea    0x27ac(%ebx),%eax
cmpl   $0x0,(%eax)
je     10e6a <main+0xe15a>
lea    0x0(%esi),%esi
mov    $0x1,%esi
jmp    10d75 <main+0xe065>
cmp    $0x16,%edi
ja     10e60 <main+0xe150>
mov    -0x6ad0(%ebx,%edi,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
lea    0x29b8(%ebx),%eax
cmpb   $0x1,0x4(%eax)
sbb    %esi,%esi
and    $0xfffffffe,%esi
add    $0x3,%esi
jmp    10d80 <main+0xe070>
nop
lea    0x29b8(%ebx),%eax
cmpb   $0x1,0x3(%eax)
sbb    %esi,%esi
and    $0xfffffffe,%esi
add    $0x3,%esi
jmp    10d75 <main+0xe065>
nop
lea    0x29b8(%ebx),%eax
mov    $0x2,%esi
cmpb   $0x0,0x3(%eax)
jne    10d80 <main+0xe070>
lea    0x29ec(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    10d80 <main+0xe070>
cmpb   $0x1,0x6(%eax)
sbb    %esi,%esi
not    %esi
add    $0x2,%esi
jmp    10d80 <main+0xe070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xaf33,%ebx
sub    $0x1c,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x494(%ebx),%edi
mov    %edi,%ebp
lea    0x598(%ebx),%esi
mov    %edi,0xc(%esp)
jmp    10f27 <main+0xe217>
nop
add    $0x4,%ebp
cmp    %esi,%ebp
jae    10f60 <main+0xe250>
mov    0x0(%ebp),%edx
test   %edx,%edx
je     10f20 <main+0xe210>
cmpb   $0x0,(%edx)
je     10f20 <main+0xe210>
mov    %edx,(%esp)
call   27a0 <free@plt>
cmp    %edi,%ebp
movl   $0x0,0x0(%ebp)
je     10fa0 <main+0xe290>
mov    %ebp,%edx
add    $0x4,%ebp
sub    0xc(%esp),%edx
sar    $0x2,%edx
mov    %edx,(%esp)
call   10d40 <main+0xe030>
cmp    %esi,%ebp
jb     10f27 <main+0xe217>
xchg   %ax,%ax
lea    0x2a98(%ebx),%eax
movl   $0x0,(%eax)
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0xc(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    10f93 <main+0xe283>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    10fa5 <main+0xe295>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
jmp    10f27 <main+0xe217>
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xae64,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
lea    0x2a54(%ebx),%edi
movzbl -0x1(%edi,%esi,1),%eax
sub    $0x3,%eax
cmp    $0x1,%al
jbe    10ff7 <main+0xe2e7>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   2810 <signal@plt>
movb   $0x4,-0x1(%edi,%esi,1)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xae13,%ebx
sub    $0x1c,%esp
lea    0x718(%ebx),%esi
lea    0x2a94(%ebx),%eax
mov    (%esi),%ebp
movl   $0x0,(%eax)
mov    $0x1,%edi
jmp    11048 <main+0xe338>
lea    0x0(%esi),%esi
add    $0x1,%edi
cmp    $0x41,%edi
je     11083 <main+0xe373>
cmpb   $0x0,0x453(%edi,%ebx,1)
je     11040 <main+0xe330>
mov    0x494(%ebx,%edi,4),%eax
movb   $0x0,0x453(%edi,%ebx,1)
test   %eax,%eax
je     11040 <main+0xe330>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   5470 <main+0x2760>
lea    0x71c(%ebx),%eax
mov    %ebp,(%esi)
mov    (%eax),%eax
test   %eax,%eax
je     11040 <main+0xe330>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2f30 <main+0x220>
add    $0xad96,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
add    $0x1,%eax
cmp    0x434(%ebx),%eax
je     110e0 <main+0xe3d0>
movl   $0x2,(%esp)
mov    %eax,0x434(%ebx)
call   10d40 <main+0xe030>
movl   $0x3,(%esp)
call   10d40 <main+0xe030>
movl   $0xf,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    10d40 <main+0xe030>
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0xad36,%ebx
sub    $0xb8,%esp
lea    0x718(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x10(%esp)
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   2790 <_setjmp@plt>
test   %eax,%eax
je     11156 <main+0xe446>
lea    0x70c(%ebx),%eax
cmpl   $0x4,(%eax)
je     11194 <main+0xe484>
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   2790 <_setjmp@plt>
test   %eax,%eax
jne    11145 <main+0xe435>
movl   $0x0,(%esp)
call   ae80 <main+0x8170>
call   115a0 <main+0xe890>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   2750 <_exit@plt>
lea    0x700(%ebx),%eax
lea    0x14(%esp),%edx
mov    %edx,(%eax)
mov    0x494(%ebx),%eax
test   %eax,%eax
je     11129 <main+0xe419>
lea    0x71c(%ebx),%edx
movl   $0x0,0x494(%ebx)
00
movl   $0x0,(%edx)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   5470 <main+0x2760>
jmp    11129 <main+0xe419>
lea    0x718(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x10(%esp)
jmp    11129 <main+0xe419>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0xac70,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %edi,(%esp)
call   d1f0 <main+0xa4e0>
test   %eax,%eax
jne    11220 <main+0xe510>
cmp    $0x40,%esi
lea    -0x4ac(%ebx),%ebp
jle    111f0 <main+0xe4e0>
jmp    11210 <main+0xe500>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmp    $0x41,%esi
je     11210 <main+0xe500>
mov    0x0(%ebp,%esi,4),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   2a50 <strcasecmp@plt>
test   %eax,%eax
jne    111e8 <main+0xe4d8>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   2c60 <strtol@plt>
mov    $0xffffffff,%edx
cmp    $0x41,%eax
cmovge %edx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xabd3,%ebx
sub    $0x1c,%esp
lea    0x29b0(%ebx),%eax
mov    %eax,(%esp)
call   e020 <main+0xb310>
lea    0x29cc(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%ebp
mov    %eax,0xc(%esp)
test   %ebp,%ebp
je     113c8 <main+0xe6b8>
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     11410 <main+0xe700>
addl   $0x4,0xc(%esp)
lea    0x6fc(%ebx),%edi
jmp    112d0 <main+0xe5c0>
lea    0x0(%esi),%esi
subl   $0x1,(%edi)
jne    112bd <main+0xe5ad>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    11368 <main+0xe658>
addl   $0x4,0xc(%esp)
mov    0xc(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     11380 <main+0xe670>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   111b0 <main+0xe4a0>
test   %eax,%eax
mov    %eax,%esi
js     11390 <main+0xe680>
addl   $0x1,(%edi)
test   %ebp,%ebp
je     11307 <main+0xe5f7>
movzbl 0x0(%ebp),%eax
cmp    $0x2d,%al
je     11358 <main+0xe648>
test   %al,%al
jne    11348 <main+0xe638>
mov    %ebp,(%esp)
call   c130 <main+0x9420>
mov    %eax,%ebp
mov    0x494(%ebx,%esi,4),%eax
test   %eax,%eax
je     11328 <main+0xe618>
cmpb   $0x0,(%eax)
je     11320 <main+0xe610>
lea    0x2a98(%ebx),%ecx
subl   $0x1,(%ecx)
mov    %eax,(%esp)
call   27a0 <free@plt>
test   %esi,%esi
mov    %ebp,0x494(%ebx,%esi,4)
je     112a8 <main+0xe598>
mov    %esi,(%esp)
call   10d40 <main+0xe030>
jmp    112a8 <main+0xe598>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2a98(%ebx),%eax
addl   $0x1,(%eax)
jmp    112fd <main+0xe5ed>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%ebp)
jne    11348 <main+0xe638>
xor    %ebp,%ebp
jmp    11307 <main+0xe5f7>
lea    0x0(%esi),%esi
call   4790 <main+0x1a80>
addl   $0x4,0xc(%esp)
mov    0xc(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    112d0 <main+0xe5c0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x6a65(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x234(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   11850 <main+0xeb40>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4ac(%ebx),%edi
xor    %esi,%esi
mov    0x494(%esi,%ebx,1),%eax
test   %eax,%eax
je     113fc <main+0xe6ec>
mov    (%esi,%edi,1),%ebp
mov    %eax,(%esp)
call   d220 <main+0xa510>
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x6a74(%ebx),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
add    $0x4,%esi
cmp    $0x104,%esi
jne    113d0 <main+0xe6c0>
jmp    11380 <main+0xe670>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
xor    %ebp,%ebp
jmp    1129a <main+0xe58a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   2f30 <main+0x220>
add    $0xaa06,%ebx
sub    $0x28,%esp
lea    0x6fc(%ebx),%ecx
addl   $0x1,(%ecx)
mov    0x34(%esp),%ecx
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x14(%esp)
mov    0x30(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   2b20 <__vsnprintf_chk@plt>
lea    0x6fc(%ebx),%ecx
subl   $0x1,(%ecx)
jne    1147b <main+0xe76b>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    11480 <main+0xe770>
add    $0x28,%esp
pop    %ebx
ret
mov    %eax,0x1c(%esp)
call   4790 <main+0x1a80>
mov    0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
lea    0x2c(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0x20(%esp),%eax
call   11420 <main+0xe710>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0xa950,%ebx
mov    0x38(%esp),%edx
mov    0x34(%esp),%edi
test   %edx,%edx
lea    0x27a8(%ebx),%ebp
je     11538 <main+0xe828>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
mov    $0x7fffffff,%esi
test   %eax,%eax
cmovns 0x38(%esp),%esi
jmp    11518 <main+0xe808>
lea    0x0(%esi),%esi
mov    0x0(%ebp),%eax
cmpl   $0x4,(%eax)
jne    11548 <main+0xe838>
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2a40 <write@plt>
test   %eax,%eax
js     11510 <main+0xe800>
add    %eax,%edi
sub    %eax,0x38(%esp)
jne    114f8 <main+0xe7e8>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    0x8(%esi),%eax
mov    (%esi),%ecx
sub    %eax,%ecx
je     11592 <main+0xe882>
mov    0x10(%esi),%edx
test   %edx,%edx
js     11592 <main+0xe882>
mov    %eax,(%esi)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   114d0 <main+0xe7c0>
test   %eax,%eax
je     11592 <main+0xe882>
orl    $0x1,0x14(%esi)
add    $0x18,%esp
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0xa886,%ebx
sub    $0x18,%esp
lea    0x21c(%ebx),%eax
mov    %eax,(%esp)
call   11560 <main+0xe850>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   2f30 <main+0x220>
add    $0xa84a,%ebx
mov    (%esi),%eax
mov    0x4(%esi),%ecx
sub    %eax,%ecx
cmp    %edx,%ecx
jae    11626 <main+0xe916>
mov    0xc(%esi),%ebp
test   %ebp,%ebp
je     11622 <main+0xe912>
mov    0x8(%esi),%eax
test   %eax,%eax
je     116e0 <main+0xe9d0>
cmpl   $0xfffffffd,0x10(%esi)
je     11668 <main+0xe958>
mov    %esi,(%esp)
mov    %edx,0x18(%esp)
call   11560 <main+0xe850>
mov    (%esi),%eax
mov    0x4(%esi),%ecx
mov    0x18(%esp),%edx
sub    %eax,%ecx
cmp    %ecx,%edx
jae    11640 <main+0xe930>
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   2b40 <mempcpy@plt>
mov    %eax,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   114d0 <main+0xe7c0>
test   %eax,%eax
je     11638 <main+0xe928>
orl    $0x1,0x14(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edx
lea    0x0(%ebp,%ebp,1),%ecx
lea    (%edx,%ebp,1),%eax
cmova  %eax,%ecx
cmp    %ebp,%ecx
jb     11657 <main+0xe947>
lea    0x6fc(%ebx),%eax
mov    %edx,0x1c(%esp)
addl   $0x1,(%eax)
mov    %ecx,0x4(%esp)
mov    0x8(%esi),%eax
mov    %ecx,0x18(%esp)
mov    %eax,(%esp)
call   c0f0 <main+0x93e0>
mov    0x18(%esp),%ecx
mov    %ecx,0xc(%esi)
add    %eax,%ebp
add    %eax,%ecx
mov    %eax,0x8(%esi)
mov    %ecx,0x4(%esi)
mov    %ebp,(%esi)
lea    0x6fc(%ebx),%ecx
mov    0x1c(%esp),%edx
subl   $0x1,(%ecx)
jne    116c6 <main+0xe9b6>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    11700 <main+0xe9f0>
mov    (%esi),%eax
mov    0x4(%esi),%ecx
sub    %eax,%ecx
cmp    %ecx,%edx
jb     11626 <main+0xe916>
jmp    11640 <main+0xe930>
lea    0x0(%esi),%esi
cmpl   $0xfffffffd,0x10(%esi)
je     116f0 <main+0xe9e0>
mov    %ebp,%ecx
xor    %ebp,%ebp
jmp    11678 <main+0xe968>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edx
mov    %ebp,%ecx
cmovae %edx,%ecx
xor    %ebp,%ebp
jmp    11678 <main+0xe968>
xchg   %ax,%ax
mov    %edx,0x18(%esp)
call   4790 <main+0x1a80>
mov    (%esi),%eax
mov    0x4(%esi),%ecx
mov    0x18(%esp),%edx
sub    %eax,%ecx
jmp    11622 <main+0xe912>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   2f30 <main+0x220>
add    $0xa701,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,(%esp)
call   2a10 <strlen@plt>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
mov    %eax,%edx
mov    %esi,%eax
pop    %esi
pop    %edi
jmp    115d0 <main+0xe8c0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %al,0x1f(%esp)
lea    0x1f(%esp),%eax
mov    %edx,(%esp)
mov    $0x1,%edx
call   115d0 <main+0xe8c0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   2f30 <main+0x220>
add    $0xa68c,%ebx
mov    0x44(%esp),%edx
mov    0x48(%esp),%ecx
mov    (%esi),%eax
mov    0x4(%esi),%ebp
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
sub    %eax,%ebp
mov    %ebp,%edx
call   11420 <main+0xe710>
test   %eax,%eax
mov    %eax,%edi
js     117d8 <main+0xeac8>
cmp    %eax,%ebp
jbe    117e8 <main+0xead8>
add    %eax,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
orl    $0x1,0x14(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esp),%ebp
mov    %ebp,(%esp)
call   c2c0 <main+0x95b0>
lea    0x1f4(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,%edi
cmovae %edi,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   c170 <main+0x9460>
mov    0x48(%esp),%ecx
lea    0x1(%edi),%edx
mov    %ecx,0x4(%esp)
mov    0x44(%esp),%ecx
mov    %eax,0xc(%esp)
mov    %ecx,(%esp)
call   11420 <main+0xe710>
cmp    %edi,%eax
je     11840 <main+0xeb30>
orl    $0x1,0x14(%esi)
mov    %ebp,(%esp)
call   c320 <main+0x9610>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,%edx
mov    0xc(%esp),%eax
mov    %esi,(%esp)
call   115d0 <main+0xe8c0>
jmp    1182f <main+0xeb1f>
sub    $0x1c,%esp
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   11790 <main+0xea80>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0xa5a3,%ebx
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x238(%ebx),%eax
mov    %eax,(%esp)
call   11790 <main+0xea80>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4,%esp
movzbl (%eax),%esi
call   2f30 <main+0x220>
add    $0xa55d,%ebx
mov    %edx,(%esp)
lea    -0x30(%esi),%ecx
cmp    $0x46,%cl
ja     11978 <main+0xec68>
movzbl %cl,%ecx
mov    -0x6a50(%ebx,%ecx,4),%edi
lea    (%edi,%ebx,1),%ecx
jmp    *%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x7,%ecx
lea    0x0(%esi),%esi
add    $0x1,%eax
mov    (%esp),%edx
mov    %ecx,(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x8,%ecx
jmp    11900 <main+0xebf0>
nop
mov    $0xc,%ecx
jmp    11900 <main+0xebf0>
nop
mov    $0xa,%ecx
jmp    11900 <main+0xebf0>
nop
mov    $0xd,%ecx
jmp    11900 <main+0xebf0>
nop
mov    $0x9,%ecx
jmp    11900 <main+0xebf0>
nop
mov    $0xb,%ecx
jmp    11900 <main+0xebf0>
nop
lea    0x3(%eax),%ebp
xor    %ecx,%ecx
mov    %esi,%edx
add    $0x1,%eax
movsbl %dl,%esi
lea    -0x30(%esi,%ecx,8),%ecx
movzbl (%eax),%esi
lea    -0x30(%esi),%edi
mov    %edi,%edx
cmp    $0x7,%dl
ja     11903 <main+0xebf3>
cmp    %ebp,%eax
jne    11945 <main+0xec35>
jmp    11903 <main+0xebf3>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x5c,%ecx
lea    0x0(%esi),%esi
jmp    11900 <main+0xebf0>
lea    0x0(%esi),%esi
mov    $0x5c,%ecx
jmp    11903 <main+0xebf3>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xa4a1,%ebx
sub    $0x2c,%esp
lea    0x1fc(%ebx),%eax
lea    0x1f8(%ebx),%ebp
mov    (%eax),%esi
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
jmp    119c1 <main+0xecb1>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
cmp    0x0(%ebp),%esi
je     11a00 <main+0xecf0>
mov    %dl,(%esi)
add    $0x1,%esi
test   %dl,%dl
je     11a20 <main+0xed10>
movzbl (%edi),%edx
movsbl %dl,%ecx
cmp    $0x5c,%ecx
jne    119b0 <main+0xeca0>
movsbl 0x1(%edi),%edx
lea    0x2(%edi),%eax
cmp    $0x63,%edx
je     11a50 <main+0xed40>
cmp    $0x30,%edx
jne    11a30 <main+0xed20>
add    $0x5,%edi
xor    %cl,%cl
movsbl (%eax),%edx
sub    $0x30,%edx
cmp    $0x7,%edx
ja     119f7 <main+0xece7>
add    $0x1,%eax
cmp    %edi,%eax
lea    (%edx,%ecx,8),%ecx
jne    119e2 <main+0xecd2>
cmp    0x0(%ebp),%esi
mov    %ecx,%edx
mov    %eax,%edi
jne    119b8 <main+0xeca8>
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
call   c4a0 <main+0x9790>
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
mov    %eax,%esi
mov    %dl,(%esi)
add    $0x1,%esi
test   %dl,%dl
jne    119c1 <main+0xecb1>
add    $0x2c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
lea    0x1(%edi),%eax
call   118c0 <main+0xebb0>
mov    0x1c(%esp),%ecx
mov    %ecx,%edx
mov    %eax,%edi
jmp    119b3 <main+0xeca3>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edi
xor    %edx,%edx
mov    $0x100,%ecx
jmp    119b3 <main+0xeca3>
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
sub    %eax,%edi
push   %ebx
call   2f30 <main+0x220>
add    $0xa3bf,%ebx
sub    $0x2c,%esp
mov    %eax,0x18(%esp)
lea    0x3(%edi),%ebp
mov    %edx,0x1c(%esp)
lea    0x1fc(%ebx),%eax
mov    (%eax),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c4d0 <main+0x97c0>
mov    0x18(%esp),%ecx
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   27b0 <memcpy@plt>
mov    0x1c(%esp),%edx
movb   $0x6a,(%esi,%edi,1)
movzbl (%edx),%eax
movb   $0x0,0x2(%esi,%edi,1)
mov    %al,0x1(%esi,%edi,1)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
call   2f30 <main+0x220>
add    $0xa350,%ebx
cmpb   $0x0,(%edx)
je     11b10 <main+0xee00>
cmp    %eax,%edx
je     11b40 <main+0xee30>
mov    %eax,0x4(%esp)
lea    -0x6849(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
movl   $0x1,0x59c(%ebx)
00
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   2ac0 <__errno_location@plt>
cmpl   $0x22,(%eax)
jne    11b07 <main+0xedf7>
movl   $0x22,(%esp)
call   29b0 <strerror@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x6b08(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
jmp    11afd <main+0xeded>
xchg   %ax,%ax
lea    -0x6864(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   4870 <main+0x1b60>
jmp    11afd <main+0xeded>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xa2c5,%ebx
sub    $0x34,%esp
mov    0x598(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
je     11c00 <main+0xeef0>
add    $0x4,%eax
movzbl 0x1(%esi),%edx
mov    %eax,0x598(%ebx)
movzbl (%esi),%eax
cmp    $0x27,%al
jne    11bb0 <main+0xeea0>
mov    %edx,0x18(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    0x1c(%esp),%edx
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmp    $0x22,%al
je     11b94 <main+0xee84>
call   2ac0 <__errno_location@plt>
movl   $0x0,(%eax)
lea    0x2c(%esp),%eax
mov    %esi,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
call   2bf0 <__strtoll_internal@plt>
mov    %edx,0x1c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x18(%esp)
mov    %esi,%eax
call   11ad0 <main+0xedc0>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
movl   $0x0,0x18(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    0x1c(%esp),%edx
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0xa203,%ebx
sub    $0x5c,%esp
lea    0x29b0(%ebx),%eax
movl   $0x0,0x59c(%ebx)
00
mov    %eax,(%esp)
call   e020 <main+0xb310>
lea    0x29cc(%ebx),%eax
mov    (%eax),%eax
mov    (%eax),%edi
test   %edi,%edi
mov    %edi,0x28(%esp)
je     12265 <main+0xf555>
mov    0x28(%esp),%ebp
add    $0x4,%eax
mov    %eax,0x2c(%esp)
lea    0x238(%ebx),%edi
mov    %eax,0x598(%ebx)
movzbl 0x0(%ebp),%eax
jmp    11c97 <main+0xef87>
lea    0x0(%esi),%esi
mov    (%edi),%eax
mov    (%eax),%ecx
cmp    0x4(%eax),%ecx
je     12000 <main+0xf2f0>
mov    %dl,(%ecx)
addl   $0x1,(%eax)
movzbl (%esi),%eax
mov    %esi,%ebp
movsbl %al,%edx
test   %edx,%edx
lea    0x1(%ebp),%esi
je     11e18 <main+0xf108>
cmp    $0x5c,%edx
je     11fe0 <main+0xf2d0>
cmp    $0x25,%edx
jne    11c80 <main+0xef70>
cmpb   $0x25,0x1(%ebp)
je     12018 <main+0xf308>
lea    -0x682c(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   2ca0 <strspn@plt>
add    %eax,%esi
cmpb   $0x2a,(%esi)
lea    0x48(%esp),%eax
mov    %eax,0x20(%esp)
je     12060 <main+0xf350>
lea    -0x6826(%ebx),%ecx
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x24(%esp)
call   2ca0 <strspn@plt>
mov    0x24(%esp),%ecx
add    %eax,%esi
movzbl (%esi),%eax
cmp    $0x2e,%al
je     12020 <main+0xf310>
cmp    $0x2a,%al
je     1202f <main+0xf31f>
mov    %esi,(%esp)
mov    %ecx,0x4(%esp)
call   2ca0 <strspn@plt>
add    %eax,%esi
movzbl (%esi),%eax
test   %al,%al
je     1220e <main+0xf4fe>
movzbl 0x1(%esi),%ecx
sub    $0x45,%eax
cmp    $0x33,%al
movb   $0x0,0x1(%esi)
mov    %cl,0x24(%esp)
ja     11fc0 <main+0xf2b0>
movzbl %al,%eax
mov    -0x6934(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
mov    0x598(%ebx),%edx
mov    (%edx),%eax
test   %eax,%eax
je     12221 <main+0xf511>
add    $0x4,%edx
mov    %edx,0x598(%ebx)
mov    0x20(%esp),%ecx
lea    0x48(%esp),%edx
sub    %edx,%ecx
je     121ba <main+0xf4aa>
cmp    $0x4,%ecx
je     12184 <main+0xf474>
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
call   11b60 <main+0xee50>
mov    %eax,0x30(%esp)
mov    %edx,0x34(%esp)
mov    %esi,%edx
mov    %ebp,%eax
call   11a60 <main+0xed50>
mov    0x20(%esp),%ecx
lea    0x48(%esp),%edx
sub    %edx,%ecx
je     12098 <main+0xf388>
cmp    $0x4,%ecx
mov    0x30(%esp),%edx
mov    0x34(%esp),%ecx
je     12078 <main+0xf368>
mov    %edx,0xc(%esp)
mov    0x4c(%esp),%edx
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x48(%esp),%edx
mov    %edx,0x4(%esp)
call   11880 <main+0xeb70>
nop
movzbl 0x24(%esp),%eax
lea    0x1(%esi),%ebp
movsbl %al,%edx
test   %edx,%edx
mov    %al,0x1(%esi)
lea    0x1(%ebp),%esi
jne    11ca5 <main+0xef95>
lea    0x0(%esi,%eiz,1),%esi
mov    0x598(%ebx),%eax
cmp    0x2c(%esp),%eax
je     1225a <main+0xf54a>
mov    (%eax),%eax
test   %eax,%eax
je     1225a <main+0xf54a>
mov    0x28(%esp),%ebp
movzbl 0x0(%ebp),%eax
jmp    11c97 <main+0xef87>
nop
mov    0x598(%ebx),%edx
mov    (%edx),%eax
test   %eax,%eax
je     12237 <main+0xf527>
add    $0x4,%edx
mov    %edx,0x598(%ebx)
movsbl (%eax),%edx
mov    0x20(%esp),%ecx
lea    0x48(%esp),%eax
sub    %eax,%ecx
je     121cb <main+0xf4bb>
cmp    $0x4,%ecx
jne    1217b <main+0xf46b>
mov    0x48(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
xchg   %ax,%ax
mov    0x598(%ebx),%edx
mov    (%edx),%eax
test   %eax,%eax
je     1222c <main+0xf51c>
add    $0x4,%edx
mov    %edx,0x598(%ebx)
call   11980 <main+0xec70>
mov    0x20(%esp),%edx
mov    %eax,%ecx
lea    0x1fc(%ebx),%eax
mov    %ecx,0x20(%esp)
mov    (%eax),%eax
movb   $0x73,(%esi)
mov    %eax,0x30(%esp)
lea    0x48(%esp),%eax
sub    %eax,%edx
je     121dc <main+0xf4cc>
cmp    $0x4,%edx
mov    0x30(%esp),%eax
je     1219d <main+0xf48d>
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
jne    1225a <main+0xf54a>
movb   $0x62,(%esi)
jmp    11df8 <main+0xf0e8>
mov    0x598(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     12245 <main+0xf535>
add    $0x4,%eax
movzbl 0x1(%ecx),%edx
mov    %eax,0x598(%ebx)
movzbl (%ecx),%eax
cmp    $0x27,%al
jne    120b5 <main+0xf3a5>
mov    %edx,0x30(%esp)
movl   $0x0,0x34(%esp)
jmp    11dad <main+0xf09d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x598(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     1223e <main+0xf52e>
add    $0x4,%eax
mov    %eax,0x598(%ebx)
movzbl (%ecx),%eax
cmp    $0x27,%al
jne    12110 <main+0xf400>
movzbl 0x1(%ecx),%eax
mov    %ax,0x3e(%esp)
fild   0x3e(%esp)
mov    0x20(%esp),%ecx
lea    0x48(%esp),%eax
sub    %eax,%ecx
je     1216a <main+0xf45a>
cmp    $0x4,%ecx
je     121f5 <main+0xf4e5>
mov    0x4c(%esp),%eax
fstpl  0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x6801(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   4870 <main+0x1b60>
mov    $0x1,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x48(%esp),%edx
mov    %esi,%eax
call   118c0 <main+0xebb0>
mov    0x48(%esp),%edx
mov    %eax,%esi
mov    (%edi),%eax
mov    (%eax),%ecx
cmp    0x4(%eax),%ecx
jne    11c8d <main+0xef7d>
xchg   %ax,%ax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   11760 <main+0xea50>
jmp    11c92 <main+0xef82>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2(%ebp),%esi
jmp    11c80 <main+0xef70>
movzbl 0x1(%esi),%eax
add    $0x1,%esi
cmp    $0x2a,%al
jne    11d11 <main+0xf001>
mov    0x20(%esp),%eax
mov    %ecx,0x30(%esp)
lea    0x4(%eax),%edx
mov    %edx,0x24(%esp)
call   11b60 <main+0xee50>
mov    0x20(%esp),%ecx
mov    0x24(%esp),%edx
mov    %edx,0x20(%esp)
mov    %eax,(%ecx)
mov    0x30(%esp),%ecx
jmp    11d11 <main+0xf001>
lea    0x0(%esi),%esi
call   11b60 <main+0xee50>
mov    %eax,0x48(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x20(%esp)
jmp    11ce2 <main+0xefd2>
xchg   %ax,%ax
mov    %edx,0x8(%esp)
mov    0x48(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
lea    0x0(%esi),%esi
mov    0x30(%esp),%edx
mov    0x34(%esp),%ecx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
cmp    $0x22,%al
je     11f38 <main+0xf228>
mov    %ecx,0x30(%esp)
call   2ac0 <__errno_location@plt>
mov    0x30(%esp),%ecx
mov    %ecx,0x38(%esp)
movl   $0x0,(%eax)
lea    0x44(%esp),%eax
mov    %ecx,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
call   2800 <__strtoull_internal@plt>
mov    0x38(%esp),%ecx
mov    %edx,0x34(%esp)
mov    0x44(%esp),%edx
mov    %eax,0x30(%esp)
mov    %ecx,%eax
call   11ad0 <main+0xedc0>
jmp    11dad <main+0xf09d>
cmp    $0x22,%al
je     11f74 <main+0xf264>
mov    %ecx,0x30(%esp)
lea    0x0(%esi,%eiz,1),%esi
call   2ac0 <__errno_location@plt>
mov    0x30(%esp),%ecx
mov    %ecx,0x38(%esp)
movl   $0x0,(%eax)
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   2af0 <strtod@plt>
mov    0x38(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ecx,%eax
fstpl  0x30(%esp)
call   11ad0 <main+0xedc0>
mov    0x20(%esp),%ecx
lea    0x48(%esp),%eax
sub    %eax,%ecx
fldl   0x30(%esp)
jne    11f91 <main+0xf281>
fstpl  0x4(%esp)
mov    %ebp,(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
mov    %edx,0xc(%esp)
jmp    11d86 <main+0xf076>
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
mov    0x20(%esp),%ecx
jmp    11f00 <main+0xf1f0>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
mov    0x30(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
mov    0x20(%esp),%ecx
jmp    11f00 <main+0xf1f0>
mov    0x48(%esp),%eax
fstpl  0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   11880 <main+0xeb70>
jmp    11df8 <main+0xf0e8>
lea    -0x681a(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
jmp    11fd2 <main+0xf2c2>
lea    0x29b0(%ebx),%eax
jmp    11d69 <main+0xf059>
lea    0x29b0(%ebx),%eax
jmp    11ea9 <main+0xf199>
xor    %edx,%edx
jmp    11e5c <main+0xf14c>
fldz
jmp    11f81 <main+0xf271>
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
jmp    11dad <main+0xf09d>
mov    0x59c(%ebx),%eax
jmp    11fd7 <main+0xf2c7>
lea    -0x67e8(%ebx),%eax
mov    %eax,(%esp)
call   4870 <main+0x1b60>
mov    $0x1,%eax
jmp    11fd7 <main+0xf2c7>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x9ba3,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edx
lea    0x4(%edx),%ebp
lea    0x238(%ebx),%eax
mov    (%eax),%edi
mov    0x4(%edx),%eax
test   %eax,%eax
je     12328 <main+0xf618>
cmpb   $0x2d,(%eax)
jne    122d0 <main+0xf5c0>
cmpb   $0x6e,0x1(%eax)
jne    122d0 <main+0xf5c0>
cmpb   $0x0,0x2(%eax)
jne    122d0 <main+0xf5c0>
mov    0x8(%edx),%eax
lea    0x8(%edx),%ebp
mov    $0xffffffff,%esi
test   %eax,%eax
jne    122d2 <main+0xf5c2>
jmp    122f1 <main+0xf5e1>
xchg   %ax,%ax
xor    %esi,%esi
call   11980 <main+0xec70>
mov    %edi,0x4(%esp)
add    %eax,%esi
lea    0x1fc(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   11720 <main+0xea10>
test   %esi,%esi
jle    12300 <main+0xf5f0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%ecx
lea    0x4(%ebp),%edx
mov    $0x20,%eax
test   %ecx,%ecx
je     12349 <main+0xf639>
mov    (%edi),%ecx
cmp    0x4(%edi),%ecx
je     12333 <main+0xf623>
mov    %al,(%ecx)
addl   $0x1,(%edi)
mov    (%edx),%eax
mov    %edx,%ebp
test   %eax,%eax
jne    122d2 <main+0xf5c2>
jmp    122f1 <main+0xf5e1>
lea    0x0(%esi),%esi
mov    %ebp,%edx
mov    $0xa,%eax
xor    %esi,%esi
jmp    1230f <main+0xf5ff>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   11760 <main+0xea50>
mov    0xc(%esp),%edx
jmp    1231b <main+0xf60b>
test   %esi,%esi
mov    $0xa,%al
jne    122f1 <main+0xf5e1>
nop
jmp    1230f <main+0xf5ff>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x9ac2,%ebx
sub    $0x10,%esp
lea    -0x67c8(%ebx),%edx
lea    -0x5ec(%ebx),%esi
jmp    12391 <main+0xf681>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%esi
mov    (%esi),%edx
test   %edx,%edx
je     123b0 <main+0xf6a0>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
jne    12388 <main+0xf678>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    (%eax),%eax
call   2f30 <main+0x220>
add    $0x9a60,%ebx
test   %eax,%eax
je     12438 <main+0xf728>
call   12360 <main+0xf650>
test   %eax,%eax
mov    %eax,%esi
je     12420 <main+0xf710>
cmpw   $0x0,0x6(%eax)
je     12400 <main+0xf6f0>
movswl 0x4(%esi),%eax
cmp    $0x25,%ax
je     12448 <main+0xf738>
mov    %esi,0x5a0(%ebx)
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
je     12420 <main+0xf710>
mov    0x8(%edi),%ecx
test   %ecx,%ecx
je     123e8 <main+0xf6d8>
call   12360 <main+0xf650>
test   %eax,%eax
je     123e8 <main+0xf6d8>
cmpw   $0x1,0x6(%eax)
jne    123e8 <main+0xf6d8>
xchg   %ax,%ax
movl   $0x0,0x5a0(%ebx)
00
mov    $0x27,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x5a0(%ebx)
00
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x4(%edi),%edx
test   %edx,%edx
jne    123f2 <main+0xf6e2>
jmp    12420 <main+0xf710>
jmp    12460 <main+0xf750>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
call   2f30 <main+0x220>
add    $0x99c6,%ebx
sub    $0x78,%esp
lea    0x10(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   2c40 <__xstat64@plt>
test   %eax,%eax
jne    12498 <main+0xf788>
mov    0x20(%esp),%eax
add    $0x78,%esp
pop    %ebx
and    $0x49,%eax
ret
nop
add    $0x78,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xdc,%esp
call   2f30 <main+0x220>
add    $0x997b,%ebx
cmp    $0x22,%eax
je     12570 <main+0xf860>
test   %eax,%eax
je     12528 <main+0xf818>
cmp    $0x25,%eax
je     12508 <main+0xf7f8>
mov    0x5a0(%ebx),%ecx
test   %ecx,%ecx
je     12538 <main+0xf828>
cmpw   $0x0,0x6(%ecx)
jne    12538 <main+0xf828>
mov    0x5a4(%ebx),%eax
mov    0x4(%eax),%edi
lea    0x4(%eax),%edx
mov    %edx,0x5a4(%ebx)
test   %edi,%edi
je     12b02 <main+0xfdf2>
cmp    $0x17,%esi
ja     126b8 <main+0xf9a8>
mov    -0x6718(%ebx,%esi,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    0x5a4(%ebx),%eax
add    $0x4,%eax
mov    %eax,0x5a4(%ebx)
call   123c0 <main+0xf6b0>
cmp    $0x26,%eax
jne    125e8 <main+0xf8d8>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x5a4(%ebx),%esi
lea    0x4(%esi),%edi
mov    %edi,%eax
call   123c0 <main+0xf6b0>
mov    0x5a0(%ebx),%edx
test   %edx,%edx
je     12559 <main+0xf849>
cmpw   $0x1,0x6(%edx)
je     125a0 <main+0xf890>
mov    (%esi),%eax
cmpb   $0x0,(%eax)
setne  %al
add    $0xdc,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x5a4(%ebx),%eax
add    $0x4,%eax
mov    %eax,0x5a4(%ebx)
call   123c0 <main+0xf6b0>
call   124a0 <main+0xf790>
test   %eax,%eax
sete   %al
add    $0xdc,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
mov    (%esi),%ebp
call   123c0 <main+0xf6b0>
lea    0x8(%esi),%eax
mov    0x8(%esi),%esi
mov    0x5a0(%ebx),%ecx
mov    %eax,0x5a4(%ebx)
test   %esi,%esi
je     12b02 <main+0xfdf2>
movzwl 0x4(%ecx),%eax
sub    $0x11,%eax
cmp    $0x10,%ax
ja     12975 <main+0xfc65>
movzwl %ax,%eax
mov    -0x66b8(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
call   12b30 <main+0xfe20>
mov    %eax,%esi
mov    0x5a4(%ebx),%eax
add    $0x4,%eax
mov    %eax,0x5a4(%ebx)
call   123c0 <main+0xf6b0>
cmp    $0x26,%eax
jne    12b0f <main+0xfdff>
mov    %esi,%eax
jmp    1252a <main+0xf81a>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x0,(%edi)
setne  %al
jmp    1252a <main+0xf81a>
lea    0x0(%esi),%esi
movl   $0x200,0xc(%esp)
movl   $0x2,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   27c0 <faccessat@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
lea    0x0(%esi),%esi
movl   $0x200,0xc(%esp)
movl   $0x4,0x8(%esp)
jmp    12638 <main+0xf928>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   d190 <main+0xa480>
mov    %eax,(%esp)
call   2c20 <isatty@plt>
jmp    1252a <main+0xf81a>
lea    0x0(%esi),%esi
call   28d0 <geteuid@plt>
test   %eax,%eax
nop
je     12ac1 <main+0xfdb1>
movl   $0x200,0xc(%esp)
movl   $0x1,0x8(%esp)
jmp    12638 <main+0xf928>
xor    %eax,%eax
cmpb   $0x0,(%edi)
sete   %al
jmp    1252a <main+0xf81a>
lea    0x0(%esi),%esi
lea    0x70(%esp),%eax
cmp    $0xb,%esi
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
je     12ad5 <main+0xfdc5>
call   2c40 <__xstat64@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
sub    $0x5,%esi
cmp    $0x10,%esi
ja     1298e <main+0xfc7e>
mov    -0x6674(%ebx,%esi,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    %ebp,(%esp)
call   d190 <main+0xa480>
mov    %esi,(%esp)
mov    %edx,%edi
mov    %eax,%ebp
call   d190 <main+0xa480>
mov    $0x1,%ecx
cmp    %edx,%edi
jl     1271b <main+0xfa0b>
jg     12748 <main+0xfa38>
cmp    %eax,%ebp
jae    12748 <main+0xfa38>
mov    %ecx,%eax
lea    0x0(%esi),%esi
jmp    1252a <main+0xf81a>
mov    %ebp,(%esp)
call   d190 <main+0xa480>
mov    %esi,(%esp)
mov    %edx,%edi
mov    %eax,%ebp
call   d190 <main+0xa480>
mov    $0x1,%ecx
cmp    %edx,%edi
jl     1271b <main+0xfa0b>
jg     12748 <main+0xfa38>
cmp    %eax,%ebp
jbe    1271b <main+0xfa0b>
xor    %ecx,%ecx
mov    %ecx,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    1252a <main+0xf81a>
mov    %ebp,(%esp)
call   d190 <main+0xa480>
mov    %esi,(%esp)
mov    %eax,%ebp
mov    %edx,%edi
call   d190 <main+0xa480>
xor    %ebp,%eax
xor    %edi,%edx
or     %edx,%eax
setne  %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    %ebp,(%esp)
call   d190 <main+0xa480>
mov    %esi,(%esp)
mov    %eax,%ebp
mov    %edx,%edi
call   d190 <main+0xa480>
xor    %ebp,%eax
xor    %edi,%edx
or     %edx,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2700 <strcmp@plt>
shr    $0x1f,%eax
jmp    1252a <main+0xf81a>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
mov    0x74(%esp),%edx
cmp    %edx,0x1c(%esp)
mov    0x18(%esp),%eax
jne    12528 <main+0xf818>
cmp    0x70(%esp),%eax
jne    12528 <main+0xf818>
mov    0x7c(%esp),%eax
cmp    %eax,0x24(%esp)
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
mov    0xb0(%esp),%eax
cmp    %eax,0x58(%esp)
setl   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    12528 <main+0xf818>
mov    0xb0(%esp),%eax
cmp    %eax,0x58(%esp)
setg   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    %ebp,(%esp)
call   d190 <main+0xa480>
mov    %esi,(%esp)
mov    %edx,%edi
mov    %eax,%ebp
call   d190 <main+0xa480>
mov    $0x1,%ecx
cmp    %edx,%edi
jg     1271b <main+0xfa0b>
jl     12748 <main+0xfa38>
cmp    %eax,%ebp
jbe    12748 <main+0xfa38>
mov    %ecx,%eax
jmp    1252a <main+0xf81a>
mov    %ebp,(%esp)
call   d190 <main+0xa480>
mov    %esi,(%esp)
mov    %edx,%edi
mov    %eax,%ebp
call   d190 <main+0xa480>
mov    $0x1,%ecx
cmp    %edx,%edi
jg     1271b <main+0xfa0b>
jl     12748 <main+0xfa38>
cmp    %eax,%ebp
jb     12748 <main+0xfa38>
mov    %ecx,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    1252a <main+0xf81a>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   2700 <strcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    $0x1,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0x1000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
shr    $0x9,%eax
and    $0x1,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
shr    $0xa,%eax
and    $0x1,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
shr    $0xb,%eax
and    $0x1,%eax
jmp    1252a <main+0xf81a>
mov    0x9c(%esp),%eax
or     0xa0(%esp),%eax
setne  %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x88(%esp),%esi
call   28d0 <geteuid@plt>
cmp    %eax,%esi
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0xc000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    0x8c(%esp),%esi
call   2900 <getegid@plt>
cmp    %eax,%esi
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    %edi,%eax
call   12460 <main+0xf750>
test   %eax,%eax
jne    12696 <main+0xf986>
jmp    1252a <main+0xf81a>
call   2c70 <__lxstat64@plt>
test   %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jne    12528 <main+0xf818>
mov    0x80(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
sete   %al
movzbl %al,%eax
jmp    1252a <main+0xf81a>
mov    (%ecx),%eax
lea    -0x67ae(%ebx),%edx
call   2cd0 <__ctype_b_loc@plt+0x10>
lea    -0x67c5(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7458(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x92f3,%ebx
sub    $0x1c,%esp
movl   $0x0,0xc(%esp)
lea    0x0(%esi),%esi
mov    $0x1,%esi
jmp    12b66 <main+0xfe56>
nop
lea    0x8(%ebp),%eax
mov    %eax,0x5a4(%ebx)
call   123c0 <main+0xf6b0>
call   124a0 <main+0xf790>
mov    0x5a4(%ebx),%ebp
lea    0x4(%ebp),%edi
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%esi
mov    %edi,%eax
call   123c0 <main+0xf6b0>
cmp    $0x23,%eax
je     12b58 <main+0xfe48>
mov    %edi,%eax
or     %esi,0xc(%esp)
call   123c0 <main+0xf6b0>
cmp    $0x24,%eax
jne    12baa <main+0xfe9a>
lea    0x8(%ebp),%eax
mov    %eax,0x5a4(%ebx)
call   123c0 <main+0xf6b0>
jmp    12b50 <main+0xfe40>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
call   2f30 <main+0x220>
add    $0x925c,%ebx
mov    0x30(%esp),%edi
mov    (%esi),%eax
cmpb   $0x5b,(%eax)
je     12c88 <main+0xff78>
sub    $0x1,%edi
test   %edi,%edi
lea    0x4(%esi),%ebp
jle    12ca9 <main+0xff99>
cmp    $0x3,%edi
je     12c38 <main+0xff28>
cmp    $0x4,%edi
je     12c52 <main+0xff42>
mov    %ebp,%eax
call   123c0 <main+0xf6b0>
mov    %ebp,0x5a4(%ebx)
call   12b30 <main+0xfe20>
mov    0x5a4(%ebx),%edx
mov    (%edx),%ecx
test   %eax,%eax
sete   %al
test   %ecx,%ecx
movzbl %al,%eax
je     12c2e <main+0xff1e>
mov    0x4(%edx),%edx
test   %edx,%edx
jne    12cb6 <main+0xffa6>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8(%esi),%eax
call   12360 <main+0xf650>
test   %eax,%eax
mov    %eax,%edx
je     12c52 <main+0xff42>
cmpw   $0x1,0x6(%edx)
mov    $0x27,%eax
je     12c04 <main+0xfef4>
mov    0x4(%esi),%eax
cmpb   $0x28,(%eax)
jne    12bfd <main+0xfeed>
cmpb   $0x0,0x1(%eax)
jne    12bfd <main+0xfeed>
lea    -0x4(,%edi,4),%eax
mov    0x4(%esi,%eax,1),%edx
cmpb   $0x29,(%edx)
jne    12bfd <main+0xfeed>
cmpb   $0x0,0x1(%edx)
jne    12bfd <main+0xfeed>
movl   $0x0,0x4(%esi,%eax,1)
lea    0x8(%esi),%ebp
jmp    12bfd <main+0xfeed>
xchg   %ax,%ax
sub    $0x1,%edi
lea    (%esi,%edi,4),%eax
mov    (%eax),%edx
cmpb   $0x5d,(%edx)
jne    12cc3 <main+0xffb3>
sub    $0x1,%edi
test   %edi,%edi
movl   $0x0,(%eax)
lea    0x4(%esi),%ebp
jg     12bf3 <main+0xfee3>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x6792(%ebx),%edx
mov    %ecx,%eax
call   2cd0 <__ctype_b_loc@plt+0x10>
lea    -0x679c(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x9143,%ebx
sub    $0x5c,%esp
movl   $0x2,(%esp)
call   2880 <sysconf@plt>
mov    %eax,%esi
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   2730 <times@plt>
mov    0x4c(%esp),%eax
mov    $0x88888889,%ecx
mov    %esi,0x3c(%esp)
mov    0x48(%esp),%edi
cltd
fildl  0x3c(%esp)
mov    %eax,0x3c(%esp)
idiv   %esi
fildl  0x3c(%esp)
mov    %edi,0x3c(%esp)
fdiv   %st(1),%st
fstpl  0x2c(%esp)
fildl  0x3c(%esp)
fdiv   %st(1),%st
mov    %eax,%ebp
imul   %ecx
mov    %edi,%eax
add    %ebp,%edx
sar    $0x5,%edx
sar    $0x1f,%ebp
sub    %ebp,%edx
mov    %edx,0x28(%esp)
cltd
idiv   %esi
fstpl  0x20(%esp)
fildl  0x44(%esp)
fdiv   %st(1),%st
mov    %eax,%edi
imul   %ecx
mov    0x44(%esp),%eax
add    %edi,%edx
sar    $0x5,%edx
sar    $0x1f,%edi
sub    %edi,%edx
mov    %edx,0x1c(%esp)
cltd
idiv   %esi
fstpl  0x14(%esp)
fildl  0x40(%esp)
fdivp  %st,%st(1)
mov    %eax,%edi
imul   %ecx
mov    0x40(%esp),%eax
fstpl  0x8(%esp)
add    %edi,%edx
sar    $0x5,%edx
sar    $0x1f,%edi
sub    %edi,%edx
mov    %edx,0x10(%esp)
cltd
idiv   %esi
mov    %eax,%esi
imul   %ecx
lea    -0x6630(%ebx),%eax
mov    %eax,(%esp)
lea    (%edx,%esi,1),%ecx
sar    $0x5,%ecx
sar    $0x1f,%esi
sub    %esi,%ecx
mov    %ecx,0x4(%esp)
call   11880 <main+0xeb70>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x9053,%ebx
sub    $0x1c,%esp
lea    0x254(%ebx),%esi
lea    0x2d4(%ebx),%edi
xchg   %ax,%ax
mov    0x8(%esi),%eax
movzbl (%eax),%ebp
mov    %eax,0xc(%esp)
mov    %ebp,%ecx
mov    %ebp,%eax
movzbl %cl,%edx
mov    %edx,%ecx
shl    $0x4,%ecx
test   %al,%al
je     12e29 <main+0x10119>
cmp    $0x3d,%al
je     12e29 <main+0x10119>
mov    0xc(%esp),%eax
jmp    12e1c <main+0x1010c>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     12e29 <main+0x10119>
add    $0x1,%eax
add    %edx,%ecx
movzbl (%eax),%edx
cmp    $0x3d,%dl
jne    12e18 <main+0x10108>
mov    $0xa41a41a5,%eax
mul    %ecx
mov    %ecx,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x5,%edx
imul   $0x27,%edx,%edx
sub    %edx,%ecx
mov    0x5b4(%ebx,%ecx,4),%eax
mov    %esi,0x5b4(%ebx,%ecx,4)
add    $0x10,%esi
mov    %eax,-0x10(%esi)
cmp    %edi,%esi
jb     12df0 <main+0x100e0>
call   28d0 <geteuid@plt>
test   %eax,%eax
jne    12e6d <main+0x1015d>
lea    -0x6613(%ebx),%eax
mov    %eax,0x29c(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x8fa3,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
lea    0x1fc(%ebx),%eax
lea    0x650(%ebx),%esi
or     %edi,%ebp
lea    0x5b4(%ebx),%ecx
mov    %esi,0x8(%esp)
mov    (%eax),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%esi
test   %esi,%esi
jne    12ec6 <main+0x101b6>
jmp    12ee8 <main+0x101d8>
mov    (%esi),%esi
test   %esi,%esi
je     12ee8 <main+0x101d8>
mov    0x4(%esi),%edx
and    %ebp,%edx
cmp    %edi,%edx
jne    12ec0 <main+0x101b0>
lea    0x1f8(%ebx),%edx
cmp    (%edx),%eax
je     12f30 <main+0x10220>
mov    0x8(%esi),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    (%esi),%esi
test   %esi,%esi
jne    12ec6 <main+0x101b6>
add    $0x4,%ecx
cmp    0x8(%esp),%ecx
jb     12eb8 <main+0x101a8>
lea    0x1f8(%ebx),%ecx
cmp    %eax,(%ecx)
je     12f3f <main+0x1022f>
mov    0x38(%esp),%edx
test   %edx,%edx
je     12f09 <main+0x101f9>
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
lea    0x1fc(%ebx),%ecx
add    $0x4,%eax
movl   $0x0,-0x4(%eax)
sub    (%ecx),%eax
mov    %eax,(%esp)
call   c170 <main+0x9460>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0xc(%esp)
call   c4a0 <main+0x9790>
mov    0xc(%esp),%ecx
jmp    12ed9 <main+0x101c9>
call   c4a0 <main+0x9790>
jmp    12efb <main+0x101eb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
call   2f30 <main+0x220>
add    $0x8ec4,%ebx
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12e80 <main+0x10170>
movl   $0x4,0x8(%esp)
mov    %eax,%esi
lea    -0x816c(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
sub    %esi,%eax
sar    $0x2,%eax
mov    %eax,0x4(%esp)
call   2be0 <qsort@plt>
mov    0x50(%esp),%eax
lea    -0x6ef6(%ebx),%ebp
cmpb   $0x0,(%eax)
cmove  %eax,%ebp
cmp    0x2c(%esp),%esi
lea    -0x660c(%ebx),%eax
mov    %eax,0x18(%esp)
jb     12fff <main+0x102ef>
jmp    13038 <main+0x10328>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
sub    %edi,%ecx
mov    %edi,0x10(%esp)
add    $0x4,%esi
mov    %ecx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   11880 <main+0xeb70>
cmp    %esi,0x2c(%esp)
jbe    13038 <main+0x10328>
mov    (%esi),%edi
movl   $0x3d,0x4(%esp)
mov    %edi,(%esp)
call   2aa0 <strchrnul@plt>
mov    %eax,%ecx
lea    0x29b0(%ebx),%eax
cmpb   $0x0,(%ecx)
je     12fd0 <main+0x102c0>
add    $0x1,%ecx
mov    %ecx,(%esp)
mov    %ecx,0x1c(%esp)
call   d220 <main+0xa510>
mov    (%esi),%edi
mov    0x1c(%esp),%ecx
jmp    12fd0 <main+0x102c0>
lea    0x0(%esi),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   2f30 <main+0x220>
add    $0x8dd6,%ebx
sub    $0x18,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
movl   $0x8,(%esp)
call   c0b0 <main+0x93a0>
lea    0x2ab4(%ebx),%edx
mov    (%edx),%ecx
movl   $0x0,0x4(%eax)
mov    %ecx,(%eax)
mov    %eax,(%edx)
lea    0x6fc(%ebx),%ecx
subl   $0x1,(%ecx)
jne    1309e <main+0x1038e>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    130a8 <main+0x10398>
mov    (%eax),%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
call   4790 <main+0x1a80>
mov    0xc(%esp),%eax
mov    (%eax),%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
movsbl (%edx),%eax
movsbl (%ecx),%esi
cmp    %esi,%eax
jne    13106 <main+0x103f6>
test   %eax,%eax
je     13120 <main+0x10410>
cmp    $0x3d,%eax
jne    130f6 <main+0x103e6>
lea    0x0(%esi,%eiz,1),%esi
jmp    13120 <main+0x10410>
lea    0x0(%esi),%esi
cmp    $0x3d,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     13120 <main+0x10410>
test   %eax,%eax
je     13120 <main+0x10410>
add    $0x1,%edx
add    $0x1,%ecx
movsbl (%edx),%eax
movsbl (%ecx),%esi
cmp    %esi,%eax
je     130e8 <main+0x103d8>
cmp    $0x3d,%eax
mov    $0x0,%edx
cmove  %edx,%eax
mov    %eax,%edx
sub    %esi,%edx
cmp    $0x3d,%esi
cmovne %edx,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
sub    $0x8,%esp
mov    (%eax),%esi
test   %esi,%esi
jne    13150 <main+0x10440>
jmp    13163 <main+0x10453>
lea    0x0(%esi),%esi
mov    %esi,%edi
mov    (%esi),%esi
test   %esi,%esi
je     13163 <main+0x10453>
mov    %ebp,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   130c0 <main+0x103b0>
test   %eax,%eax
jne    13148 <main+0x10438>
add    $0x8,%esp
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   2f30 <main+0x220>
add    $0x8cac,%ebx
movzbl (%eax),%eax
movzbl %al,%edx
mov    %edx,%esi
shl    $0x4,%esi
cmp    $0x3d,%al
je     131b1 <main+0x104a1>
test   %al,%al
je     131b1 <main+0x104a1>
mov    0x30(%esp),%ecx
jmp    131a4 <main+0x10494>
nop
test   %dl,%dl
je     131b1 <main+0x104a1>
add    $0x1,%ecx
add    %edx,%esi
movzbl (%ecx),%edx
cmp    $0x3d,%dl
jne    131a0 <main+0x10490>
mov    %esi,%eax
mov    $0xa41a41a5,%edx
mul    %edx
mov    %esi,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x5,%edx
imul   $0x27,%edx,%edx
sub    %edx,%esi
lea    0x29b8(%ebx),%edx
lea    0x5b4(%ebx,%esi,4),%eax
movsbl 0xc(%edx),%esi
mov    0x30(%esp),%edx
and    $0x1,%esi
call   13130 <main+0x10420>
or     0x34(%esp),%esi
mov    %esi,%ebp
mov    (%eax),%edi
mov    %eax,%edx
test   %edi,%edi
je     132d8 <main+0x105c8>
mov    0x4(%edi),%eax
test   $0x2,%al
jne    1332d <main+0x1061d>
test   $0x80,%esi
jne    1324f <main+0x1053f>
mov    0xc(%edi),%ebp
test   %ebp,%ebp
je     1321b <main+0x1050b>
test   $0x40,%esi
je     13278 <main+0x10568>
test   $0x18,%al
je     13260 <main+0x10550>
mov    %eax,%ecx
mov    %esi,%ebp
and    $0x27,%ebp
and    $0x4,%ecx
and    $0xfffffec7,%eax
or     %ebp,%ecx
mov    %eax,%ebp
or     %esi,%ebp
cmp    $0x20,%ecx
je     132a9 <main+0x10599>
test   $0x118,%ebp
je     13318 <main+0x10608>
mov    0x30(%esp),%eax
mov    %ebp,0x4(%edi)
mov    %eax,0x8(%edi)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    0x4(%edi),%eax
mov    0xc(%esp),%edx
jmp    1321f <main+0x1050f>
mov    0x30(%esp),%eax
movl   $0x3d,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   2aa0 <strchrnul@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   *%ebp
mov    0x4(%edi),%eax
mov    0xc(%esp),%edx
test   $0x18,%al
jne    1321f <main+0x1050f>
jmp    13260 <main+0x10550>
mov    (%edi),%eax
mov    %eax,(%edx)
mov    %edi,(%esp)
call   27a0 <free@plt>
and    $0x118,%esi
cmp    $0x100,%esi
jne    1324f <main+0x1053f>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
jmp    1324f <main+0x1053f>
lea    0x0(%esi,%eiz,1),%esi
test   $0x80,%esi
mov    %eax,0xc(%esp)
jne    1324f <main+0x1053f>
mov    %esi,%eax
and    $0x27,%eax
cmp    $0x20,%eax
je     132b5 <main+0x105a5>
movl   $0x10,(%esp)
call   c0b0 <main+0x93a0>
mov    0xc(%esp),%edx
mov    %eax,%edi
mov    (%edx),%eax
movl   $0x0,0xc(%edi)
mov    %eax,(%edi)
mov    %edi,(%edx)
jmp    13239 <main+0x10529>
xchg   %ax,%ax
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c130 <main+0x9420>
mov    %eax,0x30(%esp)
jmp    13245 <main+0x10535>
and    $0x100,%esi
je     13341 <main+0x10631>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
mov    0x8(%edi),%esi
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   2aa0 <strchrnul@plt>
mov    %esi,0x8(%esp)
sub    %esi,%eax
mov    %eax,0x4(%esp)
lea    -0x6600(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x8ab0,%ebx
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   e2d0 <main+0xb5c0>
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   2aa0 <strchrnul@plt>
mov    %eax,%edi
sub    0x30(%esp),%edi
je     13484 <main+0x10774>
cmp    %esi,%eax
jne    13484 <main+0x10774>
mov    0x34(%esp),%edx
test   %edx,%edx
je     13478 <main+0x10768>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   2a10 <strlen@plt>
mov    %eax,%ecx
lea    0x6fc(%ebx),%esi
addl   $0x1,(%esi)
lea    0x2(%ecx,%edi,1),%eax
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   c0b0 <main+0x93a0>
mov    %edi,0x8(%esp)
mov    %eax,%ebp
mov    0x30(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   2b40 <mempcpy@plt>
mov    %eax,%edx
mov    0x34(%esp),%eax
test   %eax,%eax
je     13427 <main+0x10717>
mov    0xc(%esp),%ecx
lea    0x1(%edx),%eax
mov    0x34(%esp),%edi
movb   $0x3d,(%edx)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
call   2b40 <mempcpy@plt>
mov    %eax,%edx
mov    0x38(%esp),%eax
movb   $0x0,(%edx)
mov    %ebp,(%esp)
or     $0x1,%ah
mov    %eax,0x4(%esp)
call   13170 <main+0x10460>
mov    (%esi),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%esi)
jne    13454 <main+0x10744>
lea    0x704(%ebx),%edx
mov    (%edx),%edx
test   %edx,%edx
jne    13460 <main+0x10750>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
call   4790 <main+0x1a80>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
orl    $0x20,0x38(%esp)
xor    %ecx,%ecx
jmp    133ce <main+0x106be>
mov    0x30(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x65ed(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
xchg   %ax,%ax
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x8985,%ebx
sub    $0x44,%esp
mov    0x54(%esp),%edx
lea    0x20(%esp),%esi
mov    0x58(%esp),%ecx
mov    %esi,(%esp)
movl   $0x20,0x4(%esp)
mov    %edx,0xc(%esp)
lea    -0x7598(%ebx),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   114a0 <main+0xe790>
mov    0x5c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
add    $0x44,%esp
pop    %ebx
pop    %esi
mov    %edx,%eax
mov    %ecx,%edx
ret
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x88e3,%ebx
sub    $0x2c,%esp
lea    0x6fc(%ebx),%eax
addl   $0x1,(%eax)
lea    0x2ab4(%ebx),%edx
mov    (%edx),%eax
mov    (%eax),%ecx
mov    %ecx,(%edx)
mov    0x4(%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   27a0 <free@plt>
mov    0x18(%esp),%edx
test   %edx,%edx
mov    %edx,%esi
jne    135d8 <main+0x108c8>
jmp    13643 <main+0x10933>
lea    0x0(%esi),%esi
mov    0x8(%esi),%eax
cmp    $0x20,%eax
je     13678 <main+0x10968>
mov    0xc(%esi),%ecx
cmp    %ecx,0x8(%edi)
je     136d8 <main+0x109c8>
test   $0x18,%al
mov    $0xfffffffb,%ebp
mov    $0x4,%edx
je     136c0 <main+0x109b0>
and    0x4(%edi),%ebp
and    %edx,%eax
or     %ebp,%eax
mov    %eax,0x4(%edi)
and    $0x27,%eax
cmp    $0x20,%eax
je     1368c <main+0x1097c>
mov    %esi,(%esp)
call   27a0 <free@plt>
mov    0x18(%esp),%esi
test   %esi,%esi
je     13643 <main+0x10933>
mov    (%esi),%eax
mov    0x4(%esi),%edi
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
test   %eax,%eax
jne    13588 <main+0x10878>
test   %edi,%edi
je     136f8 <main+0x109e8>
cmpl   $0x20,0x8(%esi)
je     13688 <main+0x10978>
mov    0xc(%edi),%ebp
test   %ebp,%ebp
je     1361d <main+0x1090d>
movl   $0x3d,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   2aa0 <strchrnul@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   *%ebp
testb  $0x18,0x4(%edi)
je     136b0 <main+0x109a0>
mov    0x8(%esi),%eax
mov    %eax,0x4(%edi)
mov    0xc(%esi),%eax
mov    %eax,0x8(%edi)
mov    %esi,(%esp)
call   27a0 <free@plt>
mov    0x18(%esp),%esi
test   %esi,%esi
jne    135d8 <main+0x108c8>
lea    0x6fc(%ebx),%eax
lea    0x6fc(%ebx),%ecx
mov    (%eax),%eax
mov    %eax,0x18(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ecx)
jne    1366a <main+0x1095a>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    136e8 <main+0x109d8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0xfffffffb,%ebp
mov    $0x4,%edx
jmp    135b2 <main+0x108a2>
nop
andl   $0xfffffff9,0x4(%edi)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   13370 <main+0x10660>
jmp    135c8 <main+0x108b8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
jmp    13627 <main+0x10917>
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
call   27a0 <free@plt>
mov    0x8(%esi),%eax
mov    0x1c(%esp),%edx
jmp    135b2 <main+0x108a2>
mov    $0xfffffff3,%ebp
mov    $0xc,%edx
jmp    135b2 <main+0x108a2>
nop
call   4790 <main+0x1a80>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
lea    0x29b8(%ebx),%ecx
mov    (%eax),%edx
mov    %edx,(%ecx)
mov    0x4(%eax),%edx
mov    %edx,0x4(%ecx)
mov    0x8(%eax),%edx
mov    %edx,0x8(%ecx)
mov    0xc(%eax),%edx
mov    %edx,0xc(%ecx)
movzbl 0x10(%eax),%eax
mov    %al,0x10(%ecx)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   27a0 <free@plt>
call   d3d0 <main+0xa6c0>
jmp    135c8 <main+0x108b8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x86e4,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
lea    0x2ab4(%ebx),%edi
cmp    %esi,(%edi)
je     13770 <main+0x10a60>
nop
movl   $0x0,(%esp)
call   13540 <main+0x10830>
cmp    %esi,(%edi)
jne    13760 <main+0x10a50>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x86a2,%ebx
sub    $0x10,%esp
lea    -0x65d5(%ebx),%esi
jmp    137a2 <main+0x10a92>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edi
mov    %esi,(%esp)
call   e020 <main+0xb310>
test   %eax,%eax
jne    137a0 <main+0x10a90>
lea    0x29cc(%ebx),%eax
mov    (%eax),%esi
mov    (%esi),%eax
test   %eax,%eax
jne    137d1 <main+0x10ac1>
jmp    137f7 <main+0x10ae7>
xchg   %ax,%ax
mov    %eax,(%esp)
add    $0x4,%esi
call   7170 <main+0x4460>
mov    (%esi),%eax
test   %eax,%eax
je     137f7 <main+0x10ae7>
cmp    $0x66,%edi
je     137c0 <main+0x10ab0>
add    $0x4,%esi
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    (%esi),%eax
test   %eax,%eax
jne    137d1 <main+0x10ac1>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   2f30 <main+0x220>
add    $0x861c,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     1384f <main+0x10b3f>
lea    0x6fc(%ebx),%ebp
addl   $0x1,0x0(%ebp)
mov    %edi,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   13170 <main+0x10460>
mov    (%esi),%esi
test   %esi,%esi
jne    13828 <main+0x10b18>
subl   $0x1,0x0(%ebp)
jne    1384f <main+0x10b3f>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    13858 <main+0x10b48>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
call   2f30 <main+0x220>
add    $0x85ac,%ebx
movzbl 0x0(%ebp),%ecx
movzbl %cl,%eax
mov    %eax,%edi
shl    $0x4,%edi
test   %cl,%cl
je     138b4 <main+0x10ba4>
cmp    $0x3d,%cl
je     138b4 <main+0x10ba4>
mov    %ebp,%esi
jmp    138a7 <main+0x10b97>
nop
test   %cl,%cl
je     138b4 <main+0x10ba4>
movzbl %cl,%eax
add    $0x1,%esi
movzbl (%esi),%ecx
add    %eax,%edi
cmp    $0x3d,%cl
jne    138a0 <main+0x10b90>
mov    %edi,%eax
mov    $0xa41a41a5,%edx
mul    %edx
mov    %edi,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x5,%edx
imul   $0x27,%edx,%edx
sub    %edx,%edi
mov    %ebp,%edx
lea    0x5b4(%ebx,%edi,4),%eax
call   13130 <main+0x10420>
mov    (%eax),%eax
test   %eax,%eax
je     13908 <main+0x10bf8>
testb  $0x20,0x4(%eax)
jne    13908 <main+0x10bf8>
movl   $0x3d,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   2aa0 <strchrnul@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
add    $0x1,%eax
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   2f30 <main+0x220>
add    $0x8503,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
movl   $0x0,0x4(%esp)
test   %eax,%eax
cmove  0x1bc(%ebx),%eax
mov    %eax,(%esp)
call   d0e0 <main+0xa3d0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   2f30 <main+0x220>
add    $0x84bc,%ebx
mov    (%esi),%eax
cmpb   $0x72,(%eax)
sete   %al
movzbl %al,%eax
mov    %eax,0x18(%esp)
lea    -0x6768(%ebx),%eax
mov    %eax,(%esp)
addl   $0x1,0x18(%esp)
call   e020 <main+0xb310>
cmp    $0x70,%eax
je     13a80 <main+0x10d70>
lea    0x29cc(%ebx),%eax
mov    (%eax),%ebp
mov    0x0(%ebp),%edi
test   %edi,%edi
je     13a80 <main+0x10d70>
lea    0x5b4(%ebx),%eax
mov    %eax,0x1c(%esp)
jmp    139e5 <main+0x10cd5>
add    $0x1,%esi
mov    0x18(%esp),%eax
add    $0x4,%ebp
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
call   13370 <main+0x10660>
mov    0x0(%ebp),%edi
test   %edi,%edi
je     13a70 <main+0x10d60>
movl   $0x3d,0x4(%esp)
mov    %edi,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
mov    %eax,%esi
jne    139c0 <main+0x10cb0>
movzbl (%edi),%edx
movzbl %dl,%eax
mov    %eax,%ecx
shl    $0x4,%ecx
cmp    $0x3d,%dl
je     13a28 <main+0x10d18>
test   %dl,%dl
je     13a28 <main+0x10d18>
mov    %edi,%edx
jmp    13a1c <main+0x10d0c>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     13a28 <main+0x10d18>
add    $0x1,%edx
add    %eax,%ecx
movzbl (%edx),%eax
cmp    $0x3d,%al
jne    13a18 <main+0x10d08>
mov    %ecx,%eax
mov    $0xa41a41a5,%edx
mul    %edx
mov    %ecx,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
mov    0x1c(%esp),%eax
shr    $0x5,%edx
imul   $0x27,%edx,%edx
sub    %edx,%ecx
mov    %edi,%edx
lea    (%eax,%ecx,4),%eax
call   13130 <main+0x10420>
mov    (%eax),%eax
test   %eax,%eax
je     139c3 <main+0x10cb3>
add    $0x4,%ebp
mov    0x0(%ebp),%edi
mov    0x18(%esp),%ecx
or     %ecx,0x4(%eax)
test   %edi,%edi
jne    139e5 <main+0x10cd5>
xchg   %ax,%ax
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   12f50 <main+0x10240>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x8373,%ebx
sub    $0x1c,%esp
lea    0x6fc(%ebx),%esi
addl   $0x1,(%esi)
movl   $0x10,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,%edi
mov    0x30(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2d,%dl
je     13bc8 <main+0x10eb8>
movzbl %dl,%ebp
mov    %ebp,%ecx
shl    $0x4,%ecx
test   %dl,%dl
je     13b14 <main+0x10e04>
cmp    $0x3d,%dl
je     13b14 <main+0x10e04>
mov    0x30(%esp),%eax
jmp    13b07 <main+0x10df7>
test   %dl,%dl
je     13b14 <main+0x10e04>
movzbl %dl,%ebp
add    $0x1,%eax
movzbl (%eax),%edx
add    %ebp,%ecx
cmp    $0x3d,%dl
jne    13b00 <main+0x10df0>
mov    %ecx,%eax
mov    $0xa41a41a5,%edx
mul    %edx
mov    %ecx,%eax
sub    %edx,%eax
shr    %eax
add    %eax,%edx
shr    $0x5,%edx
imul   $0x27,%edx,%edx
sub    %edx,%ecx
mov    0x30(%esp),%edx
lea    0x5b4(%ebx,%ecx,4),%eax
call   13130 <main+0x10420>
mov    (%eax),%ebp
mov    0x30(%esp),%eax
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
call   29f0 <strchr@plt>
test   %ebp,%ebp
je     13c18 <main+0x10f08>
mov    0x8(%ebp),%edx
mov    %edx,0xc(%edi)
mov    0x4(%ebp),%edx
mov    %edx,0x8(%edi)
or     $0xc,%edx
test   %eax,%eax
mov    %edx,0x4(%ebp)
je     13b85 <main+0x10e75>
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   13170 <main+0x10460>
lea    0x2ab4(%ebx),%eax
mov    %ebp,0x4(%edi)
mov    (%eax),%eax
mov    0x4(%eax),%edx
mov    %edx,(%edi)
mov    %edi,0x4(%eax)
subl   $0x1,(%esi)
jne    13ba9 <main+0x10e99>
lea    0x704(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    13bb8 <main+0x10ea8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   4790 <main+0x1a80>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%eax)
mov    $0x2d0,%ecx
mov    $0x2d,%ebp
jne    13afa <main+0x10dea>
movl   $0x11,(%esp)
xor    %bp,%bp
call   c0b0 <main+0x93a0>
lea    0x29b8(%ebx),%edx
mov    (%edx),%ecx
mov    %ecx,(%eax)
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%eax)
mov    0x8(%edx),%ecx
mov    %ecx,0x8(%eax)
mov    0xc(%edx),%ecx
mov    %ecx,0xc(%eax)
movzbl 0x10(%edx),%edx
mov    %dl,0x10(%eax)
mov    %eax,0xc(%edi)
jmp    13b85 <main+0x10e75>
xchg   %ax,%ax
test   %eax,%eax
je     13c3e <main+0x10f2e>
mov    0x30(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   13170 <main+0x10460>
mov    %eax,%ebp
movl   $0x20,0x8(%edi)
jmp    13b85 <main+0x10e75>
mov    0x30(%esp),%eax
movl   $0x4,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   13370 <main+0x10660>
mov    %eax,%ebp
jmp    13c32 <main+0x10f22>
xchg   %ax,%ax
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x81c5,%ebx
sub    $0x14,%esp
lea    0x2ab4(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     13caa <main+0x10f9a>
lea    0x29cc(%ebx),%eax
mov    (%eax),%eax
lea    0x4(%eax),%esi
mov    (%eax),%eax
test   %eax,%eax
je     13ca2 <main+0x10f92>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
add    $0x4,%esi
call   13ab0 <main+0x10da0>
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    13c90 <main+0x10f80>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    -0x65d2(%ebx),%eax
mov    %eax,(%esp)
call   4800 <main+0x1af0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
jmp    130c0 <main+0x103b0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x8144,%ebx
sub    $0xc0,%esp
lea    0x754(%ebx),%eax
lea    0x794(%ebx),%edx
mov    %edx,0x18(%eax)
mov    %edx,0x14(%eax)
lea    0x2a54(%ebx),%eax
movb   $0x1,0x10(%eax)
movl   $0x11,(%esp)
call   10d40 <main+0xe030>
call   12dd0 <main+0x100c0>
mov    0x1b8(%ebx),%eax
mov    (%eax),%edi
mov    (%edi),%esi
test   %esi,%esi
je     13d5d <main+0x1104d>
nop
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   29f0 <strchr@plt>
test   %eax,%eax
je     13d54 <main+0x11044>
movl   $0x9,0x4(%esp)
mov    %esi,(%esp)
call   13170 <main+0x10460>
add    $0x4,%edi
mov    (%edi),%esi
test   %esi,%esi
jne    13d30 <main+0x11020>
call   2bc0 <getppid@plt>
lea    0x2d9(%ebx),%esi
mov    %esi,(%esp)
movl   $0x1b,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x6483(%ebx),%eax
mov    %eax,0x8(%esp)
call   114a0 <main+0xe790>
lea    -0x5(%esi),%eax
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   13170 <main+0x10460>
lea    -0x771e(%ebx),%eax
mov    %eax,(%esp)
call   13870 <main+0x10b60>
test   %eax,%eax
mov    %eax,%esi
je     13db2 <main+0x110a2>
cmpb   $0x2f,(%eax)
je     13dd0 <main+0x110c0>
xor    %esi,%esi
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   4110 <main+0x1400>
add    $0xc0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    13db2 <main+0x110a2>
lea    0x68(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x73bb(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   2920 <__xstat@plt>
test   %eax,%eax
jne    13db2 <main+0x110a2>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
xor    0x6c(%esp),%edx
xor    0x68(%esp),%eax
or     %edx,%eax
jne    13db2 <main+0x110a2>
mov    0x74(%esp),%ecx
cmp    %ecx,0x1c(%esp)
cmovne %eax,%esi
jmp    13db4 <main+0x110a4>
nop
push   %ebx
call   2f30 <main+0x220>
add    $0x7ff6,%ebx
sub    $0x18,%esp
lea    0x71c(%ebx),%eax
movl   $0x0,(%eax)
lea    0x710(%ebx),%eax
movl   $0x0,(%eax)
call   80c0 <main+0x53b0>
lea    0x734(%ebx),%eax
movl   $0x0,(%eax)
lea    0x2798(%ebx),%eax
movl   $0x0,(%eax)
call   9d50 <main+0x7040>
lea    0x29f0(%ebx),%eax
movl   $0x0,(%eax)
lea    0x29f4(%ebx),%eax
movl   $0x0,(%eax)
movl   $0x0,(%esp)
call   10c00 <main+0xdef0>
movl   $0x0,(%esp)
call   13740 <main+0x10a30>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
call   2f30 <main+0x220>
add    $0x7f6f,%ebx
test   %eax,%eax
je     13f18 <main+0x11208>
lea    0x2ac0(%ebx),%edi
mov    (%esi),%eax
movswl -0x638c(%ebx,%eax,2),%eax
add    %eax,(%edi)
cmpl   $0x19,(%esi)
ja     13f18 <main+0x11208>
mov    (%esi),%eax
mov    -0x646c(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   2a10 <strlen@plt>
lea    0x2abc(%ebx),%edx
mov    (%edx),%ecx
lea    0x1(%eax,%ecx,1),%eax
mov    %eax,(%edx)
mov    0xc(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x8(%esi),%esi
test   %esi,%esi
jne    13ecd <main+0x111bd>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0xc(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x4(%esi),%esi
jmp    13f14 <main+0x11204>
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x8(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x4(%esi),%esi
jmp    13f14 <main+0x11204>
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
call   13fd0 <main+0x112c0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   2a10 <strlen@plt>
lea    0x2abc(%ebx),%ecx
mov    (%ecx),%edx
lea    0x1(%eax,%edx,1),%eax
mov    %eax,(%ecx)
mov    0x4(%esi),%esi
jmp    13f14 <main+0x11204>
xchg   %ax,%ax
mov    0xc(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   2a10 <strlen@plt>
lea    0x2abc(%ebx),%edx
mov    (%edx),%ecx
lea    0x1(%eax,%ecx,1),%eax
mov    %eax,(%edx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x10(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x4(%esi),%esi
jmp    13f14 <main+0x11204>
mov    0x8(%esi),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    13fd0 <main+0x112c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0xc(%esi),%eax
call   13eb0 <main+0x111a0>
mov    0x8(%esi),%esi
jmp    13f14 <main+0x11204>
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   2f30 <main+0x220>
add    $0x7e52,%ebx
test   %eax,%eax
lea    0x2ac0(%ebx),%edi
je     14001 <main+0x112f1>
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
addl   $0x8,(%edi)
call   13eb0 <main+0x111a0>
mov    (%esi),%esi
test   %esi,%esi
jne    13ff0 <main+0x112e0>
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
call   2f30 <main+0x220>
add    $0x7e0e,%ebx
test   %eax,%eax
je     141c8 <main+0x114b8>
mov    (%eax),%eax
lea    0x2ab8(%ebx),%edx
movswl -0x638c(%ebx,%eax,2),%ecx
mov    (%edx),%edi
add    %edi,%ecx
cmp    $0x19,%eax
mov    %ecx,(%edx)
ja     14074 <main+0x11364>
mov    -0x6404(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0xc(%edi)
mov    0x8(%esi),%eax
mov    %eax,0x8(%edi)
mov    0x4(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x4(%edi)
mov    (%esi),%eax
mov    %eax,(%edi)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x2ac4(%ebx),%eax
mov    (%eax),%ebp
mov    0x10(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   2850 <stpcpy@plt>
lea    0x2ac4(%ebx),%edx
mov    %ebp,0x10(%edi)
add    $0x1,%eax
mov    %eax,(%edx)
mov    0xc(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0xc(%edi)
mov    0x8(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x8(%edi)
mov    0x4(%esi),%eax
mov    %eax,0x4(%edi)
jmp    14074 <main+0x11364>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0xc(%edi)
mov    0x8(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x8(%edi)
mov    0x4(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x4(%edi)
jmp    14074 <main+0x11364>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x10(%edi)
mov    0xc(%esi),%eax
jmp    14060 <main+0x11350>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x4(%edi)
jmp    14074 <main+0x11364>
mov    0x10(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x10(%edi)
jmp    140ad <main+0x1139d>
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0xc(%edi)
lea    0x2ac4(%ebx),%eax
mov    (%eax),%ebp
mov    0x8(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   2850 <stpcpy@plt>
lea    0x2ac4(%ebx),%edx
mov    %ebp,0x8(%edi)
add    $0x1,%eax
mov    %eax,(%edx)
mov    0x4(%esi),%eax
mov    %eax,0x4(%edi)
jmp    14074 <main+0x11364>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
call   141d0 <main+0x114c0>
mov    %eax,0xc(%edi)
lea    0x2ac4(%ebx),%eax
mov    (%eax),%ebp
mov    0x8(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   2850 <stpcpy@plt>
lea    0x2ac4(%ebx),%edx
mov    %ebp,0x8(%edi)
add    $0x1,%eax
mov    %eax,(%edx)
mov    0x4(%esi),%eax
call   14010 <main+0x11300>
mov    %eax,0x4(%edi)
jmp    14074 <main+0x11364>
mov    0x8(%esi),%eax
call   141d0 <main+0x114c0>
mov    %eax,0x8(%edi)
mov    0x4(%esi),%eax
mov    %eax,0x4(%edi)
jmp    14074 <main+0x11364>
xchg   %ax,%ax
xor    %eax,%eax
jmp    1407a <main+0x1136a>
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
call   2f30 <main+0x220>
add    $0x7c4e,%ebx
test   %eax,%eax
lea    0x1c(%esp),%edi
je     1421e <main+0x1150e>
lea    0x2ab8(%ebx),%ebp
lea    0x0(%esi),%esi
mov    0x0(%ebp),%eax
mov    %eax,(%edi)
mov    0x4(%esi),%eax
addl   $0x8,0x0(%ebp)
mov    (%edi),%edx
mov    %edx,0xc(%esp)
call   14010 <main+0x11300>
mov    (%esi),%esi
mov    0xc(%esp),%edx
test   %esi,%esi
mov    %eax,0x4(%edx)
mov    (%edi),%edi
jne    141f8 <main+0x114e8>
movl   $0x0,(%edi)
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x7bf3,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    %edi,%eax
lea    0x2abc(%ebx),%esi
lea    0x2ac0(%ebx),%ebp
movl   $0x0,(%esi)
movl   $0x4,0x0(%ebp)
call   13eb0 <main+0x111a0>
mov    0x0(%ebp),%ebp
mov    (%esi),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   c0b0 <main+0x93a0>
mov    %eax,%esi
lea    0x4(%eax),%edx
lea    0x2ab8(%ebx),%eax
add    %esi,%ebp
mov    %edx,(%eax)
lea    0x2ac4(%ebx),%eax
mov    %ebp,(%eax)
mov    %edi,%eax
call   14010 <main+0x11300>
mov    %esi,%eax
movl   $0x0,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   2f30 <main+0x220>
add    $0x7b6f,%ebx
test   %eax,%eax
je     142d2 <main+0x115c2>
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
js     142d8 <main+0x115c8>
add    $0x18,%esp
pop    %ebx
ret
nop
mov    %eax,(%esp)
call   27a0 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2f30 <main+0x220>
add    $0x7b31,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x7d4(%ebx),%esi
call   268c <getpwnam@plt-0x34>
lea    -0x7d8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     14349 <main+0x11639>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x7d8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    14328 <main+0x11618>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    14360 <main+0x11650>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   2f30 <main+0x220>
add    $0x7ab6,%ebx
sub    $0x8,%esp
call   2870 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   2f30 <main+0x220>
add    $0x7a9f,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
jne    14418 <_IO_stdin_used+0x74>
popa
insb   (%dx),%es:(%edi)
imul   $0x3a732500,0x73(%ecx),%esp
and    %ah,0x6f6e2073
je     143db <_IO_stdin_used+0x37>
outsw  %ds:(%esi),(%dx)
jne    1442d <_IO_stdin_used+0x89>
or     %fs:(%eax),%al
and    $0x73253d73,%eax
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x72(%ecx)
imul   $0x63697465,0x6d(%eax,%ebp,2),%esi
and    %ah,0x78(%ebp)
jo     1444d <_IO_stdin_used+0xa9>
gs
jae    14451 <_IO_stdin_used+0xad>
imul   $0x7325203a,0x6e(%edi),%ebp
cmp    (%eax),%ah
and    0x64002273,%ah
imul   $0x6e6f6973,0x69(%esi),%esi
and    %ah,0x79(%edx)
and    %bh,0x65(%edx)
jb     1446b <_IO_stdin_used+0xc7>
add    %ah,0x78(%ebp)
jo     14466 <_IO_stdin_used+0xc2>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %ah,(%bx)
sub    %esp,(%edi)
add    %ah,0x78(%ebp)
jo     14474 <_IO_stdin_used+0xd0>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %dh,0x72(%bx,%si)
imul   $0x65007972,0x61(%ebp),%ebp
js     14490 <_IO_stdin_used+0xec>
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %ah,(%bx)
cmp    (%edi),%ah
add    %ah,0x78(%ebp)
jo     14494 <_IO_stdin_used+0xf0>
arpl   %si,0x6e(%ecx,%ebp,2)
and    %al,0x4f(%di)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
hlt
ja     1443d <_IO_stdin_used+0x99>
decl   (%eax,%edi,2)
(bad)
ljmp   *(%eax,%edi,2)
(bad)
decl   -0x2(%eax,%edi,2)
pushl  -0x2(%eax,%edi,2)
lcall  *-0x2(%ecx,%edi,2)
call   *0x78acfffe(%eax,%edi,2)
(bad)
dec    %esp
js     1445d <_IO_stdin_used+0xb9>
(bad)
in     (%dx),%al
js     14461 <_IO_stdin_used+0xbd>
decl   (%ecx,%edi,2)
(bad)
lcall  *(%ecx,%edi,2)
(bad)
pushl  (%ecx,%edi,2)
(bad)
incl   -0x2(%ecx,%edi,2)
lcall  *-0x2(%ecx,%edi,2)
call   *%esp
ja     14479 <_IO_stdin_used+0xd5>
pushl  (%edx,%edi,2)
(bad)
decl   -0x2(%edx,%edi,2)
ljmp   *-0x2(%edx,%edi,2)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
ljmp   *0x7b3cfffe(%edx,%edi,2)
(bad)
call   *%esp
jp     144b9 <_IO_stdin_used+0x115>
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
cmp    $0x7b,%al
(bad)
incl   (%ebx,%edi,2)
(bad)
(bad)
cmp    $0x7b,%al
(bad)
(bad)
in     (%dx),%al
jns    144f9 <_IO_stdin_used+0x155>
incl   (%ebx)
add    (%ebx),%eax
add    (%eax,%eax,1),%eax
add    $0x1000202,%eax
pop    %es
add    %eax,(%esi)
add    %al,(%esp,%esi,4)
cmp    $0xff,%dh
sbb    $0x82,%al
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
decl   (%edx,%eax,4)
(bad)
decl   (%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
decl   (%edx,%eax,4)
(bad)
dec    %esp
cmp    $0xfe821cff,%esi
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
call   *(%edx,%eax,4)
(bad)
(bad)
mov    $0x1cfffe80,%esp
(bad)
(bad)
ljmp   *-0x7f530002(%eax,%eax,4)
(bad)
(bad)
jl     14536 <_IO_stdin_used+0x192>
(bad)
(bad)
jl     1453a <_IO_stdin_used+0x196>
(bad)
lcall  *(%edx,%eax,4)
(bad)
(bad)
jl     14542 <_IO_stdin_used+0x19e>
(bad)
lcall  *(%edx,%eax,4)
(bad)
(bad)
jl     1454a <_IO_stdin_used+0x1a6>
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
pushl  (%ecx,%eax,4)
(bad)
ljmp   *(%ecx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
incl   (%ecx,%eax,4)
(bad)
(bad)
cld
cmp    $0xff,%dh
faddl  -0x7f2b0002(%eax)
(bad)
lcall  *(%edx,%eax,4)
(bad)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
lcall  *(%edx,%eax,4)
(bad)
jmp    *%esp
cmp    $0xfe816cff,%esi
lcall  *(%edx,%eax,4)
(bad)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
ljmp   *-0x2(%ecx,%eax,4)
lcall  *(%edx,%eax,4)
(bad)
(bad)
in     (%dx),%al
cmp    $0xfe821cff,%esi
incl   (%edx,%eax,4)
(bad)
decl   0x0(%eax,%edx,2)
dec    %edi
dec    %esp
inc    %esp
push   %eax
push   %edi
inc    %esp
add    %ah,0x65(%edi)
je     14779 <_IO_stdin_used+0x3d5>
ja     1477c <_IO_stdin_used+0x3d8>
sub    %ch,(%ecx)
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
add    %al,0x44(%ebx)
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %ch,(%edi)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     14755 <_IO_stdin_used+0x3b1>
arpl   %sp,0x74(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
and    %ah,0x73250073
cmp    (%eax),%ah
and    $0x203a64,%eax
and    $0x25203a73,%eax
cmp    %fs:(%eax),%ah
and    $0x203a73,%eax
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
imul   $0x6944,0x0(%ebp,%eiz,2),%bp
jb     147ca <_IO_stdin_used+0x426>
arpl   %si,0x72(%edi,%ebp,2)
jns    1478b <_IO_stdin_used+0x3e7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
js     147da <_IO_stdin_used+0x436>
jae    147e7 <_IO_stdin_used+0x443>
outsb  %gs:(%esi),(%dx)
je     14777 <_IO_stdin_used+0x3d3>
add    %bh,%ah
mov    %esi,%edi
call   *-0x2(%esp,%ecx,4)
lcall  *-0x2(%esp,%ecx,4)
(bad)
mov    $0xbcfffe8c,%esp
mov    %?,%esi
dec    %esp
mov    %?,%esi
dec    %esp
mov    %?,%esi
dec    %esp
mov    %?,%esi
jmp    *-0x72930002(,%ecx,4)
(bad)
ljmp   *-0x2(%ebp,%ecx,4)
(bad)
jl     14733 <_IO_stdin_used+0x38f>
(bad)
dec    %esp
mov    %esi,%edi
call   *-0x73c30002(%ebp,%ecx,4)
(bad)
call   *0x69(%eax)
jo     1481d <_IO_stdin_used+0x479>
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x61(%esi)
imul   $0x3a732500,0x64(%ebp,%eiz,2),%ebp
and    %cl,0x2f(%ecx)
dec    %edi
and    %ah,0x72(%ebp)
jb     14840 <_IO_stdin_used+0x49c>
jb     147d3 <_IO_stdin_used+0x42f>
pop    %edi
add    %ch,(%edi)
bound  %ebp,0x6e(%ecx)
das
jae    14844 <_IO_stdin_used+0x4a0>
add    %ah,0x6c697562
je     1484d <_IO_stdin_used+0x4a9>
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
and    $0x6f6e2073,%eax
je     14812 <_IO_stdin_used+0x46e>
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
imul   $0x2a007325,0x20(%esi),%ebp
add    %ah,(%eax)
imul   $0x68732061,0x20(%ebx),%esi
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebx)
jns    14889 <_IO_stdin_used+0x4e5>
outsl  %ds:(%esi),(%dx)
jb     14879 <_IO_stdin_used+0x4d5>
add    %ah,(%eax)
popa
and    %dh,0x61(%edx,%esi,2)
arpl   %bp,0x65(%ebx)
and    %ah,%fs:0x6c(%ecx)
imul   $0x726f6620,0x73(%ecx),%esp
add    %dh,0x70(%ebx)
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %al,(%eax)
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ah,0x6c(%ecx)
imul   $0x726f6620,0x73(%ecx),%esp
and    %ah,0x6c610073
imul   $0x69200020,0x73(%ecx),%esp
jae    14878 <_IO_stdin_used+0x4d4>
jae    14875 <_IO_stdin_used+0x4d1>
and    $0x69200073,%eax
jae    1487c <_IO_stdin_used+0x4d8>
popa
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,(%eax)
imul   $0x73252061,0x20(%ebx),%esi
jae    148df <_IO_stdin_used+0x53b>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x75(%edx)
imul   $0x203a006e,0x69(%esp,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     148a9 <_IO_stdin_used+0x505>
outsw  %ds:(%esi),(%dx)
jne    148fb <_IO_stdin_used+0x557>
or     %fs:(%eax),%al
jo     14908 <_IO_stdin_used+0x564>
push   %esi
add    %ah,0x646c6c
jo     148fc <_IO_stdin_used+0x558>
jb     148fe <_IO_stdin_used+0x55a>
insl   (%dx),%es:(%edi)
gs
je     14906 <_IO_stdin_used+0x562>
jb     148c3 <_IO_stdin_used+0x51f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     148c7 <_IO_stdin_used+0x523>
jae    1490e <_IO_stdin_used+0x56a>
je     148ab <_IO_stdin_used+0x507>
and    %ch,0x72(%edi)
and    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x3a732a2e
and    %ah,0x732573
inc    %edx
popa
and    %dh,%fs:0x75(%ebx)
bound  %esi,0x74(%ebx)
imul   $0x6e6f69,0x74(%ebp,%esi,2),%esi
lods   %ds:(%esi),%al
lret   $0xfffe
pushf
lret
(bad)
lcall  *-0x36130002(%edx,%ecx,8)
(bad)
lcall  *-0x34630002(%ebx,%ecx,8)
(bad)
lcall  *-0x34630002(%ebx,%ecx,8)
(bad)
lcall  *-0x36cf0002(%ebx,%ecx,8)
(bad)
lcall  *-0x34630002(%ebx,%ecx,8)
(bad)
incl   -0x2(%ebx,%ecx,8)
lcall  *-0x34630002(%ebx,%ecx,8)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
(bad)
fmul   %st,%st(2)
(bad)
lcall  *-0x34630002(%ebx,%ecx,8)
(bad)
lcall  *-0x34630002(%ebx,%ecx,8)
(bad)
lcall  *-0x35330002(%ebx,%ecx,8)
(bad)
jmp    *(%ecx,%ecx,8)
(bad)
(bad)
(bad)
(bad)
lcall  *(%edx,%edx,8)
(bad)
ljmp   *-0x2(%edi,%ecx,8)
pushl  -0x2db30002(%eax,%edx,8)
(bad)
decl   -0x2(%edx,%edx,8)
pushl  -0x2fab0002(%ecx,%edx,8)
(bad)
ljmp   *(%edx)
aas
pop    %ebx
add    %bh,0x8183883a
(bad)
test   %al,0x3a687300(%edi)
and    %dh,0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
imul   $0x66666f20,0x67(%esi),%ebp
and    %cl,0x44(%esi)
inc    %ebp
dec    %esp
inc    %ecx
pop    %ecx
and    %ch,0x6f(%ebp)
fs or  %fs:%gs:(%eax),%al
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     149c0 <_IO_stdin_used+0x61c>
outsl  %ds:(%esi),(%dx)
jo     14a08 <_IO_stdin_used+0x664>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f4e0073
and    %ah,0x75(%ebx)
jb     14a21 <_IO_stdin_used+0x67d>
outsb  %gs:(%esi),(%dx)
je     149d3 <_IO_stdin_used+0x62f>
push   $0x6f
bound  %eax,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
gs
jbe    14a28 <_IO_stdin_used+0x684>
outsl  %ds:(%esi),(%dx)
jne    14a35 <_IO_stdin_used+0x691>
and    %ch,0x6f(%edx)
bound  %eax,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
push   $0x6f
bound  %edi,(%edx)
and    %ah,0x73250073
cmp    (%eax),%ah
popa
insl   (%dx),%es:(%edi)
bound  %ebp,0x67(%ecx)
jne    14a51 <_IO_stdin_used+0x6ad>
jne    14a57 <_IO_stdin_used+0x6b3>
add    %ah,(%eax)
jl     14a08 <_IO_stdin_used+0x664>
and    $0x28200073,%eax
arpl   %bp,0x72(%edi)
and    %ah,%gs:0x6d(%ebp,%esi,2)
jo     14a5c <_IO_stdin_used+0x6b8>
sub    %eax,%fs:(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %ah,%gs:0x44002964
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:(%edx)
jge    14a0b <_IO_stdin_used+0x667>
and    $0x28,%al
sub    %al,(%eax)
sub    %ebp,(%ecx)
add    %ah,(%ebx,%edi,2)
and    (%eax),%eax
and    $0x7b,%al
add    %ah,(%eax,%ebp,1)
cs cs sub %eax,%cs:(%eax)
and    $0x5b000a64,%eax
and    $0x20205d64,%eax
and    %al,(%eax)
and    $0x632a2573,%eax
and    $0x7c200073,%eax
or     0x6425632a,%ah
and    %al,(%eax)
and    %ah,(%esi)
and    %al,%es:(%eax)
and    %bh,0x20(%esp,%edi,2)
add    %dh,0x68(%edi)
imul   $0x746e7500,0x20(%ebp,%eiz,2),%ebp
imul   $0x6966203b,0x0(%eax,%eiz,1),%ebp
add    %bh,(%ebx)
and    %ah,0x6e(%edi,%ebp,2)
add    %ch,%gs:(%eax)
sub    %esp,(%eax)
jnp    14a87 <_IO_stdin_used+0x6e3>
cs cs and %bh,%cs:0x0(%ebp)
cmp    $0x3c,%al
cs cs add %ah,%cs:0x73(%ebp)
popa
arpl   %ax,(%eax)
jl,pt  14a7b <_IO_stdin_used+0x6d7>
ds add %bh,%ds:(%esi)
add    %bh,%es:(%eax,%eax,1)
cmp    $0x26,%al
add    %bh,(%esi,%edi,1)
add    %ah,(%eax)
jl     14aac <_IO_stdin_used+0x708>
add    %ah,(%ecx)
add    %ch,0x66(%ecx)
and    %al,(%eax)
cmp    (%eax),%esp
je     14aff <_IO_stdin_used+0x75b>
outsb  %gs:(%esi),(%dx)
and    %al,(%eax)
cmp    (%eax),%esp
gs
insb   (%dx),%es:(%edi)
jae    14b06 <_IO_stdin_used+0x762>
and    %al,(%eax)
cmp    (%eax),%esp
outsl  %fs:(%esi),(%dx)
and    %al,(%eax)
outsw  %ds:(%esi),(%dx)
jb     14acd <_IO_stdin_used+0x729>
add    %ah,(%eax)
imul   $0x73616300,0x20(%esi),%ebp
and    %al,%gs:(%eax)
sub    %esp,(%eax)
add    %bh,(%ebx)
cmp    (%eax),%esp
add    %ch,(%edi)
fs
gs
jbe    14af4 <_IO_stdin_used+0x750>
je     14b3b <_IO_stdin_used+0x797>
jns    14ac9 <_IO_stdin_used+0x725>
insb   (%dx),%es:(%edi)
jae    14b06 <_IO_stdin_used+0x762>
add    %dh,(%eax)
or     (%eax),%al
insb   (%dx),%es:(%edi)
jo     14ad3 <_IO_stdin_used+0x72f>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     14afa <_IO_stdin_used+0x756>
outsw  %ds:(%esi),(%dx)
jb     14b49 <_IO_stdin_used+0x7a5>
add    %ch,(%edi)
fs
gs
jbe    14b13 <_IO_stdin_used+0x76f>
outsb  %ds:(%esi),(%dx)
jne    14b53 <_IO_stdin_used+0x7af>
insb   (%dx),%es:(%edi)
add    %bl,0x25(%ebx)
fs
pop    %ebp
and    %al,(%eax)
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    14b13 <_IO_stdin_used+0x76f>
push   $0x20657661
jae    14b6e <_IO_stdin_used+0x7ca>
outsl  %ds:(%esi),(%dx)
jo     14b6d <_IO_stdin_used+0x7c9>
gs and %ch,%fs:%gs:0x6f(%edx)
bound  %esi,0x2e(%ebx)
or     (%eax),%al
add    %ch,0x6f(%edx)
bound  %esp,(%eax)
and    $0x6f6e2073,%eax
je     14b33 <_IO_stdin_used+0x78f>
arpl   %si,0x65(%edx)
popa
je     14b7e <_IO_stdin_used+0x7da>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     14b41 <_IO_stdin_used+0x79d>
push   $0x6f
bound  %esp,(%eax)
arpl   %bp,0x6e(%edi)
je     14b9c <_IO_stdin_used+0x7f8>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     14b57 <_IO_stdin_used+0x7b3>
jae    14b9e <_IO_stdin_used+0x7fa>
je     14b5b <_IO_stdin_used+0x7b7>
je     14bb1 <_IO_stdin_used+0x80d>
jns    14b5f <_IO_stdin_used+0x7bb>
jo     14bb3 <_IO_stdin_used+0x80f>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    14b67 <_IO_stdin_used+0x7c3>
addr16 jb 14bb9 <_IO_stdin_used+0x815>
jne    14bbc <_IO_stdin_used+0x818>
and    %ch,(%eax)
and    $0x2973,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     14b7a <_IO_stdin_used+0x7d6>
popa
arpl   %sp,0x65(%ebx)
jae    14bd3 <_IO_stdin_used+0x82f>
and    %dh,0x79(%esp,%esi,2)
cmp    (%eax),%esp
push   $0x6f
bound  %esp,(%eax)
arpl   %bp,0x6e(%edi)
je     14be1 <_IO_stdin_used+0x83d>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x66(%edi)
data16
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    14be4 <_IO_stdin_used+0x840>
cmp    %gs:(%bx,%si),%ah
imul   $0x6c,0x6c(%ecx),%ebp
and    %bl,0x2d(%ebx)
jae    14bb0 <_IO_stdin_used+0x80c>
jae    14bfb <_IO_stdin_used+0x857>
addr16 jae 14c05 <_IO_stdin_used+0x861>
arpl   %sp,%gs:(%eax)
jl     14bba <_IO_stdin_used+0x816>
sub    $0x6e676973,%eax
jne    14c0e <_IO_stdin_used+0x86a>
and    %bh,0x2d(%eax,%eiz,1)
jae    14c10 <_IO_stdin_used+0x86c>
addr16 jae 14c1a <_IO_stdin_used+0x876>
arpl   %bx,%gs:0x20(%ebp)
pop    %ebx
jo     14c1a <_IO_stdin_used+0x876>
and    %bh,%fs:0x6a(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
bound  %ebx,0x2e(%ebp)
cs and %ch,%cs:0x72(%edi)
or     0x69(%ebx),%ch
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x655b206c
js     14c35 <_IO_stdin_used+0x891>
je     14c41 <_IO_stdin_used+0x89d>
je     14c31 <_IO_stdin_used+0x88d>
je     14c47 <_IO_stdin_used+0x8a3>
jae    14c31 <_IO_stdin_used+0x88d>
add    %al,(%eax)
add    %al,(%eax)
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x72(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0x73,%eax
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x72(%edi)
and    %ah,0x78(%ebp)
imul   $0x75746174,0x73(%eax,%eiz,1),%esi
jae    14c5b <_IO_stdin_used+0x8b7>
and    %ah,0x73
add    %bh,-0xffb0002(%ebp,%ebp,8)
(bad)
pushl  -0x124b0002(%ebp,%ebp,8)
(bad)
pushl  (%esi,%ebp,8)
(bad)
incl   -0x10f30002(%ebp,%ebp,8)
(bad)
push   %esp
out    %eax,(%dx)
(bad)
(bad)
cmp    $0xef,%al
(bad)
decl   -0x12ab0002(%edi,%ebp,8)
(bad)
lcall  *-0x116b0002(%edi,%ebp,8)
(bad)
incl   (%eax,%esi,8)
(bad)
(bad)
jl     14c68 <_IO_stdin_used+0x8c4>
(bad)
pushl  -0x2(%esi,%ebp,8)
jmp    *-0x2(%esi,%ebp,8)
push   %esp
in     (%dx),%al
(bad)
(bad)
cld
out    %al,(%dx)
(bad)
jmp    *-0x11ab0002(%ebp,%ebp,8)
(bad)
ljmp   *(%edi,%ebp,8)
(bad)
lcall  *(%edi,%ebp,8)
(bad)
(bad)
cmp    $0xed,%al
(bad)
(bad)
cmp    $0xed,%al
(bad)
lcall  *(%esi,%ebp,8)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,0x0(%ebp)
add    %al,(%eax)
sub    $0x2b000000,%eax
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %bh,0x25000000
add    %al,(%eax)
add    %ah,0x23000025
add    %al,(%eax)
add    %ah,(%ebx)
and    (%eax),%eax
add    %bh,0x6f(%ecx)
jne    14d24 <_IO_stdin_used+0x980>
push   $0x20657661
insl   (%dx),%es:(%edi)
popa
imul   $0x20657355,0xa(%eax,%eax,1),%ebp
and    0x78(%ebp),%ah
imul   $0x6c206f74,0x20(%edx,%eiz,1),%esi
gs
popa
jbe    14d87 <_IO_stdin_used+0x9e3>
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
gs
je     14d92 <_IO_stdin_used+0x9ee>
das
jo     14da4 <_IO_stdin_used+0xa00>
outsl  %ds:(%esi),(%dx)
imul   $0x4824,0x0(%ebp,%eiz,2),%bp
dec    %edi
dec    %ebp
inc    %ebp
das
jo,pn  14db3 <_IO_stdin_used+0xa0f>
outsl  %ds:(%esi),(%dx)
imul   $0x4e45,0x0(%ebp,%eiz,2),%bp
push   %esi
add    %ah,0x6e203a73
outsl  %ds:(%esi),(%dx)
je     14d73 <_IO_stdin_used+0x9cf>
outsw  %ds:(%esi),(%dx)
jne    14dc5 <_IO_stdin_used+0xa21>
add    %cl,%fs:0x75(%edi)
je     14d7d <_IO_stdin_used+0x9d9>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ebx)
popa
arpl   %sp,0x0(%ebp)
jne    14dd6 <_IO_stdin_used+0xa32>
insb   (%dx),%es:(%edi)
imul   $0xa646574,0x69(%ebp),%ebp
add    %ah,0xa646c6c
add    %dh,0x3a(%eax)
jb     14d7b <_IO_stdin_used+0x9d7>
popa
jb     14de5 <_IO_stdin_used+0xa41>
and    %ah,0x6f(%ebx)
jne    14df1 <_IO_stdin_used+0xa4d>
je     14d85 <_IO_stdin_used+0x9e1>
jb     14dfe <_IO_stdin_used+0xa5a>
js     14d89 <_IO_stdin_used+0x9e5>
and    $0xa6f342e,%eax
add    %ah,0x75(%ecx)
outsl  %ds:(%si),(%dx)
add    %bh,0x72002d2b
ja     14e13 <_IO_stdin_used+0xa6f>
jne    14e04 <_IO_stdin_used+0xa60>
outsl  %ds:(%esi),(%dx)
pop    %eax
jae    14da1 <_IO_stdin_used+0x9fd>
dec    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
addr16 popa
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs cmp %fs:%gs:(%eax),%ah
and    $0x53480073,%eax
popa
je     14e1d <_IO_stdin_used+0xa79>
fs
jae    14e1d <_IO_stdin_used+0xa79>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jo     14e2c <_IO_stdin_used+0xa88>
jbe    14e37 <_IO_stdin_used+0xa93>
add    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    14dea <_IO_stdin_used+0xa46>
popa
jb     14e34 <_IO_stdin_used+0xa90>
jne    14e3c <_IO_stdin_used+0xa98>
outsb  %gs:(%esi),(%dx)
je     14e46 <_IO_stdin_used+0xaa2>
add    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x646574,0x69(%ebp),%ebp
bound  %esp,0x64(%ecx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,0x7330322d
and    %al,(%eax)
gs
jb     14e65 <_IO_stdin_used+0xac1>
outsl  %ds:(%esi),(%dx)
jb     14e16 <_IO_stdin_used+0xa72>
jae    14e5d <_IO_stdin_used+0xab9>
je     14e6e <_IO_stdin_used+0xaca>
imul   $0x6d696c20,0x67(%esi),%ebp
imul   $0x297325,0x28(%eax,%eiz,1),%esi
je     14e74 <_IO_stdin_used+0xad0>
insl   (%dx),%es:(%edi)
sub    %dh,%gs:0x65(%ebx)
arpl   %bp,0x6e(%edi)
fs
jae    14e3f <_IO_stdin_used+0xa9b>
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
sub    %ah,%gs:0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
sub    %eax,(%eax)
fs
popa
je     14e89 <_IO_stdin_used+0xae5>
sub    %ch,0x62(%ebx)
jns    14ea1 <_IO_stdin_used+0xafd>
gs
jae    14e59 <_IO_stdin_used+0xab5>
add    %dh,0x74(%ebx)
popa
arpl   %bp,0x28(%ebx)
imul   $0x74,0x79(%edx),%esp
gs
jae    14e67 <_IO_stdin_used+0xac3>
add    %ah,0x6f(%ebx)
jb     14ea8 <_IO_stdin_used+0xb04>
fs
jne    14eb3 <_IO_stdin_used+0xb0f>
jo     14e70 <_IO_stdin_used+0xacc>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x0,0x29(%ebx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
and    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     14ed6 <_IO_stdin_used+0xb32>
sub    %ch,0x62(%ebx)
jns    14ed6 <_IO_stdin_used+0xb32>
gs
jae    14e8e <_IO_stdin_used+0xaea>
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    14e6e <_IO_stdin_used+0xaca>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x7600,0x73(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     14ef6 <_IO_stdin_used+0xb52>
sub    %ch,0x62(%ebx)
jns    14ef6 <_IO_stdin_used+0xb52>
gs
jae    14eae <_IO_stdin_used+0xb0a>
add    %ch,0x63(%edi,%ebp,2)
imul   $0xffffff84,0x0(%ebx),%esi
push   %cs
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
pushl  -0x1(%esi,%ecx,1)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
ljmp   *0xe64ffff(,%ecx,1)
(bad)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
lcall  *-0x1(%esi,%ecx,1)
ljmp   *0xd2cffff(,%ecx,1)
(bad)
incl   -0x1(%esi,%ecx,1)
ljmp   *0xdd4ffff(,%ecx,1)
(bad)
call   *-0x1(%esi,%ecx,1)
decl   0x4f(%eax)
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
dec    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
addr16 popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    (%eax),%ah
and    $0x88810073,%eax
orl    $0x883d40,0x1828800(%eax)
00
mov    %al,-0x77c2bfff(%edx)
and    $0x20000a73,%eax
and    %al,(%eax)
outsl  %ds:(%esi),(%dx)
data16
data16
add    %ch,0x6f2b006f
add    %al,0x75(%ebx)
jb     14fb8 <spcstr+0x82>
outsb  %gs:(%esi),(%dx)
je     14f6a <spcstr+0x34>
outsl  %ds:(%esi),(%dx)
jo     14fc1 <spcstr+0x8b>
imul   $0x74657320,0x6e(%edi),%ebp
je     14fbf <spcstr+0x89>
outsb  %ds:(%esi),(%dx)
addr16 jae 14f64 <spcstr+0x2e>
add    %ah,0x7336312d
and    $0x73000a73,%eax
gs
je     14f88 <spcstr+0x52>
and    $0x73252073,%eax
or     (%eax),%al
dec    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
addr16 popa
insb   (%dx),%es:(%edi)
and    %ch,0x70(%edi)
je     14fe4 <spcstr+0xae>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x7325206f
add    %cl,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs
addr16 popa
insb   (%dx),%es:(%edi)
and    %ch,0x70(%edi)
je     14ff9 <spcstr+0xc3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x2d006325
arpl   %sp,(%eax)
jb     15001 <spcstr+0xcb>
jno    15013 <spcstr+0xdd>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 15018 <spcstr+0xe2>
outsb  %gs:(%esi),(%dx)
je     14faf <spcstr+0x79>
arpl   %sp,0x6e(%ecx)
daa
je     14fd5 <spcstr+0x9f>
jae    1501f <spcstr+0xe9>
imul   $0x61687420,0x74(%esi),%esp
je     14fe0 <spcstr+0xaa>
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
jns    14fc5 <spcstr+0x8f>
dec    %edi
push   %eax
push   %esp
inc    %ecx
push   %edx
inc    %edi
add    %cl,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs
addr16 popa
insb   (%dx),%es:(%edi)
and    %ch,0x70(%edi)
je     15041 <spcstr+0x10b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0xa6325
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
and    %ah,0x6f(%bp)
jb     1500b <spcstr+0xd5>
sub    $0x6f206325,%eax
jo     15066 <spcstr+0x130>
imul   $0x504f000a,0x6e(%edi),%ebp
push   %esp
dec    %ecx
dec    %esi
inc    %esp
add    %cl,0x6f(%esi)
and    %ah,0x72(%ecx)
and    %ah,0x6f(%bp)
jb     15029 <spcstr+0xf3>
sub    $0x6f206325,%eax
jo     15084 <spcstr+0x14e>
imul   $0x72726500,0x6e(%edi),%ebp
gs
js     15083 <spcstr+0x14d>
je     1501c <spcstr+0xe6>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
bound  %eax,(%eax)
imul   $0x6565726f,0x6e(%edi),%esp
outsl  %ds:(%esi),(%dx)
data16
add    %ch,0x6e(%ecx)
je     15096 <spcstr+0x160>
jb     15094 <spcstr+0x15e>
arpl   %si,0x76(%ecx,%ebp,2)
add    %ch,%gs:0x6f(%ebp)
outsb  %ds:(%esi),(%dx)
imul   $0x656f6e00,0x72(%edi,%ebp,2),%esi
js     150ab <spcstr+0x175>
arpl   %ax,(%eax)
jae    150be <optletters+0x3>
imul   $0x61727478,%fs:0x0(%esi),%ebp
arpl   %sp,0x0(%ebp)
jbe    150bc <optletters+0x1>
jb     150bb <optletters>
outsl  %ds:(%esi),(%dx)
jae    150c1 <optletters+0x6>
add    %dh,0x69(%esi)
add    %ah,0x6d(%ebp)
popa
arpl   %si,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x62(%edi,%ebp,2)
bound  %esp,0x72(%ebp)
add    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
gs
js     150e6 <optletters+0x2b>
outsl  %ds:(%esi),(%dx)
jb     150ed <optletters+0x32>
add    %ch,0x6f(%esi)
je     150e7 <optletters+0x2c>
data16
jns    15081 <spcstr+0x14b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    150f3 <optletters+0x38>
jae    150ec <optletters+0x31>
je     15089 <spcstr+0x153>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%si)
bound  %esi,0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    150fc <optletters+0x41>
cmp    %gs:(%bx,%si),%ah
addr16
gs
je     15112 <optletters+0x57>
jo     15119 <optletters+0x5e>
jae    150c7 <optletters+0xc>
outsl  %ds:(%esi),(%dx)
jo     1511e <optletters+0x63>
jae    15120 <optletters+0x65>
jb     15117 <optletters+0x5c>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bp)
jb     150d5 <optletters+0x1a>
pop    %ebx
popa
jb     15120 <optletters+0x65>
pop    %ebp
gs
dec    %cx
imul   $0x56767873,0x6e(%ebp),%ebp
inc    %ebp
inc    %ebx
popa
bound  %esi,0x0(%ebp)
add    %dl,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     15132 <optletters+0x77>
js     150f3 <optletters+0x38>
gs
jb     15148 <optletters+0x8d>
outsl  %ds:(%esi),(%dx)
jb     15113 <optletters+0x58>
and    %ah,0x73250073
and    %dh,0x6e(%ebp)
gs
js     15155 <optletters+0x9a>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,(%eax)
gs
js     1515f <optletters+0xa4>
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %ah,(%di)
jae    15122 <optletters+0x67>
add    %ah,0x6e752073
gs
js     15172 <optletters+0xb7>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %al,0x61(%edx)
and    %ah,%fs:0x64(%esi)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %al,0x61(%edx)
and    %ah,%fs:0x6f(%esi)
jb     1513e <optletters+0x83>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     15143 <optletters+0x88>
jbe    15186 <optletters+0xcb>
jb     15190 <optletters+0xd5>
popa
bound  %ebp,0x0(%ebp,%eiz,2)
inc    %edx
popa
and    %ah,%fs:0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x69(%ebp)
jae    151b5 <optletters+0xfa>
imul   $0x29292720,0x67(%esi),%ebp
daa
add    %dl,0x6e(%ebp)
je     151b4 <optletters+0xf9>
jb     151be <optletters+0x103>
imul   $0x20646574,0x61(%esi),%ebp
jno    151cf <optletters+0x114>
outsl  %ds:(%esi),(%dx)
je     151c2 <optletters+0x107>
and    %dh,%fs:0x74(%ebx)
jb     151cc <optletters+0x111>
outsb  %ds:(%esi),(%dx)
add    %cl,0x69(%di)
jae    151dd <optletters+0x122>
imul   $0x277d2720,0x67(%esi),%ebp
add    %al,0x4f(%ebp)
inc    %esi
and    %ch,0x6e(%ecx)
and    %ah,0x61(%edx)
arpl   %bp,0x71(%ebx)
jne    151ef <optletters+0x134>
je     151e7 <optletters+0x12c>
and    %dh,0x75(%ebx)
bound  %esi,0x74(%ebx)
imul   $0x6e6f69,0x74(%ebp,%esi,2),%esi
arpl   %sp,0x73(%ecx)
add    %ah,%gs:0x0(%edi,%ebp,2)
gs
insb   (%dx),%es:(%edi)
imul   $0x65736c65,0x0(%esi),%esp
add    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dh,0x6e(%ebp)
je     15214 <optletters+0x159>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%edi)
imul   $0x20646e65,0x0(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x65(%esi)
ja     1522f <optletters+0x174>
imul   $0x223b2200,0x65(%esi),%ebp
add    %ah,(%edx)
and    %es:(%eax),%al
and    (%esi),%ah
and    %es:(%eax),%al
and    0x22(%esp,%edi,2),%bh
add    %ah,(%edx)
jl     151fe <optletters+0x143>
add    %ah,(%edx)
sub    %ah,(%edx)
add    %ah,(%edx)
sub    %esp,(%edx)
add    %ah,(%edx)
cmp    (%ebx),%edi
and    (%eax),%al
and    0x22(%eax),%ah
add    %dh,0x65(%edx)
imul   $0x6f697463,%fs:0x65(%edx),%esi
outsb  %ds:(%esi),(%dx)
add    %ah,(%edx)
and    %esp,(%edx)
add    %ah,(%edx)
arpl   %sp,0x73(%ecx)
and    %gs:(%eax),%al
and    0x22(%edi,%ebp,2),%ah
add    %ah,(%edx)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %gs:(%eax),%al
and    0x6c(%ebp),%ah
imul   $0x6c652200,0x22(%esi),%esp
jae    15282 <optletters+0x1c7>
and    (%eax),%al
and    0x73(%ebp),%ah
popa
arpl   %sp,(%edx)
add    %ah,(%edx)
imul   $0x2200,(%edx),%sp
outsw  %ds:(%esi),(%dx)
jb     15252 <optletters+0x197>
add    %ah,(%edx)
imul   $0x6e692200,0x22(%esi),%esp
and    (%eax),%al
and    0x65(%eax,%ebp,2),%dh
outsb  %ds:(%esi),(%dx)
and    (%eax),%al
and    0x6e(%ebp),%dh
je     152b0 <optletters+0x1f5>
insb   (%dx),%es:(%edi)
and    (%eax),%al
and    0x68(%edi),%dh
imul   $0x227b2200,0x22(%ebp,%eiz,2),%ebp
add    %ah,(%edx)
jge    1527b <optletters+0x1c0>
add    %al,(%eax)
add    %bl,0x99ffff2c
xor    %bh,%bh
lcall  *-0x660000d0(%ecx)
xor    %bh,%bh
call   *0x2c(%edi)
(bad)
call   *0x2c(%edi)
(bad)
lcall  *0x29ffff30(%ecx)
sub    $0x3099ffff,%eax
(bad)
lcall  *-0x660000d0(%ecx)
xor    %bh,%bh
lcall  *-0x660000d0(%ecx)
xor    %bh,%bh
lcall  *-0x6f0000d0(%ecx)
das
(bad)
decl   -0x660000d2(%eax)
xor    %bh,%bh
lcall  *0x3affff30(%ecx)
das
(bad)
(bad)
cmp    (%edi),%ch
(bad)
pushl  0x2b(%esi)
(bad)
call   *%ebx
aaa
(bad)
lcall  *-0x1(%ebx,%edi,1)
(bad)
cld
cmp    %bh,%bh
push   %esp
cmp    %edi,%edi
jmp    *0x3accffff(%ebx,%edi,1)
(bad)
jmp    *0x3a9cffff(%eax,%edi,1)
(bad)
pushl  -0x1(%edx,%edi,1)
lcall  *-0x1(%edx,%edi,1)
(bad)
cmp    $0x3a,%al
(bad)
push   %esp
aaa
(bad)
lcall  *(%edx,%edi,1)
(bad)
inc    %esp
aaa
(bad)
pushl  -0x1(%edi,%esi,1)
(bad)
jge    1531b <optletters+0x260>
sub    (%edi),%edi
cmp    $0x100,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %eax,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
and    $0x25203a64,%eax
jae    15316 <optletters+0x25b>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1533d <optletters+0x282>
arpl   %si,0x65(%edx)
popa
je     15388 <optletters+0x2cd>
and    %ah,0x25203a73
jae    1532b <optletters+0x270>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     15352 <optletters+0x297>
outsl  %ds:(%esi),(%dx)
jo     1539a <optletters+0x2df>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25203a73
jae    1533e <optletters+0x283>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
dec    %eax
(bad)
(bad)
jl     1538e <optletters+0x2d3>
(bad)
ljmp   *0x4994ffff(%ecx,%ecx,2)
(bad)
(bad)
jl     1539b <optletters+0x2e0>
(bad)
jmp    *-0x1(%ecx,%ecx,2)
jmp    *-0x1(%ecx,%ecx,2)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
incl   0x506cffff(%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
ljmp   *-0x1(%eax,%edx,2)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
pushl  (%eax,%edx,2)
(bad)
call   *-0x1(%eax,%edx,2)
pushl  (%eax,%edx,2)
(bad)
call   *-0x1(%eax,%edx,2)
pushl  0x61(%edx,%esi,2)
jo     153dd <optletters+0x322>
sub    $0x7325202d,%eax
and    %ah,0x74000a73
jb     1542b <optletters+0x370>
jo     15406 <optletters+0x34b>
and    %ah,0x62203a73
popa
and    %dh,%fs:0x61(%edx,%esi,2)
jo     153e4 <optletters+0x329>
add    %al,(%eax)
adc    $0x5b,%al
(bad)
call   *(%ebx,%ebx,2)
(bad)
call   *(%ebx,%ebx,2)
(bad)
call   *(%ebx,%ebx,2)
(bad)
call   *(%ebx,%ebx,2)
(bad)
call   *(%ebx,%ebx,2)
(bad)
call   *(%ebx,%ebx,2)
(bad)
call   *(%ebx,%ebx,2)
(bad)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
(bad)
cmp    $0x5b,%al
(bad)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
dec    %esp
pop    %edx
(bad)
jmp    *%esp
pop    %edx
(bad)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
(bad)
in     (%dx),%al
pop    %edx
(bad)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
push   %esp
pop    %edx
(bad)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
decl   -0x1(%ebx,%ebx,2)
(bad)
cld
pop    %edx
(bad)
decl   -0x1(%ebx,%ebx,2)
incl   (%ebx,%ebx,2)
(bad)
decl   -0x1(%ebx,%ebx,2)
decl   (%ebx,%ebx,2)
(bad)
jmp    *(%ecx,%eiz,2)
(bad)
call   *0x6124ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
jmp    *%esp
pusha
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6064ffff(%ecx,%eiz,2)
(bad)
call   *(%eax,%eiz,2)
(bad)
pushl  -0x1(%edi,%ebx,2)
jmp    *(%ecx,%eiz,2)
(bad)
jmp    *(%ecx,%eiz,2)
(bad)
jmp    *(%ecx,%eiz,2)
(bad)
call   *0x5f74ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x60e4ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
call   *0x5f24ffff(%ecx,%eiz,2)
(bad)
call   *0x60e4ffff(%ecx,%eiz,2)
(bad)
call   *0x6194ffff(%ecx,%eiz,2)
(bad)
jmp    *%esp
pusha
(bad)
jmp    *0x65203a73
js     1563f <optletters+0x584>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
gs
jb     15644 <optletters+0x589>
arpl   %sp,(%eax)
jbe    15640 <optletters+0x585>
insb   (%dx),%es:(%edi)
jne    15647 <optletters+0x58c>
add    %ah,0x6e203a73
outsl  %ds:(%esi),(%dx)
je     1560b <optletters+0x550>
arpl   %bp,0x6d(%edi)
jo     1565c <optletters+0x5a1>
gs
je     15658 <optletters+0x59d>
insb   (%dx),%es:(%edi)
jns    15616 <optletters+0x55b>
arpl   %bp,0x6e(%edi)
jbe    15660 <optletters+0x5a5>
jb     15671 <optletters+0x5b6>
gs add %ah,%fs:%gs:(%ebx)
sub    $0x30202b,%eax
sub    (%eax),%dh
xor    %esi,(%edx)
xor    0x39383736(,%esi,1),%esi
add    %ch,0x69(%ebp)
jae    15689 <optletters+0x5ce>
imul   $0x726f6620,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
je     15641 <optletters+0x586>
arpl   %bp,0x61(%eax)
jb     15687 <optletters+0x5cc>
arpl   %si,0x72(%ebp,%eiz,2)
add    %ah,0x69203a73
outsb  %ds:(%esi),(%dx)
jbe    15694 <optletters+0x5d9>
insb   (%dx),%es:(%edi)
imul   $0x63657269,0x64(%eax,%eiz,1),%esp
je     156a7 <optletters+0x5ec>
jbe    156a5 <optletters+0x5ea>
add    %al,(%eax)
add    %al,(%eax)
jne    156b9 <optletters+0x5fe>
popa
cmp    %gs:(%bx,%si),%ah
jo     156bf <optletters+0x604>
imul   $0x6f662066,0x74(%esi),%ebp
jb     156c3 <optletters+0x608>
popa
je     15679 <optletters+0x5be>
pop    %ebx
popa
jb     156c4 <optletters+0x609>
and    %ch,(%esi)
cs
cs
pop    %ebp
add    %al,(%eax)
sub    $0x6c630072,%eax
outsl  %ds:(%esi),(%dx)
jae    156d5 <optletters+0x61a>
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bx,%si)
jb     156d8 <optletters+0x61d>
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%ebp)
jo     156de <optletters+0x623>
arpl   %si,0x64(%ebp,%eiz,2)
add    %ah,0x72(%ecx)
addr16 jne 156f0 <optletters+0x635>
outsb  %gs:(%esi),(%dx)
je     156a7 <optletters+0x5ec>
gs
js     156fa <optletters+0x63f>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %ch,0x69(%ebp)
jae    15707 <optletters+0x64c>
imul   $0x75005d20,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
js     1570f <optletters+0x654>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x70(%edi)
gs
jb     1570b <optletters+0x650>
je     1571b <optletters+0x660>
jb     156ae <optletters+0x5f3>
sub    $0x782d0077,%eax
add    %ch,0x662d0065
add    %ch,0x632d0064
add    %ch,0x702d0062
add    %ch,0x672d0075
add    %ch,0x732d006b
add    %ch,0x7a2d0074
add    %ch,0x682d006e
add    %ch,0x472d004f
add    %ch,0x532d004c
add    %ah,(%ecx)
cmp    $0x71652d00,%eax
add    %ch,0x2d00656e
add    %ch,%gs:(%di)
addr16 je 156fd <optletters+0x642>
sub    $0x2d00656c,%eax
insb   (%dx),%es:(%edi)
je     15705 <optletters+0x64a>
sub    $0x2d00746e,%eax
outsl  %ds:(%esi),(%dx)
je     1570d <optletters+0x652>
sub    $0x2d006665,%eax
popa
add    %cl,0x682cffff(%eax,%ebp,2)
(bad)
(bad)
cld
addr16 (bad)
lcall  *-0x1(%eax,%ebp,2)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x6844ffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
decl   0x688cffff(%eax,%ebp,2)
(bad)
(bad)
jl     157d6 <optletters+0x71b>
(bad)
(bad)
in     (%dx),%al
addr16 (bad)
incl   0x2cffff6a(%edx)
push   $0xffffffff
(bad)
mov    $0x49ffff69,%ecx
imul   $0xffffffff,%edi,%edi
dec    %ecx
imul   $0xffffffff,%edi,%edi
dec    %ecx
imul   $0xffffffff,%edi,%edi
dec    %ecx
imul   $0xffffffff,%edi,%edi
dec    %ecx
imul   $0xffffffff,%edi,%edi
mov    0x8cffff69,%al
imul   $0xff6973ff,%edi,%edi
decl   0x69(%esi)
(bad)
ljmp   *(%ecx)
imul   $0xff6b0eff,%edi,%edi
(bad)
fsubrs -0x1(%edx)
(bad)
stc
push   $0x68ccffff
(bad)
ljmp   *-0x1(%ebx,%ebp,2)
(bad)
fsubrl -0x1(%ebx)
inc    %eax
imul   $0xffffffff,%edi,%edi
movsb  %ds:(%esi),%es:(%edi)
imul   $0xffffffff,%edi,%edi
mov    %ch,-0x1(%ebx)
jmp    *0x6c(%eax)
(bad)
jmp    *0x6b(%edx)
(bad)
ljmp   *(%esi)
insb   (%dx),%es:(%edi)
(bad)
jmp    *0x6b(%edx)
(bad)
lcall  *(%esp,%ebp,2)
(bad)
decl   (%edx)
insb   (%dx),%es:(%edi)
(bad)
(bad)
clc
imul   $0xffffffff,%edi,%edi
bound  %ebp,-0x1(%ebx)
jmp    *0x6b(%edx)
(bad)
jmp    *0x6b(%edx)
(bad)
incl   0x6c(%edi)
(bad)
(bad)
jl     15866 <optletters+0x7ab>
(bad)
jmp    *0x66256d64
jae    15823 <optletters+0x768>
and    $0x66256d64,%eax
jae    15814 <optletters+0x759>
and    $0x66256d64,%eax
jae    15831 <optletters+0x776>
and    $0x66256d64,%eax
jae    15822 <optletters+0x767>
add    %dl,0x53(%eax)
xor    %edi,0x25002023
jae    15848 <optletters+0x78d>
jae    1584a <optletters+0x78f>
sub    %cs:0x25(%ebx),%dh
jae    15835 <optletters+0x77a>
add    %ah,0x3a732a2e
and    %ch,0x73(%ecx)
and    %dh,0x65(%edx)
popa
and    %ch,%fs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    1583f <optletters+0x784>
and    $0x3a732a2e,%eax
and    %ah,0x61(%edx)
and    %dh,%fs:0x61(%esi)
jb     158b6 <defifsvar+0x6>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x66(%esi)
add    %ch,0x6f(%esi)
je     1587e <optletters+0x7c3>
imul   $0x75662061,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dl,0x53(%eax)
xor    %edi,0x50002024
push   %ebx
xor    0x5000203e,%bh
push   %ebx
xor    $0x3d,%al
sub    (%eax),%esp
add    %cl,0x50(%edi)
push   %esp
dec    %ecx
dec    %esi
inc    %esp
cmp    $0x31,%eax
dec    %ebp
inc    %ecx
dec    %ecx
dec    %esp
add    %al,(%eax)
dec    %ebp
inc    %ecx
dec    %ecx
dec    %esp
push   %eax
inc    %ecx
push   %esp
dec    %eax
dec    %ecx
inc    %esi
push   %ebx
cmp    $0xa0920,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x7273752f,%eax
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
das
jae    15934 <defpathvar+0x74>
imul   $0x7273752f,0x3a(%esi),%ebp
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
das
bound  %ebp,0x6e(%ecx)
cmp    (%edi),%ch
jne    1595a <defpathvar+0x9a>
jb     15918 <defpathvar+0x58>
jae    1594d <defpathvar+0x8d>
imul   $0x7273752f,0x3a(%esi),%ebp
das
bound  %ebp,0x6e(%ecx)
cmp    (%edi),%ch
jae    1595c <defpathvar+0x9c>
imul   $0x6e69622f,0x3a(%esi),%ebp
add    %bl,0x0(%ebx)
bound  %esp,0x0(%edi)
bound  %esi,0x65(%edx)
popa
imul   $0x63,(%eax),%eax
add    %ah,%fs:0x68(%ebx)
imul   $0x6d6d6f63,%fs:0x0(%edx),%esi
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     1598c <defpathvar+0xcc>
outsb  %ds:(%esi),(%dx)
jne    1598b <defpathvar+0xcb>
add    %ah,0x63(%ebp)
push   $0x7665006f
popa
insb   (%dx),%es:(%edi)
add    %ah,0x61(%esi)
insb   (%dx),%es:(%edi)
jae    1599b <defpathvar+0xdb>
add    %ah,0x67(%esi)
add    %ah,0x65(%edi)
je     159ad <defpathvar+0xed>
jo     159b4 <defpathvar+0xf4>
jae    15942 <defpathvar+0x82>
push   $0x687361
push   $0x6f
bound  %esi,0x0(%ebx)
imul   $0x6c,0x6c(%ecx),%ebp
add    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x72(%eax)
imul   $0x77700066,0x74(%esi),%ebp
add    %dh,%fs:0x65(%edx)
popa
add    %dh,%fs:0x65(%edx)
popa
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    15970 <defpathvar+0xb0>
jb     159d7 <defpathvar+0x117>
je     159e9 <defpathvar+0x129>
jb     159e4 <defpathvar+0x124>
add    %dh,0x68(%ebx)
imul   $0x73657400,0x74(%esi),%esp
je     15982 <defpathvar+0xc2>
je     159ed <defpathvar+0x12d>
insl   (%dx),%es:(%edi)
gs
jae    15988 <defpathvar+0xc8>
je     159fc <defpathvar+0x13c>
popa
jo     1598d <defpathvar+0xcd>
je     15a01 <defpathvar+0x141>
jne    159f6 <defpathvar+0x136>
add    %dh,0x70(%ecx,%edi,2)
add    %dh,%gs:0x6c(%ebp)
imul   $0x6d750074,0x69(%ebp),%ebp
popa
jae    15a0e <defpathvar+0x14e>
add    %dh,0x61(%edi)
imul   $0x646c,0x25(%eax,%eax,1),%esi
add    %al,(%eax)
mov    %es,-0x7e830001(%ecx)
(bad)
(bad)
fldl   -0x7f220001(%eax)
(bad)
(bad)
fldl   -0x7ef30001(%eax)
(bad)
decl   (%ecx,%eax,4)
(bad)
decl   (%ecx,%eax,4)
(bad)
incl   (%ecx,%eax,4)
(bad)
decl   (%ecx,%eax,4)
(bad)
decl   (%ecx,%eax,4)
(bad)
inc    %esp
cmp    $0xff,%bh
fldl   -0x7efb0001(%eax)
(bad)
incl   -0x1(%ecx,%eax,4)
lcall  *(%ecx,%eax,4)
(bad)
push   %esp
cmp    $0xff,%bh
hlt
cmp    $0xff,%bh
hlt
cmp    $0xff,%bh
hlt
cmp    $0xff,%bh
hlt
cmp    $0xff,%bh
insb   (%dx),%es:(%edi)
cmp    $0xff816cff,%edi
push   %esp
cmp    $0xff,%bh
hlt
cmp    $0xff,%bh
adc    $0x81,%al
(bad)
push   %esp
(bad)
(bad)
incl   -0x7d7e0001(%ebx,%eax,4)
(bad)
incl   -0x7e00007e(%ecx)
(bad)
(bad)
ljmp   *-0x5000007e(%edi)
(bad)
(bad)
ljmp   *-0x5b00007e(%edi)
(bad)
(bad)
ljmp   *-0x5000007e(%edi)
(bad)
(bad)
lcall  *-0x1(%edx,%eax,4)
incl   -0x5b00007e(%ecx)
(bad)
(bad)
incl   (%ebx,%eax,4)
(bad)
incl   -0x1(%ebx,%eax,4)
ljmp   *(%edx,%eax,4)
(bad)
ljmp   *(%edx,%eax,4)
(bad)
ljmp   *(%edx,%eax,4)
(bad)
ljmp   *(%edx,%eax,4)
(bad)
ljmp   *(%edx,%eax,4)
(bad)
dec    %esp
(bad)
(bad)
dec    %esp
(bad)
(bad)
ljmp   *(%edx,%eax,4)
(bad)
ljmp   *(%edx,%eax,4)
(bad)
jmp    *%esp
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %bl,(%eax)
add    %bl,(%eax)
add    %bl,(%eax)
add    %bl,(%eax)
add    %bl,(%eax)
add    %bl,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
add    %cl,(%eax)
add    %al,0x58(%ebp)
dec    %ecx
push   %esp
add    %cl,0x55(%eax)
push   %eax
add    %cl,0x4e(%ecx)
push   %esp
add    %dl,0x55(%ecx)
dec    %ecx
push   %esp
add    %dl,0x41(%edx,%edx,2)
push   %eax
add    %al,0x42(%ecx)
push   %edx
push   %esp
add    %al,0x55(%edx)
push   %ebx
add    %al,0x50(%esi)
inc    %ebp
add    %cl,0x49(%ebx)
dec    %esp
dec    %esp
add    %dl,0x53(%ebp)
push   %edx
xor    %eax,(%eax)
push   %ebx
inc    %ebp
inc    %edi
push   %esi
add    %dl,0x53(%ebp)
push   %edx
xor    (%eax),%al
push   %eax
dec    %ecx
push   %eax
inc    %ebp
add    %dl,0x52(%ebp,%eax,2)
dec    %ebp
add    %dh,(%ecx)
add    %al,%ss:0x48(%ebx)
dec    %esp
inc    %esp
add    %al,0x4f(%ebx)
dec    %esi
push   %esp
add    %dl,0x54(%ebx)
dec    %edi
push   %eax
add    %dl,0x54(%ebx,%edx,2)
push   %eax
add    %dl,0x49(%esp,%edx,2)
dec    %esi
add    %dl,0x4f(%esp,%edx,2)
push   %ebp
add    %dl,0x52(%ebp)
inc    %edi
add    %bl,0x43(%eax)
push   %eax
push   %ebp
add    %bl,0x46(%eax)
push   %ebx
pop    %edx
add    %dl,0x54(%esi)
inc    %ecx
dec    %esp
push   %edx
dec    %ebp
add    %dl,0x52(%eax)
dec    %edi
inc    %esi
add    %dl,0x49(%edi)
dec    %esi
inc    %ebx
dec    %eax
add    %cl,0x4f(%ecx)
add    %dl,0x57(%eax)
push   %edx
add    %dl,0x59(%ebx)
push   %ebx
add    %dh,(%ebx)
xor    (%eax),%al
xor    (%ebx),%esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%edx),%esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ebx),%esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%eax,%eax,1),%esi
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    0x4d545200,%esi
dec    %ecx
dec    %esi
sub    (%esi),%esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%edi),%esi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%eax),%edi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%edi
add    %dl,0x54(%edx)
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
xor    %al,(%eax)
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
xor    %eax,(%eax)
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
xor    (%eax),%al
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
xor    (%eax),%eax
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
xor    $0x0,%al
push   %edx
push   %esp
dec    %ebp
dec    %ecx
dec    %esi
sub    (%ecx),%esi
xor    $0x4d545200,%eax
inc    %ecx
pop    %eax
sub    $0x52003431,%eax
push   %esp
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x52003331,%eax
push   %esp
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x52003231,%eax
push   %esp
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x52003131,%eax
push   %esp
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x52003031,%eax
push   %esp
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520039,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520038,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520037,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520036,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520035,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520034,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520033,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520032,%eax
dec    %ebp
inc    %ecx
pop    %eax
sub    $0x54520031,%eax
dec    %ebp
inc    %ecx
pop    %eax
add    %al,(%eax)
add    %dl,(%eax)
add    %dl,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %eax,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
adc    %al,(%edx)
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%edx),%al
add    (%eax),%al
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%esp,%eax,1)
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
add    $0x4,%al
or     (%esi),%ecx
add    %cl,(%esp,%ecx,1)
or     $0xc,%al
or     $0xc,%al
or     $0xc,%al
add    %al,(%ecx)
add    %al,(%edi)
add    %al,(%eax)
add    %cl,(%ecx)
or     (%eax),%al
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
or     %al,(%eax)
or     (%esi),%ecx
add    %cl,(%esp,%ecx,1)
or     $0xc,%al
or     $0xc,%al
or     $0xc,%al
add    %al,(%ecx)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    $0xc0000,%eax
add    %cl,(%eax,%eax,1)
or     $0x0,%al
add    %cl,(%eax,%eax,1)
add    %cl,(%eax,%eax,1)
or     $0x0,%al
add    %al,(%eax)
or     $0xc,%al
or     $0x0,%al
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
or     (%esi),%ecx
add    %cl,(%esp,%ecx,1)
or     $0xc,%al
or     $0xc,%al
or     $0xc,%al
add    %al,(%ecx)
add    %al,(%eax)
or     $0x5,%al
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %cl,(%eax,%eax,1)
or     $0x0,%al
add    %cl,(%eax,%eax,1)
add    %cl,(%eax,%eax,1)
or     $0x0,%al
add    %al,(%eax)
or     $0x2,%al
or     $0x0,%al
add    %al,(%esi)
or     %cl,(%eax,%eax,1)
or     0xc0c0c00,%ecx
or     $0xc,%al
or     $0xc,%al
or     $0x0,%al
add    %al,(%eax)
add    %cl,0x1
add    %al,(%eax)
or     $0x7000400,%eax
add    %cl,0xd0d03
or     $0xd000d,%eax
add    (%eax),%al
add    %al,(%eax)
push   %es
add    %al,(%eax)
.byte 0x0
.byte 0xd
or     %al,(%eax)
add    %ebx,(%ebx)
add    (%ebx),%edi
loopne 16211 <basesyntax+0x111>
add    %al,(%eax)
sti
add    %al,(%eax)
add    %ch,0x7fcfffe(%esp,%eax,8)
add    %al,(%eax)
int3
lret   $0xfffe
loopne 16256 <basesyntax+0x156>
add    %al,(%eax)
or     $0xcb,%al
(bad)
push   %eax
and    $0x0,%al
add    %bl,-0x2(%esi,%ecx,8)
jmp    *(%eax)
or     %al,(%eax)
add    %ch,%ah
into
(bad)
lcall  *0x0(%eax,%ecx,1)
add    %ch,0x8c4fffe(%edi,%ecx,8)
add    %al,(%eax)
mov    %ss,%eax
(bad)
lcall  *(%eax)
or     %eax,(%eax)
add    %bh,0x938fffe(%eax,%edx,8)
add    %al,(%eax)
pushf
sar    %esi
call   *-0x23fffff7(%eax)
sar    %esi
(bad)
mov    $0x8c000009,%esp
sar    %cl,%esi
call   *(%edx,%ecx,1)
add    %al,(%eax)
mov    $0x30fffed3,%esp
or     (%eax),%al
add    %bl,%ah
aad    $0xfe
pushl  0xa(%eax)
add    %al,(%eax)
mov    %ss,%edi
(bad)
pushl  -0x53fffff6(%eax)
fdivr  %st(6),%st
push   %eax
or     (%eax),%al
add    %bl,0xb44fffe(%ecx,%ebx,8)
add    %al,(%eax)
cmp    $0xda,%al
(bad)
lcall  *0xc00000b(%eax)
(bad)
(bad)
fmuls  (%ebx)
add    %al,(%eax)
sbb    $0xdc,%al
(bad)
incl   0xc(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
fdivr  %st,%st(6)
jmp    *0x0(%esp,%ecx,1)
add    %bh,0xca4fffe(%esi,%ebx,8)
add    %al,(%eax)
or     $0xdf,%al
(bad)
jmp    *%eax
or     $0x0,%al
add    %bl,-0x2(%eax,%eiz,8)
jmp    *(%eax)
or     $0xe43c0000,%eax
(bad)
jmp    *0x0(%ebp,%ecx,1)
add    %ch,0xd90fffe(%esp,%eiz,8)
add    %al,(%eax)
dec    %esp
in     $0xfe,%eax
dec    %esp
or     $0xe58c0000,%eax
(bad)
(bad)
call   fc0162f6 <_end+0xfbff7a02>
in     $0xfe,%eax
incl   (%esi,%ecx,1)
add    %al,(%eax)
cmp    $0xe6,%al
(bad)
jmp    *(%eax)
push   %cs
add    %al,(%eax)
insb   (%dx),%es:(%edi)
out    %al,$0xfe
(bad)
cmp    $0xe,%al
add    %al,(%eax)
mov    %fs,%esi
(bad)
call   *0x0(%esi,%ecx,1)
add    %ch,%ah
out    %al,$0xfe
incl   0xc00000e(%eax)
out    %eax,$0xfe
call   *-0x18440000(%esi,%ecx,1)
(bad)
dec    %eax
push   %cs
add    %al,(%eax)
or     $0xea,%al
(bad)
decl   (%eax)
sldt   (%eax)
cld
ljmp   $0x0,$0xf5cfffe
in     (%dx),%al
jmp    16331 <basesyntax+0x231>
lcall  *-0x12a40000(%edi,%ecx,1)
(bad)
(bad)
fmull  (%edi)
add    %al,(%eax)
sbb    $0xef,%al
(bad)
call   *(%eax,%edx,1)
add    %al,(%eax)
cmp    $0xf0,%al
(bad)
ljmp   *0x0(%eax,%edx,1)
add    %ch,-0x2(%edx,%esi,8)
inc    %esp
adc    %al,(%eax)
add    %cl,(%ebx,%esi,8)
(bad)
incl   (%eax)
adc    %eax,(%eax)
add    %bh,%ah
hlt
(bad)
incl   0x11(%eax)
add    %al,(%eax)
cmp    $0xfc,%al
(bad)
incl   -0x2b40000(%ecx,%edx,1)
(bad)
inc    %esp
adc    %eax,(%eax)
add    %cl,%ah
std
(bad)
push   %esp
adc    %eax,(%eax)
add    %bl,(%esi,%edi,8)
(bad)
jmp    *(%eax)
adc    (%eax),%al
add    %ch,(%esi,%edi,8)
(bad)
pushl  (%edx,%edx,1)
add    %al,(%eax)
cmp    $0xfe,%al
(bad)
decl   0x12(%eax)
add    %al,(%eax)
xchg   %eax,%ebx
(bad)
(bad)
ljmp   *0x0(%edx,%edx,1)
add    %bl,0x1280fffe(%esi,%edi,8)
add    %al,(%eax)
cld
(bad)
(bad)
(bad)
mov    $0xec000012,%esp
(bad)
(bad)
(bad)
cld
adc    (%eax),%al
add    %ch,0x1350ffff(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x1,%al
(bad)
lcall  *0x7c000013(%eax)
add    %bh,%bh
(bad)
fcoms  (%ebx)
add    %al,(%eax)
int3
add    %edi,%edi
incl   (%eax)
adc    $0x0,%al
add    %cl,-0x1(%esp,%eax,1)
call   *0x0(%esp,%edx,1)
add    %bl,%ah
or     %bh,%bh
call   *0xaac0000(%esp,%edx,1)
(bad)
incl   (%eax)
adc    $0xd3c0000,%eax
(bad)
incl   0x15(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
or     $0x1570ffff,%eax
add    %al,(%eax)
fmull  (%esi)
(bad)
pushl  0x6c000015(%eax)
(bad)
decl   (%eax)
push   %ss
add    %al,(%eax)
pushf
(bad)
ljmp   *(%eax)
push   %ss
add    %al,(%eax)
cld
(bad)
jmp    *0x0(%esi,%edx,1)
add    %bh,-0x1(%eax,%edx,1)
ljmp   *0x4c000016(%eax)
adc    %edi,%edi
(bad)
call   ac016447 <_end+0xabff7b53>
adc    %edi,%edi
lcall  *(%edi,%edx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    $0xff,%al
decl   0x153c0000(%edi,%edx,1)
(bad)
call   *%esp
pop    %ss
add    %al,(%eax)
mov    $0x1cffff15,%esp
sbb    %al,(%eax)
add    %cl,(%esi,%edx,1)
(bad)
call   *0x18(%eax)
add    %al,(%eax)
mov    %ds,(%ecx)
(bad)
ljmp   *0x4c000018(%eax)
sbb    %bh,%bh
(bad)
call   cc016481 <_end+0xcbff7b8d>
sbb    %edi,%edi
call   *0x0(%ecx,%ebx,1)
add    %bl,-0x1(%esp,%ebx,1)
(bad)
js     1648f <basesyntax+0x38f>
add    %al,(%eax)
mov    $0xb8ffff1e,%esp
sbb    %eax,(%eax)
add    %ch,(%edi,%ebx,1)
(bad)
push   %eax
sbb    %eax,(%eax)
add    %bl,%ah
and    %bh,%bh
pushl  (%eax)
sbb    (%eax),%al
add    %bl,%ah
and    %edi,%edi
ljmp   *0x0(%edx,%ebx,1)
add    %bl,(%esp)
(bad)
inc    %esp
sbb    (%eax),%al
add    %bh,(%edx,%ebp,1)
(bad)
lcall  *(%ebx,%ebx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xor    %bh,%bh
jmp    *0x1b(%eax)
add    %al,(%eax)
in     (%dx),%al
xor    %bh,%bh
jmp    *-0x73ffffe5(%eax)
xor    %edi,%edi
jmp    *%eax
sbb    (%eax),%eax
add    %cl,(%esp,%esi,1)
(bad)
incl   (%esp,%ebx,1)
add    %al,(%eax)
sub    $0x34,%al
(bad)
lcall  *(%eax)
sbb    $0x0,%al
add    %ch,%ah
xor    $0xff,%al
pushl  0x1c(%eax)
add    %al,(%eax)
mov    $0xc4ffff35,%esp
sbb    $0x0,%al
add    %cl,-0x1(%eax,%edi,1)
incl   0x388c0000(,%ebx,1)
(bad)
ljmp   *(%eax)
sbb    $0x38dc0000,%eax
(bad)
call   *0x0(%ebp,%ebx,1)
add    %cl,(%edx,%edi,1)
(bad)
ljmp   *0x3a8c0000(%ebp,%ebx,1)
(bad)
jmp    *%esp
sbb    $0x3b4c0000,%eax
(bad)
ljmp   *(%esi,%ebx,1)
add    %al,(%eax)
mov    %?,(%ebx)
(bad)
lcall  *0x1e(%eax)
add    %al,(%eax)
fdivrl (%ebx)
(bad)
incl   0x3c7c0000(%esi,%ebx,1)
(bad)
ljmp   *0x3cbc0000(%esi,%ebx,1)
(bad)
dec    %esp
push   %ds
add    %al,(%eax)
sub    $0x3e,%al
(bad)
decl   (%edi,%ebx,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
ds
(bad)
decl   0x1f(%eax)
add    %al,(%eax)
fdivrl (%edi)
(bad)
dec    %eax
pop    %ds
add    %al,(%eax)
lods   %ds:(%esi),%al
inc    %edx
(bad)
decl   (%eax,%eiz,1)
add    %al,(%eax)
or     $0x45,%al
(bad)
decl   0x0(%eax,%eiz,1)
add    %bl,-0x1(%ebp,%eax,2)
pushl  0x20(%eax)
add    %al,(%eax)
sbb    $0x46,%al
(bad)
dec    %eax
and    %al,(%eax)
add    %ch,%ah
dec    %eax
(bad)
decl   (%ecx,%eiz,1)
add    %al,(%eax)
jl     165be <basesyntax+0x4be>
(bad)
jmp    *0x0(%ecx,%eiz,1)
add    %ch,(%esi,%ecx,2)
(bad)
jmp    *0x509c0000(%ecx,%eiz,1)
(bad)
(bad)
cld
and    %eax,(%eax)
add    %bh,%ah
push   %eax
(bad)
(bad)
cmp    %ah,(%edx)
add    %al,(%eax)
mov    %ss,-0x1(%ecx)
(bad)
js     165b8 <basesyntax+0x4b8>
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %edx
(bad)
jmp    *%esp
and    (%eax),%al
add    %bh,0x2324ffff(%esp,%edx,2)
add    %al,(%eax)
jl     16601 <basesyntax+0x501>
(bad)
(bad)
jl     165d1 <basesyntax+0x4d1>
add    %al,(%eax)
or     $0x58,%al
(bad)
inc    %esp
and    (%eax),%eax
add    %ch,0x2404ffff(%ecx,%ebx,2)
add    %al,(%eax)
sbb    $0x5a,%al
(bad)
(bad)
cmp    $0x24,%al
add    %al,(%eax)
dec    %esp
pop    %ebx
(bad)
(bad)
jl     165f2 <basesyntax+0x4f2>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %ebx
(bad)
call   *-0x23ffffdc(%eax)
pop    %esp
(bad)
call   *%eax
and    $0x0,%al
add    %bl,0x2510ffff(,%ebx,2)
add    %al,(%eax)
pop    %esp
pop    %ebp
(bad)
pushl  (%eax)
and    $0x5e5c0000,%eax
(bad)
decl   -0x53ffffdb(%eax)
pop    %esi
(bad)
ljmp   *0x5eec0000(%ebp,%eiz,1)
(bad)
call   *%eax
and    $0x5f2c0000,%eax
(bad)
push   %esp
and    $0x5f6c0000,%eax
(bad)
lcall  *(%eax)
add    %al,%es:(%eax)
dec    %esp
pusha
(bad)
call   *0x26(%eax)
add    %al,(%eax)
jl     16682 <basesyntax+0x582>
(bad)
jmp    *0x0(%esi,%eiz,1)
add    %bh,0x2678ffff(%eax,%eiz,2)
add    %al,(%eax)
sbb    $0x61,%al
(bad)
pushl  -0x53ffffda(%eax)
popa
(bad)
(bad)
clc
add    %al,%es:(%eax)
pushf
(bad)
(bad)
(bad)
cmp    %ah,(%edi)
add    %al,(%eax)
int3
(bad)
(bad)
jmp    *0x0(%edi,%eiz,1)
add    %ch,(%ebx,%eiz,2)
(bad)
call   *0x639c0000(%edi,%eiz,1)
(bad)
dec    %eax
daa
add    %al,(%eax)
fsubl  -0x1(%ebx)
push   %esp
daa
add    %al,(%eax)
cmp    $0x64,%al
(bad)
ljmp   *(%eax,%ebp,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
addr16 (bad)
incl   0x6c2c0000(%eax,%ebp,1)
(bad)
dec    %eax
sub    %al,(%eax)
add    %bh,-0x1(%esi,%ebp,2)
decl   (%eax)
sub    %eax,(%eax)
add    %ch,0x291cffff(%esi,%ebp,2)
add    %al,(%eax)
fsubrl -0x1(%esi)
(bad)
cmp    %ch,(%ecx)
add    %al,(%eax)
mov    %gs,-0x1(%edi)
(bad)
js     166c7 <basesyntax+0x5c7>
add    %al,(%eax)
lods   %ds:(%esi),%al
outsl  %ds:(%esi),(%dx)
(bad)
call   *-0x13ffffd7(%eax)
outsl  %ds:(%esi),(%dx)
(bad)
pushl  0x1c000029(%eax)
jo     166b2 <basesyntax+0x5b2>
inc    %esp
sub    %eax,(%eax)
add    %ch,%ah
jo     166ba <basesyntax+0x5ba>
incl   (%eax)
sub    (%eax),%al
add    %ch,(%ecx,%esi,2)
(bad)
pushl  (%edx,%ebp,1)
add    %al,(%eax)
pop    %esp
jno    166ca <basesyntax+0x5ca>
call   *0x0(%edx,%ebp,1)
add    %cl,%ah
jno    166d2 <basesyntax+0x5d2>
decl   0x720c0000(%edx,%ebp,1)
(bad)
(bad)
mov    $0x5c00002a,%eax
jb     166e2 <basesyntax+0x5e2>
(bad)
in     (%dx),%al
sub    (%eax),%al
add    %cl,(%ebx,%esi,2)
(bad)
ljmp   *(%ebx,%ebp,1)
add    %al,(%eax)
sub    $0x76,%al
(bad)
ljmp   *0x0(%ebx,%ebp,1)
add    %bl,(%eax,%edi,2)
(bad)
ljmp   *0x791c0000(%ebx,%ebp,1)
(bad)
incl   (%esp,%ebp,1)
add    %al,(%eax)
int3
jns    1670a <basesyntax+0x60a>
decl   0x0(%esp,%ebp,1)
add    %cl,(%edx,%edi,2)
(bad)
ljmp   *0x0(%esp,%ebp,1)
add    %bl,(%esi,%edi,2)
(bad)
inc    %esp
sub    $0x0,%al
add    %bl,(%edi,%edi,2)
(bad)
lcall  *0x7f6c0000(,%ebp,1)
(bad)
(bad)
cmp    $0x2d,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
jg     16732 <basesyntax+0x632>
lcall  *0x2d(%eax)
add    %al,(%eax)
dec    %esp
cmp    $0xff,%bh
js     1676b <basesyntax+0x66b>
add    %al,(%eax)
int3
cmp    $0xff,%bh
mov    $0x3c00002d,%eax
cmp    $0x2decff,%edi
add    %bl,0x2e00ffff(%ecx,%eax,4)
add    %al,(%eax)
or     $0x82,%al
(bad)
pushl  (%esi,%ebp,1)
add    %al,(%eax)
cld
test   %bh,%bh
call   *%eax
add    %al,%cs:(%eax)
pop    %esp
xchg   %bh,%bh
call   *(%eax)
das
add    %al,(%eax)
pop    %esp
xchg   %edi,%edi
ljmp   *0x0(%edi,%ebp,1)
add    %cl,%ah
mov    %edi,%?
(bad)
fsubrl (%edi)
add    %al,(%eax)
in     (%dx),%al
(bad)
(bad)
lcall  *(%eax,%esi,1)
add    %al,(%eax)
cld
xchg   %eax,%ecx
(bad)
lcall  *0x0(%eax,%esi,1)
add    %cl,-0x1(%eax,%eiz,4)
decl   -0x5f040000(%eax,%esi,1)
(bad)
inc    %eax
xor    %al,(%eax)
add    %bl,%ah
mov    0x30fcffff,%eax
add    %al,(%eax)
pop    %esp
mov    %al,0x3138ffff
add    %al,(%eax)
pushf
mov    %al,0x3158ffff
add    %al,(%eax)
jl     1675d <basesyntax+0x65d>
(bad)
ljmp   *-0x5bd40000(%ecx,%esi,1)
(bad)
(bad)
in     (%dx),%al
xor    %eax,(%eax)
add    %bl,(%ecx,%ebp,4)
(bad)
pushl  (%eax)
xor    (%eax),%al
add    %bh,%ah
test   $0x326cffff,%eax
add    %al,(%eax)
cmp    $0xaa,%al
(bad)
jmp    *-0x63ffffce(%eax)
stos   %al,%es:(%edi)
(bad)
call   *%esp
xor    (%eax),%al
add    %bh,(%ebx,%ebp,4)
(bad)
incl   (%ebx,%esi,1)
add    %al,(%eax)
in     (%dx),%al
lods   %ds:(%esi),%al
(bad)
incl   0x0(%ebx,%esi,1)
add    %bh,0x3398ffff(%ebp,%ebp,4)
add    %al,(%eax)
or     $0xae,%al
(bad)
dec    %esp
xor    (%eax),%eax
add    %cl,0x3408ffff(%esi,%ebp,4)
add    %al,(%eax)
in     (%dx),%al
scas   %es:(%edi),%al
(bad)
pushl  (%esp,%esi,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
scas   %es:(%edi),%eax
(bad)
call   *0x34(%eax)
add    %al,(%eax)
dec    %esp
mov    $0xff,%al
(bad)
mov    $0x1c000034,%eax
mov    $0xff,%dl
call   *(%eax)
xor    $0xb29c0000,%eax
(bad)
(bad)
cmp    $0x35,%al
add    %al,(%eax)
int3
mov    $0xff,%dl
call   *0x0(%ebp,%esi,1)
add    %bl,-0x1(%ebx,%esi,4)
ljmp   *-0x63ffffcb(%eax)
mov    $0xff,%bl
dec    %eax
xor    $0xb3cc0000,%eax
(bad)
(bad)
call   1c01688e <_end+0x1bff7f9a>
mov    $0xff,%ch
incl   0x36(%eax)
add    %al,(%eax)
pop    %esp
mov    $0xff,%ch
pushl  0x0(%esi,%esi,1)
add    %cl,0x368cffff(%ebp,%esi,4)
add    %al,(%eax)
dec    %esp
mov    $0xff,%dh
(bad)
clc
add    %al,%ss:(%eax)
jl     16830 <basesyntax+0x730>
(bad)
call   *(%eax)
aaa
add    %al,(%eax)
mov    $0x30ffffb6,%esp
aaa
add    %al,(%eax)
jl     16841 <basesyntax+0x741>
(bad)
pushl  0x37(%eax)
add    %al,(%eax)
pop    %esp
mov    $0x37b0ffff,%eax
add    %al,(%eax)
int3
mov    $0x37ecffff,%eax
add    %al,(%eax)
pop    %esp
mov    $0x3818ffff,%ecx
add    %al,(%eax)
sbb    $0xba,%al
(bad)
jmp    *0x38(%eax)
add    %al,(%eax)
jl     16872 <basesyntax+0x772>
(bad)
jmp    *0x5c000038(%eax)
sar    $0xff,%edi
cld
cmp    %al,(%eax)
add    %bh,0x3940ffff(%ecx,%eax,8)
add    %al,(%eax)
pop    %esp
ret    $0xffff
nop
cmp    %eax,(%eax)
add    %bl,0x39bcffff(%edx,%eax,8)
add    %al,(%eax)
sub    $0xc9,%al
(bad)
ljmp   *(%eax)
cmp    (%eax),%al
add    %bh,0x3a64ffff(%ecx,%ecx,8)
add    %al,(%eax)
fmul   %st,%st(2)
(bad)
(bad)
mov    $0xcc00003a,%esp
lret
(bad)
(bad)
clc
cmp    (%eax),%al
add    %bh,-0x1(%esp,%ecx,8)
pushl  (%ebx,%edi,1)
add    %al,(%eax)
dec    %esp
int    $0xff
pushl  0x0(%ebx,%edi,1)
add    %cl,-0x1(%esi,%ecx,8)
pushl  -0x43ffffc5(%eax)
into
(bad)
(bad)
fdivrl (%ebx)
add    %al,(%eax)
sub    $0xcf,%al
(bad)
incl   (%eax)
cmp    $0x0,%al
add    %ch,-0x1(%edi,%ecx,8)
pushl  (%esp,%edi,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %edi
pushl  0x0(%esp,%edi,1)
add    %bl,0x3cccffff(%edx,%edx,8)
add    %al,(%eax)
or     $0xd3,%al
(bad)
(bad)
clc
cmp    $0x0,%al
add    %bh,(%ebx,%edx,8)
(bad)
call   *(%eax)
cmp    $0xd53c0000,%eax
(bad)
ljmp   *0x3d(%eax)
add    %al,(%eax)
jl     16927 <basesyntax+0x827>
(bad)
lcall  *-0x2a040000(%ebp,%edi,1)
(bad)
call   *%eax
cmp    $0xd66c0000,%eax
(bad)
jmp    *(%esi,%edi,1)
add    %al,(%eax)
sbb    $0xd7,%al
(bad)
(bad)
js     169ac <basesyntax+0x8ac>
add    %al,(%eax)
pop    %esp
xlat   %ds:(%ebx)
(bad)
lcall  *-0x53ffffc2(%eax)
fdivr  %st(7),%st
(bad)
in     (%dx),%al
add    %al,%ds:(%eax)
pop    %esp
(bad)
incl   0x0(%edi,%edi,1)
add    %bh,0x3f70ffff(%edx,%ebx,8)
add    %al,(%eax)
(bad)
(bad)
incl   -0x23d40000(%edi,%edi,1)
(bad)
(bad)
mov    $0xac00003f,%esp
fdivr  %st,%st(7)
jmp    *%eax
aas
add    %al,(%eax)
int3
(bad)
(bad)
cmp    $0x40,%al
add    %al,(%eax)
or     $0xde,%al
(bad)
ljmp   *0x40(%eax)
add    %al,(%eax)
int3
(bad)
ljmp   *0x2c000040(%eax)
loopne 169c2 <basesyntax+0x8c2>
jmp    *%esp
inc    %eax
add    %al,(%eax)
lods   %ds:(%esi),%al
loopne 169ca <basesyntax+0x8ca>
jmp    *(%eax)
inc    %ecx
add    %al,(%eax)
in     (%dx),%al
loopne 169d2 <basesyntax+0x8d2>
decl   0x0(%ecx,%eax,2)
add    %bl,-0x1(%ecx,%eiz,8)
decl   0x6c000041(%eax)
loope  169e2 <basesyntax+0x8e2>
.byte 0xff
pushf
inc    %ecx
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     169ff <basesyntax+0x8ff>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
test   $0xbc,%al
(bad)
jmp    *(%eax)
push   %es
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     16a1f <basesyntax+0x91f>
js     16a1d <basesyntax+0x91d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
cmp    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,(%esi,%eax,8)
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x64,%al
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %cl,-0x4200013a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%esi
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %ah,%ah
add    %al,(%eax)
add    %ah,%al
(bad)
(bad)
call   *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
ljmp   *0x0
inc    %ebx
push   %cs
adc    %bl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     0x4(%esi,%ecx,1),%ecx
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bl,0x1(%eax)
add    %al,(%eax)
jl     16b0d <basesyntax+0xa0d>
(bad)
call   *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x1,%al
add    %al,(%eax)
add    $0xc8,%al
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,%ah
add    %eax,(%eax)
add    %bl,(%eax)
enter  $0xfffe,$0xac
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb4,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    $0xa,%al
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,(%edx,%eax,1)
add    %al,(%eax)
jo     16beb <basesyntax+0xaeb>
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
add    (%eax),%al
add    %al,0x21efffe(%ecx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4402(%ebp)
inc    %esi
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30a5102,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%edx),%eax
jbe    16c70 <basesyntax+0xb70>
ret
inc    %ebx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
nop
add    (%eax),%al
add    %ah,-0x2(%ebx,%ecx,8)
pushl  0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x52,0x2300e4e
or     (%esi),%cl
adc    $0x47,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rolb   (%edx)
add    %al,(%eax)
aam    $0xcc
(bad)
jmp    *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff4,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %dl,(%eax)
add    (%eax),%eax
add    %dh,0xebfffe(%ebp,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x63,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
fs
push   %cs
adc    $0x47,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %ah,0x0(%ebx,%eax,1)
add    %dl,-0x32(%eax)
(bad)
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x71300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
push   %ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x9c000003,%eax
into
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6d400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,0x0(%eax,%eax,1)
add    %bh,%al
add    (%eax),%eax
add    %ch,(%edi,%ecx,8)
(bad)
decl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffad,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,0x4(%eax)
add    %al,(%eax)
aam    $0xcf
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
imul   $0xe,(%edx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   %al,(%eax,%eax,1)
add    %al,(%eax)
sar    %dh
incl   0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %al,%ah
add    $0x0,%al
add    %dl,(%eax)
sar    %cl,%dh
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xe,0x6c300e4e
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xd2240000
(bad)
decl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
xor    $0xd3,%al
(bad)
call   *%ecx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e51
and    $0x1,%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
test   %al,0xd6d00000
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,0x14000005(%eax)
xlat   %ds:(%ebx)
(bad)
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7f,0x2400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ch,%ah
add    $0xd7780000,%eax
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
push   %es
add    %al,(%eax)
pushf
xlat   %ds:(%ebx)
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,(%esi,%eax,1)
add    %al,(%eax)
lock xlat %ds:(%ebx)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x6(%eax)
add    %al,(%eax)
adc    $0xd8,%al
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
push   %es
add    %al,(%eax)
sub    %bl,%al
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xe(%eax)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
je     17064 <basesyntax+0xf64>
add    %al,(%eax)
xor    %bl,%al
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     1707d <basesyntax+0xf7d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%eax),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x64000006(%eax)
fdivr  %st(6),%st
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
mov    $0x6,%ah
add    %al,(%eax)
jo     1707a <basesyntax+0xf7a>
(bad)
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%ebp),%dl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
call   ec0170db <_end+0xebff87e7>
fdivr  %st(6),%st
incl   0x0(%edx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ch,(%eax)
pop    %es
add    %al,(%eax)
cld
(bad)
(bad)
jmp    1711a <basesyntax+0x101a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%esi),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
jl     1716d <basesyntax+0x106d>
add    %al,(%eax)
cwtl
(bad)
(bad)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff97,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x48000007,%esp
fdivr  %st,%st(6)
jmp    *0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
cld
pop    %es
add    %al,(%eax)
js     171c7 <basesyntax+0x10c7>
(bad)
pushl  0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0xff1aefc(%ebx)
add    %eax,(%ebx)
jae    17208 <basesyntax+0x1108>
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%eax,%ecx,1)
add    %al,(%eax)
add    %bl,%bh
(bad)
lcall  *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,-0x20380000(%eax,%ecx,1)
(bad)
ljmp   *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x46,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,%ah
or     %al,(%eax)
add    %ah,-0x6300011f(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8c,0x2400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,(%eax)
or     %eax,(%eax)
add    %al,(%edx,%eiz,8)
(bad)
jmp    *%edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1e00e51
jmp    4315813d <_end+0x43139849>
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%eax
add    %al,(%eax)
pusha
or     %eax,(%eax)
add    %dh,0x733fffe(%ebx,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e4e
pop    %ebp
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     %eax,(%eax)
add    %dh,0x6fffeea(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff84,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
in     $0x9,%al
add    %al,(%eax)
sub    $0xfe,%bl
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %esi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    $0xa,%al
add    %al,(%eax)
shr    %bl
(bad)
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0xa(%eax)
add    %al,(%eax)
hlt
jmp    1742d <basesyntax+0x132d>
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx,%ecx,1)
add    %dh,%al
jmp    17441 <basesyntax+0x1341>
incl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0xa(%eax)
add    %al,(%eax)
in     (%dx),%al
jmp    17455 <basesyntax+0x1355>
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %cs,(%edx)
add    %al,(%eax)
pop    %ds
in     (%dx),%al
(bad)
incl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
mov    0x1400000a,%al
in     (%dx),%al
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x50,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,%ah
or     (%eax),%al
add    %bh,(%eax)
in     (%dx),%al
(bad)
(bad)
out    %eax,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff9a,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bl,(%ebx,%ecx,1)
add    %al,(%eax)
call   ba0173f9 <_end+0xb9ff8b05>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7d,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x14(%esi,%ecx,1),%ebx
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %dh,0xb(%eax)
add    %al,(%eax)
push   %esp
in     (%dx),%eax
(bad)
ljmp   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jp     17583 <basesyntax+0x1483>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x7c00000b,%eax
in     (%dx),%eax
(bad)
lcall  *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
clc
or     (%eax),%eax
add    %bl,0x146fffe(%esi,%ebp,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x50400e4e
add    %al,(%eax)
and    %cl,(%eax,%eax,1)
add    %al,%ah
out    %eax,(%dx)
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
je     1766a <basesyntax+0x156a>
add    %al,(%eax)
lock out %eax,(%dx)
(bad)
decl   0x4(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
dec    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
mov    $0xc,%ah
add    %al,(%eax)
inc    %eax
hlt
(bad)
inc    %esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb4,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
fisttp (%esi)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    %cl,0xf5a40000
(bad)
call   *0x2(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x48,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
pusha
or     $0xf7f40000,%eax
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa4c0204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
nop
or     $0xf8340000,%eax
(bad)
jmp    *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,%al
or     $0xf9240000,%eax
(bad)
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sub    %cl,(%esi)
add    %al,(%eax)
pop    %esp
stc
(bad)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bl,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
dec    %eax
push   %cs
add    %al,(%eax)
insb   (%dx),%es:(%edi)
stc
(bad)
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x44,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,-0x6700000(%esi,%ecx,1)
(bad)
(bad)
jle    17876 <basesyntax+0x1776>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
jg     17897 <basesyntax+0x1797>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%ebx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,%al
push   %cs
add    %al,(%eax)
int3
stc
(bad)
call   *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
or     %cl,(%edi)
add    %al,(%eax)
pop    %esp
cli
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xe(%edi),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,(%edi,%ecx,1)
add    %al,(%eax)
mov    %bh,%dl
(bad)
(bad)
mov    $0x2,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x79,0x2500e4e
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
movsb  %ds:(%esi),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,-0x3280000(%edi,%ecx,1)
(bad)
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0x43100e0a(%ebx),%ah
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %dh,%ah
sldt   (%eax)
pusha
std
(bad)
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%eax),%bl
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
cmp    $0x10,%al
add    %al,(%eax)
cwtl
std
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
push   $0xe
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x10(%eax)
add    %al,(%eax)
mov    $0xfd,%ah
(bad)
pushl  0x3(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
rorb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
xor    %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
enter  $0x10,$0x0
faddl  (%eax)
(bad)
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   $0x8000000
adc    %eax,(%eax)
add    %bl,-0x1(%ecx,%eax,1)
(bad)
js     17afb <basesyntax+0x19fb>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc1,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
imul   $0xc341140e,(%edx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dh,0x0(%ecx,%edx,1)
add    %dh,0x2(%eax)
(bad)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    0xa(%edx),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cwtl
adc    %eax,(%eax)
add    %bl,%ah
add    %bh,%bh
call   *0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x30,0x3400e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
fcoms  (%ecx)
add    %al,(%eax)
cld
add    $0xff,%al
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%edi),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    %dl,(%edx)
add    %al,(%eax)
xor    $0x5,%al
(bad)
jmp    *0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff89,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
adc    (%eax),%al
add    %ah,0xfcffff(%esi,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x2500e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,0x7680000(%edx,%edx,1)
(bad)
(bad)
cmp    (%edx),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x1e,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,%ah
adc    (%eax),%al
add    %dl,0x9(%eax)
(bad)
lcall  *(%edi)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
insb   (%dx),%es:(%edi)
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
out    %al,(%dx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
cmp    $0x13,%al
add    %al,(%eax)
sbb    %cl,(%edi)
(bad)
jmp    *(%ecx)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1f00e51
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adcb   $0x0,(%ebx)
add    %al,0x27affff(,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3a,0x3400e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rclb   $0x0,(%ebx)
add    %al,-0x1(%edi,%edx,1)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x74,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %ah,0x73ffff(%edi,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    0xe(%edx),%ah
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    $0x14,%al
add    %al,(%eax)
add    %bl,(%eax)
(bad)
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
adc    $0x0,%al
add    %cl,(%eax,%ebx,1)
(bad)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,0x74000014(%eax)
sbb    %bh,%bh
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     $0x14,%al
add    %al,(%eax)
lock sbb %bh,%bh
incl   0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd1,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
and    $0x15,%al
add    %al,(%eax)
inc    %eax
sbb    %edi,%edi
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3cf598fe(%ebx)
push   %cs
add    $0x48,%al
or     -0x3d(%ecx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
dec    %eax
adc    $0x1b5c0000,%eax
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %bl,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,0x0(%ebp,%edx,1)
add    %al,0x22ffff1b(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
int3
adc    $0x1c580000,%eax
(bad)
(bad)
jnp    17fbe <basesyntax+0x1ebe>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
pop    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%eax),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,(%esi,%edx,1)
add    %al,(%eax)
mov    0xb4ffff1c,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0x41100e0a(%edi),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%eax),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
dec    %esp
push   %ss
add    %al,(%eax)
sbb    %bl,0x33ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %ah,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
js     18078 <basesyntax+0x1f78>
add    %al,(%eax)
sub    $0x1d,%al
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %ss
add    %al,(%eax)
push   %eax
sbb    $0x97ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
fs
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
int3
push   %ss
add    %al,(%eax)
enter  $0xff1d,$0xff
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x39f592fe(%esi)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
push   %ss
add    %al,(%eax)
call   65017ffa <_end+0x64ff9706>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a400e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,(%edi,%edx,1)
add    %al,(%eax)
sbb    %bl,(%edi)
(bad)
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x63,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x7c,%al
add    %al,(%eax)
add    %ch,0x17(%eax)
add    %al,(%eax)
pop    %esp
pop    %ds
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esp
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x77,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%ebp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
call   c0181ec <_end+0xbff98f8>
and    %bh,%bh
inc    %edi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3800e51
sti
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    $0x18,%al
add    %al,(%eax)
cwtl
and    %bh,%bh
lcall  *0x2(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xfffffffd,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sbb    %al,(%eax)
add    %bh,0x48ffff24(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,-0x1bffffe8(%eax)
and    $0xff,%al
pushl  0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff83,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,%al
sbb    %al,(%eax)
add    %cl,-0x1(%ebp,%eiz,1)
inc    %ebx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
add    %ecx,(%bp,%si)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%ecx,%ebx,1)
add    %al,(%eax)
fsubs  (%edi)
(bad)
decl   0x3(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   %bl,(%ecx)
add    %al,(%eax)
adc    %ch,(%ebx)
(bad)
ljmp   *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x17,0x3300e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %al,%ah
sbb    %eax,(%eax)
add    %al,0x6bffff2c(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff97,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jge    183f4 <basesyntax+0x22f4>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,(%edx,%ebx,1)
add    %al,(%eax)
cwtl
cs
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,0x1a(%eax)
add    %al,(%eax)
mov    $0x84ffff2e,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5b,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   $0x98000000
sbb    (%eax),%al
add    %cl,(%edi,%ebp,1)
(bad)
call   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff88,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%esi)
push   %cs
add    $0x44,%al
or     0xe(%ecx),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    $0x1b,%al
add    %al,(%eax)
shrb   $0xff,(%edi)
decl   (%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff0,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,0x0(%ebx,%ebx,1)
add    %dl,-0x4c0000cf(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
or     (%ecx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %bl,0x33f80000(%ebx,%ebx,1)
(bad)
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%al
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%esi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     $0x1b,%al
add    %al,(%eax)
inc    %eax
xor    $0xff,%al
call   *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
and    $0x1c,%al
add    %al,(%eax)
mov    0x63ffff35,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%eax),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
sbb    $0x0,%al
add    %bl,%al
xor    $0x12bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e51
sti
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x36c80000(%esp,%ebx,1)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x1c,%al
add    %al,(%eax)
aam    $0x36
(bad)
ljmp   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x33,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
lock sbb $0x0,%al
add    %al,(%eax,%edi,1)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
imul   $0x8,(%esi),%ecx
inc    %ecx
ret
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,(%eax)
sbb    $0xa6140000,%eax
(bad)
jmp    *%edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %al,(%ebx)
addl   $0x0,(%eax,%eax,1)
sbb    $0x0,%al
add    %al,(%eax)
xor    %bl,0x38040000
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dl,0x1d(%eax)
add    %al,(%eax)
and    $0x38,%al
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,-0x33ffffe3(%eax)
cmp    %bh,%bh
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
dec    %esp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
int3
sbb    $0x38f80000,%eax
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lock sbb $0x39140000,%eax
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    $0x1e,%al
add    %al,(%eax)
xor    %bh,(%ecx)
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
cmp    %bl,(%esi)
add    %al,(%eax)
dec    %esp
cmp    %edi,%edi
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0x41100e0a(%ebx),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1e(%eax)
add    %al,(%eax)
hlt
cmp    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
test   %bl,(%esi)
add    %al,(%eax)
adc    %bh,(%edx)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cwtl
push   %ds
add    %al,(%eax)
cmp    $0x3a,%al
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x10,0xec30a75
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     0x0(%eax,%eax,1),%eax
add    %dl,%al
push   %ds
add    %al,(%eax)
fs
cmp    %bh,%bh
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%edi),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%eax),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sbb    %bl,(%edi)
add    %al,(%eax)
lods   %ds:(%esi),%al
cmp    %bh,%bh
jmp    *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pop    %eax
pop    %ds
add    %al,(%eax)
pop    %esp
cmp    %edi,%edi
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %dl,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
test   %bl,(%edi)
add    %al,(%eax)
pusha
cmp    %edi,%edi
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa470204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esi
add    %al,(%eax)
add    %dh,0x3b900000(%edi,%ebx,1)
(bad)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
call   cc0189f4 <_end+0xcbffa100>
cmp    %edi,%edi
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
adc    $0x20,%al
add    %al,(%eax)
loopne 18a3d <basesyntax+0x293d>
(bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,0x0(%eax,%eiz,1)
add    %cl,(%eax)
cmp    $0xff,%al
jmp    *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd1,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
cld
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ah,0x3f200000(%eax,%eiz,1)
(bad)
(bad)
jp     18a9a <basesyntax+0x299a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
and    %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
call   5c018af5 <_end+0x5bffa201>
inc    %ebx
(bad)
decl   0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0x75,0x3400e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,(%eax)
and    %eax,(%eax)
add    %ch,-0x1(%ebp,%eax,2)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,(%ecx,%eiz,1)
add    %al,(%eax)
mov    %al,-0x1(%ebp)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
and    %eax,(%eax)
add    %bl,0xa4ffff(%ebp,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
cwtl
and    %eax,(%eax)
add    %cl,(%esi,%eax,2)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x21,%al
add    %al,(%eax)
adc    $0x46,%al
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
outsb  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,%al
and    %eax,(%eax)
add    %dh,(%esi,%eax,2)
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,%ah
and    %eax,(%eax)
add    %dl,0x46(%eax)
(bad)
call   *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb9,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %ah,(%eax)
and    (%eax),%al
add    %ah,%ah
inc    %esi
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jne    18c37 <basesyntax+0x2b37>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
and    (%eax),%al
add    %dh,%al
inc    %esi
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,0x0(%edx,%eiz,1)
add    %al,(%eax)
inc    %edi
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dl
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,0x47380000(%edx,%eiz,1)
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ah,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
fsubs  (%edx)
add    %al,(%eax)
dec    %esp
inc    %edi
(bad)
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     $0x23,%al
add    %al,(%eax)
push   $0xa6ffff47
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
dec    %esp
and    (%eax),%eax
add    %bl,%al
inc    %edi
(bad)
lcall  *(%ebx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x19,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    %fs,(%ebx)
add    %al,(%eax)
mov    $0xe9ffff4a,%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1d,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,%ah
and    (%eax),%eax
add    %ch,0x4c(%eax)
(bad)
(bad)
stc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,(%esp)
add    %al,(%eax)
adc    %cl,-0x1(%ebp)
jmp    *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%esp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
and    $0x0,%al
add    %bh,0x4d(%eax)
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
je     18e79 <basesyntax+0x2d79>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,0x4d980000(%esp)
(bad)
decl   0x4
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff7,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,%ah
and    $0x0,%al
add    %dl,0x51(%eax)
(bad)
push   %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cmp    $0x25,%al
add    %al,(%eax)
clc
push   %ecx
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
jb     18f49 <basesyntax+0x2e49>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bl,0x0(%ebp,%eiz,1)
add    %ch,(%eax)
push   %edx
(bad)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
js     18f87 <basesyntax+0x2e87>
add    %al,(%eax)
dec    %esp
push   %edx
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
addb   $0x0,(%ecx)
cmp    $0x0,%al
add    %al,(%eax)
cwtl
and    $0x52cc0000,%eax
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa480204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
fsubs  0x530c0000
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%bl
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
or     $0x26,%al
add    %al,(%eax)
dec    %eax
push   %ebx
(bad)
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
and    %ah,(%esi)
add    %al,(%eax)
xchg   %eax,%esp
push   %ebx
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xe(%edi),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %dl,0x0(%esi,%eiz,1)
add    %dl,%al
push   %ebx
(bad)
(bad)
jmp    19048 <basesyntax+0x2f48>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
pop    %edi
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
lock add %al,%es:(%eax)
and    $0x56,%al
(bad)
lcall  *0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x45,0x3400e4e
add    %ecx,(%esi)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dh,(%eax)
daa
add    %al,(%eax)
inc    %esp
push   %edi
(bad)
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jns    19143 <basesyntax+0x3043>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,0x57e80000(%edi,%eiz,1)
(bad)
ljmp   *0x7(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd2,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
pop    %es
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    %al,0x140e0a03
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cld
daa
add    %al,(%eax)
call   1701914b <_end+0x16ffa857>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cmp    $0x28,%al
add    %al,(%eax)
enter  $0xff5f,$0xff
or     %eax,(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff7,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
jl     1928e <basesyntax+0x318e>
add    %al,(%eax)
cwtl
popa
(bad)
decl   0xe(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4402(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa02c003,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x45,%al
or     (%eax),%esi
add    %al,(%eax)
add    %ch,0x6fb80000(%eax,%ebp,1)
(bad)
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbeeff2(%eax),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
loopne 192f2 <basesyntax+0x31f2>
add    %al,(%eax)
xor    $0x70,%al
(bad)
jmp    *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc9,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bl,(%ecx,%ebp,1)
add    %al,(%eax)
fdivs  -0x1(%eax)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
adc    %bh,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%esi)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
sub    %eax,(%eax)
add    %bl,(%ecx,%esi,2)
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %bh,0x29(%eax)
add    %al,(%eax)
cmp    $0x71,%al
(bad)
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8e,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
int3
sub    %eax,(%eax)
add    %cl,%al
jno    193ba <basesyntax+0x32ba>
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %cl,(%edx,%ebp,1)
add    %al,(%eax)
cmp    %dh,-0x1(%edx)
jmp    *%ebp
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
dec    %esp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
sub    (%eax),%al
add    %ah,%ah
jbe    1943e <basesyntax+0x333e>
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x51,(%ebx)
push   %cs
rolb   (%ecx)
add    0xa(%ecx),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%esi
add    %al,(%eax)
add    %cl,0x77880000(%edx,%ebp,1)
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
bound  %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %al,%al
sub    (%eax),%al
add    %dl,0x51ffff(%edi,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jp     194d7 <basesyntax+0x33d7>
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
hlt
sub    (%eax),%al
add    %al,%al
ja     194e2 <basesyntax+0x33e2>
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
jbe    194fd <basesyntax+0x33fd>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    $0x2b,%al
add    %al,(%eax)
xor    %bh,-0x1(%eax)
jmp    *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e51
xchg   %eax,%edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%edx
add    %al,(%eax)
sub    %fs:(%eax),%eax
add    %ah,-0x3d000087(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebp),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,0x1c00002b(%eax)
jp     195a6 <basesyntax+0x34a6>
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
outsb  %ds:(%esi),(%dx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%ah
sub    (%eax),%eax
add    %bh,(%eax)
jp     195da <basesyntax+0x34da>
(bad)
jnp    195de <basesyntax+0x34de>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,(%eax)
sub    $0x0,%al
add    %bh,-0x1(%edx,%edi,2)
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
js     19631 <basesyntax+0x3531>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esp,%ebp,1)
add    %dh,-0x4d000086(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3ff1aefe(%ebx)
add    %eax,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %dh,0x2c(%eax)
add    %al,(%eax)
push   %esp
jnp    1965e <basesyntax+0x355e>
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%esi),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bl,%al
sub    $0x0,%al
add    %cl,0x1c9ffff(%ebx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x21,0x3300e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
sub    $0x7d040000,%eax
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xa(%edi),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%eax),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
sub    $0x7d580000,%eax
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dh,0x0(%ebp,%ebp,1)
add    %dh,0x7d(%eax)
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x2d,$0x0
lods   %ds:(%esi),%al
jge    197b6 <basesyntax+0x36b6>
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%esi)
jno    197d5 <basesyntax+0x36d5>
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,%al
sub    $0x7dcc0000,%eax
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,(%eax)
add    %al,%cs:(%eax)
fdivrl -0x1(%ebp)
decl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
pusha
add    %al,%cs:(%eax)
aam    $0x7e
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
bound  %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
add    %al,%cs:(%eax)
loopne 19900 <basesyntax+0x3800>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xe(%eax)
add    $0x0,%al
push   $0xac000000
add    %al,%cs:(%eax)
clc
jle    1989a <basesyntax+0x379a>
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7b400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
sbb    %ch,(%edi)
add    %al,(%eax)
dec    %esp
jg     19906 <basesyntax+0x3806>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
xor    %ch,(%edi)
add    %al,(%eax)
fs
jg     1991e <basesyntax+0x381e>
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,0x2f(%eax)
add    %al,(%eax)
test   %bh,-0x1(%edi)
(bad)
mov    $0x0,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2180e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
nop
das
add    %al,(%eax)
add    $0x80,%al
(bad)
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8f,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
shrb   (%edi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    $0xff,%bh
imul   $0x41000000,(%eax),%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4c,0x2400e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,(%eax,%esi,1)
add    %al,(%eax)
fadds  0x84ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,(%eax)
xor    %al,(%eax)
add    %bh,(%ecx,%eax,4)
(bad)
(bad)
mov    $0x0,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
inc    %eax
jnp    19a46 <basesyntax+0x3946>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xorb   $0x0,(%eax)
add    %dh,0x65dffff(%ecx,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa8,0x3700e4e
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
(bad)
xor    %al,(%eax)
add    %dl,%ah
xchg   %edi,%edi
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
add    %dh,(%ecx)
add    %al,(%eax)
in     $0x91,%al
(bad)
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
sbb    $0x31,%al
add    %al,(%eax)
pop    %eax
mov    %bh,%bh
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jno    19b2f <basesyntax+0x3a2f>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4c,%al
add    %al,(%eax)
add    %ah,0x31(%eax)
add    %al,(%eax)
je     19ad6 <basesyntax+0x39d6>
(bad)
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%esi
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x31,%al
add    %al,(%eax)
les    0x3fffff(%eax),%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x7ff1b1fe(%ebx)
add    %esp,0xa(%ebx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   $0xdc000000
xor    %eax,(%eax)
add    %bl,%al
mov    %bh,%bh
incl   0x6(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1f00e46
test   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx,%ecx,1),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,0x32(%eax)
add    %al,(%eax)
cld
mov    %edi,%?
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6f,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %al,-0x70b00000(%edx,%esi,1)
(bad)
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
je     19cb4 <basesyntax+0x3bb4>
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,%ah
xor    (%eax),%al
add    %bl,(%eax)
nop
(bad)
(bad)
call   19cd1 <basesyntax+0x3bd1>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd1,0x2700e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bl,(%eax)
xor    (%eax),%eax
add    %cl,%ah
nop
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8e,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,0x0(%ebx,%esi,1)
add    %al,-0x6f(%eax)
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
xor    (%eax),%eax
add    %dl,%al
xchg   %eax,%ecx
(bad)
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe4,0x2500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,%al
xor    (%eax),%eax
add    %dl,0x6cffff(%edx,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    0xe(%edx,%ecx,1),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cld
xor    (%eax),%eax
add    %bl,%al
xchg   %eax,%edx
(bad)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xa5b0202(%esi)
(bad)
push   %cs
add    $0x44,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
xor    $0x0,%al
add    %ah,(%ebx,%edx,4)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x180e4304(%esi)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
xor    $0x0,%al
add    %dh,(%eax)
xchg   %eax,%ebx
(bad)
(bad)
cld
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdb,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,-0x6b100000(%esp,%esi,1)
(bad)
ljmp   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
xor    $0x0,%al
add    %cl,%al
xchg   %eax,%ebp
(bad)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
push   %eax
add    0xe(%ecx),%bl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %dh,0x960c0000
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,(%eax)
xor    $0x96240000,%eax
(bad)
push   %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1b,0x3400e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
js     19f61 <basesyntax+0x3e61>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
mov    %dh,0x97cc0000
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
bound  %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,-0x68280000(%ebp,%esi,1)
(bad)
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edi),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dh,%al
xor    $0x98240000,%eax
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%eax),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
inc    %esp
add    %al,%ss:(%eax)
inc    %eax
cwtl
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
add    %al,%ss:(%eax)
pushf
cwtl
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jae    1a0a5 <basesyntax+0x3fa5>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %bh,-0x43ffffca(%eax)
cwtl
(bad)
incl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xc,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebp),%ebx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,(%edi,%esi,1)
add    %al,(%eax)
mov    $0xaeffff99,%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fs
aaa
add    %al,(%eax)
adc    %bl,0x58ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,0x44000037(%eax)
fwait
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
aaa
add    %al,(%eax)
push   %eax
fwait
(bad)
decl   0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x2ff1aefc(%ebx)
add    %eax,(%edx)
(bad)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
fdivl  (%edi)
add    %al,(%eax)
push   $0x7effff9c
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    0xe(%ebp),%ch
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,%ah
pushf
(bad)
jmp    *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
je     1a227 <basesyntax+0x4127>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%edx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
cmp    %al,(%eax)
add    %cl,0x35ffff9d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0xec36d04(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,-0x63ffffc8(%eax)
popf
(bad)
(bad)
mov    $0x1,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x64,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
enter  $0x38,$0x0
sbb    $0x9f,%al
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x52,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %al,(%ecx,%edi,1)
add    %al,(%eax)
inc    %eax
lahf
(bad)
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,0x39(%eax)
add    %al,(%eax)
test   %bl,0x35ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx,%edi,1)
add    %bl,0x61ffff9f(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,-0x33ffffc7(%eax)
lahf
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,-0x60380000(%ecx,%edi,1)
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %dh,(%eax)
shrb   (%edi)
add    %al,(%eax)
or     %ecx,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %dl,(%edi)
dec    %esi
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
data16
add    %al,(%eax)
add    %ah,(%esi,%ecx,2)
add    %eax,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %ah,0x0(%eax,%eax,1)
add    %dh,(%ecx)
dec    %esi
add    %eax,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %dh,0x0(%ebx)
add    %al,(%eax)
aas
dec    %esi
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
push   %edi
dec    %esi
add    %eax,(%eax)
add    $0x0,%eax
add    $0x0,%al
add    %ch,0x0(%ebp)
add    %al,(%eax)
push   %eax
dec    %esi
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %ch,0x0(%eax,%eax,1)
add    %ah,0x4e(%esi)
add    %eax,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
dec    %esi
add    %eax,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
jbe    1b740 <basesyntax+0x5640>
add    %eax,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %dh,0x0(%esi)
add    %al,(%eax)
xchg   %cl,0x1(%esi)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
adc    $0x50,%al
add    %eax,(%eax)
sbb    $0x50,%al
add    %eax,(%eax)
and    0x1(%eax),%edx
add    %ch,0x39000150
push   %eax
add    %eax,(%eax)
inc    %ecx
push   %eax
add    %eax,(%eax)
dec    %eax
push   %eax
add    %eax,(%eax)
dec    %esi
push   %eax
add    %eax,(%eax)
push   %ebp
push   %eax
add    %eax,(%eax)
pop    %ebp
push   %eax
add    %eax,(%eax)
pusha
push   %eax
add    %eax,(%eax)
push   %ax
add    %eax,(%eax)
jo     1b7a2 <basesyntax+0x56a2>
add    %eax,(%eax)
jp     1b7a6 <basesyntax+0x56a6>
add    %eax,(%eax)
adcl   $0x1508900,0x1(%eax)
add    %cl,0x150(%edi)
add    %al,(%eax)
add    %cl,-0x6ffffeb6(%ebp)
push   %ecx
add    %eax,(%eax)
xchg   %eax,%ebp
push   %ecx
add    %eax,(%eax)
pop    %ebp
dec    %edx
add    %eax,(%eax)
cwtl
push   %ecx
add    %eax,(%eax)
popf
push   %ecx
add    %eax,(%eax)
jae    1b7e4 <basesyntax+0x56e4>
add    %eax,(%eax)
pop    %eax
dec    %edx
add    %eax,(%eax)
daa
dec    %eax
add    %eax,(%eax)
lcall  $0x150,$0x4b000151
add    %ah,-0x58fffeaf(%edx)
push   %ecx
add    %eax,(%eax)
lods   %ds:(%esi),%eax
push   %ecx
add    %eax,(%eax)
pop    %ss
dec    %edx
add    %eax,(%eax)
imul   $0x0,0x1(%edx),%ecx
mov    $0x51,%bl
add    %eax,(%eax)
mov    $0xc7000151,%edi
push   %ecx
add    %eax,(%eax)
lret
push   %ecx
add    %eax,(%eax)
iret
push   %ecx
add    %eax,(%eax)
aam    $0x51
add    %eax,(%eax)
fsts   0x1(%ecx)
add    %bl,%ch
push   %ecx
add    %eax,(%eax)
loope  1b833 <basesyntax+0x5733>
add    %eax,(%eax)
in     $0x51,%eax
add    %eax,(%eax)
ljmp   $0x151,$0xee000151
add    %dl,(%ecx)
dec    %eax
add    %eax,(%eax)
cli
push   %ecx
add    %eax,(%eax)
(bad)
push   %ecx
add    %eax,(%eax)
add    $0xa000152,%eax
push   %edx
add    %eax,(%eax)
adc    %edx,0x1(%edx)
add    %bl,(%eax)
push   %edx
add    %eax,(%eax)
pop    %ds
push   %edx
add    %eax,(%eax)
es
push   %edx
add    %eax,(%eax)
sub    0x1(%edx),%edx
add    %dh,(%ecx)
push   %edx
add    %eax,(%eax)
ss
push   %edx
add    %eax,(%eax)
cmp    0x1(%edx),%edx
add    %al,0x52(%edx)
add    %eax,(%eax)
dec    %edx
push   %edx
add    %eax,(%eax)
push   %edx
push   %edx
add    %eax,(%eax)
push   %esi
push   %edx
add    %eax,(%eax)
fs
push   %esi
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
scas   %es:(%edi),%al
push   %esi
add    %eax,(%eax)
add    (%eax),%al
add    %al,(%eax)
mov    $0x56,%cl
add    %eax,(%eax)
add    (%eax),%eax
add    %al,(%eax)
mov    $0x56,%ah
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
mov    $0x56,%bh
add    %eax,(%eax)
add    $0xba000000,%eax
push   %esi
add    %eax,(%eax)
push   %es
add    %al,(%eax)
add    %bh,0x7000156(%ebp)
add    %al,(%eax)
add    %al,%al
push   %esi
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
ret
push   %esi
add    %eax,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
(bad)
push   %esi
add    %eax,(%eax)
push   %cs
add    %al,(%eax)
add    %cl,%cl
push   %esi
add    %eax,(%eax)
sldt   (%eax)
add    %cl,%ah
push   %esi
add    %eax,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
iret
push   %esi
add    %eax,(%eax)
or     $0x0,%al
add    %al,(%eax)
rclb   %cl,0x1(%esi)
add    %cl,0xd5000000
push   %esi
add    %eax,(%eax)
push   %ss
add    %al,(%eax)
add    %bl,%al
push   %esi
add    %eax,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,%bl
push   %esi
add    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
ficom  0x1(%esi)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
loope  1b928 <basesyntax+0x5828>
add    %eax,(%eax)
adc    $0xe4000000,%eax
push   %esi
add    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
out    %eax,$0x56
add    %eax,(%eax)
or     (%eax),%al
add    %al,(%eax)
jmp    1b940 <basesyntax+0x5840>
add    %eax,(%eax)
sbb    %al,(%eax)
add    %eax,(%eax)
ljmp   $0x100,$0x19000156
add    %al,0x1a00014a(%ecx)
add    %al,(%ecx)
add    %al,0x1b00014a(%edi)
add    %al,(%ecx)
add    %ch,%ch
push   %esi
add    %eax,(%eax)
sbb    $0x0,%al
add    %eax,(%eax)
icebp
push   %esi
add    %eax,(%eax)
sbb    $0xf5000100,%eax
push   %esi
add    %eax,(%eax)
push   %ds
add    %al,(%ecx)
add    %bh,%cl
push   %esi
add    %eax,(%eax)
pop    %ds
add    %al,(%ecx)
add    %bh,%ch
push   %esi
add    %eax,(%eax)
and    %al,(%eax)
add    %eax,(%eax)
add    %edx,0x1(%edi)
add    %ah,(%ecx)
add    %al,(%ecx)
add    %al,0x11000157
add    %al,(%ecx)
add    %cl,(%ecx)
push   %edi
add    %eax,(%eax)
adc    (%eax),%al
add    %eax,(%eax)
or     $0x13000157,%eax
add    %al,(%ecx)
add    %cl,0x2200014a(%ebp)
add    %al,(%edx)
add    %dl,(%ecx)
push   %edi
add    %eax,(%eax)
and    (%eax),%eax
add    (%eax),%eax
cmp    $0x4f,%al
add    %eax,(%eax)
and    $0x0,%al
add    (%eax),%eax
or     $0x2500014a,%eax
add    %al,(%eax,%eax,1)
adc    %cl,0x1(%edx)
add    %ah,(%esi)
add    %al,(%eax,%eax,1)
aam    $0x5a
add    %eax,(%eax)
fstps  0x1(%edx)
add    %bl,%ch
pop    %edx
add    %eax,(%eax)
loope  1b9e8 <signal_names+0x68>
add    %eax,(%eax)
stc
pop    %edx
add    %eax,(%eax)
out    %al,$0x5a
add    %eax,(%eax)
jmp    1b9f4 <signal_names+0x74>
add    %eax,(%eax)
lock pop %edx
add    %eax,(%eax)
hlt
pop    %edx
add    %eax,(%eax)
clc
pop    %edx
add    %eax,(%eax)
std
pop    %edx
add    %eax,(%eax)
add    0x1(%ebx),%bl
add    %al,(%edi)
pop    %ebx
add    %eax,(%eax)
or     $0x5b,%al
add    %eax,(%eax)
inc    %edi
pop    %ebx
add    %eax,(%eax)
adc    %ebx,0x1(%ebx)
add    %dl,(%esi)
pop    %ebx
add    %eax,(%eax)
sbb    %ebx,0x1(%ebx)
add    %bl,(%esi)
pop    %ebx
add    %eax,(%eax)
and    0x1(%ebx),%ebx
add    %ch,(%eax)
pop    %ebx
add    %eax,(%eax)
sub    $0x3200015b,%eax
pop    %ebx
add    %eax,(%eax)
aaa
pop    %ebx
add    %eax,(%eax)
cmp    0x1(%ebx),%ebx
add    %al,0x5b(%eax)
add    %eax,(%eax)
inc    %ebp
pop    %ebx
add    %eax,(%eax)
dec    %esp
pop    %ebx
add    %eax,(%eax)
push   %ecx
pop    %ebx
add    %eax,(%eax)
push   %edi
pop    %ebx
add    %eax,(%eax)
pop    %edx
pop    %ebx
add    %eax,(%eax)
pop    %esi
pop    %ebx
add    %eax,(%eax)
bound  %ebx,0x1(%ebx)
add    %ah,0x5b(%ebp)
add    %eax,(%eax)
push   $0x6e00015b
pop    %ebx
add    %eax,(%eax)
jbe    1ba6d <signal_names+0xed>
add    %eax,(%eax)
jle    1ba71 <signal_names+0xf1>
add    %eax,(%eax)
xchg   %bl,0x1(%ebx)
add    %cl,-0x69fffea5(%esi)
pop    %ebx
add    %eax,(%eax)
sahf
pop    %ebx
add    %eax,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
pop    %ebx
add    %eax,(%eax)
scas   %es:(%edi),%al
pop    %ebx
add    %eax,(%eax)
mov    $0x5b,%dh
add    %eax,(%eax)
mov    $0xc800015b,%edi
pop    %ebx
add    %eax,(%eax)
rcrl   0x1(%ebx)
add    %bl,%dl
pop    %ebx
add    %eax,(%eax)
jecxz  1baa1 <signal_names+0x121>
add    %eax,(%eax)
in     (%dx),%al
pop    %ebx
add    %eax,(%eax)
cmc
pop    %ebx
add    %eax,(%eax)
(bad)
pop    %ebx
add    %eax,(%eax)
pop    %es
pop    %esp
add    %eax,(%eax)
adc    %bl,0x0(%ecx,%eax,1)
sbb    %ebx,0x0(%ecx,%eax,1)
and    %ebx,0x0(%ecx,%eax,1)
sub    %ebx,0x0(%ecx,%eax,1)
xor    %ebx,0x0(%ecx,%eax,1)
cmp    %ebx,0x0(%ecx,%eax,1)
inc    %ecx
pop    %esp
add    %eax,(%eax)
dec    %ecx
pop    %esp
add    %eax,(%eax)
push   %ecx
pop    %esp
add    %eax,(%eax)
pop    %ecx
pop    %esp
add    %eax,(%eax)
popa
pop    %esp
add    %eax,(%eax)
lock dec %eax
add    %al,(%eax)
cmp    0x6c(%ecx),%ah
outsb  %ds:(%esi),(%dx)
jne    1bb13 <signal_names+0x193>
cmp    0x0(%ebp),%bl
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%edx)
arpl   %bp,0x74(%esi)
jb     1bb22 <signal_names+0x1a2>
cmp    0x0(%ebp),%bl
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1bb2a <signal_names+0x1aa>
jb     1bb01 <signal_names+0x181>
pop    %ebp
cmp    0x70(%ebx),%dh
popa
arpl   %sp,0x3a(%ebp)
pop    %ebp
cmp    0x6c(%ecx),%ah
jo     1bb4d <signal_names+0x1cd>
popa
cmp    0x0(%ebp),%bl
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%edx)
imul   $0x5d3a74,%fs:0x69(%edi),%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%edx)
jo     1bb75 <builtincmd+0x15>
imul   $0x5d3a,0x74(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    0x70(%ebp),%dh
jo     1bb7a <builtincmd+0x1a>
jb     1bb51 <signal_names+0x1d1>
pop    %ebp
cmp    0x6c(%edx),%ah
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5d,(%edx),%edi
cmp    0x72(%edi),%ah
popa
jo     1bb9e <builtincmd+0x3e>
cmp    0x0(%ebp),%bl
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%edx)
jo     1bbb8 <builtincmd+0x58>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x5d(%edx,%edi,1)
cmp    0x64(%eax),%bh
imul   $0x5d3a74,0x69(%edi),%esp
add    %al,(%eax)
add    %al,(%eax)
jno    1bbac <builtincmd+0x4c>
add    %eax,(%eax)
pusha
mov    $0x30000,%edi
add    %al,(%eax)
lret
dec    %edx
add    %eax,(%eax)
xor    %ah,0x0(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
pop    %ecx
add    %eax,(%eax)
shrb   $0x1,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,-0x1ffffebd(%edx)
xor    (%eax),%eax
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ecx,%ebx,2)
add    %eax,(%eax)
adc    %bh,0x20000(%edx)
add    %al,(%eax)
pop    %es
pop    %ecx
add    %eax,(%eax)
push   %eax
pop    %edi
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
or     $0x60000159,%eax
inc    %edx
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
adc    %bl,0x1(%ecx)
add    %ah,0x42(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ss
pop    %ecx
add    %eax,(%eax)
add    %dh,0x0(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
pop    %ecx
add    %eax,(%eax)
push   %eax
pop    %edi
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
daa
pop    %ecx
add    %eax,(%eax)
andb   $0x1,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%ecx,%ebx,2)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ebx
push   %eax
add    %eax,(%eax)
inc    %eax
pusha
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
pop    %ss
push   %eax
add    %eax,(%eax)
pusha
rolb   $0x0,(%eax)
add    (%eax),%eax
add    %al,(%eax)
jae    1bc5a <builtincmd+0xfa>
add    %eax,(%eax)
pusha
cmp    %eax,(%ecx)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,(%ecx)
pop    %ecx
add    %eax,(%eax)
and    %ah,0x0(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
pop    %ecx
add    %eax,(%eax)
adc    %bh,0x20000(%edx)
add    %al,(%eax)
cmp    0x1(%ecx),%bl
add    %dl,(%eax)
faddl  (%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,0x59(%edx)
add    %eax,(%eax)
loopne 1bca8 <builtincmd+0x148>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
pop    %ecx
add    %eax,(%eax)
add    %dh,0x20000(%ebx)
add    %al,(%eax)
dec    %esp
pop    %ecx
add    %eax,(%eax)
xor    %dh,0x20000(%eax)
add    %al,(%eax)
push   %ecx
pop    %ecx
add    %eax,(%eax)
pusha
cmp    $0x1,%al
add    %al,(%edi)
add    %al,(%eax)
add    %dl,0x59(%edi)
add    %eax,(%eax)
and    %bl,(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x59(%esi)
add    %eax,(%eax)
inc    %eax
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
bound  %ebx,0x1(%ecx)
add    %al,-0x3a(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
addr16 pop %ecx
add    %eax,(%eax)
pusha
cmp    %eax,(%ecx)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,0x59(%eax)
add    %eax,(%eax)
rcrb   0x0(%edi)
add    %al,(%ebx)
add    %al,(%eax)
add    %ah,0x20000148(%edi)
fildl  (%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %dh,0x59(%edi)
add    %eax,(%eax)
and    %bl,%dl
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
jge    1bd17 <builtincmd+0x1b7>
add    %eax,(%eax)
shrb   $0x1,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x1ffffea7(%edx)
sub    $0x1,%al
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,0x50000159(%eax)
adc    (%ecx),%al
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,0x30000159(%ebp)
pusha
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
pop    %ecx
add    %eax,(%eax)
mov    0x71,%al
add    %al,(%eax)
add    %dl,0x30000159(%edi)
into
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sahf
pop    %ecx
add    %eax,(%eax)
mov    $0xc9,%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
test   $0x43,%al
add    %eax,(%eax)
(bad)
xor    (%eax),%al
add    %al,(%edx)
add    %al,(%eax)
add    %al,-0x7ffffeb0(%ebx)
aaa
add    %eax,(%eax)
add    (%eax),%eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %ecx
add    %eax,(%eax)
nop
mov    $0x0,%bl
add    %al,(%edx)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
mov    %fs,(%esi)
add    %al,(%eax)
or     $0x84000000,%eax
inc    %ebx
add    %eax,(%eax)
sbb    %eax,(%eax)
add    %al,(%eax)
push   %esp
mov    $0x1,%dh
add    %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
pop    %eax
mov    $0x1,%dh
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0xa4000000
adc    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dh,0x0(%esp,%eax,1)
add    %cl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
pop    %es
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ch,(%esi,%edi,4)
add    %eax,(%eax)
add    (%eax),%al
add    %al,(%eax)
or     %al,(%ebx)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,0x110000(%ebx,%eiz,1)
add    %al,(%eax)
or     $0x1a,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     1bdd3 <builtincmd+0x273>
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sti
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x6c(%edi)
sbb    %eax,(%eax)
add    %bh,%bh
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x1c(%edi)
pop    %ss
add    %al,(%eax)
cli
(bad)
ljmp   *0x11(%edi)
add    %eax,(%eax)
xor    $0xbd,%al
add    %eax,(%eax)
(bad)
add    %al,%es:(%eax)
(bad)
add    %al,%es:(%eax)
out    %al,$0x26
add    %al,(%eax)
mulb   (%esi)
add    %al,(%eax)
push   %es
daa
add    %al,(%eax)
push   %ss
daa
add    %al,(%eax)
es
daa
add    %al,(%eax)
ss
daa
add    %al,(%eax)
inc    %esi
daa
add    %al,(%eax)
push   %esi
daa
add    %al,(%eax)
data16
daa
add    %al,(%eax)
jbe    1be8d <builtincmd+0x32d>
add    %al,(%eax)
xchg   %ah,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
daa
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
daa
add    %al,(%eax)
mov    $0x27,%dh
add    %al,(%eax)
(bad)
daa
add    %al,(%eax)
(bad)
daa
add    %al,(%eax)
out    %al,$0x27
add    %al,(%eax)
mulb   (%edi)
add    %al,(%eax)
push   %es
sub    %al,(%eax)
add    %dl,(%esi)
sub    %al,(%eax)
add    %ah,(%esi)
sub    %al,(%eax)
add    %dh,(%esi)
sub    %al,(%eax)
add    %al,0x28(%esi)
add    %al,(%eax)
push   %esi
sub    %al,(%eax)
add    %ah,0x28(%esi)
add    %al,(%eax)
jbe    1bece <builtincmd+0x36e>
add    %al,(%eax)
xchg   %ch,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
sub    %al,(%eax)
add    %ah,-0x49ffffd8(%esi)
sub    %al,(%eax)
add    %al,%dh
sub    %al,(%eax)
add    %dl,%dh
sub    %al,(%eax)
add    %ah,%dh
sub    %al,(%eax)
add    %dh,%dh
sub    %al,(%eax)
add    %al,(%esi)
sub    %eax,(%eax)
add    %dl,(%esi)
sub    %eax,(%eax)
add    %ah,(%esi)
sub    %eax,(%eax)
add    %dh,(%esi)
sub    %eax,(%eax)
add    %al,0x29(%esi)
add    %al,(%eax)
push   %esi
sub    %eax,(%eax)
add    %ah,0x29(%esi)
add    %al,(%eax)
jbe    1bf0f <builtincmd+0x3af>
add    %al,(%eax)
xchg   %ch,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
sub    %eax,(%eax)
add    %ah,-0x49ffffd7(%esi)
sub    %eax,(%eax)
add    %al,%dh
sub    %eax,(%eax)
add    %dl,%dh
sub    %eax,(%eax)
add    %ah,%dh
sub    %eax,(%eax)
add    %dh,%dh
sub    %eax,(%eax)
add    %al,(%esi)
sub    (%eax),%al
add    %dl,(%esi)
sub    (%eax),%al
add    %ah,(%esi)
sub    (%eax),%al
add    %dh,(%esi)
sub    (%eax),%al
add    %al,0x2a(%esi)
add    %al,(%eax)
push   %esi
sub    (%eax),%al
add    %ah,0x2a(%esi)
add    %al,(%eax)
jbe    1bf50 <builtincmd+0x3f0>
add    %al,(%eax)
xchg   %ch,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
sub    (%eax),%al
add    %ah,-0x49ffffd6(%esi)
sub    (%eax),%al
add    %al,%dh
sub    (%eax),%al
add    %dl,%dh
sub    (%eax),%al
add    %ah,%dh
sub    (%eax),%al
add    %dh,%dh
sub    (%eax),%al
add    %al,(%esi)
sub    (%eax),%eax
add    %dl,(%esi)
sub    (%eax),%eax
add    %ah,(%esi)
sub    (%eax),%eax
add    %dh,(%esi)
sub    (%eax),%eax
add    %al,0x2b(%esi)
add    %al,(%eax)
push   %esi
sub    (%eax),%eax
add    %ah,0x2b(%esi)
add    %al,(%eax)
jbe    1bf91 <builtincmd+0x431>
add    %al,(%eax)
xchg   %ch,(%ebx)
add    %al,(%eax)
xchg   %eax,%esi
sub    (%eax),%eax
add    %ah,-0x49ffffd5(%esi)
sub    (%eax),%eax
add    %al,%dh
sub    (%eax),%eax
add    %dl,%dh
sub    (%eax),%eax
add    %ah,%dh
sub    (%eax),%eax
add    %dh,%dh
sub    (%eax),%eax
add    %al,(%esi)
sub    $0x0,%al
add    %dl,(%esi)
sub    $0x0,%al
add    %ah,(%esi)
sub    $0x0,%al
add    %dh,(%esi)
sub    $0x0,%al
add    %al,0x2c(%esi)
add    %al,(%eax)
push   %esi
sub    $0x0,%al
add    %ah,0x2c(%esi)
add    %al,(%eax)
jbe    1bfd2 <builtincmd+0x472>
add    %al,(%eax)
xchg   %ch,(%eax,%eax,1)
add    %dl,-0x59ffffd4(%esi)
sub    $0x0,%al
add    %dh,-0x39ffffd4(%esi)
sub    $0x0,%al
add    %bl,(%eax,%ebp,8)
add    %eax,(%eax)
loopne 1bfaf <builtincmd+0x44f>
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    0x15d,%al
add    %al,(%eax)
add    %dl,(%eax)
sub    $0x0,%eax
add    %al,(%eax)
fsub   %st,%st(7)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0xc0,%al
add    %eax,(%eax)
(bad)
(bad)
(bad)
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
(bad)
(bad)
clc
add    %eax,(%eax)
cld
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    0x50000158,%al
mov    $0x0,%ebp
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
pop    %eax
add    %eax,(%eax)
push   %eax
mov    $0x0,%ebp
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x6f,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %eax
add    %eax,(%eax)
or     $0x0,%al
add    %al,(%eax)
jae    1c132 <_edata+0x12>
add    %eax,(%eax)
or     $0x0,%al
add    %al,(%eax)
jp     1c142 <_edata+0x22>
add    %eax,(%eax)
or     $0x0,%al
add    %al,(%eax)
sbbl   $0xdbd000,0x1(%eax)
add    %dl,0x50(%eax)
dec    %ecx
inc    %esp
cmp    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
