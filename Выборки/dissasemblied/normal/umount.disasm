das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,-0x58fa7f9(%eax)
bound  %esp,-0x47a89bd9(%ecx)
pop    %ss
test   %dh,0x2(%edi)
sub    (%edx),%bl
rorl   (%ecx)
leave
add    (%eax),%eax
add    %al,(%eax)
xchg   %eax,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%al
and    %ecx,0x1080438(%edi,%ecx,1)
mov    %al,0x8700(%eax,%eax,1)
add    %cl,0x910000(%eax,%eax,1)
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0x287c92e3,%edx
sbb    $0x89c41c8c,%eax
add    $0xa3dda790,%eax
imul   $0xffffffb9,%esp,%eax
pushf
inc    %eax
cmp    %dh,%dl
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  80481b8 <_init-0x16b8>
fdivs  0x58(%ecx)
sbb    $0xb9,%al
(bad)
icebp
push   %cs
out    %al,(%dx)
and    %esp,0xf(%ebx)
ljmp   $0xf7c4,$0x320eefd3
.byte 0x12
mov    $0xa2,%bl
notl   (%edx)
mov    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    8048277 <_init-0x15f9>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jl     80482d3 <_init-0x159d>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     8048385 <_init-0x14eb>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret   $0x1
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x4
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incl   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     8048557 <_init-0x1319>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
faddl  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x3,$0x0
adc    (%eax),%al
add    %al,(%eax)
sbb    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    80485b4 <_init-0x12bc>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ecx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,%bl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jne    8048685 <_init-0x11eb>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
flds   (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stc
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %esi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
gs
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jge    80488a4 <_init-0xfcc>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ecx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   %cl,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loopne 8048996 <_init-0xeda>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     80489a7 <_init-0xec9>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cs
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
add    $0x93100000,%eax
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%eax)
add    %cl,(%edi)
push   %es
add    %al,(%eax)
jo     8048a3a <_init-0xe36>
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,%al
add    (%eax),%eax
add    %ah,-0x6d(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,%dl
add    $0x93200000,%eax
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bl,%bl
add    $0x93200000,%eax
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bl,%cl
add    $0x93200000,%eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x4(%esi)
add    %al,(%eax)
and    $0x93,%al
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,0x2(%ecx)
add    %al,(%eax)
fs
inc    %eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %al,(%ebx)
push   %es
add    %al,(%eax)
adc    %dl,0x805(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
lock add $0x98700000,%eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
lds    0xff800000,%eax
add    $0x8,%al
push   %ecx
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x5f600
add    %bh,(%eax,%eax,2)
add    $0x8,%eax
add    %dl,(%edx)
add    %cl,(%esi)
add    %bh,0x40000002(%edi)
xchg   %eax,%ebx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x4(%edi)
add    %al,(%eax)
fs
xchg   %eax,%ebx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
jae,pn 8048bdb <_init-0xc95>
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048bdd <_init-0xc93>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048c08 <_init-0xc68>
popa
jb     8048c0b <_init-0xc65>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048bfd <_init-0xc73>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048c1e <_init-0xc52>
gs
jae    8048bae <_init-0xcc2>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048c1a <_init-0xc56>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8048c42 <_init-0xc2e>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
jbe    8048c3e <_init-0xc32>
insb   (%dx),%es:(%edi)
jne    8048c45 <_init-0xc2b>
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     8048c5e <_init-0xc12>
je     8048c4a <_init-0xc26>
arpl   %sp,0x63(%ecx)
push   $0x6c620065
imul   $0x5f,0x64(%ecx),%ebp
outsb  %ds:(%esi),(%dx)
gs
ja     8048c5a <_init-0xc16>
jo     8048c6f <_init-0xc01>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8048c7b <_init-0xbf5>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8048c8b <_init-0xbe5>
jo     8048c7d <_init-0xbf3>
jb     8048c7c <_init-0xbf4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
add    %ah,0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
outsl  %fs:(%esi),(%dx)
pop    %edi
jae    8048c8c <_init-0xbe4>
data16
gs
jo     8048ca1 <_init-0xbcf>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
gs
jbe    8048c9d <_init-0xbd3>
insb   (%dx),%es:(%edi)
jne    8048ca0 <_init-0xbd0>
je     8048ca6 <_init-0xbca>
pop    %edi
je     8048ca5 <_init-0xbcb>
add    %ah,0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jae    8048cc9 <_init-0xba7>
jns    8048cc7 <_init-0xba9>
add    %ah,%gs:0x6c(%edx)
imul   $0x5f,0x64(%ecx),%ebp
jo     8048cc2 <_init-0xbae>
jb     8048cd6 <_init-0xb9a>
gs
pop    %edi
je     8048cc8 <_init-0xba8>
addr16 pop %edi
jae    8048cdf <_init-0xb91>
jb     8048cd6 <_init-0xb9a>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6c(%bp,%si)
imul   $0x5f,0x64(%ecx),%ebp
jo     8048cea <_init-0xb86>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8048ce3 <_init-0xb8d>
je     8048cdf <_init-0xb91>
jae    8048cf7 <_init-0xb79>
jo     8048ce9 <_init-0xb87>
jb     8048ce8 <_init-0xb88>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x73(%ebx)
pop    %edi
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8048c92 <_init-0xbde>
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
gs
jbe    8048cfc <_init-0xb74>
insb   (%dx),%es:(%edi)
jne    8048cff <_init-0xb71>
je     8048d05 <_init-0xb6b>
pop    %edi
jae    8048d13 <_init-0xb5d>
arpl   %ax,%gs:(%eax)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
data16
jb     8048d14 <_init-0xb5c>
gs
pop    %edi
jo     8048d25 <_init-0xb4b>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
bound  %ebp,0x69(%ebx,%ebp,2)
fs
pop    %edi
jo     8048d31 <_init-0xb3f>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
jae    8048d2a <_init-0xb46>
je     8048d26 <_init-0xb4a>
fs
gs
jbe    8048d34 <_init-0xb3c>
arpl   %sp,0x0(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x746e756f,0x6d(%edx),%esp
jae,pn 8048d48 <_init-0xb28>
xor    %eax,%cs:(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048d3f <_init-0xb31>
outsb  %ds:(%esi),(%dx)
gs
ja     8048d43 <_init-0xb2d>
jne    8048d56 <_init-0xb1a>
fs
popa
je     8048d4f <_init-0xb21>
add    %ch,0x6e(%ebp)
je     8048d4e <_init-0xb22>
data16
jb     8048d57 <_init-0xb19>
gs
pop    %edi
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
je     8048d60 <_init-0xb10>
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
gs
js     8048d7b <_init-0xaf5>
pop    %edi
data16
jae    8048d0b <_init-0xb65>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048d6e <_init-0xb02>
data16
jb     8048d77 <_init-0xaf9>
gs
pop    %edi
je     8048d77 <_init-0xaf9>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048d7d <_init-0xaf3>
data16
jb     8048d86 <_init-0xaea>
gs
pop    %edi
jne    8048d95 <_init-0xadb>
fs
popa
je     8048d8e <_init-0xae2>
add    %ch,0x6e(%ebp)
je     8048d8d <_init-0xae3>
outsb  %ds:(%esi),(%dx)
gs
ja     8048d91 <_init-0xadf>
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     8048d9e <_init-0xad2>
je     8048da2 <_init-0xace>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048da8 <_init-0xac8>
imul   $0x65645f74,0x69(%esi),%ebp
bound  %esi,0x67(%ebp)
add    %ch,0x6e(%ebp)
je     8048db7 <_init-0xab9>
jne    8048dca <_init-0xaa6>
fs
popa
je     8048dc3 <_init-0xaad>
pop    %edi
jae    8048dc6 <_init-0xaaa>
je     8048dc2 <_init-0xaae>
data16
jae    8048d66 <_init-0xb0a>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048dc9 <_init-0xaa7>
jne    8048ddc <_init-0xa94>
fs
popa
je     8048dd5 <_init-0xa9b>
pop    %edi
je     8048dd4 <_init-0xa9c>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048dda <_init-0xa96>
data16
jae    8048ddd <_init-0xa93>
je     8048def <_init-0xa81>
pop    %edi
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048dea <_init-0xa86>
outsb  %ds:(%esi),(%dx)
je     8048d88 <_init-0xae8>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048deb <_init-0xa85>
je     8048def <_init-0xa81>
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8048df5 <_init-0xa7b>
jb     8048e09 <_init-0xa67>
gs
pop    %edi
insl   (%dx),%es:(%edi)
je     8048dfc <_init-0xa74>
bound  %eax,(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048e00 <_init-0xa70>
data16
jae    8048e03 <_init-0xa6d>
addr16
gs
je     8048e07 <_init-0xa69>
data16
jae    8048e1f <_init-0xa51>
jns    8048e1d <_init-0xa53>
add    %ch,%gs:0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    8048e25 <_init-0xa4b>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048e33 <_init-0xa3d>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8048e41 <_init-0xa2f>
imul   $0x73756c66,0x66(%eax,%eax,1),%esp
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jb     8048e42 <_init-0xa2e>
ja     8048e50 <_init-0xa20>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8048e66 <_init-0xa0a>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048e65 <_init-0xa0b>
arpl   %si,0x0(%esi)
jae    8048e6a <_init-0xa06>
je     8048e73 <_init-0x9fd>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     8048e84 <_init-0x9ec>
imul   $0x73006c61,0x6e(%edi),%esp
je     8048e8c <_init-0x9e4>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048e8c <_init-0x9e4>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048e9c <_init-0x9d4>
arpl   %bp,0x72(%eax)
add    %dh,0x61(%edi)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
fs
jne    8048eab <_init-0x9c5>
add    %dh,0x65(%eax)
jb     8048eb2 <_init-0x9be>
outsl  %ds:(%esi),(%dx)
jb     8048e43 <_init-0xa2d>
arpl   %sp,%fs:0x65(%edi)
je     8048ebd <_init-0x9b3>
gs
js     8048ec0 <_init-0x9b0>
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jo     8048eb7 <_init-0x9b9>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x5f,%al
xor    (%eax),%al
addr16
gs
je     8048ecc <_init-0x9a4>
ja     8048ed3 <_init-0x99d>
imul   $0x65736f6c,0x63(%eax,%eax,1),%esp
imul   $0x6f6e616e,%fs:0x0(%edx),%esi
jae    8048edc <_init-0x994>
gs
gs
jo     8048e74 <_init-0x9fc>
jae    8048eea <_init-0x986>
jb     8048ee6 <_init-0x98a>
arpl   %si,0x79(%eax)
add    %ah,0x6f(%esi)
jb     8048eeb <_init-0x985>
add    %dh,0x69(%ebx)
addr16 jo 8048ef8 <_init-0x978>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    8048ef7 <_init-0x979>
add    %dh,0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     8048e98 <_init-0x9d8>
pop    %edi
pop    %edi
jae    8048f10 <_init-0x960>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x72,(%eax),%eax
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048f2e <_init-0x942>
jb     8048f30 <_init-0x940>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     8048f34 <_init-0x93c>
imul   $0x6f747274,0x73(%eax,%eax,1),%esp
imul   $0x73,(%eax),%eax
je     8048f43 <_init-0x92d>
je     8048f42 <_init-0x92e>
insb   (%dx),%es:(%edi)
add    %ah,0x65(%esi)
outsl  %ds:(%esi),(%dx)
data16
add    %ah,0x67(%esi)
gs
je     8048f52 <_init-0x91e>
add    %dh,0x74(%ebx)
jb     8048f50 <_init-0x920>
outsb  %gs:(%esi),(%dx)
add    %dh,0x72(%eax)
arpl   %si,0x0(%esp,%ebp,2)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    8048f57 <_init-0x919>
je     8048ef4 <_init-0x97c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
arpl   %bp,%gs:0x6e(%edi)
jbe    8048eff <_init-0x971>
jae    8048f75 <_init-0x8fb>
jb     8048f76 <_init-0x8fa>
je     8048f77 <_init-0x8f9>
add    %bl,0x5f(%edi)
gs
jb     8048f7d <_init-0x8f3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65736600,0x6e(%edi),%ebp
imul   $0x63,%gs:(%eax),%eax
push   $0x726964
jb     8048f8a <_init-0x8e6>
popa
add    %bl,%fs:0x5f(%edi)
data16
js     8048fa0 <_init-0x8d0>
je     8048f90 <_init-0x8e0>
je     8048f67 <_init-0x909>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048faa <_init-0x8c6>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
arpl   %bp,0x6f(%eax)
ja     8048fb5 <_init-0x8bb>
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    8048fc2 <_init-0x8ae>
add    %ah,0x70(%esi)
jne    8048fc7 <_init-0x8a9>
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048fc7 <_init-0x8a9>
add    %dh,0x74(%ebx)
jb     8048fdb <_init-0x895>
outsl  %ds:(%esi),(%dx)
jne    8048fd6 <_init-0x89a>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048fe6 <_init-0x88a>
popa
jae    8048fec <_init-0x884>
add    %dh,0x74(%ebx)
jb     8048fe1 <_init-0x88f>
popa
je     8048f81 <_init-0x8ef>
jne    8048ff0 <_init-0x880>
popa
jae    8048ff1 <_init-0x87f>
add    %ah,0x65(%edi)
je     8048ff2 <_init-0x87e>
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esp
je     8048ff6 <_init-0x87a>
je     8048fcd <_init-0x8a3>
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     8049001 <_init-0x86f>
outsb  %ds:(%esi),(%dx)
imul   $0x73785f5f,%fs:0x0(%edx),%esi
je     8049008 <_init-0x868>
je     8048fdf <_init-0x891>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8049022 <_init-0x84e>
outsb  %ds:(%esi),(%dx)
jbe    8048fc0 <_init-0x8b0>
jae    8049035 <_init-0x83b>
arpl   %sp,0x6e(%ecx)
data16
add    %ch,0x70(%edi)
je     804902c <_init-0x844>
jb     8049034 <_init-0x83c>
add    %dh,0x74(%ebx)
fs
gs
jb     8049046 <_init-0x82a>
add    %dh,0x69(%ebx)
addr16
fs
gs
insb   (%dx),%es:(%edi)
jae    8049042 <_init-0x82e>
je     8048fdf <_init-0x891>
imul   $0x61006c74,0x63(%edi),%ebp
insb   (%dx),%es:(%edi)
popa
jb     8049057 <_init-0x819>
add    %bl,0x5f(%edi)
jae    804905d <_init-0x813>
jo     8049063 <_init-0x80d>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     8049073 <_init-0x7fd>
imul   $0x6c646165,0x72(%eax,%eax,1),%esp
imul   $0x74656700,0x6b(%esi),%ebp
imul   $0x6f746567,%gs:0x0(%si),%esp
6f
jo     804908c <_init-0x7e4>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     804908c <_init-0x7e4>
ja     804908f <_init-0x7e1>
add    %ah,0x65(%edi)
je     80490a4 <_init-0x7cc>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    8049039 <_init-0x837>
jb     80490a0 <_init-0x7d0>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     80490b3 <_init-0x7bd>
jne    80490b9 <_init-0x7b7>
add    %bl,%fs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x69(%ebx)
imul   $0x65626d65,0x6d(%bp,%di),%esi
jb     804906b <_init-0x805>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80490e7 <_init-0x789>
je     804907b <_init-0x7f5>
insb   (%dx),%es:(%edi)
jae    80490e3 <_init-0x78d>
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     80490ea <_init-0x786>
push   $0x5f5f0072
jbe    80490f4 <_init-0x77c>
jo     8049102 <_init-0x76e>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     804911c <_init-0x754>
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    804911c <_init-0x754>
je     80490e2 <_init-0x78e>
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     8049122 <_init-0x74e>
add    %bl,0x5f(%edi)
jae    804912b <_init-0x745>
jb     8049126 <_init-0x74a>
outsb  %ds:(%esi),(%dx)
je     8049126 <_init-0x74a>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x72(%ebp)
jb     8049141 <_init-0x72f>
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%esi)
jo     8049139 <_init-0x737>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     8049143 <_init-0x72d>
js     8049154 <_init-0x71c>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x67746573,0x0(%esi),%ebp
imul   $0x6d637274,0x73(%eax,%eax,1),%esp
jo     80490f5 <_init-0x77b>
pop    %edi
pop    %edi
jae    804916d <_init-0x703>
jb     804916f <_init-0x701>
outsl  %ds:(%esi),(%dx)
jne    804916a <_init-0x706>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8049172 <_init-0x6fe>
jb     8049181 <_init-0x6ef>
outsl  %ds:(%esi),(%dx)
jb     8049112 <_init-0x75e>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8049192 <_init-0x6de>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804912b <_init-0x745>
jae    804919b <_init-0x6d5>
jo     80491a1 <_init-0x6cf>
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
outsb  %gs:(%esi),(%dx)
jbe    80491a8 <_init-0x6c8>
jb     80491b0 <_init-0x6c0>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     80491b1 <_init-0x6bf>
js     80491b7 <_init-0x6b9>
je     8049150 <_init-0x720>
pop    %edi
imul   $0x665f0074,0x69(%esi),%ebp
imul   $0x64655f00,0x69(%esi),%ebp
popa
je     80491c3 <_init-0x6ad>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    80491df <_init-0x691>
popa
jb     80491e2 <_init-0x68e>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edx
dec    %esp
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    (%eax),%dh
add    %al,0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edx)
dec    %ebx
dec    %ecx
inc    %esp
pop    %edi
xor    (%esi),%ch
xor    %esi,0x554f4d00
dec    %esi
push   %esp
pop    %edi
xor    (%esi),%ch
xor    %edi,(%ecx)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%al
add    $0x300,%eax
add    %al,(%eax,%eax,1)
add    (%eax),%eax
push   %es
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
pop    %es
add    %al,(%eax,%eax,1)
or     %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    $0x6000400,%eax
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
or     (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    $0xb000300,%eax
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
or     $0x3000300,%eax
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    (%eax),%eax
push   %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,0xb000500
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
or     (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
or     (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
push   %cs
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,(%eax)
fimull %gs:(%edi)
add    %al,(%eax)
or     %eax,(%eax)
adc    $0x6,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    0xda641,%al
add    %cl,(%eax)
add    %bl,(%esi)
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x41,%bh
cmpsb  %es:(%edi),%ds:(%esi)
or     $0x70000,%eax
sub    %eax,(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x41,%ch
cmpsb  %es:(%edi),%ds:(%esi)
or     $0x60000,%eax
xor    $0x6,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
outsb  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,%cl
jne    8049332 <_init-0x53e>
add    (%eax),%eax
add    %al,(%eax,%eax,1)
aas
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
or     %al,(%eax)
dec    %edi
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0xe0000,0xd(%ecx),%ebp
dec    %edx
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %ss
imul   $0xd0000,0xd(%ecx),%ebp
push   %esp
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    80493e9 <_init-0x487>
imul   $0xc0000,(%ecx),%ecx
pop    %esi
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0xb0000,%eax
push   $0x6
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x674,0xa0000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
jle    8049408 <_init-0x468>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
mov    %al,(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8049433 <_init-0x43d>
imul   $0x20000,(%ecx),%ecx
xchg   %eax,%edx
push   %es
add    %al,(%eax)
add    %al,(%eax)
cld
popl   0x450608
add    %ah,(%eax)
xchg   %eax,%ebx
add    $0x8c0508,%eax
add    %ah,(%ebx,%edx,4)
add    $0x8d0508,%eax
add    %al,-0x6d(%eax)
add    $0x930508,%eax
add    %ah,-0x6d(%eax)
add    $0x890508,%eax
add    %ah,0x5(%ebx,%edx,4)
.byte 0x8
.byte 0x5
xchg   %eax,%esp
or     $0x90,%al
add    $0x10708,%eax
add    %dl,(%eax)
nop
add    $0x20708,%eax
add    %dl,(%eax,%edx,4)
add    $0x30708,%eax
add    %bl,(%eax)
nop
add    $0x40708,%eax
add    %bl,(%eax,%edx,4)
add    $0x50708,%eax
add    %ah,(%eax)
nop
add    $0x60708,%eax
add    %ah,(%eax,%edx,4)
add    $0x70708,%eax
add    %ch,(%eax)
nop
add    $0x90708,%eax
add    %ch,(%eax,%edx,4)
add    $0xa0708,%eax
add    %dh,(%eax)
nop
add    $0xb0708,%eax
add    %dh,(%eax,%edx,4)
add    $0xc0708,%eax
add    %bh,(%eax)
nop
add    $0xd0708,%eax
add    %bh,(%eax,%edx,4)
add    $0xe0708,%eax
add    %al,-0x70(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%edx,4)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,-0x70(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%edx,4)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,-0x70(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%edx,4)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,-0x70(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%edx,4)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
nop
add    $0x170708,%eax
add    %ah,0x5(%eax,%edx,4)
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,-0x70(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%edx,4)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,-0x70(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%edx,4)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,-0x70(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%edx,4)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
adcb   $0x0,0x1f070805(%eax)
add    %al,0x20070805(%eax,%edx,4)
add    %al,(%eax)
mov    %dl,0x21070805(%eax)
add    %al,(%eax)
mov    %ss,0x22070805(%eax)
add    %al,(%eax)
nop
nop
add    $0x230708,%eax
add    %dl,0x24070805(%eax,%edx,4)
add    %al,(%eax)
cwtl
nop
add    $0x250708,%eax
add    %bl,0x26070805(%eax,%edx,4)
add    %al,(%eax)
mov    0x7080590,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
nop
add    $0x280708,%eax
add    %ch,0x7080590(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070805(%eax,%edx,4)
add    %al,(%eax)
mov    $0x90,%al
add    $0x2b0708,%eax
add    %dh,0x2c070805(%eax,%edx,4)
add    %al,(%eax)
mov    $0x7080590,%eax
sub    $0x90bc0000,%eax
add    $0x2e0708,%eax
add    %al,%al
nop
add    $0x2f0708,%eax
add    %al,%ah
nop
add    $0x300708,%eax
add    %cl,%al
nop
add    $0x310708,%eax
add    %cl,%ah
nop
add    $0x320708,%eax
add    %dl,%al
nop
add    $0x330708,%eax
add    %dl,%ah
nop
add    $0x340708,%eax
add    %bl,%al
nop
add    $0x350708,%eax
add    %bl,%ah
nop
add    $0x360708,%eax
add    %ah,%al
nop
add    $0x370708,%eax
add    %ah,%ah
nop
add    $0x380708,%eax
add    %ch,%al
nop
add    $0x390708,%eax
add    %ch,%ah
nop
add    $0x3a0708,%eax
add    %dh,%al
nop
add    $0x3b0708,%eax
add    %dh,%ah
nop
add    $0x3c0708,%eax
add    %bh,%al
nop
add    $0x3d0708,%eax
add    %bh,%ah
nop
add    $0x3e0708,%eax
add    %al,(%eax)
xchg   %eax,%ecx
add    $0x3f0708,%eax
add    %al,(%ecx,%edx,4)
add    $0x400708,%eax
add    %cl,(%eax)
xchg   %eax,%ecx
add    $0x410708,%eax
add    %cl,(%ecx,%edx,4)
add    $0x420708,%eax
add    %dl,(%eax)
xchg   %eax,%ecx
add    $0x430708,%eax
add    %dl,(%ecx,%edx,4)
add    $0x440708,%eax
add    %bl,(%eax)
xchg   %eax,%ecx
add    $0x450708,%eax
add    %bl,(%ecx,%edx,4)
add    $0x460708,%eax
add    %ah,(%eax)
xchg   %eax,%ecx
add    $0x470708,%eax
add    %ah,(%ecx,%edx,4)
add    $0x480708,%eax
add    %ch,(%eax)
xchg   %eax,%ecx
add    $0x490708,%eax
add    %ch,(%ecx,%edx,4)
add    $0x4a0708,%eax
add    %dh,(%eax)
xchg   %eax,%ecx
add    $0x4b0708,%eax
add    %dh,(%ecx,%edx,4)
add    $0x4c0708,%eax
add    %bh,(%eax)
xchg   %eax,%ecx
add    $0x4d0708,%eax
add    %bh,(%ecx,%edx,4)
add    $0x4e0708,%eax
add    %al,-0x6f(%eax)
add    $0x4f0708,%eax
add    %al,0x5(%ecx,%edx,4)
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %eax
xchg   %eax,%ecx
add    $0x510708,%eax
add    %cl,0x5(%ecx,%edx,4)
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %eax
xchg   %eax,%ecx
add    $0x530708,%eax
add    %dl,0x5(%ecx,%edx,4)
or     %al,(%edi)
push   %esp
add    %al,(%eax)
pop    %eax
xchg   %eax,%ecx
add    $0x550708,%eax
add    %bl,0x5(%ecx,%edx,4)
or     %al,(%edi)
push   %esi
add    %al,(%eax)
pusha
xchg   %eax,%ecx
add    $0x570708,%eax
add    %ah,0x5(%ecx,%edx,4)
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
push   $0x7080591
pop    %ecx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%ecx
add    $0x5a0708,%eax
add    %dh,-0x6f(%eax)
add    $0x5b0708,%eax
add    %dh,0x5(%ecx,%edx,4)
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
js     80496c3 <_init-0x1ad>
add    $0x5d0708,%eax
add    %bh,0x5(%ecx,%edx,4)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
adcb   $0x0,0x5f070805(%ecx)
add    %al,0x60070805(%ecx,%edx,4)
add    %al,(%eax)
mov    %dl,0x61070805(%ecx)
add    %al,(%eax)
mov    %ss,0x62070805(%ecx)
add    %al,(%eax)
nop
xchg   %eax,%ecx
add    $0x630708,%eax
add    %dl,0x64070805(%ecx,%edx,4)
add    %al,(%eax)
cwtl
xchg   %eax,%ecx
add    $0x650708,%eax
add    %bl,0x66070805(%ecx,%edx,4)
add    %al,(%eax)
mov    0x7080591,%al
add    %al,(%bx,%si)
movsb  %ds:(%esi),%es:(%edi)
xchg   %eax,%ecx
add    $0x680708,%eax
add    %ch,0x7080591(%eax)
imul   $0x591ac00,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %dh,0x7080591(%eax)
imul   $0x0,(%eax),%eax
mov    $0x91,%ah
add    $0x6c0708,%eax
add    %bh,0x7080591(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x7080591,%esp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
rclb   $0x0,0x6f070805(%ecx)
add    %al,%ah
xchg   %eax,%ecx
add    $0x710708,%eax
add    %cl,%al
xchg   %eax,%ecx
add    $0x720708,%eax
add    %cl,%ah
xchg   %eax,%ecx
add    $0x730708,%eax
add    %dl,%al
xchg   %eax,%ecx
add    $0x740708,%eax
add    %dl,%ah
xchg   %eax,%ecx
add    $0x750708,%eax
add    %bl,%al
xchg   %eax,%ecx
add    $0x760708,%eax
add    %bl,%ah
xchg   %eax,%ecx
add    $0x770708,%eax
add    %ah,%al
xchg   %eax,%ecx
add    $0x780708,%eax
add    %ah,%ah
xchg   %eax,%ecx
add    $0x790708,%eax
add    %ch,%al
xchg   %eax,%ecx
add    $0x7b0708,%eax
add    %ch,%ah
xchg   %eax,%ecx
add    $0x7c0708,%eax
add    %dh,%al
xchg   %eax,%ecx
add    $0x7d0708,%eax
add    %dh,%ah
xchg   %eax,%ecx
add    $0x7e0708,%eax
add    %bh,%al
xchg   %eax,%ecx
add    $0x7f0708,%eax
add    %bh,%ah
xchg   %eax,%ecx
add    $0x800708,%eax
add    %al,(%eax)
xchg   %eax,%edx
add    $0x810708,%eax
add    %al,(%edx,%edx,4)
add    $0x820708,%eax
add    %cl,(%eax)
xchg   %eax,%edx
add    $0x830708,%eax
add    %cl,(%edx,%edx,4)
add    $0x840708,%eax
add    %dl,(%eax)
xchg   %eax,%edx
add    $0x850708,%eax
add    %dl,(%edx,%edx,4)
add    $0x860708,%eax
push   %ebx
sub    $0x8,%esp
call   804ad10 <fchmod@plt+0xc40>
add    $0xf787,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804988e <_init+0x1e>
call   8049ce0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8059004
jmp    *0x8059008
add    %al,(%eax)
jmp    *0x805900c
push   $0x0
jmp    80498a0 <_init+0x30>
jmp    *0x8059010
push   $0x8
jmp    80498a0 <_init+0x30>
jmp    *0x8059014
push   $0x10
jmp    80498a0 <_init+0x30>
jmp    *0x8059018
push   $0x18
jmp    80498a0 <_init+0x30>
jmp    *0x805901c
push   $0x20
jmp    80498a0 <_init+0x30>
jmp    *0x8059020
push   $0x28
jmp    80498a0 <_init+0x30>
jmp    *0x8059024
push   $0x30
jmp    80498a0 <_init+0x30>
jmp    *0x8059028
push   $0x38
jmp    80498a0 <_init+0x30>
jmp    *0x805902c
push   $0x40
jmp    80498a0 <_init+0x30>
jmp    *0x8059030
push   $0x48
jmp    80498a0 <_init+0x30>
jmp    *0x8059034
push   $0x50
jmp    80498a0 <_init+0x30>
jmp    *0x8059038
push   $0x58
jmp    80498a0 <_init+0x30>
jmp    *0x805903c
push   $0x60
jmp    80498a0 <_init+0x30>
jmp    *0x8059040
push   $0x68
jmp    80498a0 <_init+0x30>
jmp    *0x8059044
push   $0x70
jmp    80498a0 <_init+0x30>
jmp    *0x8059048
push   $0x78
jmp    80498a0 <_init+0x30>
jmp    *0x805904c
push   $0x80
jmp    80498a0 <_init+0x30>
jmp    *0x8059050
push   $0x88
jmp    80498a0 <_init+0x30>
jmp    *0x8059054
push   $0x90
jmp    80498a0 <_init+0x30>
jmp    *0x8059058
push   $0x98
jmp    80498a0 <_init+0x30>
jmp    *0x805905c
push   $0xa0
jmp    80498a0 <_init+0x30>
jmp    *0x8059060
push   $0xa8
jmp    80498a0 <_init+0x30>
jmp    *0x8059064
push   $0xb0
jmp    80498a0 <_init+0x30>
jmp    *0x8059068
push   $0xb8
jmp    80498a0 <_init+0x30>
jmp    *0x805906c
push   $0xc0
jmp    80498a0 <_init+0x30>
jmp    *0x8059070
push   $0xc8
jmp    80498a0 <_init+0x30>
jmp    *0x8059074
push   $0xd0
jmp    80498a0 <_init+0x30>
jmp    *0x8059078
push   $0xd8
jmp    80498a0 <_init+0x30>
jmp    *0x805907c
push   $0xe0
jmp    80498a0 <_init+0x30>
jmp    *0x8059080
push   $0xe8
jmp    80498a0 <_init+0x30>
jmp    *0x8059084
push   $0xf0
jmp    80498a0 <_init+0x30>
jmp    *0x8059088
push   $0xf8
jmp    80498a0 <_init+0x30>
jmp    *0x805908c
push   $0x100
jmp    80498a0 <_init+0x30>
jmp    *0x8059090
push   $0x108
jmp    80498a0 <_init+0x30>
jmp    *0x8059094
push   $0x110
jmp    80498a0 <_init+0x30>
jmp    *0x8059098
push   $0x118
jmp    80498a0 <_init+0x30>
jmp    *0x805909c
push   $0x120
jmp    80498a0 <_init+0x30>
jmp    *0x80590a0
push   $0x128
jmp    80498a0 <_init+0x30>
jmp    *0x80590a4
push   $0x130
jmp    80498a0 <_init+0x30>
jmp    *0x80590a8
push   $0x138
jmp    80498a0 <_init+0x30>
jmp    *0x80590ac
push   $0x140
jmp    80498a0 <_init+0x30>
jmp    *0x80590b0
push   $0x148
jmp    80498a0 <_init+0x30>
jmp    *0x80590b4
push   $0x150
jmp    80498a0 <_init+0x30>
jmp    *0x80590b8
push   $0x158
jmp    80498a0 <_init+0x30>
jmp    *0x80590bc
push   $0x160
jmp    80498a0 <_init+0x30>
jmp    *0x80590c0
push   $0x168
jmp    80498a0 <_init+0x30>
jmp    *0x80590c4
push   $0x170
jmp    80498a0 <_init+0x30>
jmp    *0x80590c8
push   $0x178
jmp    80498a0 <_init+0x30>
jmp    *0x80590cc
push   $0x180
jmp    80498a0 <_init+0x30>
jmp    *0x80590d0
push   $0x188
jmp    80498a0 <_init+0x30>
jmp    *0x80590d4
push   $0x190
jmp    80498a0 <_init+0x30>
jmp    *0x80590d8
push   $0x198
jmp    80498a0 <_init+0x30>
jmp    *0x80590dc
push   $0x1a0
jmp    80498a0 <_init+0x30>
jmp    *0x80590e0
push   $0x1a8
jmp    80498a0 <_init+0x30>
jmp    *0x80590e4
push   $0x1b0
jmp    80498a0 <_init+0x30>
jmp    *0x80590e8
push   $0x1b8
jmp    80498a0 <_init+0x30>
jmp    *0x80590ec
push   $0x1c0
jmp    80498a0 <_init+0x30>
jmp    *0x80590f0
push   $0x1c8
jmp    80498a0 <_init+0x30>
jmp    *0x80590f4
push   $0x1d0
jmp    80498a0 <_init+0x30>
jmp    *0x80590f8
push   $0x1d8
jmp    80498a0 <_init+0x30>
jmp    *0x80590fc
push   $0x1e0
jmp    80498a0 <_init+0x30>
jmp    *0x8059100
push   $0x1e8
jmp    80498a0 <_init+0x30>
jmp    *0x8059104
push   $0x1f0
jmp    80498a0 <_init+0x30>
jmp    *0x8059108
push   $0x1f8
jmp    80498a0 <_init+0x30>
jmp    *0x805910c
push   $0x200
jmp    80498a0 <_init+0x30>
jmp    *0x8059110
push   $0x208
jmp    80498a0 <_init+0x30>
jmp    *0x8059114
push   $0x210
jmp    80498a0 <_init+0x30>
jmp    *0x8059118
push   $0x218
jmp    80498a0 <_init+0x30>
jmp    *0x805911c
push   $0x220
jmp    80498a0 <_init+0x30>
jmp    *0x8059120
push   $0x228
jmp    80498a0 <_init+0x30>
jmp    *0x8059124
push   $0x230
jmp    80498a0 <_init+0x30>
jmp    *0x8059128
push   $0x238
jmp    80498a0 <_init+0x30>
jmp    *0x805912c
push   $0x240
jmp    80498a0 <_init+0x30>
jmp    *0x8059130
push   $0x248
jmp    80498a0 <_init+0x30>
jmp    *0x8059134
push   $0x250
jmp    80498a0 <_init+0x30>
jmp    *0x8059138
push   $0x258
jmp    80498a0 <_init+0x30>
jmp    *0x805913c
push   $0x260
jmp    80498a0 <_init+0x30>
jmp    *0x8059140
push   $0x268
jmp    80498a0 <_init+0x30>
jmp    *0x8059144
push   $0x270
jmp    80498a0 <_init+0x30>
jmp    *0x8059148
push   $0x278
jmp    80498a0 <_init+0x30>
jmp    *0x805914c
push   $0x280
jmp    80498a0 <_init+0x30>
jmp    *0x8059150
push   $0x288
jmp    80498a0 <_init+0x30>
jmp    *0x8059154
push   $0x290
jmp    80498a0 <_init+0x30>
jmp    *0x8059158
push   $0x298
jmp    80498a0 <_init+0x30>
jmp    *0x805915c
push   $0x2a0
jmp    80498a0 <_init+0x30>
jmp    *0x8059160
push   $0x2a8
jmp    80498a0 <_init+0x30>
jmp    *0x8059164
push   $0x2b0
jmp    80498a0 <_init+0x30>
jmp    *0x8059168
push   $0x2b8
jmp    80498a0 <_init+0x30>
jmp    *0x805916c
push   $0x2c0
jmp    80498a0 <_init+0x30>
jmp    *0x8059170
push   $0x2c8
jmp    80498a0 <_init+0x30>
jmp    *0x8059174
push   $0x2d0
jmp    80498a0 <_init+0x30>
jmp    *0x8059178
push   $0x2d8
jmp    80498a0 <_init+0x30>
jmp    *0x805917c
push   $0x2e0
jmp    80498a0 <_init+0x30>
jmp    *0x8059180
push   $0x2e8
jmp    80498a0 <_init+0x30>
jmp    *0x8059184
push   $0x2f0
jmp    80498a0 <_init+0x30>
jmp    *0x8059188
push   $0x2f8
jmp    80498a0 <_init+0x30>
jmp    *0x805918c
push   $0x300
jmp    80498a0 <_init+0x30>
jmp    *0x8059190
push   $0x308
jmp    80498a0 <_init+0x30>
jmp    *0x8059194
push   $0x310
jmp    80498a0 <_init+0x30>
jmp    *0x8059198
push   $0x318
jmp    80498a0 <_init+0x30>
jmp    *0x805919c
push   $0x320
jmp    80498a0 <_init+0x30>
jmp    *0x80591a0
push   $0x328
jmp    80498a0 <_init+0x30>
jmp    *0x80591a4
push   $0x330
jmp    80498a0 <_init+0x30>
jmp    *0x80591a8
push   $0x338
jmp    80498a0 <_init+0x30>
jmp    *0x80591ac
push   $0x340
jmp    80498a0 <_init+0x30>
jmp    *0x80591b0
push   $0x348
jmp    80498a0 <_init+0x30>
jmp    *0x80591b4
push   $0x350
jmp    80498a0 <_init+0x30>
jmp    *0x80591b8
push   $0x358
jmp    80498a0 <_init+0x30>
jmp    *0x80591bc
push   $0x360
jmp    80498a0 <_init+0x30>
jmp    *0x80591c0
push   $0x368
jmp    80498a0 <_init+0x30>
jmp    *0x80591c4
push   $0x370
jmp    80498a0 <_init+0x30>
jmp    *0x80591c8
push   $0x378
jmp    80498a0 <_init+0x30>
jmp    *0x80591cc
push   $0x380
jmp    80498a0 <_init+0x30>
jmp    *0x80591d0
push   $0x388
jmp    80498a0 <_init+0x30>
jmp    *0x80591d4
push   $0x390
jmp    80498a0 <_init+0x30>
jmp    *0x80591d8
push   $0x398
jmp    80498a0 <_init+0x30>
jmp    *0x80591dc
push   $0x3a0
jmp    80498a0 <_init+0x30>
jmp    *0x80591e0
push   $0x3a8
jmp    80498a0 <_init+0x30>
jmp    *0x80591e4
push   $0x3b0
jmp    80498a0 <_init+0x30>
jmp    *0x80591e8
push   $0x3b8
jmp    80498a0 <_init+0x30>
jmp    *0x80591ec
push   $0x3c0
jmp    80498a0 <_init+0x30>
jmp    *0x80591f0
push   $0x3c8
jmp    80498a0 <_init+0x30>
jmp    *0x80591f4
push   $0x3d0
jmp    80498a0 <_init+0x30>
jmp    *0x80591f8
push   $0x3d8
jmp    80498a0 <_init+0x30>
jmp    *0x80591fc
push   $0x3e0
jmp    80498a0 <_init+0x30>
jmp    *0x8059200
push   $0x3e8
jmp    80498a0 <_init+0x30>
jmp    *0x8059204
push   $0x3f0
jmp    80498a0 <_init+0x30>
jmp    *0x8059208
push   $0x3f8
jmp    80498a0 <_init+0x30>
jmp    *0x805920c
push   $0x400
jmp    80498a0 <_init+0x30>
jmp    *0x8059210
push   $0x408
jmp    80498a0 <_init+0x30>
jmp    *0x8059214
push   $0x410
jmp    80498a0 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xb0,%esp
mov    0xc(%ebp),%ebx
mov    0x8(%ebp),%esi
call   80524d0 <error+0x2550>
movl   $0x80541bd,0x4(%esp)
movl   $0x6,(%esp)
call   8049f30 <setlocale@plt>
movl   $0x8054142,0x4(%esp)
movl   $0x8054154,(%esp)
call   804a010 <bindtextdomain@plt>
movl   $0x8054154,(%esp)
call   8049b50 <textdomain@plt>
mov    (%ebx),%eax
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x805a460
call   8049f50 <strrchr@plt>
test   %eax,%eax
je     804a151 <fchmod@plt+0x81>
add    $0x1,%eax
mov    %eax,0x805a460
movl   $0x12,(%esp)
xor    %edi,%edi
call   804a050 <umask@plt>
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8059240,0xc(%esp)
movl   $0x805417e,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049d10 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804a277 <fchmod@plt+0x1a7>
cmp    $0x91,%eax
ja     804a268 <fchmod@plt+0x198>
jmp    *0x8054884(,%eax,4)
movl   $0x1,0x8059388
00
jmp    804a16f <fchmod@plt+0x9f>
movl   $0x1,0x805a468
00
jmp    804a16f <fchmod@plt+0x9f>
addl   $0x1,0x805a46c
jmp    804a16f <fchmod@plt+0x9f>
mov    0x8059364,%edi
jmp    804a16f <fchmod@plt+0x9f>
addl   $0x1,0x805937c
jmp    804a16f <fchmod@plt+0x9f>
addl   $0x1,0x8059378
jmp    804a16f <fchmod@plt+0x9f>
addl   $0x1,0x8059380
jmp    804a16f <fchmod@plt+0x9f>
movl   $0x0,0x8059304
00
jmp    804a16f <fchmod@plt+0x9f>
mov    0x8059360,%eax
xor    %edx,%edx
call   804b080 <fchmod@plt+0xfb0>
addl   $0x1,0x8059384
jmp    804a16f <fchmod@plt+0x9f>
addl   $0x1,0x8059374
jmp    804a16f <fchmod@plt+0x9f>
addl   $0x1,0x3c(%esp)
jmp    804a16f <fchmod@plt+0x9f>
movl   $0x805415f,0x8(%esp)
movl   $0x8054171,0x4(%esp)
movl   $0x1,(%esp)
call   8049ec0 <__printf_chk@plt>
movl   $0x0,(%esp)
call   8049cf0 <exit@plt>
mov    0x8059364,%eax
mov    %eax,0x38(%esp)
jmp    804a16f <fchmod@plt+0x9f>
mov    0x8059324,%eax
mov    $0x1,%edx
call   804b080 <fchmod@plt+0xfb0>
call   8049af0 <getuid@plt>
mov    %eax,0x34(%esp)
call   8049b10 <geteuid@plt>
mov    0x34(%esp),%edx
cmp    %eax,%edx
jne    804a343 <fchmod@plt+0x273>
test   %edx,%edx
jne    804a343 <fchmod@plt+0x273>
movl   $0x0,0x8059300
00
mov    0x8059340,%eax
movl   $0x804cbd0,(%esp)
mov    %eax,0x34(%esp)
call   8054000 <error+0x4080>
movl   $0x0,(%esp)
call   8049db0 <mnt_init_debug@plt>
cmpl   $0x0,0x3c(%esp)
je     804a3f1 <fchmod@plt+0x321>
test   %edi,%edi
mov    $0x80545ac,%eax
cmove  %eax,%edi
call   804c180 <fchmod@plt+0x20b0>
cmpl   $0x0,0x4(%eax)
mov    %eax,%esi
je     804aa48 <fchmod@plt+0x978>
mov    0x4(%esi),%ebx
movl   $0x0,0x34(%esp)
jmp    804a2fa <fchmod@plt+0x22a>
mov    0x4(%ebx),%ebx
cmp    %ebx,%esi
je     804a3e5 <fchmod@plt+0x315>
mov    %edi,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   80500a0 <error+0x120>
test   %eax,%eax
je     804a2f7 <fchmod@plt+0x227>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8050200 <error+0x280>
test   %eax,%eax
je     804a2f7 <fchmod@plt+0x227>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    %ebx,(%esp)
call   804b420 <fchmod@plt+0x1350>
or     %eax,0x34(%esp)
jmp    804a2f7 <fchmod@plt+0x227>
cmpl   $0x0,0x8059300
je     804a2a3 <fchmod@plt+0x1d3>
cmpl   $0x0,0x3c(%esp)
jne    804a3b4 <fchmod@plt+0x2e4>
test   %edi,%edi
jne    804a3b4 <fchmod@plt+0x2e4>
cmpl   $0x0,0x8059378
jne    804a3b4 <fchmod@plt+0x2e4>
cmpl   $0x0,0x8059384
jne    804a3b4 <fchmod@plt+0x2e4>
cmpl   $0x0,0x805937c
jne    804a3b4 <fchmod@plt+0x2e4>
cmpl   $0x0,0x805a468
jne    804a3b4 <fchmod@plt+0x2e4>
cmpl   $0x0,0x8059388
jne    804a3b4 <fchmod@plt+0x2e4>
mov    0x8059340,%eax
movl   $0x804cbd0,(%esp)
sub    %eax,%esi
lea    (%ebx,%eax,4),%eax
mov    %esi,0x38(%esp)
mov    %eax,0x30(%esp)
call   8054000 <error+0x4080>
movl   $0x0,(%esp)
call   8049db0 <mnt_init_debug@plt>
jmp    804a402 <fchmod@plt+0x332>
movl   $0x5,0x8(%esp)
movl   $0x805418d,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804a2a3 <fchmod@plt+0x1d3>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049cf0 <exit@plt>
mov    0x34(%esp),%eax
sub    %eax,%esi
lea    (%ebx,%eax,4),%eax
mov    %esi,0x38(%esp)
mov    %eax,0x30(%esp)
cmpl   $0x0,0x38(%esp)
jle    804a5eb <fchmod@plt+0x51b>
movl   $0x0,0x3c(%esp)
movl   $0x0,0x34(%esp)
jmp    804a597 <fchmod@plt+0x4c7>
mov    %esi,(%esp)
call   8050530 <error+0x5b0>
mov    %eax,%edi
cmpl   $0x1,0x805a46c
jle    804a465 <fchmod@plt+0x395>
movl   $0x5,0x8(%esp)
movl   $0x80541be,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804c340 <fchmod@plt+0x2270>
test   %eax,%eax
mov    %eax,%ebx
je     804a84b <fchmod@plt+0x77b>
test   %ebx,%ebx
jne    804a932 <fchmod@plt+0x862>
cmpl   $0x0,0x44(%esp)
jne    804a932 <fchmod@plt+0x862>
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
test   %eax,%eax
jne    804a8c4 <fchmod@plt+0x7f4>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804a8c4 <fchmod@plt+0x7f4>
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804eb40 <fchmod@plt+0x4a70>
test   %eax,%eax
je     804a61e <fchmod@plt+0x54e>
cmp    $0x2,%eax
mov    %edi,0x2c(%esp)
jne    804a4f4 <fchmod@plt+0x424>
cmpl   $0x0,0x805a46c
jne    804a7d9 <fchmod@plt+0x709>
cmpl   $0x0,0x8059300
je     804a607 <fchmod@plt+0x537>
xor    %ebx,%ebx
movl   $0x5,0x8(%esp)
movl   $0x80546c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x2c(%esp),%ecx
movl   $0x2,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
cmpl   $0x0,0x8059304
mov    0x14(%ebx),%eax
je     804a634 <fchmod@plt+0x564>
test   %eax,%eax
je     804a634 <fchmod@plt+0x564>
movl   $0x8054209,0x4(%esp)
mov    %eax,(%esp)
call   804d1d0 <fchmod@plt+0x3100>
test   %eax,%eax
je     804a634 <fchmod@plt+0x564>
mov    %eax,%edx
mov    %esi,%eax
lea    0x40(%esp),%ecx
call   804b3c0 <fchmod@plt+0x12f0>
test   %eax,%eax
je     804a634 <fchmod@plt+0x564>
mov    0x40(%esp),%eax
add    %eax,0x34(%esp)
addl   $0x1,0x3c(%esp)
mov    0x38(%esp),%eax
cmp    %eax,0x3c(%esp)
je     804a3e5 <fchmod@plt+0x315>
mov    0x30(%esp),%eax
mov    0x3c(%esp),%ecx
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
mov    (%eax,%ecx,4),%esi
cmpb   $0x0,(%esi)
jne    804a422 <fchmod@plt+0x352>
movl   $0x5,0x8(%esp)
movl   $0x80541ab,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
xor    %eax,%eax
jmp    804a580 <fchmod@plt+0x4b0>
mov    0x8059324,%eax
mov    $0x2,%edx
call   804b080 <fchmod@plt+0xfb0>
cmpl   $0x0,0x8059300
jne    804a503 <fchmod@plt+0x433>
movl   $0x0,(%esp)
mov    %esi,%ecx
mov    %esi,%edx
mov    %esi,%eax
call   804b420 <fchmod@plt+0x1350>
jmp    804a580 <fchmod@plt+0x4b0>
cmpl   $0x0,0x805a46c
jne    804a80e <fchmod@plt+0x73e>
mov    0x44(%esp),%edi
jmp    804a42c <fchmod@plt+0x35c>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804c500 <fchmod@plt+0x2430>
test   %eax,%eax
jne    804a684 <fchmod@plt+0x5b4>
mov    0x10(%ebx),%eax
cmpb   $0x6e,(%eax)
je     804a8cd <fchmod@plt+0x7fd>
movl   $0x5,0x8(%esp)
movl   $0x80546f8,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x2c(%esp),%ecx
movl   $0x2,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    0xc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804c660 <fchmod@plt+0x2590>
test   %eax,%eax
mov    %eax,%edi
je     804aa8c <fchmod@plt+0x9bc>
mov    0x14(%edi),%esi
mov    $0x80541bd,%eax
mov    $0x805421a,%edx
test   %esi,%esi
cmove  %eax,%esi
mov    %esi,%eax
call   804ade0 <fchmod@plt+0xd10>
mov    $0x805421f,%edx
mov    %eax,0x24(%esp)
mov    %esi,%eax
call   804ade0 <fchmod@plt+0xd10>
mov    $0x8054225,%edx
mov    %eax,0x28(%esp)
mov    %esi,%eax
call   804ade0 <fchmod@plt+0xd10>
mov    $0x8055122,%edx
mov    %eax,0x20(%esp)
mov    %esi,%eax
call   804ade0 <fchmod@plt+0xd10>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
jne    804a754 <fchmod@plt+0x684>
mov    0x20(%esp),%edx
or     0x24(%esp),%edx
or     %eax,%edx
jne    804a99b <fchmod@plt+0x8cb>
mov    0xc(%edi),%ecx
mov    0x8(%edi),%esi
mov    $0x80540a9,%edx
movl   $0x5,0x8(%esp)
movl   $0x8054800,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x24(%esp)
mov    %ecx,0x28(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x28(%esp),%ecx
mov    0x24(%esp),%edx
mov    %esi,0xc(%esp)
movl   $0x2,(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    %ebx,%esi
mov    0x2c(%esp),%edi
mov    %ebx,0x28(%esp)
jmp    804a764 <fchmod@plt+0x694>
test   %al,%al
je     804a7d0 <fchmod@plt+0x700>
mov    0x10(%esi),%ecx
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    %esi,(%esp)
call   804b420 <fchmod@plt+0x1350>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%ebx
call   804c340 <fchmod@plt+0x2270>
test   %ebx,%ebx
mov    %eax,%esi
setne  %al
test   %esi,%esi
jne    804a760 <fchmod@plt+0x690>
test   %al,%al
mov    %ebx,%edi
mov    0x28(%esp),%ebx
je     804a7c9 <fchmod@plt+0x6f9>
mov    0x2c(%esp),%esi
jmp    804a7a4 <fchmod@plt+0x6d4>
xchg   %ax,%ax
test   %edi,%edi
je     804a7c9 <fchmod@plt+0x6f9>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    %ebx,(%esp)
call   804b420 <fchmod@plt+0x1350>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%edi
call   804c3b0 <fchmod@plt+0x22e0>
test   %eax,%eax
mov    %eax,%ebx
jne    804a7a0 <fchmod@plt+0x6d0>
mov    %edi,%eax
jmp    804a580 <fchmod@plt+0x4b0>
mov    %ebx,%edi
mov    %edi,%eax
jmp    804a580 <fchmod@plt+0x4b0>
movl   $0x5,0x8(%esp)
movl   $0x8054684,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804a4f4 <fchmod@plt+0x424>
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x80541ef,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804a62b <fchmod@plt+0x55b>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   804c3b0 <fchmod@plt+0x22e0>
test   %eax,%eax
mov    %eax,%ebx
je     804a8f0 <fchmod@plt+0x820>
movl   $0x0,0x4(%esp)
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   804c340 <fchmod@plt+0x2270>
test   %eax,%eax
mov    %eax,%ecx
je     804ab0a <fchmod@plt+0xa3a>
mov    0x8(%ecx),%eax
mov    %ecx,0x2c(%esp)
mov    %eax,(%esp)
call   8050530 <error+0x5b0>
test   %eax,%eax
mov    %eax,%edx
je     804a8b7 <fchmod@plt+0x7e7>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x28(%esp)
call   80498e0 <strcmp@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    804aa00 <fchmod@plt+0x930>
mov    %edx,(%esp)
call   8049990 <free@plt>
jmp    804a47f <fchmod@plt+0x3af>
mov    %edi,0x2c(%esp)
jmp    804a4f4 <fchmod@plt+0x424>
cmpb   $0x66,0x1(%eax)
jne    804a650 <fchmod@plt+0x580>
cmpb   $0x73,0x2(%eax)
jne    804a650 <fchmod@plt+0x580>
cmpb   $0x0,0x3(%eax)
je     804a684 <fchmod@plt+0x5b4>
jmp    804a650 <fchmod@plt+0x580>
cmpl   $0x0,0x805a46c
je     804a47f <fchmod@plt+0x3af>
movl   $0x5,0x8(%esp)
movl   $0x80541d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804a47f <fchmod@plt+0x3af>
test   %ebx,%ebx
mov    %edi,0x2c(%esp)
je     804a5fa <fchmod@plt+0x52a>
cmpl   $0x0,0x8059304
mov    0x14(%ebx),%eax
je     804a977 <fchmod@plt+0x8a7>
test   %eax,%eax
je     804a977 <fchmod@plt+0x8a7>
movl   $0x805420a,0x4(%esp)
mov    %eax,(%esp)
call   804d1d0 <fchmod@plt+0x3100>
test   %eax,%eax
je     804a977 <fchmod@plt+0x8a7>
mov    %eax,%edx
mov    %esi,%eax
lea    0x40(%esp),%ecx
call   804b3c0 <fchmod@plt+0x12f0>
test   %eax,%eax
jne    804a57c <fchmod@plt+0x4ac>
cmpl   $0x0,0x8059300
je     804a98d <fchmod@plt+0x8bd>
test   %ebx,%ebx
jne    804a537 <fchmod@plt+0x467>
jmp    804a503 <fchmod@plt+0x433>
test   %ebx,%ebx
nop
jne    804a754 <fchmod@plt+0x684>
jmp    804a607 <fchmod@plt+0x537>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804def0 <fchmod@plt+0x3e20>
mov    $0x80541bd,%ecx
mov    %eax,%esi
mov    0x14(%ebx),%eax
movl   $0x805422b,0x4(%esp)
test   %eax,%eax
cmove  %ecx,%eax
mov    %eax,(%esp)
call   804d1d0 <fchmod@plt+0x3100>
test   %eax,%eax
mov    %eax,%edx
setne  %al
je     804aa79 <fchmod@plt+0x9a9>
test   %esi,%esi
je     804aa79 <fchmod@plt+0x9a9>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x28(%esp)
call   80498e0 <strcmp@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
je     804a754 <fchmod@plt+0x684>
mov    0xc(%edi),%ecx
mov    0x8(%edi),%esi
jmp    804a70c <fchmod@plt+0x63c>
mov    0x8(%ecx),%ecx
movl   $0x5,0x8(%esp)
movl   $0x805463c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x2c(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x2c(%esp),%ecx
mov    %edi,0x8(%esp)
movl   $0x20,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    0x28(%esp),%edx
jmp    804a8b7 <fchmod@plt+0x7e7>
movl   $0x5,0x8(%esp)
movl   $0x80545e0,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804a2ea <fchmod@plt+0x21a>
test   %al,%al
mov    0xc(%edi),%ecx
mov    0x8(%edi),%esi
jne    804a70c <fchmod@plt+0x63c>
jmp    804a707 <fchmod@plt+0x637>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804c7d0 <fchmod@plt+0x2700>
test   %eax,%eax
mov    %eax,%edi
je     804ac45 <fchmod@plt+0xb75>
movl   $0x9,0x8(%esp)
movl   $0x8054231,0x4(%esp)
mov    0x8(%ebx),%eax
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
mov    %eax,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
je     804ab43 <fchmod@plt+0xa73>
movl   $0x5,0x8(%esp)
movl   $0x80547d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x2c(%esp),%ecx
movl   $0x2,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804a6a0 <fchmod@plt+0x5d0>
movl   $0x5,0x8(%esp)
movl   $0x8054614,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x2c(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    0x2c(%esp),%ecx
jmp    804a882 <fchmod@plt+0x7b2>
mov    0x14(%edi),%esi
mov    $0x8054236,%edx
mov    %esi,%eax
call   804ade0 <fchmod@plt+0xd10>
test   %eax,%eax
je     804aad1 <fchmod@plt+0xa01>
mov    %esi,(%esp)
movl   $0x8054212,0x4(%esp)
call   804d1d0 <fchmod@plt+0x3100>
test   %eax,%eax
mov    %eax,%esi
je     804abc6 <fchmod@plt+0xaf6>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8052fa0 <error+0x3020>
test   %eax,%eax
je     804abc6 <fchmod@plt+0xaf6>
cmpl   $0x1,0x805a46c
jle    804aad1 <fchmod@plt+0xa01>
movl   $0x5,0x8(%esp)
movl   $0x8054760,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804aad1 <fchmod@plt+0xa01>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   804ee00 <fchmod@plt+0x4d30>
sub    $0x1,%eax
je     804ac92 <fchmod@plt+0xbc2>
cmpl   $0x1,0x805a46c
jle    804aad1 <fchmod@plt+0xa01>
mov    0x8(%edi),%edx
mov    0x8(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x80547ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804aad1 <fchmod@plt+0xa01>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804cac0 <fchmod@plt+0x29f0>
test   %eax,%eax
jne    804aad1 <fchmod@plt+0xa01>
movl   $0x5,0x8(%esp)
movl   $0x8054728,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x2c(%esp),%ecx
movl   $0x2,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804aad1 <fchmod@plt+0xa01>
cmpl   $0x1,0x805a46c
jle    804a6a0 <fchmod@plt+0x5d0>
mov    0x8(%edi),%edx
mov    0x8(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8054788,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804a6a0 <fchmod@plt+0x5d0>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8053ff0
push   $0x8053f80
push   %ecx
push   %esi
push   $0x804a0e0
call   8049d80 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8059313,%eax
sub    $0x8059310,%eax
cmp    $0x6,%eax
ja     804ad30 <fchmod@plt+0xc60>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804ad2f <fchmod@plt+0xc5f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8059310,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8059310,%eax
sub    $0x8059310,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804ad69 <fchmod@plt+0xc99>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804ad68 <fchmod@plt+0xc98>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8059310,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8059368
jne    804adac <fchmod@plt+0xcdc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804ad20 <fchmod@plt+0xc50>
movb   $0x1,0x8059368
leave
repz ret
xchg   %ax,%ax
mov    0x8058f00,%eax
test   %eax,%eax
je     804add8 <fchmod@plt+0xd08>
mov    $0x0,%eax
test   %eax,%eax
je     804add8 <fchmod@plt+0xd08>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8058f00,(%esp)
call   *%eax
leave
jmp    804ad50 <fchmod@plt+0xc80>
nop
jmp    804ad50 <fchmod@plt+0xc80>
xchg   %ax,%ax
nop
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %edx,(%esp)
call   8049d60 <strlen@plt>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804ae39 <fchmod@plt+0xd69>
cmpb   $0x0,(%ebx)
je     804ae39 <fchmod@plt+0xd69>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    804ae32 <fchmod@plt+0xd62>
movzbl (%ebx,%esi,1),%eax
cmp    $0x2c,%al
je     804ae42 <fchmod@plt+0xd72>
test   %al,%al
jne    804ae32 <fchmod@plt+0xd62>
jmp    804ae42 <fchmod@plt+0xd72>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    $0x2c,%cl
xchg   %ax,%ax
je     804adf8 <fchmod@plt+0xd28>
movzbl (%ebx),%ecx
test   %cl,%cl
jne    804ae28 <fchmod@plt+0xd58>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x1002c,%esp
mov    %ebp,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x1001c(%esp)
xor    %eax,%eax
call   8050640 <error+0x6c0>
mov    %eax,(%edi)
mov    %eax,%esi
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
call   8049f50 <strrchr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b040 <fchmod@plt+0xf70>
cmp    %esi,%ebx
je     804af80 <fchmod@plt+0xeb0>
movb   $0x0,(%ebx)
mov    (%edi),%esi
add    $0x1,%ebx
mov    %esi,(%esp)
call   8049a80 <chdir@plt>
cmp    $0xffffffff,%eax
je     804af98 <fchmod@plt+0xec8>
lea    0x1c(%esp),%edi
movl   $0x10000,0x4(%esp)
mov    %edi,(%esp)
call   8049d50 <getcwd@plt>
test   %eax,%eax
je     804aff8 <fchmod@plt+0xf28>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804af40 <fchmod@plt+0xe70>
mov    0x805a46c,%eax
test   %eax,%eax
je     804af19 <fchmod@plt+0xe49>
movl   $0x5,0x8(%esp)
movl   $0x8054338,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
mov    0x1001c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804b077 <fchmod@plt+0xfa7>
add    $0x1002c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8054314,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804aee0 <fchmod@plt+0xe10>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%ebx)
je     804afe8 <fchmod@plt+0xf18>
add    $0x1,%ebx
mov    $0x8055020,%esi
jmp    804aea3 <fchmod@plt+0xdd3>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80542c0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049ac0 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804aeb4 <fchmod@plt+0xde4>
lea    0x0(%esi),%esi
mov    $0x8055020,%esi
mov    $0x8054068,%ebx
jmp    804aea3 <fchmod@plt+0xdd3>
nop
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80542e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8049ac0 <dcgettext@plt>
mov    %ebp,0x8(%esp)
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804aed0 <fchmod@plt+0xe00>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8054290,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebp,0x8(%esp)
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    (%edi),%esi
jmp    804ae93 <fchmod@plt+0xdc3>
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movl   $0x5,0x8(%esp)
movl   $0x8054358,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049ff0 <__fprintf_chk@plt>
mov    %esi,(%esp)
call   8049cf0 <exit@plt>
jmp    804b0d0 <fchmod@plt+0x1000>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x13c,%esp
lea    0xb4(%esp),%ebx
mov    %edx,0x10(%esp)
lea    0x54(%esp),%edi
movl   $0x805406a,0xc(%esp)
movl   $0x78,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
call   804a0c0 <__sprintf_chk@plt>
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
xor    %edx,%edx
cmp    $0xffffffff,%eax
je     804b1e0 <fchmod@plt+0x1110>
test   %eax,%eax
mov    %edx,0x18(%esp)
jne    804b1c0 <fchmod@plt+0x10f0>
call   8049f00 <fork@plt>
test   %eax,%eax
je     804b234 <fchmod@plt+0x1164>
cmp    $0xffffffff,%eax
je     804b180 <fchmod@plt+0x10b0>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049b00 <wait@plt>
mov    0x2c(%esp),%edx
mov    $0x2,%eax
test   $0x7f,%dl
jne    804b176 <fchmod@plt+0x10a6>
movzbl %dh,%eax
mov    %eax,0x0(%ebp)
mov    $0x1,%eax
jmp    804b1c2 <fchmod@plt+0x10f2>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805408c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
mov    0x12c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804b22f <fchmod@plt+0x115f>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
cmpl   $0x2,(%eax)
jne    804b1c0 <fchmod@plt+0x10f0>
movl   $0x2e,0x4(%esp)
mov    %esi,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     804b1c0 <fchmod@plt+0x10f0>
movl   $0x2e,0x4(%esp)
mov    %ebx,(%esp)
call   8049f50 <strrchr@plt>
movb   $0x0,(%eax)
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
mov    $0x1,%edx
jmp    804b13f <fchmod@plt+0x106f>
call   8049ae0 <__stack_chk_fail@plt>
call   8049e10 <getgid@plt>
mov    %eax,(%esp)
call   8049cb0 <setgid@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
js     804b372 <fchmod@plt+0x12a2>
mov    %edx,0x18(%esp)
call   8049af0 <getuid@plt>
mov    %eax,(%esp)
call   8049f80 <setuid@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
js     804b328 <fchmod@plt+0x1258>
mov    0x1c(%esp),%eax
mov    %edx,0x18(%esp)
mov    %ebx,0x2c(%esp)
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    0x18(%esp),%edx
cmpl   $0x0,0x8059378
mov    %eax,0x30(%esp)
mov    $0x2,%eax
je     804b29e <fchmod@plt+0x11ce>
movl   $0x805407a,0x34(%esp)
mov    $0x3,%al
cmpl   $0x0,0x8059380
je     804b2b2 <fchmod@plt+0x11e2>
movl   $0x805407d,0x2c(%esp,%eax,4)
add    $0x1,%eax
cmpl   $0x0,0x8059384
je     804b2c6 <fchmod@plt+0x11f6>
movl   $0x8054080,0x2c(%esp,%eax,4)
add    $0x1,%eax
cmpl   $0x0,0x805a46c
je     804b2da <fchmod@plt+0x120a>
movl   $0x8054083,0x2c(%esp,%eax,4)
add    $0x1,%eax
cmpl   $0x0,0x805937c
je     804b2ee <fchmod@plt+0x121e>
movl   $0x8054086,0x2c(%esp,%eax,4)
add    $0x1,%eax
test   %edx,%edx
je     804b304 <fchmod@plt+0x1234>
lea    0x1(%eax),%edx
movl   $0x8054089,0x2c(%esp,%eax,4)
add    $0x2,%eax
mov    %esi,0x2c(%esp,%edx,4)
movl   $0x0,0x2c(%esp,%eax,4)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049dc0 <execv@plt>
movl   $0x1,(%esp)
call   8049cf0 <exit@plt>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805440c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049ac0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    0x18(%esp),%edx
jmp    804b26a <fchmod@plt+0x119a>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80543ec,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049ac0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
mov    0x18(%esp),%edx
jmp    804b24d <fchmod@plt+0x117d>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x0,0x8059304
je     804b408 <fchmod@plt+0x1338>
test   %edx,%edx
je     804b408 <fchmod@plt+0x1338>
push   %ebp
mov    %eax,%ebp
push   %edi
mov    $0x80540a4,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x1c,%esp
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804b3fd <fchmod@plt+0x132d>
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
call   8049d60 <strlen@plt>
mov    0xc(%esp),%edx
cmp    $0x63,%eax
jbe    804b410 <fchmod@plt+0x1340>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%ecx
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804b0d0 <fchmod@plt+0x1000>
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edx
push   %esi
push   %ebx
sub    $0x5c,%esp
cmpb   $0x2f,0x0(%ebp)
mov    %eax,0x20(%esp)
movl   $0x0,0x34(%esp)
jne    804b470 <fchmod@plt+0x13a0>
cmpb   $0x0,0x1(%ebp)
jne    804b470 <fchmod@plt+0x13a0>
addl   $0x1,0x8059378
lea    0x30(%esp),%ecx
mov    %ebp,%eax
call   804b3c0 <fchmod@plt+0x12f0>
test   %eax,%eax
mov    %eax,%ebx
je     804b498 <fchmod@plt+0x13c8>
mov    0x30(%esp),%ebx
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x80540a9,%edi
mov    $0x5,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804b443 <fchmod@plt+0x1373>
mov    $0x80540ae,%edi
mov    $0x7,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804b443 <fchmod@plt+0x1373>
jmp    804b44a <fchmod@plt+0x137a>
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
call   804ff20 <fchmod@plt+0x5e50>
mov    0x8059388,%eax
test   %eax,%eax
je     804b550 <fchmod@plt+0x1480>
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
mov    0x8059378,%ecx
test   %ecx,%ecx
jne    804b4e3 <fchmod@plt+0x1413>
mov    0x28(%esp),%eax
test   $0xfffffffd,%eax
je     804b688 <fchmod@plt+0x15b8>
cmp    $0x16,%eax
je     804b688 <fchmod@plt+0x15b8>
movl   $0x1,(%esp)
call   804ff20 <fchmod@plt+0x5e50>
mov    0x24(%esp),%edx
test   %edx,%edx
jns    804b45f <fchmod@plt+0x138f>
mov    0x28(%esp),%eax
mov    $0x1,%ebx
test   %eax,%eax
je     804b45f <fchmod@plt+0x138f>
mov    0x28(%esp),%eax
cmp    0x8059370,%eax
je     804b768 <fchmod@plt+0x1698>
mov    0x805936c,%eax
mov    0x28(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x8059370
call   8049990 <free@plt>
mov    %ebp,(%esp)
call   8050640 <error+0x6c0>
cmp    $0x16,%edi
mov    %eax,0x805936c
ja     804b891 <fchmod@plt+0x17c1>
jmp    *0x8054828(,%edi,4)
mov    0x8059374,%eax
movl   $0x0,0x2c(%esp)
test   %eax,%eax
jne    804b730 <fchmod@plt+0x1660>
mov    0x8059300,%eax
xor    %esi,%esi
mov    %ebp,%edi
test   %eax,%eax
jne    804b700 <fchmod@plt+0x1630>
mov    0x8059380,%eax
test   %eax,%eax
jne    804b6c8 <fchmod@plt+0x15f8>
mov    0x8059384,%eax
test   %eax,%eax
jne    804b8d8 <fchmod@plt+0x1808>
test   %esi,%esi
jne    804b750 <fchmod@plt+0x1680>
mov    %edi,(%esp)
call   80499d0 <umount@plt>
mov    %eax,0x24(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x24(%esp),%ecx
movl   $0x0,0x28(%esp)
test   %ecx,%ecx
js     804b9d8 <fchmod@plt+0x1908>
mov    0x805a46c,%eax
test   %eax,%eax
jne    804ba10 <fchmod@plt+0x1940>
mov    0x70(%esp),%edi
test   %edi,%edi
je     804b9e5 <fchmod@plt+0x1915>
mov    0x70(%esp),%eax
mov    $0x8054236,%edi
mov    $0x5,%ecx
mov    0x10(%eax),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804b65b <fchmod@plt+0x158b>
mov    0x70(%esp),%eax
mov    0x14(%eax),%edx
mov    $0x80541bd,%eax
test   %edx,%edx
je     804b60a <fchmod@plt+0x153a>
mov    %edx,(%esp)
call   8050640 <error+0x6c0>
movl   $0x80540fd,0x4(%esp)
mov    %eax,(%esp)
call   8049ee0 <strtok@plt>
test   %eax,%eax
jne    804b644 <fchmod@plt+0x1574>
jmp    804b9f8 <fchmod@plt+0x1928>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80540fd,0x4(%esp)
movl   $0x0,(%esp)
call   8049ee0 <strtok@plt>
test   %eax,%eax
je     804b9f8 <fchmod@plt+0x1928>
mov    %eax,%esi
mov    $0x80540ff,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804b628 <fchmod@plt+0x1558>
add    $0x5,%eax
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
test   %eax,%eax
je     804b4c1 <fchmod@plt+0x13f1>
mov    %eax,(%esp)
call   804eb00 <fchmod@plt+0x4a30>
test   %eax,%eax
jne    804b4c1 <fchmod@plt+0x13f1>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804fb70 <fchmod@plt+0x5aa0>
jmp    804b4c1 <fchmod@plt+0x13f1>
call   8049950 <mnt_new_update@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b6b7 <fchmod@plt+0x15e7>
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ed0 <mnt_update_set_fs@plt>
test   %eax,%eax
je     804b7d8 <fchmod@plt+0x1708>
mov    %esi,(%esp)
call   8049920 <mnt_free_update@plt>
nop
jmp    804b4e3 <fchmod@plt+0x1413>
lea    0x0(%esi),%esi
or     $0x2,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049fa0 <umount2@plt>
movl   $0x0,0x28(%esp)
test   %eax,%eax
mov    %eax,0x24(%esp)
jns    804b4c1 <fchmod@plt+0x13f1>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x28(%esp)
jmp    804b4c1 <fchmod@plt+0x13f1>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80000000,0x4(%esp)
movl   $0x80541bd,(%esp)
call   8049fa0 <umount2@plt>
cmp    $0xffffffff,%eax
je     804b798 <fchmod@plt+0x16c8>
xor    %esi,%esi
lea    0x34(%esp),%edx
mov    %ebp,%eax
call   804ae50 <fchmod@plt+0xd80>
mov    %eax,%edi
jmp    804b576 <fchmod@plt+0x14a6>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ea90 <fchmod@plt+0x49c0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x2c(%esp)
jmp    804b565 <fchmod@plt+0x1495>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049fa0 <umount2@plt>
mov    %eax,0x24(%esp)
jmp    804b5a4 <fchmod@plt+0x14d4>
lea    0x0(%esi),%esi
mov    0x805936c,%esi
test   %esi,%esi
je     804ba49 <fchmod@plt+0x1979>
test   %ebp,%ebp
je     804b78e <fchmod@plt+0x16be>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
je     804b45f <fchmod@plt+0x138f>
mov    %esi,%eax
jmp    804b521 <fchmod@plt+0x1451>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,%esi
jne    804b719 <fchmod@plt+0x1649>
movl   $0x8,0x4(%esp)
movl   $0x80541bd,(%esp)
call   8049fa0 <umount2@plt>
cmp    $0xffffffff,%eax
jne    804b719 <fchmod@plt+0x1649>
cmpl   $0x2,(%esi)
jne    804b719 <fchmod@plt+0x1649>
mov    $0x8,%esi
jmp    804b71b <fchmod@plt+0x164b>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8049ab0 <mnt_update_table@plt>
jmp    804b6b7 <fchmod@plt+0x15e7>
movl   $0x5,0x8(%esp)
movl   $0x8054105,0x4(%esp)
lea    0x0(%esi),%esi
movl   $0x0,(%esp)
mov    $0x1,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
jmp    804b45f <fchmod@plt+0x138f>
movl   $0x5,0x8(%esp)
movl   $0x80544c4,0x4(%esp)
jmp    804b800 <fchmod@plt+0x1730>
movl   $0x5,0x8(%esp)
movl   $0x805457c,0x4(%esp)
jmp    804b800 <fchmod@plt+0x1730>
movl   $0x5,0x8(%esp)
movl   $0x805447c,0x4(%esp)
jmp    804b800 <fchmod@plt+0x1730>
movl   $0x5,0x8(%esp)
movl   $0x80544a0,0x4(%esp)
jmp    804b800 <fchmod@plt+0x1730>
movl   $0x5,0x8(%esp)
movl   $0x805411d,0x4(%esp)
jmp    804b800 <fchmod@plt+0x1730>
movl   $0x5,0x8(%esp)
movl   $0x8054554,0x4(%esp)
jmp    804b800 <fchmod@plt+0x1730>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054133,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    $0x1,%ebx
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
jmp    804b45f <fchmod@plt+0x138f>
lea    0x0(%esi),%esi
or     $0x1,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049fa0 <umount2@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x24(%esp)
jne    804b5a4 <fchmod@plt+0x14d4>
call   8049e70 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
movl   $0x80540b5,(%esp)
mov    %eax,0x28(%esp)
call   8049be0 <perror@plt>
mov    0x28(%esp),%eax
cmp    $0x26,%eax
mov    %eax,(%esi)
je     804ba50 <fchmod@plt+0x1980>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x805937c,%edx
mov    (%esi),%eax
test   %edx,%edx
mov    %eax,0x28(%esp)
je     804b4c1 <fchmod@plt+0x13f1>
cmp    $0x10,%eax
jne    804b4c1 <fchmod@plt+0x13f1>
mov    0x20(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0xc0ed0021,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049f40 <mount@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804ba8f <fchmod@plt+0x19bf>
cmpl   $0x10,(%esi)
je     804b9c7 <fchmod@plt+0x18f7>
movl   $0x80540de,(%esp)
call   8049be0 <perror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054454,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x20(%esp),%edi
movl   $0x1,0x4(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
mov    0x24(%esp),%eax
test   %eax,%eax
js     804b4c1 <fchmod@plt+0x13f1>
jmp    804b5c4 <fchmod@plt+0x14f4>
call   8049e70 <__errno_location@plt>
mov    %eax,%esi
nop
jmp    804b928 <fchmod@plt+0x1858>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804c590 <fchmod@plt+0x24c0>
test   %eax,%eax
je     804b9f8 <fchmod@plt+0x1928>
mov    0xc(%eax),%ebp
mov    0x2c(%esp),%esi
test   %esi,%esi
je     804b4c1 <fchmod@plt+0x13f1>
jmp    804b65b <fchmod@plt+0x158b>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80540e6,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x20(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804b5d1 <fchmod@plt+0x1501>
xor    %eax,%eax
jmp    804b521 <fchmod@plt+0x1451>
mov    0x805a46c,%esi
test   %esi,%esi
je     804b598 <fchmod@plt+0x14c8>
movl   $0x5,0x8(%esp)
movl   $0x80540bd,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804b598 <fchmod@plt+0x14c8>
movl   $0x5,0x8(%esp)
movl   $0x805442c,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x20(%esp),%edi
movl   $0x1,0x4(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
cmpl   $0x0,0x70(%esp)
je     804bb25 <fchmod@plt+0x1a55>
cmpl   $0x0,0x8059378
jne    804bb25 <fchmod@plt+0x1a55>
mov    0x70(%esp),%eax
movl   $0x80540db,0x44(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
mov    0x8(%eax),%eax
mov    %eax,0x38(%esp)
mov    0x70(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    0x10(%eax),%eax
mov    %ebp,(%esp)
mov    %eax,0x40(%esp)
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   804d260 <fchmod@plt+0x3190>
movl   $0x1,(%esp)
call   804ff20 <fchmod@plt+0x5e50>
jmp    804b45f <fchmod@plt+0x138f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049b40 <mnt_new_table@plt>
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049a10 <mnt_new_iter@plt>
movl   $0x1,0x805939c
00
movl   $0x0,0x805a404
00
movl   $0x0,0x805a400
00
test   %eax,%eax
mov    %eax,%ebp
je     804bb98 <fchmod@plt+0x1ac8>
mov    0xc(%esp),%eax
test   %eax,%eax
jne    804bbf0 <fchmod@plt+0x1b20>
mov    $0x805a400,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ad3,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ff80 <error>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   804a030 <mnt_free_table@plt>
mov    %ebp,(%esp)
call   8049e60 <mnt_free_iter@plt>
movl   $0x0,0x4(%ebx)
movl   $0x0,(%ebx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
mov    $0x805a400,%ebx
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049a40 <mnt_table_parse_mtab@plt>
test   %eax,%eax
jne    804bb98 <fchmod@plt+0x1ac8>
lea    0x0(%esi),%esi
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80499b0 <mnt_table_next_fs@plt>
test   %eax,%eax
jne    804bcc0 <fchmod@plt+0x1bf0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80498d0 <mnt_fs_get_fstype@plt>
movl   $0x0,0x1c(%esp)
test   %eax,%eax
je     804bc58 <fchmod@plt+0x1b88>
mov    $0x8054acc,%edi
mov    %eax,%esi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804bc10 <fchmod@plt+0x1b40>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049980 <mnt_fs_to_mntent@plt>
test   %eax,%eax
jne    804bb9d <fchmod@plt+0x1acd>
movl   $0x20,(%esp)
call   80505d0 <error+0x650>
mov    0x1c(%esp),%edx
mov    (%edx),%ecx
mov    %eax,(%ebx)
mov    %ebx,0x4(%eax)
mov    %eax,%ebx
mov    %ecx,0x8(%eax)
mov    0x4(%edx),%ecx
mov    %ecx,0xc(%eax)
mov    0x8(%edx),%ecx
mov    %ecx,0x10(%eax)
mov    0xc(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    0x10(%edx),%ecx
mov    %ecx,0x18(%eax)
mov    0x14(%edx),%edx
movl   $0x805a400,(%eax)
mov    %edx,0x1c(%eax)
jmp    804bc10 <fchmod@plt+0x1b40>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x805a404
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %ecx,0x14(%esp)
jmp    804bcfd <fchmod@plt+0x1c2d>
nop
mov    0x8(%ebx),%esi
mov    $0x8054acc,%edi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804bd88 <fchmod@plt+0x1cb8>
mov    %ebp,(%esp)
call   804dab0 <fchmod@plt+0x39e0>
test   %eax,%eax
mov    %eax,%ebx
jne    804bce8 <fchmod@plt+0x1c18>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ecx
mov    %ecx,0x4(%eax)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80499f0 <ferror@plt>
test   %eax,%eax
je     804bd77 <fchmod@plt+0x1ca7>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054af0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    0x1c(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
mov    0x18(%esp),%eax
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
mov    %ebp,(%esp)
call   804d970 <fchmod@plt+0x38a0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x20,(%esp)
call   80505d0 <error+0x650>
mov    (%ebx),%edx
mov    0x14(%esp),%edi
mov    0x18(%esp),%ecx
mov    %eax,(%edi)
mov    %edx,0x8(%eax)
mov    0x4(%ebx),%edx
mov    %edi,0x4(%eax)
mov    %eax,0x14(%esp)
mov    %edx,0xc(%eax)
mov    0x8(%ebx),%edx
mov    %edx,0x10(%eax)
mov    0xc(%ebx),%edx
mov    %edx,0x14(%eax)
mov    0x10(%ebx),%edx
mov    %edx,0x18(%eax)
mov    0x14(%ebx),%edx
mov    %ecx,(%eax)
mov    %edx,0x1c(%eax)
jmp    804bcfd <fchmod@plt+0x1c2d>
nop
push   %ebx
sub    $0x18,%esp
movl   $0x8054087,0x4(%esp)
movl   $0x8054b0e,(%esp)
movl   $0x1,0x8059398
00
movl   $0x0,0x805a424
00
movl   $0x0,0x805a420
00
call   804d900 <fchmod@plt+0x3830>
test   %eax,%eax
je     804be28 <fchmod@plt+0x1d58>
mov    (%eax),%edx
test   %edx,%edx
je     804be28 <fchmod@plt+0x1d58>
add    $0x18,%esp
mov    $0x805a420,%ecx
pop    %ebx
mov    $0x8054b0e,%edx
jmp    804bcd0 <fchmod@plt+0x1c00>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054b19,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x8054b0e,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x8054087,0x4(%esp)
movl   $0x8054b34,(%esp)
movl   $0x1,0x8059394
00
movl   $0x0,0x805a444
00
movl   $0x0,0x805a440
00
call   804d900 <fchmod@plt+0x3830>
test   %eax,%eax
je     804bec8 <fchmod@plt+0x1df8>
mov    (%eax),%edx
test   %edx,%edx
je     804bec8 <fchmod@plt+0x1df8>
add    $0x18,%esp
mov    $0x805a440,%ecx
pop    %ebx
mov    $0x8054b34,%edx
jmp    804bcd0 <fchmod@plt+0x1c00>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054b19,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x8054b34,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
test   %eax,%eax
je     804bf4e <fchmod@plt+0x1e7e>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    %ebx,(%esp)
call   8049990 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4,%esp
mov    (%eax),%eax
cmp    %eax,%esi
je     804bf8f <fchmod@plt+0x1ebf>
test   %eax,%eax
jne    804bf84 <fchmod@plt+0x1eb4>
jmp    804bf8f <fchmod@plt+0x1ebf>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
lea    0x0(%esi),%esi
je     804bf8f <fchmod@plt+0x1ebf>
mov    %ebx,%eax
mov    (%eax),%ebx
call   804bf10 <fchmod@plt+0x1e40>
cmp    %ebx,%esi
jne    804bf78 <fchmod@plt+0x1ea8>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049b60 <strsignal@plt>
movl   $0x80540a1,0x4(%esp)
movl   $0x8,(%esp)
mov    %eax,0x8(%esp)
call   804ffe0 <error+0x60>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x7c,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8054b44,0x4(%esp)
movl   $0x3,(%esp)
movl   $0x0,0x80593a4
00
movl   $0x0,0x80593a0
00
call   804a070 <__lxstat64@plt>
test   %eax,%eax
je     804c020 <fchmod@plt+0x1f50>
movl   $0x1,0x80593a4
00
movl   $0x1,0x80593a8
00
add    $0x7c,%esp
ret
nop
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
jne    804c011 <fchmod@plt+0x1f41>
movl   $0x1,0x80593a0
00
movl   $0x1,0x80593a8
00
add    $0x7c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
movzbl (%eax),%eax
cmp    $0x27,%al
je     804c080 <fchmod@plt+0x1fb0>
cmp    $0x22,%al
je     804c080 <fchmod@plt+0x1fb0>
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x14,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
add    $0x1,%ebx
call   8049d60 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
sub    $0x2,%eax
mov    %eax,0x8(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
sete   %al
add    $0x14,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x80593a8
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80593a8,%eax
test   %eax,%eax
je     804c0d0 <fchmod@plt+0x2000>
mov    0x80593a4,%eax
ret
nop
sub    $0xc,%esp
call   804bfd0 <fchmod@plt+0x1f00>
mov    0x80593a4,%eax
add    $0xc,%esp
ret
jmp    804c0f0 <fchmod@plt+0x2020>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x80593a8,%eax
test   %eax,%eax
je     804c100 <fchmod@plt+0x2030>
mov    0x80593a0,%eax
ret
nop
sub    $0xc,%esp
call   804bfd0 <fchmod@plt+0x1f00>
mov    0x80593a0,%eax
add    $0xc,%esp
ret
jmp    804c120 <fchmod@plt+0x2050>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x80593a8,%edx
test   %edx,%edx
je     804c178 <fchmod@plt+0x20a8>
mov    0x80593a0,%eax
test   %eax,%eax
je     804c140 <fchmod@plt+0x2070>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1a4,0x8(%esp)
movl   $0x42,0x4(%esp)
movl   $0x8054b44,(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
js     804c136 <fchmod@plt+0x2066>
mov    %eax,(%esp)
call   804a080 <close@plt>
mov    $0x1,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804bfd0 <fchmod@plt+0x1f00>
jmp    804c12d <fchmod@plt+0x205d>
nop
mov    0x805939c,%eax
test   %eax,%eax
je     804c190 <fchmod@plt+0x20c0>
mov    $0x805a400,%eax
ret
nop
sub    $0xc,%esp
call   804bb50 <fchmod@plt+0x1a80>
mov    $0x805a400,%eax
add    $0xc,%esp
ret
jmp    804c1b0 <fchmod@plt+0x20e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8059398,%eax
test   %eax,%eax
je     804c1c0 <fchmod@plt+0x20f0>
mov    $0x805a420,%eax
ret
nop
sub    $0xc,%esp
call   804bdd0 <fchmod@plt+0x1d00>
mov    $0x805a420,%eax
add    $0xc,%esp
ret
jmp    804c1e0 <fchmod@plt+0x2110>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8059394,%eax
test   %eax,%eax
je     804c1f0 <fchmod@plt+0x2120>
mov    $0x805a440,%eax
ret
nop
sub    $0xc,%esp
call   804be70 <fchmod@plt+0x1da0>
mov    $0x805a440,%eax
add    $0xc,%esp
ret
jmp    804c210 <fchmod@plt+0x2140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805939c,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     804c280 <fchmod@plt+0x21b0>
mov    0x805a400,%ebx
cmp    $0x805a400,%ebx
jne    804c268 <fchmod@plt+0x2198>
jmp    804c26c <fchmod@plt+0x219c>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
je     804c278 <fchmod@plt+0x21a8>
mov    %esi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
je     804c278 <fchmod@plt+0x21a8>
mov    (%ebx),%ebx
cmp    $0x805a400,%ebx
je     804c26c <fchmod@plt+0x219c>
test   %ebx,%ebx
jne    804c238 <fchmod@plt+0x2168>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
call   804bb50 <fchmod@plt+0x1a80>
jmp    804c222 <fchmod@plt+0x2152>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805939c,%eax
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebx
test   %eax,%eax
je     804c320 <fchmod@plt+0x2250>
test   %ebx,%ebx
mov    $0x805a400,%eax
cmove  %eax,%ebx
mov    0x4(%ebx),%esi
cmp    %eax,%esi
je     804c328 <fchmod@plt+0x2258>
test   %esi,%esi
je     804c328 <fchmod@plt+0x2258>
mov    %esi,%ebx
jmp    804c2cf <fchmod@plt+0x21ff>
mov    0x4(%ebx),%ebx
cmp    $0x805a400,%ebx
je     804c2ff <fchmod@plt+0x222f>
test   %ebx,%ebx
je     804c2ff <fchmod@plt+0x222f>
mov    %edi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c2c0 <fchmod@plt+0x21f0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%esi
cmp    $0x805a400,%esi
je     804c328 <fchmod@plt+0x2258>
test   %esi,%esi
je     804c328 <fchmod@plt+0x2258>
mov    %edi,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c2f0 <fchmod@plt+0x2220>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804bb50 <fchmod@plt+0x1a80>
jmp    804c2a7 <fchmod@plt+0x21d7>
nop
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    804c340 <fchmod@plt+0x2270>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x805939c,%eax
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
test   %eax,%eax
je     804c3a8 <fchmod@plt+0x22d8>
test   %ebx,%ebx
mov    $0x805a400,%eax
cmove  %eax,%ebx
mov    0x4(%ebx),%ebx
cmp    %eax,%ebx
jne    804c38e <fchmod@plt+0x22be>
jmp    804c392 <fchmod@plt+0x22c2>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
je     804c3a0 <fchmod@plt+0x22d0>
mov    0x4(%ebx),%ebx
cmp    $0x805a400,%ebx
je     804c392 <fchmod@plt+0x22c2>
test   %ebx,%ebx
jne    804c370 <fchmod@plt+0x22a0>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
call   804bb50 <fchmod@plt+0x1a80>
jmp    804c356 <fchmod@plt+0x2286>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805939c,%eax
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebx
test   %eax,%eax
je     804c470 <fchmod@plt+0x23a0>
test   %ebx,%ebx
mov    $0x805a400,%eax
cmove  %eax,%ebx
mov    0x4(%ebx),%esi
cmp    %eax,%esi
je     804c480 <fchmod@plt+0x23b0>
test   %esi,%esi
je     804c480 <fchmod@plt+0x23b0>
mov    %esi,%ebx
jmp    804c3ff <fchmod@plt+0x232f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ebx
cmp    $0x805a400,%ebx
je     804c437 <fchmod@plt+0x2367>
test   %ebx,%ebx
je     804c437 <fchmod@plt+0x2367>
mov    %edi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c3f0 <fchmod@plt+0x2320>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049990 <free@plt>
mov    0x4(%esi),%esi
cmp    $0x805a400,%esi
je     804c480 <fchmod@plt+0x23b0>
test   %esi,%esi
je     804c480 <fchmod@plt+0x23b0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80504b0 <error+0x530>
test   %eax,%eax
mov    %eax,%ebx
je     804c420 <fchmod@plt+0x2350>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c420 <fchmod@plt+0x2350>
mov    %ebx,(%esp)
call   8049990 <free@plt>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804bb50 <fchmod@plt+0x1a80>
jmp    804c3cb <fchmod@plt+0x22fb>
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8059394,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     804c4f0 <fchmod@plt+0x2420>
mov    0x805a440,%ebx
cmp    $0x805a440,%ebx
jne    804c4d5 <fchmod@plt+0x2405>
jmp    804c4d9 <fchmod@plt+0x2409>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
je     804c4e8 <fchmod@plt+0x2418>
mov    (%ebx),%ebx
cmp    $0x805a440,%ebx
je     804c4d9 <fchmod@plt+0x2409>
test   %ebx,%ebx
jne    804c4b8 <fchmod@plt+0x23e8>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
call   804be70 <fchmod@plt+0x1da0>
jmp    804c4a2 <fchmod@plt+0x23d2>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805939c,%eax
mov    0x20(%esp),%edi
test   %eax,%eax
je     804c578 <fchmod@plt+0x24a8>
mov    0x805a404,%ebx
cmp    $0x805a400,%ebx
je     804c580 <fchmod@plt+0x24b0>
test   %ebx,%ebx
je     804c580 <fchmod@plt+0x24b0>
xor    %esi,%esi
jmp    804c534 <fchmod@plt+0x2464>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804c568 <fchmod@plt+0x2498>
mov    %edi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
je     804c55a <fchmod@plt+0x248a>
mov    %edi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c55d <fchmod@plt+0x248d>
add    $0x1,%esi
mov    0x4(%ebx),%ebx
cmp    $0x805a400,%ebx
jne    804c530 <fchmod@plt+0x2460>
xor    %eax,%eax
cmp    $0x1,%esi
sete   %al
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804bb50 <fchmod@plt+0x1a80>
jmp    804c513 <fchmod@plt+0x2443>
nop
xor    %eax,%eax
jmp    804c570 <fchmod@plt+0x24a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
test   %edx,%edx
je     804c640 <fchmod@plt+0x2570>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049d60 <strlen@plt>
mov    %eax,%edi
mov    0x805939c,%eax
test   %eax,%eax
je     804c650 <fchmod@plt+0x2580>
mov    0x805a400,%ebx
test   %ebx,%ebx
je     804c640 <fchmod@plt+0x2570>
cmp    $0x805a400,%ebx
jne    804c5e6 <fchmod@plt+0x2516>
jmp    804c640 <fchmod@plt+0x2570>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
cmp    $0x805a400,%ebx
je     804c640 <fchmod@plt+0x2570>
test   %ebx,%ebx
je     804c640 <fchmod@plt+0x2570>
mov    0x14(%ebx),%esi
test   %esi,%esi
je     804c5d8 <fchmod@plt+0x2508>
movl   $0x80540ff,0x4(%esp)
mov    %esi,(%esp)
call   80498c0 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804c5d8 <fchmod@plt+0x2508>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x5(%ebp),%eax
mov    %eax,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    804c5d8 <fchmod@plt+0x2508>
cmp    %esi,%ebp
je     804c628 <fchmod@plt+0x2558>
cmpb   $0x2c,-0x1(%ebp)
jne    804c5d8 <fchmod@plt+0x2508>
movzbl 0x5(%ebp,%edi,1),%eax
cmp    $0x2c,%al
je     804c635 <fchmod@plt+0x2565>
test   %al,%al
jne    804c5d8 <fchmod@plt+0x2508>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804bb50 <fchmod@plt+0x1a80>
jmp    804c5be <fchmod@plt+0x24ee>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8059398,%eax
test   %eax,%eax
je     804c7c0 <fchmod@plt+0x26f0>
mov    0x805a420,%ebx
cmp    $0x805a420,%ebx
jne    804c6e6 <fchmod@plt+0x2616>
jmp    804c75a <fchmod@plt+0x268a>
nop
mov    $0x8054b4e,%edi
mov    %ebp,%esi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804c7a0 <fchmod@plt+0x26d0>
mov    $0x8054b55,%edi
mov    %ebp,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804c768 <fchmod@plt+0x2698>
mov    0x30(%esp),%eax
add    $0x5,%ebp
mov    %eax,(%esp)
call   8052d10 <error+0x2d90>
test   %eax,%eax
mov    %eax,%edi
je     804c6dc <fchmod@plt+0x260c>
mov    %edi,%edx
mov    %ebp,%eax
call   804c050 <fchmod@plt+0x1f80>
mov    %edi,(%esp)
mov    %eax,%esi
call   8049990 <free@plt>
test   %esi,%esi
jne    804c71c <fchmod@plt+0x264c>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
je     804c75a <fchmod@plt+0x268a>
test   %ebx,%ebx
je     804c75a <fchmod@plt+0x268a>
mov    0xc(%ebx),%esi
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c728 <fchmod@plt+0x2658>
mov    0x8(%ebx),%ebp
mov    0x30(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c688 <fchmod@plt+0x25b8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8050530 <error+0x5b0>
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80498e0 <strcmp@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049990 <free@plt>
test   %edi,%edi
je     804c701 <fchmod@plt+0x2631>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
jne    804c6e6 <fchmod@plt+0x2616>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80504b0 <error+0x530>
mov    %eax,%edi
mov    0x30(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80498e0 <strcmp@plt>
mov    %edi,(%esp)
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%esi
call   8049990 <free@plt>
jmp    804c6d8 <fchmod@plt+0x2608>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
add    $0x6,%ebp
mov    %eax,(%esp)
call   8052d00 <error+0x2d80>
test   %eax,%eax
mov    %eax,%edi
jne    804c6c5 <fchmod@plt+0x25f5>
jmp    804c6dc <fchmod@plt+0x260c>
xchg   %ax,%ax
call   804bdd0 <fchmod@plt+0x1d00>
jmp    804c674 <fchmod@plt+0x25a4>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x8059398,%eax
mov    0x20(%esp),%esi
test   %eax,%eax
je     804c8c0 <fchmod@plt+0x27f0>
mov    0x805a420,%ebx
test   %ebx,%ebx
je     804c830 <fchmod@plt+0x2760>
cmp    $0x805a420,%ebx
jne    804c80e <fchmod@plt+0x273e>
jmp    804c830 <fchmod@plt+0x2760>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
je     804c830 <fchmod@plt+0x2760>
test   %ebx,%ebx
je     804c830 <fchmod@plt+0x2760>
mov    %esi,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c800 <fchmod@plt+0x2730>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8050530 <error+0x5b0>
mov    0x805a420,%ebx
test   %ebx,%ebx
mov    %eax,%edi
je     804c8ae <fchmod@plt+0x27de>
cmp    $0x805a420,%ebx
je     804c8ae <fchmod@plt+0x27de>
mov    0xc(%ebx),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c870 <fchmod@plt+0x27a0>
mov    %edi,(%esp)
call   8049990 <free@plt>
mov    %ebx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
call   8050530 <error+0x5b0>
test   %eax,%eax
mov    %eax,%esi
je     804c898 <fchmod@plt+0x27c8>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c898 <fchmod@plt+0x27c8>
mov    %esi,(%esp)
call   8049990 <free@plt>
jmp    804c85f <fchmod@plt+0x278f>
mov    %esi,(%esp)
call   8049990 <free@plt>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
je     804c8ae <fchmod@plt+0x27de>
test   %ebx,%ebx
jne    804c84c <fchmod@plt+0x277c>
mov    %edi,(%esp)
call   8049990 <free@plt>
xor    %eax,%eax
jmp    804c869 <fchmod@plt+0x2799>
lea    0x0(%esi),%esi
call   804bdd0 <fchmod@plt+0x1d00>
jmp    804c7e7 <fchmod@plt+0x2717>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8059398,%eax
mov    0x30(%esp),%ebp
test   %eax,%eax
je     804c9a8 <fchmod@plt+0x28d8>
mov    0x805a420,%ebx
cmp    $0x805a420,%ebx
je     804c998 <fchmod@plt+0x28c8>
test   %ebx,%ebx
mov    %ebx,%esi
jne    804c916 <fchmod@plt+0x2846>
jmp    804c998 <fchmod@plt+0x28c8>
lea    0x0(%esi),%esi
mov    (%esi),%esi
cmp    $0x805a420,%esi
je     804c968 <fchmod@plt+0x2898>
test   %esi,%esi
je     804c968 <fchmod@plt+0x2898>
mov    %ebp,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804c908 <fchmod@plt+0x2838>
mov    %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80504b0 <error+0x530>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   80498e0 <strcmp@plt>
mov    %esi,(%esp)
test   %eax,%eax
je     804c9b2 <fchmod@plt+0x28e2>
call   8049990 <free@plt>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
je     804c998 <fchmod@plt+0x28c8>
test   %ebx,%ebx
je     804c998 <fchmod@plt+0x28c8>
mov    0x8(%ebx),%eax
mov    $0x8054b4e,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804c95a <fchmod@plt+0x288a>
mov    $0x8054b55,%edi
mov    %eax,%esi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804c938 <fchmod@plt+0x2868>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
jne    804c964 <fchmod@plt+0x2894>
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804bdd0 <fchmod@plt+0x1d00>
jmp    804c8e8 <fchmod@plt+0x2818>
call   8049990 <free@plt>
mov    %ebx,%eax
jmp    804c92b <fchmod@plt+0x285b>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x8059398,%eax
test   %eax,%eax
je     804ca38 <fchmod@plt+0x2968>
mov    0x805a420,%ebx
cmp    $0x805a420,%ebx
je     804ca1e <fchmod@plt+0x294e>
test   %ebx,%ebx
je     804ca1e <fchmod@plt+0x294e>
mov    $0x8054b55,%ebp
jmp    804c9f4 <fchmod@plt+0x2924>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804ca1e <fchmod@plt+0x294e>
mov    0x8(%ebx),%eax
mov    %ebp,%edi
mov    $0x5,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804ca14 <fchmod@plt+0x2944>
mov    0x20(%esp),%edx
add    $0x5,%eax
call   804c050 <fchmod@plt+0x1f80>
test   %eax,%eax
jne    804ca28 <fchmod@plt+0x2958>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
jne    804c9f0 <fchmod@plt+0x2920>
add    $0xc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0xc,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804bdd0 <fchmod@plt+0x1d00>
jmp    804c9d0 <fchmod@plt+0x2900>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xc,%esp
mov    0x8059398,%eax
test   %eax,%eax
je     804cab8 <fchmod@plt+0x29e8>
mov    0x805a420,%ebx
cmp    $0x805a420,%ebx
je     804ca9e <fchmod@plt+0x29ce>
test   %ebx,%ebx
je     804ca9e <fchmod@plt+0x29ce>
mov    $0x8054b4e,%ebp
jmp    804ca74 <fchmod@plt+0x29a4>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804ca9e <fchmod@plt+0x29ce>
mov    0x8(%ebx),%eax
mov    %ebp,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804ca94 <fchmod@plt+0x29c4>
mov    0x20(%esp),%edx
add    $0x6,%eax
call   804c050 <fchmod@plt+0x1f80>
test   %eax,%eax
jne    804caa8 <fchmod@plt+0x29d8>
mov    (%ebx),%ebx
cmp    $0x805a420,%ebx
jne    804ca70 <fchmod@plt+0x29a0>
add    $0xc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0xc,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804bdd0 <fchmod@plt+0x1d00>
jmp    804ca50 <fchmod@plt+0x2980>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     804cb88 <fchmod@plt+0x2ab8>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8052c70 <error+0x2cf0>
test   %eax,%eax
jne    804cb88 <fchmod@plt+0x2ab8>
mov    0x18(%esp),%eax
test   %eax,%eax
je     804cb98 <fchmod@plt+0x2ac8>
mov    $0x8054b5b,%edi
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804cb70 <fchmod@plt+0x2aa0>
mov    $0x5,%ecx
mov    $0x8054b61,%edi
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %ebx,%ebx
cmp    %dl,%cl
je     804cb58 <fchmod@plt+0x2a88>
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    %ebx,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804c9c0 <fchmod@plt+0x28f0>
mov    %eax,%ebx
mov    0x18(%esp),%eax
jmp    804cb38 <fchmod@plt+0x2a68>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804ca40 <fchmod@plt+0x2970>
mov    %eax,%ebx
mov    0x18(%esp),%eax
jmp    804cb38 <fchmod@plt+0x2a68>
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80504b0 <error+0x530>
mov    %eax,(%esp)
mov    %eax,%esi
call   804c8d0 <fchmod@plt+0x2800>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049990 <free@plt>
test   %edi,%edi
mov    %edi,%eax
jne    804cb4e <fchmod@plt+0x2a7e>
mov    %ebx,(%esp)
call   804c8d0 <fchmod@plt+0x2800>
jmp    804cb4e <fchmod@plt+0x2a7e>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x8059390,%eax
test   %eax,%eax
jne    804cbe0 <fchmod@plt+0x2b10>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x8059308,%eax
mov    %eax,(%esp)
call   804a080 <close@plt>
movl   $0x8054b66,(%esp)
movl   $0xffffffff,0x8059308
ff
call   8049b20 <unlink@plt>
movl   $0x0,0x8059390
00
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
mov    0x805938c,%ebx
mov    %gs:0x14,%eax
mov    %eax,0xec(%esp)
xor    %eax,%eax
test   %ebx,%ebx
je     804d040 <fchmod@plt+0x2f70>
call   8049c40 <getpid@plt>
lea    0xcd(%esp),%esi
movl   $0x8054b71,0xc(%esp)
movl   $0x1f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
call   804a0c0 <__sprintf_chk@plt>
movl   $0x180,0x8(%esp)
movl   $0x41,0x4(%esp)
mov    %esi,(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804d0c0 <fchmod@plt+0x2ff0>
mov    %ebx,(%esp)
lea    0x40(%esp),%ebp
call   804a080 <close@plt>
lea    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049a60 <gettimeofday@plt>
mov    0x8059390,%eax
addl   $0x1e,0x30(%esp)
movl   $0x0,0x28(%esp)
movl   $0x4c4b40,0x2c(%esp)
jmp    804cd6b <fchmod@plt+0x2c9b>
movl   $0x1,0x8059390
00
movl   $0x1,0x4(%esp)
movl   $0x8054b66,(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
mov    %eax,0x8059308
js     804cf28 <fchmod@plt+0x2e58>
xor    %ecx,%ecx
mov    $0x1,%edx
test   %ebx,%ebx
mov    %dx,0x40(%esp)
mov    %cx,0x42(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x50(%esp)
jne    804ce10 <fchmod@plt+0x2d40>
mov    0x8059308,%eax
mov    %ebp,0x8(%esp)
movl   $0xd,0x4(%esp)
mov    %eax,(%esp)
call   8049de0 <fcntl@plt>
cmp    $0xffffffff,%eax
je     804ced0 <fchmod@plt+0x2e00>
mov    %esi,(%esp)
call   8049b20 <unlink@plt>
mov    0x8059390,%eax
test   %eax,%eax
jne    804cfc0 <fchmod@plt+0x2ef0>
movl   $0x8054b66,0x4(%esp)
mov    %esi,(%esp)
call   8049e80 <link@plt>
mov    %eax,%ebx
call   8049e70 <__errno_location@plt>
test   %ebx,%ebx
mov    %eax,%edi
mov    (%eax),%edx
je     804ccd8 <fchmod@plt+0x2c08>
cmp    $0x11,%edx
mov    %edx,0x1c(%esp)
je     804cce2 <fchmod@plt+0x2c12>
mov    %ebx,%eax
shr    $0x1f,%eax
test   %al,%al
je     804cce2 <fchmod@plt+0x2c12>
mov    %esi,(%esp)
call   8049b20 <unlink@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054c58,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x1c(%esp),%edx
movl   $0x8054b66,0x8(%esp)
movl   $0x10,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804cce2 <fchmod@plt+0x2c12>
lea    0x0(%esi,%eiz,1),%esi
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049a60 <gettimeofday@plt>
mov    0x38(%esp),%eax
mov    0x30(%esp),%edx
cmp    %edx,%eax
jge    804ce90 <fchmod@plt+0x2dc0>
sub    %eax,%edx
mov    %edx,(%esp)
call   8049aa0 <alarm@plt>
mov    0x8059308,%eax
mov    %ebp,0x8(%esp)
movl   $0xe,0x4(%esp)
mov    %eax,(%esp)
call   8049de0 <fcntl@plt>
cmp    $0xffffffff,%eax
je     804cfe0 <fchmod@plt+0x2f10>
movl   $0x0,(%esp)
call   8049aa0 <alarm@plt>
lea    0x28(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049fe0 <nanosleep@plt>
mov    0x8059308,%eax
mov    %eax,(%esp)
call   804a080 <close@plt>
jmp    804cd66 <fchmod@plt+0x2c96>
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049b20 <unlink@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054cc8,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x8054b66,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804ce7c <fchmod@plt+0x2dac>
xchg   %ax,%ax
mov    0x805a46c,%eax
test   %eax,%eax
je     804cd5e <fchmod@plt+0x2c8e>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054b7e,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x8054b66,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804cd5e <fchmod@plt+0x2c8e>
xchg   %ax,%ax
mov    (%edi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049a60 <gettimeofday@plt>
cmpl   $0x2,(%edi)
jne    804cf60 <fchmod@plt+0x2e90>
mov    0x30(%esp),%eax
cmp    %eax,0x38(%esp)
jge    804cf60 <fchmod@plt+0x2e90>
movl   $0x0,0x8059390
00
jmp    804cd73 <fchmod@plt+0x2ca3>
mov    %esi,(%esp)
call   8049b20 <unlink@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054c90,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x1c(%esp),%edx
movl   $0x8054b66,0x8(%esp)
movl   $0x10,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804cd03 <fchmod@plt+0x2c33>
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
xor    %gs:0x14,%eax
jne    804d12d <fchmod@plt+0x305d>
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    (%edi),%ebx
mov    %esi,(%esp)
call   8049b20 <unlink@plt>
cmpl   $0x4,(%edi)
je     804d10a <fchmod@plt+0x303a>
mov    %ebx,(%esp)
call   8049cc0 <strerror@plt>
mov    %eax,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ba5,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x8054b66,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804ce5c <fchmod@plt+0x2d8c>
lea    0x0(%esi),%esi
lea    0x44(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    $0x804bfa0,%ebp
movl   $0x804bfa0,0x40(%esp)
lea    0x40(%esp),%edi
movl   $0x0,0xc4(%esp)
00
call   8049df0 <sigfillset@plt>
jmp    804d093 <fchmod@plt+0x2fc3>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804bb40,%eax
cmp    $0xe,%ebx
cmovne %ebp,%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x40(%esp)
call   804a000 <sigaction@plt>
add    $0x1,%ebx
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049b30 <sigismember@plt>
cmp    $0xffffffff,%eax
je     804d0ac <fchmod@plt+0x2fdc>
cmp    $0x11,%ebx
jne    804d070 <fchmod@plt+0x2fa0>
movl   $0x1,0x805938c
00
jmp    804cc47 <fchmod@plt+0x2b77>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054c20,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049ac0 <dcgettext@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
jmp    804cc99 <fchmod@plt+0x2bc9>
movl   $0x5,0x8(%esp)
movl   $0x8054b9b,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %eax,%ebx
jmp    804cffd <fchmod@plt+0x2f2d>
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
test   %esi,%esi
je     804d1c0 <fchmod@plt+0x30f0>
mov    0x20(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80498c0 <strstr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d1c0 <fchmod@plt+0x30f0>
movl   $0x2c,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <strchr@plt>
cmp    %ebx,%eax
jbe    804d1a8 <fchmod@plt+0x30d8>
test   %eax,%eax
je     804d1a8 <fchmod@plt+0x30d8>
sub    %ebx,%eax
test   %edi,%edi
je     804d188 <fchmod@plt+0x30b8>
mov    %eax,(%edi)
cmp    %esi,%ebx
je     804d192 <fchmod@plt+0x30c2>
cmpb   $0x2c,-0x1(%ebx)
jne    804d1c0 <fchmod@plt+0x30f0>
movzbl (%ebx,%eax,1),%eax
cmp    $0x2c,%al
jne    804d1b8 <fchmod@plt+0x30e8>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049d60 <strlen@plt>
jmp    804d182 <fchmod@plt+0x30b2>
lea    0x0(%esi),%esi
test   %al,%al
je     804d19a <fchmod@plt+0x30ca>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
mov    0x20(%esp),%ebx
mov    %esi,(%esp)
call   8049d60 <strlen@plt>
mov    %eax,%edi
test   %ebx,%ebx
je     804d219 <fchmod@plt+0x3149>
cmpb   $0x0,(%ebx)
je     804d219 <fchmod@plt+0x3149>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    804d212 <fchmod@plt+0x3142>
jmp    804d222 <fchmod@plt+0x3152>
nop
add    $0x1,%ebx
cmp    $0x2c,%dl
xchg   %ax,%ax
je     804d1e8 <fchmod@plt+0x3118>
movzbl (%ebx),%edx
test   %dl,%dl
jne    804d208 <fchmod@plt+0x3138>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
add    %edi,%ebx
movzbl (%ebx),%edx
cmp    $0x2c,%dl
je     804d249 <fchmod@plt+0x3179>
test   %dl,%dl
je     804d249 <fchmod@plt+0x3179>
mov    %ebx,%eax
jmp    804d23c <fchmod@plt+0x316c>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     804d247 <fchmod@plt+0x3177>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2c,%dl
jne    804d238 <fchmod@plt+0x3168>
sub    %ebx,%eax
mov    %ebx,0x20(%esp)
mov    %eax,0x24(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8050030 <error+0xb0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0x80593a8,%ebx
test   %ebx,%ebx
je     804d290 <fchmod@plt+0x31c0>
mov    0x80593a4,%ecx
test   %ecx,%ecx
je     804d29f <fchmod@plt+0x31cf>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804bfd0 <fchmod@plt+0x1f00>
mov    0x80593a4,%ecx
test   %ecx,%ecx
jne    804d27e <fchmod@plt+0x31ae>
call   804c120 <fchmod@plt+0x2050>
test   %eax,%eax
je     804d27e <fchmod@plt+0x31ae>
call   804cc20 <fchmod@plt+0x2b50>
movl   $0x8054087,0x4(%esp)
movl   $0x8054b44,(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
call   804d900 <fchmod@plt+0x3830>
test   %eax,%eax
je     804d5e8 <fchmod@plt+0x3518>
mov    (%eax),%edx
test   %edx,%edx
je     804d5e8 <fchmod@plt+0x3518>
lea    0x20(%esp),%esi
mov    $0x8054b44,%edx
mov    %esi,%ecx
call   804bcd0 <fchmod@plt+0x1c00>
mov    0xc0(%esp),%ebp
test   %ebp,%ebp
je     804d528 <fchmod@plt+0x3458>
mov    0x24(%esp),%ebx
test   %ebx,%ebx
setne  %dl
je     804d528 <fchmod@plt+0x3458>
cmp    %esi,%ebx
jne    804d33a <fchmod@plt+0x326a>
jmp    804d518 <fchmod@plt+0x3448>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
setne  %al
cmp    %esi,%ebx
mov    %eax,%edx
je     804d518 <fchmod@plt+0x3448>
test   %al,%al
je     804d528 <fchmod@plt+0x3458>
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804d320 <fchmod@plt+0x3250>
cmp    %esi,%ebx
je     804d528 <fchmod@plt+0x3458>
mov    0xc4(%esp),%edi
test   %edi,%edi
je     804d7c9 <fchmod@plt+0x36f9>
mov    0xc4(%esp),%eax
mov    0xc(%ebx),%edi
mov    0x4(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80498e0 <strcmp@plt>
test   %eax,%eax
jne    804d7a7 <fchmod@plt+0x36d7>
mov    0xc4(%esp),%eax
mov    0x14(%ebx),%edi
mov    0xc(%eax),%edx
test   %edi,%edi
sete   %al
test   %edx,%edx
je     804d8ac <fchmod@plt+0x37dc>
test   %al,%al
jne    804d8e6 <fchmod@plt+0x3816>
mov    %edi,(%esp)
mov    %edx,0x18(%esp)
call   8049d60 <strlen@plt>
mov    0x18(%esp),%edx
test   %edx,%edx
mov    %eax,%ebp
je     804d89a <fchmod@plt+0x37ca>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8049d60 <strlen@plt>
lea    0x2(%ebp,%eax,1),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x18(%esp)
call   80505d0 <error+0x650>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%ecx
cmpb   $0x0,(%edx)
mov    %eax,%ebp
jne    804d847 <fchmod@plt+0x3777>
movb   $0x0,0x0(%ebp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x80540ff,(%esp)
call   804d140 <fchmod@plt+0x3070>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804d43f <fchmod@plt+0x336f>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x80540ff,(%esp)
call   804d140 <fchmod@plt+0x3070>
mov    0x18(%esp),%edx
test   %eax,%eax
je     804d85c <fchmod@plt+0x378c>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    %ebp,0x14(%ebx)
lea    0x0(%esi),%esi
movl   $0x8054d6d,0x4(%esp)
movl   $0x8054bc1,(%esp)
call   804d900 <fchmod@plt+0x3830>
test   %eax,%eax
mov    %eax,%edi
je     804d698 <fchmod@plt+0x35c8>
mov    (%eax),%eax
test   %eax,%eax
je     804d698 <fchmod@plt+0x35c8>
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804d638 <fchmod@plt+0x3568>
cmp    %esi,%ebx
jne    804d4a6 <fchmod@plt+0x33d6>
jmp    804d638 <fchmod@plt+0x3568>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
cmp    %esi,%ebx
je     804d638 <fchmod@plt+0x3568>
test   %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
je     804d638 <fchmod@plt+0x3568>
lea    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804d9b0 <fchmod@plt+0x38e0>
cmp    $0x1,%eax
jne    804d490 <fchmod@plt+0x33c0>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054bcf,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x8054bc1,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
mov    %esi,%eax
call   804bf60 <fchmod@plt+0x1e90>
movl   $0x8054bc1,(%esp)
call   8049b20 <unlink@plt>
call   804cbd0 <fchmod@plt+0x2b00>
jmp    804d27e <fchmod@plt+0x31ae>
test   %dl,%dl
lea    0x0(%esi),%esi
jne    804d354 <fchmod@plt+0x3284>
xchg   %ax,%ax
mov    0xc4(%esp),%ecx
test   %ecx,%ecx
je     804d450 <fchmod@plt+0x3380>
movl   $0x20,(%esp)
call   80505d0 <error+0x650>
mov    %eax,%ebx
mov    0xc4(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,0x8(%ebx)
mov    0xc4(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,0xc(%ebx)
mov    0xc4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,0x10(%ebx)
mov    0xc4(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,0x14(%ebx)
mov    0xc4(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x18(%ebx)
mov    0xc4(%esp),%eax
mov    0x14(%eax),%eax
mov    %esi,(%ebx)
mov    %eax,0x1c(%ebx)
mov    0x24(%esp),%eax
test   %eax,%eax
je     804d7e1 <fchmod@plt+0x3711>
mov    %eax,0x4(%ebx)
mov    0x24(%esp),%eax
mov    %ebx,(%eax)
mov    0x20(%esp),%edx
mov    %ebx,0x24(%esp)
test   %edx,%edx
jne    804d450 <fchmod@plt+0x3380>
mov    %ebx,0x20(%esp)
jmp    804d450 <fchmod@plt+0x3380>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
lea    0x20(%esp),%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054d04,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x8054b44,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
jmp    804d4fb <fchmod@plt+0x342b>
lea    0x0(%esi),%esi
mov    %esi,%eax
call   804bf60 <fchmod@plt+0x1e90>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049960 <fflush@plt>
test   %eax,%eax
je     804d6c0 <fchmod@plt+0x35f0>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054be4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x8054bc1,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
jmp    804d502 <fchmod@plt+0x3432>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054d04,0x4(%esp)
mov    %eax,%ebx
jmp    804d4db <fchmod@plt+0x340b>
xchg   %ax,%ax
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049ea0 <fileno@plt>
movl   $0x1a4,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   804a0d0 <fchmod@plt>
test   %eax,%eax
js     804d7e9 <fchmod@plt+0x3719>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8054b44,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
test   %eax,%eax
jne    804d724 <fchmod@plt+0x3654>
mov    0x5c(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
call   8049d70 <fchown@plt>
test   %eax,%eax
js     804d8bd <fchmod@plt+0x37ed>
mov    %edi,(%esp)
call   804d970 <fchmod@plt+0x38a0>
movl   $0x8054b44,0x4(%esp)
movl   $0x8054bc1,(%esp)
call   8049d20 <rename@plt>
test   %eax,%eax
jns    804d502 <fchmod@plt+0x3432>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054c02,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x8054b44,0x10(%esp)
movl   $0x8054bc1,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
jmp    804d502 <fchmod@plt+0x3432>
mov    %edi,(%esp)
call   8049990 <free@plt>
mov    0xc4(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,0xc(%ebx)
jmp    804d450 <fchmod@plt+0x3380>
mov    0x4(%ebx),%eax
mov    (%ebx),%edx
mov    %edx,(%eax)
mov    (%ebx),%edx
mov    %eax,0x4(%edx)
mov    %ebx,%eax
call   804bf10 <fchmod@plt+0x1e40>
jmp    804d450 <fchmod@plt+0x3380>
mov    %esi,0x4(%ebx)
jmp    804d5c9 <fchmod@plt+0x34f9>
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054d2c,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
movl   $0x8054bc1,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
jmp    804d502 <fchmod@plt+0x3432>
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049e90 <strncpy@plt>
jmp    804d3fb <fchmod@plt+0x332b>
cmpb   $0x0,0x0(%ebp)
mov    %ebp,%edi
je     804d875 <fchmod@plt+0x37a5>
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%ebp,%ecx,1),%eax
lea    0x1(%eax),%edi
movb   $0x2c,(%eax)
mov    0x40(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
mov    %ecx,0x18(%esp)
call   80499e0 <memcpy@plt>
mov    0x18(%esp),%ecx
movb   $0x0,(%edi,%ecx,1)
jmp    804d43f <fchmod@plt+0x336f>
add    $0x2,%ebp
mov    %ebp,(%esp)
call   80505d0 <error+0x650>
mov    %eax,%ebp
jmp    804d3f7 <fchmod@plt+0x3327>
test   %al,%al
je     804d3ae <fchmod@plt+0x32de>
xor    %eax,%eax
xor    %ebp,%ebp
jmp    804d442 <fchmod@plt+0x3372>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054d4c,0x4(%esp)
mov    %eax,%ebx
jmp    804d811 <fchmod@plt+0x3741>
mov    %edx,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%ebp
mov    0x14(%ebx),%eax
jmp    804d442 <fchmod@plt+0x3372>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x14,(%esp)
mov    0x20(%esp),%esi
call   80505d0 <error+0x650>
movl   $0x3f,(%esp)
mov    %eax,%ebx
call   804a050 <umask@plt>
mov    %esi,(%esp)
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   8049bd0 <fopen64@plt>
mov    %eax,(%ebx)
mov    %edi,(%esp)
call   804a050 <umask@plt>
mov    %esi,(%esp)
call   8050640 <error+0x6c0>
mov    (%ebx),%edx
movl   $0x0,0x10(%ebx)
movl   $0x0,0x8(%ebx)
mov    %eax,0x4(%ebx)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    %eax,0xc(%ebx)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804d9a8 <fchmod@plt+0x38d8>
mov    (%ebx),%eax
test   %eax,%eax
je     804d98a <fchmod@plt+0x38ba>
mov    %eax,(%esp)
call   8049a30 <fclose@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049990 <free@plt>
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
movl   $0x2,0x8(%esp)
mov    0x54(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049b90 <fseek@plt>
mov    $0x1,%edx
test   %eax,%eax
je     804d9f0 <fchmod@plt+0x3920>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8052db0 <error+0x2e30>
mov    %eax,%ebp
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8052db0 <error+0x2e30>
mov    %eax,%edi
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8052db0 <error+0x2e30>
mov    $0x8054d6c,%edx
mov    %eax,0x28(%esp)
mov    0xc(%ebx),%eax
test   %eax,%eax
je     804da2e <fchmod@plt+0x395e>
mov    %eax,(%esp)
call   8052db0 <error+0x2e30>
mov    %eax,%edx
mov    0x14(%ebx),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x20(%esp)
mov    0x10(%ebx),%eax
mov    %edx,0x18(%esp)
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
movl   $0x8054d6f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
mov    %ebp,(%esp)
mov    %eax,%esi
call   8049990 <free@plt>
mov    %edi,(%esp)
call   8049990 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     804da9f <fchmod@plt+0x39cf>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   8049990 <free@plt>
shr    $0x1f,%esi
add    $0x3c,%esp
mov    %esi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0xc(%ebx),%ebp
test   %ebp,%ebp
jne    804dd69 <fchmod@plt+0x3c99>
cmpl   $0x4,0x10(%ebx)
jg     804dd69 <fchmod@plt+0x3c99>
lea    0x2c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
movl   $0x1000,0x4(%esp)
movl   $0x80593e0,(%esp)
mov    %eax,0x8(%esp)
call   8049a00 <fgets@plt>
test   %eax,%eax
je     804dd69 <fchmod@plt+0x3c99>
addl   $0x1,0x8(%ebx)
movl   $0xa,0x4(%esp)
movl   $0x80593e0,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     804dd81 <fchmod@plt+0x3cb1>
movb   $0x0,(%eax)
mov    0x2c(%esp),%edx
lea    -0x1(%edx),%eax
cmp    $0x80593e0,%eax
mov    %eax,0x2c(%esp)
jb     804db3d <fchmod@plt+0x3a6d>
cmpb   $0xd,-0x1(%edx)
je     804dd78 <fchmod@plt+0x3ca8>
movzbl 0x80593e0,%edx
mov    $0x80593e0,%eax
cmp    $0x9,%dl
jne    804db5b <fchmod@plt+0x3a8b>
xchg   %ax,%ax
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     804db50 <fchmod@plt+0x3a80>
cmp    $0x20,%dl
je     804db50 <fchmod@plt+0x3a80>
cmp    $0x23,%dl
mov    %eax,0x2c(%esp)
je     804dad8 <fchmod@plt+0x3a08>
test   %dl,%dl
je     804dad8 <fchmod@plt+0x3a08>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8052f10 <error+0x2f90>
mov    %eax,0x80593c0
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    804dba3 <fchmod@plt+0x3ad3>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     804db98 <fchmod@plt+0x3ac8>
cmp    $0x20,%dl
je     804db98 <fchmod@plt+0x3ac8>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8052f10 <error+0x2f90>
mov    %eax,0x80593c4
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    804dbdb <fchmod@plt+0x3b0b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     804dbd0 <fchmod@plt+0x3b00>
cmp    $0x20,%dl
je     804dbd0 <fchmod@plt+0x3b00>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8052f10 <error+0x2f90>
mov    %eax,0x80593c8
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
jne    804dc13 <fchmod@plt+0x3b43>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x9,%dl
je     804dc08 <fchmod@plt+0x3b38>
cmp    $0x20,%dl
je     804dc08 <fchmod@plt+0x3b38>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8052f10 <error+0x2f90>
mov    0x2c(%esp),%esi
mov    %eax,0x80593cc
movzbl (%esi),%eax
cmp    $0x9,%al
jne    804dc42 <fchmod@plt+0x3b72>
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x9,%al
je     804dc38 <fchmod@plt+0x3b68>
cmp    $0x20,%al
je     804dc38 <fchmod@plt+0x3b68>
mov    0x80593c0,%edi
mov    %esi,0x2c(%esp)
test   %edi,%edi
je     804dce7 <fchmod@plt+0x3c17>
mov    0x80593c4,%ecx
test   %ecx,%ecx
je     804dce7 <fchmod@plt+0x3c17>
mov    0x80593c8,%edx
test   %edx,%edx
je     804dce7 <fchmod@plt+0x3c17>
call   804a0b0 <__ctype_b_loc@plt>
mov    %eax,%edi
mov    %eax,0x1c(%esp)
mov    (%edi),%ecx
movsbl (%esi),%eax
testb  $0x8,0x1(%ecx,%eax,2)
jne    804de16 <fchmod@plt+0x3d46>
movl   $0x0,0x80593d0
00
movzbl (%esi),%edx
test   %dl,%dl
je     804dcb6 <fchmod@plt+0x3be6>
cmp    $0x9,%dl
jne    804de6e <fchmod@plt+0x3d9e>
lea    0x0(%esi),%esi
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0x9,%al
je     804dca8 <fchmod@plt+0x3bd8>
cmp    $0x20,%al
je     804dca8 <fchmod@plt+0x3bd8>
mov    %esi,0x2c(%esp)
movsbl (%esi),%eax
testb  $0x8,0x1(%ecx,%eax,2)
jne    804de7c <fchmod@plt+0x3dac>
movl   $0x0,0x80593d4
00
movzbl (%esi),%edx
test   $0xdf,%dl
je     804ded7 <fchmod@plt+0x3e07>
cmp    $0x9,%dl
je     804ded7 <fchmod@plt+0x3e07>
mov    0x10(%ebx),%edi
mov    0xc(%ebx),%eax
lea    0x1(%edi),%edx
test   %eax,%eax
mov    %edx,0x10(%ebx)
jne    804ddf3 <fchmod@plt+0x3d23>
cmp    $0x4,%edx
mov    $0x80541bd,%esi
jg     804ddf3 <fchmod@plt+0x3d23>
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%edi
movl   $0x5,0x8(%esp)
movl   $0x8054dd4,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x1c(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    %esi,0x14(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
mov    0xc(%ebx),%eax
test   %eax,%eax
jne    804dd69 <fchmod@plt+0x3c99>
cmpl   $0x4,0x10(%ebx)
jle    804dad8 <fchmod@plt+0x3a08>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,-0x1(%edx)
jmp    804db3d <fchmod@plt+0x3a6d>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8049d00 <feof@plt>
test   %eax,%eax
je     804dde8 <fchmod@plt+0x3d18>
mov    0x4(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x8054d9c,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x80593e0,(%esp)
call   8049f20 <__rawmemchr@plt>
mov    %eax,0x2c(%esp)
jmp    804db1e <fchmod@plt+0x3a4e>
addl   $0x1,0x10(%ebx)
movl   $0x1,0xc(%ebx)
movl   $0x5,0x8(%esp)
movl   $0x8054d82,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %eax,%esi
jmp    804dd09 <fchmod@plt+0x3c39>
mov    %esi,(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804a060 <strtol@plt>
mov    %eax,0x80593d0
mov    0x1c(%esp),%eax
mov    (%eax),%ecx
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
movsbl %dl,%esi
testb  $0x8,0x1(%ecx,%esi,2)
je     804ded0 <fchmod@plt+0x3e00>
add    $0x1,%eax
mov    %eax,0x2c(%esp)
movzbl (%eax),%edx
mov    %eax,%edi
add    $0x1,%eax
movsbl %dl,%esi
testb  $0x8,0x1(%ecx,%esi,2)
jne    804de51 <fchmod@plt+0x3d81>
mov    %edi,%esi
jmp    804dc98 <fchmod@plt+0x3bc8>
cmp    $0x20,%dl
je     804dca8 <fchmod@plt+0x3bd8>
jmp    804dce7 <fchmod@plt+0x3c17>
mov    %esi,(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804a060 <strtol@plt>
mov    %eax,0x80593d4
mov    0x1c(%esp),%eax
mov    (%eax),%esi
mov    0x2c(%esp),%eax
movzbl (%eax),%edx
movsbl %dl,%ecx
testb  $0x8,0x1(%esi,%ecx,2)
je     804dcd5 <fchmod@plt+0x3c05>
add    $0x1,%eax
mov    %eax,0x2c(%esp)
movzbl (%eax),%edx
add    $0x1,%eax
movsbl %dl,%ecx
testb  $0x8,0x1(%esi,%ecx,2)
jne    804deb7 <fchmod@plt+0x3de7>
jmp    804dcd5 <fchmod@plt+0x3c05>
mov    %eax,%esi
jmp    804dc98 <fchmod@plt+0x3bc8>
mov    $0x80593c0,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    804dd6b <fchmod@plt+0x3c9b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
call   8049af0 <getuid@plt>
mov    %eax,(%esp)
call   8049930 <getpwuid@plt>
test   %eax,%eax
je     804df10 <fchmod@plt+0x3e40>
mov    (%eax),%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804df06 <fchmod@plt+0x3e36>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%ecx
mov    0x8(%esp),%eax
mov    (%eax),%edx
xor    %eax,%eax
cmp    %edx,%ecx
setl   %dl
setg   %al
movzbl %dl,%edx
sub    %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x1090,%esp
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x108c(%esp)
xor    %edi,%edi
call   804a040 <__xstat64@plt>
test   %eax,%eax
jne    804e078 <fchmod@plt+0x3fa8>
mov    0x3c(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
jne    804e078 <fchmod@plt+0x3fa8>
mov    0x4c(%esp),%eax
mov    0x50(%esp),%edx
movl   $0x8054df8,0x10(%esp)
movl   $0x1000,0xc(%esp)
mov    %eax,%ecx
movzbl %al,%ebx
shrd   $0xc,%edx,%ecx
xor    %cl,%cl
or     %ebx,%ecx
shrd   $0x8,%edx,%eax
mov    %ecx,0x18(%esp)
mov    %edx,%ecx
and    $0xfff,%eax
and    $0xfffff000,%ecx
or     %eax,%ecx
lea    0x8c(%esp),%ebx
mov    %ecx,0x14(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebx,(%esp)
call   80498b0 <__snprintf_chk@plt>
movl   $0x8054087,0x4(%esp)
mov    %ebx,(%esp)
call   8049bd0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     804e078 <fchmod@plt+0x3fa8>
mov    %eax,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebx,(%esp)
call   8049a00 <fgets@plt>
test   %eax,%eax
je     804e080 <fchmod@plt+0x3fb0>
mov    %ebx,%ecx
mov    (%ecx),%esi
add    $0x4,%ecx
lea    -0x1010101(%esi),%edx
not    %esi
and    %esi,%edx
and    $0x80808080,%edx
je     804e01c <fchmod@plt+0x3f4c>
mov    %edx,%eax
shr    $0x10,%eax
test   $0x8080,%edx
cmove  %eax,%edx
lea    0x2(%ecx),%eax
cmove  %eax,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
xor    %esi,%esi
sub    %ebx,%ecx
jne    804e088 <fchmod@plt+0x3fb8>
mov    %edi,(%esp)
call   8049a30 <fclose@plt>
mov    %esi,%eax
mov    0x108c(%esp),%esi
xor    %gs:0x14,%esi
jne    804e09c <fchmod@plt+0x3fcc>
add    $0x1090,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    804e05c <fchmod@plt+0x3f8c>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    804e052 <fchmod@plt+0x3f82>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x8b(%esp,%ecx,1)
mov    %ebx,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%esi
jmp    804e052 <fchmod@plt+0x3f82>
call   8049ae0 <__stack_chk_fail@plt>
jmp    804e0b0 <fchmod@plt+0x3fe0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804e0d0 <fchmod@plt+0x4000>
mov    %eax,(%esp)
call   8049a30 <fclose@plt>
movl   $0x0,0xc(%ebx)
movl   $0x0,0x4(%ebx)
movl   $0xffffffff,0x8(%ebx)
orl    $0x8,(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    $0x9c,%edx
sub    $0x70,%esp
test   $0x1,%al
mov    %eax,%ebx
jne    804e210 <fchmod@plt+0x4140>
test   $0x2,%edi
jne    804e1f8 <fchmod@plt+0x4128>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     804e12c <fchmod@plt+0x405c>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     804e134 <fchmod@plt+0x4064>
movb   $0x0,(%edi)
mov    %esi,(%ebx)
lea    0x10(%esp),%esi
movl   $0xffffffff,0x8(%ebx)
mov    %esi,0x8(%esp)
movl   $0x805501c,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804e197 <fchmod@plt+0x40c7>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804e1e8 <fchmod@plt+0x4118>
mov    %esi,0x8(%esp)
movl   $0x8054231,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
test   %eax,%eax
je     804e1a0 <fchmod@plt+0x40d0>
mov    (%ebx),%eax
test   $0x2,%al
jne    804e1c0 <fchmod@plt+0x40f0>
or     $0x40,%eax
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804e18a <fchmod@plt+0x40ba>
mov    (%ebx),%eax
or     $0x20,%eax
test   $0x2,%al
mov    %eax,(%ebx)
je     804e190 <fchmod@plt+0x40c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
movl   $0x8055022,0x4(%esp)
movl   $0x3,(%esp)
call   804a040 <__xstat64@plt>
test   %eax,%eax
mov    (%ebx),%eax
jne    804e190 <fchmod@plt+0x40c0>
or     $0x10,%eax
jmp    804e190 <fchmod@plt+0x40c0>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x70,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    804e115 <fchmod@plt+0x4045>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x9b,%dl
jmp    804e109 <fchmod@plt+0x4039>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x20,%esp
test   %eax,%eax
je     804e247 <fchmod@plt+0x4177>
mov    %edx,%esi
mov    $0x8054236,%edi
mov    $0x4,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %al
add    $0x4,%ebx
cmp    %al,%dl
jne    804e288 <fchmod@plt+0x41b8>
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a060 <strtol@plt>
mov    0x1c(%esp),%edx
test   %edx,%edx
je     804e288 <fchmod@plt+0x41b8>
cmp    %edx,%ebx
je     804e288 <fchmod@plt+0x41b8>
cmpb   $0x0,(%edx)
jne    804e288 <fchmod@plt+0x41b8>
mov    $0xffffffff,%edx
test   %eax,%eax
cmovns %eax,%edx
add    $0x20,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%edx
jmp    804e27a <fchmod@plt+0x41aa>
nop
test   %eax,%eax
je     804e381 <fchmod@plt+0x42b1>
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %edx,%edx
je     804e392 <fchmod@plt+0x42c2>
mov    %eax,(%esp)
mov    %ecx,%edi
call   804a0a0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804e392 <fchmod@plt+0x42c2>
movl   $0x0,0x0(%ebp)
xor    %esi,%esi
movl   $0x0,0x18(%esp)
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8049fc0 <readdir64@plt>
test   %eax,%eax
je     804e31a <fchmod@plt+0x424a>
movzbl 0x12(%eax),%edx
cmp    $0x6,%dl
je     804e2ee <fchmod@plt+0x421e>
test   %dl,%dl
je     804e2ee <fchmod@plt+0x421e>
cmp    $0xa,%dl
jne    804e2d0 <fchmod@plt+0x4200>
lea    0x13(%eax),%edx
mov    %edi,%eax
call   804e220 <fchmod@plt+0x4150>
cmp    $0x7,%eax
mov    %eax,%edx
jle    804e2d0 <fchmod@plt+0x4200>
cmp    0x18(%esp),%esi
jge    804e330 <fchmod@plt+0x4260>
mov    0x0(%ebp),%eax
mov    %edx,(%eax,%esi,4)
add    $0x1,%esi
mov    %ebx,(%esp)
call   8049fc0 <readdir64@plt>
test   %eax,%eax
jne    804e2dc <fchmod@plt+0x420c>
test   %esi,%esi
jne    804e360 <fchmod@plt+0x4290>
mov    %ebx,(%esp)
call   804a090 <closedir@plt>
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
addl   $0x1,0x18(%esp)
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804e387 <fchmod@plt+0x42b7>
mov    %eax,0x0(%ebp)
jmp    804e308 <fchmod@plt+0x4238>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x804df20,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049fd0 <qsort@plt>
jmp    804e31e <fchmod@plt+0x424e>
mov    $0xffffffff,%eax
ret
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    $0xffffffff,%eax
jmp    804e328 <fchmod@plt+0x4258>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8055040,%ecx
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x110,%esp
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
mov    $0x8055033,%eax
testb  $0x20,(%esi)
lea    0x14(%esi),%ebx
mov    %edx,0x14(%esp)
cmove  %ecx,%eax
mov    %eax,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %ebx,(%esp)
call   80498b0 <__snprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049900 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     804e498 <fchmod@plt+0x43c8>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049bf0 <__fxstat64@plt>
cmp    $0xffffffff,%eax
je     804e4e8 <fchmod@plt+0x4418>
mov    0x30(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
jne    804e4e8 <fchmod@plt+0x4418>
mov    0x44(%esp),%ebx
mov    0x40(%esp),%ecx
mov    %ebx,%eax
shrd   $0x8,%ebx,%ecx
and    $0xfffff000,%eax
and    $0xfff,%ecx
or     %ecx,%eax
cmp    $0x7,%eax
jne    804e4e8 <fchmod@plt+0x4418>
addl   $0x1,0x98(%esi)
testb  $0x6,(%esi)
jne    804e4b0 <fchmod@plt+0x43e0>
mov    0x10c(%esp),%edx
xor    %gs:0x14,%edx
mov    %edi,%eax
jne    804e512 <fchmod@plt+0x4442>
add    $0x110,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
cmpl   $0xd,(%eax)
jne    804e475 <fchmod@plt+0x43a5>
addl   $0x1,0x94(%esi)
jmp    804e475 <fchmod@plt+0x43a5>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebx
lea    0x80(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %edi,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
js     804e500 <fchmod@plt+0x4430>
testb  $0x2,(%esi)
jne    804e475 <fchmod@plt+0x43a5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0xffffffff,%edi
call   804a080 <close@plt>
jmp    804e475 <fchmod@plt+0x43a5>
lea    0x0(%esi),%esi
cmpl   $0x6,(%ebx)
jne    804e4dc <fchmod@plt+0x440c>
testb  $0x4,(%esi)
jne    804e475 <fchmod@plt+0x43a5>
xchg   %ax,%ax
jmp    804e4e8 <fchmod@plt+0x4418>
call   8049ae0 <__stack_chk_fail@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x20c0,%esp
mov    %gs:0x14,%eax
mov    %eax,0x20bc(%esp)
xor    %eax,%eax
mov    (%ebx),%eax
test   $0x8,%al
jne    804e6bf <fchmod@plt+0x45ef>
mov    %eax,%esi
and    $0x10,%esi
je     804e608 <fchmod@plt+0x4538>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804e6c9 <fchmod@plt+0x45f9>
lea    0xbc(%esp),%esi
lea    0x3c(%esp),%edi
jmp    804e56b <fchmod@plt+0x449b>
nop
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804e640 <fchmod@plt+0x4570>
mov    %eax,0x8(%esp)
movl   $0x2000,0x4(%esp)
mov    %esi,(%esp)
call   8049a00 <fgets@plt>
test   %eax,%eax
je     804e640 <fchmod@plt+0x4570>
lea    0x30(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %edi,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x805504c,0x4(%esp)
mov    %esi,(%esp)
call   8049f70 <sscanf@plt>
cmp    $0x4,%eax
jne    804e568 <fchmod@plt+0x4498>
cmpl   $0x7,0x2c(%esp)
jne    804e568 <fchmod@plt+0x4498>
mov    %edi,%edx
mov    $0x1,%al
call   804e220 <fchmod@plt+0x4150>
mov    %eax,0x28(%esp)
mov    %eax,%edx
mov    %ebx,%eax
call   804e3a0 <fchmod@plt+0x42d0>
cmp    $0xffffffff,%eax
je     804e568 <fchmod@plt+0x4498>
lea    0x0(%esi),%esi
mov    0x20bc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804e6e5 <fchmod@plt+0x4615>
add    $0x20c0,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
test   $0x40,%al
je     804e657 <fchmod@plt+0x4587>
mov    0x8(%ebx),%ecx
lea    0x1(%ecx),%edx
cmp    $0x7,%edx
mov    %edx,0x8(%ebx)
jle    804e62e <fchmod@plt+0x455e>
jmp    804e652 <fchmod@plt+0x4582>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%eax
lea    0x1(%eax),%edx
cmp    $0x7,%edx
mov    %edx,0x8(%ebx)
jg     804e650 <fchmod@plt+0x4580>
mov    %ebx,%eax
call   804e3a0 <fchmod@plt+0x42d0>
cmp    $0xffffffff,%eax
je     804e620 <fchmod@plt+0x4550>
jmp    804e5e8 <fchmod@plt+0x4518>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   804e0b0 <fchmod@plt+0x3fe0>
mov    $0xffffffff,%eax
jmp    804e5e8 <fchmod@plt+0x4518>
xchg   %ax,%ax
mov    (%ebx),%eax
and    $0xffffffbf,%eax
mov    %eax,(%ebx)
mov    0xc(%ebx),%eax
test   %eax,%eax
je     804e695 <fchmod@plt+0x45c5>
mov    0x8(%ebx),%eax
lea    0x1(%eax),%esi
mov    0x10(%ebx),%eax
cmp    %esi,%eax
mov    %esi,0x8(%ebx)
jg     804e67e <fchmod@plt+0x45ae>
jmp    804e640 <fchmod@plt+0x4570>
mov    0x8(%ebx),%eax
lea    0x1(%eax),%esi
cmp    %esi,0x10(%ebx)
mov    %esi,0x8(%ebx)
jle    804e640 <fchmod@plt+0x4570>
mov    0xc(%ebx),%eax
mov    (%eax,%esi,4),%edx
mov    %ebx,%eax
call   804e3a0 <fchmod@plt+0x42d0>
cmp    $0xffffffff,%eax
je     804e670 <fchmod@plt+0x45a0>
jmp    804e5e8 <fchmod@plt+0x4518>
testb  $0x20,(%ebx)
lea    0xc(%ebx),%edx
jne    804e6b1 <fchmod@plt+0x45e1>
mov    $0x1,%ecx
mov    $0x805501c,%eax
call   804e290 <fchmod@plt+0x41c0>
mov    %eax,0x10(%ebx)
jmp    804e667 <fchmod@plt+0x4597>
xor    %ecx,%ecx
mov    $0x8054231,%eax
call   804e290 <fchmod@plt+0x41c0>
jmp    804e6ac <fchmod@plt+0x45dc>
mov    $0xffffffff,%eax
jmp    804e5e8 <fchmod@plt+0x4518>
movl   $0x8054087,0x4(%esp)
movl   $0x8055022,(%esp)
call   8049bd0 <fopen64@plt>
mov    %eax,0x4(%ebx)
jmp    804e55a <fchmod@plt+0x448a>
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0xc(%esp)
jns    804e73f <fchmod@plt+0x466f>
jmp    804e7a1 <fchmod@plt+0x46d1>
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
lea    (%edi,%ebx,1),%ebp
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049910 <read@plt>
cmp    $0x1,%eax
jne    804e788 <fchmod@plt+0x46b8>
movzbl 0x0(%ebp),%eax
cmp    $0xa,%al
je     804e788 <fchmod@plt+0x46b8>
test   %al,%al
je     804e788 <fchmod@plt+0x46b8>
add    $0x1,%ebx
lea    -0x1(%esi),%eax
cmp    %eax,%ebx
jl     804e710 <fchmod@plt+0x4640>
sub    $0xffffff80,%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     804e75d <fchmod@plt+0x468d>
mov    %eax,%edi
jmp    804e710 <fchmod@plt+0x4640>
movl   $0x5,0x8(%esp)
movl   $0x8054e20,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %eax,(%esp)
call   804ff80 <error>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     804e79a <fchmod@plt+0x46ca>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x80541bd,%eax
jmp    804e792 <fchmod@plt+0x46c2>
mov    %edx,(%esp)
call   8049da0 <getpass@plt>
jmp    804e792 <fchmod@plt+0x46c2>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x198,%esp
mov    %gs:0x14,%eax
mov    %eax,0x18c(%esp)
xor    %eax,%eax
lea    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c05,0x4(%esp)
mov    %ebx,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
jne    804e810 <fchmod@plt+0x4740>
mov    0xd8(%esp),%eax
shr    $0x2,%eax
and    $0x1,%eax
mov    0x18c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804e83c <fchmod@plt+0x476c>
add    $0x198,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %ebx,(%esp)
call   8049bc0 <ioctl@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    804e7f4 <fchmod@plt+0x4724>
mov    0x34(%esp),%eax
shr    $0x2,%eax
and    $0x1,%eax
jmp    804e7f4 <fchmod@plt+0x4724>
call   8049ae0 <__stack_chk_fail@plt>
jmp    804e850 <fchmod@plt+0x4780>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x1fc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x1ec(%esp)
xor    %eax,%eax
lea    0x1c(%esp),%eax
mov    0x210(%esp),%edi
mov    %eax,0x8(%esp)
mov    0x214(%esp),%esi
movl   $0x4c05,0x4(%esp)
mov    %ebp,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
jne    804e8f8 <fchmod@plt+0x4828>
mov    (%ebx),%edx
mov    0x4(%ebx),%ecx
xor    0x20(%esp),%ecx
xor    0x1c(%esp),%edx
or     %edx,%ecx
je     804e8c8 <fchmod@plt+0x47f8>
mov    0x1ec(%esp),%esi
xor    %gs:0x14,%esi
jne    804e97d <fchmod@plt+0x48ad>
add    $0x1fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%ebx),%edx
mov    0x5c(%ebx),%ecx
xor    0x28(%esp),%ecx
xor    0x24(%esp),%edx
or     %edx,%ecx
jne    804e8a8 <fchmod@plt+0x47d8>
mov    0x218(%esp),%ecx
mov    $0x1,%al
test   %ecx,%ecx
je     804e8a8 <fchmod@plt+0x47d8>
xor    0x34(%esp),%edi
xor    %eax,%eax
xor    0x38(%esp),%esi
or     %esi,%edi
sete   %al
jmp    804e8a8 <fchmod@plt+0x47d8>
lea    0x104(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %ebp,(%esp)
call   8049bc0 <ioctl@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    804e8a8 <fchmod@plt+0x47d8>
mov    (%ebx),%edx
mov    0x4(%ebx),%ecx
xor    0x108(%esp),%ecx
xor    0x104(%esp),%edx
or     %edx,%ecx
jne    804e8a8 <fchmod@plt+0x47d8>
mov    0x58(%ebx),%edx
mov    0x5c(%ebx),%ecx
xor    0x110(%esp),%ecx
xor    0x10c(%esp),%edx
or     %edx,%ecx
jne    804e8a8 <fchmod@plt+0x47d8>
mov    0x218(%esp),%edx
mov    $0x1,%al
test   %edx,%edx
je     804e8a8 <fchmod@plt+0x47d8>
xor    0x11c(%esp),%edi
xor    %eax,%eax
xor    0x120(%esp),%esi
or     %esi,%edi
sete   %al
jmp    804e8a8 <fchmod@plt+0x47d8>
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x190,%esp
mov    0x1a0(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x18c(%esp)
xor    %eax,%eax
mov    %esi,%eax
call   804df40 <fchmod@plt+0x3e70>
test   %eax,%eax
mov    %eax,%ebx
je     804e9e0 <fchmod@plt+0x4910>
mov    0x18c(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    804ea85 <fchmod@plt+0x49b5>
add    $0x190,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
mov    %eax,%esi
js     804e9bc <fchmod@plt+0x48ec>
lea    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x4c05,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
je     804ea48 <fchmod@plt+0x4978>
lea    0x18(%esp),%eax
mov    %ebx,%edi
mov    %eax,0x8(%esp)
movl   $0x4c03,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
je     804ea6b <fchmod@plt+0x499b>
mov    %esi,(%esp)
mov    %edi,%ebx
call   804a080 <close@plt>
jmp    804e9bc <fchmod@plt+0x48ec>
lea    0x0(%esi),%esi
lea    0xdc(%esp),%eax
mov    %eax,(%esp)
movb   $0x2a,0x11a(%esp)
movb   $0x0,0x11b(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%edi
jmp    804ea33 <fchmod@plt+0x4963>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
movb   $0x2a,0x76(%esp)
movb   $0x0,0x77(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%edi
jmp    804ea33 <fchmod@plt+0x4963>
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
sub    $0x7c,%esp
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a040 <__xstat64@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804eac8 <fchmod@plt+0x49f8>
mov    0x20(%esp),%eax
and    $0xf000,%eax
cmp    $0x6000,%eax
je     804ead0 <fchmod@plt+0x4a00>
mov    %edx,%eax
add    $0x7c,%esp
ret
xchg   %ax,%ax
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%ecx
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
xor    %edx,%edx
or     %eax,%ecx
cmp    $0x7,%ecx
sete   %dl
add    $0x7c,%esp
mov    %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049900 <open64@plt>
mov    %eax,%ebx
xor    %eax,%eax
test   %ebx,%ebx
js     804eb34 <fchmod@plt+0x4a64>
mov    %ebx,%eax
call   804e7b0 <fchmod@plt+0x46e0>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a080 <close@plt>
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x11c,%esp
mov    0x130(%esp),%ebx
lea    0x10(%esp),%esi
mov    0x134(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
call   804a040 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804ec58 <fchmod@plt+0x4b88>
mov    $0x2,%edx
lea    0x70(%esp),%eax
call   804e0f0 <fchmod@plt+0x4020>
cmp    $0xffffffff,%eax
je     804ec93 <fchmod@plt+0x4bc3>
xor    %edi,%edi
xor    %ebx,%ebx
jmp    804ebbd <fchmod@plt+0x4aed>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   804a080 <close@plt>
cmp    $0x1,%ebx
jg     804ec06 <fchmod@plt+0x4b36>
lea    0x70(%esp),%eax
call   804e520 <fchmod@plt+0x4450>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     804ec40 <fchmod@plt+0x4b70>
movl   $0x0,0x8(%esp)
mov    %esi,%edx
mov    %ebp,%eax
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
call   804e850 <fchmod@plt+0x4780>
cmp    $0x1,%eax
jne    804ebb0 <fchmod@plt+0x4ae0>
test   %edi,%edi
je     804ec68 <fchmod@plt+0x4b98>
add    $0x1,%ebx
mov    %ebp,(%esp)
call   804a080 <close@plt>
cmp    $0x1,%ebx
jle    804ebbd <fchmod@plt+0x4aed>
lea    0x70(%esp),%eax
call   804e0b0 <fchmod@plt+0x3fe0>
mov    %edi,(%esp)
call   8049990 <free@plt>
mov    $0x2,%eax
mov    0x10c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804eccb <fchmod@plt+0x4bfb>
add    $0x11c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x70(%esp),%eax
call   804e0b0 <fchmod@plt+0x3fe0>
cmp    $0x1,%ebx
jne    804ec80 <fchmod@plt+0x4bb0>
mov    0xc(%esp),%eax
mov    %edi,(%eax)
xor    %eax,%eax
jmp    804ec1c <fchmod@plt+0x4b4c>
mov    %ebx,(%esp)
call   8049be0 <perror@plt>
mov    $0x1,%eax
jmp    804ec1c <fchmod@plt+0x4b4c>
nop
lea    0x84(%esp),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%edi
jmp    804ebf6 <fchmod@plt+0x4b26>
xchg   %ax,%ax
mov    %edi,(%esp)
call   8049990 <free@plt>
test   %ebx,%ebx
jne    804ec17 <fchmod@plt+0x4b47>
mov    $0x1,%eax
jmp    804ec1c <fchmod@plt+0x4b4c>
movl   $0x5,0x8(%esp)
mov    0x805a460,%ebx
movl   $0x8054e48,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
mov    $0x1,%eax
jmp    804ec1c <fchmod@plt+0x4b4c>
call   8049ae0 <__stack_chk_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x11c,%esp
mov    0x130(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x10c(%esp)
xor    %eax,%eax
lea    0x10(%esp),%eax
mov    0x134(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x138(%esp),%edi
movl   $0x3,(%esp)
mov    %ebx,0x4(%esp)
call   804a040 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804edb3 <fchmod@plt+0x4ce3>
mov    $0x2,%edx
lea    0x70(%esp),%eax
call   804e0f0 <fchmod@plt+0x4020>
cmp    $0xffffffff,%eax
jne    804ed61 <fchmod@plt+0x4c91>
jmp    804edbf <fchmod@plt+0x4cef>
nop
lea    0x10(%esp),%edx
mov    %ebp,%eax
movl   $0x1,0x8(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   804e850 <fchmod@plt+0x4780>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   804a080 <close@plt>
cmp    $0x1,%ebx
je     804eda0 <fchmod@plt+0x4cd0>
lea    0x70(%esp),%eax
call   804e520 <fchmod@plt+0x4450>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
jne    804ed38 <fchmod@plt+0x4c68>
xor    %ebx,%ebx
lea    0x70(%esp),%eax
call   804e0b0 <fchmod@plt+0x3fe0>
mov    %ebx,%eax
mov    0x10c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804edf1 <fchmod@plt+0x4d21>
add    $0x11c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x84(%esp),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%ebx
jmp    804ed73 <fchmod@plt+0x4ca3>
mov    %ebx,(%esp)
call   8049be0 <perror@plt>
xor    %eax,%eax
jmp    804ed7e <fchmod@plt+0x4cae>
movl   $0x5,0x8(%esp)
mov    0x805a460,%ebx
movl   $0x8054e48,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
xor    %eax,%eax
jmp    804ed7e <fchmod@plt+0x4cae>
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%ebx
mov    0x98(%esp),%esi
mov    0x9c(%esp),%edi
mov    %ebx,(%esp)
call   804ea90 <fchmod@plt+0x49c0>
test   %eax,%eax
jne    804ee38 <fchmod@plt+0x4d68>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x94(%esp),%eax
lea    0x10(%esp),%ebp
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a040 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     804ee28 <fchmod@plt+0x4d58>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   8049900 <open64@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     804ee28 <fchmod@plt+0x4d58>
mov    %esi,(%esp)
mov    %ebp,%edx
mov    %edi,0x4(%esp)
movl   $0x1,0x8(%esp)
call   804e850 <fchmod@plt+0x4780>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804a080 <close@plt>
add    $0x7c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
mov    $0x4,%edx
push   %ebx
sub    $0xb4,%esp
mov    %gs:0x14,%eax
mov    %eax,0xac(%esp)
xor    %eax,%eax
lea    0x10(%esp),%eax
call   804e0f0 <fchmod@plt+0x4020>
cmp    $0xffffffff,%eax
je     804ef90 <fchmod@plt+0x4ec0>
lea    0x10(%esp),%eax
call   804e520 <fchmod@plt+0x4450>
cmp    $0xffffffff,%eax
je     804ef20 <fchmod@plt+0x4e50>
mov    %eax,(%esp)
call   804a080 <close@plt>
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   8050640 <error+0x6c0>
mov    %eax,%ebx
lea    0x10(%esp),%eax
call   804e0b0 <fchmod@plt+0x3fe0>
test   %ebx,%ebx
je     804ef29 <fchmod@plt+0x4e59>
mov    %ebx,%eax
mov    0xac(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804eff3 <fchmod@plt+0x4f23>
add    $0xb4,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    0x10(%esp),%eax
call   804e0b0 <fchmod@plt+0x3fe0>
mov    0xa8(%esp),%edx
test   %edx,%edx
jne    804ef78 <fchmod@plt+0x4ea8>
mov    0xa4(%esp),%eax
test   %eax,%eax
jne    804efa8 <fchmod@plt+0x4ed8>
mov    0x805a460,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ec0,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
xor    %eax,%eax
jmp    804ef01 <fchmod@plt+0x4e31>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805a460,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054e98,0x4(%esp)
jmp    804ef55 <fchmod@plt+0x4e85>
mov    0x805a460,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054e48,0x4(%esp)
jmp    804ef55 <fchmod@plt+0x4e85>
testb  $0x20,0x10(%esp)
mov    $0x80541bd,%eax
mov    $0x8055020,%ebx
mov    0x805a460,%esi
movl   $0x5,0x8(%esp)
movl   $0x8054e6c,0x4(%esp)
cmove  %eax,%ebx
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804ff80 <error>
xor    %eax,%eax
jmp    804ef01 <fchmod@plt+0x4e31>
call   8049ae0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1dc,%esp
mov    0x1f0(%esp),%eax
mov    0x1fc(%esp),%edx
mov    0x208(%esp),%esi
mov    %eax,0x40(%esp)
mov    0x1f4(%esp),%eax
mov    %edx,0x34(%esp)
mov    0x204(%esp),%edx
mov    %eax,0x24(%esp)
mov    0x1f8(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %eax,0x30(%esp)
mov    0x200(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x210(%esp),%eax
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x1cc(%esp)
xor    %eax,%eax
mov    0x805a46c,%eax
test   %eax,%eax
jne    804f258 <fchmod@plt+0x5188>
mov    0x28(%esp),%eax
mov    (%eax),%eax
and    $0x1,%eax
cmp    $0x1,%eax
mov    0x24(%esp),%eax
sbb    %edi,%edi
and    $0x2,%edi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049dd0 <__open64_2@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804f2c0 <fchmod@plt+0x51f0>
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049dd0 <__open64_2@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     804f680 <fchmod@plt+0x55b0>
xor    %eax,%eax
mov    $0x3a,%ecx
lea    0xe4(%esp),%edi
rep stos %eax,%es:(%edi)
mov    0x24(%esp),%edi
mov    %edi,(%esp)
call   8050530 <error+0x5b0>
movl   $0x3f,0x8(%esp)
test   %eax,%eax
mov    %eax,%ebp
cmove  %edi,%ebp
lea    0x11c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049e90 <strncpy@plt>
test   %esi,%esi
movb   $0x0,0x15b(%esp)
je     804f116 <fchmod@plt+0x5046>
movzbl (%esi),%edx
test   %dl,%dl
jne    804f488 <fchmod@plt+0x53b8>
mov    0x110(%esp),%eax
mov    0x30(%esp),%esi
test   %eax,%eax
mov    0x34(%esp),%edi
mov    %esi,0xfc(%esp)
mov    0x38(%esp),%esi
mov    %edi,0x100(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0x104(%esp)
mov    %edi,0x108(%esp)
jne    804f468 <fchmod@plt+0x5398>
mov    0x214(%esp),%edi
mov    $0x100,%edx
test   %edi,%edi
cmovne 0x214(%esp),%edx
test   %eax,%eax
mov    %edx,0x214(%esp)
je     804f308 <fchmod@plt+0x5238>
cmp    $0x1,%eax
jne    804f200 <fchmod@plt+0x5130>
movl   $0x5,0x8(%esp)
movl   $0x805506a,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %eax,(%esp)
call   8049da0 <getpass@plt>
lea    0x19c(%esp),%ecx
xor    %edx,%edx
mov    %eax,%esi
movl   $0x0,(%ecx,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     804f1ae <fchmod@plt+0x50de>
mov    %ecx,(%esp)
movl   $0x1f,0x8(%esp)
mov    %esi,0x4(%esp)
call   8049e90 <strncpy@plt>
mov    %esi,(%esp)
call   8049d60 <strlen@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049e20 <memset@plt>
movl   $0x20,0x114(%esp)
00
jmp    804f313 <fchmod@plt+0x5243>
lea    0x0(%esi),%esi
mov    0x218(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x805506a,0x4(%esp)
movl   $0x0,(%esp)
test   %esi,%esi
jne    804f588 <fchmod@plt+0x54b8>
call   8049ac0 <dcgettext@plt>
mov    %eax,%edx
mov    0x20c(%esp),%eax
call   804e6f0 <fchmod@plt+0x4620>
lea    0x19c(%esp),%ecx
xor    %edx,%edx
mov    %eax,%esi
movl   $0x0,(%ecx,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     804f244 <fchmod@plt+0x5174>
jmp    804f1bd <fchmod@plt+0x50ed>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    0x24(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   804ecd0 <fchmod@plt+0x4c00>
test   %eax,%eax
mov    %eax,%ebx
je     804f07a <fchmod@plt+0x4faa>
movl   $0x5,0x8(%esp)
movl   $0x8054f4c,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
mov    %ebx,(%esp)
call   8049990 <free@plt>
jmp    804f07a <fchmod@plt+0x4faa>
nop
mov    0x28(%esp),%eax
testb  $0x1,(%eax)
je     804f538 <fchmod@plt+0x5468>
mov    0x24(%esp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
call   8049be0 <perror@plt>
xchg   %ax,%ax
mov    0x1cc(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804fb11 <fchmod@plt+0x5a41>
add    $0x1dc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x114(%esp)
00
mov    0x2c(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x4c00,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
js     804f428 <fchmod@plt+0x5358>
mov    %ebx,(%esp)
call   804a080 <close@plt>
mov    0x28(%esp),%eax
testb  $0x2,(%eax)
je     804f34f <fchmod@plt+0x527f>
movl   $0x4,0x118(%esp)
00
lea    0xe4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x4c04,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804f6f8 <fchmod@plt+0x5628>
mov    0x28(%esp),%eax
testb  $0x2,(%eax)
jne    804f6d8 <fchmod@plt+0x5608>
xor    %eax,%eax
mov    $0x3a,%ecx
lea    0xe4(%esp),%edi
test   %ebx,%ebx
rep stos %eax,%es:(%edi)
jne    804f6a0 <fchmod@plt+0x55d0>
mov    0x28(%esp),%eax
testb  $0x2,(%eax)
je     804f9a8 <fchmod@plt+0x58d8>
cmpl   $0x1,0x805a46c
jle    804f40b <fchmod@plt+0x533b>
movl   $0x5,0x8(%esp)
movl   $0x8054fd4,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%ebx
mov    %ebp,0xc(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x18(%esp)
mov    0x30(%esp),%ecx
mov    %ebx,0x1c(%esp)
mov    0x34(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    0x40(%esp),%ecx
mov    %ebx,0x14(%esp)
mov    %ecx,0x8(%esp)
call   8049ec0 <__printf_chk@plt>
xor    %ebx,%ebx
cmp    %ebp,0x24(%esp)
je     804f2e0 <fchmod@plt+0x5210>
mov    %ebp,(%esp)
call   8049990 <free@plt>
jmp    804f2e0 <fchmod@plt+0x5210>
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
cmpl   $0x10,(%eax)
je     804f4e0 <fchmod@plt+0x5410>
movl   $0x8055093,(%esp)
mov    $0x1,%esi
call   8049be0 <perror@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a080 <close@plt>
mov    %ebx,(%esp)
mov    %esi,%ebx
call   804a080 <close@plt>
cmp    %ebp,0x24(%esp)
jne    804f417 <fchmod@plt+0x5347>
jmp    804f2e0 <fchmod@plt+0x5210>
movl   $0x3,(%esp)
call   8049c90 <mlockall@plt>
test   %eax,%eax
jne    804fb16 <fchmod@plt+0x5a46>
mov    0x110(%esp),%eax
jmp    804f151 <fchmod@plt+0x5081>
mov    %edx,0x44(%esp)
call   804a0b0 <__ctype_b_loc@plt>
mov    0x44(%esp),%edx
mov    (%eax),%ecx
mov    %esi,%eax
lea    0x0(%esi,%eiz,1),%esi
movsbl %dl,%edx
add    $0x1,%eax
testb  $0x8,0x1(%ecx,%edx,2)
je     804f968 <fchmod@plt+0x5898>
movzbl (%eax),%edx
test   %dl,%dl
jne    804f4a0 <fchmod@plt+0x53d0>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804a060 <strtol@plt>
mov    %eax,0x110(%esp)
jmp    804f11d <fchmod@plt+0x504d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805a46c,%ecx
mov    $0x2,%esi
test   %ecx,%ecx
je     804f447 <fchmod@plt+0x5377>
movl   $0x10,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8055075,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049ac0 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804f447 <fchmod@plt+0x5377>
xchg   %ax,%ax
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0xd,%eax
je     804f54d <fchmod@plt+0x547d>
cmp    $0x1e,%eax
jne    804f2cd <fchmod@plt+0x51fd>
mov    0x24(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804f2cd <fchmod@plt+0x51fd>
mov    0x805a46c,%ebp
test   %ebp,%ebp
jne    804f9c0 <fchmod@plt+0x58f0>
mov    0x28(%esp),%eax
xor    %edi,%edi
orl    $0x1,(%eax)
jmp    804f0a5 <fchmod@plt+0x4fd5>
nop
call   8049ac0 <dcgettext@plt>
mov    %eax,%edx
mov    0x20c(%esp),%eax
call   804e6f0 <fchmod@plt+0x4620>
mov    %eax,(%esp)
mov    %eax,%edi
call   8049d60 <strlen@plt>
mov    %eax,0x44(%esp)
add    $0x2,%eax
mov    %eax,(%esp)
call   8049ca0 <malloc@plt>
mov    %eax,%esi
movb   $0x41,(%eax)
lea    0x1(%eax),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <strcpy@plt>
mov    0x44(%esp),%eax
lea    0x58(%esp),%edx
mov    %edx,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x4c(%esp)
mov    %eax,0x8(%esp)
call   8052310 <error+0x2390>
mov    0x44(%esp),%eax
mov    %esi,0x4(%esp)
lea    0x1(%eax),%ecx
lea    0x6c(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x48(%esp)
call   8052310 <error+0x2390>
mov    0x44(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049e20 <memset@plt>
mov    0x48(%esp),%ecx
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x8(%esp)
call   8049e20 <memset@plt>
mov    %esi,(%esp)
call   8049990 <free@plt>
mov    0x214(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x30,0xc(%esp)
test   %eax,%eax
lea    0x7(%eax),%esi
cmovns %eax,%esi
sar    $0x3,%esi
lea    0x19c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049cd0 <__memcpy_chk@plt>
mov    %esi,0x114(%esp)
jmp    804f313 <fchmod@plt+0x5243>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049be0 <perror@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   804a080 <close@plt>
jmp    804f2e0 <fchmod@plt+0x5210>
xchg   %ax,%ax
mov    0x2c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x4c01,0x4(%esp)
mov    %ebx,(%esp)
call   8049bc0 <ioctl@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   804a080 <close@plt>
cmp    %ebp,0x24(%esp)
jne    804f417 <fchmod@plt+0x5347>
jmp    804f2e0 <fchmod@plt+0x5210>
mov    0x2c(%esp),%eax
call   804e7b0 <fchmod@plt+0x46e0>
test   %eax,%eax
jne    804f385 <fchmod@plt+0x52b5>
mov    0x28(%esp),%eax
andl   $0xfffffffd,(%eax)
jmp    804f385 <fchmod@plt+0x52b5>
lea    0x0(%esi),%esi
lea    0x58(%esp),%esi
xor    %eax,%eax
mov    0xe4(%esp),%edx
mov    $0x23,%ecx
mov    %esi,%edi
mov    0xf4(%esp),%ebx
rep stos %eax,%es:(%edi)
mov    0x100(%esp),%edi
mov    0x10c(%esp),%eax
cmpl   $0x12,0x110(%esp)
mov    0xe8(%esp),%ecx
mov    %edi,0x4c(%esp)
mov    0x110(%esp),%edi
mov    %eax,0x58(%esp)
mov    0xf0(%esp),%eax
mov    %dx,0x5c(%esp)
mov    %bx,0x64(%esp)
mov    %edi,0x6c(%esp)
mov    0x114(%esp),%edi
mov    %eax,0x48(%esp)
mov    0xec(%esp),%eax
mov    %edi,0x70(%esp)
mov    0x118(%esp),%edi
mov    %eax,0x60(%esp)
mov    0xf8(%esp),%eax
mov    %edi,0x74(%esp)
mov    0x1bc(%esp),%edi
mov    %eax,0x44(%esp)
mov    0xfc(%esp),%eax
mov    %edi,0xd8(%esp)
mov    0x1c4(%esp),%edi
mov    %eax,0x68(%esp)
mov    %edi,0xdc(%esp)
je     804fa20 <fchmod@plt+0x5950>
mov    0x11c(%esp),%edi
mov    %edi,0x78(%esp)
mov    0x120(%esp),%edi
mov    %edi,0x7c(%esp)
mov    0x124(%esp),%edi
mov    %edi,0x80(%esp)
mov    0x128(%esp),%edi
mov    %edi,0x84(%esp)
mov    0x12c(%esp),%edi
mov    %edi,0x88(%esp)
mov    0x130(%esp),%edi
mov    %edi,0x8c(%esp)
mov    0x134(%esp),%edi
mov    %edi,0x90(%esp)
mov    0x138(%esp),%edi
mov    %edi,0x94(%esp)
mov    0x13c(%esp),%edi
mov    %edi,0x98(%esp)
mov    0x140(%esp),%edi
mov    %edi,0x9c(%esp)
mov    0x144(%esp),%edi
mov    %edi,0xa0(%esp)
mov    0x148(%esp),%edi
mov    %edi,0xa4(%esp)
mov    0x14c(%esp),%edi
mov    %edi,0xa8(%esp)
mov    0x150(%esp),%edi
mov    %edi,0xac(%esp)
mov    0x154(%esp),%edi
mov    %edi,0xb0(%esp)
mov    0x158(%esp),%edi
mov    %edi,0xb4(%esp)
mov    0x19c(%esp),%edi
xor    %dx,%dx
or     %edx,%ecx
mov    %edi,0xb8(%esp)
mov    0x1a0(%esp),%edi
mov    %edi,0xbc(%esp)
mov    0x1a4(%esp),%edi
mov    %edi,0xc0(%esp)
mov    0x1a8(%esp),%edi
mov    %edi,0xc4(%esp)
mov    0x1ac(%esp),%edi
mov    %edi,0xc8(%esp)
mov    0x1b0(%esp),%edi
mov    %edi,0xcc(%esp)
mov    0x1b4(%esp),%edi
mov    %edi,0xd0(%esp)
mov    0x1b8(%esp),%edi
mov    %edi,0xd4(%esp)
jne    804fa00 <fchmod@plt+0x5930>
mov    0x44(%esp),%ecx
xor    %bx,%bx
or     %ebx,%ecx
jne    804fa00 <fchmod@plt+0x5930>
mov    0x48(%esp),%edx
test   %edx,%edx
jne    804fa00 <fchmod@plt+0x5930>
test   %eax,%eax
js     804fa00 <fchmod@plt+0x5930>
cltd
cmp    %edx,0x4c(%esp)
jne    804fa00 <fchmod@plt+0x5930>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x4c02,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804fb00 <fchmod@plt+0x5a30>
mov    $0x23,%ecx
xor    %eax,%eax
mov    %esi,%edi
rep stos %eax,%es:(%edi)
jmp    804f378 <fchmod@plt+0x52a8>
lea    0x15c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x80540a1,0x8(%esp)
movl   $0x40,0x4(%esp)
mov    %eax,(%esp)
movl   $0x12,0x110(%esp)
00
call   8049e30 <snprintf@plt>
mov    0x110(%esp),%eax
jmp    804f11d <fchmod@plt+0x504d>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a080 <close@plt>
jmp    804f3aa <fchmod@plt+0x52da>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8054f78,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    0x24(%esp),%ecx
movl   $0x1,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
jmp    804f579 <fchmod@plt+0x54a9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    $0xffffffb5,%ebx
andl   $0xfffffffd,(%eax)
movl   $0x80550bd,(%esp)
call   8049be0 <perror@plt>
jmp    804f958 <fchmod@plt+0x5888>
lea    0x0(%esi),%esi
mov    0x15c(%esp),%edi
mov    %edi,0x78(%esp)
mov    0x160(%esp),%edi
mov    %edi,0x7c(%esp)
mov    0x164(%esp),%edi
mov    %edi,0x80(%esp)
mov    0x168(%esp),%edi
mov    %edi,0x84(%esp)
mov    0x16c(%esp),%edi
mov    %edi,0x88(%esp)
mov    0x170(%esp),%edi
mov    %edi,0x8c(%esp)
mov    0x174(%esp),%edi
mov    %edi,0x90(%esp)
mov    0x178(%esp),%edi
mov    %edi,0x94(%esp)
mov    0x17c(%esp),%edi
mov    %edi,0x98(%esp)
mov    0x180(%esp),%edi
mov    %edi,0x9c(%esp)
mov    0x184(%esp),%edi
mov    %edi,0xa0(%esp)
mov    0x188(%esp),%edi
mov    %edi,0xa4(%esp)
mov    0x18c(%esp),%edi
mov    %edi,0xa8(%esp)
mov    0x190(%esp),%edi
mov    %edi,0xac(%esp)
mov    0x194(%esp),%edi
mov    %edi,0xb0(%esp)
mov    0x198(%esp),%edi
mov    %edi,0xb4(%esp)
jmp    804f88d <fchmod@plt+0x57bd>
nop
movl   $0x80550a6,(%esp)
call   8049be0 <perror@plt>
jmp    804f958 <fchmod@plt+0x5888>
call   8049ae0 <__stack_chk_fail@plt>
movl   $0x8055062,(%esp)
call   8049be0 <perror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054fac,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8049cf0 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804fc68 <fchmod@plt+0x5b98>
movl   $0x0,0x8(%esp)
movl   $0x4c01,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
js     804fc00 <fchmod@plt+0x5b30>
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   804a080 <close@plt>
cmpl   $0x1,0x805a46c
jle    804fc5b <fchmod@plt+0x5b8b>
movl   $0x5,0x8(%esp)
movl   $0x80550d6,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ec0 <__printf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054ff8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049ac0 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   804a080 <close@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049cc0 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054ff8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049ac0 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    $0x1,%ebx
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   8049ff0 <__fprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804fd10 <fchmod@plt+0x5c40>
mov    0x805a468,%eax
test   %eax,%eax
jne    804fcf1 <fchmod@plt+0x5c21>
mov    %ebx,(%esp)
call   80503b0 <error+0x430>
test   %eax,%eax
je     804fd00 <fchmod@plt+0x5c30>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8050640 <error+0x6c0>
xchg   %ax,%ax
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8052cd0 <error+0x2d50>
lea    0x0(%esi),%esi
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%esi
test   %ebx,%ebx
je     804fda0 <fchmod@plt+0x5cd0>
mov    %ebx,(%esp)
call   8049d60 <strlen@plt>
test   %edi,%edi
mov    %eax,%ebp
je     804fda8 <fchmod@plt+0x5cd8>
mov    %edi,(%esp)
call   8049d60 <strlen@plt>
add    %eax,%ebp
test   %esi,%esi
je     804fdb0 <fchmod@plt+0x5ce0>
mov    %esi,(%esp)
call   8049d60 <strlen@plt>
add    %eax,%ebp
je     804fdb8 <fchmod@plt+0x5ce8>
add    $0x1,%ebp
test   %ebx,%ebx
je     804fdc8 <fchmod@plt+0x5cf8>
mov    %ebx,(%esp)
mov    %ebp,0x4(%esp)
call   8050600 <error+0x680>
mov    %eax,%ebx
test   %edi,%edi
je     804fd84 <fchmod@plt+0x5cb4>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8049c00 <strcat@plt>
test   %esi,%esi
je     804fd94 <fchmod@plt+0x5cc4>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049c00 <strcat@plt>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %ebp,%ebp
test   %edi,%edi
jne    804fd45 <fchmod@plt+0x5c75>
xchg   %ax,%ax
xor    %eax,%eax
add    %eax,%ebp
test   %esi,%esi
jne    804fd53 <fchmod@plt+0x5c83>
xor    %eax,%eax
add    %eax,%ebp
jne    804fd5f <fchmod@plt+0x5c8f>
xchg   %ax,%ax
add    $0x1c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80505d0 <error+0x650>
mov    %eax,%ebx
movb   $0x0,(%eax)
jmp    804fd74 <fchmod@plt+0x5ca4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
mov    0x3c(%esp),%esi
test   %ebx,%ebx
je     804feb0 <fchmod@plt+0x5de0>
mov    %ebx,(%esp)
call   8049d60 <strlen@plt>
test   %ebp,%ebp
mov    %eax,%edx
je     804fec0 <fchmod@plt+0x5df0>
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
call   8049d60 <strlen@plt>
mov    0xc(%esp),%edx
add    %edx,%eax
test   %edi,%edi
mov    %eax,0xc(%esp)
je     804fed0 <fchmod@plt+0x5e00>
mov    %edi,(%esp)
call   8049d60 <strlen@plt>
add    0xc(%esp),%eax
test   %esi,%esi
mov    %eax,0xc(%esp)
je     804fee8 <fchmod@plt+0x5e18>
mov    %esi,(%esp)
call   8049d60 <strlen@plt>
add    0xc(%esp),%eax
je     804fef8 <fchmod@plt+0x5e28>
add    $0x1,%eax
test   %ebx,%ebx
je     804ff08 <fchmod@plt+0x5e38>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8050600 <error+0x680>
mov    %eax,%ebx
test   %ebp,%ebp
je     804fe82 <fchmod@plt+0x5db2>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   8049c00 <strcat@plt>
test   %edi,%edi
je     804fe92 <fchmod@plt+0x5dc2>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8049c00 <strcat@plt>
test   %esi,%esi
je     804fea2 <fchmod@plt+0x5dd2>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049c00 <strcat@plt>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
test   %ebp,%ebp
jne    804fe11 <fchmod@plt+0x5d41>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    %edx,%eax
test   %edi,%edi
mov    %eax,0xc(%esp)
jne    804fe2f <fchmod@plt+0x5d5f>
xor    %eax,%eax
add    0xc(%esp),%eax
test   %esi,%esi
mov    %eax,0xc(%esp)
jne    804fe47 <fchmod@plt+0x5d77>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    0xc(%esp),%eax
jne    804fe59 <fchmod@plt+0x5d89>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80505d0 <error+0x650>
mov    %eax,%ebx
movb   $0x0,(%eax)
jmp    804fe72 <fchmod@plt+0x5da2>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x98,%esp
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
call   8049df0 <sigfillset@plt>
mov    %ebx,(%esp)
movl   $0x5,0x4(%esp)
call   8049d90 <sigdelset@plt>
mov    %ebx,(%esp)
movl   $0xb,0x4(%esp)
call   8049d90 <sigdelset@plt>
mov    0xa0(%esp),%eax
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049970 <sigprocmask@plt>
add    $0x98,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805a464,%eax
test   %eax,%eax
je     804ff90 <error+0x10>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   80498f0 <__vfprintf_chk@plt>
mov    0x8059324,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049f60 <fputc@plt>
add    $0x1c,%esp
ret
jmp    804ffe0 <error+0x60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8059324,%eax
mov    %eax,(%esp)
call   80498f0 <__vfprintf_chk@plt>
mov    0x8059324,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049f60 <fputc@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049cf0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebx
test   %edi,%edi
je     805006c <error+0xec>
lea    0x1(%ebx),%eax
mov    %eax,(%esp)
call   80505d0 <error+0x650>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   8049e90 <strncpy@plt>
mov    %esi,%eax
movb   $0x0,(%esi,%ebx,1)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x5,0x8(%esp)
movl   $0x80550ed,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x5,%ecx
push   %edi
mov    $0x8055102,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %eax,%eax
cmp    %dl,%cl
je     80501a1 <error+0x221>
test   %ebx,%ebx
je     80501ef <error+0x26f>
mov    $0x2,%ecx
mov    %ebx,%esi
mov    $0x8055107,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x0,0x18(%esp)
seta   %dl
setb   %al
sub    %eax,%edx
movsbl %dl,%edx
test   %edx,%edx
je     80501b0 <error+0x230>
mov    0x40(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   8049d60 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %eax,%ebp
jmp    8050134 <error+0x1b4>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
mov    $0x8055107,%edi
mov    %ebx,%esi
mov    $0x2,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %al
sub    %eax,%edx
movsbl %dl,%edx
test   %edx,%edx
jne    8050161 <error+0x1e1>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x2(%ebx),%eax
mov    %eax,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    8050161 <error+0x1e1>
movzbl 0x2(%ebx,%ebp,1),%edx
cmp    $0x2c,%dl
je     80501a1 <error+0x221>
test   %dl,%dl
je     80501a1 <error+0x221>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    8050185 <error+0x205>
movzbl (%ebx,%ebp,1),%eax
cmp    $0x2c,%al
je     80501e0 <error+0x260>
test   %al,%al
je     80501e0 <error+0x260>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
jne    8050118 <error+0x198>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x2,%ebx
mov    $0x2,%ecx
mov    %ebx,%esi
mov    $0x8055107,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x1,0x18(%esp)
seta   %dl
setb   %al
sub    %eax,%edx
movsbl %dl,%edx
jmp    80500fc <error+0x17c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
xor    $0x1,%eax
pop    %ebp
ret
mov    $0x1,%eax
jmp    80501a1 <error+0x221>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x8(%ebp),%eax
mov    0xc(%ebp),%ebx
mov    %eax,-0x44(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
test   %ebx,%ebx
je     8050356 <error+0x3d6>
mov    -0x44(%ebp),%ecx
mov    $0x80541bd,%eax
mov    %ebx,(%esp)
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %eax,-0x44(%ebp)
call   8049d60 <strlen@plt>
lea    0x1f(%eax),%edx
add    %ebx,%eax
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x1b(%esp),%ecx
mov    %ecx,-0x38(%ebp)
andl   $0xfffffff0,-0x38(%ebp)
cmp    %eax,%ebx
mov    %eax,-0x34(%ebp)
jb     805026c <error+0x2ec>
jmp    8050356 <error+0x3d6>
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ebx,-0x34(%ebp)
jbe    8050356 <error+0x3d6>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     8050380 <error+0x400>
sub    %ebx,%eax
mov    %eax,-0x2c(%ebp)
mov    -0x2c(%ebp),%eax
test   %eax,%eax
je     8050260 <error+0x2e0>
mov    -0x2c(%ebp),%edi
mov    -0x38(%ebp),%esi
mov    %ebx,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
call   8049e90 <strncpy@plt>
mov    $0x2,%ecx
mov    -0x38(%ebp),%eax
movb   $0x0,(%esi,%edi,1)
mov    $0x8055107,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8050390 <error+0x410>
add    $0x2,%eax
mov    %eax,-0x30(%ebp)
movl   $0x1,-0x3c(%ebp)
mov    -0x30(%ebp),%eax
mov    %eax,(%esp)
call   8049d60 <strlen@plt>
mov    -0x44(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,%esi
call   8049d60 <strlen@plt>
mov    %eax,%ecx
add    %edi,%ecx
cmp    %ecx,%edi
jae    8050340 <error+0x3c0>
mov    %ebx,-0x40(%ebp)
mov    %edi,%ebx
mov    %ecx,%edi
jmp    80502ff <error+0x37f>
lea    0x0(%esi),%esi
lea    0x1(%edx),%ebx
cmp    %edi,%ebx
jae    805033d <error+0x3bd>
movl   $0x2c,0x4(%esp)
mov    %ebx,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     8050370 <error+0x3f0>
sub    %ebx,%eax
cmp    %eax,%esi
lea    (%ebx,%eax,1),%edx
jne    80502f8 <error+0x378>
mov    -0x30(%ebp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
je     80503a0 <error+0x420>
lea    (%ebx,%esi,1),%edx
lea    0x1(%edx),%ebx
cmp    %edi,%ebx
jb     80502ff <error+0x37f>
mov    -0x40(%ebp),%ebx
mov    -0x3c(%ebp),%eax
test   %eax,%eax
je     805035b <error+0x3db>
add    -0x2c(%ebp),%ebx
add    $0x1,%ebx
cmp    %ebx,-0x34(%ebp)
ja     805026c <error+0x2ec>
mov    $0x1,%eax
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    80503ab <error+0x42b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,(%esp)
call   8049d60 <strlen@plt>
jmp    8050315 <error+0x395>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049d60 <strlen@plt>
mov    %eax,-0x2c(%ebp)
jmp    8050289 <error+0x309>
mov    %eax,-0x30(%ebp)
movl   $0x0,-0x3c(%ebp)
jmp    80502cc <error+0x34c>
nop
mov    -0x3c(%ebp),%eax
mov    -0x40(%ebp),%ebx
xor    $0x1,%eax
jmp    8050343 <error+0x3c3>
call   8049ae0 <__stack_chk_fail@plt>
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
test   %edx,%edx
je     80504a0 <error+0x520>
cmpb   $0x2f,(%edx)
je     80504a0 <error+0x520>
mov    $0x5,%ecx
mov    $0x80540a4,%edi
mov    %edx,%esi
mov    $0x1,%eax
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %bl
setb   %cl
cmp    %cl,%bl
je     8050498 <error+0x518>
mov    $0x805510a,%edi
mov    $0x5,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x805510f,%edi
mov    $0x6,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x8055115,%edi
mov    $0x6,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x805511b,%edi
mov    $0x6,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x8055121,%edi
mov    $0x7,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x8055128,%edi
mov    $0x7,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x805512f,%edi
mov    $0xb,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x805513a,%edi
mov    $0x7,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x8055141,%edi
mov    $0xb,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050498 <error+0x518>
mov    $0x805514c,%edi
mov    $0x8,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
lea    0x0(%esi),%esi
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80504f8 <error+0x578>
mov    0x805a468,%eax
test   %eax,%eax
jne    80504d1 <error+0x551>
mov    %ebx,(%esp)
call   80503b0 <error+0x430>
test   %eax,%eax
je     80504e0 <error+0x560>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8050640 <error+0x6c0>
xchg   %ax,%ax
mov    %ebx,(%esp)
call   80507d0 <error+0x850>
test   %eax,%eax
je     80504fc <error+0x57c>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    80504ec <error+0x56c>
movl   $0x5,0x8(%esp)
movl   $0x8055154,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     8050560 <error+0x5e0>
mov    0x805a468,%edx
test   %edx,%edx
jne    8050558 <error+0x5d8>
mov    %eax,(%esp)
call   80507d0 <error+0x850>
test   %eax,%eax
je     8050564 <error+0x5e4>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
jmp    8050640 <error+0x6c0>
xor    %eax,%eax
jmp    8050551 <error+0x5d1>
movl   $0x5,0x8(%esp)
movl   $0x8055154,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8055154,0x4(%esp)
movl   $0x0,(%esp)
call   8049ac0 <dcgettext@plt>
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804ffe0 <error+0x60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x20(%esp),%edx
test   %edx,%edx
je     80505e9 <error+0x669>
mov    %edx,(%esp)
call   8049ca0 <malloc@plt>
test   %eax,%eax
je     80505f0 <error+0x670>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
call   8050590 <error+0x610>
mov    0xc(%esp),%eax
jmp    80505e9 <error+0x669>
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     8050620 <error+0x6a0>
add    $0x1c,%esp
ret
nop
mov    %eax,0xc(%esp)
call   8050590 <error+0x610>
mov    0xc(%esp),%eax
add    $0x1c,%esp
ret
jmp    8050640 <error+0x6c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     8050670 <error+0x6f0>
mov    %eax,(%esp)
call   8049e50 <__strdup@plt>
test   %eax,%eax
je     8050660 <error+0x6e0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
call   8050590 <error+0x610>
mov    0xc(%esp),%eax
jmp    8050657 <error+0x6d7>
nop
xor    %eax,%eax
jmp    8050657 <error+0x6d7>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x22c(%esp)
xor    %eax,%eax
mov    0x250(%esp),%eax
lea    0x2c(%esp),%esi
movl   $0x8055166,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
call   80498b0 <__snprintf_chk@plt>
movl   $0x8054087,0x4(%esp)
mov    %esi,(%esp)
call   8049bd0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80507b8 <error+0x838>
lea    0x12c(%esp),%ebp
mov    %eax,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %ebp,(%esp)
call   8049a00 <fgets@plt>
test   %eax,%eax
je     80507b0 <error+0x830>
mov    %ebp,%ecx
mov    (%ecx),%eax
add    $0x4,%ecx
lea    -0x1010101(%eax),%edx
not    %eax
and    %eax,%edx
and    $0x80808080,%edx
je     805070f <error+0x78f>
mov    %edx,%eax
shr    $0x10,%eax
test   $0x8080,%edx
cmove  %eax,%edx
lea    0x2(%ecx),%eax
cmove  %eax,%ecx
add    %dl,%dl
sbb    $0x3,%ecx
xor    %edi,%edi
sub    %ebp,%ecx
cmp    $0x1,%ecx
jbe    8050786 <error+0x806>
movb   $0x0,0x12b(%esp,%ecx,1)
mov    %ebp,0x14(%esp)
movl   $0x805517c,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x100,0x4(%esp)
mov    %esi,(%esp)
call   80498b0 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   8049e50 <__strdup@plt>
mov    %eax,%edi
mov    %ebx,(%esp)
call   8049a30 <fclose@plt>
mov    %edi,%eax
mov    0x22c(%esp),%edi
xor    %gs:0x14,%edi
jne    80507bc <error+0x83c>
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    8050786 <error+0x806>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8050790 <error+0x810>
lea    0x0(%esi,%eiz,1),%esi
call   8049ae0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x203c,%esp
mov    0x2050(%esp),%eax
mov    %gs:0x14,%edx
mov    %edx,0x202c(%esp)
xor    %edx,%edx
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x10(%esp)
je     8050af7 <error+0xb77>
cmpb   $0x2f,(%eax)
je     8050a30 <error+0xab0>
lea    0x102a(%esp),%ebp
movl   $0xfff,0x4(%esp)
mov    %ebp,(%esp)
call   8049d50 <getcwd@plt>
test   %eax,%eax
je     805089f <error+0x91f>
mov    %ebp,(%esp)
call   8049d60 <strlen@plt>
add    %ebp,%eax
cmpb   $0x2f,-0x1(%eax)
je     8050a6d <error+0xaed>
lea    0x1(%eax),%esi
movb   $0x2f,(%eax)
movzbl (%ebx),%eax
xor    %edx,%edx
movl   $0x0,0xc(%esp)
test   %al,%al
je     8050a78 <error+0xaf8>
cmp    $0x2f,%al
je     80509a8 <error+0xa28>
cmp    $0x2e,%al
jne    805087c <error+0x8fc>
xchg   %ax,%ax
jmp    80509b4 <error+0xa34>
lea    0x0(%esi),%esi
add    $0x1,%esi
add    $0x1,%ebx
mov    %al,-0x1(%esi)
movzbl (%ebx),%eax
cmp    $0x2f,%al
je     80508d0 <error+0x950>
test   %al,%al
je     80508d0 <error+0x950>
mov    %esi,%ecx
sub    %ebp,%ecx
cmp    $0xfff,%ecx
jle    8050868 <error+0x8e8>
call   8049e70 <__errno_location@plt>
movl   $0x24,(%eax)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8049e50 <__strdup@plt>
mov    0x202c(%esp),%edx
xor    %gs:0x14,%edx
jne    8050b1e <error+0xb9e>
add    $0x203c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%edx),%eax
cmp    $0x100,%edx
mov    %ebx,0x18(%esp)
mov    %eax,0x14(%esp)
jg     8050b05 <error+0xb85>
lea    0x29(%esp),%eax
movb   $0x0,(%esi)
movl   $0x1000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8049b80 <readlink@plt>
test   %eax,%eax
mov    %eax,%ecx
js     8050a58 <error+0xad8>
movb   $0x0,0x29(%esp,%eax,1)
mov    %ebp,%edi
cmpb   $0x2f,0x29(%esp)
je     8050928 <error+0x9a8>
mov    %esi,%edi
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    8050920 <error+0x9a0>
mov    %ebx,(%esp)
mov    %ecx,0x1c(%esp)
call   8049d60 <strlen@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%esi
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,(%esp)
call   8049ca0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8050893 <error+0x913>
mov    0x1c(%esp),%ecx
lea    0x29(%esp),%eax
add    $0x1,%esi
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x8(%esp)
call   80499e0 <memcpy@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
add    %ebx,%ecx
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   80499e0 <memcpy@plt>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8049990 <free@plt>
mov    %ebx,0xc(%esp)
lea    0x1(%edi),%esi
movzbl (%ebx),%eax
movb   $0x2f,(%edi)
mov    0x14(%esp),%edx
jmp    805084a <error+0x8ca>
nop
movzbl 0x1(%ebx),%eax
add    $0x1,%ebx
jmp    805084a <error+0x8ca>
movzbl 0x1(%ebx),%ecx
cmp    $0x2f,%cl
je     8050a20 <error+0xaa0>
test   %cl,%cl
je     8050a20 <error+0xaa0>
cmp    $0x2e,%cl
jne    805087c <error+0x8fc>
movzbl 0x2(%ebx),%ecx
cmp    $0x2f,%cl
je     80509db <error+0xa5b>
test   %cl,%cl
jne    805087c <error+0x8fc>
lea    0x102b(%esp),%eax
add    $0x2,%ebx
cmp    %eax,%esi
jbe    8050a14 <error+0xa94>
cmpb   $0x2f,-0x2(%esi)
lea    -0x1(%esi),%edi
je     8050b15 <error+0xb95>
mov    %edi,%esi
jmp    8050a09 <error+0xa89>
lea    0x0(%esi),%esi
sub    $0x1,%esi
cmpb   $0x2f,-0x1(%esi)
je     8050a14 <error+0xa94>
lea    0x102b(%esp),%eax
cmp    %eax,%esi
jne    8050a00 <error+0xa80>
mov    %ecx,%eax
jmp    805084a <error+0x8ca>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    %ecx,%eax
jmp    805084a <error+0x8ca>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
lea    0x102b(%esp),%esi
movb   $0x2f,0x102a(%esp)
lea    0x102a(%esp),%ebp
lea    0x1(%eax),%ebx
jmp    805083d <error+0x8bd>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    8050893 <error+0x913>
mov    %esi,%edi
jmp    8050995 <error+0xa15>
mov    %eax,%esi
mov    0x10(%esp),%ebx
jmp    805083d <error+0x8bd>
lea    0x102b(%esp),%eax
cmp    %eax,%esi
je     8050a8e <error+0xb0e>
xor    %eax,%eax
cmpb   $0x2f,-0x1(%esi)
sete   %al
sub    %eax,%esi
mov    0xc(%esp),%eax
movb   $0x0,(%esi)
mov    %eax,(%esp)
call   8049990 <free@plt>
movl   $0x2f,0x4(%esp)
mov    %ebp,(%esp)
call   8049f50 <strrchr@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8050ad5 <error+0xb55>
mov    $0x805518b,%edi
mov    $0x4,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8050ad5 <error+0xb55>
call   804a0b0 <__ctype_b_loc@plt>
movsbl 0x4(%ebx),%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
jne    8050ae2 <error+0xb62>
mov    %ebp,(%esp)
call   8049e50 <__strdup@plt>
jmp    80508ab <error+0x92b>
add    $0x1,%ebx
mov    %ebx,(%esp)
call   8050680 <error+0x700>
test   %eax,%eax
jne    80508ab <error+0x92b>
jmp    8050ad5 <error+0xb55>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    80508ab <error+0x92b>
call   8049e70 <__errno_location@plt>
movl   $0x28,(%eax)
jmp    8050893 <error+0x913>
mov    %ecx,%eax
mov    %edi,%esi
jmp    805084a <error+0x8ca>
call   8049ae0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x74,%esp
mov    (%edx),%edi
mov    0xc(%edx),%ebx
mov    0x10(%edx),%esi
mov    %eax,0x50(%esp)
mov    0x14(%edx),%eax
mov    %edi,%ecx
mov    0x4(%edx),%edi
mov    %ebx,0x8(%esp)
mov    0x1c(%edx),%ebx
mov    %esi,0xc(%esp)
mov    0x20(%edx),%esi
mov    %eax,0x10(%esp)
mov    0x24(%edx),%eax
mov    %edi,%ebp
mov    0x8(%edx),%edi
mov    %ebx,0x18(%esp)
mov    0x2c(%edx),%ebx
mov    %esi,0x1c(%esp)
mov    0x30(%edx),%esi
mov    %eax,0x20(%esp)
mov    %edi,0x4(%esp)
mov    0x18(%edx),%edi
mov    %ebx,0x28(%esp)
mov    0x38(%edx),%ebx
mov    %esi,0x2c(%esp)
mov    %edi,0x14(%esp)
mov    0x28(%edx),%edi
mov    %edi,0x24(%esp)
mov    0x34(%edx),%edi
mov    %edi,0x30(%esp)
mov    %ebx,0x34(%esp)
mov    0x3c(%edx),%edx
mov    %ecx,(%esp)
mov    %ebp,0x3c(%esp)
mov    %edx,0x38(%esp)
mov    0x50(%esp),%edx
mov    (%edx),%eax
mov    0xc(%edx),%edi
mov    %eax,0x4c(%esp)
mov    0x4(%edx),%eax
mov    %edi,0x40(%esp)
mov    %eax,%esi
mov    0x8(%edx),%eax
mov    0x10(%edx),%edx
mov    %esi,0x48(%esp)
mov    %eax,%ebx
xor    %esi,%ebx
xor    %edi,%ebx
mov    %eax,%edi
add    0x4c(%esp),%ebx
mov    %edx,0x44(%esp)
mov    %eax,0x58(%esp)
add    %ecx,%ebx
mov    $0xb,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%edi
mov    %edi,%edx
mov    0x44(%esp),%edi
mov    $0xe,%cl
mov    %edx,0x54(%esp)
xor    %esi,%edx
mov    %edx,%eax
mov    0x40(%esp),%edx
xor    %ebx,%eax
add    %ebp,%edi
add    %eax,%edi
mov    %ebx,%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %edx,%edi
rol    %cl,%esi
mov    %esi,%ebp
mov    0x4(%esp),%esi
xor    %edi,%eax
xor    %ebp,%eax
mov    $0xf,%cl
mov    %ebp,0x60(%esp)
add    %edx,%esi
mov    0x54(%esp),%edx
add    %eax,%esi
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%ebx
mov    %edi,%ecx
add    0x8(%esp),%edx
xor    %esi,%ecx
mov    %ecx,%eax
mov    $0xc,%ecx
xor    %ebx,%eax
add    %edx,%eax
rol    %cl,%eax
mov    $0xa,%cl
add    %ebp,%eax
rol    %cl,%edi
mov    0xc(%esp),%ecx
add    %ebp,%ecx
mov    %esi,%ebp
xor    %eax,%ebp
mov    %ebp,%edx
mov    0x18(%esp),%ebp
xor    %edi,%edx
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
add    0x10(%esp),%ebx
mov    %eax,%ecx
xor    %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x8,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%eax
add    0x14(%esp),%edi
mov    %edx,%ecx
xor    %ebx,%ecx
xor    %eax,%ecx
add    %ecx,%edi
mov    $0x7,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%edx
mov    %ebx,%ecx
add    %ebp,%esi
xor    %edi,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
add    0x1c(%esp),%eax
mov    %edi,%ecx
xor    %esi,%ecx
xor    %ebx,%ecx
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
add    0x20(%esp),%edx
mov    %esi,%ecx
xor    %eax,%ecx
xor    %edi,%ecx
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
add    0x24(%esp),%ebx
mov    %eax,%ecx
xor    %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%eax
add    0x28(%esp),%edi
mov    %edx,%ecx
xor    %ebx,%ecx
xor    %eax,%ecx
add    %ecx,%edi
mov    $0xf,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%edx
add    0x2c(%esp),%esi
mov    %ebx,%ecx
xor    %edi,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x6,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
add    0x30(%esp),%eax
mov    %edi,%ecx
xor    %esi,%ecx
xor    %ebx,%ecx
add    %ecx,%eax
mov    $0x7,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
add    0x34(%esp),%edx
mov    %esi,%ecx
xor    %eax,%ecx
xor    %edi,%ecx
add    %ecx,%edx
mov    $0x9,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
add    0x38(%esp),%ebx
mov    %eax,%ecx
xor    %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x8,%ecx
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
rol    %cl,%eax
mov    %ebx,%ecx
lea    0x5a827999(%ebp,%edi,1),%edi
not    %ecx
mov    %ebx,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
add    %ecx,%edi
mov    $0x7,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%edx
mov    0xc(%esp),%ecx
mov    %edi,%ebp
and    %ebx,%ebp
lea    0x5a827999(%ecx,%esi,1),%esi
mov    %edi,%ecx
not    %ecx
and    %edx,%ecx
or     %ebp,%ecx
add    %ecx,%esi
mov    $0x6,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
mov    0x30(%esp),%ecx
mov    %esi,%ebp
and    %edi,%ebp
lea    0x5a827999(%ecx,%eax,1),%ecx
mov    %esi,%eax
not    %eax
and    %ebx,%eax
or     %ebp,%eax
add    %ecx,%eax
mov    $0x8,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
mov    0x3c(%esp),%ecx
mov    %eax,%ebp
and    %esi,%ebp
lea    0x5a827999(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
and    %edi,%edx
or     %ebp,%edx
mov    0x24(%esp),%ebp
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
add    %ebx,%edx
mov    $0xa,%cl
lea    0x5a827999(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
rol    %cl,%esi
mov    %ebp,%ecx
mov    %edx,%ebp
and    %eax,%ebp
and    %esi,%ecx
or     %ebp,%ecx
mov    0x14(%esp),%ebp
add    %ecx,%ebx
mov    $0xb,%ecx
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
lea    0x5a827999(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
rol    %cl,%eax
mov    %ebp,%ecx
mov    %ebx,%ebp
and    %edx,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x38(%esp),%ebp
add    %ecx,%edi
mov    $0x9,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
lea    0x5a827999(%ebp,%esi,1),%esi
mov    %edi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
mov    %edi,%ebp
and    %ebx,%ebp
and    %edx,%ecx
or     %ebp,%ecx
mov    0x8(%esp),%ebp
add    %ecx,%esi
mov    $0x7,%ecx
rol    %cl,%esi
add    %eax,%esi
mov    $0xa,%cl
rol    %cl,%ebx
lea    0x5a827999(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    %esi,%ebp
not    %eax
and    %edi,%ebp
and    %ebx,%eax
or     %ebp,%eax
mov    0x2c(%esp),%ebp
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
add    %edx,%eax
mov    $0xa,%cl
rol    %cl,%edi
lea    0x5a827999(%ebp,%edx,1),%ecx
mov    %eax,%edx
mov    %eax,%ebp
not    %edx
and    %esi,%ebp
and    %edi,%edx
or     %ebp,%edx
mov    (%esp),%ebp
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
add    %ebx,%edx
mov    $0xa,%cl
rol    %cl,%esi
mov    %edx,%ecx
lea    0x5a827999(%ebp,%ebx,1),%ebx
not    %ecx
mov    %edx,%ebp
and    %esi,%ecx
and    %eax,%ebp
or     %ebp,%ecx
mov    0x20(%esp),%ebp
add    %ecx,%ebx
mov    $0xc,%ecx
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
rol    %cl,%eax
mov    %ebx,%ecx
lea    0x5a827999(%ebp,%edi,1),%edi
not    %ecx
mov    %ebx,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
mov    0x10(%esp),%ebp
add    %ecx,%edi
mov    $0xf,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
rol    %cl,%edx
mov    %edi,%ecx
lea    0x5a827999(%ebp,%esi,1),%esi
not    %ecx
mov    %edi,%ebp
and    %edx,%ecx
and    %ebx,%ebp
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
add    %eax,%esi
mov    $0xa,%cl
rol    %cl,%ebx
lea    0x5a827999(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    %esi,%ebp
not    %eax
and    %ebx,%eax
and    %edi,%ebp
or     %ebp,%eax
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
mov    0x34(%esp),%ecx
mov    %eax,%ebp
and    %esi,%ebp
lea    0x5a827999(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
and    %edi,%edx
or     %ebp,%edx
mov    %esi,%ebp
mov    0x28(%esp),%esi
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
add    %ebx,%edx
mov    $0xa,%cl
lea    0x5a827999(%esi,%ebx,1),%ebx
mov    %edx,%esi
not    %esi
rol    %cl,%ebp
mov    %esi,%ecx
mov    %edx,%esi
and    %eax,%esi
and    %ebp,%ecx
or     %esi,%ecx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%eax
mov    0x1c(%esp),%ecx
mov    %ebx,%esi
not    %esi
lea    0x5a827999(%ecx,%edi,1),%edi
mov    %esi,%ecx
mov    %edi,0x5c(%esp)
mov    %ebx,%edi
and    %eax,%ecx
and    %edx,%edi
or     %edi,%ecx
mov    0x5c(%esp),%edi
add    %ecx,%edi
mov    $0xc,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %ebp,%edi
rol    %cl,%edx
mov    0x8(%esp),%ecx
or     %edi,%esi
xor    %edx,%esi
lea    0x6ed9eba1(%ecx,%ebp,1),%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %eax,%esi
rol    %cl,%ebx
mov    0x24(%esp),%ecx
lea    0x6ed9eba1(%ecx,%eax,1),%ecx
mov    %edi,%eax
not    %eax
or     %esi,%eax
xor    %ebx,%eax
add    %ecx,%eax
mov    $0xd,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%edi
mov    0x34(%esp),%ecx
mov    %eax,%ebp
lea    0x6ed9eba1(%ecx,%edx,1),%ecx
mov    %esi,%edx
not    %edx
or     %eax,%edx
xor    %edi,%edx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %ebx,%edx
rol    %cl,%esi
mov    0xc(%esp),%ecx
lea    0x6ed9eba1(%ecx,%ebx,1),%ebx
mov    %eax,%ecx
mov    0x20(%esp),%eax
not    %ecx
or     %edx,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x7,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edi,%ebx
rol    %cl,%ebp
lea    0x6ed9eba1(%eax,%edi,1),%ecx
mov    %edx,%edi
not    %edi
mov    %edi,%eax
mov    0x38(%esp),%edi
or     %ebx,%eax
xor    %ebp,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
add    %esi,%eax
mov    $0xa,%cl
lea    0x6ed9eba1(%edi,%esi,1),%esi
mov    %ebx,%edi
not    %edi
rol    %cl,%edx
mov    %edi,%ecx
mov    %ebx,%edi
mov    0x1c(%esp),%ebx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebp,%esi
rol    %cl,%edi
mov    %eax,%ecx
not    %ecx
or     %esi,%ecx
xor    %edi,%ecx
lea    0x6ed9eba1(%ebx,%ebp,1),%ebx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%eax
mov    0x3c(%esp),%ecx
lea    0x6ed9eba1(%ecx,%edx,1),%ebp
mov    %esi,%edx
not    %edx
mov    $0xf,%ecx
or     %ebx,%edx
xor    %eax,%edx
add    %edx,%ebp
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
mov    0x4(%esp),%ecx
lea    0x6ed9eba1(%ecx,%edi,1),%ecx
mov    %ebx,%edi
not    %edi
mov    %edi,%edx
mov    0x18(%esp),%edi
or     %ebp,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xe,%ecx
lea    0x6ed9eba1(%edi,%eax,1),%edi
rol    %cl,%edx
add    %eax,%edx
mov    %ebp,%eax
not    %eax
mov    $0xa,%cl
or     %edx,%eax
rol    %cl,%ebx
xor    %ebx,%eax
mov    $0x8,%cl
add    %eax,%edi
mov    (%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
lea    0x6ed9eba1(%eax,%esi,1),%ecx
mov    %edx,%esi
not    %esi
mov    %esi,%eax
mov    0x14(%esp),%esi
or     %edi,%eax
xor    %ebp,%eax
add    %ecx,%eax
mov    $0xd,%ecx
lea    0x6ed9eba1(%esi,%ebx,1),%esi
rol    %cl,%eax
add    %ebx,%eax
mov    %edi,%ebx
not    %ebx
mov    $0xa,%cl
rol    %cl,%edx
mov    %ebx,%ecx
mov    0x30(%esp),%ebx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%esi
mov    $0x6,%ecx
lea    0x6ed9eba1(%ebx,%ebp,1),%ebx
rol    %cl,%esi
add    %ebp,%esi
mov    %eax,%ebp
not    %ebp
mov    $0xa,%cl
rol    %cl,%edi
mov    %ebp,%ecx
mov    0x28(%esp),%ebp
or     %esi,%ecx
xor    %edi,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
lea    0x6ed9eba1(%ebp,%edx,1),%ebp
rol    %cl,%ebx
add    %edx,%ebx
mov    %esi,%edx
not    %edx
mov    $0xa,%cl
or     %ebx,%edx
rol    %cl,%eax
xor    %eax,%edx
mov    $0xc,%cl
add    %edx,%ebp
mov    0x10(%esp),%edx
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
lea    0x6ed9eba1(%edx,%edi,1),%ecx
mov    %ebx,%edi
not    %edi
mov    %edi,%edx
mov    0x2c(%esp),%edi
or     %ebp,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0x7,%ecx
lea    0x6ed9eba1(%edi,%eax,1),%edi
rol    %cl,%edx
add    %eax,%edx
mov    %ebp,%eax
not    %eax
mov    $0xa,%cl
or     %edx,%eax
rol    %cl,%ebx
mov    $0x5,%cl
xor    %ebx,%eax
add    %eax,%edi
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
mov    0x3c(%esp),%ecx
lea    -0x70e44324(%ecx,%esi,1),%ecx
mov    %ebp,%esi
not    %esi
mov    %esi,%eax
mov    %edi,%esi
and    %ebp,%esi
and    %edx,%eax
or     %esi,%eax
mov    0x20(%esp),%esi
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x70e44324(%esi,%ebx,1),%esi
mov    %edx,%ebx
not    %ebx
mov    %ebx,%ecx
mov    %eax,%ebx
and    %edx,%ebx
and    %edi,%ecx
or     %ebx,%ecx
mov    0x28(%esp),%ebx
add    %ecx,%esi
mov    $0xc,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebp,%esi
rol    %cl,%edi
lea    -0x70e44324(%ebx,%ebp,1),%ebx
mov    %edi,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x24(%esp),%ebp
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%eax
lea    -0x70e44324(%ebp,%edx,1),%ebp
mov    %eax,%edx
mov    %ebx,%ecx
not    %edx
and    %eax,%ecx
and    %esi,%edx
or     %ecx,%edx
mov    $0xf,%ecx
add    %edx,%ebp
mov    (%esp),%edx
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
lea    -0x70e44324(%edx,%edi,1),%ecx
mov    %esi,%edi
not    %edi
mov    %edi,%edx
mov    %ebp,%edi
and    %esi,%edi
and    %ebx,%edx
or     %edi,%edx
mov    0x1c(%esp),%edi
add    %ecx,%edx
mov    $0xe,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %eax,%edx
rol    %cl,%ebx
lea    -0x70e44324(%edi,%eax,1),%edi
mov    %ebx,%eax
mov    %edx,%ecx
not    %eax
and    %ebx,%ecx
and    %ebp,%eax
or     %ecx,%eax
mov    $0xf,%ecx
add    %eax,%edi
mov    0x2c(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
lea    -0x70e44324(%eax,%esi,1),%ecx
mov    %ebp,%esi
not    %esi
mov    %esi,%eax
mov    %edi,%esi
and    %edx,%eax
and    %ebp,%esi
or     %esi,%eax
mov    0xc(%esp),%esi
add    %ecx,%eax
mov    $0x9,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x70e44324(%esi,%ebx,1),%esi
mov    %edx,%ebx
not    %ebx
mov    %ebx,%ecx
mov    %eax,%ebx
and    %edx,%ebx
and    %edi,%ecx
or     %ebx,%ecx
mov    0x30(%esp),%ebx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebp,%esi
rol    %cl,%edi
lea    -0x70e44324(%ebx,%ebp,1),%ebx
mov    %edi,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x8(%esp),%ebp
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%eax
lea    -0x70e44324(%ebp,%edx,1),%ebp
mov    %eax,%edx
mov    %ebx,%ecx
not    %edx
and    %eax,%ecx
and    %esi,%edx
or     %ecx,%edx
mov    $0xe,%ecx
add    %edx,%ebp
mov    0x18(%esp),%edx
rol    %cl,%ebp
mov    $0xa,%cl
add    %edi,%ebp
rol    %cl,%esi
lea    -0x70e44324(%edx,%edi,1),%ecx
mov    %esi,%edi
not    %edi
mov    %edi,%edx
mov    %ebp,%edi
and    %esi,%edi
and    %ebx,%edx
or     %edi,%edx
mov    0x38(%esp),%edi
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %eax,%edx
lea    -0x70e44324(%edi,%eax,1),%edi
rol    %cl,%ebx
mov    %ebx,%eax
mov    %edx,%ecx
not    %eax
and    %ebx,%ecx
and    %ebp,%eax
or     %ecx,%eax
mov    $0x6,%ecx
add    %eax,%edi
mov    0x34(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%ebp
lea    -0x70e44324(%eax,%esi,1),%ecx
mov    %ebp,%esi
not    %esi
mov    %esi,%eax
mov    %edi,%esi
and    %ebp,%esi
and    %edx,%eax
or     %esi,%eax
mov    0x10(%esp),%esi
add    %ecx,%eax
mov    $0x8,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x70e44324(%esi,%ebx,1),%ebx
mov    %edx,%esi
not    %esi
mov    %esi,%ecx
mov    %eax,%esi
and    %edx,%esi
and    %edi,%ecx
or     %esi,%ecx
mov    0x14(%esp),%esi
add    %ecx,%ebx
mov    $0x6,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %ebp,%ebx
rol    %cl,%edi
lea    -0x70e44324(%esi,%ebp,1),%esi
mov    %edi,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %ebx,%ebp
and    %edi,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%esi
mov    $0x5,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%eax
lea    -0x70e44324(%ebp,%edx,1),%ecx
mov    %eax,%ebp
not    %ebp
mov    %ebp,%edx
mov    %esi,%ebp
and    %eax,%ebp
and    %ebx,%edx
or     %ebp,%edx
mov    0xc(%esp),%ebp
add    %ecx,%edx
mov    $0xc,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    %ebx,%ecx
lea    -0x56ac02b2(%ebp,%edi,1),%edi
not    %ecx
mov    (%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x9,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %eax,%edi
rol    %cl,%esi
lea    -0x56ac02b2(%ebp,%eax,1),%ecx
mov    %esi,%eax
not    %eax
or     %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
mov    0x10(%esp),%ecx
lea    -0x56ac02b2(%ecx,%ebx,1),%ebx
mov    %edx,%ecx
not    %ecx
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %esi,%ebx
rol    %cl,%edi
mov    0x20(%esp),%ecx
lea    -0x56ac02b2(%ecx,%esi,1),%esi
mov    %edi,%ecx
not    %ecx
or     %eax,%ecx
xor    %ebx,%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%eax
mov    0x18(%esp),%ecx
lea    -0x56ac02b2(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
or     %ebx,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x2c(%esp),%ecx
mov    %ebx,%ebp
not    %ebp
lea    -0x56ac02b2(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    0x4(%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x8,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %eax,%edi
rol    %cl,%esi
lea    -0x56ac02b2(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    0x24(%esp),%ebp
not    %eax
or     %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xd,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %ebx,%eax
rol    %cl,%edx
lea    -0x56ac02b2(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%ebx
mov    $0xc,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %esi,%ebx
rol    %cl,%edi
mov    0x34(%esp),%ecx
mov    %edi,%ebp
not    %ebp
lea    -0x56ac02b2(%ecx,%esi,1),%esi
mov    %ebp,%ecx
or     %eax,%ecx
xor    %ebx,%ecx
add    %ecx,%esi
mov    $0x5,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%eax
mov    0x3c(%esp),%ecx
lea    -0x56ac02b2(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
or     %ebx,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xc,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x8(%esp),%ecx
lea    -0x56ac02b2(%ecx,%edi,1),%ebp
mov    %ebx,%edi
not    %edi
mov    %edi,%ecx
mov    0x1c(%esp),%edi
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebp
mov    $0xd,%ecx
lea    -0x56ac02b2(%edi,%eax,1),%edi
rol    %cl,%ebp
mov    $0xa,%cl
add    %eax,%ebp
rol    %cl,%esi
mov    %esi,%eax
mov    $0xe,%cl
not    %eax
or     %edx,%eax
xor    %ebp,%eax
add    %eax,%edi
mov    0x28(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
add    %ebx,%edi
rol    %cl,%edx
lea    -0x56ac02b2(%eax,%ebx,1),%ecx
mov    %edx,%ebx
not    %ebx
mov    %ebx,%eax
mov    0x14(%esp),%ebx
or     %ebp,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %esi,%eax
rol    %cl,%ebp
lea    -0x56ac02b2(%ebx,%esi,1),%esi
mov    %ebp,%ebx
not    %ebx
mov    %ebx,%ecx
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %edx,%esi
rol    %cl,%edi
mov    %edi,%ebx
mov    0x38(%esp),%edi
mov    %ebx,0x64(%esp)
lea    -0x56ac02b2(%edi,%edx,1),%ecx
mov    %ebx,%edi
not    %edi
mov    %edi,%edx
mov    0x30(%esp),%edi
or     %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
lea    (%edx,%ebp,1),%ebx
mov    $0xa,%cl
mov    %ebx,%edx
mov    %eax,%ebx
rol    %cl,%ebx
mov    %ebx,0x68(%esp)
not    %ebx
mov    $0x6,%cl
mov    %ebx,%eax
mov    0x48(%esp),%ebx
or     %esi,%eax
lea    -0x56ac02b2(%edi,%ebp,1),%edi
mov    0x40(%esp),%ebp
xor    %edx,%eax
add    %eax,%edi
mov    0x58(%esp),%eax
rol    %cl,%edi
mov    $0xa,%cl
rol    %cl,%esi
mov    %esi,0x70(%esp)
mov    %ebp,%esi
mov    $0x8,%cl
not    %esi
or     %esi,%eax
mov    0x4c(%esp),%esi
xor    %ebx,%eax
mov    %edi,0x6c(%esp)
mov    %edx,0x5c(%esp)
mov    0x54(%esp),%edx
lea    0x50a28be6(%esi,%eax,1),%edi
mov    0x44(%esp),%esi
add    0x10(%esp),%edi
rol    %cl,%edi
mov    $0x9,%cl
add    %esi,%edi
mov    %esi,%eax
mov    0x34(%esp),%esi
lea    0x50a28be6(%eax,%esi,1),%esi
mov    %edx,%eax
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %eax,%esi
mov    0x18(%esp),%eax
rol    %cl,%esi
add    %ebp,%esi
lea    0x50a28be6(%ebp,%eax,1),%ebx
mov    0x60(%esp),%ebp
mov    %ebp,%eax
not    %eax
or     %edi,%eax
xor    %esi,%eax
add    %eax,%ebx
mov    (%esp),%eax
rol    %cl,%ebx
mov    $0xa,%cl
add    %edx,%ebx
rol    %cl,%edi
lea    0x50a28be6(%eax,%edx,1),%edx
mov    %edi,%eax
not    %eax
mov    $0xb,%cl
or     %esi,%eax
xor    %ebx,%eax
add    %edx,%eax
mov    %ebp,%edx
rol    %cl,%eax
add    %ebp,%eax
mov    0x20(%esp),%ebp
mov    $0xa,%cl
rol    %cl,%esi
lea    0x50a28be6(%ebp,%edx,1),%ecx
mov    %esi,%edx
mov    0x4(%esp),%ebp
not    %edx
or     %ebx,%edx
xor    %eax,%edx
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
lea    0x50a28be6(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
mov    %ebp,%ecx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0xf,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x28(%esp),%ecx
mov    %eax,%ebp
not    %ebp
lea    0x50a28be6(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    0xc(%esp),%ebp
or     %edx,%ecx
xor    %edi,%ecx
add    %ecx,%esi
mov    $0xf,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
lea    0x50a28be6(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    0x30(%esp),%ebp
or     %edi,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x50a28be6(%ebp,%eax,1),%ecx
mov    %edi,%eax
mov    0x14(%esp),%ebp
not    %eax
or     %esi,%eax
xor    %ebx,%eax
add    %ecx,%eax
mov    $0x7,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x50a28be6(%ebp,%edx,1),%ecx
mov    %esi,%edx
not    %edx
or     %ebx,%edx
xor    %eax,%edx
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x38(%esp),%ecx
lea    0x50a28be6(%ecx,%edi,1),%edi
mov    %ebx,%ecx
not    %ecx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x8,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x1c(%esp),%ecx
lea    0x50a28be6(%ecx,%esi,1),%esi
mov    %eax,%ecx
not    %ecx
or     %edx,%ecx
xor    %edi,%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x3c(%esp),%ecx
lea    0x50a28be6(%ecx,%ebx,1),%ebx
mov    %edx,%ecx
not    %ecx
or     %edi,%ecx
xor    %esi,%ecx
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x24(%esp),%ecx
lea    0x50a28be6(%ecx,%eax,1),%ecx
mov    %edi,%eax
not    %eax
or     %esi,%eax
xor    %ebx,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x8(%esp),%ecx
lea    0x50a28be6(%ecx,%edx,1),%ecx
mov    %esi,%edx
not    %edx
or     %ebx,%edx
xor    %eax,%edx
add    %ecx,%edx
mov    $0xc,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x2c(%esp),%ecx
lea    0x50a28be6(%ecx,%edi,1),%edi
mov    %ebx,%ecx
not    %ecx
or     %eax,%ecx
xor    %edx,%ecx
add    %ecx,%edi
mov    $0x6,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
lea    0x5c4dd124(%ebp,%esi,1),%esi
mov    %eax,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ebp
and    %edx,%ecx
or     %ebp,%ecx
mov    0x28(%esp),%ebp
add    %ecx,%esi
mov    $0x9,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
lea    0x5c4dd124(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edx,%ebp
and    %edi,%ecx
or     %ebp,%ecx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x8(%esp),%ecx
mov    %ebx,%ebp
and    %edi,%ebp
lea    0x5c4dd124(%ecx,%eax,1),%ecx
mov    %edi,%eax
not    %eax
and    %esi,%eax
or     %ebp,%eax
mov    0x18(%esp),%ebp
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x5c4dd124(%ebp,%edx,1),%ecx
mov    %esi,%edx
mov    %eax,%ebp
not    %edx
and    %esi,%ebp
and    %ebx,%edx
or     %ebp,%edx
mov    (%esp),%ebp
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
lea    0x5c4dd124(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edx,%ebp
and    %ebx,%ebp
and    %eax,%ecx
or     %ebp,%ecx
mov    0x30(%esp),%ebp
add    %ecx,%edi
mov    $0xc,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
lea    0x5c4dd124(%ebp,%esi,1),%esi
mov    %eax,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ebp
and    %edx,%ecx
or     %ebp,%ecx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x10(%esp),%ecx
mov    %edx,%ebp
not    %ebp
lea    0x5c4dd124(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ecx
and    %edx,%ebp
or     %ebp,%ecx
mov    0x24(%esp),%ebp
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x5c4dd124(%ebp,%eax,1),%ecx
mov    %edi,%eax
mov    %ebx,%ebp
not    %eax
and    %edi,%ebp
and    %esi,%eax
or     %ebp,%eax
add    %ecx,%eax
mov    $0xb,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x34(%esp),%ecx
mov    %eax,%ebp
and    %esi,%ebp
lea    0x5c4dd124(%ecx,%edx,1),%ecx
mov    %esi,%edx
not    %edx
and    %ebx,%edx
or     %ebp,%edx
mov    0x38(%esp),%ebp
add    %ecx,%edx
mov    $0x7,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
lea    0x5c4dd124(%ebp,%edi,1),%edi
mov    %ebx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edx,%ebp
and    %ebx,%ebp
and    %eax,%ecx
or     %ebp,%ecx
add    %ecx,%edi
mov    $0x7,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x1c(%esp),%ecx
mov    %eax,%ebp
not    %ebp
lea    0x5c4dd124(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    %edi,%ebp
and    %edx,%ecx
and    %eax,%ebp
or     %ebp,%ecx
mov    0x2c(%esp),%ebp
add    %ecx,%esi
mov    $0xc,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
lea    0x5c4dd124(%ebp,%ebx,1),%ebx
mov    %edx,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edx,%ebp
and    %edi,%ecx
or     %ebp,%ecx
mov    0xc(%esp),%ebp
add    %ecx,%ebx
mov    $0x7,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x5c4dd124(%ebp,%eax,1),%ecx
mov    %edi,%eax
mov    %ebx,%ebp
not    %eax
and    %edi,%ebp
and    %esi,%eax
or     %ebp,%eax
mov    0x20(%esp),%ebp
add    %ecx,%eax
mov    $0x6,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x5c4dd124(%ebp,%edx,1),%ecx
mov    %esi,%edx
mov    %eax,%ebp
not    %edx
and    %esi,%ebp
and    %ebx,%edx
or     %ebp,%edx
add    %ecx,%edx
mov    $0xf,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x3c(%esp),%ecx
mov    %ebx,%ebp
not    %ebp
lea    0x5c4dd124(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    %edx,%ebp
and    %eax,%ecx
and    %ebx,%ebp
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%edi
mov    $0xd,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
lea    0x5c4dd124(%ebp,%esi,1),%esi
mov    %eax,%ebp
not    %ebp
mov    %ebp,%ecx
mov    %edi,%ebp
and    %edx,%ecx
and    %eax,%ebp
or     %ebp,%ecx
mov    %edi,%ebp
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
not    %ebp
rol    %cl,%edx
mov    0x38(%esp),%ecx
add    %ebx,%esi
lea    0x6d703ef3(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x10(%esp),%ecx
lea    0x6d703ef3(%ecx,%eax,1),%ecx
mov    %esi,%eax
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0x7,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x3c(%esp),%ecx
mov    %eax,%ebp
not    %ebp
lea    0x6d703ef3(%ecx,%edx,1),%ecx
mov    %ebx,%edx
not    %edx
or     %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xf,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x8(%esp),%ecx
lea    0x6d703ef3(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    0x18(%esp),%ebp
or     %edx,%ecx
xor    %ebx,%ecx
add    %ecx,%edi
mov    $0xb,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%esi,1),%esi
mov    %edx,%ebp
not    %ebp
rol    %cl,%eax
mov    %ebp,%ecx
mov    %edi,%ebp
or     %edi,%ecx
not    %ebp
xor    %eax,%ecx
add    %ecx,%esi
mov    $0x8,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x34(%esp),%ecx
lea    0x6d703ef3(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
mov    0x20(%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x6,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x14(%esp),%ecx
lea    0x6d703ef3(%ecx,%eax,1),%ecx
mov    %esi,%eax
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0x6,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
lea    0x6d703ef3(%ebp,%edx,1),%ecx
mov    %ebx,%edx
not    %edx
mov    %eax,%ebp
or     %eax,%edx
not    %ebp
xor    %esi,%edx
add    %ecx,%edx
mov    $0xe,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    0x28(%esp),%ecx
lea    0x6d703ef3(%ecx,%edi,1),%edi
mov    %ebp,%ecx
or     %edx,%ecx
mov    %edx,%ebp
xor    %ebx,%ecx
not    %ebp
add    %ecx,%edi
mov    $0xc,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x1c(%esp),%ecx
lea    0x6d703ef3(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    0x2c(%esp),%ebp
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%esi
mov    $0xd,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%ebx,1),%ebx
mov    %edi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
mov    0x4(%esp),%ebp
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
lea    0x6d703ef3(%ebp,%eax,1),%ecx
mov    %esi,%eax
mov    (%esp),%ebp
not    %eax
or     %ebx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x24(%esp),%ecx
lea    0x6d703ef3(%ecx,%edx,1),%ecx
mov    %ebx,%edx
not    %edx
or     %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    $0xd,%ecx
rol    %cl,%edx
add    %edi,%edx
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%edi,1),%edi
mov    %eax,%ebp
not    %ebp
rol    %cl,%ebx
mov    %ebp,%ecx
mov    0xc(%esp),%ebp
or     %edx,%ecx
xor    %ebx,%ecx
add    %ecx,%edi
mov    $0xd,%ecx
rol    %cl,%edi
add    %esi,%edi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%esi,1),%esi
mov    %edx,%ebp
not    %ebp
rol    %cl,%eax
mov    %ebp,%ecx
mov    0x30(%esp),%ebp
or     %edi,%ecx
xor    %eax,%ecx
add    %ecx,%esi
mov    $0x7,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x6d703ef3(%ebp,%ebx,1),%ebx
mov    %edi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
or     %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x5,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x1c(%esp),%ecx
mov    %ebx,%ebp
and    %esi,%ebp
lea    0x7a6d76e9(%ecx,%eax,1),%ecx
mov    %ebx,%eax
not    %eax
and    %edi,%eax
or     %ebp,%eax
mov    0x14(%esp),%ebp
add    %ecx,%eax
mov    $0xf,%ecx
rol    %cl,%eax
add    %edx,%eax
mov    $0xa,%cl
rol    %cl,%esi
lea    0x7a6d76e9(%ebp,%edx,1),%ecx
mov    %eax,%edx
mov    %eax,%ebp
not    %edx
and    %ebx,%ebp
and    %esi,%edx
or     %ebp,%edx
mov    0xc(%esp),%ebp
add    %ecx,%edx
mov    $0x5,%ecx
rol    %cl,%edx
add    %edi,%edx
mov    $0xa,%cl
lea    0x7a6d76e9(%ebp,%edi,1),%edi
mov    %edx,%ebp
not    %ebp
rol    %cl,%ebx
mov    %ebp,%ecx
mov    %edx,%ebp
and    %eax,%ebp
and    %ebx,%ecx
or     %ebp,%ecx
add    %ecx,%edi
mov    $0x8,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x3c(%esp),%ecx
mov    %edi,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
add    %ecx,%esi
mov    $0xb,%ecx
rol    %cl,%esi
mov    $0xa,%cl
add    %ebx,%esi
rol    %cl,%edx
mov    0x8(%esp),%ecx
mov    %esi,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%ebx,1),%ebx
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edx,%ecx
and    %edi,%ebp
or     %ebp,%ecx
add    %ecx,%ebx
mov    $0xe,%ecx
rol    %cl,%ebx
mov    $0xa,%cl
add    %eax,%ebx
rol    %cl,%edi
mov    0x28(%esp),%ecx
mov    %ebx,%ebp
and    %esi,%ebp
lea    0x7a6d76e9(%ecx,%eax,1),%ecx
mov    %ebx,%eax
not    %eax
and    %edi,%eax
or     %ebp,%eax
add    %ecx,%eax
mov    $0xe,%ecx
rol    %cl,%eax
mov    $0xa,%cl
add    %edx,%eax
rol    %cl,%esi
mov    0x38(%esp),%ecx
mov    %eax,%ebp
and    %ebx,%ebp
lea    0x7a6d76e9(%ecx,%edx,1),%ecx
mov    %eax,%edx
not    %edx
and    %esi,%edx
or     %ebp,%edx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    $0xa,%cl
add    %edi,%edx
rol    %cl,%ebx
mov    (%esp),%ecx
mov    %edx,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%edi,1),%edi
mov    %ebp,%ecx
mov    %edx,%ebp
and    %ebx,%ecx
and    %eax,%ebp
or     %ebp,%ecx
add    %ecx,%edi
mov    $0xe,%ecx
rol    %cl,%edi
mov    $0xa,%cl
add    %esi,%edi
rol    %cl,%eax
mov    0x10(%esp),%ecx
mov    %edi,%ebp
not    %ebp
lea    0x7a6d76e9(%ecx,%esi,1),%esi
mov    %ebp,%ecx
mov    %edi,%ebp
and    %eax,%ecx
and    %edx,%ebp
or     %ebp,%ecx
mov    0x2c(%esp),%ebp
add    %ecx,%esi
mov    $0x6,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x7a6d76e9(%ebp,%ebx,1),%ebx
mov    %esi,%ebp
not    %ebp
rol    %cl,%edx
mov    %ebp,%ecx
mov    %esi,%ebp
and    %edi,%ebp
and    %edx,%ecx
or     %ebp,%ecx
mov    0x4(%esp),%ebp
add    %ecx,%ebx
mov    $0x9,%ecx
rol    %cl,%ebx
add    %eax,%ebx
mov    $0xa,%cl
rol    %cl,%edi
lea    0x7a6d76e9(%ebp,%eax,1),%ecx
mov    %ebx,%eax
mov    %ebx,%ebp
not    %eax
and    %esi,%ebp
and    %edi,%eax
or     %ebp,%eax
mov    0x30(%esp),%ebp
add    %ecx,%eax
mov    $0xc,%ecx
rol    %cl,%eax
add    %edx,%eax
mov    $0xa,%cl
rol    %cl,%esi
lea    0x7a6d76e9(%ebp,%edx,1),%ecx
mov    %eax,%edx
mov    %eax,%ebp
not    %edx
and    %ebx,%ebp
and    %esi,%edx
or     %ebp,%edx
mov    0x20(%esp),%ebp
add    %ecx,%edx
mov    $0x9,%ecx
rol    %cl,%edx
add    %edi,%edx
mov    $0xa,%cl
lea    0x7a6d76e9(%ebp,%edi,1),%ebp
mov    %edx,%edi
not    %edi
rol    %cl,%ebx
mov    %edi,%ecx
mov    %edx,%edi
and    %eax,%edi
and    %ebx,%ecx
or     %edi,%ecx
mov    0x18(%esp),%edi
add    %ecx,%ebp
mov    $0xc,%ecx
rol    %cl,%ebp
add    %esi,%ebp
mov    $0xa,%cl
lea    0x7a6d76e9(%edi,%esi,1),%esi
mov    %ebp,%edi
not    %edi
rol    %cl,%eax
mov    %edi,%ecx
mov    %ebp,%edi
and    %edx,%edi
and    %eax,%ecx
or     %edi,%ecx
mov    0x24(%esp),%edi
add    %ecx,%esi
mov    $0x5,%ecx
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
lea    0x7a6d76e9(%edi,%ebx,1),%ebx
mov    %esi,%edi
not    %edi
rol    %cl,%edx
mov    %edi,%ecx
mov    %esi,%edi
and    %ebp,%edi
and    %edx,%ecx
or     %edi,%ecx
mov    0x34(%esp),%edi
add    %ecx,%ebx
mov    $0xf,%ecx
rol    %cl,%ebx
add    %eax,%ebx
mov    $0xa,%cl
lea    0x7a6d76e9(%edi,%eax,1),%edi
mov    %ebx,%eax
rol    %cl,%ebp
not    %eax
mov    %ebx,%ecx
and    %esi,%ecx
and    %ebp,%eax
or     %ecx,%eax
mov    $0x8,%ecx
add    %eax,%edi
mov    %ebx,%eax
rol    %cl,%edi
add    %edx,%edi
mov    $0xa,%cl
add    0x2c(%esp),%edx
xor    %edi,%eax
rol    %cl,%esi
xor    %esi,%eax
mov    $0x8,%cl
add    %eax,%edx
mov    %edi,%eax
rol    %cl,%edx
add    %ebp,%edx
mov    $0xa,%cl
add    0x38(%esp),%ebp
xor    %edx,%eax
rol    %cl,%ebx
xor    %ebx,%eax
mov    $0x5,%cl
add    %eax,%ebp
mov    %edx,%eax
rol    %cl,%ebp
add    %esi,%ebp
mov    $0xa,%cl
add    0x24(%esp),%esi
xor    %ebp,%eax
rol    %cl,%edi
xor    %edi,%eax
mov    $0xc,%cl
add    %eax,%esi
mov    %ebp,%eax
rol    %cl,%esi
add    %ebx,%esi
mov    $0xa,%cl
add    0xc(%esp),%ebx
xor    %esi,%eax
rol    %cl,%edx
xor    %edx,%eax
mov    $0x9,%cl
add    %eax,%ebx
mov    %esi,%eax
rol    %cl,%ebx
add    %edi,%ebx
mov    $0xa,%cl
add    0x3c(%esp),%edi
xor    %ebx,%eax
rol    %cl,%ebp
xor    %ebp,%eax
mov    $0xc,%cl
add    %eax,%edi
mov    %ebx,%eax
rol    %cl,%edi
add    %edx,%edi
mov    $0xa,%cl
add    0x10(%esp),%edx
xor    %edi,%eax
rol    %cl,%esi
xor    %esi,%eax
mov    $0x5,%cl
add    %eax,%edx
mov    %edi,%eax
rol    %cl,%edx
add    %ebp,%edx
mov    $0xa,%cl
add    0x1c(%esp),%ebp
xor    %edx,%eax
rol    %cl,%ebx
mov    $0xe,%cl
xor    %ebx,%eax
add    %eax,%ebp
mov    %edx,%eax
rol    %cl,%ebp
mov    $0xa,%cl
add    %esi,%ebp
rol    %cl,%edi
add    0x18(%esp),%esi
xor    %ebp,%eax
xor    %edi,%eax
mov    $0x6,%cl
add    %eax,%esi
mov    $0xa,%eax
rol    %cl,%esi
mov    %eax,%ecx
add    %ebx,%esi
rol    %cl,%edx
add    0x14(%esp),%ebx
mov    %ebp,%ecx
xor    %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0x8,%ecx
rol    %cl,%ebx
mov    %eax,%ecx
add    %edi,%ebx
rol    %cl,%ebp
add    0x4(%esp),%edi
mov    %esi,%ecx
xor    %ebx,%ecx
xor    %ebp,%ecx
add    %ecx,%edi
mov    $0xd,%ecx
rol    %cl,%edi
mov    %eax,%ecx
add    %edx,%edi
rol    %cl,%esi
add    0x30(%esp),%edx
mov    %ebx,%ecx
xor    %edi,%ecx
xor    %esi,%ecx
add    %ecx,%edx
mov    $0x6,%ecx
rol    %cl,%edx
mov    %eax,%ecx
add    %ebp,%edx
rol    %cl,%ebx
add    0x34(%esp),%ebp
mov    %edi,%ecx
xor    %edx,%ecx
xor    %ebx,%ecx
add    %ecx,%ebp
mov    $0x5,%ecx
rol    %cl,%ebp
mov    %eax,%ecx
add    %esi,%ebp
rol    %cl,%edi
add    (%esp),%esi
mov    %edx,%ecx
xor    %ebp,%ecx
xor    %edi,%ecx
add    %ecx,%esi
mov    $0xf,%ecx
rol    %cl,%esi
mov    %eax,%ecx
add    %ebx,%esi
rol    %cl,%edx
add    0x8(%esp),%ebx
mov    %ebp,%ecx
xor    %esi,%ecx
xor    %edx,%ecx
add    %ecx,%ebx
mov    $0xd,%ecx
rol    %cl,%ebx
mov    %eax,%ecx
add    %edi,%ebx
rol    %cl,%ebp
add    0x20(%esp),%edi
mov    %esi,%ecx
xor    %ebx,%ecx
xor    %ebp,%ecx
add    %ecx,%edi
mov    $0xb,%ecx
rol    %cl,%edi
mov    %eax,%ecx
add    %edx,%edi
rol    %cl,%esi
add    0x28(%esp),%edx
mov    %ebx,%ecx
xor    %edi,%ecx
xor    %esi,%ecx
add    %ecx,%edx
mov    $0xb,%ecx
rol    %cl,%edx
mov    %eax,%ecx
rol    %cl,%ebx
mov    0x50(%esp),%ecx
add    0x70(%esp),%esi
add    0x58(%esp),%esi
mov    %esi,0x4(%ecx)
mov    0x68(%esp),%eax
mov    0x64(%esp),%esi
add    %ebp,%eax
add    0x40(%esp),%eax
mov    %eax,0x8(%ecx)
lea    (%esi,%ebp,1),%eax
add    0x44(%esp),%eax
add    0x48(%esp),%ebx
add    0x5c(%esp),%ebx
add    %eax,%edx
mov    0x6c(%esp),%eax
mov    %edx,0xc(%ecx)
mov    %ebx,(%ecx)
add    %esi,%eax
add    0x4c(%esp),%eax
add    %eax,%edi
mov    %edi,0x10(%ecx)
add    $0x74,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    0x58(%eax),%edx
lea    0x18(%eax),%ebp
cmp    $0x40,%edx
je     805224b <error+0x22cb>
test   %edi,%edi
je     8052268 <error+0x22e8>
mov    0x58(%ebx),%edx
test   %edx,%edx
je     8052270 <error+0x22f0>
test   %esi,%esi
je     8052242 <error+0x22c2>
cmp    $0x3f,%edx
jg     80522f0 <error+0x2370>
lea    -0x40(%edx,%esi,1),%eax
lea    0x1(%edx),%ecx
mov    %eax,0xc(%esp)
jmp    805222d <error+0x22ad>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmp    0xc(%esp),%esi
je     80522f0 <error+0x2370>
add    $0x1,%edi
sub    $0x1,%esi
mov    %ecx,0x58(%ebx)
movzbl -0x1(%edi),%eax
mov    %ecx,%edx
mov    %al,0x17(%ebx,%ecx,1)
jne    8052220 <error+0x22a0>
xor    %edi,%edi
xor    %esi,%esi
cmp    $0x40,%edx
jne    80521f8 <error+0x2278>
mov    %ebp,%edx
mov    %ebx,%eax
call   8050b30 <error+0xbb0>
addl   $0x1,0x14(%ebx)
test   %edi,%edi
movl   $0x0,0x58(%ebx)
jne    80521fc <error+0x227c>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,0xc(%esp)
mov    0xc(%esp),%eax
mov    %edi,%ebp
cmp    $0x3f,%eax
mov    %eax,%esi
mov    %eax,%ecx
jbe    80522ba <error+0x233a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edx
mov    %ebx,%eax
sub    $0x40,%esi
add    $0x40,%ebp
call   8050b30 <error+0xbb0>
addl   $0x1,0x14(%ebx)
cmp    $0x3f,%esi
movl   $0x0,0x58(%ebx)
ja     8052288 <error+0x2308>
mov    0xc(%esp),%esi
mov    %esi,%ecx
sub    $0x40,%esi
and    $0xffffffc0,%esi
and    $0x3f,%ecx
lea    0x40(%edi,%esi,1),%edi
test   %ecx,%ecx
je     8052268 <error+0x22e8>
mov    0x58(%ebx),%edx
cmp    $0x3f,%edx
jg     8052268 <error+0x22e8>
lea    0x1(%edx),%eax
add    %edx,%ecx
sub    %edx,%edi
jmp    80522d8 <error+0x2358>
nop
add    $0x1,%eax
cmp    $0x41,%eax
je     8052268 <error+0x22e8>
mov    %eax,0x58(%ebx)
movzbl -0x1(%edi,%eax,1),%edx
cmp    %ecx,%eax
mov    %dl,0x17(%ebx,%eax,1)
jne    80522d0 <error+0x2350>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ecx,%ecx
xor    %edx,%edx
mov    %ebx,%eax
mov    %esi,0xc(%esp)
call   80521e0 <error+0x2260>
jmp    8052274 <error+0x22f4>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x88(%esp),%ecx
mov    0x84(%esp),%edx
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    %esp,%eax
mov    0x80(%esp),%ebx
movl   $0x67452301,(%esp)
movl   $0xefcdab89,0x4(%esp)
movl   $0x98badcfe,0x8(%esp)
movl   $0x10325476,0xc(%esp)
movl   $0xc3d2e1f0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x58(%esp)
call   80521e0 <error+0x2260>
xor    %ecx,%ecx
xor    %edx,%edx
mov    %esp,%eax
call   80521e0 <error+0x2260>
mov    0x14(%esp),%edx
xor    %eax,%eax
mov    %edx,%ebp
shl    $0x6,%ebp
cmp    %ebp,%edx
seta   %al
shr    $0x1a,%edx
add    %eax,%edx
mov    0x58(%esp),%eax
add    %eax,%ebp
lea    0x0(,%ebp,8),%esi
adc    $0x0,%edx
cmp    %ebp,%esi
adc    $0x0,%edx
shr    $0x1d,%ebp
lea    0x1(%eax),%ecx
add    %edx,%ebp
cmp    $0x37,%eax
movb   $0x80,0x18(%esp,%eax,1)
lea    0x19(%esp,%eax,1),%eax
mov    %ecx,0x58(%esp)
jg     8052480 <error+0x2500>
cmp    $0x38,%ecx
lea    0x50(%esp),%edx
je     80523ea <error+0x246a>
lea    0x0(%esi),%esi
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    80523d8 <error+0x2458>
movl   $0x38,0x58(%esp)
lea    0x18(%esp),%edx
mov    %esi,%eax
mov    %al,0x50(%esp)
mov    %esi,%eax
shr    $0x8,%eax
mov    %al,0x51(%esp)
mov    %esi,%eax
shr    $0x10,%eax
mov    %al,0x52(%esp)
mov    %esi,%eax
shr    $0x18,%eax
mov    %al,0x53(%esp)
mov    %ebp,%eax
mov    %al,0x54(%esp)
mov    %ebp,%eax
shr    $0x8,%eax
mov    %al,0x55(%esp)
mov    %esp,%eax
movb   $0x0,0x56(%esp)
movb   $0x0,0x57(%esp)
call   8050b30 <error+0xbb0>
mov    0x10(%esp),%eax
mov    (%esp),%ebp
mov    0x4(%esp),%esi
mov    0x8(%esp),%ecx
mov    %eax,0x28(%esp)
mov    0xc(%esp),%edx
mov    %eax,0x10(%ebx)
mov    0x5c(%esp),%eax
xor    %gs:0x14,%eax
mov    %ebp,0x18(%esp)
mov    %esi,0x1c(%esp)
mov    %ecx,0x20(%esp)
mov    %edx,0x24(%esp)
mov    %ebp,(%ebx)
mov    %esi,0x4(%ebx)
mov    %ecx,0x8(%ebx)
mov    %edx,0xc(%ebx)
jne    80524c1 <error+0x2541>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%ecx
lea    0x58(%esp),%edx
jg     80524a2 <error+0x2522>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    8052490 <error+0x2510>
movl   $0x40,0x58(%esp)
xor    %ecx,%ecx
xor    %edx,%edx
mov    %esp,%eax
call   80521e0 <error+0x2260>
lea    0x18(%esp),%edx
mov    $0xe,%ecx
xor    %eax,%eax
mov    %edx,%edi
rep stos %eax,%es:(%edi)
jmp    80523ee <error+0x246e>
call   8049ae0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8059320,%edi
mov    (%edi),%esi
test   %esi,%esi
je     80525c1 <error+0x2641>
mov    %edi,0xc(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x6,%eax
mov    $0x8055190,%ebp
mov    $0x8055220,%ebx
jmp    805251d <error+0x259d>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebx
mov    (%ebx),%ebp
test   %ebp,%ebp
je     80525e8 <error+0x2668>
mov    %ebp,(%esp)
call   8049d60 <strlen@plt>
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    8052508 <error+0x2588>
mov    0xc(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     8052553 <error+0x25d3>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    8052540 <error+0x25c0>
mov    0xc(%esp),%eax
mov    (%eax),%esi
subl   $0x4,0xc(%esp)
addl   $0x4,0xc(%esp)
test   %esi,%esi
jne    80524f0 <error+0x2570>
mov    (%edi),%ebx
test   %ebx,%ebx
je     80525c1 <error+0x2641>
nop
mov    $0x5,%eax
mov    $0x8055197,%esi
mov    $0x8055200,%ebp
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804a020 <strncmp@plt>
test   %eax,%eax
jne    80525d0 <error+0x2650>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     80525d0 <error+0x2650>
mov    (%edi),%ebx
test   %ebx,%ebx
je     80525b7 <error+0x2637>
mov    %edi,%eax
nop
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    80525a8 <error+0x2628>
mov    (%edi),%ebx
sub    $0x4,%edi
add    $0x4,%edi
test   %ebx,%ebx
jne    8052568 <error+0x25e8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
mov    0x0(%ebp),%esi
test   %esi,%esi
je     80525f4 <error+0x2674>
mov    %esi,(%esp)
call   8049d60 <strlen@plt>
jmp    8052577 <error+0x25f7>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
jmp    8052558 <error+0x25d8>
mov    0x4(%edi),%ebx
jmp    80525ba <error+0x263a>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
call   8049af0 <getuid@plt>
test   %eax,%eax
jne    8052670 <error+0x26f0>
call   8049b10 <geteuid@plt>
test   %eax,%eax
jne    8052670 <error+0x26f0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e10 <getgid@plt>
mov    %eax,%esi
call   8049bb0 <getegid@plt>
cmp    %eax,%esi
jne    8052670 <error+0x26f0>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3,(%esp)
call   8049eb0 <prctl@plt>
test   %eax,%eax
je     8052670 <error+0x26f0>
mov    %ebx,0x30(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    8049c70 <getenv@plt>
xchg   %ax,%ax
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x1c8,%esp
mov    0x805930c,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x1bc(%esp)
xor    %eax,%eax
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
cmp    $0xffffffff,%ebx
movl   $0x0,0x30(%esp)
je     80526d8 <error+0x2758>
mov    0x1bc(%esp),%edx
xor    %gs:0x14,%edx
mov    %ebx,%eax
jne    805275f <error+0x27df>
add    $0x1c8,%esp
pop    %ebx
ret
nop
lea    0x36(%esp),%eax
mov    %eax,(%esp)
call   8049ad0 <uname@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80526f8 <error+0x2778>
movl   $0x0,0x805930c
00
xor    %ebx,%ebx
jmp    80526b9 <error+0x2739>
lea    0x30(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0xb8(%esp),%eax
movl   $0x8055258,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <sscanf@plt>
sub    $0x1,%eax
cmp    $0x2,%eax
ja     8052750 <error+0x27d0>
mov    0x28(%esp),%ebx
mov    0x2c(%esp),%eax
shl    $0x10,%ebx
shl    $0x8,%eax
add    %eax,%ebx
add    0x30(%esp),%ebx
mov    %ebx,0x805930c
jmp    80526b9 <error+0x2739>
xchg   %ax,%ax
movl   $0x0,0x805930c
00
jmp    80526b9 <error+0x2739>
call   8049ae0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x28,%esp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   8049fb0 <lseek64@plt>
xor    %eax,%eax
test   %edx,%edx
js     80527b4 <error+0x2834>
lea    0x1f(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049910 <read@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edi,%edi
push   %esi
mov    $0x400,%esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
movl   $0x0,(%esp)
movl   $0x0,0x4(%esp)
jmp    8052804 <error+0x2884>
lea    0x0(%esi),%esi
jb     80527ef <error+0x286f>
cmp    $0xfffffffe,%esi
ja     8052828 <error+0x28a8>
mov    %esi,%eax
mov    %edi,%edx
shld   $0x1,%esi,%edx
add    %esi,%eax
mov    %esi,(%esp)
mov    %eax,%esi
mov    %edi,0x4(%esp)
mov    %edx,%edi
mov    %esi,%edx
mov    %edi,%ecx
mov    %ebx,%eax
call   8052770 <error+0x27f0>
test   %eax,%eax
je     8052838 <error+0x28b8>
mov    %esi,%eax
and    %edi,%eax
cmp    $0xffffffff,%eax
je     80528b0 <error+0x2930>
cmp    $0x7fffffff,%edi
jbe    80527e8 <error+0x2868>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
jmp    80527f9 <error+0x2879>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    %edx,0x4(%esp)
jb     805287d <error+0x28fd>
jbe    8052878 <error+0x28f8>
xor    %edx,%edx
xor    %ecx,%ecx
mov    %ebx,%eax
call   8052770 <error+0x27f0>
mov    (%esp),%eax
mov    0x4(%esp),%edx
add    $0x1,%eax
adc    $0x0,%edx
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmp    %eax,(%esp)
jae    8052856 <error+0x28d6>
mov    (%esp),%esi
mov    %ebx,%eax
mov    0x4(%esp),%edi
add    0x8(%esp),%esi
adc    0xc(%esp),%edi
shrd   $0x1,%edi,%esi
shr    %edi
mov    %esi,%edx
mov    %edi,%ecx
call   8052770 <error+0x27f0>
test   %eax,%eax
je     8052838 <error+0x28b8>
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
jmp    8052840 <error+0x28c0>
lea    0x0(%esi),%esi
add    $0x10,%esp
mov    $0xffffffff,%eax
pop    %ebx
mov    $0xffffffff,%edx
pop    %esi
pop    %edi
ret
jmp    80528d0 <error+0x2950>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x80(%esp),%esi
mov    0x84(%esp),%ebx
call   8052680 <error+0x2700>
lea    -0x20412(%eax),%edx
cmp    $0xed,%edx
jbe    8052938 <error+0x29b8>
cmp    $0x205ff,%eax
jg     8052938 <error+0x29b8>
lea    0x10(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x1260,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
js     8052960 <error+0x29e0>
mov    0x10(%esp),%eax
xor    %edx,%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,(%ebx)
xor    %eax,%eax
mov    %edx,0x4(%ebx)
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,0x8(%esp)
movl   $0x80041272,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <ioctl@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
js     80528fe <error+0x297e>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x801c0204,0x4(%esp)
mov    %esi,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
js     8052998 <error+0x2a18>
mov    0x10(%esp),%eax
movl   $0x0,0x4(%ebx)
shl    $0x9,%eax
mov    %eax,(%ebx)
add    $0x70,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049bf0 <__fxstat64@plt>
mov    0x20(%esp),%edx
and    $0xf000,%edx
test   %eax,%eax
jne    80529c2 <error+0x2a42>
cmp    $0x8000,%edx
je     80529e7 <error+0x2a67>
cmp    $0x6000,%edx
mov    $0xffffffff,%eax
jne    805292e <error+0x29ae>
mov    %esi,(%esp)
call   80527c0 <error+0x2840>
mov    %eax,(%ebx)
xor    %eax,%eax
mov    %edx,0x4(%ebx)
jmp    805292e <error+0x29ae>
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %esi,(%ebx)
mov    %edi,0x4(%ebx)
jmp    805292e <error+0x29ae>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80528d0 <error+0x2950>
test   %eax,%eax
jne    8052a40 <error+0x2ac0>
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%ecx
mov    0x34(%esp),%edx
shrd   $0x9,%ebx,%ecx
shr    $0x9,%ebx
mov    %ecx,(%edx)
mov    %ebx,0x4(%edx)
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    8052a34 <error+0x2ab4>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x1268,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
add    $0x1c,%esp
sar    $0x1f,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x127b,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
add    $0x1c,%esp
sar    $0x1f,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
movl   $0x127a,0x4(%esp)
mov    %eax,(%esp)
call   8049bc0 <ioctl@plt>
test   %eax,%eax
js     8052ae8 <error+0x2b68>
mov    0x1c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
test   %edx,%edx
movl   $0x0,0x2c(%esp)
je     8052b80 <error+0x2c00>
test   %eax,%eax
mov    %eax,%esi
je     8052b80 <error+0x2c00>
movl   $0x0,0x4(%esp)
mov    %ecx,%edi
mov    %edx,(%esp)
call   8049900 <open64@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8052b80 <error+0x2c00>
mov    0x805a3e0,%eax
test   %eax,%eax
je     8052c00 <error+0x2c80>
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a90 <blkid_probe_set_device@plt>
test   %eax,%eax
je     8052b90 <error+0x2c10>
mov    %ebx,(%esp)
call   804a080 <close@plt>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8052b80 <error+0x2c00>
mov    %eax,(%esp)
call   8049e50 <__strdup@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x805a3e0,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80499a0 <blkid_probe_enable_superblocks@plt>
mov    0x805a3e0,%eax
movl   $0x2a,0x4(%esp)
mov    %eax,(%esp)
call   8049c50 <blkid_probe_set_superblocks_flags@plt>
mov    0x805a3e0,%eax
mov    %eax,(%esp)
call   8049a50 <blkid_do_safeprobe@plt>
test   %edi,%edi
je     8052bd5 <error+0x2c55>
xor    %edx,%edx
cmp    $0xfffffffe,%eax
sete   %dl
mov    %edx,(%edi)
test   %eax,%eax
jne    8052b5d <error+0x2bdd>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x805a3e0,%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049940 <blkid_probe_lookup_value@plt>
jmp    8052b5d <error+0x2bdd>
nop
call   8049e00 <blkid_new_probe@plt>
test   %eax,%eax
mov    %eax,0x805a3e0
je     8052b5d <error+0x2bdd>
jmp    8052b2d <error+0x2bad>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x0,0x805a3e4
00
movl   $0x0,0x805a3e0
00
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805a3e0,%eax
test   %eax,%eax
je     8052c54 <error+0x2cd4>
mov    %eax,(%esp)
call   8049ef0 <blkid_free_probe@plt>
mov    0x805a3e4,%eax
test   %eax,%eax
je     8052c65 <error+0x2ce5>
mov    %eax,(%esp)
call   8049a70 <blkid_put_cache@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
movl   $0x0,(%esi)
movl   $0x0,(%edi)
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     8052cc0 <error+0x2d40>
mov    %edi,0x28(%esp)
mov    %esi,0x24(%esp)
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049e40 <blkid_parse_tag_string@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x805a3e4,0x4(%esp)
mov    %eax,(%esp)
call   80499c0 <blkid_evaluate_spec@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8049ba0 <blkid_known_fstype@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
xor    %ecx,%ecx
mov    $0x8054b5b,%eax
jmp    8052af0 <error+0x2b70>
mov    0x4(%esp),%edx
xor    %ecx,%ecx
mov    $0x8054b61,%eax
jmp    8052af0 <error+0x2b70>
mov    0x4(%esp),%edx
xor    %ecx,%ecx
mov    $0x8055261,%eax
jmp    8052af0 <error+0x2b70>
mov    0x8(%esp),%ecx
mov    $0x8055261,%eax
mov    0x4(%esp),%edx
jmp    8052af0 <error+0x2b70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x805a3e4,0x8(%esp)
movl   $0x8054b61,(%esp)
mov    %eax,0x4(%esp)
call   8049c10 <blkid_evaluate_tag@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x805a3e4,0x8(%esp)
movl   $0x8054b5b,(%esp)
mov    %eax,0x4(%esp)
call   8049c10 <blkid_evaluate_tag@plt>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     8052e4c <error+0x2ecc>
mov    %ebx,(%esp)
call   8049d60 <strlen@plt>
lea    0x1(,%eax,4),%eax
mov    %eax,(%esp)
call   8049ca0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8052e4c <error+0x2ecc>
mov    %eax,%ecx
jmp    8052ded <error+0x2e6d>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    %esi,%ecx
movzbl (%ebx),%edx
movsbl %dl,%esi
cmp    $0x20,%esi
je     8052e18 <error+0x2e98>
lea    -0x9(%edx),%eax
cmp    $0x1,%al
jbe    8052e18 <error+0x2e98>
cmp    $0x5c,%esi
je     8052e18 <error+0x2e98>
mov    %dl,(%ecx)
lea    0x1(%ecx),%esi
cmpb   $0x0,(%ebx)
jne    8052de8 <error+0x2e68>
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movb   $0x5c,(%ecx)
movsbl (%ebx),%eax
lea    0x4(%ecx),%esi
and    $0xc0,%eax
sar    $0x6,%eax
add    $0x30,%eax
mov    %al,0x1(%ecx)
movzbl (%ebx),%eax
and    $0x38,%eax
sar    $0x3,%eax
add    $0x30,%eax
mov    %al,0x2(%ecx)
movzbl (%ebx),%eax
and    $0x7,%eax
add    $0x30,%eax
mov    %al,0x3(%ecx)
jmp    8052de8 <error+0x2e68>
xor    %eax,%eax
jmp    8052e10 <error+0x2e90>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18,%esp
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8052efb <error+0x2f7b>
mov    0x30(%esp),%eax
xor    %ebx,%ebx
mov    0x34(%esp),%edi
mov    %ebx,(%esp)
add    $0x1,%eax
sub    $0x1,%edi
jmp    8052e85 <error+0x2f05>
addl   $0x1,(%esp)
add    $0x1,%ecx
mov    %dl,-0x1(%eax)
add    $0x1,%eax
movzbl (%ecx),%edx
lea    -0x1(%eax),%esi
test   %dl,%dl
je     8052ef8 <error+0x2f78>
cmp    %edi,(%esp)
jae    8052ef8 <error+0x2f78>
cmp    $0x5c,%dl
jne    8052e78 <error+0x2ef8>
mov    (%esp),%esi
add    $0x4,%esi
cmp    %esi,%edi
jbe    8052e78 <error+0x2ef8>
movzbl 0x1(%ecx),%ebx
mov    %bl,0x7(%esp)
and    $0xfffffff8,%ebx
cmp    $0x30,%bl
jne    8052e78 <error+0x2ef8>
movzbl 0x2(%ecx),%ebx
mov    %bl,0x8(%esp)
and    $0xfffffff8,%ebx
cmp    $0x30,%bl
jne    8052e78 <error+0x2ef8>
movzbl 0x3(%ecx),%ebp
mov    %ebp,%ebx
and    $0xfffffff8,%ebx
cmp    $0x30,%bl
jne    8052e78 <error+0x2ef8>
mov    0x8(%esp),%ebx
add    $0x4,%ecx
movzbl 0x7(%esp),%edx
mov    %esi,(%esp)
and    $0x7,%ebx
lea    (%ebx,%edx,8),%ebx
mov    %ebp,%edx
and    $0x7,%edx
lea    (%edx,%ebx,8),%edx
mov    %dl,-0x1(%eax)
jmp    8052e82 <error+0x2f02>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%esi)
add    $0x18,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%ecx
test   %ebx,%ebx
je     8052f80 <error+0x3000>
movzbl (%ebx),%eax
test   $0xdf,%al
je     8052f89 <error+0x3009>
cmp    $0x9,%al
mov    %ebx,%eax
jne    8052f3d <error+0x2fbd>
nop
jmp    8052f92 <error+0x3012>
lea    0x0(%esi),%esi
cmp    $0x9,%dl
je     8052f48 <error+0x2fc8>
add    $0x1,%eax
movzbl (%eax),%edx
test   $0xdf,%dl
jne    8052f38 <error+0x2fb8>
mov    %eax,%edi
sub    %ebx,%edi
add    $0x1,%edi
test   %ecx,%ecx
je     8052f55 <error+0x2fd5>
mov    %eax,(%ecx)
cmp    %eax,%ebx
je     8052f80 <error+0x3000>
mov    %edi,(%esp)
call   8049ca0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8052f80 <error+0x3000>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8052e50 <error+0x2ed0>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %ebx,%eax
mov    $0x1,%edi
jmp    8052f4f <error+0x2fcf>
mov    $0x1,%edi
jmp    8052f4f <error+0x2fcf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
mov    0x54(%esp),%eax
test   %esi,%esi
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
je     80530ba <error+0x313a>
movzbl (%esi),%ebx
test   %bl,%bl
je     80530ba <error+0x313a>
mov    %esi,0x2c(%esp)
call   804a0b0 <__ctype_b_loc@plt>
mov    (%eax),%edi
lea    0x1(%esi),%eax
jmp    8052feb <error+0x306b>
nop
mov    %eax,0x2c(%esp)
add    $0x1,%eax
movzbl -0x1(%eax),%ebx
movzbl %bl,%edx
testb  $0x20,0x1(%edi,%edx,2)
jne    8052fe0 <error+0x3060>
cmp    $0x2d,%bl
je     80530ba <error+0x313a>
movl   $0x0,0x2c(%esp)
call   8049e70 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049a20 <__strtoull_internal@plt>
mov    0x2c(%esp),%ecx
cmp    %esi,%ecx
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
je     80530ba <error+0x313a>
mov    (%edi),%ebx
test   %ebx,%ebx
je     8053060 <error+0x30e0>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    $0xffffffff,%edx
jb     8053060 <error+0x30e0>
cmp    $0xfffffffd,%eax
ja     80530ba <error+0x313a>
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     805306b <error+0x30eb>
movzbl (%ecx),%eax
test   %al,%al
jne    8053088 <error+0x3108>
xor    %eax,%eax
mov    0x54(%esp),%esi
mov    0x14(%esp),%ebx
mov    0x10(%esp),%ecx
mov    %ebx,0x4(%esi)
mov    %ecx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movzbl 0x1(%ecx),%edx
cmp    $0x69,%dl
je     80530b0 <error+0x3130>
cmp    $0x42,%dl
je     80530c7 <error+0x3147>
test   %dl,%dl
jne    80530ba <error+0x313a>
mov    $0x400,%esi
sub    $0x45,%eax
cmp    $0x2f,%al
ja     80530ba <error+0x313a>
movzbl %al,%eax
jmp    *0x8055268(,%eax,4)
cmpb   $0x42,0x2(%ecx)
je     80535b5 <error+0x3635>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x2(%ecx)
jne    80530ba <error+0x313a>
mov    $0x3e8,%esi
jmp    805309f <error+0x311f>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     8053150 <error+0x31d0>
jb     8053109 <error+0x3189>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x6,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jae    80535c5 <error+0x3645>
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    $0xfffffffe,%eax
jmp    805306d <error+0x30ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     8053150 <error+0x31d0>
jb     805318f <error+0x320f>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8053150 <error+0x31d0>
ja     80531c7 <error+0x3247>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8053150 <error+0x31d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8053150 <error+0x31d0>
ja     8053207 <error+0x3287>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8053150 <error+0x31d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
jb     8053247 <error+0x32c7>
mov    0x18(%esp),%eax
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
imul   %esi,%edx
imul   %edi,%eax
lea    (%eax,%edx,1),%ebp
mov    %ecx,%eax
mul    %esi
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %edx,0x14(%esp)
add    %ebp,0x14(%esp)
jmp    805306d <error+0x30ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     8053150 <error+0x31d0>
jb     80532b0 <error+0x3330>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8053150 <error+0x31d0>
ja     80532f0 <error+0x3370>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8053150 <error+0x31d0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     8053150 <error+0x31d0>
ja     8053247 <error+0x32c7>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8053150 <error+0x31d0>
jmp    8053247 <error+0x32c7>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     8053150 <error+0x31d0>
jb     8053376 <error+0x33f6>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x5,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jb     8053148 <error+0x31c8>
ja     80533c1 <error+0x3441>
cmp    %eax,0x1c(%esp)
jb     8053148 <error+0x31c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    80533ad <error+0x342d>
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %edx,0x14(%esp)
jmp    805306d <error+0x30ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
ja     8053150 <error+0x31d0>
jb     8053247 <error+0x32c7>
jmp    805323d <error+0x32bd>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebp
ja     8053150 <error+0x31d0>
jb     805345a <error+0x34da>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
imul   %esi,%edx
imul   %edi,%eax
add    %edx,%eax
mov    %eax,0x18(%esp)
mov    %ecx,%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x14(%esp)
add    %eax,0x14(%esp)
mov    $0x7,%eax
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
nop
cmp    %edx,%ebp
jb     8053148 <error+0x31c8>
ja     80534ac <error+0x352c>
cmp    %eax,0x1c(%esp)
jb     8053148 <error+0x31c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    8053498 <error+0x3518>
jmp    80533d8 <error+0x3458>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     8053150 <error+0x31d0>
jb     8053505 <error+0x3585>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x4,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jb     8053148 <error+0x31c8>
ja     8053550 <error+0x35d0>
cmp    %eax,0x1c(%esp)
jb     8053148 <error+0x31c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    805353c <error+0x35bc>
jmp    80533d8 <error+0x3458>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   8053e50 <error+0x3ed0>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     8053150 <error+0x31d0>
jb     80532f0 <error+0x3370>
cmp    %eax,0x10(%esp)
ja     8053150 <error+0x31d0>
lea    0x0(%esi),%esi
jmp    80532f0 <error+0x3370>
cmpb   $0x0,0x3(%ecx)
je     805309a <error+0x311a>
nop
jmp    80530ba <error+0x313a>
ja     80535d6 <error+0x3656>
cmp    %eax,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
jb     8053148 <error+0x31c8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    8053140 <error+0x31c0>
jmp    80533d8 <error+0x3458>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%esi
test   %esi,%esi
je     8053648 <error+0x36c8>
movzbl (%esi),%ebx
test   %bl,%bl
je     8053648 <error+0x36c8>
call   804a0b0 <__ctype_b_loc@plt>
mov    (%eax),%edx
mov    %esi,%eax
jmp    805362c <error+0x36ac>
nop
add    $0x1,%eax
je     8053648 <error+0x36c8>
movzbl (%eax),%ebx
test   %bl,%bl
je     8053633 <error+0x36b3>
testb  $0x8,0x1(%edx,%ebx,2)
jne    8053620 <error+0x36a0>
cmp    %eax,%esi
jae    8053648 <error+0x36c8>
cmpb   $0x0,(%eax)
sete   %al
add    $0x4,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x4,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ecx
mov    0x10(%esp),%eax
mov    0x18(%esp),%edx
test   %ecx,%ecx
lea    -0x1(%ecx),%edi
je     805368f <error+0x370f>
movzbl (%eax),%ecx
test   %cl,%cl
je     805368f <error+0x370f>
cmp    %dl,%cl
mov    %edx,%esi
je     8053691 <error+0x3711>
xor    %edx,%edx
jmp    8053688 <error+0x3708>
nop
movzbl (%eax),%ecx
test   %cl,%cl
je     805368f <error+0x370f>
mov    %esi,%ebx
add    $0x1,%edx
cmp    %bl,%cl
je     8053691 <error+0x3711>
add    $0x1,%eax
cmp    %edi,%edx
jne    8053678 <error+0x36f8>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     80536ba <error+0x373a>
cmpb   $0x0,(%ebx)
jne    80536e8 <error+0x3768>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    8053713 <error+0x3793>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8055328,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049f10 <errx@plt>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804a060 <strtol@plt>
mov    (%esi),%edx
test   %edx,%edx
je     8053738 <error+0x37b8>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8055328,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049b70 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
je     80536c5 <error+0x3745>
test   %edx,%edx
je     805374d <error+0x37cd>
cmpb   $0x0,(%edx)
jne    80536c5 <error+0x3745>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     805377a <error+0x37fa>
cmpb   $0x0,(%ebx)
jne    80537a8 <error+0x3828>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    80537d3 <error+0x3853>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8055328,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049f10 <errx@plt>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049c20 <strtoll@plt>
mov    (%esi),%ecx
test   %ecx,%ecx
je     80537f8 <error+0x3878>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8055328,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049b70 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ecx
cmp    %ecx,%ebx
je     8053785 <error+0x3805>
test   %ecx,%ecx
je     805380d <error+0x388d>
cmpb   $0x0,(%ecx)
jne    8053785 <error+0x3805>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     805383a <error+0x38ba>
cmpb   $0x0,(%ebx)
jne    8053868 <error+0x38e8>
call   8049e70 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    8053893 <error+0x3913>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8055328,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049f10 <errx@plt>
lea    0x0(%esi),%esi
call   8049e70 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049d30 <strtoul@plt>
mov    (%esi),%edx
test   %edx,%edx
je     80538b8 <error+0x3938>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8055328,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049b70 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
je     8053845 <error+0x38c5>
test   %edx,%edx
je     80538cd <error+0x394d>
cmpb   $0x0,(%edx)
jne    8053845 <error+0x38c5>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %eax,%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     8053948 <error+0x39c8>
cmp    $0xa000,%ecx
je     8053a48 <error+0x3ac8>
cmp    $0x2000,%ecx
je     8053a50 <error+0x3ad0>
cmp    $0x6000,%ecx
je     8053a60 <error+0x3ae0>
cmp    $0xc000,%ecx
je     8053a58 <error+0x3ad8>
cmp    $0x1000,%ecx
je     8053a68 <error+0x3ae8>
cmp    $0x8000,%ecx
jne    805394b <error+0x39cb>
movb   $0x2d,(%edx)
jmp    805394b <error+0x39cb>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x64,(%edx)
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
je     8053a18 <error+0x3a98>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     8053a40 <error+0x3ac0>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x7(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x8(%edx)
je     8053a28 <error+0x3aa8>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x9(%edx)
movb   $0x0,0xa(%edx)
ret
lea    0x0(%esi),%esi
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    8053990 <error+0x3a10>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x9(%edx)
movb   $0x0,0xa(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    80539ce <error+0x3a4e>
movb   $0x6c,(%edx)
jmp    805394b <error+0x39cb>
movb   $0x63,(%edx)
jmp    805394b <error+0x39cb>
movb   $0x73,(%edx)
jmp    805394b <error+0x39cb>
movb   $0x62,(%edx)
jmp    805394b <error+0x39cb>
movb   $0x70,(%edx)
jmp    805394b <error+0x39cb>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x94(%esp),%esi
testb  $0x2,0x90(%esp)
mov    0x98(%esp),%edi
je     8053cb0 <error+0x3d30>
lea    0x47(%esp),%eax
movb   $0x20,0x47(%esp)
lea    0x48(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0xa,%ebx
mov    %ebx,%ecx
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
setne  %dl
sete   %al
shl    %cl,%edx
shl    %cl,%eax
cmp    %edx,%edi
ja     8053b44 <error+0x3bc4>
jae    8053b40 <error+0x3bc0>
mov    %ecx,%ebx
sub    $0xa,%ecx
jne    8053b54 <error+0x3bd4>
mov    %esi,0x2c(%esp)
movb   $0x42,0x0(%ebp)
movb   $0x0,0x1(%ebp)
mov    0x38(%esp),%eax
lea    0x4c(%esp),%ebx
movl   $0x8055343,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
call   80498b0 <__snprintf_chk@plt>
mov    %ebx,(%esp)
call   8049e50 <__strdup@plt>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    8053cda <error+0x3d5a>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %eax,%esi
jb     8053ace <error+0x3b4e>
add    $0xa,%ecx
cmp    $0x46,%ecx
jne    8053ab7 <error+0x3b37>
mov    %ecx,%ebx
mov    $0x3c,%cl
mov    %ecx,%eax
mov    $0x66666667,%edx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
movzbl 0x8055331(%edx),%eax
mov    %edi,%edx
mov    %al,0x3f(%esp)
mov    %esi,%eax
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     8053b82 <error+0x3c02>
mov    %edx,%eax
xor    %edx,%edx
mov    %eax,0x2c(%esp)
xor    %eax,%eax
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,%ecx
movzbl 0x3f(%esp),%eax
and    %esi,%ecx
and    %edi,%edx
testb  $0x1,0x90(%esp)
mov    %ecx,0x30(%esp)
lea    0x1(%ebp),%ecx
mov    %edx,0x34(%esp)
mov    %al,0x0(%ebp)
jne    8053c98 <error+0x3d18>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
movb   $0x0,(%ecx)
mov    %edx,%edi
or     %eax,%edi
je     8053ae1 <error+0x3b61>
lea    -0x14(%ebx),%ecx
xor    %ebx,%ebx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebx,%edx
add    $0x32,%eax
adc    $0x0,%edx
movl   $0x64,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8053e50 <error+0x3ed0>
mov    %eax,%edi
xor    $0xa,%eax
or     %edx,%eax
mov    %edx,%ebx
je     8053cc0 <error+0x3d40>
mov    %edx,%eax
or     %edi,%eax
je     8053ae1 <error+0x3b61>
call   8049f90 <localeconv@plt>
test   %eax,%eax
xchg   %ax,%ax
je     8053cd0 <error+0x3d50>
mov    (%eax),%ecx
test   %ecx,%ecx
je     8053cd0 <error+0x3d50>
cmpb   $0x0,(%ecx)
mov    $0x8054068,%eax
cmove  %eax,%ecx
mov    0x38(%esp),%eax
mov    %ebx,0x20(%esp)
lea    0x4c(%esp),%ebx
mov    %edi,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x24(%esp)
mov    0x2c(%esp),%eax
movl   $0x8055339,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   80498b0 <__snprintf_chk@plt>
jmp    8053b1d <error+0x3b9d>
cmp    $0x42,%al
je     8053bc4 <error+0x3c44>
movb   $0x69,0x1(%ebp)
lea    0x3(%ebp),%ecx
movb   $0x42,0x2(%ebp)
jmp    8053bc4 <error+0x3c44>
lea    0x47(%esp),%eax
mov    %eax,0x38(%esp)
mov    %eax,%ebp
jmp    8053ab0 <error+0x3b30>
nop
addl   $0x1,0x2c(%esp)
jmp    8053ae1 <error+0x3b61>
lea    0x0(%esi),%esi
mov    $0x8054068,%ecx
jmp    8053c4b <error+0x3ccb>
call   8049ae0 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
test   %edx,%edx
je     8053d90 <error+0x3e10>
movzbl (%edx),%eax
test   %al,%al
je     8053d90 <error+0x3e10>
mov    0x34(%esp),%esi
test   %esi,%esi
je     8053d90 <error+0x3e10>
mov    0x38(%esp),%ebx
test   %ebx,%ebx
je     8053d90 <error+0x3e10>
mov    0x3c(%esp),%ecx
test   %ecx,%ecx
je     8053d90 <error+0x3e10>
mov    %edx,%ebx
xor    %ebp,%ebp
xor    %edi,%edi
jmp    8053d34 <error+0x3db4>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
test   %al,%al
je     8053d7f <error+0x3dff>
test   %edx,%edx
cmove  %ebx,%edx
cmp    $0x2c,%al
mov    %edi,%esi
cmove  %ebx,%esi
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%eax
cmove  %eax,%esi
test   %esi,%esi
je     8053d7a <error+0x3dfa>
cmp    %esi,%edx
jae    8053d90 <error+0x3e10>
mov    %esi,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *0x3c(%esp)
cmp    $0xffffffff,%eax
je     8053d90 <error+0x3e10>
mov    0x34(%esp),%ecx
lea    0x1(%ebp),%edx
cmp    %edx,0x38(%esp)
mov    %eax,(%ecx,%ebp,4)
jbe    8053d9d <error+0x3e1d>
cmpb   $0x0,(%esi)
mov    %edx,%ebp
je     8053d7f <error+0x3dff>
xor    %edx,%edx
add    $0x1,%ebx
jne    8053d28 <error+0x3da8>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0xfffffffe,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
test   %ebx,%ebx
je     8053e47 <error+0x3ec7>
mov    0x38(%esp),%eax
test   %eax,%eax
je     8053e47 <error+0x3ec7>
test   %esi,%esi
je     8053e47 <error+0x3ec7>
xor    %eax,%eax
xor    %edi,%edi
nop
movzbl (%ebx),%ecx
test   %cl,%cl
je     8053e30 <error+0x3eb0>
test   %eax,%eax
mov    %edi,%ebp
cmove  %ebx,%eax
cmp    $0x2c,%cl
cmove  %ebx,%ebp
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%ecx
cmove  %ecx,%ebp
test   %ebp,%ebp
je     8053e2b <error+0x3eab>
cmp    %ebp,%eax
jae    8053e3a <error+0x3eba>
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   *0x38(%esp)
mov    %eax,%ecx
test   %ecx,%ecx
js     8053e32 <error+0x3eb2>
sar    $0x3,%eax
and    $0x7,%ecx
mov    $0x1,%edx
shl    %cl,%edx
or     %dl,(%esi,%eax,1)
cmpb   $0x0,0x0(%ebp)
je     8053e30 <error+0x3eb0>
xor    %eax,%eax
add    $0x1,%ebx
jne    8053dd8 <error+0x3e58>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffea,%eax
jmp    8053e32 <error+0x3eb2>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    8053ea0 <error+0x3f20>
cmp    %ebp,%ecx
ja     8053ed8 <error+0x3f58>
test   %ecx,%ecx
mov    %ecx,%esi
jne    8053e88 <error+0x3f08>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     8053ec8 <error+0x3f48>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8053ee8 <error+0x3f68>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    8053f58 <error+0x3fd8>
cmp    %edx,%eax
jb     8053f58 <error+0x3fd8>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     8053f68 <error+0x3fe8>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8053f49 <error+0x3fc9>
cmp    (%esp),%esi
je     8053f68 <error+0x3fe8>
mov    %edi,%eax
xor    %edx,%edx
jmp    8053ecc <error+0x3f4c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    8053ecc <error+0x3f4c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804ad10 <fchmod@plt+0xc40>
add    $0x5075,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x104(%ebx),%esi
call   8049870 <_init>
lea    -0x108(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8053fd9 <error+0x4059>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x108(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8053fb8 <error+0x4038>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8053ff0 <error+0x4070>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804ad10 <fchmod@plt+0xc40>
add    $0x4ffa,%ebx
sub    $0x18,%esp
lea    0x224(%ebx),%eax
test   %eax,%eax
je     8054038 <error+0x40b8>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c60 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805401b <error+0x409b>
push   %ebx
sub    $0x8,%esp
call   804ad10 <fchmod@plt+0xc40>
add    $0x4fbb,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
add    %ch,%cs:(%edi)
jae    80540cf <_IO_stdin_used+0x6b>
imul   $0x756f6d75,0x2f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     80540a5 <_IO_stdin_used+0x41>
and    $0x6e2d0073,%eax
add    %ch,0x662d006c
add    %ch,0x722d0076
add    %ch,0x6d750074
outsl  %ds:(%esi),(%dx)
jne    80540ff <_IO_stdin_used+0x9b>
je     80540cd <_IO_stdin_used+0x69>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80540bb <_IO_stdin_used+0x57>
outsw  %ds:(%esi),(%dx)
jb     805410a <_IO_stdin_used+0xa6>
cmp    (%eax),%ah
and    $0x6f6e0073,%eax
outsb  %ds:(%esi),(%dx)
add    %dh,%gs:0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     80540ae <_IO_stdin_used+0x4a>
jb     805411f <_IO_stdin_used+0xbb>
outsl  %ds:(%esi),(%dx)
je     8054119 <_IO_stdin_used+0xb5>
jae    80540b5 <_IO_stdin_used+0x51>
jne    8054124 <_IO_stdin_used+0xc0>
outsl  %ds:(%esi),(%dx)
jne    8054128 <_IO_stdin_used+0xc4>
je     80540ee <_IO_stdin_used+0x8a>
add    %ch,0x6f(%esi)
and    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054133 <_IO_stdin_used+0xcf>
je     80540f9 <_IO_stdin_used+0x95>
sub    $0x20,%al
je     805413d <_IO_stdin_used+0xd9>
jns    8054136 <_IO_stdin_used+0xd2>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%di)
outsl  %ds:(%esi),(%dx)
jne    8054143 <_IO_stdin_used+0xdf>
je     8054105 <_IO_stdin_used+0xa1>
cs or  %cs:(%eax),%al
jb     805414c <_IO_stdin_used+0xe8>
add    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054152 <_IO_stdin_used+0xee>
je     80540e6 <_IO_stdin_used+0x82>
and    $0x61682073,%eax
jae    805410d <_IO_stdin_used+0xa9>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054166 <_IO_stdin_used+0x102>
je     805415f <_IO_stdin_used+0xfb>
or     %fs:(%eax),%al
sub    $0x0,%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8054141 <_IO_stdin_used+0xdd>
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054178 <_IO_stdin_used+0x114>
je     8054146 <_IO_stdin_used+0xe2>
and    %ah,0x6e203a73
outsl  %ds:(%esi),(%dx)
je     8054135 <_IO_stdin_used+0xd1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054187 <_IO_stdin_used+0x123>
je     8054180 <_IO_stdin_used+0x11c>
add    %dh,%fs:0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054190 <_IO_stdin_used+0x12c>
je     805415e <_IO_stdin_used+0xfa>
and    %ah,0x6e203a73
outsl  %ds:(%esi),(%dx)
je     805414d <_IO_stdin_used+0xe9>
outsw  %ds:(%esi),(%dx)
jne    805419f <_IO_stdin_used+0x13b>
add    %dh,%fs:0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80541a6 <_IO_stdin_used+0x142>
je     8054174 <_IO_stdin_used+0x110>
and    %ah,0x25203a73
jae    8054142 <_IO_stdin_used+0xde>
das
jne    80541b8 <_IO_stdin_used+0x154>
jb     8054176 <_IO_stdin_used+0x112>
jae    80541b1 <_IO_stdin_used+0x14d>
popa
jb     80541b1 <_IO_stdin_used+0x14d>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebp)
imul   $0x78756e69,0x6c(%ebp,%ebp,1),%ebp
add    %dh,0x74(%ebp)
imul   $0x78756e69,0x6c(%ebp,%ebp,1),%ebp
and    %dh,(%edx)
xor    %cs:(%eax),%dh
xor    %eax,%cs:(%eax)
jne    80541e0 <_IO_stdin_used+0x17c>
outsl  %ds:(%esi),(%dx)
jne    80541e4 <_IO_stdin_used+0x180>
je     8054198 <_IO_stdin_used+0x134>
sub    %ah,0xa2973
popa
fs
pushw  $0x6e6c
jb     80541ef <_IO_stdin_used+0x18b>
je     80541c2 <_IO_stdin_used+0x15e>
dec    %edi
cmp    0x56(%esi),%dh
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054200 <_IO_stdin_used+0x19c>
je     80541ce <_IO_stdin_used+0x16a>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    80541ba <_IO_stdin_used+0x156>
jb     805420b <_IO_stdin_used+0x1a7>
outsl  %ds:(%esi),(%dx)
je     80541bf <_IO_stdin_used+0x15b>
arpl   %sp,0x6e(%ecx)
and    %ah,0x20(%edi,%ebp,2)
je     8054210 <_IO_stdin_used+0x1ac>
popa
je     80541ab <_IO_stdin_used+0x147>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80541d2 <_IO_stdin_used+0x16e>
jne    8054222 <_IO_stdin_used+0x1be>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054226 <_IO_stdin_used+0x1c2>
je     80541da <_IO_stdin_used+0x176>
and    (%edx),%ah
or     (%eax),%al
push   %esp
jb     805423a <_IO_stdin_used+0x1d6>
imul   $0x206f7420,0x67(%esi),%ebp
jne    8054238 <_IO_stdin_used+0x1d4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805423c <_IO_stdin_used+0x1d8>
je     80541f0 <_IO_stdin_used+0x18c>
and    $0x43000a73,%eax
outsl  %ds:(%esi),(%dx)
jne    8054244 <_IO_stdin_used+0x1e0>
and    %ch,%fs:0x6f(%esi)
je     80541fe <_IO_stdin_used+0x19a>
imul   $0x2520,0x64(%esi),%bp
jae    8054206 <_IO_stdin_used+0x1a2>
imul   $0x6261746d,0x20(%esi),%ebp
or     (%eax),%al
and    $0x73692073,%eax
and    %ah,0x73(%ecx)
jae    8054268 <_IO_stdin_used+0x204>
arpl   %bp,0x61(%ecx)
je     8054263 <_IO_stdin_used+0x1ff>
and    %dh,%fs:0x69(%edi)
je     805426c <_IO_stdin_used+0x208>
and    %ah,0x75000a73
push   $0x65706c65
jb     805424e <_IO_stdin_used+0x1ea>
add    %ch,0x66(%edi)
data16
jae    805427c <_IO_stdin_used+0x218>
je     8054256 <_IO_stdin_used+0x1f2>
add    %dh,0x73(%ebp)
gs
jb     805421f <_IO_stdin_used+0x1bb>
jne    8054294 <_IO_stdin_used+0x230>
gs
jb     8054297 <_IO_stdin_used+0x233>
add    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     805422b <_IO_stdin_used+0x1c7>
jne    80542a0 <_IO_stdin_used+0x23c>
gs
jb     805426d <_IO_stdin_used+0x209>
add    %ch,(%edi)
fs
gs
jbe    8054265 <_IO_stdin_used+0x201>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805423b <_IO_stdin_used+0x1d7>
outsw  %ds:(%esi),(%dx)
jb     80542a2 <_IO_stdin_used+0x23e>
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8054246 <_IO_stdin_used+0x1e2>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6261746d,%eax
add    %dh,0x73(%ebp,%eiz,2)
je     8054280 <_IO_stdin_used+0x21c>
outsl  %ds:(%esi),(%dx)
jo     80542ca <_IO_stdin_used+0x266>
jae    8054258 <_IO_stdin_used+0x1f4>
jbe    80542bf <_IO_stdin_used+0x25b>
jb     80542be <_IO_stdin_used+0x25a>
outsl  %ds:(%esi),(%dx)
jae    80542c4 <_IO_stdin_used+0x260>
add    %dh,0x65(%esi)
jb     80542d7 <_IO_stdin_used+0x273>
imul   $0x61657200,0x6e(%edi),%ebp
fs
sub    $0x796c6e6f,%eax
add    %dh,0x70(%ecx,%edi,2)
gs
jae    8054278 <_IO_stdin_used+0x214>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x6f6e6163,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
add    %ah,0x61(%esi)
imul   $0x0,0x0(%ebp),%esp
add    %al,(%eax)
jne    80542ff <_IO_stdin_used+0x29b>
outsl  %ds:(%esi),(%dx)
jne    8054303 <_IO_stdin_used+0x29f>
je     80542d1 <_IO_stdin_used+0x26d>
and    %ch,0x6e(%ecx)
je     8054301 <_IO_stdin_used+0x29d>
jb     805430c <_IO_stdin_used+0x2a8>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8054314 <_IO_stdin_used+0x2b0>
jb     80542e1 <_IO_stdin_used+0x27d>
and    %ch,0x6e(%ecx)
jbe    805430d <_IO_stdin_used+0x2a9>
insb   (%dx),%es:(%edi)
imul   $0x70207362,0x61(%eax,%eiz,1),%esp
popa
je     8054320 <_IO_stdin_used+0x2bc>
cmp    (%eax),%ah
and    $0x73,%eax
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054333 <_IO_stdin_used+0x2cf>
je     8054301 <_IO_stdin_used+0x29d>
and    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x64(%eax)
imul   $0x25206f74,0x20(%edx),%esi
jae    8054318 <_IO_stdin_used+0x2b4>
and    %ah,0x73
jne    8054353 <_IO_stdin_used+0x2ef>
outsl  %ds:(%esi),(%dx)
jne    8054357 <_IO_stdin_used+0x2f3>
je     8054325 <_IO_stdin_used+0x2c1>
and    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
bound  %esi,0x69(%ecx,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%ebx)
jb     8054373 <_IO_stdin_used+0x30f>
outsb  %gs:(%esi),(%dx)
je     8054325 <_IO_stdin_used+0x2c1>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8054349 <_IO_stdin_used+0x2e5>
and    %ah,0x75000073
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054387 <_IO_stdin_used+0x323>
je     8054355 <_IO_stdin_used+0x2f1>
and    %ch,0x6f(%ebp)
jne    805438e <_IO_stdin_used+0x32a>
je     8054392 <_IO_stdin_used+0x32e>
outsl  %ds:(%esi),(%dx)
imul   $0x766f6d20,0x74(%esi),%ebp
gs and %ch,%fs:%gs:(%eax)
and    $0x3e2d2073,%eax
and    %ah,0x63002973
jne    80543ad <_IO_stdin_used+0x349>
jb     80543a2 <_IO_stdin_used+0x33e>
outsb  %ds:(%esi),(%dx)
je     8054360 <_IO_stdin_used+0x2fc>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805436a <_IO_stdin_used+0x306>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80543b3 <_IO_stdin_used+0x34f>
and    %dh,%fs:0x20(%edi,%ebp,2)
and    $0xa73,%eax
push   %ebp
jae    80543bc <_IO_stdin_used+0x358>
cmp    %gs:(%bx,%si),%ah
jne    80543ce <_IO_stdin_used+0x36a>
outsl  %ds:(%esi),(%dx)
jne    80543d2 <_IO_stdin_used+0x36e>
je     8054386 <_IO_stdin_used+0x322>
sub    $0x207c2068,%eax
sub    $0x20200a56,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80543e8 <_IO_stdin_used+0x384>
je     805439c <_IO_stdin_used+0x338>
sub    $0x2d5b2061,%eax
fs
pop    %ebp
and    %bl,0x2d(%ebx)
pop    %bp
and    %bl,0x2d(%ebx)
jb     80543ea <_IO_stdin_used+0x386>
and    %bl,0x2d(%ebx)
outsb  %ds:(%esi),(%dx)
pop    %ebp
and    %bl,0x2d(%ebx)
jbe    80543f4 <_IO_stdin_used+0x390>
and    %bl,0x2d(%ebx)
je     80543bc <_IO_stdin_used+0x358>
jbe    8054404 <_IO_stdin_used+0x3a0>
jae    8054414 <_IO_stdin_used+0x3b0>
jns    8054412 <_IO_stdin_used+0x3ae>
gs
jae    8054402 <_IO_stdin_used+0x39e>
and    %bl,0x2d(%ebx)
dec    %edi
and    %ch,0x70(%edi)
je     8054421 <_IO_stdin_used+0x3bd>
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8054426 <_IO_stdin_used+0x3c2>
outsl  %ds:(%esi),(%dx)
jne    805442a <_IO_stdin_used+0x3c6>
je     80543de <_IO_stdin_used+0x37a>
pop    %ebx
sub    $0x5b205d64,%eax
sub    $0x5b205d66,%eax
sub    $0x5b205d72,%eax
sub    $0x5b205d6e,%eax
sub    $0x73205d76,%eax
jo     805443f <_IO_stdin_used+0x3db>
arpl   %bp,0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %bh,0x6e(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
fs gs cs cs or %cs:%fs:%gs:(%eax),%al
add    %al,(%eax)
jne    805445b <_IO_stdin_used+0x3f7>
outsl  %ds:(%esi),(%dx)
jne    805445f <_IO_stdin_used+0x3fb>
je     805442d <_IO_stdin_used+0x3c9>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805441b <_IO_stdin_used+0x3b7>
jae    8054462 <_IO_stdin_used+0x3fe>
je     805441f <_IO_stdin_used+0x3bb>
addr16 jb 8054471 <_IO_stdin_used+0x40d>
jne    8054474 <_IO_stdin_used+0x410>
and    %ch,0x64(%ecx)
cmp    (%eax),%ah
and    $0x6d750073,%eax
outsl  %ds:(%esi),(%dx)
jne    805447f <_IO_stdin_used+0x41b>
je     805444d <_IO_stdin_used+0x3e9>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805443b <_IO_stdin_used+0x3d7>
jae    8054482 <_IO_stdin_used+0x41e>
je     805443f <_IO_stdin_used+0x3db>
jne    8054494 <_IO_stdin_used+0x430>
gs
jb     8054444 <_IO_stdin_used+0x3e0>
imul   $0x7325,0x20(%edx,%edi,1),%esp
jne    805449b <_IO_stdin_used+0x437>
outsl  %ds:(%esi),(%dx)
jne    805449f <_IO_stdin_used+0x43b>
je     805446d <_IO_stdin_used+0x409>
and    %ah,0x75622073
jae    80544b4 <_IO_stdin_used+0x450>
and    %ch,0x6d657220
outsl  %ds:(%esi),(%dx)
jne    80544b2 <_IO_stdin_used+0x44e>
je     80544ab <_IO_stdin_used+0x447>
and    %dh,%fs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
or     (%eax),%al
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80544c7 <_IO_stdin_used+0x463>
je     8054495 <_IO_stdin_used+0x431>
and    %ah,0x6f(%ebx)
jne    80544cc <_IO_stdin_used+0x468>
and    %ch,%fs:0x6f(%esi)
je     8054486 <_IO_stdin_used+0x422>
jb     80544cd <_IO_stdin_used+0x469>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80544da <_IO_stdin_used+0x476>
je     805448e <_IO_stdin_used+0x42a>
and    $0x65722073,%eax
popa
fs
sub    $0x796c6e6f,%eax
or     (%eax),%al
jne    80544eb <_IO_stdin_used+0x487>
outsl  %ds:(%esi),(%dx)
jne    80544ef <_IO_stdin_used+0x48b>
je     80544bd <_IO_stdin_used+0x459>
and    %ah,0x69203a73
outsb  %ds:(%esi),(%dx)
jbe    80544ed <_IO_stdin_used+0x489>
insb   (%dx),%es:(%edi)
imul   $0x6b636f6c,0x62(%eax,%eiz,1),%esp
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x0,0x65(%ebx),%esp
jne    805450f <_IO_stdin_used+0x4ab>
outsl  %ds:(%esi),(%dx)
jne    8054513 <_IO_stdin_used+0x4af>
je     80544e1 <_IO_stdin_used+0x47d>
and    %ah,0x63203a73
popa
outsb  %ds:(%esi),(%dx)
daa
je     80544d2 <_IO_stdin_used+0x46e>
ja     8054526 <_IO_stdin_used+0x4c2>
imul   $0x65707573,0x20(%ebp,%eiz,2),%esi
jb     8054520 <_IO_stdin_used+0x4bc>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054537 <_IO_stdin_used+0x4d3>
je     8054505 <_IO_stdin_used+0x4a1>
and    %ah,0x64203a73
gs
jbe    805453d <_IO_stdin_used+0x4d9>
arpl   %sp,0x20(%ebp)
imul   $0x79737562,0x20(%ebx),%esi
or     %cs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%ebx)
jae    805455a <_IO_stdin_used+0x4f6>
jae    8054517 <_IO_stdin_used+0x4b3>
jne    805456c <_IO_stdin_used+0x508>
gs
data16
jne    8054569 <_IO_stdin_used+0x505>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    805457c <_IO_stdin_used+0x518>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054576 <_IO_stdin_used+0x512>
jae    8054533 <_IO_stdin_used+0x4cf>
je     805457d <_IO_stdin_used+0x519>
popa
je     8054538 <_IO_stdin_used+0x4d4>
jne    805458d <_IO_stdin_used+0x529>
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     805458f <_IO_stdin_used+0x52b>
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x20736920,0x65(%ebx),%esp
outsw  %ds:(%esi),(%dx)
jne    80545a5 <_IO_stdin_used+0x541>
and    %ah,%fs:0x79(%edx)
and    %ch,0x6f(%ebx,%esi,2)
data16
sub    %bh,(%eax)
sub    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8054567 <_IO_stdin_used+0x503>
data16
jne    80545bd <_IO_stdin_used+0x559>
gs
jb     8054575 <_IO_stdin_used+0x511>
xor    %ebp,(%ecx)
sub    %eax,(%eax)
add    %al,(%eax)
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80545c7 <_IO_stdin_used+0x563>
je     8054595 <_IO_stdin_used+0x531>
and    %ah,0x6d203a73
jne    80545d6 <_IO_stdin_used+0x572>
je     8054585 <_IO_stdin_used+0x521>
bound  %esp,0x20(%ebp)
jae    80545df <_IO_stdin_used+0x57b>
jo     80545d1 <_IO_stdin_used+0x56d>
jb     80545e3 <_IO_stdin_used+0x57f>
jae    80545d5 <_IO_stdin_used+0x571>
jb     8054592 <_IO_stdin_used+0x52e>
je     80545e3 <_IO_stdin_used+0x57f>
and    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80545e8 <_IO_stdin_used+0x584>
je     805457c <_IO_stdin_used+0x518>
jne    80545eb <_IO_stdin_used+0x587>
outsl  %ds:(%esi),(%dx)
jne    80545ef <_IO_stdin_used+0x58b>
je     80545bd <_IO_stdin_used+0x559>
and    %ah,0x62203a73
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
fs
gs
jbe    80545fb <_IO_stdin_used+0x597>
arpl   %sp,0x73(%ebp)
and    %ch,0x6f(%esi)
je     80545ba <_IO_stdin_used+0x556>
jo     8054601 <_IO_stdin_used+0x59d>
jb     805460b <_IO_stdin_used+0x5a7>
imul   $0x6e6f2064,0x65(%esp,%esi,2),%esi
and    %ah,0x73(%esi)
add    %al,(%eax)
add    %ch,0x6f(%esi)
jo     8054622 <_IO_stdin_used+0x5be>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%esi,%ebp,2)
outsl  %ds:(%esi),(%dx)
fs
gs
jbe    805461f <_IO_stdin_used+0x5bb>
jae    80545e7 <_IO_stdin_used+0x583>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jbe    8054631 <_IO_stdin_used+0x5cd>
je     8054636 <_IO_stdin_used+0x5d2>
sub    $0x6e,%al
outsl  %ds:(%esi),(%dx)
jae    8054641 <_IO_stdin_used+0x5dd>
jae    8054630 <_IO_stdin_used+0x5cc>
jae    80545f8 <_IO_stdin_used+0x594>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8054640 <_IO_stdin_used+0x5dc>
arpl   %bx,0x70(%edi)
imul   $0x6e2c7366,0x65(%eax),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
jae    8054643 <_IO_stdin_used+0x5df>
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054653 <_IO_stdin_used+0x5ef>
je     8054621 <_IO_stdin_used+0x5bd>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805460f <_IO_stdin_used+0x5ab>
imul   $0x6c20,0x64(%esi),%bp
imul   $0x20666f20,0x74(%ebx),%esi
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     805466a <_IO_stdin_used+0x606>
insl   (%dx),%es:(%edi)
jae    8054628 <_IO_stdin_used+0x5c4>
je     8054679 <_IO_stdin_used+0x615>
and    %dh,0x6e(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805467f <_IO_stdin_used+0x61b>
je     8054613 <_IO_stdin_used+0x5af>
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    8054687 <_IO_stdin_used+0x623>
je     8054655 <_IO_stdin_used+0x5f1>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
data16
jne    8054695 <_IO_stdin_used+0x631>
gs and %dh,%fs:%gs:0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %ah,0x6e(%ecx)
popa
insb   (%dx),%es:(%edi)
jns    80546aa <_IO_stdin_used+0x646>
imul   $0x61746d20,0x67(%esi),%ebp
bound  %eax,(%eax)
add    %al,(%eax)
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80546af <_IO_stdin_used+0x64b>
je     805467d <_IO_stdin_used+0x619>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805466b <_IO_stdin_used+0x607>
jne    80546bb <_IO_stdin_used+0x657>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    80546bf <_IO_stdin_used+0x65b>
je     8054673 <_IO_stdin_used+0x60f>
and    $0x2d2d2073,%eax
and    %ah,0x73692073
and    %ch,0x6f(%ebp)
jne    80546d1 <_IO_stdin_used+0x66d>
je     80546ca <_IO_stdin_used+0x666>
and    %ch,%fs:0x76(%edi)
gs
jb     805468c <_IO_stdin_used+0x628>
imul   $0x6874206e,0x6f(%eax,%eiz,1),%esi
and    %dh,%gs:0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%eax)
imul   $0x0,0x74(%esi),%ebp
and    $0x73692073,%eax
and    %ah,0x73(%ecx)
jae    80546fd <_IO_stdin_used+0x699>
arpl   %bp,0x61(%ecx)
je     80546f8 <_IO_stdin_used+0x694>
and    %dh,%fs:0x69(%edi)
je     8054701 <_IO_stdin_used+0x69d>
and    %ch,0x6f(%ebp)
jb     8054703 <_IO_stdin_used+0x69f>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x6f(%edi,%ebp,2)
jo     80546cd <_IO_stdin_used+0x669>
fs
gs
jbe    805471a <_IO_stdin_used+0x6b6>
arpl   %sp,0x3a(%ebp)
and    %ch,0x6f(%esi)
je     80546d9 <_IO_stdin_used+0x675>
jne    8054729 <_IO_stdin_used+0x6c5>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805472d <_IO_stdin_used+0x6c9>
je     805472a <_IO_stdin_used+0x6c6>
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%al
add    %al,(%eax)
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    805473b <_IO_stdin_used+0x6d7>
je     8054709 <_IO_stdin_used+0x6a5>
and    %ah,0x73692073
and    %ch,0x6f(%esi)
je     80546fa <_IO_stdin_used+0x696>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    805474c <_IO_stdin_used+0x6e8>
je     8054745 <_IO_stdin_used+0x6e1>
and    %ch,%fs:(%eax)
popa
arpl   %sp,0x6f(%ebx)
jb     805474d <_IO_stdin_used+0x6e9>
imul   $0x206f7420,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
je     8054754 <_IO_stdin_used+0x6f0>
bound  %ebp,(%ecx)
add    %al,(%eax)
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    805476b <_IO_stdin_used+0x707>
je     8054739 <_IO_stdin_used+0x6d5>
and    %ch,0x74(%ecx)
and    %dh,0x65(%ebx)
gs
insl   (%dx),%es:(%edi)
jae    8054729 <_IO_stdin_used+0x6c5>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    8054781 <_IO_stdin_used+0x71d>
je     805477a <_IO_stdin_used+0x716>
and    %ch,%fs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     8054785 <_IO_stdin_used+0x721>
jo     805478a <_IO_stdin_used+0x726>
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs
jae    8054726 <_IO_stdin_used+0x6c2>
add    %al,(%eax)
jne    8054797 <_IO_stdin_used+0x733>
outsl  %ds:(%esi),(%dx)
jne    805479b <_IO_stdin_used+0x737>
je     8054769 <_IO_stdin_used+0x705>
and    %ah,0x73692073
and    %ch,0x6f(%esi)
je     805475a <_IO_stdin_used+0x6f6>
imul   $0x20656874,0x20(%esi),%ebp
data16
jae    80547b8 <_IO_stdin_used+0x754>
popa
bound  %esp,(%eax)
sub    %ah,0x6e(%ecx)
and    %bh,%fs:0x6f(%ecx)
jne    8054770 <_IO_stdin_used+0x70c>
popa
jb     80547b8 <_IO_stdin_used+0x754>
and    %ch,0x6f(%esi)
je     8054778 <_IO_stdin_used+0x714>
jb     80547c9 <_IO_stdin_used+0x765>
outsl  %ds:(%esi),(%dx)
je     8054786 <_IO_stdin_used+0x722>
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     80547cd <_IO_stdin_used+0x769>
jb     80547e1 <_IO_stdin_used+0x77d>
and    %ah,%gs:(%edi)
outsl  %ds:(%esi),(%dx)
data16
data16
jae    80547db <_IO_stdin_used+0x777>
je     80547b5 <_IO_stdin_used+0x751>
and    $0x6f202773,%eax
jo     80547f3 <_IO_stdin_used+0x78f>
imul   $0xa73,0x6e(%edi),%ebp
add    %al,(%eax)
fs
gs
jbe    80547f5 <_IO_stdin_used+0x791>
arpl   %sp,0x20(%ebp)
and    $0x73692073,%eax
and    %ah,0x73(%ecx)
jae    8054808 <_IO_stdin_used+0x7a4>
arpl   %bp,0x61(%ecx)
je     8054803 <_IO_stdin_used+0x79f>
and    %dh,%fs:0x69(%edi)
je     805480c <_IO_stdin_used+0x7a8>
and    %ah,0xa73
add    %al,(%eax)
fs
gs
jbe    8054819 <_IO_stdin_used+0x7b5>
arpl   %sp,0x20(%ebp)
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     80547dd <_IO_stdin_used+0x779>
popa
jae    8054833 <_IO_stdin_used+0x7cf>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ecx)
je     805482b <_IO_stdin_used+0x7c7>
and    %dh,%fs:0x69(%edi)
je     8054834 <_IO_stdin_used+0x7d0>
and    %ah,0xa73
add    %al,(%eax)
jne    8054843 <_IO_stdin_used+0x7df>
outsl  %ds:(%esi),(%dx)
jne    8054847 <_IO_stdin_used+0x7e3>
je     8054815 <_IO_stdin_used+0x7b1>
and    %ah,0x6f6d2073
jne    8054851 <_IO_stdin_used+0x7ed>
je     8054805 <_IO_stdin_used+0x7a1>
imul   $0x65657267,%fs:0x61(%ebx),%esi
jae    805480f <_IO_stdin_used+0x7ab>
ja     805485a <_IO_stdin_used+0x7f6>
je     805485b <_IO_stdin_used+0x7f7>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x73(%esi)
je     805485d <_IO_stdin_used+0x7f9>
bound  %eax,(%eax)
add    %al,(%eax)
jne    805486f <_IO_stdin_used+0x80b>
outsl  %ds:(%esi),(%dx)
jne    8054873 <_IO_stdin_used+0x80f>
je     8054841 <_IO_stdin_used+0x7dd>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    805482d <_IO_stdin_used+0x7c9>
and    $0x61632073,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054888 <_IO_stdin_used+0x824>
je     805483c <_IO_stdin_used+0x7d8>
and    $0x72662073,%eax
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x91000073
mov    $0xb87c0804,%eax
add    $0x8,%al
push   $0xffffffb8
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
pop    %eax
mov    $0xb8460804,%eax
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
xor    $0xb8,%al
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
and    -0x476ef7fc(%eax),%bh
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
xchg   %eax,%ecx
mov    $0xb8910804,%eax
add    $0x8,%al
in     (%dx),%eax
mov    $0x4,%bh
or     %ch,-0x5f(%edi)
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
pop    %edx
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2320804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x280804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x1c0804a2
mov    %al,0xa2680804
add    $0x8,%al
adc    %ah,-0x5d97f7fc(%edx)
add    $0x8,%al
add    $0xa2,%al
add    $0x8,%al
cmc
mov    0xa2680804,%eax
add    $0x8,%al
push   $0xe90804a2
mov    0xa2680804,%eax
add    $0x8,%al
loopne 80549df <_IO_stdin_used+0x97b>
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
xlat   %ds:(%ebx)
mov    0xa2680804,%eax
add    $0x8,%al
iret
mov    0xa2680804,%eax
add    $0x8,%al
(bad)
mov    0xa2680804,%eax
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
push   $0x680804a2
mov    %al,0xa2680804
add    $0x8,%al
mov    $0xae0804a1,%edx
mov    0x67690804,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8054b37 <_IO_stdin_used+0xad3>
add    %dh,0x61(%edi)
jb     8054b45 <_IO_stdin_used+0xae1>
imul   $0x6166203a,0x67(%esi),%ebp
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8054b4d <_IO_stdin_used+0xae9>
popa
and    %ch,%fs:0x74(%ebp)
popa
bound  %eax,(%eax)
ja     8054b53 <_IO_stdin_used+0xaef>
jb     8054b62 <_IO_stdin_used+0xafe>
imul   $0x7265203a,0x67(%esi),%ebp
jb     8054b6c <_IO_stdin_used+0xb08>
jb     8054b1f <_IO_stdin_used+0xabb>
jb     8054b66 <_IO_stdin_used+0xb02>
popa
imul   $0x3a732520,%fs:0x67(%esi),%ebp
and    %ah,0x652f0073
je     8054b75 <_IO_stdin_used+0xb11>
das
data16
jae    8054b8a <_IO_stdin_used+0xb26>
popa
bound  %eax,(%eax)
ja     8054b7c <_IO_stdin_used+0xb18>
jb     8054b8b <_IO_stdin_used+0xb27>
imul   $0x6163203a,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
daa
je     8054b48 <_IO_stdin_used+0xae4>
outsl  %ds:(%esi),(%dx)
jo     8054b90 <_IO_stdin_used+0xb2c>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25203a73
jae    8054b34 <_IO_stdin_used+0xad0>
das
insb   (%dx),%es:(%edi)
imul   $0x74696e69,0x2f(%edx),%esp
das
data16
jae    8054bb5 <_IO_stdin_used+0xb51>
popa
bound  %eax,(%eax)
das
gs
je     8054bab <_IO_stdin_used+0xb47>
das
insl   (%dx),%es:(%edi)
je     8054bad <_IO_stdin_used+0xb49>
bound  %eax,(%eax)
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
cmp    $0x49555500,%eax
inc    %esp
cmp    $0x42414c00,%eax
inc    %ebp
dec    %esp
add    %dl,0x55(%ebp)
dec    %ecx
inc    %esp
add    %ch,(%edi)
gs
je     8054bcd <_IO_stdin_used+0xb69>
das
insl   (%dx),%es:(%edi)
je     8054bcf <_IO_stdin_used+0xb6b>
bound  %edi,0x0(%esi)
das
gs
je     8054bd8 <_IO_stdin_used+0xb74>
das
insl   (%dx),%es:(%edi)
je     8054bda <_IO_stdin_used+0xb76>
bound  %edi,0x25(%esi)
add    %al,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8054ba4 <_IO_stdin_used+0xb40>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
cmp    (%eax),%ah
and    $0x74000a73,%eax
imul   $0x756f2064,0x65(%ebp),%ebp
je     8054ba5 <_IO_stdin_used+0xb41>
arpl   %sp,0x6e(%ecx)
daa
je     8054bcb <_IO_stdin_used+0xb67>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
cmp    (%eax),%ah
and    $0x652f0073,%eax
je     8054c28 <_IO_stdin_used+0xbc4>
das
insl   (%dx),%es:(%edi)
je     8054c2a <_IO_stdin_used+0xbc6>
bound  %ebp,(%esi)
je     8054c3a <_IO_stdin_used+0xbd6>
jo     8054bcf <_IO_stdin_used+0xb6b>
gs
jb     8054c44 <_IO_stdin_used+0xbe0>
outsl  %ds:(%esi),(%dx)
jb     8054bf5 <_IO_stdin_used+0xb91>
ja     8054c49 <_IO_stdin_used+0xbe5>
imul   $0x73252067,0x6e(%ecx,%ebp,2),%esi
cmp    (%eax),%ah
and    $0x73250073,%eax
cmp    (%eax),%ah
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054c0f <_IO_stdin_used+0xbab>
data16
data16
insb   (%dx),%es:(%edi)
jne    8054c67 <_IO_stdin_used+0xc03>
push   $0x61686320
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    8054c38 <_IO_stdin_used+0xbd4>
and    %ah,0x61630073
outsb  %ds:(%esi),(%dx)
daa
je     8054c28 <_IO_stdin_used+0xbc4>
jb     8054c6f <_IO_stdin_used+0xc0b>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f742073
and    %ah,0x25203a73
jae    8054c26 <_IO_stdin_used+0xbc2>
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
daa
je     8054c46 <_IO_stdin_used+0xbe2>
arpl   %si,0x65(%edx)
popa
je     8054c91 <_IO_stdin_used+0xc2d>
and    %ch,0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x203a7325,0x20(%ebp,%eiz,2),%ebp
and    $0x75282073,%eax
jae    8054ca7 <_IO_stdin_used+0xc43>
and    %ch,0x6c66206e
popa
and    %dh,0x6f(%si)
and    %ch,0x76(%edi)
gs
jb     8054cc5 <_IO_stdin_used+0xc61>
imul   $0x6e616300,0x29(%ebp,%eiz,2),%esp
daa
je     8054c7e <_IO_stdin_used+0xc1a>
insb   (%dx),%es:(%edi)
imul   $0x636f6c20,0x6b(%esi),%ebp
imul   $0x66,(%eax),%esp
imul   $0x203a7325,0x20(%ebp,%eiz,2),%ebp
and    $0x75282073,%eax
jae    8054cdd <_IO_stdin_used+0xc79>
and    %ch,0x6c66206e
popa
and    %dh,0x6f(%si)
and    %ch,0x76(%edi)
gs
jb     8054cfb <_IO_stdin_used+0xc97>
imul   $0x63000000,0x29(%ebp,%eiz,2),%esp
popa
outsb  %ds:(%esi),(%dx)
daa
je     8054cb6 <_IO_stdin_used+0xc52>
outsl  %ds:(%esi),(%dx)
jo     8054cfe <_IO_stdin_used+0xc9a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x203a7325,0x20(%ebp,%eiz,2),%ebp
and    $0x75282073,%eax
jae    8054d15 <_IO_stdin_used+0xcb1>
and    %ch,0x6c66206e
popa
and    %dh,0x6f(%si)
and    %ch,0x76(%edi)
gs
jb     8054d33 <_IO_stdin_used+0xccf>
imul   $0x43000000,0x29(%ebp,%eiz,2),%esp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054cef <_IO_stdin_used+0xc8b>
arpl   %si,0x65(%edx)
popa
je     8054d3a <_IO_stdin_used+0xcd6>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    8054ce8 <_IO_stdin_used+0xc84>
push   %eax
gs
jb     8054d4a <_IO_stdin_used+0xce6>
popa
jo     8054d58 <_IO_stdin_used+0xcf4>
and    %dh,0x65(%eax,%ebp,2)
jb     8054d50 <_IO_stdin_used+0xcec>
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    8054d67 <_IO_stdin_used+0xd03>
popa
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0x6300000a,0x3f(%ebp,%eiz,2),%ebp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054d2b <_IO_stdin_used+0xcc7>
outsl  %ds:(%esi),(%dx)
jo     8054d73 <_IO_stdin_used+0xd0f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25282073
jae    8054d40 <_IO_stdin_used+0xcdc>
and    %ch,0x61746d20
bound  %esp,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054d43 <_IO_stdin_used+0xcdf>
jne    8054d95 <_IO_stdin_used+0xd31>
fs
popa
je     8054d8e <_IO_stdin_used+0xd2a>
add    %al,%fs:(%eax)
gs
jb     8054da1 <_IO_stdin_used+0xd3d>
outsl  %ds:(%esi),(%dx)
jb     8054d52 <_IO_stdin_used+0xcee>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x646f6d20,0x67(%bp),%ebp
and    %ch,%gs:0x66(%edi)
and    %ah,0x25203a73
jae    8054d54 <_IO_stdin_used+0xcf0>
add    %al,(%eax)
gs
jb     8054dc1 <_IO_stdin_used+0xd5d>
outsl  %ds:(%esi),(%dx)
jb     8054d72 <_IO_stdin_used+0xd0e>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x6e776f20,0x67(%bp),%ebp
gs
jb     8054d81 <_IO_stdin_used+0xd1d>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x25203a73
jae    8054d75 <_IO_stdin_used+0xd11>
add    %dh,0x77(%edx)
add    %ah,0x73252073
and    %ah,0x73252073
and    %ah,0x64252064
or     (%eax),%al
cmp    (%eax),%esp
jb     8054deb <_IO_stdin_used+0xd87>
jae    8054dfc <_IO_stdin_used+0xd98>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8054dfc <_IO_stdin_used+0xd98>
add    %al,%fs:(%eax)
add    %al,(%eax)
pop    %ebx
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8054e06 <_IO_stdin_used+0xda2>
outsb  %ds:(%esi),(%dx)
je     8054e01 <_IO_stdin_used+0xd9d>
cmp    (%eax),%ah
ja     8054e09 <_IO_stdin_used+0xda5>
jb     8054e18 <_IO_stdin_used+0xdb4>
imul   $0x6f6e203a,0x67(%esi),%ebp
and    %ah,0x69(%esi)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x65(%esi)
ja     8054e28 <_IO_stdin_used+0xdc4>
imul   $0x20746120,0x65(%esi),%ebp
je     8054e2d <_IO_stdin_used+0xdc9>
and    %ah,%gs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0xa73
add    %bl,0x6d(%ebx)
outsb  %ds:(%esi),(%dx)
je     8054e3e <_IO_stdin_used+0xdda>
outsb  %ds:(%esi),(%dx)
je     8054e39 <_IO_stdin_used+0xdd5>
cmp    (%eax),%ah
insb   (%dx),%es:(%edi)
imul   $0x20642520,0x65(%esi),%ebp
imul   $0x69207325,0x20(%esi),%ebp
jae    8054e0f <_IO_stdin_used+0xdab>
bound  %esp,0x64(%ecx)
and    $0xa73,%eax
add    %ch,(%edi)
jae    8054e74 <_IO_stdin_used+0xe10>
jae    8054e2c <_IO_stdin_used+0xdc8>
fs
gs
jbe    8054e30 <_IO_stdin_used+0xdcc>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%edi),%ebp
cmp    %fs:0x6f6c2f64,%ah
outsl  %ds:(%esi),(%dx)
jo     8054e41 <_IO_stdin_used+0xddd>
bound  %esp,0x63(%ecx)
imul   $0x67,0x6e(%ecx),%ebp
pop    %edi
imul   $0x4f00,0x0(%ebp,%eiz,2),%bp
jne    8054e97 <_IO_stdin_used+0xe33>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8054ea6 <_IO_stdin_used+0xe42>
and    %dh,0x68(%edi)
imul   $0x64616572,0x20(%ebp,%eiz,2),%ebp
imul   $0x73617020,0x67(%esi),%ebp
jae    8054eb1 <_IO_stdin_used+0xe4d>
push   $0x65736172
add    %al,(%eax)
and    $0x2f203a73,%eax
fs
gs
jbe    8054e71 <_IO_stdin_used+0xe0d>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8054e7b <_IO_stdin_used+0xe17>
outsl  %fs:(%esi),(%dx)
gs
jae    8054e80 <_IO_stdin_used+0xe1c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054e84 <_IO_stdin_used+0xe20>
gs
js     8054ed0 <_IO_stdin_used+0xe6c>
jae    8054edd <_IO_stdin_used+0xe79>
add    %al,%cs:(%eax)
and    $0x6e203a73,%eax
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%eax)
jb     8054ee4 <_IO_stdin_used+0xe80>
imul   $0x206e6f69,0x73(%ebx),%esi
je     8054eef <_IO_stdin_used+0xe8b>
and    %ch,0x6f(%edi,%ebp,2)
imul   $0x61,(%eax),%esp
je     8054ea9 <_IO_stdin_used+0xe45>
das
fs
gs
jbe    8054ebd <_IO_stdin_used+0xe59>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8054eb8 <_IO_stdin_used+0xe54>
jae    8054ed1 <_IO_stdin_used+0xe6d>
dec    %esi
add    %ah,%ds:0x63203a73
outsl  %ds:(%esi),(%dx)
jne    8054f0c <_IO_stdin_used+0xea8>
and    %ch,%fs:0x6f(%esi)
je     8054ec6 <_IO_stdin_used+0xe62>
imul   $0x6120,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
jns    8054ecf <_IO_stdin_used+0xe6b>
data16
jb     8054f17 <_IO_stdin_used+0xeb3>
and    %ch,%gs:0x6f(%edi,%ebp,2)
jo     8054ed9 <_IO_stdin_used+0xe75>
fs
gs
jbe    8054f26 <_IO_stdin_used+0xec2>
arpl   %sp,0x0(%ebp)
and    $0x43203a73,%eax
outsl  %ds:(%esi),(%dx)
jne    8054f34 <_IO_stdin_used+0xed0>
and    %ch,%fs:0x6f(%esi)
je     8054eee <_IO_stdin_used+0xe8a>
imul   $0x6120,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
jns    8054ef7 <_IO_stdin_used+0xe93>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8054efc <_IO_stdin_used+0xe98>
fs
gs
jbe    8054f49 <_IO_stdin_used+0xee5>
arpl   %sp,0x2e(%ebp)
and    %cl,0x61(%ebp)
jns    8054f4a <_IO_stdin_used+0xee6>
and    %dh,%gs:0x69(%eax,%ebp,2)
jae    8054f0f <_IO_stdin_used+0xeab>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edi,%ebp,2)
jae    8054f1b <_IO_stdin_used+0xeb7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054f1f <_IO_stdin_used+0xebb>
imul   $0x77,0x6f(%esi),%ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
bound  %ebp,0x75(%edi)
je     8054f31 <_IO_stdin_used+0xecd>
je     8054f7b <_IO_stdin_used+0xf17>
and    %ch,%gs:0x6f(%edi,%ebp,2)
jo     8054f3a <_IO_stdin_used+0xed6>
fs
gs
jbe    8054f87 <_IO_stdin_used+0xf23>
arpl   %sp,0x3f(%ebp)
and    %ch,(%eax)
dec    %ecx
data16
and    %dh,0x6f(%ebx)
sub    $0x20,%al
jb     8054f91 <_IO_stdin_used+0xf2d>
arpl   %bp,0x6d(%edi)
jo     8054f9a <_IO_stdin_used+0xf36>
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x72(%edi)
and    %ah,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
fs
jo     8054faf <_IO_stdin_used+0xf4b>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8054f6d <_IO_stdin_used+0xf09>
sub    %eax,%cs:(%eax)
add    %al,(%eax)
add    %dh,0x61(%edi)
jb     8054fbe <_IO_stdin_used+0xf5a>
imul   $0x7325203a,0x67(%esi),%ebp
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     8054fc4 <_IO_stdin_used+0xf60>
popa
fs
jns    8054f83 <_IO_stdin_used+0xf1f>
popa
jae    8054fd9 <_IO_stdin_used+0xf75>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ecx)
je     8054fd1 <_IO_stdin_used+0xf6d>
and    %dh,%fs:0x69(%edi)
je     8054fda <_IO_stdin_used+0xf76>
and    %ah,0xa73
ja     8054fdb <_IO_stdin_used+0xf77>
jb     8054fea <_IO_stdin_used+0xf86>
imul   $0x7325203a,0x67(%esi),%ebp
cmp    (%eax),%ah
imul   $0x74697277,0x20(%ebx),%esi
gs
sub    $0x746f7270,%eax
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    $0x20,%al
jne    805500e <_IO_stdin_used+0xfaa>
imul   $0x61657220,0x67(%esi),%ebp
fs
sub    $0x796c6e6f,%eax
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    805501c <_IO_stdin_used+0xfb8>
outsb  %fs:(%esi),(%dx)
daa
je     8054fd5 <_IO_stdin_used+0xf71>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x656d206f,0x74(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805503e <_IO_stdin_used+0xfda>
sub    $0x20,%al
gs
js     8055033 <_IO_stdin_used+0xfcf>
je     8055035 <_IO_stdin_used+0xfd1>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
add    %dh,0x65(%ebx)
je     8055037 <_IO_stdin_used+0xfd3>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8055005 <_IO_stdin_used+0xfa1>
and    $0x73252c73,%eax
sub    $0x25,%al
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    8055014 <_IO_stdin_used+0xfb0>
and    $0x29756c6c,%eax
cmp    (%eax),%ah
jae    8055066 <_IO_stdin_used+0x1002>
arpl   %sp,0x65(%ebx)
jae    8055069 <_IO_stdin_used+0x1005>
or     (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8055037 <_IO_stdin_used+0xfd3>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8055024 <_IO_stdin_used+0xfc0>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     805506f <_IO_stdin_used+0x100b>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x3a732520,0x65(%ebx),%esp
and    %ah,0xa73
add    %ch,(%edi)
fs
gs
jbe    8055050 <_IO_stdin_used+0xfec>
add    %ch,(%edi)
jo     8055097 <_IO_stdin_used+0x1033>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jo     805508b <_IO_stdin_used+0x1027>
jb     80550a0 <_IO_stdin_used+0x103c>
imul   $0x2f00736e,0x6f(%ecx,%ebp,2),%esi
fs
gs
jbe    8055067 <_IO_stdin_used+0x1003>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805506c <_IO_stdin_used+0x1008>
and    $0x642f0064,%eax
gs
jbe    8055074 <_IO_stdin_used+0x1010>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     805506f <_IO_stdin_used+0x100b>
add    %ah,%fs:(%eax)
and    $0x64252064,%eax
and    %ah,0x20756c6c
and    $0x5b383231,%eax
pop    %esi
or     (%eax),%ah
pop    %ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
push   %eax
popa
jae    80550e1 <_IO_stdin_used+0x107d>
ja     80550df <_IO_stdin_used+0x107b>
jb     80550d6 <_IO_stdin_used+0x1072>
cmp    (%eax),%ah
add    %ch,0x6f(%ecx)
arpl   %si,0x20(%esp,%ebp,2)
dec    %esp
dec    %edi
dec    %edi
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
inc    %esi
inc    %esp
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
imul   $0x203a6c74,0x63(%edi),%ebp
dec    %esp
dec    %edi
dec    %edi
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
inc    %esi
inc    %esp
add    %ch,0x6f(%ecx)
arpl   %si,0x3a(%esp,%ebp,2)
and    %cl,0x4f(%edi,%ecx,2)
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %esp
push   %ebp
push   %ebx
add    %ch,0x6f(%ecx)
arpl   %si,0x3a(%esp,%ebp,2)
and    %cl,0x4f(%edi,%ecx,2)
push   %eax
pop    %edi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %esp
push   %ebp
push   %ebx
ss
xor    $0x0,%al
fs
gs
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8055107 <_IO_stdin_used+0x10a3>
and    $0x203a2973,%eax
jae    805515b <_IO_stdin_used+0x10f7>
arpl   %sp,0x65(%ebx)
jae    805515e <_IO_stdin_used+0x10fa>
or     (%eax),%al
bound  %esi,0x67(%ebp)
and    %ch,0x6e(%ecx)
and    %bh,0x73(%eax)
je     805516a <_IO_stdin_used+0x1106>
outsb  %ds:(%esi),(%dx)
fs
jne    805516c <_IO_stdin_used+0x1108>
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x77(%ebx)
popa
jo     8055107 <_IO_stdin_used+0x10a3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
je     805517e <_IO_stdin_used+0x111a>
jo     8055179 <_IO_stdin_used+0x1115>
jae    8055115 <_IO_stdin_used+0x10b1>
jae    8055190 <_IO_stdin_used+0x112c>
jae    805517f <_IO_stdin_used+0x111b>
jae    805511b <_IO_stdin_used+0x10b7>
jne    8055190 <_IO_stdin_used+0x112c>
bound  %esp,0x73(%esi)
add    %ah,0x67(%ebx)
jb     8055194 <_IO_stdin_used+0x1130>
jne    8055197 <_IO_stdin_used+0x1133>
add    %ah,0x70(%ebx)
jne    805519f <_IO_stdin_used+0x113b>
gs
je     805512f <_IO_stdin_used+0x10cb>
jb     80551a1 <_IO_stdin_used+0x113d>
arpl   %bx,0x70(%edi)
imul   $0x64007366,0x65(%eax),%esi
gs
jbe    80551ae <_IO_stdin_used+0x114a>
je     80551b3 <_IO_stdin_used+0x114f>
add    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x65640073,0x66(%ecx,%edi,2),%esi
bound  %esi,0x67(%ebp)
data16
jae    8055154 <_IO_stdin_used+0x10f0>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8055178 <_IO_stdin_used+0x1114>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    80551c4 <_IO_stdin_used+0x1160>
push   $0x6d656d20
outsl  %ds:(%esi),(%dx)
jb     80551de <_IO_stdin_used+0x117a>
add    %ch,(%edi)
jae    80551e2 <_IO_stdin_used+0x117e>
jae    805519a <_IO_stdin_used+0x1136>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%edi),%ebp
jae    80551a3 <_IO_stdin_used+0x113f>
fs
insl   (%dx),%es:(%edi)
das
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:(%edi)
fs
gs
jbe    80551b0 <_IO_stdin_used+0x114c>
insl   (%dx),%es:(%edi)
popa
jo     80551f5 <_IO_stdin_used+0x1191>
gs
jb     80551b7 <_IO_stdin_used+0x1153>
and    $0x642f0073,%eax
insl   (%dx),%es:(%edi)
sub    $0x4c525f00,%eax
inc    %esp
pop    %edi
cmp    $0x4e414c00,%eax
inc    %edi
cmp    $0x4e414c00,%eax
inc    %edi
push   %ebp
inc    %ecx
inc    %edi
inc    %ebp
cmp    $0x5f434c00,%eax
add    %al,0x41(%edx)
push   %ebx
dec    %eax
pop    %edi
inc    %ebp
dec    %esi
push   %esi
cmp    $0x4d4f4800,%eax
inc    %ebp
cmp    $0x53464900,%eax
cmp    $0x42524b00,%eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
inc    %esi
cmp    $0x5f444c00,%eax
add    %cl,0x42(%ecx,%ecx,2)
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x49414d00,%eax
dec    %esp
cmp    $0x534c4e00,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x45485300,%eax
dec    %esp
dec    %esp
cmp    $0x4c485300,%eax
dec    %ecx
inc    %edx
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
push   %ecx
add    $0x5519d08,%eax
or     %ah,0x80551(%edi)
add    %al,(%eax)
add    %dl,-0x54f7faaf(%eax)
push   %ecx
add    $0x551b008,%eax
or     %dh,-0x44f7faaf(%ebp)
push   %ecx
add    $0x551c008,%eax
or     %cl,%dl
push   %ecx
add    $0x551ce08,%eax
or     %dl,%bh
push   %ecx
add    $0x551dd08,%eax
or     %dl,%cl
push   %ecx
add    $0x551e608,%eax
or     %ch,%ch
push   %ecx
add    $0x8,%eax
add    %ah,0x64252e64
cs
and    $0x59540064,%eax
push   %eax
inc    %ebp
add    %al,(%eax)
add    %bh,(%ecx)
xor    0x530ba08,%eax
or     %dh,0x32(%ebx)
add    $0x530ba08,%eax
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x533e708
or     %bh,0x6c080530(%edx)
xor    $0x30ba0805,%eax
add    $0x530ba08,%eax
or     %cl,%al
xor    $0x5,%al
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x530ba08
or     %bl,0x31(%edx)
add    $0x530ba08,%eax
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x530ba08
or     %bl,0xd4080534
xor    %al,0x530ba08
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x530ba08
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x530ba08
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x530ba08
or     %bh,(%ecx)
xor    0x530ba08,%eax
or     %dh,0x32(%ebx)
add    $0x530ba08,%eax
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x533e708
or     %bh,0x6c080530(%edx)
xor    $0x30ba0805,%eax
add    $0x530ba08,%eax
or     %cl,%al
xor    $0x5,%al
or     %bh,-0x45f7fad0(%edx)
xor    %al,0x530ba08
or     %bl,0x31(%edx)
add    $0x3a732508,%eax
and    %ah,(%edi)
and    $0x42002773,%eax
dec    %ebx
dec    %ebp
inc    %edi
push   %esp
push   %eax
inc    %ebp
add    %ah,0x25732564
push   $0x64
and    $0x64250073,%eax
.byte 0x25
jae    8055348 <_IO_stdin_used+0x12e4>
add    %ebx,(%ebx)
add    (%ebx),%edi
or     %al,(%eax,%eax,1)
add    %al,0x58000000(%eax)
inc    %ebp
(bad)
jmp    *(%esp,%eax,1)
add    %al,(%eax)
cwtl
dec    %ebp
(bad)
call   *%eax
add    $0x5a980000,%eax
(bad)
decl   0x4(%eax)
add    %al,(%eax)
or     %bl,-0x1(%ebx)
call   *0x38000004(%eax)
pop    %ebp
(bad)
call   *%esp
add    $0x0,%al
add    %cl,-0xb0000a3(%eax)
add    $0x0,%al
add    %bh,0x60(%eax)
(bad)
pushl  0x60d80000(,%eax,1)
(bad)
call   *-0x7fffffb(%eax)
addr16 (bad)
push   %eax
add    $0x68080000,%eax
(bad)
incl   (%esi,%eax,1)
add    %al,(%eax)
mov    %ch,-0x1(%ecx)
lcall  *0x6(%eax)
add    %al,(%eax)
mov    %ch,-0x1(%edx)
lcall  *0x28000006(%eax)
imul   $0xffffffff,%edi,%edi
les    (%esi),%eax
add    %al,(%eax)
enter  $0xff6b,$0xff
lock push %es
add    %al,(%eax)
sbb    %ch,-0x1(%edi,%edi,8)
adc    %al,(%edi)
add    %al,(%eax)
pop    %eax
insb   (%dx),%es:(%edi)
(bad)
(bad)
cmp    $0x7,%al
add    %al,(%eax)
mov    %ch,-0x1(%edi,%edi,8)
push   %esp
pop    %es
add    %al,(%eax)
or     %ch,-0x1(%ebp)
pushl  0x0(%edi,%eax,1)
add    %ch,0x6d(%eax)
(bad)
ljmp   *0x6d780000(%edi,%eax,1)
(bad)
inc    %eax
pop    %es
add    %al,(%eax)
test   $0x6d,%al
(bad)
(bad)
fadds  (%edi)
add    %al,(%eax)
fsubrs -0x1(%ebp)
push   %eax
pop    %es
add    %al,(%eax)
cmp    %ch,-0x1(%esi)
call   *(%eax)
or     %al,(%eax)
add    %ch,0x6e(%eax)
(bad)
ljmp   *(%eax)
or     %al,(%eax)
add    %bl,0x40ffff6e(%eax)
or     %al,(%eax)
add    %cl,%al
outsb  %ds:(%esi),(%dx)
(bad)
lcall  *0x8(%eax)
add    %al,(%eax)
dec    %eax
outsl  %ds:(%esi),(%dx)
(bad)
call   *0x6ff80000(%eax,%ecx,1)
(bad)
(bad)
in     (%dx),%al
or     %al,(%eax)
add    %ch,0x70(%eax)
(bad)
ljmp   *(%eax)
or     %eax,(%eax)
add    %cl,0x71(%eax)
(bad)
incl   -0x47fffff7(%eax)
jno    8055446 <_IO_stdin_used+0x13e2>
(bad)
mov    $0x48000009,%esp
jb     805544e <_IO_stdin_used+0x13ea>
push   %esp
or     %eax,(%eax)
add    %bl,(%eax)
jae    8055456 <_IO_stdin_used+0x13f2>
decl   0x0(%edx,%ecx,1)
add    %cl,-0x5b00008c(%eax)
or     (%eax),%al
add    %cl,-0x1300008b(%eax)
or     (%eax),%al
add    %bh,0x76(%eax)
(bad)
incl   0x0(%ebx,%ecx,1)
add    %bh,%al
jbe    8055476 <_IO_stdin_used+0x1412>
lcall  *0x77780000(%ebx,%ecx,1)
(bad)
push   %esp
or     (%eax),%eax
add    %cl,0x3cffff78(%eax)
or     $0x0,%al
add    %bl,%al
js     805548e <_IO_stdin_used+0x142a>
call   *0x0(%esp,%ecx,1)
add    %bh,%al
jge    8055496 <_IO_stdin_used+0x1432>
lcall  *-0x77fffff4(%eax)
jle    805549e <_IO_stdin_used+0x143a>
jmp    *%eax
or     $0x0,%al
add    %bl,(%eax)
jg     80554a6 <_IO_stdin_used+0x1442>
ljmp   *(%eax)
or     $0x85b80000,%eax
(bad)
ljmp   *0xd(%eax)
add    %al,(%eax)
sub    %al,0xd9cffff(%esi)
add    %al,(%eax)
push   $0xc8ffff86
or     $0x87680000,%eax
(bad)
lcall  *(%esi,%ecx,1)
add    %al,(%eax)
test   $0x8b,%al
(bad)
lcall  *0x0(%esi,%ecx,1)
add    %bl,%al
mov    %edi,%edi
(bad)
js     80554e8 <_IO_stdin_used+0x1484>
add    %al,(%eax)
clc
mov    %edi,%edi
decl   -0x72980000(%esi,%ecx,1)
(bad)
inc    %esp
push   %cs
add    %al,(%eax)
test   $0x8d,%al
(bad)
jmp    *%esp
push   %cs
add    %al,(%eax)
fmuls  0xf30ffff(%esi)
add    %al,(%eax)
dec    %eax
(bad)
(bad)
ljmp   *0xf(%eax)
add    %al,(%eax)
pop    %eax
nop
(bad)
(bad)
mov    $0xd800000f,%esp
xchg   %eax,%ecx
(bad)
push   %esp
sldt   (%eax)
test   $0x93,%al
(bad)
ljmp   *(%eax,%edx,1)
add    %al,(%eax)
push   $0x6cffff94
adc    %al,(%eax)
add    %cl,(%eax)
xchg   %eax,%ebp
(bad)
call   *-0x69b80000(%eax,%edx,1)
(bad)
call   *%esp
adc    %al,(%eax)
add    %cl,-0x69(%eax)
(bad)
decl   (%ecx,%edx,1)
add    %al,(%eax)
mov    $0x2cffff97,%eax
adc    %eax,(%eax)
add    %bh,%al
xchg   %eax,%edi
(bad)
lcall  *0x11(%eax)
add    %al,(%eax)
mov    %bl,0x1198ffff(%ecx)
add    %al,(%eax)
mov    $0xd8ffff9a,%eax
adc    %eax,(%eax)
add    %bl,-0x65(%eax)
(bad)
ljmp   *(%edx,%edx,1)
add    %al,(%eax)
mov    $0x5cffff9c,%eax
adc    (%eax),%al
add    %ch,(%eax)
test   $0xff,%al
jmp    *-0x77ffffee(%eax)
test   $0x12fcffff,%eax
add    %al,(%eax)
fsubrs 0x1330ffff(%ecx)
add    %al,(%eax)
cwtl
stos   %al,%es:(%edi)
(bad)
decl   -0x27ffffed(%eax)
stos   %eax,%es:(%edi)
(bad)
jmp    *%eax
adc    (%eax),%eax
add    %bh,(%eax)
lods   %ds:(%esi),%al
(bad)
incl   (%esp,%edx,1)
add    %al,(%eax)
cwtl
lods   %ds:(%esi),%al
(bad)
lcall  *(%esp,%edx,1)
add    %al,(%eax)
call   39055555 <_end+0x30ffb0e5>
adc    $0x0,%al
add    %bl,-0x53(%eax)
(bad)
ljmp   *0x14(%eax)
add    %al,(%eax)
mov    $0xc0ffffae,%eax
adc    $0x0,%al
add    %ch,-0x50(%eax)
(bad)
push   %eax
adc    $0x0,%al
add    %ch,-0x4f(%eax)
(bad)
ljmp   *-0x4e180000(,%edx,1)
(bad)
lcall  *0x0(%ebp,%edx,1)
add    %cl,-0x4e(%eax)
(bad)
(bad)
jl     80555ef <_IO_stdin_used+0x158b>
add    %al,(%eax)
mov    %dh,0x1594ffff(%edx)
add    %al,(%eax)
mov    $0xb0ffffb2,%eax
adc    $0xb2f80000,%eax
(bad)
call   *%eax
adc    $0xb3380000,%eax
(bad)
(bad)
in     (%dx),%al
adc    $0xb4880000,%eax
(bad)
pushl  (%eax)
push   %ss
add    %al,(%eax)
call   790555c0 <_end+0x70ffb150>
push   %ss
add    %al,(%eax)
cwtl
into
(bad)
pushl  -0x37ffffea(%eax)
iret
(bad)
decl   (%eax)
pop    %ss
add    %al,(%eax)
mov    %dl,%cl
(bad)
decl   0x0(%edi,%edx,1)
add    %bh,-0x7300002e(%eax)
pop    %ss
add    %al,(%eax)
cmp    %dl,%bl
(bad)
inc    %esp
pop    %ss
add    %al,(%eax)
sub    %dl,%ah
(bad)
(bad)
in     (%dx),%al
pop    %ss
add    %al,(%eax)
js     8055612 <_IO_stdin_used+0x15ae>
(bad)
call   *(%eax)
sbb    %al,(%eax)
add    %cl,0x58ffffd5(%eax)
sbb    %al,(%eax)
add    %bh,-0x4b00002a(%eax)
sbb    %al,(%eax)
add    %cl,(%eax)
xlat   %ds:(%ebx)
(bad)
(bad)
fcomps (%eax)
add    %al,(%eax)
cmp    %dl,%bh
(bad)
push   %eax
sbb    %al,(%eax)
add    %ch,-0x29(%eax)
(bad)
decl   (%eax)
sbb    %eax,(%eax)
add    %ch,0x28ffffd7(%eax)
sbb    %eax,(%eax)
add    %bl,%al
fdivr  %st(7),%st
pushl  0x19(%eax)
add    %al,(%eax)
clc
fdivr  %st(7),%st
incl   -0x26d80000(%ecx,%ebx,1)
(bad)
lcall  *-0x26780000(%ecx,%ebx,1)
(bad)
jmp    *%eax
sbb    %eax,(%eax)
add    %ch,-0x7000027(%eax)
sbb    %eax,(%eax)
add    %bh,0xcffffd9(%eax)
sbb    (%eax),%al
add    %cl,%al
fcos
jmp    *(%eax)
sbb    (%eax),%al
add    %bl,%al
fcos
pushl  (%edx,%ebx,1)
add    %al,(%eax)
call   51055692 <_end+0x48ffb222>
sbb    (%eax),%al
add    %cl,(%eax)
(bad)
lcall  *0x0(%edx,%ebx,1)
add    %bh,(%eax)
(bad)
pushl  0x0(%edx,%ebx,1)
add    %ch,-0x26(%eax)
(bad)
decl   -0x24f80000(%edx,%ebx,1)
(bad)
inc    %esp
sbb    (%eax),%al
add    %cl,%al
(bad)
incl   (%eax)
sbb    (%eax),%eax
add    %bl,-0x24(%eax)
(bad)
decl   0x1b(%eax)
add    %al,(%eax)
mov    $0xa0ffffe2,%eax
sbb    (%eax),%eax
add    %cl,(%eax)
jecxz  80556f6 <_IO_stdin_used+0x1692>
(bad)
fcomps (%ebx)
add    %al,(%eax)
pop    %eax
jecxz  80556fe <_IO_stdin_used+0x169a>
incl   (%esp,%ebx,1)
add    %al,(%eax)
sbb    %ah,%ah
(bad)
pushl  (%eax)
sbb    $0x0,%al
add    %bl,%al
in     $0xff,%al
lcall  *0x0(%esp,%ebx,1)
add    %bl,-0x7700001b(%eax)
sbb    $0x0,%al
add    %ch,(%eax)
out    %eax,$0xff
lcall  *-0x16680000(%esp,%ebx,1)
(bad)
(bad)
fcompl (%eax,%eax,1)
add    %ch,-0x16(%eax)
(bad)
incl   0x0(%ebp,%ebx,1)
add    %cl,(%eax)
jmp    8055736 <_IO_stdin_used+0x16d2>
lcall  *-0x13c80000(%ebp,%ebx,1)
(bad)
decl   (%eax)
push   %ds
add    %al,(%eax)
test   $0xec,%al
(bad)
incl   0x0(%esi,%ebx,1)
add    %bh,0x58ffffec(%eax)
push   %ds
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805576b <_IO_stdin_used+0x1707>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x41,%al
(bad)
incl   0x8(%eax)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805578b <_IO_stdin_used+0x1727>
js     8055789 <_IO_stdin_used+0x1725>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
inc    %esp
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
dec    %eax
push   %esi
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%edx),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,0x70000000(%eax)
push   %esi
(bad)
ljmp   *(%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x80c00e46
add    %bh,%dl
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
int3
add    %al,(%eax)
add    %bl,-0x1(%eax,%ebx,2)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
add    %al,(%eax)
add    %cl,0x2ecffff(%eax,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x2d00e46
cli
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
sub    $0x1,%al
add    %al,(%eax)
cmp    $0x5b,%al
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %cl,0xe(%esi)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xe,0x61300e45
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
push   %cs
xor    %al,-0x79fd7afb(%ebx)
add    $0x87,%al
add    0xe(%ebx),%eax
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %al,(%ecx)
add    %al,(%eax)
inc    %eax
pop    %ebx
(bad)
call   *(%esi)
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x77700e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x1,$0x0
rolb   $0xff,-0x1(%edi)
push   %es
or     $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x10,%eax
call   8055942 <_IO_stdin_used+0x18de>
(bad)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
cld
add    %eax,(%eax)
add    %bh,%ah
popa
(bad)
(bad)
jle    805595b <_IO_stdin_used+0x18f7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
(bad)  (%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
push   %eax
add    (%eax),%al
add    %ch,(%eax)
arpl   %di,%di
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
nop
add    (%eax),%al
add    %ch,%al
arpl   %di,%di
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     8055a05 <_IO_stdin_used+0x19a1>
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x4f,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x5c000002,%esp
fs
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jg     8055a31 <_IO_stdin_used+0x19cd>
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x4f,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
call   d8055a43 <_end+0xcfffb5d3>
fs
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
jnp    8055a61 <_IO_stdin_used+0x19fd>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%eax
add    %al,(%eax)
gs
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
xor    $0x3,%al
add    %al,(%eax)
adc    $0x65,%al
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
dec    %esp
add    (%eax),%eax
add    %ch,0x78ffff(,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
addb   $0x2,(%ecx)
dec    %ebx
or     (%esi),%cl
add    $0x42,%al
or     0xe(%edi),%esp
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    (%eax),%eax
add    %cl,0x5cffff(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%esp
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%eax
add    %dh,0xbffff(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    $0xb0000003,%eax
gs
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
rolb   (%ebx)
add    %al,(%eax)
enter  $0xff65,$0xff
and    %eax,(%eax)
add    %al,(%eax)
add    %dl,0xe(%ebx)
adc    %cl,0xe(%ebp)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
call   e8055b44 <_end+0xdfffb6d4>
gs
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%eax)
push   %cs
add    $0x45,%al
or     0xa(%eax),%esi
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
or     %al,(%eax,%eax,1)
add    %ah,(%eax)
data16
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %bh,(%eax)
data16
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax,%eax,1)
add    %dl,0x66(%eax)
(bad)
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
adc    %cl,0xe(%ebp)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
add    $0x0,%al
add    %ch,0x66(%eax)
(bad)
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %edx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x66ac0000(%esp,%eax,1)
(bad)
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
in     $0x4,%al
add    %al,(%eax)
add    $0x67,%al
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %eax
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
add    $0x67380000,%eax
(bad)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%edx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bh,0x5(%eax)
add    %al,(%eax)
shlb   $0xff,-0x1(%edi)
add    %al,(%bx,%si)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
mov    $0x5,%ah
add    %al,(%eax)
hlt
addr16 (bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,%ah
add    $0x684c0000,%eax
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,0x0(%esi,%eax,1)
add    %al,%ah
push   $0x16affff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,0x69dc0000(%esi,%eax,1)
(bad)
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%edi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,%ah
push   %es
add    %al,(%eax)
xchg   %eax,%esp
push   $0xffffffff
(bad)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%edi,%eax,1)
add    %al,(%eax)
sub    $0x6b,%al
(bad)
(bad)
jg     8055e9a <_IO_stdin_used+0x1e36>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2200e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x6b540000(%edi,%eax,1)
(bad)
(bad)
jg     8055ef2 <_IO_stdin_used+0x1e8e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2200e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,%ah
pop    %es
add    %al,(%eax)
jl     8055fb1 <_IO_stdin_used+0x1f4d>
(bad)
incl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x41100e0a(%ebx),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
xor    $0x8,%al
add    %al,(%eax)
inc    %esp
insb   (%dx),%es:(%edi)
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
push   %ebx
push   %cs
and    %dh,0xe(%eax)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %cl,0x0(%eax,%ecx,1)
add    %bh,-0x1(%esp,%ebp,2)
call   *(%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e46
mov    $0x3,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x58000008(%eax)
jno    8055fea <_IO_stdin_used+0x1f86>
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ebx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,%al
or     %al,(%eax)
add    %ah,-0x7300008f(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    %cl,(%ecx)
add    %al,(%eax)
call   a1055fee <_end+0x98ffbb7e>
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
pusha
or     %eax,(%eax)
add    %cl,0x78(%eax)
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
or     %eax,(%eax)
add    %al,0x3dffff(%eax,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x4b,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
rorb   $0x0,(%ecx)
add    %bl,-0x1000088(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6e500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0xe,%ch
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    $0xa,%al
add    %al,(%eax)
inc    %esp
jns    805616e <_IO_stdin_used+0x210a>
pushl  0x4
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dl,0x0(%edx,%ecx,1)
add    %al,-0x1(%ebp,%edi,2)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0xa(%eax)
add    %al,(%eax)
pop    %eax
jge    80561ca <_IO_stdin_used+0x2166>
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
test   %cl,(%edx)
add    %al,(%eax)
fs
jge    80561de <_IO_stdin_used+0x217a>
jmp    *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
and    %eax,(%ebx)
sub    %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0x9c00000a,%esp
jle    8056216 <_IO_stdin_used+0x21b2>
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
jne    8056235 <_IO_stdin_used+0x21d1>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
add    %al,(%eax)
add    %bl,%ah
or     (%eax),%al
add    %bh,0x12dffff(%esi,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x7ff1b7fc(%ebx)
add    %eax,(%edx)
fwait
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sub    %cl,(%ebx)
add    %al,(%eax)
mov    0x6fffff7f,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4504(%ebx)
add    0xa(%ebp),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
pusha
or     (%eax),%eax
add    %bl,%al
jg     80562ba <_IO_stdin_used+0x2256>
decl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %ecx
push   %cs
add    $0xc3,%al
(bad)
inc    %esi
push   %cs
inc    %eax
addl   $0xffffff87,0x4860285
add    (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xb,%ah
add    %al,(%eax)
xchg   %eax,%esp
cmp    $0xff,%bh
ja     8056313 <_IO_stdin_used+0x22af>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    (%edx),%al
loope  8056335 <_IO_stdin_used+0x22d1>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
or     (%eax),%eax
add    %bl,%ah
cmp    $0x1caff,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x2ff1b7fc(%ebx)
inc    %ecx
add    %bh,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
and    $0xc,%al
add    %al,(%eax)
je     8056301 <_IO_stdin_used+0x229d>
(bad)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff98,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
fs
or     $0x0,%al
add    %dh,%ah
cmp    $0xffffffff,%edi
xchg   %eax,%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x5ff1b7fe(%ebx)
add    (%edx),%eax
push   %ecx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %cs,(%eax,%eax,1)
add    %ch,-0x1(%esp,%eax,4)
pushl  (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4900e48
or     %fs:(%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
int3
or     $0x0,%al
add    %ch,-0x1(%ebp,%eax,4)
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x5ff1b9fc(%ebx)
add    0xa(%edi),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0xd,%al
add    %al,(%eax)
xor    $0x86,%al
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
addb   $0x7a,(%ecx)
or     (%esi),%cl
add    $0x43,%al
or     0xe(%esi),%esp
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0x797c0000(,%ecx,1)
(bad)
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %eax
or     $0x86980000,%eax
(bad)
call   *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2b00e46
in     (%dx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
nop
or     $0x87e80000,%eax
(bad)
jmp    *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x2b00e46
mov    $0x41140e0a,%edx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax),%edx
add    %al,(%eax)
rorb   0x88d80000
(bad)
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x1900e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
and    $0xe,%al
add    %al,(%eax)
and    $0x89,%al
(bad)
lcall  *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x46,(%ebx)
push   %cs
rolb   $0x2,(%ecx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
push   %esp
push   %cs
add    %al,(%eax)
push   %esp
mov    %bh,%bh
jmp    *0xb(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3f00e46
repnz add (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bl,-0x7ffffff2(%eax)
xchg   %eax,%ebp
(bad)
call   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
hlt
push   %cs
add    %al,(%eax)
test   %dl,0x47ffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     %fs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ch,(%eax)
sldt   (%eax)
mov    0xb7ffff96,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,0x800000f(%eax)
xchg   %eax,%edi
(bad)
(bad)
cmp    (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbe,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,%al
sldt   (%eax)
lock xchg %eax,%edi
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x5ff1b9fe(%ebx)
add    %eax,(%edx)
dec    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cld
sldt   (%eax)
sub    $0x98,%al
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %dl,0xe(%ebx)
and    %bh,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x10,%al
add    %al,(%eax)
je     8056706 <_IO_stdin_used+0x26a2>
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,(%eax,%eax,1)
add    %al,(%eax)
sub    %dl,(%eax)
add    %al,(%eax)
mov    $0x98,%al
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     80567a7 <_IO_stdin_used+0x2743>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,0x10(%eax)
add    %al,(%eax)
call   5f056755 <_end+0x56ffc2e5>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%ebp,%eax,8)
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    $0xf0000010,%eax
cltd
(bad)
pushl  0x1(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %esi
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa016203,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,%al
adc    %al,(%eax)
add    %dh,-0x65(%eax)
(bad)
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xae60204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %ah,(%ecx,%edx,1)
add    %al,(%eax)
xor    $0x9c,%al
(bad)
(bad)
js     8056882 <_IO_stdin_used+0x281e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     %fs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
push   %esp
adc    %eax,(%eax)
add    %al,0x60ffff(%esp,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
je     80568db <_IO_stdin_used+0x2877>
add    %al,(%eax)
les    0x33ff(%edi,%edi,8),%ebx
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edi)
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
mov    %ss,(%ecx)
add    %al,(%eax)
in     (%dx),%al
pushf
(bad)
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
test   $0x11,%al
add    %al,(%eax)
add    %bl,0x31ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
enter  $0x11,$0x0
and    %bl,0x34ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%edi)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
in     $0x11,%al
add    %al,(%eax)
inc    %esp
popf
(bad)
incl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x4d00e46
sbb    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    %dl,(%edx)
add    %al,(%eax)
push   %eax
sahf
(bad)
call   *0x3(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x40d00e46
jmp    80569ae <_IO_stdin_used+0x294a>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   $0x70000012
mov    0x16a2ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1880e43
xchg   %eax,%esi
push   %ss
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %ch,-0x1fffffee(%eax)
mov    $0xff,%bh
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jnp    8056a44 <_IO_stdin_used+0x29e0>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
mov    $0xb6ffffb8,%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
pop    %ebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %esp
adc    (%eax),%eax
add    %dh,(%edx,%edi,4)
(bad)
ljmp   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
test   %dl,(%ebx)
add    %al,(%eax)
and    $0xbb,%al
(bad)
(bad)
js     8056ae2 <_IO_stdin_used+0x2a7e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
bound  %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x24,%al
add    %al,(%eax)
add    %bh,-0x44940000(%ebx,%edx,1)
(bad)
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x2ff1b9fe(%ebx)
add    (%edx),%eax
dec    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
in     $0x13,%al
add    %al,(%eax)
xor    $0xbc,%al
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
add    0xe(%ecx),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
adc    $0x0,%al
add    %ah,-0x44(%eax)
(bad)
incl   (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%edi
adc    %al,-0x3d(%esi)
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dl,0x14(%eax)
add    %al,(%eax)
sub    %bh,0x129ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
pop    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    $0x0,%al
add    %bh,%ah
mov    $0x47ffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jae    8056c21 <_IO_stdin_used+0x2bbd>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
rclb   (%eax,%eax,1)
add    %ch,(%eax)
mov    $0x26ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
call   48056c55 <_end+0x3fffc7e5>
mov    $0x26ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
add    %dl,0xbe580000
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,(%eax)
adc    $0xbe780000,%eax
(bad)
jmp    *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%edx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,0x15(%eax)
add    %al,(%eax)
pusha
mov    $0x15ffff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jl     8056ce7 <_IO_stdin_used+0x2c83>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x29ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%ebp)
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %dl,-0x407c0000(%ebp,%edx,1)
(bad)
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jnp    8056d13 <_IO_stdin_used+0x2caf>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4c,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,%al
adc    $0xbfa00000,%eax
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
lock adc $0xbfa80000,%eax
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%esi,%edx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x10ffff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %dl,(%esi)
add    %al,(%eax)
mov    0x10ffffbf,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%esi,%edx,1)
add    %al,(%eax)
pushf
mov    $0x10ffff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
push   %ss
add    %al,(%eax)
cwtl
mov    $0x12ffff,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
push   %esp
push   %ss
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x23ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %ss
add    %al,(%eax)
mov    $0x23ffffbf,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
test   %dl,(%esi)
add    %al,(%eax)
aam    $0xbf
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,-0x3fc40000(%esi,%edx,1)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x22c0e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bh,%al
push   %ss
add    %al,(%eax)
rol    $0xff,%al
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %al,0x17(%eax)
add    %al,(%eax)
or     %al,%cl
(bad)
call   *0x6(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cwtl
pop    %ss
add    %al,(%eax)
adc    %al,%bh
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %bh,0xa(%ebx)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
rclb   (%edi)
add    %al,(%eax)
sub    %al,%bh
(bad)
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37f04(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,%ah
pop    %ss
add    %al,(%eax)
dec    %esp
(bad)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
sbb    %al,(%eax)
add    %ah,%al
(bad)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%ebx,1)
add    %dh,-0x1(%eax,%ecx,8)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x8000018(%eax)
leave
(bad)
call   *0x1(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
sbb    %al,(%eax)
add    %al,0x26fffff(%edx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
ret    $0xe0a
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%esp
add    %dl,%ah
sbb    %al,(%eax)
add    %dh,0xcaffff(%esp,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bh,(%ecx,%ebx,1)
add    %al,(%eax)
sbb    $0xcd,%al
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x94000000
sbb    %eax,(%eax)
add    %ah,-0x1(%ebp,%ecx,8)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    (%eax),%al
add    %ch,(%eax)
into
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%edx,%ebx,1)
add    %al,(%eax)
pop    %esp
into
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x1a(%eax)
add    %al,(%eax)
pop    %eax
into
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
mov    $0xad,%al
add    $0x8,%al
nop
lods   %ds:(%esi),%eax
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,0x2(%edi)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
jo     8058eba <_IO_stdin_used+0x4e56>
add    $0x8,%al
or     $0x3c000000,%eax
inc    %eax
add    $0x1908,%eax
add    %bh,%al
mov    0x1b08,%es
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
cld
mov    0x1c08,%es
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
pusha
mov    (%eax,%ecx,1),%eax
push   %es
add    %al,(%eax)
add    %dl,(%eax)
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
sahf
push   %es
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
nop
add    $0x208,%eax
add    %bl,(%eax)
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,-0x6c(%eax)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
sub    %dl,0x1208(%esp,%eax,1)
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x28(%edi)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x2(%edi)
xchg   %eax,%ecx
add    $0x8,%al
add    %al,(%eax)
add    $0x8f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x39f7fb68(%esi)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
negb   -0x66f9f7fc(%eax)
add    $0x8,%al
push   %ss
cltd
add    $0x8,%al
es
cltd
add    $0x8,%al
ss
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
push   %esi
cltd
add    $0x8,%al
cwtd
add    $0x8,%al
jbe    8058fd7 <_IO_stdin_used+0x4f73>
add    $0x8,%al
xchg   %bl,-0x6669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    8059018 <_IO_stdin_used+0x4fb4>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    8059059 <_IO_stdin_used+0x4ff5>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    805909a <_IO_stdin_used+0x5036>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    80590db <_IO_stdin_used+0x5077>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    805911c <_IO_stdin_used+0x50b8>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
es
lahf
add    $0x8,%al
ss
lahf
add    $0x8,%al
inc    %esi
lahf
add    $0x8,%al
push   %esi
lahf
add    $0x8,%al
data16
lahf
add    $0x8,%al
jbe    805915d <_IO_stdin_used+0x50f9>
add    $0x8,%al
xchg   %bl,-0x6069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lahf
add    $0x8,%al
mov    $0x9f,%dh
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
out    %al,$0x9f
add    $0x8,%al
negb   -0x5ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    0xa0260804,%al
add    $0x8,%al
mov    %ss:0xa0460804,%al
add    $0x8,%al
push   %esi
mov    0xa0660804,%al
add    $0x8,%al
jbe    805919e <_IO_stdin_used+0x513a>
add    $0x8,%al
xchg   %ah,-0x5f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa0b60804,%al
add    $0x8,%al
(bad)
mov    0xa0d60804,%al
add    $0x8,%al
(bad)
push   %eax
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
cmp    0x5(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
inc    %ecx
inc    %edx
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
inc    %esi
inc    %edx
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
dec    %esi
inc    %edx
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
pop    %eax
inc    %edx
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
pusha
inc    %edx
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
push   $0x80542
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
jb     8059304 <_IO_stdin_used+0x52a0>
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bh,0x42(%eax)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x78000000(%eax)
inc    %edx
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
.byte 0xff
add    %al,(%eax)
add    %al,(%eax)
jne    6f <_init-0x8049801>
outsl  %ds:(%esi),(%dx)
jne    73 <_init-0x80497fd>
je     7 <_init-0x8049869>
add    %ch,%dl
and    (%ebx),%bl
fs
