das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %ch,-0x4e676347(%eax)
jp     8048159 <pathconf@plt-0xd17>
hlt
xchg   %al,-0x2e513558(%eax,%eiz,4)
lock popf
push   $0x5c
.byte 0xd2
add    (%eax),%eax
add    %al,(%eax)
inc    %ebp
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,0x32004000(%edx)
and    %ecx,0x22004080(%esi,%esi,1)
mov    0x45000004,%al
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
push   %ecx
add    %al,(%eax)
add    %al,%dh
push   %cs
loopne 8048219 <pathconf@plt-0xc57>
sub    %ebx,0x50bc1c8c
jbe    8048182 <pathconf@plt-0xcee>
cmp    %dh,%dl
mov    (%esi,%eax,4),%ebx
lock xchg %eax,%esi
jl     80481bb <pathconf@plt-0xcb5>
sub    $0x63,%al
jb     804822d <pathconf@plt-0xc43>
lods   %ds:(%esi),%eax
cmp    %ecx,0x91c3d0a4
lods   %ds:(%esi),%al
dec    %ebx
jecxz  80481bc <pathconf@plt-0xcb4>
push   %bp
popa
adc    %dl,-0x1a687660(%esi)
bound  %eax,-0xb(%ecx)
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
inc    %ecx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jb     8048293 <pathconf@plt-0xbdd>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ecx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    (%eax),%al
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stc
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,%es:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     80484d2 <pathconf@plt-0x99e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%cl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %ds:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %dh,(%eax)
nop
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%ecx)
add    %al,(%eax)
and    %dl,0x5(%edx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
rolb   (%edx)
add    %al,(%eax)
rclb   $0x8,0x5(%ecx)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
jmp    cc048696 <optarg+0xc3ff3472>
push   %ecx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,%bl
add    (%eax),%al
add    %ah,%al
mov    (%eax,%ecx,1),%es
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fildl  (%edx)
add    %al,(%eax)
loopne 8048707 <pathconf@plt-0x769>
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %al,0x40000001(%eax)
nop
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    80486d2 <pathconf@plt-0x79e>
add    %al,(%eax)
push   %eax
nop
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
test   %al,(%edx)
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %cl,%dh
add    %al,(%eax)
add    %al,(%edx,%edx,2)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,%dl
add    %al,(%eax)
add    %ah,%al
push   %ecx
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %al,0x2(%esi)
add    %al,(%eax)
rclb   $0x8,0x5(%ecx)
add    $0x0,%al
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
add    %al,%fs:(%eax)
add    %al,(%eax)
push   %edx
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,%bh
add    %eax,(%eax)
add    %ah,(%edx,%edx,2)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    80487b7 <pathconf@plt-0x6b9>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80487c5 <pathconf@plt-0x6ab>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    80487d2 <pathconf@plt-0x69e>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jb     80487cd <pathconf@plt-0x6a3>
ja     80487db <pathconf@plt-0x695>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jo     80487ea <pathconf@plt-0x686>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x70,(%eax),%eax
popa
je     80487ed <pathconf@plt-0x683>
arpl   %bp,0x6e(%edi)
data16
add    %dh,0x65(%ebx)
je     80487fa <pathconf@plt-0x676>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     804880c <pathconf@plt-0x664>
outsl  %ds:(%esi),(%dx)
ja     80487fe <pathconf@plt-0x672>
add    %dh,0x74(%ebx)
jb     804880e <pathconf@plt-0x662>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048811 <pathconf@plt-0x65f>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048821 <pathconf@plt-0x64f>
arpl   %bp,0x72(%eax)
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x72007461,0x6b(%esi),%ebp
jo     804882e <pathconf@plt-0x642>
popa
je     8048827 <pathconf@plt-0x649>
push   $0x67636400
gs
je     8048840 <pathconf@plt-0x630>
gs
js     8048843 <pathconf@plt-0x62d>
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    804883a <pathconf@plt-0x636>
imul   $0x6f727265,%fs:0x0(%edx),%esi
jb     80487df <pathconf@plt-0x691>
pop    %edi
pop    %edi
jae    8048857 <pathconf@plt-0x619>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x69,(%eax),%eax
jae    8048871 <pathconf@plt-0x5ff>
jo     804886e <pathconf@plt-0x602>
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     804880e <pathconf@plt-0x662>
jae    8048884 <pathconf@plt-0x5ec>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     804881a <pathconf@plt-0x656>
jo     804888e <pathconf@plt-0x5e2>
outsl  %ds:(%esi),(%dx)
addr16 jb 8048881 <pathconf@plt-0x5ef>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     804889d <pathconf@plt-0x5d3>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    80488b6 <pathconf@plt-0x5ba>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048849 <pathconf@plt-0x627>
jae    80488c4 <pathconf@plt-0x5ac>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6c616300,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    80488ce <pathconf@plt-0x5a2>
jb     80488c8 <pathconf@plt-0x5a8>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     80488c8 <pathconf@plt-0x5a8>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    80488d0 <pathconf@plt-0x5a0>
je     804886d <pathconf@plt-0x603>
pop    %edi
pop    %edi
gs
jb     80488e4 <pathconf@plt-0x58c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jo     80488f4 <pathconf@plt-0x57c>
jo     804890c <pathconf@plt-0x564>
add    %bl,0x5f(%edi)
data16
jo     804890b <pathconf@plt-0x565>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     8048909 <pathconf@plt-0x567>
outsl  %ds:(%esi),(%dx)
jne    804891c <pathconf@plt-0x554>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048924 <pathconf@plt-0x54c>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsw  %fs:(%esi),(%dx)
jo     8048931 <pathconf@plt-0x53f>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     8048941 <pathconf@plt-0x52f>
je     8048918 <pathconf@plt-0x558>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    804894e <pathconf@plt-0x522>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80488ec <pathconf@plt-0x584>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     804896f <pathconf@plt-0x501>
je     804895f <pathconf@plt-0x511>
je     8048936 <pathconf@plt-0x53a>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048979 <pathconf@plt-0x4f7>
outsb  %ds:(%esi),(%dx)
jbe    8048917 <pathconf@plt-0x559>
outsl  %ds:(%esi),(%dx)
jo     804898e <pathconf@plt-0x4e2>
popa
jb     8048984 <pathconf@plt-0x4ec>
add    %bl,0x5f(%edi)
data16
jb     8048988 <pathconf@plt-0x4e8>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     80489a1 <pathconf@plt-0x4cf>
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     80489b3 <pathconf@plt-0x4bd>
jo     80489ba <pathconf@plt-0x4b6>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     80489ba <pathconf@plt-0x4b6>
ja     80489bd <pathconf@plt-0x4b3>
add    %bl,0x5f(%edi)
addr16
gs
je     80489c4 <pathconf@plt-0x4ac>
gs
insb   (%dx),%es:(%edi)
imul   $0x69727766,0x0(%ebp),%ebp
je     80489d0 <pathconf@plt-0x4a0>
add    %dh,0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
data16
jo     80489dd <pathconf@plt-0x493>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 80489ed <pathconf@plt-0x483>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048a12 <pathconf@plt-0x45e>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048a0e <pathconf@plt-0x462>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x63660034,%fs:0x36(%edx),%esi
63
outsb  %ds:(%esi),(%dx)
je     8048a26 <pathconf@plt-0x44a>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048a27 <pathconf@plt-0x449>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     8048a2e <pathconf@plt-0x442>
js     8048a3f <pathconf@plt-0x431>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x63727473,0x0(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     80489d9 <pathconf@plt-0x497>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048a59 <pathconf@plt-0x417>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %bl,%fs:0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048a5b <pathconf@plt-0x415>
jb     8048a5e <pathconf@plt-0x412>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80489fc <pathconf@plt-0x474>
data16
jo     8048a74 <pathconf@plt-0x3fc>
je     8048a74 <pathconf@plt-0x3fc>
pop    %edi
jne    8048a72 <pathconf@plt-0x3fe>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     8048a86 <pathconf@plt-0x3ea>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048a91 <pathconf@plt-0x3df>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8048a95 <pathconf@plt-0x3db>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048a99 <pathconf@plt-0x3d7>
js     8048a9f <pathconf@plt-0x3d1>
je     8048a38 <pathconf@plt-0x438>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048ab5 <pathconf@plt-0x3bb>
popa
jb     8048ab8 <pathconf@plt-0x3b8>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x6000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000000
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
pop    %es
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    $0x2000700,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000500
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
pop    %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
pop    %es
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edi)
add    %dl,(%ecx)
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x60000,(%ecx),%ecx
sbb    $0x10000003,%eax
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x50000,0xd(%ecx),%ebp
sub    %eax,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x333,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
cmp    $0x10000003,%eax
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
inc    %edi
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
cld
dec    %edi
add    $0x1d0608,%eax
add    %al,%al
push   %ecx
add    $0x470508,%eax
add    %al,%ah
push   %ecx
add    $0x480508,%eax
add    %ah,%al
push   %ecx
add    $0x4a0508,%eax
add    %al,(%eax)
push   %edx
add    $0x510508,%eax
add    %al,(%edx,%edx,2)
add    $0x4e0508,%eax
add    %ah,(%eax)
push   %edx
add    $0x460508,%eax
add    %ah,(%edx,%edx,2)
add    $0x520508,%eax
or     $0x50,%al
add    $0x10708,%eax
add    %dl,(%eax)
push   %eax
add    $0x20708,%eax
add    %dl,(%eax,%edx,2)
add    $0x30708,%eax
add    %bl,(%eax)
push   %eax
add    $0x40708,%eax
add    %bl,(%eax,%edx,2)
add    $0x50708,%eax
add    %ah,(%eax)
push   %eax
add    $0x60708,%eax
add    %ah,(%eax,%edx,2)
add    $0x70708,%eax
add    %ch,(%eax)
push   %eax
add    $0x490708,%eax
add    %ch,(%eax,%edx,2)
add    $0x80708,%eax
add    %dh,(%eax)
push   %eax
add    $0x90708,%eax
add    %dh,(%eax,%edx,2)
add    $0xa0708,%eax
add    %bh,(%eax)
push   %eax
add    $0xb0708,%eax
add    %bh,(%eax,%edx,2)
add    $0xc0708,%eax
add    %al,0x50(%eax)
add    $0xd0708,%eax
add    %al,0x5(%eax,%edx,2)
or     %al,(%edi)
push   %cs
add    %al,(%eax)
dec    %eax
push   %eax
add    $0xf0708,%eax
add    %cl,0x5(%eax,%edx,2)
or     %al,(%edi)
adc    %al,(%eax)
add    %dl,0x50(%eax)
add    $0x110708,%eax
add    %dl,0x5(%eax,%edx,2)
or     %al,(%edi)
adc    (%eax),%al
add    %bl,0x50(%eax)
add    $0x130708,%eax
add    %bl,0x5(%eax,%edx,2)
or     %al,(%edi)
adc    $0x0,%al
add    %ah,0x50(%eax)
add    $0x150708,%eax
add    %ah,0x5(%eax,%edx,2)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
push   $0x7080550
pop    %ss
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %eax
add    $0x180708,%eax
add    %dh,0x50(%eax)
add    $0x190708,%eax
add    %dh,0x5(%eax,%edx,2)
or     %al,(%edi)
sbb    (%eax),%al
add    %bh,0x50(%eax)
add    $0x1b0708,%eax
add    %bh,0x5(%eax,%edx,2)
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
adcb   $0x8,0x5(%eax)
pop    %es
dec    %ebx
add    %al,(%eax)
test   %dl,0x5(%eax)
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
mov    %dl,0x5(%eax)
or     %al,(%edi)
sbb    $0x0,%al
add    %cl,0x1d070805(%eax,%edx,2)
add    %al,(%eax)
nop
push   %eax
add    $0x1e0708,%eax
add    %dl,0x1f070805(%eax,%edx,2)
add    %al,(%eax)
cwtl
push   %eax
add    $0x200708,%eax
add    %bl,0x21070805(%eax,%edx,2)
add    %al,(%eax)
mov    0x7080550,%al
and    (%eax),%al
add    %ah,0x23070805(%eax,%edx,2)
add    %al,(%eax)
test   $0x50,%al
add    $0x240708,%eax
add    %ch,0x25070805(%eax,%edx,2)
add    %al,(%eax)
mov    $0x50,%al
add    $0x260708,%eax
add    %dh,0x27070805(%eax,%edx,2)
add    %al,(%eax)
mov    $0x7080550,%eax
sub    %al,(%eax)
add    %bh,0x29070805(%eax,%edx,2)
add    %al,(%eax)
rclb   $0x8,0x5(%eax)
pop    %es
sub    (%eax),%al
add    %al,%ah
push   %eax
add    $0x2b0708,%eax
add    %cl,%al
push   %eax
add    $0x2c0708,%eax
add    %cl,%ah
push   %eax
add    $0x2d0708,%eax
add    %dl,%al
push   %eax
add    $0x2e0708,%eax
add    %dl,%ah
push   %eax
add    $0x2f0708,%eax
add    %bl,%al
push   %eax
add    $0x300708,%eax
add    %bl,%ah
push   %eax
add    $0x310708,%eax
add    %ah,%al
push   %eax
add    $0x320708,%eax
add    %ah,%ah
push   %eax
add    $0x330708,%eax
add    %ch,%al
push   %eax
add    $0x340708,%eax
add    %ch,%ah
push   %eax
add    $0x350708,%eax
add    %dh,%al
push   %eax
add    $0x360708,%eax
add    %dh,%ah
push   %eax
add    $0x370708,%eax
add    %bh,%al
push   %eax
add    $0x380708,%eax
add    %bh,%ah
push   %eax
add    $0x390708,%eax
add    %al,(%eax)
push   %ecx
add    $0x3a0708,%eax
add    %al,(%ecx,%edx,2)
add    $0x3b0708,%eax
add    %cl,(%eax)
push   %ecx
add    $0x3c0708,%eax
add    %cl,(%ecx,%edx,2)
add    $0x3d0708,%eax
add    %dl,(%eax)
push   %ecx
add    $0x3e0708,%eax
add    %dl,(%ecx,%edx,2)
add    $0x3f0708,%eax
add    %bl,(%eax)
push   %ecx
add    $0x400708,%eax
add    %bl,(%ecx,%edx,2)
add    $0x410708,%eax
add    %ah,(%eax)
push   %ecx
add    $0x420708,%eax
add    %ah,(%ecx,%edx,2)
add    $0x430708,%eax
add    %ch,(%eax)
push   %ecx
add    $0x440708,%eax
push   %ebx
sub    $0x8,%esp
call   8049b70 <calloc@plt+0x890>
add    $0xc1bf,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048e56 <pathconf@plt-0x1a>
call   8049070 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8055004
jmp    *0x8055008
add    %al,(%eax)
jmp    *0x805500c
push   $0x0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055010
push   $0x8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055014
push   $0x10
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055018
push   $0x18
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805501c
push   $0x20
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055020
push   $0x28
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055024
push   $0x30
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055028
push   $0x38
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805502c
push   $0x40
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055030
push   $0x48
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055034
push   $0x50
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055038
push   $0x58
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805503c
push   $0x60
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055040
push   $0x68
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055044
push   $0x70
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055048
push   $0x78
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805504c
push   $0x80
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055050
push   $0x88
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055054
push   $0x90
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055058
push   $0x98
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805505c
push   $0xa0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055060
push   $0xa8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055064
push   $0xb0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055068
push   $0xb8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805506c
push   $0xc0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055070
push   $0xc8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055074
push   $0xd0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055078
push   $0xd8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805507c
push   $0xe0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055080
push   $0xe8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055084
push   $0xf0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055088
push   $0xf8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805508c
push   $0x100
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055090
push   $0x108
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055094
push   $0x110
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055098
push   $0x118
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805509c
push   $0x120
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550a0
push   $0x128
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550a4
push   $0x130
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550a8
push   $0x138
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550ac
push   $0x140
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550b0
push   $0x148
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550b4
push   $0x150
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550b8
push   $0x158
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550bc
push   $0x160
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550c0
push   $0x168
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550c4
push   $0x170
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550c8
push   $0x178
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550cc
push   $0x180
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550d0
push   $0x188
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550d4
push   $0x190
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550d8
push   $0x198
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550dc
push   $0x1a0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550e0
push   $0x1a8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550e4
push   $0x1b0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550e8
push   $0x1b8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550ec
push   $0x1c0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550f0
push   $0x1c8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550f4
push   $0x1d0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550f8
push   $0x1d8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x80550fc
push   $0x1e0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055100
push   $0x1e8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055104
push   $0x1f0
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055108
push   $0x1f8
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805510c
push   $0x200
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055110
push   $0x208
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055114
push   $0x210
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055118
push   $0x218
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x805511c
push   $0x220
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055120
push   $0x228
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055124
push   $0x230
jmp    8048e60 <pathconf@plt-0x10>
jmp    *0x8055128
push   $0x238
jmp    8048e60 <pathconf@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xa0,%esp
mov    0xc(%ebp),%esi
mov    0x8(%ebp),%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   804ce30 <calloc@plt+0x3b50>
movl   $0x80518fd,0x4(%esp)
movl   $0x6,(%esp)
call   80491d0 <setlocale@plt>
movl   $0x8050384,0x4(%esp)
movl   $0x8050376,(%esp)
call   8049250 <bindtextdomain@plt>
movl   $0x8050376,(%esp)
call   8048f70 <textdomain@plt>
movl   $0x804b760,(%esp)
call   8050220 <calloc@plt+0x6f40>
movl   $0x8050396,(%esp)
call   8049020 <getenv@plt>
movb   $0x0,0x8055230
movb   $0x0,0x8055231
movb   $0x0,0x8055233
movb   $0x0,0x8055232
movb   $0x0,0x8055236
mov    %eax,0x2c(%esp)
movb   $0x0,0x30(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x34(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8051280,0xc(%esp)
movl   $0x80503e7,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80490b0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     80495d2 <calloc@plt+0x2f2>
cmp    $0x62,%eax
je     80495b8 <calloc@plt+0x2d8>
jle    8049410 <calloc@plt+0x130>
cmp    $0x6e,%eax
je     80495ac <calloc@plt+0x2cc>
lea    0x0(%esi),%esi
jle    8049448 <calloc@plt+0x168>
cmp    $0x73,%eax
je     80495a0 <calloc@plt+0x2c0>
nop
lea    0x0(%esi,%eiz,1),%esi
jle    8049541 <calloc@plt+0x261>
cmp    $0x74,%eax
je     80494d5 <calloc@plt+0x1f5>
cmp    $0x76,%eax
jne    8049438 <calloc@plt+0x158>
movb   $0x1,0x8055231
jmp    804939c <calloc@plt+0xbc>
lea    0x0(%esi),%esi
cmp    $0x4c,%eax
je     8049556 <calloc@plt+0x276>
jle    8049470 <calloc@plt+0x190>
cmp    $0x53,%eax
xchg   %ax,%ax
je     8049562 <calloc@plt+0x282>
cmp    $0x54,%eax
je     8049522 <calloc@plt+0x242>
cmp    $0x50,%eax
je     8049581 <calloc@plt+0x2a1>
movl   $0x1,(%esp)
call   804a620 <calloc@plt+0x1340>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x66,%eax
je     804958d <calloc@plt+0x2ad>
cmp    $0x69,%eax
jne    804952c <calloc@plt+0x24c>
movb   $0x0,0x8055232
movb   $0x1,0x8055233
jmp    804939c <calloc@plt+0xbc>
lea    0x0(%esi),%esi
cmp    $0xffffff7e,%eax
je     8049575 <calloc@plt+0x295>
cmp    $0x46,%eax
je     8049535 <calloc@plt+0x255>
cmp    $0xffffff7d,%eax
jne    8049438 <calloc@plt+0x158>
mov    0x805514c,%eax
movl   $0x0,0x18(%esp)
movl   $0x80503c8,0x14(%esp)
movl   $0x80503d8,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x8055220,%eax
movl   $0x8050372,0x8(%esp)
movl   $0x80503e4,0x4(%esp)
mov    %eax,(%esp)
call   804eb20 <calloc@plt+0x5840>
movl   $0x0,(%esp)
call   8049080 <exit@plt>
cmpl   $0x0,0x3c(%esp)
je     80497af <calloc@plt+0x4cf>
movl   $0x5,0x8(%esp)
movl   $0x80511b0,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
mov    0x8055224,%eax
mov    %eax,0x3c(%esp)
jmp    804939c <calloc@plt+0xbc>
movb   $0x1,0x30(%esp)
jmp    804939c <calloc@plt+0xbc>
cmp    $0x64,%eax
jne    8049438 <calloc@plt+0x158>
movb   $0x1,0x8055230
jmp    804939c <calloc@plt+0xbc>
cmp    $0x72,%eax
jne    8049438 <calloc@plt+0x158>
movb   $0x1,0x8055235
jmp    804939c <calloc@plt+0xbc>
movb   $0x1,0x8055234
jmp    804939c <calloc@plt+0xbc>
mov    0x8055224,%eax
movb   $0x1,0x3b(%esp)
mov    %eax,0x2c(%esp)
jmp    804939c <calloc@plt+0xbc>
movl   $0x0,(%esp)
call   804a620 <calloc@plt+0x1340>
movb   $0x0,0x8055234
jmp    804939c <calloc@plt+0xbc>
movb   $0x1,0x8055232
movb   $0x0,0x8055233
jmp    804939c <calloc@plt+0xbc>
movb   $0x1,0x8055236
jmp    804939c <calloc@plt+0xbc>
movb   $0x0,0x8055148
jmp    804939c <calloc@plt+0xbc>
mov    0x8055224,%eax
movb   $0x1,0x3b(%esp)
test   %eax,%eax
cmove  0x34(%esp),%eax
mov    %eax,0x34(%esp)
jmp    804939c <calloc@plt+0xbc>
mov    %eax,%ebx
mov    0x8055200,%eax
sub    %eax,%edi
test   %edi,%edi
mov    %edi,0x28(%esp)
lea    (%esi,%eax,4),%esi
jle    8049865 <calloc@plt+0x585>
cmpb   $0x0,0x30(%esp)
jne    8049714 <calloc@plt+0x434>
cmpl   $0x0,0x3c(%esp)
je     804994f <calloc@plt+0x66f>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8049615 <calloc@plt+0x335>
mov    %eax,(%esp)
call   804ee50 <calloc@plt+0x5b70>
mov    %eax,0x8055150
xor    %eax,%eax
cmpb   $0x0,0x3b(%esp)
jne    8049834 <calloc@plt+0x554>
cmpb   $0x0,0x8055235
mov    %eax,0x8055238
je     804963d <calloc@plt+0x35d>
cmpb   $0x0,0x8055236
je     8049916 <calloc@plt+0x636>
cmpl   $0x0,0x3c(%esp)
je     8049a4d <calloc@plt+0x76d>
cmpl   $0x1,0x28(%esp)
je     80496a3 <calloc@plt+0x3c3>
cmpb   $0x0,0x8055232
je     80496a3 <calloc@plt+0x3c3>
cmpb   $0x0,0x8055236
jne    80496a3 <calloc@plt+0x3c3>
cmpl   $0x3,0x8055238
je     80496a3 <calloc@plt+0x3c3>
movl   $0x804ce10,0x10(%esp)
movl   $0x804cd70,0xc(%esp)
movl   $0x804cd00,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x3d,(%esp)
call   804c540 <calloc@plt+0x3260>
test   %eax,%eax
mov    %eax,0x805522c
je     8049b45 <calloc@plt+0x865>
lea    0x40(%esp),%eax
xor    %edi,%edi
movb   $0x1,0x3b(%esp)
mov    %eax,0x34(%esp)
mov    (%esi,%edi,4),%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    0x34(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804bc80 <calloc@plt+0x29a0>
mov    %eax,%ebx
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804bb80 <calloc@plt+0x28a0>
mov    (%esi,%edi,4),%eax
mov    %ebx,%edx
add    $0x1,%edi
call   8049c40 <calloc@plt+0x960>
mov    %ebx,(%esp)
and    %al,0x3b(%esp)
call   8048ee0 <free@plt>
cmp    %edi,0x28(%esp)
jg     80496b2 <calloc@plt+0x3d2>
xor    %eax,%eax
cmpb   $0x0,0x3b(%esp)
sete   %al
mov    %eax,(%esp)
call   8049080 <exit@plt>
cmpl   $0x0,0x3c(%esp)
je     804974f <calloc@plt+0x46f>
movl   $0x5,0x8(%esp)
movl   $0x80511d8,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
mov    0x28(%esp),%eax
cmp    $0x2,%eax
je     8049600 <calloc@plt+0x320>
sub    $0x1,%eax
je     80498f5 <calloc@plt+0x615>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x805040d,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
jmp    8049438 <calloc@plt+0x158>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8055224,%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049280 <__xstat64@plt>
test   %eax,%eax
jne    804989e <calloc@plt+0x5be>
mov    0x50(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     8049514 <calloc@plt+0x234>
mov    0x8055224,%eax
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80503ab,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
jmp    8049514 <calloc@plt+0x234>
movl   $0x5,0x8(%esp)
movl   $0x805041e,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    0x34(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804b070 <calloc@plt+0x1d90>
jmp    8049622 <calloc@plt+0x342>
movl   $0x5,0x8(%esp)
movl   $0x80503f8,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
jmp    8049438 <calloc@plt+0x158>
mov    0x8055224,%eax
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x8050288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x3c(%esp)
call   8048f40 <dcgettext@plt>
mov    %eax,%ebx
call   8049140 <__errno_location@plt>
mov    0x3c(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
jmp    80497d4 <calloc@plt+0x4f4>
mov    (%esi),%eax
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x8051214,0x4(%esp)
mov    %eax,%ebx
jmp    8049782 <calloc@plt+0x4a2>
movl   $0x5,0x8(%esp)
movl   $0x8051240,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
jmp    804963d <calloc@plt+0x35d>
mov    0x28(%esp),%eax
cmp    $0x1,%eax
je     8049ab8 <calloc@plt+0x7d8>
lea    -0x4(%esi,%eax,4),%eax
mov    %eax,0x20(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    %ebx,%ecx
mov    $0x1,%ebx
mov    %eax,%edi
mov    %eax,%edx
movzbl 0x30(%esp),%eax
repnz scas %es:(%edi),%al
not    %ecx
sub    $0x1,%ecx
je     8049995 <calloc@plt+0x6b5>
xor    %ebx,%ebx
cmpb   $0x2f,-0x1(%edx,%ecx,1)
sete   %bl
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
cmpb   $0x0,0x8055148
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
je     8049ac5 <calloc@plt+0x7e5>
call   8049280 <__xstat64@plt>
test   %eax,%eax
je     8049acf <calloc@plt+0x7ef>
call   8049140 <__errno_location@plt>
mov    (%eax),%edi
test   %edi,%edi
nop
je     8049acf <calloc@plt+0x7ef>
test   $0xfffffffd,%edi
jne    8049af4 <calloc@plt+0x814>
xor    %edx,%edx
xor    %eax,%eax
cmp    %eax,%ebx
jle    8049a34 <calloc@plt+0x754>
mov    0x24(%esp),%eax
mov    %edx,0x30(%esp)
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80503ab,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
mov    0x30(%esp),%edx
test   %dl,%dl
je     8049a60 <calloc@plt+0x780>
subl   $0x1,0x28(%esp)
mov    0x28(%esp),%eax
mov    (%esi,%eax,4),%eax
mov    %eax,0x3c(%esp)
jmp    8049600 <calloc@plt+0x320>
mov    0x4(%esi),%edx
mov    (%esi),%eax
call   8049c40 <calloc@plt+0x960>
mov    %al,0x3b(%esp)
jmp    8049702 <calloc@plt+0x422>
cmpl   $0x2,0x28(%esp)
je     8049600 <calloc@plt+0x320>
mov    0x20(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80503ab,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
jmp    8049600 <calloc@plt+0x320>
movl   $0x8051382,0x3c(%esp)
jmp    8049600 <calloc@plt+0x320>
call   8049290 <__lxstat64@plt>
jmp    80499be <calloc@plt+0x6de>
mov    0x50(%esp),%eax
xor    %edi,%edi
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    80499d6 <calloc@plt+0x6f6>
mov    $0x1,%edx
mov    $0x1,%eax
jmp    80499e6 <calloc@plt+0x706>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x8050288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x30(%esp)
call   8048f40 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
xor    %edx,%edx
xor    %eax,%eax
jmp    80499e6 <calloc@plt+0x706>
call   804ee80 <calloc@plt+0x5ba0>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8050210
push   $0x80501a0
push   %ecx
push   %esi
push   $0x80492f0
call   8049100 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80551a7,%eax
sub    $0x80551a4,%eax
cmp    $0x6,%eax
ja     8049b90 <calloc@plt+0x8b0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     8049b8f <calloc@plt+0x8af>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80551a4,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80551a4,%eax
sub    $0x80551a4,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049bc9 <calloc@plt+0x8e9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049bc8 <calloc@plt+0x8e8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80551a4,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8055228
jne    8049c0c <calloc@plt+0x92c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049b80 <calloc@plt+0x8a0>
movb   $0x1,0x8055228
leave
repz ret
xchg   %ax,%ax
mov    0x8054f10,%eax
test   %eax,%eax
je     8049c38 <calloc@plt+0x958>
mov    $0x0,%eax
test   %eax,%eax
je     8049c38 <calloc@plt+0x958>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8054f10,(%esp)
call   *%eax
leave
jmp    8049bb0 <calloc@plt+0x8d0>
nop
jmp    8049bb0 <calloc@plt+0x8d0>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0xfc,%esp
cmpb   $0x0,0x8055236
jne    8049c9d <calloc@plt+0x9bd>
cmpb   $0x0,0x8055234
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
jne    8049f58 <calloc@plt+0xc78>
call   8049290 <__lxstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
jne    8049f6a <calloc@plt+0xc8a>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804a148 <calloc@plt+0xe68>
movb   $0x0,0x28(%esp)
movzbl 0x8055232,%edi
mov    %edi,%eax
test   %al,%al
jne    8049cbc <calloc@plt+0x9dc>
cmpb   $0x0,0x8055233
je     8049f48 <calloc@plt+0xc68>
lea    0x90(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
call   8049290 <__lxstat64@plt>
test   %eax,%eax
jne    8049f28 <calloc@plt+0xc48>
mov    0x805522c,%eax
mov    %edi,%edx
mov    $0x1,%ecx
test   %eax,%eax
je     8049d13 <calloc@plt+0xa33>
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804bc30 <calloc@plt+0x2950>
movzbl 0x8055232,%edx
mov    $0x1,%ecx
test   %al,%al
jne    804a400 <calloc@plt+0x1120>
test   %dl,%dl
jne    8049d32 <calloc@plt+0xa52>
cmpb   $0x0,0x8055236
jne    8049fc0 <calloc@plt+0xce0>
mov    0x8055238,%edi
test   %edi,%edi
je     8049fc0 <calloc@plt+0xce0>
test   %cl,%cl
je     8049da2 <calloc@plt+0xac2>
mov    0x8055238,%ecx
test   %ecx,%ecx
je     804a1a8 <calloc@plt+0xec8>
cmpb   $0x0,0x8055236
jne    8049d71 <calloc@plt+0xa91>
mov    0x88(%esp),%eax
mov    0x8c(%esp),%edx
xor    0xec(%esp),%edx
xor    0xe8(%esp),%eax
or     %eax,%edx
je     804a498 <calloc@plt+0x11b8>
mov    0xa0(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     804a598 <calloc@plt+0x12b8>
cmpb   $0x0,0x8055233
jne    804a390 <calloc@plt+0x10b0>
mov    0x8055238,%eax
test   %eax,%eax
jne    804a1e0 <calloc@plt+0xf00>
movl   $0x0,0x24(%esp)
cmpb   $0x0,0x8055235
movl   $0x0,0x20(%esp)
jne    804a280 <calloc@plt+0xfa0>
cmpb   $0x0,0x8055236
jne    804a268 <calloc@plt+0xf88>
cmpb   $0x1,0x8055234
mov    %ebx,0xc(%esp)
movl   $0xffffff9c,0x8(%esp)
sbb    %eax,%eax
not    %eax
and    $0x400,%eax
mov    %eax,0x10(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   804f1c0 <calloc@plt+0x5ee0>
test   %eax,%eax
sete   %al
mov    %eax,%edi
mov    %edi,%eax
test   %al,%al
jne    804a040 <calloc@plt+0xd60>
call   8049140 <__errno_location@plt>
cmpl   $0x11,(%eax)
mov    %eax,%ebp
je     8049fd0 <calloc@plt+0xcf0>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   804e320 <calloc@plt+0x5040>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x2c(%esp)
call   804e320 <calloc@plt+0x5040>
cmpb   $0x0,0x8055236
mov    %eax,%ecx
je     804a0f0 <calloc@plt+0xe10>
cmpl   $0x24,0x0(%ebp)
je     8049e5f <calloc@plt+0xb7f>
cmpb   $0x0,(%esi)
jne    804a568 <calloc@plt+0x1288>
movl   $0x5,0x8(%esp)
movl   $0x8050540,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x28(%esp)
call   8048f40 <dcgettext@plt>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x10(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
mov    0x24(%esp),%eax
test   %eax,%eax
je     8049f00 <calloc@plt+0xc20>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80490c0 <rename@plt>
test   %eax,%eax
je     8049f00 <calloc@plt+0xc20>
mov    %ebx,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x805031a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
nop
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    %edi,%eax
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049140 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %eax,%ebp
jne    804a310 <calloc@plt+0x1030>
mov    %edi,%edx
xor    %ecx,%ecx
jmp    8049d13 <calloc@plt+0xa33>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8055238,%ebp
test   %ebp,%ebp
je     8049f38 <calloc@plt+0xc58>
jmp    8049cbc <calloc@plt+0x9dc>
nop
call   8049280 <__xstat64@plt>
test   %eax,%eax
setne  %al
test   %al,%al
je     8049c89 <calloc@plt+0x9a9>
mov    %esi,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x8050288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048f40 <dcgettext@plt>
mov    %eax,%ebx
call   8049140 <__errno_location@plt>
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
add    $0xfc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
test   %cl,%cl
jne    8049d71 <calloc@plt+0xa91>
jmp    8049da2 <calloc@plt+0xac2>
lea    0x0(%esi),%esi
cmpb   $0x0,0x8055232
jne    8049fe5 <calloc@plt+0xd05>
mov    0x24(%esp),%eax
test   %eax,%eax
je     8049e1d <calloc@plt+0xb3d>
mov    %ebx,(%esp)
call   8048f60 <unlink@plt>
test   %eax,%eax
jne    804a5b7 <calloc@plt+0x12d7>
cmpb   $0x0,0x8055236
jne    804a51a <calloc@plt+0x123a>
cmpb   $0x1,0x8055234
mov    %ebx,0xc(%esp)
movl   $0xffffff9c,0x8(%esp)
sbb    %eax,%eax
not    %eax
and    $0x400,%eax
mov    %eax,0x10(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   804f1c0 <calloc@plt+0x5ee0>
test   %eax,%eax
sete   %al
test   %al,%al
je     8049e1d <calloc@plt+0xb3d>
nop
lea    0x30(%esp),%eax
mov    $0x1,%edi
mov    %eax,0x8(%esp)
mov    0x805522c,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804bbb0 <calloc@plt+0x28d0>
cmpb   $0x0,0x8055231
je     8049f00 <calloc@plt+0xc20>
mov    0x24(%esp),%eax
test   %eax,%eax
je     804a093 <calloc@plt+0xdb3>
mov    %eax,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x80502eb,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049170 <__printf_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   804e320 <calloc@plt+0x5040>
cmpb   $0x1,0x8055236
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
sbb    %esi,%esi
and    $0x10,%esi
mov    %eax,%edi
add    $0x2d,%esi
call   804e320 <calloc@plt+0x5040>
mov    %edi,0x10(%esp)
mov    $0x1,%edi
mov    %esi,0xc(%esp)
movl   $0x80502f1,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049170 <__printf_chk@plt>
jmp    8049f00 <calloc@plt+0xc20>
xchg   %ax,%ax
mov    0x0(%ebp),%edx
cmp    $0x1f,%edx
je     804a530 <calloc@plt+0x1250>
cmp    $0x7a,%edx
nop
je     804a360 <calloc@plt+0x1080>
cmp    $0x11,%edx
je     804a360 <calloc@plt+0x1080>
and    $0xfffffffd,%edx
cmp    $0x1c,%edx
je     804a360 <calloc@plt+0x1080>
movl   $0x5,0x8(%esp)
movl   $0x8050590,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x28(%esp)
call   8048f40 <dcgettext@plt>
mov    0x28(%esp),%ecx
jmp    8049e83 <calloc@plt+0xba3>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x8055230
movb   $0x1,0x28(%esp)
jne    8049ca2 <calloc@plt+0x9c2>
mov    %esi,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80504a8,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
xor    %eax,%eax
jmp    8049f1a <calloc@plt+0xc3a>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x8055236
je     8049d4d <calloc@plt+0xa6d>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049280 <__xstat64@plt>
test   %eax,%eax
je     8049d4d <calloc@plt+0xa6d>
jmp    8049d71 <calloc@plt+0xa91>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804acf0 <calloc@plt+0x1a10>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x24(%esp)
call   80490c0 <rename@plt>
test   %eax,%eax
je     8049daa <calloc@plt+0xaca>
call   8049140 <__errno_location@plt>
mov    (%eax),%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
cmp    $0x2,%edi
je     8049da2 <calloc@plt+0xac2>
mov    %ebx,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80502c9,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049010 <error@plt>
xor    %eax,%eax
jmp    8049f1a <calloc@plt+0xc3a>
lea    0x0(%esi),%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049200 <symlink@plt>
test   %eax,%eax
sete   %al
mov    %eax,%edi
jmp    8049e03 <calloc@plt+0xb23>
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   804b0c0 <calloc@plt+0x1de0>
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%edi
call   804b0c0 <calloc@plt+0x1de0>
movl   $0x1000,(%esp)
mov    %eax,%ebp
call   804ec10 <calloc@plt+0x5930>
mov    %edi,(%esp)
mov    %eax,0x20(%esp)
call   804ba20 <calloc@plt+0x2740>
movb   $0x0,(%edi,%eax,1)
mov    0x20(%esp),%eax
movl   $0x1000,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   804aa70 <calloc@plt+0x1790>
test   %al,%al
je     804a468 <calloc@plt+0x1188>
mov    %edi,(%esp)
call   8048ee0 <free@plt>
mov    %ebp,(%esp)
call   8048ee0 <free@plt>
mov    0x20(%esp),%edx
test   %edx,%edx
je     804a484 <calloc@plt+0x11a4>
mov    0x20(%esp),%esi
jmp    8049dbf <calloc@plt+0xadf>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x8050288,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
add    $0xfc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x80502fc,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x28(%esp)
call   8048f40 <dcgettext@plt>
mov    0x28(%esp),%ecx
jmp    8049e83 <calloc@plt+0xba3>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804e340 <calloc@plt+0x5060>
mov    0x8055248,%edi
movl   $0x5,0x8(%esp)
movl   $0x80502b8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8048f40 <dcgettext@plt>
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80551c4,%eax
mov    %eax,(%esp)
call   8049240 <__fprintf_chk@plt>
call   804ef10 <calloc@plt+0x5c30>
mov    %eax,%edx
mov    $0x1,%eax
test   %dl,%dl
je     8049f1a <calloc@plt+0xc3a>
movb   $0x1,0x8055232
jmp    8049d95 <calloc@plt+0xab5>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
call   804e320 <calloc@plt+0x5040>
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   804e320 <calloc@plt+0x5040>
movl   $0x5,0x8(%esp)
movl   $0x80504d0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8049010 <error@plt>
xor    %eax,%eax
jmp    8049f1a <calloc@plt+0xc3a>
nop
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    %edi,(%esp)
call   8048ee0 <free@plt>
mov    %ebp,(%esp)
call   8048ee0 <free@plt>
mov    %esi,(%esp)
call   804ee50 <calloc@plt+0x5b70>
mov    %eax,0x20(%esp)
jmp    804a300 <calloc@plt+0x1020>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
xor    0x94(%esp),%edx
xor    0x90(%esp),%eax
or     %eax,%edx
jne    8049d71 <calloc@plt+0xa91>
cmpl   $0x1,0x44(%esp)
je     804a4d1 <calloc@plt+0x11f1>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   804e360 <calloc@plt+0x5080>
test   %al,%al
je     8049d71 <calloc@plt+0xa91>
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   804e320 <calloc@plt+0x5040>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   804e320 <calloc@plt+0x5040>
movl   $0x5,0x8(%esp)
movl   $0x805029c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %edi,0x10(%esp)
jmp    804a444 <calloc@plt+0x1164>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049200 <symlink@plt>
test   %eax,%eax
sete   %al
jmp    804a037 <calloc@plt+0xd57>
cmpb   $0x0,0x28(%esp)
jne    804a11b <calloc@plt+0xe3b>
movl   $0x5,0x8(%esp)
movl   $0x8050568,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   8048f40 <dcgettext@plt>
mov    0x28(%esp),%ecx
jmp    8049e83 <calloc@plt+0xba3>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x805051c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x28(%esp)
call   8048f40 <dcgettext@plt>
mov    0x28(%esp),%ecx
jmp    8049e83 <calloc@plt+0xba3>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80504fc,0x4(%esp)
mov    %eax,%ebx
jmp    804a174 <calloc@plt+0xe94>
mov    %ebx,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x5,0x8(%esp)
movl   $0x80502da,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048f40 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
xor    %eax,%eax
jmp    8049f1a <calloc@plt+0xc3a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8055248,%esi
mov    0x30(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     804a674 <calloc@plt+0x1394>
movl   $0x80505b4,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80551c4,%eax
mov    %eax,(%esp)
call   8049240 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049080 <exit@plt>
movl   $0x80505dc,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x80506c4,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x80508c8,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050914,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050ad4,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050ccc,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050e08,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050e38,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050e70,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x8050f50,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
movl   $0x5,0x8(%esp)
movl   $0x8051030,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x805032e,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
mov    0x8055248,%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
movl   $0x5,0x8(%esp)
movl   $0x8050331,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048f40 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x8050348,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805035e,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x80510bc,0xc(%esp)
movl   $0x8050372,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
mov    0x8055220,%esi
movl   $0x5,0x8(%esp)
movl   $0x80510e4,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   80491d0 <setlocale@plt>
test   %eax,%eax
je     804a95f <calloc@plt+0x167f>
movl   $0x3,0x8(%esp)
movl   $0x8050380,0x4(%esp)
mov    %eax,(%esp)
call   8049260 <strncmp@plt>
test   %eax,%eax
jne    804a9a3 <calloc@plt+0x16c3>
mov    0x8055248,%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
movl   $0x5,0x8(%esp)
movl   $0x805116c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048f40 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
jmp    804a66c <calloc@plt+0x138c>
mov    0x8055248,%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
movl   $0x5,0x8(%esp)
movl   $0x8051124,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048f40 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
jmp    804a95f <calloc@plt+0x167f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edx
test   %edx,%edx
mov    %edx,0xc(%esp)
je     804aa50 <calloc@plt+0x1770>
mov    %eax,(%esp)
mov    %ecx,%edi
call   80490f0 <strlen@plt>
mov    0xc(%esp),%edx
mov    %eax,%ebx
mov    $0x1,%eax
cmp    (%edi),%ebx
jb     804aa28 <calloc@plt+0x1748>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x1(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8048ef0 <memcpy@plt>
xor    %eax,%eax
add    %ebx,(%esi)
sub    %ebx,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8055220,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80490a0 <fputs_unlocked@plt>
xor    %eax,%eax
jmp    804aa1e <calloc@plt+0x173e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ebp
mov    0x40(%esp),%edi
movzbl 0x1(%ebp),%eax
cmp    $0x2f,%al
sete   %cl
cmpb   $0x2f,0x1(%edi)
sete   %dl
xor    %dl,%cl
mov    %cl,0x1f(%esp)
jne    804ab60 <calloc@plt+0x1880>
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804ac91 <calloc@plt+0x19b1>
movzbl (%edi),%edx
test   %dl,%dl
je     804aca5 <calloc@plt+0x19c5>
cmp    %dl,%bl
jne    804ac9e <calloc@plt+0x19be>
mov    %edi,%ecx
mov    $0x1,%edx
xor    %esi,%esi
jmp    804aae1 <calloc@plt+0x1801>
lea    0x0(%esi),%esi
movzbl (%ecx),%ebx
test   %bl,%bl
je     804ac38 <calloc@plt+0x1958>
add    $0x1,%edx
cmp    %bl,%al
jne    804ab00 <calloc@plt+0x1820>
mov    %eax,%ebx
movzbl 0x0(%ebp,%edx,1),%eax
cmp    $0x2f,%bl
mov    %edx,%edi
cmove  %edx,%esi
add    $0x1,%ecx
test   %al,%al
jne    804aac8 <calloc@plt+0x17e8>
movzbl (%ecx),%eax
cmp    $0x2f,%al
jne    804ac20 <calloc@plt+0x1940>
mov    %edi,%esi
lea    0x0(%esi),%esi
test   %esi,%esi
je     804ab4d <calloc@plt+0x186d>
add    %esi,%ebp
movzbl 0x0(%ebp),%eax
add    0x40(%esp),%esi
cmp    $0x2f,%al
je     804ac00 <calloc@plt+0x1920>
xor    %edx,%edx
cmpb   $0x2f,(%esi)
sete   %dl
add    %edx,%esi
test   %al,%al
jne    804ab78 <calloc@plt+0x1898>
cmpb   $0x0,(%esi)
mov    $0x8051382,%eax
lea    0x4c(%esp),%ecx
lea    0x48(%esp),%edx
cmovne %esi,%eax
call   804a9f0 <calloc@plt+0x1710>
mov    %eax,%ebx
test   %bl,%bl
jne    804ac50 <calloc@plt+0x1970>
xor    $0x1,%ebx
mov    %bl,0x1f(%esp)
movzbl 0x1f(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
movzbl 0x1f(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x48(%esp),%edx
mov    $0x8051381,%eax
lea    0x4c(%esp),%ecx
call   804a9f0 <calloc@plt+0x1710>
movzbl 0x0(%ebp),%edx
test   %dl,%dl
mov    %eax,%ebx
jne    804aba3 <calloc@plt+0x18c3>
jmp    804abc8 <calloc@plt+0x18e8>
xchg   %ax,%ax
add    $0x1,%ebp
movzbl 0x0(%ebp),%edx
test   %dl,%dl
je     804abc8 <calloc@plt+0x18e8>
cmp    $0x2f,%dl
jne    804ab98 <calloc@plt+0x18b8>
lea    0x48(%esp),%edx
mov    $0x8051380,%eax
lea    0x4c(%esp),%ecx
add    $0x1,%ebp
call   804a9f0 <calloc@plt+0x1710>
movzbl 0x0(%ebp),%edx
or     %eax,%ebx
test   %dl,%dl
jne    804aba3 <calloc@plt+0x18c3>
nop
cmpb   $0x0,(%esi)
je     804ab3e <calloc@plt+0x185e>
lea    0x4c(%esp),%ecx
mov    $0x805153e,%eax
lea    0x48(%esp),%edx
call   804a9f0 <calloc@plt+0x1710>
lea    0x4c(%esp),%ecx
lea    0x48(%esp),%edx
mov    %eax,%edi
mov    %esi,%eax
call   804a9f0 <calloc@plt+0x1710>
or     %edi,%eax
or     %eax,%ebx
jmp    804ab3e <calloc@plt+0x185e>
lea    0x0(%esi),%esi
movzbl 0x1(%ebp),%eax
xor    %edx,%edx
add    $0x1,%ebp
cmpb   $0x2f,(%esi)
sete   %dl
add    %edx,%esi
test   %al,%al
je     804ab24 <calloc@plt+0x1844>
jmp    804ab78 <calloc@plt+0x1898>
xchg   %ax,%ax
test   %al,%al
jne    804ab00 <calloc@plt+0x1820>
mov    %edi,%esi
lea    0x0(%esi),%esi
jmp    804ab00 <calloc@plt+0x1820>
lea    0x0(%esi),%esi
mov    %eax,%ebx
cmp    $0x2f,%bl
jne    804ab00 <calloc@plt+0x1820>
mov    %edi,%esi
jmp    804ab00 <calloc@plt+0x1820>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8051384,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x8051bd7,0x8(%esp)
movl   $0x24,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049010 <error@plt>
jmp    804ab46 <calloc@plt+0x1866>
mov    0x40(%esp),%ecx
xor    %esi,%esi
xor    %edi,%edi
jmp    804aaf0 <calloc@plt+0x1810>
xor    %esi,%esi
jmp    804ab00 <calloc@plt+0x1820>
xor    %esi,%esi
xor    %edi,%edi
jmp    804ac3a <calloc@plt+0x195a>
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x80551a0,%ecx
movl   $0x4,0x10(%esp)
movl   $0x8051400,0xc(%esp)
movl   $0x8051420,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804f840 <calloc@plt+0x6560>
mov    0x8051400(,%eax,4),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebx
mov    %ebx,(%esp)
call   80490f0 <strlen@plt>
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x8055150,%eax
mov    %eax,(%esp)
call   80490f0 <strlen@plt>
lea    0x1(%eax),%esi
mov    $0x9,%eax
cmp    $0x9,%esi
cmovae %esi,%eax
mov    %esi,0x2c(%esp)
lea    0x1(%edi),%esi
add    %esi,%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   8048ef0 <memcpy@plt>
cmpl   $0x1,0x64(%esp)
je     804af70 <calloc@plt+0x1c90>
mov    %ebp,(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x20(%esp)
call   804bb40 <calloc@plt+0x2860>
movzwl (%edi),%ebx
mov    %eax,0x28(%esp)
mov    $0x2e,%eax
mov    %ax,(%edi)
mov    %ebp,(%esp)
call   804b980 <calloc@plt+0x26a0>
mov    0x28(%esp),%ecx
mov    %edi,%edx
mov    %bx,(%edi)
add    %ecx,%edx
movl   $0x7e317e2e,(%edx)
mov    %eax,%esi
test   %esi,%esi
movb   $0x0,0x4(%edx)
je     804af68 <calloc@plt+0x1c88>
mov    %ecx,%eax
lea    0x4(%ecx),%edx
add    $0x2,%eax
mov    %ebp,0x1c(%esp)
movl   $0x1,0x38(%esp)
movl   $0x2,0x34(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049230 <readdir64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804af28 <calloc@plt+0x1c48>
mov    0x4(%ebx),%eax
or     (%ebx),%eax
je     804adc8 <calloc@plt+0x1ae8>
lea    0x13(%ebx),%edi
mov    %edi,(%esp)
call   80490f0 <strlen@plt>
cmp    0x14(%esp),%eax
jb     804adc8 <calloc@plt+0x1ae8>
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
sub    %ebp,%eax
add    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8048f30 <memcmp@plt>
test   %eax,%eax
jne    804adc8 <calloc@plt+0x1ae8>
mov    0x18(%esp),%eax
movzbl 0x13(%ebx,%eax,1),%eax
lea    -0x31(%eax),%edx
cmp    $0x8,%dl
ja     804adc8 <calloc@plt+0x1ae8>
mov    0x28(%esp),%edx
cmp    $0x39,%al
lea    0x15(%ebx,%edx,1),%edi
sete   %dl
movzbl 0x1(%edi),%eax
mov    $0x1,%ebx
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
ja     804ae61 <calloc@plt+0x1b81>
xchg   %ax,%ax
cmp    $0x39,%al
sete   %al
add    $0x1,%ebx
and    %eax,%edx
movzbl (%edi,%ebx,1),%eax
movsbl %al,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
jbe    804ae48 <calloc@plt+0x1b68>
cmp    $0x7e,%al
jne    804adc8 <calloc@plt+0x1ae8>
cmpb   $0x0,0x1(%edi,%ebx,1)
jne    804adc8 <calloc@plt+0x1ae8>
cmp    0x38(%esp),%ebx
jbe    804b009 <calloc@plt+0x1d29>
movzbl %dl,%eax
mov    0x24(%esp),%edx
mov    %eax,0x34(%esp)
add    %ebx,%eax
mov    %eax,0x38(%esp)
lea    0x3(%eax,%edx,1),%ecx
cmp    0x30(%esp),%ecx
jb     804aec6 <calloc@plt+0x1be6>
xor    %edx,%edx
mov    $0xffffffff,%eax
div    %ecx
cmp    $0x1,%eax
jbe    804b040 <calloc@plt+0x1d60>
lea    (%ecx,%ecx,1),%eax
mov    %eax,0x30(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    0x34(%esp),%edx
add    0x24(%esp),%eax
movb   $0x2e,(%eax)
lea    0x2(%eax,%edx,1),%edx
movb   $0x7e,0x1(%eax)
movb   $0x30,0x2(%eax)
lea    0x2(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x3c(%esp)
call   8048ef0 <memcpy@plt>
mov    0x3c(%esp),%edx
add    %ebx,%edx
lea    -0x1(%edx),%eax
movzbl -0x1(%edx),%edx
cmp    $0x39,%dl
jne    804af1e <calloc@plt+0x1c3e>
lea    0x0(%esi),%esi
movb   $0x30,(%eax)
sub    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x39,%dl
je     804af10 <calloc@plt+0x1c30>
add    $0x1,%edx
mov    %dl,(%eax)
jmp    804adc8 <calloc@plt+0x1ae8>
mov    %esi,(%esp)
call   80492b0 <closedir@plt>
mov    0x1c(%esp),%ebp
cmpl   $0x1,0x34(%esp)
jne    804af5e <calloc@plt+0x1c7e>
mov    %ebp,(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804bb40 <calloc@plt+0x2860>
cmp    $0xe,%eax
mov    %eax,%esi
ja     804af98 <calloc@plt+0x1cb8>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x2,0x34(%esp)
jne    804af54 <calloc@plt+0x1c74>
lea    0x0(%esi),%esi
cmpl   $0x2,0x64(%esp)
jne    804af3b <calloc@plt+0x1c5b>
nop
mov    0x2c(%esp),%edx
mov    0x24(%esp),%eax
mov    %edx,0x8(%esp)
mov    0x8055150,%edx
add    %ebp,%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8048ef0 <memcpy@plt>
jmp    804af3b <calloc@plt+0x1c5b>
lea    0x0(%esi),%esi
movzwl (%ebx),%ecx
mov    $0x2e,%eax
mov    %ax,(%ebx)
mov    %ecx,0x14(%esp)
call   8049140 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
movl   $0x3,0x4(%esp)
mov    %ebp,(%esp)
call   8048e70 <pathconf@plt>
mov    0x14(%esp),%ecx
test   %eax,%eax
js     804affc <calloc@plt+0x1d1c>
mov    %eax,%edx
cmp    %edx,%esi
mov    %cx,(%ebx)
jbe    804af54 <calloc@plt+0x1c74>
mov    0x24(%esp),%eax
lea    -0x1(%edx),%ecx
add    %ebp,%eax
sub    %ebx,%eax
cmp    %edx,%eax
cmovae %ecx,%eax
movb   $0x7e,(%ebx,%eax,1)
movb   $0x0,0x1(%ebx,%eax,1)
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%edi
mov    $0xff,%edx
test   %edi,%edi
jne    804afce <calloc@plt+0x1cee>
jmp    804afcc <calloc@plt+0x1cec>
jne    804adc8 <calloc@plt+0x1ae8>
mov    %edx,0x3c(%esp)
mov    0x1c(%esp),%eax
mov    0x24(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
lea    0x2(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   8048f30 <memcmp@plt>
mov    0x3c(%esp),%edx
test   %eax,%eax
jg     804adc8 <calloc@plt+0x1ae8>
jmp    804ae7e <calloc@plt+0x1b9e>
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
test   %edx,%edx
je     804b061 <calloc@plt+0x1d81>
cmpb   $0x0,(%edx)
jne    804b068 <calloc@plt+0x1d88>
mov    $0x2,%eax
ret
nop
jmp    804acb0 <calloc@plt+0x19d0>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
test   %edx,%edx
je     804b090 <calloc@plt+0x1db0>
cmpb   $0x0,(%edx)
je     804b090 <calloc@plt+0x1db0>
add    $0x1c,%esp
jmp    804acb0 <calloc@plt+0x19d0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80513a3,(%esp)
call   8049020 <getenv@plt>
test   %eax,%eax
je     804b0a5 <calloc@plt+0x1dc5>
cmpb   $0x0,(%eax)
jne    804b0b0 <calloc@plt+0x1dd0>
mov    $0x2,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    %eax,%edx
add    $0x1c,%esp
mov    $0x80513a2,%eax
jmp    804acb0 <calloc@plt+0x19d0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc4(%esp),%eax
mov    %eax,%edx
and    $0x3,%eax
shr    $0x2,%edx
mov    %edx,%ecx
and    $0x1,%ecx
mov    %cl,0x2b(%esp)
mov    %eax,%ecx
mov    %eax,0x24(%esp)
sub    $0x1,%eax
test   %eax,%ecx
jne    804b698 <calloc@plt+0x23b8>
mov    0xc0(%esp),%ebx
test   %ebx,%ebx
je     804b698 <calloc@plt+0x23b8>
mov    0xc0(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804b6b0 <calloc@plt+0x23d0>
cmp    $0x2f,%al
je     804b5b5 <calloc@plt+0x22d5>
call   804eed0 <calloc@plt+0x5bf0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x20(%esp)
je     804b720 <calloc@plt+0x2440>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80491b0 <__rawmemchr@plt>
mov    %eax,%ebx
mov    %eax,%esi
sub    %edi,%ebx
cmp    $0xfff,%ebx
mov    %eax,0x1c(%esp)
jle    804b5ea <calloc@plt+0x230a>
mov    0xc0(%esp),%edi
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x34(%esp)
movzbl (%edi),%eax
test   %al,%al
je     804b2c1 <calloc@plt+0x1fe1>
nop
cmp    $0x2f,%al
jne    804b198 <calloc@plt+0x1eb8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movzbl (%edi),%eax
cmp    $0x2f,%al
je     804b188 <calloc@plt+0x1ea8>
test   %al,%al
mov    %edi,%ebx
je     804b1af <calloc@plt+0x1ecf>
mov    %edi,%ebx
jmp    804b1a4 <calloc@plt+0x1ec4>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     804b1af <calloc@plt+0x1ecf>
add    $0x1,%ebx
movzbl (%ebx),%edx
cmp    $0x2f,%dl
jne    804b1a0 <calloc@plt+0x1ec0>
cmp    %edi,%ebx
je     804b2c1 <calloc@plt+0x1fe1>
mov    %ebx,%ebp
sub    %edi,%ebp
cmp    $0x1,%ebp
je     804b390 <calloc@plt+0x20b0>
cmp    $0x2,%ebp
je     804b3a0 <calloc@plt+0x20c0>
cmpb   $0x2f,-0x1(%esi)
mov    %esi,%eax
je     804b1db <calloc@plt+0x1efb>
add    $0x1,%eax
movb   $0x2f,(%esi)
lea    (%eax,%ebp,1),%ecx
cmp    %ecx,0x1c(%esp)
ja     804b226 <calloc@plt+0x1f46>
mov    0x20(%esp),%ecx
mov    0x1c(%esp),%esi
sub    %ecx,%eax
sub    %ecx,%esi
mov    %eax,0x2c(%esp)
mov    %esi,%eax
add    $0x1000,%eax
cmp    $0x1000,%ebp
lea    0x1(%ebp,%esi,1),%esi
cmovl  %eax,%esi
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    %eax,%ecx
add    %eax,%esi
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %esi,0x1c(%esp)
add    %ecx,%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048ef0 <memcpy@plt>
cmpl   $0x2,0x24(%esp)
sete   %dl
cmpb   $0x0,0x2b(%esp)
lea    (%eax,%ebp,1),%esi
movb   $0x0,(%esi)
jne    804b358 <calloc@plt+0x2078>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8049290 <__lxstat64@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
setne  %al
test   %al,%al
je     804b330 <calloc@plt+0x2050>
call   8049140 <__errno_location@plt>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
mov    (%eax),%edi
je     804b4a1 <calloc@plt+0x21c1>
cmp    $0x1,%ecx
je     804b478 <calloc@plt+0x2198>
movl   $0x0,0x50(%esp)
cmpb   $0x0,(%ebx)
je     804b2b4 <calloc@plt+0x1fd4>
cmpl   $0x2,0x24(%esp)
jne    804b643 <calloc@plt+0x2363>
mov    %ebx,%edi
movzbl (%edi),%eax
test   %al,%al
jne    804b180 <calloc@plt+0x1ea0>
mov    0x20(%esp),%eax
add    $0x1,%eax
cmp    %eax,%esi
ja     804b5da <calloc@plt+0x22fa>
lea    0x1(%esi),%eax
cmp    %eax,0x1c(%esp)
movb   $0x0,(%esi)
je     804b2f5 <calloc@plt+0x2015>
mov    0x20(%esp),%ecx
sub    %ecx,%esi
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    %eax,0x20(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x30(%esp),%ecx
mov    0x20(%esp),%eax
test   %ecx,%ecx
je     804b46d <calloc@plt+0x218d>
mov    %ecx,(%esp)
mov    %eax,0x1c(%esp)
call   804c710 <calloc@plt+0x3430>
mov    0x1c(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     804b3f8 <calloc@plt+0x2118>
cmp    $0x4000,%eax
jne    804b2a4 <calloc@plt+0x1fc4>
mov    %ebx,%edi
jmp    804b2b6 <calloc@plt+0x1fd6>
xchg   %ax,%ax
test   %dl,%dl
jne    804b29c <calloc@plt+0x1fbc>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8049280 <__xstat64@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
setne  %al
jmp    804b278 <calloc@plt+0x1f98>
xchg   %ax,%ax
cmp    $0x2e,%al
jne    804b1cd <calloc@plt+0x1eed>
mov    %ebx,%edi
jmp    804b2b6 <calloc@plt+0x1fd6>
nop
cmp    $0x2e,%al
jne    804b1cd <calloc@plt+0x1eed>
cmpb   $0x2e,0x1(%edi)
jne    804b1cd <calloc@plt+0x1eed>
mov    0x20(%esp),%eax
mov    %ebx,%edi
add    $0x1,%eax
cmp    %eax,%esi
jbe    804b174 <calloc@plt+0x1e94>
lea    -0x1(%esi),%eax
cmp    %eax,0x20(%esp)
jae    804b735 <calloc@plt+0x2455>
cmpb   $0x2f,-0x2(%esi)
mov    %eax,%esi
je     804b174 <calloc@plt+0x1e94>
sub    $0x1,%esi
cmp    0x20(%esp),%esi
je     804b2b4 <calloc@plt+0x1fd4>
cmpb   $0x2f,-0x1(%esi)
jne    804b3dc <calloc@plt+0x20fc>
mov    %ebx,%edi
jmp    804b2b6 <calloc@plt+0x1fd6>
xchg   %ax,%ax
mov    0x30(%esp),%ecx
test   %ecx,%ecx
je     804b652 <calloc@plt+0x2372>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804bc30 <calloc@plt+0x2950>
mov    0x2c(%esp),%edx
test   %al,%al
je     804b4cb <calloc@plt+0x21eb>
test   %dl,%dl
jne    804b2b4 <calloc@plt+0x1fd4>
mov    $0x28,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c710 <calloc@plt+0x3430>
call   8049140 <__errno_location@plt>
mov    %edi,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl (%ebx),%ecx
cmp    $0x2f,%cl
jne    804b494 <calloc@plt+0x21b4>
lea    0x1(%ebx),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movzbl -0x1(%edx),%ecx
cmp    $0x2f,%cl
je     804b488 <calloc@plt+0x21a8>
test   %cl,%cl
jne    804b4a1 <calloc@plt+0x21c1>
cmp    $0x2,%edi
je     804b2b4 <calloc@plt+0x1fd4>
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
mov    0x1c(%esp),%eax
je     804b469 <calloc@plt+0x2189>
jmp    804b458 <calloc@plt+0x2178>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804bbb0 <calloc@plt+0x28d0>
mov    0x6c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804f440 <calloc@plt+0x6160>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     804b700 <calloc@plt+0x2420>
mov    %eax,(%esp)
call   80490f0 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   80490f0 <strlen@plt>
mov    0x38(%esp),%edx
test   %edx,%edx
mov    %eax,%ecx
je     804b613 <calloc@plt+0x2333>
lea    0x1(%ebp,%ecx,1),%edx
cmp    %edx,0x38(%esp)
jb     804b6d3 <calloc@plt+0x23f3>
mov    %ebx,0x4(%esp)
mov    0x34(%esp),%ebx
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %ebx,%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   8048ed0 <memmove@plt>
mov    %ebx,(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
call   8048ef0 <memcpy@plt>
cmpb   $0x2f,(%edi)
mov    %eax,%ebx
mov    %eax,0xc0(%esp)
mov    0x20(%esp),%eax
je     804b6c8 <calloc@plt+0x23e8>
add    $0x1,%eax
cmp    %eax,%esi
jbe    804b5a6 <calloc@plt+0x22c6>
lea    -0x1(%esi),%eax
cmp    %eax,0x20(%esp)
jae    804b73c <calloc@plt+0x245c>
cmpb   $0x2f,-0x2(%esi)
mov    %eax,%esi
je     804b5a6 <calloc@plt+0x22c6>
sub    $0x1,%esi
cmp    0x20(%esp),%esi
je     804b5a6 <calloc@plt+0x22c6>
cmpb   $0x2f,-0x1(%esi)
jne    804b597 <calloc@plt+0x22b7>
mov    %edi,(%esp)
mov    %ebx,%edi
call   8048ee0 <free@plt>
jmp    804b2b6 <calloc@plt+0x1fd6>
movl   $0x1000,(%esp)
call   804ec10 <calloc@plt+0x5930>
lea    0x1000(%eax),%ecx
mov    %eax,0x20(%esp)
lea    0x1(%eax),%esi
mov    %ecx,0x1c(%esp)
movb   $0x2f,(%eax)
jmp    804b155 <calloc@plt+0x1e75>
xor    %eax,%eax
cmpb   $0x2f,-0x1(%esi)
sete   %al
sub    %eax,%esi
jmp    804b2d0 <calloc@plt+0x1ff0>
mov    0x20(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %eax,(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    %eax,0x20(%esp)
lea    (%eax,%ebx,1),%esi
add    $0x1000,%eax
mov    %eax,0x1c(%esp)
jmp    804b155 <calloc@plt+0x1e75>
lea    0x1(%ebp,%ecx,1),%eax
cmp    $0x1000,%eax
mov    %ecx,0x2c(%esp)
mov    %eax,%ecx
mov    $0x1000,%eax
cmovae %ecx,%eax
mov    %eax,(%esp)
mov    %eax,0x38(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    0x2c(%esp),%ecx
mov    %eax,0x34(%esp)
jmp    804b53a <calloc@plt+0x225a>
call   8049140 <__errno_location@plt>
mov    $0x14,%edi
jmp    804b4a1 <calloc@plt+0x21c1>
movl   $0x804ce10,0x10(%esp)
movl   $0x804cdc0,0xc(%esp)
movl   $0x804cd00,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x7,(%esp)
mov    %edx,0x2c(%esp)
call   804c540 <calloc@plt+0x3260>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,0x30(%esp)
jne    804b404 <calloc@plt+0x2124>
call   804ee80 <calloc@plt+0x5ba0>
nop
call   8049140 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049140 <__errno_location@plt>
movl   $0x2,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x1(%eax),%esi
movb   $0x2f,(%eax)
jmp    804b5a6 <calloc@plt+0x22c6>
mov    0x34(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    0x2c(%esp),%edx
mov    0x3c(%esp),%ecx
mov    %edx,0x38(%esp)
mov    %eax,0x34(%esp)
jmp    804b53a <calloc@plt+0x225a>
test   %dl,%dl
je     804b727 <calloc@plt+0x2447>
call   8049140 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    804b2b4 <calloc@plt+0x1fd4>
mov    $0xc,%edi
jmp    804b440 <calloc@plt+0x2160>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804b46d <calloc@plt+0x218d>
call   8049140 <__errno_location@plt>
mov    (%eax),%edi
xchg   %ax,%ax
jmp    804b440 <calloc@plt+0x2160>
mov    %eax,%esi
jmp    804b174 <calloc@plt+0x1e94>
mov    %eax,%esi
xchg   %ax,%ax
jmp    804b5a6 <calloc@plt+0x22c6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x805523c
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8055204,%ebx
mov    %ebx,(%esp)
call   804f100 <calloc@plt+0x5e20>
test   %eax,%eax
jne    804b800 <calloc@plt+0x2520>
mov    %ebx,(%esp)
call   804fb10 <calloc@plt+0x6830>
test   %eax,%eax
je     804b85a <calloc@plt+0x257a>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8051444,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    0x805523c,%edx
test   %edx,%edx
mov    %eax,%ebx
je     804b868 <calloc@plt+0x2588>
mov    %edx,(%esp)
call   804e110 <calloc@plt+0x4e30>
mov    %eax,%esi
call   8049140 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8051457,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
call   804b8b0 <calloc@plt+0x25d0>
mov    0x8055154,%eax
mov    %eax,(%esp)
call   8048eb0 <_exit@plt>
nop
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804f130 <calloc@plt+0x5e50>
mov    0x8055204,%ebx
test   %eax,%eax
jne    804b77b <calloc@plt+0x249b>
mov    0x8055204,%eax
mov    %eax,(%esp)
call   804f0a0 <calloc@plt+0x5dc0>
mov    %eax,%ebx
mov    0x8055204,%eax
mov    %eax,(%esp)
call   804fb10 <calloc@plt+0x6830>
test   %eax,%eax
jne    804b790 <calloc@plt+0x24b0>
test   %ebx,%ebx
jne    804b790 <calloc@plt+0x24b0>
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804b8b0 <calloc@plt+0x25d0>
lea    0x0(%esi,%eiz,1),%esi
call   8049140 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8051bd7,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
jmp    804b7ed <calloc@plt+0x250d>
mov    0x4(%esp),%eax
mov    %eax,0x8055244
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8055240
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8055220,%eax
mov    %eax,(%esp)
call   804fb10 <calloc@plt+0x6830>
test   %eax,%eax
je     804b8d9 <calloc@plt+0x25f9>
cmpb   $0x0,0x8055240
je     804b8f0 <calloc@plt+0x2610>
call   8049140 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    804b8f0 <calloc@plt+0x2610>
mov    0x80551c4,%eax
mov    %eax,(%esp)
call   804fb10 <calloc@plt+0x6830>
test   %eax,%eax
jne    804b948 <calloc@plt+0x2668>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x805145e,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8055244,%eax
test   %eax,%eax
je     804b955 <calloc@plt+0x2675>
mov    %eax,(%esp)
call   804e110 <calloc@plt+0x4e30>
mov    %eax,%esi
call   8049140 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8051457,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
mov    0x8055154,%eax
mov    %eax,(%esp)
call   8048eb0 <_exit@plt>
call   8049140 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8051bd7,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
jmp    804b948 <calloc@plt+0x2668>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80492c0 <opendir@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b9a6 <calloc@plt+0x26c6>
mov    %eax,(%esp)
call   8048ec0 <dirfd@plt>
cmp    $0x2,%eax
jbe    804b9b0 <calloc@plt+0x26d0>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   804e4d0 <calloc@plt+0x51f0>
test   %eax,%eax
js     804b9f8 <calloc@plt+0x2718>
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   8049210 <fdopendir@plt>
mov    %eax,%edi
call   8049140 <__errno_location@plt>
test   %edi,%edi
mov    0xc(%esp),%edx
mov    %eax,%esi
mov    (%eax),%ebp
je     804ba08 <calloc@plt+0x2728>
mov    %ebx,(%esp)
mov    %edi,%ebx
call   80492b0 <closedir@plt>
mov    %ebx,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049140 <__errno_location@plt>
xor    %edi,%edi
mov    %eax,%esi
mov    (%eax),%ebp
jmp    804b9db <calloc@plt+0x26fb>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   80492a0 <close@plt>
jmp    804b9db <calloc@plt+0x26fb>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   804bae0 <calloc@plt+0x2800>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    804ba68 <calloc@plt+0x2788>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     804ba5c <calloc@plt+0x277c>
jmp    804ba68 <calloc@plt+0x2788>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    804ba60 <calloc@plt+0x2780>
mov    %eax,%edx
cmp    %edx,%esi
jb     804ba50 <calloc@plt+0x2770>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    804ba60 <calloc@plt+0x2780>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804ba20 <calloc@plt+0x2740>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804bad8 <calloc@plt+0x27f8>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8048ef0 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    804bad0 <calloc@plt+0x27f0>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    804babc <calloc@plt+0x27dc>
xor    %eax,%eax
jmp    804bac2 <calloc@plt+0x27e2>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    804bafb <calloc@plt+0x281b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     804baf0 <calloc@plt+0x2810>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     804bb29 <calloc@plt+0x2849>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     804bb29 <calloc@plt+0x2849>
cmp    $0x2f,%cl
je     804bb30 <calloc@plt+0x2850>
test   %bl,%bl
je     804bb08 <calloc@plt+0x2828>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    804bb12 <calloc@plt+0x2832>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    804bb08 <calloc@plt+0x2828>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80490f0 <strlen@plt>
cmp    $0x1,%eax
jbe    804bb5f <calloc@plt+0x287f>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     804bb68 <calloc@plt+0x2888>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    804bb55 <calloc@plt+0x2875>
nop
jmp    804bb5f <calloc@plt+0x287f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804bae0 <calloc@plt+0x2800>
cmpb   $0x0,(%eax)
cmovne %eax,%ebx
mov    %ebx,(%esp)
call   804bb40 <calloc@plt+0x2860>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
movb   $0x0,(%ebx)
setne  %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
test   %esi,%esi
je     804bc20 <calloc@plt+0x2940>
movl   $0x14,(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   804ee50 <calloc@plt+0x5b70>
mov    0x5c(%edi),%edx
mov    %eax,(%ebx)
mov    0x58(%edi),%eax
mov    %edx,0x8(%ebx)
mov    0x4(%edi),%edx
mov    %eax,0x4(%ebx)
mov    (%edi),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x10(%ebx)
mov    %eax,0xc(%ebx)
call   804cb50 <calloc@plt+0x3870>
test   %eax,%eax
je     804bc28 <calloc@plt+0x2948>
cmp    %ebx,%eax
je     804bc20 <calloc@plt+0x2940>
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804ce10 <calloc@plt+0x3b30>
lea    0x0(%esi),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x38,%esp
mov    0x40(%esp),%ecx
mov    0x48(%esp),%ebx
test   %ecx,%ecx
je     804bc7a <calloc@plt+0x299a>
mov    0x44(%esp),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x1c(%esp)
mov    0x58(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0x4(%ebx),%edx
mov    %eax,0x20(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804c2f0 <calloc@plt+0x3010>
test   %eax,%eax
setne  %al
add    $0x38,%esp
pop    %ebx
ret
nop
sub    $0x1c,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804bcb0 <calloc@plt+0x29d0>
test   %eax,%eax
je     804bca7 <calloc@plt+0x29c7>
add    $0x1c,%esp
ret
call   804ee80 <calloc@plt+0x5ba0>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    %eax,(%esp)
mov    %eax,%ebx
call   804bb40 <calloc@plt+0x2860>
mov    %ebx,%ebp
sub    0x30(%esp),%ebp
add    %eax,%ebp
test   %eax,%eax
je     804bce8 <calloc@plt+0x2a08>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x34(%esp),%edi
cmpb   $0x2f,(%edi)
je     804bd70 <calloc@plt+0x2a90>
mov    %edi,(%esp)
call   80490f0 <strlen@plt>
mov    %eax,%edx
mov    %eax,0xc(%esp)
lea    0x1(%ebp,%esi,1),%eax
add    %edx,%eax
mov    %eax,(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804bd90 <calloc@plt+0x2ab0>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049180 <mempcpy@plt>
add    %eax,%esi
movb   $0x2f,(%eax)
mov    0x38(%esp),%eax
test   %eax,%eax
je     804bd4d <calloc@plt+0x2a6d>
mov    0x34(%esp),%eax
mov    %esi,%ecx
cmpb   $0x2f,(%eax)
sete   %al
movzbl %al,%eax
sub    %eax,%ecx
mov    %ecx,%eax
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049180 <mempcpy@plt>
movb   $0x0,(%eax)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    804bcf1 <calloc@plt+0x2a11>
add    $0x1,%edi
cmpb   $0x2f,(%edi)
jne    804bcf1 <calloc@plt+0x2a11>
jmp    804bd70 <calloc@plt+0x2a90>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804bd66 <calloc@plt+0x2a86>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     804be16 <calloc@plt+0x2b36>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    804be0f <calloc@plt+0x2b2f>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     804be00 <calloc@plt+0x2b20>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    804bded <calloc@plt+0x2b0d>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     804be00 <calloc@plt+0x2b20>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     804bde0 <calloc@plt+0x2b00>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    804be08 <calloc@plt+0x2b28>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    804bdb8 <calloc@plt+0x2ad8>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    804bdf6 <calloc@plt+0x2b16>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    804bdae <calloc@plt+0x2ace>
jmp    804be08 <calloc@plt+0x2b28>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ebx)
cmp    0x8(%ebx),%eax
jae    804be72 <calloc@plt+0x2b92>
mov    (%ebx),%edx
add    $0x18,%esp
pop    %ebx
lea    (%edx,%eax,8),%eax
ret
call   8049270 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
call   804be50 <calloc@plt+0x2b70>
mov    0xc(%esp),%ecx
mov    %eax,%ebx
mov    %eax,(%ecx)
mov    (%eax),%eax
test   %eax,%eax
je     804bf06 <calloc@plt+0x2c26>
cmp    %eax,%edi
je     804beba <calloc@plt+0x2bda>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     804beff <calloc@plt+0x2c1f>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     804bee0 <calloc@plt+0x2c00>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     804bf38 <calloc@plt+0x2c58>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edx),%eax
cmp    %edi,%eax
je     804bf15 <calloc@plt+0x2c35>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    804bf10 <calloc@plt+0x2c30>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    804bee8 <calloc@plt+0x2c08>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     804bee0 <calloc@plt+0x2c00>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    804bee0 <calloc@plt+0x2c00>
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x80514d8,%edx
je     804bfe8 <calloc@plt+0x2d08>
flds   0x8(%edx)
flds   0x80514ec
fxch   %st(1)
fucomi %st(1),%st
jbe    804bfa8 <calloc@plt+0x2cc8>
flds   0x80514f0
fucomip %st(1),%st
jbe    804bfb0 <calloc@plt+0x2cd0>
flds   0xc(%edx)
flds   0x80514f4
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804bfb8 <calloc@plt+0x2cd8>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     804bfc0 <calloc@plt+0x2ce0>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    804bfc8 <calloc@plt+0x2ce8>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     804bfd0 <calloc@plt+0x2cf0>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    804bfd8 <calloc@plt+0x2cf8>
jmp    804bfed <calloc@plt+0x2d0d>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    804bfd8 <calloc@plt+0x2cf8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    804bfd8 <calloc@plt+0x2cf8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    804bfd8 <calloc@plt+0x2cf8>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    804bfd8 <calloc@plt+0x2cf8>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    804bfd8 <calloc@plt+0x2cf8>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80514d8,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
cmp    0x4(%edx),%edi
mov    %edx,0x4(%esp)
mov    %cl,0xb(%esp)
jae    804c074 <calloc@plt+0x2d94>
mov    (%edi),%ebx
test   %ebx,%ebx
je     804c068 <calloc@plt+0x2d88>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
jne    804c027 <calloc@plt+0x2d47>
jmp    804c05a <calloc@plt+0x2d7a>
nop
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebp)
mov    %ebp,0x4(%eax)
je     804c058 <calloc@plt+0x2d78>
mov    %edx,%ebp
mov    0x0(%ebp),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804be50 <calloc@plt+0x2b70>
mov    0x4(%ebp),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
jne    804c018 <calloc@plt+0x2d38>
mov    %ebx,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,0x0(%ebp)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebp)
mov    %ebp,0x24(%esi)
jne    804c025 <calloc@plt+0x2d45>
xchg   %ax,%ax
mov    (%edi),%ebx
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     804c088 <calloc@plt+0x2da8>
mov    0x4(%esp),%eax
add    $0x8,%edi
cmp    %edi,0x4(%eax)
ja     804c008 <calloc@plt+0x2d28>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %esi,%eax
call   804be50 <calloc@plt+0x2b70>
mov    %eax,%edx
mov    (%eax),%eax
test   %eax,%eax
je     804c0d2 <calloc@plt+0x2df2>
mov    0x24(%esi),%eax
test   %eax,%eax
je     804c0da <calloc@plt+0x2dfa>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    0x4(%edx),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%esp),%eax
cmp    %edi,0x4(%eax)
ja     804c008 <calloc@plt+0x2d28>
jmp    804c074 <calloc@plt+0x2d94>
mov    %ebx,(%edx)
addl   $0x1,0xc(%esi)
jmp    804c0b1 <calloc@plt+0x2dd1>
movl   $0x8,(%esp)
mov    %edx,0xc(%esp)
call   8049040 <malloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    804c0a6 <calloc@plt+0x2dc6>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    804c176 <calloc@plt+0x2e96>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     804c16f <calloc@plt+0x2e8f>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     804c16a <calloc@plt+0x2e8a>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    804c160 <calloc@plt+0x2e80>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     804c148 <calloc@plt+0x2e68>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    804c1c1 <calloc@plt+0x2ee1>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     804c1ba <calloc@plt+0x2eda>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     804c1ba <calloc@plt+0x2eda>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    804c1b0 <calloc@plt+0x2ed0>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     804c198 <calloc@plt+0x2eb8>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     804c1cc <calloc@plt+0x2eec>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    804c23e <calloc@plt+0x2f5e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     804c237 <calloc@plt+0x2f57>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     804c232 <calloc@plt+0x2f52>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    804c228 <calloc@plt+0x2f48>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     804c210 <calloc@plt+0x2f30>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x805146a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8049240 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x8051482,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049240 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x80514b4,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x80514f8
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   8049240 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x805149a,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049240 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   804be50 <calloc@plt+0x2b70>
mov    (%eax),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    804c31a <calloc@plt+0x303a>
jmp    804c333 <calloc@plt+0x3053>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
cmp    %ecx,%esi
je     804c342 <calloc@plt+0x3062>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    804c340 <calloc@plt+0x3060>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    804c318 <calloc@plt+0x3038>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
add    $0x10,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     804c381 <calloc@plt+0x30a1>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     804c377 <calloc@plt+0x3097>
jmp    804c387 <calloc@plt+0x30a7>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    804c387 <calloc@plt+0x30a7>
mov    (%edx),%eax
test   %eax,%eax
je     804c370 <calloc@plt+0x3090>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   8049270 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   804be50 <calloc@plt+0x2b70>
mov    %eax,%ebx
mov    %eax,%ecx
jmp    804c3b7 <calloc@plt+0x30d7>
lea    0x0(%esi),%esi
mov    0x4(%ecx),%ecx
test   %ecx,%ecx
je     804c3c2 <calloc@plt+0x30e2>
cmp    %esi,(%ecx)
jne    804c3b0 <calloc@plt+0x30d0>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    804c3db <calloc@plt+0x30fb>
mov    0x4(%edi),%edx
jmp    804c3ce <calloc@plt+0x30ee>
nop
mov    (%ebx),%eax
test   %eax,%eax
jne    804c3d7 <calloc@plt+0x30f7>
add    $0x8,%ebx
cmp    %edx,%ebx
jb     804c3c8 <calloc@plt+0x30e8>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
pop    %ebx
mov    (%eax),%eax
pop    %esi
pop    %edi
ret
jmp    804c3f0 <calloc@plt+0x3110>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    804c448 <calloc@plt+0x3168>
mov    (%edi),%edx
test   %edx,%edx
je     804c43c <calloc@plt+0x315c>
cmp    %eax,%ebx
jbe    804c448 <calloc@plt+0x3168>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     804c43c <calloc@plt+0x315c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     804c448 <calloc@plt+0x3168>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    804c428 <calloc@plt+0x3148>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     804c40a <calloc@plt+0x312a>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    804c4b8 <calloc@plt+0x31d8>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    804c48b <calloc@plt+0x31ab>
jmp    804c4a2 <calloc@plt+0x31c2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     804c4b8 <calloc@plt+0x31d8>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    804c488 <calloc@plt+0x31a8>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     804c474 <calloc@plt+0x3194>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     804c502 <calloc@plt+0x3222>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    804c4e8 <calloc@plt+0x3208>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x804be30,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x804be40,%eax
cmove  %eax,%esi
call   8049040 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804c678 <calloc@plt+0x3398>
test   %ebx,%ebx
mov    $0x80514d8,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   804bf40 <calloc@plt+0x2c60>
test   %al,%al
je     804c661 <calloc@plt+0x3381>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    804c5f0 <calloc@plt+0x3310>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x80514fc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804c658 <calloc@plt+0x3378>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x40(%esp)
jmp    804c5f2 <calloc@plt+0x3312>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   804bda0 <calloc@plt+0x2ac0>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     804c65a <calloc@plt+0x337a>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     804c661 <calloc@plt+0x3381>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   80492e0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     804c661 <calloc@plt+0x3381>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   8048ee0 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804c64c <calloc@plt+0x336c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    804c6f6 <calloc@plt+0x3416>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     804c6ee <calloc@plt+0x340e>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    804c6b2 <calloc@plt+0x33d2>
jmp    804c6d6 <calloc@plt+0x33f6>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     804c6c0 <calloc@plt+0x33e0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    804c6b0 <calloc@plt+0x33d0>
test   %edx,%edx
je     804c6e1 <calloc@plt+0x3401>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     804c698 <calloc@plt+0x33b8>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     804c728 <calloc@plt+0x3448>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    804c79a <calloc@plt+0x34ba>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    804c761 <calloc@plt+0x3481>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    804c74a <calloc@plt+0x346a>
jmp    804c759 <calloc@plt+0x3479>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8048ee0 <free@plt>
test   %ebx,%ebx
jne    804c748 <calloc@plt+0x3468>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     804c738 <calloc@plt+0x3458>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    804c772 <calloc@plt+0x3492>
jmp    804c781 <calloc@plt+0x34a1>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8048ee0 <free@plt>
test   %ebx,%ebx
jne    804c770 <calloc@plt+0x3490>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048ee0 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    804c761 <calloc@plt+0x3481>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    804c7ba <calloc@plt+0x34da>
jmp    804c7c7 <calloc@plt+0x34e7>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    804c7b8 <calloc@plt+0x34d8>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     804c7a8 <calloc@plt+0x34c8>
jmp    804c72b <calloc@plt+0x344b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    804c840 <calloc@plt+0x3560>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x80514fc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804c920 <calloc@plt+0x3640>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,%eax
jmp    804c842 <calloc@plt+0x3562>
fstp   %st(0)
call   804bda0 <calloc@plt+0x2ac0>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     804c922 <calloc@plt+0x3642>
cmp    %ebx,0x8(%esi)
je     804c910 <calloc@plt+0x3630>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   80492e0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804c922 <calloc@plt+0x3642>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   804bff0 <calloc@plt+0x2d10>
test   %al,%al
mov    %eax,%ebx
jne    804c930 <calloc@plt+0x3650>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   804bff0 <calloc@plt+0x2d10>
test   %al,%al
je     804c965 <calloc@plt+0x3685>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   804bff0 <calloc@plt+0x2d10>
test   %al,%al
je     804c965 <calloc@plt+0x3685>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049270 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebx
test   %edi,%edi
je     804caf8 <calloc@plt+0x3818>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   804be80 <calloc@plt+0x2ba0>
test   %eax,%eax
je     804c9b8 <calloc@plt+0x36d8>
test   %ebx,%ebx
je     804ca38 <calloc@plt+0x3758>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804c9f8 <calloc@plt+0x3718>
jmp    804ca48 <calloc@plt+0x3768>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     804cb00 <calloc@plt+0x3820>
mov    0x24(%esi),%eax
test   %eax,%eax
je     804cb14 <calloc@plt+0x3834>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esi),%eax
call   804bf40 <calloc@plt+0x2c60>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804c9f0 <calloc@plt+0x3710>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    804ca98 <calloc@plt+0x37b8>
fmulp  %st,%st(1)
jmp    804ca9a <calloc@plt+0x37ba>
lea    0x0(%esi),%esi
fstp   %st(1)
flds   0x80514fc
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804cb2a <calloc@plt+0x384a>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   804c7e0 <calloc@plt+0x3500>
test   %al,%al
je     804cb2c <calloc@plt+0x384c>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   804be80 <calloc@plt+0x2ba0>
test   %eax,%eax
je     804c9f8 <calloc@plt+0x3718>
call   8049270 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    804c9ae <calloc@plt+0x36ce>
movl   $0x8,(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
jne    804ca17 <calloc@plt+0x3737>
jmp    804cb2c <calloc@plt+0x384c>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    804c9ae <calloc@plt+0x36ce>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804c970 <calloc@plt+0x3690>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804c970 <calloc@plt+0x3690>
cmp    $0xffffffff,%eax
je     804cb88 <calloc@plt+0x38a8>
test   %eax,%eax
mov    %ebx,%eax
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804cb7e <calloc@plt+0x389e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   804be80 <calloc@plt+0x2ba0>
test   %eax,%eax
mov    %eax,%edi
je     804ccc8 <calloc@plt+0x39e8>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    804cbd8 <calloc@plt+0x38f8>
jmp    804cbe8 <calloc@plt+0x3908>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    804cbd8 <calloc@plt+0x38f8>
lea    0x14(%esi),%eax
call   804bf40 <calloc@plt+0x2c60>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    804cbd0 <calloc@plt+0x38f0>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     804ccd0 <calloc@plt+0x39f0>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   804c7e0 <calloc@plt+0x3500>
test   %al,%al
jne    804cbd8 <calloc@plt+0x38f8>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    804ccaa <calloc@plt+0x39ca>
lea    0x0(%esi,%eiz,1),%esi
jmp    804ccb9 <calloc@plt+0x39d9>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8048ee0 <free@plt>
test   %ebx,%ebx
jne    804cca8 <calloc@plt+0x39c8>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    804cbd8 <calloc@plt+0x38f8>
nop
xor    %ebp,%ebp
jmp    804cbd8 <calloc@plt+0x38f8>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    804cc7f <calloc@plt+0x399f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804fbb0 <calloc@plt+0x68d0>
mov    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050040 <calloc@plt+0x6d60>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8050040 <calloc@plt+0x6d60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
mov    0x8(%esp),%ecx
mov    0xc(%esp),%ebx
mov    0x4(%ecx),%eax
mov    0x8(%ecx),%edx
xor    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
or     %eax,%edx
je     804cd90 <calloc@plt+0x3ab0>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%edx
xor    0x10(%ebx),%edx
xor    0xc(%ebx),%eax
or     %eax,%edx
jne    804cd89 <calloc@plt+0x3aa9>
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
mov    (%ecx),%eax
mov    %eax,0x8(%esp)
pop    %ebx
jmp    804e360 <calloc@plt+0x5080>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%ecx
xor    0x8(%esi),%ecx
xor    0x4(%esi),%edx
or     %edx,%ecx
je     804cde8 <calloc@plt+0x3b08>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x10(%ebx),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
jne    804cddf <calloc@plt+0x3aff>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8048e80 <strcmp@plt>
test   %eax,%eax
sete   %al
jmp    804cddf <calloc@plt+0x3aff>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048ee0 <free@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804ceb3 <calloc@plt+0x3bd3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   80491e0 <strrchr@plt>
test   %eax,%eax
je     804ce9f <calloc@plt+0x3bbf>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804ce9f <calloc@plt+0x3bbf>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x8051538,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804ce9f <calloc@plt+0x3bbf>
mov    $0x3,%ecx
mov    $0x8051540,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804ce9f <calloc@plt+0x3bbf>
lea    0x4(%eax),%ebx
mov    %ebx,0x80551c0
mov    %ebx,0x8055248
mov    %ebx,0x80551e0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80551c4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8051500,(%esp)
mov    %eax,0xc(%esp)
call   8048fb0 <fwrite@plt>
call   8049270 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     804cf01 <calloc@plt+0x3c21>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8049270 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     804cf40 <calloc@plt+0x3c60>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804fbe0 <calloc@plt+0x6900>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    804cfa8 <calloc@plt+0x3cc8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    804cf90 <calloc@plt+0x3cb0>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x2d,0x3(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x38,0x4(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x0,0x5(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x60,(%esi)
mov    $0x8051553,%eax
mov    $0x8051544,%edx
cmovne %edx,%eax
jmp    804cf38 <calloc@plt+0x3c58>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x805154d,%eax
cmp    $0x7,%edi
mov    $0x805154b,%edx
cmovne %edx,%eax
jmp    804cf38 <calloc@plt+0x3c58>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    804cf90 <calloc@plt+0x3cb0>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x31,0x2(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x38,0x3(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x30,0x4(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x33,0x5(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x30,0x6(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x0,0x7(%eax)
jne    804cf90 <calloc@plt+0x3cb0>
cmpb   $0x60,(%esi)
mov    $0x805154f,%eax
mov    $0x8051548,%edx
cmovne %edx,%eax
jmp    804cf38 <calloc@plt+0x3c58>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8048fc0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804d8d8 <calloc@plt+0x45f8>
mov    0x94(%esp),%eax
jmp    *0x80515a0(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804d6e0 <calloc@plt+0x4400>
test   %al,%al
je     804d6f3 <calloc@plt+0x4413>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804d6c8 <calloc@plt+0x43e8>
cmpb   $0x0,0x58(%esp)
je     804d6c8 <calloc@plt+0x43e8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804d6c8 <calloc@plt+0x43e8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8048f30 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804d760 <calloc@plt+0x4480>
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804d478 <calloc@plt+0x4198>
movzbl %bl,%eax
jmp    *0x80515c4(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     804d2b8 <calloc@plt+0x3fd8>
cmpl   $0x3,0x94(%esp)
jne    804d218 <calloc@plt+0x3f38>
testb  $0x4,0x98(%esp)
je     804d218 <calloc@plt+0x3f38>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    804d218 <calloc@plt+0x3f38>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    804d218 <calloc@plt+0x3f38>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     804d218 <calloc@plt+0x3f38>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     804d218 <calloc@plt+0x3f38>
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
cmp    %edi,%ebp
jae    804d1de <calloc@plt+0x3efe>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804d1ee <calloc@plt+0x3f0e>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804d1fe <calloc@plt+0x3f1e>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    804d20e <calloc@plt+0x3f2e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     804d226 <calloc@plt+0x3f46>
cmpb   $0x0,0x5a(%esp)
jne    804d24b <calloc@plt+0x3f6b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     804d24b <calloc@plt+0x3f6b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    804d252 <calloc@plt+0x3f72>
cmpb   $0x0,0x24(%esp)
je     804d268 <calloc@plt+0x3f88>
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
cmp    %edi,%ebp
jae    804d265 <calloc@plt+0x3f85>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    804d276 <calloc@plt+0x3f96>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    804d0b8 <calloc@plt+0x3dd8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804d8c8 <calloc@plt+0x45e8>
test   %al,%al
jne    804d218 <calloc@plt+0x3f38>
test   %esi,%esi
jne    804d218 <calloc@plt+0x3f38>
cmpl   $0x2,0x94(%esp)
jne    804d218 <calloc@plt+0x3f38>
nop
cmpb   $0x0,0x2f(%esp)
je     804d218 <calloc@plt+0x3f38>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804d000 <calloc@plt+0x3d20>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804d9f2 <calloc@plt+0x4712>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804d93b <calloc@plt+0x465b>
cmpb   $0x0,0x58(%esp)
je     804d218 <calloc@plt+0x3f38>
mov    %eax,%ebx
jmp    804d252 <calloc@plt+0x3f72>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    804d343 <calloc@plt+0x4063>
nop
mov    $0x66,%eax
jmp    804d343 <calloc@plt+0x4063>
nop
mov    $0x76,%eax
jmp    804d343 <calloc@plt+0x4063>
nop
mov    $0x6e,%eax
jmp    804d335 <calloc@plt+0x4055>
nop
mov    $0x74,%eax
jmp    804d335 <calloc@plt+0x4055>
nop
cmpb   $0x0,0x58(%esp)
je     804d8b0 <calloc@plt+0x45d0>
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
cmp    %edi,%ebp
jae    804d3a2 <calloc@plt+0x40c2>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    804d3e8 <calloc@plt+0x4108>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804d3e8 <calloc@plt+0x4108>
cmp    %eax,%edi
ja     804d950 <calloc@plt+0x4670>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804d3de <calloc@plt+0x40fe>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    804d226 <calloc@plt+0x3f46>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    804d343 <calloc@plt+0x4063>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804d41e <calloc@plt+0x413e>
cmpb   $0x0,0x2f(%esp)
je     804d41e <calloc@plt+0x413e>
test   %dl,%dl
jne    804d268 <calloc@plt+0x3f88>
mov    %ebx,%eax
jmp    804d335 <calloc@plt+0x4055>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    804d218 <calloc@plt+0x3f38>
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
cmp    %edi,%ebp
jae    804d44d <calloc@plt+0x416d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804d45d <calloc@plt+0x417d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804d46d <calloc@plt+0x418d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    804d218 <calloc@plt+0x3f38>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804d770 <calloc@plt+0x4490>
call   80492d0 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     804d218 <calloc@plt+0x3f38>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804d524 <calloc@plt+0x4244>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
cmp    %edi,%ebp
jae    804d4d3 <calloc@plt+0x41f3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804d4e6 <calloc@plt+0x4206>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804d4fc <calloc@plt+0x421c>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    804d26b <calloc@plt+0x3f8b>
cmp    %edi,%ebp
jae    804d519 <calloc@plt+0x4239>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804d4c0 <calloc@plt+0x41e0>
cmpb   $0x0,0x24(%esp)
je     804d505 <calloc@plt+0x4225>
cmp    %edi,%ebp
jae    804d537 <calloc@plt+0x4257>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804d505 <calloc@plt+0x4225>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804d9f7 <calloc@plt+0x4717>
test   %edi,%edi
je     804d8fd <calloc@plt+0x461d>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805154d,0x3c(%esp)
movb   $0x22,(%eax)
jmp    804d098 <calloc@plt+0x3db8>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805154d,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    804d098 <calloc@plt+0x3db8>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    804d098 <calloc@plt+0x3db8>
lea    0x0(%esi,%eiz,1),%esi
je     804d60c <calloc@plt+0x432c>
mov    0x94(%esp),%edx
mov    $0x8051557,%eax
call   804cf10 <calloc@plt+0x3c30>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x805154b,%eax
call   804cf10 <calloc@plt+0x3c30>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804d63a <calloc@plt+0x435a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804d63a <calloc@plt+0x435a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804d62f <calloc@plt+0x434f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804d628 <calloc@plt+0x4348>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   80490f0 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    804d098 <calloc@plt+0x3db8>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805154b,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    804d098 <calloc@plt+0x3db8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804da13 <calloc@plt+0x4733>
test   %edi,%edi
je     804d91c <calloc@plt+0x463c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x805154b,0x3c(%esp)
movb   $0x27,(%eax)
jmp    804d098 <calloc@plt+0x3db8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    804d150 <calloc@plt+0x3e70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    804d0d8 <calloc@plt+0x3df8>
test   %ebp,%ebp
jne    804d70c <calloc@plt+0x442c>
cmpl   $0x2,0x94(%esp)
jne    804d70c <calloc@plt+0x442c>
cmpb   $0x0,0x2f(%esp)
jne    804d2c8 <calloc@plt+0x3fe8>
cmpb   $0x0,0x2f(%esp)
jne    804d742 <calloc@plt+0x4462>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804d742 <calloc@plt+0x4462>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804d742 <calloc@plt+0x4462>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804d737 <calloc@plt+0x4457>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804d730 <calloc@plt+0x4450>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    804d312 <calloc@plt+0x4032>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    804d312 <calloc@plt+0x4032>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    804d150 <calloc@plt+0x3e70>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804d8dd <calloc@plt+0x45fd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048ff0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804d95d <calloc@plt+0x467d>
cmp    $0xffffffff,%eax
je     804d978 <calloc@plt+0x4698>
cmp    $0xfffffffe,%eax
je     804d993 <calloc@plt+0x46b3>
cmpb   $0x0,0x2f(%esp)
je     804d83f <calloc@plt+0x455f>
cmpl   $0x2,0x94(%esp)
jne    804d83f <calloc@plt+0x455f>
cmp    $0x1,%eax
je     804d83f <calloc@plt+0x455f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804d838 <calloc@plt+0x4558>
movzbl %al,%eax
jmp    *0x80517c0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804d820 <calloc@plt+0x4540>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048fa0 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048f00 <mbsinit@plt>
test   %eax,%eax
je     804d7b1 <calloc@plt+0x44d1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804d4a3 <calloc@plt+0x41c3>
and    0x58(%esp),%dl
jmp    804d4ad <calloc@plt+0x41cd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    804d2c8 <calloc@plt+0x3fe8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     804d218 <calloc@plt+0x3f38>
add    $0x1,%esi
jmp    804d0b8 <calloc@plt+0x3dd8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    804d299 <calloc@plt+0x3fb9>
call   8049270 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   80490f0 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804d78e <calloc@plt+0x44ae>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805154d,0x3c(%esp)
jmp    804d098 <calloc@plt+0x3db8>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805154b,0x3c(%esp)
jmp    804d098 <calloc@plt+0x3db8>
cmpb   $0x0,0x2f(%esp)
je     804d343 <calloc@plt+0x4063>
jmp    804d2c8 <calloc@plt+0x3fe8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    804d3ce <calloc@plt+0x40ee>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804d885 <calloc@plt+0x45a5>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804d885 <calloc@plt+0x45a5>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804d9e8 <calloc@plt+0x4708>
cmpb   $0x0,(%eax)
je     804d9e8 <calloc@plt+0x4708>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804d9d6 <calloc@plt+0x46f6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804d9e0 <calloc@plt+0x4700>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804d9d0 <calloc@plt+0x46f0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804d885 <calloc@plt+0x45a5>
call   8048f50 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805154d,0x3c(%esp)
jmp    804d098 <calloc@plt+0x3db8>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x805154b,0x3c(%esp)
jmp    804d098 <calloc@plt+0x3db8>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8049140 <__errno_location@plt>
test   %edi,%edi
mov    0x8055190,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804dbbc <calloc@plt+0x48dc>
cmp    0x805519c,%edi
jb     804dac8 <calloc@plt+0x47e8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804dbc1 <calloc@plt+0x48e1>
cmp    $0x8055194,%esi
lea    0x0(,%ebp,8),%eax
je     804db90 <calloc@plt+0x48b0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    %eax,%esi
mov    %eax,0x8055190
mov    0x805519c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049120 <memset@plt>
mov    %ebp,0x805519c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804d000 <calloc@plt+0x3d20>
cmp    %eax,%ebp
ja     804db77 <calloc@plt+0x4897>
lea    0x1(%eax),%ebp
cmp    $0x8055260,%esi
mov    %ebp,(%edi)
je     804db32 <calloc@plt+0x4852>
mov    %esi,(%esp)
call   8048ee0 <free@plt>
mov    %ebp,(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804d000 <calloc@plt+0x3d20>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804ec80 <calloc@plt+0x59a0>
mov    0x8055198,%edx
mov    %eax,%esi
mov    %eax,0x8055190
mov    0x8055194,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804da9f <calloc@plt+0x47bf>
call   8049270 <abort@plt>
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049140 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8055360,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804ee20 <calloc@plt+0x5b40>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8055360,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804dc30 <calloc@plt+0x4950>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8055360,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8055360,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8055360,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8055360,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804dce3 <calloc@plt+0x4a03>
test   %ecx,%ecx
je     804dce3 <calloc@plt+0x4a03>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049270 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8055360,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049140 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804d000 <calloc@plt+0x3d20>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8055360,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049140 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   804d000 <calloc@plt+0x3d20>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   804d000 <calloc@plt+0x3d20>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804de18 <calloc@plt+0x4b38>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804dd50 <calloc@plt+0x4a70>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805519c,%edi
mov    0x8055190,%esi
cmp    $0x1,%edi
jbe    804de93 <calloc@plt+0x4bb3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048ee0 <free@plt>
cmp    %edi,%ebx
jne    804de80 <calloc@plt+0x4ba0>
mov    0x4(%esi),%eax
cmp    $0x8055260,%eax
je     804deb9 <calloc@plt+0x4bd9>
mov    %eax,(%esp)
call   8048ee0 <free@plt>
movl   $0x100,0x8055194
00
movl   $0x8055260,0x8055198
08
cmp    $0x8055194,%esi
je     804ded3 <calloc@plt+0x4bf3>
mov    %esi,(%esp)
call   8048ee0 <free@plt>
movl   $0x8055194,0x8055190
08
movl   $0x1,0x805519c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8055360,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8055360,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8055360,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8055360,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804cee0 <calloc@plt+0x3c00>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804da30 <calloc@plt+0x4750>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804cee0 <calloc@plt+0x3c00>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804da30 <calloc@plt+0x4750>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804df70 <calloc@plt+0x4c90>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804dfa0 <calloc@plt+0x4cc0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x8055360,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x8055364,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x8055368,%eax
mov    %eax,0x18(%esp)
mov    0x805536c,%eax
mov    %eax,0x1c(%esp)
mov    0x8055370,%eax
mov    %eax,0x20(%esp)
mov    0x8055374,%eax
mov    %eax,0x24(%esp)
mov    0x8055378,%eax
mov    %eax,0x28(%esp)
mov    0x805537c,%eax
mov    %eax,0x2c(%esp)
mov    0x8055380,%eax
mov    %eax,0x30(%esp)
mov    0x8055384,%eax
mov    %eax,0x34(%esp)
mov    0x8055388,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805538c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804da30 <calloc@plt+0x4750>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804e030 <calloc@plt+0x4d50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804e030 <calloc@plt+0x4d50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804e030 <calloc@plt+0x4d50>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x8055360,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x8055364,%eax
mov    %eax,0x14(%esp)
mov    0x8055368,%eax
mov    %eax,0x18(%esp)
mov    0x805536c,%eax
mov    %eax,0x1c(%esp)
mov    0x8055370,%eax
mov    %eax,0x20(%esp)
mov    0x8055374,%eax
mov    %eax,0x24(%esp)
mov    0x8055378,%eax
mov    %eax,0x28(%esp)
mov    0x805537c,%eax
mov    %eax,0x2c(%esp)
mov    0x8055380,%eax
mov    %eax,0x30(%esp)
mov    0x8055384,%eax
mov    %eax,0x34(%esp)
mov    0x8055388,%eax
mov    %eax,0x38(%esp)
mov    0x805538c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804dcb0 <calloc@plt+0x49d0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804da30 <calloc@plt+0x4750>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804e170 <calloc@plt+0x4e90>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804e170 <calloc@plt+0x4e90>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804e170 <calloc@plt+0x4e90>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8055160,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8055160,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8055160,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8055160,0x4(%esp)
jmp    804da30 <calloc@plt+0x4750>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   804bae0 <calloc@plt+0x2800>
mov    %ebx,(%esp)
mov    %eax,%esi
call   804bb40 <calloc@plt+0x2860>
mov    %esi,(%esp)
mov    %eax,%ebp
call   804bb40 <calloc@plt+0x2860>
cmp    %eax,%ebp
je     804e3b8 <calloc@plt+0x50d8>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8048f30 <memcmp@plt>
test   %eax,%eax
jne    804e3a4 <calloc@plt+0x50c4>
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   804fb90 <calloc@plt+0x68b0>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   804fb90 <calloc@plt+0x68b0>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
call   8049280 <__xstat64@plt>
test   %eax,%eax
je     804e42d <calloc@plt+0x514d>
call   8049140 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x8051bd7,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049280 <__xstat64@plt>
test   %eax,%eax
jne    804e488 <calloc@plt+0x51a8>
mov    0x68(%esp),%ecx
xor    %edi,%edi
mov    0x6c(%esp),%eax
xor    0xcc(%esp),%eax
xor    0xc8(%esp),%ecx
or     %ecx,%eax
je     804e4b0 <calloc@plt+0x51d0>
mov    %ebx,(%esp)
call   8048ee0 <free@plt>
mov    %esi,(%esp)
call   8048ee0 <free@plt>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049140 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x8051bd7,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049010 <error@plt>
jmp    804e449 <calloc@plt+0x5169>
lea    0x0(%esi),%esi
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
xor    0x74(%esp),%eax
xor    0x70(%esp),%edx
or     %eax,%edx
sete   %al
mov    %eax,%edi
jmp    804e465 <calloc@plt+0x5185>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804ef80 <calloc@plt+0x5ca0>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804e9b8 <calloc@plt+0x56d8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x80518a4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049240 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80518b7,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x8051b40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8049240 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8051914,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804e9e0 <calloc@plt+0x5700>
jmp    *0x8051b18(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8051a78,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8048f40 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8049240 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8051aa8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8048f40 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8049240 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049270 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80518bb,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049240 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80518cb,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049240 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80518e2,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049240 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80519e0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8048f40 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8049240 <__fprintf_chk@plt>
jmp    804e65f <calloc@plt+0x537f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8051a00,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8048f40 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049240 <__fprintf_chk@plt>
jmp    804e65f <calloc@plt+0x537f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8051a24,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048f40 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049240 <__fprintf_chk@plt>
jmp    804e65f <calloc@plt+0x537f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8051a4c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048f40 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049240 <__fprintf_chk@plt>
jmp    804e65f <calloc@plt+0x537f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x80518b0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8049240 <__fprintf_chk@plt>
jmp    804e551 <calloc@plt+0x5271>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8051adc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8048f40 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804e6ea <calloc@plt+0x540a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804ea8a <calloc@plt+0x57aa>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804ea80 <calloc@plt+0x57a0>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804e500 <calloc@plt+0x5220>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804eae2 <calloc@plt+0x5802>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804ead0 <calloc@plt+0x57f0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804e500 <calloc@plt+0x5220>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804eac0 <calloc@plt+0x57e0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x80518fe,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x8050348,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805035e,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
movl   $0x80510bc,0xc(%esp)
movl   $0x8050372,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049170 <__printf_chk@plt>
mov    0x8055220,%ebx
movl   $0x5,0x8(%esp)
movl   $0x80510e4,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
je     804ec29 <calloc@plt+0x5949>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804ec24 <calloc@plt+0x5944>
lea    0x0(%esi),%esi
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804ec69 <calloc@plt+0x5989>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804ec10 <calloc@plt+0x5930>
call   804ee80 <calloc@plt+0x5ba0>
xchg   %ax,%ax
jmp    804ec10 <calloc@plt+0x5930>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804eca8 <calloc@plt+0x59c8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049030 <realloc@plt>
test   %eax,%eax
je     804ecbb <calloc@plt+0x59db>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804ec90 <calloc@plt+0x59b0>
mov    %eax,(%esp)
call   8048ee0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804eca0 <calloc@plt+0x59c0>
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804ed03 <calloc@plt+0x5a23>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804ec80 <calloc@plt+0x59a0>
call   804ee80 <calloc@plt+0x5ba0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804ed50 <calloc@plt+0x5a70>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804ed68 <calloc@plt+0x5a88>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804ec80 <calloc@plt+0x59a0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804ed39 <calloc@plt+0x5a59>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804ed39 <calloc@plt+0x5a59>
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804eda8 <calloc@plt+0x5ac8>
cmp    $0xaaaaaaa9,%eax
ja     804edb4 <calloc@plt+0x5ad4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804ec80 <calloc@plt+0x59a0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804ed90 <calloc@plt+0x5ab0>
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049120 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80492e0 <calloc@plt>
test   %eax,%eax
je     804ee0f <calloc@plt+0x5b2f>
add    $0x1c,%esp
ret
nop
call   804ee80 <calloc@plt+0x5ba0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804ec10 <calloc@plt+0x5930>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048ef0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80490f0 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804ee20 <calloc@plt+0x5b40>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8051b6f,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    0x8055154,%edx
movl   $0x8051bd7,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049010 <error@plt>
call   8049270 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   80490d0 <getcwd@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804eef8 <calloc@plt+0x5c18>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049140 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    804eeee <calloc@plt+0x5c0e>
call   804ee80 <calloc@plt+0x5ba0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
xor    %ebx,%ebx
sub    $0x28,%esp
mov    0x8055204,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0xc(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   8048f90 <__getdelim@plt>
test   %eax,%eax
jle    804ef69 <calloc@plt+0x5c89>
mov    0x18(%esp),%edx
movb   $0x0,-0x1(%edx,%eax,1)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049190 <rpmatch@plt>
test   %eax,%eax
setg   %bl
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    804efe0 <calloc@plt+0x5d00>
mov    0x8055390,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     804f088 <calloc@plt+0x5da8>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049110 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804f000 <calloc@plt+0x5d20>
movl   $0x1,0x8055390
00
test   %ebx,%ebx
js     804efd7 <calloc@plt+0x5cf7>
cmpl   $0xffffffff,0x8055390
je     804f030 <calloc@plt+0x5d50>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049110 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049140 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    804efc0 <calloc@plt+0x5ce0>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ef80 <calloc@plt+0x5ca0>
test   %eax,%eax
mov    %eax,%ebx
js     804efd7 <calloc@plt+0x5cf7>
movl   $0xffffffff,0x8055390
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049110 <fcntl@plt>
test   %eax,%eax
js     804f064 <calloc@plt+0x5d84>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049110 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    804efd7 <calloc@plt+0x5cf7>
call   8049140 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   80492a0 <close@plt>
mov    %edi,(%esi)
jmp    804efd7 <calloc@plt+0x5cf7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ef80 <calloc@plt+0x5ca0>
mov    %eax,%ebx
jmp    804efca <calloc@plt+0x5cea>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804f0b8 <calloc@plt+0x5dd8>
mov    %ebx,(%esp)
call   8049060 <__freading@plt>
test   %eax,%eax
jne    804f0c8 <calloc@plt+0x5de8>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048ea0 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804f0b8 <calloc@plt+0x5dd8>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804f130 <calloc@plt+0x5e50>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048ea0 <fflush@plt>
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x10(%edx),%ecx
cmp    %ecx,0x14(%edx)
ja     804f126 <calloc@plt+0x5e46>
mov    0x8(%edx),%eax
xor    %ecx,%ecx
sub    0x4(%edx),%eax
testl  $0x100,(%edx)
je     804f124 <calloc@plt+0x5e44>
mov    0x2c(%edx),%ecx
sub    0x24(%edx),%ecx
add    %ecx,%eax
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804f170 <calloc@plt+0x5e90>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f20 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804f14f <calloc@plt+0x5e6f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804f14f <calloc@plt+0x5e6f>
mov    %ebx,(%esp)
call   8049150 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8049220 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804f1b7 <calloc@plt+0x5ed7>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804f1af <calloc@plt+0x5ecf>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x50(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x60(%esp),%eax
test   $0xfffffbff,%eax
jne    804f3a0 <calloc@plt+0x60c0>
test   %eax,%eax
je     804f370 <calloc@plt+0x6090>
mov    0x8055394,%edx
test   %edx,%edx
js     804f268 <calloc@plt+0x5f88>
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   8049160 <linkat@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     804f248 <calloc@plt+0x5f68>
movl   $0x1,0x8055394
00
mov    %ebx,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049140 <__errno_location@plt>
cmpl   $0x16,(%eax)
mov    %eax,0x2c(%esp)
jne    804f22f <calloc@plt+0x5f4f>
movl   $0xffffffff,0x8055394
ff
jmp    804f271 <calloc@plt+0x5f91>
lea    0x0(%esi),%esi
call   8049140 <__errno_location@plt>
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%edi
mov    $0x14,%esi
mov    %ebp,0x20(%esp)
jmp    804f29d <calloc@plt+0x5fbd>
cmp    %edi,0x1c(%esp)
je     804f320 <calloc@plt+0x6040>
mov    %edi,(%esp)
mov    %ebx,%edi
call   8048ee0 <free@plt>
sub    $0x1,%esi
je     804f330 <calloc@plt+0x6050>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804f520 <calloc@plt+0x6240>
test   %eax,%eax
mov    %eax,%ebx
je     804f3d4 <calloc@plt+0x60f4>
cmpb   $0x2f,(%ebx)
je     804f280 <calloc@plt+0x5fa0>
mov    %edi,(%esp)
call   804ba70 <calloc@plt+0x2790>
cmp    %edi,0x1c(%esp)
mov    %eax,%ebp
je     804f2d4 <calloc@plt+0x5ff4>
mov    %edi,(%esp)
call   8048ee0 <free@plt>
test   %ebp,%ebp
je     804f3b8 <calloc@plt+0x60d8>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   804bcb0 <calloc@plt+0x29d0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   8048ee0 <free@plt>
mov    %ebx,(%esp)
call   8048ee0 <free@plt>
test   %edi,%edi
jne    804f294 <calloc@plt+0x5fb4>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    804f23b <calloc@plt+0x5f5b>
lea    0x0(%esi),%esi
sub    $0x1,%esi
mov    %ebx,%edi
jne    804f29d <calloc@plt+0x5fbd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    $0x28,%ebx
movl   $0x28,(%eax)
cmp    %edi,0x1c(%esp)
mov    $0xffffffff,%eax
je     804f23b <calloc@plt+0x5f5b>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8048ee0 <free@plt>
mov    0x2c(%esp),%eax
mov    %ebx,(%eax)
mov    0x1c(%esp),%eax
jmp    804f23b <calloc@plt+0x5f5b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %ebp,0x50(%esp)
movl   $0x0,0x60(%esp)
mov    %eax,0x5c(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x58(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x54(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049160 <linkat@plt>
call   8049140 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    804f23b <calloc@plt+0x5f5b>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8048ee0 <free@plt>
mov    0x2c(%esp),%eax
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    804f23b <calloc@plt+0x5f5b>
mov    0x2c(%esp),%eax
mov    0x20(%esp),%ebp
mov    (%eax),%ebx
cmp    $0x16,%ebx
jne    804f33f <calloc@plt+0x605f>
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   8049160 <linkat@plt>
cmp    %edi,0x1c(%esp)
je     804f23b <calloc@plt+0x5f5b>
mov    0x2c(%esp),%esi
mov    %eax,0x1c(%esp)
mov    (%esi),%ebx
mov    %edi,(%esp)
call   8048ee0 <free@plt>
mov    0x1c(%esp),%eax
mov    %ebx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x401,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebp
lea    0x1(%eax),%edx
cmp    $0x400,%eax
cmovbe %edx,%ebx
nop
mov    %ebx,(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804f4a8 <calloc@plt+0x61c8>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8048f80 <readlink@plt>
test   %eax,%eax
mov    %eax,%edi
js     804f4c8 <calloc@plt+0x61e8>
cmp    %edi,%ebx
ja     804f4f8 <calloc@plt+0x6218>
mov    %esi,(%esp)
call   8048ee0 <free@plt>
cmp    $0x3fffffff,%ebx
ja     804f4b8 <calloc@plt+0x61d8>
add    %ebx,%ebx
mov    %ebx,(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804f46e <calloc@plt+0x618e>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x7ffffffe,%ebx
ja     804f508 <calloc@plt+0x6228>
mov    $0x7fffffff,%ebx
jmp    804f460 <calloc@plt+0x6180>
nop
call   8049140 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x22,%edx
je     804f484 <calloc@plt+0x61a4>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8048ee0 <free@plt>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    804f4aa <calloc@plt+0x61ca>
lea    0x0(%esi),%esi
movb   $0x0,(%esi,%edi,1)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049140 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
movl   $0x8049050,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804f930 <calloc@plt+0x6650>
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804a620 <calloc@plt+0x1340>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80490f0 <strlen@plt>
mov    %eax,%ebp
mov    0x44(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     804f662 <calloc@plt+0x6382>
mov    0x48(%esp),%esi
xor    %ebx,%ebx
movb   $0x0,0x1f(%esp)
movl   $0xffffffff,0x18(%esp)
jmp    804f606 <calloc@plt+0x6326>
mov    0x48(%esp),%eax
test   %eax,%eax
je     804f638 <calloc@plt+0x6358>
mov    0x4c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
imul   0x4c(%esp),%eax
add    0x48(%esp),%eax
mov    %eax,(%esp)
call   8048f30 <memcmp@plt>
movzbl 0x1f(%esp),%edx
test   %eax,%eax
mov    $0x1,%eax
cmovne %eax,%edx
mov    %dl,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     804f640 <calloc@plt+0x6360>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049260 <strncmp@plt>
test   %eax,%eax
jne    804f5f4 <calloc@plt+0x6314>
mov    %edi,(%esp)
call   80490f0 <strlen@plt>
cmp    %ebp,%eax
je     804f658 <calloc@plt+0x6378>
cmpl   $0xffffffff,0x18(%esp)
jne    804f5b8 <calloc@plt+0x62d8>
mov    %ebx,0x18(%esp)
jmp    804f5f4 <calloc@plt+0x6314>
nop
movb   $0x1,0x1f(%esp)
jmp    804f5f4 <calloc@plt+0x6314>
nop
cmpb   $0x0,0x1f(%esp)
jne    804f66c <calloc@plt+0x638c>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xffffffff,0x18(%esp)
jmp    804f647 <calloc@plt+0x6367>
mov    $0xfffffffe,%eax
jmp    804f64b <calloc@plt+0x636b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     804f708 <calloc@plt+0x6428>
movl   $0x8051b9b,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   804e320 <calloc@plt+0x5040>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   804df70 <calloc@plt+0x4c90>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049010 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x8051b80,0x4(%esp)
movl   $0x0,(%esp)
call   8048f40 <dcgettext@plt>
mov    %eax,%esi
jmp    804f6aa <calloc@plt+0x63ca>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80551c4,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x8051bb8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   8048f40 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   80490a0 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    804f7bd <calloc@plt+0x64dd>
jmp    804f808 <calloc@plt+0x6528>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   804e340 <calloc@plt+0x5060>
movl   $0x8051bcd,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80551c4,%eax
mov    %eax,(%esp)
call   8049240 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     804f808 <calloc@plt+0x6528>
test   %esi,%esi
je     804f780 <calloc@plt+0x64a0>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8048f30 <memcmp@plt>
test   %eax,%eax
jne    804f780 <calloc@plt+0x64a0>
mov    %ebp,(%esp)
call   804e340 <calloc@plt+0x5060>
movl   $0x8051bd5,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80551c4,%eax
mov    %eax,(%esp)
call   8049240 <__fprintf_chk@plt>
jmp    804f7ab <calloc@plt+0x64cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80551c4,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804f826 <calloc@plt+0x6546>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80491f0 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebp
mov    0x38(%esp),%ebx
mov    0x3c(%esp),%esi
mov    0x40(%esp),%edi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
call   804f580 <calloc@plt+0x62a0>
test   %eax,%eax
js     804f877 <calloc@plt+0x6597>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804f680 <calloc@plt+0x63a0>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   804f720 <calloc@plt+0x6440>
call   *0x44(%esp)
mov    $0xffffffff,%eax
jmp    804f86f <calloc@plt+0x658f>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     804f8f3 <calloc@plt+0x6613>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    804f8db <calloc@plt+0x65fb>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     804f8f3 <calloc@plt+0x6613>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048f30 <memcmp@plt>
test   %eax,%eax
jne    804f8d0 <calloc@plt+0x65f0>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
sub    $0xc,%esp
cmpl   $0xffffff9c,0x10(%esp)
mov    0x14(%esp),%eax
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
jne    804f92a <calloc@plt+0x664a>
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0xc,%esp
jmp    8048f80 <readlink@plt>
call   8049270 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x454(%esp),%eax
mov    0x460(%esp),%edi
mov    0x45c(%esp),%ebx
mov    0x464(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x458(%esp),%eax
mov    %eax,0x14(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
test   %edi,%edi
mov    $0x8051c04,%eax
cmove  %eax,%edi
test   %ebx,%ebx
jne    804f98e <calloc@plt+0x66ae>
lea    0x2c(%esp),%eax
mov    $0x400,%bx
mov    %eax,0x14(%esp)
mov    0x14(%esp),%esi
jmp    804f9a5 <calloc@plt+0x66c5>
lea    0x0(%esi,%eiz,1),%esi
add    %ebx,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
je     804f9ff <calloc@plt+0x671f>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x450(%esp),%eax
mov    %eax,(%esp)
call   *%ebp
test   %eax,%eax
mov    %eax,%edx
js     804fa40 <calloc@plt+0x6760>
cmp    %edx,%ebx
ja     804fa80 <calloc@plt+0x67a0>
cmp    0x14(%esp),%esi
je     804f9db <calloc@plt+0x66fb>
mov    %esi,(%esp)
call   *0x8(%edi)
cmp    $0x40000000,%ebx
jbe    804f998 <calloc@plt+0x66b8>
cmp    $0x80000000,%ebx
jae    804fac8 <calloc@plt+0x67e8>
mov    $0x80000000,%ebx
mov    %ebx,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%esi
jne    804f9a5 <calloc@plt+0x66c5>
mov    0xc(%edi),%eax
test   %eax,%eax
je     804fa0b <calloc@plt+0x672b>
mov    %ebx,(%esp)
call   *%eax
call   8049140 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0xc,(%eax)
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804fb01 <calloc@plt+0x6821>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
call   8049140 <__errno_location@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
cmp    $0x22,%ecx
je     804f9c7 <calloc@plt+0x66e7>
xor    %ebx,%ebx
cmp    %esi,0x14(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
je     804fa18 <calloc@plt+0x6738>
mov    %esi,(%esp)
call   *0x8(%edi)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
jmp    804fa18 <calloc@plt+0x6738>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
cmp    %eax,%esi
lea    0x1(%edx),%ebp
movb   $0x0,(%esi,%edx,1)
je     804fada <calloc@plt+0x67fa>
cmp    %ebp,%ebx
jbe    804fac0 <calloc@plt+0x67e0>
cmp    %esi,0x14(%esp)
je     804fac0 <calloc@plt+0x67e0>
mov    0x4(%edi),%eax
mov    %esi,%ebx
test   %eax,%eax
je     804fa18 <calloc@plt+0x6738>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   *%eax
test   %eax,%eax
cmovne %eax,%ebx
jmp    804fa18 <calloc@plt+0x6738>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    804fa18 <calloc@plt+0x6738>
nop
call   8049140 <__errno_location@plt>
xor    %ebx,%ebx
movl   $0x24,(%eax)
jmp    804fa18 <calloc@plt+0x6738>
mov    %ebp,(%esp)
call   *(%edi)
test   %eax,%eax
mov    %eax,%ebx
je     804fafa <calloc@plt+0x681a>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048ef0 <memcpy@plt>
jmp    804fa18 <calloc@plt+0x6738>
mov    %ebp,%ebx
jmp    804f9ff <calloc@plt+0x671f>
call   8048f50 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8048fe0 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804ffa0 <calloc@plt+0x6cc0>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    804fb50 <calloc@plt+0x6870>
test   %dl,%dl
je     804fb47 <calloc@plt+0x6867>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     804fb70 <calloc@plt+0x6890>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    804fb47 <calloc@plt+0x6867>
call   8049140 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049140 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ba70 <calloc@plt+0x2790>
test   %eax,%eax
je     804fba7 <calloc@plt+0x68c7>
add    $0x1c,%esp
ret
call   804ee80 <calloc@plt+0x5ba0>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%edx
movsbl (%edx),%ecx
test   %cl,%cl
je     804fbd8 <calloc@plt+0x68f8>
xor    %eax,%eax
lea    0x0(%esi),%esi
ror    $0x17,%eax
add    $0x1,%edx
add    %ecx,%eax
movsbl (%edx),%ecx
test   %cl,%cl
jne    804fbc0 <calloc@plt+0x68e0>
xor    %edx,%edx
divl   0x8(%esp)
mov    %edx,%eax
ret
xor    %edx,%edx
jmp    804fbd5 <calloc@plt+0x68f5>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   80491c0 <nl_langinfo@plt>
mov    0x8055398,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x80518fd,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804fcac <calloc@plt+0x69cc>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804fc77 <calloc@plt+0x6997>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804fc50 <calloc@plt+0x6970>
nop
mov    %ebp,(%esp)
call   80490f0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   80490f0 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804fca8 <calloc@plt+0x69c8>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048e80 <strcmp@plt>
test   %eax,%eax
je     804fc6b <calloc@plt+0x698b>
cmp    $0x2a,%bl
jne    804fc30 <calloc@plt+0x6950>
cmpb   $0x0,0x1(%ebp)
jne    804fc30 <calloc@plt+0x6950>
mov    %ebp,(%esp)
call   80490f0 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x8051be3,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804ff6d <calloc@plt+0x6c8d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804fc77 <calloc@plt+0x6997>
movl   $0x8051be9,(%esp)
call   8049020 <getenv@plt>
test   %eax,%eax
je     804fcc5 <calloc@plt+0x69e5>
cmpb   $0x0,(%eax)
jne    804fed3 <calloc@plt+0x6bf3>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x8051bda,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804fec4 <calloc@plt+0x6be4>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049040 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804ff63 <calloc@plt+0x6c83>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048ef0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804fd2c <calloc@plt+0x6a4c>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048e90 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804fea8 <calloc@plt+0x6bc8>
movl   $0x80503e2,0x4(%esp)
mov    %eax,(%esp)
call   8049090 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804fea0 <calloc@plt+0x6bc0>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804fe86 <calloc@plt+0x6ba6>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804fd90 <calloc@plt+0x6ab0>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804fd90 <calloc@plt+0x6ab0>
cmp    $0x23,%eax
je     804fefd <calloc@plt+0x6c1d>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049130 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8051bf9,0x4(%esp)
mov    %esi,(%esp)
call   80490e0 <fscanf@plt>
cmp    $0x1,%eax
jle    804ff20 <calloc@plt+0x6c40>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   80490f0 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   80490f0 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804ff3e <calloc@plt+0x6c5e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049040 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804ff72 <calloc@plt+0x6c92>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8048fd0 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8048fd0 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804fd9c <calloc@plt+0x6abc>
mov    %esi,(%esp)
call   80491a0 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804ff20 <calloc@plt+0x6c40>
jmp    804fda5 <calloc@plt+0x6ac5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80492a0 <close@plt>
mov    $0x80518fd,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048ee0 <free@plt>
mov    %ebp,0x8055398
jmp    804fc1f <calloc@plt+0x693f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804fceb <calloc@plt+0x6a0b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   80490f0 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804fec4 <calloc@plt+0x6be4>
lea    -0x1(%eax),%eax
jmp    804fcd4 <calloc@plt+0x69f4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804ff17 <calloc@plt+0x6c37>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804ff8c <calloc@plt+0x6cac>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804fef8 <calloc@plt+0x6c18>
cmp    $0xffffffff,%eax
jne    804fd90 <calloc@plt+0x6ab0>
mov    %esi,(%esp)
call   804ffa0 <calloc@plt+0x6cc0>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804fea8 <calloc@plt+0x6bc8>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804fead <calloc@plt+0x6bcd>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049030 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804fe3c <calloc@plt+0x6b5c>
mov    $0x80518fd,%ebp
jmp    804feb9 <calloc@plt+0x6bd9>
call   8048f50 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x80518fd,%ebp
call   8048ee0 <free@plt>
mov    %esi,(%esp)
call   804ffa0 <calloc@plt+0x6cc0>
jmp    804fead <calloc@plt+0x6bcd>
mov    %esi,(%esp)
call   80491a0 <__uflow@plt>
jmp    804ff12 <calloc@plt+0x6c32>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049150 <fileno@plt>
test   %eax,%eax
js     8050028 <calloc@plt+0x6d48>
mov    %ebx,(%esp)
call   8049060 <__freading@plt>
test   %eax,%eax
jne    804fff8 <calloc@plt+0x6d18>
mov    %ebx,(%esp)
call   804f0a0 <calloc@plt+0x5dc0>
test   %eax,%eax
je     8050028 <calloc@plt+0x6d48>
call   8049140 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048f10 <fclose@plt>
test   %edi,%edi
je     804ffea <calloc@plt+0x6d0a>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049150 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049220 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804ffc2 <calloc@plt+0x6ce2>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048f10 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    8050088 <calloc@plt+0x6da8>
cmp    %edi,%esi
jbe    80500c0 <calloc@plt+0x6de0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     80500e0 <calloc@plt+0x6e00>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    80500f0 <calloc@plt+0x6e10>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     8050188 <calloc@plt+0x6ea8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    80500d1 <calloc@plt+0x6df1>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    805007b <calloc@plt+0x6d9b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     8050174 <calloc@plt+0x6e94>
cmp    %eax,0xc(%esp)
jb     8050170 <calloc@plt+0x6e90>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    805014e <calloc@plt+0x6e6e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    805014e <calloc@plt+0x6e6e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     80500a1 <calloc@plt+0x6dc1>
jmp    80500b1 <calloc@plt+0x6dd1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049b70 <calloc@plt+0x890>
add    $0x4e55,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048e38 <pathconf@plt-0x38>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     80501f9 <calloc@plt+0x6f19>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    80501d8 <calloc@plt+0x6ef8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8050210 <calloc@plt+0x6f30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   8049b70 <calloc@plt+0x890>
add    $0x4dda,%ebx
sub    $0x18,%esp
lea    0x144(%ebx),%eax
test   %eax,%eax
je     8050258 <calloc@plt+0x6f78>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049000 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805023b <calloc@plt+0x6f5b>
push   %ebx
sub    $0x8,%esp
call   8049b70 <calloc@plt+0x890>
add    $0x4d9b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %sp,0x65(%ebx)
jae    805030b <_IO_stdin_used+0x87>
and    %ah,0x73250073
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x72612073
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x72203a73
gs
jo     805032c <_IO_stdin_used+0xa8>
popa
arpl   %sp,0x20(%ebp)
and    $0x203f73,%eax
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80502f0 <_IO_stdin_used+0x6c>
bound  %esp,0x63(%ecx)
imul   $0x20,0x70(%ebp),%esi
and    $0x61630073,%eax
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8050301 <_IO_stdin_used+0x7d>
jb     8050348 <_IO_stdin_used+0xc4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805034c <_IO_stdin_used+0xc8>
and    %ah,0x73250073
and    %bh,0x20(%esi)
add    %ah,0x63252073
and    %ah,%ds:0x66000a73
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     8050371 <_IO_stdin_used+0xed>
and    %ch,0x61(%eax)
jb     8050375 <_IO_stdin_used+0xf1>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    805031a <_IO_stdin_used+0x96>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8050341 <_IO_stdin_used+0xbd>
jne    8050391 <_IO_stdin_used+0x10d>
sub    $0x6b636162,%eax
jne    805039a <_IO_stdin_used+0x116>
and    %ah,0x502d0073
add    %cl,(%edx)
push   %edx
gs
jo     80503a5 <_IO_stdin_used+0x121>
jb     80503ac <_IO_stdin_used+0x128>
and    %ah,0x75622073
addr16 jae 8050361 <_IO_stdin_used+0xdd>
je     80503b2 <_IO_stdin_used+0x12e>
and    %ah,0x62000a73
jne    80503b2 <_IO_stdin_used+0x12e>
sub    $0x65726f63,%eax
jne    80503c6 <_IO_stdin_used+0x142>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     80503c4 <_IO_stdin_used+0x140>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    80503ae <_IO_stdin_used+0x12a>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     80503df <_IO_stdin_used+0x15b>
jne    80503f0 <_IO_stdin_used+0x16c>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
das
jne    80503fa <_IO_stdin_used+0x176>
jb     80503b8 <_IO_stdin_used+0x134>
jae    80503f3 <_IO_stdin_used+0x16f>
popa
jb     80503f3 <_IO_stdin_used+0x16f>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dl,%gs:0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
add    %dh,0x72(%ecx,%eiz,2)
addr16
gs
je     80503d2 <_IO_stdin_used+0x14e>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     80503dc <_IO_stdin_used+0x158>
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80503c8 <_IO_stdin_used+0x144>
inc    %esp
popa
jbe    8050435 <_IO_stdin_used+0x1b1>
and    %cl,%fs:0x61(%ebp)
arpl   %cx,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jp     805043f <_IO_stdin_used+0x1bb>
add    %cl,%gs:0x69(%ebp)
imul   $0x50,0x20(%ebp),%esp
popa
jb     805044c <_IO_stdin_used+0x1c8>
gs
jb     80503e4 <_IO_stdin_used+0x160>
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
add    %ah,0x64(%edx)
imul   $0x7473,0x72(%esi),%bp
cmp    0x46(%esi),%dh
dec    %esp
push   %eax
push   %ebx
cmp    0x6d(%eax,%eax,1),%dl
imul   $0x20676e69,0x73(%ebx),%esi
imul   $0x706f,0x20(%ebp,%eiz,2),%bp
gs
jb     805046b <_IO_stdin_used+0x1e7>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x78(%ebp)
je     8050483 <_IO_stdin_used+0x1ff>
popa
and    %ch,0x70(%edi)
gs
jb     8050479 <_IO_stdin_used+0x1f5>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x61620073
arpl   %bp,0x75(%ebx)
jo     8050445 <_IO_stdin_used+0x1c1>
je     80504a0 <_IO_stdin_used+0x21c>
jo     805048e <_IO_stdin_used+0x20a>
add    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8050431 <_IO_stdin_used+0x1ad>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x65726564,%eax
data16
gs
jb     80504a1 <_IO_stdin_used+0x21d>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x67726174,%eax
gs
je     8050477 <_IO_stdin_used+0x1f3>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8050454 <_IO_stdin_used+0x1d0>
outsw  %ds:(%esi),(%dx)
jb     80504bb <_IO_stdin_used+0x237>
add    %ch,%gs:0x6e(%ecx)
je     80504c3 <_IO_stdin_used+0x23f>
jb     80504c1 <_IO_stdin_used+0x23d>
arpl   %si,0x76(%ecx,%ebp,2)
add    %dh,%gs:0x75(%ebx)
data32 imul $0x6f6c,0x0(%eax),%di
imul   $0x6870006c,0x61(%bp,%di),%esp
jns    80504ec <_IO_stdin_used+0x268>
imul   $0x6572006c,0x61(%ebx),%esp
insb   (%dx),%es:(%edi)
popa
je     80504ed <_IO_stdin_used+0x269>
jbe    80504eb <_IO_stdin_used+0x267>
add    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x62726576,0x0(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jae    80504fc <_IO_stdin_used+0x278>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     805049d <_IO_stdin_used+0x219>
jbe    8050504 <_IO_stdin_used+0x280>
jb     8050514 <_IO_stdin_used+0x290>
imul   $0x0,0x6e(%edi),%ebp
and    $0x68203a73,%eax
popa
jb     8050514 <_IO_stdin_used+0x290>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x6e,(%eax),%esp
outsl  %ds:(%esi),(%dx)
je     80504da <_IO_stdin_used+0x256>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8050525 <_IO_stdin_used+0x2a1>
and    %ah,%fs:0x6f(%esi)
jb     80504e6 <_IO_stdin_used+0x262>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    80504d0 <_IO_stdin_used+0x24c>
ja     805053b <_IO_stdin_used+0x2b7>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     80504f9 <_IO_stdin_used+0x275>
outsl  %ds:(%esi),(%dx)
jbe    8050541 <_IO_stdin_used+0x2bd>
jb     8050555 <_IO_stdin_used+0x2d1>
jb     8050549 <_IO_stdin_used+0x2c5>
je     8050547 <_IO_stdin_used+0x2c3>
and    %ch,0x75(%edx)
jae    805055b <_IO_stdin_used+0x2d7>
sub    $0x61657263,%eax
je     8050553 <_IO_stdin_used+0x2cf>
and    %ah,%fs:0x69772073
je     805055f <_IO_stdin_used+0x2db>
and    %ah,0x25000073
jae    8050539 <_IO_stdin_used+0x2b5>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8050527 <_IO_stdin_used+0x2a3>
outsl  %ds:(%esi),(%dx)
jbe    805056f <_IO_stdin_used+0x2eb>
jb     8050583 <_IO_stdin_used+0x2ff>
jb     8050577 <_IO_stdin_used+0x2f3>
je     8050575 <_IO_stdin_used+0x2f1>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    805051b <_IO_stdin_used+0x297>
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     8050591 <_IO_stdin_used+0x30d>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x73
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     80505b5 <_IO_stdin_used+0x331>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ah,0x3e2d2073
and    %ah,0x61660073
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     80505dd <_IO_stdin_used+0x359>
and    %ch,0x61(%eax)
jb     80505e1 <_IO_stdin_used+0x35d>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x74,(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x2573302e
jae    805058d <_IO_stdin_used+0x309>
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     8050605 <_IO_stdin_used+0x381>
and    %ch,0x61(%eax)
jb     8050609 <_IO_stdin_used+0x385>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x25,(%eax),%esp
jae    80505ce <_IO_stdin_used+0x34a>
cmp    $0x7325203e,%eax
add    %dl,0x79(%edx,%esi,2)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     80505e8 <_IO_stdin_used+0x364>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8050631 <_IO_stdin_used+0x3ad>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8050640 <_IO_stdin_used+0x3bc>
popa
je     805063f <_IO_stdin_used+0x3bb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bl,%cs:0x2d(%ebx)
push   %esp
pop    %ebp
and    %dl,0x52(%ecx,%eax,2)
inc    %edi
inc    %ebp
push   %esp
and    %cl,0x4e(%ecx,%ecx,2)
dec    %ebx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
and    %ah,(%eax)
and    %ch,(%eax)
xor    %esi,0x74(%ebx)
and    %ah,0x6f(%esi)
jb     8050680 <_IO_stdin_used+0x3fc>
sub    %ecx,(%edx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8050654 <_IO_stdin_used+0x3d0>
and    %ah,(%eax)
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x52(%ecx,%eax,2)
inc    %edi
inc    %ebp
push   %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    %dh,(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%esi)
jb     80506b9 <_IO_stdin_used+0x435>
sub    %ecx,(%edx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     805068d <_IO_stdin_used+0x409>
and    %ah,(%eax)
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x52(%ecx,%eax,2)
inc    %edi
inc    %ebp
push   %esp
cs cs and %al,%cs:0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
xor    0x64(%edx),%esi
and    %ah,0x6f(%esi)
jb     80506f2 <_IO_stdin_used+0x46e>
sub    %ecx,(%edx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     80506c6 <_IO_stdin_used+0x442>
and    %ah,(%eax)
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %ch,%cs:0x49442074
49
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %dl,0x52(%ecx,%eax,2)
inc    %edi
inc    %ebp
push   %esp
cs cs and %ah,%cs:(%eax)
sub    %dh,(%esp,%esi,2)
push   $0x726f6620
insl   (%dx),%es:(%edi)
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,(%ecx)
jae    8050742 <_IO_stdin_used+0x4be>
and    %ah,0x6f(%esi)
jb     8050740 <_IO_stdin_used+0x4bc>
sub    $0x20,%al
arpl   %si,0x65(%edx)
popa
je     8050740 <_IO_stdin_used+0x4bc>
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
and    %dh,0x69(%edi)
je     8050759 <_IO_stdin_used+0x4d5>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %cl,%gs:0x4e(%ecx,%ecx,2)
dec    %ebx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
or     %cs:0x6e(%ecx),%cl
and    %dh,0x65(%eax,%ebp,2)
and    %dh,(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%esi)
jb     8050782 <_IO_stdin_used+0x4fe>
sub    $0x20,%al
arpl   %si,0x65(%edx)
popa
je     8050782 <_IO_stdin_used+0x4fe>
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x206f7420,0x6b(%esi),%ebp
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     80507ac <_IO_stdin_used+0x528>
outsb  %gs:(%esi),(%dx)
je     805075e <_IO_stdin_used+0x4da>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8050776 <_IO_stdin_used+0x4f2>
or     0x6e(%ecx),%cl
and    %dh,0x65(%eax,%ebp,2)
and    %dh,(%ebx)
jb     80507b7 <_IO_stdin_used+0x533>
and    %ah,0x6e(%ecx)
and    %dh,%fs:(%esp,%esi,2)
push   $0x726f6620
insl   (%dx),%es:(%edi)
jae    805078e <_IO_stdin_used+0x50a>
and    %ah,0x72(%ebx)
gs
popa
je     80507ce <_IO_stdin_used+0x54a>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x74,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
and    %ch,0x6e(%ecx)
and    %al,0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
or     %cs:0x72(%ebx),%al
gs
popa
je     80507f8 <_IO_stdin_used+0x574>
and    %ch,0x61(%eax)
jb     80507fc <_IO_stdin_used+0x578>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x62,0x20(%ebx),%esi
jns    80507c2 <_IO_stdin_used+0x53e>
fs
gs
popaw
jne    8050814 <_IO_stdin_used+0x590>
je     80507d6 <_IO_stdin_used+0x552>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    80507da <_IO_stdin_used+0x556>
ja     8050825 <_IO_stdin_used+0x5a1>
je     8050826 <_IO_stdin_used+0x5a2>
and    %ch,0x6d79732d
bound  %ebp,0x6c(%edi)
imul   $0x2079420a,0x2e(%ebx),%esp
fs
gs
popaw
jne    8050840 <_IO_stdin_used+0x5bc>
je     8050802 <_IO_stdin_used+0x57e>
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
fs
gs
jae    8050854 <_IO_stdin_used+0x5d0>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ch,0x65(%esi)
ja     8050815 <_IO_stdin_used+0x591>
insb   (%dx),%es:(%edi)
imul   $0x68732029,0x6b(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jne    805086c <_IO_stdin_used+0x5e8>
and    %ch,%fs:0x6f(%esi)
je     8050826 <_IO_stdin_used+0x5a2>
popa
insb   (%dx),%es:(%edi)
jb     805086f <_IO_stdin_used+0x5eb>
popa
fs
jns    805082e <_IO_stdin_used+0x5aa>
gs
js     805087a <_IO_stdin_used+0x5f6>
jae    8050887 <_IO_stdin_used+0x603>
or     %cs:0x68(%edi),%dl
outsb  %gs:(%esi),(%dx)
and    %ah,0x72(%ebx)
gs
popa
je     8050889 <_IO_stdin_used+0x605>
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%bx,%si)
jb     805088b <_IO_stdin_used+0x607>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x20,0x2c(%ebx),%esi
gs
popa
arpl   %bp,0x20(%eax)
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
and    %ch,0x75(%ebp)
jae    80508b3 <_IO_stdin_used+0x62f>
and    %ah,0x78(%ebp)
imul   $0x5320202e,0x74(%ebx),%esi
jns    80508b8 <_IO_stdin_used+0x634>
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8050861 <_IO_stdin_used+0x5dd>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6f(%eax)
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x72(%ecx)
bound  %ebp,0x74(%ecx)
jb     80508c8 <_IO_stdin_used+0x644>
jb     80508e2 <_IO_stdin_used+0x65e>
and    %dh,0x78(%ebp,%eiz,2)
je     80508aa <_IO_stdin_used+0x626>
and    %ch,0x66(%ecx)
and    %ch,0x74(%ecx,%eiz,2)
gs
jb     8050899 <_IO_stdin_used+0x615>
jb     80508e0 <_IO_stdin_used+0x65c>
jae    80508ec <_IO_stdin_used+0x668>
insb   (%dx),%es:(%edi)
jbe    80508e5 <_IO_stdin_used+0x661>
fs
sub    $0x20,%al
popa
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     80508f4 <_IO_stdin_used+0x670>
jbe    80508f2 <_IO_stdin_used+0x66e>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
jae    80508a0 <_IO_stdin_used+0x61c>
imul   $0x72707265,0x74(%esi),%ebp
gs
je     8050905 <_IO_stdin_used+0x681>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     8050914 <_IO_stdin_used+0x690>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x65726170,0x20(%ebx,%esi,2),%esi
outsb  %ds:(%esi),(%dx)
je     80508dc <_IO_stdin_used+0x658>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    80508f4 <_IO_stdin_used+0x670>
or     (%eax),%al
or     0x61(%ebp),%cl
outsb  %ds:(%esi),(%dx)
fs
popa
je     805093f <_IO_stdin_used+0x6bb>
jb     805094b <_IO_stdin_used+0x6c7>
and    %ah,0x72(%ecx)
addr16 jne 8050945 <_IO_stdin_used+0x6c1>
outsb  %gs:(%esi),(%dx)
je     805094f <_IO_stdin_used+0x6cb>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     8050952 <_IO_stdin_used+0x6ce>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805090d <_IO_stdin_used+0x689>
popa
jb     8050955 <_IO_stdin_used+0x6d1>
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
fs
popa
je     8050967 <_IO_stdin_used+0x6e3>
jb     8050973 <_IO_stdin_used+0x6ef>
and    %ah,0x6f(%esi)
jb     805091f <_IO_stdin_used+0x69b>
jae    8050969 <_IO_stdin_used+0x6e5>
outsl  %ds:(%esi),(%dx)
jb     8050978 <_IO_stdin_used+0x6f4>
and    %ch,0x70(%edi)
je     8050972 <_IO_stdin_used+0x6ee>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805092d <_IO_stdin_used+0x6a9>
je     805097e <_IO_stdin_used+0x6fa>
outsl  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6361622d
imul   $0x5b,0x70(%ebp),%esi
cmp    $0x544e4f43,%eax
push   %edx
dec    %edi
dec    %esp
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x61,0x20(%ebp),%esp
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8050960 <_IO_stdin_used+0x6dc>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
gs
js     80509b4 <_IO_stdin_used+0x730>
jae    80509c1 <_IO_stdin_used+0x73d>
imul   $0x73656420,0x67(%esi),%ebp
je     80509bf <_IO_stdin_used+0x73b>
outsb  %ds:(%esi),(%dx)
popa
je     80509c3 <_IO_stdin_used+0x73f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ch,0x20202062
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6b(%ecx,%ebp,2)
and    %ch,%gs:0x6361622d
imul   $0x20,0x70(%ebp),%esi
bound  %esi,0x74(%ebp)
and    %ah,0x65(%edi,%ebp,2)
jae    80509b7 <_IO_stdin_used+0x733>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80509bb <_IO_stdin_used+0x737>
popa
arpl   %sp,0x65(%ebx)
jo     8050a15 <_IO_stdin_used+0x791>
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
addr16 jne 8050a17 <_IO_stdin_used+0x793>
outsb  %gs:(%esi),(%dx)
je     80509b8 <_IO_stdin_used+0x734>
and    %ah,(%eax)
sub    $0x2d202c64,%eax
inc    %esi
sub    $0x20,%al
sub    $0x7269642d,%eax
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    80509e4 <_IO_stdin_used+0x760>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80509f2 <_IO_stdin_used+0x76e>
je     8050a3c <_IO_stdin_used+0x7b8>
and    %dh,%gs:0x75(%ebx)
jo     8050a3f <_IO_stdin_used+0x7bb>
jb     8050a51 <_IO_stdin_used+0x7cd>
jae    8050a43 <_IO_stdin_used+0x7bf>
jb     8050a00 <_IO_stdin_used+0x77c>
je     8050a51 <_IO_stdin_used+0x7cd>
and    %ah,0x74(%ecx)
je     8050a4c <_IO_stdin_used+0x7c8>
insl   (%dx),%es:(%edi)
jo     8050a5e <_IO_stdin_used+0x7da>
and    %dh,0x20(%edi,%ebp,2)
push   $0x20647261
insb   (%dx),%es:(%edi)
imul   $0x2020200a,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6f6e2820,0x73(%ebp),%esp
je     8050a8e <_IO_stdin_used+0x80a>
cmp    (%eax),%ah
ja     8050a96 <_IO_stdin_used+0x812>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x62(%ecx)
insb   (%dx),%es:(%edi)
jns    8050a59 <_IO_stdin_used+0x7d5>
popaw
imul   $0x74206575,0x64(%eax,%eiz,1),%ebp
outsl  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x79(%ebx)
jae    8050add <_IO_stdin_used+0x859>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
jae    8050ae4 <_IO_stdin_used+0x860>
jb     8050adb <_IO_stdin_used+0x857>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    8050aa5 <_IO_stdin_used+0x821>
and    %ah,0x76(%ebp)
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     8050aa3 <_IO_stdin_used+0x81f>
je     8050aed <_IO_stdin_used+0x869>
and    %dh,%gs:0x75(%ebx)
jo     8050af0 <_IO_stdin_used+0x86c>
jb     8050b02 <_IO_stdin_used+0x87e>
jae    8050af4 <_IO_stdin_used+0x870>
jb     8050aba <_IO_stdin_used+0x836>
or     (%eax),%ah
and    %ch,0x2d202c66
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8050b1b <_IO_stdin_used+0x897>
and    %ah,0x78(%ebp)
imul   $0x20676e69,0x74(%ebx),%esi
fs
gs
jae    8050b38 <_IO_stdin_used+0x8b4>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    8050adc <_IO_stdin_used+0x858>
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c69,%eax
sub    $0x65746e69,%eax
jb     8050b43 <_IO_stdin_used+0x8bf>
arpl   %si,0x76(%ecx,%ebp,2)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8050b6c <_IO_stdin_used+0x8e8>
and    %dh,0x68(%edi)
gs
je     8050b66 <_IO_stdin_used+0x8e2>
gs
jb     8050b21 <_IO_stdin_used+0x89d>
je     8050b72 <_IO_stdin_used+0x8ee>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8050b6f <_IO_stdin_used+0x8eb>
and    %ah,0x73(%ebp,%eiz,2)
je     8050b79 <_IO_stdin_used+0x8f5>
outsb  %ds:(%esi),(%dx)
popa
je     8050b7d <_IO_stdin_used+0x8f9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8050b22 <_IO_stdin_used+0x89e>
and    %ah,(%eax)
sub    $0x2d202c4c,%eax
sub    $0x69676f6c,%eax
arpl   %sp,0x6c(%ecx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x72(%ebp,%eiz,2)
gs
data16
gs
jb     8050ba3 <_IO_stdin_used+0x91f>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
jae    8050b6a <_IO_stdin_used+0x8e6>
je     8050bb4 <_IO_stdin_used+0x930>
popa
je     8050b6f <_IO_stdin_used+0x8eb>
popa
jb     8050bb7 <_IO_stdin_used+0x933>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8050b6c <_IO_stdin_used+0x8e8>
and    %ah,(%eax)
sub    $0x2d202c6e,%eax
sub    $0x642d6f6e,%eax
gs
jb     8050bd6 <_IO_stdin_used+0x952>
data16
gs
jb     8050bda <_IO_stdin_used+0x956>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx,%esi,2)
popa
je     8050ba6 <_IO_stdin_used+0x922>
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8050c06 <_IO_stdin_used+0x982>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%ecx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x74(%ecx)
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    8050c47 <_IO_stdin_used+0x9c3>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %dh,0x20(%edi,%ebp,2)
popa
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8050bf3 <_IO_stdin_used+0x96f>
and    %ah,(%eax)
sub    $0x2d202c50,%eax
sub    $0x73796870,%eax
imul   $0x2020206c,0x61(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x68,0x20(%ebp),%esp
popa
jb     8050c74 <_IO_stdin_used+0x9f0>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x64,0x20(%ebx),%esi
imul   $0x796c7463,0x65(%edx),%esi
and    %dh,0x20(%edi,%ebp,2)
jae    8050c9e <_IO_stdin_used+0xa1a>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8050c3c <_IO_stdin_used+0x9b8>
and    %ah,(%eax)
sub    $0x2d202c72,%eax
sub    $0x616c6572,%eax
je     8050ca9 <_IO_stdin_used+0xa25>
jbe    8050ca7 <_IO_stdin_used+0xa23>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %si,0x65(%edx)
popa
je     8050cbb <_IO_stdin_used+0xa37>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8050c86 <_IO_stdin_used+0xa02>
jb     8050ccd <_IO_stdin_used+0xa49>
insb   (%dx),%es:(%edi)
popa
je     8050cd5 <_IO_stdin_used+0xa51>
jbe    8050cd3 <_IO_stdin_used+0xa4f>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
imul   $0x636f6c20,0x6b(%esi),%ebp
popa
je     8050ce6 <_IO_stdin_used+0xa62>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ch,0x2d202c73
sub    $0x626d7973,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x20202020,0x20(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x73,0x20(%ebp),%esp
jns    8050d13 <_IO_stdin_used+0xa8f>
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
jae    8050cd2 <_IO_stdin_used+0xa4e>
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ch,0x61(%eax)
jb     8050d25 <_IO_stdin_used+0xaa1>
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x0,0xa(%ebx),%esi
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c53
sub    $0x66667573,%eax
imul   $0x46465553,0x3d(%eax),%edi
dec    %ecx
pop    %eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x76(%edi)
gs
jb     8050d61 <_IO_stdin_used+0xadd>
imul   $0x20656874,0x20(%ebp,%eiz,2),%esp
jne    8050d6c <_IO_stdin_used+0xae8>
jne    8050d5c <_IO_stdin_used+0xad8>
insb   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     8050d24 <_IO_stdin_used+0xaa0>
jae    8050d7b <_IO_stdin_used+0xaf7>
data32 imul $0x2020,0xa(%eax),%di
sub    $0x2d202c74,%eax
sub    $0x67726174,%eax
gs
je     8050d47 <_IO_stdin_used+0xac3>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8050d61 <_IO_stdin_used+0xadd>
inc    %esp
dec    %ecx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %ah,(%eax)
jae    8050da1 <_IO_stdin_used+0xb1d>
arpl   %bp,%gs:0x66(%ecx)
jns    8050d57 <_IO_stdin_used+0xad3>
je     8050da1 <_IO_stdin_used+0xb1d>
and    %al,%gs:0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %ch,0x6e(%ecx)
and    %dh,0x68(%edi)
imul   $0x206f7420,0x68(%ebx),%esp
arpl   %si,0x65(%edx)
popa
je     8050dbc <_IO_stdin_used+0xb38>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6e(%ecx,%ebp,2)
imul   $0x20,0xa(%ebx),%esi
and    %ch,0x2d202c54
sub    $0x742d6f6e,%eax
popa
jb     8050df8 <_IO_stdin_used+0xb74>
gs
je     8050dc1 <_IO_stdin_used+0xb3d>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8050dbe <_IO_stdin_used+0xb3a>
and    %ah,(%eax)
je     8050e14 <_IO_stdin_used+0xb90>
gs
popa
je     8050dc6 <_IO_stdin_used+0xb42>
dec    %esp
dec    %ecx
dec    %esi
dec    %ebx
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8050e26 <_IO_stdin_used+0xba2>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6c(%ecx)
ja     8050e26 <_IO_stdin_used+0xba2>
jns    8050e3a <_IO_stdin_used+0xbb6>
or     (%eax),%ah
and    %ch,0x2d202c76
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    8050e3c <_IO_stdin_used+0xbb8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x6d616e20,0x74(%esi),%ebp
and    %ch,%gs:0x66(%edi)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
insb   (%dx),%es:(%edi)
imul   $0x66206465,0x6b(%esi),%ebp
imul   $0x20000000,0xa(%ebp,%eiz,2),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6c65682d
jo     8050e35 <_IO_stdin_used+0xbb1>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     8050e8b <_IO_stdin_used+0xc07>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    8050eae <_IO_stdin_used+0xc2a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    8050ec0 <_IO_stdin_used+0xc3c>
jo     8050ec3 <_IO_stdin_used+0xc3f>
je     8050e70 <_IO_stdin_used+0xbec>
jbe    8050eb7 <_IO_stdin_used+0xc33>
jb     8050ec7 <_IO_stdin_used+0xc43>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8050ecb <_IO_stdin_used+0xc47>
popa
je     8050eca <_IO_stdin_used+0xc46>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x540a0000,0x0(%edx,%ecx,1),%esi
push   $0x61622065
arpl   %bp,0x75(%ebx)
jo     8050e9c <_IO_stdin_used+0xc18>
jae    8050ef3 <_IO_stdin_used+0xc6f>
data32 imul $0x7369,0x20(%eax),%di
and    %ah,(%edi)
jle    8050eb0 <_IO_stdin_used+0xc2c>
sub    $0x20,%al
jne    8050efb <_IO_stdin_used+0xc77>
insb   (%dx),%es:(%edi)
gs
jae    8050f04 <_IO_stdin_used+0xc80>
and    %dh,0x65(%ebx)
je     8050eb6 <_IO_stdin_used+0xc32>
ja     8050f01 <_IO_stdin_used+0xc7d>
je     8050f02 <_IO_stdin_used+0xc7e>
and    %ch,0x6675732d
imul   $0x726f,0x20(%eax),%di
and    %dl,0x49(%ebx)
dec    %ebp
push   %eax
dec    %esp
inc    %ebp
pop    %edi
inc    %edx
inc    %ecx
inc    %ebx
dec    %ebx
push   %ebp
push   %eax
pop    %edi
push   %ebx
push   %ebp
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
or     %cs:0x65(%eax,%ebp,2),%dl
and    %dh,0x65(%esi)
jb     8050f38 <_IO_stdin_used+0xcb4>
imul   $0x6e6f6320,0x6e(%edi),%ebp
je     8050f40 <_IO_stdin_used+0xcbc>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
je     8050f3d <_IO_stdin_used+0xcb9>
outsl  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%ebp)
jns    8050efc <_IO_stdin_used+0xc78>
bound  %esp,0x20(%ebp)
jae    8050f46 <_IO_stdin_used+0xcc2>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x69(%esi)
popa
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
outsl  %ds:(%esi),(%dx)
jo     8050f70 <_IO_stdin_used+0xcec>
imul   $0x20726f20,0x6e(%edi),%ebp
je     8050f6d <_IO_stdin_used+0xce9>
jb     8050f76 <_IO_stdin_used+0xcf2>
jne    8050f70 <_IO_stdin_used+0xcec>
push   $0x6568740a
and    %dl,0x45(%esi)
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
and    %ah,0x6e(%ebp)
jbe    8050f8c <_IO_stdin_used+0xd08>
jb     8050f94 <_IO_stdin_used+0xd10>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8050f4b <_IO_stdin_used+0xcc7>
jbe    8050f8e <_IO_stdin_used+0xd0a>
jb     8050f98 <_IO_stdin_used+0xd14>
popa
bound  %ebp,0x2e(%ebp,%eiz,2)
and    %ah,(%eax)
dec    %eax
gs
jb     8050f9f <_IO_stdin_used+0xd1b>
and    %ah,0x72(%ecx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8050fad <_IO_stdin_used+0xd29>
jae    8050f84 <_IO_stdin_used+0xd00>
or     (%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
data16
data16
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
jbe    8050fcb <_IO_stdin_used+0xd47>
jb     8050f88 <_IO_stdin_used+0xd04>
insl   (%dx),%es:(%edi)
popa
imul   $0x62,0x20(%ebp),%esp
popa
arpl   %bp,0x75(%ebx)
jo     8050fe7 <_IO_stdin_used+0xd63>
and    %ch,(%eax)
gs
jbe    8050fde <_IO_stdin_used+0xd5a>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%ecx)
and    %ch,0x6361622d
imul   $0x20,0x70(%ebp),%esi
imul   $0x65766967,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
sub    %ecx,(%edx)
and    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
jne    8051003 <_IO_stdin_used+0xd7f>
bound  %esp,0x72(%ebp)
gs
fs
sub    $0x20,%al
je     8050fbf <_IO_stdin_used+0xd3b>
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x6e,0x20(%ebp),%esp
jne    8051018 <_IO_stdin_used+0xd94>
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805102b <_IO_stdin_used+0xda7>
or     (%eax),%ah
and    %ah,0x78(%ebp)
imul   $0x2c676e69,0x74(%ebx),%esi
and    %ch,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ch,%fs:%gs:0x66(%ecx)
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs and %ah,%fs:%gs:0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     805105a <_IO_stdin_used+0xdd6>
and    %ah,0x78(%ebp)
imul   $0x6973202c,0x74(%ebx),%esi
insl   (%dx),%es:(%edi)
jo     8051060 <_IO_stdin_used+0xddc>
and    %ch,%gs:0x74(%edi)
push   $0x69777265
jae    8051064 <_IO_stdin_used+0xde0>
or     (%eax),%ah
and    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     8051073 <_IO_stdin_used+0xdef>
gs
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
gs
jbe    8051073 <_IO_stdin_used+0xdef>
jb     8051030 <_IO_stdin_used+0xdac>
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
ja     8051077 <_IO_stdin_used+0xdf3>
jns    805108b <_IO_stdin_used+0xe07>
and    %ch,0x61(%ebp)
imul   $0x73,0x20(%ebp),%esp
imul   $0x6220656c,0x70(%ebp),%ebp
popa
arpl   %bp,0x75(%ebx)
jo     805109f <_IO_stdin_used+0xe1b>
or     (%eax),%al
add    %al,(%eax)
or     0x73(%ebp),%dl
imul   $0x20732d20,0x67(%esi),%ebp
imul   $0x7365726f,0x6e(%edi),%esp
and    %ch,0x6e61204c
and    %ch,%fs:0x20202e50
dec    %edi
je     80510b9 <_IO_stdin_used+0xe35>
gs
jb     80510cb <_IO_stdin_used+0xe47>
imul   $0x6874202c,0x65(%ebx),%esi
and    %ch,%gs:0x73(%ecx,%eiz,2)
je     8051082 <_IO_stdin_used+0xdfe>
outsl  %ds:(%esi),(%dx)
jo     80510d9 <_IO_stdin_used+0xe55>
imul   $0x65707320,0x6e(%edi),%ebp
arpl   %bp,0x66(%ecx)
imul   $0x6e6f6320,0x64(%ebp),%esp
je     80510ea <_IO_stdin_used+0xe66>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jae    8051086 <_IO_stdin_used+0xe02>
bound  %esp,0x68(%ebp)
popa
jbe    80510eb <_IO_stdin_used+0xe67>
outsl  %ds:(%esi),(%dx)
jb     80510a5 <_IO_stdin_used+0xe21>
ja     80510ef <_IO_stdin_used+0xe6b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x20(%ecx)
push   %esp
inc    %ecx
push   %edx
inc    %edi
inc    %ebp
push   %esp
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    8051113 <_IO_stdin_used+0xe8f>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
sub    $0x20,%al
fs
gs
popaw
jne    8051119 <_IO_stdin_used+0xe95>
je     8051118 <_IO_stdin_used+0xe94>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%si)
and    %ah,0xa2e73
add    %al,(%eax)
push   $0x3a707474
das
das
ja     805113c <_IO_stdin_used+0xeb8>
ja     80510f5 <_IO_stdin_used+0xe71>
outsb  %ds:(%si),(%dx)
jne    80510f9 <_IO_stdin_used+0xe75>
outsl  %ds:(%esi),(%dx)
jb     8051135 <_IO_stdin_used+0xeb1>
das
jae    8051140 <_IO_stdin_used+0xebc>
data16
je     805114b <_IO_stdin_used+0xec7>
popa
jb     805113c <_IO_stdin_used+0xeb8>
das
arpl   %bp,0x72(%edi)
gs
jne    8051152 <_IO_stdin_used+0xece>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     805114b <_IO_stdin_used+0xec7>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8051111 <_IO_stdin_used+0xe8d>
jne    8051166 <_IO_stdin_used+0xee2>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     8051177 <_IO_stdin_used+0xef3>
popa
jb     8051168 <_IO_stdin_used+0xee4>
cmp    (%eax),%ah
cmp    $0x68,%al
je     805117d <_IO_stdin_used+0xef9>
jo     8051145 <_IO_stdin_used+0xec1>
das
das
ja     8051186 <_IO_stdin_used+0xf02>
ja     805113f <_IO_stdin_used+0xebb>
outsb  %ds:(%si),(%dx)
jne    8051143 <_IO_stdin_used+0xebf>
outsl  %ds:(%esi),(%dx)
jb     805117f <_IO_stdin_used+0xefb>
das
addr16
gs
je     8051185 <_IO_stdin_used+0xf01>
gs
insb   (%dx),%es:(%edi)
jo     8051150 <_IO_stdin_used+0xecc>
or     %ds:(%eax),%al
push   %edx
gs
jo     8051197 <_IO_stdin_used+0xf13>
jb     805119e <_IO_stdin_used+0xf1a>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    80511a0 <_IO_stdin_used+0xf1c>
popa
je     80511a0 <_IO_stdin_used+0xf1c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 805115f <_IO_stdin_used+0xedb>
je     80511b0 <_IO_stdin_used+0xf2c>
and    %bh,(%eax,%ebp,2)
je     80511ba <_IO_stdin_used+0xf36>
jo     8051182 <_IO_stdin_used+0xefe>
das
das
je     80511be <_IO_stdin_used+0xf3a>
popa
outsb  %ds:(%esi),(%dx)
jae    80511bc <_IO_stdin_used+0xf38>
popa
je     80511bc <_IO_stdin_used+0xf38>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     80511c9 <_IO_stdin_used+0xf45>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     80511c7 <_IO_stdin_used+0xf43>
das
je     80511c8 <_IO_stdin_used+0xf44>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     8051190 <_IO_stdin_used+0xf0c>
arpl   %bp,0x6d(%edi)
jo     80511e1 <_IO_stdin_used+0xf5d>
gs
je     80511dd <_IO_stdin_used+0xf59>
and    %ah,0x63(%edi,%ebp,2)
jne    80511eb <_IO_stdin_used+0xf67>
outsb  %gs:(%esi),(%dx)
je     80511e3 <_IO_stdin_used+0xf5f>
je     80511ed <_IO_stdin_used+0xf69>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     80511ff <_IO_stdin_used+0xf7b>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     80511fb <_IO_stdin_used+0xf77>
jne    805120c <_IO_stdin_used+0xf88>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
insl   (%dx),%es:(%edi)
jne    805121f <_IO_stdin_used+0xf9b>
je     805121e <_IO_stdin_used+0xf9a>
jo     8051223 <_IO_stdin_used+0xf9f>
and    %dh,%gs:0x72(%ecx,%eiz,2)
addr16
gs
je     80511e0 <_IO_stdin_used+0xf5c>
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x65707320,0x73(%ebp),%esp
arpl   %bp,0x66(%ecx)
imul   $0x63000000,0x64(%ebp),%esp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80511ff <_IO_stdin_used+0xf7b>
arpl   %bp,0x6d(%edi)
bound  %ebp,0x6e(%ecx)
and    %ch,%gs:0x7261742d
addr16
gs
je     805121d <_IO_stdin_used+0xf99>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    805121a <_IO_stdin_used+0xf96>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x2d6f6e2d
je     8051266 <_IO_stdin_used+0xfe2>
jb     805126e <_IO_stdin_used+0xfea>
gs
je     8051237 <_IO_stdin_used+0xfb3>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    8051214 <_IO_stdin_used+0xf90>
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
fs
gs
jae    8051294 <_IO_stdin_used+0x1010>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x70(%edi)
gs
jb     8051293 <_IO_stdin_used+0x100f>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x66(%ecx)
je     805129e <_IO_stdin_used+0x101a>
jb     805125b <_IO_stdin_used+0xfd7>
and    $0x73,%eax
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8051267 <_IO_stdin_used+0xfe3>
outsl  %fs:(%esi),(%dx)
and    %ch,0x6c65722d
popa
je     80512bb <_IO_stdin_used+0x1037>
jbe    80512b9 <_IO_stdin_used+0x1035>
and    %dh,0x69(%edi)
je     80512c1 <_IO_stdin_used+0x103d>
outsl  %ds:(%esi),(%dx)
jne    80512d0 <_IO_stdin_used+0x104c>
and    %ch,0x6d79732d
bound  %ebp,0x6c(%edi)
imul   $0x0,0x0(%ebx),%esp
sub    0x208(,%eax,1),%al
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
mov    $0x80503,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
xor    %eax,0x8(,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
inc    %eax
add    $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x5(%esp,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
pop    %edx
add    $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
data16
add    $0x5,%al
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
inc    %ebx
add    $0x5,%al
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %ch,0x4(%ebp)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %dh,0x4(%ebp)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
jle    8051326 <_IO_stdin_used+0x10a2>
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
xchg   %eax,0x8(,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
nop
add    $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
cwtl
add    $0x5,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%esi)
(bad)
lcall  *0x80504(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%ebp)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %ch,(%edi)
cs add %ah,%cs:0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     80513eb <_IO_stdin_used+0x1167>
je     80513f5 <_IO_stdin_used+0x1171>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bp,%si)
insb   (%dx),%es:(%edi)
popa
je     80513fe <_IO_stdin_used+0x117a>
jbe    80513fc <_IO_stdin_used+0x1178>
and    %dh,0x61(%eax)
je     8051404 <_IO_stdin_used+0x1180>
add    %bh,(%eax)
xor    %cs:(%ecx),%dh
add    %ah,(%esi,%edx,2)
inc    %ebp
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
push   %esp
push   %edx
dec    %edi
dec    %esp
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x66(%edi)
data16
add    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
jo     805142d <_IO_stdin_used+0x11a9>
add    %ch,%gs:0x65(%esi)
jbe    805142c <_IO_stdin_used+0x11a8>
jb     80513c9 <_IO_stdin_used+0x1145>
gs
js     8051435 <_IO_stdin_used+0x11b1>
jae    8051442 <_IO_stdin_used+0x11be>
imul   $0x6c696e00,0x67(%esi),%ebp
add    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
gs add %dh,%fs:%gs:0x7e(%eax,%eax,1)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
mov    $0x13,%bl
add    $0x513b808,%eax
or     %bh,0x13c30805(%ebx,%edx,1)
add    $0x513c908,%eax
or     %dl,%dl
adc    0x513d608,%eax
or     %bl,%bh
adc    0x8,%eax
add    %ah,0x72(%ebp)
jb     80514b7 <_IO_stdin_used+0x1233>
jb     805146a <_IO_stdin_used+0x11e6>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6c696620,0x67(%esi),%ebp
add    %ah,%gs:0x25203a73
jae    805145e <_IO_stdin_used+0x11da>
ja     80514d2 <_IO_stdin_used+0x124e>
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     805146a <_IO_stdin_used+0x11e6>
and    (%eax),%esp
outsb  %gs:(%esi),(%dx)
je     80514e2 <_IO_stdin_used+0x125e>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     80514be <_IO_stdin_used+0x123a>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8051513 <_IO_stdin_used+0x128f>
cmp    (%eax),%ah
and    $0xa756c,%eax
add    %al,(%eax)
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
enter  $0x42,$0x0
orb    $0x20,0x41(%edi)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 8051567 <_IO_stdin_used+0x12e3>
xor    %bl,0x20(%ebp)
ja     8051572 <_IO_stdin_used+0x12ee>
jae    8051533 <_IO_stdin_used+0x12af>
jo     8051576 <_IO_stdin_used+0x12f2>
jae    805158a <_IO_stdin_used+0x1306>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    8051587 <_IO_stdin_used+0x1303>
push   $0x206e6120
gs
js     805158d <_IO_stdin_used+0x1309>
arpl   %sp,(%eax)
jae    80515a5 <_IO_stdin_used+0x1321>
jae    80515a2 <_IO_stdin_used+0x131e>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     80515c2 <_IO_stdin_used+0x133e>
jb     80515c0 <_IO_stdin_used+0x133c>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    80515e6 <_IO_stdin_used+0x1362>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    80515dc <_IO_stdin_used+0x1358>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
js     8051572 <_IO_stdin_used+0x12ee>
add    $0x8,%al
pop    %eax
(bad)
add    $0x8,%al
mov    %dl,%dh
add    $0x8,%al
dec    %eax
aad    $0x4
or     %cl,-0x47f7fb2b(%eax)
aad    $0x4
or     %ah,%al
aad    $0x4
or     %ah,%al
aad    $0x4
or     %ah,%al
aad    $0x4
or     %al,0x780804d3(%eax)
aam    $0x4
or     %bh,-0x2c(%eax)
add    $0x8,%al
js     80515a6 <_IO_stdin_used+0x1322>
add    $0x8,%al
js     80515aa <_IO_stdin_used+0x1326>
add    $0x8,%al
js     80515ae <_IO_stdin_used+0x132a>
add    $0x8,%al
js     80515b2 <_IO_stdin_used+0x132e>
add    $0x8,%al
clc
roll   %cl,(%eax,%ecx,1)
pop    %eax
roll   %cl,(%eax,%ecx,1)
js     80515bd <_IO_stdin_used+0x1339>
add    $0x8,%al
jo     80515c1 <_IO_stdin_used+0x133d>
add    $0x8,%al
push   $0x600804d3
roll   %cl,(%eax,%ecx,1)
xor    %dl,%bl
add    $0x8,%al
js     80515d2 <_IO_stdin_used+0x134e>
add    $0x8,%al
js     80515d6 <_IO_stdin_used+0x1352>
add    $0x8,%al
js     80515da <_IO_stdin_used+0x1356>
add    $0x8,%al
js     80515de <_IO_stdin_used+0x135a>
add    $0x8,%al
js     80515e2 <_IO_stdin_used+0x135e>
add    $0x8,%al
js     80515e6 <_IO_stdin_used+0x1362>
add    $0x8,%al
js     80515ea <_IO_stdin_used+0x1366>
add    $0x8,%al
js     80515ee <_IO_stdin_used+0x136a>
add    $0x8,%al
js     80515f2 <_IO_stdin_used+0x136e>
add    $0x8,%al
js     80515f6 <_IO_stdin_used+0x1372>
add    $0x8,%al
js     80515fa <_IO_stdin_used+0x1376>
add    $0x8,%al
js     80515fe <_IO_stdin_used+0x137a>
add    $0x8,%al
js     8051602 <_IO_stdin_used+0x137e>
add    $0x8,%al
js     8051606 <_IO_stdin_used+0x1382>
add    $0x8,%al
js     805160a <_IO_stdin_used+0x1386>
add    $0x8,%al
js     805160e <_IO_stdin_used+0x138a>
add    $0x8,%al
js     8051612 <_IO_stdin_used+0x138e>
add    $0x8,%al
js     8051616 <_IO_stdin_used+0x1392>
add    $0x8,%al
test   $0xa90804d2,%eax
rolb   %cl,(%eax,%ecx,1)
test   $0xa10804d2,%eax
rolb   %cl,(%eax,%ecx,1)
test   $0x180804d2,%eax
rolb   %cl,(%eax,%ecx,1)
test   $0x280804d2,%eax
aam    $0x4
or     %ch,-0x56f7fb2e(%ecx)
rolb   %cl,(%eax,%ecx,1)
test   $0x180804d2,%eax
rolb   %cl,(%eax,%ecx,1)
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
test   $0xa90804d2,%eax
rolb   %cl,(%eax,%ecx,1)
test   $0xa90804d2,%eax
rolb   %cl,(%eax,%ecx,1)
push   $0x780804d1
aam    $0x4
or     %bl,(%eax)
rolb   %cl,(%eax,%ecx,1)
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
test   $0x80804d2,%eax
aam    $0x4
or     %bl,(%eax)
rolb   %cl,(%eax,%ecx,1)
test   $0x180804d2,%eax
rolb   %cl,(%eax,%ecx,1)
test   $0x180804d2,%eax
rolb   %cl,(%eax,%ecx,1)
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
sbb    %dl,%dl
add    $0x8,%al
adc    $0x4,%dl
or     %ch,-0x7ff7fb2e(%ecx)
rolb   %cl,(%eax,%ecx,1)
mov    0xa00804d2,%eax
fadds  (%eax,%ecx,1)
mov    0x380804d8,%al
fadds  (%eax,%ecx,1)
mov    0x380804d8,%al
fadds  (%eax,%ecx,1)
mov    0x380804d8,%al
fadds  (%eax,%ecx,1)
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
cmp    %bl,%al
add    $0x8,%al
mov    0x804d8,%al
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %bl,0x15(%ecx)
add    $0x5156108,%eax
or     %ah,0x15(%edi)
add    $0x5048e08,%eax
or     %dh,0x5(%ebp,%edx,1)
or     %bh,0x5(%ebp,%edx,1)
or     %cl,-0x7cf7fafd(%edi)
adc    $0x805,%eax
add    %al,(%eax)
and    $0x25282073,%eax
jae    80518d4 <_IO_stdin_used+0x1650>
and    %ah,0x25000a73
jae    80518d3 <_IO_stdin_used+0x164f>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     8051927 <_IO_stdin_used+0x16a3>
je     8051934 <_IO_stdin_used+0x16b0>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     8051937 <_IO_stdin_used+0x16b3>
je     8051944 <_IO_stdin_used+0x16c0>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     805194e <_IO_stdin_used+0x16ca>
je     805195b <_IO_stdin_used+0x16d7>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051920 <_IO_stdin_used+0x169c>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     8051972 <_IO_stdin_used+0x16ee>
jb     8051979 <_IO_stdin_used+0x16f5>
and    %ah,0x75(%edx)
addr16 jae 805192b <_IO_stdin_used+0x16a7>
je     805197c <_IO_stdin_used+0x16f8>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    8051981 <_IO_stdin_used+0x16fd>
and    %al,0x50(%edi)
dec    %esp
jbe    8051955 <_IO_stdin_used+0x16d1>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     80519a4 <_IO_stdin_used+0x1720>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     805195a <_IO_stdin_used+0x16d6>
insb   (%dx),%es:(%edi)
popa
je     80519a3 <_IO_stdin_used+0x171f>
jb     8051960 <_IO_stdin_used+0x16dc>
cmp    $0x68,%al
je     80519b8 <_IO_stdin_used+0x1734>
jo     8051980 <_IO_stdin_used+0x16fc>
das
das
outsb  %ds:(%si),(%dx)
jne    805197a <_IO_stdin_used+0x16f6>
outsl  %ds:(%esi),(%dx)
jb     80519b6 <_IO_stdin_used+0x1732>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 80519c8 <_IO_stdin_used+0x1744>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    8051989 <_IO_stdin_used+0x1705>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     80519ed <_IO_stdin_used+0x1769>
popa
jb     80519de <_IO_stdin_used+0x175a>
cmp    (%eax),%ah
jns    80519ec <_IO_stdin_used+0x1768>
jne    805199f <_IO_stdin_used+0x171b>
popa
jb     80519e7 <_IO_stdin_used+0x1763>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8051a07 <_IO_stdin_used+0x1783>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     8051a11 <_IO_stdin_used+0x178d>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     8051a2e <_IO_stdin_used+0x17aa>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     8051a2d <_IO_stdin_used+0x17a9>
outsb  %ds:(%esi),(%dx)
je     80519eb <_IO_stdin_used+0x1767>
jo     8051a32 <_IO_stdin_used+0x17ae>
jb     8051a3c <_IO_stdin_used+0x17b8>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     8051a4c <_IO_stdin_used+0x17c8>
je     8051a59 <_IO_stdin_used+0x17d5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051a1e <_IO_stdin_used+0x179a>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8051a6c <_IO_stdin_used+0x17e8>
je     8051a79 <_IO_stdin_used+0x17f5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051a3e <_IO_stdin_used+0x17ba>
and    %ah,0x250a2c73
jae    8051a46 <_IO_stdin_used+0x17c2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8051a90 <_IO_stdin_used+0x180c>
je     8051a9d <_IO_stdin_used+0x1819>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051a62 <_IO_stdin_used+0x17de>
and    %ah,0x250a2c73
jae    8051a6a <_IO_stdin_used+0x17e6>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8051ab8 <_IO_stdin_used+0x1834>
je     8051ac5 <_IO_stdin_used+0x1841>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051a8a <_IO_stdin_used+0x1806>
and    %ah,0x250a2c73
jae    8051a92 <_IO_stdin_used+0x180e>
and    %ah,0x25202c73
jae    8051a9a <_IO_stdin_used+0x1816>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8051ae4 <_IO_stdin_used+0x1860>
je     8051af1 <_IO_stdin_used+0x186d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051ab6 <_IO_stdin_used+0x1832>
and    %ah,0x250a2c73
jae    8051abe <_IO_stdin_used+0x183a>
and    %ah,0x25202c73
jae    8051ac6 <_IO_stdin_used+0x1842>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8051b14 <_IO_stdin_used+0x1890>
je     8051b21 <_IO_stdin_used+0x189d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051ae6 <_IO_stdin_used+0x1862>
and    %ah,0x250a2c73
jae    8051aee <_IO_stdin_used+0x186a>
and    %ah,0x25202c73
jae    8051af6 <_IO_stdin_used+0x1872>
and    %ah,0x250a2c73
jae    8051afe <_IO_stdin_used+0x187a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8051b48 <_IO_stdin_used+0x18c4>
je     8051b55 <_IO_stdin_used+0x18d1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8051b1a <_IO_stdin_used+0x1896>
and    %ah,0x250a2c73
jae    8051b22 <_IO_stdin_used+0x189e>
and    %ah,0x25202c73
jae    8051b2a <_IO_stdin_used+0x18a6>
and    %ah,0x250a2c73
jae    8051b32 <_IO_stdin_used+0x18ae>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
adc    %ah,%bh
add    $0x8,%al
sbb    %ah,%bh
add    $0x8,%al
pop    %eax
out    %eax,$0x4
or     %ah,-0x7f7fb19(%eax)
out    %eax,$0x4
or     %dl,-0x18(%eax)
add    $0x8,%al
mov    $0x300804e8,%eax
jmp    edd5233e <optarg+0xe5cfd11a>
add    $0x8,%al
push   $0x430804e6
outsl  %ds:(%esi),(%dx)
jo     8051bbd <_IO_stdin_used+0x1939>
jb     8051baf <_IO_stdin_used+0x192b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8051bd1 <_IO_stdin_used+0x194d>
popa
jb     8051bc2 <_IO_stdin_used+0x193e>
and    %al,0x6f(%esi)
jne    8051bd0 <_IO_stdin_used+0x194c>
fs
popa
je     8051bcf <_IO_stdin_used+0x194b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8051bee <_IO_stdin_used+0x196a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:0x6e(%ecx)
jbe    8051be5 <_IO_stdin_used+0x1961>
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     8051bb1 <_IO_stdin_used+0x192d>
and    $0x6f662073,%eax
jb     8051bb8 <_IO_stdin_used+0x1934>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    8051c11 <_IO_stdin_used+0x198d>
jne    8051c17 <_IO_stdin_used+0x1993>
and    %ah,0x72(%ecx)
addr16 jne 8051c17 <_IO_stdin_used+0x1993>
outsb  %gs:(%esi),(%dx)
je     8051bce <_IO_stdin_used+0x194a>
and    $0x6f662073,%eax
jb     8051bd5 <_IO_stdin_used+0x1951>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     8051c3a <_IO_stdin_used+0x19b6>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x752f0073,%eax
jae    8051c50 <_IO_stdin_used+0x19cc>
das
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %al,-0x70(%eax)
add    $0x8,%al
xor    %dl,-0x711ff7fc(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %ebx,(%ebx)
add    (%ebx),%edi
pusha
add    $0x0,%al
add    %cl,0x4c000000(%ebx)
jb     8051c22 <_IO_stdin_used+0x199e>
(bad)
jl     8051c2a <_IO_stdin_used+0x19a6>
add    %al,(%eax)
fdivl  -0x1(%esi)
pushl  (%eax)
add    $0x802c0000,%eax
(bad)
jmp    *0xc000004(%eax)
mov    %bh,%bh
call   *(%eax)
add    $0x8ddc0000,%eax
(bad)
call   *0x5(%eax)
add    %al,(%eax)
pop    %esp
mov    %edi,%?
jmp    *-0x6f640000(%ebp,%eax,1)
(bad)
(bad)
cld
add    $0x90dc0000,%eax
(bad)
call   *(%esi,%eax,1)
add    %al,(%eax)
cmp    $0x94,%al
(bad)
ljmp   *0x0(%esi,%eax,1)
add    %bl,-0x1(%esp,%edx,4)
incl   -0x53fffffa(%eax)
xchg   %eax,%esp
(bad)
jmp    *-0x64c40000(%esi,%eax,1)
(bad)
ljmp   *(%edi,%eax,1)
add    %al,(%eax)
dec    %esp
fwait
(bad)
incl   0x7(%eax)
add    %al,(%eax)
jl     8051c26 <_IO_stdin_used+0x19a2>
(bad)
pushl  0x7(%eax)
add    %al,(%eax)
mov    %ds,0x784ff(%edi,%edi,8)
add    %bl,0x798ffff(%esp,%ebx,4)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
popf
(bad)
inc    %esp
pop    %es
add    %al,(%eax)
or     $0x9e,%al
(bad)
lcall  *(%eax)
or     %al,(%eax)
add    %bl,-0x1(%esi,%ebx,4)
incl   0x0(%eax,%ecx,1)
add    %cl,%ah
sahf
(bad)
incl   -0x60d40000(%eax,%ecx,1)
(bad)
jmp    *-0x60940000(%eax,%ecx,1)
(bad)
dec    %eax
or     %al,(%eax)
add    %bl,0x8e8ffff(%edi,%ebx,4)
add    %al,(%eax)
sbb    $0xa0,%al
(bad)
incl   0x9(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    0x964ffff,%al
add    %al,(%eax)
pushf
mov    0x980ffff,%al
add    %al,(%eax)
mov    %fs,0x9c0ffff(%ecx)
add    %al,(%eax)
sbb    $0xa2,%al
(bad)
(bad)
cld
or     %eax,(%eax)
add    %ch,(%edx,%eiz,4)
(bad)
call   *(%eax)
or     (%eax),%al
add    %bh,(%edx,%eiz,4)
(bad)
jmp    *(%edx,%ecx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    %al,0xa48ffff
add    %al,(%eax)
sub    $0xa3,%al
(bad)
pushl  -0x5c240000(%edx,%ecx,1)
(bad)
dec    %eax
or     (%eax),%al
add    %ch,%ah
movsb  %ds:(%esi),%es:(%edi)
(bad)
lcall  *(%ebx,%ecx,1)
add    %al,(%eax)
cld
movsb  %ds:(%esi),%es:(%edi)
(bad)
pushl  (%eax)
or     (%eax),%eax
add    %cl,0xb44ffff(,%eiz,4)
add    %al,(%eax)
sbb    $0xa5,%al
(bad)
lcall  *0xb(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
movsl  %ds:(%esi),%es:(%edi)
(bad)
(bad)
jl     8051d59 <_IO_stdin_used+0x1ad5>
add    %al,(%eax)
int3
movsl  %ds:(%esi),%es:(%edi)
(bad)
(bad)
mov    $0xdc00000b,%eax
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
push   %esp
or     (%eax),%eax
add    %bh,(%edi,%eiz,4)
(bad)
(bad)
cmp    $0xc,%al
add    %al,(%eax)
jl     8051d11 <_IO_stdin_used+0x1a8d>
(bad)
lcall  *0x0(%esp,%ecx,1)
add    %bl,%ah
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
lcall  *0x3c00000c(%eax)
test   $0xff,%al
call   *%eax
or     $0x0,%al
add    %bh,0xd0cffff(%eax,%ebp,4)
add    %al,(%eax)
cld
test   $0xff,%al
pushl  (%eax)
or     $0xa92c0000,%eax
(bad)
incl   0x0(%ebp,%ecx,1)
add    %ch,-0x1(%edx,%ebp,4)
lcall  *-0x55040000(%ebp,%ecx,1)
(bad)
call   *%eax
or     $0xabcc0000,%eax
(bad)
decl   (%eax)
push   %cs
add    %al,(%eax)
pop    %esp
lods   %ds:(%esi),%eax
(bad)
(bad)
js     8051dc4 <_IO_stdin_used+0x1b40>
add    %al,(%eax)
sub    $0xaf,%al
(bad)
call   *%esp
push   %cs
add    %al,(%eax)
cmp    $0xaf,%al
(bad)
(bad)
call   84051dd7 <optarg+0x7bffcbb3>
scas   %es:(%edi),%eax
(bad)
decl   (%edi,%ecx,1)
add    %al,(%eax)
in     (%dx),%al
mov    $0xff,%al
decl   0x0(%edi,%ecx,1)
add    %ch,(%ecx,%esi,4)
(bad)
(bad)
js     8051ded <_IO_stdin_used+0x1b69>
add    %al,(%eax)
pop    %esp
mov    $0xff,%cl
call   *-0x53fffff1(%eax)
mov    $0xff,%cl
pushl  -0x4e040000(%edi,%ecx,1)
(bad)
jmp    *%eax
sldt   (%eax)
sbb    $0xb2,%al
(bad)
incl   (%eax)
adc    %al,(%eax)
add    %cl,%ah
mov    $0xff,%dl
incl   0x10(%eax)
add    %al,(%eax)
cld
mov    $0xff,%dl
ljmp   *0x0(%eax,%edx,1)
add    %ch,%ah
mov    $0xff,%bl
jmp    *-0x41e40000(%eax,%edx,1)
(bad)
(bad)
call   c4051e31 <optarg+0xbbffcc0d>
mov    $0x1128ffff,%edi
add    %al,(%eax)
cld
mov    $0x115cffff,%edi
add    %al,(%eax)
sbb    $0xc0,%al
(bad)
pushl  0x11(%eax)
add    %al,(%eax)
cmp    $0xc0,%al
(bad)
incl   -0x3f840000(%ecx,%edx,1)
(bad)
ljmp   *-0x63ffffef(%eax)
sar    $0xff,%bh
mov    $0xdc000011,%esp
sar    $0xff,%bh
loopne 8051e67 <_IO_stdin_used+0x1be3>
add    %al,(%eax)
cmp    $0xc1,%al
(bad)
call   *(%edx,%edx,1)
add    %al,(%eax)
sbb    $0xc2,%al
(bad)
call   *0x12(%eax)
add    %al,(%eax)
dec    %esp
ret    $0xffff
push   $0xdc000012
ret    $0xffff
pushf
adc    (%eax),%al
add    %bh,%ah
ret    $0xffff
mov    $0x12,%al
add    %al,(%eax)
sbb    $0xc3,%al
(bad)
inc    %esp
adc    (%eax),%al
add    %bh,(%ebx,%eax,8)
(bad)
(bad)
fcoms  (%edx)
add    %al,(%eax)
pop    %esp
ret
(bad)
(bad)
in     (%dx),%al
adc    (%eax),%al
add    %cl,0x130cffff(%ebx,%eax,8)
add    %al,(%eax)
mov    $0x2cffffc3,%esp
adc    (%eax),%eax
add    %ch,%ah
ret
(bad)
incl   0x0(%ebx,%edx,1)
add    %bl,(%esp,%eax,8)
(bad)
lcall  *0x0(%ebx,%edx,1)
add    %cl,%ah
(bad)
(bad)
incl   -0x3ffffed(%eax)
(bad)
(bad)
lcall  *0x2c000013(%eax)
(bad)
mov    $0x13,%al
add    %al,(%eax)
pop    %esp
(bad)
enter  $0x13,$0x0
or     $0xc6,%al
(bad)
(bad)
in     (%dx),%al
adc    (%eax),%eax
add    %cl,-0x1(%esi,%eax,8)
incl   (%esp,%edx,1)
add    %al,(%eax)
mov    %es,%esi
(bad)
lcall  *(%esp,%edx,1)
add    %al,(%eax)
int3
(bad)
(bad)
pushl  (%esp,%edx,1)
add    %al,(%eax)
in     (%dx),%al
(bad)
(bad)
decl   0x14(%eax)
add    %al,(%eax)
or     $0xc7,%al
(bad)
lcall  *0x0(%esp,%edx,1)
add    %ch,(%edi,%eax,8)
(bad)
pushl  0x14(%eax)
add    %al,(%eax)
dec    %esp
(bad)
(bad)
incl   -0x37440000(%esp,%edx,1)
(bad)
(bad)
fcoml  (%eax,%eax,1)
add    %ch,%ah
enter  $0xffff,$0xf4
adc    $0x0,%al
add    %bl,-0x1(%esi,%ecx,8)
call   *-0x53ffffeb(%eax)
into
(bad)
ljmp   *0xc000015(%eax)
iret
(bad)
dec    %esp
adc    $0xcf4c0000,%eax
(bad)
jmp    *%esp
adc    $0xcffc0000,%eax
(bad)
decl   (%eax)
push   %ss
add    %al,(%eax)
sub    $0xd0,%al
(bad)
ljmp   *(%esi,%edx,1)
add    %al,(%eax)
pop    %esp
sar    %bh
call   *0x16(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %bh
jmp    *0x0(%esi,%edx,1)
add    %bh,0x1694ffff(%eax,%edx,8)
add    %al,(%eax)
cld
sar    %bh
inc    %eax
push   %ss
add    %al,(%eax)
pop    %esp
sar    %edi
push   %eax
push   %ss
add    %al,(%eax)
lods   %ds:(%esi),%al
sar    %edi
call   *(%edi,%edx,1)
add    %al,(%eax)
(bad)
(bad)
pushl  (%edi,%edx,1)
add    %al,(%eax)
or     $0xd2,%al
(bad)
call   *0x17(%eax)
add    %al,(%eax)
cmp    $0xd2,%al
(bad)
pushl  0x17(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %cl,%bh
call   *-0x43ffffe9(%eax)
sar    %cl,%bh
jmp    *-0x2d040000(%edi,%edx,1)
(bad)
dec    %eax
pop    %ss
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %cl,%edi
(bad)
in     (%dx),%al
pop    %ss
add    %al,(%eax)
mov    %ss,%esp
(bad)
pushl  (%eax,%ebx,1)
add    %al,(%eax)
in     (%dx),%al
aam    $0xff
jmp    *0x18(%eax)
add    %al,(%eax)
sbb    $0xd5,%al
(bad)
pushl  0x0(%eax,%ebx,1)
add    %ch,0x18ccffff(%ebp,%edx,8)
add    %al,(%eax)
sub    $0xd8,%al
(bad)
(bad)
cmp    %bl,(%ecx)
add    %al,(%eax)
or     $0xd9,%al
(bad)
jmp    *-0x26b40000(%ecx,%ebx,1)
(bad)
(bad)
mov    $0x6c000019,%esp
fcos
call   *%esp
sbb    %eax,(%eax)
add    %ch,-0x1(%edx,%ebx,8)
ljmp   *(%edx,%ebx,1)
add    %al,(%eax)
or     $0xdb,%al
(bad)
lcall  *0x0(%edx,%ebx,1)
add    %ch,(%esp,%ebx,8)
(bad)
pushl  -0x63ffffe6(%eax)
fdivr  %st,%st(7)
push   %eax
sbb    (%eax),%al
add    %ch,%ah
fdivr  %st,%st(7)
ljmp   *(%ebx,%ebx,1)
add    %al,(%eax)
sbb    $0xdd,%al
(bad)
decl   0x1b(%eax)
add    %al,(%eax)
cld
fdivrp %st,%st(7)
decl   0x7c00001b(%eax)
(bad)
jmp    *%eax
sbb    (%eax),%eax
add    %bl,0x1bfcffff(%edi,%ebx,8)
add    %al,(%eax)
int3
(bad)
call   *(%eax)
sbb    $0x0,%al
add    %cl,0x1c50ffff(%ebx,%eiz,8)
add    %al,(%eax)
sub    $0xe4,%al
(bad)
lcall  *-0x73ffffe4(%eax)
in     $0xff,%eax
incl   -0x1a040000(,%ebx,1)
(bad)
incl   0x1d(%eax)
add    %al,(%eax)
or     $0xe6,%al
(bad)
call   *0x0(%ebp,%ebx,1)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805208f <_IO_stdin_used+0x1e0b>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0xff6d,$0xff
nop
add    $0x0,%al
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     80520af <_IO_stdin_used+0x1e2b>
js     80520ad <_IO_stdin_used+0x1e29>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
test   %bh,-0x1(%ebx)
call   *%edi
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x2900e48
rolb   %cl,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
(bad)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
xchg   %eax,%edi
add    (%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0x0,%al
add    %al,(%eax)
hlt
test   %bh,%bh
inc    %edi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
rolb   (%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jno    805214e <_IO_stdin_used+0x1eca>
lcall  *0x8(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x50,%eax
lock add %al,(%eax)
add    %al,0x75ffff(%eax,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x66300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%ebx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %al,0x0(%ecx,%eax,1)
add    %dh,0x3bffff88(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pushf
add    %eax,(%eax)
add    %bl,0x3cffff8a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%eax)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,-0x75400000(%ecx,%eax,1)
(bad)
call   *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x60,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
or     $0x2,%al
add    %al,(%eax)
enter  $0xff8d,$0xff
sbb    $0x0,%eax
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %dl,%ah
(bad)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%edx,%ecx,1)
add    $0x49,%al
or     0xa(%ebp),%ebx
push   %cs
add    $0x43,%al
or     0xe(%ebp),%eax
add    $0x0,%al
test   %al,(%eax)
add    %al,(%eax)
inc    %esp
add    (%eax),%al
add    %al,(%eax)
mov    %edi,%?
incl   0x6(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
pop    %ebp
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
xor    %eax,(%edx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
int3
add    (%eax),%al
add    %cl,(%eax)
xchg   %eax,%esp
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
loopne 805235c <_IO_stdin_used+0x20d8>
add    %al,(%eax)
add    $0x94,%al
(bad)
pushl  (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
clc
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %al,(%ebx)
add    %al,(%eax)
add    $0x95,%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%ebx,%eax,1)
add    %al,(%eax)
add    %dl,0xaffff(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%ebx)
add    %al,(%eax)
cld
xchg   %eax,%esp
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%edx
add    %al,(%eax)
add    %fs:(%eax),%eax
add    %ah,-0x6d00006b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x62300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,-0x13fffffd(%eax)
xchg   %eax,%ebp
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
in     $0x3,%al
add    %al,(%eax)
adc    %dl,0x6cffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
and    $0x4,%al
add    %al,(%eax)
inc    %eax
xchg   %eax,%esi
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %al,0x32ffff96(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
push   $0x9c000004
xchg   %eax,%esi
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,-0x53fffffc(%eax)
xchg   %eax,%esi
(bad)
(bad)
jge    805250a <_IO_stdin_used+0x2286>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
loopne 805255e <_IO_stdin_used+0x22da>
add    %al,(%eax)
aam    $0x96
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4502(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
add    $0x5,%al
add    %al,(%eax)
add    %dl,0x2cffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %al,0x97140000
(bad)
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
pusha
add    $0x97c40000,%eax
(bad)
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pushf
add    $0x98180000,%eax
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x14000005(%eax)
cwtl
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
les    0x98100000,%eax
(bad)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0xe8000000
add    $0x981c0000,%eax
(bad)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
push   %esp
push   %es
add    %al,(%eax)
jo     805266a <_IO_stdin_used+0x23e6>
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
push   $0xc000006
cltd
(bad)
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xc8000006,%esp
cltd
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
push   %es
add    %al,(%eax)
les    0x8ffff(%ecx),%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     $0x6,%al
add    %al,(%eax)
rcrb   $0x0,0x8ffff(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%al
push   %es
add    %al,(%eax)
mov    $0x49ffff99,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bl,(%edi,%eax,1)
add    %al,(%eax)
call   5f052736 <optarg+0x56ffd512>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %bl,0x7(%eax)
add    %al,(%eax)
or     $0x9a,%al
(bad)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %dl,-0x65200000(%edi,%eax,1)
(bad)
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
faddl  (%edi)
add    %al,(%eax)
clc
lcall  $0x0,$0x3cffff
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,%ah
pop    %es
add    %al,(%eax)
sbb    %bl,0x51ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa450204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bh,(%eax)
or     %al,(%eax)
add    %bh,(%ebx,%ebx,4)
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,0x8(%eax)
add    %al,(%eax)
fwait
fwait
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ch,-0x64580000(%eax,%ecx,1)
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
rorb   (%eax)
add    %al,(%eax)
les    0x24ffff(%ebx),%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,%ah
or     %al,(%eax)
add    %ah,%al
fwait
(bad)
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,(%ecx,%ecx,1)
add    %al,(%eax)
enter  $0xff9c,$0xff
mov    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
jo     80529f3 <_IO_stdin_used+0x276f>
add    %al,(%eax)
and    $0x9d,%al
(bad)
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %ch,-0x43fffff7(%eax)
popf
(bad)
decl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bl,(%eax)
or     (%eax),%al
add    %bl,%ah
sahf
(bad)
inc    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jnp    8052abb <_IO_stdin_used+0x2837>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    8052ace <_IO_stdin_used+0x284a>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx,%ecx,1)
add    %dl,-0x60(%eax)
(bad)
incl   0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x4c00000a(%eax)
mov    0x3cffff,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
or     (%eax),%al
add    %ch,-0x60(%eax)
(bad)
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
or     (%eax),%al
add    %bl,0x3fffffa1(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
sbb    %cl,(%ebx)
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    0x2dffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
xor    %cl,(%ebx)
add    %al,(%eax)
les    0x42ffff(%ecx),%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5a4fe(%ebx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
or     (%eax),%eax
add    %dh,%al
mov    0x4fffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
orb    $0x0,(%ebx)
add    %dl,(%edx,%eiz,4)
(bad)
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,0x1400000b(%eax)
mov    %al,0xadffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
loopne 8052c65 <_IO_stdin_used+0x29e1>
add    %al,(%eax)
test   %ah,0x26ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
or     $0xc,%al
add    %al,(%eax)
mov    %ah,0xe2ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%esp,%ecx,1)
add    %al,-0x5d(%eax)
(bad)
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %cl,(%eax,%eax,1)
add    %ch,0x196ffff(,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %cl,%al
or     $0x0,%al
add    %cl,0x36ffff(%esi,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
or     $0x0,%al
add    %bl,0x11ffffae(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
or     $0xaea40000,%eax
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,-0x51500000(,%ecx,1)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
dec    %eax
or     $0xaecc0000,%eax
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebp,%ecx,1)
add    %bl,%al
scas   %es:(%edi),%al
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
orb    $0xff,0xaef40000
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0xd,%ah
add    %al,(%eax)
and    %ch,0xd4ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,%al
or     $0xafc40000,%eax
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
or     %cl,(%esi)
add    %al,(%eax)
fsubrl 0x84ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0xe,%al
add    %al,(%eax)
cmp    %dh,0x1affff(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
push   %cs
add    %al,(%eax)
inc    %esp
mov    $0xff,%al
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi,%ecx,1)
add    %dl,-0x50(%eax)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0xe(%eax)
add    %al,(%eax)
pop    %esp
mov    $0xff,%al
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    %cs,(%esi)
add    %al,(%eax)
push   $0x2dffffb0
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,-0x4f880000(%esi,%ecx,1)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,%ah
push   %cs
add    %al,(%eax)
mov    %dh,0x23ffff(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     $0xe,%al
add    %al,(%eax)
mov    0x2bffffb0,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cld
push   %cs
add    %al,(%eax)
mov    $0xb0ffffb0,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
and    %cl,(%edi)
add    %al,(%eax)
inc    %esp
mov    $0xff,%cl
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    %cl,(%edi)
add    %al,(%eax)
pop    %esp
mov    $0xff,%cl
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
push   %eax
sldt   (%eax)
je     8052f7f <_IO_stdin_used+0x2cfb>
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
push   $0x8c00000f
mov    $0xff,%cl
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    %cs,(%edi)
add    %al,(%eax)
sbb    %dh,0x33ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sldt   (%eax)
inc    %eax
mov    $0xff,%dl
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x6800000f,%esp
mov    $0xff,%dl
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
aam    $0xf
add    %al,(%eax)
nop
mov    $0xff,%dl
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%al
sldt   (%eax)
pushf
mov    $0xff,%dl
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
sldt   (%eax)
test   $0xb2,%al
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
adc    %al,(%eax)
add    %dh,0x18ffff(%edx,%esi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,(%eax,%edx,1)
add    %al,(%eax)
(bad)
mov    $0xff,%dl
ljmp   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x1f00e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
jl     8053106 <_IO_stdin_used+0x2e82>
add    %al,(%eax)
fdivs  0x23ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %dl,-0x4c100000(%eax,%edx,1)
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
xor    %dl,(%ecx)
add    %al,(%eax)
les    0x4affff(%eax),%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,0x11(%eax)
add    %al,(%eax)
cld
mov    $0x53ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %eax,(%eax)
add    %bh,(%eax)
mov    $0x33ffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
test   %dl,(%ecx)
add    %al,(%eax)
pusha
mov    $0xa7ffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
test   $0x11,%al
add    %al,(%eax)
in     (%dx),%al
mov    $0x25ffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
int3
adc    %eax,(%eax)
add    %bh,%al
mov    $0x2effff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
lock adc %eax,(%eax)
add    %al,(%edx,%edi,4)
(bad)
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    $0x12,%al
add    %al,(%eax)
add    %bh,0x44ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
xor    $0x12,%al
add    %al,(%eax)
and    %bh,0x38ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
pusha
adc    (%eax),%al
add    %dh,(%edx,%edi,4)
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
nop
adc    (%eax),%al
add    %ah,-0x1(%edx,%edi,4)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x12,%ah
add    %al,(%eax)
nop
mov    $0x29ffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %dl,%ah
adc    (%eax),%al
add    %ah,0x25ffffba(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
lock adc (%eax),%al
add    %dh,0x29ffff(%edx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,(%eax)
adc    (%eax),%eax
add    %al,%ah
mov    $0x24ffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,(%eax)
adc    (%eax),%eax
add    %dl,%ah
mov    $0x46ffff,%edx
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx,%edx,1)
add    %dl,(%eax)
mov    $0x37ffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
push   $0x2c000013
mov    $0x6cffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4502(%ebx)
add    0xe(%edx),%ah
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,-0x44880000(%ebx,%edx,1)
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,%ah
adc    (%eax),%eax
add    %dl,-0x44(%eax)
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,0x28ffff(%esp,%edi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,(%esp,%edx,1)
add    %al,(%eax)
mov    0x8cffffbc,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x6c000000
adc    $0x0,%al
add    %bl,%al
mov    $0x275ffff,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
dec    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
nop
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   $0xd8000000
adc    $0x0,%al
add    %ch,%ah
mov    $0xddffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2400e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
adc    $0xbf600000,%eax
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
adc    $0xbf880000,%eax
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,0x0(%ebp,%edx,1)
add    %dl,-0xc000041(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
int3
adc    $0xc0380000,%eax
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     805366b <_IO_stdin_used+0x33e7>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bh,%ah
adc    $0xc0a80000,%eax
(bad)
lcall  *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
push   %ss
add    %al,(%eax)
je     805368f <_IO_stdin_used+0x340b>
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,-0x5bffffea(%eax)
sar    $0xff,%edi
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
int3
push   %ss
add    %al,(%eax)
mov    $0x2fffffc1,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xa(%edx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
call   d405377b <optarg+0xcbffe557>
sar    $0xff,%edi
(bad)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
cli
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %ch,(%eax)
pop    %ss
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ret
(bad)
(bad)
js     80537aa <_IO_stdin_used+0x3526>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     80537cb <_IO_stdin_used+0x3547>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %al,-0x6bffffe9(%eax)
ret
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x3c680000(%edi,%edx,1)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x17,%al
add    %al,(%eax)
mov    $0xc3,%ah
(bad)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %dh,%al
pop    %ss
add    %al,(%eax)
xor    $0xc7,%al
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x38000000
sbb    %al,(%eax)
add    %cl,0x157ffff(%edi,%eax,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     80538db <_IO_stdin_used+0x3657>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8053912 <_IO_stdin_used+0x368e>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,-0x37800000(%eax,%ebx,1)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,%al
sbb    %al,(%eax)
add    %dh,0x2ffff(%eax,%ecx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
hlt
sbb    %al,(%eax)
add    %dh,0x3cffffc8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0x10
pushf
add    $0x8,%al
fwait
fwait
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
cmp    %cl,0xd0804(%esi)
add    %al,(%eax)
pop    %esp
add    0x1908,%al
add    %cl,(%eax)
dec    %edi
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x4f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
inc    %eax
xchg   %eax,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %dl,(%eax)
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
push   %ecx
add    (%eax),%eax
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
push   %eax
add    $0x208,%eax
add    %al,0x2(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bh,%al
mov    (%eax,%ecx,1),%eax
adc    %eax,(%eax)
add    %al,(%eax)
mov    $0x1208048b,%eax
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x38(%edi)
mov    (%eax,%ecx,1),%eax
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x6e(%edi)
mov    (%eax,%ecx,1),%al
add    %al,(%eax)
adc    $0x4f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x72(%esi)
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8054fdd <_IO_stdin_used+0x4d59>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
push   %es
nop
add    $0x8,%al
push   %ss
nop
add    $0x8,%al
es
nop
add    $0x8,%al
ss
nop
add    $0x8,%al
inc    %esi
nop
add    $0x8,%al
push   %esi
nop
add    $0x8,%al
xchg   %ax,%ax
add    $0x8,%al
jbe    805501e <_IO_stdin_used+0x4d9a>
add    $0x8,%al
xchg   %dl,-0x6f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
nop
add    $0x8,%al
mov    $0x90,%dh
add    $0x8,%al
(bad)
nop
add    $0x8,%al
(bad)
nop
add    $0x8,%al
out    %al,$0x90
add    $0x8,%al
notb   -0x6ef9f7fc(%eax)
add    $0x8,%al
push   %ss
xchg   %eax,%ecx
add    $0x8,%al
es
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    805505f <_IO_stdin_used+0x4ddb>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    80550a0 <_IO_stdin_used+0x4e1c>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
popf
adc    0x513e108,%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,0x1000805(%ecx,%edx,2)
add    %al,(%eax)
pusha
push   %edx
add    $0x108,%eax
add    %ah,-0xb(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
lea    -0x34(%edx,%eiz,8),%esp
