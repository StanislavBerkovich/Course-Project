das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %ah,0x452b0052(%edi)
popf
pusha
in     $0xb3,%eax
stc
and    %bh,%dh
pop    %edx
push   %esp
popa
fisttpl 0x3d(%ebx)
cmp    $0x25,%al
add    (%eax),%eax
add    %al,(%eax)
cmp    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%eax,%eax,2)
dec    %eax
add    %ah,(%ecx,%ebp,2)
sbb    %edx,(%edx)
cmp    (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %edx
add    %al,(%eax)
add    %ch,(%ecx)
sbb    $0x50bc1c8c,%eax
jbe    8048176 <__snprintf_chk@plt-0xada>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804818d <__snprintf_chk@plt-0xac3>
dec    %ebx
jecxz  80481a4 <__snprintf_chk@plt-0xaac>
xchg   %eax,%esi
mov    0x62e59789,%al
inc    %ecx
cmc
xor    %esp,%eax
notl   (%edx)
xchg   %eax,%ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ja     80482d2 <__snprintf_chk@plt-0x97e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jl     8048373 <__snprintf_chk@plt-0x8dd>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ecx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fildl  (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ss
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
std
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    %eax,(%eax)
add    %al,%al
and    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x2(%edi)
add    %al,(%eax)
pusha
and    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %cl,0x64000001(%esi)
and    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,0x2(%edx)
add    %al,(%eax)
andb   $0x5,(%ecx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    $0xea,%al
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verr   -0x80000000(%ebp)
and    %eax,0x408
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bl,%al
add    %eax,(%eax)
add    %ah,0x21(%eax)
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %cl,0x0(%edi)
add    %al,(%eax)
mov    0x4080521,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    8048697 <__snprintf_chk@plt-0x5b9>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    80486a5 <__snprintf_chk@plt-0x5ab>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    80486b2 <__snprintf_chk@plt-0x59e>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jo     80486be <__snprintf_chk@plt-0x592>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     80486c5 <__snprintf_chk@plt-0x58b>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     80486d7 <__snprintf_chk@plt-0x579>
outsl  %ds:(%esi),(%dx)
ja     80486c9 <__snprintf_chk@plt-0x587>
add    %dh,0x74(%ebx)
jb     80486d9 <__snprintf_chk@plt-0x577>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     80486dc <__snprintf_chk@plt-0x574>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     80486ec <__snprintf_chk@plt-0x564>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     80486f8 <__snprintf_chk@plt-0x558>
gs
js     80486fb <__snprintf_chk@plt-0x555>
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    80486f2 <__snprintf_chk@plt-0x55e>
imul   $0x6f727265,%fs:0x0(%edx),%esi
jb     8048697 <__snprintf_chk@plt-0x5b9>
pop    %edi
pop    %edi
jae    804870f <__snprintf_chk@plt-0x541>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     80486bf <__snprintf_chk@plt-0x591>
pop    %edi
gs
js     804872c <__snprintf_chk@plt-0x524>
je     80486c5 <__snprintf_chk@plt-0x58b>
jo     8048739 <__snprintf_chk@plt-0x517>
outsl  %ds:(%esi),(%dx)
addr16 jb 804872c <__snprintf_chk@plt-0x524>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048748 <__snprintf_chk@plt-0x508>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048761 <__snprintf_chk@plt-0x4ef>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     80486f4 <__snprintf_chk@plt-0x55c>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048771 <__snprintf_chk@plt-0x4df>
jb     804876b <__snprintf_chk@plt-0x4e5>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     804876b <__snprintf_chk@plt-0x4e5>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048773 <__snprintf_chk@plt-0x4dd>
je     8048710 <__snprintf_chk@plt-0x540>
jb     804877f <__snprintf_chk@plt-0x4d1>
imul   $0x72655f5f,%fs:0x0(%edx),%esi
jb     804878a <__snprintf_chk@plt-0x4c6>
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
data16
jo     80487ac <__snprintf_chk@plt-0x4a4>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     80487aa <__snprintf_chk@plt-0x4a6>
outsl  %ds:(%esi),(%dx)
jne    80487bd <__snprintf_chk@plt-0x493>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80487c5 <__snprintf_chk@plt-0x48b>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsw  %fs:(%esi),(%dx)
jo     80487d2 <__snprintf_chk@plt-0x47e>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x6c66755f,0x5f(%eax,%eax,1),%esi
outsl  %ds:(%esi),(%dx)
ja     8048782 <__snprintf_chk@plt-0x4ce>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048805 <__snprintf_chk@plt-0x44b>
outsb  %ds:(%esi),(%dx)
jbe    80487a3 <__snprintf_chk@plt-0x4ad>
pop    %edi
pop    %edi
data16
jb     804880d <__snprintf_chk@plt-0x443>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     8048826 <__snprintf_chk@plt-0x42a>
add    %bl,0x5f(%edi)
jae    8048827 <__snprintf_chk@plt-0x429>
jo     804882d <__snprintf_chk@plt-0x423>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
jae    804882a <__snprintf_chk@plt-0x426>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     804883e <__snprintf_chk@plt-0x412>
jo     8048845 <__snprintf_chk@plt-0x40b>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x77(%esi)
jb     804884b <__snprintf_chk@plt-0x405>
je     8048849 <__snprintf_chk@plt-0x407>
add    %bl,0x5f(%edi)
data16
jo     804884f <__snprintf_chk@plt-0x401>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 804885f <__snprintf_chk@plt-0x3f1>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048884 <__snprintf_chk@plt-0x3cc>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048880 <__snprintf_chk@plt-0x3d0>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x69620034,%fs:0x36(%edx),%esi
69
outsb  %ds:(%esi),(%dx)
fs
je     8048892 <__snprintf_chk@plt-0x3be>
js     80488a3 <__snprintf_chk@plt-0x3ad>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x6e65706f,0x0(%esi),%ebp
popa
je     8048873 <__snprintf_chk@plt-0x3dd>
xor    $0x0,%al
data16
ja     80488b4 <__snprintf_chk@plt-0x39c>
imul   $0x6f6c6e75,0x5f(%ebp,%eiz,2),%esi
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     80488b6 <__snprintf_chk@plt-0x39a>
insl   (%dx),%es:(%edi)
jo     8048856 <__snprintf_chk@plt-0x3fa>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80488d6 <__snprintf_chk@plt-0x37a>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x766f5f5f,0x0(%esi),%ebp
gs
jb     80488d5 <__snprintf_chk@plt-0x37b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048873 <__snprintf_chk@plt-0x3dd>
data16
jo     80488eb <__snprintf_chk@plt-0x365>
je     80488eb <__snprintf_chk@plt-0x365>
pop    %edi
jne    80488e9 <__snprintf_chk@plt-0x367>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     80488fd <__snprintf_chk@plt-0x353>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048908 <__snprintf_chk@plt-0x348>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    804890c <__snprintf_chk@plt-0x344>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048910 <__snprintf_chk@plt-0x340>
js     8048916 <__snprintf_chk@plt-0x33a>
je     80488af <__snprintf_chk@plt-0x3a1>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804892c <__snprintf_chk@plt-0x324>
popa
jb     804892f <__snprintf_chk@plt-0x321>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x6000400,%eax
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
pop    %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
sahf
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x70000,(%ecx),%ecx
test   $0x2,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x60000,%eax
mov    $0x2,%ah
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x2be,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
enter  $0x2,$0x0
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
rolb   %cl,(%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     8048a1b <__snprintf_chk@plt-0x235>
imul   $0x20000,(%ecx),%ecx
faddl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
cld
pop    %ds
add    $0x1c0608,%eax
add    %ah,0x21(%eax)
add    $0x3c0508,%eax
add    %ah,0x5(%ecx,%eiz,1)
or     %al,0x8000003d
and    %eax,0x3e0508
add    %ah,0x5080521(%eax)
inc    %edx
add    %al,(%eax)
shlb   $0x5,(%ecx)
.byte 0x8
.byte 0x5
cmp    (%eax),%eax
or     $0x20,%al
add    $0x10708,%eax
add    %dl,(%eax)
and    %al,0x20708
add    %dl,(%eax,%eiz,1)
add    $0x30708,%eax
add    %bl,(%eax)
and    %al,0x40708
add    %bl,(%eax,%eiz,1)
add    $0x50708,%eax
add    %ah,(%eax)
and    %al,0x60708
add    %ah,(%eax,%eiz,1)
add    $0x70708,%eax
add    %ch,(%eax)
and    %al,0x80708
add    %ch,(%eax,%eiz,1)
add    $0x90708,%eax
add    %dh,(%eax)
and    %al,0xa0708
add    %dh,(%eax,%eiz,1)
add    $0xb0708,%eax
add    %bh,(%eax)
and    %al,0xc0708
add    %bh,(%eax,%eiz,1)
add    $0xd0708,%eax
add    %al,0x20(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%eiz,1)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
and    %al,0x100708
add    %cl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x20(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x20(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    $0x20600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%eiz,1)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080520
sbb    %al,(%eax)
add    %ch,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x20(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x20(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    $0x20800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%eiz,1)
add    %al,(%eax)
mov    %ah,(%eax)
add    $0x200708,%eax
add    %cl,0x21070805(%eax,%eiz,1)
add    %al,(%eax)
nop
and    %al,0x220708
add    %dl,0x23070805(%eax,%eiz,1)
add    %al,(%eax)
cwtl
and    %al,0x240708
add    %bl,0x25070805(%eax,%eiz,1)
add    %al,(%eax)
mov    0x7080520,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %al,0x270708
add    %ch,0x7080520(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%eiz,1)
add    %al,(%eax)
mov    $0x20,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%eiz,1)
add    %al,(%eax)
mov    $0x7080520,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%eiz,1)
add    %al,(%eax)
shlb   $0x5,(%eax)
or     %al,(%edi)
add    %al,%cs:(%eax)
les    (%eax),%esp
add    $0x2f0708,%eax
add    %cl,%al
and    %al,0x300708
add    %cl,%ah
and    %al,0x310708
add    %dl,%al
and    %al,0x320708
add    %dl,%ah
and    %al,0x330708
add    %bl,%al
and    %al,0x340708
add    %bl,%ah
and    %al,0x350708
add    %ah,%al
and    %al,0x360708
add    %ah,%ah
and    %al,0x370708
add    %ch,%al
and    %al,0x380708
add    %ch,%ah
and    %al,0x390708
add    %dh,%al
and    %al,0x3a0708
push   %ebx
sub    $0x8,%esp
call   8049390 <calloc@plt+0x3b0>
add    $0x93e7,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048c2e <__snprintf_chk@plt-0x22>
call   8048e00 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8052004
jmp    *0x8052008
add    %al,(%eax)
jmp    *0x805200c
push   $0x0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052010
push   $0x8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052014
push   $0x10
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052018
push   $0x18
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805201c
push   $0x20
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052020
push   $0x28
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052024
push   $0x30
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052028
push   $0x38
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805202c
push   $0x40
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052030
push   $0x48
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052034
push   $0x50
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052038
push   $0x58
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805203c
push   $0x60
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052040
push   $0x68
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052044
push   $0x70
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052048
push   $0x78
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805204c
push   $0x80
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052050
push   $0x88
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052054
push   $0x90
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052058
push   $0x98
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805205c
push   $0xa0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052060
push   $0xa8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052064
push   $0xb0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052068
push   $0xb8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805206c
push   $0xc0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052070
push   $0xc8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052074
push   $0xd0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052078
push   $0xd8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805207c
push   $0xe0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052080
push   $0xe8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052084
push   $0xf0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052088
push   $0xf8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805208c
push   $0x100
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052090
push   $0x108
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052094
push   $0x110
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x8052098
push   $0x118
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x805209c
push   $0x120
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520a0
push   $0x128
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520a4
push   $0x130
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520a8
push   $0x138
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520ac
push   $0x140
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520b0
push   $0x148
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520b4
push   $0x150
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520b8
push   $0x158
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520bc
push   $0x160
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520c0
push   $0x168
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520c4
push   $0x170
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520c8
push   $0x178
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520cc
push   $0x180
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520d0
push   $0x188
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520d4
push   $0x190
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520d8
push   $0x198
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520dc
push   $0x1a0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520e0
push   $0x1a8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520e4
push   $0x1b0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520e8
push   $0x1b8
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520ec
push   $0x1c0
jmp    8048c40 <__snprintf_chk@plt-0x10>
jmp    *0x80520f0
push   $0x1c8
jmp    8048c40 <__snprintf_chk@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x20,%esp
mov    0xc(%ebp),%esi
mov    0x8(%ebp),%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049a40 <calloc@plt+0xa60>
movl   $0x804f2dd,0x4(%esp)
movl   $0x6,(%esp)
call   8048f10 <setlocale@plt>
movl   $0x804ed84,0x4(%esp)
movl   $0x804ed76,(%esp)
call   8048f80 <bindtextdomain@plt>
movl   $0x804ed76,(%esp)
call   8048d30 <textdomain@plt>
movl   $0x80498a0,(%esp)
call   804e9a0 <calloc@plt+0x59c0>
movb   $0x0,0x80521c7
movl   $0x0,0x10(%esp)
movl   $0x804ee60,0xc(%esp)
movl   $0x804edac,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8048e40 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049161 <calloc@plt+0x181>
cmp    $0x70,%eax
je     8049155 <calloc@plt+0x175>
jg     80490b0 <calloc@plt+0xd0>
cmp    $0xffffff7d,%eax
je     80490c7 <calloc@plt+0xe7>
cmp    $0xffffff7e,%eax
jne    8049149 <calloc@plt+0x169>
movl   $0x0,(%esp)
call   8049550 <calloc@plt+0x570>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x76,%eax
je     8049109 <calloc@plt+0x129>
add    $0xffffff80,%eax
jne    8049149 <calloc@plt+0x169>
movb   $0x1,0x80521c6
jmp    8049053 <calloc@plt+0x73>
mov    0x8052108,%eax
movl   $0x0,0x14(%esp)
movl   $0x804ed96,0x10(%esp)
movl   $0x804ed72,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80521c0,%eax
movl   $0x804eda6,0x4(%esp)
mov    %eax,(%esp)
call   804b590 <calloc@plt+0x25b0>
movl   $0x0,(%esp)
call   8048e10 <exit@plt>
movb   $0x1,0x80521c5
jmp    8049053 <calloc@plt+0x73>
movl   $0x5,0x8(%esp)
movl   $0x804edaf,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048db0 <error@plt>
movl   $0x1,(%esp)
call   8049550 <calloc@plt+0x570>
movb   $0x1,0x80521c7
jmp    8049053 <calloc@plt+0x73>
cmp    %edi,0x80521a0
je     8049115 <calloc@plt+0x135>
movb   $0x1,0x1b(%esp)
jmp    8049190 <calloc@plt+0x1b0>
mov    %ebx,(%esp)
call   8048ce0 <rmdir@plt>
test   %eax,%eax
jne    80491ec <calloc@plt+0x20c>
cmpb   $0x0,0x80521c7
jne    8049252 <calloc@plt+0x272>
addl   $0x1,0x80521a0
mov    0x80521a0,%eax
cmp    %eax,%edi
jle    804930e <calloc@plt+0x32e>
cmpb   $0x0,0x80521c5
mov    (%esi,%eax,4),%ebx
je     8049170 <calloc@plt+0x190>
mov    %ebx,(%esp)
call   804af50 <calloc@plt+0x1f70>
movl   $0x5,0x8(%esp)
movl   $0x804edbf,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8048d10 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80521c0,%eax
mov    %eax,(%esp)
call   8049800 <calloc@plt+0x820>
jmp    8049170 <calloc@plt+0x190>
call   8048eb0 <__errno_location@plt>
mov    %ebx,%edx
mov    %eax,%ecx
mov    (%eax),%eax
mov    %ecx,0x1c(%esp)
call   8049460 <calloc@plt+0x480>
test   %al,%al
jne    8049189 <calloc@plt+0x1a9>
mov    %ebx,(%esp)
call   804af50 <calloc@plt+0x1f70>
movl   $0x5,0x8(%esp)
movl   $0x804edd6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048d10 <dcgettext@plt>
mov    0x1c(%esp),%ecx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ecx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048db0 <error@plt>
movb   $0x0,0x1b(%esp)
jmp    8049189 <calloc@plt+0x1a9>
mov    %ebx,(%esp)
call   8049a10 <calloc@plt+0xa30>
lea    0x0(%esi),%esi
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8048f20 <strrchr@plt>
test   %eax,%eax
je     80492bd <calloc@plt+0x2dd>
cmp    %eax,%ebx
jb     8049287 <calloc@plt+0x2a7>
jmp    804928c <calloc@plt+0x2ac>
lea    0x0(%esi),%esi
sub    $0x1,%eax
cmp    %ebx,%eax
je     804928c <calloc@plt+0x2ac>
cmpb   $0x2f,(%eax)
je     8049280 <calloc@plt+0x2a0>
cmpb   $0x0,0x80521c5
movb   $0x0,0x1(%eax)
jne    80492cb <calloc@plt+0x2eb>
mov    %ebx,(%esp)
call   8048ce0 <rmdir@plt>
test   %eax,%eax
je     8049260 <calloc@plt+0x280>
call   8048eb0 <__errno_location@plt>
mov    %ebx,%edx
mov    %eax,%ecx
mov    (%eax),%eax
mov    %ecx,0x1c(%esp)
call   8049460 <calloc@plt+0x480>
test   %al,%al
je     8049320 <calloc@plt+0x340>
mov    $0x1,%eax
and    %al,0x1b(%esp)
jmp    8049189 <calloc@plt+0x1a9>
mov    %ebx,(%esp)
call   804af50 <calloc@plt+0x1f70>
movl   $0x5,0x8(%esp)
movl   $0x804edbf,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x1c(%esp)
call   8048d10 <dcgettext@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x80521c0,%eax
mov    %eax,(%esp)
call   8049800 <calloc@plt+0x820>
jmp    8049299 <calloc@plt+0x2b9>
xor    %eax,%eax
cmpb   $0x0,0x1b(%esp)
sete   %al
mov    %eax,(%esp)
call   8048e10 <exit@plt>
mov    %ebx,(%esp)
call   804af50 <calloc@plt+0x1f70>
movl   $0x5,0x8(%esp)
movl   $0x804edea,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8048d10 <dcgettext@plt>
mov    0x1c(%esp),%ecx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%ecx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048db0 <error@plt>
xor    %eax,%eax
jmp    80492c2 <calloc@plt+0x2e2>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804e990
push   $0x804e920
push   %ecx
push   %esi
push   $0x8048ff0
call   8048e80 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8052163,%eax
sub    $0x8052160,%eax
cmp    $0x6,%eax
ja     80493b0 <calloc@plt+0x3d0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     80493af <calloc@plt+0x3cf>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8052160,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8052160,%eax
sub    $0x8052160,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    80493e9 <calloc@plt+0x409>
ret
mov    $0x0,%edx
test   %edx,%edx
je     80493e8 <calloc@plt+0x408>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8052160,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80521c4
jne    804942c <calloc@plt+0x44c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   80493a0 <calloc@plt+0x3c0>
movb   $0x1,0x80521c4
leave
repz ret
xchg   %ax,%ax
mov    0x8051f10,%eax
test   %eax,%eax
je     8049458 <calloc@plt+0x478>
mov    $0x0,%eax
test   %eax,%eax
je     8049458 <calloc@plt+0x478>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8051f10,(%esp)
call   *%eax
leave
jmp    80493d0 <calloc@plt+0x3f0>
nop
jmp    80493d0 <calloc@plt+0x3f0>
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x10,%esp
cmpb   $0x0,0x80521c6
je     8049510 <calloc@plt+0x530>
cmp    $0x11,%eax
sete   %bl
cmp    $0x27,%eax
sete   %cl
or     %cl,%bl
jne    8049510 <calloc@plt+0x530>
lea    -0x1(%eax),%ecx
cmp    $0x1d,%ecx
ja     8049510 <calloc@plt+0x530>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x20019001,%eax
je     8049510 <calloc@plt+0x530>
movl   $0x30900,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0xffffff9c,(%esp)
call   8048e70 <openat64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8049510 <calloc@plt+0x530>
mov    %edi,(%esp)
call   8048f40 <fdopendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     8049531 <calloc@plt+0x551>
call   8048eb0 <__errno_location@plt>
mov    %eax,%edi
movl   $0x0,(%eax)
jmp    80494f2 <calloc@plt+0x512>
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x2e,0x14(%edx)
sete   %al
movzbl 0x14(%edx,%eax,1),%eax
cmp    $0x2f,%al
jne    804953b <calloc@plt+0x55b>
mov    %esi,(%esp)
call   8048f60 <readdir64@plt>
test   %eax,%eax
mov    %eax,%edx
je     8049520 <calloc@plt+0x540>
cmpb   $0x2e,0x13(%eax)
je     80494e0 <calloc@plt+0x500>
mov    %esi,(%esp)
call   8048fc0 <closedir@plt>
xchg   %ax,%ax
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ebx
mov    %esi,(%esp)
call   8048fc0 <closedir@plt>
test   %ebx,%ebx
sete   %bl
jmp    8049510 <calloc@plt+0x530>
mov    %edi,(%esp)
call   8048fb0 <close@plt>
jmp    8049510 <calloc@plt+0x530>
test   %al,%al
lea    0x0(%esi),%esi
je     80494f2 <calloc@plt+0x512>
jmp    8049506 <calloc@plt+0x526>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80521d0,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     80495a4 <calloc@plt+0x5c4>
movl   $0x804ea08,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8052164,%eax
mov    %eax,(%esp)
call   8048f70 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8048e10 <exit@plt>
movl   $0x804ea30,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804ea54,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804eb10,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804ebd8,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804ec08,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
mov    0x80521d0,%eax
mov    %eax,(%esp)
call   8049970 <calloc@plt+0x990>
movl   $0x5,0x8(%esp)
movl   $0x804ed31,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048d10 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x804ed48,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ed5e,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
movl   $0x804ec40,0xc(%esp)
movl   $0x804ed72,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804ec68,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8048f10 <setlocale@plt>
test   %eax,%eax
je     8049769 <calloc@plt+0x789>
movl   $0x3,0x8(%esp)
movl   $0x804ed80,0x4(%esp)
mov    %eax,(%esp)
call   8048f90 <strncmp@plt>
test   %eax,%eax
jne    80497ad <calloc@plt+0x7cd>
mov    0x80521d0,%eax
mov    %eax,(%esp)
call   8049970 <calloc@plt+0x990>
movl   $0x5,0x8(%esp)
movl   $0x804ecf0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048d10 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
jmp    804959c <calloc@plt+0x5bc>
mov    0x80521d0,%eax
mov    %eax,(%esp)
call   8049970 <calloc@plt+0x990>
movl   $0x5,0x8(%esp)
movl   $0x804eca8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048d10 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
jmp    8049769 <calloc@plt+0x789>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x80521d0,%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
mov    %ebx,0x4(%esp)
call   8048e30 <fputs_unlocked@plt>
mov    %ebx,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804eed0,(%esp)
call   8048ed0 <fwrite_unlocked@plt>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804b940 <calloc@plt+0x2960>
mov    0x14(%ebx),%eax
cmp    0x18(%ebx),%eax
jae    8049867 <calloc@plt+0x887>
lea    0x1(%eax),%edx
mov    %edx,0x14(%ebx)
movb   $0xa,(%eax)
add    $0x18,%esp
pop    %ebx
ret
movl   $0xa,0x4(%esp)
mov    %ebx,(%esp)
call   8048f30 <__overflow@plt>
jmp    8049862 <calloc@plt+0x882>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x80521cc
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x80521c8
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80521c0,%eax
mov    %eax,(%esp)
call   804ba30 <calloc@plt+0x2a50>
test   %eax,%eax
je     80498c9 <calloc@plt+0x8e9>
cmpb   $0x0,0x80521c8
je     80498e0 <calloc@plt+0x900>
call   8048eb0 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    80498e0 <calloc@plt+0x900>
mov    0x8052164,%eax
mov    %eax,(%esp)
call   804ba30 <calloc@plt+0x2a50>
test   %eax,%eax
jne    8049938 <calloc@plt+0x958>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x804eed8,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %eax,%ebx
mov    0x80521cc,%eax
test   %eax,%eax
je     8049945 <calloc@plt+0x965>
mov    %eax,(%esp)
call   804ad20 <calloc@plt+0x1d40>
mov    %eax,%esi
call   8048eb0 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x804eee4,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048db0 <error@plt>
mov    0x805210c,%eax
mov    %eax,(%esp)
call   8048c90 <_exit@plt>
call   8048eb0 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x804edd3,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048db0 <error@plt>
jmp    8049938 <calloc@plt+0x958>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    804998b <calloc@plt+0x9ab>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8049980 <calloc@plt+0x9a0>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     80499b9 <calloc@plt+0x9d9>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     80499b9 <calloc@plt+0x9d9>
cmp    $0x2f,%cl
je     80499c0 <calloc@plt+0x9e0>
test   %bl,%bl
je     8049998 <calloc@plt+0x9b8>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    80499a2 <calloc@plt+0x9c2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8049998 <calloc@plt+0x9b8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048e60 <strlen@plt>
cmp    $0x1,%eax
jbe    80499ef <calloc@plt+0xa0f>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     80499f8 <calloc@plt+0xa18>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    80499e5 <calloc@plt+0xa05>
nop
jmp    80499ef <calloc@plt+0xa0f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049970 <calloc@plt+0x990>
cmpb   $0x0,(%eax)
cmovne %eax,%ebx
mov    %ebx,(%esp)
call   80499d0 <calloc@plt+0x9f0>
add    %eax,%ebx
cmpb   $0x0,(%ebx)
movb   $0x0,(%ebx)
setne  %al
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     8049ac3 <calloc@plt+0xae3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8048f20 <strrchr@plt>
test   %eax,%eax
je     8049aaf <calloc@plt+0xacf>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    8049aaf <calloc@plt+0xacf>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x804ef24,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    8049aaf <calloc@plt+0xacf>
mov    $0x3,%ecx
mov    $0x804ef2c,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    8049aaf <calloc@plt+0xacf>
lea    0x4(%eax),%ebx
mov    %ebx,0x8052160
mov    %ebx,0x80521d0
mov    %ebx,0x8052180
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8052164,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804eeec,(%esp)
mov    %eax,0xc(%esp)
call   8048d50 <fwrite@plt>
call   8048fa0 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     8049b11 <calloc@plt+0xb31>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8048fa0 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     8049b50 <calloc@plt+0xb70>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804bab0 <calloc@plt+0x2ad0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    8049bb8 <calloc@plt+0xbd8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    8049ba0 <calloc@plt+0xbc0>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x2d,0x3(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x38,0x4(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x0,0x5(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x60,(%esi)
mov    $0x804ef3f,%eax
mov    $0x804ef30,%edx
cmovne %edx,%eax
jmp    8049b48 <calloc@plt+0xb68>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804ef39,%eax
cmp    $0x7,%edi
mov    $0x804ef37,%edx
cmovne %edx,%eax
jmp    8049b48 <calloc@plt+0xb68>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    8049ba0 <calloc@plt+0xbc0>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x31,0x2(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x38,0x3(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x30,0x4(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x33,0x5(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x30,0x6(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x0,0x7(%eax)
jne    8049ba0 <calloc@plt+0xbc0>
cmpb   $0x60,(%esi)
mov    $0x804ef3b,%eax
mov    $0x804ef34,%edx
cmovne %edx,%eax
jmp    8049b48 <calloc@plt+0xb68>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8048d60 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804a4e8 <calloc@plt+0x1508>
mov    0x94(%esp),%eax
jmp    *0x804ef80(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804a2f0 <calloc@plt+0x1310>
test   %al,%al
je     804a303 <calloc@plt+0x1323>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804a2d8 <calloc@plt+0x12f8>
cmpb   $0x0,0x58(%esp)
je     804a2d8 <calloc@plt+0x12f8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804a2d8 <calloc@plt+0x12f8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8048d00 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804a370 <calloc@plt+0x1390>
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804a088 <calloc@plt+0x10a8>
movzbl %bl,%eax
jmp    *0x804efa4(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     8049ec8 <calloc@plt+0xee8>
cmpl   $0x3,0x94(%esp)
jne    8049e28 <calloc@plt+0xe48>
testb  $0x4,0x98(%esp)
je     8049e28 <calloc@plt+0xe48>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    8049e28 <calloc@plt+0xe48>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    8049e28 <calloc@plt+0xe48>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     8049e28 <calloc@plt+0xe48>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     8049e28 <calloc@plt+0xe48>
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
cmp    %edi,%ebp
jae    8049dee <calloc@plt+0xe0e>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    8049dfe <calloc@plt+0xe1e>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8049e0e <calloc@plt+0xe2e>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    8049e1e <calloc@plt+0xe3e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     8049e36 <calloc@plt+0xe56>
cmpb   $0x0,0x5a(%esp)
jne    8049e5b <calloc@plt+0xe7b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     8049e5b <calloc@plt+0xe7b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    8049e62 <calloc@plt+0xe82>
cmpb   $0x0,0x24(%esp)
je     8049e78 <calloc@plt+0xe98>
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
cmp    %edi,%ebp
jae    8049e75 <calloc@plt+0xe95>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    8049e86 <calloc@plt+0xea6>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    8049cc8 <calloc@plt+0xce8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804a4d8 <calloc@plt+0x14f8>
test   %al,%al
jne    8049e28 <calloc@plt+0xe48>
test   %esi,%esi
jne    8049e28 <calloc@plt+0xe48>
cmpl   $0x2,0x94(%esp)
jne    8049e28 <calloc@plt+0xe48>
nop
cmpb   $0x0,0x2f(%esp)
je     8049e28 <calloc@plt+0xe48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8049c10 <calloc@plt+0xc30>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804a602 <calloc@plt+0x1622>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804a54b <calloc@plt+0x156b>
cmpb   $0x0,0x58(%esp)
je     8049e28 <calloc@plt+0xe48>
mov    %eax,%ebx
jmp    8049e62 <calloc@plt+0xe82>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    8049f53 <calloc@plt+0xf73>
nop
mov    $0x66,%eax
jmp    8049f53 <calloc@plt+0xf73>
nop
mov    $0x76,%eax
jmp    8049f53 <calloc@plt+0xf73>
nop
mov    $0x6e,%eax
jmp    8049f45 <calloc@plt+0xf65>
nop
mov    $0x74,%eax
jmp    8049f45 <calloc@plt+0xf65>
nop
cmpb   $0x0,0x58(%esp)
je     804a4c0 <calloc@plt+0x14e0>
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
cmp    %edi,%ebp
jae    8049fb2 <calloc@plt+0xfd2>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    8049ff8 <calloc@plt+0x1018>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     8049ff8 <calloc@plt+0x1018>
cmp    %eax,%edi
ja     804a560 <calloc@plt+0x1580>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    8049fee <calloc@plt+0x100e>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    8049e36 <calloc@plt+0xe56>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    8049f53 <calloc@plt+0xf73>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804a02e <calloc@plt+0x104e>
cmpb   $0x0,0x2f(%esp)
je     804a02e <calloc@plt+0x104e>
test   %dl,%dl
jne    8049e78 <calloc@plt+0xe98>
mov    %ebx,%eax
jmp    8049f45 <calloc@plt+0xf65>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    8049e28 <calloc@plt+0xe48>
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
cmp    %edi,%ebp
jae    804a05d <calloc@plt+0x107d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804a06d <calloc@plt+0x108d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804a07d <calloc@plt+0x109d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    8049e28 <calloc@plt+0xe48>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804a380 <calloc@plt+0x13a0>
call   8048fd0 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     8049e28 <calloc@plt+0xe48>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804a134 <calloc@plt+0x1154>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
cmp    %edi,%ebp
jae    804a0e3 <calloc@plt+0x1103>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804a0f6 <calloc@plt+0x1116>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804a10c <calloc@plt+0x112c>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    8049e7b <calloc@plt+0xe9b>
cmp    %edi,%ebp
jae    804a129 <calloc@plt+0x1149>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804a0d0 <calloc@plt+0x10f0>
cmpb   $0x0,0x24(%esp)
je     804a115 <calloc@plt+0x1135>
cmp    %edi,%ebp
jae    804a147 <calloc@plt+0x1167>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804a115 <calloc@plt+0x1135>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804a607 <calloc@plt+0x1627>
test   %edi,%edi
je     804a50d <calloc@plt+0x152d>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804ef39,0x3c(%esp)
movb   $0x22,(%eax)
jmp    8049ca8 <calloc@plt+0xcc8>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804ef39,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    8049ca8 <calloc@plt+0xcc8>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    8049ca8 <calloc@plt+0xcc8>
lea    0x0(%esi,%eiz,1),%esi
je     804a21c <calloc@plt+0x123c>
mov    0x94(%esp),%edx
mov    $0x804ef43,%eax
call   8049b20 <calloc@plt+0xb40>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x804ef37,%eax
call   8049b20 <calloc@plt+0xb40>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804a24a <calloc@plt+0x126a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804a24a <calloc@plt+0x126a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804a23f <calloc@plt+0x125f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804a238 <calloc@plt+0x1258>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8048e60 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    8049ca8 <calloc@plt+0xcc8>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804ef37,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    8049ca8 <calloc@plt+0xcc8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804a623 <calloc@plt+0x1643>
test   %edi,%edi
je     804a52c <calloc@plt+0x154c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804ef37,0x3c(%esp)
movb   $0x27,(%eax)
jmp    8049ca8 <calloc@plt+0xcc8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    8049d60 <calloc@plt+0xd80>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    8049ce8 <calloc@plt+0xd08>
test   %ebp,%ebp
jne    804a31c <calloc@plt+0x133c>
cmpl   $0x2,0x94(%esp)
jne    804a31c <calloc@plt+0x133c>
cmpb   $0x0,0x2f(%esp)
jne    8049ed8 <calloc@plt+0xef8>
cmpb   $0x0,0x2f(%esp)
jne    804a352 <calloc@plt+0x1372>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804a352 <calloc@plt+0x1372>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804a352 <calloc@plt+0x1372>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804a347 <calloc@plt+0x1367>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804a340 <calloc@plt+0x1360>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    8049f22 <calloc@plt+0xf42>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    8049f22 <calloc@plt+0xf42>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    8049d60 <calloc@plt+0xd80>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804a4ed <calloc@plt+0x150d>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048d90 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804a56d <calloc@plt+0x158d>
cmp    $0xffffffff,%eax
je     804a588 <calloc@plt+0x15a8>
cmp    $0xfffffffe,%eax
je     804a5a3 <calloc@plt+0x15c3>
cmpb   $0x0,0x2f(%esp)
je     804a44f <calloc@plt+0x146f>
cmpl   $0x2,0x94(%esp)
jne    804a44f <calloc@plt+0x146f>
cmp    $0x1,%eax
je     804a44f <calloc@plt+0x146f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804a448 <calloc@plt+0x1468>
movzbl %al,%eax
jmp    *0x804f1a0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804a430 <calloc@plt+0x1450>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048d40 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048cc0 <mbsinit@plt>
test   %eax,%eax
je     804a3c1 <calloc@plt+0x13e1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804a0b3 <calloc@plt+0x10d3>
and    0x58(%esp),%dl
jmp    804a0bd <calloc@plt+0x10dd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    8049ed8 <calloc@plt+0xef8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     8049e28 <calloc@plt+0xe48>
add    $0x1,%esi
jmp    8049cc8 <calloc@plt+0xce8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    8049ea9 <calloc@plt+0xec9>
call   8048fa0 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8048e60 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804a39e <calloc@plt+0x13be>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804ef39,0x3c(%esp)
jmp    8049ca8 <calloc@plt+0xcc8>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804ef37,0x3c(%esp)
jmp    8049ca8 <calloc@plt+0xcc8>
cmpb   $0x0,0x2f(%esp)
je     8049f53 <calloc@plt+0xf73>
jmp    8049ed8 <calloc@plt+0xef8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    8049fde <calloc@plt+0xffe>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804a495 <calloc@plt+0x14b5>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804a495 <calloc@plt+0x14b5>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804a5f8 <calloc@plt+0x1618>
cmpb   $0x0,(%eax)
je     804a5f8 <calloc@plt+0x1618>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804a5e6 <calloc@plt+0x1606>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804a5f0 <calloc@plt+0x1610>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804a5e0 <calloc@plt+0x1600>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804a495 <calloc@plt+0x14b5>
call   8048d20 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804ef39,0x3c(%esp)
jmp    8049ca8 <calloc@plt+0xcc8>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804ef37,0x3c(%esp)
jmp    8049ca8 <calloc@plt+0xcc8>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8048eb0 <__errno_location@plt>
test   %edi,%edi
mov    0x8052150,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804a7cc <calloc@plt+0x17ec>
cmp    0x805215c,%edi
jb     804a6d8 <calloc@plt+0x16f8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804a7d1 <calloc@plt+0x17f1>
cmp    $0x8052154,%esi
lea    0x0(,%ebp,8),%eax
je     804a7a0 <calloc@plt+0x17c0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804b6f0 <calloc@plt+0x2710>
mov    %eax,%esi
mov    %eax,0x8052150
mov    0x805215c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048e90 <memset@plt>
mov    %ebp,0x805215c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8049c10 <calloc@plt+0xc30>
cmp    %eax,%ebp
ja     804a787 <calloc@plt+0x17a7>
lea    0x1(%eax),%ebp
cmp    $0x80521e0,%esi
mov    %ebp,(%edi)
je     804a742 <calloc@plt+0x1762>
mov    %esi,(%esp)
call   8048ca0 <free@plt>
mov    %ebp,(%esp)
call   804b680 <calloc@plt+0x26a0>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8049c10 <calloc@plt+0xc30>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804b6f0 <calloc@plt+0x2710>
mov    0x8052158,%edx
mov    %eax,%esi
mov    %eax,0x8052150
mov    0x8052154,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804a6af <calloc@plt+0x16cf>
call   8048fa0 <abort@plt>
call   804b8f0 <calloc@plt+0x2910>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8048eb0 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x80522e0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804b890 <calloc@plt+0x28b0>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x80522e0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804a840 <calloc@plt+0x1860>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x80522e0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x80522e0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x80522e0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x80522e0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804a8f3 <calloc@plt+0x1913>
test   %ecx,%ecx
je     804a8f3 <calloc@plt+0x1913>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8048fa0 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x80522e0,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8048eb0 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8049c10 <calloc@plt+0xc30>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x80522e0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8048eb0 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8049c10 <calloc@plt+0xc30>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804b680 <calloc@plt+0x26a0>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   8049c10 <calloc@plt+0xc30>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804aa28 <calloc@plt+0x1a48>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a960 <calloc@plt+0x1980>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805215c,%edi
mov    0x8052150,%esi
cmp    $0x1,%edi
jbe    804aaa3 <calloc@plt+0x1ac3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048ca0 <free@plt>
cmp    %edi,%ebx
jne    804aa90 <calloc@plt+0x1ab0>
mov    0x4(%esi),%eax
cmp    $0x80521e0,%eax
je     804aac9 <calloc@plt+0x1ae9>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
movl   $0x100,0x8052154
00
movl   $0x80521e0,0x8052158
08
cmp    $0x8052154,%esi
je     804aae3 <calloc@plt+0x1b03>
mov    %esi,(%esp)
call   8048ca0 <free@plt>
movl   $0x8052154,0x8052150
08
movl   $0x1,0x805215c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x80522e0,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x80522e0,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x80522e0,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x80522e0,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8049af0 <calloc@plt+0xb10>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804a640 <calloc@plt+0x1660>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8049af0 <calloc@plt+0xb10>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804a640 <calloc@plt+0x1660>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804ab80 <calloc@plt+0x1ba0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804abb0 <calloc@plt+0x1bd0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x80522e0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x80522e4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x80522e8,%eax
mov    %eax,0x18(%esp)
mov    0x80522ec,%eax
mov    %eax,0x1c(%esp)
mov    0x80522f0,%eax
mov    %eax,0x20(%esp)
mov    0x80522f4,%eax
mov    %eax,0x24(%esp)
mov    0x80522f8,%eax
mov    %eax,0x28(%esp)
mov    0x80522fc,%eax
mov    %eax,0x2c(%esp)
mov    0x8052300,%eax
mov    %eax,0x30(%esp)
mov    0x8052304,%eax
mov    %eax,0x34(%esp)
mov    0x8052308,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805230c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804a640 <calloc@plt+0x1660>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ac40 <calloc@plt+0x1c60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804ac40 <calloc@plt+0x1c60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ac40 <calloc@plt+0x1c60>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x80522e0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x80522e4,%eax
mov    %eax,0x14(%esp)
mov    0x80522e8,%eax
mov    %eax,0x18(%esp)
mov    0x80522ec,%eax
mov    %eax,0x1c(%esp)
mov    0x80522f0,%eax
mov    %eax,0x20(%esp)
mov    0x80522f4,%eax
mov    %eax,0x24(%esp)
mov    0x80522f8,%eax
mov    %eax,0x28(%esp)
mov    0x80522fc,%eax
mov    %eax,0x2c(%esp)
mov    0x8052300,%eax
mov    %eax,0x30(%esp)
mov    0x8052304,%eax
mov    %eax,0x34(%esp)
mov    0x8052308,%eax
mov    %eax,0x38(%esp)
mov    0x805230c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804a8c0 <calloc@plt+0x18e0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804a640 <calloc@plt+0x1660>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804ad80 <calloc@plt+0x1da0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804ad80 <calloc@plt+0x1da0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804ad80 <calloc@plt+0x1da0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8052120,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8052120,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8052120,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8052120,0x4(%esp)
jmp    804a640 <calloc@plt+0x1660>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804b428 <calloc@plt+0x2448>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x804f284,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f70 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804f297,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x804f520,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8048f70 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804f2f4,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804b450 <calloc@plt+0x2470>
jmp    *0x804f4f8(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f458,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8048d10 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8048f70 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f488,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8048d10 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8048f70 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8048fa0 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f29b,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f70 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f2ab,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f70 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f2c2,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f70 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f3c0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8048d10 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8048f70 <__fprintf_chk@plt>
jmp    804b0cf <calloc@plt+0x20ef>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f3e0,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8048d10 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f70 <__fprintf_chk@plt>
jmp    804b0cf <calloc@plt+0x20ef>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f404,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048d10 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f70 <__fprintf_chk@plt>
jmp    804b0cf <calloc@plt+0x20ef>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f42c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048d10 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f70 <__fprintf_chk@plt>
jmp    804b0cf <calloc@plt+0x20ef>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x804f290,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f70 <__fprintf_chk@plt>
jmp    804afc1 <calloc@plt+0x1fe1>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804f4bc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8048d10 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804b15a <calloc@plt+0x217a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804b4fa <calloc@plt+0x251a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804b4f0 <calloc@plt+0x2510>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804af70 <calloc@plt+0x1f90>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804b552 <calloc@plt+0x2572>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804b540 <calloc@plt+0x2560>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804af70 <calloc@plt+0x1f90>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804b530 <calloc@plt+0x2550>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x804f2de,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
movl   $0x804ed48,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ed5e,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
movl   $0x804ec40,0xc(%esp)
movl   $0x804ed72,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ee0 <__printf_chk@plt>
mov    0x80521c0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ec68,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048e30 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048de0 <malloc@plt>
test   %eax,%eax
je     804b699 <calloc@plt+0x26b9>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804b694 <calloc@plt+0x26b4>
lea    0x0(%esi),%esi
call   804b8f0 <calloc@plt+0x2910>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804b6d9 <calloc@plt+0x26f9>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804b680 <calloc@plt+0x26a0>
call   804b8f0 <calloc@plt+0x2910>
xchg   %ax,%ax
jmp    804b680 <calloc@plt+0x26a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804b718 <calloc@plt+0x2738>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
test   %eax,%eax
je     804b72b <calloc@plt+0x274b>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804b700 <calloc@plt+0x2720>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804b710 <calloc@plt+0x2730>
call   804b8f0 <calloc@plt+0x2910>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804b773 <calloc@plt+0x2793>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804b6f0 <calloc@plt+0x2710>
call   804b8f0 <calloc@plt+0x2910>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804b7c0 <calloc@plt+0x27e0>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804b7d8 <calloc@plt+0x27f8>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804b6f0 <calloc@plt+0x2710>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804b7a9 <calloc@plt+0x27c9>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804b7a9 <calloc@plt+0x27c9>
call   804b8f0 <calloc@plt+0x2910>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804b818 <calloc@plt+0x2838>
cmp    $0xaaaaaaa9,%eax
ja     804b824 <calloc@plt+0x2844>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804b6f0 <calloc@plt+0x2710>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804b800 <calloc@plt+0x2820>
call   804b8f0 <calloc@plt+0x2910>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804b680 <calloc@plt+0x26a0>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048e90 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048fe0 <calloc@plt>
test   %eax,%eax
je     804b87f <calloc@plt+0x289f>
add    $0x1c,%esp
ret
nop
call   804b8f0 <calloc@plt+0x2910>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804b680 <calloc@plt+0x26a0>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048cb0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048e60 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804b890 <calloc@plt+0x28b0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x804f54f,0x4(%esp)
movl   $0x0,(%esp)
call   8048d10 <dcgettext@plt>
mov    0x805210c,%edx
movl   $0x804edd3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8048db0 <error@plt>
call   8048fa0 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7fc,%esp
mov    %gs:0x14,%eax
mov    %eax,0x7ec(%esp)
xor    %eax,%eax
mov    0x818(%esp),%eax
lea    0x1c(%esp),%edi
mov    %edi,(%esp)
mov    0x810(%esp),%ebp
movl   $0x7d0,0x18(%esp)
mov    %eax,0xc(%esp)
mov    0x814(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   804c010 <calloc@plt+0x3030>
mov    0x18(%esp),%esi
test   %eax,%eax
mov    %eax,%ebx
je     804ba11 <calloc@plt+0x2a31>
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8048d50 <fwrite@plt>
cmp    %eax,%esi
ja     804b9e8 <calloc@plt+0x2a08>
cmp    %edi,%ebx
je     804b9c4 <calloc@plt+0x29e4>
mov    %ebx,(%esp)
call   8048ca0 <free@plt>
test   %esi,%esi
js     804ba06 <calloc@plt+0x2a26>
mov    0x7ec(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    804ba20 <calloc@plt+0x2a40>
add    $0x7fc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %edi,%ebx
mov    $0xffffffff,%esi
je     804b9c8 <calloc@plt+0x29e8>
call   8048eb0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%edi
mov    %ebx,(%esp)
call   8048ca0 <free@plt>
mov    %ebp,(%edi)
jmp    804b9c8 <calloc@plt+0x29e8>
call   8048eb0 <__errno_location@plt>
movl   $0x4b,(%eax)
mov    %ebp,(%esp)
mov    $0xffffffff,%esi
call   804c000 <calloc@plt+0x3020>
jmp    804b9c8 <calloc@plt+0x29e8>
call   8048d20 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8048d80 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804be70 <calloc@plt+0x2e90>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    804ba70 <calloc@plt+0x2a90>
test   %dl,%dl
je     804ba67 <calloc@plt+0x2a87>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     804ba90 <calloc@plt+0x2ab0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    804ba67 <calloc@plt+0x2a87>
call   8048eb0 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8048eb0 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8048f00 <nl_langinfo@plt>
mov    0x8052310,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x804f2dd,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804bb7c <calloc@plt+0x2b9c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804bb47 <calloc@plt+0x2b67>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804bb20 <calloc@plt+0x2b40>
nop
mov    %ebp,(%esp)
call   8048e60 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8048e60 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804bb78 <calloc@plt+0x2b98>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048c60 <strcmp@plt>
test   %eax,%eax
je     804bb3b <calloc@plt+0x2b5b>
cmp    $0x2a,%bl
jne    804bb00 <calloc@plt+0x2b20>
cmpb   $0x0,0x1(%ebp)
jne    804bb00 <calloc@plt+0x2b20>
mov    %ebp,(%esp)
call   8048e60 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x804f569,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804be3d <calloc@plt+0x2e5d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804bb47 <calloc@plt+0x2b67>
movl   $0x804f56f,(%esp)
call   8048dc0 <getenv@plt>
test   %eax,%eax
je     804bb95 <calloc@plt+0x2bb5>
cmpb   $0x0,(%eax)
jne    804bda3 <calloc@plt+0x2dc3>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x804f560,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804bd94 <calloc@plt+0x2db4>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8048de0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804be33 <calloc@plt+0x2e53>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804bbfc <calloc@plt+0x2c1c>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048c70 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804bd78 <calloc@plt+0x2d98>
movl   $0x804edaa,0x4(%esp)
mov    %eax,(%esp)
call   8048e20 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804bd70 <calloc@plt+0x2d90>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804bd56 <calloc@plt+0x2d76>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804bc60 <calloc@plt+0x2c80>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804bc60 <calloc@plt+0x2c80>
cmp    $0x23,%eax
je     804bdcd <calloc@plt+0x2ded>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048ea0 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x804f57f,0x4(%esp)
mov    %esi,(%esp)
call   8048e50 <fscanf@plt>
cmp    $0x1,%eax
jle    804bdf0 <calloc@plt+0x2e10>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8048e60 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8048e60 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804be0e <calloc@plt+0x2e2e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8048de0 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804be42 <calloc@plt+0x2e62>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8048d70 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8048d70 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804bc6c <calloc@plt+0x2c8c>
mov    %esi,(%esp)
call   8048ef0 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804bdf0 <calloc@plt+0x2e10>
jmp    804bc75 <calloc@plt+0x2c95>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8048fb0 <close@plt>
mov    $0x804f2dd,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    %ebp,0x8052310
jmp    804baef <calloc@plt+0x2b0f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804bbbb <calloc@plt+0x2bdb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8048e60 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804bd94 <calloc@plt+0x2db4>
lea    -0x1(%eax),%eax
jmp    804bba4 <calloc@plt+0x2bc4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804bde7 <calloc@plt+0x2e07>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804be5c <calloc@plt+0x2e7c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804bdc8 <calloc@plt+0x2de8>
cmp    $0xffffffff,%eax
jne    804bc60 <calloc@plt+0x2c80>
mov    %esi,(%esp)
call   804be70 <calloc@plt+0x2e90>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804bd78 <calloc@plt+0x2d98>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804bd7d <calloc@plt+0x2d9d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8048dd0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804bd0c <calloc@plt+0x2d2c>
mov    $0x804f2dd,%ebp
jmp    804bd89 <calloc@plt+0x2da9>
call   8048d20 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x804f2dd,%ebp
call   8048ca0 <free@plt>
mov    %esi,(%esp)
call   804be70 <calloc@plt+0x2e90>
jmp    804bd7d <calloc@plt+0x2d9d>
mov    %esi,(%esp)
call   8048ef0 <__uflow@plt>
jmp    804bde2 <calloc@plt+0x2e02>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048ec0 <fileno@plt>
test   %eax,%eax
js     804bef8 <calloc@plt+0x2f18>
mov    %ebx,(%esp)
call   8048df0 <__freading@plt>
test   %eax,%eax
jne    804bec8 <calloc@plt+0x2ee8>
mov    %ebx,(%esp)
call   804bf10 <calloc@plt+0x2f30>
test   %eax,%eax
je     804bef8 <calloc@plt+0x2f18>
call   8048eb0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048cd0 <fclose@plt>
test   %edi,%edi
je     804beba <calloc@plt+0x2eda>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8048ec0 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8048f50 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804be92 <calloc@plt+0x2eb2>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048cd0 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804bf28 <calloc@plt+0x2f48>
mov    %ebx,(%esp)
call   8048df0 <__freading@plt>
test   %eax,%eax
jne    804bf38 <calloc@plt+0x2f58>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c80 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804bf28 <calloc@plt+0x2f48>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804bf70 <calloc@plt+0x2f90>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c80 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804bfb0 <calloc@plt+0x2fd0>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048cf0 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804bf8f <calloc@plt+0x2faf>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804bf8f <calloc@plt+0x2faf>
mov    %ebx,(%esp)
call   8048ec0 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8048f50 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804bff7 <calloc@plt+0x3017>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804bfef <calloc@plt+0x300f>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
orl    $0x20,(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x52c,%esp
mov    0x8(%ebp),%eax
mov    0x10(%ebp),%ebx
lea    -0x494(%ebp),%edi
mov    %edi,0x8(%esp)
mov    0x14(%ebp),%esi
mov    %eax,-0x4bc(%ebp)
mov    0xc(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,-0x4f0(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
lea    -0x41c(%ebp),%eax
mov    %eax,0x4(%esp)
call   804dd80 <calloc@plt+0x4da0>
test   %eax,%eax
js     804d110 <calloc@plt+0x4130>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804dca0 <calloc@plt+0x4cc0>
test   %eax,%eax
js     804d308 <calloc@plt+0x4328>
mov    -0x414(%ebp),%eax
lea    0x7(%eax),%edx
mov    $0xffffffff,%eax
cmp    $0x6,%edx
cmova  %edx,%eax
add    -0x410(%ebp),%eax
jb     804c248 <calloc@plt+0x3268>
lea    0x6(%eax),%edx
cmp    %edx,%eax
ja     804c248 <calloc@plt+0x3268>
cmp    $0xf9f,%edx
ja     804cd58 <calloc@plt+0x3d78>
add    $0x24,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x3b(%esp),%eax
mov    %eax,-0x4c0(%ebp)
mov    -0x4bc(%ebp),%eax
andl   $0xfffffff0,-0x4c0(%ebp)
movl   $0x0,-0x4f4(%ebp)
00
test   %eax,%eax
je     804cd8b <calloc@plt+0x3dab>
mov    -0x4f0(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4b4(%ebp)
mov    -0x418(%ebp),%eax
xor    %edx,%edx
mov    %edx,%edi
mov    %ebx,%edx
mov    -0x4bc(%ebp),%esi
movl   $0x0,-0x4c8(%ebp)
00
mov    %eax,-0x4ac(%ebp)
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
je     804c8db <calloc@plt+0x38fb>
sub    %edx,%ebx
mov    %ebx,%eax
add    %edi,%eax
mov    %eax,%ecx
mov    $0xffffffff,%eax
cmovae %ecx,%eax
mov    -0x4b4(%ebp),%ecx
mov    %eax,-0x4b8(%ebp)
cmp    %eax,%ecx
jae    804c9d8 <calloc@plt+0x39f8>
test   %ecx,%ecx
je     804c7b0 <calloc@plt+0x37d0>
js     804d2f0 <calloc@plt+0x4310>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%eax
mov    -0x4b8(%ebp),%ecx
cmp    %ecx,%eax
cmovb  %ecx,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804d2f0 <calloc@plt+0x4310>
cmp    -0x4bc(%ebp),%esi
sete   -0x4d8(%ebp)
test   %esi,%esi
je     804c195 <calloc@plt+0x31b5>
cmpb   $0x0,-0x4d8(%ebp)
je     804c7c0 <calloc@plt+0x37e0>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
je     804d2f0 <calloc@plt+0x4310>
test   %edi,%edi
jne    804ca98 <calloc@plt+0x3ab8>
add    -0x4b0(%ebp),%edi
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8048cb0 <memcpy@plt>
mov    -0x4c8(%ebp),%eax
cmp    %eax,-0x41c(%ebp)
je     804d350 <calloc@plt+0x4370>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%edx
cmp    $0x25,%dl
je     804c7f0 <calloc@plt+0x3810>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
cmp    $0xffffffff,%eax
je     804cd28 <calloc@plt+0x3d48>
cmp    $0x6e,%dl
je     804ca70 <calloc@plt+0x3a90>
and    $0xffffffdf,%edx
lea    -0x45(%edx),%ecx
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x2,%cl
jbe    804c2b0 <calloc@plt+0x32d0>
cmp    $0x41,%dl
je     804c2b0 <calloc@plt+0x32d0>
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    804c2c1 <calloc@plt+0x32e1>
lea    0x0(%esi,%eiz,1),%esi
call   8048eb0 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804c26b <calloc@plt+0x328b>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804c283 <calloc@plt+0x32a3>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0xc,(%eax)
xor    %eax,%eax
mov    -0x1c(%ebp),%ebx
xor    %gs:0x14,%ebx
jne    804dc1b <calloc@plt+0x4c3b>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%ecx
cmp    $0xc,%ecx
mov    %ecx,-0x4c4(%ebp)
je     804ce28 <calloc@plt+0x3e48>
mov    -0x4ac(%ebp),%eax
mov    -0x4c0(%ebp),%ebx
mov    0x8(%eax),%eax
add    $0x1,%ebx
movb   $0x25,-0x1(%ebx)
test   $0x1,%al
je     804c2ea <calloc@plt+0x330a>
mov    -0x4c0(%ebp),%ecx
mov    %ecx,%ebx
add    $0x2,%ebx
movb   $0x27,0x1(%ecx)
test   $0x2,%al
je     804c2f4 <calloc@plt+0x3314>
movb   $0x2d,(%ebx)
add    $0x1,%ebx
test   $0x4,%al
je     804c2fe <calloc@plt+0x331e>
movb   $0x2b,(%ebx)
add    $0x1,%ebx
test   $0x8,%al
je     804c308 <calloc@plt+0x3328>
movb   $0x20,(%ebx)
add    $0x1,%ebx
test   $0x10,%al
je     804c312 <calloc@plt+0x3332>
movb   $0x23,(%ebx)
add    $0x1,%ebx
test   $0x40,%al
je     804c31c <calloc@plt+0x333c>
movb   $0x49,(%ebx)
add    $0x1,%ebx
test   $0x20,%al
je     804c326 <calloc@plt+0x3346>
movb   $0x30,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%esi
cmp    %esi,%eax
je     804c34a <calloc@plt+0x336a>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    -0x4ac(%ebp),%edi
mov    0x18(%edi),%eax
mov    0x1c(%edi),%esi
cmp    %esi,%eax
je     804c36e <calloc@plt+0x338e>
sub    %eax,%esi
mov    %ebx,(%esp)
add    %esi,%ebx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    -0x4c4(%ebp),%eax
lea    -0x7(%eax),%ecx
cmp    $0x9,%ecx
ja     804c394 <calloc@plt+0x33b4>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x283,%eax
je     804cae0 <calloc@plt+0x3b00>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
mov    -0x4ac(%ebp),%ecx
movzbl 0x24(%ecx),%eax
movb   $0x0,0x1(%ebx)
mov    %al,(%ebx)
mov    0x14(%ecx),%eax
cmp    $0xffffffff,%eax
je     804cd50 <calloc@plt+0x3d70>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804cd28 <calloc@plt+0x3d48>
mov    0x4(%eax),%eax
mov    $0x1,%edx
mov    %eax,-0x49c(%ebp)
mov    -0x4ac(%ebp),%eax
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     804cd40 <calloc@plt+0x3d60>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804cd28 <calloc@plt+0x3d48>
mov    0x4(%eax),%eax
lea    0x1(%edx),%edi
mov    %edi,-0x4e8(%ebp)
mov    %eax,-0x49c(%ebp,%edx,4)
mov    -0x4b8(%ebp),%edi
mov    %edi,%eax
add    $0x2,%eax
cmp    %eax,%edi
mov    %eax,%ecx
mov    %eax,-0x4ec(%ebp)
mov    $0xffffffff,%eax
cmovbe %ecx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804c4f9 <calloc@plt+0x3519>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
je     804d197 <calloc@plt+0x41b7>
js     804c484 <calloc@plt+0x34a4>
mov    -0x4b4(%ebp),%eax
add    %eax,%eax
cmp    %ecx,-0x4b8(%ebp)
jbe    804c498 <calloc@plt+0x34b8>
call   8048eb0 <__errno_location@plt>
mov    %eax,-0x4d8(%ebp)
mov    -0x4b0(%ebp),%eax
test   %eax,%eax
jne    804d548 <calloc@plt+0x4568>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804c248 <calloc@plt+0x3268>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
jmp    804c253 <calloc@plt+0x3273>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     804c450 <calloc@plt+0x3470>
or     $0xffffffff,%eax
lea    0x0(%esi),%esi
mov    -0x4ec(%ebp),%edi
cmp    %eax,%edi
cmovae %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804c450 <calloc@plt+0x3470>
mov    -0x4bc(%ebp),%eax
mov    -0x4b0(%ebp),%edi
cmp    %eax,%edi
sete   %al
test   %edi,%edi
mov    %eax,%esi
je     804c4cd <calloc@plt+0x34ed>
test   %al,%al
je     804cda0 <calloc@plt+0x3dc0>
mov    -0x4b4(%ebp),%eax
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    %eax,%edi
test   %edi,%edi
je     804c450 <calloc@plt+0x3470>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804cdf0 <calloc@plt+0x3e10>
mov    %edi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%edi
mov    -0x4b8(%ebp),%esi
movb   $0x0,(%edi,%esi,1)
call   8048eb0 <__errno_location@plt>
mov    -0x4b4(%ebp),%edi
mov    %ebx,-0x4b4(%ebp)
mov    %esi,%ebx
mov    %eax,-0x4d8(%ebp)
mov    (%eax),%eax
mov    %eax,-0x4f8(%ebp)
mov    %edi,%esi
mov    $0x7fffffff,%eax
sub    %ebx,%esi
cmovs  %eax,%esi
mov    -0x4d8(%ebp),%eax
movl   $0xffffffff,-0x4a0(%ebp)
ff
movl   $0x0,(%eax)
mov    -0x4c4(%ebp),%eax
cmp    $0x11,%eax
ja     804cd28 <calloc@plt+0x3d48>
jmp    *0x804f58c(,%eax,4)
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
je     804ca10 <calloc@plt+0x3a30>
cmp    $0x2,%ecx
jne    804c990 <calloc@plt+0x39b0>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x20(%esp)
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
mov    -0x4a0(%ebp),%edx
test   %edx,%edx
js     804c8f0 <calloc@plt+0x3910>
cmp    %edx,%esi
jbe    804c609 <calloc@plt+0x3629>
mov    -0x4b0(%ebp),%ecx
add    %edx,%ecx
cmpb   $0x0,(%ecx,%ebx,1)
jne    804cd28 <calloc@plt+0x3d48>
cmp    %edx,%eax
jle    804c615 <calloc@plt+0x3635>
mov    %eax,-0x4a0(%ebp)
mov    %eax,%edx
lea    0x1(%edx),%eax
cmp    %eax,%esi
ja     804d520 <calloc@plt+0x4540>
cmp    $0x7fffffff,%esi
je     804d570 <calloc@plt+0x4590>
test   %edi,%edi
mov    $0xffffffff,%eax
lea    (%edi,%edi,1),%ecx
cmovs  %eax,%ecx
add    -0x4ec(%ebp),%edx
cmp    %edx,%ebx
ja     804c64a <calloc@plt+0x366a>
cmp    %edx,%ecx
mov    %edx,%eax
cmovae %ecx,%eax
cmp    %eax,%edi
jae    804c52a <calloc@plt+0x354a>
test   %edi,%edi
je     804ca60 <calloc@plt+0x3a80>
js     804c45b <calloc@plt+0x347b>
add    %edi,%edi
cmp    %eax,%edi
cmovb  %eax,%edi
cmp    $0xffffffff,%edi
je     804c45b <calloc@plt+0x347b>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ecx
cmp    %ecx,%eax
sete   %dl
test   %eax,%eax
mov    %edx,-0x4fc(%ebp)
je     804c798 <calloc@plt+0x37b8>
test   %dl,%dl
jne    804c798 <calloc@plt+0x37b8>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     804c45b <calloc@plt+0x347b>
test   %dl,%dl
jne    804cdc0 <calloc@plt+0x3de0>
mov    %esi,-0x4b0(%ebp)
jmp    804c52a <calloc@plt+0x354a>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
je     804ccd8 <calloc@plt+0x3cf8>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    804d128 <calloc@plt+0x4148>
mov    %eax,0x1c(%esp)
mov    -0x498(%ebp),%eax
mov    %ecx,0x24(%esp)
mov    %edx,0x20(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
mov    0x4(%eax),%eax
jne    804c58c <calloc@plt+0x35ac>
lea    -0x4a0(%ebp),%edx
mov    %edx,0x1c(%esp)
jmp    804ca1a <calloc@plt+0x3a3a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8048de0 <malloc@plt>
mov    -0x4fc(%ebp),%edx
mov    %eax,%esi
jmp    804c6b1 <calloc@plt+0x36d1>
lea    0x0(%esi),%esi
movl   $0xc,-0x4b4(%ebp)
00
jmp    804c157 <calloc@plt+0x3177>
nop
mov    -0x4b4(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
call   8048dd0 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,-0x4b0(%ebp)
jmp    804c1b5 <calloc@plt+0x31d5>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xffffffff,0x28(%eax)
jne    804cd28 <calloc@plt+0x3d48>
mov    -0x4b8(%ebp),%eax
lea    0x1(%eax),%edi
cmp    %edi,%eax
mov    $0xffffffff,%eax
cmova  %eax,%edi
cmp    %edi,-0x4b4(%ebp)
jae    804c8a2 <calloc@plt+0x38c2>
mov    -0x4b4(%ebp),%eax
test   %eax,%eax
jne    804cca8 <calloc@plt+0x3cc8>
movl   $0xc,-0x4b4(%ebp)
00
mov    -0x4b4(%ebp),%eax
cmp    %edi,%eax
cmovb  %edi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804c450 <calloc@plt+0x3470>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%ebx
cmp    %ebx,%eax
sete   %bl
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     804cd30 <calloc@plt+0x3d50>
test   %bl,%bl
jne    804cd30 <calloc@plt+0x3d50>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804c450 <calloc@plt+0x3470>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804d168 <calloc@plt+0x4188>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
mov    -0x4b8(%ebp),%ebx
mov    %eax,%esi
movb   $0x25,(%eax,%ebx,1)
mov    -0x4ac(%ebp),%eax
addl   $0x2c,-0x4ac(%ebp)
addl   $0x1,-0x4c8(%ebp)
mov    0x4(%eax),%edx
mov    -0x4ac(%ebp),%eax
mov    (%eax),%ebx
cmp    %edx,%ebx
jne    804c11f <calloc@plt+0x313f>
mov    %edi,-0x4b8(%ebp)
mov    %esi,-0x4b0(%ebp)
jmp    804c1e1 <calloc@plt+0x3201>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b4(%ebp),%ecx
cmpb   $0x0,0x1(%ecx)
jne    804cad0 <calloc@plt+0x3af0>
test   %eax,%eax
jns    804c60d <calloc@plt+0x362d>
mov    -0x4b0(%ebp),%esi
mov    -0x4d8(%ebp),%eax
test   %esi,%esi
mov    (%eax),%ebx
jne    804d283 <calloc@plt+0x42a3>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804c930 <calloc@plt+0x3950>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804c948 <calloc@plt+0x3968>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804c960 <calloc@plt+0x3980>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
test   %ebx,%ebx
jne    804c97d <calloc@plt+0x399d>
mov    -0x4ac(%ebp),%eax
mov    $0x54,%bl
movzbl 0x24(%eax),%eax
and    $0xffffffef,%eax
cmp    $0x63,%al
mov    $0x16,%eax
cmovne %eax,%ebx
mov    -0x4d8(%ebp),%eax
mov    %ebx,(%eax)
xor    %eax,%eax
jmp    804c291 <calloc@plt+0x32b1>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%ecx
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,-0x4b0(%ebp)
jmp    804c1cb <calloc@plt+0x31eb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzbl 0x4(%eax),%eax
jne    804cbdd <calloc@plt+0x3bfd>
lea    0x0(%esi),%esi
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xc,%edi
jmp    804c662 <calloc@plt+0x3682>
lea    0x0(%esi),%esi
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%ebx
lea    -0x12(%ebx),%edx
cmp    $0x4,%edx
ja     804cd28 <calloc@plt+0x3d48>
mov    0x4(%eax),%eax
jmp    *0x804f5d4(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x4d8(%ebp)
je     804c1cb <calloc@plt+0x31eb>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,(%esp)
call   8048cb0 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
jmp    804c1cb <calloc@plt+0x31eb>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x1(%ecx)
jmp    804c52a <calloc@plt+0x354a>
lea    0x0(%esi,%eiz,1),%esi
test   $0x20,%al
jne    804d118 <calloc@plt+0x4138>
test   $0xc,%al
je     804c394 <calloc@plt+0x33b4>
movb   $0x6c,(%ebx)
add    $0x1,%ebx
jmp    804c38e <calloc@plt+0x33ae>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldl   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     804d4d0 <calloc@plt+0x44f0>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    804d248 <calloc@plt+0x4268>
mov    %eax,0x24(%esp)
mov    -0x498(%ebp),%eax
fstpl  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movzwl 0x4(%eax),%eax
jne    804c58c <calloc@plt+0x35ac>
jmp    804ca10 <calloc@plt+0x3a30>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movswl 0x4(%eax),%eax
je     804ca10 <calloc@plt+0x3a30>
cmp    $0x2,%ecx
lea    -0x4a0(%ebp),%ecx
jne    804c996 <calloc@plt+0x39b6>
mov    %ecx,0x20(%esp)
jmp    804c59f <calloc@plt+0x35bf>
lea    0x0(%esi),%esi
mov    -0x4ac(%ebp),%eax
mov    -0x4e8(%ebp),%ecx
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmp    $0x1,%ecx
movsbl 0x4(%eax),%eax
jne    804cbdd <calloc@plt+0x3bfd>
jmp    804ca10 <calloc@plt+0x3a30>
xchg   %ax,%ax
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
mov    -0x4e8(%ebp),%eax
cmp    $0x1,%eax
je     804d480 <calloc@plt+0x44a0>
cmp    $0x2,%eax
lea    -0x4a0(%ebp),%eax
jne    804d208 <calloc@plt+0x4228>
mov    %eax,0x28(%esp)
mov    -0x498(%ebp),%eax
fstpt  0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
lea    0x0(%esi),%esi
js     804c450 <calloc@plt+0x3470>
shll   -0x4b4(%ebp)
jmp    804c831 <calloc@plt+0x3851>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    804c8b4 <calloc@plt+0x38d4>
lea    0x0(%esi),%esi
mov    %eax,0x18(%esp)
mov    -0x49c(%ebp),%eax
lea    -0x4a0(%ebp),%ecx
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
nop
call   8048fa0 <abort@plt>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    %eax,%esi
jmp    804c886 <calloc@plt+0x38a6>
nop
mov    %edx,-0x4e8(%ebp)
jmp    804c407 <calloc@plt+0x3427>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
jmp    804c3d0 <calloc@plt+0x33f0>
nop
cmp    $0xffffffff,%edx
je     804c248 <calloc@plt+0x3268>
mov    %edx,(%esp)
call   8048de0 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x4c0(%ebp)
je     804c248 <calloc@plt+0x3268>
mov    %eax,-0x4f4(%ebp)
mov    -0x4bc(%ebp),%eax
test   %eax,%eax
jne    804c0df <calloc@plt+0x30ff>
movl   $0x0,-0x4b4(%ebp)
00
jmp    804c0ed <calloc@plt+0x310d>
lea    0x0(%esi),%esi
mov    -0x4b4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
mov    %eax,%edi
jmp    804c4dd <calloc@plt+0x34fd>
nop
test   %ebx,%ebx
je     804c6c1 <calloc@plt+0x36e1>
mov    -0x4b0(%ebp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804c52a <calloc@plt+0x354a>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
je     804c4f3 <calloc@plt+0x3513>
mov    -0x4b8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    %edi,-0x4b0(%ebp)
jmp    804c4f9 <calloc@plt+0x3519>
lea    0x0(%esi,%eiz,1),%esi
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4d8(%ebp)
call   804dc40 <calloc@plt+0x4c60>
test   %eax,%eax
fldt   -0x4d8(%ebp)
jne    804ce78 <calloc@plt+0x3e98>
fld    %st(0)
fadd   %st(1),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jp     804ce53 <calloc@plt+0x3e73>
je     804ce7a <calloc@plt+0x3e9a>
mov    -0x4ac(%ebp),%eax
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
mov    (%eax),%eax
mov    %eax,-0x4c4(%ebp)
jmp    804c2c1 <calloc@plt+0x32e1>
lea    0x0(%esi),%esi
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
mov    0x8(%eax),%ebx
mov    %ebx,-0x4c4(%ebp)
mov    %eax,%ebx
mov    0xc(%eax),%eax
mov    0x10(%ebx),%ebx
cmp    %ebx,%eax
je     804d761 <calloc@plt+0x4781>
mov    -0x4ac(%ebp),%esi
mov    0x14(%esi),%edx
cmp    $0xffffffff,%edx
je     804d2a8 <calloc@plt+0x42c8>
shl    $0x4,%edx
add    -0x490(%ebp),%edx
cmpl   $0x5,(%edx)
jne    804cd28 <calloc@plt+0x3d48>
mov    0x4(%edx),%edi
movl   $0x1,-0x4ec(%ebp)
00
test   %edi,%edi
js     804d7f6 <calloc@plt+0x4816>
mov    -0x4ac(%ebp),%eax
mov    0x18(%eax),%edx
mov    0x1c(%eax),%ebx
cmp    %ebx,%edx
je     804d691 <calloc@plt+0x46b1>
mov    0x20(%eax),%eax
cmp    $0xffffffff,%eax
je     804d722 <calloc@plt+0x4742>
shl    $0x4,%eax
add    -0x490(%ebp),%eax
cmpl   $0x5,(%eax)
jne    804cd28 <calloc@plt+0x3d48>
mov    0x4(%eax),%esi
test   %esi,%esi
js     804d691 <calloc@plt+0x46b1>
test   %esi,%esi
jne    804d6c8 <calloc@plt+0x46e8>
mov    $0xc,%eax
cmp    %eax,%edi
jbe    804dc2c <calloc@plt+0x4c4c>
lea    0x1(%edi),%eax
mov    %eax,-0x4d8(%ebp)
mov    %edi,%eax
cmp    -0x4d8(%ebp),%eax
ja     804c450 <calloc@plt+0x3470>
cmpl   $0x2bc,-0x4d8(%ebp)
00
lea    -0x2d8(%ebp),%edx
ja     804d772 <calloc@plt+0x4792>
mov    -0x4ac(%ebp),%eax
mov    %edx,-0x4f8(%ebp)
mov    0x28(%eax),%eax
shl    $0x4,%eax
add    -0x490(%ebp),%eax
fldt   0x4(%eax)
fld    %st(0)
fstpt  (%esp)
fstpt  -0x4e8(%ebp)
call   804dc40 <calloc@plt+0x4c60>
mov    -0x4f8(%ebp),%edx
test   %eax,%eax
fldt   -0x4e8(%ebp)
je     804d5d8 <calloc@plt+0x45f8>
fstp   %st(0)
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     804d6e7 <calloc@plt+0x4707>
movb   $0x4e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x41,0x1(%edx)
movb   $0x4e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
mov    -0x4ec(%ebp),%esi
mov    %ecx,%ebx
sub    %edx,%ebx
test   %esi,%esi
je     804cffd <calloc@plt+0x401d>
cmp    %ebx,%edi
jbe    804cffd <calloc@plt+0x401d>
mov    %edx,%eax
sub    %ecx,%eax
add    %eax,%edi
testb  $0x2,-0x4c4(%ebp)
lea    (%ecx,%edi,1),%ebx
je     804d951 <calloc@plt+0x4971>
test   %edi,%edi
je     804cffb <calloc@plt+0x401b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,%ebx
movb   $0x20,-0x1(%ecx)
jne    804cff0 <calloc@plt+0x4010>
sub    %edx,%ebx
cmp    %ebx,-0x4d8(%ebp)
jbe    804cd28 <calloc@plt+0x3d48>
mov    -0x4b4(%ebp),%eax
sub    -0x4b8(%ebp),%eax
cmp    %ebx,%eax
ja     804d6ba <calloc@plt+0x46da>
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
add    %ebx,%edi
cmovae %edi,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804d0cb <calloc@plt+0x40eb>
mov    -0x4b4(%ebp),%ecx
test   %ecx,%ecx
je     804d7bc <calloc@plt+0x47dc>
js     804c450 <calloc@plt+0x3470>
shll   -0x4b4(%ebp)
mov    -0x4b4(%ebp),%esi
cmp    %eax,%esi
cmovae %esi,%eax
cmp    $0xffffffff,%eax
mov    %eax,-0x4b4(%ebp)
je     804c450 <calloc@plt+0x3470>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4d8(%ebp)
test   %eax,%eax
je     804d093 <calloc@plt+0x40b3>
cmpb   $0x0,-0x4d8(%ebp)
je     804d7cb <calloc@plt+0x47eb>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
test   %esi,%esi
je     804c450 <calloc@plt+0x3470>
mov    -0x4b8(%ebp),%eax
test   %eax,%eax
jne    804d9a8 <calloc@plt+0x49c8>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b8(%ebp),%eax
add    -0x4b0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,-0x4b8(%ebp)
call   8048cb0 <memcpy@plt>
mov    -0x4b8(%ebp),%edx
lea    -0x2d8(%ebp),%eax
cmp    %eax,%edx
je     804d105 <calloc@plt+0x4125>
mov    %edx,(%esp)
call   8048ca0 <free@plt>
mov    -0x4b0(%ebp),%esi
jmp    804c8b4 <calloc@plt+0x38d4>
xor    %eax,%eax
jmp    804c291 <calloc@plt+0x32b1>
nop
movb   $0x4c,(%ebx)
add    $0x1,%ebx
jmp    804c394 <calloc@plt+0x33b4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
nop
test   %bl,%bl
je     804c89c <calloc@plt+0x38bc>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804c8a2 <calloc@plt+0x38c2>
mov    -0x4ec(%ebp),%eax
cmp    %eax,-0x4b8(%ebp)
ja     804c450 <calloc@plt+0x3470>
mov    $0xc,%eax
jmp    804c498 <calloc@plt+0x34b8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%ebx
movl   $0x0,0x4(%eax)
mov    %ebx,(%eax)
mov    %ebx,%edi
mov    -0x4b0(%ebp),%esi
jmp    804c8b4 <calloc@plt+0x38d4>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %edi,%ecx
mov    %cl,(%eax)
jmp    804c8b4 <calloc@plt+0x38d4>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    -0x4b0(%ebp),%esi
mov    %di,(%eax)
jmp    804c8b4 <calloc@plt+0x38d4>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x20(%esp)
mov    -0x4c0(%ebp),%eax
fstpt  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x1c(%esp)
mov    -0x4c0(%ebp),%eax
fstpl  0x14(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
mov    -0x4b0(%ebp),%eax
cmp    %eax,-0x4bc(%ebp)
je     804c91e <calloc@plt+0x393e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048ca0 <free@plt>
jmp    804c91e <calloc@plt+0x393e>
xor    %edi,%edi
lea    0x0(%esi),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%ecx
mov    $0xffffffff,%edx
sub    $0x30,%ecx
cmp    $0x19999999,%edi
ja     804d2cc <calloc@plt+0x42ec>
lea    (%edi,%edi,4),%edx
add    %edx,%edx
mov    %edx,%edi
mov    $0xffffffff,%esi
add    %ecx,%edi
cmovb  %esi,%edi
cmp    %ebx,%eax
jne    804d2b0 <calloc@plt+0x42d0>
movl   $0x1,-0x4ec(%ebp)
00
jmp    804ced2 <calloc@plt+0x3ef2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8048eb0 <__errno_location@plt>
mov    %esi,-0x4b0(%ebp)
mov    %eax,-0x4d8(%ebp)
jmp    804c45b <calloc@plt+0x347b>
xchg   %ax,%ax
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804d320 <calloc@plt+0x4340>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804d338 <calloc@plt+0x4358>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
call   8048eb0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    804c291 <calloc@plt+0x32b1>
lea    0x0(%esi),%esi
mov    -0x4b8(%ebp),%edi
mov    $0xffffffff,%eax
mov    %eax,%edx
lea    0x1(%edi),%ebx
cmp    %edi,%ebx
cmovae %ebx,%edx
cmp    -0x4b4(%ebp),%edx
jbe    804d40c <calloc@plt+0x442c>
mov    -0x4b4(%ebp),%edx
test   %edx,%edx
je     804d804 <calloc@plt+0x4824>
mov    -0x4b4(%ebp),%esi
lea    (%esi,%esi,1),%edx
test   %esi,%esi
cmovns %edx,%eax
mov    %eax,-0x4b4(%ebp)
cmp    %edi,%ebx
mov    $0xffffffff,%eax
cmovae %ebx,%eax
cmp    %eax,-0x4b4(%ebp)
jae    804d3b3 <calloc@plt+0x43d3>
cmp    %edi,%ebx
jb     804c450 <calloc@plt+0x3470>
mov    %ebx,-0x4b4(%ebp)
cmpl   $0xffffffff,-0x4b4(%ebp)
je     804c450 <calloc@plt+0x3470>
mov    -0x4b0(%ebp),%eax
mov    -0x4bc(%ebp),%esi
cmp    %esi,%eax
sete   -0x4ac(%ebp)
test   %eax,%eax
mov    -0x4b4(%ebp),%eax
je     804d3ec <calloc@plt+0x440c>
cmpb   $0x0,-0x4ac(%ebp)
je     804d813 <calloc@plt+0x4833>
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804c450 <calloc@plt+0x3470>
test   %edi,%edi
jne    804da05 <calloc@plt+0x4a25>
mov    %esi,-0x4b0(%ebp)
mov    -0x4b0(%ebp),%eax
cmp    -0x4bc(%ebp),%eax
movb   $0x0,(%eax,%edi,1)
je     804d42a <calloc@plt+0x444a>
cmp    %ebx,-0x4b4(%ebp)
ja     804d82c <calloc@plt+0x484c>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804d43c <calloc@plt+0x445c>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804d454 <calloc@plt+0x4474>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804d46c <calloc@plt+0x448c>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x4f0(%ebp),%eax
mov    %edi,(%eax)
mov    -0x4b0(%ebp),%eax
jmp    804c291 <calloc@plt+0x32b1>
nop
lea    -0x4a0(%ebp),%eax
mov    %eax,0x24(%esp)
mov    -0x49c(%ebp),%eax
fstpt  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4a0(%ebp),%eax
mov    %eax,0x20(%esp)
mov    -0x49c(%ebp),%eax
fstpl  0x18(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    -0x4c0(%ebp),%eax
mov    %eax,0x10(%esp)
mov    -0x4b0(%ebp),%eax
add    %ebx,%eax
mov    %eax,(%esp)
call   8048c50 <__snprintf_chk@plt>
jmp    804c5e5 <calloc@plt+0x3605>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0x4b4(%ebp)
mov    -0x4d8(%ebp),%eax
mov    -0x4b8(%ebp),%edi
mov    -0x4f8(%ebp),%ebx
add    %edx,%edi
mov    %ebx,(%eax)
jmp    804d105 <calloc@plt+0x4125>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     804c469 <calloc@plt+0x3489>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048ca0 <free@plt>
jmp    804c469 <calloc@plt+0x3489>
lea    0x0(%esi),%esi
mov    -0x4b0(%ebp),%ecx
test   %ecx,%ecx
jne    804d84a <calloc@plt+0x486a>
mov    -0x4f4(%ebp),%eax
test   %eax,%eax
je     804d590 <calloc@plt+0x45b0>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x418(%ebp),%eax
lea    -0x40c(%ebp),%edx
cmp    %edx,%eax
je     804d5a8 <calloc@plt+0x45c8>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x490(%ebp),%eax
lea    -0x48c(%ebp),%edx
cmp    %edx,%eax
je     804d5c0 <calloc@plt+0x45e0>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    -0x4d8(%ebp),%eax
movl   $0x4b,(%eax)
xor    %eax,%eax
jmp    804c291 <calloc@plt+0x32b1>
nop
lea    0x0(%esi,%eiz,1),%esi
fnstcw -0x49c(%ebp)
movzwl -0x49c(%ebp),%eax
mov    %ax,-0x4f8(%ebp)
or     $0x3,%ah
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
fxam
fnstsw %ax
test   $0x2,%ah
je     804d704 <calloc@plt+0x4724>
lea    0x1(%edx),%eax
fchs
mov    %eax,-0x4e8(%ebp)
movb   $0x2d,(%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jbe    804d86f <calloc@plt+0x488f>
fld    %st(0)
fadd   %st(1),%st
fucomip %st(1),%st
fstp   %st(0)
jp     804cd28 <calloc@plt+0x3d48>
jne    804cd28 <calloc@plt+0x3d48>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
mov    %al,-0x4fc(%ebp)
sub    $0x41,%eax
cmp    $0x19,%al
mov    -0x4e8(%ebp),%eax
ja     804d9e8 <calloc@plt+0x4a08>
movb   $0x49,(%eax)
lea    0x3(%eax),%ecx
movb   $0x4e,0x1(%eax)
movb   $0x46,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
lea    0x0(%esi),%esi
movzwl -0x4f8(%ebp),%eax
mov    %ax,-0x49c(%ebp)
fldcw  -0x49c(%ebp)
jmp    804cfbf <calloc@plt+0x3fdf>
mov    -0x4ac(%ebp),%eax
xor    %esi,%esi
movzbl 0x24(%eax),%edx
mov    $0x6,%eax
and    $0xffffffdf,%edx
cmp    $0x41,%dl
mov    $0x12,%edx
cmovne %eax,%esi
mov    $0xc,%al
cmovne %edx,%eax
jmp    804cf1c <calloc@plt+0x3f3c>
mov    -0x4b8(%ebp),%eax
lea    (%ebx,%eax,1),%edi
jmp    804d0cb <calloc@plt+0x40eb>
lea    0xc(%esi),%eax
cmp    %esi,%eax
jae    804cf1c <calloc@plt+0x3f3c>
movl   $0x0,-0x4d8(%ebp)
00
mov    $0xffffffff,%eax
jmp    804cf2f <calloc@plt+0x3f4f>
movb   $0x6e,(%edx)
lea    0x3(%edx),%ecx
movb   $0x61,0x1(%edx)
movb   $0x6e,0x2(%edx)
movl   $0x0,-0x4e8(%ebp)
00
jmp    804cfbf <calloc@plt+0x3fdf>
testb  $0x4,-0x4c4(%ebp)
je     804d798 <calloc@plt+0x47b8>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x2b,(%edx)
jmp    804d617 <calloc@plt+0x4637>
add    $0x1,%edx
xor    %esi,%esi
cmp    %edx,%ebx
je     804cf17 <calloc@plt+0x3f37>
nop
add    $0x1,%edx
movsbl -0x1(%edx),%ecx
mov    $0xffffffff,%eax
sub    $0x30,%ecx
cmp    $0x19999999,%esi
ja     804d74c <calloc@plt+0x476c>
lea    (%esi,%esi,4),%eax
add    %eax,%eax
add    %ecx,%eax
mov    %eax,%esi
mov    $0xffffffff,%eax
cmovb  %eax,%esi
cmp    %ebx,%edx
jne    804d730 <calloc@plt+0x4750>
jmp    804cf0f <calloc@plt+0x3f2f>
xor    %edi,%edi
movl   $0x0,-0x4ec(%ebp)
00
jmp    804ced2 <calloc@plt+0x3ef2>
mov    -0x4d8(%ebp),%eax
cmp    $0xffffffff,%eax
je     804c450 <calloc@plt+0x3470>
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
jne    804cf51 <calloc@plt+0x3f71>
jmp    804c450 <calloc@plt+0x3470>
testb  $0x8,-0x4c4(%ebp)
mov    %edx,-0x4e8(%ebp)
je     804d617 <calloc@plt+0x4637>
lea    0x1(%edx),%eax
mov    %eax,-0x4e8(%ebp)
movb   $0x20,(%edx)
jmp    804d617 <calloc@plt+0x4637>
movl   $0xc,-0x4b4(%ebp)
00
jmp    804d053 <calloc@plt+0x4073>
mov    -0x4b4(%ebp),%eax
mov    %edx,-0x4c4(%ebp)
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
mov    -0x4c4(%ebp),%edx
mov    %eax,%esi
jmp    804d0af <calloc@plt+0x40cf>
orl    $0x2,-0x4c4(%ebp)
neg    %edi
jmp    804ced2 <calloc@plt+0x3ef2>
movl   $0xc,-0x4b4(%ebp)
00
jmp    804d393 <calloc@plt+0x43b3>
mov    %eax,0x4(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
mov    %eax,%esi
jmp    804d3f6 <calloc@plt+0x4416>
mov    %ebx,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
test   %eax,%eax
cmove  %ebx,%eax
mov    %eax,-0x4b0(%ebp)
jmp    804d42a <calloc@plt+0x444a>
mov    -0x4bc(%ebp),%eax
cmp    %eax,-0x4b0(%ebp)
je     804d57e <calloc@plt+0x459e>
mov    -0x4b0(%ebp),%eax
mov    %eax,(%esp)
call   8048ca0 <free@plt>
jmp    804d57e <calloc@plt+0x459e>
fstp   %st(0)
jp     804cd28 <calloc@plt+0x3d48>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jne    804cd28 <calloc@plt+0x3d48>
mov    -0x4ac(%ebp),%eax
movzbl 0x24(%eax),%eax
and    $0xffffffdf,%eax
cmp    $0x46,%al
jne    804d908 <calloc@plt+0x4928>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    804d8b4 <calloc@plt+0x48d4>
test   %esi,%esi
lea    0x1(%eax),%ecx
je     804d678 <calloc@plt+0x4698>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8048f00 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     804dc0d <calloc@plt+0x4c2d>
lea    (%ebx,%esi,1),%ecx
xchg   %ax,%ax
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    804d8f8 <calloc@plt+0x4918>
jmp    804d678 <calloc@plt+0x4698>
cmp    $0x45,%al
jne    804da33 <calloc@plt+0x4a53>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
jne    804daf8 <calloc@plt+0x4b18>
test   %esi,%esi
jne    804daf8 <calloc@plt+0x4b18>
lea    0x1(%eax),%esi
mov    -0x4ac(%ebp),%eax
lea    0x4(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
movb   $0x30,0x3(%esi)
mov    %al,(%esi)
jmp    804d678 <calloc@plt+0x4698>
testb  $0x20,-0x4c4(%ebp)
je     804dabd <calloc@plt+0x4add>
mov    -0x4e8(%ebp),%esi
test   %esi,%esi
je     804dabd <calloc@plt+0x4add>
cmp    %ecx,%esi
jae    804d98d <calloc@plt+0x49ad>
mov    %ebx,%eax
mov    %edx,-0x4c4(%ebp)
sub    $0x1,%ecx
movzbl (%ecx),%edx
sub    $0x1,%eax
cmp    %esi,%ecx
mov    %dl,(%eax)
jne    804d978 <calloc@plt+0x4998>
mov    -0x4c4(%ebp),%edx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     804cffb <calloc@plt+0x401b>
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x30,-0x1(%ecx)
jne    804d998 <calloc@plt+0x49b8>
jmp    804cffb <calloc@plt+0x401b>
cmpb   $0x0,-0x4d8(%ebp)
je     804d0c5 <calloc@plt+0x40e5>
mov    -0x4b8(%ebp),%eax
mov    %esi,(%esp)
mov    %edx,-0x4d8(%ebp)
mov    %eax,0x8(%esp)
mov    -0x4b0(%ebp),%eax
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    -0x4d8(%ebp),%edx
mov    %esi,-0x4b0(%ebp)
jmp    804d0cb <calloc@plt+0x40eb>
movb   $0x69,(%eax)
lea    0x3(%eax),%ecx
movb   $0x6e,0x1(%eax)
movb   $0x66,0x2(%eax)
movl   $0x0,-0x4e8(%ebp)
00
jmp    804d678 <calloc@plt+0x4698>
cmpb   $0x0,-0x4ac(%ebp)
je     804d406 <calloc@plt+0x4426>
mov    -0x4b0(%ebp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    %esi,-0x4b0(%ebp)
jmp    804d40c <calloc@plt+0x442c>
cmp    $0x47,%al
jne    804db50 <calloc@plt+0x4b70>
mov    -0x4e8(%ebp),%eax
testb  $0x10,-0x4c4(%ebp)
movb   $0x30,(%eax)
lea    0x1(%eax),%ecx
je     804d678 <calloc@plt+0x4698>
lea    -0x1(%esi),%eax
xor    %ecx,%ecx
test   %esi,%esi
cmovne %eax,%ecx
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
mov    %ecx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8048f00 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%esi
mov    $0x2e,%eax
mov    %esi,%ecx
test   %cl,%cl
mov    -0x4fc(%ebp),%ecx
cmovne %esi,%eax
mov    -0x4e8(%ebp),%esi
test   %ecx,%ecx
mov    %al,0x1(%esi)
je     804dc0d <calloc@plt+0x4c2d>
add    %ebx,%ecx
add    $0x1,%ebx
cmp    %ecx,%ebx
movb   $0x30,-0x1(%ebx)
jne    804daad <calloc@plt+0x4acd>
jmp    804d678 <calloc@plt+0x4698>
cmp    %ecx,%edx
mov    %ebx,%esi
mov    %ecx,%eax
jae    804dad9 <calloc@plt+0x4af9>
lea    0x0(%esi),%esi
sub    $0x1,%eax
movzbl (%eax),%ecx
sub    $0x1,%esi
cmp    %edx,%eax
mov    %cl,(%esi)
jne    804dac8 <calloc@plt+0x4ae8>
mov    %edx,%ecx
test   %edi,%edi
lea    (%ecx,%edi,1),%eax
je     804cffb <calloc@plt+0x401b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %eax,%ecx
movb   $0x20,-0x1(%ecx)
jne    804dae8 <calloc@plt+0x4b08>
jmp    804cffb <calloc@plt+0x401b>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x4fc(%ebp)
lea    0x2(%eax),%ebx
call   8048f00 <nl_langinfo@plt>
mov    -0x4fc(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x1(%ecx)
je     804dc14 <calloc@plt+0x4c34>
add    %ebx,%esi
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    804db40 <calloc@plt+0x4b60>
jmp    804d931 <calloc@plt+0x4951>
cmp    $0x41,%al
jne    804cd28 <calloc@plt+0x3d48>
mov    -0x4e8(%ebp),%ebx
mov    %ebx,%eax
add    $0x2,%eax
mov    %eax,-0x4fc(%ebp)
mov    -0x4ac(%ebp),%eax
movb   $0x30,(%ebx)
movzbl 0x24(%eax),%eax
movb   $0x30,0x2(%ebx)
mov    %al,-0x500(%ebp)
add    $0x17,%eax
testb  $0x10,-0x4c4(%ebp)
mov    %al,0x1(%ebx)
jne    804dbc3 <calloc@plt+0x4be3>
test   %esi,%esi
jne    804dbc3 <calloc@plt+0x4be3>
mov    %ebx,%esi
add    $0x3,%esi
mov    -0x4ac(%ebp),%eax
lea    0x3(%esi),%ecx
movzbl 0x24(%eax),%eax
movb   $0x2b,0x1(%esi)
movb   $0x30,0x2(%esi)
add    $0xf,%eax
mov    %al,(%esi)
mov    -0x4fc(%ebp),%eax
mov    %eax,-0x4e8(%ebp)
jmp    804d678 <calloc@plt+0x4698>
mov    -0x4e8(%ebp),%eax
movl   $0x10000,(%esp)
mov    %edx,-0x500(%ebp)
lea    0x4(%eax),%ebx
call   8048f00 <nl_langinfo@plt>
mov    -0x500(%ebp),%edx
movzbl (%eax),%ecx
mov    $0x2e,%eax
test   %cl,%cl
cmovne %ecx,%eax
mov    -0x4e8(%ebp),%ecx
test   %esi,%esi
mov    %al,0x3(%ecx)
je     804dc25 <calloc@plt+0x4c45>
add    %ebx,%esi
add    $0x1,%ebx
cmp    %esi,%ebx
movb   $0x30,-0x1(%ebx)
jne    804dc00 <calloc@plt+0x4c20>
jmp    804db98 <calloc@plt+0x4bb8>
mov    %ebx,%ecx
jmp    804d678 <calloc@plt+0x4698>
mov    %ebx,%esi
jmp    804d931 <calloc@plt+0x4951>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8048d20 <__stack_chk_fail@plt>
mov    %ebx,%esi
jmp    804db98 <calloc@plt+0x4bb8>
lea    0x1(%eax),%ebx
mov    %ebx,-0x4d8(%ebp)
jmp    804cf2f <calloc@plt+0x3f4f>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
fldt   0x20(%esp)
fstpt  (%esp)
mov    0x8(%esp),%eax
and    $0x7fff,%eax
je     804dc70 <calloc@plt+0x4c90>
cmp    $0x7fff,%eax
mov    0x4(%esp),%eax
je     804dc80 <calloc@plt+0x4ca0>
shr    $0x1f,%eax
add    $0x1c,%esp
xor    $0x1,%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
add    $0x1c,%esp
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x80000000,%eax
or     (%esp),%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x14(%esp),%edi
mov    0x10(%esp),%ecx
mov    (%edi),%ebx
mov    0x4(%edi),%eax
test   %ebx,%ebx
je     804dce2 <calloc@plt+0x4d02>
xchg   %ax,%ax
cmpl   $0x16,(%eax)
ja     804dd70 <calloc@plt+0x4d90>
mov    (%eax),%ebx
jmp    *0x804f5f0(,%ebx,4)
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %esi,0x4(%eax)
add    $0x1,%edx
add    $0x10,%eax
cmp    %edx,(%edi)
ja     804dcb8 <calloc@plt+0x4cd8>
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
mov    (%ecx),%ebx
add    $0x8,%ecx
mov    -0x4(%ecx),%esi
mov    %ebx,0x4(%eax)
mov    %esi,0x8(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
mov    (%ecx),%esi
add    $0x4,%ecx
mov    %si,0x4(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
add    $0x4,%ecx
mov    %bl,0x4(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
nop
lea    0x0(%esi,%eiz,1),%esi
fldl   (%ecx)
add    $0x8,%ecx
fstpl  0x4(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
lea    0x0(%esi),%esi
fldt   (%ecx)
add    $0xc,%ecx
fstpt  0x4(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    804dcd8 <calloc@plt+0x4cf8>
movl   $0x804f5e8,0x4(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
lea    0x0(%esi),%esi
mov    (%ecx),%esi
add    $0x4,%ecx
test   %esi,%esi
mov    %esi,0x4(%eax)
jne    804dcd8 <calloc@plt+0x4cf8>
movl   $0x804f64c,0x4(%eax)
jmp    804dcd8 <calloc@plt+0x4cf8>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
mov    $0xffffffff,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%esi
mov    0x60(%esp),%edi
movl   $0x0,(%eax)
add    $0x10,%eax
mov    %eax,0x4(%ebx)
mov    0x68(%esp),%ebx
mov    %eax,0x34(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,(%ebx)
add    $0x8,%ebx
mov    %ebx,0x30(%esp)
mov    %ebx,0x4(%esi)
xor    %ebx,%ebx
movl   $0x7,0x14(%esp)
movl   $0x7,0x20(%esp)
movl   $0x0,0x38(%esp)
jmp    804ddfa <calloc@plt+0x4e1a>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x25,%dl
lea    0x1(%edi),%ecx
je     804de28 <calloc@plt+0x4e48>
mov    %ecx,%edi
movzbl (%edi),%edx
test   %dl,%dl
jne    804ddf0 <calloc@plt+0x4e10>
imul   $0x2c,%ebx,%ebx
mov    %edi,(%eax,%ebx,1)
mov    0x64(%esp),%eax
mov    0x18(%esp),%ebx
mov    %ebx,0x8(%eax)
mov    0x2c(%esp),%ebx
mov    %ebx,0xc(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
imul   $0x2c,%ebx,%ebx
add    %eax,%ebx
mov    %edi,(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0xffffffff,0x14(%ebx)
movl   $0x0,0x18(%ebx)
movl   $0x0,0x1c(%ebx)
movl   $0xffffffff,0x20(%ebx)
movl   $0xffffffff,0x28(%ebx)
movzbl 0x1(%edi),%esi
lea    -0x30(%esi),%eax
cmp    $0x9,%al
jbe    804dedc <calloc@plt+0x4efc>
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
lea    0x1(%ecx),%eax
jmp    804dece <calloc@plt+0x4eee>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%dl
je     804df68 <calloc@plt+0x4f88>
cmp    $0x2b,%dl
je     804df78 <calloc@plt+0x4f98>
cmp    $0x20,%dl
je     804df88 <calloc@plt+0x4fa8>
cmp    $0x23,%dl
je     804df98 <calloc@plt+0x4fb8>
cmp    $0x30,%dl
nop
je     804dfa8 <calloc@plt+0x4fc8>
cmp    $0x49,%dl
jne    804dfb8 <calloc@plt+0x4fd8>
orl    $0x40,0x8(%ebx)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
add    $0x1,%eax
cmp    $0x27,%dl
lea    -0x1(%eax),%esi
jne    804de88 <calloc@plt+0x4ea8>
orl    $0x1,0x8(%ebx)
jmp    804dec8 <calloc@plt+0x4ee8>
mov    %ecx,%edx
mov    %ecx,%edi
add    $0x1,%edx
movzbl (%edx),%eax
lea    -0x30(%eax),%ecx
cmp    $0x9,%cl
jbe    804dee0 <calloc@plt+0x4f00>
cmp    $0x24,%al
mov    %edi,%ecx
mov    %esi,%edx
movl   $0xffffffff,0x3c(%esp)
jne    804de7c <calloc@plt+0x4e9c>
mov    %edi,%edx
xor    %eax,%eax
mov    %ebx,0x1c(%esp)
mov    %esi,%ecx
jmp    804df12 <calloc@plt+0x4f32>
xchg   %ax,%ax
mov    %edi,%edx
movsbl %cl,%ecx
cmp    $0x19999999,%eax
lea    -0x30(%ecx),%esi
mov    $0xffffffff,%ecx
ja     804df29 <calloc@plt+0x4f49>
lea    (%eax,%eax,4),%ecx
add    %ecx,%ecx
mov    %ecx,%eax
mov    $0xffffffff,%ecx
add    %esi,%eax
cmovb  %ecx,%eax
movzbl 0x1(%edx),%ecx
lea    0x1(%edx),%edi
lea    -0x30(%ecx),%ebx
cmp    $0x9,%bl
jbe    804df10 <calloc@plt+0x4f30>
sub    $0x1,%eax
mov    0x1c(%esp),%ebx
cmp    $0xfffffffd,%eax
mov    %eax,0x3c(%esp)
ja     804e5b4 <calloc@plt+0x55d4>
lea    0x2(%edx),%ecx
movzbl 0x2(%edx),%edx
jmp    804de7c <calloc@plt+0x4e9c>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x8(%ebx)
jmp    804dec8 <calloc@plt+0x4ee8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x4,0x8(%ebx)
jmp    804dec8 <calloc@plt+0x4ee8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x8,0x8(%ebx)
jmp    804dec8 <calloc@plt+0x4ee8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x10,0x8(%ebx)
jmp    804dec8 <calloc@plt+0x4ee8>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x20,0x8(%ebx)
jmp    804dec8 <calloc@plt+0x4ee8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2a,%dl
mov    %esi,%ecx
je     804e244 <calloc@plt+0x5264>
lea    -0x30(%edx),%eax
cmp    $0x9,%al
ja     804e004 <calloc@plt+0x5024>
mov    %esi,0xc(%ebx)
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
ja     804e84a <calloc@plt+0x586a>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x9,%al
jbe    804dfe0 <calloc@plt+0x5000>
mov    %esi,%eax
sub    %ecx,%eax
mov    0x18(%esp),%edi
mov    %esi,0x10(%ebx)
cmp    %eax,%edi
cmovae %edi,%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%edx
cmp    $0x2e,%dl
je     804e1f7 <calloc@plt+0x5217>
add    $0x1,%esi
xor    %eax,%eax
jmp    804e03e <calloc@plt+0x505e>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4c,%dl
je     804e050 <calloc@plt+0x5070>
cmp    $0x6c,%dl
je     804e058 <calloc@plt+0x5078>
cmp    $0x6a,%dl
je     804e060 <calloc@plt+0x5080>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
cmp    $0x5a,%cl
je     804e038 <calloc@plt+0x5058>
cmp    $0x74,%dl
jne    804e068 <calloc@plt+0x5088>
xchg   %ax,%ax
movzbl (%esi),%edx
add    $0x1,%esi
cmp    $0x68,%dl
jne    804e018 <calloc@plt+0x5038>
mov    %eax,%ecx
mov    %ebp,%edi
and    $0x1,%ecx
shl    %cl,%edi
or     %edi,%eax
jmp    804e038 <calloc@plt+0x5058>
or     $0x4,%eax
jmp    804e038 <calloc@plt+0x5058>
lea    0x0(%esi),%esi
add    $0x8,%eax
jmp    804e038 <calloc@plt+0x5058>
lea    0x0(%esi),%esi
add    $0x10,%eax
jmp    804e038 <calloc@plt+0x5058>
lea    0x0(%esi),%esi
lea    -0x25(%edx),%ecx
mov    %esi,%edi
cmp    $0x53,%cl
mov    %dl,0x1c(%esp)
ja     804e5b4 <calloc@plt+0x55d4>
movzbl %cl,%ecx
jmp    *0x804f668(,%ecx,4)
movl   $0x11,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     804e750 <calloc@plt+0x5770>
mov    %eax,0x28(%ebx)
mov    %eax,%edx
cmp    %edx,0x14(%esp)
jbe    804e64b <calloc@plt+0x566b>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%ecx
shl    $0x4,%ecx
add    0x28(%esp),%ecx
cmp    %eax,%edx
jb     804e0e7 <calloc@plt+0x5107>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%ecx
movl   $0x0,-0x10(%ecx)
cmp    %edx,%eax
jbe    804e0d0 <calloc@plt+0x50f0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
shl    $0x4,%edx
add    0x28(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804e6d2 <calloc@plt+0x56f2>
mov    0x24(%esp),%eax
mov    %eax,(%edx)
movzbl 0x1c(%esp),%eax
mov    %esi,0x4(%ebx)
mov    %al,0x24(%ebx)
mov    0x64(%esp),%eax
mov    (%eax),%eax
lea    0x1(%eax),%ebx
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
cmp    %ebx,0x20(%esp)
mov    %ebx,(%eax)
jbe    804e12a <calloc@plt+0x514a>
mov    0x4(%eax),%eax
jmp    804ddfa <calloc@plt+0x4e1a>
mov    0x20(%esp),%eax
test   %eax,%eax
js     804e1b8 <calloc@plt+0x51d8>
shll   0x20(%esp)
mov    0x20(%esp),%eax
cmp    $0x5d1745d,%eax
ja     804e1b8 <calloc@plt+0x51d8>
imul   $0x2c,%eax,%edx
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     804e772 <calloc@plt+0x5792>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048dd0 <realloc@plt>
mov    %eax,%esi
test   %esi,%esi
je     804e1b8 <calloc@plt+0x51d8>
mov    0x64(%esp),%eax
mov    0x34(%esp),%ebx
cmp    0x4(%eax),%ebx
je     804e851 <calloc@plt+0x5871>
mov    0x64(%esp),%eax
mov    %esi,0x4(%eax)
mov    (%eax),%ebx
mov    %esi,%eax
jmp    804ddfa <calloc@plt+0x4e1a>
mov    0x14(%esp),%eax
test   %eax,%eax
lea    (%eax,%eax,1),%edx
mov    $0xffffffff,%eax
cmovns %edx,%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
ja     804e6e8 <calloc@plt+0x5708>
lea    0x1(%edi),%eax
cmp    %edi,%eax
mov    %eax,0x14(%esp)
jae    804e6e8 <calloc@plt+0x5708>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x30(%esp)
je     804e1cd <calloc@plt+0x51ed>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     804e1e2 <calloc@plt+0x5202>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
call   8048eb0 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    804de1b <calloc@plt+0x4e3b>
cmpb   $0x2a,0x1(%esi)
je     804e49e <calloc@plt+0x54be>
mov    %esi,0x18(%ebx)
movzbl 0x1(%esi),%edi
lea    0x1(%esi),%eax
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
ja     804e226 <calloc@plt+0x5246>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movzbl (%eax),%edi
lea    -0x30(%edi),%edx
cmp    $0x9,%dl
jbe    804e218 <calloc@plt+0x5238>
mov    0x2c(%esp),%edi
mov    %eax,%edx
sub    %esi,%edx
mov    %eax,%esi
mov    %eax,0x1c(%ebx)
cmp    %edx,%edi
cmovae %edi,%edx
mov    %edx,0x2c(%esp)
movzbl (%eax),%edx
jmp    804e00d <calloc@plt+0x502d>
mov    %esi,0xc(%ebx)
mov    %eax,%esi
mov    %eax,0x10(%ebx)
mov    0x18(%esp),%eax
movzbl 0x1(%ecx),%edi
test   %eax,%eax
cmove  %ebp,%eax
mov    %eax,0x18(%esp)
lea    -0x30(%edi),%eax
cmp    $0x9,%al
jbe    804e2e8 <calloc@plt+0x5308>
mov    0x38(%esp),%edi
mov    %edi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%edi
mov    %edi,0x14(%ebx)
je     804e5b4 <calloc@plt+0x55d4>
mov    0x38(%esp),%edi
mov    %eax,0x38(%esp)
cmp    %edi,0x14(%esp)
jbe    804e18c <calloc@plt+0x51ac>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %edi,%eax
ja     804e2c7 <calloc@plt+0x52e7>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %edi,%eax
jbe    804e2b0 <calloc@plt+0x52d0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%edi
add    %edi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804e742 <calloc@plt+0x5762>
movl   $0x5,(%edx)
movzbl (%esi),%edx
jmp    804e004 <calloc@plt+0x5024>
mov    %esi,%eax
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804e2f0 <calloc@plt+0x5310>
cmp    $0x24,%dl
jne    804e268 <calloc@plt+0x5288>
xor    %eax,%eax
mov    %edi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     804e322 <calloc@plt+0x5342>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%esi
movzbl (%esi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804e30b <calloc@plt+0x532b>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     804e5b4 <calloc@plt+0x55d4>
mov    %eax,0x14(%ebx)
add    $0x1,%esi
mov    %eax,%edi
jmp    804e285 <calloc@plt+0x52a5>
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xf,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
cmp    $0xf,%eax
movl   $0x16,0x24(%esp)
jg     804e090 <calloc@plt+0x50b0>
test   $0x4,%al
jne    804e090 <calloc@plt+0x50b0>
cmp    $0x7,%eax
movl   $0x15,0x24(%esp)
jg     804e090 <calloc@plt+0x50b0>
test   $0x2,%al
movl   $0x12,0x24(%esp)
jne    804e090 <calloc@plt+0x50b0>
and    $0x1,%eax
mov    %eax,0x24(%esp)
negl   0x24(%esp)
addl   $0x14,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xf,%eax
jg     804e5fb <calloc@plt+0x561b>
test   $0x4,%al
jne    804e5fb <calloc@plt+0x561b>
cmp    $0x7,%eax
jg     804e878 <calloc@plt+0x5898>
test   $0x2,%al
lea    0x0(%esi,%eiz,1),%esi
jne    804e8bc <calloc@plt+0x58dc>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x3,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    804e090 <calloc@plt+0x50b0>
lea    0x0(%esi),%esi
cmp    $0x8,%eax
setge  %al
movzbl %al,%eax
mov    %eax,0x24(%esp)
addl   $0xd,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
movl   $0x10,0x24(%esp)
movb   $0x73,0x1c(%esp)
jmp    804e090 <calloc@plt+0x50b0>
movl   $0xe,0x24(%esp)
movb   $0x63,0x1c(%esp)
jmp    804e090 <calloc@plt+0x50b0>
cmp    $0xf,%eax
jle    804e781 <calloc@plt+0x57a1>
mov    %dl,0x1c(%esp)
movl   $0xc,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
cmp    $0xf,%eax
jg     804e60c <calloc@plt+0x562c>
test   $0x4,%al
jne    804e60c <calloc@plt+0x562c>
cmp    $0x7,%eax
jg     804e889 <calloc@plt+0x58a9>
test   $0x2,%al
jne    804e8cd <calloc@plt+0x58ed>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
andl   $0x2,0x24(%esp)
addl   $0x4,0x24(%esp)
mov    %dl,0x1c(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    0x2c(%esp),%ecx
lea    0x2(%esi),%edi
mov    $0x2,%eax
mov    %esi,0x18(%ebx)
mov    %edi,0x1c(%ebx)
movzbl 0x2(%esi),%esi
cmp    $0x1,%ecx
cmova  %ecx,%eax
mov    %eax,0x2c(%esp)
lea    -0x30(%esi),%eax
cmp    $0x9,%al
ja     804e61d <calloc@plt+0x563d>
mov    %edi,%eax
add    $0x1,%eax
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804e4cb <calloc@plt+0x54eb>
cmp    $0x24,%dl
jne    804e61d <calloc@plt+0x563d>
xor    %eax,%eax
mov    %esi,%edx
movsbl %dl,%edx
cmp    $0x19999999,%eax
lea    -0x30(%edx),%ecx
mov    $0xffffffff,%edx
ja     804e4fd <calloc@plt+0x551d>
lea    (%eax,%eax,4),%edx
add    %edx,%edx
mov    %edx,%eax
mov    $0xffffffff,%edx
add    %ecx,%eax
cmovb  %edx,%eax
add    $0x1,%edi
movzbl (%edi),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    804e4e6 <calloc@plt+0x5506>
sub    $0x1,%eax
cmp    $0xfffffffd,%eax
ja     804e5b4 <calloc@plt+0x55d4>
mov    %eax,0x20(%ebx)
add    $0x1,%edi
mov    %eax,%esi
cmp    %esi,0x14(%esp)
ja     804e79b <calloc@plt+0x57bb>
mov    0x14(%esp),%eax
test   %eax,%eax
js     804e1b8 <calloc@plt+0x51d8>
shll   0x14(%esp)
cmp    %esi,0x14(%esp)
ja     804e55a <calloc@plt+0x557a>
lea    0x1(%esi),%eax
cmp    %esi,%eax
mov    %eax,0x14(%esp)
jb     804e1b8 <calloc@plt+0x51d8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     804e1b8 <calloc@plt+0x51d8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     804e8de <calloc@plt+0x58fe>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048dd0 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     804e1bc <calloc@plt+0x51dc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     804e8f6 <calloc@plt+0x5916>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    804e7a6 <calloc@plt+0x57c6>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x30(%esp)
je     804e5d1 <calloc@plt+0x55f1>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x34(%esp)
je     804e5e6 <calloc@plt+0x5606>
mov    %eax,(%esp)
call   8048ca0 <free@plt>
call   8048eb0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    804de1b <calloc@plt+0x4e3b>
mov    %dl,0x1c(%esp)
movl   $0x9,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    %dl,0x1c(%esp)
movl   $0xa,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    0x20(%ebx),%esi
cmp    $0xffffffff,%esi
jne    804e52b <calloc@plt+0x554b>
mov    0x38(%esp),%esi
mov    %esi,%eax
add    $0x1,%eax
cmp    $0xffffffff,%esi
mov    %esi,0x20(%ebx)
je     804e5b4 <calloc@plt+0x55d4>
mov    0x38(%esp),%esi
mov    %eax,0x38(%esp)
jmp    804e52b <calloc@plt+0x554b>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
js     804e1b8 <calloc@plt+0x51d8>
shll   0x14(%esp)
cmp    %edx,0x14(%esp)
ja     804e670 <calloc@plt+0x5690>
lea    0x1(%edx),%eax
cmp    %edx,%eax
mov    %eax,0x14(%esp)
jb     804e1b8 <calloc@plt+0x51d8>
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     804e1b8 <calloc@plt+0x51d8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    %edx,0x28(%esp)
mov    0x4(%ecx),%ecx
cmp    %ecx,0x30(%esp)
je     804e802 <calloc@plt+0x5822>
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8048dd0 <realloc@plt>
mov    0x28(%esp),%edx
mov    %eax,%ecx
mov    0x68(%esp),%eax
test   %ecx,%ecx
mov    0x4(%eax),%eax
je     804e1bf <calloc@plt+0x51df>
cmp    %eax,0x30(%esp)
je     804e818 <calloc@plt+0x5838>
mov    0x68(%esp),%eax
mov    %ecx,0x28(%esp)
mov    %ecx,0x4(%eax)
jmp    804e0b7 <calloc@plt+0x50d7>
cmp    %eax,0x24(%esp)
je     804e0fe <calloc@plt+0x511e>
jmp    804e5bf <calloc@plt+0x55df>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
cmp    $0xfffffff,%eax
ja     804e1b8 <calloc@plt+0x51d8>
mov    0x68(%esp),%ecx
shl    $0x4,%eax
mov    0x4(%ecx),%edx
cmp    %edx,0x30(%esp)
je     804e869 <calloc@plt+0x5889>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8048dd0 <realloc@plt>
mov    %eax,%edx
test   %edx,%edx
mov    0x68(%esp),%eax
je     804e1bc <calloc@plt+0x51dc>
mov    0x30(%esp),%ecx
cmp    0x4(%eax),%ecx
je     804e89a <calloc@plt+0x58ba>
mov    0x68(%esp),%eax
mov    %edx,0x28(%esp)
mov    %edx,0x4(%eax)
jmp    804e29a <calloc@plt+0x52ba>
cmp    $0x5,%eax
je     804e001 <calloc@plt+0x5021>
jmp    804e5bf <calloc@plt+0x55df>
mov    0x38(%esp),%ecx
mov    %ecx,%eax
add    $0x1,%eax
cmp    $0xffffffff,%ecx
mov    %ecx,0x28(%ebx)
je     804e5b4 <calloc@plt+0x55d4>
mov    0x38(%esp),%edx
mov    %eax,0x38(%esp)
jmp    804e0a2 <calloc@plt+0x50c2>
mov    %edx,(%esp)
call   8048de0 <malloc@plt>
mov    %eax,%esi
jmp    804e167 <calloc@plt+0x5187>
and    $0x4,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    %dl,0x1c(%esp)
addl   $0xc,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    0x68(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x28(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
shl    $0x4,%edx
add    0x28(%esp),%edx
cmp    %esi,%eax
ja     804e7d0 <calloc@plt+0x57f0>
add    $0x1,%eax
add    $0x10,%edx
movl   $0x0,-0x10(%edx)
cmp    %esi,%eax
jbe    804e7b9 <calloc@plt+0x57d9>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
mov    0x28(%esp),%edx
shl    $0x4,%esi
add    %esi,%edx
mov    (%edx),%eax
test   %eax,%eax
jne    804e7ef <calloc@plt+0x580f>
movl   $0x5,(%edx)
mov    %edi,%esi
movzbl (%edi),%edx
jmp    804e00d <calloc@plt+0x502d>
cmp    $0x5,%eax
jne    804e5bf <calloc@plt+0x55df>
movzbl (%edi),%edx
mov    %edi,%esi
jmp    804e00d <calloc@plt+0x502d>
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     804e8ed <calloc@plt+0x590d>
mov    0x68(%esp),%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x28(%esp)
mov    (%eax),%eax
mov    %ecx,(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8048cb0 <memcpy@plt>
mov    0x3c(%esp),%edx
mov    0x28(%esp),%ecx
jmp    804e6c2 <calloc@plt+0x56e2>
xor    %eax,%eax
jmp    804dff1 <calloc@plt+0x5011>
imul   $0x2c,(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8048cb0 <memcpy@plt>
jmp    804e17c <calloc@plt+0x519c>
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    %eax,%edx
jmp    804e719 <calloc@plt+0x5739>
mov    %dl,0x1c(%esp)
movl   $0x7,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    %dl,0x1c(%esp)
movl   $0x8,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8048cb0 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    804e732 <calloc@plt+0x5752>
mov    %dl,0x1c(%esp)
movl   $0x1,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    %dl,0x1c(%esp)
movl   $0x2,0x24(%esp)
jmp    804e090 <calloc@plt+0x50b0>
mov    %eax,(%esp)
call   8048de0 <malloc@plt>
mov    %eax,%edx
jmp    804e58b <calloc@plt+0x55ab>
mov    0x30(%esp),%eax
jmp    804e1bf <calloc@plt+0x51df>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
shl    $0x4,%eax
mov    %eax,0x8(%esp)
call   8048cb0 <memcpy@plt>
mov    0x1c(%esp),%edx
jmp    804e5a4 <calloc@plt+0x55c4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049390 <calloc@plt+0x3b0>
add    $0x36d5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048c10 <__snprintf_chk@plt-0x40>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804e979 <calloc@plt+0x5999>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804e958 <calloc@plt+0x5978>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804e990 <calloc@plt+0x59b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   8049390 <calloc@plt+0x3b0>
add    $0x365a,%ebx
sub    $0x18,%esp
lea    0x104(%ebx),%eax
test   %eax,%eax
je     804e9d8 <calloc@plt+0x59f8>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048da0 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    804e9bb <calloc@plt+0x59db>
push   %ebx
sub    $0x8,%esp
call   8049390 <calloc@plt+0x3b0>
add    $0x361b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %esp
jb     804ea84 <_IO_stdin_used+0x80>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     804ea3c <_IO_stdin_used+0x38>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804ea85 <_IO_stdin_used+0x81>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     804ea94 <_IO_stdin_used+0x90>
popa
je     804ea93 <_IO_stdin_used+0x8f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %al,%cs:0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
cs cs or %cs:(%eax),%al
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804eabf <_IO_stdin_used+0xbb>
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
sub    %ch,0x65(%ecx)
jae    804ea96 <_IO_stdin_used+0x92>
sub    $0x20,%al
imul   $0x79656874,0x20(%esi),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x6d(%ebp)
jo     804eaf3 <_IO_stdin_used+0xef>
jns    804eaaf <_IO_stdin_used+0xab>
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e67692d,%eax
outsl  %ds:(%esi),(%dx)
jb     804eaf6 <_IO_stdin_used+0xf2>
sub    $0x6c696166,%eax
sub    $0x6e2d6e6f,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x74706d65,%eax
jns    804eaae <_IO_stdin_used+0xaa>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2065726f,0x6e(%edi),%esp
gs
popa
arpl   %bp,0x20(%eax)
popaw
imul   $0x68742065,0x72(%ebp,%esi,2),%ebp
popa
je     804eaef <_IO_stdin_used+0xeb>
imul   $0x656c6f73,0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
jns    804eaf9 <_IO_stdin_used+0xf5>
bound  %esp,0x63(%ebp)
popa
jne    804eb52 <_IO_stdin_used+0x14e>
and    %ah,%gs:0x20(%ecx)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    804eaf7 <_IO_stdin_used+0xf3>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2d6e6f6e,0x20(%ebx),%esi
gs
insl   (%dx),%es:(%edi)
jo     804eb80 <_IO_stdin_used+0x17c>
jns    804eb18 <_IO_stdin_used+0x114>
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c70,%eax
sub    $0x65726170,%eax
outsb  %ds:(%esi),(%dx)
je     804eb92 <_IO_stdin_used+0x18e>
and    %ah,(%eax)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804eb8d <_IO_stdin_used+0x189>
and    %al,0x52(%ecx,%ecx,2)
inc    %ebp
inc    %ebx
push   %esp
dec    %edi
push   %edx
pop    %ecx
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x74(%ecx)
jae    804eb5b <_IO_stdin_used+0x157>
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
je     804ebb1 <_IO_stdin_used+0x1ad>
jb     804ebb7 <_IO_stdin_used+0x1b3>
cmp    (%eax),%esp
gs
cs
addr16
cs
sub    $0x20,%al
daa
jb     804ebbc <_IO_stdin_used+0x1b8>
imul   $0x6120702d,%fs:0x20(%edx),%esi
das
bound  %ebp,(%edi)
arpl   %sp,(%edi)
and    %ch,0x73(%ecx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x69(%ebx)
insl   (%dx),%es:(%edi)
imul   $0x206f7420,0x72(%ecx,%eiz,2),%ebp
daa
jb     804ebef <_IO_stdin_used+0x1eb>
imul   $0x2f622f61,%fs:0x20(%edx),%esi
arpl   %sp,(%eax)
popa
das
bound  %esp,(%eax)
popa
daa
or     (%eax),%ah
and    %ch,0x2d202c76
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    804ec07 <_IO_stdin_used+0x203>
and    %ah,(%eax)
and    %ch,0x75(%edi)
je     804ec19 <_IO_stdin_used+0x215>
jne    804ec1f <_IO_stdin_used+0x21b>
and    %ah,0x20(%ecx)
imul   $0x74736f6e,%fs:0x67(%ecx),%esp
imul   $0x20726f66,0x20(%ebx),%esp
gs
jbe    804ec25 <_IO_stdin_used+0x221>
jb     804ec3b <_IO_stdin_used+0x237>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804ebed <_IO_stdin_used+0x1e9>
jo     804ec41 <_IO_stdin_used+0x23d>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    804ec3a <_IO_stdin_used+0x236>
or     %fs:(%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     804ec05 <_IO_stdin_used+0x201>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     804ec5b <_IO_stdin_used+0x257>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    804ec7e <_IO_stdin_used+0x27a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    804ec90 <_IO_stdin_used+0x28c>
jo     804ec93 <_IO_stdin_used+0x28f>
je     804ec40 <_IO_stdin_used+0x23c>
jbe    804ec87 <_IO_stdin_used+0x283>
jb     804ec97 <_IO_stdin_used+0x293>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804ec9b <_IO_stdin_used+0x297>
popa
je     804ec9a <_IO_stdin_used+0x296>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x74680000,0x0(%edx,%ecx,1),%esi
je     804ecb4 <_IO_stdin_used+0x2b0>
cmp    (%edi),%ch
das
ja     804ecc0 <_IO_stdin_used+0x2bc>
ja     804ec79 <_IO_stdin_used+0x275>
outsb  %ds:(%si),(%dx)
jne    804ec7d <_IO_stdin_used+0x279>
outsl  %ds:(%esi),(%dx)
jb     804ecb9 <_IO_stdin_used+0x2b5>
das
jae    804ecc4 <_IO_stdin_used+0x2c0>
data16
je     804eccf <_IO_stdin_used+0x2cb>
popa
jb     804ecc0 <_IO_stdin_used+0x2bc>
das
arpl   %bp,0x72(%edi)
gs
jne    804ecd6 <_IO_stdin_used+0x2d2>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     804eccf <_IO_stdin_used+0x2cb>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804ec95 <_IO_stdin_used+0x291>
jne    804ecea <_IO_stdin_used+0x2e6>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     804ecfb <_IO_stdin_used+0x2f7>
popa
jb     804ecec <_IO_stdin_used+0x2e8>
cmp    (%eax),%ah
cmp    $0x68,%al
je     804ed01 <_IO_stdin_used+0x2fd>
jo     804ecc9 <_IO_stdin_used+0x2c5>
das
das
ja     804ed0a <_IO_stdin_used+0x306>
ja     804ecc3 <_IO_stdin_used+0x2bf>
outsb  %ds:(%si),(%dx)
jne    804ecc7 <_IO_stdin_used+0x2c3>
outsl  %ds:(%esi),(%dx)
jb     804ed03 <_IO_stdin_used+0x2ff>
das
addr16
gs
je     804ed09 <_IO_stdin_used+0x305>
gs
insb   (%dx),%es:(%edi)
jo     804ecd4 <_IO_stdin_used+0x2d0>
or     %ds:(%eax),%al
push   %edx
gs
jo     804ed1b <_IO_stdin_used+0x317>
jb     804ed22 <_IO_stdin_used+0x31e>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    804ed24 <_IO_stdin_used+0x320>
popa
je     804ed24 <_IO_stdin_used+0x320>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 804ece3 <_IO_stdin_used+0x2df>
je     804ed34 <_IO_stdin_used+0x330>
and    %bh,(%eax,%ebp,2)
je     804ed3e <_IO_stdin_used+0x33a>
jo     804ed06 <_IO_stdin_used+0x302>
das
das
je     804ed42 <_IO_stdin_used+0x33e>
popa
outsb  %ds:(%esi),(%dx)
jae    804ed40 <_IO_stdin_used+0x33c>
popa
je     804ed40 <_IO_stdin_used+0x33c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     804ed4d <_IO_stdin_used+0x349>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     804ed4b <_IO_stdin_used+0x347>
das
je     804ed4c <_IO_stdin_used+0x348>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     804ed14 <_IO_stdin_used+0x310>
arpl   %bp,0x6d(%edi)
jo     804ed65 <_IO_stdin_used+0x361>
gs
je     804ed61 <_IO_stdin_used+0x35d>
and    %ah,0x63(%edi,%ebp,2)
jne    804ed6f <_IO_stdin_used+0x36b>
outsb  %gs:(%esi),(%dx)
je     804ed67 <_IO_stdin_used+0x363>
je     804ed71 <_IO_stdin_used+0x36d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     804ed83 <_IO_stdin_used+0x37f>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     804ed7f <_IO_stdin_used+0x37b>
jne    804ed90 <_IO_stdin_used+0x38c>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa000a27,0x6e(%edi),%ebp
push   %edx
gs
jo     804eda5 <_IO_stdin_used+0x3a1>
jb     804edac <_IO_stdin_used+0x3a8>
and    %ah,0x75622073
addr16 jae 804ed61 <_IO_stdin_used+0x35d>
je     804edb2 <_IO_stdin_used+0x3ae>
and    %ah,0x62000a73
jne    804edb2 <_IO_stdin_used+0x3ae>
sub    $0x65726f63,%eax
jne    804edc6 <_IO_stdin_used+0x3c2>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     804edc4 <_IO_stdin_used+0x3c0>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    804edae <_IO_stdin_used+0x3aa>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     804eddf <_IO_stdin_used+0x3db>
jne    804edf0 <_IO_stdin_used+0x3ec>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
das
jne    804edfa <_IO_stdin_used+0x3f6>
jb     804edb8 <_IO_stdin_used+0x3b4>
jae    804edf3 <_IO_stdin_used+0x3ef>
popa
jb     804edf3 <_IO_stdin_used+0x3ef>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x76(%ecx,%eiz,2)
imul   $0x654b6361,0x4d(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
jp     804ee0d <_IO_stdin_used+0x409>
add    %dh,%gs:0x6d(%edx)
imul   $0x6d007670,%fs:0x0(%edx),%esi
imul   $0x20676e69,0x73(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jo     804ee1f <_IO_stdin_used+0x41b>
jb     804ee1d <_IO_stdin_used+0x419>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804ee2e <_IO_stdin_used+0x42a>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%si)
jb     804ee31 <_IO_stdin_used+0x42d>
arpl   %si,0x72(%edi,%ebp,2)
jns    804edfe <_IO_stdin_used+0x3fa>
and    %ah,0x61660073
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     804ee47 <_IO_stdin_used+0x443>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804ee4b <_IO_stdin_used+0x447>
and    %ah,0x61660073
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     804ee5b <_IO_stdin_used+0x457>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804ee5f <_IO_stdin_used+0x45b>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804ee25 <_IO_stdin_used+0x421>
and    $0x67690073,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     804ee73 <_IO_stdin_used+0x46f>
sub    $0x6c696166,%eax
sub    $0x6e2d6e6f,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x74706d65,%eax
jns    804ee21 <_IO_stdin_used+0x41d>
jo     804ee84 <_IO_stdin_used+0x480>
je     804ee8d <_IO_stdin_used+0x489>
add    %dh,0x61(%eax)
jb     804ee8f <_IO_stdin_used+0x48b>
outsb  %ds:(%esi),(%dx)
je     804eea0 <_IO_stdin_used+0x49c>
add    %dh,0x65(%esi)
jb     804ee94 <_IO_stdin_used+0x490>
outsl  %ds:(%esi),(%dx)
jae    804ee9a <_IO_stdin_used+0x496>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804ee3b <_IO_stdin_used+0x437>
jbe    804eea2 <_IO_stdin_used+0x49e>
jb     804eeb2 <_IO_stdin_used+0x4ae>
imul   $0x0,0x6e(%edi),%ebp
add    %al,(%eax)
or     %ch,%dh
add    $0x8,%al
addb   $0x0,(%eax)
add    %ah,(%ecx)
out    %al,(%dx)
add    $0x8,%al
jo     804ee7e <_IO_stdin_used+0x47a>
add    %al,(%eax)
es
out    %al,(%dx)
add    $0x8,%al
jo     804ee8e <_IO_stdin_used+0x48a>
add    %al,(%eax)
cs
out    %al,(%dx)
add    $0x8,%al
jbe    804ee9e <_IO_stdin_used+0x49a>
add    %al,(%eax)
ss
out    %al,(%dx)
add    $0x8,%al
jle    804eead <_IO_stdin_used+0x4a9>
(bad)
(bad)
cmp    %esi,%ebp
add    $0x8,%al
jge    804eebd <_IO_stdin_used+0x4b9>
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,(%edx)
and    %al,(%eax)
cmp    %ch,(%esi)
xor    (%ecx),%dh
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     804eee4 <_IO_stdin_used+0x4e0>
and    $0x25203a73,%eax
jae    804eeeb <_IO_stdin_used+0x4e7>
add    %al,0x20(%ecx)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 804ef53 <_IO_stdin_used+0x54f>
xor    %bl,0x20(%ebp)
ja     804ef5e <_IO_stdin_used+0x55a>
jae    804ef1f <_IO_stdin_used+0x51b>
jo     804ef62 <_IO_stdin_used+0x55e>
jae    804ef76 <_IO_stdin_used+0x572>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    804ef73 <_IO_stdin_used+0x56f>
push   $0x206e6120
gs
js     804ef79 <_IO_stdin_used+0x575>
arpl   %sp,(%eax)
jae    804ef91 <_IO_stdin_used+0x58d>
jae    804ef8e <_IO_stdin_used+0x58a>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     804efae <_IO_stdin_used+0x5aa>
jb     804efac <_IO_stdin_used+0x5a8>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    804efd2 <_IO_stdin_used+0x5ce>
add    %ah,0x0(%ebx)
arpl   %bp,0x6279616d
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    %bl,0x4a26808(%esp,%eax,1)
or     %bl,0x580804a2(%eax)
mov    0xa1980804,%eax
add    $0x8,%al
enter  $0x4a1,$0x8
lock mov 0xa1f00804,%eax
add    $0x8,%al
lock mov 0x9f900804,%eax
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
or     %ah,-0x6097f7fc(%eax)
add    $0x8,%al
mov    %bl,-0x607ff7fc(%edi)
add    $0x8,%al
js     804ef71 <_IO_stdin_used+0x56d>
add    $0x8,%al
jo     804ef75 <_IO_stdin_used+0x571>
add    $0x8,%al
inc    %eax
lahf
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    %ah,-0x5f77f7fc(%eax)
add    $0x8,%al
mov    $0xb908049e,%ecx
sahf
add    $0x8,%al
mov    $0xb108049e,%ecx
sahf
add    $0x8,%al
mov    $0x2808049e,%ecx
sahf
add    $0x8,%al
mov    $0x3808049e,%ecx
mov    0x9eb90804,%al
add    $0x8,%al
mov    $0xb908049e,%ecx
sahf
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
mov    $0xb908049e,%ecx
sahf
add    $0x8,%al
mov    $0xb908049e,%ecx
sahf
add    $0x8,%al
js     804f03f <_IO_stdin_used+0x63b>
add    $0x8,%al
mov    %ah,-0x61d7f7fc(%eax)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x6146f7fc(%esi)
add    $0x8,%al
sbb    %ah,-0x61d7f7fc(%eax)
add    $0x8,%al
mov    $0x2808049e,%ecx
sahf
add    $0x8,%al
mov    $0x2808049e,%ecx
sahf
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x61d7f7fc(%esi)
add    $0x8,%al
sub    %bl,-0x616ff7fc(%esi)
add    $0x8,%al
mov    $0x9008049e,%ecx
sahf
add    $0x8,%al
mov    $0x9e,%cl
add    $0x8,%al
mov    $0xa4,%al
add    $0x8,%al
mov    $0xa4,%al
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
mov    $0xa4,%al
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
mov    $0xa4,%al
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
mov    $0xa4,%al
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,-0x11(%ebp)
add    $0x8,%al
dec    %ebp
out    %eax,(%dx)
add    $0x8,%al
push   %ebx
out    %eax,(%dx)
add    $0x8,%al
pusha
out    %eax,(%dx)
add    $0x8,%al
(bad)
out    %eax,(%dx)
add    $0x8,%al
push   $0xffffffef
add    $0x8,%al
(bad)
in     (%dx),%eax
add    $0x8,%al
jno    804f26d <_IO_stdin_used+0x869>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
and    $0x25282073,%eax
jae    804f2b4 <_IO_stdin_used+0x8b0>
and    %ah,0x25000a73
jae    804f2b3 <_IO_stdin_used+0x8af>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     804f307 <_IO_stdin_used+0x903>
je     804f314 <_IO_stdin_used+0x910>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     804f317 <_IO_stdin_used+0x913>
je     804f324 <_IO_stdin_used+0x920>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     804f32e <_IO_stdin_used+0x92a>
je     804f33b <_IO_stdin_used+0x937>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f300 <_IO_stdin_used+0x8fc>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     804f352 <_IO_stdin_used+0x94e>
jb     804f359 <_IO_stdin_used+0x955>
and    %ah,0x75(%edx)
addr16 jae 804f30b <_IO_stdin_used+0x907>
je     804f35c <_IO_stdin_used+0x958>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    804f361 <_IO_stdin_used+0x95d>
and    %al,0x50(%edi)
dec    %esp
jbe    804f335 <_IO_stdin_used+0x931>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     804f384 <_IO_stdin_used+0x980>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     804f33a <_IO_stdin_used+0x936>
insb   (%dx),%es:(%edi)
popa
je     804f383 <_IO_stdin_used+0x97f>
jb     804f340 <_IO_stdin_used+0x93c>
cmp    $0x68,%al
je     804f398 <_IO_stdin_used+0x994>
jo     804f360 <_IO_stdin_used+0x95c>
das
das
outsb  %ds:(%si),(%dx)
jne    804f35a <_IO_stdin_used+0x956>
outsl  %ds:(%esi),(%dx)
jb     804f396 <_IO_stdin_used+0x992>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 804f3a8 <_IO_stdin_used+0x9a4>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    804f369 <_IO_stdin_used+0x965>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     804f3cd <_IO_stdin_used+0x9c9>
popa
jb     804f3be <_IO_stdin_used+0x9ba>
cmp    (%eax),%ah
jns    804f3cc <_IO_stdin_used+0x9c8>
jne    804f37f <_IO_stdin_used+0x97b>
popa
jb     804f3c7 <_IO_stdin_used+0x9c3>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     804f3e7 <_IO_stdin_used+0x9e3>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     804f3f1 <_IO_stdin_used+0x9ed>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     804f40e <_IO_stdin_used+0xa0a>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     804f40d <_IO_stdin_used+0xa09>
outsb  %ds:(%esi),(%dx)
je     804f3cb <_IO_stdin_used+0x9c7>
jo     804f412 <_IO_stdin_used+0xa0e>
jb     804f41c <_IO_stdin_used+0xa18>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     804f42c <_IO_stdin_used+0xa28>
je     804f439 <_IO_stdin_used+0xa35>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f3fe <_IO_stdin_used+0x9fa>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804f44c <_IO_stdin_used+0xa48>
je     804f459 <_IO_stdin_used+0xa55>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f41e <_IO_stdin_used+0xa1a>
and    %ah,0x250a2c73
jae    804f426 <_IO_stdin_used+0xa22>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804f470 <_IO_stdin_used+0xa6c>
je     804f47d <_IO_stdin_used+0xa79>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f442 <_IO_stdin_used+0xa3e>
and    %ah,0x250a2c73
jae    804f44a <_IO_stdin_used+0xa46>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804f498 <_IO_stdin_used+0xa94>
je     804f4a5 <_IO_stdin_used+0xaa1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f46a <_IO_stdin_used+0xa66>
and    %ah,0x250a2c73
jae    804f472 <_IO_stdin_used+0xa6e>
and    %ah,0x25202c73
jae    804f47a <_IO_stdin_used+0xa76>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804f4c4 <_IO_stdin_used+0xac0>
je     804f4d1 <_IO_stdin_used+0xacd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f496 <_IO_stdin_used+0xa92>
and    %ah,0x250a2c73
jae    804f49e <_IO_stdin_used+0xa9a>
and    %ah,0x25202c73
jae    804f4a6 <_IO_stdin_used+0xaa2>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804f4f4 <_IO_stdin_used+0xaf0>
je     804f501 <_IO_stdin_used+0xafd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f4c6 <_IO_stdin_used+0xac2>
and    %ah,0x250a2c73
jae    804f4ce <_IO_stdin_used+0xaca>
and    %ah,0x25202c73
jae    804f4d6 <_IO_stdin_used+0xad2>
and    %ah,0x250a2c73
jae    804f4de <_IO_stdin_used+0xada>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804f528 <_IO_stdin_used+0xb24>
je     804f535 <_IO_stdin_used+0xb31>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804f4fa <_IO_stdin_used+0xaf6>
and    %ah,0x250a2c73
jae    804f502 <_IO_stdin_used+0xafe>
and    %ah,0x25202c73
jae    804f50a <_IO_stdin_used+0xb06>
and    %ah,0x250a2c73
jae    804f512 <_IO_stdin_used+0xb0e>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
xorb   $0x4,-0x4e77f7fc(%ecx)
or     %cl,%al
mov    $0x4,%cl
or     %dl,(%eax)
mov    $0x4,%dl
or     %ch,-0x4e(%eax)
add    $0x8,%al
(bad)
mov    $0x4,%dl
or     %ch,(%eax)
mov    $0x4,%bl
or     %ah,0x400804b3(%eax)
mov    $0x4,%al
or     %bl,%al
mov    $0x4,%al
or     %al,0x6f(%ebx)
jo     804f59d <_IO_stdin_used+0xb99>
jb     804f58f <_IO_stdin_used+0xb8b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     804f5b1 <_IO_stdin_used+0xbad>
popa
jb     804f5a2 <_IO_stdin_used+0xb9e>
and    %al,0x6f(%esi)
jne    804f5b0 <_IO_stdin_used+0xbac>
fs
popa
je     804f5af <_IO_stdin_used+0xbab>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804f5ce <_IO_stdin_used+0xbca>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:(%edi)
jne    804f5d6 <_IO_stdin_used+0xbd2>
jb     804f594 <_IO_stdin_used+0xb90>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %al,(%eax)
add    %ch,(%eax)
int    $0x4
or     %bh,%al
lret
add    $0x8,%al
call   c00cfa62 <stdout+0xb807d8a2>
lret
add    $0x8,%al
mov    %cl,%bl
add    $0x8,%al
push   $0x680804c5
lds    (%eax,%ecx,1),%eax
push   $0x680804c5
lds    (%eax,%ecx,1),%eax
rol    %dh
add    $0x8,%al
rol    %dh
add    $0x8,%al
add    %cl,%bl
add    $0x8,%al
and    %cl,%ah
add    $0x8,%al
pusha
movl   $0x804c760,(%eax,%ecx,1)
push   $0x680804c5
lds    (%eax,%ecx,1),%eax
push   $0xd80804c5
roll   (%eax,%ecx,1)
lock roll (%eax,%ecx,1)
ror    $0x4,%ah
or     %al,%al
int3
add    $0x8,%al
mov    $0x280804d1,%eax
dec    %esi
push   %ebp
dec    %esp
dec    %esp
sub    %eax,(%eax)
add    %dh,-0x23(%eax)
add    $0x8,%al
or     %bl,%ch
add    $0x8,%al
or     %bl,%ch
add    $0x8,%al
clc
faddl  (%eax,%ecx,1)
clc
faddl  (%eax,%ecx,1)
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
call   f00cfaf5 <stdout+0xe807d935>
faddl  (%eax,%ecx,1)
sbb    %bl,%ch
add    $0x8,%al
sub    %bl,%ch
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
cmp    %bl,%ch
add    $0x8,%al
push   %eax
fldl   (%eax,%ecx,1)
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
rcr    %ah
add    $0x8,%al
sub    %al,(%eax)
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
dec    %esp
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %ch,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%dh
loopne 804f66f <_IO_stdin_used+0xc6b>
or     %dh,-0x1a4bf7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
inc    %ebx
in     $0x4,%al
or     %dh,-0x1bcef7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
inc    %ebx
in     $0x4,%al
or     %al,-0x1c(%ebx)
add    $0x8,%al
inc    %ebx
in     $0x4,%al
or     %dh,-0x1a4bf7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
pop    %ds
in     $0x4,%al
or     %dh,-0x1a4bf7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
pop    %ebp
in     $0x4,%al
or     %dh,-0x1a4bf7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
inc    %ebx
in     $0x4,%al
or     %dh,-0x1bf7f7fc(%ebp,%eiz,8)
add    $0x8,%al
shl    $0x4,%bl
or     %al,-0x1c(%ebx)
add    $0x8,%al
inc    %ebx
in     $0x4,%al
or     %al,-0x1c(%ebx)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
shl    $0x4,%bl
or     %dh,-0x1a4bf7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
insb   (%dx),%es:(%edi)
jecxz  804f793 <_IO_stdin_used+0xd8f>
or     %bl,-0x1c(%ebp)
add    $0x8,%al
test   %ah,%al
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
push   %ebp
jecxz  804f7a7 <_IO_stdin_used+0xda3>
or     %dh,-0x1ba2f7fc(%ebp,%eiz,8)
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
mov    $0xe5,%ah
add    $0x8,%al
pop    %ebp
in     $0x4,%al
.byte 0x8
add    %ebx,(%ebx)
add    (%ebx),%edi
jo     804f7c0 <_IO_stdin_used+0xdbc>
add    %al,(%eax)
dec    %ebp
add    %al,(%eax)
add    %cl,-0x7300006c(%eax)
add    (%eax),%al
add    %bh,(%eax)
cwtl
(bad)
decl   (%eax)
add    (%eax),%eax
add    %ch,-0x4f000064(%eax)
add    (%eax),%al
add    %bl,-0x17000063(%eax)
add    (%eax),%al
add    %cl,-0x60(%eax)
(bad)
ljmp   *(%eax)
add    (%eax),%eax
add    %cl,%al
mov    0x34cffff,%al
add    %al,(%eax)
fsubs  0x360ffff(%eax)
add    %al,(%eax)
call   7d04f7a1 <stdout+0x74ffd5e1>
add    (%eax),%eax
add    %bh,-0x5f00005f(%eax)
add    (%eax),%eax
add    %bl,(%eax)
mov    %al,0x3c0ffff
add    %al,(%eax)
pop    %eax
mov    %al,0x3e4ffff
add    %al,(%eax)
mov    %ah,0x404ffff(%edx)
add    %al,(%eax)
cmp    %ah,0x444ffff(%ebx)
add    %al,(%eax)
push   $0x70ffffa3
add    $0x0,%al
add    %bl,-0x5c(%eax)
(bad)
ljmp   *-0x77fffffc(%eax)
scas   %es:(%edi),%al
(bad)
(bad)
in     (%dx),%al
add    $0x0,%al
add    %ch,(%eax)
mov    $0xff,%al
ljmp   *-0x4f980000(,%eax,1)
(bad)
jmp    *0x5(%eax)
add    %al,(%eax)
mov    %dh,0x574ffff(%eax)
add    %al,(%eax)
test   $0xb0,%al
(bad)
decl   -0x17fffffb(%eax)
mov    $0xff,%al
ljmp   *-0x4ef80000(%ebp,%eax,1)
(bad)
inc    %eax
add    $0xb1480000,%eax
(bad)
jmp    *%esp
add    $0xb1a80000,%eax
(bad)
lcall  *(%eax)
push   %es
add    %al,(%eax)
mov    %dh,0x654ffff(%edx)
add    %al,(%eax)
mov    $0x6cffffb2,%eax
push   %es
add    %al,(%eax)
dec    %eax
mov    $0xff,%bl
jmp    *0x68000006(%eax)
mov    $0xff,%bl
pushl  -0x4c780000(%esi,%eax,1)
(bad)
dec    %eax
push   %es
add    %al,(%eax)
test   $0xb3,%al
(bad)
(bad)
faddl  (%esi)
add    %al,(%eax)
enter  $0xffb3,$0xff
lock push %es
add    %al,(%eax)
clc
mov    $0xff,%bl
call   *(%eax)
pop    %es
add    %al,(%eax)
sub    %dh,0x730ff(%edi,%edi,8)
add    %bl,-0x4c(%eax)
(bad)
decl   0x7(%eax)
add    %al,(%eax)
mov    %dh,0x760ff(%edi,%edi,8)
add    %bh,(%eax)
mov    $0xff,%ch
incl   -0x4a980000(%edi,%eax,1)
(bad)
lcall  *-0x4a680000(%edi,%eax,1)
(bad)
pushl  -0x4a380000(%edi,%eax,1)
(bad)
dec    %esp
pop    %es
add    %al,(%eax)
js     804f8b4 <_IO_stdin_used+0xeb0>
(bad)
push   %eax
pop    %es
add    %al,(%eax)
mov    $0x8ffffb6,%eax
or     %al,(%eax)
add    %bh,%al
mov    $0xff,%dh
jmp    *(%eax)
or     %al,(%eax)
add    %bh,(%eax)
mov    $0xff,%bh
(bad)
cmp    %cl,(%eax)
add    %al,(%eax)
pop    %eax
mov    $0xff,%bh
decl   0x0(%eax,%ecx,1)
add    %bh,-0x49(%eax)
(bad)
jmp    *0x8(%eax)
add    %al,(%eax)
cwtl
mov    $0xff,%bh
pushl  0x0(%eax,%ecx,1)
add    %bh,-0x77000049(%eax)
or     %al,(%eax)
add    %ch,(%eax)
mov    $0x924ffff,%ebp
add    %al,(%eax)
js     804f903 <_IO_stdin_used+0xeff>
(bad)
(bad)
cmp    $0x9,%al
add    %al,(%eax)
fdivrs 0x960ffff(%ebp)
add    %al,(%eax)
sbb    %bh,0x978ffff(%esi)
add    %al,(%eax)
enter  $0xffbe,$0xff
pushf
or     %eax,(%eax)
add    %bh,%al
mov    $0x9c0ffff,%esi
add    %al,(%eax)
sub    %bh,0x9e4ffff(%edi)
add    %al,(%eax)
cmp    %bh,0x9f8ffff(%edi)
add    %al,(%eax)
mov    %bh,0xa28ffff(%edi)
add    %al,(%eax)
enter  $0xffbf,$0xff
push   %esp
or     (%eax),%al
add    %ch,(%eax)
sar    $0xff,%bh
test   %cl,(%edx)
add    %al,(%eax)
js     804f956 <_IO_stdin_used+0xf52>
(bad)
ljmp   *-0x57fffff6(%eax)
sar    $0xff,%bh
enter  $0xa,$0x0
fadd   %st(0),%st
(bad)
jmp    *%esp
or     (%eax),%al
add    %cl,(%eax)
sar    $0xff,%edi
add    $0xb,%al
add    %al,(%eax)
cmp    %al,%cl
(bad)
jmp    *(%ebx,%ecx,1)
add    %al,(%eax)
mov    %al,%cl
(bad)
(bad)
cmp    %cl,(%ebx)
add    %al,(%eax)
js     804f988 <_IO_stdin_used+0xf84>
(bad)
(bad)
js     804f9d5 <_IO_stdin_used+0xfd1>
add    %al,(%eax)
clc
ret    $0xffff
rorb   (%ebx)
add    %al,(%eax)
mov    $0x10ffffc6,%eax
or     $0x0,%al
add    %bl,-0x39(%eax)
(bad)
lcall  *0xc(%eax)
add    %al,(%eax)
mov    $0x84ffffc7,%eax
or     $0x0,%al
add    %cl,-0x38(%eax)
(bad)
(bad)
fmull  (%eax,%eax,1)
add    %bl,-0x38(%eax)
(bad)
push   %eax
or     $0x0,%al
add    %cl,0x20ffffe4(%eax)
or     $0xe4e80000,%eax
(bad)
incl   0x0(%ebp,%ecx,1)
add    %cl,%al
in     $0xff,%eax
incl   0x6800000d(%eax)
icebp
(bad)
inc    %eax
or     $0xf1d80000,%eax
(bad)
(bad)
cld
or     $0xf1e80000,%eax
(bad)
call   *(%eax)
push   %cs
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     804fa43 <_IO_stdin_used+0x103f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
hlt
xchg   %eax,%ecx
(bad)
pushl  0x3(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     804fa63 <_IO_stdin_used+0x105f>
js     804fa61 <_IO_stdin_used+0x105d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
xor    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%al
cltd
(bad)
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0x43100e0a(%ebx),%ch
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
js     804faa6 <_IO_stdin_used+0x10a2>
add    %al,(%eax)
test   $0x9a,%al
(bad)
jmp    *0x2(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %ch,(%eax)
xchg   %eax,%ebp
(bad)
(bad)
jnp    804fad1 <_IO_stdin_used+0x10cd>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x20,%eax
mov    $0x18000000,%eax
popf
(bad)
(bad)
jns    804faee <_IO_stdin_used+0x10ea>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%ecx),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,%ah
add    %al,(%eax)
add    %dh,-0x1(%ebp,%ebx,4)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
add    %al,(%eax)
add    %dh,-0x63(%eax)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%ecx,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
popf
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
xor    %al,(%ecx)
add    %al,(%eax)
adc    %bl,0x57ffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %al,(%eax)
push   %eax
sahf
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
je     804fba3 <_IO_stdin_used+0x119f>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sahf
(bad)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,-0x61840000(%ecx,%eax,1)
(bad)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
aam    $0x1
add    %al,(%eax)
in     (%dx),%al
sahf
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
lock sahf
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%eax)
add    (%eax),%al
add    %ch,0x2fffff9f(%eax)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jl     804fcac <_IO_stdin_used+0x12a8>
add    %al,(%eax)
xchg   %eax,%esp
test   $0x196ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,-0x550c0000(%edx,%eax,1)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%ebx,%eax,1)
add    %al,(%eax)
or     $0xab,%al
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    (%eax),%eax
add    %bl,(%eax)
stos   %eax,%es:(%edi)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0x3,%al
add    %al,(%eax)
xor    $0xab,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
inc    %eax
stos   %eax,%es:(%edi)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
je     804fda5 <_IO_stdin_used+0x13a1>
add    %al,(%eax)
pop    %esp
stos   %eax,%es:(%edi)
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
test   $0x3,%al
add    %al,(%eax)
mov    %ch,0xd4ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%eax
add    %ch,(%esp,%ebp,4)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
cld
add    (%eax),%eax
add    %al,-0x1(%esp,%ebp,4)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax,%eax,1)
add    %ah,0x1affffac(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %ch,0x19ffff(%esp,%ebp,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    $0x0,%al
add    %bh,0x18ffffac(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esp,%eax,1)
add    %al,%ah
lods   %ds:(%esi),%al
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
addb   $0x0,(%eax,%eax,1)
shrb   0x2dff(%edi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,-0x1ffffffc(%eax)
lods   %ds:(%esi),%al
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,%al
add    $0x0,%al
add    %dh,%al
lods   %ds:(%esi),%al
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fadds  (%eax,%eax,1)
add    %cl,(%eax)
lods   %ds:(%esi),%eax
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
lock add $0x0,%al
add    %ah,(%eax)
lods   %ds:(%esi),%eax
(bad)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    $0x5,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
lods   %ds:(%esi),%eax
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sub    $0x5,%al
add    %al,(%eax)
les    0x23ffff(%ebp),%ebp
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
add    $0xaddc0000,%eax
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %esp
add    $0xadf40000,%eax
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
addb   $0xff,0xae800000
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cwtl
add    $0xaea80000,%eax
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x5,%al
add    %al,(%eax)
shrb   0x33ffff(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
enter  $0x5,$0x0
clc
scas   %es:(%edi),%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
add    $0xaf040000,%eax
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
add    $0xaf100000,%eax
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%esi,%eax,1)
add    %al,(%eax)
sbb    $0xaf,%al
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x18000000(%eax)
push   %es
add    %al,(%eax)
sub    %ch,0x567ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x6,%ah
add    %al,(%eax)
cld
mov    $0xff,%bl
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,%ah
push   %es
add    %al,(%eax)
xor    $0xb4,%al
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
lock push %es
add    %al,(%eax)
jo     80500d6 <_IO_stdin_used+0x16d2>
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
or     %al,(%edi)
add    %al,(%eax)
cwtl
mov    $0xff,%ah
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sub    $0x7,%al
add    %al,(%eax)
and    $0xb5,%al
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
push   %eax
pop    %es
add    %al,(%eax)
xor    %dh,0x2effff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
je     80501a9 <_IO_stdin_used+0x17a5>
add    %al,(%eax)
cmp    $0xb5,%al
(bad)
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
cmp    %dh,0x44ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x58000007,%eax
mov    $0xff,%ch
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
in     $0x7,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0xff,%ch
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    $0x8,%al
add    %al,(%eax)
pushf
mov    $0xff,%ch
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
cmp    %cl,(%eax)
add    %al,(%eax)
enter  $0xffb5,$0xff
sub    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bl,0x8(%eax)
add    %al,(%eax)
fdivs  0x25ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
je     80502aa <_IO_stdin_used+0x18a6>
add    %al,(%eax)
in     (%dx),%al
mov    $0xff,%ch
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,-0x4a040000(%eax,%ecx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,-0x49f40000(%eax,%ecx,1)
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x8,$0x0
dec    %eax
mov    $0xff,%dh
jmp    *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x10900e46
xchg   %eax,%esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,(%eax)
or     %eax,(%eax)
add    %bh,%al
mov    $0xff,%dh
(bad)
js     805033e <_IO_stdin_used+0x193a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     805035f <_IO_stdin_used+0x195b>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pusha
or     %eax,(%eax)
add    %ah,(%eax)
mov    $0xff,%bh
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %ah,-0x5ffffff7(%eax)
mov    $0x97ffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
call   50422 <__snprintf_chk@plt-0x7ff882e>
mov    $0x5dffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dl,(%edx,%ecx,1)
add    %al,(%eax)
sub    $0xbb,%al
(bad)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     (%eax),%al
add    %ah,-0x1(%ebx,%edi,4)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
orb    $0x0,(%edx)
add    %ah,-0x45(%eax)
(bad)
ljmp   *(%edx)
sbb    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa028903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x48,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dh,0x6000000a(%eax)
xlat   %ds:(%ebx)
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x4a,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0xe(%esi),%ecx
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
aam    $0xa
add    %al,(%eax)
pushf
xlat   %ds:(%ebx)
(bad)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf581fc(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    %eax,%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,(%eax)
or     (%eax),%eax
add    %al,-0x28(%eax)
(bad)
lcall  *0xb(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
or     (%eax),%eax
add    %ah,0x61ffffe3(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,-0x1c2c0000(%ebx,%ecx,1)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,-0x2ffffff5(%eax)
jecxz  80505d2 <_IO_stdin_used+0x1bce>
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0x30
xchg   %eax,%esp
add    $0x8,%al
.byte 0x10
xchg   %eax,%esp
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
adc    %cl,0xd08(%esp,%eax,1)
add    %bl,%ah
jmp    81e2732 <stdout+0x190572>
add    %al,(%eax)
or     %bl,(%edi)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x1f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
and    %al,0x60804(%esi)
add    %al,(%eax)
lock addl $0xa,(%eax,%ecx,1)
call   13051f6f <stdout+0xafffdaf>
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
and    %al,0x208
add    %dl,%al
add    %eax,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %al,-0x76(%eax)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
adc    %cl,0x120804(%edx)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x70(%edi)
mov    %eax,(%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x8(%edi)
mov    %eax,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0x1f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x74(%esi)
add    $0x8,%al
data16
mov    %es,(%eax,%ecx,1)
jbe    8051fa2 <_IO_stdin_used+0x359e>
add    $0x8,%al
xchg   %cl,0x48c9608(%esp,%eax,1)
or     %ah,-0x49f7fb74(%esi)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
out    %al,$0x8c
add    $0x8,%al
(bad)
mov    %es,(%eax,%ecx,1)
push   %es
lea    (%eax,%ecx,1),%eax
push   %ss
lea    (%eax,%ecx,1),%eax
lea    %es:(%eax,%ecx,1),%eax
lea    %ss:(%eax,%ecx,1),%eax
inc    %esi
lea    (%eax,%ecx,1),%eax
push   %esi
lea    (%eax,%ecx,1),%eax
lea    (%eax,%ecx,1),%ax
jbe    8051fe3 <_IO_stdin_used+0x35df>
add    $0x8,%al
xchg   %cl,-0x7269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lea    (%eax,%ecx,1),%eax
mov    $0x8d,%dh
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
(bad)
lea    (%eax,%ecx,1),%eax
out    %al,$0x8d
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
push   %es
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
mov    %es:(%eax,%ecx,1),%es
mov    %ss:(%eax,%ecx,1),%es
inc    %esi
mov    (%eax,%ecx,1),%es
push   %esi
mov    (%eax,%ecx,1),%es
data16
mov    (%eax,%ecx,1),%es
jbe    8052024 <_IO_stdin_used+0x3620>
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8052065 <_IO_stdin_used+0x3661>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
mov    $0x8f,%dh
add    $0x8,%al
(bad)
popl   (%eax,%ecx,1)
(bad)
popl   (%eax,%ecx,1)
out    %al,$0x8f
add    $0x8,%al
shr    %cl,%esi
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,0x5(%ecx,%eiz,1)
or     %al,(%eax)
add    %eax,(%eax)
add    %ah,%al
and    %eax,0x108
add    %al,(%eax)
jb     6f <__snprintf_chk@plt-0x8048be1>
imul   $0x6c9e0000,%fs:0x0(%edx),%esi
.byte 0xd8
xchg   %eax,%ecx
