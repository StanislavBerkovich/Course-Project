das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,-0x6(%eax)
std
faddl  0x4f(%ecx,%ebp,2)
(bad)
adc    $0x1bf9a6d,%eax
sub    %dh,%al
pop    %ss
sub    %bh,%al
xor    (%ebx),%ebp
add    (%eax),%eax
add    %al,(%eax)
add    %al,%ds:(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,0x4012000(%esi)
in     $0x41,%al
sub    %edi,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
inc    %edi
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x427c92e3,%ebx
pop    %ecx
movsl  %ds:(%esi),%es:(%edi)
xlat   %ds:(%ebx)
lods   %ds:(%esi),%al
dec    %ebx
jecxz  1a0 <_init-0xc90>
pop    %eax
call   71d8eed3 <_end+0x71d85a53>
pop    %eax
sbb    $0xb0,%al
fmuls  -0x34(%ebp)
push   $0x7f
lcall  $0xeb0e,$0xf18db97c
shr    %cl,%edi
push   %cs
adc    %al,(%ebx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
cltd
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebx
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,%dl
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pushf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    49d <_init-0x993>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     4ad <_init-0x983>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,%ds:(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%ebx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
incl   (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sti
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stc
add    (%eax),%eax
add    %ah,(%eax)
nop
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
or     $0x4,%al
add    %al,(%eax)
adcb   $0x0,0x0(%eax,%eax,1)
adc    %al,(%eax)
sbb    %eax,(%eax)
adc    %eax,(%eax,%eax,1)
add    %bl,(%eax)
nop
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
xor    (%ebx),%al
add    %al,(%eax)
dec    %esp
push   %eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
ltr    (%edx)
add    $0x0,%al
add    %cl,0x50(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sldt   (%eax)
add    $0x0,%al
add    %ah,(%eax)
nop
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
and    %eax,(%eax,%eax,1)
add    %bl,(%eax,%edx,4)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
out    %al,$0x3
add    %al,(%eax)
mov    0x8000011,%al
pop    %ds
add    %al,(%eax)
adc    (%eax),%al
or     $0x22f00,%eax
add    %dh,(%eax)
push   %cs
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
sbb    $0x2,%al
add    %al,(%eax)
xor    $0x50,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     6e5 <_init-0x74b>
jae    6ae <_init-0x782>
xor    0x2e(%edi),%esp
jae    6f5 <_init-0x73b>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     6f9 <_init-0x737>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    724 <_init-0x70c>
popa
jb     727 <_init-0x709>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    719 <_init-0x717>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    73a <_init-0x6f6>
gs
jae    6ca <_init-0x766>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     736 <_init-0x6fa>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     74d <_init-0x6e3>
jae    748 <_init-0x6e8>
popa
je     760 <_init-0x6d0>
jb     74d <_init-0x6e3>
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x74(%esi)
data16
jae    758 <_init-0x6d8>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    75e <_init-0x6d2>
popa
jb     767 <_init-0x6c9>
pop    %edi
gs
jno    77b <_init-0x6b5>
popa
insb   (%dx),%es:(%edi)
add    %al,0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    778 <_init-0x6b8>
imul   $0x735f6564,0x6f(%esi),%ebp
jns    790 <_init-0x6a0>
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     78d <_init-0x6a3>
jae    788 <_init-0x6a8>
insl   (%dx),%es:(%edi)
popa
jo     79d <_init-0x693>
imul   $0x6961705f,0x67(%esi),%ebp
jb     7a9 <_init-0x687>
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
add    %ch,%fs:0x74(%esi)
data16
jae    7a1 <_init-0x68f>
addr16
gs
je     7a5 <_init-0x68b>
jae    7b1 <_init-0x67f>
jp     7af <_init-0x681>
pop    %edi
outsw  %ds:(%esi),(%dx)
jb     7ae <_init-0x682>
insl   (%dx),%es:(%edi)
popa
jo     7c3 <_init-0x66d>
imul   $0x6961705f,0x67(%esi),%ebp
jb     7cf <_init-0x661>
add    %ch,0x74(%esi)
data16
jae    7c1 <_init-0x66f>
imul   $0x6d5f6564,0x6f(%esi),%ebp
popa
jb     7d7 <_init-0x659>
pop    %edi
imul   $0x746e0079,%fs:0x74(%edx),%esi
data16
jae    7d7 <_init-0x659>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     7e6 <_init-0x64a>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    7e7 <_init-0x649>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jo     7ef <_init-0x641>
jb     803 <_init-0x62d>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     809 <_init-0x627>
imul   $0x66746e00,0x6e(%edi),%ebp
jae    7fd <_init-0x633>
popa
je     815 <_init-0x61b>
jb     802 <_init-0x62e>
jo     81a <_init-0x616>
je     806 <_init-0x62a>
jae    80e <_init-0x622>
popa
jb     80f <_init-0x621>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    816 <_init-0x61a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    822 <_init-0x60e>
je     81e <_init-0x612>
push   $0x6c646e61
gs
jb     7c7 <_init-0x669>
outsb  %ds:(%esi),(%dx)
je     830 <_init-0x600>
jae    82b <_init-0x605>
popa
je     843 <_init-0x5ed>
jb     830 <_init-0x600>
imul   $0x695f,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
je     850 <_init-0x5e0>
jb     842 <_init-0x5ee>
gs
data16
add    %ch,0x74(%esi)
data16
jae    845 <_init-0x5eb>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     851 <_init-0x5df>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     85c <_init-0x5d4>
jae    857 <_init-0x5d9>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    862 <_init-0x5ce>
jae    801 <_init-0x62f>
outsb  %ds:(%esi),(%dx)
je     86a <_init-0x5c6>
jae    865 <_init-0x5cb>
bound  %ebp,0x74(%ecx)
insl   (%dx),%es:(%edi)
popa
jo     86c <_init-0x5c4>
arpl   %bp,0x61(%ebp,%eiz,2)
jb     872 <_init-0x5be>
jb     88a <_init-0x5a6>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    87b <_init-0x5b5>
jne    88b <_init-0x5a5>
outsl  %ds:(%esi),(%dx)
jne    88f <_init-0x5a1>
je     823 <_init-0x60d>
outsb  %ds:(%esi),(%dx)
je     88c <_init-0x5a4>
jae    887 <_init-0x5a9>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x61(%ebp,%eiz,2)
jb     891 <_init-0x59f>
insb   (%dx),%es:(%edi)
gs
jbe    89b <_init-0x595>
insb   (%dx),%es:(%edi)
jae    839 <_init-0x5f7>
outsb  %ds:(%esi),(%dx)
je     8a2 <_init-0x58e>
jae    89d <_init-0x593>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8ae <_init-0x582>
add    %ch,0x74(%esi)
data16
jae    8ae <_init-0x582>
jo     8c8 <_init-0x568>
jb     8bc <_init-0x574>
je     8ba <_init-0x576>
add    %ch,0x74(%esi)
data16
jae    8ba <_init-0x576>
jo     8cf <_init-0x561>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    8c5 <_init-0x56b>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     8d6 <_init-0x55a>
jae    8d1 <_init-0x55f>
popa
je     8e9 <_init-0x547>
jb     8d6 <_init-0x55a>
outsl  %ds:(%esi),(%dx)
jo     8df <_init-0x551>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    8e0 <_init-0x550>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     8ec <_init-0x544>
outsl  %ds:(%esi),(%dx)
jne    904 <_init-0x52c>
gs
jb     905 <_init-0x52b>
add    %bl,0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    8fe <_init-0x532>
jne    904 <_init-0x52c>
jae    911 <_init-0x51f>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    91d <_init-0x513>
je     919 <_init-0x517>
insb   (%dx),%es:(%edi)
gs
jbe    923 <_init-0x50d>
insb   (%dx),%es:(%edi)
jae    8c1 <_init-0x56f>
outsb  %ds:(%esi),(%dx)
je     92a <_init-0x506>
jae    925 <_init-0x50b>
popa
je     93d <_init-0x4f3>
jb     92a <_init-0x506>
addr16
gs
je     92e <_init-0x502>
jae    936 <_init-0x4fa>
popa
jb     937 <_init-0x4f9>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    93e <_init-0x4f2>
insl   (%dx),%es:(%edi)
popa
jo     953 <_init-0x4dd>
imul   $0x6961705f,0x67(%esi),%ebp
jb     95f <_init-0x4d1>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     966 <_init-0x4ca>
gs
jae    96a <_init-0x4c6>
add    %ch,0x74(%esi)
data16
jae    95c <_init-0x4d4>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
addr16
gs
je     964 <_init-0x4cc>
insb   (%dx),%es:(%edi)
gs
jbe    96e <_init-0x4c2>
insb   (%dx),%es:(%edi)
jae    90c <_init-0x524>
outsb  %ds:(%esi),(%dx)
je     975 <_init-0x4bb>
jae    970 <_init-0x4c0>
bound  %ebp,0x74(%ecx)
insl   (%dx),%es:(%edi)
popa
jo     977 <_init-0x4b9>
jae    97f <_init-0x4b1>
je     97b <_init-0x4b5>
jb     993 <_init-0x49d>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    984 <_init-0x4ac>
jo     988 <_init-0x4a8>
je     991 <_init-0x49f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
je     99f <_init-0x491>
pop    %edi
imul   $0x6e006564,0x6f(%esi),%ebp
je     9a0 <_init-0x490>
jae    99b <_init-0x495>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    9ae <_init-0x482>
je     942 <_init-0x4ee>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    9b5 <_init-0x47b>
popa
je     9cd <_init-0x463>
jb     9ba <_init-0x476>
jo     9cf <_init-0x461>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    9c5 <_init-0x46b>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     9da <_init-0x456>
add    %ch,%fs:0x74(%esi)
data16
jae    9db <_init-0x455>
popa
je     9f3 <_init-0x43d>
jb     9e0 <_init-0x450>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     9f1 <_init-0x43f>
jae    9ec <_init-0x444>
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     9fb <_init-0x435>
jae    9f6 <_init-0x43a>
jne    9fc <_init-0x434>
jae    a0f <_init-0x421>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    a24 <_init-0x40c>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     a29 <_init-0x407>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x70(%edi)
je     a30 <_init-0x400>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    a48 <_init-0x3e8>
jb     a4a <_init-0x3e6>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    a4b <_init-0x3e5>
je     9e8 <_init-0x448>
pop    %edi
pop    %edi
gs
jb     a5f <_init-0x3d1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
js     a77 <_init-0x3b9>
je     a67 <_init-0x3c9>
je     a3e <_init-0x3f2>
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     a81 <_init-0x3af>
popa
jb     a77 <_init-0x3b9>
add    %bl,0x5f(%edi)
jae    a83 <_init-0x3ad>
jo     a89 <_init-0x3a7>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     a93 <_init-0x39d>
jo     a9a <_init-0x396>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     a93 <_init-0x39d>
push   $0x5f5f0072
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     aa6 <_init-0x38a>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    aae <_init-0x382>
add    %ch,0x70(%edi)
je     ab3 <_init-0x37d>
jb     ac2 <_init-0x36e>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     ad1 <_init-0x35f>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x65(%edi)
fs
popa
je     ad8 <_init-0x358>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    af4 <_init-0x33c>
popa
jb     af7 <_init-0x339>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    aed <_init-0x343>
addr16 jo afd <_init-0x333>
add    %bl,0x66(%edi)
jo     af5 <_init-0x33b>
push   $0x746e0077
data16
jae    afd <_init-0x333>
bound  %esi,0x67(%ebp)
jae    aa3 <_init-0x38d>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    $0x300,%eax
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    $0x0,%al
sub    %al,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x50000,%eax
sub    (%eax,%eax,1),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x40000,(%ecx),%ecx
xor    $0x10000004,%eax
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
inc    %ecx
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %cl,0x4(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x80000(%ebp)
add    %al,(%eax)
add    $0x8d,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %cl,0x80000(%ebp)
add    %al,(%eax)
xor    %cl,0x80000(%ebp)
add    %al,(%eax)
inc    %eax
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,-0x73(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,-0x73(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
orb    $0x0,0x80000(%ebp)
add    %dl,0x800008d(%eax)
add    %al,(%eax)
add    %ah,0x800008d(%eax)
add    %al,(%eax)
add    %dh,0x800008d(%eax)
add    %al,(%eax)
add    %al,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%al
popl   (%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%edx,4)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %dl,0x80000(%eax)
add    %al,(%eax)
sbb    $0x90,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x600008f,%eax
add    %eax,(%eax)
add    %bh,0x5060000(%edi,%ecx,4)
add    %al,(%eax)
rorb   $0x0,0x6060000(%edi)
add    %al,%ah
popl   (%eax)
add    %al,(%esi)
sldt   (%eax)
enter  $0x8f,$0x0
push   %es
adc    %eax,(%eax)
add    %cl,%ah
popl   (%eax)
add    %al,(%esi)
adc    (%eax),%al
add    %dl,%al
popl   (%eax)
add    %al,(%esi)
adc    $0x0,%al
add    %dl,%ah
popl   (%eax)
add    %al,(%esi)
pop    %ds
add    %al,(%eax)
fmull  0x31060000(%edi)
add    %al,(%eax)
loopne c11 <_init-0x21f>
add    %al,(%eax)
push   %es
xor    (%eax),%eax
add    %ah,%ah
popl   (%eax)
add    %al,(%esi)
add    %al,%ss:(%eax)
call   6000d24 <_end+0x5ff78a4>
cmp    (%eax),%eax
in     (%dx),%al
mov    (%eax),%es
add    %al,(%edi)
add    (%eax),%al
add    %dh,%al
mov    (%eax),%es
add    %al,(%edi)
add    (%eax),%eax
add    %dh,%ah
mov    (%eax),%es
add    %al,(%edi)
add    $0x0,%al
add    %bh,%al
mov    (%eax),%es
add    %al,(%edi)
pop    %es
add    %al,(%eax)
cld
mov    (%eax),%es
add    %al,(%edi)
or     %al,(%eax)
add    %al,(%eax)
popl   (%eax)
add    %al,(%edi)
or     %eax,(%eax)
add    %al,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
or     (%eax),%al
add    %cl,(%eax)
popl   (%eax)
add    %al,(%edi)
or     (%eax),%eax
add    %cl,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
or     $0x0,%al
add    %dl,(%eax)
popl   (%eax)
add    %al,(%edi)
or     $0x8f140000,%eax
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
sbb    %cl,0x10070000(%edi)
add    %al,(%eax)
sbb    $0x8f,%al
add    %al,(%eax)
pop    %es
adc    (%eax),%eax
add    %ah,(%eax)
popl   (%eax)
add    %al,(%edi)
adc    $0x0,%al
add    %ah,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
adc    $0x8f280000,%eax
add    %al,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
sub    $0x8f,%al
add    %al,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
xor    %cl,0x18070000(%edi)
add    %al,(%eax)
xor    $0x8f,%al
add    %al,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %bh,(%eax)
popl   (%eax)
add    %al,(%edi)
sbb    (%eax),%al
add    %bh,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %al,-0x71(%eax)
add    %al,(%eax)
pop    %es
sbb    $0x0,%al
add    %al,0x0(%edi,%ecx,4)
add    %al,(%edi)
sbb    $0x8f480000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
dec    %esp
popl   (%eax)
add    %al,(%edi)
pop    %ds
add    %al,(%eax)
push   %eax
popl   (%eax)
add    %al,(%edi)
and    %al,(%eax)
add    %dl,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    %eax,(%eax)
add    %bl,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    (%eax),%al
add    %bl,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    (%eax),%eax
add    %ah,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    $0x0,%al
add    %ah,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    $0x8f680000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
insb   (%dx),%es:(%edi)
popl   (%eax)
add    %al,(%edi)
daa
add    %al,(%eax)
jo     d31 <_init-0xff>
add    %al,(%eax)
pop    %es
sub    %al,(%eax)
add    %dh,0x0(%edi,%ecx,4)
add    %al,(%edi)
sub    %eax,(%eax)
add    %bh,-0x71(%eax)
add    %al,(%eax)
pop    %es
sub    (%eax),%al
add    %bh,0x0(%edi,%ecx,4)
add    %al,(%edi)
sub    (%eax),%eax
add    %al,0x700008f(%eax)
sub    $0x0,%al
add    %al,0x2d070000(%edi,%ecx,4)
add    %al,(%eax)
mov    %cl,0x2e070000(%edi)
add    %al,(%eax)
mov    %cs,0x2f070000(%edi)
add    %al,(%eax)
nop
popl   (%eax)
add    %al,(%edi)
xor    %al,(%eax)
add    %dl,0x32070000(%edi,%ecx,4)
add    %al,(%eax)
cwtl
popl   (%eax)
add    %al,(%edi)
xor    $0x0,%al
add    %bl,0x35070000(%edi,%ecx,4)
add    %al,(%eax)
mov    0x700008f,%al
aaa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
popl   (%eax)
add    %al,(%edi)
cmp    %al,(%eax)
add    %ch,0x700008f(%eax)
cmp    %eax,(%eax)
add    %ch,0x3a070000(%edi,%ecx,4)
add    %al,(%eax)
mov    $0x8f,%al
add    %al,(%eax)
pop    %es
cmp    $0x0,%al
add    %dh,0x3d070000(%edi,%ecx,4)
push   %ebx
sub    $0x8,%esp
call   30e0 <main+0x1f40>
add    $0x80a7,%ebx
mov    0xf4(%ebx),%eax
test   %eax,%eax
je     e4e <_init+0x1e>
call   ff0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    e60 <_init+0x30>
jmp    *0x10(%ebx)
push   $0x8
jmp    e60 <_init+0x30>
jmp    *0x14(%ebx)
push   $0x10
jmp    e60 <_init+0x30>
jmp    *0x18(%ebx)
push   $0x18
jmp    e60 <_init+0x30>
jmp    *0x1c(%ebx)
push   $0x20
jmp    e60 <_init+0x30>
jmp    *0x20(%ebx)
push   $0x28
jmp    e60 <_init+0x30>
jmp    *0x24(%ebx)
push   $0x30
jmp    e60 <_init+0x30>
jmp    *0x28(%ebx)
push   $0x38
jmp    e60 <_init+0x30>
jmp    *0x2c(%ebx)
push   $0x40
jmp    e60 <_init+0x30>
jmp    *0x30(%ebx)
push   $0x48
jmp    e60 <_init+0x30>
jmp    *0x34(%ebx)
push   $0x50
jmp    e60 <_init+0x30>
jmp    *0x38(%ebx)
push   $0x58
jmp    e60 <_init+0x30>
jmp    *0x3c(%ebx)
push   $0x60
jmp    e60 <_init+0x30>
jmp    *0x40(%ebx)
push   $0x68
jmp    e60 <_init+0x30>
jmp    *0x44(%ebx)
push   $0x70
jmp    e60 <_init+0x30>
jmp    *0x48(%ebx)
push   $0x78
jmp    e60 <_init+0x30>
jmp    *0x4c(%ebx)
push   $0x80
jmp    e60 <_init+0x30>
jmp    *0x50(%ebx)
push   $0x88
jmp    e60 <_init+0x30>
jmp    *0x54(%ebx)
push   $0x90
jmp    e60 <_init+0x30>
jmp    *0x58(%ebx)
push   $0x98
jmp    e60 <_init+0x30>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    e60 <_init+0x30>
jmp    *0x60(%ebx)
push   $0xa8
jmp    e60 <_init+0x30>
jmp    *0x64(%ebx)
push   $0xb0
jmp    e60 <_init+0x30>
jmp    *0x68(%ebx)
push   $0xb8
jmp    e60 <_init+0x30>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    e60 <_init+0x30>
jmp    *0x70(%ebx)
push   $0xc8
jmp    e60 <_init+0x30>
jmp    *0x74(%ebx)
push   $0xd0
jmp    e60 <_init+0x30>
jmp    *0x78(%ebx)
push   $0xd8
jmp    e60 <_init+0x30>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    e60 <_init+0x30>
jmp    *0x80(%ebx)
push   $0xe8
jmp    e60 <_init+0x30>
jmp    *0x84(%ebx)
push   $0xf0
jmp    e60 <_init+0x30>
jmp    *0x88(%ebx)
push   $0xf8
jmp    e60 <_init+0x30>
jmp    *0x8c(%ebx)
push   $0x100
jmp    e60 <_init+0x30>
jmp    *0x90(%ebx)
push   $0x108
jmp    e60 <_init+0x30>
jmp    *0x94(%ebx)
push   $0x110
jmp    e60 <_init+0x30>
jmp    *0x98(%ebx)
push   $0x118
jmp    e60 <_init+0x30>
jmp    *0x9c(%ebx)
push   $0x120
jmp    e60 <_init+0x30>
jmp    *0xa0(%ebx)
push   $0x128
jmp    e60 <_init+0x30>
jmp    *0xa4(%ebx)
push   $0x130
jmp    e60 <_init+0x30>
jmp    *0xa8(%ebx)
push   $0x138
jmp    e60 <_init+0x30>
jmp    *0xac(%ebx)
push   $0x140
jmp    e60 <_init+0x30>
jmp    *0xb0(%ebx)
push   $0x148
jmp    e60 <_init+0x30>
jmp    *0xb4(%ebx)
push   $0x150
jmp    e60 <_init+0x30>
jmp    *0xb8(%ebx)
push   $0x158
jmp    e60 <_init+0x30>
jmp    *0xbc(%ebx)
push   $0x160
jmp    e60 <_init+0x30>
jmp    *0xc0(%ebx)
push   $0x168
jmp    e60 <_init+0x30>
jmp    *0xc4(%ebx)
push   $0x170
jmp    e60 <_init+0x30>
jmp    *0xc8(%ebx)
push   $0x178
jmp    e60 <_init+0x30>
jmp    *0xcc(%ebx)
push   $0x180
jmp    e60 <_init+0x30>
jmp    *0xd0(%ebx)
push   $0x188
jmp    e60 <_init+0x30>
jmp    *0xd4(%ebx)
push   $0x190
jmp    e60 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   30e0 <main+0x1f40>
add    $0x7d35,%ebx
and    $0xfffffff0,%esp
sub    $0xe0,%esp
mov    0xe4(%ebx),%eax
mov    %eax,(%esp)
call   fc0 <ntfs_log_set_handler@plt>
mov    0x100(%ebx),%eax
movl   $0x0,0xdc(%esp)
00
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xb0(%esp)
00
movl   $0x0,(%eax)
lea    -0x1c0(%ebx),%eax
mov    %eax,0xc0(%esp)
lea    -0x3e68(%ebx),%eax
movl   $0x0,0xcc(%esp)
00
mov    %eax,0xb8(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0xb8(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   1020 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     142f <main+0x28f>
cmp    $0x76,%eax
ja     13d5 <main+0x235>
mov    -0x3824(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
movl   $0x10,(%esp)
addl   $0x1,0x178(%ebx)
call   1160 <ntfs_log_set_levels@plt>
jmp    121a <main+0x7a>
movl   $0x4,(%esp)
addl   $0x1,0x174(%ebx)
call   f60 <ntfs_log_clear_levels@plt>
jmp    121a <main+0x7a>
addl   $0x1,0x17c(%ebx)
jmp    121a <main+0x7a>
addl   $0x1,0x170(%ebx)
jmp    121a <main+0x7a>
addl   $0x1,0xb0(%esp)
jmp    121a <main+0x7a>
mov    0x16c(%ebx),%eax
or     0x168(%ebx),%eax
jne    1389 <main+0x1e9>
movl   $0xfffffc18,0x168(%ebx)
ff
movl   $0xffffffff,0x16c(%ebx)
ff
jmp    121a <main+0x7a>
mov    0x16c(%ebx),%eax
or     0x168(%ebx),%eax
jne    1389 <main+0x1e9>
movl   $0xfffffc16,0x168(%ebx)
ff
movl   $0xffffffff,0x16c(%ebx)
ff
jmp    121a <main+0x7a>
mov    0xe8(%ebx),%eax
mov    $0x6,%ecx
mov    0xc(%ebp),%edi
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
lea    -0x3e90(%ebx),%edi
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     1957 <main+0x7b7>
addl   $0x1,0xa8(%esp)
jmp    121a <main+0x7a>
mov    0x160(%ebx),%eax
test   %eax,%eax
je     193d <main+0x79d>
mov    0x164(%ebx),%eax
test   %eax,%eax
je     2fb0 <main+0x1e10>
movl   $0x0,0x160(%ebx)
00
movl   $0x0,0x164(%ebx)
00
addl   $0x1,0xcc(%esp)
jmp    121a <main+0x7a>
mov    0x16c(%ebx),%eax
or     0x168(%ebx),%eax
je     18ef <main+0x74f>
movl   $0xffffffff,0x168(%ebx)
ff
movl   $0xffffffff,0x16c(%ebx)
ff
jmp    121a <main+0x7a>
mov    0x16c(%ebx),%eax
or     0x168(%ebx),%eax
jne    1389 <main+0x1e9>
movl   $0xfffffc17,0x168(%ebx)
ff
movl   $0xffffffff,0x16c(%ebx)
ff
jmp    121a <main+0x7a>
addl   $0x1,0x180(%ebx)
jmp    121a <main+0x7a>
mov    0xe8(%ebx),%eax
mov    0xc(%ebp),%edi
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xca,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3e89(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x35c2(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
addl   $0x1,0xcc(%esp)
jmp    121a <main+0x7a>
call   ea0 <ntfs_log_get_levels@plt>
test   $0x10,%al
je     143f <main+0x29f>
addl   $0x1,0x178(%ebx)
test   $0x4,%al
jne    144a <main+0x2aa>
addl   $0x1,0x174(%ebx)
mov    0xa8(%esp),%eax
or     0xb0(%esp),%eax
je     153a <main+0x39a>
cmpl   $0x0,0xb0(%esp)
movl   $0x0,0x174(%ebx)
00
jne    17a8 <main+0x608>
mov    0xcc(%esp),%eax
or     0xa8(%esp),%eax
mov    %eax,0xcc(%esp)
je     151b <main+0x37b>
lea    -0x3e4b(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3e73(%ebx),%edi
lea    -0x3aa8(%ebx),%eax
lea    -0x35d0(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x5c,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xd8(%ebx),%eax
mov    (%eax),%ecx
lea    0x13c(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3e3e(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x5d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xcc(%esp),%eax
mov    $0x1,%esi
or     0xb0(%esp),%eax
je     15a0 <main+0x400>
lea    -0xc(%ebp),%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x0,0x160(%ebx)
je     187b <main+0x6db>
cmpl   $0x0,0x164(%ebx)
je     187b <main+0x6db>
cmpl   $0x0,0x174(%ebx)
je     156a <main+0x3ca>
cmpl   $0x0,0x178(%ebx)
jne    3061 <main+0x1ec1>
mov    0x16c(%ebx),%edx
mov    0x168(%ebx),%eax
cmp    $0xffffffff,%edx
je     1758 <main+0x5b8>
or     %eax,%edx
jne    1476 <main+0x2d6>
movl   $0xfffffc17,0x168(%ebx)
ff
movl   $0xffffffff,0x16c(%ebx)
ff
jmp    1476 <main+0x2d6>
call   3210 <main+0x2070>
xor    %eax,%eax
cmpl   $0x0,0x17c(%ebx)
setne  %al
mov    %eax,%edx
or     $0x10000000,%edx
cmpl   $0x0,0x170(%ebx)
cmovne %edx,%eax
mov    %eax,0x4(%esp)
mov    0x160(%ebx),%eax
mov    %eax,(%esp)
call   3650 <main+0x24b0>
test   %eax,%eax
mov    %eax,0x9c(%esp)
je     2fca <main+0x1e2a>
mov    0x164(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   1000 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,0x68(%esp)
je     3009 <main+0x1e69>
movl   $0x400,(%esp)
call   fb0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x58(%esp)
je     302d <main+0x1e8d>
mov    0x68(%esp),%edi
mov    0x58(%esp),%eax
movl   $0x400,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   3e90 <main+0x2cf0>
mov    %edi,(%esp)
call   4880 <main+0x36e0>
test   %eax,%eax
jne    18c8 <main+0x728>
mov    0x68(%esp),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   3de0 <main+0x2c40>
test   %eax,%eax
je     196f <main+0x7cf>
lea    -0x3e11(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1e5,0x8(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x8c(%esp)
mov    %eax,0x4(%esp)
lea    -0x35e4(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3c63(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x333,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x35da(%ebx),%eax
mov    %eax,(%esp)
lea    -0x3c4c(%ebx),%esi
call   e80 <ntfs_log_redirect@plt>
mov    0x8c(%esp),%eax
mov    %esi,0x14(%esp)
mov    $0x1,%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x4(%esp)
lea    -0x35b4(%ebx),%eax
movl   $0x394,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   10d0 <ntfs_inode_close@plt>
mov    0x9c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   e90 <ntfs_umount@plt>
jmp    1530 <main+0x390>
cmp    $0xffffffff,%eax
jne    157f <main+0x3df>
lea    -0x3b64(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x35c2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xe9,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
addl   $0x1,0xcc(%esp)
jmp    1476 <main+0x2d6>
lea    -0x3e59(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3e4b(%ebx),%eax
lea    -0x3e73(%ebx),%edi
lea    -0x35ca(%ebx),%esi
mov    %eax,0x18(%esp)
lea    -0x3b14(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x40,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3acc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x41,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xd8(%ebx),%eax
mov    (%eax),%ecx
lea    0x13c(%ebx),%eax
mov    (%eax),%edx
lea    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x3e42(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x42,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    1476 <main+0x2d6>
cmpl   $0x1,0x8(%ebp)
jle    18bb <main+0x71b>
lea    -0x3bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x35c2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xdd,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
addl   $0x1,0xcc(%esp)
jmp    1554 <main+0x3b4>
lea    -0x3e1b(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1df,0x8(%esp)
jmp    1696 <main+0x4f6>
mov    0x108(%ebx),%eax
lea    0xdc(%esp),%edx
mov    (%eax),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   f70 <strtoll@plt>
mov    %eax,0x168(%ebx)
mov    0xdc(%esp),%eax
mov    %edx,0x16c(%ebx)
test   %eax,%eax
je     121a <main+0x7a>
cmpb   $0x1,(%eax)
sbbl   $0xffffffff,0xcc(%esp)
jmp    121a <main+0x7a>
mov    0xe8(%ebx),%eax
mov    0xc(%ebp),%edi
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
mov    %eax,0x160(%ebx)
jmp    121a <main+0x7a>
mov    %eax,(%esp)
call   1010 <ntfs_log_parse_option@plt>
cmp    $0x1,%eax
adcl   $0x0,0xcc(%esp)
jmp    121a <main+0x7a>
mov    0x68(%esp),%eax
mov    0x8(%eax),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   3de0 <main+0x2c40>
test   %eax,%eax
je     2f43 <main+0x1da3>
movzwl 0x14(%eax),%edx
mov    0x68(%esp),%edi
add    %edx,%eax
mov    0xc(%edi),%edx
add    $0x42,%eax
mov    0xac(%edx),%ecx
mov    0xa8(%edx),%edx
movl   $0x1,0x10(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
movzbl -0x2(%eax),%edx
mov    %eax,0x8(%esp)
lea    -0x35f0(%ebx),%eax
movl   $0x5,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   f50 <ntfs_names_are_equal@plt>
test   %eax,%eax
jne    2ed0 <main+0x1d30>
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x337,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3c57(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x8c(%esp)
mov    %eax,0x4(%esp)
lea    -0x35da(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x50(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0x68(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1140 <ntfs_attr_get_search_ctx@plt>
mov    %eax,0x54(%esp)
lea    -0x3dec(%ebx),%eax
mov    %eax,0x4c(%esp)
mov    0x54(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   3d50 <main+0x2bb0>
test   %eax,%eax
mov    %eax,0x78(%esp)
je     2e76 <main+0x1cd6>
mov    0x78(%esp),%edi
mov    0x58(%esp),%esi
mov    0x9c(%esp),%eax
movl   $0x400,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   4280 <main+0x30e0>
mov    (%edi),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
mov    0x4c(%esp),%eax
movl   $0x341,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
cmpb   $0x0,0x8(%edi)
je     2b15 <main+0x1975>
lea    -0x3dd3(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x344,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0x78(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   fa0 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
je     2f6a <main+0x1dca>
mov    0x10(%eax),%edi
mov    %edi,0x98(%esp)
mov    0x14(%eax),%edi
cmp    $0x0,%edi
mov    %edi,0xa0(%esp)
jle    2d3a <main+0x1b9a>
lea    0x18(%eax),%edi
mov    %eax,0xc8(%esp)
lea    -0x384c(%ebx),%eax
mov    %edi,0x7c(%esp)
mov    %eax,0x5c(%esp)
lea    0x0(%esi),%esi
mov    0xc8(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
not    %edx
xor    $0xfffffffe,%eax
or     %eax,%edx
je     27e3 <main+0x1643>
movl   $0x2000,(%esp)
call   fb0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x88(%esp)
je     2de2 <main+0x1c42>
mov    0x9c(%esp),%eax
movl   $0x0,0x64(%esp)
mov    0x68(%eax),%ecx
mov    0x20(%ecx),%edi
mov    0x1c(%ecx),%esi
mov    %edi,%eax
mov    %edi,%edx
sar    $0x1f,%eax
and    $0x1fff,%eax
mov    %eax,0x60(%esp)
mov    %esi,%eax
add    0x60(%esp),%eax
adc    0x64(%esp),%edx
shrd   $0xd,%edx,%eax
test   %eax,%eax
jle    2a63 <main+0x18c3>
sub    $0x1,%eax
mov    %eax,0x70(%esp)
addl   $0x1,0x70(%esp)
mov    0x70(%esp),%eax
movl   $0x0,0x74(%esp)
adcl   $0x0,0x74(%esp)
xor    %edi,%edi
mov    0x74(%esp),%edx
movl   $0x0,0x6c(%esp)
movl   $0x0,0x80(%esp)
00
movl   $0x0,0x84(%esp)
00
shld   $0xd,%eax,%edx
shl    $0xd,%eax
mov    %eax,0x70(%esp)
mov    %edx,0x74(%esp)
movl   $0x0,0xb0(%esp)
00
movl   $0x0,0xb4(%esp)
00
movl   $0x0,0xc0(%esp)
00
mov    %edi,0xcc(%esp)
mov    0x88(%esp),%eax
mov    0x84(%esp),%edx
movl   $0x2000,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x80(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   1070 <ntfs_attr_pread@plt>
cmp    $0x2000,%eax
jne    2b68 <main+0x19c8>
mov    0x6c(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %esi,%edi
mov    %esi,0xa8(%esp)
mov    %eax,%esi
mov    0x88(%esp),%eax
sar    $0x1f,%edi
mov    %edi,0xac(%esp)
mov    %edx,%edi
mov    %eax,0xb8(%esp)
jmp    1d27 <main+0xb87>
xchg   %ax,%ax
mov    0xa8(%esp),%edx
mov    0xac(%esp),%ecx
mov    %eax,0xcc(%esp)
movl   $0x1,0xc0(%esp)
00
add    %esi,%edx
adc    %edi,%ecx
mov    %edx,0xb0(%esp)
mov    %ecx,0xb4(%esp)
add    $0x1,%esi
mov    %esi,%eax
adc    $0x0,%edi
xor    $0x10000,%eax
or     %edi,%eax
je     2828 <main+0x1688>
mov    0xb8(%esp),%edx
mov    %esi,%eax
mov    %esi,%ecx
sar    $0x3,%eax
and    $0x7,%ecx
movzbl (%edx,%eax,1),%eax
sar    %cl,%eax
and    $0x1,%eax
cmp    %eax,0xcc(%esp)
jne    1ce0 <main+0xb40>
mov    0xcc(%esp),%eax
addl   $0x1,0xc0(%esp)
test   %eax,%eax
jne    1d12 <main+0xb72>
mov    0xc0(%esp),%eax
cltd
cmp    %edx,0xa0(%esp)
mov    %eax,0x90(%esp)
mov    %edx,0x94(%esp)
jg     1d12 <main+0xb72>
jge    1f08 <main+0xd68>
movl   $0x1000,0x4(%esp)
movl   $0x1,(%esp)
call   1190 <calloc@plt>
test   %eax,%eax
mov    %eax,0xcc(%esp)
je     2a63 <main+0x18c3>
mov    0x98(%esp),%edi
mov    0xb0(%esp),%edx
mov    0xb4(%esp),%ecx
movl   $0x0,(%eax)
mov    %edi,0x10(%eax)
mov    0xa0(%esp),%edi
movl   $0x0,0x4(%eax)
mov    %edx,0x8(%eax)
mov    %ecx,0xc(%eax)
mov    %edi,0x14(%eax)
movl   $0xfffffffd,0x20(%eax)
movl   $0xffffffff,0x24(%eax)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
cmp    $0x0,%edi
jle    1f21 <main+0xd81>
lea    -0x3da0(%ebx),%ecx
mov    0xb0(%esp),%eax
mov    $0x1,%esi
mov    0xb4(%esp),%edx
xor    %edi,%edi
movl   $0x0,0xc0(%esp)
00
movl   $0x0,0xc4(%esp)
00
mov    %ecx,0xb8(%esp)
jmp    1e7b <main+0xcdb>
lea    0x0(%esi),%esi
mov    0xa0(%esp),%edx
mov    0x98(%esp),%eax
mov    %esi,0xc0(%esp)
mov    %edi,0xc4(%esp)
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     1f31 <main+0xd91>
mov    0xcc(%esp),%eax
add    $0x1,%esi
adc    $0x0,%edi
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
add    0xc0(%esp),%eax
adc    0xc4(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   4530 <main+0x3390>
test   %eax,%eax
je     1e40 <main+0xca0>
mov    0xcc(%esp),%ecx
mov    0xc0(%esp),%eax
mov    0xc4(%esp),%edx
add    0x8(%ecx),%eax
adc    0xc(%ecx),%edx
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
mov    0xb8(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x8,0xc(%esp)
movl   $0x1c2,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x3618(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    1e40 <main+0xca0>
mov    0x90(%esp),%eax
cmp    %eax,0x98(%esp)
ja     1d12 <main+0xb72>
jmp    1d82 <main+0xbe2>
jl     1f31 <main+0xd91>
cmpl   $0x0,0x98(%esp)
ja     1e00 <main+0xc60>
mov    0xc8(%esp),%eax
mov    0xcc(%esp),%edi
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %edx,0x4(%edi)
mov    %eax,(%edi)
mov    0x78(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   fa0 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
mov    %eax,0xb0(%esp)
je     2e09 <main+0x1c69>
mov    0xcc(%esp),%edi
mov    0x14(%edi),%edx
mov    0xc(%edi),%ecx
mov    0x10(%edi),%eax
mov    (%edi),%esi
mov    %edx,0xc4(%esp)
mov    0x8(%edi),%edx
mov    %ecx,0xbc(%esp)
mov    0xc8(%esp),%ecx
mov    0x4(%edi),%edi
mov    %eax,0xc0(%esp)
mov    %edx,0xb8(%esp)
mov    0xc(%ecx),%edx
mov    0x8(%ecx),%eax
mov    %esi,0xa8(%esp)
mov    0x10(%ecx),%esi
mov    %edi,0xac(%esp)
mov    0x14(%ecx),%edi
mov    %edx,0xa4(%esp)
mov    (%ecx),%edx
mov    %eax,0xa0(%esp)
mov    0x4(%ecx),%ecx
mov    0xc0(%esp),%eax
mov    %edx,0x90(%esp)
mov    0xc4(%esp),%edx
mov    %ecx,0x94(%esp)
mov    0xbc(%esp),%ecx
mov    %eax,0x40(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0x44(%esp)
mov    0xb8(%esp),%edx
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
mov    0xac(%esp),%edx
mov    %eax,0x30(%esp)
mov    0x94(%esp),%ecx
mov    %edi,0x2c(%esp)
mov    0xa0(%esp),%eax
mov    0x8c(%esp),%edi
mov    %edx,0x34(%esp)
mov    0xa4(%esp),%edx
mov    %ecx,0x1c(%esp)
mov    %esi,0x28(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x24(%esp)
mov    0x90(%esp),%edx
mov    %eax,0x20(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %edx,0x18(%esp)
mov    0x5c(%esp),%edx
movl   $0x2b4,0x8(%esp)
mov    %edx,0x14(%esp)
lea    -0x360c(%ebx),%edx
mov    %edx,(%esp)
mov    %edx,%esi
mov    %edx,0x90(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xb0(%esp),%edx
movl   $0x7fffffff,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    0x9c(%esp),%edx
mov    %edx,(%esp)
call   1180 <ntfs_get_size_for_mapping_pairs@plt>
mov    %edi,0x4(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x2b7,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0xa8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3d7e(%ebx),%eax
mov    %eax,0x14(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xcc(%esp),%edi
cmpl   $0x0,0x14(%edi)
jl     2199 <main+0xff9>
jle    2b05 <main+0x1965>
mov    0xc8(%esp),%edi
mov    0xb0(%esp),%esi
mov    (%edi),%eax
mov    0x4(%esi),%edx
mov    0x4(%edi),%edi
mov    %eax,0xc0(%esp)
xor    (%esi),%eax
xor    %edi,%edx
mov    %edi,0xb8(%esp)
or     %eax,%edx
je     2948 <main+0x17a8>
mov    0xb0(%esp),%edi
mov    0xcc(%esp),%eax
lea    0x18(%edi),%edx
jmp    218b <main+0xfeb>
xchg   %ax,%ax
mov    %edx,%ecx
mov    0xb8(%esp),%edi
add    $0x18,%eax
mov    0xc0(%esp),%esi
add    $0x18,%edx
xor    0x4(%ecx),%edi
xor    (%ecx),%esi
or     %esi,%edi
je     294f <main+0x17af>
cmpl   $0x0,0x2c(%eax)
jg     2168 <main+0xfc8>
jl     2199 <main+0xff9>
cmpl   $0x0,0x28(%eax)
ja     2168 <main+0xfc8>
mov    0xb0(%esp),%eax
movl   $0x7fffffff,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   1180 <ntfs_get_size_for_mapping_pairs@plt>
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x2c5,0x8(%esp)
mov    %eax,0x18(%esp)
mov    %eax,%edi
lea    -0x3d64(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0x78(%esp),%eax
cmpb   $0x0,0x8(%eax)
je     28ec <main+0x174c>
mov    0x8c(%esp),%ecx
movzwl 0x20(%eax),%eax
mov    0xa8(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %ecx,0x4(%esp)
mov    0x90(%esp),%ecx
lea    0x7(%edi,%eax,1),%edi
lea    0x7(%esi,%eax,1),%esi
and    $0xfff8,%edi
and    $0xfff8,%esi
lea    -0x3d4a(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x2ca,0x8(%esp)
mov    %ecx,(%esp)
call   e80 <ntfs_log_redirect@plt>
cmp    %edi,%esi
je     2ef7 <main+0x1d57>
mov    0x78(%esp),%eax
mov    0x68(%esp),%esi
mov    0x4(%eax),%edx
mov    0x8(%esi),%esi
mov    %edx,%ecx
mov    %eax,%edx
mov    0x18(%esi),%eax
sub    %esi,%edx
mov    %ecx,0xc0(%esp)
add    %edx,%ecx
sub    %ecx,%eax
add    %esi,%ecx
mov    %eax,0x8(%esp)
lea    (%edi,%edx,1),%eax
add    %esi,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   ed0 <memmove@plt>
mov    0x78(%esp),%eax
mov    %edi,0x98(%esp)
mov    %edi,0x4(%eax)
mov    %edi,%eax
sub    0xc0(%esp),%eax
add    %eax,0x18(%esi)
mov    0xc8(%esp),%edi
mov    0x10(%edi),%eax
mov    0x14(%edi),%ecx
mov    0xcc(%esp),%edi
mov    %eax,%esi
mov    0x14(%edi),%edx
xor    0x10(%edi),%eax
xor    %ecx,%edx
or     %eax,%edx
jne    2c90 <main+0x1af0>
mov    0xc8(%esp),%eax
mov    0x8(%eax),%edx
mov    0xc(%eax),%eax
test   %eax,%eax
js     2dbb <main+0x1c1b>
mov    0xcc(%esp),%edi
cmpl   $0x0,0xc(%edi)
js     2dbb <main+0x1c1b>
cmp    $0x0,%ecx
jle    2aed <main+0x194d>
mov    $0x1,%esi
xor    %edi,%edi
mov    %edx,0xc0(%esp)
xor    %edx,%edx
mov    %eax,0xc4(%esp)
xor    %eax,%eax
mov    %esi,0xb8(%esp)
mov    %edi,0xbc(%esp)
lea    0x0(%esi),%esi
add    0xc0(%esp),%eax
adc    0xc4(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   4530 <main+0x3390>
test   %eax,%eax
je     2967 <main+0x17c7>
mov    0xc8(%esp),%edi
mov    0xbc(%esp),%edx
mov    0xb8(%esp),%eax
addl   $0x1,0xb8(%esp)
adcl   $0x0,0xbc(%esp)
cmp    0x14(%edi),%edx
jle    2878 <main+0x16d8>
mov    0xcc(%esp),%eax
mov    0x14(%eax),%ecx
mov    0xc(%eax),%edx
mov    0x10(%eax),%edi
mov    0x8(%eax),%eax
cmp    $0x0,%ecx
mov    %edx,0xbc(%esp)
mov    %eax,0xb8(%esp)
jl     2b5c <main+0x19bc>
jle    2b53 <main+0x19b3>
mov    $0x1,%esi
xor    %edi,%edi
xor    %eax,%eax
xor    %edx,%edx
mov    %esi,0xc0(%esp)
mov    %edi,0xc4(%esp)
lea    0x0(%esi,%eiz,1),%esi
add    0xb8(%esp),%eax
adc    0xbc(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   4530 <main+0x3390>
test   %eax,%eax
jne    2a3c <main+0x189c>
mov    0xcc(%esp),%ecx
mov    0xc4(%esp),%edx
mov    0xc0(%esp),%eax
addl   $0x1,0xc0(%esp)
mov    0x10(%ecx),%edi
mov    0x14(%ecx),%ecx
adcl   $0x0,0xc4(%esp)
mov    %edi,%esi
cmp    %ecx,%edx
jg     2470 <main+0x12d0>
jl     28a8 <main+0x1708>
cmp    %edi,%eax
jb     28a8 <main+0x1708>
lea    0x0(%esi,%eiz,1),%esi
mov    0xcc(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    0x9c(%esp),%edi
mov    0x68(%edi),%edi
mov    %esi,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   ec0 <ntfs_bitmap_set_run@plt>
test   %eax,%eax
js     2cc2 <main+0x1b22>
mov    0xc8(%esp),%edi
mov    0x10(%edi),%eax
mov    0x14(%edi),%edx
mov    0xcc(%esp),%edi
mov    %eax,0xc0(%esp)
mov    0x14(%edi),%ecx
xor    0x10(%edi),%eax
xor    %edx,%ecx
or     %eax,%ecx
jne    2c00 <main+0x1a60>
mov    0xc8(%esp),%eax
mov    %edx,0xa0(%esp)
mov    0xc(%eax),%esi
mov    0x8(%eax),%edi
test   %esi,%esi
mov    %edi,0xa8(%esp)
js     2c00 <main+0x1a60>
mov    0xcc(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
js     2c00 <main+0x1a60>
mov    0x9c(%esp),%eax
mov    0x18(%eax),%edi
mov    %edi,(%esp)
call   fb0 <malloc@plt>
test   %eax,%eax
mov    %eax,0xb8(%esp)
je     2f03 <main+0x1d63>
mov    0xa0(%esp),%edx
cmp    $0x0,%edx
jle    2c65 <main+0x1ac5>
mov    %esi,%edx
mov    %edi,%esi
mov    0x9c(%esp),%edi
mov    0xa8(%esp),%eax
movl   $0x0,0xac(%esp)
00
movl   $0x1,0xa8(%esp)
00
movl   $0x0,0xc0(%esp)
00
movl   $0x0,0xc4(%esp)
00
xchg   %ax,%ax
mov    (%edi),%ecx
add    0xc0(%esp),%eax
adc    0xc4(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ecx,0xa0(%esp)
mov    0xb8(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,%ecx
imul   %esi,%ecx
mul    %esi
add    %ecx,%edx
mov    0xa0(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   f80 <ntfs_pread@plt>
mov    %eax,%ecx
mov    0x18(%edi),%eax
mov    %edx,%esi
xor    %ecx,%eax
or     %edx,%eax
jne    2c28 <main+0x1a88>
mov    %ecx,0xa0(%esp)
mov    0xcc(%esp),%ecx
mov    0xc0(%esp),%eax
mov    0xc4(%esp),%edx
add    0x8(%ecx),%eax
adc    0xc(%ecx),%edx
mov    %esi,%ecx
mov    %eax,0xc0(%esp)
imul   0xc0(%esp),%ecx
mov    %edx,0xc4(%esp)
mov    0xc4(%esp),%edx
mov    %ecx,%eax
mov    0xa0(%esp),%ecx
imul   %ecx,%edx
add    %eax,%edx
mov    0xc0(%esp),%eax
mov    %edx,0xa0(%esp)
mul    %ecx
mov    %edx,0xc4(%esp)
mov    0xb8(%esp),%edx
mov    %eax,0xc0(%esp)
mov    0xa0(%esp),%eax
add    %eax,0xc4(%esp)
mov    (%edi),%eax
mov    %edx,0x14(%esp)
mov    0xc0(%esp),%edx
mov    %ecx,0xc(%esp)
mov    0xc4(%esp),%ecx
mov    %esi,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
call   f00 <ntfs_pwrite@plt>
mov    0x18(%edi),%esi
mov    %eax,%ecx
xor    %esi,%ecx
or     %edx,%ecx
mov    %eax,0xa0(%esp)
jne    2bae <main+0x1a0e>
mov    0xc8(%esp),%eax
mov    0xac(%esp),%ecx
mov    0xa8(%esp),%edx
addl   $0x1,0xa8(%esp)
adcl   $0x0,0xac(%esp)
cmp    0x14(%eax),%ecx
mov    %edx,0xc0(%esp)
mov    %ecx,0xc4(%esp)
jle    28c8 <main+0x1728>
mov    0xa0(%esp),%eax
mov    %eax,0xc0(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
mov    0xc0(%esp),%eax
test   %eax,%eax
js     2c00 <main+0x1a60>
mov    0xc8(%esp),%edi
mov    0x9c(%esp),%ecx
mov    0x14(%edi),%edx
mov    0x10(%edi),%eax
mov    0x8(%edi),%esi
mov    0x68(%ecx),%ecx
mov    0xc(%edi),%edi
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %ecx,(%esp)
call   1130 <ntfs_bitmap_clear_run@plt>
test   %eax,%eax
js     2d55 <main+0x1bb5>
mov    0x78(%esp),%edi
mov    0x98(%esp),%esi
movzwl 0x20(%edi),%eax
mov    %esi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
add    %edi,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   1090 <memset@plt>
mov    0xb0(%esp),%eax
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0xc(%esp)
mov    %esi,0x8(%esp)
movzwl 0x20(%edi),%eax
add    %edi,%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   10c0 <ntfs_mapping_pairs_build@plt>
mov    0x68(%esp),%edi
mov    %edi,(%esp)
call   10f0 <ntfs_inode_mark_dirty@plt>
mov    %edi,(%esp)
call   1040 <ntfs_inode_sync@plt>
test   %eax,%eax
js     2e4f <main+0x1caf>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
mov    0xcc(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
mov    0x7c(%esp),%eax
addl   $0x18,0x7c(%esp)
mov    %eax,0xc8(%esp)
mov    0x7c(%esp),%eax
mov    -0x8(%eax),%edi
mov    -0x4(%eax),%eax
mov    %edi,0x98(%esp)
cmp    $0x0,%eax
mov    %eax,0xa0(%esp)
jl     1a53 <main+0x8b3>
jg     1b80 <main+0x9e0>
cmp    $0x0,%edi
jbe    1a53 <main+0x8b3>
jmp    1b80 <main+0x9e0>
addl   $0x2000,0x80(%esp)
00
adcl   $0x0,0x84(%esp)
mov    0x84(%esp),%edx
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
mov    0x80(%esp),%eax
addl   $0x10000,0x6c(%esp)
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     2a63 <main+0x18c3>
mov    0x9c(%esp),%eax
mov    0x68(%eax),%ecx
jmp    1c6b <main+0xacb>
lea    0x0(%esi,%eiz,1),%esi
jl     2883 <main+0x16e3>
cmp    0x10(%edi),%eax
jae    23b3 <main+0x1213>
mov    0xc8(%esp),%edi
mov    0x8(%edi),%esi
mov    0xc(%edi),%edi
mov    %esi,0xc0(%esp)
mov    %edi,0xc4(%esp)
jmp    2358 <main+0x11b8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xcc(%esp),%edi
mov    0x8(%edi),%esi
mov    0xc(%edi),%edi
mov    %esi,0xb8(%esp)
mov    %edi,0xbc(%esp)
jmp    2400 <main+0x1260>
jl     28da <main+0x173a>
mov    0xc0(%esp),%edx
cmp    0x10(%eax),%edx
jae    26d7 <main+0x1537>
mov    0xc8(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
jmp    2578 <main+0x13d8>
lea    -0x3d4a(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0xffffffff,0x1c(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
movl   $0x8,0xc(%esp)
movl   $0x2ca,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
movl   $0xffffffff,0x98(%esp)
ff
jmp    22d9 <main+0x1139>
mov    0xb0(%esp),%ecx
mov    0xcc(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %edx,0xc(%ecx)
mov    %eax,0x8(%ecx)
jmp    2199 <main+0xff9>
lea    -0x3d1c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x3625(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3c3f(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2d5,0x8(%esp)
mov    0x8c(%esp),%eax
lea    -0x3c4c(%ebx),%esi
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3c30(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x311,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x35ff(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   1050 <ntfs_attr_put_search_ctx@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
jmp    16f6 <main+0x556>
lea    -0x3d0b(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x270,0x8(%esp)
jmp    2989 <main+0x17e9>
mov    0x88(%esp),%eax
lea    -0x3c4c(%ebx),%esi
mov    %eax,(%esp)
call   ef0 <free@plt>
mov    0x8c(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x4(%esp)
lea    -0x3618(%ebx),%eax
movl   $0x1c6,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3c44(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2a5,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x360c(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    29e4 <main+0x1844>
jl     2cb7 <main+0x1b17>
cmp    $0x0,%esi
ja     232e <main+0x118e>
lea    0x0(%esi,%eiz,1),%esi
jmp    2470 <main+0x12d0>
cmpl   $0x0,0x10(%edi)
jbe    2199 <main+0xff9>
nop
jmp    2123 <main+0xf83>
lea    -0x3c7d(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x34d,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    1a53 <main+0x8b3>
cmp    $0x0,%edi
ja     23e3 <main+0x1243>
mov    %edi,%esi
xchg   %ax,%ax
jmp    247d <main+0x12dd>
lea    0x0(%esi),%esi
lea    -0x3da7(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x19f,0x8(%esp)
mov    0x8c(%esp),%eax
lea    -0x3c4c(%ebx),%esi
mov    %eax,0x4(%esp)
lea    -0x3618(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    2aad <main+0x190d>
mov    %eax,0x18(%esp)
lea    -0x3ccf(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x4(%esp)
lea    -0x363c(%ebx),%eax
movl   $0x241,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
lea    -0x3cc2(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x27b,0x8(%esp)
jmp    2989 <main+0x17e9>
nop
lea    -0x3da7(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x238,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x363c(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    2bf1 <main+0x1a51>
jl     2c76 <main+0x1ad6>
cmpl   $0x0,0xc0(%esp)
nop
ja     2538 <main+0x1398>
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
jmp    2703 <main+0x1563>
lea    0x0(%esi),%esi
lea    -0x3d35(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
jmp    2989 <main+0x17e9>
mov    0xc(%edi),%edx
mov    0x8(%edi),%eax
jmp    247d <main+0x12dd>
mov    0x8c(%esp),%edi
mov    %eax,0x18(%esp)
lea    -0x3cfd(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3632(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x206,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3ce4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x276,0x8(%esp)
lea    -0x3625(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    29a2 <main+0x1802>
jl     1a53 <main+0x8b3>
cmpl   $0x0,0x98(%esp)
ja     1b62 <main+0x9c2>
xchg   %ax,%ax
jmp    1a53 <main+0x8b3>
mov    0x8c(%esp),%edi
mov    %eax,0x18(%esp)
lea    -0x3cb0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3648(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x218,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3c98(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x280,0x8(%esp)
jmp    2d23 <main+0x1b83>
lea    -0x3d2a(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x263,0x8(%esp)
jmp    2989 <main+0x17e9>
lea    -0x3db0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x190,0x8(%esp)
jmp    2b8a <main+0x19ea>
lea    -0x3d85(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
lea    -0x3c4c(%ebx),%esi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x2ae,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x360c(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    29e4 <main+0x1844>
lea    -0x3c84(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x2e4,0x8(%esp)
jmp    29c4 <main+0x1824>
mov    0x54(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1050 <ntfs_attr_put_search_ctx@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
lea    -0x3c21(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x396,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x35b4(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    1730 <main+0x590>
lea    -0x3df3(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1f2,0x8(%esp)
jmp    1696 <main+0x4f6>
mov    %esi,0x98(%esp)
jmp    22d9 <main+0x1139>
lea    -0x3db0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x22f,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x363c(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    2c00 <main+0x1a60>
lea    -0x3e01(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1eb,0x8(%esp)
jmp    1696 <main+0x4f6>
lea    -0x3db7(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
lea    -0x3c4c(%ebx),%esi
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x302,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x35ff(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    2a1f <main+0x187f>
mov    0xe8(%ebx),%eax
mov    0xc(%ebp),%edi
mov    (%eax),%eax
mov    -0x4(%edi,%eax,4),%eax
mov    %eax,0x164(%ebx)
jmp    121a <main+0x7a>
lea    -0x3e38(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x375,0x8(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x35b4(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    1530 <main+0x390>
lea    -0x3e32(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x37b,0x8(%esp)
jmp    2fec <main+0x1e4c>
lea    -0x3e2a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e73(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x32c,0x8(%esp)
mov    %eax,0x8c(%esp)
jmp    16de <main+0x53e>
lea    -0x3ba0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x3e73(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x35c2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xe3,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
addl   $0x1,0xcc(%esp)
jmp    156a <main+0x3ca>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   30da <main+0x1f3a>
add    $0x5e28,%ebx
lea    -0x3eb0(%ebx),%eax
push   %eax
lea    -0x3f20(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0xf8(%ebx)
call   1060 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   30e0 <main+0x1f40>
add    $0x5de7,%ebx
sub    $0x14,%esp
lea    0x143(%ebx),%eax
lea    0x140(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     311b <main+0x1f7b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0xdc(%ebx),%eax
test   %eax,%eax
je     3115 <main+0x1f75>
mov    %edx,(%esp)
call   *%eax
jmp    3115 <main+0x1f75>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   30e0 <main+0x1f40>
add    $0x5da7,%ebx
sub    $0x14,%esp
lea    0x140(%ebx),%eax
lea    0x140(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    3164 <main+0x1fc4>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x104(%ebx),%ecx
test   %ecx,%ecx
je     315e <main+0x1fbe>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    315e <main+0x1fbe>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   30e0 <main+0x1f40>
add    $0x5d57,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x140(%ebx)
jne    31bf <main+0x201f>
mov    0xf0(%ebx),%eax
test   %eax,%eax
je     31b3 <main+0x2013>
mov    0x124(%ebx),%eax
mov    %eax,(%esp)
call   f40 <__cxa_finalize@plt>
call   30f0 <main+0x1f50>
movb   $0x1,0x140(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   30e0 <main+0x1f40>
add    $0x5d07,%ebx
sub    $0x14,%esp
mov    -0x1d8(%ebx),%eax
test   %eax,%eax
je     3201 <main+0x2061>
mov    0xfc(%ebx),%eax
test   %eax,%eax
je     3201 <main+0x2061>
lea    -0x1d8(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    3130 <main+0x1f90>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   30e0 <main+0x1f40>
add    $0x5cca,%ebx
sub    $0x28,%esp
movl   $0x6,(%esp)
lea    -0x354d(%ebx),%eax
mov    %eax,0x4(%esp)
call   1100 <setlocale@plt>
xor    %edx,%edx
test   %eax,%eax
je     3248 <main+0x20a8>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   1100 <setlocale@plt>
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x8c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3410(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2736(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x5c20,%ebx
test   %esi,%esi
je     3367 <main+0x21c7>
mov    (%esi),%eax
test   %eax,%eax
je     3348 <main+0x21a8>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   1110 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,%edi
js     3322 <main+0x2182>
cmp    0x48(%esp),%edi
lea    0x2(%eax,%eax,1),%ebp
mov    (%esi),%eax
jge    3330 <main+0x2190>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   f10 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   f90 <realloc@plt>
test   %eax,%eax
je     3360 <main+0x21c0>
mov    %eax,(%esi)
jmp    3302 <main+0x2162>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1110 <ntfs_mbstoucs@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%edi
jmp    3316 <main+0x2176>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    3324 <main+0x2184>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x5b4a,%ebx
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     34b0 <main+0x2310>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   1170 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     3450 <main+0x22b0>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   f30 <ntfs_check_if_mounted@plt>
test   %eax,%eax
mov    %eax,%edi
jne    34e8 <main+0x2348>
testb  $0x1,0x2c(%esp)
je     34d0 <main+0x2330>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     3598 <main+0x23f8>
lea    -0x358a(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2749(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   10b0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0x18(%esp)
je     3570 <main+0x23d0>
lea    -0x33e4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe1,0x8(%esp)
lea    -0x35af(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    -0x2749(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   10b0 <__errno_location@plt>
xor    %edi,%edi
movl   $0x16,(%eax)
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
lea    -0x33c0(%ebx),%eax
lea    -0x35af(%ebx),%edi
lea    -0x2749(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    0xb4(%esp),%edx
test   %edx,%edx
jne    3610 <main+0x2470>
lea    -0x3394(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeb,0x8(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    349e <main+0x22fe>
lea    0x0(%esi),%esi
lea    -0x35a7(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    3484 <main+0x22e4>
nop
lea    -0x3368(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x35af(%ebx),%ebp
lea    -0x350d(%ebx),%eax
lea    -0x2749(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x3290(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    349e <main+0x22fe>
nop
lea    -0x358a(%ebx),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xee,0x8(%esp)
mov    %esi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    349e <main+0x22fe>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x5880,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     37f8 <main+0x2658>
mov    %ebp,%edi
and    $0x10000000,%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   3380 <main+0x21e0>
test   %eax,%eax
je     3778 <main+0x25d8>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   10e0 <ntfs_mount@plt>
test   %eax,%eax
je     36f8 <main+0x2558>
testb  $0x1,0x12(%eax)
mov    %eax,%esi
je     36e8 <main+0x2548>
test   %edi,%edi
je     3808 <main+0x2668>
lea    -0x2bb4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x275c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x138,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x3575(%ebx),%eax
lea    -0x35af(%ebx),%ebp
lea    -0x275c(%ebx),%edi
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x11d,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
call   10b0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
jne    3788 <main+0x25e8>
lea    -0x3224(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5,%eax
je     3863 <main+0x26c3>
cmp    $0x1,%eax
je     38a2 <main+0x2702>
cmp    $0x5f,%eax
je     3920 <main+0x2780>
cmp    $0x10,%eax
je     38e1 <main+0x2741>
cmp    $0x6,%eax
nop
jne    3778 <main+0x25d8>
lea    -0x2e28(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x129,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    36e8 <main+0x2548>
lea    0x0(%esi,%eiz,1),%esi
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    36e8 <main+0x2548>
lea    -0x2d54(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x275c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
call   e90 <ntfs_umount@plt>
jmp    36e8 <main+0x2548>
lea    -0x3170(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x121,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    36e8 <main+0x2548>
lea    -0x30c4(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x123,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    36e8 <main+0x2548>
lea    -0x3368(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x127,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    36e8 <main+0x2548>
lea    -0x304c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x125,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    36e8 <main+0x2548>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x5571,%ebx
movl   $0x0,0x3c(%esp)
test   %esi,%esi
jne    3998 <main+0x27f8>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     3981 <main+0x27e1>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   f70 <strtoll@plt>
test   %edx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
js     3ab0 <main+0x2910>
call   10b0 <__errno_location@plt>
cmpl   $0x22,(%eax)
je     3ab0 <main+0x2910>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     3be0 <main+0x2a40>
mov    0x58(%esp),%edx
test   %edx,%edx
je     3a80 <main+0x28e0>
movzbl (%eax),%esi
mov    %esi,%ecx
cmp    $0x4d,%cl
je     3a3e <main+0x289e>
jle    3af8 <main+0x2958>
mov    %esi,%ecx
cmp    $0x6b,%cl
je     3a5d <main+0x28bd>
jg     3b40 <main+0x29a0>
cmp    $0x54,%cl
xchg   %ax,%ax
je     3b50 <main+0x29b0>
cmp    $0x67,%cl
jne    3b17 <main+0x2977>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    3a8d <main+0x28ed>
xchg   %ax,%ax
movzbl (%eax),%edi
mov    %edi,%ecx
test   %cl,%cl
jne    3b78 <main+0x29d8>
mov    0x54(%esp),%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x40,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x3560(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x162,0x8(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x276d(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x2d,%cl
je     3a8d <main+0x28ed>
jle    3bd0 <main+0x2a30>
mov    %esi,%ecx
cmp    $0x47,%cl
je     3a1f <main+0x287f>
cmp    $0x4b,%cl
je     3a5d <main+0x28bd>
mov    %eax,0x18(%esp)
lea    -0x2b38(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x174,0x8(%esp)
jmp    3ad6 <main+0x2936>
nop
mov    %esi,%ecx
cmp    $0x6d,%cl
je     3a3e <main+0x289e>
cmp    $0x74,%cl
jne    3b17 <main+0x2977>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    3a1f <main+0x287f>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%cl
je     3a8d <main+0x28ed>
sub    %esi,%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
lea    -0x354c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x276d(%ebx),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    398e <main+0x27ee>
nop
test   %cl,%cl
je     3a8d <main+0x28ed>
jmp    3b17 <main+0x2977>
lea    0x0(%esi),%esi
lea    -0x2b6c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x276d(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    398e <main+0x27ee>
jmp    3c30 <main+0x2a90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x52a1,%ebx
test   %esi,%esi
je     3cc8 <main+0x2b28>
mov    0x34(%esp),%edx
test   %edx,%edx
je     3cc8 <main+0x2b28>
mov    0x38(%esp),%eax
test   %eax,%eax
je     3cc8 <main+0x2b28>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   1030 <strchr@plt>
cmp    %eax,%esi
mov    %eax,%edi
je     3ce0 <main+0x2b40>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   3960 <main+0x27c0>
test   %eax,%eax
je     3d08 <main+0x2b68>
test   %edi,%edi
je     3cf8 <main+0x2b58>
cmpb   $0x0,0x1(%edi)
jne    3d18 <main+0x2b78>
mov    0x10(%esp),%esi
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0x14(%esp),%edi
mov    0x34(%esp),%ecx
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    $0x1,%eax
mov    %edx,0x4(%ecx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
jmp    3c8f <main+0x2aef>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
jmp    3ca8 <main+0x2b08>
xchg   %ax,%ax
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   3960 <main+0x27c0>
test   %eax,%eax
je     3d08 <main+0x2b68>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    3ca8 <main+0x2b08>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x5182,%ebx
test   %esi,%esi
je     3dc8 <main+0x2c28>
mov    0x40(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1120 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    3dc0 <main+0x2c20>
mov    0x4(%esi),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    3db7 <main+0x2c17>
lea    0x0(%esi,%eiz,1),%esi
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    3db7 <main+0x2c17>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
call   30e0 <main+0x1f40>
add    $0x50f1,%ebx
test   %eax,%eax
je     3e38 <main+0x2c98>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   1140 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%esi
je     3e48 <main+0x2ca8>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   3d50 <main+0x2bb0>
mov    %esi,(%esp)
mov    %eax,%edi
call   1050 <ntfs_attr_put_search_ctx@plt>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    3e2b <main+0x2c8b>
nop
lea    -0x2b08(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2782(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1ee,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    3e2b <main+0x2c8b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%ecx
call   30e0 <main+0x1f40>
add    $0x503a,%ebx
test   %ecx,%ecx
jne    3ec8 <main+0x2d28>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc4(%esp),%edx
test   %edx,%edx
je     3eb0 <main+0x2d10>
mov    0xc0(%esp),%eax
lea    0x4c(%esp),%edi
mov    $0x15,%ecx
mov    %edi,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x5,0x28(%esp)
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x2ae4(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1140 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     4235 <main+0x3095>
mov    $0x4,%ebp
mov    %ebp,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   3d50 <main+0x2bb0>
test   %eax,%eax
je     4058 <main+0x2eb8>
movzwl 0x14(%eax),%edi
add    %eax,%edi
movzbl 0x41(%edi),%ebp
cmp    0x20(%esp),%ebp
jg     3f48 <main+0x2da8>
mov    (%edi),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     3f95 <main+0x2df5>
mov    %eax,(%esp)
call   ef0 <free@plt>
movl   $0x0,(%esi)
movl   $0x0,0xc(%esp)
add    $0x42,%edi
mov    %esi,0x8(%esp)
movzbl -0x2(%edi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_ucstombs@plt>
test   %eax,%eax
js     3fc0 <main+0x2e20>
mov    %ebp,0x20(%esp)
jmp    3f48 <main+0x2da8>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x23d,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2797(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
movl   $0x1e,(%esp)
call   ee0 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     410b <main+0x2f6b>
mov    0xc0(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x3534(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1e,0x4(%esp)
mov    %edi,(%esp)
call   e70 <__snprintf_chk@plt>
mov    %edi,(%esi)
jmp    3fb8 <main+0x2e18>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1050 <ntfs_attr_put_search_ctx@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
je     4085 <main+0x2ee5>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   10d0 <ntfs_inode_close@plt>
mov    %ebp,%eax
mov    %edi,%ecx
xor    $0x5,%eax
movzwl %di,%edi
or     %edi,%eax
je     415a <main+0x2fba>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   1150 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     4118 <main+0x2f78>
addl   $0x1,0x30(%esp)
add    $0x4,%esi
cmpl   $0x14,0x30(%esp)
jne    3f18 <main+0x2d78>
lea    -0x2ab4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2797(%ebx),%eax
movl   $0x14,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x352a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2797(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x257,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    0x48(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x20(%esp)
lea    -0x350f(%ebx),%eax
lea    0x9c(%esp),%esi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     41c6 <main+0x3026>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    0xc8(%esp),%edi
movl   $0x2f,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0xc4(%esp),%eax
sub    %ebp,%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   e70 <__snprintf_chk@plt>
cmp    %eax,%edi
jle    41f9 <main+0x3059>
add    %eax,%ebp
sub    $0x4,%esi
cmp    0x20(%esp),%esi
jne    4178 <main+0x2fd8>
mov    0x3c(%esp),%eax
lea    0x50(%eax),%edi
mov    %eax,%esi
mov    (%esi),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   ef0 <free@plt>
cmp    %edi,%esi
jne    41d8 <main+0x3038>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x350a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2797(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    41cf <main+0x302f>
lea    -0x2b08(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2797(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x223,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    3ebd <main+0x2d1d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x4c50,%ebx
test   %esi,%esi
jne    42b0 <main+0x3110>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     429a <main+0x30fa>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   eb0 <ntfs_attr_find_in_attrdef@plt>
test   %eax,%eax
mov    %eax,%edi
je     4468 <main+0x32c8>
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   f20 <ntfs_ucsnlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_ucstombs@plt>
test   %eax,%eax
js     4440 <main+0x32a0>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x350d(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   10a0 <snprintf@plt>
cmp    0x5c(%esp),%eax
jge    43f8 <main+0x3258>
movzbl 0x9(%esi),%edx
test   %dl,%dl
je     42a5 <main+0x3105>
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
add    %eax,%edi
sub    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movzwl 0xa(%esi),%eax
movl   $0x0,0x2c(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   fd0 <ntfs_ucstombs@plt>
test   %eax,%eax
js     44d0 <main+0x3330>
mov    0x2c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x34e7(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   e70 <__snprintf_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   ef0 <free@plt>
cmp    %esi,%ebp
jg     42a5 <main+0x3105>
lea    -0x29c0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b4,0x8(%esp)
jmp    441a <main+0x327a>
lea    0x0(%esi),%esi
lea    -0x2a18(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29a,0x8(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27ab(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2a70(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x28f,0x8(%esp)
jmp    441a <main+0x327a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x295,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2a38(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27ab(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x34f1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   10a0 <snprintf@plt>
jmp    4336 <main+0x3196>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x29f8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27ab(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2aa,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
lea    -0x34f1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   10a0 <snprintf@plt>
jmp    42a5 <main+0x3105>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   30e0 <main+0x1f40>
add    $0x4998,%ebx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     46ae <main+0x350e>
mov    0x134(%ebx),%edx
cmp    0x1c(%esp),%edx
mov    0x130(%ebx),%eax
jle    4638 <main+0x3498>
mov    0x64(%ecx),%eax
mov    0xe0(%ebx),%edx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   1080 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     46c3 <main+0x3523>
lea    0x3a0(%ebx),%edx
mov    $0xffffffff,%eax
mov    %edx,%edi
mov    $0x80,%ecx
rep stos %eax,%es:(%edi)
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    %edx,0x14(%esp)
mov    %ebp,%edx
sar    $0x3,%edx
movl   $0x200,0xc(%esp)
and    $0xfffff000,%eax
mov    %eax,0x130(%ebx)
shrd   $0x3,%ebp,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x134(%ebx)
call   1070 <ntfs_attr_pread@plt>
test   %edx,%edx
js     4665 <main+0x34c5>
mov    %esi,(%esp)
call   fe0 <ntfs_attr_close@plt>
mov    0x18(%esp),%esi
mov    $0x1,%edx
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    %esi,%ecx
shrd   $0x3,%edi,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x3a0(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jl     4644 <main+0x34a4>
cmp    0x18(%esp),%eax
ja     4574 <main+0x33d4>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,0x1c(%esp)
jl     4607 <main+0x3467>
jg     4574 <main+0x33d4>
cmp    %eax,0x18(%esp)
jbe    4607 <main+0x3467>
xchg   %ax,%ax
jmp    4574 <main+0x33d4>
lea    -0x34cc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27c0(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2eb,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   fe0 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    4630 <main+0x3490>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    4630 <main+0x3490>
lea    -0x34e2(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27c0(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2e1,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    4630 <main+0x3490>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   30e0 <main+0x1f40>
add    $0x47b8,%ebx
test   %edi,%edi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     4825 <main+0x3685>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
mov    0x12c(%ebx),%edx
and    $0xffff,%ecx
mov    %eax,%esi
mov    0x128(%ebx),%eax
cmp    %edx,%ecx
jge    47f8 <main+0x3658>
lea    0x1a0(%ebx),%ebp
xor    %eax,%eax
mov    $0x80,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    0x40(%esp),%edi
and    $0xfffff000,%esi
xor    %edx,%edx
mov    %esi,%eax
shrd   $0x3,%edx,%eax
mov    %edx,0x12c(%ebx)
sar    $0x3,%edx
mov    %esi,0x128(%ebx)
mov    0x7c(%edi),%ecx
mov    %ebp,0x14(%esp)
movl   $0x200,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   1070 <ntfs_attr_pread@plt>
test   %edx,%edx
js     4837 <main+0x3697>
mov    0x18(%esp),%edi
mov    $0x1,%edx
mov    0x1c(%esp),%ebp
mov    %edi,%eax
mov    %edi,%ecx
shrd   $0x3,%ebp,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x1a0(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     4802 <main+0x3662>
cmp    %eax,%esi
jb     4764 <main+0x35c4>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,%ecx
jl     47c1 <main+0x3621>
jg     4764 <main+0x35c4>
cmp    %eax,%esi
jbe    47c1 <main+0x3621>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    4764 <main+0x35c4>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    47ea <main+0x364a>
lea    -0x34b6(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27d4(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x325,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    47ea <main+0x364a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   30e0 <main+0x1f40>
add    $0x4650,%ebx
test   %eax,%eax
je     496f <main+0x37cf>
mov    0xc(%eax),%esi
test   %esi,%esi
je     4968 <main+0x37c8>
mov    0x4(%eax),%edx
mov    (%eax),%edi
cmp    $0x0,%edx
ja     48b8 <main+0x3718>
cmp    $0xa,%edi
jbe    4928 <main+0x3788>
movzbl 0x10(%esi),%ecx
cmp    $0x3,%cl
je     4958 <main+0x37b8>
mov    0x8(%eax),%eax
test   %eax,%eax
je     48f0 <main+0x3750>
mov    0x24(%eax),%edx
mov    0x20(%eax),%edi
mov    %edx,%ebp
or     %edi,%ebp
je     48f0 <main+0x3750>
and    $0xffff,%edx
je     4950 <main+0x37b0>
cmp    $0x3,%cl
jne    48f0 <main+0x3750>
xor    $0xb,%edi
or     %edx,%edi
je     4928 <main+0x3788>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x30,(%esp)
call   3de0 <main+0x2c40>
test   %eax,%eax
je     4968 <main+0x37c8>
movzwl 0x14(%eax),%edx
mov    (%eax,%edx,1),%ecx
movzwl 0x4(%eax,%edx,1),%edx
xor    %eax,%eax
mov    %ecx,%edi
xor    $0x5,%edi
or     %edx,%edi
je     492d <main+0x378d>
cmp    $0x0,%edx
ja     4938 <main+0x3798>
cmp    $0xa,%ecx
ja     4938 <main+0x3798>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x3,0x10(%esi)
jne    492d <main+0x378d>
xor    $0xb,%ecx
xor    %eax,%eax
or     %edx,%ecx
sete   %al
jmp    492d <main+0x378d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edi
jbe    4928 <main+0x3788>
jmp    48e0 <main+0x3740>
nop
xor    $0xb,%edi
or     %edx,%edi
lea    0x0(%esi),%esi
jne    48c5 <main+0x3725>
jmp    4928 <main+0x3788>
mov    $0xffffffff,%eax
jmp    492d <main+0x378d>
nop
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    492d <main+0x378d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x4532,%ebx
test   %esi,%esi
je     49e8 <main+0x3848>
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   1190 <calloc@plt>
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %esi,0xc(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    49dd <main+0x383d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x44d2,%ebx
test   %esi,%esi
je     4a2f <main+0x388f>
mov    0x8(%esi),%eax
test   %eax,%eax
je     4a27 <main+0x3887>
mov    %eax,(%esp)
call   10d0 <ntfs_inode_close@plt>
mov    %esi,(%esp)
call   ef0 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   30e0 <main+0x1f40>
add    $0x4490,%ebx
test   %esi,%esi
je     4faa <main+0x3e0a>
mov    0x8(%esi),%eax
test   %eax,%eax
je     4a74 <main+0x38d4>
mov    %eax,(%esp)
call   10d0 <ntfs_inode_close@plt>
movl   $0x0,0x8(%esi)
mov    0xc(%esi),%edi
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%ebp
sar    $0x1f,%ebp
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebp,%edx
mov    %eax,0x28(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x2c(%esp)
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jle    4e40 <main+0x3ca0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   4710 <main+0x3570>
cmp    $0xffffffff,%eax
je     4e58 <main+0x3cb8>
test   %eax,%eax
je     4c60 <main+0x3ac0>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    0xc(%esi),%ecx
orl    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   1150 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     4de0 <main+0x3c40>
mov    0x8(%eax),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   3de0 <main+0x2c40>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   3de0 <main+0x2c40>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   3de0 <main+0x2c40>
test   %ebp,%ebp
je     4e30 <main+0x3c90>
orl    $0x40,0x4(%esi)
test   %edi,%edi
je     4b67 <main+0x39c7>
orl    $0x40,0x4(%esi)
test   %eax,%eax
je     4b6f <main+0x39cf>
orl    $0x4,0x4(%esi)
testb  $0x8,(%esi)
je     4beb <main+0x3a4b>
mov    0x8(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1140 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     4f86 <main+0x3de6>
mov    %eax,0x20(%esp)
mov    0xec(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x90,(%esp)
call   1120 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    4be3 <main+0x3a43>
orl    $0x8,0x4(%esi)
mov    %edi,(%esp)
call   1050 <ntfs_attr_put_search_ctx@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   4880 <main+0x36e0>
test   %eax,%eax
je     4dd0 <main+0x3c30>
cmp    $0x1,%eax
mov    0x4(%esi),%eax
jne    4dc0 <main+0x3c20>
or     $0x10,%eax
mov    %eax,0x4(%esi)
test   %eax,(%esi)
jne    4c4a <main+0x3aaa>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   10d0 <ntfs_inode_close@plt>
test   %eax,%eax
jne    4eb0 <main+0x3d10>
movl   $0x0,0x8(%esi)
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jge    4da8 <main+0x3c08>
mov    0x8(%esi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x4(%esi)
movl   $0x70,0x4(%esp)
movl   $0x1,(%esp)
call   1190 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
je     4f09 <main+0x3d69>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    %eax,(%edi)
mov    0xc(%esi),%eax
mov    %edx,0x4(%edi)
mov    %eax,0xc(%edi)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   ee0 <ntfs_malloc@plt>
mov    %eax,0x8(%edi)
mov    0x8(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     4f50 <main+0x3db0>
mov    0xc(%esi),%eax
mov    0xe0(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   1080 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     4f62 <main+0x3dc2>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    0x1c(%edx),%ecx
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
imul   %ecx,%eax
mov    %eax,%ebp
mov    %ecx,%eax
mull   0x10(%esi)
mov    %edi,(%esp)
mov    %edx,%ecx
add    %ebp,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   1070 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0xc(%esi),%eax
cmp    $0x0,%edx
mov    0x1c(%eax),%eax
jg     4d94 <main+0x3bf4>
jge    4d90 <main+0x3bf0>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x344c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27e4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x44a,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   fe0 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    4c54 <main+0x3ab4>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
jb     4d30 <main+0x3b90>
mov    %edi,(%esp)
call   fe0 <ntfs_attr_close@plt>
mov    0x4(%esi),%eax
jmp    4c10 <main+0x3a70>
lea    0x0(%esi,%eiz,1),%esi
jg     4db6 <main+0x3c16>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jbe    4c4a <main+0x3aaa>
mov    0xc(%esi),%edi
jmp    4ac0 <main+0x3920>
xchg   %ax,%ax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    4c10 <main+0x3a70>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    4c10 <main+0x3a70>
xchg   %ax,%ax
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x349b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27e4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x404,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
jmp    4c2e <main+0x3a8e>
lea    0x0(%esi),%esi
orl    $0x80,0x4(%esi)
jmp    4b5f <main+0x39bf>
lea    0x0(%esi,%eiz,1),%esi
jl     4c4a <main+0x3aaa>
cmp    %eax,0x28(%esp)
ja     4ac0 <main+0x3920>
jmp    4c4a <main+0x3aaa>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x29a0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27e4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x3fa,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x342e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27e4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x459,0x8(%esp)
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
call   10b0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    -0x3480(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x434,0x8(%esp)
lea    -0x35af(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27e4(%ebx),%eax
mov    %eax,(%esp)
call   e80 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   ef0 <free@plt>
mov    $0xffffffff,%eax
jmp    4c54 <main+0x3ab4>
lea    -0x3465(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x443,0x8(%esp)
jmp    4f2b <main+0x3d8b>
lea    -0x2b08(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x41f,0x8(%esp)
jmp    4f2b <main+0x3d8b>
call   10b0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    4c54 <main+0x3ab4>
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   30e0 <main+0x1f40>
add    $0x3f15,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x1dc(%ebx),%esi
call   e30 <_init>
lea    -0x1e0(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     501b <main+0x3e7b>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x1e0(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    4ff8 <main+0x3e58>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
push   %ebx
sub    $0x8,%esp
call   30e0 <main+0x1f40>
add    $0x3ea3,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
sub    $0x676f6c2d,%eax
sub    $0x6b6e5500,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     50cc <_IO_stdin_used+0x80>
and    %ch,0x70(%edi)
je     50cc <_IO_stdin_used+0x80>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x74(%esi)
data16
jae    50df <_IO_stdin_used+0x93>
outsl  %ds:(%esi),(%dx)
jbe    50da <_IO_stdin_used+0x8e>
arpl   %ax,%cs:(%eax)
sub    $0x443a4342,%eax
inc    %ebp
pushw  $0x6e3f
jno    50d7 <_IO_stdin_used+0x8b>
push   %esi
jbe    5087 <_IO_stdin_used+0x3b>
xor    (%eax),%dh
xor    %esi,(%ebx)
xor    %ebp,%cs:(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
outsb  %ds:(%esi),(%dx)
je     50fe <_IO_stdin_used+0xb2>
jae    5107 <_IO_stdin_used+0xbb>
outsl  %ds:(%esi),(%dx)
jbe    5102 <_IO_stdin_used+0xb6>
add    %cl,(%edx)
and    $0x73250a73,%eax
and    $0x21000a73,%eax
jbe    511a <_IO_stdin_used+0xce>
insb   (%dx),%es:(%edi)
or     (%eax),%al
and    %ebp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs or  %fs:%gs:(%eax),%al
dec    %edi
jne    512d <_IO_stdin_used+0xe1>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     513c <_IO_stdin_used+0xf0>
or     (%eax),%al
insl   (%dx),%es:(%edi)
gs
je     512a <_IO_stdin_used+0xde>
fs
popa
je     512e <_IO_stdin_used+0xe2>
or     (%eax),%al
popa
je     5146 <_IO_stdin_used+0xfa>
jb     513d <_IO_stdin_used+0xf1>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     50e8 <_IO_stdin_used+0x9c>
add    %ah,0x78(%ebp)
je     5148 <_IO_stdin_used+0xfc>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs or  %fs:%gs:(%eax),%al
outsb  %ds:(%esi),(%dx)
je     515c <_IO_stdin_used+0x110>
fs
jb     50fd <_IO_stdin_used+0xb1>
add    %cl,(%ecx)
inc    %ecx
je     516c <_IO_stdin_used+0x120>
jb     5163 <_IO_stdin_used+0x117>
bound  %esi,0x74(%ebp)
and    %dh,%gs:(%eax)
js     5127 <_IO_stdin_used+0xdb>
xor    %dh,(%edx)
js     5126 <_IO_stdin_used+0xda>
and    $0x73692073,%eax
and    %al,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x69736572,%eax
fs outsb %fs:%gs:(%esi),(%dx)
je     5148 <_IO_stdin_used+0xfc>
and    %ah,(%eax)
and    %cl,0x6f(%ebp)
jbe    518a <_IO_stdin_used+0x13e>
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%bx,%di)
or     %cs:(%eax),%al
and    %esi,0x75(%edx)
outsb  %ds:(%esi),(%dx)
jae    5139 <_IO_stdin_used+0xed>
add    %ah,(%ecx)
bound  %esi,0x66(%ebp)
data16
gs
jb     5142 <_IO_stdin_used+0xf6>
add    %ah,(%ecx)
jb     51a1 <_IO_stdin_used+0x155>
popa
or     %fs:(%eax),%al
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
and    %ah,0x6c(%ebx)
jne    51bd <_IO_stdin_used+0x171>
je     51b1 <_IO_stdin_used+0x165>
jb     516e <_IO_stdin_used+0x122>
and    $0x20646c6c,%eax
imul   $0xa657375,0x20(%esi),%ebp
add    %ah,(%ecx)
data16
jb     51ce <_IO_stdin_used+0x182>
insl   (%dx),%es:(%edi)
or     (%eax),%al
outsl  %ds:(%esi),(%dx)
jb     51ce <_IO_stdin_used+0x182>
and    %ah,0x61(%si)
je     51cc <_IO_stdin_used+0x180>
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %bh,0x20642520
bound  %edi,0x74(%ecx)
gs
jae    5185 <_IO_stdin_used+0x139>
add    %ch,0x65(%esi)
ja     51a0 <_IO_stdin_used+0x154>
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %bh,0x20642520
bound  %edi,0x74(%ecx)
gs
jae    519f <_IO_stdin_used+0x153>
add    %al,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     5201 <_IO_stdin_used+0x1b5>
and    %ah,0x61202c64
data16
je     520a <_IO_stdin_used+0x1be>
jb     51c7 <_IO_stdin_used+0x17b>
and    $0x64000a64,%eax
imul   $0x657a6973,0x66(%esi),%esp
jae    51bf <_IO_stdin_used+0x173>
add    %ch,0x6e(%ecx)
jbe    521b <_IO_stdin_used+0x1cf>
insb   (%dx),%es:(%edi)
imul   $0xa736e75,0x72(%eax,%eiz,1),%esp
add    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     51ed <_IO_stdin_used+0x1a1>
imul   $0xa657375,0x20(%esi),%ebp
add    %dh,0x20(%edi,%ebp,2)
imul   $0x75206e69,0x20(%ebx),%esi
jae    5246 <_IO_stdin_used+0x1fa>
or     (%eax),%al
bound  %ebp,0x74(%ecx)
insl   (%dx),%es:(%edi)
popa
jo     520a <_IO_stdin_used+0x1be>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
jb     5257 <_IO_stdin_used+0x20b>
je     5269 <_IO_stdin_used+0x21d>
jb     5264 <_IO_stdin_used+0x218>
jae    5218 <_IO_stdin_used+0x1cc>
and    $0x63000a64,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5223 <_IO_stdin_used+0x1d7>
bound  %ebp,0x74(%ecx)
insl   (%dx),%es:(%edi)
popa
jo     5269 <_IO_stdin_used+0x21d>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %cx,(%edx)
add    %ah,(%ecx)
ja     5286 <_IO_stdin_used+0x23a>
imul   $0x646c6c25,0x20(%ebp,%eiz,2),%esi
or     (%eax),%al
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5245 <_IO_stdin_used+0x1f9>
fs
popa
je     528a <_IO_stdin_used+0x23e>
pop    %edi
arpl   %bp,0x70(%edi)
jns    5239 <_IO_stdin_used+0x1ed>
add    %ah,0x69(%edx)
je     52a1 <_IO_stdin_used+0x255>
popa
jo     5257 <_IO_stdin_used+0x20b>
data16
jb     529f <_IO_stdin_used+0x253>
and    %dh,%gs:0x65(%edx)
je     52b5 <_IO_stdin_used+0x269>
jb     52b0 <_IO_stdin_used+0x264>
jae    5264 <_IO_stdin_used+0x218>
and    $0x63000a64,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     526f <_IO_stdin_used+0x223>
bound  %ebp,0x74(%ecx)
insl   (%dx),%es:(%edi)
popa
jo     52b5 <_IO_stdin_used+0x269>
data16
jb     52be <_IO_stdin_used+0x272>
or     %gs:(%eax),%al
and    %esi,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %cx,(%edx)
add    %dh,0x65(%edx)
jae    52d0 <_IO_stdin_used+0x284>
fs outsb %fs:%gs:(%esi),(%dx)
je     529a <_IO_stdin_used+0x24e>
or     (%ecx),%cl
or     %edx,0x6b(%ebx)
imul   $0x20676e69,0x70(%eax),%esi
imul   $0x6e616300,0xa(%esi,%ebp,1),%esi
daa
je     52a3 <_IO_stdin_used+0x257>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    52ec <_IO_stdin_used+0x2a0>
or     (%eax),%al
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    52f6 <_IO_stdin_used+0x2aa>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    529d <_IO_stdin_used+0x251>
add    %ah,0x61(%esi)
imul   $0x7421000a,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
or     (%eax),%al
and    %ebp,0x6f(%ebp)
jbe    530b <_IO_stdin_used+0x2bf>
pop    %edi
jb     531e <_IO_stdin_used+0x2d2>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6d21000a,0x74(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jbe    531a <_IO_stdin_used+0x2ce>
pop    %edi
fs
popa
je     531b <_IO_stdin_used+0x2cf>
jb     5331 <_IO_stdin_used+0x2e5>
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
jae    5336 <_IO_stdin_used+0x2ea>
arpl   %sp,0x65(%ebx)
jae    5339 <_IO_stdin_used+0x2ed>
or     (%eax),%al
bound  %esp,0x73(%ebp)
je     52cd <_IO_stdin_used+0x281>
arpl   %bp,0x73(%ebp,%esi,2)
je     5338 <_IO_stdin_used+0x2ec>
jb     52d5 <_IO_stdin_used+0x289>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x6f(%esi)
jb     5340 <_IO_stdin_used+0x2f4>
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     52e4 <_IO_stdin_used+0x298>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x69746361,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
sub    $0x74726964,%eax
jns    52f7 <_IO_stdin_used+0x2ab>
jno    536e <_IO_stdin_used+0x322>
imul   $0x61747300,0x74(%ebp),%esp
jb     5376 <_IO_stdin_used+0x32a>
add    %dh,0x65(%esi)
jb     5369 <_IO_stdin_used+0x31d>
outsl  %ds:(%esi),(%dx)
jae    536f <_IO_stdin_used+0x323>
add    %dh,0x65(%esi)
jb     5382 <_IO_stdin_used+0x336>
imul   $0x6f590000,0x6e(%edi),%ebp
jne    5338 <_IO_stdin_used+0x2ec>
insl   (%dx),%es:(%edi)
jne    538e <_IO_stdin_used+0x342>
je     533d <_IO_stdin_used+0x2f1>
jae    538f <_IO_stdin_used+0x343>
arpl   %bp,%gs:0x66(%ecx)
jns    5345 <_IO_stdin_used+0x2f9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x646e6120,0x65(%ebx),%esp
and    %ch,0x6e(%edi)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%al
add    %bl,0x6f(%ecx)
jne    5364 <_IO_stdin_used+0x318>
insl   (%dx),%es:(%edi)
popa
jns    5368 <_IO_stdin_used+0x31c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     536c <_IO_stdin_used+0x320>
jne    53c1 <_IO_stdin_used+0x375>
and    %ch,%gs:0x6975712d
gs
je     5378 <_IO_stdin_used+0x32c>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:0x74(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    53a0 <_IO_stdin_used+0x354>
insl   (%dx),%es:(%edi)
popa
jns    53a4 <_IO_stdin_used+0x358>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    53a9 <_IO_stdin_used+0x35d>
jae    53fb <_IO_stdin_used+0x3af>
arpl   %bp,%gs:0x66(%ecx)
jns    53b1 <_IO_stdin_used+0x365>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x63(%edi,%ebp,2)
popa
je     5404 <_IO_stdin_used+0x3b8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     540b <_IO_stdin_used+0x3bf>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
sub    $0x6174732d,%eax
jb     5421 <_IO_stdin_used+0x3d5>
sub    $0x20,%al
sub    $0x7365622d,%eax
je     53e2 <_IO_stdin_used+0x396>
and    %ch,0x646e652d
and    %ch,0x72(%edi)
and    %ch,0x756c632d
jae    543b <_IO_stdin_used+0x3ef>
gs
jb     53d4 <_IO_stdin_used+0x388>
add    %al,(%eax)
or     0x25762073,%ah
jae    53f4 <_IO_stdin_used+0x3a8>
sub    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     5441 <_IO_stdin_used+0x3f5>
jae    540a <_IO_stdin_used+0x3be>
xor    0x29(%edi),%esp
and    %ch,0x766f4d20
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    540e <_IO_stdin_used+0x3c2>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x206e6f20,0x73(%ebp),%esp
popa
outsb  %ds:(%esi),(%dx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    547b <_IO_stdin_used+0x42f>
gs or  %cs:%gs:(%edx),%cl
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     5491 <_IO_stdin_used+0x445>
jb     5483 <_IO_stdin_used+0x437>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%ebx)
and    %dl,0x69(%edx)
arpl   %bp,0x61(%eax)
jb     5492 <_IO_stdin_used+0x446>
and    %dl,0x75(%edx)
jae    54a6 <_IO_stdin_used+0x45a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
add    %cl,(%edx)
push   %ebp
jae    549d <_IO_stdin_used+0x451>
cmp    %gs:(%bx,%si),%ah
and    $0x6f5b2073,%eax
jo     54bb <_IO_stdin_used+0x46f>
imul   $0x64205d73,0x6e(%edi),%ebp
gs
jbe    54ba <_IO_stdin_used+0x46e>
arpl   %sp,0x20(%ebp)
imul   $0x200a,0xa(%ebp,%eiz,2),%bp
and    %ah,(%eax)
and    %ch,0x20202053
and    %ah,(%eax)
and    %ch,0x6174732d
jb     54e1 <_IO_stdin_used+0x495>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    54de <_IO_stdin_used+0x492>
and    %dh,0x20(%edi,%ebp,2)
je     54e7 <_IO_stdin_used+0x49b>
and    %dh,%gs:0x74(%ebx)
popa
jb     54fa <_IO_stdin_used+0x4ae>
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5500 <_IO_stdin_used+0x4b4>
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202042
and    %ah,(%eax)
and    %ch,0x7365622d
je     54c8 <_IO_stdin_used+0x47c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    5519 <_IO_stdin_used+0x4cd>
and    %dh,0x20(%edi,%ebp,2)
je     5522 <_IO_stdin_used+0x4d6>
and    %ah,%gs:0x65(%edx)
jae    5534 <_IO_stdin_used+0x4e8>
and    %dh,0x6c(%eax)
popa
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5540 <_IO_stdin_used+0x4f4>
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202045
and    %ah,(%eax)
and    %ch,0x646e652d
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    5559 <_IO_stdin_used+0x50d>
and    %dh,0x20(%edi,%ebp,2)
je     5562 <_IO_stdin_used+0x516>
and    %ah,%gs:0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5579 <_IO_stdin_used+0x52d>
or     %gs:(%eax),%ah
and    %ah,(%eax)
and    %ch,0x756e2043
insl   (%dx),%es:(%edi)
and    %ah,(%eax)
sub    $0x756c632d,%eax
jae    5595 <_IO_stdin_used+0x549>
gs
jb     5544 <_IO_stdin_used+0x4f8>
outsb  %ds:(%esi),(%dx)
jne    5594 <_IO_stdin_used+0x548>
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jbe    5592 <_IO_stdin_used+0x546>
and    %dh,0x20(%edi,%ebp,2)
je     559b <_IO_stdin_used+0x54f>
imul   $0x73756c63,0x20(%ebx),%esi
je     55a1 <_IO_stdin_used+0x555>
jb     555e <_IO_stdin_used+0x512>
outsl  %ds:(%esi),(%dx)
data16
data16
jae    55a8 <_IO_stdin_used+0x55c>
je     554f <_IO_stdin_used+0x503>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202044
and    %ah,(%eax)
and    %ch,0x2d6f6e2d
imul   $0x20202079,%fs:0x74(%edx),%esi
and    %ah,(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     5588 <_IO_stdin_used+0x53c>
insl   (%dx),%es:(%edi)
popa
jb     55d7 <_IO_stdin_used+0x58b>
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    55df <_IO_stdin_used+0x593>
and    %ah,%gs:0x72(%ecx,%ebp,2)
je     55f2 <_IO_stdin_used+0x5a6>
and    %ch,(%eax)
jb     55e2 <_IO_stdin_used+0x596>
jno    55f4 <_IO_stdin_used+0x5a8>
imul   $0x6b686320,0x65(%edx),%esi
fs
jae    55f4 <_IO_stdin_used+0x5a8>
sub    %ecx,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2020206e,%eax
and    %ah,(%eax)
and    %ch,0x2d6f6e2d
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     55cd <_IO_stdin_used+0x581>
ja     5621 <_IO_stdin_used+0x5d5>
imul   $0x64206f74,0x20(%ebp,%eiz,2),%esi
imul   $0x2020200a,0x6b(%ebx),%esi
and    %ch,0x20202066
and    %ah,(%eax)
and    %ch,0x726f662d
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %ch,%gs:0x73(%ebp,%eiz,2)
jae    55ff <_IO_stdin_used+0x5b3>
arpl   %sp,0x75(%ecx)
je     564d <_IO_stdin_used+0x601>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202068
and    %ah,(%eax)
and    %ch,0x6c65682d
jo     561a <_IO_stdin_used+0x5ce>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
jb     566e <_IO_stdin_used+0x622>
outsb  %ds:(%esi),(%dx)
je     5628 <_IO_stdin_used+0x5dc>
je     5672 <_IO_stdin_used+0x626>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202071
and    %ah,(%eax)
and    %ch,0x6975712d
gs
je     5646 <_IO_stdin_used+0x5fa>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x73(%ebp,%eiz,2)
jae    5652 <_IO_stdin_used+0x606>
outsl  %ds:(%esi),(%dx)
jne    56a9 <_IO_stdin_used+0x65d>
jo     56ac <_IO_stdin_used+0x660>
je     5643 <_IO_stdin_used+0x5f7>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202056,%eax
and    %ah,(%eax)
and    %ch,0x7265762d
jae    56b5 <_IO_stdin_used+0x669>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esi
gs
jb     56cb <_IO_stdin_used+0x67f>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     56cf <_IO_stdin_used+0x683>
popa
je     56ce <_IO_stdin_used+0x682>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202076
and    %ah,(%eax)
and    %ch,0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jb     56ec <_IO_stdin_used+0x6a0>
and    %ch,0x75(%edi)
je     56fc <_IO_stdin_used+0x6b0>
jne    5702 <_IO_stdin_used+0x6b6>
or     (%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    56fd <_IO_stdin_used+0x6b1>
and    %ah,0x2c646c6c
and    $0x2c646c6c,%eax
and    $0x20646c6c,%eax
je     5719 <_IO_stdin_used+0x6cd>
and    %ah,0x2c646c6c
and    $0x2c646c6c,%eax
and    $0xa646c6c,%eax
add    %al,(%eax)
cmc
test   %bh,%bh
lcall  *-0x7c(%edx)
(bad)
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
ljmp   *(%ecx)
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
inc    %edx
test   %bh,%bh
call   *-0x1600007c(%edi)
test   %bh,%bh
(bad)
incb   -0x7b0a0001(%ebx)
(bad)
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
call   *%ebx
cmp    $0xffffffff,%edi
cmc
test   %bh,%bh
push   %ebp
test   %bh,%bh
inc    %esi
cmp    $0xffffffff,%edi
cmc
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
(bad)
mov    $0xf5ffff83,%edx
test   %bh,%bh
ljmp   *(%ecx)
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
pushl  -0xa00007d(%ecx)
test   %bh,%bh
push   %ebp
test   %bh,%bh
lcall  *-0x7b0a0001(%ebx,%eax,4)
(bad)
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
push   %ebp
test   %bh,%bh
incl   0x62ffff83(%edi)
imul   $0x72665f70,0x61(%ebp,%ebp,2),%esi
gs add %ah,%gs:0x74(%ecx,%eiz,2)
popa
pop    %edi
arpl   %bp,0x70(%edi)
jns    58ae <_IO_stdin_used+0x862>
bound  %ebp,0x74(%ecx)
insl   (%dx),%es:(%edi)
popa
jo     5914 <_IO_stdin_used+0x8c8>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    5924 <_IO_stdin_used+0x8d8>
pop    %edi
jb     5937 <_IO_stdin_used+0x8eb>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6e696600,0x74(%ebx),%esi
fs
pop    %edi
jne    593d <_IO_stdin_used+0x8f1>
jne    5944 <_IO_stdin_used+0x8f8>
gs add %ch,%fs:%gs:0x6f(%ebp)
jbe    593d <_IO_stdin_used+0x8f1>
pop    %edi
fs
popa
je     593e <_IO_stdin_used+0x8f2>
jb     5954 <_IO_stdin_used+0x908>
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%ebp)
jbe    594a <_IO_stdin_used+0x8fe>
pop    %edi
popa
je     595d <_IO_stdin_used+0x911>
jb     5954 <_IO_stdin_used+0x908>
bound  %esi,0x74(%ebp)
add    %ch,%gs:0x0(%esi)
je     58f4 <_IO_stdin_used+0x8a8>
insb   (%dx),%es:(%edi)
add    %ah,0x72(%eax,%eax,1)
add    %al,(%eax)
add    %ah,0x6e(%edi,%ebp,2)
je     5960 <_IO_stdin_used+0x914>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    596a <_IO_stdin_used+0x91e>
add    %ch,0x6f(%ebp)
jbe    596f <_IO_stdin_used+0x923>
pop    %edi
imul   $0x7375,0x0(%ebp,%eiz,2),%bp
popa
add    %dh,%gs:0x65(%bp)
jb     598d <_IO_stdin_used+0x941>
imul   $0x72617000,0x6e(%edi),%ebp
jae    5988 <_IO_stdin_used+0x93c>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     599b <_IO_stdin_used+0x94f>
imul   $0x616d0073,0x6e(%edi),%ebp
imul   $0x6c697475,0x0(%esi),%ebp
jae    5965 <_IO_stdin_used+0x919>
arpl   %ax,(%eax)
push   %esp
push   $0x65642065
jbe    59aa <_IO_stdin_used+0x95e>
arpl   %sp,0x20(%ebp)
and    $0x6f642073,%eax
gs
jae    59ba <_IO_stdin_used+0x96e>
daa
je     596f <_IO_stdin_used+0x923>
gs
js     59bb <_IO_stdin_used+0x96f>
jae    59c8 <_IO_stdin_used+0x97c>
or     (%eax),%al
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     59bd <_IO_stdin_used+0x971>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
je     59ce <_IO_stdin_used+0x982>
outsb  %ds:(%esi),(%dx)
jne    59cd <_IO_stdin_used+0x981>
or     %cs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    59e7 <_IO_stdin_used+0x99b>
je     599b <_IO_stdin_used+0x94f>
daa
and    $0x49002773,%eax
outsb  %ds:(%esi),(%dx)
jbe    59e5 <_IO_stdin_used+0x999>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
daa
and    $0xa2e2773,%eax
add    %cl,0x6e(%ecx)
jbe    59f9 <_IO_stdin_used+0x9ad>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     59c3 <_IO_stdin_used+0x977>
daa
and    $0x27732a2e,%eax
or     %cs:(%eax),%al
cmp    $0x4d,%al
inc    %esi
push   %esp
and    $0x3e756c6c,%eax
add    %al,0x6f(%ebx)
jne    5a26 <_IO_stdin_used+0x9da>
outsb  %fs:(%esi),(%dx)
daa
je     59df <_IO_stdin_used+0x993>
outsl  %ds:(%esi),(%dx)
jo     5a27 <_IO_stdin_used+0x9db>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
and    $0x732563,%eax
push   %eax
popa
je     5a42 <_IO_stdin_used+0x9f6>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    5a03 <_IO_stdin_used+0x9b7>
je     5a57 <_IO_stdin_used+0xa0b>
jne    5a55 <_IO_stdin_used+0xa09>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
cmp    $0x55,%al
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,%ds:(%eax)
and    $0x43002973,%eax
outsl  %ds:(%esi),(%dx)
jne    5a6e <_IO_stdin_used+0xa22>
outsb  %fs:(%esi),(%dx)
daa
je     5a27 <_IO_stdin_used+0x9db>
outsl  %ds:(%esi),(%dx)
jo     5a6f <_IO_stdin_used+0xa23>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    5a84 <_IO_stdin_used+0xa38>
outsb  %fs:(%esi),(%dx)
daa
je     5a3d <_IO_stdin_used+0x9f1>
jb     5a84 <_IO_stdin_used+0xa38>
popa
and    %ah,%fs:(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    5a9a <_IO_stdin_used+0xa4e>
outsb  %fs:(%esi),(%dx)
daa
je     5a53 <_IO_stdin_used+0xa07>
jb     5a9a <_IO_stdin_used+0xa4e>
popa
and    %ah,%fs:0x242f5446(,%ecx,2)
inc    %edx
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x72(%ebp)
jb     5ab8 <_IO_stdin_used+0xa6c>
jb     5a6b <_IO_stdin_used+0xa1f>
jb     5ab2 <_IO_stdin_used+0xa66>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
dec    %edi
jne    5ad7 <_IO_stdin_used+0xa8b>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     5ae6 <_IO_stdin_used+0xa9a>
and    %ah,%cs:(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     5adf <_IO_stdin_used+0xa93>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    5aeb <_IO_stdin_used+0xa9f>
outsb  %fs:(%esi),(%dx)
daa
je     5aa4 <_IO_stdin_used+0xa58>
outsl  %ds:(%esi),(%dx)
jo     5aec <_IO_stdin_used+0xaa0>
outsb  %ds:(%esi),(%dx)
and    %ah,0x242f5446(,%ecx,2)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
add    %al,0x6f(%ebx)
jne    5b04 <_IO_stdin_used+0xab8>
outsb  %fs:(%esi),(%dx)
daa
je     5abd <_IO_stdin_used+0xa71>
jb     5b04 <_IO_stdin_used+0xab8>
popa
and    %cl,%fs:0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x756c6c
inc    %ebp
jb     5b27 <_IO_stdin_used+0xadb>
outsl  %ds:(%esi),(%dx)
jb     5ad8 <_IO_stdin_used+0xa8c>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    5b41 <_IO_stdin_used+0xaf5>
je     5afe <_IO_stdin_used+0xab2>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
sub    $0x20,%al
jne    5b5b <_IO_stdin_used+0xb0f>
imul   $0x66656420,0x67(%esi),%ebp
popa
jne    5b5e <_IO_stdin_used+0xb12>
je     5b14 <_IO_stdin_used+0xac8>
daa
and    $0xa2e2773,%eax
add    %al,(%eax)
inc    %ebp
jb     5b71 <_IO_stdin_used+0xb25>
outsl  %ds:(%esi),(%dx)
jb     5b22 <_IO_stdin_used+0xad6>
addr16
gs
je     5b7a <_IO_stdin_used+0xb2e>
imul   $0x666e6920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     5b7d <_IO_stdin_used+0xb31>
popa
je     5b7c <_IO_stdin_used+0xb30>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    5b8f <_IO_stdin_used+0xb43>
and    %ah,0x46000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     5b93 <_IO_stdin_used+0xb47>
jb     5b9d <_IO_stdin_used+0xb51>
imul   $0x65687720,0x65(%esi),%ebp
je     5ba1 <_IO_stdin_used+0xb55>
gs
jb     5b5c <_IO_stdin_used+0xb10>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    5bb4 <_IO_stdin_used+0xb68>
je     5bad <_IO_stdin_used+0xb61>
add    %al,%fs:(%eax)
add    %dl,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     5bbb <_IO_stdin_used+0xb6f>
and    %ch,%gs:0x70(%edi)
je     5bc7 <_IO_stdin_used+0xb7b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2065726f,0x6e(%edi),%esp
je     5bd5 <_IO_stdin_used+0xb89>
imul   $0x6f727265,0x20(%ebx),%esi
jb     5ba4 <_IO_stdin_used+0xb58>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    5bf1 <_IO_stdin_used+0xba5>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    5c02 <_IO_stdin_used+0xbb6>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5c0c <_IO_stdin_used+0xbc0>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     5c0d <_IO_stdin_used+0xbc1>
popa
fs
jns    5bcc <_IO_stdin_used+0xb80>
gs
js     5c12 <_IO_stdin_used+0xbc6>
insb   (%dx),%es:(%edi)
jne    5c25 <_IO_stdin_used+0xbd9>
imul   $0x6f20796c,0x65(%esi),%esi
jo     5c20 <_IO_stdin_used+0xbd4>
outsb  %ds:(%esi),(%dx)
gs fs or %cs:%fs:%gs:0x65(%eax,%ebp,2),%dl
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5c36 <_IO_stdin_used+0xbea>
and    %ch,%gs:0x61(%ebp)
jns    5bef <_IO_stdin_used+0xba3>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
jb     5c3b <_IO_stdin_used+0xbef>
popa
fs
jns    5bfa <_IO_stdin_used+0xbae>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    5c4c <_IO_stdin_used+0xc00>
je     5c45 <_IO_stdin_used+0xbf9>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     5c06 <_IO_stdin_used+0xbba>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5c53 <_IO_stdin_used+0xc07>
gs
jb     5c0e <_IO_stdin_used+0xbc2>
jae    5c5f <_IO_stdin_used+0xc13>
data16
je     5c6a <_IO_stdin_used+0xc1e>
popa
jb     5c5b <_IO_stdin_used+0xc0f>
and    %ch,0x61(%ebp)
jns    5c1b <_IO_stdin_used+0xbcf>
jne    5c70 <_IO_stdin_used+0xc24>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x68(%edi)
imul   $0x756f630a,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     5c80 <_IO_stdin_used+0xc34>
imul   $0x6620,0x64(%ebp),%sp
outsl  %ds:(%esi),(%dx)
jb     5c40 <_IO_stdin_used+0xbf4>
gs
js     5c84 <_IO_stdin_used+0xc38>
insl   (%dx),%es:(%edi)
jo     5c92 <_IO_stdin_used+0xc46>
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     5c54 <_IO_stdin_used+0xc08>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
data16
jne    5cb2 <_IO_stdin_used+0xc66>
gs
jb     5c69 <_IO_stdin_used+0xc1d>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    5c74 <_IO_stdin_used+0xc28>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6f(%esi)
jb     5cc3 <_IO_stdin_used+0xc77>
and    %ch,%gs:0x70(%edi)
je     5ccf <_IO_stdin_used+0xc83>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
jbe    5cde <_IO_stdin_used+0xc92>
imul   $0x20736968,0x74(%eax,%eiz,1),%esp
arpl   %bp,0x65(%eax)
arpl   %bp,0x2c(%ebx)
and    %ah,0x75(%edx)
je     5ca2 <_IO_stdin_used+0xc56>
je     5cec <_IO_stdin_used+0xca0>
imul   $0x6e207369,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
je     5cae <_IO_stdin_used+0xc62>
jb     5cf5 <_IO_stdin_used+0xca9>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:0x6e(%ecx),%ah
and    %ch,%fs:0x61(%ebp)
jns    5cc2 <_IO_stdin_used+0xc76>
insb   (%dx),%es:(%edi)
gs
popa
and    %dh,%fs:0x20(%edi,%ebp,2)
fs
popa
je     5d0f <_IO_stdin_used+0xcc3>
and    %ah,0x6f(%ebx)
jb     5d25 <_IO_stdin_used+0xcd9>
jne    5d25 <_IO_stdin_used+0xcd9>
je     5d20 <_IO_stdin_used+0xcd4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x65642065
jbe    5d2d <_IO_stdin_used+0xce1>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    5d3f <_IO_stdin_used+0xcf3>
daa
je     5cf4 <_IO_stdin_used+0xca8>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    5d4d <_IO_stdin_used+0xd01>
and    %bh,%gs:0x6f(%ecx)
jne    5d11 <_IO_stdin_used+0xcc5>
jae    5d58 <_IO_stdin_used+0xd0c>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    5d71 <_IO_stdin_used+0xd25>
arpl   %sp,0x3f(%ebp)
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    5d96 <_IO_stdin_used+0xd4a>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     5d8e <_IO_stdin_used+0xd42>
jb     5da3 <_IO_stdin_used+0xd57>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    5d6f <_IO_stdin_used+0xd23>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5d69 <_IO_stdin_used+0xd1d>
das
fs
gs
jbe    5d7d <_IO_stdin_used+0xd31>
push   $0x29316164
aas
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%edi)
push   $0x77207265
popa
jns    5d86 <_IO_stdin_used+0xd3a>
popa
jb     5dd8 <_IO_stdin_used+0xd8c>
jne    5dd9 <_IO_stdin_used+0xd8d>
fs
aas
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    5de8 <_IO_stdin_used+0xd9c>
jae    5df5 <_IO_stdin_used+0xda9>
outsb  %gs:(%esi),(%dx)
je     5db3 <_IO_stdin_used+0xd67>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %ch,0x6e(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5e11 <_IO_stdin_used+0xdc5>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
bound  %ebp,0x6f(%edi)
je     5dcb <_IO_stdin_used+0xd7f>
imul   $0x45434957,0x54(%eax,%eiz,1),%esi
and    %ecx,(%edx)
push   %esp
push   $0x73752065
popa
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
data16
and    %dh,0x61(%eax)
jb     5e2e <_IO_stdin_used+0xde2>
insl   (%dx),%es:(%edi)
gs
je     5e36 <_IO_stdin_used+0xdea>
jb     5df3 <_IO_stdin_used+0xda7>
imul   $0x79726576,0x20(%ebx),%esi
and    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
inc    %ecx
dec    %esi
push   %esp
and    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    5e04 <_IO_stdin_used+0xdb8>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %dh,0x69(%eax,%ebp,2)
jae    5e2f <_IO_stdin_used+0xde3>
jae    5e80 <_IO_stdin_used+0xe34>
data16
je     5e8b <_IO_stdin_used+0xe3f>
popa
jb     5e7c <_IO_stdin_used+0xe30>
or     %cs:(%eax),%al
add    %al,(%eax)
push   %esp
push   $0x544e2065
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     5e9d <_IO_stdin_used+0xe51>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     5ea0 <_IO_stdin_used+0xe54>
fs and %dl,%cs:%fs:0x6c(%eax)
gs
popa
jae    5ea9 <_IO_stdin_used+0xe5d>
and    %dh,0x65(%edx)
jae    5ebe <_IO_stdin_used+0xe72>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5ec6 <_IO_stdin_used+0xe7a>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
and    %cl,(%edx)
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     5ed1 <_IO_stdin_used+0xe85>
jb     5eda <_IO_stdin_used+0xe8e>
jns    5e9c <_IO_stdin_used+0xe50>
and    %dh,0x6f(%ebx)
and    %ch,0x6f(%ebp)
jne    5ee6 <_IO_stdin_used+0xe9a>
je     5ee3 <_IO_stdin_used+0xe97>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jne    5eed <_IO_stdin_used+0xea1>
and    %ah,%fs:0x65(%edx)
and    %ah,0x6e(%edi,%ebp,2)
and    %dh,%gs:0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    5ec0 <_IO_stdin_used+0xe74>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    5f0d <_IO_stdin_used+0xec1>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    5f1e <_IO_stdin_used+0xed2>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x6f(%edx)
jne    5f2c <_IO_stdin_used+0xee0>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %al,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x72612073,0x65(%ebx),%esp
cmp    %gs:(%edx),%cl
and    %al,0x29(%ecx)
and    %dl,0x68(%ebx)
jne    5f58 <_IO_stdin_used+0xf0c>
outsl  %fs:(%esi),(%dx)
ja     5f56 <_IO_stdin_used+0xf0a>
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5f63 <_IO_stdin_used+0xf17>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     5f5b <_IO_stdin_used+0xf0f>
jb     5f64 <_IO_stdin_used+0xf18>
jns    5f28 <_IO_stdin_used+0xedc>
or     (%eax),%ah
inc    %edx
sub    %esp,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x6b(%ebx),%esp
and    %ah,(%edi)
push   %ebx
popa
data16
gs
insb   (%dx),%es:(%edi)
jns    5f31 <_IO_stdin_used+0xee5>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    5f7c <_IO_stdin_used+0xf30>
and    %cl,0x61(%eax)
jb     5f80 <_IO_stdin_used+0xf34>
ja     5f7f <_IO_stdin_used+0xf33>
jb     5f85 <_IO_stdin_used+0xf39>
daa
and    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5fa8 <_IO_stdin_used+0xf5c>
and    %dh,0x73(%ecx,%eiz,2)
imul   $0x72,0x61(%edx),%esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x6f(%esi)
je     5faf <_IO_stdin_used+0xf63>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
gs
popa
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     5fbf <_IO_stdin_used+0xf73>
and    %ah,0x73(%ecx,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %dh,0x68(%si)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x43200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
push   %ebp
jae    5fe1 <_IO_stdin_used+0xf95>
and    %ah,(%edi)
inc    %ebp
push   $0x65
arpl   %si,0x20(%edi,%eiz,1)
data16
jb     5ff7 <_IO_stdin_used+0xfab>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     6004 <_IO_stdin_used+0xfb8>
and    %al,0x78(%ebp)
jo     6002 <_IO_stdin_used+0xfb6>
outsl  %ds:(%esi),(%dx)
jb     5ffe <_IO_stdin_used+0xfb2>
jb     5fbb <_IO_stdin_used+0xf6f>
je     600c <_IO_stdin_used+0xfc0>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    5fc5 <_IO_stdin_used+0xf79>
jb     600c <_IO_stdin_used+0xfc0>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    6010 <_IO_stdin_used+0xfc4>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x44200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    5fe3 <_IO_stdin_used+0xf97>
jb     6026 <_IO_stdin_used+0xfda>
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
jo     6042 <_IO_stdin_used+0xff6>
gs
jbe    603c <_IO_stdin_used+0xff0>
outsl  %ds:(%esi),(%dx)
jne    6049 <_IO_stdin_used+0xffd>
insb   (%dx),%es:(%edi)
jns    5ff9 <_IO_stdin_used+0xfad>
je     6043 <_IO_stdin_used+0xff7>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     6003 <_IO_stdin_used+0xfb7>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
addr16 popa
imul   $0x63696877,0x20(%esi),%ebp
push   $0x6c697720
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x75(%ecx)
je     6073 <_IO_stdin_used+0x1027>
insl   (%dx),%es:(%edi)
popa
je     6071 <_IO_stdin_used+0x1025>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    602e <_IO_stdin_used+0xfe2>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x65687420,0x65(%edx),%edi
and    %ch,0x6f(%edx)
jne    6093 <_IO_stdin_used+0x1047>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
inc    %ebp
sub    %esp,(%eax)
push   %ebx
jne    608f <_IO_stdin_used+0x1043>
insl   (%dx),%es:(%edi)
imul   $0x63726f66,0x27(%eax,%eiz,1),%esi
gs
daa
and    %ch,0x70(%edi)
je     60a6 <_IO_stdin_used+0x105a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x73207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    60c8 <_IO_stdin_used+0x107c>
imul   $0x20746920,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     607f <_IO_stdin_used+0x1033>
jb     60c6 <_IO_stdin_used+0x107a>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs sub %ebp,%fs:%gs:(%esi)
or     (%eax),%ah
inc    %esi
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
je     60da <_IO_stdin_used+0x108e>
jae    60e3 <_IO_stdin_used+0x1097>
outsl  %ds:(%esi),(%dx)
jne    60e7 <_IO_stdin_used+0x109b>
je     60b5 <_IO_stdin_used+0x1069>
and    %cl,0x6f(%ebp)
jne    60ee <_IO_stdin_used+0x10a2>
je     60a2 <_IO_stdin_used+0x1056>
je     60ec <_IO_stdin_used+0x10a0>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    60f8 <_IO_stdin_used+0x10ac>
and    %dh,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,(%edi)
jb     6116 <_IO_stdin_used+0x10ca>
daa
and    %ch,0x6f(%ebp)
jne    611b <_IO_stdin_used+0x10cf>
je     60cf <_IO_stdin_used+0x1083>
outsl  %ds:(%esi),(%dx)
jo     6126 <_IO_stdin_used+0x10da>
imul   $0x59000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    60dc <_IO_stdin_used+0x1090>
jae    6123 <_IO_stdin_used+0x10d7>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
popa
and    %dl,0x6f(%ebx)
data16
je     6122 <_IO_stdin_used+0x10d6>
inc    %ecx
dec    %ecx
inc    %esp
das
inc    %esi
popa
imul   $0x41,0x52(%ebp),%esp
dec    %ecx
inc    %esp
and    %ch,0x61(%eax)
jb     6145 <_IO_stdin_used+0x10f9>
ja     6144 <_IO_stdin_used+0x10f8>
jb     614a <_IO_stdin_used+0x10fe>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x75(%ebp)
jae    6162 <_IO_stdin_used+0x1116>
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x63(%ecx)
je     6163 <_IO_stdin_used+0x1117>
jbe    615d <_IO_stdin_used+0x1111>
je     6163 <_IO_stdin_used+0x1117>
fs
sub    $0xa,%al
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     612b <_IO_stdin_used+0x10df>
fs
gs
jbe    6178 <_IO_stdin_used+0x112c>
arpl   %sp,0x20(%ebp)
jne    6182 <_IO_stdin_used+0x1136>
fs
gs
jb     6138 <_IO_stdin_used+0x10ec>
das
fs
gs
jbe    614c <_IO_stdin_used+0x1100>
insl   (%dx),%es:(%edi)
popa
jo     6191 <_IO_stdin_used+0x1145>
gs
jb     6150 <_IO_stdin_used+0x1104>
and    %ch,(%eax)
gs cs and %ch,%cs:%gs:(%bx)
fs
gs
jbe    615f <_IO_stdin_used+0x1113>
insl   (%dx),%es:(%edi)
popa
jo     61a4 <_IO_stdin_used+0x1158>
gs
jb     6166 <_IO_stdin_used+0x111a>
outsb  %ds:(%esi),(%dx)
jbe    61a3 <_IO_stdin_used+0x1157>
imul   $0x61686165,%fs:0x5f(%ecx),%esp
popa
bound  %esp,0x63(%ebx)
xor    %ebp,(%ecx)
or     0x20(%edi,%ebp,2),%dh
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    61be <_IO_stdin_used+0x1172>
je     6172 <_IO_stdin_used+0x1126>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    61c3 <_IO_stdin_used+0x1177>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
insl   (%dx),%es:(%edi)
jb     61cd <_IO_stdin_used+0x1181>
imul   $0x75636f64,0x20(%edi,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     61da <_IO_stdin_used+0x118e>
je     61e4 <_IO_stdin_used+0x1198>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     61a2 <_IO_stdin_used+0x1156>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    61fe <_IO_stdin_used+0x11b2>
and    %ch,%gs:0x73(%ecx)
and    %dh,0x63(%ebx)
push   $0x6c756465
gs and %ah,%fs:%gs:0x6f(%esi)
jb     61c4 <_IO_stdin_used+0x1178>
arpl   %bp,0x65(%eax)
arpl   %bp,0x2e(%ebx)
or     0x6c(%eax),%dl
gs
popa
jae    6216 <_IO_stdin_used+0x11ca>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     61d7 <_IO_stdin_used+0x118b>
imul   $0x6957206f,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     6236 <_IO_stdin_used+0x11ea>
and    %dl,0x49(%edi,%edx,2)
inc    %ebx
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     61ee <_IO_stdin_used+0x11a2>
jne    6243 <_IO_stdin_used+0x11f7>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     623e <_IO_stdin_used+0x11f2>
gs
daa
and    %ch,0x70(%edi)
je     624b <_IO_stdin_used+0x11ff>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:0x4f(%esi),%cl
push   %esp
inc    %ebp
cmp    (%eax),%ah
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    6213 <_IO_stdin_used+0x11c7>
push   $0x6e206461
outsl  %ds:(%esi),(%dx)
je     621b <_IO_stdin_used+0x11cf>
jae    6260 <_IO_stdin_used+0x1214>
push   $0x6c756465
gs and %ah,%fs:%gs:0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx,%eiz,2)
je     6234 <_IO_stdin_used+0x11e8>
je     627f <_IO_stdin_used+0x1233>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    6285 <_IO_stdin_used+0x1239>
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    6247 <_IO_stdin_used+0x11fb>
jbe    6298 <_IO_stdin_used+0x124c>
insb   (%dx),%es:(%edi)
jne    6299 <_IO_stdin_used+0x124d>
or     %gs:0x73(%ebp),%dh
imul   $0x66746e20,0x67(%esi),%ebp
jae    62a6 <_IO_stdin_used+0x125a>
outsl  %ds:(%esi),(%dx)
jne    62aa <_IO_stdin_used+0x125e>
je     625e <_IO_stdin_used+0x1212>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%ebx)
jne    62ba <_IO_stdin_used+0x126e>
outsl  %fs:(%esi),(%dx)
ja     62b8 <_IO_stdin_used+0x126c>
and    %dh,0x79(%ebx)
jae    62c3 <_IO_stdin_used+0x1277>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     62bc <_IO_stdin_used+0x1270>
jb     62c5 <_IO_stdin_used+0x1279>
jns    6287 <_IO_stdin_used+0x123b>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
imul   $0x70697263,0x73(%eax,%eiz,1),%esi
je     62e0 <_IO_stdin_used+0x1294>
and    %ch,0x6e(%ecx)
and    %bh,0x6f(%ecx)
jne    62e7 <_IO_stdin_used+0x129b>
or     0x73(%ecx,%ebp,2),%ah
je     62ed <_IO_stdin_used+0x12a1>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x2e,0x6e(%ebp),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    62fa <_IO_stdin_used+0x12ae>
and    %dh,0x65(%edx)
jo     6309 <_IO_stdin_used+0x12bd>
jb     6310 <_IO_stdin_used+0x12c4>
and    %dh,0x20(%edi,%ebp,2)
jns    6311 <_IO_stdin_used+0x12c5>
jne    6316 <_IO_stdin_used+0x12ca>
and    %ah,0x73(%ecx,%ebp,2)
je     631c <_IO_stdin_used+0x12d0>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     631f <_IO_stdin_used+0x12d3>
jb     632f <_IO_stdin_used+0x12e3>
or     (%eax),%ch
dec    %esi
dec    %edi
push   %esp
and    %dh,0x20(%edi,%ebp,2)
jne    633a <_IO_stdin_used+0x12ee>
and    %ebp,(%ecx)
and    %dh,0x61(%eax,%ebp,2)
je     62ef <_IO_stdin_used+0x12a3>
imul   $0x63732074,0x69(%esi),%ebp
jb     6341 <_IO_stdin_used+0x12f5>
jo     634e <_IO_stdin_used+0x1302>
jae    62fc <_IO_stdin_used+0x12b0>
imul   $0x6c,0x6c(%ecx),%ebp
and    %ch,0x74(%esi)
data16
jae    6353 <_IO_stdin_used+0x1307>
outsl  %ds:(%esi),(%dx)
jne    6357 <_IO_stdin_used+0x130b>
je     630b <_IO_stdin_used+0x12bf>
outsl  %ds:(%esi),(%dx)
jb     630e <_IO_stdin_used+0x12c2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    6360 <_IO_stdin_used+0x1314>
je     6322 <_IO_stdin_used+0x12d6>
outsb  %ds:(%esi),(%dx)
je     635d <_IO_stdin_used+0x1311>
jae    6326 <_IO_stdin_used+0x12da>
data16
jne    636f <_IO_stdin_used+0x1323>
and    %ah,%gs:0x72(%ebp,%esi,2)
imul   $0x7568730a,0x67(%esi),%ebp
je     636e <_IO_stdin_used+0x1322>
outsl  %ds:(%esi),(%dx)
ja     637b <_IO_stdin_used+0x132f>
and    %ch,0x6e(%ecx)
jae    6386 <_IO_stdin_used+0x133a>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     6383 <_IO_stdin_used+0x1337>
jb     6340 <_IO_stdin_used+0x12f4>
jne    638f <_IO_stdin_used+0x1343>
outsl  %ds:(%esi),(%dx)
jne    6393 <_IO_stdin_used+0x1347>
je     6355 <_IO_stdin_used+0x1309>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6f762079,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    63ad <_IO_stdin_used+0x1361>
and    %ch,%gs:0x6f(%ebp)
jne    63b4 <_IO_stdin_used+0x1368>
je     6368 <_IO_stdin_used+0x131c>
ja     63ab <_IO_stdin_used+0x135f>
jae    636c <_IO_stdin_used+0x1320>
outsw  %ds:(%esi),(%dx)
jb     63b3 <_IO_stdin_used+0x1367>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     63c2 <_IO_stdin_used+0x1376>
gs
daa
and    %ch,0x6f(%ebp)
jne    63d4 <_IO_stdin_used+0x1388>
je     6388 <_IO_stdin_used+0x133c>
outsl  %ds:(%esi),(%dx)
jo     63df <_IO_stdin_used+0x1393>
imul   $0xa2e,0x6e(%edi),%ebp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     63dd <_IO_stdin_used+0x1391>
jb     63e8 <_IO_stdin_used+0x139c>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     63f0 <_IO_stdin_used+0x13a4>
jb     63af <_IO_stdin_used+0x1363>
and    %dh,0x74(%ebx)
jb     63fc <_IO_stdin_used+0x13b0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
daa
je     63b3 <_IO_stdin_used+0x1367>
jb     63fa <_IO_stdin_used+0x13ae>
je     640c <_IO_stdin_used+0x13c0>
jb     6407 <_IO_stdin_used+0x13bb>
and    %ah,0x20(%ecx)
jae    6413 <_IO_stdin_used+0x13c7>
data32 imul $0xa,0x2e(%eax),%di
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    640d <_IO_stdin_used+0x13c1>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
jae    642c <_IO_stdin_used+0x13e0>
data32 imul $0x2527,0x20(%eax),%di
jae    63e7 <_IO_stdin_used+0x139b>
and    %ah,%cs:(%eax)
push   %ebp
jae    642b <_IO_stdin_used+0x13df>
and    %dl,0x20(%esp,%ebp,1)
inc    %edi
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     63f3 <_IO_stdin_used+0x13a7>
dec    %ebx
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    6448 <_IO_stdin_used+0x13fc>
outsb  %fs:(%esi),(%dx)
daa
je     6401 <_IO_stdin_used+0x13b5>
arpl   %si,0x65(%edx)
popa
je     644c <_IO_stdin_used+0x1400>
and    %ah,0x20(%ecx)
jae    6451 <_IO_stdin_used+0x1405>
popa
jb     6452 <_IO_stdin_used+0x1406>
push   $0x6e6f6320
je     645b <_IO_stdin_used+0x140f>
js     646c <_IO_stdin_used+0x1420>
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    646c <_IO_stdin_used+0x1420>
outsb  %fs:(%esi),(%dx)
daa
je     6425 <_IO_stdin_used+0x13d9>
je     6479 <_IO_stdin_used+0x142d>
popa
outsb  %ds:(%esi),(%dx)
jae    6477 <_IO_stdin_used+0x142b>
popa
je     6473 <_IO_stdin_used+0x1427>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     6485 <_IO_stdin_used+0x1439>
outsb  %ds:(%esi),(%dx)
je     6443 <_IO_stdin_used+0x13f7>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
push   %esp
push   $0x69642065
jb     6499 <_IO_stdin_used+0x144d>
arpl   %si,0x72(%edi,%ebp,2)
jns    645a <_IO_stdin_used+0x140e>
jae    64b0 <_IO_stdin_used+0x1464>
jb     64b3 <_IO_stdin_used+0x1467>
arpl   %si,0x72(%ebp,%esi,2)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     6470 <_IO_stdin_used+0x1424>
sub    %ch,0x76(%edi)
gs
jb     6476 <_IO_stdin_used+0x142a>
and    $0x6e202964,%eax
gs
jae    64d2 <_IO_stdin_used+0x1486>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0xa2e,0x73(%ebp),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    64e0 <_IO_stdin_used+0x1494>
outsb  %fs:(%esi),(%dx)
daa
je     6499 <_IO_stdin_used+0x144d>
je     64ed <_IO_stdin_used+0x14a1>
popa
outsb  %ds:(%esi),(%dx)
jae    64eb <_IO_stdin_used+0x149f>
popa
je     64e7 <_IO_stdin_used+0x149b>
and    %ah,0x74(%ecx)
je     64f9 <_IO_stdin_used+0x14ad>
imul   $0x74206574,0x75(%edx),%esp
jns    6500 <_IO_stdin_used+0x14b4>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     64ff <_IO_stdin_used+0x14b3>
outsb  %ds:(%esi),(%dx)
je     64bd <_IO_stdin_used+0x1471>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     6526 <_IO_stdin_used+0x14da>
imul   $0x74206574,0x75(%edx),%esp
jns    652d <_IO_stdin_used+0x14e1>
and    %dh,%gs:(%eax)
js     64e7 <_IO_stdin_used+0x149b>
xor    %dh,(%edx)
js     64d0 <_IO_stdin_used+0x1484>
add    %al,(%eax)
inc    %ecx
je     653f <_IO_stdin_used+0x14f3>
jb     6536 <_IO_stdin_used+0x14ea>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    64fb <_IO_stdin_used+0x14af>
je     654f <_IO_stdin_used+0x1503>
jne    654d <_IO_stdin_used+0x1501>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x6f(%ebx)
jne    6558 <_IO_stdin_used+0x150c>
outsb  %fs:(%esi),(%dx)
daa
je     6511 <_IO_stdin_used+0x14c5>
je     6565 <_IO_stdin_used+0x1519>
popa
outsb  %ds:(%esi),(%dx)
jae    6563 <_IO_stdin_used+0x1517>
popa
je     655f <_IO_stdin_used+0x1513>
and    %ah,0x74(%ecx)
je     6571 <_IO_stdin_used+0x1525>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     6577 <_IO_stdin_used+0x152b>
outsb  %ds:(%esi),(%dx)
je     6535 <_IO_stdin_used+0x14e9>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ecx
je     6597 <_IO_stdin_used+0x154b>
jb     658e <_IO_stdin_used+0x1542>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    6553 <_IO_stdin_used+0x1507>
je     65a7 <_IO_stdin_used+0x155b>
jne    65a5 <_IO_stdin_used+0x1559>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x72(%ebp)
jb     65b3 <_IO_stdin_used+0x1567>
jb     6566 <_IO_stdin_used+0x151a>
jb     65ad <_IO_stdin_used+0x1561>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     65ca <_IO_stdin_used+0x157e>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
push   %esp
push   $0x70207369
jb     65df <_IO_stdin_used+0x1593>
addr16 jb 65d4 <_IO_stdin_used+0x1588>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x6f(%ebx)
data16
je     65f9 <_IO_stdin_used+0x15ad>
popa
jb     65ea <_IO_stdin_used+0x159e>
sub    $0x20,%al
jb     65ee <_IO_stdin_used+0x15a2>
insb   (%dx),%es:(%edi)
gs
popa
jae    65f3 <_IO_stdin_used+0x15a7>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     65b6 <_IO_stdin_used+0x156a>
je     6600 <_IO_stdin_used+0x15b4>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     6605 <_IO_stdin_used+0x15b9>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    6619 <_IO_stdin_used+0x15cd>
or     0x6e(%ecx),%ah
and    %bh,%fs:0x6f(%ecx)
jne    65dd <_IO_stdin_used+0x1591>
popa
jb     6625 <_IO_stdin_used+0x15d9>
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jb     6633 <_IO_stdin_used+0x15e7>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     663d <_IO_stdin_used+0x15f1>
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     6602 <_IO_stdin_used+0x15b6>
arpl   %sp,0x72(%ebp)
je     6648 <_IO_stdin_used+0x15fc>
imul   $0x646e6f63,0x20(%esi),%ebp
imul   $0x202e736e,0x6f(%ecx,%ebp,2),%esi
and    %cl,0x74(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
jae    6620 <_IO_stdin_used+0x15d4>
ja     666b <_IO_stdin_used+0x161f>
je     666c <_IO_stdin_used+0x1620>
or     0x42(%ecx),%al
push   %ebx
dec    %edi
dec    %esp
push   %ebp
push   %esp
inc    %ebp
dec    %esp
pop    %ecx
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jb     6641 <_IO_stdin_used+0x15f5>
fs
gs
je     6686 <_IO_stdin_used+0x163a>
imul   $0x64616572,0x20(%ebx,%esi,2),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     669d <_IO_stdin_used+0x1651>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    66b1 <_IO_stdin_used+0x1665>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0xa(%ebp)
outsw  %ds:(%esi),(%dx)
jne    66c5 <_IO_stdin_used+0x1679>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
dec    %ecx
dec    %esi
inc    %edi
and    (%eax),%ah
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     66de <_IO_stdin_used+0x1692>
and    %dh,%fs:0x69(%edi)
je     66e7 <_IO_stdin_used+0x169b>
and    %dh,0x69(%eax,%ebp,2)
jae    66a5 <_IO_stdin_used+0x1659>
jo     66f9 <_IO_stdin_used+0x16ad>
outsl  %ds:(%esi),(%dx)
addr16 jb 66ec <_IO_stdin_used+0x16a0>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     66b1 <_IO_stdin_used+0x1665>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x3a746120,0x65(%esi),%ebp
or     0x74(%eax),%ch
je     6710 <_IO_stdin_used+0x16c4>
cmp    (%edi),%ch
das
ja     671c <_IO_stdin_used+0x16d0>
ja     66d5 <_IO_stdin_used+0x1689>
outsb  %ds:(%si),(%dx)
jne    66d9 <_IO_stdin_used+0x168d>
outsl  %ds:(%esi),(%dx)
jb     6715 <_IO_stdin_used+0x16c9>
das
arpl   %bp,0x70(%edi)
jns    6720 <_IO_stdin_used+0x16d4>
gs
data16
je     66e7 <_IO_stdin_used+0x169b>
addr16 jo 6727 <_IO_stdin_used+0x16db>
cs
push   $0xa6c6d74
add    %al,(%eax)
add    %al,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     6731 <_IO_stdin_used+0x16e5>
jb     6741 <_IO_stdin_used+0x16f5>
daa
and    %ah,0x6d(%ebp)
popa
imul   $0x65726464,0x61(%eax,%eiz,1),%ebp
jae    6750 <_IO_stdin_used+0x1704>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
je     6748 <_IO_stdin_used+0x16fc>
jae    6711 <_IO_stdin_used+0x16c5>
xor    0x2d(%edi),%esp
fs
gs
jbe    6750 <_IO_stdin_used+0x1704>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     6704 <_IO_stdin_used+0x16b8>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
data16
je     675f <_IO_stdin_used+0x1713>
outsb  %ds:(%esi),(%dx)
gs
js     6778 <_IO_stdin_used+0x172c>
pop    %edi
jb     676c <_IO_stdin_used+0x1720>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x74(%ebp)
imul   $0x7274666d,0x5f(%ebx,%esi,2),%ebp
arpl   %bx,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    6791 <_IO_stdin_used+0x1745>
add    %dh,%gs:0x74(%ebp)
imul   $0x73756c63,0x5f(%ebx,%esi,2),%ebp
je     6791 <_IO_stdin_used+0x1745>
jb     678d <_IO_stdin_used+0x1741>
imul   $0x657375,0x5f(%esi),%ebp
jne    67ab <_IO_stdin_used+0x175f>
imul   $0x72747461,0x5f(%ebx,%esi,2),%ebp
pop    %edi
addr16
gs
je     67a3 <_IO_stdin_used+0x1757>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebp)
imul   $0x646f6e69,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
addr16
gs
je     67b8 <_IO_stdin_used+0x176c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f74,0x73(%edx),%si
popa
je     67e0 <_IO_stdin_used+0x1794>
jb     67d7 <_IO_stdin_used+0x178b>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x74(%ebp)
imul   $0x73726170,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
jae    67ea <_IO_stdin_used+0x179e>
jp     67e8 <_IO_stdin_used+0x179c>
add    %dh,0x74(%ebp)
imul   $0x6e756f6d,0x5f(%ebx,%esi,2),%ebp
je     67ef <_IO_stdin_used+0x17a3>
jbe    6801 <_IO_stdin_used+0x17b5>
insb   (%dx),%es:(%edi)
jne    6802 <_IO_stdin_used+0x17b6>
add    %dh,%gs:0x74(%ebp)
imul   $0x696c6176,0x5f(%ebx,%esi,2),%ebp
fs
pop    %edi
fs
gs
jbe    6810 <_IO_stdin_used+0x17c4>
arpl   %sp,0x0(%ebp)
jne    6820 <_IO_stdin_used+0x17d4>
imul   $0x5f746573,0x5f(%ebx,%esi,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    $0x0,%al
add    %al,(%eax)
adc    $0xa4000000,%eax
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
dec    %esp
add    %al,(%eax)
add    %ah,%ah
test   $0xf0ffff,%eax
add    %al,(%eax)
push   %esp
lret   $0xffff
and    %al,(%ecx)
add    %al,(%eax)
hlt
lret   $0xffff
dec    %esp
add    %eax,(%eax)
add    %al,%ah
lret
(bad)
jmp    *-0x316c0000(%ecx,%eax,1)
(bad)
ljmp   *(%eax)
add    (%eax),%al
add    %ah,0x280ffff(%ecx,%edx,8)
add    %al,(%eax)
je     67d6 <_IO_stdin_used+0x178a>
(bad)
(bad)
faddl  (%edx)
add    %al,(%eax)
xchg   %eax,%esp
aad    $0xff
(bad)
cmp    %al,(%ebx)
add    %al,(%eax)
and    $0xd6,%al
(bad)
ljmp   *0x3(%eax)
add    %al,(%eax)
aam    $0xd6
(bad)
jmp    *-0x3bfffffd(%eax)
(bad)
call   *(%eax)
add    $0x0,%al
add    %dh,-0x1(%ebp,%ebx,8)
ljmp   *0x4(%eax)
add    %al,(%eax)
push   %esp
(bad)
ljmp   *-0x3bfffffc(%eax)
loopne 683a <_IO_stdin_used+0x17ee>
(bad)
call   d4006845 <_end+0xd3ffd3c5>
loope  6842 <_IO_stdin_used+0x17f6>
ljmp   *(%eax)
add    $0xe1e40000,%eax
(bad)
(bad)
cmp    $0x5,%al
add    %al,(%eax)
inc    %esp
loop   6852 <_IO_stdin_used+0x1806>
ljmp   *0x5(%eax)
add    %al,(%eax)
test   %ah,%dl
(bad)
call   *-0x17fc0000(%ebp,%eax,1)
(bad)
lcall  *(%esi,%eax,1)
add    %al,(%eax)
je     6852 <_IO_stdin_used+0x1806>
(bad)
lcall  *0x6(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     6887 <_IO_stdin_used+0x183b>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
shlb   0x340ffff(%ebp)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     68a7 <_IO_stdin_used+0x185b>
js     68a5 <_IO_stdin_used+0x1859>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sub    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,%ah
test   $0xff,%al
decl   (%eax)
pop    %ds
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa039003,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
sub    $0xc9,%al
(bad)
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bl,-0x36600000(%eax,%eax,1)
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %dh,%ah
add    %al,(%eax)
add    %bl,(%eax)
lret   $0xffff
enter  $0x2,$0x0
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0x43140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
fs
int3
(bad)
decl   (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
sbb    $0xcf,%al
(bad)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
or     %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
sub    $0x2,%al
add    %al,(%eax)
nop
sar    %edi
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    %al,(%edx)
add    %al,(%eax)
push   %esp
sar    %cl,%bh
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebp),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0xb4000002,%eax
sar    %cl,%bh
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %dh,%al
add    (%eax),%al
add    %ch,(%ebx,%edx,8)
(bad)
jmp    *%esi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ecx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x3(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
(bad)
jmp    *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x61500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x4000003,%eax
fcos
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
clc
add    (%eax),%eax
add    %ah,0x16bffff(%edx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax,%eax,1)
add    %dl,%ah
(bad)
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
js     6cee <_IO_stdin_used+0x1ca2>
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
fdivr  %st,%st(7)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,-0x23600000(%esp,%eax,1)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,-0x2bfffffc(%eax)
fdivr  %st,%st(7)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
in     $0x4,%al
add    %al,(%eax)
call   80006d39 <_end+0x7fffd8b9>
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    $0xe1e00000,%eax
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,0x14000005(%eax)
loop   6e1e <_IO_stdin_used+0x1dd2>
incl   (%edx)
(bad)
xor    %eax,(%eax)
xorb   $0x0,(%ecx)
add    %al,(%eax)
enter  $0x52,$0x0
inc    %edx
add    %al,(%eax)
add    %cl,%ch
push   %edx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
add    %al,(%eax)
add    %dl,%ch
push   %edx
add    %al,(%eax)
inc    %ebp
add    %al,(%eax)
add    %bl,%cl
push   %edx
add    %al,(%eax)
data16
add    %al,(%eax)
add    %bl,%bh
push   %edx
add    %al,(%eax)
push   $0xe4000000
push   %edx
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ch,%dh
push   %edx
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,%bh
push   %edx
add    %al,(%eax)
jno    8d9e <_IO_stdin_used+0x3d52>
add    %al,(%eax)
std
push   %edx
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %al,(%ebx)
push   %ebx
add    %al,(%eax)
jbe    8dbe <_IO_stdin_used+0x3d72>
add    %al,(%eax)
or     0x0(%ebx),%edx
add    %dl,0x0(%esi)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
sub    %al,(%ebx)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
xor    %cl,(%esi)
add    %al,(%eax)
or     $0x34000000,%eax
push   %eax
add    %al,(%eax)
sbb    %eax,(%eax)
add    %al,(%eax)
add    %cl,0x1b0000(%ebp)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0x8d,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0x78000000
push   %es
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%edi)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ah,%al
mov    (%eax),%es
add    %al,(%edx)
add    %al,(%eax)
add    %bl,0x14000001(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %bl,0x1100000c(%eax)
add    %al,(%eax)
add    %dh,0x1200000b(%eax)
add    %al,(%eax)
add    %ch,%al
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x60(%edi)
or     (%eax),%eax
add    %bh,%bh
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x30(%edi)
or     (%eax),%al
add    %bh,%dl
(bad)
ljmp   *0x11(%edi)
loopne 8e6f <_IO_stdin_used+0x3e23>
add    %al,(%eax)
jbe    8efc <_IO_stdin_used+0x3eb0>
add    %al,(%eax)
xchg   %cl,(%esi)
add    %al,(%eax)
xchg   %eax,%esi
push   %cs
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
push   %cs
add    %al,(%eax)
mov    $0xe,%dh
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
out    %al,$0xe
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
push   %es
sldt   (%eax)
push   %ss
sldt   (%eax)
sldt   %es:(%eax)
sldt   %ss:(%eax)
inc    %esi
sldt   (%eax)
push   %esi
sldt   (%eax)
data16
sldt   (%eax)
jbe    8f3d <_IO_stdin_used+0x3ef1>
add    %al,(%eax)
xchg   %cl,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
sldt   (%eax)
cmpsb  %es:(%edi),%ds:(%esi)
sldt   (%eax)
mov    $0xf,%dh
add    %al,(%eax)
(bad)
sldt   (%eax)
(bad)
sldt   (%eax)
out    %al,$0xf
add    %al,(%eax)
(bad)
sldt   (%eax)
push   %es
adc    %al,(%eax)
add    %dl,(%esi)
adc    %al,(%eax)
add    %ah,(%esi)
adc    %al,(%eax)
add    %dh,(%esi)
adc    %al,(%eax)
add    %al,0x10(%esi)
add    %al,(%eax)
push   %esi
adc    %al,(%eax)
add    %ah,0x10(%esi)
add    %al,(%eax)
jbe    8f7e <_IO_stdin_used+0x3f32>
add    %al,(%eax)
xchg   %dl,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
adc    %al,(%eax)
add    %ah,-0x49fffff0(%esi)
adc    %al,(%eax)
add    %al,%dh
adc    %al,(%eax)
add    %dl,%dh
adc    %al,(%eax)
add    %ah,%dh
adc    %al,(%eax)
add    %dh,%dh
adc    %al,(%eax)
add    %al,(%esi)
adc    %eax,(%eax)
add    %dl,(%esi)
adc    %eax,(%eax)
add    %ah,(%esi)
adc    %eax,(%eax)
add    %dh,(%esi)
adc    %eax,(%eax)
add    %al,0x11(%esi)
add    %al,(%eax)
push   %esi
adc    %eax,(%eax)
add    %ah,0x11(%esi)
add    %al,(%eax)
jbe    8fbf <_IO_stdin_used+0x3f73>
add    %al,(%eax)
xchg   %dl,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
adc    %eax,(%eax)
add    %ah,0x11(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x90,%al
add    %al,(%eax)
(bad)
out    %eax,(%dx)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
lock (bad)
incl   (%eax)
add    %al,(%eax)
push   $0xc4000065
les    0x0(%esi),%esp
popaw
data16
fs arpl %si,%fs:(%esp,%esi,1)
cmp    %esi,%ss:(%esi,%eiz,2)
xor    %si,%gs:0x61396436
bound  %esp,0x30(%esi)
xor    %esi,(%edx)
popa
arpl   %si,(%esi)
xor    %esi,(%edi)
xor    (%eax),%bh
data16
cmp    %dh,(%ebx)
xor    (%edx),%esi
bound  %ebp,(%esi)
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
.byte 0x88
xchg   %eax,%edx
xchg   %eax,%esi
.byte 0x2b
