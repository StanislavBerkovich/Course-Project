das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,%bh
imul   $0x4a,%edi,%esi
jb     80481eb <wcrtomb@plt-0x1125>
imul   $0xf46d15cf,%esp,%ebp
ret    $0x8eb
popa
.byte 0xbe
xchg   %eax,%ecx
lds    (%ebx),%eax
adc    %eax,(%eax)
add    %al,(%eax)
pop    %edi
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,-0x4dffbbe0(%edx)
and    %ecx,0x22804048(%esi,%edx,4)
mov    0x5f04000c,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
push   $0x0
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0x0
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %bh,-0x3cbc618a(%eax,%edx,2)
mov    %dl,0x12f7c432(%edx)
(bad)
loope  8048215 <wcrtomb@plt-0x10fb>
mov    $0x86,%bh
lock xchg %eax,%esi
jl     80481bc <wcrtomb@plt-0x1154>
mov    0x2cce9789,%al
arpl   %si,-0x53(%edx)
dec    %ebx
jecxz  80481f0 <wcrtomb@plt-0x1120>
cmp    %esi,%edx
mov    -0x4c0abe9e(,%eiz,8),%ebx
mov    %al,0x556612f7
popa
adc    %ah,-0x221d3a01(%edi)
dec    %ebx
popa
(bad)
or     $0x39,%al
mov    -0xd8ffa05(%edx),%dl
.byte 0x29
.byte 0x1d
.byte 0x8c
.byte 0x1c
out    %eax,(%dx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pusha
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
std
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    8048436 <wcrtomb@plt-0xeda>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
popa
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ss
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lar    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x0
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0x0,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x4(%ecx)
add    %al,(%eax)
and    %dl,0x40806(%edx)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x90000003,%edi
fild   0x6b108
add    %dl,(%edx)
add    %cl,0xbd00
add    %ah,-0x6e(%eax)
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
add    %dl,0x80494(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edi)
add    %al,(%eax)
nop
xchg   %eax,%ebx
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jne    8048897 <wcrtomb@plt-0xa79>
add    %al,(%eax)
inc    %eax
xchg   %eax,%edx
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
je     80488aa <wcrtomb@plt-0xa66>
add    %al,(%eax)
inc    %eax
xchg   %eax,%edx
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x6(%esp)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
verw   %si
add    (%eax),%al
add    %ah,(%edx,%edx,4)
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
imul   $0x0,(%ebx),%eax
add    %ah,(%eax)
xchg   %eax,%edx
push   %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
out    %eax,$0x2
add    %al,(%eax)
test   %dl,0x40806(%edx)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
pop    %edx
add    %eax,(%eax)
add    %ah,0x6(%edx,%edx,4)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
mov    $0x50000001,%ebx
out    %al,$0x5
or     %dl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x2df00
add    %ah,-0xe(%eax)
add    $0x3408,%eax
add    %dl,(%edx)
add    %cl,0x23b00
add    %dh,(%eax)
call   12299133 <optarg+0xa22feaf>
add    %al,(%eax)
adc    (%eax),%al
or     $0x40a00,%eax
add    %ah,0x200805f2(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x23400
add    %al,0x4080692(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
fs
insb   (%dx),%es:(%edi)
jae,pn 80489cc <wcrtomb@plt-0x944>
xor    %cs:(%eax),%al
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     80489ce <wcrtomb@plt-0x942>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80489f9 <wcrtomb@plt-0x917>
popa
jb     80489fc <wcrtomb@plt-0x914>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    80489ee <wcrtomb@plt-0x922>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048a0f <wcrtomb@plt-0x901>
gs
jae    804899f <wcrtomb@plt-0x971>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048a0b <wcrtomb@plt-0x905>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048a3d <wcrtomb@plt-0x8d3>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     8048a39 <wcrtomb@plt-0x8d7>
jo     8048a51 <wcrtomb@plt-0x8bf>
add    %bl,0x5f(%edi)
jo     8048a4f <wcrtomb@plt-0x8c1>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8048a4f <wcrtomb@plt-0x8c1>
push   $0x74657300
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048a70 <wcrtomb@plt-0x8a0>
outsl  %ds:(%esi),(%dx)
ja     8048a62 <wcrtomb@plt-0x8ae>
add    %dh,0x77(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048a6c <wcrtomb@plt-0x8a4>
jb     8048a09 <wcrtomb@plt-0x907>
jae    8048a7f <wcrtomb@plt-0x891>
jb     8048a7b <wcrtomb@plt-0x895>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048a7e <wcrtomb@plt-0x892>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048a8e <wcrtomb@plt-0x882>
arpl   %bp,0x72(%eax)
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048a98 <wcrtomb@plt-0x878>
push   $0x6c6e755f
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %bl,%fs:0x5f(%edi)
jae    8048aa8 <wcrtomb@plt-0x868>
jb     8048a9a <wcrtomb@plt-0x876>
jne    8048aa8 <wcrtomb@plt-0x868>
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048ab3 <wcrtomb@plt-0x85d>
gs
js     8048ab6 <wcrtomb@plt-0x85a>
add    %dh,0x63(%edi)
jb     8048abb <wcrtomb@plt-0x855>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %eax,(%eax)
pop    %edi
pop    %edi
data16
js     8048ac3 <wcrtomb@plt-0x84d>
je     8048ab3 <wcrtomb@plt-0x85d>
je     8048ab5 <wcrtomb@plt-0x85b>
je     8048a8c <wcrtomb@plt-0x884>
xor    $0x0,%al
data16
jo     8048ad0 <wcrtomb@plt-0x840>
je     8048ac0 <wcrtomb@plt-0x850>
pop    %edi
jne    8048ace <wcrtomb@plt-0x842>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    8048ad1 <wcrtomb@plt-0x83f>
imul   $0x64686366,%fs:0x0(%edx),%esi
imul   $0x6f727265,0x0(%edx),%esi
jb     8048a7d <wcrtomb@plt-0x893>
imul   $0x63617073,0x77(%ebx),%esi
add    %bl,%gs:0x5f(%edi)
jae    8048afe <wcrtomb@plt-0x812>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     8048aae <wcrtomb@plt-0x862>
jae    8048b24 <wcrtomb@plt-0x7ec>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     8048aba <wcrtomb@plt-0x856>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jb     8048b29 <wcrtomb@plt-0x7e7>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048b30 <wcrtomb@plt-0x7e0>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048b59 <wcrtomb@plt-0x7b7>
gs
jb     8048b5d <wcrtomb@plt-0x7b3>
pop    %edi
popaw
imul   $0x6c617773,0x69(%eax,%eax,1),%ebp
outsb  %ds:(%esi),(%dx)
jne    8048b64 <wcrtomb@plt-0x7ac>
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048b63 <wcrtomb@plt-0x7ad>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048b7c <wcrtomb@plt-0x794>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048b0f <wcrtomb@plt-0x801>
data16
je     8048b85 <wcrtomb@plt-0x78b>
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x73(%ecx)
popa
je     8048b92 <wcrtomb@plt-0x77e>
jns    8048b20 <wcrtomb@plt-0x7f0>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048b9d <wcrtomb@plt-0x773>
jb     8048b97 <wcrtomb@plt-0x779>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048b97 <wcrtomb@plt-0x779>
add    %ah,0x72(%esi)
gs
popa
fs
pop    %edi
jne    8048bab <wcrtomb@plt-0x765>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048bae <wcrtomb@plt-0x762>
je     8048b4b <wcrtomb@plt-0x7c5>
pop    %edi
pop    %edi
gs
jb     8048bc2 <wcrtomb@plt-0x74e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8048bd7 <wcrtomb@plt-0x739>
popa
addr16
gs
jae    8048bd5 <wcrtomb@plt-0x73b>
jp     8048bd3 <wcrtomb@plt-0x73d>
add    %bl,0x5f(%edi)
data16
js     8048be7 <wcrtomb@plt-0x729>
je     8048bd7 <wcrtomb@plt-0x739>
je     8048bae <wcrtomb@plt-0x762>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048bf1 <wcrtomb@plt-0x71f>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     8048bef <wcrtomb@plt-0x721>
outsl  %ds:(%esi),(%dx)
jne    8048c02 <wcrtomb@plt-0x70e>
add    %ah,0x74(%esi)
jae    8048bf2 <wcrtomb@plt-0x71e>
jb     8048bfa <wcrtomb@plt-0x716>
popa
add    %bl,%fs:0x5f(%edi)
jae    8048c10 <wcrtomb@plt-0x700>
jb     8048c12 <wcrtomb@plt-0x6fe>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x70(%esi)
jne    8048c23 <wcrtomb@plt-0x6ed>
jae    8048bb1 <wcrtomb@plt-0x75f>
jae    8048c27 <wcrtomb@plt-0x6e9>
jb     8048c23 <wcrtomb@plt-0x6ed>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048c2b <wcrtomb@plt-0x6e5>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048c44 <wcrtomb@plt-0x6cc>
jb     8048c35 <wcrtomb@plt-0x6db>
popa
jae    8048c3a <wcrtomb@plt-0x6d6>
arpl   %bp,0x70(%ebp)
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048c43 <wcrtomb@plt-0x6cd>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     8048c53 <wcrtomb@plt-0x6bd>
je     8048c2a <wcrtomb@plt-0x6e6>
xor    $0x0,%al
data16
jae    8048c6d <wcrtomb@plt-0x6a3>
popa
je     8048c62 <wcrtomb@plt-0x6ae>
jae    8048c34 <wcrtomb@plt-0x6dc>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8048c6a <wcrtomb@plt-0x6a6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048c08 <wcrtomb@plt-0x708>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     8048c8b <wcrtomb@plt-0x685>
je     8048c7b <wcrtomb@plt-0x695>
je     8048c52 <wcrtomb@plt-0x6be>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048c95 <wcrtomb@plt-0x67b>
outsb  %ds:(%esi),(%dx)
jbe    8048c33 <wcrtomb@plt-0x6dd>
data16
je     8048ca9 <wcrtomb@plt-0x667>
pop    %edi
jae    8048c9e <wcrtomb@plt-0x672>
je     8048c3b <wcrtomb@plt-0x6d5>
outsl  %ds:(%esi),(%dx)
jo     8048cb2 <wcrtomb@plt-0x65e>
popa
jb     8048ca8 <wcrtomb@plt-0x668>
add    %dh,0x74(%ebx)
fs
gs
jb     8048cba <wcrtomb@plt-0x656>
add    %dh,0x63(%edi)
ja     8048cb6 <wcrtomb@plt-0x65a>
fs
je     8048cb8 <wcrtomb@plt-0x658>
add    %bl,0x6f(%edi)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
outsb  %ds:(%esi),(%dx)
gs
ja     8048cc1 <wcrtomb@plt-0x64f>
push   $0x6b6e75
data16
jae    8048cc9 <wcrtomb@plt-0x647>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048cdd <wcrtomb@plt-0x633>
jo     8048ce4 <wcrtomb@plt-0x62c>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x77(%bp)
jb     8048ce3 <wcrtomb@plt-0x62d>
je     8048ce1 <wcrtomb@plt-0x62f>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8048ce2 <wcrtomb@plt-0x62e>
arpl   %bp,0x73(%edi,%ebp,2)
add    %bl,%gs:0x5f(%edi)
data16
jo     8048cf3 <wcrtomb@plt-0x61d>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     8048d03 <wcrtomb@plt-0x60d>
push   $0x626f0072
jae    8048d1b <wcrtomb@plt-0x5f5>
popa
arpl   %bp,0x5f(%ebx)
data16
jb     8048d13 <wcrtomb@plt-0x5fd>
add    %ch,%gs:0x73(%ecx)
ja     8048d17 <wcrtomb@plt-0x5f9>
outsb  %ds:(%esi),(%dx)
je     8048d29 <wcrtomb@plt-0x5e7>
insb   (%dx),%es:(%edi)
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8048cbf <wcrtomb@plt-0x651>
jo     8048d33 <wcrtomb@plt-0x5dd>
outsl  %ds:(%esi),(%dx)
addr16 jb 8048d26 <wcrtomb@plt-0x5ea>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048d4b <wcrtomb@plt-0x5c5>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048d47 <wcrtomb@plt-0x5c9>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     8048d67 <wcrtomb@plt-0x5a9>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    8048d59 <wcrtomb@plt-0x5b7>
outsl  %ds:(%esi),(%dx)
jo     8048d62 <wcrtomb@plt-0x5ae>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8048d78 <wcrtomb@plt-0x598>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048d72 <wcrtomb@plt-0x59e>
jb     8048d6e <wcrtomb@plt-0x5a2>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
je     8048d89 <wcrtomb@plt-0x587>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     8048d7f <wcrtomb@plt-0x591>
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     8048d8d <wcrtomb@plt-0x583>
add    %bl,0x5f(%edi)
jae    8048d96 <wcrtomb@plt-0x57a>
jb     8048d91 <wcrtomb@plt-0x57f>
outsb  %ds:(%esi),(%dx)
je     8048d91 <wcrtomb@plt-0x57f>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048d9c <wcrtomb@plt-0x574>
add    %ah,0x6f(%esi)
jo     8048da1 <wcrtomb@plt-0x56f>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
pop    %edi
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
bound  %esp,0x67(%ebp)
imul   $0x646e6962,0x0(%esi),%ebp
je     8048dba <wcrtomb@plt-0x556>
js     8048dcb <wcrtomb@plt-0x545>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x5f737466,0x0(%esi),%ebp
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
fs
jb     8048dce <wcrtomb@plt-0x542>
outsb  %ds:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
popa
je     8048da8 <wcrtomb@plt-0x568>
xor    $0x0,%al
data16
ja     8048de9 <wcrtomb@plt-0x527>
imul   $0x6f6c6e75,0x5f(%ebp,%eiz,2),%esi
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     8048deb <wcrtomb@plt-0x525>
insl   (%dx),%es:(%edi)
jo     8048d8b <wcrtomb@plt-0x585>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048e0b <wcrtomb@plt-0x505>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %bl,%fs:0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048e0d <wcrtomb@plt-0x503>
jb     8048e10 <wcrtomb@plt-0x500>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048dae <wcrtomb@plt-0x562>
data16
jo     8048e26 <wcrtomb@plt-0x4ea>
je     8048e26 <wcrtomb@plt-0x4ea>
pop    %edi
jne    8048e24 <wcrtomb@plt-0x4ec>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %bl,%fs:0x5f(%edi)
jo     8048e33 <wcrtomb@plt-0x4dd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     8048e3e <wcrtomb@plt-0x4d2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    8048e42 <wcrtomb@plt-0x4ce>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048e46 <wcrtomb@plt-0x4ca>
js     8048e4c <wcrtomb@plt-0x4c4>
je     8048de5 <wcrtomb@plt-0x52b>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
or     %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    $0x0,%al
add    (%eax),%al
add    (%eax),%eax
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%ecx)
add    %al,(%edx)
add    %cl,(%ecx)
add    %al,(%edx)
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,0x2000200
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%edx)
add    %eax,(%eax)
or     %al,(%eax)
add    %al,%gs:(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x90000,0xd(%ecx),%ebp
xchg   %eax,%ecx
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %cl,(%eax)
add    %bl,0x10000004(%ebx)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x70000,(%ecx),%ecx
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
mov    $0x4,%bl
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8048f88 <wcrtomb@plt-0x388>
imul   $0x50000,(%ecx),%ecx
mov    $0x10000004,%ebp
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x4c9,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
roll   %cl,(%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
fldl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
cld
popl   (%esi)
or     %al,(%esi)
sub    %al,(%eax)
add    %ah,(%eax)
xchg   %eax,%edx
push   %es
or     %al,0x2400005f
xchg   %eax,%edx
push   %es
or     %al,0x40000067
xchg   %eax,%edx
push   %es
or     %al,0x60000065
xchg   %eax,%edx
push   %es
or     %al,0x64000061
xchg   %eax,%edx
push   %es
or     %al,0x8000006a
xchg   %eax,%edx
push   %es
or     %al,0x8400006f
xchg   %eax,%edx
push   %es
.byte 0x8
.byte 0x5
.byte 0x69
or     $0x90,%al
push   %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
nop
push   %es
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%edx,4)
push   %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
nop
push   %es
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%edx,4)
push   %es
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    %dl,0x7070806(%eax)
add    %al,(%eax)
and    $0x90,%al
push   %es
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax)
nop
push   %es
or     %al,(%edi)
or     %eax,(%eax)
add    %ch,(%eax,%edx,4)
push   %es
or     %al,(%edi)
arpl   %ax,(%eax)
add    %dh,(%eax)
nop
push   %es
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax,%edx,4)
push   %es
or     %al,(%edi)
or     (%eax),%eax
add    %bh,(%eax)
nop
push   %es
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%edx,4)
push   %es
or     %al,(%edi)
or     $0x90400000,%eax
push   %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %esp
nop
push   %es
or     %al,(%edi)
sldt   (%eax)
dec    %eax
nop
push   %es
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x6(%eax,%edx,4)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,-0x70(%eax)
push   %es
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x6(%eax,%edx,4)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,-0x70(%eax)
push   %es
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x6(%eax,%edx,4)
or     %al,(%edi)
adc    $0x90600000,%eax
push   %es
or     %al,(%edi)
push   %ss
add    %al,(%eax)
fs
nop
push   %es
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080690
sbb    %al,(%eax)
add    %ch,0x6(%eax,%edx,4)
or     %al,(%edi)
bound  %eax,(%eax)
add    %dh,-0x70(%eax)
push   %es
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x6(%eax,%edx,4)
or     %al,(%edi)
sbb    (%eax),%al
add    %bh,-0x70(%eax)
push   %es
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x6(%eax,%edx,4)
or     %al,(%edi)
sbb    $0x0,%al
add    %al,0x7080690(%eax)
sbb    $0x90840000,%eax
push   %es
or     %al,(%edi)
push   %ds
add    %al,(%eax)
mov    %dl,0x1f070806(%eax)
add    %al,(%eax)
mov    %ss,0x20070806(%eax)
add    %al,(%eax)
nop
nop
push   %es
or     %al,(%edi)
and    %eax,(%eax)
add    %dl,0x22070806(%eax,%edx,4)
add    %al,(%eax)
cwtl
nop
push   %es
or     %al,(%edi)
and    (%eax),%eax
add    %bl,0x24070806(%eax,%edx,4)
add    %al,(%eax)
mov    0x7080690,%al
and    $0x90a40000,%eax
push   %es
or     %al,(%edi)
add    %al,%es:(%eax)
test   $0x90,%al
push   %es
or     %al,(%edi)
daa
add    %al,(%eax)
lods   %ds:(%esi),%al
nop
push   %es
or     %al,(%edi)
sub    %al,(%eax)
add    %dh,0x7080690(%eax)
sub    %eax,(%eax)
add    %dh,0x2a070806(%eax,%edx,4)
add    %al,(%eax)
mov    $0x7080690,%eax
sub    (%eax),%eax
add    %bh,0x2c070806(%eax,%edx,4)
add    %al,(%eax)
rclb   $0x0,0x2d070806(%eax)
add    %al,%ah
nop
push   %es
or     %al,(%edi)
add    %al,%cs:(%eax)
enter  $0x690,$0x8
pop    %es
das
add    %al,(%eax)
int3
nop
push   %es
or     %al,(%edi)
xor    %al,(%eax)
add    %dl,%al
nop
push   %es
or     %al,(%edi)
xor    %eax,(%eax)
add    %dl,%ah
nop
push   %es
or     %al,(%edi)
xor    (%eax),%al
add    %bl,%al
nop
push   %es
or     %al,(%edi)
xor    (%eax),%eax
add    %bl,%ah
nop
push   %es
or     %al,(%edi)
xor    $0x0,%al
add    %ah,%al
nop
push   %es
or     %al,(%edi)
xor    $0x90e40000,%eax
push   %es
or     %al,(%edi)
add    %al,%ss:(%eax)
call   f0c9839 <optarg+0x70605b5>
aaa
add    %al,(%eax)
in     (%dx),%al
nop
push   %es
or     %al,(%edi)
cmp    %al,(%eax)
add    %dh,%al
nop
push   %es
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dh,%ah
nop
push   %es
or     %al,(%edi)
cmp    (%eax),%al
add    %bh,%al
nop
push   %es
or     %al,(%edi)
cmp    (%eax),%eax
add    %bh,%ah
nop
push   %es
or     %al,(%edi)
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
cmp    $0x91040000,%eax
push   %es
or     %al,(%edi)
add    %al,%ds:(%eax)
or     %dl,0x3f070806(%ecx)
add    %al,(%eax)
or     $0x91,%al
push   %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
adc    %dl,0x41070806(%ecx)
add    %al,(%eax)
adc    $0x91,%al
push   %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
sbb    %dl,0x43070806(%ecx)
add    %al,(%eax)
sbb    $0x91,%al
push   %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
and    %dl,0x45070806(%ecx)
add    %al,(%eax)
and    $0x91,%al
push   %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
sub    %dl,0x48070806(%ecx)
add    %al,(%eax)
sub    $0x91,%al
push   %es
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
xor    %dl,0x4a070806(%ecx)
add    %al,(%eax)
xor    $0x91,%al
push   %es
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
cmp    %dl,0x4c070806(%ecx)
add    %al,(%eax)
cmp    $0x91,%al
push   %es
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
inc    %eax
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
dec    %esi
add    %al,(%eax)
inc    %esp
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
dec    %eax
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
dec    %esp
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %eax
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
push   %esp
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %esp
add    %al,(%eax)
pop    %eax
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pop    %esp
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %esi
add    %al,(%eax)
pusha
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
push   %edi
add    %al,(%eax)
fs
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
push   $0x7080691
pop    %ecx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%ecx
push   %es
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
jo     8049247 <wcrtomb@plt-0xc9>
push   %es
or     %al,(%edi)
pop    %ebx
add    %al,(%eax)
je     804924f <wcrtomb@plt-0xc1>
push   %es
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
js     8049257 <wcrtomb@plt-0xb9>
push   %es
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
jl     804925f <wcrtomb@plt-0xb1>
push   %es
or     %al,(%edi)
pop    %esi
push   %ebx
sub    $0x8,%esp
call   804a900 <__sprintf_chk@plt+0x1030>
add    $0x1fd23,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     80492f2 <wcrtomb@plt-0x1e>
call   8049590 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8069004
jmp    *0x8069008
add    %al,(%eax)
jmp    *0x806900c
push   $0x0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069010
push   $0x8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069014
push   $0x10
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069018
push   $0x18
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806901c
push   $0x20
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069020
push   $0x28
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069024
push   $0x30
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069028
push   $0x38
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806902c
push   $0x40
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069030
push   $0x48
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069034
push   $0x50
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069038
push   $0x58
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806903c
push   $0x60
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069040
push   $0x68
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069044
push   $0x70
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069048
push   $0x78
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806904c
push   $0x80
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069050
push   $0x88
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069054
push   $0x90
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069058
push   $0x98
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806905c
push   $0xa0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069060
push   $0xa8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069064
push   $0xb0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069068
push   $0xb8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806906c
push   $0xc0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069070
push   $0xc8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069074
push   $0xd0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069078
push   $0xd8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806907c
push   $0xe0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069080
push   $0xe8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069084
push   $0xf0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069088
push   $0xf8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806908c
push   $0x100
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069090
push   $0x108
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069094
push   $0x110
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069098
push   $0x118
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806909c
push   $0x120
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690a0
push   $0x128
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690a4
push   $0x130
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690a8
push   $0x138
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690ac
push   $0x140
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690b0
push   $0x148
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690b4
push   $0x150
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690b8
push   $0x158
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690bc
push   $0x160
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690c0
push   $0x168
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690c4
push   $0x170
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690c8
push   $0x178
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690cc
push   $0x180
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690d0
push   $0x188
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690d4
push   $0x190
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690d8
push   $0x198
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690dc
push   $0x1a0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690e0
push   $0x1a8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690e4
push   $0x1b0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690e8
push   $0x1b8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690ec
push   $0x1c0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690f0
push   $0x1c8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690f4
push   $0x1d0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690f8
push   $0x1d8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x80690fc
push   $0x1e0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069100
push   $0x1e8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069104
push   $0x1f0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069108
push   $0x1f8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806910c
push   $0x200
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069110
push   $0x208
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069114
push   $0x210
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069118
push   $0x218
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806911c
push   $0x220
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069120
push   $0x228
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069124
push   $0x230
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069128
push   $0x238
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806912c
push   $0x240
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069130
push   $0x248
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069134
push   $0x250
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069138
push   $0x258
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806913c
push   $0x260
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069140
push   $0x268
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069144
push   $0x270
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069148
push   $0x278
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806914c
push   $0x280
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069150
push   $0x288
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069154
push   $0x290
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069158
push   $0x298
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806915c
push   $0x2a0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069160
push   $0x2a8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069164
push   $0x2b0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069168
push   $0x2b8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806916c
push   $0x2c0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069170
push   $0x2c8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069174
push   $0x2d0
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x8069178
push   $0x2d8
jmp    8049300 <wcrtomb@plt-0x10>
jmp    *0x806917c
push   $0x2e0
jmp    8049300 <wcrtomb@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xd0,%esp
mov    0xc(%ebp),%eax
mov    %gs:0x14,%edx
mov    %edx,0xcc(%esp)
xor    %edx,%edx
movl   $0x2,0x80691c4
00
mov    %eax,%edi
mov    %eax,0x3c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   80552b0 <__sprintf_chk@plt+0xb9e0>
mov    (%edi),%eax
movl   $0x8062531,0x4(%esp)
movl   $0x6,(%esp)
movb   $0xa,0x8069a84
mov    %eax,0x8069528
movl   $0xffffffff,0x806931c
ff
movl   $0xffffffff,0x80692e0
ff
movl   $0x7fffffff,0x80692e4
7f
movl   $0xffffffff,0x8069300
ff
movl   $0xffffffff,0x8069304
ff
movl   $0xffffffff,0x80692f8
ff
movl   $0xffffffff,0x80692fc
ff
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x8069378
00
call   8049750 <setlocale@plt>
movl   $0x80625e6,0x4(%esp)
movl   $0x80626c3,(%esp)
call   80497f0 <bindtextdomain@plt>
movl   $0x80626c3,(%esp)
call   8049460 <textdomain@plt>
movl   $0x804b160,(%esp)
movl   $0x2,0x80691c4
00
call   80623f0 <fts_children+0x3150>
movl   $0x80625f8,(%esp)
call   8049550 <getenv@plt>
movl   $0x0,0x1c(%esp)
test   %eax,%eax
mov    %eax,%ebx
je     80499f7 <__sprintf_chk@plt+0x127>
cmpb   $0x0,(%eax)
jne    804a493 <__sprintf_chk@plt+0xbc3>
xor    %eax,%eax
call   804afd0 <__sprintf_chk@plt+0x1700>
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x30(%esp)
xchg   %ax,%ax
mov    0x8069260,%eax
lea    0xb0(%esp),%ebx
xor    %edi,%edi
mov    %eax,0x34(%esp)
mov    %eax,%esi
jmp    8049a4e <__sprintf_chk@plt+0x17e>
xchg   %ax,%ax
mov    %esi,0x8069188
mov    0x8069260,%esi
lea    0x1(%ecx),%ebx
mov    %al,(%ecx)
mov    $0x1,%edi
mov    0x3c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x8063c40,0xc(%esp)
movl   $0x8063f80,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80495d0 <getopt_long@plt>
lea    -0x30(%eax),%ecx
cmp    $0x9,%ecx
ja     8049bb8 <__sprintf_chk@plt+0x2e8>
cmp    %esi,0x8069188
lea    0xb0(%esp),%ecx
jne    8049a38 <__sprintf_chk@plt+0x168>
test   %edi,%edi
je     8049ba8 <__sprintf_chk@plt+0x2d8>
xor    %ecx,%ecx
cmpb   $0x30,0xb0(%esp)
lea    0xc5(%esp),%edx
sete   %cl
sub    %ecx,%ebx
cmp    %edx,%ebx
mov    %ebx,%ecx
jne    8049a38 <__sprintf_chk@plt+0x168>
mov    %eax,%edx
movl   $0x2e2e2e,0xc5(%esp)
00
lea    0xc8(%esp),%ebx
lea    0x48(%esp),%eax
movb   $0x0,(%ebx)
mov    %eax,0xc(%esp)
lea    0xb0(%esp),%eax
movl   $0x8062531,0x10(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   805b770 <__sprintf_chk@plt+0x11ea0>
mov    0x38(%esp),%edx
cmp    $0x1,%eax
ja     8049bd0 <__sprintf_chk@plt+0x300>
mov    0x4c(%esp),%eax
test   %eax,%eax
js     8049bd0 <__sprintf_chk@plt+0x300>
cmp    $0xffffffff,%edx
je     8049c28 <__sprintf_chk@plt+0x358>
cmp    $0x89,%edx
ja     804a424 <__sprintf_chk@plt+0xb54>
jmp    *0x80639fc(,%edx,4)
movl   $0x30a,0x806918c
00
mov    0x34(%esp),%eax
movl   $0x3,0x8069190
00
mov    %eax,0x24(%esp)
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x806272c,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    8049b7b <__sprintf_chk@plt+0x2ab>
movl   $0x1,0x8069320
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x806279e,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    804a81e <__sprintf_chk@plt+0xf4e>
movl   $0x2,0x8069320
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
lea    0x0(%esi),%esi
lea    0xb0(%esp),%ecx
jmp    8049a38 <__sprintf_chk@plt+0x168>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
lea    0xb0(%esp),%eax
cmp    %eax,%ebx
jne    8049acc <__sprintf_chk@plt+0x1fc>
jmp    8049b1b <__sprintf_chk@plt+0x24b>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806293c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
movl   $0x8062560,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
call   8049530 <error@plt>
mov    0x38(%esp),%edx
cmp    $0xffffffff,%edx
jne    8049b24 <__sprintf_chk@plt+0x254>
cmpl   $0x2,0x806937c
je     804a799 <__sprintf_chk@plt+0xec9>
call   805caa0 <__sprintf_chk@plt+0x131d0>
cmpl   $0x0,0x80692a8
je     804a56a <__sprintf_chk@plt+0xc9a>
movl   $0x0,0x80692ec
00
movl   $0x0,0x80692f0
00
movl   $0x1,0x80692ac
00
mov    0x80692ac,%eax
or     0x80692f0,%eax
cmpl   $0x0,0x80692fc
mov    %eax,0x8069318
js     804a733 <__sprintf_chk@plt+0xe63>
cmpl   $0x0,0x8069304
js     804a71b <__sprintf_chk@plt+0xe4b>
cmpl   $0x0,0x806937c
jne    804a618 <__sprintf_chk@plt+0xd48>
cmpl   $0x0,0x8069384
jne    804a5ac <__sprintf_chk@plt+0xcdc>
cmpl   $0x0,0x8069388
jne    804a57c <__sprintf_chk@plt+0xcac>
lea    0x50(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80494d0 <__fxstat64@plt>
test   %eax,%eax
jne    8049cf2 <__sprintf_chk@plt+0x422>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    8049cf2 <__sprintf_chk@plt+0x422>
mov    $0x80693a0,%edi
mov    $0x18,%ecx
rep movsl %ds:(%esi),%es:(%edi)
cmpl   $0x0,0x30(%esp)
je     804a833 <__sprintf_chk@plt+0xf63>
cmpl   $0x0,0x28(%esp)
jne    804a77b <__sprintf_chk@plt+0xeab>
xorl   $0x1,0x8069314
movl   $0x0,0x8069a88
00
movl   $0x0,0x8069a8c
00
mov    0x28(%esp),%eax
mov    0x30(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x8069354
mov    %edi,(%esp)
call   8049390 <free@plt>
mov    0x8(%ebp),%eax
sub    0x8069260,%eax
sub    $0x1,%eax
jle    8049d57 <__sprintf_chk@plt+0x487>
cmpl   $0x0,0x80692e8
je     8049d5e <__sprintf_chk@plt+0x48e>
cmpl   $0x0,0x20(%esp)
je     8049d68 <__sprintf_chk@plt+0x498>
movl   $0x1,0x8069310
00
movl   $0x1,(%esp)
call   8049810 <isatty@plt>
mov    0x80692e4,%eax
or     0x80692e0,%eax
je     804a7b6 <__sprintf_chk@plt+0xee6>
testb  $0x2,0x806918c
je     8049d9b <__sprintf_chk@plt+0x4cb>
cmpl   $0x0,0x8069358
je     804a80f <__sprintf_chk@plt+0xf3f>
mov    0x8(%ebp),%eax
cmp    %eax,0x8069260
jge    804a7c2 <__sprintf_chk@plt+0xef2>
mov    0x3c(%esp),%esi
mov    $0x1,%ebx
mov    0x8069260,%eax
mov    (%esi,%eax,4),%eax
call   804dd90 <__sprintf_chk@plt+0x44c0>
and    %eax,%ebx
mov    0x8069260,%eax
add    $0x1,%eax
cmp    0x8(%ebp),%eax
mov    %eax,0x8069260
jl     8049db3 <__sprintf_chk@plt+0x4e3>
cmpl   $0x0,0x8069360
mov    $0x2,%eax
cmove  %ebx,%eax
mov    %eax,(%esp)
call   80495a0 <exit@plt>
cmpl   $0x0,0x806936c
je     804a879 <__sprintf_chk@plt+0xfa9>
mov    0x8069284,%eax
movl   $0x10000000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x806936c,%eax
mov    %eax,(%esp)
call   8052f20 <__sprintf_chk@plt+0x9650>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
mov    %eax,0x80692d8
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80692dc
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
cmpl   $0x0,0x8069370
je     804a888 <__sprintf_chk@plt+0xfb8>
mov    0x8069284,%eax
movl   $0xa,0x10(%esp)
movl   $0x10000000,0xc(%esp)
movl   $0x8052f20,(%esp)
mov    %eax,0x8(%esp)
mov    0x8069370,%eax
mov    %eax,0x4(%esp)
call   8053300 <__sprintf_chk@plt+0x9a30>
test   %eax,%eax
je     8049a20 <__sprintf_chk@plt+0x150>
call   80496e0 <__errno_location@plt>
mov    0x8069284,%ebx
movl   $0x80640dc,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8049530 <error@plt>
jmp    8049a20 <__sprintf_chk@plt+0x150>
cmpl   $0x0,0x8069370
je     804a897 <__sprintf_chk@plt+0xfc7>
cmp    $0x82,%edx
mov    $0x30000000,%eax
mov    $0x10000000,%edx
cmovne %edx,%eax
mov    %eax,0x8(%esp)
mov    0x8069284,%eax
mov    %eax,0x4(%esp)
mov    0x8069370,%eax
mov    %eax,(%esp)
call   8052f20 <__sprintf_chk@plt+0x9650>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%ebx
test   %ebx,%ebx
je     804a785 <__sprintf_chk@plt+0xeb5>
movl   $0x80642a8,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a430 <__sprintf_chk@plt+0xb60>
movl   $0x8062672,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a430 <__sprintf_chk@plt+0xb60>
movl   $0x8062676,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a430 <__sprintf_chk@plt+0xb60>
movl   $0x806267c,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a59d <__sprintf_chk@plt+0xccd>
movl   $0x8062682,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a59d <__sprintf_chk@plt+0xccd>
movl   $0x8062685,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a59d <__sprintf_chk@plt+0xccd>
movl   $0x806268a,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a785 <__sprintf_chk@plt+0xeb5>
movl   $0x8062692,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a785 <__sprintf_chk@plt+0xeb5>
movl   $0x806268f,0x4(%esp)
mov    %ebx,(%esp)
call   8049670 <strcasecmp@plt>
test   %eax,%eax
je     804a785 <__sprintf_chk@plt+0xeb5>
movl   $0x1,0x8069388
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%ebx
movl   $0x8062651,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    8049b58 <__sprintf_chk@plt+0x288>
movl   $0x0,0x8069320
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movb   $0x0,0x8069a84
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069a8c
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069a88
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069314
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806394c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069380
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80692a8
00
movl   $0x0,0x80691c4
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069378
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x806930c
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
movl   $0x8062531,0x10(%esp)
movl   $0x80692e0,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   805b770 <__sprintf_chk@plt+0x11ea0>
cmp    $0x1,%eax
jbe    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806263f,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80692ec
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069a90
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80692e8
00
movl   $0x0,0x20(%esp)
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
cmpb   $0x2d,(%eax)
je     804a551 <__sprintf_chk@plt+0xc81>
movl   $0x80627ef,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <fopen64@plt>
mov    %eax,0x34(%esp)
cmpl   $0x0,0x34(%esp)
je     804a8ae <__sprintf_chk@plt+0xfde>
mov    0x28(%esp),%eax
mov    $0x1,%edi
add    $0x1,%eax
je     804a1ae <__sprintf_chk@plt+0x8de>
lea    0x0(%esi),%esi
add    %edi,%edi
cmp    %eax,%edi
jbe    804a1a8 <__sprintf_chk@plt+0x8d8>
mov    0x30(%esp),%eax
lea    -0x1(%edi),%ebx
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x28(%esp),%esi
mov    %eax,0x30(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %ebx,0x38(%esp)
add    %esi,%eax
mov    %eax,%edx
mov    %eax,0x2c(%esp)
mov    0x34(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
call   8049540 <fread_unlocked@plt>
test   %eax,%eax
je     804a43f <__sprintf_chk@plt+0xb6f>
add    %eax,%esi
cmp    %esi,%ebx
jne    804a1d0 <__sprintf_chk@plt+0x900>
mov    0x30(%esp),%edx
test   %edx,%edx
je     804a22c <__sprintf_chk@plt+0x95c>
cmp    $0xaaaaaaa9,%edi
ja     804a794 <__sprintf_chk@plt+0xec4>
lea    0x1(%edi),%eax
shr    %eax
add    %eax,%edi
lea    -0x1(%edi),%ebx
mov    0x30(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x38(%esp),%esi
mov    %eax,0x30(%esp)
jmp    804a1d0 <__sprintf_chk@plt+0x900>
mov    0x8069284,%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    0x28(%esp),%esi
repnz scas %es:(%edi),%al
mov    0x30(%esp),%eax
mov    %eax,(%esp)
not    %ecx
lea    -0x1(%esi,%ecx,1),%edi
lea    0x1(%edi),%ebx
mov    %ebx,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%edx
mov    %eax,0x30(%esp)
mov    0x8069284,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %edx,%esi
add    %edx,%eax
mov    %eax,(%esp)
call   80494f0 <strcpy@plt>
movb   $0xa,(%esi,%edi,1)
mov    %ebx,0x28(%esp)
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x80691c0,%eax
movl   $0x4,0x10(%esp)
movl   $0x8063c24,0xc(%esp)
movl   $0x8063c30,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069284,%eax
movl   $0x8062631,(%esp)
mov    %eax,0x4(%esp)
call   80522c0 <__sprintf_chk@plt+0x89f0>
mov    0x8063c24(,%eax,4),%eax
cmp    $0x3,%eax
mov    %eax,0x8069190
mov    0x34(%esp),%eax
cmovne 0x24(%esp),%eax
mov    %eax,0x24(%esp)
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80692f0
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069308
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x0,0x806931c
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
call   804afd0 <__sprintf_chk@plt+0x1700>
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069384
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8069374
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    $0x806262c,%eax
call   804afd0 <__sprintf_chk@plt+0x1700>
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0xffffffff,0x80692ec
ff
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x0,0x80692e8
00
movl   $0x1,0x20(%esp)
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    $0x80626c3,%eax
call   804afd0 <__sprintf_chk@plt+0x1700>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    $0x80624f0,%eax
call   804afd0 <__sprintf_chk@plt+0x1700>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    $0x8062626,%eax
call   804afd0 <__sprintf_chk@plt+0x1700>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%ebx
movl   $0x8062605,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    804a52e <__sprintf_chk@plt+0xc5e>
movl   $0x1,0x8069358
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
lea    0x48(%esp),%edx
call   804b3d0 <__sprintf_chk@plt+0x1b00>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
mov    $0x8069300,%edx
call   804b3d0 <__sprintf_chk@plt+0x1b00>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
mov    $0x80692f8,%edx
call   804b3d0 <__sprintf_chk@plt+0x1b00>
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069284,%eax
mov    %eax,0x80691bc
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x2,(%esp)
call   804de60 <__sprintf_chk@plt+0x4590>
movl   $0x1,0x806937c
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
call   80496e0 <__errno_location@plt>
mov    0x34(%esp),%edx
testb  $0x20,(%edx)
mov    (%eax),%eax
jne    804a74b <__sprintf_chk@plt+0xe7b>
mov    0x34(%esp),%eax
cmp    0x8069264,%eax
je     804a467 <__sprintf_chk@plt+0xb97>
mov    %eax,(%esp)
call   80493d0 <fclose@plt>
cmp    0x28(%esp),%esi
je     8049a20 <__sprintf_chk@plt+0x150>
mov    0x30(%esp),%eax
cmpb   $0xa,-0x1(%eax,%esi,1)
je     804a772 <__sprintf_chk@plt+0xea2>
lea    0x1(%esi),%eax
mov    %eax,0x28(%esp)
mov    0x2c(%esp),%eax
movb   $0xa,(%eax)
jmp    8049a20 <__sprintf_chk@plt+0x150>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
not    %ecx
mov    %ecx,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
xor    %ecx,%ecx
mov    %eax,0x34(%esp)
mov    %eax,%edx
mov    %ebx,%eax
call   804af20 <__sprintf_chk@plt+0x1650>
mov    %eax,%esi
mov    $0x3ffffffe,%eax
sub    0x8(%ebp),%eax
cmp    %eax,%esi
ja     804a794 <__sprintf_chk@plt+0xec4>
mov    0x8(%ebp),%edx
add    %esi,%edx
lea    0x4(,%edx,4),%eax
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x38(%esp),%edx
mov    %edx,0x8(%ebp)
mov    %eax,%edi
lea    0x4(%eax),%eax
mov    %eax,%edx
mov    0x3c(%esp),%eax
mov    %edx,%ecx
mov    %edx,0x38(%esp)
mov    0x34(%esp),%edx
mov    (%eax),%eax
mov    %eax,(%edi)
mov    %ebx,%eax
call   804af20 <__sprintf_chk@plt+0x1650>
mov    0x38(%esp),%edx
mov    0x3c(%esp),%ebx
lea    (%edx,%eax,4),%ecx
xor    %eax,%eax
mov    0x4(%ebx,%eax,1),%edx
mov    %edx,(%ecx,%eax,1)
add    $0x4,%eax
test   %edx,%edx
jne    804a513 <__sprintf_chk@plt+0xc43>
mov    %esi,0x1c(%esp)
mov    %edi,0x3c(%esp)
jmp    80499f7 <__sprintf_chk@plt+0x127>
movl   $0x806260a,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    804a588 <__sprintf_chk@plt+0xcb8>
movl   $0x2,0x8069358
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
mov    0x8069264,%edx
cmpb   $0x0,0x1(%eax)
mov    %edx,0x34(%esp)
je     804a189 <__sprintf_chk@plt+0x8b9>
jmp    804a175 <__sprintf_chk@plt+0x8a5>
cmpl   $0x0,0x80692ec
je     8049c65 <__sprintf_chk@plt+0x395>
jmp    8049c51 <__sprintf_chk@plt+0x381>
movl   $0x0,(%esp)
call   804de60 <__sprintf_chk@plt+0x4590>
movl   $0x5,0x8(%esp)
movl   $0x806260f,0x4(%esp)
jmp    804a109 <__sprintf_chk@plt+0x839>
movl   $0x0,0x806937c
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806397c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x80626ad,(%esp)
mov    %eax,%ebx
call   8055c10 <__sprintf_chk@plt+0xc340>
movl   $0x0,0x18(%esp)
mov    %ebx,0x14(%esp)
movl   $0x80626ba,0xc(%esp)
movl   $0x80626bf,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x8069528,%eax
mov    %eax,0x4(%esp)
mov    0x8069280,%eax
mov    %eax,(%esp)
call   805abb0 <__sprintf_chk@plt+0x112e0>
movl   $0x0,(%esp)
call   80495a0 <exit@plt>
movl   $0x8062696,(%esp)
call   8049550 <getenv@plt>
test   %eax,%eax
je     804a637 <__sprintf_chk@plt+0xd67>
cmpb   $0x0,(%eax)
je     804a637 <__sprintf_chk@plt+0xd67>
mov    %eax,0x80691b4
mov    %eax,0x80691b8
movl   $0x80626a1,(%esp)
call   8049550 <getenv@plt>
test   %eax,%eax
je     8049c9c <__sprintf_chk@plt+0x3cc>
cmpb   $0x0,(%eax)
je     8049c9c <__sprintf_chk@plt+0x3cc>
mov    %eax,(%esp)
call   805b610 <__sprintf_chk@plt+0x11d40>
movl   $0x0,0x38(%esp)
mov    %eax,%ebx
lea    0x1(%eax),%edi
movzbl -0x1(%edi),%eax
lea    -0x1(%edi),%edx
test   %al,%al
sete   0x34(%esp)
je     804a67d <__sprintf_chk@plt+0xdad>
cmp    $0x3a,%al
jne    804a6dd <__sprintf_chk@plt+0xe0d>
movb   $0x0,-0x1(%edi)
mov    $0x8063fc0,%esi
mov    $0x80625e3,%eax
jmp    804a699 <__sprintf_chk@plt+0xdc9>
lea    0x0(%esi),%esi
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
je     804a6a9 <__sprintf_chk@plt+0xdd9>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    804a690 <__sprintf_chk@plt+0xdc0>
mov    0x4(%esi),%eax
test   %eax,%eax
je     804a6ba <__sprintf_chk@plt+0xdea>
mov    0x38(%esp),%edx
test   %edx,%edx
je     804a6ba <__sprintf_chk@plt+0xdea>
mov    %edx,(%eax)
mov    0x8(%esi),%eax
test   %eax,%eax
je     804a6c3 <__sprintf_chk@plt+0xdf3>
call   *%eax
cmpb   $0x0,0x34(%esp)
jne    8049c9c <__sprintf_chk@plt+0x3cc>
mov    %edi,%ebx
movl   $0x0,0x38(%esp)
add    $0x1,%edi
jmp    804a669 <__sprintf_chk@plt+0xd99>
cmp    $0x3d,%al
je     804a6f9 <__sprintf_chk@plt+0xe29>
cmpl   $0x0,0x38(%esp)
je     804a6d8 <__sprintf_chk@plt+0xe08>
lea    -0x30(%eax),%edx
cmp    $0x9,%dl
jbe    804a6d8 <__sprintf_chk@plt+0xe08>
cmp    $0x3b,%al
je     804a6d8 <__sprintf_chk@plt+0xe08>
jmp    8049c9c <__sprintf_chk@plt+0x3cc>
cmp    %ebx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
je     8049c9c <__sprintf_chk@plt+0x3cc>
cmpl   $0x0,0x38(%esp)
jne    8049c9c <__sprintf_chk@plt+0x3cc>
movb   $0x0,-0x1(%edi)
mov    %edi,0x38(%esp)
jmp    804a6d8 <__sprintf_chk@plt+0xe08>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x8069300
mov    %edx,0x8069304
jmp    8049c8f <__sprintf_chk@plt+0x3bf>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x80692f8
mov    %edx,0x80692fc
jmp    8049c82 <__sprintf_chk@plt+0x3b2>
mov    0x8069284,%ecx
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
mov    %ecx,0xc(%esp)
call   8049530 <error@plt>
jmp    804a453 <__sprintf_chk@plt+0xb83>
mov    %esi,0x28(%esp)
jmp    8049a20 <__sprintf_chk@plt+0x150>
subl   $0x1,0x28(%esp)
jmp    8049d23 <__sprintf_chk@plt+0x453>
movl   $0x2,0x806937c
00
jmp    8049a20 <__sprintf_chk@plt+0x150>
call   805b650 <__sprintf_chk@plt+0x11d80>
movl   $0x1,(%esp)
call   8049810 <isatty@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804a801 <__sprintf_chk@plt+0xf31>
mov    %edx,0x806937c
jmp    8049c35 <__sprintf_chk@plt+0x365>
movl   $0x1,(%esp)
call   80495a0 <exit@plt>
cmpl   $0x3,0x8069190
je     804a7dc <__sprintf_chk@plt+0xf0c>
mov    $0x80628f0,%eax
call   804dd90 <__sprintf_chk@plt+0x44c0>
mov    %eax,%ebx
jmp    8049dd4 <__sprintf_chk@plt+0x504>
mov    0x24(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    804a7cb <__sprintf_chk@plt+0xefb>
mov    $0x8064a72,%eax
movl   $0x2,0x8069364
00
call   804dd90 <__sprintf_chk@plt+0x44c0>
mov    %eax,%ebx
jmp    8049dd4 <__sprintf_chk@plt+0x504>
call   805ca60 <__sprintf_chk@plt+0x13190>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
jmp    804a7ab <__sprintf_chk@plt+0xedb>
movl   $0x1,0x8069358
00
jmp    8049d9b <__sprintf_chk@plt+0x4cb>
movl   $0x5,0x8(%esp)
movl   $0x8062658,0x4(%esp)
jmp    804a109 <__sprintf_chk@plt+0x839>
mov    0x8069260,%edx
cmp    0x8(%ebp),%edx
jge    804a424 <__sprintf_chk@plt+0xb54>
mov    0x3c(%esp),%eax
or     $0xffffffff,%ecx
mov    (%eax,%edx,4),%ebx
xor    %eax,%eax
add    $0x1,%edx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
mov    %ebx,(%esp)
mov    %edx,0x8069260
not    %ecx
lea    -0x1(%ecx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,0x28(%esp)
call   805b5d0 <__sprintf_chk@plt+0x11d00>
mov    %eax,0x30(%esp)
jmp    8049d23 <__sprintf_chk@plt+0x453>
call   8052bb0 <__sprintf_chk@plt+0x92e0>
mov    %eax,0x806936c
jmp    8049df8 <__sprintf_chk@plt+0x528>
call   8052bb0 <__sprintf_chk@plt+0x92e0>
mov    %eax,0x8069370
jmp    8049e46 <__sprintf_chk@plt+0x576>
mov    %edx,0x38(%esp)
call   8052bb0 <__sprintf_chk@plt+0x92e0>
mov    0x38(%esp),%edx
mov    %eax,0x8069370
jmp    8049eb7 <__sprintf_chk@plt+0x5e7>
call   80496e0 <__errno_location@plt>
mov    0x8069284,%ebx
movl   $0x80640dc,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8049530 <error@plt>
jmp    804a194 <__sprintf_chk@plt+0x8c4>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x80623e0
push   $0x8062370
push   %ecx
push   %esi
push   $0x80498e0
call   8049660 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8069223,%eax
sub    $0x8069220,%eax
cmp    $0x6,%eax
ja     804a920 <__sprintf_chk@plt+0x1050>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804a91f <__sprintf_chk@plt+0x104f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8069220,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8069220,%eax
sub    $0x8069220,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804a959 <__sprintf_chk@plt+0x1089>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804a958 <__sprintf_chk@plt+0x1088>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8069220,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8069288
jne    804a99c <__sprintf_chk@plt+0x10cc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a910 <__sprintf_chk@plt+0x1040>
movb   $0x1,0x8069288
leave
repz ret
xchg   %ax,%ax
mov    0x8068f08,%eax
test   %eax,%eax
je     804a9c8 <__sprintf_chk@plt+0x10f8>
mov    $0x0,%eax
test   %eax,%eax
je     804a9c8 <__sprintf_chk@plt+0x10f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8068f08,(%esp)
call   *%eax
leave
jmp    804a940 <__sprintf_chk@plt+0x1070>
nop
jmp    804a940 <__sprintf_chk@plt+0x1070>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
movl   $0x0,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x8069a90,%eax
test   %eax,%eax
jne    804aace <__sprintf_chk@plt+0x11fe>
movl   $0x806928c,(%esp)
call   8051b10 <__sprintf_chk@plt+0x8240>
mov    0x18(%esp),%edx
mov    %esi,%ecx
add    %esi,%edx
cmp    %edx,%ecx
jae    804aa7c <__sprintf_chk@plt+0x11ac>
xchg   %ax,%ax
cmpb   $0xa,(%ecx)
mov    %ecx,%ebx
jne    804aa25 <__sprintf_chk@plt+0x1155>
jmp    804aac8 <__sprintf_chk@plt+0x11f8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0xa,(%ebx)
je     804aa88 <__sprintf_chk@plt+0x11b8>
add    $0x1,%ebx
cmp    %edx,%ebx
jne    804aa20 <__sprintf_chk@plt+0x1150>
mov    %ebx,%eax
sub    %ecx,%eax
mov    %eax,0x8(%esp)
mov    0x806928c,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8050910 <__sprintf_chk@plt+0x7040>
test   %eax,%eax
je     804aa69 <__sprintf_chk@plt+0x1199>
mov    %eax,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049530 <error@plt>
mov    0x18(%esp),%edx
lea    (%esi,%edx,1),%eax
cmp    %eax,%ebx
jae    804aa91 <__sprintf_chk@plt+0x11c1>
mov    %ebx,%ecx
add    %esi,%edx
cmp    %edx,%ecx
jb     804aa10 <__sprintf_chk@plt+0x1140>
mov    %ecx,%ebx
xor    %eax,%eax
jmp    804aa30 <__sprintf_chk@plt+0x1160>
lea    0x0(%esi),%esi
mov    %ebx,%eax
sub    %ecx,%eax
add    $0x1,%ebx
jmp    804aa30 <__sprintf_chk@plt+0x1160>
mov    0x806928c,%eax
mov    %eax,(%esp)
call   8050fe0 <__sprintf_chk@plt+0x7710>
test   %eax,%eax
je     804aac2 <__sprintf_chk@plt+0x11f2>
mov    %eax,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049530 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    %ecx,%ebx
xor    %eax,%eax
jmp    804aa8c <__sprintf_chk@plt+0x11bc>
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804a9f6 <__sprintf_chk@plt+0x1126>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8051b80 <__sprintf_chk@plt+0x82b0>
mov    %eax,%esi
jmp    804a9f6 <__sprintf_chk@plt+0x1126>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
movl   $0x0,0x34(%esp)
mov    %eax,0x1c(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x24(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
movzbl 0x8069a84,%eax
mov    %al,0x2b(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804ab56 <__sprintf_chk@plt+0x1286>
mov    0x8069a90,%ebp
test   %ebp,%ebp
jne    804ae78 <__sprintf_chk@plt+0x15a8>
mov    0x24(%esp),%esi
mov    0x1c(%esp),%edi
test   %esi,%esi
cmove  0x1c(%esp),%esi
add    0x74(%esp),%edi
mov    %esi,0x30(%esp)
cmp    %edi,%esi
ja     804ac20 <__sprintf_chk@plt+0x1350>
lea    0x38(%esp),%eax
sub    %esi,%edi
mov    %eax,0xc(%esp)
mov    0x806928c,%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80514d0 <__sprintf_chk@plt+0x7c00>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     804ac20 <__sprintf_chk@plt+0x1350>
mov    0x40(%esp),%ebp
lea    (%esi,%edi,1),%ebx
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804abd8 <__sprintf_chk@plt+0x1308>
mov    0x1c(%esp),%eax
add    0x74(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   8051e80 <__sprintf_chk@plt+0x85b0>
test   %al,%al
jne    804ae08 <__sprintf_chk@plt+0x1538>
mov    0x24(%esp),%edi
test   %edi,%edi
je     804abee <__sprintf_chk@plt+0x131e>
mov    0x8069a88,%esi
test   %esi,%esi
je     804aca0 <__sprintf_chk@plt+0x13d0>
mov    0x8069a8c,%ecx
test   %ecx,%ecx
je     804ad48 <__sprintf_chk@plt+0x1478>
cmp    %ebx,0x1c(%esp)
jae    804ac30 <__sprintf_chk@plt+0x1360>
movzbl 0x2b(%esp),%eax
cmp    %al,-0x1(%ebx)
je     804ac30 <__sprintf_chk@plt+0x1360>
mov    0x1c(%esp),%edi
add    0x74(%esp),%edi
lea    0x1(%ebx),%esi
cmp    %edi,%esi
jbe    804ab75 <__sprintf_chk@plt+0x12a5>
nop
mov    $0xffffffff,%eax
jmp    804ad2b <__sprintf_chk@plt+0x145b>
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
lea    (%ebx,%ebp,1),%eax
mov    0x1c(%esp),%ecx
lea    (%ecx,%edx,1),%edi
cmp    %edi,%eax
jae    804ac4b <__sprintf_chk@plt+0x137b>
movzbl 0x2b(%esp),%ecx
cmp    %cl,(%eax)
jne    804ac14 <__sprintf_chk@plt+0x1344>
mov    %edx,%esi
mov    0x1c(%esp),%edi
mov    %esi,%ecx
sub    %ebp,%ecx
mov    %eax,(%esp)
mov    %edi,%edx
sub    %ebx,%edx
add    %ecx,%edx
mov    %edx,0x8(%esp)
movsbl 0x2b(%esp),%edx
lea    (%edi,%esi,1),%ebp
mov    %edx,0x4(%esp)
call   80496f0 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %ebp,%edx
cmp    %ebx,%edi
jae    804ac9c <__sprintf_chk@plt+0x13cc>
movzbl 0x2b(%esp),%ecx
cmp    %cl,-0x1(%ebx)
je     804ac9c <__sprintf_chk@plt+0x13cc>
mov    %edi,%eax
jmp    804ac95 <__sprintf_chk@plt+0x13c5>
lea    0x0(%esi),%esi
cmp    %cl,-0x1(%ebx)
je     804ac9c <__sprintf_chk@plt+0x13cc>
sub    $0x1,%ebx
cmp    %eax,%ebx
jne    804ac90 <__sprintf_chk@plt+0x13c0>
sub    %ebx,%edx
mov    %edx,%ebp
mov    0x34(%esp),%ecx
mov    %ebx,%eax
sub    0x1c(%esp),%eax
test   %ecx,%ecx
mov    %ecx,%edi
mov    %ecx,0x1c(%esp)
je     804ad25 <__sprintf_chk@plt+0x1455>
test   %eax,%eax
je     804aeae <__sprintf_chk@plt+0x15de>
mov    %ebp,0x20(%esp)
xor    %ecx,%ecx
xor    %ebx,%ebx
xor    %edx,%edx
mov    %edi,%ebp
movsbl 0x0(%ebp,%edx,1),%esi
mov    %esi,%edi
sar    $0x1f,%edi
add    %esi,%ecx
adc    %edi,%ebx
add    $0x1,%edx
cmp    %edx,%eax
jne    804acc8 <__sprintf_chk@plt+0x13f8>
mov    0x20(%esp),%ebp
mov    %ecx,0x20(%esp)
lea    (%eax,%ebp,1),%ecx
cmp    %ecx,%eax
jae    804aebb <__sprintf_chk@plt+0x15eb>
mov    0x1c(%esp),%ebx
mov    %ebp,0x1c(%esp)
add    %ebx,%ecx
mov    %ecx,%edi
xor    %ecx,%ecx
lea    (%ebx,%eax,1),%edx
mov    %edi,%ebp
xor    %ebx,%ebx
lea    0x0(%esi),%esi
movsbl (%edx),%esi
mov    %esi,%edi
sar    $0x1f,%edi
add    %esi,%ecx
adc    %edi,%ebx
add    $0x1,%edx
cmp    %ebp,%edx
jne    804ad08 <__sprintf_chk@plt+0x1438>
mov    0x1c(%esp),%ebp
add    0x20(%esp),%eax
add    %ecx,%ebp
mov    0x2c(%esp),%ecx
mov    %ebp,(%ecx)
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804aedb <__sprintf_chk@plt+0x160b>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8069a88,%edx
test   %edx,%edx
je     804aecf <__sprintf_chk@plt+0x15ff>
mov    %ebx,%esi
jmp    804adb0 <__sprintf_chk@plt+0x14e0>
lea    0x0(%esi),%esi
call   80498b0 <__ctype_b_loc@plt>
movzbl (%esi),%edx
movzbl %dl,%esi
mov    (%eax),%eax
testb  $0x8,(%eax,%esi,2)
jne    804ad78 <__sprintf_chk@plt+0x14a8>
cmp    $0x5f,%dl
jne    804adef <__sprintf_chk@plt+0x151f>
test   %ebp,%ebp
je     804ae68 <__sprintf_chk@plt+0x1598>
lea    0x38(%esp),%eax
sub    $0x1,%ebp
mov    %eax,0xc(%esp)
mov    0x806928c,%eax
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80514d0 <__sprintf_chk@plt+0x7c00>
cmp    $0xffffffff,%eax
je     804ac0c <__sprintf_chk@plt+0x133c>
mov    0x40(%esp),%ebp
lea    (%ebx,%eax,1),%esi
cmp    0x1c(%esp),%esi
jbe    804add7 <__sprintf_chk@plt+0x1507>
call   80498b0 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
jne    804ac0c <__sprintf_chk@plt+0x133c>
cmp    $0x5f,%dl
je     804ac0c <__sprintf_chk@plt+0x133c>
mov    0x74(%esp),%edi
add    %ebp,%esi
mov    0x1c(%esp),%eax
add    %edi,%eax
cmp    %eax,%esi
mov    %eax,0x20(%esp)
jb     804ad60 <__sprintf_chk@plt+0x1490>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    804aca0 <__sprintf_chk@plt+0x13d0>
lea    (%ebx,%ebp,1),%eax
mov    %edi,%esi
jmp    804ac4d <__sprintf_chk@plt+0x137d>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%ebp
lea    0x44(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x44(%esp)
mov    %ebp,%eax
sub    %esi,%eax
sub    %edi,%eax
add    0x74(%esp),%eax
movl   $0x0,0x48(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8049510 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
jbe    804ac20 <__sprintf_chk@plt+0x1350>
mov    0x30(%esp),%edx
mov    0x74(%esp),%edi
lea    -0x1(%edx,%eax,1),%ebx
add    %ebp,%edi
jmp    804ac14 <__sprintf_chk@plt+0x1344>
lea    0x0(%esi),%esi
mov    0x20(%esp),%edi
jmp    804ac14 <__sprintf_chk@plt+0x1344>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ebx
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8051b80 <__sprintf_chk@plt+0x82b0>
mov    0x24(%esp),%edx
test   %edx,%edx
je     804aec2 <__sprintf_chk@plt+0x15f2>
sub    %ebx,%edx
lea    (%eax,%edx,1),%ecx
mov    %ecx,0x24(%esp)
mov    %eax,0x1c(%esp)
jmp    804ab56 <__sprintf_chk@plt+0x1286>
movl   $0x0,0x20(%esp)
jmp    804ace5 <__sprintf_chk@plt+0x1415>
xor    %ecx,%ecx
jmp    804ad1f <__sprintf_chk@plt+0x144f>
mov    %eax,0x1c(%esp)
mov    %eax,%esi
mov    %eax,%edi
jmp    804ab65 <__sprintf_chk@plt+0x1295>
mov    0x74(%esp),%esi
lea    (%ebx,%ebp,1),%eax
jmp    804ac4d <__sprintf_chk@plt+0x137d>
call   8049420 <__stack_chk_fail@plt>
mov    0x80691b8,%eax
mov    %eax,0x80691b4
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x806937c
ff
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80624f6,0x8069198
08
movl   $0x80624fc,0x8069194
08
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
xor    %eax,%eax
sub    $0x4,%esp
mov    %ecx,(%esp)
movzbl (%esi),%ebx
lea    -0x9(%ebx),%edi
mov    %edi,%ecx
cmp    $0x4,%cl
jbe    804afac <__sprintf_chk@plt+0x16dc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%bl
je     804afac <__sprintf_chk@plt+0x16dc>
test   %bl,%bl
je     804afc3 <__sprintf_chk@plt+0x16f3>
mov    (%esp),%ecx
test   %ecx,%ecx
je     804af56 <__sprintf_chk@plt+0x1686>
mov    %edx,(%ecx,%eax,4)
movzbl (%esi),%ebx
add    $0x1,%eax
jmp    804af7b <__sprintf_chk@plt+0x16ab>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%esi
test   %bl,%bl
je     804afcb <__sprintf_chk@plt+0x16fb>
movzbl %bl,%edi
cmp    $0x9,%edi
je     804af98 <__sprintf_chk@plt+0x16c8>
cmp    $0x20,%edi
je     804af98 <__sprintf_chk@plt+0x16c8>
lea    -0xa(%ebx),%ecx
cmp    $0x3,%cl
jbe    804af98 <__sprintf_chk@plt+0x16c8>
mov    %edx,%ebp
cmp    $0x5c,%bl
lea    0x1(%edx),%edx
mov    %bl,-0x1(%edx)
lea    0x1(%esi),%edi
movzbl 0x1(%esi),%ebx
jne    804af60 <__sprintf_chk@plt+0x1690>
test   %bl,%bl
jne    804afb8 <__sprintf_chk@plt+0x16e8>
mov    %edi,%esi
lea    0x0(%esi),%esi
movb   $0x0,0x1(%ebp)
movzbl (%esi),%ebx
lea    0x2(%ebp),%edx
lea    -0x9(%ebx),%edi
mov    %edi,%ecx
cmp    $0x4,%cl
ja     804af40 <__sprintf_chk@plt+0x1670>
add    $0x1,%esi
jmp    804af2e <__sprintf_chk@plt+0x165e>
lea    0x0(%esi,%eiz,1),%esi
mov    %bl,-0x1(%edx)
add    $0x2,%esi
movzbl (%esi),%ebx
jmp    804af62 <__sprintf_chk@plt+0x1692>
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%edi
jmp    804af93 <__sprintf_chk@plt+0x16c3>
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
test   %eax,%eax
je     804b040 <__sprintf_chk@plt+0x1770>
mov    0x80692a4,%ebx
test   %ebx,%ebx
je     804b070 <__sprintf_chk@plt+0x17a0>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
je     804b03a <__sprintf_chk@plt+0x176a>
mov    0x80624e4,%eax
test   %eax,%eax
je     804b0d0 <__sprintf_chk@plt+0x1800>
movl   $0x5,0x8(%esp)
movl   $0x806291c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x80624dc,%eax
mov    0x80624e4,%edx
mov    %eax,0x8069354
mov    0x80624e0,%eax
test   %edx,%edx
mov    %eax,0x8069350
jne    804b03a <__sprintf_chk@plt+0x176a>
mov    0x80624d8,%eax
mov    %eax,0x80692a4
jmp    804b03a <__sprintf_chk@plt+0x176a>
lea    0x0(%esi),%esi
mov    0x80624d8,%edx
test   %edx,%edx
jne    804b095 <__sprintf_chk@plt+0x17c5>
jmp    804b118 <__sprintf_chk@plt+0x1848>
nop
add    $0x1,%ebx
lea    (%ebx,%ebx,2),%eax
mov    0x80624d8(,%eax,4),%edx
test   %edx,%edx
je     804b118 <__sprintf_chk@plt+0x1848>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    804b080 <__sprintf_chk@plt+0x17b0>
lea    (%ebx,%ebx,2),%eax
shl    $0x2,%eax
mov    0x80624dc(%eax),%edx
mov    0x80624e0(%eax),%eax
mov    %esi,0x80692a4
mov    %edx,0x8069354
mov    %eax,0x8069350
jmp    804b03a <__sprintf_chk@plt+0x176a>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x8069528,%esi
movl   $0x80628f4,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
jmp    804b03a <__sprintf_chk@plt+0x176a>
nop
movl   $0x5,0x8(%esp)
movl   $0x8062500,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
jmp    804b03a <__sprintf_chk@plt+0x176a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x806935c,%eax
test   %eax,%eax
je     804b170 <__sprintf_chk@plt+0x18a0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8052550 <__sprintf_chk@plt+0x8c80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x806933c,%ebx
mov    %eax,0xc(%esp)
neg    %eax
mov    0x8069348,%ebp
mov    %eax,0x1c(%esp)
mov    0x8069338,%esi
add    %ebx,%eax
mov    %eax,0x10(%esp)
mov    0x806934c,%eax
lea    (%eax,%ebp,1),%edi
sub    %ebx,%edi
cmp    %esi,%edi
mov    %eax,0x18(%esp)
jb     804b218 <__sprintf_chk@plt+0x1948>
mov    0x10(%esp),%eax
mov    %eax,0x8069340
mov    %edi,%eax
xor    %edx,%edx
div    %esi
mov    0x8069344,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
sub    %edx,%edi
mov    %edi,0x8(%esp)
call   80593c0 <__sprintf_chk@plt+0xfaf0>
test   %eax,%eax
js     804b308 <__sprintf_chk@plt+0x1a38>
mov    %eax,%edi
mov    %eax,%esi
mov    %eax,%edx
mov    $0x1,%eax
sar    $0x1f,%edi
add    %esi,0x8069330
adc    %edi,0x8069334
add    %edx,%ebx
mov    %ebx,0x806933c
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
lea    0x1(%esi),%ebx
add    %esi,%eax
mov    %eax,0x14(%esp)
lea    -0x1(%ebp),%eax
sub    %esi,%eax
cmp    %eax,0x14(%esp)
mov    %eax,%ecx
jbe    804b26f <__sprintf_chk@plt+0x199f>
lea    (%eax,%eax,1),%ecx
cmp    %ecx,%eax
ja     804b3c3 <__sprintf_chk@plt+0x1af3>
lea    0x1(%esi),%ebx
mov    %ecx,%eax
add    %ebx,%eax
jb     804b3c3 <__sprintf_chk@plt+0x1af3>
mov    0x14(%esp),%edi
jmp    804b267 <__sprintf_chk@plt+0x1997>
lea    (%ecx,%ecx,1),%eax
cmp    %ecx,%eax
jb     804b3c3 <__sprintf_chk@plt+0x1af3>
mov    %eax,%ecx
add    %ebx,%ecx
jb     804b3c3 <__sprintf_chk@plt+0x1af3>
mov    %eax,%ecx
cmp    %ecx,%edi
ja     804b250 <__sprintf_chk@plt+0x1980>
mov    %edi,0x14(%esp)
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804b336 <__sprintf_chk@plt+0x1a66>
add    %ebx,%ecx
cmp    %ecx,%ebp
jb     804b315 <__sprintf_chk@plt+0x1a45>
mov    0x18(%esp),%edi
mov    %edi,%ebp
mov    0xc(%esp),%eax
xor    %edx,%edx
lea    0x1(%eax),%ecx
lea    (%edi,%ecx,1),%ebx
mov    %ebx,%eax
div    %esi
test   %edx,%edx
je     804b2ad <__sprintf_chk@plt+0x19dd>
add    %esi,%ecx
sub    %edx,%ecx
lea    (%edi,%ecx,1),%ebx
mov    0xc(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
sub    0x18(%esp),%eax
add    %ebx,%edx
mov    %edx,(%esp)
mov    %edx,0x8069340
add    %ebp,%eax
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
call   8049380 <memmove@plt>
movzbl 0x8069a84,%eax
cmp    %ebp,%edi
mov    0xc(%esp),%edx
mov    %al,-0x1(%edx)
je     804b2fb <__sprintf_chk@plt+0x1a2b>
mov    %ebp,(%esp)
call   8049390 <free@plt>
mov    %edi,0x806934c
add    0x8069348,%edi
sub    %ebx,%edi
jmp    804b1c4 <__sprintf_chk@plt+0x18f4>
xor    %edx,%edx
xor    %esi,%esi
xor    %edi,%edi
xor    %eax,%eax
jmp    804b1f7 <__sprintf_chk@plt+0x1927>
mov    %ecx,(%esp)
mov    %ecx,0x8069348
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x8069338,%esi
mov    0x806934c,%ebp
mov    %eax,%edi
jmp    804b292 <__sprintf_chk@plt+0x19c2>
mov    0x2c(%edx),%eax
mov    0x30(%edx),%edx
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
mov    0x8069330,%eax
sub    %eax,0x28(%esp)
mov    0xc(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x8069334,%edx
sbb    %edx,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
mov    0x24(%esp),%edi
cmp    %edi,%edx
jl     804b393 <__sprintf_chk@plt+0x1ac3>
jg     804b282 <__sprintf_chk@plt+0x19b2>
mov    0x20(%esp),%eax
cmp    %eax,0x28(%esp)
ja     804b282 <__sprintf_chk@plt+0x19b2>
mov    0x2c(%esp),%eax
test   %eax,%eax
js     804b282 <__sprintf_chk@plt+0x19b2>
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
test   %eax,%eax
jne    804b282 <__sprintf_chk@plt+0x19b2>
cmp    %edx,0x14(%esp)
ja     804b282 <__sprintf_chk@plt+0x19b2>
cmp    %edx,%ecx
cmova  %edx,%ecx
jmp    804b282 <__sprintf_chk@plt+0x19b2>
call   805b650 <__sprintf_chk@plt+0x11d80>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x24,%esp
movl   $0x8062531,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   805b770 <__sprintf_chk@plt+0x11ea0>
cmp    $0x1,%eax
ja     804b410 <__sprintf_chk@plt+0x1b40>
mov    0x4(%ebx),%eax
test   %eax,%eax
js     804b410 <__sprintf_chk@plt+0x1b40>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
movl   $0x5,0x8(%esp)
movl   $0x806293c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x8062560,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   8049530 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
lea    0x6c(%esp),%edi
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
jmp    804b494 <__sprintf_chk@plt+0x1bc4>
lea    0x0(%esi),%esi
mov    0x18(%esp),%ebp
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   8062210 <fts_children+0x2f70>
add    $0x30,%eax
mov    %al,(%edi)
lea    -0x1(%ebp),%eax
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x18(%esp)
call   80620e0 <fts_children+0x2e40>
mov    %edx,%ecx
mov    %eax,%esi
or     %eax,%ecx
mov    %edx,%ebx
jne    804b490 <__sprintf_chk@plt+0x1bc0>
mov    0x8069374,%ecx
test   %ecx,%ecx
je     804b515 <__sprintf_chk@plt+0x1c45>
cmp    $0x1,%ebp
jle    804b515 <__sprintf_chk@plt+0x1c45>
mov    0x18(%esp),%eax
mov    %edi,%ecx
sub    %ebp,%edi
movl   $0x20,0x4(%esp)
add    $0x1,%edi
sub    %eax,%ecx
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   80496a0 <memset@plt>
mov    0x806937c,%edx
lea    0x6c(%esp),%eax
sub    %edi,%eax
test   %edx,%edx
jne    804b580 <__sprintf_chk@plt+0x1cb0>
mov    0x8069280,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049700 <fwrite_unlocked@plt>
mov    0x806937c,%eax
test   %eax,%eax
jne    804b568 <__sprintf_chk@plt+0x1c98>
mov    0x6c(%esp),%eax
xor    %gs:0x14,%eax
jne    804b5b4 <__sprintf_chk@plt+0x1ce4>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804b54c <__sprintf_chk@plt+0x1c7c>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804b54c <__sprintf_chk@plt+0x1c7c>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804b598 <__sprintf_chk@plt+0x1cc8>
lea    0x6c(%esp),%eax
sub    %edi,%eax
jmp    804b525 <__sprintf_chk@plt+0x1c55>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
lea    0x6c(%esp),%eax
sub    %edi,%eax
jmp    804b525 <__sprintf_chk@plt+0x1c55>
call   8049420 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8069310,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x24(%esp)
test   %ecx,%ecx
jne    804b7b8 <__sprintf_chk@plt+0x1ee8>
mov    0x806930c,%ebx
test   %ebx,%ebx
je     804b640 <__sprintf_chk@plt+0x1d70>
mov    0x80692cc,%eax
cmp    0x24(%esp),%eax
jb     804b828 <__sprintf_chk@plt+0x1f58>
test   %edi,%edi
jne    804b95b <__sprintf_chk@plt+0x208b>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x80691ac,%eax
mov    $0x4,%ecx
mov    0x80692c4,%edx
mov    %eax,(%esp)
mov    0x80692c0,%eax
call   804b460 <__sprintf_chk@plt+0x1b90>
mov    0x8069308,%edi
test   %edi,%edi
je     804b709 <__sprintf_chk@plt+0x1e39>
mov    $0x1,%edi
jmp    804b653 <__sprintf_chk@plt+0x1d83>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8069308,%ebx
test   %ebx,%ebx
je     804b700 <__sprintf_chk@plt+0x1e30>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x18(%esp),%ebx
sub    0x8069340,%ebx
mov    0x80692d0,%eax
mov    0x80692d4,%edx
mov    %ebx,0x18(%esp)
sar    $0x1f,%ebx
add    %eax,0x18(%esp)
mov    %ebx,0x1c(%esp)
adc    %edx,0x1c(%esp)
cmp    0x1c(%esp),%edx
jae    804b770 <__sprintf_chk@plt+0x1ea0>
test   %edi,%edi
jne    804b9c0 <__sprintf_chk@plt+0x20f0>
mov    %ebp,%ebx
mov    0x80691a8,%eax
mov    $0x6,%ecx
mov    0x1c(%esp),%edx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   804b460 <__sprintf_chk@plt+0x1b90>
mov    0x8069374,%edi
test   %edi,%edi
jne    804b718 <__sprintf_chk@plt+0x1e48>
mov    0x806937c,%ecx
mov    0x80691a4,%eax
test   %ecx,%ecx
jne    804b750 <__sprintf_chk@plt+0x1e80>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804bb08 <__sprintf_chk@plt+0x2238>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %bl,(%edx)
mov    0x806937c,%edx
mov    0x80691a4,%eax
test   %edx,%edx
je     804b6f8 <__sprintf_chk@plt+0x1e28>
cmpb   $0x0,(%eax)
jne    804ba58 <__sprintf_chk@plt+0x2188>
nop
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
je     804b6f8 <__sprintf_chk@plt+0x1e28>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x8069374,%edi
mov    %ebp,%ebx
test   %edi,%edi
je     804b6b3 <__sprintf_chk@plt+0x1de3>
lea    0x0(%esi),%esi
mov    0x8069280,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806252f,(%esp)
mov    %eax,0xc(%esp)
call   8049700 <fwrite_unlocked@plt>
mov    0x806937c,%ecx
mov    0x80691a4,%eax
test   %ecx,%ecx
je     804b6c6 <__sprintf_chk@plt+0x1df6>
cmpb   $0x0,(%eax)
je     804b6c6 <__sprintf_chk@plt+0x1df6>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804b6c6 <__sprintf_chk@plt+0x1df6>
nop
jbe    804ba20 <__sprintf_chk@plt+0x2150>
movl   $0x5,0x8(%esp)
movl   $0x8062513,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
test   %edi,%edi
je     804b68d <__sprintf_chk@plt+0x1dbd>
jmp    804b9c0 <__sprintf_chk@plt+0x20f0>
nop
mov    0x806937c,%edx
mov    0x80691b0,%eax
test   %edx,%edx
jne    804ba70 <__sprintf_chk@plt+0x21a0>
mov    0x8069280,%eax
mov    %eax,0x4(%esp)
mov    0x8069368,%eax
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    0x806937c,%edi
mov    0x80691b0,%eax
test   %edi,%edi
jne    804ba38 <__sprintf_chk@plt+0x2168>
mov    0x806931c,%esi
mov    $0x1,%edi
test   %esi,%esi
jne    804b5e1 <__sprintf_chk@plt+0x1d11>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804bb1e <__sprintf_chk@plt+0x224e>
lea    0x1(%edx),%ecx
xor    %edi,%edi
mov    %ecx,0x14(%eax)
movb   $0x0,(%edx)
jmp    804b5e1 <__sprintf_chk@plt+0x1d11>
mov    0x18(%esp),%ebx
cmp    %ebx,%eax
jae    804baff <__sprintf_chk@plt+0x222f>
movzbl 0x8069a84,%esi
mov    %edi,0x18(%esp)
mov    %esi,%ecx
xor    %esi,%esi
mov    %ecx,%edi
jmp    804b852 <__sprintf_chk@plt+0x1f82>
nop
add    $0x1,%eax
add    $0x1,%esi
cmp    %eax,%ebx
jbe    804b86a <__sprintf_chk@plt+0x1f9a>
mov    %ebx,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80496f0 <memchr@plt>
test   %eax,%eax
jne    804b848 <__sprintf_chk@plt+0x1f78>
mov    0x18(%esp),%edi
mov    %esi,%ecx
mov    %ebx,0x18(%esp)
xor    %ebx,%ebx
mov    0x80692c0,%eax
mov    0x80692c4,%edx
add    %eax,%ecx
adc    %edx,%ebx
mov    %edx,0x2c(%esp)
mov    %ecx,%edx
mov    %ebx,%ecx
cmp    %ebx,0x2c(%esp)
mov    %eax,0x28(%esp)
jb     804b8e1 <__sprintf_chk@plt+0x2011>
jbe    804ba90 <__sprintf_chk@plt+0x21c0>
movl   $0x5,0x8(%esp)
movl   $0x8062513,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    0x18(%esp),%eax
mov    %edx,%ebx
mov    %ecx,%esi
add    $0x1,%ebx
adc    $0x0,%esi
cmp    %ecx,%esi
mov    %edx,0x80692c0
mov    %ecx,0x80692c4
mov    %eax,0x80692cc
ja     804b93e <__sprintf_chk@plt+0x206e>
jae    804baa8 <__sprintf_chk@plt+0x21d8>
movl   $0x5,0x8(%esp)
movl   $0x8062513,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
mov    0x24(%esp),%eax
test   %edi,%edi
mov    %ebx,0x80692c0
mov    %esi,0x80692c4
mov    %eax,0x80692cc
je     804b602 <__sprintf_chk@plt+0x1d32>
mov    0x806937c,%ecx
mov    0x80691a4,%eax
test   %ecx,%ecx
jne    804bae0 <__sprintf_chk@plt+0x2210>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804bb36 <__sprintf_chk@plt+0x2266>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %ebp,%eax
mov    %al,(%edx)
movsbl %al,%esi
mov    0x806937c,%edx
mov    0x80691a4,%eax
test   %edx,%edx
je     804b607 <__sprintf_chk@plt+0x1d37>
cmpb   $0x0,(%eax)
je     804b607 <__sprintf_chk@plt+0x1d37>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804b607 <__sprintf_chk@plt+0x1d37>
lea    0x0(%esi),%esi
mov    0x806937c,%ecx
mov    %ebp,%ebx
mov    0x80691a4,%eax
test   %ecx,%ecx
jne    804bab8 <__sprintf_chk@plt+0x21e8>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804bb51 <__sprintf_chk@plt+0x2281>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %ebp,%eax
mov    %al,(%edx)
mov    0x806937c,%edx
mov    0x80691a4,%eax
test   %edx,%edx
je     804b68d <__sprintf_chk@plt+0x1dbd>
cmpb   $0x0,(%eax)
je     804b68d <__sprintf_chk@plt+0x1dbd>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804b68f <__sprintf_chk@plt+0x1dbf>
xchg   %ax,%ax
cmp    0x18(%esp),%eax
jbe    804b685 <__sprintf_chk@plt+0x1db5>
lea    0x0(%esi),%esi
jmp    804b776 <__sprintf_chk@plt+0x1ea6>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
je     804b7f4 <__sprintf_chk@plt+0x1f24>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804b7f4 <__sprintf_chk@plt+0x1f24>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804b6f8 <__sprintf_chk@plt+0x1e28>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
je     804b7cb <__sprintf_chk@plt+0x1efb>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804b7cb <__sprintf_chk@plt+0x1efb>
nop
cmp    %edx,0x28(%esp)
jbe    804b8e1 <__sprintf_chk@plt+0x2011>
lea    0x0(%esi),%esi
jmp    804b89d <__sprintf_chk@plt+0x1fcd>
lea    0x0(%esi),%esi
cmp    %edx,%ebx
jae    804b93e <__sprintf_chk@plt+0x206e>
jmp    804b90a <__sprintf_chk@plt+0x203a>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
je     804b9d5 <__sprintf_chk@plt+0x2105>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804b9d5 <__sprintf_chk@plt+0x2105>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
je     804b96e <__sprintf_chk@plt+0x209e>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804b96e <__sprintf_chk@plt+0x209e>
xor    %ecx,%ecx
xor    %ebx,%ebx
jmp    804b876 <__sprintf_chk@plt+0x1fa6>
mov    %esi,%ecx
movzbl %cl,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804b6df <__sprintf_chk@plt+0x1e0f>
movl   $0x0,0x4(%esp)
xor    %di,%di
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804b5e1 <__sprintf_chk@plt+0x1d11>
mov    %ebp,%ecx
movsbl %cl,%esi
mov    %esi,%ecx
movzbl %cl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804b98c <__sprintf_chk@plt+0x20bc>
mov    %esi,%ecx
movzbl %cl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804b9f0 <__sprintf_chk@plt+0x2120>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
mov    0x8069378,%edx
test   %edx,%edx
je     804be70 <__sprintf_chk@plt+0x25a0>
cmp    $0x3a,%esi
sete   %al
mov    %eax,%esi
mov    0x8069314,%eax
mov    %esi,%ecx
test   %eax,%eax
setne  %al
xor    %eax,%ecx
movzbl %cl,%edi
mov    0x806937c,%ecx
test   %ecx,%ecx
mov    %ecx,0x10(%esp)
je     804be58 <__sprintf_chk@plt+0x2588>
shr    $0x1f,%ecx
test   %al,%al
cmovne %ecx,%eax
mov    %esi,%ecx
cmp    %cl,%al
mov    0x80691a0,%eax
cmove  0x806919c,%eax
test   %cl,%cl
mov    %eax,0x14(%esp)
mov    0x80691b8,%eax
cmove  0x80691b4,%eax
mov    %eax,0x1c(%esp)
test   %edx,%edx
je     804bce8 <__sprintf_chk@plt+0x2418>
test   %edi,%edi
je     804bce8 <__sprintf_chk@plt+0x2418>
cmp    %ebx,%ebp
jae    804bfb8 <__sprintf_chk@plt+0x26e8>
mov    %ebx,%eax
mov    %ebp,%esi
sub    %ebp,%eax
mov    %eax,0x18(%esp)
movl   $0x0,0x10(%esp)
jmp    804bc34 <__sprintf_chk@plt+0x2364>
mov    0x10(%esp),%eax
movl   $0x1,0x2c(%esp)
test   %eax,%eax
je     804bf80 <__sprintf_chk@plt+0x26b0>
mov    $0x1,%edx
lea    (%edi,%edx,1),%esi
cmp    %esi,%ebx
jbe    804bf60 <__sprintf_chk@plt+0x2690>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x8069350
cmp    $0xffffffff,%eax
je     804bf60 <__sprintf_chk@plt+0x2690>
lea    0x0(%ebp,%eax,1),%edi
cmp    %edi,%ebx
je     804bf60 <__sprintf_chk@plt+0x2690>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804bc10 <__sprintf_chk@plt+0x2340>
mov    0x8069378,%ecx
test   %ecx,%ecx
je     804bea0 <__sprintf_chk@plt+0x25d0>
cmpl   $0x1,0x8069314
mov    %ebx,%edx
mov    %edi,%eax
sbb    %ecx,%ecx
and    $0xd,%ecx
add    $0x2d,%ecx
call   804b5c0 <__sprintf_chk@plt+0x1cf0>
mov    0x806937c,%edx
mov    0x2c(%esp),%eax
test   %edx,%edx
jne    804bef9 <__sprintf_chk@plt+0x2629>
mov    0x8069280,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049700 <fwrite_unlocked@plt>
mov    0x806937c,%eax
test   %eax,%eax
jne    804bf40 <__sprintf_chk@plt+0x2670>
mov    0x8069378,%esi
test   %esi,%esi
jne    804bf20 <__sprintf_chk@plt+0x2650>
mov    0x2c(%esp),%edx
jmp    804bc29 <__sprintf_chk@plt+0x2359>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804bdd0 <__sprintf_chk@plt+0x2500>
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804be88 <__sprintf_chk@plt+0x25b8>
test   %edi,%edi
jne    804bfbe <__sprintf_chk@plt+0x26ee>
test   %edx,%edx
je     804bd48 <__sprintf_chk@plt+0x2478>
mov    0x8069280,%eax
testb  $0x20,(%eax)
jne    804be0f <__sprintf_chk@plt+0x253f>
mov    0x80692dc,%eax
mov    %ebx,0x80692c8
test   %eax,%eax
je     804bd39 <__sprintf_chk@plt+0x2469>
mov    0x8069280,%eax
mov    %eax,(%esp)
call   8049440 <fflush_unlocked@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804bdd8 <__sprintf_chk@plt+0x2508>
xor    %eax,%eax
cmp    %ebp,%ebx
jbe    804bd7c <__sprintf_chk@plt+0x24ac>
movsbl -0x1(%ebx),%esi
mov    $0xffffffff,%edx
movzbl 0x8069a84,%ecx
cmp    %ecx,%esi
je     804bfe5 <__sprintf_chk@plt+0x2715>
cmpb   $0xd,(%ebx,%edx,1)
cmove  %edx,%eax
add    %ebx,%eax
sub    %ebp,%eax
mov    %eax,%esi
je     804bdd8 <__sprintf_chk@plt+0x2508>
mov    0x14(%esp),%edi
mov    0x8069198,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
mov    0x8069280,%eax
mov    %ebp,(%esp)
add    %esi,%ebp
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8049700 <fwrite_unlocked@plt>
cmpb   $0x0,(%edi)
je     804bdca <__sprintf_chk@plt+0x24fa>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
mov    0x8069378,%edx
test   %edx,%edx
jne    804bd0f <__sprintf_chk@plt+0x243f>
cmp    %ebp,%ebx
jbe    804bd0f <__sprintf_chk@plt+0x243f>
mov    0x8069280,%eax
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %ebp,%eax
mov    %eax,0x8(%esp)
call   8049700 <fwrite_unlocked@plt>
mov    0x8069280,%eax
testb  $0x20,(%eax)
je     804bd1d <__sprintf_chk@plt+0x244d>
movl   $0x5,0x8(%esp)
movl   $0x8062532,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x1,0x806935c
00
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
jmp    804bd1d <__sprintf_chk@plt+0x244d>
lea    0x0(%esi),%esi
movl   $0x0,0x1c(%esp)
movl   $0x0,0x14(%esp)
jmp    804bbe4 <__sprintf_chk@plt+0x2314>
lea    0x0(%esi),%esi
mov    %ebx,%edx
call   804b5c0 <__sprintf_chk@plt+0x1cf0>
mov    0x8069378,%edx
jmp    804bb8b <__sprintf_chk@plt+0x22bb>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%esi
cmpb   $0x0,(%esi)
je     804bdd0 <__sprintf_chk@plt+0x2500>
jmp    804bd03 <__sprintf_chk@plt+0x2433>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
cmpb   $0x0,(%eax)
jne    804bf90 <__sprintf_chk@plt+0x26c0>
mov    0x10(%esp),%edx
mov    %edi,%eax
sub    %edx,%eax
test   %edx,%edx
je     804bfa8 <__sprintf_chk@plt+0x26d8>
mov    0x8069280,%edx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8049700 <fwrite_unlocked@plt>
mov    0x806937c,%edx
movl   $0x0,0x10(%esp)
mov    0x2c(%esp),%eax
test   %edx,%edx
je     804bca6 <__sprintf_chk@plt+0x23d6>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804bf13 <__sprintf_chk@plt+0x2643>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
mov    0x2c(%esp),%eax
jmp    804bca6 <__sprintf_chk@plt+0x23d6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8069280,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   80493f0 <fputc_unlocked@plt>
jmp    804bcdf <__sprintf_chk@plt+0x240f>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804bcd1 <__sprintf_chk@plt+0x2401>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804bcd1 <__sprintf_chk@plt+0x2401>
nop
mov    0x8069378,%edx
test   %edx,%edx
jne    804bfb8 <__sprintf_chk@plt+0x26e8>
mov    0x10(%esp),%ecx
test   %ecx,%ecx
je     804bfdd <__sprintf_chk@plt+0x270d>
mov    0x10(%esp),%ebp
jmp    804bd0b <__sprintf_chk@plt+0x243b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x10(%esp)
jmp    804bc24 <__sprintf_chk@plt+0x2354>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804bead <__sprintf_chk@plt+0x25dd>
xchg   %ax,%ax
mov    %edi,%eax
sub    %esi,%eax
mov    %esi,0x10(%esp)
jmp    804bebd <__sprintf_chk@plt+0x25ed>
lea    0x0(%esi),%esi
mov    %ebx,0x10(%esp)
jmp    804bf72 <__sprintf_chk@plt+0x26a2>
test   %edx,%edx
jne    804bbf4 <__sprintf_chk@plt+0x2324>
mov    0x1c(%esp),%edi
cmpb   $0x0,(%edi)
je     804bd4f <__sprintf_chk@plt+0x247f>
cmp    %ebx,%ebp
mov    %ebp,%esi
jb     804bbfc <__sprintf_chk@plt+0x232c>
mov    %esi,0x10(%esp)
xor    %edx,%edx
jmp    804bf72 <__sprintf_chk@plt+0x26a2>
lea    -0x1(%ebx),%eax
cmp    %eax,%ebp
mov    $0xffffffff,%eax
jae    804bd7c <__sprintf_chk@plt+0x24ac>
mov    $0xfe,%dl
jmp    804bd75 <__sprintf_chk@plt+0x24a5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x80692c8,%ebp
test   %ebp,%ebp
je     804c138 <__sprintf_chk@plt+0x2868>
mov    0x80692b4,%edi
mov    0x80692b0,%esi
cmp    $0x0,%edi
jle    804c128 <__sprintf_chk@plt+0x2858>
cmp    %ebp,%ebx
ja     804c06c <__sprintf_chk@plt+0x279c>
jmp    804c104 <__sprintf_chk@plt+0x2834>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    %esi,%edx
mov    $0x2d,%ecx
call   804bb70 <__sprintf_chk@plt+0x22a0>
mov    0x80692b4,%eax
mov    0x80692b0,%edx
cmp    $0x0,%eax
jle    804c110 <__sprintf_chk@plt+0x2840>
mov    0x80692c8,%ebp
cmp    %ebx,%ebp
jae    804c104 <__sprintf_chk@plt+0x2834>
mov    %edx,%esi
mov    %eax,%edi
mov    %ebx,%eax
sub    %ebp,%eax
mov    %eax,0x8(%esp)
movzbl 0x8069a84,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80496f0 <memchr@plt>
add    $0xffffffff,%esi
mov    0x80692bc,%edx
adc    $0xffffffff,%edi
or     0x80692b8,%edx
mov    %esi,0x80692b0
mov    %edi,0x80692b4
lea    0x1(%eax),%esi
jne    804c038 <__sprintf_chk@plt+0x2768>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,%eax
sub    %ebp,%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   *0x8069350
cmp    $0xffffffff,%eax
mov    0x8069314,%eax
setne  %dl
test   %eax,%eax
sete   %al
cmp    %al,%dl
je     804c0f0 <__sprintf_chk@plt+0x2820>
mov    0x80692c8,%eax
jmp    804c03a <__sprintf_chk@plt+0x276a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x80692b0
00
movl   $0x0,0x80692b4
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     804c104 <__sprintf_chk@plt+0x2834>
cmp    $0x0,%edx
ja     804c05a <__sprintf_chk@plt+0x278a>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jl     804c104 <__sprintf_chk@plt+0x2834>
cmp    $0x0,%esi
jbe    804c104 <__sprintf_chk@plt+0x2834>
nop
jmp    804c02c <__sprintf_chk@plt+0x275c>
lea    0x0(%esi),%esi
mov    0x8069340,%ebp
mov    %ebp,0x80692c8
jmp    804c017 <__sprintf_chk@plt+0x2747>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x8069a84,%ebp
mov    %eax,0x28(%esp)
mov    0x8069318,%eax
mov    %edx,0x18(%esp)
mov    %ecx,0x24(%esp)
test   %eax,%eax
jne    804c210 <__sprintf_chk@plt+0x2940>
cmpl   $0x0,0x80692b4
jle    804c416 <__sprintf_chk@plt+0x2b46>
mov    0x28(%esp),%eax
call   804c000 <__sprintf_chk@plt+0x2730>
mov    0x8069318,%eax
test   %eax,%eax
jne    804c210 <__sprintf_chk@plt+0x2940>
mov    0x80692c8,%edx
mov    0x8069304,%edi
test   %edx,%edx
mov    %edx,0x2c(%esp)
cmove  0x8069340,%edx
cmp    $0x0,%edi
mov    %edx,0x20(%esp)
mov    0x8069300,%edx
mov    %edx,0x1c(%esp)
jl     804c451 <__sprintf_chk@plt+0x2b81>
jle    804c446 <__sprintf_chk@plt+0x2b76>
mov    0x28(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,%ecx
jmp    804c1f0 <__sprintf_chk@plt+0x2920>
mov    0x1c(%esp),%ebx
add    $0x1,%eax
adc    $0x0,%edx
mov    %edx,%ebp
xor    %edi,%ebp
xor    %eax,%ebx
or     %ebx,%ebp
je     804c338 <__sprintf_chk@plt+0x2a68>
cmp    %esi,0x20(%esp)
jae    804c1d8 <__sprintf_chk@plt+0x2908>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    %cl,-0x1(%esi)
je     804c1d8 <__sprintf_chk@plt+0x2908>
sub    $0x1,%esi
cmp    %cl,-0x1(%esi)
jne    804c1f8 <__sprintf_chk@plt+0x2928>
jmp    804c1d8 <__sprintf_chk@plt+0x2908>
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
mov    0x24(%esp),%eax
mov    0x28(%esp),%ebx
test   %eax,%eax
je     804c40d <__sprintf_chk@plt+0x2b3d>
cmp    %ebx,0x18(%esp)
jbe    804c43b <__sprintf_chk@plt+0x2b6b>
cmpl   $0x0,0x80692bc
jl     804c43b <__sprintf_chk@plt+0x2b6b>
jle    804c42e <__sprintf_chk@plt+0x2b5e>
mov    %ebp,%eax
xor    %edi,%edi
movsbl %al,%eax
xor    %ebp,%ebp
mov    %edi,%esi
mov    %ebp,%edi
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   80496f0 <memchr@plt>
lea    0x1(%eax),%ebp
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804c318 <__sprintf_chk@plt+0x2a48>
add    $0x1,%esi
adc    $0x0,%edi
cmp    %ebp,0x18(%esp)
jbe    804c2a0 <__sprintf_chk@plt+0x29d0>
cmp    %edi,0x80692bc
jl     804c2a0 <__sprintf_chk@plt+0x29d0>
jg     804c310 <__sprintf_chk@plt+0x2a40>
cmp    %esi,0x80692b8
ja     804c310 <__sprintf_chk@plt+0x2a40>
nop
mov    %esi,%eax
mov    %edi,%edx
mov    %ebp,%esi
mov    %eax,%edi
mov    %edx,%ebp
mov    0x24(%esp),%eax
mov    0x806933c,%ecx
mov    0x8069334,%edx
mov    %edi,(%eax)
mov    %ebp,0x4(%eax)
mov    0x8069330,%eax
sub    %esi,%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,0x8069328
mov    %edx,0x806932c
mov    0x1c(%esp),%edx
test   %edx,%edx
jne    804c40d <__sprintf_chk@plt+0x2b3d>
mov    0x80692f8,%eax
mov    0x80692fc,%edx
mov    %eax,0x80692b0
mov    %edx,0x80692b4
movl   $0x1,0x80692a0
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%ebx
jmp    804c258 <__sprintf_chk@plt+0x2988>
nop
mov    %ebx,%eax
mov    $0x3a,%ecx
mov    %ebp,%edx
call   804bb70 <__sprintf_chk@plt+0x22a0>
mov    0x8069318,%eax
mov    %eax,0x1c(%esp)
jmp    804c281 <__sprintf_chk@plt+0x29b1>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%ebp
mov    0x80692a0,%ebx
test   %ebx,%ebx
je     804c3a6 <__sprintf_chk@plt+0x2ad6>
cmp    0x2c(%esp),%esi
je     804c3a6 <__sprintf_chk@plt+0x2ad6>
mov    0x80691bc,%eax
test   %eax,%eax
je     804c3a6 <__sprintf_chk@plt+0x2ad6>
mov    0x806937c,%ecx
mov    0x80691a4,%edx
test   %ecx,%ecx
jne    804c4b4 <__sprintf_chk@plt+0x2be4>
mov    0x8069280,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    0x806937c,%edx
mov    0x80691a4,%eax
test   %edx,%edx
jne    804c499 <__sprintf_chk@plt+0x2bc9>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804c4d8 <__sprintf_chk@plt+0x2c08>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
cmp    0x28(%esp),%esi
jae    804c4ed <__sprintf_chk@plt+0x2c1d>
mov    %ebp,%eax
mov    0x28(%esp),%ebp
movsbl %al,%edi
mov    %al,0x1c(%esp)
jmp    804c3c2 <__sprintf_chk@plt+0x2af2>
nop
mov    %ebx,%esi
mov    %ebp,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   80496f0 <memchr@plt>
mov    $0x2d,%ecx
lea    0x1(%eax),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804bb70 <__sprintf_chk@plt+0x22a0>
cmp    %ebx,%ebp
ja     804c3c0 <__sprintf_chk@plt+0x2af0>
movzbl 0x1c(%esp),%ebp
mov    0x8069318,%eax
mov    %eax,0x1c(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
jne    804c224 <__sprintf_chk@plt+0x2954>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     804c470 <__sprintf_chk@plt+0x2ba0>
xor    %eax,%eax
xor    %edx,%edx
jmp    804c2f1 <__sprintf_chk@plt+0x2a21>
jl     804c196 <__sprintf_chk@plt+0x28c6>
cmpl   $0x0,0x80692b0
ja     804c184 <__sprintf_chk@plt+0x28b4>
jmp    804c196 <__sprintf_chk@plt+0x28c6>
cmpl   $0x0,0x80692b8
ja     804c241 <__sprintf_chk@plt+0x2971>
mov    %ebx,%esi
xor    %edi,%edi
xor    %ebp,%ebp
jmp    804c2aa <__sprintf_chk@plt+0x29da>
cmpl   $0x0,0x1c(%esp)
ja     804c1cc <__sprintf_chk@plt+0x28fc>
mov    0x1c(%esp),%edx
or     %edi,%edx
jne    804c467 <__sprintf_chk@plt+0x2b97>
mov    0x80692fc,%edx
or     0x80692f8,%edx
je     804c490 <__sprintf_chk@plt+0x2bc0>
mov    0x28(%esp),%esi
jmp    804c33a <__sprintf_chk@plt+0x2a6a>
mov    0x28(%esp),%eax
mov    $0x3a,%ecx
mov    0x18(%esp),%edx
call   804bb70 <__sprintf_chk@plt+0x22a0>
mov    0x8069318,%eax
mov    %eax,0x1c(%esp)
jmp    804c2da <__sprintf_chk@plt+0x2a0a>
mov    0x28(%esp),%ebx
jmp    804c3f5 <__sprintf_chk@plt+0x2b25>
cmpb   $0x0,(%eax)
je     804c38c <__sprintf_chk@plt+0x2abc>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804c38c <__sprintf_chk@plt+0x2abc>
cmpb   $0x0,(%edx)
je     804c367 <__sprintf_chk@plt+0x2a97>
mov    0x8069198,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
mov    0x80691bc,%eax
jmp    804c367 <__sprintf_chk@plt+0x2a97>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804c3a6 <__sprintf_chk@plt+0x2ad6>
mov    %esi,%ebx
mov    0x8069318,%eax
jmp    804c3f5 <__sprintf_chk@plt+0x2b25>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   80494e0 <__ctype_get_mb_cur_max@plt>
sub    %edi,%ebp
cmp    $0x1,%eax
je     804c5d0 <__sprintf_chk@plt+0x2d00>
mov    %edi,%eax
mov    %eax,%esi
mov    0x8069a90,%eax
lea    (%edi,%ebp,1),%edi
test   %eax,%eax
jne    804c57f <__sprintf_chk@plt+0x2caf>
jmp    804c5d0 <__sprintf_chk@plt+0x2d00>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ebp
mov    %ebp,%ebx
sub    %esi,%ebx
lea    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   *0x8069350
cmp    $0xffffffff,%eax
jne    804c8c8 <__sprintf_chk@plt+0x2ff8>
mov    %ebp,%esi
cmp    %edi,%esi
jae    804c5a8 <__sprintf_chk@plt+0x2cd8>
movzbl 0x8069a84,%eax
mov    %edi,%ebx
sub    %esi,%ebx
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80496f0 <memchr@plt>
test   %eax,%eax
jne    804c550 <__sprintf_chk@plt+0x2c80>
mov    %edi,%ebp
jmp    804c557 <__sprintf_chk@plt+0x2c87>
xchg   %ax,%ax
mov    0x8069314,%eax
test   %eax,%eax
je     804c5c0 <__sprintf_chk@plt+0x2cf0>
mov    0x10(%esp),%eax
cmp    %eax,0x14(%esp)
ja     804c95b <__sprintf_chk@plt+0x308b>
nop
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   *0x8069350
cmp    $0xffffffff,%eax
je     804c5a8 <__sprintf_chk@plt+0x2cd8>
mov    0x10(%esp),%ecx
lea    (%ecx,%eax,1),%edi
mov    0x34(%esp),%eax
add    %edi,%eax
cmp    0x14(%esp),%edi
mov    %eax,0x18(%esp)
je     804c5a8 <__sprintf_chk@plt+0x2cd8>
mov    0x8069314,%eax
test   %eax,%eax
je     804c638 <__sprintf_chk@plt+0x2d68>
cmp    %edi,0x10(%esp)
jb     804c790 <__sprintf_chk@plt+0x2ec0>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ebp
mov    %eax,0x10(%esp)
mov    %eax,%edi
jmp    804c528 <__sprintf_chk@plt+0x2c58>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8069318,%eax
movzbl 0x8069a84,%edx
test   %eax,%eax
jne    804c6f0 <__sprintf_chk@plt+0x2e20>
cmpl   $0x0,0x80692b4
jle    804c8d3 <__sprintf_chk@plt+0x3003>
mov    %edi,%eax
mov    %edx,0x10(%esp)
call   804c000 <__sprintf_chk@plt+0x2730>
mov    0x8069318,%eax
mov    0x10(%esp),%edx
test   %eax,%eax
jne    804c6f0 <__sprintf_chk@plt+0x2e20>
mov    0x80692c8,%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
cmove  0x8069340,%eax
mov    %eax,0x1c(%esp)
mov    0x8069300,%eax
mov    %eax,0x10(%esp)
mov    0x8069304,%eax
cmp    $0x0,%eax
jl     804c8f6 <__sprintf_chk@plt+0x3026>
jle    804c8eb <__sprintf_chk@plt+0x301b>
mov    %edi,%esi
xor    %ecx,%ecx
xor    %ebx,%ebx
mov    %eax,%ebp
mov    %edi,0x28(%esp)
jmp    804c6d0 <__sprintf_chk@plt+0x2e00>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ebx,%edi
xor    %ebp,%edi
xor    %ecx,%eax
or     %eax,%edi
je     804c7d8 <__sprintf_chk@plt+0x2f08>
cmp    %esi,0x1c(%esp)
jae    804c6b8 <__sprintf_chk@plt+0x2de8>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    -0x1(%esi),%dl
je     804c6b8 <__sprintf_chk@plt+0x2de8>
sub    $0x1,%esi
cmp    -0x1(%esi),%dl
jne    804c6d8 <__sprintf_chk@plt+0x2e08>
jmp    804c6b8 <__sprintf_chk@plt+0x2de8>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %eax,0x80692b0
mov    0x80692b8,%eax
mov    %edx,0x80692b4
mov    0x80692bc,%edx
addl   $0x1,0x20(%esp)
adcl   $0x0,0x24(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %edx,%ecx
or     %eax,%ecx
movl   $0x1,0x80692a0
00
mov    %eax,0x80692b8
mov    %edx,0x80692bc
je     804c743 <__sprintf_chk@plt+0x2e73>
mov    0x80692ac,%edx
test   %edx,%edx
je     804c620 <__sprintf_chk@plt+0x2d50>
mov    0x80692a8,%ecx
test   %ecx,%ecx
jne    804c994 <__sprintf_chk@plt+0x30c4>
mov    0x806933c,%ecx
sub    0x18(%esp),%ecx
mov    0x8069330,%eax
mov    0x8069334,%edx
mov    %ecx,%ebx
sar    $0x1f,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,0x8069328
mov    0x20(%esp),%eax
mov    %edx,0x806932c
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
lea    0x38(%esp),%ecx
mov    %edi,%edx
call   804c150 <__sprintf_chk@plt+0x2880>
mov    0x38(%esp),%ecx
mov    0x80692b8,%eax
mov    0x3c(%esp),%ebx
mov    0x80692bc,%edx
add    %ecx,0x20(%esp)
adc    %ebx,0x24(%esp)
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x80692b8
mov    %edx,0x80692bc
jne    804c620 <__sprintf_chk@plt+0x2d50>
jmp    804c5c0 <__sprintf_chk@plt+0x2cf0>
mov    0x28(%esp),%edi
mov    0x80692a0,%ebp
test   %ebp,%ebp
je     804c850 <__sprintf_chk@plt+0x2f80>
cmp    %esi,0x2c(%esp)
je     804c850 <__sprintf_chk@plt+0x2f80>
mov    0x80691bc,%eax
test   %eax,%eax
je     804c850 <__sprintf_chk@plt+0x2f80>
mov    0x806937c,%ebx
mov    0x80691a4,%ecx
test   %ebx,%ebx
jne    804c92f <__sprintf_chk@plt+0x305f>
mov    0x8069280,%ecx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x4(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    0x806937c,%ebp
mov    0x80691a4,%eax
mov    0x10(%esp),%edx
test   %ebp,%ebp
jne    804c910 <__sprintf_chk@plt+0x3040>
mov    0x8069280,%eax
mov    0x14(%eax),%ecx
cmp    0x18(%eax),%ecx
jae    804c9a0 <__sprintf_chk@plt+0x30d0>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%eax)
movb   $0xa,(%ecx)
cmp    %esi,%edi
jbe    804c88b <__sprintf_chk@plt+0x2fbb>
movsbl %dl,%ebp
jmp    804c862 <__sprintf_chk@plt+0x2f92>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
mov    %edi,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   80496f0 <memchr@plt>
mov    $0x2d,%ecx
lea    0x1(%eax),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804bb70 <__sprintf_chk@plt+0x22a0>
cmp    %ebx,%edi
ja     804c860 <__sprintf_chk@plt+0x2f90>
mov    0x8069318,%esi
test   %esi,%esi
jne    804c6f0 <__sprintf_chk@plt+0x2e20>
mov    0x18(%esp),%edx
mov    $0x3a,%ecx
mov    %edi,%eax
call   804bb70 <__sprintf_chk@plt+0x22a0>
mov    0x8069318,%ebx
test   %ebx,%ebx
jne    804c6f0 <__sprintf_chk@plt+0x2e20>
mov    0x80692f8,%eax
mov    0x80692fc,%edx
jmp    804c6f4 <__sprintf_chk@plt+0x2e24>
nop
sub    0x10(%esp),%esi
add    %esi,%eax
jmp    804c5f1 <__sprintf_chk@plt+0x2d21>
jl     804c671 <__sprintf_chk@plt+0x2da1>
cmpl   $0x0,0x80692b0
ja     804c659 <__sprintf_chk@plt+0x2d89>
jmp    804c671 <__sprintf_chk@plt+0x2da1>
cmpl   $0x0,0x10(%esp)
ja     804c6a4 <__sprintf_chk@plt+0x2dd4>
or     0x10(%esp),%eax
jne    804c909 <__sprintf_chk@plt+0x3039>
mov    0x80692fc,%eax
or     0x80692f8,%eax
je     804c88b <__sprintf_chk@plt+0x2fbb>
mov    %edi,%esi
jmp    804c7dc <__sprintf_chk@plt+0x2f0c>
cmpb   $0x0,(%eax)
je     804c836 <__sprintf_chk@plt+0x2f66>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
mov    0x10(%esp),%edx
jmp    804c836 <__sprintf_chk@plt+0x2f66>
cmpb   $0x0,(%ecx)
je     804c809 <__sprintf_chk@plt+0x2f39>
mov    0x8069198,%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
mov    0x80691bc,%eax
mov    0x10(%esp),%edx
jmp    804c809 <__sprintf_chk@plt+0x2f39>
mov    0x14(%esp),%edx
lea    0x38(%esp),%ecx
call   804c150 <__sprintf_chk@plt+0x2880>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
sub    %eax,0x80692b8
sbb    %edx,0x80692bc
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%esp)
call   80495a0 <exit@plt>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
call   8049770 <__overflow@plt>
mov    0x10(%esp),%edx
jmp    804c850 <__sprintf_chk@plt+0x2f80>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x11c,%esp
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x2c(%esp)
call   80494d0 <__fxstat64@plt>
test   %eax,%eax
jne    804ce8e <__sprintf_chk@plt+0x35be>
mov    0x2c(%esp),%ebp
test   %ebp,%ebp
setne  0x1c(%esp)
jne    804cee5 <__sprintf_chk@plt+0x3615>
mov    0x8069318,%ebx
test   %ebx,%ebx
jne    804ca5c <__sprintf_chk@plt+0x318c>
mov    0x80692ec,%ebp
test   %ebp,%ebp
jne    804ca5c <__sprintf_chk@plt+0x318c>
cmpl   $0x0,0x80692e4
jl     804ca5c <__sprintf_chk@plt+0x318c>
jle    804d6c0 <__sprintf_chk@plt+0x3df0>
mov    0x80693b0,%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804ca5c <__sprintf_chk@plt+0x318c>
mov    0x80693fc,%edx
mov    0x80693f8,%eax
mov    %edx,%edi
or     %eax,%edi
je     804ca5c <__sprintf_chk@plt+0x318c>
xor    0xac(%esp),%edx
xor    0xa8(%esp),%eax
or     %eax,%edx
je     804d73d <__sprintf_chk@plt+0x3e6d>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049810 <isatty@plt>
mov    0x8069338,%eax
movzbl 0x8069a84,%ecx
test   %eax,%eax
je     804ce1a <__sprintf_chk@plt+0x354a>
mov    0x806934c,%ebx
mov    %ecx,%edi
mov    %eax,%ebp
lea    0x1(%ebx),%esi
xor    %edx,%edx
mov    %esi,%eax
div    %ebp
test   %edx,%edx
je     804ca9b <__sprintf_chk@plt+0x31cb>
lea    0x1(%ebp),%eax
sub    %edx,%eax
lea    (%ebx,%eax,1),%esi
mov    %edi,%eax
mov    %al,-0x1(%esi)
mov    0x2c(%esp),%eax
mov    %esi,0x806933c
mov    %esi,0x8069340
mov    %eax,0x8069344
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804cff8 <__sprintf_chk@plt+0x3728>
mov    0x80692e0,%eax
mov    0x80692e4,%edx
mov    %ecx,0x1c(%esp)
movl   $0x0,0x80692d0
00
mov    %eax,0x80692b8
xor    %eax,%eax
mov    %edx,0x80692bc
lea    0x50(%esp),%edx
movl   $0x0,0x80692d4
00
movl   $0x0,0x80692c8
00
movl   $0x0,0x80692c0
00
movl   $0x0,0x80692c4
00
movl   $0x0,0x8069328
00
movl   $0x0,0x806932c
00
movl   $0x0,0x80692b0
00
movl   $0x0,0x80692b4
00
call   804b180 <__sprintf_chk@plt+0x18b0>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     804d6de <__sprintf_chk@plt+0x3e0e>
mov    0x8069320,%ebx
test   %ebx,%ebx
jne    804d031 <__sprintf_chk@plt+0x3761>
mov    0x8069318,%eax
test   %eax,%eax
jne    804d5e4 <__sprintf_chk@plt+0x3d14>
mov    0x806933c,%eax
mov    0x8069340,%ebp
mov    %eax,0x1c(%esp)
sub    %ebp,%eax
cmpb   $0x0,0x8069a84
je     804d630 <__sprintf_chk@plt+0x3d60>
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x20(%esp)
call   80496f0 <memchr@plt>
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
test   %eax,%eax
je     804d920 <__sprintf_chk@plt+0x4050>
cmp    $0x2,%ebx
je     804d25e <__sprintf_chk@plt+0x398e>
mov    0x8069318,%eax
mov    0x8069340,%esi
mov    0x806933c,%edi
movl   $0x1,0x3c(%esp)
mov    0x3c(%esp),%edx
xor    %ebp,%ebp
add    %edx,0x80692ac
movl   $0x0,0x28(%esp)
add    %edx,%eax
mov    %eax,0x8069318
movsbl %cl,%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,0x38(%esp)
jmp    804ccdd <__sprintf_chk@plt+0x340d>
lea    0x0(%esi),%esi
cmp    %ebp,%ebx
je     804cc26 <__sprintf_chk@plt+0x3356>
movl   $0x0,0x80692c8
00
mov    0x1c(%esp),%ebp
mov    0x8069308,%eax
add    0x28(%esp),%ebp
sub    %ebx,%ebp
test   %eax,%eax
je     804cca8 <__sprintf_chk@plt+0x33d8>
mov    0x806933c,%edi
mov    0x80692d0,%eax
mov    0x80692d4,%edx
sub    %esi,%edi
sub    %ebp,%edi
mov    %edi,%esi
xor    %edi,%edi
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,%edx
jb     804cc9c <__sprintf_chk@plt+0x33cc>
ja     804cc60 <__sprintf_chk@plt+0x3390>
cmp    %esi,%eax
jbe    804cc9c <__sprintf_chk@plt+0x33cc>
movl   $0x5,0x8(%esp)
movl   $0x8062513,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x80692d0
mov    %edi,0x80692d4
mov    0x806930c,%edi
test   %edi,%edi
jne    804d0f0 <__sprintf_chk@plt+0x3820>
lea    0x50(%esp),%edx
mov    %ebp,%eax
mov    %ecx,0x1c(%esp)
call   804b180 <__sprintf_chk@plt+0x18b0>
test   %eax,%eax
je     804d1ef <__sprintf_chk@plt+0x391f>
mov    0x8069340,%esi
mov    0x806933c,%edi
mov    0x1c(%esp),%ecx
mov    0x80692c8,%ebx
mov    %esi,0x80692cc
test   %ebx,%ebx
je     804ccf7 <__sprintf_chk@plt+0x3427>
mov    0x8069340,%eax
mov    %eax,0x80692c8
lea    (%esi,%ebp,1),%ebx
cmp    %edi,%ebx
je     804d4d4 <__sprintf_chk@plt+0x3c04>
mov    %edi,%eax
movzbl -0x1(%ebx),%esi
sub    %ebx,%eax
add    $0x1,%eax
mov    %cl,-0x1(%ebx)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x4(%esp)
lea    -0x1(%ebx),%eax
mov    %eax,(%esp)
call   8049600 <memrchr@plt>
mov    0x20(%esp),%ecx
add    $0x1,%eax
mov    %eax,%edx
mov    %eax,0x1c(%esp)
cmp    %edx,%ebx
mov    %esi,%eax
mov    %al,-0x1(%ebx)
je     804d1a6 <__sprintf_chk@plt+0x38d6>
mov    %ebx,%eax
sub    %edx,%edi
sub    0x28(%esp),%eax
mov    %edi,0x28(%esp)
cmp    %eax,%edx
jbe    804cdbb <__sprintf_chk@plt+0x34eb>
mov    0x80692bc,%edx
or     0x80692b8,%edx
jne    804d1d1 <__sprintf_chk@plt+0x3901>
mov    0x80692b4,%eax
or     0x80692b0,%eax
jne    804d1bb <__sprintf_chk@plt+0x38eb>
mov    0x80692bc,%eax
or     0x80692b8,%eax
jne    804cd96 <__sprintf_chk@plt+0x34c6>
mov    0x80692b4,%eax
or     0x80692b0,%eax
je     804d22c <__sprintf_chk@plt+0x395c>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     804cdbb <__sprintf_chk@plt+0x34eb>
mov    0x80692ac,%eax
test   %eax,%eax
je     804cdbb <__sprintf_chk@plt+0x34eb>
mov    0x8069314,%edx
test   %edx,%edx
je     804d327 <__sprintf_chk@plt+0x3a57>
mov    0x8069300,%eax
xor    %edx,%edx
mov    0x8069304,%edi
mov    0x80692c8,%ebp
mov    0x8069340,%esi
mov    0x1c(%esp),%ebx
mov    %eax,0x20(%esp)
xor    %eax,%eax
xchg   %ax,%ax
cmp    %edi,%edx
jg     804cc18 <__sprintf_chk@plt+0x3348>
jl     804cdf4 <__sprintf_chk@plt+0x3524>
cmp    0x20(%esp),%eax
jae    804cc18 <__sprintf_chk@plt+0x3348>
cmp    %ebx,%esi
jae    804cc18 <__sprintf_chk@plt+0x3348>
cmp    %ebp,%ebx
xchg   %ax,%ax
je     804cc26 <__sprintf_chk@plt+0x3356>
add    $0x1,%eax
adc    $0x0,%edx
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
cmp    -0x1(%ebx),%cl
jne    804ce10 <__sprintf_chk@plt+0x3540>
jmp    804cde0 <__sprintf_chk@plt+0x3510>
mov    %ecx,0x20(%esp)
call   8049680 <getpagesize@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x8069338
je     804d7d2 <__sprintf_chk@plt+0x3f02>
lea    0x1(%eax,%eax,1),%eax
mov    0x20(%esp),%ecx
cmp    %eax,%ebx
jae    804d7d2 <__sprintf_chk@plt+0x3f02>
xor    %edx,%edx
mov    $0x8000,%eax
div    %ebx
mov    $0x8000,%eax
test   %edx,%edx
je     804ce5c <__sprintf_chk@plt+0x358c>
lea    0x8000(%ebx),%eax
sub    %edx,%eax
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x8069348
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x8069338,%ebp
movzbl 0x8069a84,%edi
mov    0x20(%esp),%ecx
mov    %eax,0x806934c
mov    %eax,%ebx
jmp    804ca86 <__sprintf_chk@plt+0x31b6>
call   80496e0 <__errno_location@plt>
mov    0x8069380,%ecx
mov    0x8069368,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804cec1 <__sprintf_chk@plt+0x35f1>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
mov    $0x1,%ebp
mov    0x2c(%esp),%ebx
test   %ebx,%ebx
jne    804cf38 <__sprintf_chk@plt+0x3668>
add    $0x11c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
mov    0x8069190,%eax
je     804cf98 <__sprintf_chk@plt+0x36c8>
mov    0x60(%esp),%edx
mov    0x8069368,%ecx
and    $0xf000,%edx
cmp    $0x4000,%edx
jne    804cf7a <__sprintf_chk@plt+0x36aa>
cmp    $0x4,%eax
je     804cf33 <__sprintf_chk@plt+0x3663>
mov    0x8069364,%esi
test   %esi,%esi
jne    804cf98 <__sprintf_chk@plt+0x36c8>
mov    0x806936c,%edx
test   %edx,%edx
je     804cf98 <__sprintf_chk@plt+0x36c8>
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   8052ce0 <__sprintf_chk@plt+0x9410>
test   %al,%al
je     804cf93 <__sprintf_chk@plt+0x36c3>
mov    $0x1,%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
test   %eax,%eax
je     804ced8 <__sprintf_chk@plt+0x3608>
call   80496e0 <__errno_location@plt>
mov    0x8069380,%ecx
mov    0x8069368,%edx
test   %ecx,%ecx
mov    (%eax),%eax
je     804d4b3 <__sprintf_chk@plt+0x3be3>
movl   $0x1,0x8069360
00
add    $0x11c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8069370,%eax
test   %eax,%eax
je     804cf93 <__sprintf_chk@plt+0x36c3>
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8052ce0 <__sprintf_chk@plt+0x9410>
test   %al,%al
jne    804cf33 <__sprintf_chk@plt+0x3663>
mov    0x8069190,%eax
cmp    $0x3,%eax
je     804d3b3 <__sprintf_chk@plt+0x3ae3>
cmp    $0x4,%eax
je     804d018 <__sprintf_chk@plt+0x3748>
mov    0x8069358,%eax
cmp    $0x2,%eax
je     804cfc0 <__sprintf_chk@plt+0x36f0>
test   %eax,%eax
jne    804ca01 <__sprintf_chk@plt+0x3131>
test   %edi,%edi
jne    804ca01 <__sprintf_chk@plt+0x3131>
mov    0x60(%esp),%eax
mov    %eax,%edx
and    $0xb000,%edx
cmp    $0x2000,%edx
je     804cf33 <__sprintf_chk@plt+0x3663>
and    $0xf000,%eax
cmp    $0xc000,%eax
je     804cf33 <__sprintf_chk@plt+0x3663>
cmp    $0x1000,%eax
jne    804ca01 <__sprintf_chk@plt+0x3131>
jmp    804cf33 <__sprintf_chk@plt+0x3663>
cmpb   $0x0,0x1c(%esp)
je     804d058 <__sprintf_chk@plt+0x3788>
movl   $0x0,0x8069330
00
movl   $0x0,0x8069334
00
jmp    804cac9 <__sprintf_chk@plt+0x31f9>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804cfa6 <__sprintf_chk@plt+0x36d6>
jmp    804cf33 <__sprintf_chk@plt+0x3663>
cmp    $0x2,%ebx
je     804cb6f <__sprintf_chk@plt+0x329f>
mov    0x8069318,%eax
mov    0x8069340,%esi
mov    0x806933c,%edi
movl   $0x0,0x3c(%esp)
jmp    804cbdb <__sprintf_chk@plt+0x330b>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   80497a0 <lseek64@plt>
mov    0x1c(%esp),%ecx
test   %edx,%edx
mov    %eax,0x8069330
mov    %edx,0x8069334
jns    804cac9 <__sprintf_chk@plt+0x31f9>
call   80496e0 <__errno_location@plt>
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8062567,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    0x8069380,%esi
test   %esi,%esi
jne    804d713 <__sprintf_chk@plt+0x3e43>
mov    %eax,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
jmp    804d713 <__sprintf_chk@plt+0x3e43>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80692cc,%eax
cmp    %ebx,%eax
jae    804d6d5 <__sprintf_chk@plt+0x3e05>
mov    %ebp,0x1c(%esp)
movzbl 0x8069a84,%edi
xor    %esi,%esi
mov    %ecx,%ebp
jmp    804d11a <__sprintf_chk@plt+0x384a>
xchg   %ax,%ax
add    $0x1,%eax
add    $0x1,%esi
cmp    %ebx,%eax
jae    804d132 <__sprintf_chk@plt+0x3862>
mov    %ebx,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80496f0 <memchr@plt>
test   %eax,%eax
jne    804d110 <__sprintf_chk@plt+0x3840>
mov    %ebp,%ecx
mov    0x1c(%esp),%ebp
xor    %edi,%edi
mov    0x80692c0,%eax
mov    0x80692c4,%edx
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,%edx
jb     804d18f <__sprintf_chk@plt+0x38bf>
ja     804d153 <__sprintf_chk@plt+0x3883>
cmp    %esi,%eax
jbe    804d18f <__sprintf_chk@plt+0x38bf>
movl   $0x5,0x8(%esp)
movl   $0x8062513,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   8049410 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x80692c0
mov    %edi,0x80692c4
mov    %ebx,0x80692cc
jmp    804ccb6 <__sprintf_chk@plt+0x33e6>
mov    0x28(%esp),%eax
sub    %eax,0x1c(%esp)
sub    0x1c(%esp),%edi
mov    %edi,0x28(%esp)
jmp    804cdbb <__sprintf_chk@plt+0x34eb>
mov    0x1c(%esp),%eax
mov    %ecx,0x20(%esp)
call   804c000 <__sprintf_chk@plt+0x2730>
mov    0x20(%esp),%ecx
jmp    804cd78 <__sprintf_chk@plt+0x34a8>
mov    0x1c(%esp),%edx
mov    %ecx,0x20(%esp)
call   804c500 <__sprintf_chk@plt+0x2c30>
mov    0x20(%esp),%ecx
add    %eax,0x30(%esp)
adc    %edx,0x34(%esp)
jmp    804cd67 <__sprintf_chk@plt+0x3497>
call   80496e0 <__errno_location@plt>
mov    0x8069380,%esi
mov    0x8069368,%edx
test   %esi,%esi
mov    (%eax),%eax
jne    804d222 <__sprintf_chk@plt+0x3952>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
mov    0x3c(%esp),%edx
mov    0x8069318,%eax
sub    %edx,0x80692ac
sub    %edx,%eax
mov    %eax,0x8069318
not    %eax
test   %eax,%edx
je     804d37a <__sprintf_chk@plt+0x3aaa>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
jne    804d344 <__sprintf_chk@plt+0x3a74>
mov    $0xffffffff,%ebx
mov    $0x1,%ebp
xor    %esi,%esi
xor    %edi,%edi
mov    0x80692f0,%eax
test   %eax,%eax
je     804d29e <__sprintf_chk@plt+0x39ce>
mov    0x8069310,%eax
test   %eax,%eax
jne    804d583 <__sprintf_chk@plt+0x3cb3>
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0x806258c,0x4(%esp)
movl   $0x1,(%esp)
call   8049710 <__printf_chk@plt>
cmp    %ebx,0x80692ec
je     804d520 <__sprintf_chk@plt+0x3c50>
mov    0x2c(%esp),%esi
test   %esi,%esi
jne    804cf38 <__sprintf_chk@plt+0x3668>
mov    0x80692bc,%eax
or     0x80692b8,%eax
jne    804ced8 <__sprintf_chk@plt+0x3608>
mov    0x8069328,%edx
mov    0x806932c,%eax
mov    0x8069334,%ebx
mov    0x8069330,%ecx
xor    %eax,%ebx
xor    %edx,%ecx
or     %ecx,%ebx
je     804ced8 <__sprintf_chk@plt+0x3608>
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   80497a0 <lseek64@plt>
test   %edx,%edx
jns    804ced8 <__sprintf_chk@plt+0x3608>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804ced8 <__sprintf_chk@plt+0x3608>
jmp    804cf48 <__sprintf_chk@plt+0x3678>
mov    0x3c(%esp),%edx
sub    %edx,%eax
mov    %eax,0x80692ac
mov    0x8069318,%eax
sub    %edx,%eax
mov    %eax,0x8069318
not    %eax
test   %eax,%edx
je     804d37a <__sprintf_chk@plt+0x3aaa>
movl   $0x5,0x8(%esp)
mov    0x8069368,%ebx
movl   $0x8062574,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
mov    0x34(%esp),%ecx
test   %ecx,%ecx
js     804d3a7 <__sprintf_chk@plt+0x3ad7>
mov    0x30(%esp),%esi
mov    $0x1,%edx
mov    0x34(%esp),%edi
mov    %esi,%eax
or     %edi,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%ebx
mov    %eax,%ebp
neg    %ebx
lea    (%edx,%ebx,2),%ebx
jmp    804d26c <__sprintf_chk@plt+0x399c>
mov    0x30(%esp),%ebp
add    $0x2,%ebp
jmp    804ced0 <__sprintf_chk@plt+0x3600>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804cfa6 <__sprintf_chk@plt+0x36d6>
mov    0x2c(%esp),%eax
xor    %ebx,%ebx
test   %edi,%edi
sete   %bl
not    %ebx
and    0x806918c,%ebx
mov    %eax,(%esp)
call   8049870 <close@plt>
test   %eax,%eax
jne    804da97 <__sprintf_chk@plt+0x41c7>
mov    0x8069368,%eax
mov    %eax,0x48(%esp)
lea    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x4c(%esp)
call   805df90 <fts_open>
test   %eax,%eax
mov    %eax,%esi
je     804da92 <__sprintf_chk@plt+0x41c2>
mov    $0x1,%ebp
mov    %esi,(%esp)
mov    %ebp,0x20(%esp)
mov    %edi,0x28(%esp)
call   805e830 <fts_read>
test   %eax,%eax
mov    %eax,%ebp
je     804d478 <__sprintf_chk@plt+0x3ba8>
mov    0x30(%ebp),%eax
xor    %ebx,%ebx
test   %eax,%eax
movzwl 0x3c(%ebp),%eax
sete   %bl
and    0x28(%esp),%ebx
cmp    $0x6,%ax
jne    804d850 <__sprintf_chk@plt+0x3f80>
cmpl   $0x3,0x8069190
je     804d940 <__sprintf_chk@plt+0x4070>
mov    $0x1,%eax
mov    %esi,(%esp)
and    %eax,0x20(%esp)
call   805e830 <fts_read>
test   %eax,%eax
mov    %eax,%ebp
jne    804d438 <__sprintf_chk@plt+0x3b68>
call   80496e0 <__errno_location@plt>
mov    0x20(%esp),%ebp
mov    %eax,%ebx
mov    (%eax),%eax
test   %eax,%eax
jne    804dbba <__sprintf_chk@plt+0x42ea>
mov    %esi,(%esp)
call   805e650 <fts_close>
test   %eax,%eax
je     804ced8 <__sprintf_chk@plt+0x3608>
mov    0x8069380,%ecx
mov    (%ebx),%eax
mov    0x8069368,%edx
test   %ecx,%ecx
jne    804cf63 <__sprintf_chk@plt+0x3693>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
jmp    804cf63 <__sprintf_chk@plt+0x3693>
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     804d22c <__sprintf_chk@plt+0x395c>
mov    0x80692bc,%eax
lea    0x1(%edi),%edx
or     0x80692b8,%eax
mov    %edx,0x806933c
mov    %cl,(%edi)
jne    804d831 <__sprintf_chk@plt+0x3f61>
mov    0x80692b4,%eax
or     0x80692b0,%eax
je     804d22c <__sprintf_chk@plt+0x395c>
mov    0x806933c,%eax
call   804c000 <__sprintf_chk@plt+0x2730>
jmp    804d22c <__sprintf_chk@plt+0x395c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x806937c,%edx
mov    0x80691b0,%eax
test   %edx,%edx
jne    804d7b3 <__sprintf_chk@plt+0x3ee3>
mov    0x8069280,%eax
mov    %eax,0x4(%esp)
mov    0x8069368,%eax
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    0x806937c,%edi
mov    0x80691b0,%eax
test   %edi,%edi
jne    804d722 <__sprintf_chk@plt+0x3e52>
mov    0x8069280,%edx
mov    0x806931c,%eax
mov    0x14(%edx),%ecx
and    $0xa,%eax
cmp    0x18(%edx),%ecx
jae    804d820 <__sprintf_chk@plt+0x3f50>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%edx)
mov    %al,(%ecx)
jmp    804d2aa <__sprintf_chk@plt+0x39da>
mov    0x806937c,%ecx
mov    0x80691b0,%eax
test   %ecx,%ecx
jne    804d610 <__sprintf_chk@plt+0x3d40>
mov    0x8069280,%eax
mov    %eax,0x4(%esp)
mov    0x8069368,%eax
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    0x806937c,%edx
mov    0x80691b0,%eax
test   %edx,%edx
jne    804d5f5 <__sprintf_chk@plt+0x3d25>
mov    0x806931c,%ecx
test   %ecx,%ecx
jne    804d664 <__sprintf_chk@plt+0x3d94>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d80b <__sprintf_chk@plt+0x3f3b>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x0,(%edx)
jmp    804d282 <__sprintf_chk@plt+0x39b2>
mov    0x8069340,%esi
mov    0x806933c,%edi
jmp    804d04b <__sprintf_chk@plt+0x377b>
cmpb   $0x0,(%eax)
je     804d5b7 <__sprintf_chk@plt+0x3ce7>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804d5b7 <__sprintf_chk@plt+0x3ce7>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
je     804d592 <__sprintf_chk@plt+0x3cc2>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804d592 <__sprintf_chk@plt+0x3cc2>
nop
mov    %eax,0x8(%esp)
movl   $0xffffff80,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
call   80496f0 <memchr@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
jne    804cbb9 <__sprintf_chk@plt+0x32e9>
mov    0x8069318,%eax
mov    %ebp,%esi
mov    0x1c(%esp),%edi
jmp    804d04b <__sprintf_chk@plt+0x377b>
mov    0x806937c,%edx
mov    0x80691a4,%eax
test   %edx,%edx
jne    804d7ec <__sprintf_chk@plt+0x3f1c>
mov    0x8069280,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d7d7 <__sprintf_chk@plt+0x3f07>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x3a,(%edx)
mov    0x806937c,%ecx
mov    0x80691a4,%eax
test   %ecx,%ecx
je     804d282 <__sprintf_chk@plt+0x39b2>
cmpb   $0x0,(%eax)
je     804d282 <__sprintf_chk@plt+0x39b2>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804d282 <__sprintf_chk@plt+0x39b2>
nop
cmpl   $0x1,0x80692e0
jbe    804ca5c <__sprintf_chk@plt+0x318c>
lea    0x0(%esi),%esi
jmp    804ca24 <__sprintf_chk@plt+0x3154>
xor    %esi,%esi
xor    %edi,%edi
jmp    804d13a <__sprintf_chk@plt+0x386a>
xchg   %ax,%ax
call   80496e0 <__errno_location@plt>
mov    0x8069380,%ecx
mov    0x8069368,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804d713 <__sprintf_chk@plt+0x3e43>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
jmp    804d25e <__sprintf_chk@plt+0x398e>
cmpb   $0x0,(%eax)
je     804d55c <__sprintf_chk@plt+0x3c8c>
mov    0x8069194,%eax
mov    %eax,(%esp)
call   805cae0 <__sprintf_chk@plt+0x13210>
jmp    804d55c <__sprintf_chk@plt+0x3c8c>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
xor    0x80693a4,%edx
xor    0x80693a0,%eax
or     %eax,%edx
jne    804ca5c <__sprintf_chk@plt+0x318c>
mov    0x8069380,%edi
test   %edi,%edi
jne    804cec1 <__sprintf_chk@plt+0x35f1>
mov    0x8069368,%eax
mov    %eax,(%esp)
call   8059240 <__sprintf_chk@plt+0xf970>
movl   $0x5,0x8(%esp)
movl   $0x806295c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049410 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
jmp    804cec1 <__sprintf_chk@plt+0x35f1>
cmpb   $0x0,(%eax)
je     804d533 <__sprintf_chk@plt+0x3c63>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804d533 <__sprintf_chk@plt+0x3c63>
call   8049820 <abort@plt>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804d691 <__sprintf_chk@plt+0x3dc1>
cmpb   $0x0,(%eax)
je     804d677 <__sprintf_chk@plt+0x3da7>
mov    %eax,0x4(%esp)
mov    0x8069198,%eax
mov    %eax,(%esp)
call   805cab0 <__sprintf_chk@plt+0x131e0>
jmp    804d677 <__sprintf_chk@plt+0x3da7>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049770 <__overflow@plt>
jmp    804d282 <__sprintf_chk@plt+0x39b2>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049770 <__overflow@plt>
jmp    804d2aa <__sprintf_chk@plt+0x39da>
mov    %ebp,%eax
sub    0x28(%esp),%eax
add    %esi,%eax
call   804c500 <__sprintf_chk@plt+0x2c30>
add    %eax,0x30(%esp)
adc    %edx,0x34(%esp)
jmp    804d4fc <__sprintf_chk@plt+0x3c2c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%eax),%ecx
cmp    $0x1,%cx
lea    0xa4(%ebp),%edi
jbe    804d865 <__sprintf_chk@plt+0x3f95>
cmp    $0x4,%ax
jne    804d8dc <__sprintf_chk@plt+0x400c>
cmpl   $0x4,0x8069190
je     804d902 <__sprintf_chk@plt+0x4032>
test   %ebx,%ebx
je     804d880 <__sprintf_chk@plt+0x3fb0>
mov    0x8069364,%ecx
test   %ecx,%ecx
jne    804d8a4 <__sprintf_chk@plt+0x3fd4>
mov    0x806936c,%ecx
test   %ecx,%ecx
je     804d8fa <__sprintf_chk@plt+0x402a>
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   8052ce0 <__sprintf_chk@plt+0x9410>
test   %al,%al
jne    804d902 <__sprintf_chk@plt+0x4032>
mov    0x8069364,%ecx
movzwl 0x3c(%ebp),%eax
mov    0x1c(%ebp),%edi
movl   $0x1,0x1c(%esp)
add    %ecx,%edi
mov    0x2c(%esi),%ecx
mov    %edi,0x8069368
mov    %ecx,%edx
and    $0x2,%edx
jne    804d8cb <__sprintf_chk@plt+0x3ffb>
test   $0x1,%cl
cmovne %ebx,%edx
mov    %edx,0x1c(%esp)
cmp    $0xe,%ax
ja     804d7d2 <__sprintf_chk@plt+0x3f02>
jmp    *0x80639c0(,%eax,4)
mov    0x8069370,%ecx
test   %ecx,%ecx
je     804d8fa <__sprintf_chk@plt+0x402a>
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   8052ce0 <__sprintf_chk@plt+0x9410>
test   %al,%al
jne    804d902 <__sprintf_chk@plt+0x4032>
movzwl 0x3c(%ebp),%eax
mov    0x8069364,%ecx
jmp    804d8a4 <__sprintf_chk@plt+0x3fd4>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   805f260 <fts_set>
mov    $0x1,%eax
jmp    804d466 <__sprintf_chk@plt+0x3b96>
mov    0x60(%esp),%eax
mov    %ebp,%esi
mov    0x1c(%esp),%edi
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804d967 <__sprintf_chk@plt+0x4097>
mov    0x8069318,%eax
jmp    804d04b <__sprintf_chk@plt+0x377b>
test   %ebx,%ebx
je     804d461 <__sprintf_chk@plt+0x3b91>
cmpl   $0x1,0x80692e8
sbb    %eax,%eax
and    $0xfffffffe,%eax
sub    $0x1,%eax
and    %eax,0x8069310
mov    $0x1,%eax
jmp    804d466 <__sprintf_chk@plt+0x3b96>
mov    0x2c(%esp),%eax
mov    %edx,0x20(%esp)
movl   $0x0,0x24(%esp)
test   %eax,%eax
jne    804d9af <__sprintf_chk@plt+0x40df>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
call   80497a0 <lseek64@plt>
mov    0x28(%esp),%ecx
test   %edx,%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
js     804d936 <__sprintf_chk@plt+0x4066>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    0x2c(%esp),%edi
movl   $0x4,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x28(%esp)
call   80497a0 <lseek64@plt>
mov    0x28(%esp),%ecx
test   %edx,%edx
mov    %eax,%esi
mov    %edx,%ebx
js     804da87 <__sprintf_chk@plt+0x41b7>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x1c(%esp)
call   80497a0 <lseek64@plt>
mov    0x1c(%esp),%ecx
test   %edx,%edx
js     804da40 <__sprintf_chk@plt+0x4170>
cmp    0x80(%esp),%ebx
jl     804da35 <__sprintf_chk@plt+0x4165>
jg     804da24 <__sprintf_chk@plt+0x4154>
cmp    0x7c(%esp),%esi
jb     804da35 <__sprintf_chk@plt+0x4165>
mov    0x8069340,%esi
mov    0x806933c,%edi
jmp    804d936 <__sprintf_chk@plt+0x4066>
mov    0x8069320,%ebx
jmp    804cbb9 <__sprintf_chk@plt+0x32e9>
call   80496e0 <__errno_location@plt>
mov    0x8069380,%edi
mov    0x8069368,%edx
mov    0x1c(%esp),%ecx
test   %edi,%edi
mov    (%eax),%eax
jne    804da7b <__sprintf_chk@plt+0x41ab>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
mov    0x1c(%esp),%ecx
movl   $0x1,0x8069360
00
jmp    804da13 <__sprintf_chk@plt+0x4143>
mov    0x1c(%esp),%edi
mov    %ebp,%esi
jmp    804d936 <__sprintf_chk@plt+0x4066>
call   805b650 <__sprintf_chk@plt+0x11d80>
call   80496e0 <__errno_location@plt>
mov    0x8069380,%ecx
test   %ecx,%ecx
mov    (%eax),%edx
mov    0x8069368,%eax
jne    804dace <__sprintf_chk@plt+0x41fe>
mov    %eax,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
mov    0x8069368,%eax
movl   $0x1,0x8069360
00
jmp    804d3ef <__sprintf_chk@plt+0x3b1f>
mov    0x8069358,%eax
cmp    $0x2,%eax
je     804daf3 <__sprintf_chk@plt+0x4223>
test   %eax,%eax
jne    804db71 <__sprintf_chk@plt+0x42a1>
test   %ebx,%ebx
jne    804db71 <__sprintf_chk@plt+0x42a1>
mov    0x54(%ebp),%eax
test   %eax,%eax
jne    804db3e <__sprintf_chk@plt+0x426e>
cmpl   $0x1,0x1c(%esp)
sbb    %eax,%eax
and    $0x100,%eax
mov    %eax,0x10(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%ebp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049480 <__fxstatat64@plt>
test   %eax,%eax
jne    804dc9e <__sprintf_chk@plt+0x43ce>
mov    0xc0(%esp),%eax
mov    %eax,%ecx
and    $0xb000,%eax
and    $0xf000,%ecx
cmp    $0x2000,%eax
je     804d461 <__sprintf_chk@plt+0x3b91>
cmp    $0xc000,%ecx
je     804d461 <__sprintf_chk@plt+0x3b91>
cmp    $0x1000,%ecx
je     804d461 <__sprintf_chk@plt+0x3b91>
mov    0x2c(%esi),%ecx
and    $0x204,%ecx
mov    $0xffffff9c,%eax
cmp    $0x200,%ecx
jne    804db87 <__sprintf_chk@plt+0x42b7>
mov    0x1c(%esi),%eax
mov    0x1c(%esp),%ecx
mov    0x18(%ebp),%edx
test   %ecx,%ecx
je     804dc3c <__sprintf_chk@plt+0x436c>
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
test   %eax,%eax
js     804dbf5 <__sprintf_chk@plt+0x4325>
mov    %ebx,%edx
call   804c9c0 <__sprintf_chk@plt+0x30f0>
jmp    804d466 <__sprintf_chk@plt+0x3b96>
mov    0x8069380,%edi
mov    0x8069368,%edx
test   %edi,%edi
jne    804dbe6 <__sprintf_chk@plt+0x4316>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
jmp    804d48d <__sprintf_chk@plt+0x3bbd>
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
mov    0x8069380,%ebp
mov    0x8069368,%edx
test   %ebp,%ebp
jne    804dc28 <__sprintf_chk@plt+0x4358>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
mov    $0x1,%eax
jmp    804d466 <__sprintf_chk@plt+0x3b96>
movl   $0x20000,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
test   %eax,%eax
jns    804dbae <__sprintf_chk@plt+0x42de>
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x1f,%eax
je     804d461 <__sprintf_chk@plt+0x3b91>
cmp    $0x28,%eax
je     804d461 <__sprintf_chk@plt+0x3b91>
jmp    804dbfc <__sprintf_chk@plt+0x432c>
mov    0x20(%ebp),%eax
mov    0x8069380,%ebp
test   %ebp,%ebp
jne    804dc28 <__sprintf_chk@plt+0x4358>
mov    %edi,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
jmp    804dc28 <__sprintf_chk@plt+0x4358>
call   80496e0 <__errno_location@plt>
mov    0x8069380,%ebx
test   %ebx,%ebx
mov    (%eax),%eax
jne    804dccb <__sprintf_chk@plt+0x43fb>
mov    %edi,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
jmp    804d461 <__sprintf_chk@plt+0x3b91>
mov    0x8069380,%eax
test   %eax,%eax
jne    804d461 <__sprintf_chk@plt+0x3b91>
movl   $0x5,0x8(%esp)
movl   $0x806253e,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062557,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049410 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049530 <error@plt>
mov    $0x1,%eax
jmp    804d466 <__sprintf_chk@plt+0x3b96>
cmpl   $0x3,0x8069190
jne    804dd70 <__sprintf_chk@plt+0x44a0>
cmpl   $0x1,0x80692e8
sbb    %eax,%eax
and    $0x2,%eax
or     %eax,0x8069310
mov    $0x1,%eax
jmp    804d466 <__sprintf_chk@plt+0x3b96>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   805f260 <fts_set>
mov    0x2c(%esi),%ecx
jmp    804db71 <__sprintf_chk@plt+0x42a1>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
cmpb   $0x2d,(%eax)
je     804ddc8 <__sprintf_chk@plt+0x44f8>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x8069368
call   8055270 <__sprintf_chk@plt+0xb9a0>
test   %eax,%eax
js     804ddf0 <__sprintf_chk@plt+0x4520>
mov    $0x1,%edx
add    $0x1c,%esp
jmp    804c9c0 <__sprintf_chk@plt+0x30f0>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    804dd98 <__sprintf_chk@plt+0x44c8>
mov    0x80692d8,%eax
test   %eax,%eax
je     804de38 <__sprintf_chk@plt+0x4568>
mov    %eax,0x8069368
mov    $0x1,%edx
xor    %eax,%eax
add    $0x1c,%esp
jmp    804c9c0 <__sprintf_chk@plt+0x30f0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80496e0 <__errno_location@plt>
mov    0x8069380,%ecx
mov    0x8069368,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804de23 <__sprintf_chk@plt+0x4553>
mov    %edx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049530 <error@plt>
movl   $0x1,0x8069360
00
mov    $0x1,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8062592,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
jmp    804ddd7 <__sprintf_chk@plt+0x4507>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8069528,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8062980,0x4(%esp)
movl   $0x0,(%esp)
test   %ebx,%ebx
je     804def3 <__sprintf_chk@plt+0x4623>
call   8049410 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8069224,%eax
mov    %eax,(%esp)
call   80497e0 <__fprintf_chk@plt>
mov    0x8069528,%esi
movl   $0x5,0x8(%esp)
movl   $0x80629ac,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8069224,%eax
mov    %eax,(%esp)
call   80497e0 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   80495a0 <exit@plt>
call   8049410 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80629d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
mov    0x8069280,%esi
movl   $0x5,0x8(%esp)
movl   $0x80624a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    0x8069528,%esi
movl   $0x5,0x8(%esp)
movl   $0x8062a08,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
cmpl   $0x0,0x80624e4
je     804dfd1 <__sprintf_chk@plt+0x4701>
movl   $0x5,0x8(%esp)
movl   $0x8062a5c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062b84,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062cf0,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062e20,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8062ff0,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8063138,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80632f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8063420,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8063574,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8063644,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
mov    0x8069280,%esi
movl   $0x5,0x8(%esp)
movl   $0x8062460,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
movl   $0x5,0x8(%esp)
movl   $0x80637d8,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80625a3,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x80625b8,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80625c9,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x80638e8,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
mov    0x8069280,%esi
movl   $0x5,0x8(%esp)
movl   $0x806390c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
jmp    804deeb <__sprintf_chk@plt+0x461b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804e912 <__sprintf_chk@plt+0x5042>
mov    (%eax),%eax
mov    %edx,%ebx
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804e5ba <__sprintf_chk@plt+0x4cea>
mov    (%eax),%esi
test   %esi,%esi
je     804e43c <__sprintf_chk@plt+0x4b6c>
mov    (%esi),%edi
test   %edi,%edi
je     804e386 <__sprintf_chk@plt+0x4ab6>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e307 <__sprintf_chk@plt+0x4a37>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e2cb <__sprintf_chk@plt+0x49fb>
mov    (%ecx),%eax
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e998 <__sprintf_chk@plt+0x50c8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e988 <__sprintf_chk@plt+0x50b8>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e342 <__sprintf_chk@plt+0x4a72>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9c8 <__sprintf_chk@plt+0x50f8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%eax
mov    0x8(%ecx),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804e940 <__sprintf_chk@plt+0x5070>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e403 <__sprintf_chk@plt+0x4b33>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e3c7 <__sprintf_chk@plt+0x4af7>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9d0 <__sprintf_chk@plt+0x5100>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e980 <__sprintf_chk@plt+0x50b0>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    (%ebx),%eax
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804e920 <__sprintf_chk@plt+0x5050>
mov    (%esi),%edi
test   %edi,%edi
je     804e4f8 <__sprintf_chk@plt+0x4c28>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e4c7 <__sprintf_chk@plt+0x4bf7>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e48b <__sprintf_chk@plt+0x4bbb>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9b8 <__sprintf_chk@plt+0x50e8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e958 <__sprintf_chk@plt+0x5088>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804e948 <__sprintf_chk@plt+0x5078>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e575 <__sprintf_chk@plt+0x4ca5>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e539 <__sprintf_chk@plt+0x4c69>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9a0 <__sprintf_chk@plt+0x50d0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e990 <__sprintf_chk@plt+0x50c0>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%esi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%esp),%esi
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804e930 <__sprintf_chk@plt+0x5060>
mov    (%eax),%esi
test   %esi,%esi
je     804e78c <__sprintf_chk@plt+0x4ebc>
mov    (%esi),%edi
test   %edi,%edi
je     804e684 <__sprintf_chk@plt+0x4db4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e605 <__sprintf_chk@plt+0x4d35>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e970 <__sprintf_chk@plt+0x50a0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e640 <__sprintf_chk@plt+0x4d70>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9a8 <__sprintf_chk@plt+0x50d8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%eax
mov    0x8(%ecx),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804e950 <__sprintf_chk@plt+0x5080>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e701 <__sprintf_chk@plt+0x4e31>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e6c5 <__sprintf_chk@plt+0x4df5>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9b0 <__sprintf_chk@plt+0x50e0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e960 <__sprintf_chk@plt+0x5090>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e73c <__sprintf_chk@plt+0x4e6c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9c0 <__sprintf_chk@plt+0x50f0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    0x4(%esp),%eax
mov    %edx,(%ebx)
mov    0x4(%eax),%esi
test   %esi,%esi
je     804e928 <__sprintf_chk@plt+0x5058>
mov    (%esi),%edi
test   %edi,%edi
je     804e844 <__sprintf_chk@plt+0x4f74>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e813 <__sprintf_chk@plt+0x4f43>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e7d7 <__sprintf_chk@plt+0x4f07>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9d8 <__sprintf_chk@plt+0x5108>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e968 <__sprintf_chk@plt+0x5098>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804e938 <__sprintf_chk@plt+0x5068>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804e873 <__sprintf_chk@plt+0x4fa3>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804e978 <__sprintf_chk@plt+0x50a8>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804e8ae <__sprintf_chk@plt+0x4fde>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804e9e0 <__sprintf_chk@plt+0x5110>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esp),%esi
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%ebx),%eax
jmp    804e5ae <__sprintf_chk@plt+0x4cde>
nop
mov    (%ebx),%edx
jmp    804e8fa <__sprintf_chk@plt+0x502a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804e906 <__sprintf_chk@plt+0x5036>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804e8f2 <__sprintf_chk@plt+0x5022>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804e434 <__sprintf_chk@plt+0x4b64>
nop
mov    (%ebx),%edx
jmp    804e5a6 <__sprintf_chk@plt+0x4cd6>
nop
mov    (%ebx),%eax
jmp    804e780 <__sprintf_chk@plt+0x4eb0>
nop
mov    (%ebx),%eax
jmp    804e4f0 <__sprintf_chk@plt+0x4c20>
nop
mov    (%ebx),%edx
jmp    804e778 <__sprintf_chk@plt+0x4ea8>
nop
mov    (%ebx),%eax
jmp    804e83c <__sprintf_chk@plt+0x4f6c>
nop
mov    (%ebx),%eax
jmp    804e67c <__sprintf_chk@plt+0x4dac>
nop
mov    (%ebx),%edx
jmp    804e8ea <__sprintf_chk@plt+0x501a>
nop
mov    (%ebx),%edx
jmp    804e42c <__sprintf_chk@plt+0x4b5c>
nop
mov    (%ebx),%eax
jmp    804e37e <__sprintf_chk@plt+0x4aae>
nop
mov    (%ebx),%eax
jmp    804e59e <__sprintf_chk@plt+0x4cce>
nop
mov    (%ebx),%eax
jmp    804e2ff <__sprintf_chk@plt+0x4a2f>
nop
mov    (%ebx),%eax
jmp    804e56d <__sprintf_chk@plt+0x4c9d>
nop
mov    (%ebx),%edx
jmp    804e674 <__sprintf_chk@plt+0x4da4>
nop
mov    (%ebx),%eax
jmp    804e6f9 <__sprintf_chk@plt+0x4e29>
nop
mov    (%ebx),%eax
jmp    804e4bf <__sprintf_chk@plt+0x4bef>
nop
mov    (%ebx),%eax
jmp    804e770 <__sprintf_chk@plt+0x4ea0>
nop
mov    (%ebx),%edx
jmp    804e376 <__sprintf_chk@plt+0x4aa6>
nop
mov    (%ebx),%eax
jmp    804e3fb <__sprintf_chk@plt+0x4b2b>
nop
mov    (%ebx),%eax
jmp    804e80b <__sprintf_chk@plt+0x4f3b>
nop
mov    (%ebx),%eax
jmp    804e8e2 <__sprintf_chk@plt+0x5012>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804ef76 <__sprintf_chk@plt+0x56a6>
mov    (%eax),%eax
mov    %edx,%ebx
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804ec78 <__sprintf_chk@plt+0x53a8>
mov    (%eax),%esi
test   %esi,%esi
je     804eb4e <__sprintf_chk@plt+0x527e>
mov    (%esi),%edi
test   %edi,%edi
je     804ea9a <__sprintf_chk@plt+0x51ca>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ea45 <__sprintf_chk@plt+0x5175>
mov    0x0(%ebp),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ea90 <__sprintf_chk@plt+0x51c0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804ea7c <__sprintf_chk@plt+0x51ac>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804eb44 <__sprintf_chk@plt+0x5274>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804eb15 <__sprintf_chk@plt+0x5245>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804eadb <__sprintf_chk@plt+0x520b>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804eb0b <__sprintf_chk@plt+0x523b>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804eb3a <__sprintf_chk@plt+0x526a>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esi),%edx
movzbl 0xc(%esi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804ec6e <__sprintf_chk@plt+0x539e>
mov    (%esi),%edi
test   %edi,%edi
je     804ebb6 <__sprintf_chk@plt+0x52e6>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804eb87 <__sprintf_chk@plt+0x52b7>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ebac <__sprintf_chk@plt+0x52dc>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804ec60 <__sprintf_chk@plt+0x5390>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ec31 <__sprintf_chk@plt+0x5361>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804ebf7 <__sprintf_chk@plt+0x5327>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804ec27 <__sprintf_chk@plt+0x5357>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ec56 <__sprintf_chk@plt+0x5386>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
movzbl 0xc(%esi),%eax
mov    0x8(%esi),%edx
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804ef68 <__sprintf_chk@plt+0x5698>
mov    (%eax),%esi
test   %esi,%esi
je     804edee <__sprintf_chk@plt+0x551e>
mov    (%esi),%edi
test   %edi,%edi
je     804ecee <__sprintf_chk@plt+0x541e>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ecbf <__sprintf_chk@plt+0x53ef>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ece4 <__sprintf_chk@plt+0x5414>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804ede4 <__sprintf_chk@plt+0x5514>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ed69 <__sprintf_chk@plt+0x5499>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804ed2f <__sprintf_chk@plt+0x545f>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804ed5f <__sprintf_chk@plt+0x548f>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804edda <__sprintf_chk@plt+0x550a>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804eda0 <__sprintf_chk@plt+0x54d0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804edd0 <__sprintf_chk@plt+0x5500>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esi),%edx
movzbl 0xc(%esi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804ef5e <__sprintf_chk@plt+0x568e>
mov    (%esi),%edi
test   %edi,%edi
je     804eea6 <__sprintf_chk@plt+0x55d6>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ee77 <__sprintf_chk@plt+0x55a7>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804ee3d <__sprintf_chk@plt+0x556d>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804ee6d <__sprintf_chk@plt+0x559d>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ee9c <__sprintf_chk@plt+0x55cc>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     804ef50 <__sprintf_chk@plt+0x5680>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804eed5 <__sprintf_chk@plt+0x5605>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804ef46 <__sprintf_chk@plt+0x5676>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804ef0c <__sprintf_chk@plt+0x563c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804ef3c <__sprintf_chk@plt+0x566c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
movzbl 0xc(%esi),%eax
mov    0x8(%esi),%edx
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,(%esp)
je     804f4a2 <__sprintf_chk@plt+0x5bd2>
mov    (%eax),%eax
mov    %edx,%ebx
mov    %ecx,%esi
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804f1c4 <__sprintf_chk@plt+0x58f4>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f0a6 <__sprintf_chk@plt+0x57d6>
mov    (%eax),%edi
test   %edi,%edi
je     804f01e <__sprintf_chk@plt+0x574e>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804efe1 <__sprintf_chk@plt+0x5711>
mov    0x0(%ebp),%eax
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804efe1 <__sprintf_chk@plt+0x5711>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f00f <__sprintf_chk@plt+0x573f>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f00f <__sprintf_chk@plt+0x573f>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f01e <__sprintf_chk@plt+0x574e>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     804f093 <__sprintf_chk@plt+0x57c3>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f056 <__sprintf_chk@plt+0x5786>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f056 <__sprintf_chk@plt+0x5786>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f084 <__sprintf_chk@plt+0x57b4>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f084 <__sprintf_chk@plt+0x57b4>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f093 <__sprintf_chk@plt+0x57c3>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f0a6 <__sprintf_chk@plt+0x57d6>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f1b1 <__sprintf_chk@plt+0x58e1>
mov    (%eax),%edi
test   %edi,%edi
je     804f129 <__sprintf_chk@plt+0x5859>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f0ec <__sprintf_chk@plt+0x581c>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f0ec <__sprintf_chk@plt+0x581c>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f11a <__sprintf_chk@plt+0x584a>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f11a <__sprintf_chk@plt+0x584a>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f129 <__sprintf_chk@plt+0x5859>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     804f19e <__sprintf_chk@plt+0x58ce>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f161 <__sprintf_chk@plt+0x5891>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f161 <__sprintf_chk@plt+0x5891>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f18f <__sprintf_chk@plt+0x58bf>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f18f <__sprintf_chk@plt+0x58bf>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f19e <__sprintf_chk@plt+0x58ce>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f1b1 <__sprintf_chk@plt+0x58e1>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f1c4 <__sprintf_chk@plt+0x58f4>
mov    %bl,(%eax)
mov    (%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x4(%esp)
je     804f490 <__sprintf_chk@plt+0x5bc0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f372 <__sprintf_chk@plt+0x5aa2>
mov    (%eax),%edi
test   %edi,%edi
je     804f254 <__sprintf_chk@plt+0x5984>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f217 <__sprintf_chk@plt+0x5947>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f217 <__sprintf_chk@plt+0x5947>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f245 <__sprintf_chk@plt+0x5975>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f245 <__sprintf_chk@plt+0x5975>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f254 <__sprintf_chk@plt+0x5984>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     804f35f <__sprintf_chk@plt+0x5a8f>
mov    (%eax),%edi
test   %edi,%edi
je     804f2d7 <__sprintf_chk@plt+0x5a07>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f29a <__sprintf_chk@plt+0x59ca>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f29a <__sprintf_chk@plt+0x59ca>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f2c8 <__sprintf_chk@plt+0x59f8>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f2c8 <__sprintf_chk@plt+0x59f8>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f2d7 <__sprintf_chk@plt+0x5a07>
mov    %bl,(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     804f34c <__sprintf_chk@plt+0x5a7c>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f30f <__sprintf_chk@plt+0x5a3f>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f30f <__sprintf_chk@plt+0x5a3f>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f33d <__sprintf_chk@plt+0x5a6d>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f33d <__sprintf_chk@plt+0x5a6d>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f34c <__sprintf_chk@plt+0x5a7c>
mov    %bl,(%eax)
mov    0xc(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f35f <__sprintf_chk@plt+0x5a8f>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f372 <__sprintf_chk@plt+0x5aa2>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f47d <__sprintf_chk@plt+0x5bad>
mov    (%eax),%edi
test   %edi,%edi
je     804f3f5 <__sprintf_chk@plt+0x5b25>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f3b8 <__sprintf_chk@plt+0x5ae8>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f3b8 <__sprintf_chk@plt+0x5ae8>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f3e6 <__sprintf_chk@plt+0x5b16>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f3e6 <__sprintf_chk@plt+0x5b16>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f3f5 <__sprintf_chk@plt+0x5b25>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     804f46a <__sprintf_chk@plt+0x5b9a>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804f42d <__sprintf_chk@plt+0x5b5d>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f42d <__sprintf_chk@plt+0x5b5d>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     804f45b <__sprintf_chk@plt+0x5b8b>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   804ef80 <__sprintf_chk@plt+0x56b0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f45b <__sprintf_chk@plt+0x5b8b>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f46a <__sprintf_chk@plt+0x5b9a>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f47d <__sprintf_chk@plt+0x5bad>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    804f490 <__sprintf_chk@plt+0x5bc0>
mov    %bl,(%eax)
mov    (%esp),%eax
movzbl 0xc(%eax),%eax
add    %eax,%esi
movzbl (%esi),%eax
cmp    %eax,%ebx
jae    804f4a2 <__sprintf_chk@plt+0x5bd2>
mov    %bl,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
test   %edx,%edx
mov    %edx,0x4(%esp)
je     804fa90 <__sprintf_chk@plt+0x61c0>
mov    (%edx),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f59a <__sprintf_chk@plt+0x5cca>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     804f6e0 <__sprintf_chk@plt+0x5e10>
mov    (%eax),%edi
test   %edi,%edi
je     804f778 <__sprintf_chk@plt+0x5ea8>
mov    (%edi),%eax
test   %eax,%eax
mov    %eax,0x10(%esp)
je     804f800 <__sprintf_chk@plt+0x5f30>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804f880 <__sprintf_chk@plt+0x5fb0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804f678 <__sprintf_chk@plt+0x5da8>
mov    (%eax),%esi
test   %esi,%esi
je     804f960 <__sprintf_chk@plt+0x6090>
mov    (%esi),%ebp
test   %ebp,%ebp
je     804faa0 <__sprintf_chk@plt+0x61d0>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     804fe3e <__sprintf_chk@plt+0x656e>
mov    %ebx,%ecx
mov    %edi,0x1c(%esp)
mov    %ebx,%edi
mov    %eax,%ebx
jmp    804f576 <__sprintf_chk@plt+0x5ca6>
nop
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fe38 <__sprintf_chk@plt+0x6568>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804f568 <__sprintf_chk@plt+0x5c98>
lea    0x0(%esi),%esi
xor    %eax,%eax
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%ebx
mov    0x4(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804f638 <__sprintf_chk@plt+0x5d68>
mov    (%esi),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     804f900 <__sprintf_chk@plt+0x6030>
mov    (%eax),%edi
test   %edi,%edi
je     804f9c8 <__sprintf_chk@plt+0x60f8>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fb00 <__sprintf_chk@plt+0x6230>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     804feae <__sprintf_chk@plt+0x65de>
mov    %ebx,%ecx
mov    %esi,0xc(%esp)
mov    %ebx,%esi
mov    %eax,%ebx
jmp    804f61e <__sprintf_chk@plt+0x5d4e>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fea8 <__sprintf_chk@plt+0x65d8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    804f610 <__sprintf_chk@plt+0x5d40>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0x4(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
jne    804f666 <__sprintf_chk@plt+0x5d96>
jmp    804fa90 <__sprintf_chk@plt+0x61c0>
nop
movzbl 0xc(%eax),%edx
cmp    %cl,%dl
je     804fa90 <__sprintf_chk@plt+0x61c0>
mov    %eax,%ebx
mov    0x4(%ebx),%eax
cmp    %cl,%dl
cmova  (%ebx),%eax
test   %eax,%eax
jne    804f658 <__sprintf_chk@plt+0x5d88>
jmp    804f588 <__sprintf_chk@plt+0x5cb8>
nop
mov    0x14(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0x14(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %dl,%al
je     804fd5a <__sprintf_chk@plt+0x648a>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804f6c6 <__sprintf_chk@plt+0x5df6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fd58 <__sprintf_chk@plt+0x6488>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    804f6b8 <__sprintf_chk@plt+0x5de8>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804fc20 <__sprintf_chk@plt+0x6350>
mov    (%esi),%edi
test   %edi,%edi
je     804fa30 <__sprintf_chk@plt+0x6160>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fb60 <__sprintf_chk@plt+0x6290>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     804fe6e <__sprintf_chk@plt+0x659e>
mov    %ebx,%ecx
mov    %esi,0xc(%esp)
mov    %ebx,%esi
mov    %eax,%ebx
jmp    804f75e <__sprintf_chk@plt+0x5e8e>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fe68 <__sprintf_chk@plt+0x6598>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804f750 <__sprintf_chk@plt+0x5e80>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804fc70 <__sprintf_chk@plt+0x63a0>
mov    (%esi),%edi
test   %edi,%edi
je     804fbc0 <__sprintf_chk@plt+0x62f0>
mov    (%edi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%edi),%edi
movzbl 0xc(%ebx),%ebp
mov    %edi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     804fe8a <__sprintf_chk@plt+0x65ba>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    804f7e6 <__sprintf_chk@plt+0x5f16>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fe88 <__sprintf_chk@plt+0x65b8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    804f7d8 <__sprintf_chk@plt+0x5f08>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%esi
test   %esi,%esi
je     804fcc0 <__sprintf_chk@plt+0x63f0>
mov    (%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%esi),%esi
movzbl 0xc(%ebx),%ebp
mov    %esi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     804fccc <__sprintf_chk@plt+0x63fc>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804f866 <__sprintf_chk@plt+0x5f96>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %dl,%bl
je     804fe58 <__sprintf_chk@plt+0x6588>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    804f858 <__sprintf_chk@plt+0x5f88>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804fd08 <__sprintf_chk@plt+0x6438>
mov    (%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%esi),%esi
movzbl 0xc(%ebx),%ebp
mov    %esi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     804fd14 <__sprintf_chk@plt+0x6444>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804f8e6 <__sprintf_chk@plt+0x6016>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fec8 <__sprintf_chk@plt+0x65f8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    804f8d8 <__sprintf_chk@plt+0x6008>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     804f644 <__sprintf_chk@plt+0x5d74>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804f946 <__sprintf_chk@plt+0x6076>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fd70 <__sprintf_chk@plt+0x64a0>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804f938 <__sprintf_chk@plt+0x6068>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0x18(%esp),%eax
mov    %ebp,%ecx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %cl,%al
je     804fd7a <__sprintf_chk@plt+0x64aa>
mov    %ebx,%edx
mov    %esi,%ebx
mov    %edx,%esi
jmp    804f9ae <__sprintf_chk@plt+0x60de>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     804fd78 <__sprintf_chk@plt+0x64a8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    804f9a0 <__sprintf_chk@plt+0x60d0>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%edi
mov    %edi,%eax
cmp    %dl,%al
je     804fd9a <__sprintf_chk@plt+0x64ca>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    804fa16 <__sprintf_chk@plt+0x6146>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fd98 <__sprintf_chk@plt+0x64c8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804fa08 <__sprintf_chk@plt+0x6138>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     804fc2c <__sprintf_chk@plt+0x635c>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804fa76 <__sprintf_chk@plt+0x61a6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fdb8 <__sprintf_chk@plt+0x64e8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804fa68 <__sprintf_chk@plt+0x6198>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     804fdca <__sprintf_chk@plt+0x64fa>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804fae6 <__sprintf_chk@plt+0x6216>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fdc8 <__sprintf_chk@plt+0x64f8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    804fad8 <__sprintf_chk@plt+0x6208>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%edi
mov    %ebp,%edx
mov    %edi,%eax
cmp    %dl,%al
je     804fdea <__sprintf_chk@plt+0x651a>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    804fb46 <__sprintf_chk@plt+0x6276>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fde8 <__sprintf_chk@plt+0x6518>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804fb38 <__sprintf_chk@plt+0x6268>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%edi
mov    %ebp,%edx
mov    %edi,%eax
cmp    %dl,%al
je     804fe1a <__sprintf_chk@plt+0x654a>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    804fba6 <__sprintf_chk@plt+0x62d6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fe18 <__sprintf_chk@plt+0x6548>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804fb98 <__sprintf_chk@plt+0x62c8>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     804f590 <__sprintf_chk@plt+0x5cc0>
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     804fc7c <__sprintf_chk@plt+0x63ac>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804fc06 <__sprintf_chk@plt+0x6336>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804fe08 <__sprintf_chk@plt+0x6538>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804fbf8 <__sprintf_chk@plt+0x6328>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %dl,%al
je     804f59a <__sprintf_chk@plt+0x5cca>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    804fc56 <__sprintf_chk@plt+0x6386>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     804f598 <__sprintf_chk@plt+0x5cc8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804fc48 <__sprintf_chk@plt+0x6378>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0xc(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
je     804f6e0 <__sprintf_chk@plt+0x5e10>
mov    %ebx,%esi
jmp    804fca6 <__sprintf_chk@plt+0x63d6>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %cl,%dl
je     804f6e0 <__sprintf_chk@plt+0x5e10>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %cl,%dl
cmova  (%esi),%eax
test   %eax,%eax
jne    804fc98 <__sprintf_chk@plt+0x63c8>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%ecx
mov    %ebp,%edx
cmp    %dl,%cl
je     804f778 <__sprintf_chk@plt+0x5ea8>
mov    %ebx,%esi
jmp    804fcee <__sprintf_chk@plt+0x641e>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %dl,%cl
je     804f778 <__sprintf_chk@plt+0x5ea8>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %dl,%cl
cmovb  (%esi),%eax
test   %eax,%eax
jne    804fce0 <__sprintf_chk@plt+0x6410>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804f588 <__sprintf_chk@plt+0x5cb8>
movzbl 0xc(%ebx),%ebp
mov    0x10(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
je     804f800 <__sprintf_chk@plt+0x5f30>
mov    %ebx,%esi
jmp    804fd3e <__sprintf_chk@plt+0x646e>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %dl,%cl
je     804f800 <__sprintf_chk@plt+0x5f30>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %dl,%cl
cmovb  (%esi),%eax
test   %eax,%eax
jne    804fd30 <__sprintf_chk@plt+0x6460>
xor    %eax,%eax
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x10(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
jne    804f88f <__sprintf_chk@plt+0x5fbf>
jmp    804fd14 <__sprintf_chk@plt+0x6444>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    804f644 <__sprintf_chk@plt+0x5d74>
nop
mov    %esi,%ebx
mov    0x14(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804f69a <__sprintf_chk@plt+0x5dca>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804f91e <__sprintf_chk@plt+0x604e>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    804fc2c <__sprintf_chk@plt+0x635c>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804f982 <__sprintf_chk@plt+0x60b2>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x8(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804f9ea <__sprintf_chk@plt+0x611a>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    804fc7c <__sprintf_chk@plt+0x63ac>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804fa4e <__sprintf_chk@plt+0x617e>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
mov    0x1c(%esp),%edi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804fabe <__sprintf_chk@plt+0x61ee>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    804fccc <__sprintf_chk@plt+0x63fc>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%esp),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804fb7e <__sprintf_chk@plt+0x62ae>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804fbde <__sprintf_chk@plt+0x630e>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0xc(%esp),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
jne    804fb1e <__sprintf_chk@plt+0x624e>
jmp    804f590 <__sprintf_chk@plt+0x5cc0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    804fd14 <__sprintf_chk@plt+0x6444>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x18(%esp)
je     80503f1 <__sprintf_chk@plt+0x6b21>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8050140 <__sprintf_chk@plt+0x6870>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805000d <__sprintf_chk@plt+0x673d>
mov    (%eax),%esi
test   %esi,%esi
je     804ff80 <__sprintf_chk@plt+0x66b0>
mov    (%esi),%eax
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     804ff71 <__sprintf_chk@plt+0x66a1>
mov    0x4(%ebp),%edx
test   %edx,%edx
je     804ff6a <__sprintf_chk@plt+0x669a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    804ff5e <__sprintf_chk@plt+0x668e>
jmp    80505fe <__sprintf_chk@plt+0x6d2e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050600 <__sprintf_chk@plt+0x6d30>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    804ff50 <__sprintf_chk@plt+0x6680>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    804ff38 <__sprintf_chk@plt+0x6668>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     804fff3 <__sprintf_chk@plt+0x6723>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     804ffe9 <__sprintf_chk@plt+0x6719>
xchg   %ax,%ax
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804ffe2 <__sprintf_chk@plt+0x6712>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%ecx),%edx
cmp    %dl,%bl
jne    804ffd6 <__sprintf_chk@plt+0x6706>
jmp    8050456 <__sprintf_chk@plt+0x6b86>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8050458 <__sprintf_chk@plt+0x6b88>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    804ffc8 <__sprintf_chk@plt+0x66f8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    804ffb0 <__sprintf_chk@plt+0x66e0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ebp
test   %ebp,%ebp
jne    8050461 <__sprintf_chk@plt+0x6b91>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8050125 <__sprintf_chk@plt+0x6855>
mov    (%eax),%esi
test   %esi,%esi
je     8050098 <__sprintf_chk@plt+0x67c8>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     8050089 <__sprintf_chk@plt+0x67b9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050082 <__sprintf_chk@plt+0x67b2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050076 <__sprintf_chk@plt+0x67a6>
jmp    805060e <__sprintf_chk@plt+0x6d3e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050610 <__sprintf_chk@plt+0x6d40>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050068 <__sprintf_chk@plt+0x6798>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050050 <__sprintf_chk@plt+0x6780>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     805010b <__sprintf_chk@plt+0x683b>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     8050101 <__sprintf_chk@plt+0x6831>
xchg   %ax,%ax
mov    0x4(%ebp),%edx
test   %edx,%edx
je     80500fa <__sprintf_chk@plt+0x682a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80500ee <__sprintf_chk@plt+0x681e>
jmp    80503f9 <__sprintf_chk@plt+0x6b29>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050400 <__sprintf_chk@plt+0x6b30>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    80500e0 <__sprintf_chk@plt+0x6810>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    80500c8 <__sprintf_chk@plt+0x67f8>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%edi
test   %edi,%edi
jne    8050409 <__sprintf_chk@plt+0x6b39>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%esi
test   %esi,%esi
jne    8050555 <__sprintf_chk@plt+0x6c85>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
nop
mov    0x10(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     80503d7 <__sprintf_chk@plt+0x6b07>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8050265 <__sprintf_chk@plt+0x6995>
mov    (%eax),%esi
test   %esi,%esi
je     80501d8 <__sprintf_chk@plt+0x6908>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     80501c9 <__sprintf_chk@plt+0x68f9>
lea    0x0(%esi),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     80501c2 <__sprintf_chk@plt+0x68f2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80501b6 <__sprintf_chk@plt+0x68e6>
jmp    80505ed <__sprintf_chk@plt+0x6d1d>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80505f0 <__sprintf_chk@plt+0x6d20>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80501a8 <__sprintf_chk@plt+0x68d8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050190 <__sprintf_chk@plt+0x68c0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     805024b <__sprintf_chk@plt+0x697b>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     8050241 <__sprintf_chk@plt+0x6971>
xchg   %ax,%ax
mov    0x4(%ebp),%edx
test   %edx,%edx
je     805023a <__sprintf_chk@plt+0x696a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805022e <__sprintf_chk@plt+0x695e>
jmp    80504bc <__sprintf_chk@plt+0x6bec>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80504c0 <__sprintf_chk@plt+0x6bf0>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050220 <__sprintf_chk@plt+0x6950>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050208 <__sprintf_chk@plt+0x6938>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ebx
test   %ebx,%ebx
jne    80504c9 <__sprintf_chk@plt+0x6bf9>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     80503bd <__sprintf_chk@plt+0x6aed>
mov    (%eax),%esi
test   %esi,%esi
je     8050331 <__sprintf_chk@plt+0x6a61>
mov    (%esi),%eax
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x1c(%esp)
je     80502ff <__sprintf_chk@plt+0x6a2f>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%ebx
mov    (%eax),%eax
mov    %ebp,%edx
mov    %ebx,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%edi),%eax
mov    %ebx,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     80502f1 <__sprintf_chk@plt+0x6a21>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     80502ea <__sprintf_chk@plt+0x6a1a>
movzbl 0xc(%edi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80502de <__sprintf_chk@plt+0x6a0e>
jmp    805061e <__sprintf_chk@plt+0x6d4e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050620 <__sprintf_chk@plt+0x6d50>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80502d0 <__sprintf_chk@plt+0x6a00>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    80502b8 <__sprintf_chk@plt+0x69e8>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edi
mov    0x8(%eax),%eax
mov    %edi,0x10(%eax)
mov    0x8(%esp),%edi
mov    0x4(%esi),%eax
mov    0x18(%esp),%ecx
mov    %edi,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %edi,%edi
jne    805063d <__sprintf_chk@plt+0x6d6d>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
jmp    8050331 <__sprintf_chk@plt+0x6a61>
mov    %edx,%eax
nop
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     80503a3 <__sprintf_chk@plt+0x6ad3>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %ebp,%ebp
je     8050399 <__sprintf_chk@plt+0x6ac9>
nop
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8050392 <__sprintf_chk@plt+0x6ac2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8050386 <__sprintf_chk@plt+0x6ab6>
jmp    8050690 <__sprintf_chk@plt+0x6dc0>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050698 <__sprintf_chk@plt+0x6dc8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050378 <__sprintf_chk@plt+0x6aa8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050360 <__sprintf_chk@plt+0x6a90>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ecx
test   %ecx,%ecx
jne    80506a1 <__sprintf_chk@plt+0x6dd1>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%edx
test   %edx,%edx
jne    80506f5 <__sprintf_chk@plt+0x6e25>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%eax
test   %eax,%eax
jne    805074d <__sprintf_chk@plt+0x6e7d>
mov    0x10(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805044a <__sprintf_chk@plt+0x6b7a>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    805043e <__sprintf_chk@plt+0x6b6e>
jmp    8050545 <__sprintf_chk@plt+0x6c75>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050548 <__sprintf_chk@plt+0x6c78>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050430 <__sprintf_chk@plt+0x6b60>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    805040d <__sprintf_chk@plt+0x6b3d>
jmp    8050117 <__sprintf_chk@plt+0x6847>
mov    %ecx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80504a2 <__sprintf_chk@plt+0x6bd2>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8050496 <__sprintf_chk@plt+0x6bc6>
jmp    80505c2 <__sprintf_chk@plt+0x6cf2>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80505c8 <__sprintf_chk@plt+0x6cf8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050488 <__sprintf_chk@plt+0x6bb8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8050465 <__sprintf_chk@plt+0x6b95>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    805000d <__sprintf_chk@plt+0x673d>
mov    %edx,%eax
xchg   %ax,%ax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80504fe <__sprintf_chk@plt+0x6c2e>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    80504f2 <__sprintf_chk@plt+0x6c22>
jmp    8050518 <__sprintf_chk@plt+0x6c48>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050520 <__sprintf_chk@plt+0x6c50>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80504e8 <__sprintf_chk@plt+0x6c18>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80504cd <__sprintf_chk@plt+0x6bfd>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8050265 <__sprintf_chk@plt+0x6995>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x14(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8050278 <__sprintf_chk@plt+0x69a8>
jmp    80503bd <__sprintf_chk@plt+0x6aed>
mov    %edx,%eax
nop
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805058e <__sprintf_chk@plt+0x6cbe>
mov    0xc(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8050582 <__sprintf_chk@plt+0x6cb2>
jmp    80505a8 <__sprintf_chk@plt+0x6cd8>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80505b0 <__sprintf_chk@plt+0x6ce0>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050578 <__sprintf_chk@plt+0x6ca8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8050559 <__sprintf_chk@plt+0x6c89>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8050140 <__sprintf_chk@plt+0x6870>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0xc(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
jmp    8050140 <__sprintf_chk@plt+0x6870>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8050020 <__sprintf_chk@plt+0x6750>
jmp    8050125 <__sprintf_chk@plt+0x6855>
mov    %edx,%eax
nop
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    80501d8 <__sprintf_chk@plt+0x6908>
mov    %edx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    804ff80 <__sprintf_chk@plt+0x66b0>
mov    %edx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8050098 <__sprintf_chk@plt+0x67c8>
mov    %edx,%eax
mov    0x1c(%esp),%edi
mov    0x8(%eax),%eax
mov    0x18(%esp),%ecx
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x4(%esi),%eax
mov    0x8(%esp),%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x8(%esp),%ebp
mov    0x4(%ebp),%edx
test   %edx,%edx
je     805067a <__sprintf_chk@plt+0x6daa>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805066e <__sprintf_chk@plt+0x6d9e>
jmp    8050325 <__sprintf_chk@plt+0x6a55>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050328 <__sprintf_chk@plt+0x6a58>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050660 <__sprintf_chk@plt+0x6d90>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8050641 <__sprintf_chk@plt+0x6d71>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
jmp    8050331 <__sprintf_chk@plt+0x6a61>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80506d6 <__sprintf_chk@plt+0x6e06>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    80506ca <__sprintf_chk@plt+0x6dfa>
jmp    80506e2 <__sprintf_chk@plt+0x6e12>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80506e8 <__sprintf_chk@plt+0x6e18>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80506c0 <__sprintf_chk@plt+0x6df0>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80506a5 <__sprintf_chk@plt+0x6dd5>
jmp    80503af <__sprintf_chk@plt+0x6adf>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805072e <__sprintf_chk@plt+0x6e5e>
mov    0xc(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8050722 <__sprintf_chk@plt+0x6e52>
jmp    805073a <__sprintf_chk@plt+0x6e6a>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8050740 <__sprintf_chk@plt+0x6e70>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8050718 <__sprintf_chk@plt+0x6e48>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80506f9 <__sprintf_chk@plt+0x6e29>
jmp    80503c9 <__sprintf_chk@plt+0x6af9>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
mov    0x10(%esp),%edi
mov    0x8(%esp),%esi
mov    0x4(%esi),%edx
test   %edx,%edx
je     8050786 <__sprintf_chk@plt+0x6eb6>
movzbl 0xc(%edi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805077a <__sprintf_chk@plt+0x6eaa>
jmp    80507a0 <__sprintf_chk@plt+0x6ed0>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80507a8 <__sprintf_chk@plt+0x6ed8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8050770 <__sprintf_chk@plt+0x6ea0>
mov    0x10(%esi),%esi
test   %esi,%esi
jne    8050755 <__sprintf_chk@plt+0x6e85>
mov    0x10(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    80503f1 <__sprintf_chk@plt+0x6b21>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x10(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x548,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
test   %eax,%eax
mov    %eax,%ebx
je     80508f0 <__sprintf_chk@plt+0x7020>
movl   $0x8049390,0x10(%esp)
movl   $0x805b470,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049430 <_obstack_begin@plt>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
movl   $0x0,0x2c(%ebx)
mov    %ecx,%eax
sub    %edx,%eax
cmp    $0x1f,%eax
jle    80508c0 <__sprintf_chk@plt+0x6ff0>
mov    0x8(%ebx),%eax
add    $0x20,%edx
mov    %edx,0xc(%ebx)
cmp    %eax,%edx
je     80508e7 <__sprintf_chk@plt+0x7017>
mov    0x18(%ebx),%esi
mov    %ecx,%ebp
add    %esi,%edx
not    %esi
and    %esi,%edx
mov    0x4(%ebx),%esi
mov    %edx,%edi
mov    %edx,0xc(%ebx)
sub    %esi,%edi
sub    %esi,%ebp
cmp    %ebp,%edi
jg     80508b8 <__sprintf_chk@plt+0x6fe8>
test   %eax,%eax
mov    %edx,0x8(%ebx)
mov    %eax,0x30(%ebx)
je     80508f4 <__sprintf_chk@plt+0x7024>
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    0x40(%esp),%eax
movl   $0x7fffffff,0x34(%ebx)
movl   $0xffffffff,0x38(%ebx)
movl   $0x0,0x53c(%ebx)
00
mov    %eax,0x544(%ebx)
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0xc(%ebx)
mov    %ecx,%edx
jmp    805084b <__sprintf_chk@plt+0x6f7b>
nop
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049400 <_obstack_newchunk@plt>
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ecx
add    $0x20,%edx
cmp    %eax,%edx
mov    %edx,0xc(%ebx)
jne    8050830 <__sprintf_chk@plt+0x6f60>
orb    $0x2,0x28(%ebx)
jmp    8050830 <__sprintf_chk@plt+0x6f60>
xor    %eax,%eax
jmp    80508ad <__sprintf_chk@plt+0x6fdd>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049470 <obstack_free@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
xor    %eax,%eax
jmp    80508ad <__sprintf_chk@plt+0x6fdd>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb8(%esp),%eax
mov    0xb4(%esp),%edx
mov    0xb0(%esp),%edi
add    %eax,%edx
test   %eax,%eax
mov    0x30(%edi),%esi
je     8050e92 <__sprintf_chk@plt+0x75c2>
lea    -0x1(%edx),%ebp
add    $0x1,%eax
mov    %eax,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,%ebp
sub    %edx,0x14(%esp)
jmp    8050b2d <__sprintf_chk@plt+0x725d>
lea    0x0(%esi),%esi
mov    0xc(%esp),%edi
movzbl (%edi),%edx
movzbl (%eax,%edx,1),%eax
mov    0x4(%esi),%ebx
lea    0x4(%esi),%edx
mov    %edx,0x30(%esp)
movl   $0x0,0x60(%esp)
test   %ebx,%ebx
je     8050b50 <__sprintf_chk@plt+0x7280>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    0x4(%ebx),%edx
cmovb  (%ebx),%edx
sbb    %ecx,%ecx
add    $0x1,%ecx
mov    %ebx,0x34(%esp)
test   %edx,%edx
mov    %ecx,0x64(%esp)
je     8050df8 <__sprintf_chk@plt+0x7528>
cmp    0xc(%edx),%al
je     8050b48 <__sprintf_chk@plt+0x7278>
mov    0x4(%edx),%ebx
cmovb  (%edx),%ebx
mov    %edx,0x38(%esp)
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x68(%esp)
je     8050e18 <__sprintf_chk@plt+0x7548>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x3c(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x6c(%esp)
je     8050e08 <__sprintf_chk@plt+0x7538>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x40(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x70(%esp)
je     8050e58 <__sprintf_chk@plt+0x7588>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x44(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x74(%esp)
je     8050e48 <__sprintf_chk@plt+0x7578>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x48(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x78(%esp)
je     8050e38 <__sprintf_chk@plt+0x7568>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x4c(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x7c(%esp)
je     8050e28 <__sprintf_chk@plt+0x7558>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x50(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x80(%esp)
je     8050de8 <__sprintf_chk@plt+0x7518>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x54(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x84(%esp)
je     8050dd8 <__sprintf_chk@plt+0x7508>
cmp    0xc(%ebx),%al
je     8050b17 <__sprintf_chk@plt+0x7247>
mov    0x4(%ebx),%edx
cmovb  (%ebx),%edx
sbb    %ecx,%ecx
add    $0x1,%ecx
mov    %ebx,0x58(%esp)
test   %edx,%edx
mov    %ecx,0x88(%esp)
je     8050dc8 <__sprintf_chk@plt+0x74f8>
cmp    0xc(%edx),%al
je     8050b48 <__sprintf_chk@plt+0x7278>
mov    0x4(%edx),%ebx
cmovb  (%edx),%ebx
mov    %edx,0x5c(%esp)
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x8c(%esp)
je     8050db8 <__sprintf_chk@plt+0x74e8>
subl   $0x1,0xc(%esp)
mov    0x14(%esp),%eax
add    0xc(%esp),%eax
mov    0x8(%ebx),%esi
je     8050e90 <__sprintf_chk@plt+0x75c0>
mov    0x544(%ebp),%eax
test   %eax,%eax
jne    8050958 <__sprintf_chk@plt+0x7088>
mov    0xc(%esp),%eax
movzbl (%eax),%eax
jmp    8050963 <__sprintf_chk@plt+0x7093>
nop
mov    %edx,%ebx
jmp    8050b17 <__sprintf_chk@plt+0x7247>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x18(%esp)
mov    0x10(%ebp),%ecx
mov    0xc(%ebp),%edx
mov    %ecx,0x10(%esp)
sub    %edx,%ecx
cmp    $0xf,%ecx
jle    8050d78 <__sprintf_chk@plt+0x74a8>
mov    0x8(%ebp),%ebx
add    $0x10,%edx
mov    %edx,0xc(%ebp)
cmp    %ebx,%edx
je     8050dab <__sprintf_chk@plt+0x74db>
mov    0x18(%ebp),%ecx
mov    %ecx,%edi
add    %edi,%edx
mov    %ecx,0x20(%esp)
not    %ecx
and    %ecx,%edx
mov    %ecx,0x24(%esp)
mov    0x4(%ebp),%ecx
mov    %edx,%edi
mov    %edx,0xc(%ebp)
sub    %ecx,%edi
mov    %edi,0x28(%esp)
mov    0x10(%esp),%edi
mov    %ecx,0x1c(%esp)
sub    %ecx,%edi
cmp    %edi,0x28(%esp)
jle    8050bb8 <__sprintf_chk@plt+0x72e8>
mov    0x10(%esp),%edi
mov    %edi,0xc(%ebp)
mov    %edi,%edx
test   %ebx,%ebx
mov    %edx,0x8(%ebp)
je     8050f8b <__sprintf_chk@plt+0x76bb>
mov    0x10(%esp),%edi
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
sub    %edx,%edi
cmp    $0x1f,%edi
jle    8050d28 <__sprintf_chk@plt+0x7458>
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%edx
lea    0x20(%edi),%ecx
cmp    %edx,%ecx
mov    %ecx,0xc(%ebp)
je     8050d6f <__sprintf_chk@plt+0x749f>
mov    %edx,0x2c(%esp)
mov    0x1c(%esp),%edi
add    0x20(%esp),%ecx
mov    0x10(%esp),%edx
and    0x24(%esp),%ecx
mov    %al,0x28(%esp)
mov    %ecx,%eax
sub    %edi,%edx
sub    %edi,%eax
cmp    %edx,%eax
movzbl 0x28(%esp),%eax
mov    %ecx,0xc(%ebp)
mov    0x2c(%esp),%edx
jle    8050c2a <__sprintf_chk@plt+0x735a>
mov    0x10(%esp),%edi
mov    %edi,0xc(%ebp)
mov    %edi,%ecx
test   %edx,%edx
mov    %ecx,0x8(%ebp)
mov    %edx,0x8(%ebx)
je     8050f77 <__sprintf_chk@plt+0x76a7>
mov    0x14(%esi),%ecx
mov    %esi,0x8(%edx)
movl   $0x0,(%edx)
movl   $0x0,0x4(%edx)
add    $0x1,%ecx
movl   $0x0,0xc(%edx)
movl   $0x0,0x10(%edx)
mov    %ecx,0x14(%edx)
movl   $0x0,0x18(%edx)
mov    %al,0xc(%ebx)
mov    0x18(%esp),%eax
movb   $0x0,0xd(%ebx)
sub    $0x1,%eax
mov    0x60(%esp,%eax,4),%esi
mov    0x30(%esp,%eax,4),%edx
test   %esi,%esi
jne    8050cc0 <__sprintf_chk@plt+0x73f0>
mov    %ebx,(%edx)
test   %eax,%eax
je     8050b17 <__sprintf_chk@plt+0x7247>
movzbl 0xd(%edx),%ecx
test   %cl,%cl
jne    8050cd0 <__sprintf_chk@plt+0x7400>
mov    0xc(%esp),%edi
jmp    8050ca4 <__sprintf_chk@plt+0x73d4>
mov    0x30(%esp,%eax,4),%edx
movzbl 0xd(%edx),%ecx
test   %cl,%cl
jne    8050cc8 <__sprintf_chk@plt+0x73f8>
cmpl   $0x1,0x60(%esp,%eax,4)
sbb    %ecx,%ecx
or     $0x1,%ecx
sub    $0x1,%eax
mov    %cl,0xd(%edx)
jne    8050c98 <__sprintf_chk@plt+0x73c8>
mov    %edi,0xc(%esp)
jmp    8050b17 <__sprintf_chk@plt+0x7247>
nop
mov    %ebx,0x4(%edx)
jmp    8050c82 <__sprintf_chk@plt+0x73b2>
lea    0x0(%esi),%esi
mov    0x60(%esp,%eax,4),%esi
mov    %edi,0xc(%esp)
test   %esi,%esi
jne    8050e68 <__sprintf_chk@plt+0x7598>
sub    $0x1,%ecx
test   %cl,%cl
mov    %cl,0xd(%edx)
je     8050b17 <__sprintf_chk@plt+0x7247>
cmp    $0xfe,%cl
je     8050ec7 <__sprintf_chk@plt+0x75f7>
cmp    $0x2,%cl
jne    8050f28 <__sprintf_chk@plt+0x7658>
mov    0x64(%esp,%eax,4),%ecx
test   %ecx,%ecx
je     8050f41 <__sprintf_chk@plt+0x7671>
cmp    $0x1,%ecx
jne    8050f28 <__sprintf_chk@plt+0x7658>
mov    0x4(%edx),%ecx
mov    (%ecx),%esi
mov    %edx,(%ecx)
movb   $0x0,0xd(%edx)
mov    %esi,0x4(%edx)
movb   $0x0,0xd(%ecx)
jmp    8050f08 <__sprintf_chk@plt+0x7638>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   8049400 <_obstack_newchunk@plt>
mov    0x18(%ebp),%eax
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%edx
mov    %eax,0x20(%esp)
not    %eax
mov    %eax,0x24(%esp)
mov    0x10(%ebp),%eax
lea    0x20(%edi),%ecx
cmp    %edx,%ecx
mov    %ecx,0xc(%ebp)
mov    %eax,0x10(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
jne    8050bf3 <__sprintf_chk@plt+0x7323>
orb    $0x2,0x28(%ebp)
jmp    8050bf3 <__sprintf_chk@plt+0x7323>
movl   $0x10,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   8049400 <_obstack_newchunk@plt>
mov    0xc(%ebp),%edx
mov    0x8(%ebp),%ebx
mov    0x10(%ebp),%eax
add    $0x10,%edx
cmp    %ebx,%edx
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %edx,0xc(%ebp)
jne    8050b7e <__sprintf_chk@plt+0x72ae>
orb    $0x2,0x28(%ebp)
jmp    8050b7e <__sprintf_chk@plt+0x72ae>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0xb,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0xa,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x9,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x2,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x4,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x3,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x8,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x7,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x6,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
movl   $0x5,0x18(%esp)
jmp    8050b58 <__sprintf_chk@plt+0x7288>
lea    0x0(%esi),%esi
cmp    $0x1,%esi
jne    8050b17 <__sprintf_chk@plt+0x7247>
add    $0x1,%ecx
test   %cl,%cl
mov    %cl,0xd(%edx)
je     8050b17 <__sprintf_chk@plt+0x7247>
cmp    $0xfe,%cl
jne    8050cef <__sprintf_chk@plt+0x741f>
jmp    8050ec7 <__sprintf_chk@plt+0x75f7>
lea    0x0(%esi),%esi
mov    %ebp,%edi
mov    (%esi),%eax
test   %eax,%eax
mov    0x2c(%edi),%eax
jne    8050ea1 <__sprintf_chk@plt+0x75d1>
lea    0x1(%eax,%eax,1),%edx
mov    %edx,(%esi)
add    $0x1,%eax
mov    %eax,0x2c(%edi)
mov    0x14(%esi),%eax
cmp    0x34(%edi),%eax
jge    8050eb2 <__sprintf_chk@plt+0x75e2>
mov    %eax,0x34(%edi)
cmp    0x38(%edi),%eax
jle    8050eba <__sprintf_chk@plt+0x75ea>
mov    %eax,0x38(%edi)
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x64(%esp,%eax,4),%ecx
test   %ecx,%ecx
je     8050f2d <__sprintf_chk@plt+0x765d>
cmp    $0x1,%ecx
jne    8050f28 <__sprintf_chk@plt+0x7658>
mov    (%edx),%edi
mov    %eax,0x10(%esp)
mov    0x4(%edi),%ecx
mov    0x4(%ecx),%eax
mov    (%ecx),%esi
cmpb   $0x1,0xd(%ecx)
mov    %edi,(%ecx)
mov    %esi,0x4(%edi)
mov    %edx,0x4(%ecx)
mov    %eax,(%edx)
sete   %al
neg    %eax
mov    %al,0xd(%edi)
cmpb   $0xff,0xd(%ecx)
sete   0xd(%edx)
movb   $0x0,0xd(%ecx)
mov    0x10(%esp),%eax
sub    $0x1,%eax
mov    0x60(%esp,%eax,4),%edx
mov    0x30(%esp,%eax,4),%eax
test   %edx,%edx
jne    8050fbb <__sprintf_chk@plt+0x76eb>
mov    %ecx,(%eax)
jmp    8050b17 <__sprintf_chk@plt+0x7247>
lea    0x0(%esi),%esi
call   8049820 <abort@plt>
mov    (%edx),%ecx
mov    0x4(%ecx),%esi
mov    %edx,0x4(%ecx)
movb   $0x0,0xd(%edx)
mov    %esi,(%edx)
movb   $0x0,0xd(%ecx)
jmp    8050f08 <__sprintf_chk@plt+0x7638>
mov    0x4(%edx),%edi
mov    %eax,0x10(%esp)
mov    (%edi),%ecx
mov    (%ecx),%eax
cmpb   $0x1,0xd(%ecx)
mov    0x4(%ecx),%esi
mov    %edx,(%ecx)
mov    %eax,0x4(%edx)
sete   %al
neg    %eax
mov    %edi,0x4(%ecx)
mov    %esi,(%edi)
mov    %al,0xd(%edx)
cmpb   $0xff,0xd(%ecx)
sete   0xd(%edi)
movb   $0x0,0xd(%ecx)
mov    0x10(%esp),%eax
jmp    8050f08 <__sprintf_chk@plt+0x7638>
cmp    %ebx,0x1c(%esp)
mov    %ebp,%edi
jae    8050fc3 <__sprintf_chk@plt+0x76f3>
cmp    %ebx,0x10(%esp)
jbe    8050fc3 <__sprintf_chk@plt+0x76f3>
mov    %ebx,0x8(%ebp)
mov    %ebx,0xc(%ebp)
movl   $0x5,0xb8(%esp)
00
movl   $0x8064050,0xb4(%esp)
08
movl   $0x0,0xb0(%esp)
00
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049410 <dcgettext@plt>
mov    %ecx,0x4(%eax)
jmp    8050b17 <__sprintf_chk@plt+0x7247>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049470 <obstack_free@plt>
jmp    8050f8b <__sprintf_chk@plt+0x76bb>
jmp    8050fe0 <__sprintf_chk@plt+0x7710>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    $0x40,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x53c,%esp
mov    0x550(%esp),%eax
lea    0x42c(%esp),%edi
mov    %gs:0x14,%esi
mov    %esi,0x52c(%esp)
xor    %esi,%esi
mov    0x34(%eax),%ebx
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    $0xff,%eax
cmp    $0xff,%ebx
cmovle %ebx,%eax
movzbl %al,%eax
imul   $0x1010101,%eax,%eax
cmpl   $0x1,0x2c(%esi)
rep stos %eax,%es:(%edi)
je     8051281 <__sprintf_chk@plt+0x79b1>
mov    0x1c(%esp),%eax
mov    0x30(%eax),%esi
test   %esi,%esi
mov    %esi,0x28(%esp)
je     80513e9 <__sprintf_chk@plt+0x7b19>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
lea    0x28(%esp),%edx
call   804e260 <__sprintf_chk@plt+0x4990>
mov    0x1c(%esp),%edi
lea    0x42c(%esp),%ecx
mov    0x14(%esi),%edx
mov    0x34(%edi),%eax
mov    %eax,0x18(%esi)
mov    %eax,0x1c(%esi)
mov    0x4(%esi),%eax
call   804ef80 <__sprintf_chk@plt+0x56b0>
mov    0x30(%edi),%eax
mov    0x4(%esi),%ebp
mov    %eax,%ebx
mov    %eax,0x18(%esp)
mov    0x10(%esi),%eax
test   %ebp,%ebp
mov    %eax,%edi
je     80510f8 <__sprintf_chk@plt+0x7828>
mov    %eax,%edx
mov    0x0(%ebp),%eax
mov    %ebx,%ecx
call   804fee0 <__sprintf_chk@plt+0x6610>
mov    0x4(%ebp),%eax
mov    %ebx,%ecx
mov    %edi,%edx
call   804fee0 <__sprintf_chk@plt+0x6610>
test   %edi,%edi
je     80510e9 <__sprintf_chk@plt+0x7819>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80510e2 <__sprintf_chk@plt+0x7812>
movzbl 0xc(%ebp),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80510d6 <__sprintf_chk@plt+0x7806>
jmp    805126c <__sprintf_chk@plt+0x799c>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051270 <__sprintf_chk@plt+0x79a0>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    80510c8 <__sprintf_chk@plt+0x77f8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80510b0 <__sprintf_chk@plt+0x77e0>
mov    0x18(%esp),%edi
mov    0x8(%ebp),%eax
mov    %edi,0x10(%eax)
mov    0x10(%esi),%edi
xchg   %ax,%ax
test   %edi,%edi
je     8051189 <__sprintf_chk@plt+0x78b9>
mov    (%esi),%eax
mov    0x4(%esi),%ebp
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    0x4(%edi),%ebx
je     805116c <__sprintf_chk@plt+0x789c>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     805115e <__sprintf_chk@plt+0x788e>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   804f4b0 <__sprintf_chk@plt+0x5be0>
test   %eax,%eax
je     805115e <__sprintf_chk@plt+0x788e>
test   %ebx,%ebx
je     805115e <__sprintf_chk@plt+0x788e>
movzbl 0xc(%ebp),%ecx
movzbl 0xc(%ebx),%eax
cmp    %al,%cl
jne    8051152 <__sprintf_chk@plt+0x7882>
jmp    805116c <__sprintf_chk@plt+0x789c>
lea    0x0(%esi),%esi
movzbl 0xc(%edx),%eax
cmp    %cl,%al
je     805116c <__sprintf_chk@plt+0x789c>
mov    %edx,%ebx
mov    0x4(%ebx),%edx
cmp    %al,%cl
cmovb  (%ebx),%edx
test   %edx,%edx
jne    8051148 <__sprintf_chk@plt+0x7878>
mov    0x14(%esi),%eax
sub    0x14(%edi),%eax
cmp    0x18(%edi),%eax
jge    805116c <__sprintf_chk@plt+0x789c>
mov    %eax,0x18(%edi)
mov    0x18(%esp),%eax
test   %eax,%eax
je     8051182 <__sprintf_chk@plt+0x78b2>
mov    0x14(%esi),%eax
sub    0x14(%edi),%eax
cmp    %eax,0x1c(%edi)
jle    8051182 <__sprintf_chk@plt+0x78b2>
mov    %eax,0x1c(%edi)
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8051110 <__sprintf_chk@plt+0x7840>
mov    0xc(%esi),%esi
test   %esi,%esi
jne    8051050 <__sprintf_chk@plt+0x7780>
mov    0x1c(%esp),%eax
mov    0x30(%eax),%edx
mov    0xc(%edx),%eax
test   %eax,%eax
je     80511c9 <__sprintf_chk@plt+0x78f9>
lea    0x0(%esi),%esi
mov    0x8(%eax),%ebx
mov    0x1c(%eax),%ecx
mov    0x1c(%ebx),%ebx
cmp    %ebx,%ecx
jle    80511ba <__sprintf_chk@plt+0x78ea>
mov    %ebx,0x1c(%eax)
mov    %ebx,%ecx
cmp    %ecx,0x18(%eax)
jle    80511c2 <__sprintf_chk@plt+0x78f2>
mov    %ecx,0x18(%eax)
mov    0xc(%eax),%eax
test   %eax,%eax
jne    80511a8 <__sprintf_chk@plt+0x78d8>
lea    0x2c(%esp),%esi
xor    %eax,%eax
mov    $0x100,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    0x4(%edx),%eax
mov    %esi,%edx
call   804e9f0 <__sprintf_chk@plt+0x5120>
mov    0x1c(%esp),%eax
mov    0x1c(%esp),%ebx
mov    0x544(%eax),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     8051398 <__sprintf_chk@plt+0x7ac8>
lea    0x0(%esi),%esi
movzbl (%ecx,%eax,1),%edx
mov    0x2c(%esp,%edx,4),%edx
mov    %edx,0x13c(%ebx,%eax,4)
add    $0x1,%eax
cmp    $0x100,%eax
jne    8051200 <__sprintf_chk@plt+0x7930>
mov    %ecx,%eax
test   %eax,%eax
je     8051446 <__sprintf_chk@plt+0x7b76>
mov    0x1c(%esp),%ebx
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax,%edx,1),%ecx
movzbl 0x42c(%esp,%ecx,1),%ecx
mov    %cl,0x3c(%ebx,%edx,1)
add    $0x1,%edx
cmp    $0x100,%edx
jne    8051230 <__sprintf_chk@plt+0x7960>
xor    %eax,%eax
mov    0x52c(%esp),%esi
xor    %gs:0x14,%esi
jne    80513f0 <__sprintf_chk@plt+0x7b20>
add    $0x53c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
xchg   %ax,%ax
mov    0x8(%ebp),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x10(%esi),%edi
jmp    80510f8 <__sprintf_chk@plt+0x7828>
mov    0x544(%esi),%edx
test   %edx,%edx
jne    8051039 <__sprintf_chk@plt+0x7769>
mov    0x10(%esi),%ecx
mov    0xc(%esi),%eax
mov    %ecx,%edx
sub    %eax,%edx
cmp    %edx,%ebx
jle    80512af <__sprintf_chk@plt+0x79df>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049400 <_obstack_newchunk@plt>
mov    0xc(%esi),%eax
mov    0x10(%esi),%ecx
mov    0x1c(%esp),%esi
add    %ebx,%eax
mov    0x8(%esi),%edx
mov    %eax,0xc(%esi)
cmp    %edx,%eax
jne    80512c7 <__sprintf_chk@plt+0x79f7>
orb    $0x2,0x28(%esi)
mov    0x1c(%esp),%esi
mov    0x18(%esi),%ebx
mov    %ecx,%edi
add    %ebx,%eax
not    %ebx
and    %ebx,%eax
mov    0x4(%esi),%ebx
mov    %eax,0xc(%esi)
mov    %eax,%esi
sub    %ebx,%esi
sub    %ebx,%edi
cmp    %edi,%esi
jle    80512eb <__sprintf_chk@plt+0x7a1b>
mov    0x1c(%esp),%eax
mov    %ecx,0xc(%eax)
mov    %ecx,%eax
mov    0x1c(%esp),%esi
test   %edx,%edx
mov    %eax,0x8(%esi)
mov    %edx,0x53c(%esi)
je     8051425 <__sprintf_chk@plt+0x7b55>
mov    0x34(%esi),%eax
mov    0x30(%esi),%ebx
mov    %eax,%ecx
sub    $0x1,%ecx
js     8051332 <__sprintf_chk@plt+0x7a62>
mov    0x4(%ebx),%eax
movzbl 0xc(%eax),%eax
mov    %al,(%edx,%ecx,1)
mov    0x4(%ebx),%eax
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
mov    0x8(%eax),%ebx
mov    0x1c(%esp),%eax
mov    0x53c(%eax),%edx
jne    805130d <__sprintf_chk@plt+0x7a3d>
mov    0x34(%eax),%eax
test   %eax,%eax
mov    %eax,%ebx
lea    0x1(%eax),%ebp
mov    $0x1,%ecx
mov    %eax,%edi
jle    805135b <__sprintf_chk@plt+0x7a8b>
movzbl -0x1(%edx,%ecx,1),%esi
mov    %ebx,%eax
sub    %ecx,%eax
add    $0x1,%ecx
cmp    %ebp,%ecx
mov    %al,0x42c(%esp,%esi,1)
jne    8051342 <__sprintf_chk@plt+0x7a72>
mov    %edi,%eax
mov    %eax,%ecx
movzbl -0x1(%edx,%eax,1),%ebx
sub    $0x2,%ecx
js     805137d <__sprintf_chk@plt+0x7aad>
cmp    %bl,-0x2(%edx,%eax,1)
jne    8051375 <__sprintf_chk@plt+0x7aa5>
jmp    805137d <__sprintf_chk@plt+0x7aad>
nop
cmp    %bl,(%edx,%ecx,1)
je     805137d <__sprintf_chk@plt+0x7aad>
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
jne    8051370 <__sprintf_chk@plt+0x7aa0>
mov    0x1c(%esp),%esi
not    %ecx
add    %ecx,%eax
mov    %eax,0x540(%esi)
mov    0x544(%esi),%eax
jmp    805121b <__sprintf_chk@plt+0x794b>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
lea    0x13c(%eax),%edi
mov    $0x400,%eax
test   $0x1,%edi
jne    8051407 <__sprintf_chk@plt+0x7b37>
test   $0x2,%edi
jne    80513f5 <__sprintf_chk@plt+0x7b25>
mov    %eax,%ecx
xor    %edx,%edx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     80513cf <__sprintf_chk@plt+0x7aff>
movzwl (%esi),%edx
mov    %dx,(%edi)
mov    $0x2,%edx
test   $0x1,%al
je     80513da <__sprintf_chk@plt+0x7b0a>
movzbl (%esi,%edx,1),%eax
mov    %al,(%edi,%edx,1)
mov    0x1c(%esp),%eax
mov    0x544(%eax),%eax
jmp    805121b <__sprintf_chk@plt+0x794b>
xor    %edx,%edx
jmp    805119b <__sprintf_chk@plt+0x78cb>
call   8049420 <__stack_chk_fail@plt>
movzwl (%esi),%edx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %dx,-0x2(%edi)
jmp    80513b7 <__sprintf_chk@plt+0x7ae7>
movzbl (%esi),%eax
mov    0x1c(%esp),%esi
mov    %al,0x13c(%esi)
lea    0x13d(%esi),%edi
mov    $0x3ff,%eax
lea    0x2d(%esp),%esi
jmp    80513af <__sprintf_chk@plt+0x7adf>
movl   $0x5,0x8(%esp)
movl   $0x8064050,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
jmp    805124d <__sprintf_chk@plt+0x797d>
mov    0x1c(%esp),%esi
mov    $0x100,%edx
lea    0x3c(%esi),%edi
test   $0x1,%edi
lea    0x42c(%esp),%esi
je     805147f <__sprintf_chk@plt+0x7baf>
mov    0x1c(%esp),%esi
movzbl 0x42c(%esp),%edx
lea    0x3d(%esi),%edi
mov    %dl,0x3c(%esi)
lea    0x42d(%esp),%esi
mov    $0xff,%edx
test   $0x2,%edi
je     8051497 <__sprintf_chk@plt+0x7bc7>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %cx,-0x2(%edi)
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     80514ae <__sprintf_chk@plt+0x7bde>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
and    $0x1,%edx
je     805124d <__sprintf_chk@plt+0x797d>
movzbl (%esi,%ecx,1),%edx
mov    %dl,(%edi,%ecx,1)
jmp    805124d <__sprintf_chk@plt+0x797d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
cmpl   $0x1,0x2c(%eax)
je     8051501 <__sprintf_chk@plt+0x7c31>
mov    0x50(%esp),%eax
mov    $0xffffffff,%esi
mov    0x34(%eax),%edi
cmp    %edi,0x58(%esp)
jae    8051619 <__sprintf_chk@plt+0x7d49>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x544(%eax),%ebx
test   %ebx,%ebx
jne    80514e1 <__sprintf_chk@plt+0x7c11>
mov    0x34(%eax),%ebx
test   %ebx,%ebx
je     8051a00 <__sprintf_chk@plt+0x8130>
cmp    %ebx,0x58(%esp)
mov    $0xffffffff,%esi
jb     80514f7 <__sprintf_chk@plt+0x7c27>
cmp    $0x1,%ebx
je     8051a8e <__sprintf_chk@plt+0x81be>
mov    0x50(%esp),%eax
lea    (%ebx,%ebx,2),%ecx
shl    $0x2,%ecx
mov    0x53c(%eax),%edi
lea    0x3c(%eax),%edx
add    %ebx,%edi
movzbl -0x2(%edi),%eax
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    0x540(%eax),%ebp
mov    0x54(%esp),%eax
add    %ebx,%eax
cmp    %ecx,0x58(%esp)
jbe    8051a19 <__sprintf_chk@plt+0x8149>
imul   $0xfffffff5,%ebx,%ecx
add    0x58(%esp),%ecx
add    0x54(%esp),%ecx
cmp    %ecx,%eax
mov    %ecx,0x10(%esp)
jbe    80515e8 <__sprintf_chk@plt+0x7d18>
jmp    8051a19 <__sprintf_chk@plt+0x8149>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
je     8051607 <__sprintf_chk@plt+0x7d37>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
je     8051607 <__sprintf_chk@plt+0x7d37>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
cmp    %eax,0x10(%esp)
jb     8051a19 <__sprintf_chk@plt+0x8149>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
jne    8051580 <__sprintf_chk@plt+0x7cb0>
movzbl -0x2(%eax),%ecx
cmp    %ecx,0xc(%esp)
je     80519b2 <__sprintf_chk@plt+0x80e2>
add    %ebp,%eax
jmp    80515de <__sprintf_chk@plt+0x7d0e>
add    $0x13c,%eax
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
add    $0x3c,%eax
mov    %eax,0x24(%esp)
mov    0x50(%esp),%eax
mov    0x544(%eax),%ebp
mov    0x54(%esp),%eax
add    0x58(%esp),%eax
test   %edi,%edi
mov    %eax,0x20(%esp)
jne    80517a9 <__sprintf_chk@plt+0x7ed9>
mov    0x50(%esp),%eax
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    0x38(%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
mov    0x20(%esp),%esi
mov    0x2c(%esp),%edi
mov    %esi,%edx
sub    %eax,%edx
add    %edi,%eax
cmp    %edi,%edx
mov    $0x1,%edi
cmovle %esi,%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jg     8051778 <__sprintf_chk@plt+0x7ea8>
add    %edi,0x14(%esp)
mov    0x14(%esp),%eax
mov    0x24(%esp),%esi
movzbl -0x1(%eax),%eax
movzbl (%esi,%eax,1),%edi
test   %edi,%edi
jne    8051690 <__sprintf_chk@plt+0x7dc0>
mov    0x14(%esp),%esi
lea    -0x1(%esi),%edx
mov    0x28(%esp),%esi
mov    (%esi,%eax,4),%eax
test   %eax,%eax
je     805198c <__sprintf_chk@plt+0x80bc>
mov    (%eax),%esi
movl   $0x0,0x18(%esp)
test   %esi,%esi
je     80516f9 <__sprintf_chk@plt+0x7e29>
mov    0x1c(%esp),%edi
mov    $0x0,%esi
cmp    %edx,%edi
cmovae %edx,%esi
mov    %esi,0x18(%esp)
mov    0x10(%esp),%esi
cmovae %eax,%esi
mov    %esi,0x10(%esp)
cmp    %edx,0x54(%esp)
mov    0x18(%eax),%edi
jae    8051752 <__sprintf_chk@plt+0x7e82>
mov    0x14(%esp),%esi
sub    $0x2,%esi
test   %ebp,%ebp
mov    %esi,0xc(%esp)
je     8051925 <__sprintf_chk@plt+0x8055>
lea    0x0(%esi),%esi
movzbl (%esi),%edx
movzbl 0x0(%ebp,%edx,1),%ebx
mov    0x4(%eax),%edx
test   %edx,%edx
je     8051752 <__sprintf_chk@plt+0x7e82>
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051746 <__sprintf_chk@plt+0x7e76>
jmp    80518db <__sprintf_chk@plt+0x800b>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     80518e0 <__sprintf_chk@plt+0x8010>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051738 <__sprintf_chk@plt+0x7e68>
mov    0x18(%esp),%ebx
test   %ebx,%ebx
jne    80519a5 <__sprintf_chk@plt+0x80d5>
test   %edi,%edi
mov    $0x1,%eax
cmove  %eax,%edi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jle    80516a0 <__sprintf_chk@plt+0x7dd0>
mov    0x10(%esp),%edi
mov    0x5c(%esp),%esi
mov    (%edi),%eax
shr    %eax
mov    %eax,(%esi)
mov    0x5c(%esp),%eax
mov    0x1c(%esp),%esi
sub    0x54(%esp),%esi
mov    %esi,0x4(%eax)
mov    0x14(%edi),%eax
mov    0x5c(%esp),%edi
mov    %eax,0x8(%edi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,%edx
xor    %esi,%esi
lea    0x0(,%edi,4),%eax
sub    %eax,%edx
cmp    %eax,0x58(%esp)
mov    0x54(%esp),%eax
mov    %ebp,0xc(%esp)
cmovb  %esi,%edx
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jg     8051996 <__sprintf_chk@plt+0x80c6>
mov    0x18(%esp),%eax
cmp    %eax,0x14(%esp)
ja     8051973 <__sprintf_chk@plt+0x80a3>
test   %eax,%eax
je     8051973 <__sprintf_chk@plt+0x80a3>
mov    0x14(%esp),%eax
mov    0x24(%esp),%esi
lea    -0x1(%eax,%edi,1),%eax
movzbl (%eax),%ecx
movzbl (%esi,%ecx,1),%edi
test   %edi,%edi
mov    %edi,%edx
je     8051848 <__sprintf_chk@plt+0x7f78>
mov    0x18(%esp),%ebx
cmp    %ebx,%eax
jae    8051848 <__sprintf_chk@plt+0x7f78>
mov    %esi,%ebp
jmp    8051824 <__sprintf_chk@plt+0x7f54>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
jae    8051848 <__sprintf_chk@plt+0x7f78>
add    %edx,%eax
movzbl (%eax),%edx
movzbl 0x0(%ebp,%edx,1),%edx
add    %edx,%eax
movzbl (%eax),%edx
movzbl 0x0(%ebp,%edx,1),%edx
add    %edx,%eax
movzbl (%eax),%ecx
movzbl 0x0(%ebp,%ecx,1),%edx
test   %edx,%edx
mov    %edx,%edi
jne    8051820 <__sprintf_chk@plt+0x7f50>
add    $0x1,%eax
mov    %eax,0x14(%esp)
test   %edi,%edi
jne    80517d0 <__sprintf_chk@plt+0x7f00>
mov    0x28(%esp),%eax
mov    0x14(%esp),%esi
mov    (%eax,%ecx,4),%eax
lea    -0x1(%esi),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
cmovne %edx,%edi
mov    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
cmovne %eax,%edi
cmp    %edx,0x54(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%edi
jae    80518c6 <__sprintf_chk@plt+0x7ff6>
mov    0xc(%esp),%ebx
sub    $0x2,%esi
mov    %esi,%ebp
test   %ebx,%ebx
je     805196b <__sprintf_chk@plt+0x809b>
lea    0x0(%esi),%esi
movzbl (%esi),%edx
movzbl (%ebx,%edx,1),%ebx
mov    0x4(%eax),%edx
test   %edx,%edx
je     80518c6 <__sprintf_chk@plt+0x7ff6>
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80518ba <__sprintf_chk@plt+0x7fea>
jmp    805192d <__sprintf_chk@plt+0x805d>
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     8051930 <__sprintf_chk@plt+0x8060>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80518b0 <__sprintf_chk@plt+0x7fe0>
mov    0x1c(%esp),%ebp
test   %ebp,%ebp
je     80517d0 <__sprintf_chk@plt+0x7f00>
mov    0xc(%esp),%ebp
jmp    8051662 <__sprintf_chk@plt+0x7d92>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x8(%eax),%eax
mov    (%eax),%edx
test   %edx,%edx
je     8051905 <__sprintf_chk@plt+0x8035>
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%edi
cmp    %esi,%ebx
cmovae %esi,%edi
mov    %edi,0x18(%esp)
mov    0x10(%esp),%edi
cmovae %eax,%edi
mov    %edi,0x10(%esp)
mov    0xc(%esp),%ebx
sub    $0x1,%esi
cmp    %ebx,0x54(%esp)
mov    0x18(%eax),%edi
jae    8051752 <__sprintf_chk@plt+0x7e82>
test   %ebp,%ebp
mov    %esi,0xc(%esp)
jne    8051718 <__sprintf_chk@plt+0x7e48>
movzbl (%esi),%ebx
jmp    8051720 <__sprintf_chk@plt+0x7e50>
mov    %edx,%eax
nop
mov    0x8(%eax),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%ecx
test   %ecx,%ecx
cmovne %esi,%edi
mov    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
cmovne %eax,%edi
sub    $0x1,%esi
cmp    %ebp,0x54(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%edi
jae    80518c6 <__sprintf_chk@plt+0x7ff6>
mov    0xc(%esp),%ebx
mov    %esi,%ebp
test   %ebx,%ebx
jne    8051898 <__sprintf_chk@plt+0x7fc8>
movzbl (%esi),%ebx
jmp    805189f <__sprintf_chk@plt+0x7fcf>
add    %edi,0x14(%esp)
mov    0x14(%esp),%eax
movzbl -0x1(%eax),%ecx
mov    0x24(%esp),%eax
movzbl (%eax,%ecx,1),%edi
jmp    805184f <__sprintf_chk@plt+0x7f7f>
mov    $0x1,%edi
jmp    8051690 <__sprintf_chk@plt+0x7dc0>
add    $0x3c,%esp
mov    $0xffffffff,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    8051671 <__sprintf_chk@plt+0x7da1>
cmp    $0x2,%ebx
jle    80519e9 <__sprintf_chk@plt+0x8119>
movzbl -0x3(%edi),%ecx
cmp    %cl,-0x3(%eax)
jne    8051615 <__sprintf_chk@plt+0x7d45>
xor    %ecx,%ecx
mov    %eax,%esi
jmp    80519dc <__sprintf_chk@plt+0x810c>
movzbl -0x4(%esi,%ecx,1),%eax
sub    $0x1,%ecx
cmp    -0x3(%edi,%ecx,1),%al
jne    8051ac6 <__sprintf_chk@plt+0x81f6>
mov    $0x4,%eax
sub    %ecx,%eax
cmp    %eax,%ebx
jge    80519ca <__sprintf_chk@plt+0x80fa>
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,%esi
sub    0x54(%esp),%esi
cmp    $0xffffffff,%esi
jne    8051a04 <__sprintf_chk@plt+0x8134>
jmp    80514f7 <__sprintf_chk@plt+0x7c27>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
xor    %esi,%esi
mov    0x5c(%esp),%eax
movl   $0x0,(%eax)
mov    %esi,0x4(%eax)
mov    %ebx,0x8(%eax)
jmp    80514f7 <__sprintf_chk@plt+0x7c27>
mov    0x50(%esp),%esi
movzbl -0x1(%eax),%ecx
movzbl 0x3c(%esi,%ecx,1),%ecx
mov    0x54(%esp),%esi
add    0x58(%esp),%esi
mov    %esi,0x10(%esp)
mov    0x10(%esp),%esi
sub    %eax,%esi
cmp    %esi,%ecx
jg     8051996 <__sprintf_chk@plt+0x80c6>
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
test   %ecx,%ecx
jne    8051a32 <__sprintf_chk@plt+0x8162>
movzbl -0x2(%eax),%esi
mov    %ebp,%ecx
cmp    %esi,0xc(%esp)
jne    8051a32 <__sprintf_chk@plt+0x8162>
cmp    $0x2,%ebx
jle    80519e9 <__sprintf_chk@plt+0x8119>
movzbl -0x3(%edi),%ecx
cmp    %cl,-0x3(%eax)
jne    8051ad1 <__sprintf_chk@plt+0x8201>
xor    %ecx,%ecx
mov    %eax,%esi
jmp    8051a7e <__sprintf_chk@plt+0x81ae>
xchg   %ax,%ax
movzbl -0x4(%esi,%ecx,1),%eax
sub    $0x1,%ecx
cmp    -0x3(%edi,%ecx,1),%al
jne    8051acf <__sprintf_chk@plt+0x81ff>
mov    $0x4,%eax
sub    %ecx,%eax
cmp    %eax,%ebx
jge    8051a70 <__sprintf_chk@plt+0x81a0>
jmp    80519e7 <__sprintf_chk@plt+0x8117>
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    0x53c(%eax),%eax
movsbl (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80496f0 <memchr@plt>
test   %eax,%eax
je     80514f7 <__sprintf_chk@plt+0x7c27>
sub    0x54(%esp),%eax
mov    %eax,%esi
jmp    80519f1 <__sprintf_chk@plt+0x8121>
mov    %esi,%eax
add    %ebp,%eax
jmp    80515de <__sprintf_chk@plt+0x7d0e>
mov    %esi,%eax
mov    %ebp,%ecx
jmp    8051a32 <__sprintf_chk@plt+0x8162>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049470 <obstack_free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049390 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x8069a90,%eax
test   %eax,%eax
je     8051b26 <__sprintf_chk@plt+0x8256>
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     8051b40 <__sprintf_chk@plt+0x8270>
movl   $0x0,(%esp)
call   80507c0 <__sprintf_chk@plt+0x6ef0>
mov    0x20(%esp),%ecx
mov    %eax,(%ecx)
test   %eax,%eax
je     8051b72 <__sprintf_chk@plt+0x82a2>
add    $0x1c,%esp
ret
call   8049890 <__ctype_tolower_loc@plt>
xor    %edx,%edx
nop
mov    (%eax),%ecx
mov    (%ecx,%edx,4),%ecx
add    $0x1,%edx
mov    %cl,0x806941f(%edx)
cmp    $0x100,%edx
jne    8051b48 <__sprintf_chk@plt+0x8278>
movl   $0x8069420,(%esp)
call   80507c0 <__sprintf_chk@plt+0x6ef0>
mov    0x20(%esp),%edx
mov    %eax,(%edx)
jmp    8051b38 <__sprintf_chk@plt+0x8268>
call   805b650 <__sprintf_chk@plt+0x11d80>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x78(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x4c(%esp)
xor    %ecx,%ecx
mov    0x70(%esp),%ebx
mov    (%eax),%edx
mov    %eax,0x28(%esp)
mov    0x8069408,%eax
mov    %edi,0x2c(%esp)
cmp    %eax,%edx
ja     8051bf8 <__sprintf_chk@plt+0x8328>
test   %eax,%eax
je     8051bf8 <__sprintf_chk@plt+0x8328>
mov    0x8069404,%ebp
test   %ebp,%ebp
je     8051e5b <__sprintf_chk@plt+0x858b>
mov    0x8069400,%esi
test   %esi,%esi
je     8051e37 <__sprintf_chk@plt+0x8567>
mov    0x28(%esp),%eax
mov    (%eax),%edx
mov    %ebp,%eax
test   %edx,%edx
jne    8051c40 <__sprintf_chk@plt+0x8370>
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    8051e32 <__sprintf_chk@plt+0x8562>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edx,%edx
mov    $0x1,%eax
cmovne %edx,%eax
mov    %eax,0x8069408
mov    %eax,0x4(%esp)
mov    0x8069404,%eax
mov    %eax,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,0x8069404
mov    0x8069408,%eax
mov    %eax,0x4(%esp)
mov    0x8069400,%eax
mov    %eax,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,0x8069400
jmp    8051bb7 <__sprintf_chk@plt+0x82e7>
lea    0x0(%esi),%esi
lea    (%ebx,%edx,1),%eax
mov    %eax,%edi
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
mov    %eax,0x18(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    %edi,%ebx
mov    %eax,0x20(%esp)
jae    8051e25 <__sprintf_chk@plt+0x8555>
movb   $0x0,0x27(%esp)
movl   $0x0,0x14(%esp)
jmp    8051cf7 <__sprintf_chk@plt+0x8427>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
add    %edi,%ebx
mov    %eax,(%esp)
call   80493c0 <towlower@plt>
lea    0x44(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049310 <wcrtomb@plt>
mov    %eax,%edx
mov    %edi,%eax
sub    %edx,%eax
mov    %al,(%esi)
lea    -0x1(%edx),%ecx
lea    0x1(%esi),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   80496a0 <memset@plt>
mov    0x1c(%esp),%edx
add    %edx,0x14(%esp)
add    %edx,%esi
add    %edx,%ebp
cmp    %edx,%edi
setne  %al
or     %al,0x27(%esp)
cmp    0x18(%esp),%ebx
jae    8051ddc <__sprintf_chk@plt+0x850c>
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
mov    0x14(%esp),%edx
add    0x20(%esp),%edx
mov    %eax,%edi
mov    0x8069408,%eax
cmp    %eax,%edx
jb     8051d8f <__sprintf_chk@plt+0x84bf>
mov    0x8069404,%ecx
sub    0x8069400,%esi
test   %ecx,%ecx
je     8051e08 <__sprintf_chk@plt+0x8538>
cmp    $0xaaaaaaa9,%eax
ja     8051e2d <__sprintf_chk@plt+0x855d>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x8069408
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,0x8069404
mov    0x8069408,%eax
mov    %eax,0x4(%esp)
mov    0x8069400,%eax
mov    %eax,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x14(%esp),%ebp
add    0x8069404,%ebp
mov    %eax,0x8069400
add    %eax,%esi
lea    -0x1(%edi),%eax
cmp    $0xfffffffc,%eax
jbe    8051c90 <__sprintf_chk@plt+0x83c0>
movb   $0x0,(%esi)
movzbl (%ebx),%eax
add    $0x1,%esi
addl   $0x1,0x14(%esp)
add    $0x1,%ebp
add    $0x1,%ebx
mov    %al,-0x1(%ebp)
cmp    0x18(%esp),%ebx
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
jb     8051cf7 <__sprintf_chk@plt+0x8427>
cmpb   $0x0,0x27(%esp)
je     8051e18 <__sprintf_chk@plt+0x8548>
mov    0x8069404,%eax
mov    %ebp,%edx
mov    0x8069400,%ecx
sub    %eax,%edx
mov    0x2c(%esp),%ebx
mov    %ecx,(%ebx)
mov    0x28(%esp),%ecx
mov    %edx,(%ecx)
movb   $0x0,0x0(%ebp)
jmp    8051bdf <__sprintf_chk@plt+0x830f>
nop
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    8051d52 <__sprintf_chk@plt+0x8482>
nop
mov    0x8069404,%eax
mov    %ebp,%edx
xor    %ecx,%ecx
sub    %eax,%edx
jmp    8051df2 <__sprintf_chk@plt+0x8522>
mov    %ebp,%eax
xor    %edx,%edx
xor    %ecx,%ecx
jmp    8051df2 <__sprintf_chk@plt+0x8522>
call   805b650 <__sprintf_chk@plt+0x11d80>
call   8049420 <__stack_chk_fail@plt>
movl   $0x806407b,0xc(%esp)
movl   $0x62,0x8(%esp)
movl   $0x8064061,0x4(%esp)
movl   $0x8064073,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x806407b,0xc(%esp)
movl   $0x61,0x8(%esp)
movl   $0x8064061,0x4(%esp)
movl   $0x806406f,(%esp)
call   80498a0 <__assert_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x58(%esp),%edx
mov    0x54(%esp),%esi
movl   $0x0,0x24(%esp)
mov    (%eax),%edi
mov    %edx,0x18(%esp)
mov    %gs:0x14,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %eax,0x1c(%esp)
cmp    %esi,%edi
mov    %edi,%ebp
movl   $0x0,0x28(%esp)
jae    8051f13 <__sprintf_chk@plt+0x8643>
lea    0x24(%esp),%ebx
jmp    8051ed8 <__sprintf_chk@plt+0x8608>
xchg   %ax,%ax
lea    -0x1(%eax),%ecx
mov    %edi,%ebp
cmp    $0xfffffffc,%ecx
ja     8051efb <__sprintf_chk@plt+0x862b>
add    %eax,%edi
cmp    %edi,%esi
jbe    8051f13 <__sprintf_chk@plt+0x8643>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xfffffffe,%eax
jne    8051ec8 <__sprintf_chk@plt+0x85f8>
mov    $0x1,%eax
add    %eax,%edi
cmp    %edi,%esi
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
ja     8051ed8 <__sprintf_chk@plt+0x8608>
mov    0x1c(%esp),%eax
cmp    %edi,%esi
mov    %ebp,(%eax)
mov    $0x1,%eax
jb     8051f2c <__sprintf_chk@plt+0x865c>
mov    0x5c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
jne    8051f48 <__sprintf_chk@plt+0x8678>
mov    0x2c(%esp),%edx
xor    %gs:0x14,%edx
jne    8051f73 <__sprintf_chk@plt+0x86a3>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   8049510 <mbrtowc@plt>
cmp    %eax,0x5c(%esp)
setb   %al
jmp    8051f2c <__sprintf_chk@plt+0x865c>
call   8049420 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804de60 <__sprintf_chk@plt+0x4590>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,%edi
mov    0x44(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     80520e8 <__sprintf_chk@plt+0x8818>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8052090 <__sprintf_chk@plt+0x87c0>
mov    %edi,%eax
mov    0x48(%esp),%esi
mov    %ebp,%edi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    %eax,%ebp
movl   $0xffffffff,0x18(%esp)
jmp    8052030 <__sprintf_chk@plt+0x8760>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%edx
mov    %esi,0x4(%esp)
imul   %edx,%eax
add    0x48(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
mov    $0x1,%ecx
test   %eax,%eax
movzbl 0x1f(%esp),%eax
cmovne %ecx,%eax
mov    %al,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8052068 <__sprintf_chk@plt+0x8798>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049800 <strncmp@plt>
test   %eax,%eax
jne    805201e <__sprintf_chk@plt+0x874e>
mov    %edi,(%esp)
call   8049620 <strlen@plt>
cmp    %ebp,%eax
je     8052080 <__sprintf_chk@plt+0x87b0>
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
jne    8051ff0 <__sprintf_chk@plt+0x8720>
mov    %ebx,0x18(%esp)
jmp    805201e <__sprintf_chk@plt+0x874e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
jne    80520f5 <__sprintf_chk@plt+0x8825>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    0x40(%esp),%esi
movl   $0xffffffff,0x18(%esp)
jmp    80520bb <__sprintf_chk@plt+0x87eb>
lea    0x0(%esi),%esi
movb   $0x1,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
mov    (%eax,%ebx,4),%ebp
test   %ebp,%ebp
je     8052068 <__sprintf_chk@plt+0x8798>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8049800 <strncmp@plt>
test   %eax,%eax
jne    80520ad <__sprintf_chk@plt+0x87dd>
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
cmp    %edi,%eax
je     8052080 <__sprintf_chk@plt+0x87b0>
cmpl   $0xffffffff,0x18(%esp)
jne    80520a8 <__sprintf_chk@plt+0x87d8>
mov    %ebx,0x18(%esp)
jmp    80520ad <__sprintf_chk@plt+0x87dd>
movl   $0xffffffff,0x18(%esp)
jmp    8052073 <__sprintf_chk@plt+0x87a3>
mov    $0xfffffffe,%eax
jmp    8052077 <__sprintf_chk@plt+0x87a7>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     8052188 <__sprintf_chk@plt+0x88b8>
movl   $0x80640a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80590b0 <__sprintf_chk@plt+0xf7e0>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8057520 <__sprintf_chk@plt+0xdc50>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049530 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x8064085,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %eax,%esi
jmp    805212a <__sprintf_chk@plt+0x885a>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8069224,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x80640bd,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   8049410 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    805223d <__sprintf_chk@plt+0x896d>
jmp    8052288 <__sprintf_chk@plt+0x89b8>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8059240 <__sprintf_chk@plt+0xf970>
movl   $0x80640d2,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8069224,%eax
mov    %eax,(%esp)
call   80497e0 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     8052288 <__sprintf_chk@plt+0x89b8>
test   %esi,%esi
je     8052200 <__sprintf_chk@plt+0x8930>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
jne    8052200 <__sprintf_chk@plt+0x8930>
mov    %ebp,(%esp)
call   8059240 <__sprintf_chk@plt+0xf970>
movl   $0x80640da,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8069224,%eax
mov    %eax,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805222b <__sprintf_chk@plt+0x895b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8069224,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    80522a6 <__sprintf_chk@plt+0x89d6>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049770 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,%edi
mov    0x48(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     80524b2 <__sprintf_chk@plt+0x8be2>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     80523c0 <__sprintf_chk@plt+0x8af0>
mov    %edi,%eax
mov    0x4c(%esp),%esi
mov    %ebp,%edi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    %eax,%ebp
movl   $0xffffffff,0x18(%esp)
jmp    8052350 <__sprintf_chk@plt+0x8a80>
lea    0x0(%esi),%esi
mov    0x50(%esp),%edx
mov    %esi,0x4(%esp)
imul   %edx,%eax
add    0x4c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
mov    $0x1,%ecx
test   %eax,%eax
movzbl 0x1f(%esp),%eax
cmovne %ecx,%eax
mov    %al,0x1f(%esp)
mov    0x48(%esp),%eax
add    $0x1,%ebx
add    0x50(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8052388 <__sprintf_chk@plt+0x8ab8>
mov    0x44(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049800 <strncmp@plt>
test   %eax,%eax
jne    805233e <__sprintf_chk@plt+0x8a6e>
mov    %edi,(%esp)
call   8049620 <strlen@plt>
cmp    %eax,%ebp
je     80523b0 <__sprintf_chk@plt+0x8ae0>
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
jne    8052310 <__sprintf_chk@plt+0x8a40>
mov    %ebx,0x18(%esp)
jmp    805233e <__sprintf_chk@plt+0x8a6e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
jne    8052418 <__sprintf_chk@plt+0x8b48>
cmpl   $0xffffffff,0x18(%esp)
je     80524b2 <__sprintf_chk@plt+0x8be2>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    0x44(%esp),%esi
movl   $0xffffffff,0x18(%esp)
jmp    80523eb <__sprintf_chk@plt+0x8b1b>
lea    0x0(%esi),%esi
movb   $0x1,0x1f(%esp)
mov    0x48(%esp),%eax
add    $0x1,%ebx
mov    (%eax,%ebx,4),%ebp
test   %ebp,%ebp
je     8052388 <__sprintf_chk@plt+0x8ab8>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8049800 <strncmp@plt>
test   %eax,%eax
jne    80523dd <__sprintf_chk@plt+0x8b0d>
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
cmp    %eax,%edi
je     80523b0 <__sprintf_chk@plt+0x8ae0>
cmpl   $0xffffffff,0x18(%esp)
jne    80523d8 <__sprintf_chk@plt+0x8b08>
mov    %ebx,0x18(%esp)
jmp    80523dd <__sprintf_chk@plt+0x8b0d>
movl   $0x5,0x8(%esp)
movl   $0x80640a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %eax,%ebx
mov    0x40(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80590b0 <__sprintf_chk@plt+0xf7e0>
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
call   8057520 <__sprintf_chk@plt+0xdc50>
mov    %esi,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049530 <error@plt>
mov    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80521a0 <__sprintf_chk@plt+0x88d0>
call   *0x54(%esp)
mov    $0xffffffff,%eax
jmp    80523a2 <__sprintf_chk@plt+0x8ad2>
movl   $0x5,0x8(%esp)
movl   $0x8064085,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %eax,%ebx
jmp    8052436 <__sprintf_chk@plt+0x8b66>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     8052523 <__sprintf_chk@plt+0x8c53>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    805250b <__sprintf_chk@plt+0x8c3b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     8052523 <__sprintf_chk@plt+0x8c53>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
jne    8052500 <__sprintf_chk@plt+0x8c30>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8069524
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8069520
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8069280,%eax
mov    %eax,(%esp)
call   805f5c0 <fts_children+0x320>
test   %eax,%eax
je     8052579 <__sprintf_chk@plt+0x8ca9>
cmpb   $0x0,0x8069520
je     8052590 <__sprintf_chk@plt+0x8cc0>
call   80496e0 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8052590 <__sprintf_chk@plt+0x8cc0>
mov    0x8069224,%eax
mov    %eax,(%esp)
call   805f5c0 <fts_children+0x320>
test   %eax,%eax
jne    80525e8 <__sprintf_chk@plt+0x8d18>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x8062532,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8069524,%eax
test   %eax,%eax
je     80525f5 <__sprintf_chk@plt+0x8d25>
mov    %eax,(%esp)
call   8058150 <__sprintf_chk@plt+0xe880>
mov    %eax,%esi
call   80496e0 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8062560,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049530 <error@plt>
mov    0x80691c4,%eax
mov    %eax,(%esp)
call   8049350 <_exit@plt>
call   80496e0 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x80640dc,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049530 <error@plt>
jmp    80525e8 <__sprintf_chk@plt+0x8d18>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
jmp    8049390 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8054b00 <__sprintf_chk@plt+0xb230>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
jmp    8053b70 <__sprintf_chk@plt+0xa2a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x8,%al
jne    80526a8 <__sprintf_chk@plt+0x8dd8>
test   $0x10,%al
je     80526e8 <__sprintf_chk@plt+0x8e18>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8054b00 <__sprintf_chk@plt+0xb230>
nop
and    $0x10,%eax
mov    %eax,%edi
jne    8052700 <__sprintf_chk@plt+0x8e30>
mov    %esi,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
call   8049800 <strncmp@plt>
test   %eax,%eax
jne    8052768 <__sprintf_chk@plt+0x8e98>
movsbl (%ebx,%ebp,1),%eax
cmp    $0x2f,%eax
cmovne %eax,%edi
add    $0x1c,%esp
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x34(%esp)
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049320 <strcmp@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805b610 <__sprintf_chk@plt+0x11d40>
mov    %eax,%edi
mov    %eax,%edx
jmp    8052729 <__sprintf_chk@plt+0x8e59>
xchg   %ax,%ax
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8054b00 <__sprintf_chk@plt+0xb230>
test   %eax,%eax
jle    805274b <__sprintf_chk@plt+0x8e7b>
lea    0x1(%ebx),%edx
movb   $0x2f,(%ebx)
movl   $0x2f,0x4(%esp)
mov    %edx,(%esp)
call   80495f0 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    8052710 <__sprintf_chk@plt+0x8e40>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8054b00 <__sprintf_chk@plt+0xb230>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   8049390 <free@plt>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
mov    %eax,%edi
mov    %edi,%eax
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
mov    %eax,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ecx
lea    0x28(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x84(%esp),%esi
movb   $0x0,0x24(%esp)
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
jne    805287e <__sprintf_chk@plt+0x8fae>
movzbl (%ecx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
bt     %eax,%edx
jae    8052920 <__sprintf_chk@plt+0x9050>
movl   $0x1,0x38(%esp)
movsbl (%ecx),%edx
movb   $0x1,0x3c(%esp)
mov    %edx,0x40(%esp)
test   %edx,%edx
movb   $0x1,0x30(%esp)
jne    805283e <__sprintf_chk@plt+0x8f6e>
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    80529ca <__sprintf_chk@plt+0x90fa>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
cmpb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
je     8052910 <__sprintf_chk@plt+0x9040>
mov    %edx,(%esp)
call   80493c0 <towlower@plt>
mov    %ebx,%edx
mov    0x38(%esp),%ecx
shl    $0x5,%edx
sub    %ebx,%edx
add    %edx,%eax
xor    %edx,%edx
div    %esi
add    %ebp,%ecx
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movb   $0x0,0x30(%esp)
mov    %edx,%ebx
je     80527d0 <__sprintf_chk@plt+0x8f00>
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x34(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8052828 <__sprintf_chk@plt+0x8f58>
cmp    $0xfffffffe,%eax
je     8052940 <__sprintf_chk@plt+0x9070>
test   %eax,%eax
jne    8052938 <__sprintf_chk@plt+0x9068>
mov    0x34(%esp),%eax
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%eax)
jne    80529a6 <__sprintf_chk@plt+0x90d6>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    8052982 <__sprintf_chk@plt+0x90b2>
xor    %edx,%edx
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
movb   $0x1,0x3c(%esp)
call   80493b0 <mbsinit@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     80527ff <__sprintf_chk@plt+0x8f2f>
movb   $0x0,0x24(%esp)
jmp    80527ff <__sprintf_chk@plt+0x8f2f>
nop
movsbl 0x0(%ebp),%eax
jmp    8052855 <__sprintf_chk@plt+0x8f85>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     805295e <__sprintf_chk@plt+0x908e>
movb   $0x1,0x24(%esp)
jmp    805287e <__sprintf_chk@plt+0x8fae>
xchg   %ax,%ax
mov    0x40(%esp),%edx
jmp    80528e8 <__sprintf_chk@plt+0x9018>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x40(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %eax,0x38(%esp)
jmp    8052839 <__sprintf_chk@plt+0x8f69>
movl   $0x8064129,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064129,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064129,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
call   8049420 <__stack_chk_fail@plt>
nop
push   %ebx
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    %ecx,%ebx
and    $0x2,%ebx
and    $0x20,%ecx
movzbl (%edx),%eax
je     8052a88 <__sprintf_chk@plt+0x91b8>
test   %ebx,%ebx
je     8052a58 <__sprintf_chk@plt+0x9188>
add    $0x1,%edx
cmp    $0x2b,%al
je     8052b88 <__sprintf_chk@plt+0x92b8>
jle    8052b28 <__sprintf_chk@plt+0x9258>
cmp    $0x40,%al
je     8052b88 <__sprintf_chk@plt+0x92b8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jle    8052b48 <__sprintf_chk@plt+0x9278>
cmp    $0x5b,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
movzbl (%edx),%eax
jmp    80529ee <__sprintf_chk@plt+0x911e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     8052b98 <__sprintf_chk@plt+0x92c8>
jle    8052b58 <__sprintf_chk@plt+0x9288>
cmp    $0x5b,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
cmp    $0x5c,%al
jne    8052b5c <__sprintf_chk@plt+0x928c>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     8052b98 <__sprintf_chk@plt+0x92c8>
jg     8052a28 <__sprintf_chk@plt+0x9158>
cmp    $0x21,%al
je     8052b98 <__sprintf_chk@plt+0x92c8>
cmp    $0x2a,%al
nop
je     8052b50 <__sprintf_chk@plt+0x9280>
test   %al,%al
jne    8052b5c <__sprintf_chk@plt+0x928c>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     8052ae8 <__sprintf_chk@plt+0x9218>
add    $0x1,%edx
cmp    $0x2b,%al
je     8052aae <__sprintf_chk@plt+0x91de>
jle    8052b10 <__sprintf_chk@plt+0x9240>
cmp    $0x40,%al
je     8052aae <__sprintf_chk@plt+0x91de>
lea    0x0(%esi,%eiz,1),%esi
jle    8052b68 <__sprintf_chk@plt+0x9298>
cmp    $0x5b,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
movzbl (%edx),%eax
jmp    8052a8c <__sprintf_chk@plt+0x91bc>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     8052b06 <__sprintf_chk@plt+0x9236>
lea    0x0(%esi,%eiz,1),%esi
jle    8052b78 <__sprintf_chk@plt+0x92a8>
cmp    $0x5b,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
cmp    $0x5c,%al
jne    8052b06 <__sprintf_chk@plt+0x9236>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     8052b06 <__sprintf_chk@plt+0x9236>
jg     8052ab8 <__sprintf_chk@plt+0x91e8>
cmp    $0x21,%al
je     8052b06 <__sprintf_chk@plt+0x9236>
cmp    $0x2a,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
test   %al,%al
nop
lea    0x0(%esi,%eiz,1),%esi
je     8052a7e <__sprintf_chk@plt+0x91ae>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    8052ae8 <__sprintf_chk@plt+0x9218>
xchg   %ax,%ax
cmp    $0x21,%al
je     8052aae <__sprintf_chk@plt+0x91de>
cmp    $0x2a,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
test   %al,%al
jne    8052aae <__sprintf_chk@plt+0x91de>
xor    %eax,%eax
xchg   %ax,%ax
jmp    8052a80 <__sprintf_chk@plt+0x91b0>
lea    0x0(%esi),%esi
cmp    $0x21,%al
je     8052b88 <__sprintf_chk@plt+0x92b8>
cmp    $0x2a,%al
xchg   %ax,%ax
je     8052b50 <__sprintf_chk@plt+0x9280>
test   %al,%al
jne    8052a1e <__sprintf_chk@plt+0x914e>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    8052a80 <__sprintf_chk@plt+0x91b0>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
jne    8052a1e <__sprintf_chk@plt+0x914e>
mov    $0x1,%eax
pop    %ebx
ret
nop
cmp    $0x3f,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    8052a58 <__sprintf_chk@plt+0x9188>
nop
cmp    $0x3f,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
jmp    8052aae <__sprintf_chk@plt+0x91de>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
lea    0x0(%esi),%esi
je     8052b50 <__sprintf_chk@plt+0x9280>
jmp    8052b06 <__sprintf_chk@plt+0x9236>
nop
movzbl (%edx),%eax
cmp    $0x28,%al
lea    0x0(%esi),%esi
jne    80529ee <__sprintf_chk@plt+0x911e>
jmp    8052b50 <__sprintf_chk@plt+0x9280>
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     8052b50 <__sprintf_chk@plt+0x9280>
mov    %ecx,%edx
jmp    8052a58 <__sprintf_chk@plt+0x9188>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x4,(%esp)
call   805b560 <__sprintf_chk@plt+0x11c90>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    (%edi),%ebx
test   %ebx,%ebx
jne    8052c06 <__sprintf_chk@plt+0x9336>
jmp    8052c26 <__sprintf_chk@plt+0x9356>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
jne    8052bf8 <__sprintf_chk@plt+0x9328>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
je     8052c26 <__sprintf_chk@plt+0x9356>
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%esi
test   %eax,%eax
jne    8052be8 <__sprintf_chk@plt+0x9318>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8053ee0 <__sprintf_chk@plt+0xa610>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
jne    8052c04 <__sprintf_chk@plt+0x9334>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049390 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x8052680,%eax
push   %edi
mov    $0x8049490,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x10000000,%esi
cmove  %eax,%edi
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
sete   %al
test   $0x40000000,%esi
mov    %eax,%ebp
jne    8052cd0 <__sprintf_chk@plt+0x9400>
movzbl (%ebx),%eax
test   %al,%al
je     8052cd0 <__sprintf_chk@plt+0x9400>
mov    %ebp,%edx
add    $0x1,%ebx
test   %dl,%dl
je     8052c9f <__sprintf_chk@plt+0x93cf>
jmp    8052ccb <__sprintf_chk@plt+0x93fb>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     8052cd0 <__sprintf_chk@plt+0x9400>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    8052c98 <__sprintf_chk@plt+0x93c8>
cmp    $0x2f,%al
je     8052c9c <__sprintf_chk@plt+0x93cc>
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %cl
test   %al,%al
je     8052cda <__sprintf_chk@plt+0x940a>
test   %cl,%cl
je     8052c9c <__sprintf_chk@plt+0x93cc>
mov    $0x1,%ebp
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%ebp
jmp    8052cd0 <__sprintf_chk@plt+0x9400>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8052f0e <__sprintf_chk@plt+0x963e>
mov    0x14(%esp),%eax
xor    %ebp,%ebp
mov    %ebp,%edi
mov    0x4(%eax),%edx
test   %edx,%edx
jne    8052dfd <__sprintf_chk@plt+0x952d>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8052ef0 <__sprintf_chk@plt+0x9620>
mov    0x14(%esp),%ecx
mov    0x44(%esp),%esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ebx
mov    %eax,%ebp
and    $0x40000000,%eax
and    $0x8,%ebp
mov    %eax,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80494f0 <strcpy@plt>
test   %ebp,%ebp
je     8052da1 <__sprintf_chk@plt+0x94d1>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8053960 <__sprintf_chk@plt+0xa090>
test   %eax,%eax
jne    8052d7b <__sprintf_chk@plt+0x94ab>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049760 <strrchr@plt>
test   %eax,%eax
je     8052db8 <__sprintf_chk@plt+0x94e8>
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8053960 <__sprintf_chk@plt+0xa090>
test   %eax,%eax
je     8052d54 <__sprintf_chk@plt+0x9484>
mov    %edi,%ebp
xor    %ebx,%ebx
mov    %ebp,(%esp)
call   8049390 <free@plt>
mov    0x14(%esp),%eax
mov    0x8(%eax),%eax
add    $0x2c,%esp
shr    $0x1d,%eax
xor    $0x1,%eax
and    $0x1,%eax
xor    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8053960 <__sprintf_chk@plt+0xa090>
test   %eax,%eax
jne    8052d7b <__sprintf_chk@plt+0x94ab>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
test   %eax,%eax
jne    8052de0 <__sprintf_chk@plt+0x9510>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   80495f0 <strchr@plt>
test   %eax,%eax
je     8052de0 <__sprintf_chk@plt+0x9510>
add    $0x1,%eax
mov    %eax,%esi
jne    8052d34 <__sprintf_chk@plt+0x9464>
nop
mov    0x14(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8052ee4 <__sprintf_chk@plt+0x9614>
mov    0x4(%eax),%edx
mov    %eax,0x14(%esp)
test   %edx,%edx
je     8052d10 <__sprintf_chk@plt+0x9440>
mov    %eax,%ecx
mov    0xc(%eax),%eax
mov    0x14(%ecx),%ecx
test   %ecx,%ecx
mov    %ecx,0x18(%esp)
je     8052de0 <__sprintf_chk@plt+0x9510>
mov    %eax,%esi
movl   $0x0,0xc(%esp)
mov    %edi,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%ebp
mov    $0x8052680,%ecx
mov    $0x8049490,%edi
mov    (%esi),%eax
test   $0x10000000,%ebp
cmove  %ecx,%edi
mov    0x44(%esp),%ecx
mov    %eax,0x10(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *%edi
test   %eax,%eax
sete   %dl
test   $0x40000000,%ebp
mov    %edx,%ecx
jne    8052eb8 <__sprintf_chk@plt+0x95e8>
mov    0x44(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     8052eb8 <__sprintf_chk@plt+0x95e8>
test   %dl,%dl
jne    8052ead <__sprintf_chk@plt+0x95dd>
mov    0x44(%esp),%ecx
lea    0x1(%ecx),%ebx
jmp    8052e7f <__sprintf_chk@plt+0x95af>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     8052ebc <__sprintf_chk@plt+0x95ec>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    8052e78 <__sprintf_chk@plt+0x95a8>
cmp    $0x2f,%al
je     8052e7c <__sprintf_chk@plt+0x95ac>
mov    0x10(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %dl
mov    %edx,%ecx
test   %al,%al
je     8052eb8 <__sprintf_chk@plt+0x95e8>
test   %dl,%dl
je     8052e7c <__sprintf_chk@plt+0x95ac>
mov    0x1c(%esp),%ebp
jmp    8052d7d <__sprintf_chk@plt+0x94ad>
xchg   %ax,%ax
test   %cl,%cl
jne    8052ead <__sprintf_chk@plt+0x95dd>
addl   $0x1,0xc(%esp)
add    $0x8,%esi
mov    0x18(%esp),%eax
cmp    %eax,0xc(%esp)
jne    8052e20 <__sprintf_chk@plt+0x9550>
mov    0x14(%esp),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%eax
test   %eax,%eax
jne    8052dee <__sprintf_chk@plt+0x951e>
mov    %edi,%ebp
mov    $0x1,%ebx
jmp    8052d7f <__sprintf_chk@plt+0x94af>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    %eax,%edi
jmp    8052d18 <__sprintf_chk@plt+0x9448>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x40(%esp),%edi
mov    0x44(%esp),%ebp
test   $0x10000000,%ebx
je     8052fc8 <__sprintf_chk@plt+0x96f8>
mov    %ebx,%edx
movzbl 0x0(%ebp),%eax
and    $0x2,%edx
test   $0x20,%bl
jne    8053098 <__sprintf_chk@plt+0x97c8>
test   %edx,%edx
mov    %ebp,%edx
je     8053110 <__sprintf_chk@plt+0x9840>
add    $0x1,%edx
cmp    $0x2b,%al
je     8052f7e <__sprintf_chk@plt+0x96ae>
jle    80531f0 <__sprintf_chk@plt+0x9920>
cmp    $0x40,%al
je     8052f7e <__sprintf_chk@plt+0x96ae>
lea    0x0(%esi,%eiz,1),%esi
jle    8053268 <__sprintf_chk@plt+0x9998>
cmp    $0x5b,%al
je     8053140 <__sprintf_chk@plt+0x9870>
movzbl (%edx),%eax
jmp    8052f5b <__sprintf_chk@plt+0x968b>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     80532a8 <__sprintf_chk@plt+0x99d8>
jle    8053138 <__sprintf_chk@plt+0x9868>
cmp    $0x5b,%al
je     8053140 <__sprintf_chk@plt+0x9870>
movzbl (%edx),%eax
add    $0x1,%edx
cmp    $0x2b,%al
je     80532a8 <__sprintf_chk@plt+0x99d8>
jg     8052f88 <__sprintf_chk@plt+0x96b8>
cmp    $0x21,%al
je     80532a8 <__sprintf_chk@plt+0x99d8>
cmp    $0x2a,%al
je     8053140 <__sprintf_chk@plt+0x9870>
test   %al,%al
jne    8052f9e <__sprintf_chk@plt+0x96ce>
lea    0x0(%esi),%esi
mov    (%edi),%esi
test   %esi,%esi
je     8052fd9 <__sprintf_chk@plt+0x9709>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8053080 <__sprintf_chk@plt+0x97b0>
movl   $0x18,(%esp)
call   805b560 <__sprintf_chk@plt+0x11c90>
mov    %ebx,%ecx
mov    $0x8052650,%edx
and    $0x10,%ecx
mov    $0x8052780,%ecx
movl   $0x0,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    $0x8052630,%eax
cmovne %eax,%edx
mov    $0x8052670,%eax
cmovne %ecx,%eax
movl   $0x8052620,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8053be0 <__sprintf_chk@plt+0xa310>
mov    %eax,0xc(%esi)
mov    (%edi),%eax
mov    %eax,(%esi)
mov    %esi,(%edi)
mov    %ebp,(%esp)
and    $0x10000002,%ebx
call   805b610 <__sprintf_chk@plt+0x11d40>
cmp    $0x10000000,%ebx
mov    %eax,%edi
je     8053198 <__sprintf_chk@plt+0x98c8>
mov    %edi,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8054500 <__sprintf_chk@plt+0xac30>
cmp    %edi,%eax
je     805318b <__sprintf_chk@plt+0x98bb>
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049390 <free@plt>
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x60000018,%eax
je     805303d <__sprintf_chk@plt+0x976d>
jmp    8052fd9 <__sprintf_chk@plt+0x9709>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
mov    %ebp,%edx
jne    8052fa1 <__sprintf_chk@plt+0x96d1>
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     80532c0 <__sprintf_chk@plt+0x99f0>
jle    80531c8 <__sprintf_chk@plt+0x98f8>
cmp    $0x40,%al
je     80532c0 <__sprintf_chk@plt+0x99f0>
nop
lea    0x0(%esi,%eiz,1),%esi
jle    8053290 <__sprintf_chk@plt+0x99c0>
cmp    $0x5b,%al
je     8053140 <__sprintf_chk@plt+0x9870>
cmp    $0x5c,%al
lea    0x0(%esi,%eiz,1),%esi
jne    80531e0 <__sprintf_chk@plt+0x9910>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
jmp    80530a2 <__sprintf_chk@plt+0x97d2>
nop
cmp    $0x40,%al
je     805312a <__sprintf_chk@plt+0x985a>
jle    8053278 <__sprintf_chk@plt+0x99a8>
cmp    $0x5b,%al
je     8053140 <__sprintf_chk@plt+0x9870>
cmp    $0x5c,%al
jne    805312a <__sprintf_chk@plt+0x985a>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805312a <__sprintf_chk@plt+0x985a>
jg     80530e8 <__sprintf_chk@plt+0x9818>
cmp    $0x21,%al
je     805312a <__sprintf_chk@plt+0x985a>
cmp    $0x2a,%al
nop
je     8053140 <__sprintf_chk@plt+0x9870>
test   %al,%al
je     8052fc8 <__sprintf_chk@plt+0x96f8>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    8053110 <__sprintf_chk@plt+0x9840>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
jne    8052f9e <__sprintf_chk@plt+0x96ce>
mov    (%edi),%esi
test   %esi,%esi
je     8053150 <__sprintf_chk@plt+0x9880>
cmpl   $0x1,0x4(%esi)
je     8053250 <__sprintf_chk@plt+0x9980>
movl   $0x18,(%esp)
call   805b560 <__sprintf_chk@plt+0x11c90>
mov    (%edi),%edx
movl   $0x1,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    %edx,(%eax)
mov    %eax,(%edi)
mov    0x14(%esi),%edx
cmp    0x10(%esi),%edx
je     8053210 <__sprintf_chk@plt+0x9940>
mov    0xc(%esi),%eax
lea    (%eax,%edx,8),%eax
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%esi)
mov    %ebp,(%eax)
mov    %ebx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %eax,%ecx
jmp    80531b6 <__sprintf_chk@plt+0x98e6>
xchg   %ax,%ax
add    %edx,%ebx
add    $0x1,%ecx
lea    0x1(%ebx),%edx
movzbl (%ebx),%ebx
test   %bl,%bl
mov    %bl,-0x1(%ecx)
je     8053059 <__sprintf_chk@plt+0x9789>
xor    %ebx,%ebx
cmpb   $0x5c,(%edx)
jne    80531a0 <__sprintf_chk@plt+0x98d0>
xor    %ebx,%ebx
cmpb   $0x0,0x1(%edx)
setne  %bl
jmp    80531a0 <__sprintf_chk@plt+0x98d0>
cmp    $0x21,%al
je     80532c0 <__sprintf_chk@plt+0x99f0>
cmp    $0x2a,%al
je     8053140 <__sprintf_chk@plt+0x9870>
test   %al,%al
je     8052fc8 <__sprintf_chk@plt+0x96f8>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    80530a2 <__sprintf_chk@plt+0x97d2>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x21,%al
je     8052f7e <__sprintf_chk@plt+0x96ae>
cmp    $0x2a,%al
je     8053140 <__sprintf_chk@plt+0x9870>
test   %al,%al
je     8052fc8 <__sprintf_chk@plt+0x96f8>
jmp    8052f7e <__sprintf_chk@plt+0x96ae>
lea    0x0(%esi),%esi
mov    0xc(%esi),%ecx
test   %ecx,%ecx
je     80532d5 <__sprintf_chk@plt+0x9a05>
cmp    $0x15555554,%edx
ja     80532ec <__sprintf_chk@plt+0x9a1c>
lea    0x1(%edx),%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,8),%eax
mov    %edx,0x10(%esi)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x14(%esi),%edx
mov    %eax,0xc(%esi)
jmp    805317d <__sprintf_chk@plt+0x98ad>
nop
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x20000000,%eax
je     805316e <__sprintf_chk@plt+0x989e>
jmp    8053150 <__sprintf_chk@plt+0x9880>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
je     8053140 <__sprintf_chk@plt+0x9870>
jmp    8052f7e <__sprintf_chk@plt+0x96ae>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
lea    0x0(%esi),%esi
je     8053140 <__sprintf_chk@plt+0x9870>
jmp    805312a <__sprintf_chk@plt+0x985a>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
je     8053140 <__sprintf_chk@plt+0x9870>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    80531e0 <__sprintf_chk@plt+0x9910>
lea    0x0(%esi),%esi
movzbl (%edx),%eax
cmp    $0x28,%al
lea    0x0(%esi),%esi
jne    8052fa1 <__sprintf_chk@plt+0x96d1>
jmp    8053140 <__sprintf_chk@plt+0x9870>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     8053140 <__sprintf_chk@plt+0x9870>
mov    %ecx,%edx
xchg   %ax,%ax
jmp    80530a2 <__sprintf_chk@plt+0x97d2>
test   %edx,%edx
jne    805322e <__sprintf_chk@plt+0x995e>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8053235 <__sprintf_chk@plt+0x9965>
call   805b650 <__sprintf_chk@plt+0x11d80>
jmp    8053300 <__sprintf_chk@plt+0x9a30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x68(%esp),%eax
mov    0x70(%esp),%edi
cmpb   $0x2d,(%eax)
mov    %edi,%ecx
mov    %edi,0x18(%esp)
mov    %cl,0x2f(%esp)
je     8053388 <__sprintf_chk@plt+0x9ab8>
movl   $0x80627ef,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x3c(%esp)
call   80494b0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     80533a3 <__sprintf_chk@plt+0x9ad3>
movb   $0x0,0x1c(%esp)
xor    %ebx,%ebx
xor    %ebp,%ebp
lea    0x3c(%esp),%edi
jmp    8053357 <__sprintf_chk@plt+0x9a87>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %dl,0x0(%ebp,%ebx,1)
add    $0x1,%ebx
mov    0x4(%esi),%edx
cmp    0x8(%esi),%edx
jae    80533b0 <__sprintf_chk@plt+0x9ae0>
lea    0x1(%edx),%ecx
mov    %ecx,0x4(%esi)
movzbl (%edx),%edx
cmp    0x3c(%esp),%ebx
jne    8053350 <__sprintf_chk@plt+0x9a80>
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x14(%esp)
call   805b4f0 <__sprintf_chk@plt+0x11c20>
mov    0x14(%esp),%edx
mov    %eax,%ebp
jmp    8053350 <__sprintf_chk@plt+0x9a80>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    805331e <__sprintf_chk@plt+0x9a4e>
movl   $0x0,0x3c(%esp)
mov    0x8069264,%esi
movb   $0x1,0x1c(%esp)
jmp    8053341 <__sprintf_chk@plt+0x9a71>
add    $0x4c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   8049730 <__uflow@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edx
jne    8053368 <__sprintf_chk@plt+0x9a98>
testb  $0x20,(%esi)
jne    80534f0 <__sprintf_chk@plt+0x9c20>
call   80496e0 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
je     805350a <__sprintf_chk@plt+0x9c3a>
lea    0x1(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
test   %ebx,%ebx
mov    %eax,%ebp
movzbl 0x18(%esp),%eax
mov    %al,0x0(%ebp,%ebx,1)
je     80534a8 <__sprintf_chk@plt+0x9bd8>
mov    0x18(%esp),%edi
mov    %edi,%eax
cmp    -0x1(%ebp,%ebx,1),%al
setne  %al
movzbl %al,%eax
add    %eax,%ebx
lea    0x0(%ebp,%ebx,1),%eax
cmp    %eax,%ebp
mov    %eax,0x14(%esp)
jae    80534a8 <__sprintf_chk@plt+0x9bd8>
mov    %edi,%eax
movzbl 0x2f(%esp),%edx
movzbl %al,%eax
add    %eax,%eax
mov    %eax,0x20(%esp)
lea    0x1(%ebp),%esi
jmp    8053449 <__sprintf_chk@plt+0x9b79>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %edi,0x14(%esp)
jbe    80534a8 <__sprintf_chk@plt+0x9bd8>
cmp    %dl,-0x1(%esi)
mov    %esi,%edi
lea    -0x1(%esi),%ebx
jne    8053440 <__sprintf_chk@plt+0x9b70>
mov    %edx,0x1c(%esp)
call   80498b0 <__ctype_b_loc@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
mov    0x20(%esp),%eax
movzwl (%ecx,%eax,1),%eax
test   $0x20,%ah
mov    %ax,0x18(%esp)
je     80534c8 <__sprintf_chk@plt+0x9bf8>
cmp    %ebp,%ebx
je     805349a <__sprintf_chk@plt+0x9bca>
movzbl -0x2(%esi),%eax
testb  $0x20,0x1(%ecx,%eax,2)
jne    8053493 <__sprintf_chk@plt+0x9bc3>
jmp    80534c8 <__sprintf_chk@plt+0x9bf8>
lea    0x0(%esi),%esi
movzbl -0x1(%ebx),%eax
testb  $0x20,0x1(%ecx,%eax,2)
je     80534c8 <__sprintf_chk@plt+0x9bf8>
sub    $0x1,%ebx
cmp    %ebp,%ebx
jne    8053488 <__sprintf_chk@plt+0x9bb8>
mov    %esi,%ebp
add    $0x1,%esi
cmp    %edi,0x14(%esp)
ja     8053449 <__sprintf_chk@plt+0x9b79>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %eax,(%edi)
setne  %al
add    $0x4c,%esp
movzbl %al,%eax
pop    %ebx
neg    %eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
movb   $0x0,(%ebx)
mov    %edx,0x18(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,%ebp
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   *0x60(%esp)
mov    0x18(%esp),%edx
jmp    805349c <__sprintf_chk@plt+0x9bcc>
xchg   %ax,%ax
call   80496e0 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jne    80533e4 <__sprintf_chk@plt+0x9b14>
mov    %esi,(%esp)
call   80493d0 <fclose@plt>
test   %eax,%eax
je     80533e4 <__sprintf_chk@plt+0x9b14>
mov    0x28(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jmp    80533e4 <__sprintf_chk@plt+0x9b14>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x8(%eax),%eax
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
mov    0xc(%esp),%ecx
cmp    0x8(%esi),%eax
jae    8053628 <__sprintf_chk@plt+0x9d58>
mov    (%esi),%edx
lea    (%edx,%eax,8),%ebx
mov    %ebx,(%ecx)
mov    (%ebx),%eax
test   %eax,%eax
je     80535ee <__sprintf_chk@plt+0x9d1e>
cmp    %eax,%edi
je     805359e <__sprintf_chk@plt+0x9cce>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     80535e7 <__sprintf_chk@plt+0x9d17>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     80535c4 <__sprintf_chk@plt+0x9cf4>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     8053620 <__sprintf_chk@plt+0x9d50>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
cmp    %edi,%eax
je     80535fd <__sprintf_chk@plt+0x9d2d>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    80535f8 <__sprintf_chk@plt+0x9d28>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    80535d0 <__sprintf_chk@plt+0x9d00>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     80535c4 <__sprintf_chk@plt+0x9cf4>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    80535c4 <__sprintf_chk@plt+0x9cf4>
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
mov    0x4(%edx),%eax
mov    %edx,0xc(%esp)
mov    %cl,0xb(%esp)
cmp    %eax,%edi
jae    80536da <__sprintf_chk@plt+0x9e0a>
xchg   %ax,%ax
mov    (%edi),%ebp
test   %ebp,%ebp
je     80536cf <__sprintf_chk@plt+0x9dff>
mov    0x4(%edi),%ebx
test   %ebx,%ebx
je     80536ba <__sprintf_chk@plt+0x9dea>
mov    0x8(%esi),%edx
jmp    8053677 <__sprintf_chk@plt+0x9da7>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ebp
test   %ecx,%ecx
mov    %ebp,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     80536b8 <__sprintf_chk@plt+0x9de8>
mov    %ecx,%ebx
mov    (%ebx),%ebp
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x18(%esi)
mov    0x8(%esi),%edx
cmp    %edx,%eax
jae    805375e <__sprintf_chk@plt+0x9e8e>
mov    (%esi),%ecx
lea    (%ecx,%eax,8),%eax
mov    0x4(%ebx),%ecx
cmpl   $0x0,(%eax)
jne    8053668 <__sprintf_chk@plt+0x9d98>
mov    %ebp,(%eax)
addl   $0x1,0xc(%esi)
test   %ecx,%ecx
movl   $0x0,(%ebx)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    8053675 <__sprintf_chk@plt+0x9da5>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ebp
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     80536e8 <__sprintf_chk@plt+0x9e18>
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
add    $0x8,%edi
cmp    %eax,%edi
jb     8053650 <__sprintf_chk@plt+0x9d80>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
cmp    0x8(%esi),%eax
jae    805375e <__sprintf_chk@plt+0x9e8e>
mov    (%esi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805373c <__sprintf_chk@plt+0x9e6c>
mov    0x24(%esi),%eax
test   %eax,%eax
je     8053744 <__sprintf_chk@plt+0x9e74>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %ebp,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    0xc(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%eax),%eax
cmp    %eax,%edi
jb     8053650 <__sprintf_chk@plt+0x9d80>
jmp    80536da <__sprintf_chk@plt+0x9e0a>
mov    %ebp,(%ebx)
addl   $0x1,0xc(%esi)
jmp    805371d <__sprintf_chk@plt+0x9e4d>
movl   $0x8,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
jne    8053712 <__sprintf_chk@plt+0x9e42>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    80537e6 <__sprintf_chk@plt+0x9f16>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     80537df <__sprintf_chk@plt+0x9f0f>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     80537da <__sprintf_chk@plt+0x9f0a>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    80537d0 <__sprintf_chk@plt+0x9f00>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     80537b8 <__sprintf_chk@plt+0x9ee8>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    8053831 <__sprintf_chk@plt+0x9f61>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805382a <__sprintf_chk@plt+0x9f5a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     805382a <__sprintf_chk@plt+0x9f5a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8053820 <__sprintf_chk@plt+0x9f50>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     8053808 <__sprintf_chk@plt+0x9f38>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     805383c <__sprintf_chk@plt+0x9f6c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    80538ae <__sprintf_chk@plt+0x9fde>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     80538a7 <__sprintf_chk@plt+0x9fd7>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     80538a2 <__sprintf_chk@plt+0x9fd2>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    8053898 <__sprintf_chk@plt+0x9fc8>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     8053880 <__sprintf_chk@plt+0x9fb0>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x806413c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   80497e0 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x8064154,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80497e0 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x8064184,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x80641bc
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   80497e0 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x806416c,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
cmp    0x8(%edi),%eax
jae    80539c1 <__sprintf_chk@plt+0xa0f1>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    8053992 <__sprintf_chk@plt+0xa0c2>
jmp    80539ab <__sprintf_chk@plt+0xa0db>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
cmp    %eax,%esi
je     80539ad <__sprintf_chk@plt+0xa0dd>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    80539b8 <__sprintf_chk@plt+0xa0e8>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8053990 <__sprintf_chk@plt+0xa0c0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     8053a01 <__sprintf_chk@plt+0xa131>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     80539f7 <__sprintf_chk@plt+0xa127>
jmp    8053a07 <__sprintf_chk@plt+0xa137>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    8053a07 <__sprintf_chk@plt+0xa137>
mov    (%edx),%eax
test   %eax,%eax
je     80539f0 <__sprintf_chk@plt+0xa120>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   8049820 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
mov    0x8(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
cmp    0x8(%esi),%eax
jae    8053a6d <__sprintf_chk@plt+0xa19d>
mov    (%esi),%edx
lea    (%edx,%eax,8),%edx
mov    %edx,%eax
jmp    8053a3c <__sprintf_chk@plt+0xa16c>
test   %eax,%eax
je     8053a47 <__sprintf_chk@plt+0xa177>
cmp    %ebx,(%eax)
mov    0x4(%eax),%eax
jne    8053a38 <__sprintf_chk@plt+0xa168>
test   %eax,%eax
jne    8053a65 <__sprintf_chk@plt+0xa195>
mov    0x4(%esi),%ecx
jmp    8053a56 <__sprintf_chk@plt+0xa186>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
test   %eax,%eax
jne    8053a5f <__sprintf_chk@plt+0xa18f>
add    $0x8,%edx
cmp    %edx,%ecx
ja     8053a50 <__sprintf_chk@plt+0xa180>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%eax),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   8049820 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%eax
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
mov    (%eax),%ebx
mov    0x4(%eax),%ebp
cmp    %ebx,%ebp
jbe    8053ae5 <__sprintf_chk@plt+0xa215>
xor    %esi,%esi
mov    (%ebx),%edi
test   %edi,%edi
je     8053ad5 <__sprintf_chk@plt+0xa205>
cmp    %esi,%edx
jbe    8053adc <__sprintf_chk@plt+0xa20c>
lea    0x1(%esi),%eax
mov    %edi,(%ecx,%esi,4)
mov    0x4(%ebx),%esi
test   %esi,%esi
je     8053acc <__sprintf_chk@plt+0xa1fc>
lea    0x0(%esi),%esi
cmp    %edx,%eax
je     8053ae0 <__sprintf_chk@plt+0xa210>
mov    (%esi),%edi
add    $0x1,%eax
mov    %edi,-0x4(%ecx,%eax,4)
mov    0x4(%esi),%esi
test   %esi,%esi
jne    8053ab8 <__sprintf_chk@plt+0xa1e8>
mov    0x14(%esp),%edi
mov    %eax,%esi
mov    0x4(%edi),%ebp
add    $0x8,%ebx
cmp    %ebp,%ebx
jb     8053a9b <__sprintf_chk@plt+0xa1cb>
mov    %esi,%eax
xchg   %ax,%ax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    8053ae0 <__sprintf_chk@plt+0xa210>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
mov    0x4(%ecx),%edx
mov    %eax,0xc(%esp)
cmp    %eax,%edx
jbe    8053b58 <__sprintf_chk@plt+0xa288>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    8053b2b <__sprintf_chk@plt+0xa25b>
jmp    8053b49 <__sprintf_chk@plt+0xa279>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     8053b58 <__sprintf_chk@plt+0xa288>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    8053b28 <__sprintf_chk@plt+0xa258>
mov    0x30(%esp),%eax
mov    0x4(%eax),%edx
addl   $0x8,0xc(%esp)
cmp    0xc(%esp),%edx
ja     8053b16 <__sprintf_chk@plt+0xa246>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     8053ba2 <__sprintf_chk@plt+0xa2d2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    8053b88 <__sprintf_chk@plt+0xa2b8>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x28,(%esp)
mov    0x40(%esp),%ebx
mov    0x44(%esp),%esi
test   %eax,%eax
mov    $0x8053530,%eax
cmovne 0x48(%esp),%eax
test   %edx,%edx
mov    %eax,0x48(%esp)
mov    $0x8053540,%eax
cmovne 0x4c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8053e38 <__sprintf_chk@plt+0xa568>
test   %esi,%esi
je     8053cd9 <__sprintf_chk@plt+0xa409>
cmp    $0x80641a8,%esi
mov    %esi,0x14(%eax)
je     8053e3f <__sprintf_chk@plt+0xa56f>
flds   0x8(%esi)
flds   0x80641c4
fxch   %st(1)
fucomi %st(1),%st
jbe    8053c98 <__sprintf_chk@plt+0xa3c8>
flds   0x80641c8
fucomip %st(1),%st
jbe    8053c9e <__sprintf_chk@plt+0xa3ce>
flds   0xc(%esi)
flds   0x80641cc
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    8053ca4 <__sprintf_chk@plt+0xa3d4>
flds   (%esi)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     8053caa <__sprintf_chk@plt+0xa3da>
faddp  %st,%st(2)
flds   0x4(%esi)
fucomi %st(2),%st
jbe    8053cb2 <__sprintf_chk@plt+0xa3e2>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    8053e24 <__sprintf_chk@plt+0xa554>
fstp   %st(0)
fstp   %st(0)
jmp    8053cc0 <__sprintf_chk@plt+0xa3f0>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
jmp    8053cc0 <__sprintf_chk@plt+0xa3f0>
fstp   %st(0)
fstp   %st(0)
jmp    8053cc0 <__sprintf_chk@plt+0xa3f0>
fstp   %st(0)
fstp   %st(0)
jmp    8053cc0 <__sprintf_chk@plt+0xa3f0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8053cc0 <__sprintf_chk@plt+0xa3f0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8053cc0 <__sprintf_chk@plt+0xa3f0>
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80641a8,0x14(%ebp)
mov    %ebp,(%esp)
call   8049390 <free@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x80641a8,0x14(%eax)
flds   0x80641c0
mov    $0x80641a8,%esi
cmpb   $0x0,0x10(%esi)
jne    8053d37 <__sprintf_chk@plt+0xa467>
xor    %edx,%edx
mov    %ebx,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x80641d0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    8053d9a <__sprintf_chk@plt+0xa4ca>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,%ebx
jmp    8053d39 <__sprintf_chk@plt+0xa469>
fstp   %st(0)
cmp    $0x9,%ebx
ja     8053da8 <__sprintf_chk@plt+0xa4d8>
mov    $0xb,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    8053db5 <__sprintf_chk@plt+0xa4e5>
mov    $0xaaaaaaab,%eax
mul    %ebx
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     8053d90 <__sprintf_chk@plt+0xa4c0>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    8053d7d <__sprintf_chk@plt+0xa4ad>
xchg   %ax,%ax
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     8053d90 <__sprintf_chk@plt+0xa4c0>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     8053d70 <__sprintf_chk@plt+0xa4a0>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    8053dc4 <__sprintf_chk@plt+0xa4f4>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    8053d48 <__sprintf_chk@plt+0xa478>
jmp    8053d9c <__sprintf_chk@plt+0xa4cc>
fstp   %st(0)
movl   $0x0,0x8(%ebp)
jmp    8053cc7 <__sprintf_chk@plt+0xa3f7>
or     $0x1,%ebx
cmp    $0xffffffff,%ebx
je     8053d9c <__sprintf_chk@plt+0xa4cc>
cmp    $0x9,%ebx
ja     8053d4d <__sprintf_chk@plt+0xa47d>
xor    %edx,%edx
mov    $0x3,%ecx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
je     8053d90 <__sprintf_chk@plt+0xa4c0>
cmp    $0x3fffffff,%ebx
ja     8053d9c <__sprintf_chk@plt+0xa4cc>
mov    %ebx,0x8(%ebp)
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   80498c0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8053cc7 <__sprintf_chk@plt+0xa3f7>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x48(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
movl   $0x0,0x24(%ebp)
mov    %eax,0x18(%ebp)
mov    0x4c(%esp),%eax
mov    %eax,0x1c(%ebp)
mov    0x50(%esp),%eax
mov    %eax,0x20(%ebp)
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
fucomi %st(1),%st
fstp   %st(1)
jbe    8053cba <__sprintf_chk@plt+0xa3ea>
jmp    8053ceb <__sprintf_chk@plt+0xa41b>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8053cd1 <__sprintf_chk@plt+0xa401>
flds   0x80641c0
jmp    8053ceb <__sprintf_chk@plt+0xa41b>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
mov    0x4(%esi),%eax
cmp    %eax,%edi
jae    8053ec8 <__sprintf_chk@plt+0xa5f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edx
test   %edx,%edx
je     8053ec1 <__sprintf_chk@plt+0xa5f1>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    8053e82 <__sprintf_chk@plt+0xa5b2>
jmp    8053ea6 <__sprintf_chk@plt+0xa5d6>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     8053e90 <__sprintf_chk@plt+0xa5c0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    8053e80 <__sprintf_chk@plt+0xa5b0>
test   %edx,%edx
je     8053eb1 <__sprintf_chk@plt+0xa5e1>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x4(%esi),%eax
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %eax,%edi
jb     8053e68 <__sprintf_chk@plt+0xa598>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     8053f33 <__sprintf_chk@plt+0xa663>
mov    0x10(%esi),%eax
test   %eax,%eax
je     8053f33 <__sprintf_chk@plt+0xa663>
mov    (%esi),%edi
mov    0x4(%esi),%edx
cmp    %edx,%edi
jae    8053f6b <__sprintf_chk@plt+0xa69b>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     8053f2a <__sprintf_chk@plt+0xa65a>
mov    %edi,%ebx
jmp    8053f1a <__sprintf_chk@plt+0xa64a>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    8053f18 <__sprintf_chk@plt+0xa648>
mov    0x4(%esi),%edx
add    $0x8,%edi
cmp    %edi,%edx
ja     8053f08 <__sprintf_chk@plt+0xa638>
jmp    8053f36 <__sprintf_chk@plt+0xa666>
mov    0x4(%esi),%edx
mov    (%esi),%edi
cmp    %edi,%edx
jbe    8053f6b <__sprintf_chk@plt+0xa69b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    8053f52 <__sprintf_chk@plt+0xa682>
jmp    8053f64 <__sprintf_chk@plt+0xa694>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049390 <free@plt>
test   %ebx,%ebx
jne    8053f50 <__sprintf_chk@plt+0xa680>
mov    0x4(%esi),%edx
add    $0x8,%edi
cmp    %edx,%edi
jb     8053f40 <__sprintf_chk@plt+0xa670>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    8053f7a <__sprintf_chk@plt+0xa6aa>
jmp    8053f89 <__sprintf_chk@plt+0xa6b9>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049390 <free@plt>
test   %ebx,%ebx
jne    8053f78 <__sprintf_chk@plt+0xa6a8>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8049390 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebx
mov    0x14(%edi),%eax
cmpb   $0x0,0x10(%eax)
mov    %eax,0x18(%esp)
flds   0x8(%eax)
jne    8054015 <__sprintf_chk@plt+0xa745>
xor    %edx,%edx
mov    %ebx,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x80641d0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805407a <__sprintf_chk@plt+0xa7aa>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,%ebx
jmp    8054017 <__sprintf_chk@plt+0xa747>
fstp   %st(0)
cmp    $0x9,%ebx
ja     805408e <__sprintf_chk@plt+0xa7be>
mov    $0xb,%ebx
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    805409b <__sprintf_chk@plt+0xa7cb>
mov    $0xaaaaaaab,%eax
mul    %ebx
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     8054070 <__sprintf_chk@plt+0xa7a0>
mov    $0x10,%ebp
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805405d <__sprintf_chk@plt+0xa78d>
xchg   %ax,%ax
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%ebp
test   %edx,%edx
je     8054070 <__sprintf_chk@plt+0xa7a0>
add    %ebp,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     8054050 <__sprintf_chk@plt+0xa780>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    80540aa <__sprintf_chk@plt+0xa7da>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    8054028 <__sprintf_chk@plt+0xa758>
jmp    805407c <__sprintf_chk@plt+0xa7ac>
fstp   %st(0)
movb   $0x0,0x18(%esp)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0x1,%ebx
cmp    $0xffffffff,%ebx
je     805407c <__sprintf_chk@plt+0xa7ac>
cmp    $0x9,%ebx
ja     805402d <__sprintf_chk@plt+0xa75d>
xor    %edx,%edx
mov    $0x3,%ecx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
je     8054070 <__sprintf_chk@plt+0xa7a0>
lea    -0x1(%ebx),%eax
cmp    $0x3ffffffe,%eax
ja     805407c <__sprintf_chk@plt+0xa7ac>
cmp    %ebx,0x8(%edi)
je     80541e4 <__sprintf_chk@plt+0xa914>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   80498c0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     805407c <__sprintf_chk@plt+0xa7ac>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mov    %edi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x3c(%esp)
mov    0x18(%edi),%eax
mov    %eax,0x40(%esp)
mov    0x1c(%edi),%eax
mov    %eax,0x44(%esp)
mov    0x20(%edi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%edi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   8053630 <__sprintf_chk@plt+0x9d60>
test   %al,%al
mov    %al,0x18(%esp)
jne    80541f6 <__sprintf_chk@plt+0xa926>
mov    0x4c(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,0x24(%edi)
mov    0x2c(%esp),%eax
cmp    %eax,%esi
jae    80541ba <__sprintf_chk@plt+0xa8ea>
mov    (%esi),%edx
test   %edx,%edx
je     80541b3 <__sprintf_chk@plt+0xa8e3>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     80541ac <__sprintf_chk@plt+0xa8dc>
mov    0x8(%edi),%edx
jmp    8054167 <__sprintf_chk@plt+0xa897>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ebp
test   %ecx,%ecx
mov    %ebp,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     80541a8 <__sprintf_chk@plt+0xa8d8>
mov    %ecx,%ebx
mov    (%ebx),%ebp
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%edx
cmp    %edx,%eax
jae    805422f <__sprintf_chk@plt+0xa95f>
mov    (%edi),%ecx
lea    (%ecx,%eax,8),%eax
mov    0x4(%ebx),%ecx
cmpl   $0x0,(%eax)
jne    8054158 <__sprintf_chk@plt+0xa888>
mov    %ebp,(%eax)
addl   $0x1,0xc(%edi)
test   %ecx,%ecx
movl   $0x0,(%ebx)
mov    0x24(%edi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%edi)
jne    8054165 <__sprintf_chk@plt+0xa895>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esi)
add    $0x8,%esi
cmp    %eax,%esi
jb     8054140 <__sprintf_chk@plt+0xa870>
xor    %ecx,%ecx
mov    %edi,%eax
lea    0x28(%esp),%edx
call   8053630 <__sprintf_chk@plt+0x9d60>
test   %al,%al
je     805422f <__sprintf_chk@plt+0xa95f>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movb   $0x1,0x18(%esp)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%edi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%edi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%edi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%edi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%edi)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
mov    0x50(%esp),%edi
mov    0x58(%esp),%ebx
test   %esi,%esi
je     8054499 <__sprintf_chk@plt+0xabc9>
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%ecx
cmp    %ecx,%eax
jae    8054499 <__sprintf_chk@plt+0xabc9>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebp
mov    0x0(%ebp),%eax
mov    %ebp,0x2c(%esp)
test   %eax,%eax
je     80542dd <__sprintf_chk@plt+0xaa0d>
cmp    %eax,%esi
je     8054298 <__sprintf_chk@plt+0xa9c8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
je     80542d3 <__sprintf_chk@plt+0xaa03>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     80542da <__sprintf_chk@plt+0xaa0a>
test   %ebx,%ebx
xchg   %ax,%ax
je     8054360 <__sprintf_chk@plt+0xaa90>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%eax),%eax
cmp    %eax,%esi
je     8054298 <__sprintf_chk@plt+0xa9c8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    8054370 <__sprintf_chk@plt+0xaaa0>
mov    0x4(%ebp),%ebp
mov    0x4(%ebp),%eax
test   %eax,%eax
jne    80542b8 <__sprintf_chk@plt+0xa9e8>
mov    0x8(%edi),%ecx
mov    0xc(%edi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%edi),%eax
fildll 0x10(%esp)
flds   0x8(%eax)
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
ja     8054380 <__sprintf_chk@plt+0xaab0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8054320 <__sprintf_chk@plt+0xaa50>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     80544a0 <__sprintf_chk@plt+0xabd0>
mov    0x24(%edi),%eax
test   %eax,%eax
je     80544b4 <__sprintf_chk@plt+0xabe4>
mov    0x4(%eax),%edx
mov    %edx,0x24(%edi)
mov    0x4(%ebx),%edx
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%edi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%ebp),%eax
mov    (%eax),%eax
jmp    8054298 <__sprintf_chk@plt+0xa9c8>
lea    0x0(%esi),%esi
cmp    $0x80641a8,%eax
je     805442c <__sprintf_chk@plt+0xab5c>
flds   0x80641c4
fxch   %st(2)
fucomi %st(2),%st
jbe    80543e0 <__sprintf_chk@plt+0xab10>
flds   0x80641c8
fucomip %st(1),%st
jbe    80543e6 <__sprintf_chk@plt+0xab16>
flds   0xc(%eax)
flds   0x80641cc
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    80543ec <__sprintf_chk@plt+0xab1c>
flds   (%eax)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     80543f2 <__sprintf_chk@plt+0xab22>
faddp  %st,%st(3)
flds   0x4(%eax)
fucomi %st(3),%st
jbe    80543fa <__sprintf_chk@plt+0xab2a>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    80544d6 <__sprintf_chk@plt+0xac06>
fstp   %st(0)
fstp   %st(1)
jmp    8054408 <__sprintf_chk@plt+0xab38>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(1)
jmp    8054408 <__sprintf_chk@plt+0xab38>
fstp   %st(0)
fstp   %st(1)
jmp    8054408 <__sprintf_chk@plt+0xab38>
fstp   %st(0)
fstp   %st(1)
jmp    8054408 <__sprintf_chk@plt+0xab38>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    8054408 <__sprintf_chk@plt+0xab38>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    8054408 <__sprintf_chk@plt+0xab38>
fstp   %st(1)
lea    0x0(%esi,%eiz,1),%esi
flds   0x80641c0
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
movl   $0x80641a8,0x14(%edi)
fucomip %st(3),%st
fstp   %st(2)
jbe    8054316 <__sprintf_chk@plt+0xaa46>
mov    $0x80641a8,%eax
jmp    8054430 <__sprintf_chk@plt+0xab60>
fstp   %st(2)
fxch   %st(1)
cmpb   $0x0,0x10(%eax)
fmuls  0xc(%eax)
jne    805443d <__sprintf_chk@plt+0xab6d>
fmulp  %st,%st(1)
jmp    805443f <__sprintf_chk@plt+0xab6f>
fstp   %st(1)
flds   0x80641d0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    80544ca <__sprintf_chk@plt+0xabfa>
fnstcw 0x1e(%esp)
mov    %edi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   8053fb0 <__sprintf_chk@plt+0xa6e0>
test   %al,%al
je     80544cc <__sprintf_chk@plt+0xabfc>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   8053550 <__sprintf_chk@plt+0x9c80>
test   %eax,%eax
je     8054320 <__sprintf_chk@plt+0xaa50>
call   8049820 <abort@plt>
xchg   %ax,%ax
mov    %esi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%edi)
addl   $0x1,0xc(%edi)
jmp    80542aa <__sprintf_chk@plt+0xa9da>
movl   $0x8,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
jne    805433f <__sprintf_chk@plt+0xaa6f>
jmp    80544cc <__sprintf_chk@plt+0xabfc>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    80542aa <__sprintf_chk@plt+0xa9da>
fucomi %st(2),%st
fstp   %st(2)
jbe    8054402 <__sprintf_chk@plt+0xab32>
fstp   %st(2)
fxch   %st(1)
jmp    8054430 <__sprintf_chk@plt+0xab60>
lea    0x0(%esi,%eiz,1),%esi
jmp    8054240 <__sprintf_chk@plt+0xa970>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%esi
mov    0x40(%esp),%edi
test   %esi,%esi
je     8054731 <__sprintf_chk@plt+0xae61>
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%ecx
cmp    %ecx,%eax
jae    8054731 <__sprintf_chk@plt+0xae61>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
mov    %ebx,0x2c(%esp)
test   %eax,%eax
je     8054589 <__sprintf_chk@plt+0xacb9>
cmp    %eax,%esi
je     8054600 <__sprintf_chk@plt+0xad30>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
je     805457f <__sprintf_chk@plt+0xacaf>
mov    (%ebx),%eax
test   %eax,%eax
je     8054586 <__sprintf_chk@plt+0xacb6>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%eax),%eax
cmp    %eax,%esi
je     8054600 <__sprintf_chk@plt+0xad30>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    8054608 <__sprintf_chk@plt+0xad38>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    8054560 <__sprintf_chk@plt+0xac90>
mov    0x8(%edi),%ecx
mov    0xc(%edi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%edi),%eax
fildll 0x10(%esp)
flds   0x8(%eax)
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
ja     8054618 <__sprintf_chk@plt+0xad48>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    80545c8 <__sprintf_chk@plt+0xacf8>
fstp   %st(0)
fstp   %st(0)
xchg   %ax,%ax
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     8054738 <__sprintf_chk@plt+0xae68>
mov    0x24(%edi),%eax
test   %eax,%eax
je     8054749 <__sprintf_chk@plt+0xae79>
mov    0x4(%eax),%edx
mov    %edx,0x24(%edi)
mov    0x4(%ebx),%edx
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,%eax
jmp    8054555 <__sprintf_chk@plt+0xac85>
nop
mov    0x4(%ebx),%eax
mov    (%eax),%eax
jmp    8054555 <__sprintf_chk@plt+0xac85>
lea    0x0(%esi),%esi
cmp    $0x80641a8,%eax
je     80546c4 <__sprintf_chk@plt+0xadf4>
flds   0x80641c4
fxch   %st(2)
fucomi %st(2),%st
jbe    8054678 <__sprintf_chk@plt+0xada8>
flds   0x80641c8
fucomip %st(1),%st
jbe    805467e <__sprintf_chk@plt+0xadae>
flds   0xc(%eax)
flds   0x80641cc
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    8054684 <__sprintf_chk@plt+0xadb4>
flds   (%eax)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805468a <__sprintf_chk@plt+0xadba>
faddp  %st,%st(3)
flds   0x4(%eax)
fucomi %st(3),%st
jbe    8054692 <__sprintf_chk@plt+0xadc2>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    8054768 <__sprintf_chk@plt+0xae98>
fstp   %st(0)
fstp   %st(1)
jmp    80546a0 <__sprintf_chk@plt+0xadd0>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(1)
jmp    80546a0 <__sprintf_chk@plt+0xadd0>
fstp   %st(0)
fstp   %st(1)
jmp    80546a0 <__sprintf_chk@plt+0xadd0>
fstp   %st(0)
fstp   %st(1)
jmp    80546a0 <__sprintf_chk@plt+0xadd0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    80546a0 <__sprintf_chk@plt+0xadd0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    80546a0 <__sprintf_chk@plt+0xadd0>
fstp   %st(1)
lea    0x0(%esi,%eiz,1),%esi
flds   0x80641c0
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
movl   $0x80641a8,0x14(%edi)
fucomip %st(3),%st
fstp   %st(2)
jbe    80545c2 <__sprintf_chk@plt+0xacf2>
mov    $0x80641a8,%eax
jmp    80546c8 <__sprintf_chk@plt+0xadf8>
fstp   %st(2)
fxch   %st(1)
cmpb   $0x0,0x10(%eax)
fmuls  0xc(%eax)
jne    80546d5 <__sprintf_chk@plt+0xae05>
fmulp  %st,%st(1)
jmp    80546d7 <__sprintf_chk@plt+0xae07>
fstp   %st(1)
flds   0x80641d0
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805475f <__sprintf_chk@plt+0xae8f>
fnstcw 0x1e(%esp)
mov    %edi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   8053fb0 <__sprintf_chk@plt+0xa6e0>
test   %al,%al
je     8054761 <__sprintf_chk@plt+0xae91>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   8053550 <__sprintf_chk@plt+0x9c80>
test   %eax,%eax
je     80545c8 <__sprintf_chk@plt+0xacf8>
call   8049820 <abort@plt>
xchg   %ax,%ax
mov    %esi,(%ebx)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
addl   $0x1,0xc(%edi)
jmp    80545f8 <__sprintf_chk@plt+0xad28>
movl   $0x8,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
jne    80545e7 <__sprintf_chk@plt+0xad17>
jmp    8054761 <__sprintf_chk@plt+0xae91>
fstp   %st(0)
xor    %eax,%eax
jmp    8054559 <__sprintf_chk@plt+0xac89>
fucomi %st(2),%st
fstp   %st(2)
jbe    805469a <__sprintf_chk@plt+0xadca>
fstp   %st(2)
fxch   %st(1)
jmp    80546c8 <__sprintf_chk@plt+0xadf8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebp
mov    0x8(%eax),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
call   *0x18(%eax)
mov    0x40(%esp),%edi
cmp    0x8(%edi),%eax
jae    8054a45 <__sprintf_chk@plt+0xb175>
mov    (%edi),%edx
lea    (%edx,%eax,8),%eax
mov    (%eax),%ebx
mov    %eax,0x18(%esp)
test   %ebx,%ebx
je     8054a10 <__sprintf_chk@plt+0xb140>
cmp    %ebx,%ebp
je     805483e <__sprintf_chk@plt+0xaf6e>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    8054838 <__sprintf_chk@plt+0xaf68>
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     8054a10 <__sprintf_chk@plt+0xb140>
mov    (%eax),%ebx
cmp    %ebx,%ebp
jne    8054804 <__sprintf_chk@plt+0xaf34>
jmp    8054a2b <__sprintf_chk@plt+0xb15b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     8054a10 <__sprintf_chk@plt+0xb140>
mov    (%eax),%ebx
cmp    %ebx,%ebp
je     805481b <__sprintf_chk@plt+0xaf4b>
mov    0x40(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x1c(%eax)
test   %al,%al
je     80547f0 <__sprintf_chk@plt+0xaf20>
mov    0x4(%esi),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%ecx
mov    0x40(%esp),%edi
mov    %ecx,0x4(%esi)
movl   $0x0,(%eax)
mov    0x24(%edi),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x24(%edi)
jmp    805486a <__sprintf_chk@plt+0xaf9a>
xchg   %ax,%ax
mov    0x18(%esp),%eax
mov    (%eax),%ebx
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%eax
test   %eax,%eax
je     8054a20 <__sprintf_chk@plt+0xb150>
mov    (%eax),%esi
mov    0x4(%eax),%edi
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x40(%esp),%ecx
movl   $0x0,(%eax)
mov    0x24(%ecx),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x24(%ecx)
test   %ebx,%ebx
je     8054898 <__sprintf_chk@plt+0xafc8>
mov    0x40(%esp),%eax
subl   $0x1,0x10(%eax)
mov    0x18(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    8054898 <__sprintf_chk@plt+0xafc8>
jmp    80548a8 <__sprintf_chk@plt+0xafd8>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    8054898 <__sprintf_chk@plt+0xafc8>
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    0x40(%esp),%edx
mov    0xc(%eax),%eax
sub    $0x1,%eax
mov    %eax,0xc(%edx)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %edx,0x14(%esp)
xor    %edx,%edx
fildll 0x10(%esp)
mov    0x14(%eax),%ecx
mov    0x8(%eax),%eax
flds   (%ecx)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fucomip %st(3),%st
jbe    8054888 <__sprintf_chk@plt+0xafb8>
cmp    $0x80641a8,%ecx
je     8054990 <__sprintf_chk@plt+0xb0c0>
flds   0x8(%ecx)
flds   0x80641c4
fxch   %st(1)
fucomi %st(1),%st
jbe    8054948 <__sprintf_chk@plt+0xb078>
flds   0x80641c8
fucomip %st(1),%st
jbe    8054950 <__sprintf_chk@plt+0xb080>
flds   0xc(%ecx)
flds   0x80641cc
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    8054958 <__sprintf_chk@plt+0xb088>
fldz
fxch   %st(4)
fucomi %st(4),%st
fstp   %st(4)
jb     8054960 <__sprintf_chk@plt+0xb090>
fxch   %st(1)
faddp  %st,%st(3)
flds   0x4(%ecx)
fucomi %st(3),%st
jbe    8054968 <__sprintf_chk@plt+0xb098>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    8054a34 <__sprintf_chk@plt+0xb164>
fstp   %st(0)
fstp   %st(1)
jmp    8054970 <__sprintf_chk@plt+0xb0a0>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    8054970 <__sprintf_chk@plt+0xb0a0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    8054970 <__sprintf_chk@plt+0xb0a0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    8054970 <__sprintf_chk@plt+0xb0a0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    8054970 <__sprintf_chk@plt+0xb0a0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
xchg   %ax,%ax
fldz
mov    0x40(%esp),%eax
fmul   %st(1),%st
movl   $0x80641a8,0x14(%eax)
fucomip %st(2),%st
fstp   %st(1)
jbe    8054890 <__sprintf_chk@plt+0xafc0>
mov    $0x80641a8,%ecx
jmp    8054994 <__sprintf_chk@plt+0xb0c4>
fstp   %st(1)
fstp   %st(1)
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
jne    80549a0 <__sprintf_chk@plt+0xb0d0>
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8053fb0 <__sprintf_chk@plt+0xa6e0>
test   %al,%al
jne    8054898 <__sprintf_chk@plt+0xafc8>
mov    0x40(%esp),%eax
mov    0x24(%eax),%eax
test   %eax,%eax
jne    80549ea <__sprintf_chk@plt+0xb11a>
jmp    80549f9 <__sprintf_chk@plt+0xb129>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    0x4(%eax),%esi
mov    %eax,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
jne    80549e8 <__sprintf_chk@plt+0xb118>
mov    0x40(%esp),%eax
movl   $0x0,0x24(%eax)
jmp    8054898 <__sprintf_chk@plt+0xafc8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%ecx)
jmp    805486a <__sprintf_chk@plt+0xaf9a>
mov    0x18(%esp),%esi
jmp    805481b <__sprintf_chk@plt+0xaf4b>
fucomip %st(2),%st
fstp   %st(1)
jbe    8054970 <__sprintf_chk@plt+0xb0a0>
fstp   %st(1)
jmp    8054994 <__sprintf_chk@plt+0xb0c4>
call   8049820 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049370 <wcwidth@plt>
test   %eax,%eax
jns    8054a74 <__sprintf_chk@plt+0xb1a4>
mov    %ebx,(%esp)
call   8049450 <iswcntrl@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
mov    (%ebx),%eax
lea    0x10(%ebx),%edx
cmp    %edx,%eax
je     8054ab8 <__sprintf_chk@plt+0xb1e8>
mov    %eax,(%esi)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ebx),%eax
test   %al,%al
mov    %al,0x8(%esi)
je     8054ab0 <__sprintf_chk@plt+0xb1e0>
mov    0xc(%ebx),%eax
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%ebx),%edx
lea    0x10(%esi),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   80493a0 <memcpy@plt>
mov    %edi,(%esi)
jmp    8054a99 <__sprintf_chk@plt+0xb1c9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    %ecx,%eax
and    $0x1f,%ecx
shr    $0x5,%al
movzbl %al,%eax
mov    0x80641e0(,%eax,4),%eax
shr    %cl,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%esi
mov    0xc4(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
cmp    %edi,%esi
je     8055000 <__sprintf_chk@plt+0xb730>
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8054c08 <__sprintf_chk@plt+0xb338>
movb   $0x0,0x2c(%esp)
mov    %esi,%eax
cmpb   $0x0,0x2c(%esp)
mov    %esi,0x3c(%esp)
lea    0x30(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movb   $0x0,0x38(%esp)
mov    %edi,0x74(%esp)
movb   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
jne    8054dac <__sprintf_chk@plt+0xb4dc>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    8054ee0 <__sprintf_chk@plt+0xb610>
movl   $0x1,0x40(%esp)
movsbl (%eax),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    8054c8a <__sprintf_chk@plt+0xb3ba>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    8055008 <__sprintf_chk@plt+0xb738>
mov    $0x1,%eax
lea    0x0(%esi),%esi
mov    0x9c(%esp),%esi
xor    %gs:0x14,%esi
jne    805521f <__sprintf_chk@plt+0xb94f>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   80498b0 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    8054c26 <__sprintf_chk@plt+0xb356>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    $0x1,%edi
cmp    %dl,%bl
jne    8055190 <__sprintf_chk@plt+0xb8c0>
movzbl (%esi),%ebx
movzbl %bl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     8054c46 <__sprintf_chk@plt+0xb376>
mov    %ecx,0x1c(%esp)
call   8049890 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%ebx
movzbl (%edi),%edx
movzbl %dl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     8054c66 <__sprintf_chk@plt+0xb396>
mov    %ecx,0x1c(%esp)
call   8049890 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%edx
test   %bl,%bl
jne    8054c18 <__sprintf_chk@plt+0xb348>
xor    %eax,%eax
sub    %edx,%eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
movb   $0x1,0x38(%esp)
movzbl 0x70(%esp),%ebx
test   %bl,%bl
je     8054cf0 <__sprintf_chk@plt+0xb420>
movzbl 0x7c(%esp),%ebx
test   %bl,%bl
jne    8054d47 <__sprintf_chk@plt+0xb477>
cmpb   $0x0,0x44(%esp)
jne    80551a0 <__sprintf_chk@plt+0xb8d0>
mov    0x40(%esp),%eax
mov    0x78(%esp),%edx
cmp    %edx,%eax
je     8054f40 <__sprintf_chk@plt+0xb670>
cmp    %eax,%edx
jbe    8054f18 <__sprintf_chk@plt+0xb648>
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
lea    -0x1(%eax,%eax,1),%eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    8054e51 <__sprintf_chk@plt+0xb581>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8054e38 <__sprintf_chk@plt+0xb568>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
test   %bl,%bl
movb   $0x1,0x70(%esp)
je     8054ca0 <__sprintf_chk@plt+0xb3d0>
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     8054fa0 <__sprintf_chk@plt+0xb6d0>
cmpb   $0x0,0x44(%esp)
je     8054bdd <__sprintf_chk@plt+0xb30d>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80493c0 <towlower@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80493c0 <towlower@plt>
sub    %eax,%ebx
mov    %ebx,%eax
test   %eax,%eax
jne    8054be8 <__sprintf_chk@plt+0xb318>
mov    0x3c(%esp),%eax
mov    0x78(%esp),%edx
add    0x40(%esp),%eax
add    %edx,0x74(%esp)
cmpb   $0x0,0x2c(%esp)
mov    %eax,0x3c(%esp)
movb   $0x0,0x38(%esp)
movb   $0x0,0x70(%esp)
je     8054b90 <__sprintf_chk@plt+0xb2c0>
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     8054c78 <__sprintf_chk@plt+0xb3a8>
cmp    $0xfffffffe,%eax
je     8054f60 <__sprintf_chk@plt+0xb690>
test   %eax,%eax
jne    8054e14 <__sprintf_chk@plt+0xb544>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    8055224 <__sprintf_chk@plt+0xb954>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8055248 <__sprintf_chk@plt+0xb978>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8054bbf <__sprintf_chk@plt+0xb2ef>
movb   $0x0,0x2c(%esp)
jmp    8054bbf <__sprintf_chk@plt+0xb2ef>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80551fb <__sprintf_chk@plt+0xb92b>
movb   $0x1,0x64(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     8054f00 <__sprintf_chk@plt+0xb630>
cmp    $0xfffffffe,%eax
je     8054f80 <__sprintf_chk@plt+0xb6b0>
test   %eax,%eax
jne    8054ebb <__sprintf_chk@plt+0xb5eb>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    8055224 <__sprintf_chk@plt+0xb954>
mov    0x80(%esp),%eax
test   %eax,%eax
jne    8055248 <__sprintf_chk@plt+0xb978>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8054d3a <__sprintf_chk@plt+0xb46a>
movb   $0x0,0x64(%esp)
jmp    8054d3a <__sprintf_chk@plt+0xb46a>
nop
mov    %esi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80551fb <__sprintf_chk@plt+0xb92b>
movb   $0x1,0x2c(%esp)
jmp    8054dac <__sprintf_chk@plt+0xb4dc>
lea    0x0(%esi),%esi
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
jmp    8054d3a <__sprintf_chk@plt+0xb46a>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
sar    $0x1f,%eax
or     $0x1,%eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
jmp    8054d7b <__sprintf_chk@plt+0xb4ab>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    8054c85 <__sprintf_chk@plt+0xb3b5>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    8054d3a <__sprintf_chk@plt+0xb46a>
lea    0x0(%esi),%esi
cmpb   $0x0,0x38(%esp)
jne    8054bd0 <__sprintf_chk@plt+0xb300>
cmpb   $0x0,0x2c(%esp)
lea    0x30(%esp),%esi
jne    8055106 <__sprintf_chk@plt+0xb836>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    80550ed <__sprintf_chk@plt+0xb81d>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     8054bdd <__sprintf_chk@plt+0xb30d>
jmp    8055008 <__sprintf_chk@plt+0xb738>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
nop
mov    0x48(%esp),%esi
test   %esi,%esi
xchg   %ax,%ax
jne    8054bdd <__sprintf_chk@plt+0xb30d>
cmpb   $0x0,0x70(%esp)
jne    80551aa <__sprintf_chk@plt+0xb8da>
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    8055064 <__sprintf_chk@plt+0xb794>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jb     80551b4 <__sprintf_chk@plt+0xb8e4>
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80551fb <__sprintf_chk@plt+0xb92b>
movb   $0x1,0x64(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
mov    %eax,0x78(%esp)
jbe    80551a0 <__sprintf_chk@plt+0xb8d0>
test   %eax,%eax
jne    80550d0 <__sprintf_chk@plt+0xb800>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    8055224 <__sprintf_chk@plt+0xb954>
mov    0x80(%esp),%ecx
test   %ecx,%ecx
jne    8055248 <__sprintf_chk@plt+0xb978>
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     80551a0 <__sprintf_chk@plt+0xb8d0>
mov    0x80(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
neg    %eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80551fb <__sprintf_chk@plt+0xb92b>
movb   $0x1,0x2c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     80551e7 <__sprintf_chk@plt+0xb917>
cmp    $0xfffffffe,%eax
je     80551cb <__sprintf_chk@plt+0xb8fb>
test   %eax,%eax
jne    805516e <__sprintf_chk@plt+0xb89e>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    8055224 <__sprintf_chk@plt+0xb954>
mov    0x48(%esp),%edi
test   %edi,%edi
jne    8055248 <__sprintf_chk@plt+0xb978>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8054fed <__sprintf_chk@plt+0xb71d>
movb   $0x0,0x2c(%esp)
jmp    8054fed <__sprintf_chk@plt+0xb71d>
lea    0x0(%esi),%esi
movzbl %bl,%eax
sub    %edx,%eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    8054be8 <__sprintf_chk@plt+0xb318>
movzbl 0x7c(%esp),%ebx
jmp    80550d0 <__sprintf_chk@plt+0xb800>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    %eax,0x80(%esp)
jmp    80550d0 <__sprintf_chk@plt+0xb800>
mov    0x3c(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    8054fed <__sprintf_chk@plt+0xb71d>
movl   $0x1,0x40(%esp)
xor    %ebx,%ebx
movb   $0x0,0x44(%esp)
jmp    8054fed <__sprintf_chk@plt+0xb71d>
movl   $0x8064200,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
call   8049420 <__stack_chk_fail@plt>
movl   $0x8064200,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064200,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x28(%esp),%edx
test   $0x40,%dl
cmovne 0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049650 <openat64@plt>
mov    %eax,(%esp)
call   8059a30 <__sprintf_chk@plt+0x10160>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     8055333 <__sprintf_chk@plt+0xba63>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049760 <strrchr@plt>
test   %eax,%eax
je     805531f <__sprintf_chk@plt+0xba4f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    805531f <__sprintf_chk@plt+0xba4f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x806424c,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    805531f <__sprintf_chk@plt+0xba4f>
mov    $0x3,%ecx
mov    $0x8064254,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    805531f <__sprintf_chk@plt+0xba4f>
lea    0x4(%eax),%ebx
mov    %ebx,0x8069220
mov    %ebx,0x8069528
mov    %ebx,0x8069240
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8069224,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8064214,(%esp)
mov    %eax,0xc(%esp)
call   80494c0 <fwrite@plt>
call   8049820 <abort@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
movl   $0x2,0x4(%esp)
lea    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
call   8059460 <__sprintf_chk@plt+0xfb90>
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
je     805568b <__sprintf_chk@plt+0xbdbb>
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8060710 <fts_children+0x1470>
test   %eax,%eax
mov    %eax,%esi
je     805568b <__sprintf_chk@plt+0xbdbb>
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8055990 <__sprintf_chk@plt+0xc0c0>
cmp    %esi,%ebx
movl   $0x0,0x4(%ebp)
mov    %ebx,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
jae    80559f0 <__sprintf_chk@plt+0xc120>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    805544d <__sprintf_chk@plt+0xbb7d>
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
bt     %eax,%edx
jae    8055438 <__sprintf_chk@plt+0xbb68>
movl   $0x1,0x40(%esp)
movsbl (%ebx),%edi
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
test   %edi,%edi
movb   $0x1,0x38(%esp)
jne    80554e2 <__sprintf_chk@plt+0xbc12>
call   8049820 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055b9a <__sprintf_chk@plt+0xc2ca>
movb   $0x1,0x2c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     80558f0 <__sprintf_chk@plt+0xc020>
cmp    $0xfffffffe,%eax
je     8055960 <__sprintf_chk@plt+0xc090>
test   %eax,%eax
jne    8055950 <__sprintf_chk@plt+0xc080>
mov    0x3c(%esp),%ebx
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%ebx)
jne    8055bbe <__sprintf_chk@plt+0xc2ee>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8055be7 <__sprintf_chk@plt+0xc317>
xor    %edi,%edi
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055422 <__sprintf_chk@plt+0xbb52>
test   %edi,%edi
movb   $0x0,0x2c(%esp)
movb   $0x1,0x38(%esp)
je     805542f <__sprintf_chk@plt+0xbb5f>
mov    0x3c(%esp),%ebx
add    0x40(%esp),%ebx
movzbl 0x44(%esp),%eax
movb   $0x0,0x38(%esp)
cmp    %ebx,%esi
mov    %ebx,0x3c(%esp)
ja     80553f0 <__sprintf_chk@plt+0xbb20>
test   %al,%al
je     80559f0 <__sprintf_chk@plt+0xc120>
mov    %edi,(%esp)
call   80496c0 <iswalnum@plt>
test   %eax,%eax
sete   0x1f(%esp)
movb   $0x0,0x64(%esp)
movzbl 0x64(%esp),%ebx
lea    0x68(%esp),%edi
mov    0x18(%esp),%eax
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
test   %bl,%bl
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
mov    %esi,0x14(%esp)
jne    8055727 <__sprintf_chk@plt+0xbe57>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    80558b8 <__sprintf_chk@plt+0xbfe8>
movl   $0x1,0x78(%esp)
movsbl (%eax),%eax
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
mov    0x80(%esp),%edx
movb   $0x1,0x70(%esp)
test   %edx,%edx
jne    80556e7 <__sprintf_chk@plt+0xbe17>
test   %bl,%bl
mov    0x14(%esp),%esi
jne    8055980 <__sprintf_chk@plt+0xc0b0>
cmpb   $0x0,0x2c(%esp)
jne    8055ab1 <__sprintf_chk@plt+0xc1e1>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8055a9c <__sprintf_chk@plt+0xc1cc>
movl   $0x1,0x40(%esp)
movsbl (%edx),%edi
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
movb   $0x1,0x38(%esp)
test   %bl,%bl
je     8055612 <__sprintf_chk@plt+0xbd42>
test   %edi,%edi
je     8055628 <__sprintf_chk@plt+0xbd58>
cmpb   $0x0,0x44(%esp)
je     8055628 <__sprintf_chk@plt+0xbd58>
mov    %edi,(%esp)
call   80496c0 <iswalnum@plt>
test   %eax,%eax
jne    8055633 <__sprintf_chk@plt+0xbd63>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1f(%esp)
jne    8055b90 <__sprintf_chk@plt+0xc2c0>
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
movzbl (%esi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
bt     %eax,%edx
jae    8055a00 <__sprintf_chk@plt+0xc130>
movl   $0x1,0x40(%esp)
movsbl (%esi),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    80556c2 <__sprintf_chk@plt+0xbdf2>
xor    %ebx,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    %ebx,%eax
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
jne    8055be2 <__sprintf_chk@plt+0xc312>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    8055398 <__sprintf_chk@plt+0xbac8>
lea    0x0(%esi),%esi
movzbl 0x38(%esp),%ebx
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
movb   $0x1,0x70(%esp)
test   %bl,%bl
je     80557b8 <__sprintf_chk@plt+0xbee8>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    8055800 <__sprintf_chk@plt+0xbf30>
mov    0x40(%esp),%eax
movzbl 0x64(%esp),%ebx
add    %eax,0x3c(%esp)
mov    0x74(%esp),%eax
add    0x78(%esp),%eax
test   %bl,%bl
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movb   $0x0,0x70(%esp)
je     8055570 <__sprintf_chk@plt+0xbca0>
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     80556d0 <__sprintf_chk@plt+0xbe00>
cmp    $0xfffffffe,%eax
je     8055910 <__sprintf_chk@plt+0xc040>
test   %eax,%eax
jne    8055795 <__sprintf_chk@plt+0xbec5>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    8055bbe <__sprintf_chk@plt+0xc2ee>
mov    0x80(%esp),%esi
test   %esi,%esi
jne    8055be7 <__sprintf_chk@plt+0xc317>
mov    %edi,(%esp)
movb   $0x1,0x7c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80557ab <__sprintf_chk@plt+0xbedb>
movb   $0x0,0x64(%esp)
movzbl 0x38(%esp),%ebx
jmp    80555a2 <__sprintf_chk@plt+0xbcd2>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    805582d <__sprintf_chk@plt+0xbf5d>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8055818 <__sprintf_chk@plt+0xbf48>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     80556fc <__sprintf_chk@plt+0xbe2c>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    80556fc <__sprintf_chk@plt+0xbe2c>
jmp    805542f <__sprintf_chk@plt+0xbb5f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055b9a <__sprintf_chk@plt+0xc2ca>
movb   $0x1,0x2c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     80558d8 <__sprintf_chk@plt+0xc008>
cmp    $0xfffffffe,%eax
je     8055930 <__sprintf_chk@plt+0xc060>
test   %eax,%eax
jne    8055891 <__sprintf_chk@plt+0xbfc1>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    8055bbe <__sprintf_chk@plt+0xc2ee>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    8055be7 <__sprintf_chk@plt+0xc317>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80557f3 <__sprintf_chk@plt+0xbf23>
movb   $0x0,0x2c(%esp)
jmp    80557f3 <__sprintf_chk@plt+0xbf23>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055b9a <__sprintf_chk@plt+0xc2ca>
movb   $0x1,0x64(%esp)
jmp    8055727 <__sprintf_chk@plt+0xbe57>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
jmp    80557f3 <__sprintf_chk@plt+0xbf23>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    0x3c(%esp),%ebx
jmp    80554e6 <__sprintf_chk@plt+0xbc16>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movzbl 0x38(%esp),%ebx
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    80556e2 <__sprintf_chk@plt+0xbe12>
nop
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    80557f3 <__sprintf_chk@plt+0xbf23>
lea    0x0(%esi),%esi
mov    0x48(%esp),%edi
jmp    80554bb <__sprintf_chk@plt+0xbbeb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    80554e6 <__sprintf_chk@plt+0xbc16>
xchg   %ax,%ax
mov    0x48(%esp),%edi
movzbl 0x44(%esp),%ebx
jmp    805560a <__sprintf_chk@plt+0xbd3a>
xchg   %ax,%ax
cmp    %esi,%ebx
mov    $0x1,%edi
jae    80559b2 <__sprintf_chk@plt+0xc0e2>
call   80498b0 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edi
shr    $0x3,%di
xor    $0x1,%edi
and    $0x1,%edi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movzbl (%esi,%eax,1),%ebx
test   %bl,%bl
je     80559d3 <__sprintf_chk@plt+0xc103>
call   80498b0 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%ebx,2)
jne    80559dd <__sprintf_chk@plt+0xc10d>
mov    %edi,%eax
test   %al,%al
jne    8055b90 <__sprintf_chk@plt+0xc2c0>
cmpb   $0x0,(%esi)
je     805568b <__sprintf_chk@plt+0xbdbb>
lea    0x1(%esi),%ebx
jmp    8055398 <__sprintf_chk@plt+0xbac8>
xchg   %ax,%ax
movb   $0x1,0x1f(%esp)
jmp    8055517 <__sprintf_chk@plt+0xbc47>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055b9a <__sprintf_chk@plt+0xc2ca>
movb   $0x1,0x2c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     80556ba <__sprintf_chk@plt+0xbdea>
cmp    $0xfffffffe,%eax
je     8055b41 <__sprintf_chk@plt+0xc271>
test   %eax,%eax
jne    8055a7d <__sprintf_chk@plt+0xc1ad>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    8055bbe <__sprintf_chk@plt+0xc2ee>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
jne    8055be7 <__sprintf_chk@plt+0xc317>
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     805567e <__sprintf_chk@plt+0xbdae>
movb   $0x0,0x2c(%esp)
jmp    805567e <__sprintf_chk@plt+0xbdae>
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055b9a <__sprintf_chk@plt+0xc2ca>
movb   $0x1,0x2c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     8055b5c <__sprintf_chk@plt+0xc28c>
cmp    $0xfffffffe,%eax
je     8055b72 <__sprintf_chk@plt+0xc2a2>
test   %eax,%eax
jne    8055b19 <__sprintf_chk@plt+0xc249>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    8055bbe <__sprintf_chk@plt+0xc2ee>
mov    0x48(%esp),%ebx
test   %ebx,%ebx
jne    8055be7 <__sprintf_chk@plt+0xc317>
xor    %edi,%edi
jmp    8055b1d <__sprintf_chk@plt+0xc24d>
mov    0x48(%esp),%edi
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8055605 <__sprintf_chk@plt+0xbd35>
movb   $0x0,0x2c(%esp)
jmp    8055605 <__sprintf_chk@plt+0xbd35>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    8055398 <__sprintf_chk@plt+0xbac8>
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
jmp    8055605 <__sprintf_chk@plt+0xbd35>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    8055605 <__sprintf_chk@plt+0xbd35>
mov    $0x1,%ebx
jmp    805568d <__sprintf_chk@plt+0xbdbd>
movl   $0x8064266,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064266,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
call   8049420 <__stack_chk_fail@plt>
movl   $0x8064266,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %esi,0x4(%esp)
call   8049410 <dcgettext@plt>
cmp    %esi,%eax
mov    %eax,%ebx
je     8055c43 <__sprintf_chk@plt+0xc373>
mov    %esi,%edx
call   8055360 <__sprintf_chk@plt+0xba90>
test   %al,%al
je     8055c50 <__sprintf_chk@plt+0xc380>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049620 <strlen@plt>
lea    0x4(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x8064258,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
mov    %edi,%ebx
call   80498d0 <__sprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,%ebp
mov    %eax,0x18(%esp)
call   805f850 <fts_children+0x5b0>
movl   $0x8064260,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   805f4c0 <fts_children+0x220>
test   %eax,%eax
jne    8055dc8 <__sprintf_chk@plt+0xc4f8>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
je     8055e88 <__sprintf_chk@plt+0xc5b8>
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
jne    8055d58 <__sprintf_chk@plt+0xc488>
cmp    %ebx,%esi
jne    8055ea8 <__sprintf_chk@plt+0xc5d8>
cmp    %ebx,%edi
xchg   %ax,%ax
jne    8055d40 <__sprintf_chk@plt+0xc470>
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8055d32 <__sprintf_chk@plt+0xc462>
mov    %edi,(%esp)
call   8049390 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%edx
mov    0x18(%esp),%eax
call   8055360 <__sprintf_chk@plt+0xba90>
test   %al,%al
jne    8055da0 <__sprintf_chk@plt+0xc4d0>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8055d82 <__sprintf_chk@plt+0xc4b2>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
call   8055360 <__sprintf_chk@plt+0xba90>
test   %al,%al
jne    8055da0 <__sprintf_chk@plt+0xc4d0>
test   %ebp,%ebp
je     8055ec0 <__sprintf_chk@plt+0xc5f0>
mov    0x18(%esp),%eax
mov    %ebp,%edx
call   8055360 <__sprintf_chk@plt+0xba90>
test   %al,%al
je     8055ec0 <__sprintf_chk@plt+0xc5f0>
lea    0x0(%esi),%esi
test   %esi,%esi
je     8055dac <__sprintf_chk@plt+0xc4dc>
mov    %esi,(%esp)
call   8049390 <free@plt>
test   %edi,%edi
mov    0x18(%esp),%eax
je     8055d34 <__sprintf_chk@plt+0xc464>
mov    %edi,(%esp)
call   8049390 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x8(%esp)
movl   $0x8064260,0x4(%esp)
mov    %ebx,(%esp)
call   805b730 <__sprintf_chk@plt+0x11e60>
mov    %edi,(%esp)
mov    %eax,%esi
call   8049620 <strlen@plt>
mov    %eax,%ebp
lea    0xb(%eax),%eax
mov    %eax,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   80493a0 <memcpy@plt>
mov    0x1c(%esp),%edx
mov    $0x5449,%ecx
add    %edx,%ebp
mov    %cx,0x8(%ebp)
movl   $0x52542f2f,0x0(%ebp)
movl   $0x4c534e41,0x4(%ebp)
movb   $0x0,0xa(%ebp)
mov    %edx,0x8(%esp)
movl   $0x8064260,0x4(%esp)
mov    %ebx,(%esp)
call   805b730 <__sprintf_chk@plt+0x11e60>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   8049390 <free@plt>
test   %ebp,%ebp
je     8055f40 <__sprintf_chk@plt+0xc670>
movl   $0x3f,0x4(%esp)
mov    %ebp,(%esp)
call   80495f0 <strchr@plt>
test   %eax,%eax
je     8055f2f <__sprintf_chk@plt+0xc65f>
mov    %ebp,(%esp)
mov    %esi,%ebx
xor    %ebp,%ebp
call   8049390 <free@plt>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
jne    8055d0c <__sprintf_chk@plt+0xc43c>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     8055f48 <__sprintf_chk@plt+0xc678>
mov    %ebx,%edi
mov    %ebp,%ebx
movl   $0x0,0x1c(%esp)
jmp    8055d0c <__sprintf_chk@plt+0xc43c>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     8055d2c <__sprintf_chk@plt+0xc45c>
mov    %esi,(%esp)
call   8049390 <free@plt>
jmp    8055d2c <__sprintf_chk@plt+0xc45c>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049620 <strlen@plt>
lea    0x4(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    %ebx,0x14(%esp)
movl   $0x8064258,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   80498d0 <__sprintf_chk@plt>
test   %esi,%esi
je     8055f1c <__sprintf_chk@plt+0xc64c>
mov    %esi,(%esp)
call   8049390 <free@plt>
test   %edi,%edi
mov    %ebp,%eax
je     8055d34 <__sprintf_chk@plt+0xc464>
mov    %ebp,0x18(%esp)
jmp    8055db4 <__sprintf_chk@plt+0xc4e4>
test   %esi,%esi
je     8055f57 <__sprintf_chk@plt+0xc687>
mov    %esi,0x1c(%esp)
mov    %ebp,%edi
mov    %esi,%ebx
jmp    8055d0c <__sprintf_chk@plt+0xc43c>
mov    %esi,%ebx
jmp    8055cfe <__sprintf_chk@plt+0xc42e>
nop
mov    %ebp,0x1c(%esp)
mov    %ebp,%edi
mov    0x40(%esp),%ebx
jmp    8055d0c <__sprintf_chk@plt+0xc43c>
mov    %ebp,%ebx
jmp    8055e90 <__sprintf_chk@plt+0xc5c0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
lea    -0x41(%ecx),%ebx
sub    $0x1c,%esp
cmp    $0x19,%ebx
mov    0x30(%esp),%edi
mov    %edx,0xc(%esp)
mov    0x34(%esp),%ebp
ja     8056018 <__sprintf_chk@plt+0xc748>
movzbl 0x6(%eax),%ebx
and    $0xffffffdf,%ebx
cmp    %cl,%bl
sete   %dl
mov    %edx,%esi
mov    %esi,%edx
xor    %ebx,%ebx
test   %dl,%dl
je     8056008 <__sprintf_chk@plt+0xc738>
test   %cl,%cl
mov    $0x1,%bl
je     8056008 <__sprintf_chk@plt+0xc738>
mov    %edi,%edx
movsbl %dl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
jbe    8056028 <__sprintf_chk@plt+0xc758>
mov    %edi,%edx
cmp    0x7(%eax),%dl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     8056008 <__sprintf_chk@plt+0xc738>
mov    %edi,%edx
mov    $0x1,%bl
test   %dl,%dl
je     8056008 <__sprintf_chk@plt+0xc738>
mov    %ebp,%ebx
movsbl %bl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
ja     8056040 <__sprintf_chk@plt+0xc770>
movzbl 0x8(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%bl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     8056008 <__sprintf_chk@plt+0xc738>
mov    %ebp,%edx
mov    $0x1,%bl
test   %dl,%dl
je     8056008 <__sprintf_chk@plt+0xc738>
mov    0xc(%esp),%edx
add    $0x9,%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
add    $0x9,%edx
mov    %edx,0x4(%esp)
call   805f4c0 <fts_children+0x220>
test   %eax,%eax
sete   %bl
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %cl,0x6(%eax)
sete   %dl
mov    %edx,%esi
jmp    8055f8d <__sprintf_chk@plt+0xc6bd>
lea    0x0(%esi),%esi
movzbl 0x7(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%dl
sete   %cl
jmp    8055fb4 <__sprintf_chk@plt+0xc6e4>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%ebx
cmp    0x8(%eax),%bl
sete   %cl
jmp    8055fdb <__sprintf_chk@plt+0xc70b>
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     8056080 <__sprintf_chk@plt+0xc7b0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   805f850 <fts_children+0x5b0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    80560e8 <__sprintf_chk@plt+0xc818>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    80560d0 <__sprintf_chk@plt+0xc800>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x2d,0x3(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x38,0x4(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x0,0x5(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x60,(%esi)
mov    $0x8064286,%eax
mov    $0x8064279,%edx
cmovne %edx,%eax
jmp    8056078 <__sprintf_chk@plt+0xc7a8>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8064280,%eax
cmp    $0x7,%edi
mov    $0x8064115,%edx
cmovne %edx,%eax
jmp    8056078 <__sprintf_chk@plt+0xc7a8>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    80560d0 <__sprintf_chk@plt+0xc800>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x31,0x2(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x38,0x3(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x30,0x4(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x33,0x5(%eax)
jne    80560d0 <__sprintf_chk@plt+0xc800>
movl   $0x0,0x4(%esp)
mov    $0x30,%ecx
mov    $0x806428a,%edx
movl   $0x0,(%esp)
call   8055f60 <__sprintf_chk@plt+0xc690>
test   %eax,%eax
je     80560d0 <__sprintf_chk@plt+0xc800>
cmpb   $0x60,(%esi)
mov    $0x8064282,%eax
mov    $0x806427d,%edx
cmovne %edx,%eax
jmp    8056078 <__sprintf_chk@plt+0xc7a8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    %eax,0x30(%esp)
mov    0xac(%esp),%eax
mov    %edx,0x24(%esp)
mov    0xa0(%esp),%esi
mov    %ecx,0x28(%esp)
mov    %eax,0x3c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x4c(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x48(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x54(%esp)
mov    0xa8(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0xa4(%esp)
mov    %al,0x39(%esp)
ja     8056a78 <__sprintf_chk@plt+0xd1a8>
mov    0xa4(%esp),%eax
jmp    *0x80642e0(,%eax,4)
nop
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x0,0x39(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
movzbl 0x39(%esp),%ecx
test   %ebx,%ebx
movzbl 0x3b(%esp),%ebx
setne  %dl
mov    %dl,0x69(%esp)
and    %ebx,%edx
mov    %dl,0x3a(%esp)
mov    0xa8(%esp),%edx
and    $0x1,%edx
mov    %edx,0x5c(%esp)
mov    0xa8(%esp),%edx
and    $0x4,%edx
mov    %edx,0x60(%esp)
mov    %ecx,%edx
and    %ebx,%edx
cmpl   $0x2,0xa4(%esp)
mov    %dl,0x68(%esp)
sete   %bl
xor    %edi,%edi
mov    %bl,0x53(%esp)
and    %ecx,%ebx
xor    $0x1,%ecx
and    %ecx,%eax
mov    %bl,0x51(%esp)
mov    %cl,0x6a(%esp)
mov    %al,0x50(%esp)
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
je     80563c3 <__sprintf_chk@plt+0xcaf3>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     80563d6 <__sprintf_chk@plt+0xcb06>
cmpb   $0x0,0x3a(%esp)
jne    8056858 <__sprintf_chk@plt+0xcf88>
mov    0x28(%esp),%eax
movb   $0x0,0x2c(%esp)
lea    (%eax,%edi,1),%ecx
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     8056608 <__sprintf_chk@plt+0xcd38>
movzbl %bl,%eax
jmp    *0x8064304(,%eax,4)
lea    0x0(%esi),%esi
cmpl   $0x2,0xa4(%esp)
je     8056a58 <__sprintf_chk@plt+0xd188>
cmpl   $0x3,0xa4(%esp)
jne    8056360 <__sprintf_chk@plt+0xca90>
mov    0x60(%esp),%edx
test   %edx,%edx
je     8056360 <__sprintf_chk@plt+0xca90>
lea    0x2(%edi),%edx
cmp    %edx,%esi
jbe    8056360 <__sprintf_chk@plt+0xca90>
mov    0x28(%esp),%eax
cmpb   $0x3f,0x1(%eax,%edi,1)
jne    8056360 <__sprintf_chk@plt+0xca90>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x44(%esp)
ja     8056360 <__sprintf_chk@plt+0xca90>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     8056360 <__sprintf_chk@plt+0xca90>
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
cmp    0x24(%esp),%ebp
jae    805631d <__sprintf_chk@plt+0xca4d>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805632f <__sprintf_chk@plt+0xca5f>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    8056341 <__sprintf_chk@plt+0xca71>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    8056353 <__sprintf_chk@plt+0xca83>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x44(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%edi
lea    0x0(%esi),%esi
cmpb   $0x0,0x50(%esp)
jne    805637f <__sprintf_chk@plt+0xcaaf>
mov    0x3c(%esp),%edx
test   %edx,%edx
je     805637f <__sprintf_chk@plt+0xcaaf>
mov    %ebx,%eax
shr    $0x5,%al
movzbl %al,%eax
mov    (%edx,%eax,4),%eax
bt     %ebx,%eax
jb     8056386 <__sprintf_chk@plt+0xcab6>
cmpb   $0x0,0x2c(%esp)
je     80563a2 <__sprintf_chk@plt+0xcad2>
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
cmp    0x24(%esp),%ebp
jae    805639f <__sprintf_chk@plt+0xcacf>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    0x24(%esp),%ebp
jae    80563b2 <__sprintf_chk@plt+0xcae2>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
jne    8056270 <__sprintf_chk@plt+0xc9a0>
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax,%edi,1)
setne  %al
test   %al,%al
jne    8056278 <__sprintf_chk@plt+0xc9a8>
cmpb   $0x0,0x53(%esp)
je     80563ec <__sprintf_chk@plt+0xcb1c>
test   %ebp,%ebp
jne    80563ec <__sprintf_chk@plt+0xcb1c>
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
cmpb   $0x0,0x6a(%esp)
je     8056422 <__sprintf_chk@plt+0xcb52>
mov    0x40(%esp),%eax
test   %eax,%eax
je     8056422 <__sprintf_chk@plt+0xcb52>
mov    0x40(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     8056422 <__sprintf_chk@plt+0xcb52>
mov    0x30(%esp),%ebx
sub    %ebp,%edx
mov    0x24(%esp),%ecx
cmp    %ebp,%ecx
jbe    8056417 <__sprintf_chk@plt+0xcb47>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8056410 <__sprintf_chk@plt+0xcb40>
cmp    0x24(%esp),%ebp
mov    %ebp,%eax
jae    80564ad <__sprintf_chk@plt+0xcbdd>
mov    0x30(%esp),%esi
movb   $0x0,(%esi,%ebp,1)
jmp    80564ad <__sprintf_chk@plt+0xcbdd>
cmp    $0x1,%esi
setne  %al
cmp    $0xffffffff,%esi
je     8056a68 <__sprintf_chk@plt+0xd198>
test   %al,%al
jne    8056360 <__sprintf_chk@plt+0xca90>
test   %edi,%edi
jne    8056360 <__sprintf_chk@plt+0xca90>
cmpb   $0x0,0x51(%esp)
je     8056360 <__sprintf_chk@plt+0xca90>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    0x28(%esp),%ecx
mov    0x24(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0xa8(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x7c(%esp),%esi
xor    %gs:0x14,%esi
jne    8056b05 <__sprintf_chk@plt+0xd235>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpb   $0x0,0x51(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
cmpb   $0x0,0x3b(%esp)
je     8056360 <__sprintf_chk@plt+0xca90>
mov    %eax,%ebx
jmp    8056386 <__sprintf_chk@plt+0xcab6>
xchg   %ax,%ax
mov    $0x62,%eax
jmp    80564dc <__sprintf_chk@plt+0xcc0c>
nop
mov    $0x66,%eax
jmp    80564dc <__sprintf_chk@plt+0xcc0c>
nop
mov    $0x76,%eax
jmp    80564dc <__sprintf_chk@plt+0xcc0c>
nop
mov    $0x61,%eax
jmp    80564dc <__sprintf_chk@plt+0xcc0c>
nop
mov    $0x6e,%eax
jmp    80564d5 <__sprintf_chk@plt+0xcc05>
nop
mov    $0x74,%eax
jmp    80564d5 <__sprintf_chk@plt+0xcc05>
nop
cmpb   $0x0,0x3b(%esp)
je     8056a40 <__sprintf_chk@plt+0xd170>
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
cmp    0x24(%esp),%ebp
jae    8056544 <__sprintf_chk@plt+0xcc74>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%edi),%edx
cmp    %edx,%esi
lea    0x1(%ebp),%eax
jbe    8056588 <__sprintf_chk@plt+0xccb8>
mov    0x28(%esp),%ecx
movzbl 0x1(%ecx,%edi,1),%edx
mov    %edx,%ecx
mov    %dl,0x44(%esp)
lea    -0x30(%ecx),%edx
cmp    $0x9,%dl
ja     8056588 <__sprintf_chk@plt+0xccb8>
cmp    %eax,0x24(%esp)
ja     8056a98 <__sprintf_chk@plt+0xd1c8>
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    8056581 <__sprintf_chk@plt+0xccb1>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    8056367 <__sprintf_chk@plt+0xca97>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x68(%esp)
je     80565aa <__sprintf_chk@plt+0xccda>
cmpb   $0x0,0x69(%esp)
jne    80563a2 <__sprintf_chk@plt+0xcad2>
mov    %ebx,%eax
jmp    80564d5 <__sprintf_chk@plt+0xcc05>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x53(%esp)
je     8056360 <__sprintf_chk@plt+0xca90>
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
cmp    0x24(%esp),%ebp
jae    80565dc <__sprintf_chk@plt+0xcd0c>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    80565ee <__sprintf_chk@plt+0xcd1e>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    8056600 <__sprintf_chk@plt+0xcd30>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    8056360 <__sprintf_chk@plt+0xca90>
cmpl   $0x1,0x54(%esp)
jne    80568d0 <__sprintf_chk@plt+0xd000>
call   80498b0 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x44(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%eax
shr    $0xe,%ax
xor    $0x1,%eax
and    0x3b(%esp),%al
test   %al,%al
je     8056360 <__sprintf_chk@plt+0xca90>
mov    0x44(%esp),%edx
add    %edi,%edx
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
mov    0x30(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x24(%esp),%edx
mov    %esi,0xa0(%esp)
mov    0x28(%esp),%esi
add    %ebp,%eax
jmp    8056679 <__sprintf_chk@plt+0xcda9>
cmp    %edx,%ecx
jae    805666f <__sprintf_chk@plt+0xcd9f>
mov    %bl,0x3(%eax)
movzbl (%esi,%edi,1),%ebx
add    $0x4,%ebp
add    $0x4,%eax
cmp    %ebp,%edx
jbe    8056680 <__sprintf_chk@plt+0xcdb0>
movb   $0x5c,(%eax)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edx
jbe    8056692 <__sprintf_chk@plt+0xcdc2>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edx
jbe    80566a7 <__sprintf_chk@plt+0xcdd7>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax)
and    $0x7,%ebx
add    $0x1,%edi
add    $0x30,%ebx
cmp    0x2c(%esp),%edi
lea    0x3(%ebp),%ecx
jb     8056668 <__sprintf_chk@plt+0xcd98>
mov    0xa0(%esp),%esi
mov    %ecx,%ebp
jmp    80563a5 <__sprintf_chk@plt+0xcad5>
nop
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x1,0x39(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x8064115,0x40(%esp)
movl   $0x2,0xa4(%esp)
00
jmp    80561f8 <__sprintf_chk@plt+0xc928>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x39(%esp)
jne    8056b3c <__sprintf_chk@plt+0xd26c>
mov    0x24(%esp),%edi
test   %edi,%edi
je     805671a <__sprintf_chk@plt+0xce4a>
mov    0x30(%esp),%eax
movb   $0x27,(%eax)
mov    $0x1,%eax
mov    $0x1,%ebp
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x8064115,0x40(%esp)
jmp    80561f8 <__sprintf_chk@plt+0xc928>
xchg   %ax,%ax
cmpb   $0x0,0x39(%esp)
jne    8056b0a <__sprintf_chk@plt+0xd23a>
mov    0x24(%esp),%ebp
test   %ebp,%ebp
je     805675a <__sprintf_chk@plt+0xce8a>
mov    0x30(%esp),%eax
movb   $0x22,(%eax)
xor    %eax,%eax
mov    $0x1,%ebp
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x8064280,0x40(%esp)
jmp    80561f8 <__sprintf_chk@plt+0xc928>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x1,0x39(%esp)
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x8064280,0x40(%esp)
movl   $0x3,0xa4(%esp)
00
jmp    80561f8 <__sprintf_chk@plt+0xc928>
xchg   %ax,%ax
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x0,0x39(%esp)
movb   $0x1,0x3b(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
jmp    80561f8 <__sprintf_chk@plt+0xc928>
nop
lea    0x0(%esi,%eiz,1),%esi
je     8056804 <__sprintf_chk@plt+0xcf34>
mov    0xa4(%esp),%edx
mov    $0x8064292,%eax
call   8056050 <__sprintf_chk@plt+0xc780>
mov    0xa4(%esp),%edx
mov    %eax,0x4c(%esp)
mov    $0x8064115,%eax
call   8056050 <__sprintf_chk@plt+0xc780>
mov    %eax,0x48(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x39(%esp)
jne    8056832 <__sprintf_chk@plt+0xcf62>
mov    0x4c(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     8056832 <__sprintf_chk@plt+0xcf62>
mov    0x30(%esp),%ebx
mov    0x24(%esp),%edx
cmp    %edx,%ebp
jae    8056827 <__sprintf_chk@plt+0xcf57>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%ecx,%ebp,1),%eax
test   %al,%al
jne    8056820 <__sprintf_chk@plt+0xcf50>
mov    0x48(%esp),%ebx
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,0x40(%esp)
movb   $0x1,0x3b(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
jmp    80561f8 <__sprintf_chk@plt+0xc928>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
cmp    $0xffffffff,%esi
lea    (%edi,%eax,1),%ebx
jne    8056877 <__sprintf_chk@plt+0xcfa7>
cmp    $0x1,%eax
jbe    8056877 <__sprintf_chk@plt+0xcfa7>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,%esi
mov    0x28(%esp),%eax
cmp    %ebx,%esi
lea    (%eax,%edi,1),%ecx
jb     80568c0 <__sprintf_chk@plt+0xcff0>
mov    0x34(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   80493e0 <memcmp@plt>
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    80568c0 <__sprintf_chk@plt+0xcff0>
cmpb   $0x0,0x39(%esp)
jne    8056468 <__sprintf_chk@plt+0xcb98>
movb   $0x1,0x2c(%esp)
jmp    805628f <__sprintf_chk@plt+0xc9bf>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2c(%esp)
jmp    805628f <__sprintf_chk@plt+0xc9bf>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%esi
movl   $0x0,0x74(%esp)
movl   $0x0,0x78(%esp)
je     8056a7d <__sprintf_chk@plt+0xd1ad>
movb   $0x1,0x52(%esp)
movl   $0x0,0x44(%esp)
mov    %edi,0x58(%esp)
mov    %ebp,0x64(%esp)
mov    %bl,0x6b(%esp)
mov    %ecx,0x6c(%esp)
mov    0x28(%esp),%eax
mov    0x44(%esp),%edi
add    0x58(%esp),%edi
lea    (%eax,%edi,1),%ebx
lea    0x74(%esp),%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
lea    0x70(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80569b6 <__sprintf_chk@plt+0xd0e6>
cmp    $0xffffffff,%eax
je     8056aee <__sprintf_chk@plt+0xd21e>
cmp    $0xfffffffe,%eax
je     8056aa5 <__sprintf_chk@plt+0xd1d5>
cmpb   $0x0,0x51(%esp)
je     805697f <__sprintf_chk@plt+0xd0af>
cmp    $0x1,%eax
je     805697f <__sprintf_chk@plt+0xd0af>
mov    $0x1,%edx
xchg   %ax,%ax
movzbl (%ebx,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     8056978 <__sprintf_chk@plt+0xd0a8>
movzbl %al,%eax
jmp    *0x8064500(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    8056960 <__sprintf_chk@plt+0xd090>
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   80494a0 <iswprint@plt>
mov    $0x0,%ecx
test   %eax,%eax
movzbl 0x52(%esp),%eax
cmove  %ecx,%eax
mov    %al,0x52(%esp)
lea    0x74(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x44(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8056906 <__sprintf_chk@plt+0xd036>
movzbl 0x52(%esp),%eax
mov    0x58(%esp),%edi
mov    0x64(%esp),%ebp
movzbl 0x6b(%esp),%ebx
xor    $0x1,%eax
and    0x3b(%esp),%al
cmpl   $0x1,0x44(%esp)
jbe    8056634 <__sprintf_chk@plt+0xcd64>
mov    0x44(%esp),%edx
add    %edi,%edx
test   %al,%al
jne    8056642 <__sprintf_chk@plt+0xcd72>
cmpb   $0x0,0x2c(%esp)
je     8056b28 <__sprintf_chk@plt+0xd258>
cmp    0x24(%esp),%ebp
jae    8056a01 <__sprintf_chk@plt+0xd131>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
mov    %esi,0xa0(%esp)
jmp    8056a2a <__sprintf_chk@plt+0xd15a>
lea    0x0(%esi),%esi
cmp    %ebp,%ecx
jbe    8056a23 <__sprintf_chk@plt+0xd153>
mov    0x30(%esp),%esi
mov    %bl,(%esi,%ebp,1)
movzbl (%eax,%edi,1),%ebx
add    $0x1,%ebp
add    $0x1,%edi
cmp    %edi,%edx
ja     8056a18 <__sprintf_chk@plt+0xd148>
mov    0xa0(%esp),%esi
jmp    80563a5 <__sprintf_chk@plt+0xcad5>
lea    0x0(%esi),%esi
mov    0x5c(%esp),%ecx
test   %ecx,%ecx
je     8056360 <__sprintf_chk@plt+0xca90>
add    $0x1,%edi
jmp    805625d <__sprintf_chk@plt+0xc98d>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x39(%esp)
je     8056360 <__sprintf_chk@plt+0xca90>
jmp    8056468 <__sprintf_chk@plt+0xcb98>
mov    0x28(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    8056447 <__sprintf_chk@plt+0xcb77>
call   8049820 <abort@plt>
mov    0x28(%esp),%eax
mov    %ecx,0x44(%esp)
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x44(%esp),%ecx
mov    %eax,%esi
jmp    80568e9 <__sprintf_chk@plt+0xd019>
mov    0x30(%esp),%ecx
movb   $0x30,(%ecx,%eax,1)
jmp    805656f <__sprintf_chk@plt+0xcc9f>
mov    %edi,%edx
mov    %ebx,%eax
mov    0x64(%esp),%ebp
cmp    %edx,%esi
mov    0x58(%esp),%edi
movzbl 0x6b(%esp),%ebx
mov    0x6c(%esp),%ecx
jbe    8056ae4 <__sprintf_chk@plt+0xd214>
cmpb   $0x0,(%eax)
je     8056ae4 <__sprintf_chk@plt+0xd214>
mov    0x44(%esp),%eax
jmp    8056ad6 <__sprintf_chk@plt+0xd206>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     8056ae0 <__sprintf_chk@plt+0xd210>
add    $0x1,%eax
lea    (%edi,%eax,1),%edx
cmp    %edx,%esi
ja     8056ad0 <__sprintf_chk@plt+0xd200>
mov    %eax,0x44(%esp)
movzbl 0x3b(%esp),%eax
jmp    80569cf <__sprintf_chk@plt+0xd0ff>
mov    0x58(%esp),%edi
mov    0x64(%esp),%ebp
movzbl 0x6b(%esp),%ebx
movzbl 0x3b(%esp),%eax
jmp    80569cf <__sprintf_chk@plt+0xd0ff>
call   8049420 <__stack_chk_fail@plt>
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x8064280,0x40(%esp)
jmp    80561f8 <__sprintf_chk@plt+0xc928>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
mov    %esi,0xa0(%esp)
jmp    8056a2a <__sprintf_chk@plt+0xd15a>
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x8064115,0x40(%esp)
jmp    80561f8 <__sprintf_chk@plt+0xc928>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   80496e0 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8069640,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   805b5d0 <__sprintf_chk@plt+0x11d00>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8069640,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    8056bc0 <__sprintf_chk@plt+0xd2f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8069640,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8069640,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8069640,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8069640,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     8056c73 <__sprintf_chk@plt+0xd3a3>
test   %ecx,%ecx
je     8056c73 <__sprintf_chk@plt+0xd3a3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049820 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8069640,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   80496e0 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8069640,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   80496e0 <__errno_location@plt>
mov    0x4(%ebx),%esi
lea    0x8(%ebx),%ebp
mov    0x54(%esp),%ecx
xor    %edx,%edx
or     $0x1,%esi
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x54(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %eax,0x28(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    0x28(%esp),%esi
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x24(%esp),%eax
mov    %eax,(%edi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x8069640,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   80496e0 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     8056e68 <__sprintf_chk@plt+0xd598>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x806921c,%edi
mov    0x8069210,%esi
cmp    $0x1,%edi
jbe    8056eb3 <__sprintf_chk@plt+0xd5e3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049390 <free@plt>
cmp    %edi,%ebx
jne    8056ea0 <__sprintf_chk@plt+0xd5d0>
mov    0x4(%esi),%eax
cmp    $0x8069540,%eax
je     8056ed9 <__sprintf_chk@plt+0xd609>
mov    %eax,(%esp)
call   8049390 <free@plt>
movl   $0x100,0x8069214
00
movl   $0x8069540,0x8069218
08
cmp    $0x8069214,%esi
je     8056ef3 <__sprintf_chk@plt+0xd623>
mov    %esi,(%esp)
call   8049390 <free@plt>
movl   $0x8069214,0x8069210
08
movl   $0x1,0x806921c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8069210,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     805708c <__sprintf_chk@plt+0xd7bc>
cmp    0x806921c,%esi
jb     8056f9e <__sprintf_chk@plt+0xd6ce>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8057091 <__sprintf_chk@plt+0xd7c1>
cmp    $0x8069214,%ebx
lea    0x0(,%edi,8),%eax
je     8057060 <__sprintf_chk@plt+0xd790>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    %edi,0x806921c
mov    0x806966c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8069644,%esi
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8069648,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     805704b <__sprintf_chk@plt+0xd77b>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%ebx
mov    %ebp,(%edi)
je     8057003 <__sprintf_chk@plt+0xd733>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x806966c,%eax
movl   $0x8069648,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8056f75 <__sprintf_chk@plt+0xd6a5>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8069210,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     805721c <__sprintf_chk@plt+0xd94c>
cmp    0x806921c,%esi
jb     805712e <__sprintf_chk@plt+0xd85e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8057221 <__sprintf_chk@plt+0xd951>
cmp    $0x8069214,%ebx
lea    0x0(,%edi,8),%eax
je     80571f0 <__sprintf_chk@plt+0xd920>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    %edi,0x806921c
mov    0x806966c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8069644,%esi
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8069648,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80571db <__sprintf_chk@plt+0xd90b>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%ebx
mov    %ebp,(%edi)
je     8057193 <__sprintf_chk@plt+0xd8c3>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x806966c,%eax
movl   $0x8069648,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8057105 <__sprintf_chk@plt+0xd835>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    80572bb <__sprintf_chk@plt+0xd9eb>
cmp    $0x8069214,%ebx
jne    8057390 <__sprintf_chk@plt+0xdac0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    (%ebx),%eax
mov    0x4(%ebx),%esi
mov    0x8069644,%edi
mov    0x40(%esp),%ecx
mov    %eax,%edx
mov    0x806966c,%eax
movl   $0x8069648,0xc(%esp)
or     $0x1,%edi
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
movl   $0xffffffff,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,0x1c(%esp)
ja     8057379 <__sprintf_chk@plt+0xdaa9>
lea    0x1(%eax),%edx
cmp    $0x8069540,%esi
mov    %edx,(%ebx)
je     805732b <__sprintf_chk@plt+0xda5b>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049390 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x40(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x806966c,%eax
movl   $0x8069648,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    805728a <__sprintf_chk@plt+0xd9ba>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    805743d <__sprintf_chk@plt+0xdb6d>
cmp    $0x8069214,%ebx
jne    8057500 <__sprintf_chk@plt+0xdc30>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x806966c,%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x8069644,%edi
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    0x40(%esp),%ecx
mov    %ebp,%edx
movl   $0x8069648,0xc(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80574e7 <__sprintf_chk@plt+0xdc17>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     805749f <__sprintf_chk@plt+0xdbcf>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x40(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x806966c,%eax
movl   $0x8069648,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069668,%eax
mov    %eax,0x10(%esp)
mov    0x8069640,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    805740c <__sprintf_chk@plt+0xdb3c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%edx
lea    0x50(%esp),%edi
mov    0xa0(%esp),%ebx
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     8057724 <__sprintf_chk@plt+0xde54>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   80496e0 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8069210,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8057724 <__sprintf_chk@plt+0xde54>
cmp    0x806921c,%ebx
jb     8057631 <__sprintf_chk@plt+0xdd61>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8057729 <__sprintf_chk@plt+0xde59>
cmp    $0x8069214,%esi
lea    0x0(,%edi,8),%eax
je     80576f8 <__sprintf_chk@plt+0xde28>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    %edi,0x806921c
mov    0x4c(%esp),%eax
lea    (%esi,%ebx,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x24(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80576dc <__sprintf_chk@plt+0xde0c>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%ebx
mov    %ebp,(%edi)
je     8057694 <__sprintf_chk@plt+0xddc4>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8057608 <__sprintf_chk@plt+0xdd38>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
xchg   %ax,%ax
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%edx
lea    0x50(%esp),%edi
mov    0xa0(%esp),%ebx
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     805793c <__sprintf_chk@plt+0xe06c>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   80496e0 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8069210,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     805793c <__sprintf_chk@plt+0xe06c>
cmp    0x806921c,%ebx
jb     8057841 <__sprintf_chk@plt+0xdf71>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8057941 <__sprintf_chk@plt+0xe071>
cmp    $0x8069214,%esi
lea    0x0(,%edi,8),%eax
je     8057910 <__sprintf_chk@plt+0xe040>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    %edi,0x806921c
mov    0x4c(%esp),%eax
lea    (%esi,%ebx,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x24(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%esi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80578f2 <__sprintf_chk@plt+0xe022>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%ebx
mov    %ebp,(%edi)
je     80578a7 <__sprintf_chk@plt+0xdfd7>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8057818 <__sprintf_chk@plt+0xdf48>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%edx
lea    0x50(%esp),%edi
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     8057b3c <__sprintf_chk@plt+0xe26c>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8057a5d <__sprintf_chk@plt+0xe18d>
cmp    $0x8069214,%ebx
jne    8057b20 <__sprintf_chk@plt+0xe250>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     8057b05 <__sprintf_chk@plt+0xe235>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     8057abd <__sprintf_chk@plt+0xe1ed>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8057a2c <__sprintf_chk@plt+0xe15c>
call   8049820 <abort@plt>
jmp    8057b50 <__sprintf_chk@plt+0xe280>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%edx
lea    0x50(%esp),%edi
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     8057d44 <__sprintf_chk@plt+0xe474>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8057c5d <__sprintf_chk@plt+0xe38d>
cmp    $0x8069214,%ebx
jne    8057d28 <__sprintf_chk@plt+0xe458>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     8057d0b <__sprintf_chk@plt+0xe43b>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     8057cc0 <__sprintf_chk@plt+0xe3f0>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8057c2c <__sprintf_chk@plt+0xe35c>
call   8049820 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8069640,%eax
mov    0x78(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x8069644,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
mov    0x8069648,%eax
mov    %eax,0x28(%esp)
mov    0x806964c,%eax
mov    %eax,0x2c(%esp)
mov    0x8069650,%eax
mov    %eax,0x30(%esp)
mov    0x8069654,%eax
mov    %eax,0x34(%esp)
mov    0x8069658,%eax
mov    %eax,0x38(%esp)
mov    0x806965c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069660,%eax
mov    %eax,0x40(%esp)
mov    0x8069664,%eax
mov    %eax,0x44(%esp)
mov    0x8069668,%eax
mov    0x28(%esp,%edx,4),%ebx
mov    %eax,0x48(%esp)
mov    0x806966c,%eax
mov    %eax,0x4c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
xor    %ebx,%eax
mov    %eax,0x28(%esp,%edx,4)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8057e6e <__sprintf_chk@plt+0xe59e>
cmp    $0x8069214,%ebx
jne    8057f28 <__sprintf_chk@plt+0xe658>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     8057f10 <__sprintf_chk@plt+0xe640>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     8057ecb <__sprintf_chk@plt+0xe5fb>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    %edi,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8057e3d <__sprintf_chk@plt+0xe56d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8069640,%eax
mov    0x74(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x8069644,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
mov    0x8069648,%eax
mov    %eax,0x28(%esp)
mov    0x806964c,%eax
mov    %eax,0x2c(%esp)
mov    0x8069650,%eax
mov    %eax,0x30(%esp)
mov    0x8069654,%eax
mov    %eax,0x34(%esp)
mov    0x8069658,%eax
mov    %eax,0x38(%esp)
mov    0x806965c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069660,%eax
mov    %eax,0x40(%esp)
mov    0x8069664,%eax
mov    %eax,0x44(%esp)
mov    0x8069668,%eax
mov    0x28(%esp,%edx,4),%ebx
mov    %eax,0x48(%esp)
mov    0x806966c,%eax
mov    %eax,0x4c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
xor    %ebx,%eax
mov    %eax,0x28(%esp,%edx,4)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    805806e <__sprintf_chk@plt+0xe79e>
cmp    $0x8069214,%ebx
jne    8058128 <__sprintf_chk@plt+0xe858>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     8058110 <__sprintf_chk@plt+0xe840>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     80580cb <__sprintf_chk@plt+0xe7fb>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    %edi,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    805803d <__sprintf_chk@plt+0xe76d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8069640,%eax
mov    0x806964c,%edx
mov    %eax,0x20(%esp)
mov    0x8069644,%eax
mov    %eax,0x24(%esp)
mov    0x8069648,%eax
mov    %eax,0x28(%esp)
mov    0x8069650,%eax
mov    %eax,0x30(%esp)
mov    0x8069654,%eax
mov    %eax,0x34(%esp)
mov    0x8069658,%eax
mov    %eax,0x38(%esp)
mov    0x806965c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069660,%eax
mov    %eax,0x40(%esp)
mov    0x8069664,%eax
mov    %eax,0x44(%esp)
mov    0x8069668,%eax
mov    %eax,0x48(%esp)
mov    0x806966c,%eax
mov    %eax,0x4c(%esp)
mov    %edx,%eax
not    %eax
and    $0x4000000,%eax
xor    %edx,%eax
mov    %eax,0x2c(%esp)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8058255 <__sprintf_chk@plt+0xe985>
cmp    $0x8069214,%ebx
jne    8058310 <__sprintf_chk@plt+0xea40>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80582f7 <__sprintf_chk@plt+0xea27>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     80582b2 <__sprintf_chk@plt+0xe9e2>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8058224 <__sprintf_chk@plt+0xe954>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8069640,%eax
mov    0x806964c,%edx
mov    %eax,0x20(%esp)
mov    0x8069644,%eax
mov    %eax,0x24(%esp)
mov    0x8069648,%eax
mov    %eax,0x28(%esp)
mov    0x8069650,%eax
mov    %eax,0x30(%esp)
mov    0x8069654,%eax
mov    %eax,0x34(%esp)
mov    0x8069658,%eax
mov    %eax,0x38(%esp)
mov    0x806965c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069660,%eax
mov    %eax,0x40(%esp)
mov    0x8069664,%eax
mov    %eax,0x44(%esp)
mov    0x8069668,%eax
mov    %eax,0x48(%esp)
mov    0x806966c,%eax
mov    %eax,0x4c(%esp)
mov    %edx,%eax
not    %eax
and    $0x4000000,%eax
xor    %edx,%eax
mov    %eax,0x2c(%esp)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8058435 <__sprintf_chk@plt+0xeb65>
cmp    $0x8069214,%ebx
jne    80584f0 <__sprintf_chk@plt+0xec20>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80584d7 <__sprintf_chk@plt+0xec07>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     8058492 <__sprintf_chk@plt+0xebc2>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8058404 <__sprintf_chk@plt+0xeb34>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8069644,%eax
mov    0x84(%esp),%edi
mov    0x80(%esp),%ebx
mov    0x88(%esp),%ebp
mov    %eax,0x34(%esp)
mov    0x8069648,%eax
test   %edi,%edi
movl   $0x8,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x806964c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069650,%eax
mov    %eax,0x40(%esp)
mov    0x8069654,%eax
mov    %eax,0x44(%esp)
mov    0x8069658,%eax
mov    %eax,0x48(%esp)
mov    0x806965c,%eax
mov    %eax,0x4c(%esp)
mov    0x8069660,%eax
mov    %eax,0x50(%esp)
mov    0x8069664,%eax
mov    %eax,0x54(%esp)
mov    0x8069668,%eax
mov    %eax,0x58(%esp)
mov    0x806966c,%eax
mov    %eax,0x5c(%esp)
je     805873c <__sprintf_chk@plt+0xee6c>
test   %ebp,%ebp
je     805873c <__sprintf_chk@plt+0xee6c>
mov    %edi,0x58(%esp)
mov    %ebp,0x5c(%esp)
call   80496e0 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8069210,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     805873c <__sprintf_chk@plt+0xee6c>
cmp    0x806921c,%ebx
jb     8058730 <__sprintf_chk@plt+0xee60>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8058741 <__sprintf_chk@plt+0xee71>
cmp    $0x8069214,%esi
lea    0x0(,%edi,8),%eax
je     8058700 <__sprintf_chk@plt+0xee30>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    0x5c(%esp),%ebp
mov    0x58(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,0x806921c
mov    0x34(%esp),%eax
lea    (%esi,%ebx,8),%esi
mov    (%esi),%edi
mov    0x4(%esi),%ebx
mov    %ecx,0x10(%esp)
mov    0x8c(%esp),%ecx
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x14(%esp)
lea    0x38(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %edi,%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,%eax
movl   $0xffffffff,(%esp)
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%edi
ja     80586eb <__sprintf_chk@plt+0xee1b>
lea    0x1(%eax),%edi
cmp    $0x8069540,%ebx
mov    %edi,(%esi)
je     80586a3 <__sprintf_chk@plt+0xedd3>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %edi,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x8c(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x5c(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805860d <__sprintf_chk@plt+0xed3d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    $0x8,%edx
jmp    8058642 <__sprintf_chk@plt+0xed72>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8069644,%eax
mov    0x84(%esp),%edi
mov    0x80(%esp),%ebx
mov    0x88(%esp),%ebp
mov    %eax,0x34(%esp)
mov    0x8069648,%eax
test   %edi,%edi
movl   $0x8,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x806964c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069650,%eax
mov    %eax,0x40(%esp)
mov    0x8069654,%eax
mov    %eax,0x44(%esp)
mov    0x8069658,%eax
mov    %eax,0x48(%esp)
mov    0x806965c,%eax
mov    %eax,0x4c(%esp)
mov    0x8069660,%eax
mov    %eax,0x50(%esp)
mov    0x8069664,%eax
mov    %eax,0x54(%esp)
mov    0x8069668,%eax
mov    %eax,0x58(%esp)
mov    0x806966c,%eax
mov    %eax,0x5c(%esp)
je     8058984 <__sprintf_chk@plt+0xf0b4>
test   %ebp,%ebp
je     8058984 <__sprintf_chk@plt+0xf0b4>
mov    %edi,0x58(%esp)
mov    %ebp,0x5c(%esp)
call   80496e0 <__errno_location@plt>
test   %ebx,%ebx
mov    0x8069210,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     8058984 <__sprintf_chk@plt+0xf0b4>
cmp    0x806921c,%ebx
jb     8058978 <__sprintf_chk@plt+0xf0a8>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8058989 <__sprintf_chk@plt+0xf0b9>
cmp    $0x8069214,%esi
lea    0x0(,%edi,8),%eax
je     8058948 <__sprintf_chk@plt+0xf078>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    0x5c(%esp),%ebp
mov    0x58(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,0x806921c
mov    0x34(%esp),%eax
lea    (%esi,%ebx,8),%esi
mov    (%esi),%edi
mov    0x4(%esi),%ebx
mov    %ecx,0x10(%esp)
mov    0x8c(%esp),%ecx
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x14(%esp)
lea    0x38(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %edi,%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%edi
ja     8058931 <__sprintf_chk@plt+0xf061>
lea    0x1(%eax),%edi
cmp    $0x8069540,%ebx
mov    %edi,(%esi)
je     80588e6 <__sprintf_chk@plt+0xf016>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %edi,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x8c(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x5c(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%esi
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805884d <__sprintf_chk@plt+0xef7d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    $0x8,%edx
jmp    8058882 <__sprintf_chk@plt+0xefb2>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8069644,%eax
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
movl   $0x8,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x8069648,%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
mov    0x806964c,%eax
mov    %eax,0x2c(%esp)
mov    0x8069650,%eax
mov    %eax,0x30(%esp)
mov    0x8069654,%eax
mov    %eax,0x34(%esp)
mov    0x8069658,%eax
mov    %eax,0x38(%esp)
mov    0x806965c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069660,%eax
mov    %eax,0x40(%esp)
mov    0x8069664,%eax
mov    %eax,0x44(%esp)
mov    0x8069668,%eax
mov    %eax,0x48(%esp)
mov    0x806966c,%eax
mov    %eax,0x4c(%esp)
je     8058b96 <__sprintf_chk@plt+0xf2c6>
test   %edi,%edi
je     8058b96 <__sprintf_chk@plt+0xf2c6>
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8058b88 <__sprintf_chk@plt+0xf2b8>
cmp    $0x8069214,%ebx
jne    8058b68 <__sprintf_chk@plt+0xf298>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   80496a0 <memset@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x1,0x806921c
00
mov    0x24(%esp),%ebp
mov    (%ebx),%edi
mov    0x4(%ebx),%esi
mov    %ecx,0x14(%esp)
lea    0x28(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    0x78(%esp),%ecx
or     $0x1,%ebp
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %ebp,0x8(%esp)
movl   $0xffffffff,(%esp)
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%edi
ja     8058b4e <__sprintf_chk@plt+0xf27e>
lea    0x1(%eax),%edi
cmp    $0x8069540,%esi
mov    %edi,(%ebx)
je     8058b09 <__sprintf_chk@plt+0xf239>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %edi,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x78(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8058a7b <__sprintf_chk@plt+0xf1ab>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %edi,%ecx
mov    $0x8,%eax
jmp    8058ab8 <__sprintf_chk@plt+0xf1e8>
call   8049820 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8069644,%eax
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
movl   $0x8,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x8069648,%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
mov    0x806964c,%eax
mov    %eax,0x2c(%esp)
mov    0x8069650,%eax
mov    %eax,0x30(%esp)
mov    0x8069654,%eax
mov    %eax,0x34(%esp)
mov    0x8069658,%eax
mov    %eax,0x38(%esp)
mov    0x806965c,%eax
mov    %eax,0x3c(%esp)
mov    0x8069660,%eax
mov    %eax,0x40(%esp)
mov    0x8069664,%eax
mov    %eax,0x44(%esp)
mov    0x8069668,%eax
mov    %eax,0x48(%esp)
mov    0x806966c,%eax
mov    %eax,0x4c(%esp)
je     8058da6 <__sprintf_chk@plt+0xf4d6>
test   %edi,%edi
je     8058da6 <__sprintf_chk@plt+0xf4d6>
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8058d98 <__sprintf_chk@plt+0xf4c8>
cmp    $0x8069214,%ebx
jne    8058d78 <__sprintf_chk@plt+0xf4a8>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   80496a0 <memset@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x1,0x806921c
00
mov    0x24(%esp),%ebp
mov    (%ebx),%edi
mov    0x4(%ebx),%esi
mov    %ecx,0x14(%esp)
lea    0x28(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
or     $0x1,%ebp
mov    %ecx,0xc(%esp)
mov    0x78(%esp),%ecx
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%edi
ja     8058d5e <__sprintf_chk@plt+0xf48e>
lea    0x1(%eax),%edi
cmp    $0x8069540,%esi
mov    %edi,(%ebx)
je     8058d19 <__sprintf_chk@plt+0xf449>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %edi,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x78(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8058c8b <__sprintf_chk@plt+0xf3bb>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %edi,%ecx
mov    $0x8,%eax
jmp    8058cc8 <__sprintf_chk@plt+0xf3f8>
call   8049820 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8069210,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8058f2c <__sprintf_chk@plt+0xf65c>
cmp    0x806921c,%esi
jb     8058e3e <__sprintf_chk@plt+0xf56e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8058f31 <__sprintf_chk@plt+0xf661>
cmp    $0x8069214,%ebx
lea    0x0(,%edi,8),%eax
je     8058f00 <__sprintf_chk@plt+0xf630>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    %edi,0x806921c
mov    0x806920c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x80691e4,%esi
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x80691e8,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     8058eeb <__sprintf_chk@plt+0xf61b>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%ebx
mov    %ebp,(%edi)
je     8058ea3 <__sprintf_chk@plt+0xf5d3>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x806920c,%eax
movl   $0x80691e8,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8058e15 <__sprintf_chk@plt+0xf545>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    8058fcd <__sprintf_chk@plt+0xf6fd>
cmp    $0x8069214,%ebx
jne    8059090 <__sprintf_chk@plt+0xf7c0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    0x806920c,%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x80691e4,%edi
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    0x40(%esp),%ecx
mov    %ebp,%edx
movl   $0x80691e8,0xc(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     8059077 <__sprintf_chk@plt+0xf7a7>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%esi
mov    %ebp,(%ebx)
je     805902f <__sprintf_chk@plt+0xf75f>
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x40(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x806920c,%eax
movl   $0x80691e8,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    8058f9c <__sprintf_chk@plt+0xf6cc>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x8069210,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     805922c <__sprintf_chk@plt+0xf95c>
cmp    0x806921c,%esi
jb     805913e <__sprintf_chk@plt+0xf86e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8059231 <__sprintf_chk@plt+0xf961>
cmp    $0x8069214,%ebx
lea    0x0(,%edi,8),%eax
je     8059200 <__sprintf_chk@plt+0xf930>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x806921c,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
mov    %edi,0x806921c
mov    0x806920c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x80691e4,%esi
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x80691e8,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,%ebp
ja     80591eb <__sprintf_chk@plt+0xf91b>
lea    0x1(%eax),%ebp
cmp    $0x8069540,%ebx
mov    %ebp,(%edi)
je     80591a3 <__sprintf_chk@plt+0xf8d3>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x806920c,%eax
movl   $0x80691e8,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8059115 <__sprintf_chk@plt+0xf845>
call   8049820 <abort@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   80496e0 <__errno_location@plt>
mov    0x8069210,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x806921c,%eax
test   %eax,%eax
jne    80592cb <__sprintf_chk@plt+0xf9fb>
cmp    $0x8069214,%ebx
jne    80593a0 <__sprintf_chk@plt+0xfad0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    0x8069218,%edx
mov    %eax,%ebx
mov    %eax,0x8069210
mov    0x8069214,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x806921c,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   80496a0 <memset@plt>
movl   $0x1,0x806921c
00
mov    (%ebx),%eax
mov    0x4(%ebx),%esi
mov    0x80691e4,%edi
mov    0x40(%esp),%ecx
mov    %eax,%edx
mov    0x806920c,%eax
movl   $0x80691e8,0xc(%esp)
or     $0x1,%edi
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
movl   $0xffffffff,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
cmp    %eax,0x1c(%esp)
ja     8059389 <__sprintf_chk@plt+0xfab9>
lea    0x1(%eax),%edx
cmp    $0x8069540,%esi
mov    %edx,(%ebx)
je     805933b <__sprintf_chk@plt+0xfa6b>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049390 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   805b470 <__sprintf_chk@plt+0x11ba0>
mov    0x40(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x806920c,%eax
movl   $0x80691e8,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8069208,%eax
mov    %eax,0x10(%esp)
mov    0x80691e0,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   8056150 <__sprintf_chk@plt+0xc880>
mov    0x18(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   805b4a0 <__sprintf_chk@plt+0x11bd0>
mov    %eax,%ebx
mov    %eax,0x8069210
jmp    805929a <__sprintf_chk@plt+0xf9ca>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049340 <read@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8059410 <__sprintf_chk@plt+0xfb40>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     80593d8 <__sprintf_chk@plt+0xfb08>
cmp    $0x16,%edx
jne    8059410 <__sprintf_chk@plt+0xfb40>
cmp    $0x7fffe000,%ebx
jbe    8059410 <__sprintf_chk@plt+0xfb40>
mov    $0x7fffe000,%ebx
jmp    80593d8 <__sprintf_chk@plt+0xfb08>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   80496f0 <memchr@plt>
test   %eax,%eax
je     8059450 <__sprintf_chk@plt+0xfb80>
sub    %ebx,%eax
add    $0x14,%esp
add    $0x1,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   80496d0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     80599d5 <__sprintf_chk@plt+0x10105>
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8059748 <__sprintf_chk@plt+0xfe78>
mov    0x84(%esp),%eax
test   %eax,%eax
jne    80597f8 <__sprintf_chk@plt+0xff28>
mov    0x18(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    %esi,0x34(%esp)
call   8049620 <strlen@plt>
mov    %esi,%ecx
movb   $0x0,0x24(%esp)
mov    %ecx,%edi
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%esi,%eax,1),%esi
cmp    %esi,%ecx
mov    %esi,0x20(%esp)
jb     805957b <__sprintf_chk@plt+0xfcab>
jmp    8059657 <__sprintf_chk@plt+0xfd87>
nop
movzbl (%edi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
bt     %eax,%edx
jae    8059678 <__sprintf_chk@plt+0xfda8>
movl   $0x1,0x38(%esp)
movsbl (%edi),%eax
mov    %edi,%ebp
movb   $0x1,0x3c(%esp)
mov    $0x1,%edi
mov    %eax,0x40(%esp)
test   %ebx,%ebx
movb   $0x1,0x30(%esp)
je     8059618 <__sprintf_chk@plt+0xfd48>
cmp    $0x1,%ebx
je     8059698 <__sprintf_chk@plt+0xfdc8>
cmp    $0x2,%ebx
jne    80596d0 <__sprintf_chk@plt+0xfe00>
cmpb   $0x0,0x3c(%esp)
je     80596d0 <__sprintf_chk@plt+0xfe00>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049580 <iswspace@plt>
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebx
xchg   %ax,%ax
add    %ebp,%edi
cmp    %esi,%edi
mov    %edi,0x34(%esp)
movb   $0x0,0x30(%esp)
jae    805964e <__sprintf_chk@plt+0xfd7e>
cmpb   $0x0,0x24(%esp)
lea    0x28(%esp),%ebp
je     80594f0 <__sprintf_chk@plt+0xfc20>
sub    %edi,%esi
lea    0x40(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     80596e0 <__sprintf_chk@plt+0xfe10>
cmp    $0xfffffffe,%eax
je     8059728 <__sprintf_chk@plt+0xfe58>
test   %eax,%eax
jne    8059718 <__sprintf_chk@plt+0xfe48>
mov    0x34(%esp),%edx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%edx)
jne    8059a03 <__sprintf_chk@plt+0x10133>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    80599df <__sprintf_chk@plt+0x1010f>
mov    $0x1,%edi
mov    %ebp,(%esp)
mov    %edx,0x14(%esp)
movb   $0x1,0x3c(%esp)
call   80493b0 <mbsinit@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
jne    8059700 <__sprintf_chk@plt+0xfe30>
test   %ebx,%ebx
mov    0x20(%esp),%esi
mov    %edx,%ebp
movb   $0x1,0x30(%esp)
jne    8059533 <__sprintf_chk@plt+0xfc63>
cmpb   $0x0,0x3c(%esp)
mov    $0x1,%ebx
je     8059568 <__sprintf_chk@plt+0xfc98>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049580 <iswspace@plt>
movb   $0x0,0x30(%esp)
test   %eax,%eax
sete   %bl
add    %ebp,%edi
cmp    %esi,%edi
mov    %edi,0x34(%esp)
jb     805957b <__sprintf_chk@plt+0xfcab>
cmp    $0x2,%ebx
je     80599a5 <__sprintf_chk@plt+0x100d5>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x18(%esp),%eax
jne    80599da <__sprintf_chk@plt+0x1010a>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%ebp
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80599b1 <__sprintf_chk@plt+0x100e1>
movb   $0x1,0x24(%esp)
jmp    805958a <__sprintf_chk@plt+0xfcba>
xchg   %ax,%ax
cmpb   $0x0,0x3c(%esp)
je     8059568 <__sprintf_chk@plt+0xfc98>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049580 <iswspace@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    $0x2,%eax
cmovne %ebp,%ecx
cmovne %eax,%ebx
mov    %ecx,0x1c(%esp)
jmp    8059568 <__sprintf_chk@plt+0xfc98>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8059568 <__sprintf_chk@plt+0xfc98>
lea    0x0(%esi),%esi
movl   $0x1,0x38(%esp)
mov    0x20(%esp),%esi
mov    $0x1,%edi
movb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
jmp    8059526 <__sprintf_chk@plt+0xfc56>
nop
movb   $0x0,0x24(%esp)
mov    0x20(%esp),%esi
mov    %edx,%ebp
mov    0x38(%esp),%edi
jmp    8059526 <__sprintf_chk@plt+0xfc56>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,%edi
jmp    80595e8 <__sprintf_chk@plt+0xfd18>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%esi
mov    0x34(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %esi,%edi
sub    %edx,%edi
mov    %edx,%ebp
mov    %edi,0x38(%esp)
jmp    8059526 <__sprintf_chk@plt+0xfc56>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
je     80597b1 <__sprintf_chk@plt+0xfee1>
mov    0x18(%esp),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
mov    %edx,0x14(%esp)
je     8059784 <__sprintf_chk@plt+0xfeb4>
call   80498b0 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    (%eax),%eax
jmp    805977a <__sprintf_chk@plt+0xfeaa>
nop
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     8059784 <__sprintf_chk@plt+0xfeb4>
movzbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    8059770 <__sprintf_chk@plt+0xfea0>
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049380 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8059657 <__sprintf_chk@plt+0xfd87>
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   8049620 <strlen@plt>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
ja     8059657 <__sprintf_chk@plt+0xfd87>
call   80498b0 <__ctype_b_loc@plt>
xchg   %ax,%ax
jmp    80597e6 <__sprintf_chk@plt+0xff16>
lea    0x0(%esi),%esi
movb   $0x0,(%ebx)
sub    $0x1,%ebx
cmp    %ebx,%esi
ja     8059657 <__sprintf_chk@plt+0xfd87>
movzbl (%ebx),%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
jne    80597d8 <__sprintf_chk@plt+0xff08>
jmp    8059657 <__sprintf_chk@plt+0xfd87>
nop
mov    0x18(%esp),%ebx
mov    %ebx,(%esp)
mov    %ebx,0x34(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%ebx,%eax,1),%edx
cmp    %edx,%ebx
mov    %edx,0x20(%esp)
jae    805994e <__sprintf_chk@plt+0x1007e>
lea    0x40(%esp),%edi
mov    %edx,%ebp
lea    0x28(%esp),%esi
jmp    80598a1 <__sprintf_chk@plt+0xffd1>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
bt     %eax,%edx
jae    8059918 <__sprintf_chk@plt+0x10048>
movl   $0x1,0x38(%esp)
movsbl (%ebx),%eax
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x1,0x30(%esp)
mov    %eax,(%esp)
call   8049580 <iswspace@plt>
test   %eax,%eax
je     805994e <__sprintf_chk@plt+0x1007e>
mov    0x20(%esp),%ebp
add    0x38(%esp),%ebx
movb   $0x0,0x30(%esp)
cmp    %ebx,%ebp
mov    %ebx,0x34(%esp)
jbe    805994e <__sprintf_chk@plt+0x1007e>
cmpb   $0x0,0x24(%esp)
je     8059840 <__sprintf_chk@plt+0xff70>
sub    %ebx,%ebp
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8059938 <__sprintf_chk@plt+0x10068>
cmp    $0xfffffffe,%eax
je     8059990 <__sprintf_chk@plt+0x100c0>
test   %eax,%eax
jne    8059980 <__sprintf_chk@plt+0x100b0>
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ebx)
jne    8059a03 <__sprintf_chk@plt+0x10133>
mov    0x40(%esp),%ebp
test   %ebp,%ebp
jne    80599df <__sprintf_chk@plt+0x1010f>
mov    %esi,(%esp)
movb   $0x1,0x3c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     805986f <__sprintf_chk@plt+0xff9f>
movb   $0x0,0x24(%esp)
jmp    805986f <__sprintf_chk@plt+0xff9f>
mov    %esi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80599b1 <__sprintf_chk@plt+0x100e1>
movb   $0x1,0x24(%esp)
jmp    80598a8 <__sprintf_chk@plt+0xffd8>
lea    0x0(%esi),%esi
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049380 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     8059657 <__sprintf_chk@plt+0xfd87>
jmp    80594ab <__sprintf_chk@plt+0xfbdb>
mov    0x34(%esp),%ebx
jmp    80598f9 <__sprintf_chk@plt+0x10029>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
mov    0x20(%esp),%eax
movb   $0x0,0x3c(%esp)
sub    %ebx,%eax
mov    %eax,0x38(%esp)
jmp    8059949 <__sprintf_chk@plt+0x10079>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
jmp    8059657 <__sprintf_chk@plt+0xfd87>
movl   $0x80645ed,0xc(%esp)
movl   $0x8e,0x8(%esp)
movl   $0x80645e4,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
call   805b650 <__sprintf_chk@plt+0x11d80>
call   8049420 <__stack_chk_fail@plt>
movl   $0x80645ed,0xc(%esp)
movl   $0xaa,0x8(%esp)
movl   $0x80645e4,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x80645ed,0xc(%esp)
movl   $0xa9,0x8(%esp)
movl   $0x80645e4,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     8059a5f <__sprintf_chk@plt+0x1018f>
mov    %ebx,(%esp)
call   8061ca0 <fts_children+0x2a00>
mov    %eax,%edi
call   80496e0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049870 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     8059f28 <__sprintf_chk@plt+0x10658>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x80645ff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064612,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x8064920,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064670,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8059f50 <__sprintf_chk@plt+0x10680>
jmp    *0x8064874(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80647d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064804,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049410 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064616,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064626,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806463d,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806473c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    8059bcf <__sprintf_chk@plt+0x102ff>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806475c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    8059bcf <__sprintf_chk@plt+0x102ff>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064780,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    8059bcf <__sprintf_chk@plt+0x102ff>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80647a8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    8059bcf <__sprintf_chk@plt+0x102ff>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806460b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    8059ac1 <__sprintf_chk@plt+0x101f1>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064838,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049410 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    8059c5a <__sprintf_chk@plt+0x1038a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x80(%esp),%ebx
mov    0x70(%esp),%esi
mov    0x74(%esp),%eax
mov    0x78(%esp),%edx
mov    (%ebx),%ebp
mov    0x7c(%esp),%ecx
test   %ebp,%ebp
je     805a012 <__sprintf_chk@plt+0x10742>
xchg   %ax,%ax
add    $0x1,%edi
mov    (%ebx,%edi,4),%ebp
test   %ebp,%ebp
jne    805a008 <__sprintf_chk@plt+0x10738>
test   %eax,%eax
je     805a488 <__sprintf_chk@plt+0x10bb8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x80645ff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064612,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x8064920,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064670,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     805a4ad <__sprintf_chk@plt+0x10bdd>
jmp    *0x806489c(,%edi,4)
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%eax
mov    0x1c(%ebx),%ecx
mov    0x14(%ebx),%ebp
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x4(%ebx),%eax
mov    0x10(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80647d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
call   8049410 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x10(%esp)
call   80497e0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0xc(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0x10(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x40(%esp)
mov    0x4(%ebx),%edi
mov    %ecx,0x4c(%esp)
mov    (%ebx),%ebx
mov    %edx,0x3c(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8064804,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x18(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049820 <abort@plt>
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064616,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064626,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806463d,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a148 <__sprintf_chk@plt+0x10878>
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806473c,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a148 <__sprintf_chk@plt+0x10878>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806475c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a148 <__sprintf_chk@plt+0x10878>
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8064780,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a148 <__sprintf_chk@plt+0x10878>
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80647a8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a148 <__sprintf_chk@plt+0x10878>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806460b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a03e <__sprintf_chk@plt+0x1076e>
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0xc(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0x10(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x40(%esp)
mov    0x4(%ebx),%edi
mov    %ecx,0x4c(%esp)
mov    (%ebx),%ebx
mov    %edx,0x3c(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8064838,0x4(%esp)
jmp    805a192 <__sprintf_chk@plt+0x108c2>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xb0(%esp),%eax
mov    0xa0(%esp),%ebx
mov    0xa4(%esp),%ecx
mov    0xa8(%esp),%edi
mov    (%eax),%edx
mov    0xac(%esp),%ebp
test   %edx,%edx
mov    %edx,0x58(%esp)
je     805ab28 <__sprintf_chk@plt+0x11258>
mov    0x4(%eax),%edx
test   %edx,%edx
mov    %edx,0x5c(%esp)
je     805ab30 <__sprintf_chk@plt+0x11260>
mov    0x8(%eax),%edx
test   %edx,%edx
mov    %edx,0x60(%esp)
je     805ab40 <__sprintf_chk@plt+0x11270>
mov    0xc(%eax),%edx
test   %edx,%edx
mov    %edx,0x64(%esp)
je     805ab50 <__sprintf_chk@plt+0x11280>
mov    0x10(%eax),%edx
test   %edx,%edx
mov    %edx,0x68(%esp)
je     805ab60 <__sprintf_chk@plt+0x11290>
mov    0x14(%eax),%edx
test   %edx,%edx
mov    %edx,0x6c(%esp)
je     805ab70 <__sprintf_chk@plt+0x112a0>
mov    0x18(%eax),%edx
test   %edx,%edx
mov    %edx,0x70(%esp)
je     805ab80 <__sprintf_chk@plt+0x112b0>
mov    0x1c(%eax),%edx
test   %edx,%edx
mov    %edx,0x74(%esp)
je     805ab90 <__sprintf_chk@plt+0x112c0>
mov    0x20(%eax),%edx
test   %edx,%edx
mov    %edx,0x78(%esp)
je     805aba0 <__sprintf_chk@plt+0x112d0>
cmpl   $0x1,0x24(%eax)
sbb    %esi,%esi
add    $0xa,%esi
test   %ecx,%ecx
je     805aaa8 <__sprintf_chk@plt+0x111d8>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x80645ff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064612,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x8064920,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064670,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
cmp    $0x9,%esi
ja     805aad0 <__sprintf_chk@plt+0x11200>
jmp    *0x80648c4(,%esi,4)
mov    0x74(%esp),%ecx
mov    0x70(%esp),%edx
mov    0x60(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x68(%esp),%edi
mov    %ecx,0x48(%esp)
mov    0x5c(%esp),%ecx
mov    %edx,0x44(%esp)
mov    0x58(%esp),%edx
movl   $0x80647d4,0x4(%esp)
mov    0x6c(%esp),%ebp
movl   $0x0,(%esp)
mov    0x64(%esp),%esi
mov    %ecx,0x3c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %edi,0x1c(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x20(%esp)
mov    %ecx,0x28(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %esi,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
mov    0x64(%esp),%esi
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    0x60(%esp),%ecx
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %esi,0x3c(%esp)
mov    0x70(%esp),%ebp
mov    0x6c(%esp),%edi
mov    0x58(%esp),%esi
mov    %eax,0x38(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8064804,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %edi,0x20(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x44(%esp),%edx
mov    %edi,0x1c(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
mov    %edi,0x18(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x58(%esp),%esi
movl   $0x8064616,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0xac(%esp)
mov    %ebx,0xa0(%esp)
movl   $0x1,0xa4(%esp)
00
mov    %eax,0xa8(%esp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
nop
movl   $0x5,0x8(%esp)
mov    0x5c(%esp),%edi
movl   $0x8064626,0x4(%esp)
mov    0x58(%esp),%esi
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %edi,0xb0(%esp)
mov    %esi,0xac(%esp)
mov    %ebx,0xa0(%esp)
movl   $0x1,0xa4(%esp)
00
mov    %eax,0xa8(%esp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497e0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806463d,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
call   8049410 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a6f8 <__sprintf_chk@plt+0x10e28>
lea    0x0(%esi),%esi
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806473c,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a6f8 <__sprintf_chk@plt+0x10e28>
lea    0x0(%esi),%esi
mov    0x68(%esp),%ecx
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806475c,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a6f8 <__sprintf_chk@plt+0x10e28>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    0x58(%esp),%eax
mov    0x60(%esp),%edi
movl   $0x5,0x8(%esp)
mov    0x64(%esp),%ebp
movl   $0x8064780,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %edi,0x14(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x18(%esp)
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a6f8 <__sprintf_chk@plt+0x10e28>
lea    0x0(%esi),%esi
mov    0x70(%esp),%ecx
mov    0x6c(%esp),%edx
mov    0x5c(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x64(%esp),%edi
mov    %ecx,0x44(%esp)
mov    0x58(%esp),%ecx
movl   $0x80647a8,0x4(%esp)
mov    0x68(%esp),%ebp
movl   $0x0,(%esp)
mov    0x60(%esp),%esi
mov    %edx,0x40(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %edi,0x18(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x1c(%esp)
mov    %ecx,0x24(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x20(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a6f8 <__sprintf_chk@plt+0x10e28>
lea    0x0(%esi),%esi
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x806460b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805a5e8 <__sprintf_chk@plt+0x10d18>
lea    0x0(%esi),%esi
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
mov    0x64(%esp),%esi
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    0x60(%esp),%ecx
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %esi,0x3c(%esp)
mov    0x70(%esp),%ebp
mov    0x6c(%esp),%edi
mov    %eax,0x38(%esp)
mov    0x58(%esp),%esi
mov    %ecx,0x40(%esp)
mov    %edx,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8064838,0x4(%esp)
jmp    805a754 <__sprintf_chk@plt+0x10e84>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
nop
mov    $0x1,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x2,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x3,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x4,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x5,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x6,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x7,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
mov    $0x8,%esi
jmp    805a5bc <__sprintf_chk@plt+0x10cec>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xb0(%esp),%eax
mov    0xa0(%esp),%ebp
mov    0xa4(%esp),%edx
mov    0xa8(%esp),%ecx
test   %eax,%eax
mov    0xac(%esp),%esi
mov    %eax,0x58(%esp)
je     805b1d8 <__sprintf_chk@plt+0x11908>
mov    0xb4(%esp),%eax
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     805b1e0 <__sprintf_chk@plt+0x11910>
mov    0xb8(%esp),%eax
test   %eax,%eax
mov    %eax,0x60(%esp)
je     805b1f0 <__sprintf_chk@plt+0x11920>
mov    0xbc(%esp),%eax
test   %eax,%eax
mov    %eax,0x64(%esp)
je     805b200 <__sprintf_chk@plt+0x11930>
mov    0xc0(%esp),%eax
test   %eax,%eax
mov    %eax,0x68(%esp)
je     805b210 <__sprintf_chk@plt+0x11940>
mov    0xc4(%esp),%eax
test   %eax,%eax
mov    %eax,0x6c(%esp)
je     805b220 <__sprintf_chk@plt+0x11950>
mov    0xc8(%esp),%eax
test   %eax,%eax
mov    %eax,0x70(%esp)
je     805b230 <__sprintf_chk@plt+0x11960>
mov    0xcc(%esp),%eax
test   %eax,%eax
mov    %eax,0x74(%esp)
je     805b240 <__sprintf_chk@plt+0x11970>
mov    0xd0(%esp),%eax
test   %eax,%eax
mov    %eax,0x78(%esp)
je     805b250 <__sprintf_chk@plt+0x11980>
cmpl   $0x1,0xd4(%esp)
sbb    %ebx,%ebx
add    $0xa,%ebx
test   %edx,%edx
je     805b158 <__sprintf_chk@plt+0x11888>
mov    %esi,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x80645ff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064612,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x8064920,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
call   80497e0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064670,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
cmp    $0x9,%ebx
ja     805b180 <__sprintf_chk@plt+0x118b0>
jmp    *0x80648ec(,%ebx,4)
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%eax
mov    0x60(%esp),%ecx
movl   $0x5,0x8(%esp)
mov    0x6c(%esp),%edi
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x58(%esp),%eax
movl   $0x80647d4,0x4(%esp)
mov    0x68(%esp),%esi
movl   $0x0,(%esp)
mov    0x64(%esp),%ebx
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
call   8049410 <dcgettext@plt>
mov    0x48(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x20(%esp)
mov    0x40(%esp),%edi
mov    %esi,0x1c(%esp)
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x24(%esp)
mov    0x44(%esp),%ecx
mov    %ebx,0x18(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%edx
mov    0x74(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%ecx
mov    %edx,0x4c(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    0x70(%esp),%edi
mov    0x6c(%esp),%esi
mov    0x58(%esp),%ebx
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8064804,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    0x4c(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x24(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0x20(%esp)
mov    %edx,0x2c(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x28(%esp)
mov    0x48(%esp),%ecx
mov    %edi,0x18(%esp)
mov    0x44(%esp),%edi
mov    %ebx,0xc(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edi,0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80497e0 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049820 <abort@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x58(%esp),%ebx
movl   $0x8064616,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x5c(%esp),%esi
movl   $0x8064626,0x4(%esp)
mov    0x58(%esp),%ebx
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806463d,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
call   8049410 <dcgettext@plt>
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806473c,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
mov    0x68(%esp),%edx
mov    0x64(%esp),%ecx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806475c,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x3c(%esp)
mov    %ecx,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    0x64(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x8064780,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
mov    0x70(%esp),%edx
mov    0x5c(%esp),%ecx
mov    0x6c(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x68(%esp),%edi
mov    %edx,0x44(%esp)
mov    0x58(%esp),%edx
movl   $0x80647a8,0x4(%esp)
mov    0x64(%esp),%esi
movl   $0x0,(%esp)
mov    0x60(%esp),%ebx
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049410 <dcgettext@plt>
mov    0x44(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x1c(%esp)
mov    %esi,0x18(%esp)
mov    %edx,0x24(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %ebx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805add0 <__sprintf_chk@plt+0x11500>
lea    0x0(%esi),%esi
mov    %esi,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x806460b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80497e0 <__fprintf_chk@plt>
jmp    805acba <__sprintf_chk@plt+0x113ea>
lea    0x0(%esi),%esi
mov    0x78(%esp),%edx
mov    0x74(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%ecx
mov    %edx,0x4c(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    0x70(%esp),%edi
mov    0x6c(%esp),%esi
mov    %ecx,0x48(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x8064838,0x4(%esp)
jmp    805ae2c <__sprintf_chk@plt+0x1155c>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
nop
mov    $0x1,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x2,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x3,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x4,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x5,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x6,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x7,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
mov    $0x8,%ebx
jmp    805ac8e <__sprintf_chk@plt+0x113be>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x80625a3,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x80625b8,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8064659,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
movl   $0x80638e8,0xc(%esp)
movl   $0x80626bf,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
mov    0x8069280,%ebx
movl   $0x5,0x8(%esp)
movl   $0x806390c,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
xor    %edx,%edx
sub    $0x18,%esp
mov    $0xffffffff,%eax
mov    0x24(%esp),%ecx
mov    0x20(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     805b342 <__sprintf_chk@plt+0x11a72>
imul   %ecx,%ebx
mov    %ebx,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
je     805b33d <__sprintf_chk@plt+0x11a6d>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
nop
je     805b338 <__sprintf_chk@plt+0x11a68>
call   805b650 <__sprintf_chk@plt+0x11d80>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x14,%esp
mov    0x28(%esp),%ecx
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     805b3a8 <__sprintf_chk@plt+0x11ad8>
imul   %ecx,%ebx
test   %ebx,%ebx
je     805b390 <__sprintf_chk@plt+0x11ac0>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805b3a4 <__sprintf_chk@plt+0x11ad4>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     805b375 <__sprintf_chk@plt+0x11aa5>
mov    %esi,(%esp)
call   8049390 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
test   %ebx,%ebx
je     805b385 <__sprintf_chk@plt+0x11ab5>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     805b400 <__sprintf_chk@plt+0x11b30>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    805b435 <__sprintf_chk@plt+0x11b65>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
imul   %ecx,%ebx
mov    %ecx,(%edi)
test   %ebx,%ebx
je     805b420 <__sprintf_chk@plt+0x11b50>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049560 <realloc@plt>
test   %ebx,%ebx
jne    805b431 <__sprintf_chk@plt+0x11b61>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
jne    805b416 <__sprintf_chk@plt+0x11b46>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ecx,%ebx
jmp    805b3e5 <__sprintf_chk@plt+0x11b15>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8049390 <free@plt>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %eax,%eax
jne    805b3f5 <__sprintf_chk@plt+0x11b25>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
je     805b459 <__sprintf_chk@plt+0x11b89>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     805b454 <__sprintf_chk@plt+0x11b84>
lea    0x0(%esi),%esi
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
je     805b489 <__sprintf_chk@plt+0x11bb9>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     805b484 <__sprintf_chk@plt+0x11bb4>
lea    0x0(%esi),%esi
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     805b4c8 <__sprintf_chk@plt+0x11bf8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805b4db <__sprintf_chk@plt+0x11c0b>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     805b4b0 <__sprintf_chk@plt+0x11be0>
mov    %eax,(%esp)
call   8049390 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     805b4c0 <__sprintf_chk@plt+0x11bf0>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     805b530 <__sprintf_chk@plt+0x11c60>
cmp    $0xaaaaaaa9,%eax
ja     805b557 <__sprintf_chk@plt+0x11c87>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
test   %eax,%eax
mov    %eax,(%ebx)
je     805b548 <__sprintf_chk@plt+0x11c78>
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805b557 <__sprintf_chk@plt+0x11c87>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    805b516 <__sprintf_chk@plt+0x11c46>
movl   $0x40,(%ebx)
mov    $0x40,%eax
jmp    805b516 <__sprintf_chk@plt+0x11c46>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   8049390 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
je     805b58d <__sprintf_chk@plt+0x11cbd>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80496a0 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     805b574 <__sprintf_chk@plt+0x11ca4>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80498c0 <calloc@plt>
test   %eax,%eax
je     805b5bf <__sprintf_chk@plt+0x11cef>
add    $0x1c,%esp
ret
nop
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
je     805b5fd <__sprintf_chk@plt+0x11d2d>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80493a0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     805b5e4 <__sprintf_chk@plt+0x11d14>
call   805b650 <__sprintf_chk@plt+0x11d80>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%eax),%ebx
mov    %ebx,(%esp)
call   8049570 <malloc@plt>
test   %ebx,%ebx
jne    805b646 <__sprintf_chk@plt+0x11d76>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80493a0 <memcpy@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
test   %eax,%eax
jne    805b630 <__sprintf_chk@plt+0x11d60>
call   805b650 <__sprintf_chk@plt+0x11d80>
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8064050,0x4(%esp)
movl   $0x0,(%esp)
call   8049410 <dcgettext@plt>
mov    0x80691c4,%edx
movl   $0x80640dc,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049530 <error@plt>
call   8049820 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80616f0 <fts_children+0x2450>
test   %eax,%eax
mov    %eax,%ebx
js     805b6e0 <__sprintf_chk@plt+0x11e10>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    805b6d6 <__sprintf_chk@plt+0x11e06>
call   805b650 <__sprintf_chk@plt+0x11d80>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80619e0 <fts_children+0x2740>
test   %eax,%eax
mov    %eax,%ebx
je     805b718 <__sprintf_chk@plt+0x11e48>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    805b70e <__sprintf_chk@plt+0x11e3e>
call   805b650 <__sprintf_chk@plt+0x11d80>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8061bd0 <fts_children+0x2930>
test   %eax,%eax
mov    %eax,%ebx
je     805b760 <__sprintf_chk@plt+0x11e90>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    805b756 <__sprintf_chk@plt+0x11e86>
call   805b650 <__sprintf_chk@plt+0x11d80>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%ebp
mov    0x70(%esp),%esi
mov    0x74(%esp),%ebx
cmp    $0x24,%ebp
ja     805ca31 <__sprintf_chk@plt+0x13161>
test   %ebx,%ebx
lea    0x4c(%esp),%eax
cmove  %eax,%ebx
call   80496e0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
mov    %ebp,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   80497d0 <__strtoll_internal@plt>
mov    (%ebx),%ebp
cmp    %esi,%ebp
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     805b8e0 <__sprintf_chk@plt+0x12010>
mov    (%edi),%eax
test   %eax,%eax
jne    805b808 <__sprintf_chk@plt+0x11f38>
xor    %edi,%edi
mov    0x80(%esp),%esi
test   %esi,%esi
je     805b7eb <__sprintf_chk@plt+0x11f1b>
movsbl 0x0(%ebp),%eax
test   %al,%al
mov    %al,0x24(%esp)
jne    805b828 <__sprintf_chk@plt+0x11f58>
mov    0x7c(%esp),%eax
mov    %edi,%esi
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x22,%eax
mov    $0x4,%esi
mov    $0x1,%edi
je     805b7d4 <__sprintf_chk@plt+0x11f04>
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   80495f0 <strchr@plt>
test   %eax,%eax
je     805b8c0 <__sprintf_chk@plt+0x11ff0>
mov    0x80(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <strchr@plt>
test   %eax,%eax
je     805b87a <__sprintf_chk@plt+0x11faa>
movzbl 0x1(%ebp),%eax
cmp    $0x44,%al
je     805b938 <__sprintf_chk@plt+0x12068>
cmp    $0x69,%al
je     805be50 <__sprintf_chk@plt+0x12580>
cmp    $0x42,%al
je     805b938 <__sprintf_chk@plt+0x12068>
movl   $0xffffffff,0x38(%esp)
mov    $0x1,%esi
movl   $0x1fffff,0x28(%esp)
movl   $0x0,0x34(%esp)
movl   $0xffe00000,0x2c(%esp)
movl   $0x400,0x30(%esp)
movzbl 0x24(%esp),%eax
sub    $0x42,%eax
cmp    $0x35,%al
ja     805b8c0 <__sprintf_chk@plt+0x11ff0>
movzbl %al,%eax
jmp    *0x8064984(,%eax,4)
lea    0x0(%esi),%esi
mov    0x7c(%esp),%eax
or     $0x2,%edi
mov    0x18(%esp),%edx
mov    %edi,%esi
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80(%esp),%edi
mov    $0x4,%esi
test   %edi,%edi
je     805b7fe <__sprintf_chk@plt+0x11f2e>
movsbl 0x0(%ebp),%eax
test   %al,%al
mov    %al,0x24(%esp)
je     805b7fe <__sprintf_chk@plt+0x11f2e>
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   80495f0 <strchr@plt>
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %eax,%eax
jne    805b843 <__sprintf_chk@plt+0x11f73>
jmp    805b7fe <__sprintf_chk@plt+0x11f2e>
xchg   %ax,%ax
movl   $0xa5e353f7,0x38(%esp)
mov    $0x2,%esi
movl   $0x20c49b,0x28(%esp)
movl   $0x5a1cac09,0x34(%esp)
movl   $0xffdf3b64,0x2c(%esp)
movl   $0x3e8,0x30(%esp)
jmp    805b8a7 <__sprintf_chk@plt+0x11fd7>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
or     %eax,%edi
add    %esi,%ebp
mov    %edi,%eax
or     $0x2,%eax
mov    %ebp,(%ebx)
cmpb   $0x0,0x0(%ebp)
cmovne %eax,%edi
jmp    805b7eb <__sprintf_chk@plt+0x11f1b>
cmpl   $0xffc00000,0x1c(%esp)
jl     805be90 <__sprintf_chk@plt+0x125c0>
cmpl   $0x3fffff,0x1c(%esp)
jg     805beaa <__sprintf_chk@plt+0x125da>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    805b970 <__sprintf_chk@plt+0x120a0>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bece <__sprintf_chk@plt+0x125fe>
jl     805b9dc <__sprintf_chk@plt+0x1210c>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bece <__sprintf_chk@plt+0x125fe>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c666 <__sprintf_chk@plt+0x12d96>
jg     805b9fa <__sprintf_chk@plt+0x1212a>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c666 <__sprintf_chk@plt+0x12d96>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jle    805c965 <__sprintf_chk@plt+0x13095>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
movl   $0x0,0x18(%esp)
mov    $0x1,%eax
movl   $0x80000000,0x1c(%esp)
or     0x24(%esp),%eax
jmp    805b970 <__sprintf_chk@plt+0x120a0>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bec4 <__sprintf_chk@plt+0x125f4>
jl     805ba86 <__sprintf_chk@plt+0x121b6>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bec4 <__sprintf_chk@plt+0x125f4>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805bf84 <__sprintf_chk@plt+0x126b4>
jg     805baa4 <__sprintf_chk@plt+0x121d4>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805bf84 <__sprintf_chk@plt+0x126b4>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jle    805c983 <__sprintf_chk@plt+0x130b3>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
jmp    805ba36 <__sprintf_chk@plt+0x12166>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bef6 <__sprintf_chk@plt+0x12626>
jl     805bb08 <__sprintf_chk@plt+0x12238>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bef6 <__sprintf_chk@plt+0x12626>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c8e7 <__sprintf_chk@plt+0x13017>
jg     805bb26 <__sprintf_chk@plt+0x12256>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c8e7 <__sprintf_chk@plt+0x13017>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    805ca14 <__sprintf_chk@plt+0x13144>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    805ba45 <__sprintf_chk@plt+0x12175>
cmpl   $0xc0000000,0x1c(%esp)
jl     805be90 <__sprintf_chk@plt+0x125c0>
cmpl   $0x3fffffff,0x1c(%esp)
jg     805beaa <__sprintf_chk@plt+0x125da>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    805b970 <__sprintf_chk@plt+0x120a0>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805beec <__sprintf_chk@plt+0x1261c>
jl     805bbbe <__sprintf_chk@plt+0x122ee>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805beec <__sprintf_chk@plt+0x1261c>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c39a <__sprintf_chk@plt+0x12aca>
jg     805bbdc <__sprintf_chk@plt+0x1230c>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c39a <__sprintf_chk@plt+0x12aca>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    805c9da <__sprintf_chk@plt+0x1310a>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    805ba40 <__sprintf_chk@plt+0x12170>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bf00 <__sprintf_chk@plt+0x12630>
jl     805bc3b <__sprintf_chk@plt+0x1236b>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bf00 <__sprintf_chk@plt+0x12630>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805bf22 <__sprintf_chk@plt+0x12652>
jg     805bc59 <__sprintf_chk@plt+0x12389>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805bf22 <__sprintf_chk@plt+0x12652>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    805c9a0 <__sprintf_chk@plt+0x130d0>
movl   $0x0,0x24(%esp)
mov    $0x1,%eax
movl   $0x0,0x18(%esp)
movl   $0x80000000,0x1c(%esp)
jmp    805ba5f <__sprintf_chk@plt+0x1218f>
xchg   %ax,%ax
cmpl   $0xffe00000,0x1c(%esp)
jl     805be90 <__sprintf_chk@plt+0x125c0>
cmpl   $0x1fffff,0x1c(%esp)
jg     805beaa <__sprintf_chk@plt+0x125da>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0xa,%eax,%edx
shl    $0xa,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    805b970 <__sprintf_chk@plt+0x120a0>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bee2 <__sprintf_chk@plt+0x12612>
jl     805bd08 <__sprintf_chk@plt+0x12438>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bee2 <__sprintf_chk@plt+0x12612>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c5ea <__sprintf_chk@plt+0x12d1a>
jg     805bd26 <__sprintf_chk@plt+0x12456>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c5ea <__sprintf_chk@plt+0x12d1a>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    805c9bd <__sprintf_chk@plt+0x130ed>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    805ba4a <__sprintf_chk@plt+0x1217a>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bed8 <__sprintf_chk@plt+0x12608>
jl     805bd85 <__sprintf_chk@plt+0x124b5>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bed8 <__sprintf_chk@plt+0x12608>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c1fa <__sprintf_chk@plt+0x1292a>
jg     805bda3 <__sprintf_chk@plt+0x124d3>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c1fa <__sprintf_chk@plt+0x1292a>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    805c9f7 <__sprintf_chk@plt+0x13127>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    805ba3b <__sprintf_chk@plt+0x1216b>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805be90 <__sprintf_chk@plt+0x125c0>
jl     805be02 <__sprintf_chk@plt+0x12532>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805be90 <__sprintf_chk@plt+0x125c0>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805beaa <__sprintf_chk@plt+0x125da>
jg     805be20 <__sprintf_chk@plt+0x12550>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805beaa <__sprintf_chk@plt+0x125da>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    %ecx,%eax
mull   0x18(%esp)
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    805b970 <__sprintf_chk@plt+0x120a0>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x42,0x2(%ebp)
movl   $0xffffffff,0x38(%esp)
movl   $0x1fffff,0x28(%esp)
sete   %al
mov    %eax,%esi
movl   $0x0,0x34(%esp)
lea    0x1(%esi,%esi,1),%esi
movl   $0xffe00000,0x2c(%esp)
movl   $0x400,0x30(%esp)
jmp    805b8a7 <__sprintf_chk@plt+0x11fd7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x18(%esp)
mov    $0x1,%eax
movl   $0x80000000,0x1c(%esp)
jmp    805b970 <__sprintf_chk@plt+0x120a0>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0x7fffffff,0x1c(%esp)
jmp    805b970 <__sprintf_chk@plt+0x120a0>
mov    $0x1,%eax
jmp    805bad9 <__sprintf_chk@plt+0x12209>
mov    $0x1,%eax
jmp    805ba2f <__sprintf_chk@plt+0x1215f>
mov    $0x1,%eax
jmp    805bdd8 <__sprintf_chk@plt+0x12508>
mov    $0x1,%eax
jmp    805bd5b <__sprintf_chk@plt+0x1248b>
mov    $0x1,%eax
jmp    805bc11 <__sprintf_chk@plt+0x12341>
mov    $0x1,%eax
jmp    805bb5b <__sprintf_chk@plt+0x1228b>
movl   $0x1,0x24(%esp)
mov    $0x1,%eax
movl   $0x0,0x18(%esp)
movl   $0x80000000,0x1c(%esp)
jmp    805ba5f <__sprintf_chk@plt+0x1218f>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c1e0 <__sprintf_chk@plt+0x12910>
jg     805bf58 <__sprintf_chk@plt+0x12688>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c1e0 <__sprintf_chk@plt+0x12910>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x28(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    805ba5f <__sprintf_chk@plt+0x1218f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c5d0 <__sprintf_chk@plt+0x12d00>
jg     805bfba <__sprintf_chk@plt+0x126ea>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c5d0 <__sprintf_chk@plt+0x12d00>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805bae0 <__sprintf_chk@plt+0x12210>
jl     805bff7 <__sprintf_chk@plt+0x12727>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bae0 <__sprintf_chk@plt+0x12210>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c5b6 <__sprintf_chk@plt+0x12ce6>
jg     805c015 <__sprintf_chk@plt+0x12745>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c5b6 <__sprintf_chk@plt+0x12ce6>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba36 <__sprintf_chk@plt+0x12166>
jl     805c052 <__sprintf_chk@plt+0x12782>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba36 <__sprintf_chk@plt+0x12166>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c59c <__sprintf_chk@plt+0x12ccc>
jg     805c070 <__sprintf_chk@plt+0x127a0>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c59c <__sprintf_chk@plt+0x12ccc>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba3b <__sprintf_chk@plt+0x1216b>
jl     805c0ad <__sprintf_chk@plt+0x127dd>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba3b <__sprintf_chk@plt+0x1216b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c582 <__sprintf_chk@plt+0x12cb2>
jg     805c0cb <__sprintf_chk@plt+0x127fb>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c582 <__sprintf_chk@plt+0x12cb2>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba40 <__sprintf_chk@plt+0x12170>
jl     805c108 <__sprintf_chk@plt+0x12838>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba40 <__sprintf_chk@plt+0x12170>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c568 <__sprintf_chk@plt+0x12c98>
jg     805c126 <__sprintf_chk@plt+0x12856>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c568 <__sprintf_chk@plt+0x12c98>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba45 <__sprintf_chk@plt+0x12175>
jl     805c163 <__sprintf_chk@plt+0x12893>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba45 <__sprintf_chk@plt+0x12175>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c54e <__sprintf_chk@plt+0x12c7e>
jg     805c181 <__sprintf_chk@plt+0x128b1>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c54e <__sprintf_chk@plt+0x12c7e>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba4a <__sprintf_chk@plt+0x1217a>
jl     805c1be <__sprintf_chk@plt+0x128ee>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba4a <__sprintf_chk@plt+0x1217a>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c1e0 <__sprintf_chk@plt+0x12910>
jg     805c374 <__sprintf_chk@plt+0x12aa4>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jae    805c374 <__sprintf_chk@plt+0x12aa4>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0x7fffffff,0x1c(%esp)
jmp    805ba5f <__sprintf_chk@plt+0x1218f>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c500 <__sprintf_chk@plt+0x12c30>
jg     805c230 <__sprintf_chk@plt+0x12960>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c500 <__sprintf_chk@plt+0x12c30>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba3b <__sprintf_chk@plt+0x1216b>
jg     805c26d <__sprintf_chk@plt+0x1299d>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba3b <__sprintf_chk@plt+0x1216b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c4e6 <__sprintf_chk@plt+0x12c16>
jg     805c28b <__sprintf_chk@plt+0x129bb>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c4e6 <__sprintf_chk@plt+0x12c16>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba40 <__sprintf_chk@plt+0x12170>
jg     805c2c8 <__sprintf_chk@plt+0x129f8>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba40 <__sprintf_chk@plt+0x12170>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     805c4cc <__sprintf_chk@plt+0x12bfc>
jl     805c2e6 <__sprintf_chk@plt+0x12a16>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
ja     805c4cc <__sprintf_chk@plt+0x12bfc>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba45 <__sprintf_chk@plt+0x12175>
jg     805c323 <__sprintf_chk@plt+0x12a53>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba45 <__sprintf_chk@plt+0x12175>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     805c341 <__sprintf_chk@plt+0x12a71>
jl     805c486 <__sprintf_chk@plt+0x12bb6>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
jbe    805c486 <__sprintf_chk@plt+0x12bb6>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     805c1e0 <__sprintf_chk@plt+0x12910>
jl     805c374 <__sprintf_chk@plt+0x12aa4>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
ja     805c1e0 <__sprintf_chk@plt+0x12910>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
jmp    805ba5f <__sprintf_chk@plt+0x1218f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c534 <__sprintf_chk@plt+0x12c64>
jg     805c3d0 <__sprintf_chk@plt+0x12b00>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c534 <__sprintf_chk@plt+0x12c64>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba40 <__sprintf_chk@plt+0x12170>
jg     805c40d <__sprintf_chk@plt+0x12b3d>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba40 <__sprintf_chk@plt+0x12170>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c51a <__sprintf_chk@plt+0x12c4a>
jg     805c42b <__sprintf_chk@plt+0x12b5b>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c51a <__sprintf_chk@plt+0x12c4a>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba45 <__sprintf_chk@plt+0x12175>
jg     805c468 <__sprintf_chk@plt+0x12b98>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba45 <__sprintf_chk@plt+0x12175>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c341 <__sprintf_chk@plt+0x12a71>
jg     805c486 <__sprintf_chk@plt+0x12bb6>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c341 <__sprintf_chk@plt+0x12a71>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba4a <__sprintf_chk@plt+0x1217a>
jg     805c356 <__sprintf_chk@plt+0x12a86>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba4a <__sprintf_chk@plt+0x1217a>
jmp    805c356 <__sprintf_chk@plt+0x12a86>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c323 <__sprintf_chk@plt+0x12a53>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c2c8 <__sprintf_chk@plt+0x129f8>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c26d <__sprintf_chk@plt+0x1299d>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c468 <__sprintf_chk@plt+0x12b98>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c40d <__sprintf_chk@plt+0x12b3d>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c1be <__sprintf_chk@plt+0x128ee>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c163 <__sprintf_chk@plt+0x12893>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c108 <__sprintf_chk@plt+0x12838>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c0ad <__sprintf_chk@plt+0x127dd>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c052 <__sprintf_chk@plt+0x12782>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805bff7 <__sprintf_chk@plt+0x12727>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c54e <__sprintf_chk@plt+0x12c7e>
jg     805c620 <__sprintf_chk@plt+0x12d50>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c54e <__sprintf_chk@plt+0x12c7e>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba4a <__sprintf_chk@plt+0x1217a>
jg     805c1be <__sprintf_chk@plt+0x128ee>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba4a <__sprintf_chk@plt+0x1217a>
jmp    805c1be <__sprintf_chk@plt+0x128ee>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c8cd <__sprintf_chk@plt+0x12ffd>
jg     805c69c <__sprintf_chk@plt+0x12dcc>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c8cd <__sprintf_chk@plt+0x12ffd>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba36 <__sprintf_chk@plt+0x12166>
jl     805c6df <__sprintf_chk@plt+0x12e0f>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba36 <__sprintf_chk@plt+0x12166>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c8b3 <__sprintf_chk@plt+0x12fe3>
jg     805c6fd <__sprintf_chk@plt+0x12e2d>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c8b3 <__sprintf_chk@plt+0x12fe3>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba3b <__sprintf_chk@plt+0x1216b>
jl     805c740 <__sprintf_chk@plt+0x12e70>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba3b <__sprintf_chk@plt+0x1216b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c899 <__sprintf_chk@plt+0x12fc9>
jg     805c75e <__sprintf_chk@plt+0x12e8e>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c899 <__sprintf_chk@plt+0x12fc9>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba40 <__sprintf_chk@plt+0x12170>
jl     805c7a1 <__sprintf_chk@plt+0x12ed1>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba40 <__sprintf_chk@plt+0x12170>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c87f <__sprintf_chk@plt+0x12faf>
jg     805c7bf <__sprintf_chk@plt+0x12eef>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c87f <__sprintf_chk@plt+0x12faf>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba45 <__sprintf_chk@plt+0x12175>
jl     805c802 <__sprintf_chk@plt+0x12f32>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba45 <__sprintf_chk@plt+0x12175>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c865 <__sprintf_chk@plt+0x12f95>
jg     805c818 <__sprintf_chk@plt+0x12f48>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c865 <__sprintf_chk@plt+0x12f95>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     805ba4a <__sprintf_chk@plt+0x1217a>
jl     805bf3a <__sprintf_chk@plt+0x1266a>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805ba4a <__sprintf_chk@plt+0x1217a>
nop
jmp    805bf3a <__sprintf_chk@plt+0x1266a>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805bf3a <__sprintf_chk@plt+0x1266a>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c802 <__sprintf_chk@plt+0x12f32>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c7a1 <__sprintf_chk@plt+0x12ed1>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c740 <__sprintf_chk@plt+0x12e70>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    805c6df <__sprintf_chk@plt+0x12e0f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     805c568 <__sprintf_chk@plt+0x12c98>
jg     805c91d <__sprintf_chk@plt+0x1304d>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     805c568 <__sprintf_chk@plt+0x12c98>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     805ba45 <__sprintf_chk@plt+0x12175>
jg     805c163 <__sprintf_chk@plt+0x12893>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805ba45 <__sprintf_chk@plt+0x12175>
xchg   %ax,%ax
jmp    805c163 <__sprintf_chk@plt+0x12893>
jl     805c976 <__sprintf_chk@plt+0x130a6>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
nop
ja     805ba2d <__sprintf_chk@plt+0x1215d>
movl   $0x0,0x24(%esp)
jmp    805c67e <__sprintf_chk@plt+0x12dae>
jl     805c993 <__sprintf_chk@plt+0x130c3>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     805bad7 <__sprintf_chk@plt+0x12207>
movl   $0x0,0x24(%esp)
jmp    805bf9c <__sprintf_chk@plt+0x126cc>
jg     805c9b0 <__sprintf_chk@plt+0x130e0>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805bc8c <__sprintf_chk@plt+0x123bc>
movl   $0x0,0x24(%esp)
jmp    805bf3a <__sprintf_chk@plt+0x1266a>
jg     805c9cd <__sprintf_chk@plt+0x130fd>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805bd59 <__sprintf_chk@plt+0x12489>
movl   $0x0,0x24(%esp)
jmp    805c602 <__sprintf_chk@plt+0x12d32>
jg     805c9ea <__sprintf_chk@plt+0x1311a>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805bc0f <__sprintf_chk@plt+0x1233f>
movl   $0x0,0x24(%esp)
jmp    805c3b2 <__sprintf_chk@plt+0x12ae2>
jg     805ca07 <__sprintf_chk@plt+0x13137>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805bdd6 <__sprintf_chk@plt+0x12506>
movl   $0x0,0x24(%esp)
jmp    805c212 <__sprintf_chk@plt+0x12942>
jg     805ca24 <__sprintf_chk@plt+0x13154>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805bb59 <__sprintf_chk@plt+0x12289>
movl   $0x0,0x24(%esp)
jmp    805c8ff <__sprintf_chk@plt+0x1302f>
movl   $0x8064a5c,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x806494f,0x4(%esp)
movl   $0x806495c,(%esp)
call   80498a0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
sub    $0x14,%esp
movl   $0x8064a67,(%esp)
call   8049550 <getenv@plt>
test   %eax,%eax
je     805ca90 <__sprintf_chk@plt+0x131c0>
mov    %eax,%esi
mov    $0x8064a6c,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
setne  %al
add    $0x14,%esp
movzbl %al,%eax
pop    %esi
pop    %edi
ret
nop
add    $0x14,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049710 <__printf_chk@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8069280,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049850 <fputs@plt>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
xor    0xc(%ebx),%ecx
xor    0x8(%ebx),%edx
or     %edx,%ecx
je     805cb20 <__sprintf_chk@plt+0x13250>
pop    %ebx
pop    %esi
ret
nop
mov    (%esi),%edx
mov    0x4(%esi),%eax
xor    0x4(%ebx),%eax
xor    (%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8062210 <fts_children+0x2f70>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8062210 <fts_children+0x2f70>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    (%eax),%edx
mov    0x4(%eax),%eax
xor    0x4(%ecx),%eax
xor    (%ecx),%edx
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%ecx
mov    0x9c(%eax),%ebx
mov    0x10(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%edx
mov    0x9c(%eax),%esi
cmp    %edx,%ecx
jae    805cbf8 <__sprintf_chk@plt+0x13328>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    805cc18 <__sprintf_chk@plt+0x13348>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     805cbf0 <__sprintf_chk@plt+0x13320>
jb     805cc09 <__sprintf_chk@plt+0x13339>
cmp    %esi,%ebx
ja     805cbf0 <__sprintf_chk@plt+0x13320>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebx
jb     805cbea <__sprintf_chk@plt+0x1331a>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     805cbf0 <__sprintf_chk@plt+0x13320>
jmp    805cc03 <__sprintf_chk@plt+0x13333>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x2c,%esp
mov    0x30(%ecx),%ebp
lea    0x44(%ecx),%edi
mov    0x40(%esp),%edx
mov    (%esi),%ecx
test   %ebp,%ebp
jne    805cc50 <__sprintf_chk@plt+0x13380>
test   $0x1,%cl
jne    805cc59 <__sprintf_chk@plt+0x13389>
and    $0x2,%ecx
jne    805cc59 <__sprintf_chk@plt+0x13389>
test   %dl,%dl
je     805ccd8 <__sprintf_chk@plt+0x13408>
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049830 <__xstat64@plt>
test   %eax,%eax
je     805cd00 <__sprintf_chk@plt+0x13430>
call   80496e0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
cmp    $0x2,%esi
je     805cdd0 <__sprintf_chk@plt+0x13500>
mov    %esi,0x20(%ebx)
test   $0x1,%edi
mov    $0x60,%edx
jne    805cdc0 <__sprintf_chk@plt+0x134f0>
test   $0x2,%edi
jne    805cda8 <__sprintf_chk@plt+0x134d8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     805ccc1 <__sprintf_chk@plt+0x133f1>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     805ccc9 <__sprintf_chk@plt+0x133f9>
movb   $0x0,(%edi)
mov    $0xa,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%ebx),%edx
movl   $0x100,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
call   8049480 <__fxstatat64@plt>
test   %eax,%eax
jne    805cd38 <__sprintf_chk@plt+0x13468>
nop
mov    0x54(%ebx),%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     805cd48 <__sprintf_chk@plt+0x13478>
cmp    $0xa000,%ecx
mov    $0xc,%eax
je     805ccce <__sprintf_chk@plt+0x133fe>
xor    %eax,%eax
cmp    $0x8000,%ecx
sete   %al
add    $0x2c,%esp
pop    %ebx
lea    0x3(%eax,%eax,4),%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
jmp    805cc8d <__sprintf_chk@plt+0x133bd>
nop
mov    (%esi),%edx
mov    0x58(%ebx),%eax
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0x2,%edx
sub    %edx,%eax
cmpb   $0x2e,0xa4(%ebx)
mov    %eax,0x38(%ebx)
mov    $0x1,%eax
jne    805ccce <__sprintf_chk@plt+0x133fe>
cmpb   $0x0,0xa5(%ebx)
je     805cd90 <__sprintf_chk@plt+0x134c0>
mov    0xa4(%ebx),%edx
and    $0xffff00,%edx
cmp    $0x2e00,%edx
jne    805ccce <__sprintf_chk@plt+0x133fe>
cmpl   $0x1,0x30(%ebx)
sbb    %eax,%eax
and    $0xfffffffc,%eax
add    $0x5,%eax
jmp    805ccce <__sprintf_chk@plt+0x133fe>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    805ccaa <__sprintf_chk@plt+0x133da>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x44(%ebx)
add    $0x1,%edi
mov    $0x5f,%dl
jmp    805cc9e <__sprintf_chk@plt+0x133ce>
xchg   %ax,%ax
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049860 <__lxstat64@plt>
test   %eax,%eax
jne    805cc8a <__sprintf_chk@plt+0x133ba>
movl   $0x0,0x0(%ebp)
mov    $0xd,%al
jmp    805ccce <__sprintf_chk@plt+0x133fe>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
test   $0x102,%eax
jne    805ce48 <__sprintf_chk@plt+0x13578>
mov    0x4(%ecx),%esi
test   %esi,%esi
je     805ce3d <__sprintf_chk@plt+0x1356d>
mov    0x30(%esi),%eax
test   %eax,%eax
js     805ce3d <__sprintf_chk@plt+0x1356d>
mov    (%edx),%ebx
mov    0x14(%ebx),%eax
or     0x10(%ebx),%eax
je     805cec2 <__sprintf_chk@plt+0x135f2>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
xor    0xa0(%ecx),%edx
xor    0x9c(%ecx),%eax
or     %eax,%edx
je     805ce90 <__sprintf_chk@plt+0x135c0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ecx),%ebx
lea    0x1c(%esp),%eax
mov    0x48(%ecx),%esi
mov    %ebx,0x1c(%esp)
mov    0xa0(%ecx),%ebx
mov    0x9c(%ecx),%ecx
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %esi,0x20(%esp)
mov    %ebx,0x28(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   8054780 <__sprintf_chk@plt+0xaeb0>
test   %eax,%eax
je     805cec2 <__sprintf_chk@plt+0x135f2>
mov    %eax,(%esp)
call   8049390 <free@plt>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
xor    0x48(%ecx),%edx
xor    0x44(%ecx),%eax
or     %eax,%edx
jne    805ce3d <__sprintf_chk@plt+0x1356d>
mov    0x44(%esi),%eax
mov    0x48(%esi),%edx
mov    %eax,0x8(%ebx)
mov    0x9c(%esi),%eax
mov    %edx,0xc(%ebx)
mov    0xa0(%esi),%edx
mov    %eax,(%ebx)
mov    %edx,0x4(%ebx)
jmp    805ce3d <__sprintf_chk@plt+0x1356d>
call   8049820 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%eax),%eax
lea    0x38(%edi),%ebx
test   $0x4,%al
jne    805cf2c <__sprintf_chk@plt+0x1365c>
test   $0x2,%ah
je     805cf58 <__sprintf_chk@plt+0x13688>
mov    0x1c(%edi),%eax
lea    0x38(%edi),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805f7d0 <fts_children+0x530>
test   %eax,%eax
js     805cf07 <__sprintf_chk@plt+0x13637>
mov    %eax,(%esp)
call   8049870 <close@plt>
movl   $0xffffff9c,0x1c(%edi)
xor    %esi,%esi
mov    %ebx,(%esp)
call   805f7c0 <fts_children+0x520>
test   %al,%al
jne    805cf38 <__sprintf_chk@plt+0x13668>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805f810 <fts_children+0x570>
test   %eax,%eax
jns    805cf48 <__sprintf_chk@plt+0x13678>
mov    %ebx,(%esp)
call   805f7c0 <fts_children+0x520>
test   %al,%al
je     805cf20 <__sprintf_chk@plt+0x13650>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049870 <close@plt>
jmp    805cf2c <__sprintf_chk@plt+0x1365c>
lea    0x0(%esi),%esi
mov    0x18(%edi),%eax
lea    0x38(%edi),%ebx
mov    %eax,(%esp)
call   8049790 <fchdir@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
jmp    805cf2c <__sprintf_chk@plt+0x1365c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    %edx,0xc(%esp)
test   %esi,%esi
je     805cfb1 <__sprintf_chk@plt+0x136e1>
cmpb   $0x2e,(%esi)
jne    805cfb1 <__sprintf_chk@plt+0x136e1>
cmpb   $0x2e,0x1(%esi)
jne    805cfb1 <__sprintf_chk@plt+0x136e1>
cmpb   $0x0,0x2(%esi)
sete   %al
mov    %eax,%ebp
mov    0x2c(%edi),%ebx
mov    %ebx,%edx
and    $0x4,%edx
je     805cff0 <__sprintf_chk@plt+0x13720>
and    $0x200,%ebx
mov    %ebx,%edx
je     805cfe0 <__sprintf_chk@plt+0x13710>
xor    %edx,%edx
test   %ecx,%ecx
js     805cfe0 <__sprintf_chk@plt+0x13710>
mov    %ecx,(%esp)
mov    %edx,0xc(%esp)
call   8049870 <close@plt>
mov    0xc(%esp),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,%eax
shr    $0x1f,%eax
mov    %eax,0x10(%esp)
mov    %ebp,%eax
test   %al,%al
jne    805d0a8 <__sprintf_chk@plt+0x137d8>
cmpb   $0x0,0x10(%esp)
jne    805d2d2 <__sprintf_chk@plt+0x13a02>
mov    %ecx,0x10(%esp)
test   $0x2,%bl
jne    805d03c <__sprintf_chk@plt+0x1376c>
test   %esi,%esi
je     805d188 <__sprintf_chk@plt+0x138b8>
cmpb   $0x2e,(%esi)
jne    805d188 <__sprintf_chk@plt+0x138b8>
cmpb   $0x2e,0x1(%esi)
jne    805d188 <__sprintf_chk@plt+0x138b8>
cmpb   $0x0,0x2(%esi)
jne    805d188 <__sprintf_chk@plt+0x138b8>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x3,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <__fxstat64@plt>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
je     805d1b0 <__sprintf_chk@plt+0x138e0>
mov    $0xffffffff,%eax
test   %ecx,%ecx
mov    %eax,%edx
jns    805cfe0 <__sprintf_chk@plt+0x13710>
mov    %eax,0xc(%esp)
call   80496e0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
mov    0xc(%esp),%edx
mov    %esi,(%ebx)
jmp    805cfe0 <__sprintf_chk@plt+0x13710>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x10(%esp)
je     805d00e <__sprintf_chk@plt+0x1373e>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jne    805d1e0 <__sprintf_chk@plt+0x13910>
mov    $0x1,%ebp
mov    0x1c(%edi),%eax
mov    %eax,0x1c(%esp)
mov    %ebx,%eax
and    $0x10,%eax
cmp    $0x1,%eax
mov    %eax,0x18(%esp)
sbb    %eax,%eax
mov    %eax,0x14(%esp)
and    $0xfffe0000,%eax
andl   $0xfffe0000,0x14(%esp)
add    $0x30900,%eax
addl   $0x70900,0x14(%esp)
and    $0x8,%bh
mov    0x10(%esp),%ebx
cmovne 0x14(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
test   %ebx,%ebx
je     805d278 <__sprintf_chk@plt+0x139a8>
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
mov    %eax,0x10(%esp)
test   %eax,%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
js     805d2b8 <__sprintf_chk@plt+0x139e8>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805f520 <fts_children+0x280>
mov    0x2c(%edi),%ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
jmp    805d012 <__sprintf_chk@plt+0x13742>
mov    0x9c(%esi),%eax
mov    0xa0(%esi),%ebx
xor    0x7c(%esp),%ebx
xor    0x78(%esp),%eax
or     %eax,%ebx
jne    805d1c6 <__sprintf_chk@plt+0x138f6>
mov    0x2c(%edi),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x2,%bh
jne    805d240 <__sprintf_chk@plt+0x13970>
mov    0x10(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   8049790 <fchdir@plt>
mov    0xc(%esp),%ecx
jmp    805d075 <__sprintf_chk@plt+0x137a5>
lea    0x0(%esi),%esi
mov    0xc(%esp),%esi
mov    0x44(%esi),%eax
mov    0x48(%esi),%ebx
xor    0x24(%esp),%ebx
xor    0x20(%esp),%eax
or     %eax,%ebx
je     805d168 <__sprintf_chk@plt+0x13898>
mov    %ecx,0xc(%esp)
call   80496e0 <__errno_location@plt>
mov    0xc(%esp),%ecx
movl   $0x2,(%eax)
jmp    805d070 <__sprintf_chk@plt+0x137a0>
xchg   %ax,%ax
lea    0x38(%edi),%ebp
mov    %ebp,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   805f7c0 <fts_children+0x520>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %al,%al
jne    805d0c4 <__sprintf_chk@plt+0x137f4>
mov    %ebp,(%esp)
call   805f810 <fts_children+0x570>
mov    0x2c(%edi),%ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,0x10(%esp)
js     805d2c2 <__sprintf_chk@plt+0x139f2>
test   $0x2,%bl
mov    0x10(%esp),%ecx
mov    $0x1,%ebp
je     805d188 <__sprintf_chk@plt+0x138b8>
jmp    805d03c <__sprintf_chk@plt+0x1376c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%edi),%eax
cmp    %eax,0x10(%esp)
je     805d2e2 <__sprintf_chk@plt+0x13a12>
mov    %ebp,%ecx
test   %cl,%cl
je     805d298 <__sprintf_chk@plt+0x139c8>
and    $0x4,%ebx
jne    805d26c <__sprintf_chk@plt+0x1399c>
test   %eax,%eax
js     805d26c <__sprintf_chk@plt+0x1399c>
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8049870 <close@plt>
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    %eax,0x1c(%edi)
jmp    805cfe0 <__sprintf_chk@plt+0x13710>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   805f750 <fts_children+0x4b0>
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
mov    %eax,0x10(%esp)
jmp    805d138 <__sprintf_chk@plt+0x13868>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
lea    0x38(%edi),%eax
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   805f7d0 <fts_children+0x530>
mov    0xc(%esp),%edx
test   %eax,%eax
jns    805d260 <__sprintf_chk@plt+0x13990>
jmp    805d26c <__sprintf_chk@plt+0x1399c>
lea    0x0(%esi),%esi
mov    $0xffffffff,%edx
jmp    805cfe0 <__sprintf_chk@plt+0x13710>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jmp    805d0c4 <__sprintf_chk@plt+0x137f4>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jmp    805d0c9 <__sprintf_chk@plt+0x137f9>
cmp    $0xffffff9c,%eax
je     805d24d <__sprintf_chk@plt+0x1397d>
call   8049820 <abort@plt>
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    (%eax),%eax
mov    %edx,0x48(%esp)
mov    %eax,0x24(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
setne  0x4e(%esp)
jne    805da28 <__sprintf_chk@plt+0x14158>
mov    0x2c(%ebp),%edx
test   $0x10,%dl
jne    805d658 <__sprintf_chk@plt+0x13d88>
mov    $0x50900,%ecx
mov    $0x10900,%eax
and    $0x8,%dh
mov    0x2c(%ebp),%edx
mov    0x24(%esp),%edi
cmovne %ecx,%eax
mov    $0xffffff9c,%ecx
and    $0x204,%edx
cmp    $0x200,%edx
mov    0x18(%edi),%ebx
je     805db60 <__sprintf_chk@plt+0x14290>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
test   %eax,%eax
mov    %eax,%ebx
js     805dced <__sprintf_chk@plt+0x1441d>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805f520 <fts_children+0x280>
mov    %ebx,(%esp)
call   8049780 <fdopendir@plt>
test   %eax,%eax
je     805dcda <__sprintf_chk@plt+0x1440a>
mov    0x24(%esp),%edi
cmpw   $0xb,0x3c(%edi)
mov    %eax,0xc(%edi)
je     805dd21 <__sprintf_chk@plt+0x14451>
mov    0x2c(%ebp),%eax
test   $0x1,%ah
jne    805dc20 <__sprintf_chk@plt+0x14350>
cmpl   $0x1,0x28(%ebp)
sbb    %edi,%edi
xor    %ecx,%ecx
mov    %edi,0x38(%esp)
andl   $0x186a1,0x38(%esp)
subl   $0x1,0x38(%esp)
cmpl   $0x2,0x48(%esp)
je     805d3df <__sprintf_chk@plt+0x13b0f>
mov    0x2c(%ebp),%edx
mov    $0xffffffff,%ecx
and    $0x18,%edx
cmp    $0x18,%edx
je     805dc00 <__sprintf_chk@plt+0x14330>
cmpb   $0x0,0x4e(%esp)
movb   $0x1,0x4f(%esp)
jne    805d418 <__sprintf_chk@plt+0x13b48>
test   %ecx,%ecx
setne  %dl
cmpl   $0x3,0x48(%esp)
mov    %edx,%esi
sete   %dl
mov    %edx,%edi
mov    %esi,%edx
test   %dl,%dl
jne    805d670 <__sprintf_chk@plt+0x13da0>
mov    %edi,%edx
test   %dl,%dl
movb   $0x0,0x4f(%esp)
jne    805d670 <__sprintf_chk@plt+0x13da0>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edi
movl   $0x0,0x40(%esp)
mov    0x28(%edi),%edx
mov    0x1c(%edi),%ebx
lea    -0x1(%edx),%ecx
cmpb   $0x2f,-0x1(%ebx,%edx,1)
cmove  %ecx,%edx
test   $0x4,%al
je     805d448 <__sprintf_chk@plt+0x13b78>
mov    0x14(%ebp),%eax
add    %edx,%eax
lea    0x1(%eax),%esi
mov    %esi,0x40(%esp)
movb   $0x2f,(%eax)
mov    0x20(%ebp),%esi
lea    0x1(%edx),%eax
mov    %eax,0x2c(%esp)
movb   $0x0,0x4d(%esp)
movl   $0x0,0x20(%esp)
mov    %esi,0x30(%esp)
sub    %eax,0x30(%esp)
mov    0x24(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x34(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x18(%esp)
add    $0x1,%eax
mov    %eax,0x3c(%esp)
lea    0x2c(%ebp),%eax
mov    %eax,0x44(%esp)
jmp    805d52b <__sprintf_chk@plt+0x13c5b>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    %eax,0x18(%ebx)
mov    0x28(%ebp),%eax
test   %eax,%eax
je     805d4b0 <__sprintf_chk@plt+0x13be0>
testb  $0x4,0x2d(%ebp)
je     805d790 <__sprintf_chk@plt+0x13ec0>
mov    0x2c(%ebp),%eax
xor    %ecx,%ecx
and    $0x18,%eax
cmp    $0x18,%eax
je     805d8e0 <__sprintf_chk@plt+0x14010>
mov    $0xb,%edi
xor    %eax,%eax
mov    %di,0x3c(%ebx)
movzbl 0x12(%esi),%edx
sub    $0x1,%edx
cmp    $0xb,%edx
ja     805d4df <__sprintf_chk@plt+0x13c0f>
mov    0x8064a80(,%edx,4),%eax
xor    %edx,%edx
test   %ecx,%ecx
mov    %eax,0x54(%ebx)
mov    $0x1,%eax
jne    805d4f4 <__sprintf_chk@plt+0x13c24>
mov    $0x2,%eax
xor    %edx,%edx
mov    0x34(%esp),%esi
mov    %eax,0x70(%ebx)
mov    %edx,0x74(%ebx)
movl   $0x0,0x8(%ebx)
test   %esi,%esi
je     805d7bc <__sprintf_chk@plt+0x13eec>
mov    0x20(%esp),%eax
addl   $0x1,0x1c(%esp)
mov    %ebx,0x8(%eax)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jbe    805d7d8 <__sprintf_chk@plt+0x13f08>
mov    %ebx,0x20(%esp)
mov    0x24(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     805d7d8 <__sprintf_chk@plt+0x13f08>
mov    %eax,(%esp)
call   80497b0 <readdir64@plt>
test   %eax,%eax
mov    %eax,%esi
je     805db68 <__sprintf_chk@plt+0x14298>
testb  $0x20,0x2c(%ebp)
jne    805d55c <__sprintf_chk@plt+0x13c8c>
cmpb   $0x2e,0x13(%eax)
je     805d8c0 <__sprintf_chk@plt+0x13ff0>
lea    0x13(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   8049620 <strlen@plt>
mov    %eax,%edi
lea    0xa8(%eax),%eax
mov    %eax,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805da18 <__sprintf_chk@plt+0x14148>
lea    0xa4(%eax),%edx
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
call   80493a0 <memcpy@plt>
xor    %eax,%eax
movb   $0x0,0xa4(%ebx,%edi,1)
mov    %edi,0x34(%ebx)
mov    0x14(%ebp),%edi
mov    %ax,0x3e(%ebx)
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
mov    0x18(%esp),%eax
mov    %ebp,0x2c(%ebx)
mov    %edi,0x1c(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
mov    %eax,(%esp)
call   8049620 <strlen@plt>
cmp    %eax,0x30(%esp)
mov    %eax,%ecx
jbe    805d6a8 <__sprintf_chk@plt+0x13dd8>
add    0x2c(%esp),%ecx
jb     805d718 <__sprintf_chk@plt+0x13e48>
mov    0x3c(%esp),%eax
mov    0x4(%esi),%edx
testb  $0x4,0x2c(%ebp)
mov    %eax,0x30(%ebx)
mov    0x0(%ebp),%eax
mov    %ecx,0x28(%ebx)
mov    %eax,0x4(%ebx)
mov    (%esi),%eax
mov    %edx,0xa0(%ebx)
mov    %eax,0x9c(%ebx)
je     805d498 <__sprintf_chk@plt+0x13bc8>
mov    0x1c(%ebx),%eax
mov    %eax,0x18(%ebx)
mov    0x34(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049380 <memmove@plt>
jmp    805d49f <__sprintf_chk@plt+0x13bcf>
test   $0x1,%dl
jne    805daa8 <__sprintf_chk@plt+0x141d8>
mov    $0x70900,%ecx
mov    $0x30900,%eax
jmp    805d32c <__sprintf_chk@plt+0x13a5c>
test   $0x2,%ah
jne    805dad3 <__sprintf_chk@plt+0x14203>
mov    0x24(%esp),%edx
mov    %ebx,%ecx
mov    %ebp,%eax
movl   $0x0,(%esp)
call   805cf80 <__sprintf_chk@plt+0x136b0>
test   %eax,%eax
jne    805daf8 <__sprintf_chk@plt+0x14228>
mov    0x2c(%ebp),%eax
movb   $0x1,0x4f(%esp)
jmp    805d418 <__sprintf_chk@plt+0x13b48>
lea    0x0(%esi),%esi
mov    0x20(%ebp),%edx
mov    0x2c(%esp),%ecx
lea    0x101(%ecx,%edx,1),%ecx
add    %ecx,%eax
cmp    %eax,%edx
ja     805d8f0 <__sprintf_chk@plt+0x14020>
mov    %eax,0x20(%ebp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805dd97 <__sprintf_chk@plt+0x144c7>
cmp    %eax,%edi
mov    %eax,0x14(%ebp)
je     805d6f1 <__sprintf_chk@plt+0x13e21>
testb  $0x4,0x2c(%ebp)
movb   $0x1,0x4d(%esp)
je     805d6f1 <__sprintf_chk@plt+0x13e21>
add    0x2c(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x20(%ebp),%eax
mov    %eax,0x30(%esp)
mov    0x2c(%esp),%eax
sub    %eax,0x30(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,%ecx
add    0x2c(%esp),%ecx
jae    805d604 <__sprintf_chk@plt+0x13d34>
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    0x34(%esp),%ecx
mov    0x34(%esp),%ebx
test   %ecx,%ecx
jne    805d732 <__sprintf_chk@plt+0x13e62>
jmp    805d750 <__sprintf_chk@plt+0x13e80>
xchg   %ax,%ax
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     805d744 <__sprintf_chk@plt+0x13e74>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
jne    805d730 <__sprintf_chk@plt+0x13e60>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    $0x7,%edx
movl   $0x0,0xc(%edi)
mov    %dx,0x3c(%edi)
orl    $0x4000,0x2c(%ebp)
call   80496e0 <__errno_location@plt>
movl   $0x24,(%eax)
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x44(%esp),%edx
movl   $0x0,(%esp)
call   805cc30 <__sprintf_chk@plt+0x13360>
mov    0x34(%esp),%esi
movl   $0x0,0x8(%ebx)
test   %esi,%esi
mov    %ax,0x3c(%ebx)
jne    805d50d <__sprintf_chk@plt+0x13c3d>
addl   $0x1,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
mov    %ebx,0x34(%esp)
ja     805d527 <__sprintf_chk@plt+0x13c57>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x4d(%esp)
jne    805db91 <__sprintf_chk@plt+0x142c1>
testb  $0x4,0x2c(%ebp)
je     805d806 <__sprintf_chk@plt+0x13f36>
mov    0x2c(%esp),%eax
cmp    %eax,0x20(%ebp)
je     805d7fa <__sprintf_chk@plt+0x13f2a>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    805d7ff <__sprintf_chk@plt+0x13f2f>
subl   $0x1,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x0,(%eax)
cmpb   $0x0,0x4f(%esp)
je     805d818 <__sprintf_chk@plt+0x13f48>
cmpb   $0x0,0x4e(%esp)
je     805d990 <__sprintf_chk@plt+0x140c0>
mov    0x1c(%esp),%ebx
test   %ebx,%ebx
je     805ddb7 <__sprintf_chk@plt+0x144e7>
cmpl   $0x2710,0x1c(%esp)
jbe    805da48 <__sprintf_chk@plt+0x14178>
mov    0x28(%ebp),%ebx
test   %ebx,%ebx
je     805ddf7 <__sprintf_chk@plt+0x14527>
mov    0x1c(%esp),%eax
cmp    0x24(%ebp),%eax
ja     805da70 <__sprintf_chk@plt+0x141a0>
mov    0x8(%ebp),%eax
mov    0x34(%esp),%edx
test   %edx,%edx
je     805d868 <__sprintf_chk@plt+0x13f98>
lea    0x0(%esi),%esi
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    0x8(%edx),%edx
test   %edx,%edx
jne    805d858 <__sprintf_chk@plt+0x13f88>
mov    0x8(%ebp),%eax
mov    0x1c(%esp),%esi
mov    %eax,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %esi,0x4(%esp)
call   80497c0 <qsort@plt>
mov    0x8(%ebp),%edi
lea    -0x1(%esi),%ecx
mov    (%edi),%eax
mov    %edi,%edx
xchg   %ax,%ax
mov    (%edx),%ebx
add    $0x4,%edx
mov    (%edx),%esi
sub    $0x1,%ecx
mov    %esi,0x8(%ebx)
jne    805d890 <__sprintf_chk@plt+0x13fc0>
mov    0x1c(%esp),%esi
mov    -0x4(%edi,%esi,4),%edx
movl   $0x0,0x8(%edx)
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x14(%eax)
je     805d8d1 <__sprintf_chk@plt+0x14001>
cmpw   $0x2e,0x14(%eax)
jne    805d55c <__sprintf_chk@plt+0x13c8c>
mov    0x20(%esp),%ebx
jmp    805d527 <__sprintf_chk@plt+0x13c57>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
testb  $0xfb,0x12(%esi)
setne  %cl
jmp    805d4c1 <__sprintf_chk@plt+0x13bf1>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    $0x24,%edi
call   8049390 <free@plt>
movl   $0x0,0x14(%ebp)
call   80496e0 <__errno_location@plt>
mov    %eax,%esi
movl   $0x24,(%eax)
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    0x34(%esp),%eax
test   %eax,%eax
je     805d954 <__sprintf_chk@plt+0x14084>
mov    %esi,0x18(%esp)
mov    0x34(%esp),%esi
jmp    805d932 <__sprintf_chk@plt+0x14062>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
mov    0xc(%esi),%eax
mov    0x8(%esi),%ebx
test   %eax,%eax
je     805d944 <__sprintf_chk@plt+0x14074>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %esi,(%esp)
call   8049390 <free@plt>
test   %ebx,%ebx
jne    805d930 <__sprintf_chk@plt+0x14060>
mov    0x18(%esp),%esi
mov    0x24(%esp),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,%eax
movl   $0x0,0xc(%ebx)
mov    $0x7,%ebx
mov    %bx,0x3c(%eax)
xor    %eax,%eax
orl    $0x4000,0x2c(%ebp)
mov    %edi,(%esi)
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
je     805d9a3 <__sprintf_chk@plt+0x140d3>
cmpl   $0x1,0x48(%esp)
jne    805d824 <__sprintf_chk@plt+0x13f54>
mov    0x24(%esp),%eax
mov    0x30(%eax),%edi
test   %edi,%edi
jne    805dd77 <__sprintf_chk@plt+0x144a7>
mov    %ebp,%eax
call   805ced0 <__sprintf_chk@plt+0x13600>
test   %eax,%eax
setne  %al
test   %al,%al
je     805d818 <__sprintf_chk@plt+0x13f48>
mov    0x24(%esp),%eax
mov    $0x7,%esi
mov    0x34(%esp),%ebx
mov    %si,0x3c(%eax)
orl    $0x4000,0x2c(%ebp)
test   %ebx,%ebx
jne    805d9ea <__sprintf_chk@plt+0x1411a>
jmp    805da08 <__sprintf_chk@plt+0x14138>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     805d9fc <__sprintf_chk@plt+0x1412c>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
jne    805d9e8 <__sprintf_chk@plt+0x14118>
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
xor    %ebx,%ebx
mov    %eax,%esi
mov    (%eax),%edi
jmp    805d911 <__sprintf_chk@plt+0x14041>
mov    %eax,(%esp)
call   8049360 <dirfd@plt>
test   %eax,%eax
mov    %eax,%ebx
js     805de3b <__sprintf_chk@plt+0x1456b>
mov    0x2c(%ebp),%eax
jmp    805d3ab <__sprintf_chk@plt+0x13adb>
lea    0x0(%esi),%esi
mov    0x28(%ebp),%ebx
mov    0x34(%esp),%eax
test   %ebx,%ebx
je     805d783 <__sprintf_chk@plt+0x13eb3>
cmpl   $0x1,0x1c(%esp)
ja     805d83d <__sprintf_chk@plt+0x13f6d>
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x28,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     805de19 <__sprintf_chk@plt+0x14549>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805de19 <__sprintf_chk@plt+0x14549>
mov    %eax,0x8(%ebp)
jmp    805d84d <__sprintf_chk@plt+0x13f7d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
cmpl   $0x1,0x30(%eax)
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x70900,%ecx
cmpl   $0x1,0x30(%eax)
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
jmp    805d32c <__sprintf_chk@plt+0x13a5c>
mov    %ebx,(%esp)
call   8061ca0 <fts_children+0x2a00>
test   %eax,%eax
mov    %eax,%ebx
js     805daf8 <__sprintf_chk@plt+0x14228>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   805f520 <fts_children+0x280>
jmp    805d679 <__sprintf_chk@plt+0x13da9>
xchg   %ax,%ax
mov    %esi,%eax
test   %al,%al
je     805db04 <__sprintf_chk@plt+0x14234>
mov    %edi,%eax
test   %al,%al
jne    805db4b <__sprintf_chk@plt+0x1427b>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
orw    $0x1,0x3e(%edi)
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    0x2c(%ebp),%eax
movl   $0x0,0xc(%edi)
test   $0x2,%ah
je     805db36 <__sprintf_chk@plt+0x14266>
test   %ebx,%ebx
js     805db36 <__sprintf_chk@plt+0x14266>
mov    %ebx,(%esp)
call   8049870 <close@plt>
mov    0x2c(%ebp),%eax
mov    0x24(%esp),%edi
movb   $0x0,0x4f(%esp)
movl   $0x0,0xc(%edi)
jmp    805d418 <__sprintf_chk@plt+0x13b48>
call   80496e0 <__errno_location@plt>
mov    0x24(%esp),%edi
mov    (%eax),%eax
mov    %eax,0x20(%edi)
jmp    805db04 <__sprintf_chk@plt+0x14234>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebp),%ecx
jmp    805d353 <__sprintf_chk@plt+0x13a83>
mov    0x24(%esp),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     805d7d8 <__sprintf_chk@plt+0x13f08>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
cmpb   $0x0,0x4d(%esp)
movl   $0x0,0xc(%esi)
je     805d7e3 <__sprintf_chk@plt+0x13f13>
mov    0x4(%ebp),%eax
mov    0x14(%ebp),%edx
test   %eax,%eax
je     805dbbf <__sprintf_chk@plt+0x142ef>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     805dbb5 <__sprintf_chk@plt+0x142e5>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    %edx,0x1c(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    805dba0 <__sprintf_chk@plt+0x142d0>
mov    0x34(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%eax),%ecx
test   %ecx,%ecx
js     805d7e3 <__sprintf_chk@plt+0x13f13>
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     805dbe8 <__sprintf_chk@plt+0x14318>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    0x8(%eax),%ecx
mov    %edx,0x1c(%eax)
test   %ecx,%ecx
je     805dcd0 <__sprintf_chk@plt+0x14400>
mov    %ecx,%eax
jmp    805dbc8 <__sprintf_chk@plt+0x142f8>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edi
mov    %eax,%edx
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
mov    0x58(%edi),%ecx
and    $0x2,%edx
sub    %edx,%ecx
jmp    805d3df <__sprintf_chk@plt+0x13b0f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edi
lea    0x34(%ebp),%edx
mov    %edi,%ecx
call   805ce00 <__sprintf_chk@plt+0x13530>
mov    0x1c(%ebp),%eax
lea    0x2c(%ebp),%edx
movl   $0x0,(%esp)
mov    %edi,%ecx
call   805cc30 <__sprintf_chk@plt+0x13360>
testl  $0x102,0x2c(%ebp)
je     805dd45 <__sprintf_chk@plt+0x14475>
movl   $0x14,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     805de7a <__sprintf_chk@plt+0x145aa>
mov    0x24(%esp),%edi
mov    0x48(%edi),%edx
mov    0x44(%edi),%eax
mov    %edx,0x4(%esi)
mov    0xa0(%edi),%edx
mov    %eax,(%esi)
mov    0x9c(%edi),%eax
mov    %edi,0x10(%esi)
mov    %edx,0xc(%esi)
mov    %eax,0x8(%esi)
mov    %esi,0x4(%esp)
mov    0x34(%ebp),%eax
mov    %eax,(%esp)
call   8054500 <__sprintf_chk@plt+0xac30>
cmp    %eax,%esi
mov    %eax,%edi
je     805da3a <__sprintf_chk@plt+0x1416a>
mov    %esi,(%esp)
call   8049390 <free@plt>
test   %edi,%edi
je     805de7a <__sprintf_chk@plt+0x145aa>
mov    0x10(%edi),%eax
mov    $0x2,%ecx
mov    0x24(%esp),%esi
mov    %eax,(%esi)
mov    %cx,0x3c(%esi)
jmp    805da3a <__sprintf_chk@plt+0x1416a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ecx
mov    %ecx,%eax
jmp    805dbc8 <__sprintf_chk@plt+0x142f8>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8049870 <close@plt>
mov    %edi,(%esi)
mov    0x24(%esp),%eax
cmpl   $0x3,0x48(%esp)
movl   $0x0,0xc(%eax)
jne    805da08 <__sprintf_chk@plt+0x14138>
mov    0x24(%esp),%esi
mov    $0x4,%ebx
mov    %bx,0x3c(%esi)
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%esi)
xor    %eax,%eax
jmp    805d783 <__sprintf_chk@plt+0x13eb3>
mov    0x24(%esp),%esi
lea    0x2c(%ebp),%edx
mov    0x1c(%ebp),%eax
movl   $0x0,(%esp)
mov    %esi,%ecx
call   805cc30 <__sprintf_chk@plt+0x13360>
mov    %ax,0x3c(%esi)
mov    0x2c(%ebp),%eax
jmp    805d3ab <__sprintf_chk@plt+0x13adb>
mov    0x24(%esp),%edi
mov    %edi,%eax
add    $0x44,%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebp),%eax
mov    %eax,(%esp)
call   805f660 <fts_children+0x3c0>
test   %al,%al
je     805da3a <__sprintf_chk@plt+0x1416a>
mov    %edi,%eax
mov    $0x2,%edx
mov    %edi,(%eax)
mov    %dx,0x3c(%edi)
jmp    805da3a <__sprintf_chk@plt+0x1416a>
mov    0x4(%eax),%edx
mov    $0xffffffff,%ecx
mov    %ebp,%eax
movl   $0x8064a71,(%esp)
call   805cf80 <__sprintf_chk@plt+0x136b0>
test   %eax,%eax
setne  %al
jmp    805d9be <__sprintf_chk@plt+0x140ee>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
movl   $0x0,0x14(%ebp)
call   80496e0 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    805d911 <__sprintf_chk@plt+0x14041>
cmpl   $0x3,0x48(%esp)
je     805de0a <__sprintf_chk@plt+0x1453a>
mov    0x34(%esp),%ebx
test   %ebx,%ebx
jne    805ddd2 <__sprintf_chk@plt+0x14502>
xor    %eax,%eax
jmp    805da0a <__sprintf_chk@plt+0x1413a>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     805dde4 <__sprintf_chk@plt+0x14514>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
jne    805ddd0 <__sprintf_chk@plt+0x14500>
xor    %eax,%eax
jmp    805da0a <__sprintf_chk@plt+0x1413a>
testb  $0x2,0x2d(%ebp)
jne    805de8c <__sprintf_chk@plt+0x145bc>
mov    0x34(%esp),%eax
jmp    805d783 <__sprintf_chk@plt+0x13eb3>
mov    0x24(%esp),%eax
mov    $0x6,%ecx
mov    %cx,0x3c(%eax)
jmp    805ddbe <__sprintf_chk@plt+0x144ee>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x34(%esp),%eax
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    805d783 <__sprintf_chk@plt+0x13eb3>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   8049880 <closedir@plt>
cmpl   $0x3,0x48(%esp)
movl   $0x0,0xc(%edi)
jne    805da08 <__sprintf_chk@plt+0x14138>
mov    0x24(%esp),%edi
mov    $0x4,%esi
mov    %si,0x3c(%edi)
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%edi)
xor    %eax,%eax
jmp    805da0a <__sprintf_chk@plt+0x1413a>
call   80496e0 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    805d783 <__sprintf_chk@plt+0x13eb3>
lea    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   80495e0 <fstatfs64@plt>
test   %eax,%eax
jne    805debd <__sprintf_chk@plt+0x145ed>
mov    0x5c(%esp),%eax
cmp    $0x6969,%eax
je     805da48 <__sprintf_chk@plt+0x14178>
cmp    $0x1021994,%eax
je     805da48 <__sprintf_chk@plt+0x14178>
mov    0x1c(%esp),%eax
cmp    0x24(%ebp),%eax
movl   $0x805cbc0,0x28(%ebp)
jbe    805df6f <__sprintf_chk@plt+0x1469f>
add    $0x28,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     805df74 <__sprintf_chk@plt+0x146a4>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805df74 <__sprintf_chk@plt+0x146a4>
mov    %eax,0x8(%ebp)
mov    0x34(%esp),%edx
test   %edx,%edx
je     805df14 <__sprintf_chk@plt+0x14644>
mov    0x34(%esp),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    0x8(%edx),%edx
test   %edx,%edx
jne    805df07 <__sprintf_chk@plt+0x14637>
mov    0x1c(%esp),%edi
movl   $0x805cbc0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80497c0 <qsort@plt>
mov    0x8(%ebp),%ecx
lea    -0x1(%edi),%edx
mov    (%ecx),%eax
mov    %eax,0x34(%esp)
mov    %ecx,%eax
mov    (%eax),%ebx
add    $0x4,%eax
mov    (%eax),%esi
sub    $0x1,%edx
mov    %esi,0x8(%ebx)
jne    805df45 <__sprintf_chk@plt+0x14675>
mov    0x1c(%esp),%eax
mov    -0x4(%ecx,%eax,4),%eax
movl   $0x0,0x8(%eax)
movl   $0x0,0x28(%ebp)
jmp    805de01 <__sprintf_chk@plt+0x14531>
mov    0x8(%ebp),%eax
jmp    805defb <__sprintf_chk@plt+0x1462b>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    805df63 <__sprintf_chk@plt+0x14693>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%ebx
mov    %ebx,%esi
and    $0xffffe000,%esi
jne    805e310 <fts_open+0x380>
mov    %ebx,%eax
and    $0x204,%eax
cmp    $0x204,%eax
je     805e310 <fts_open+0x380>
test   $0x12,%bl
je     805e310 <fts_open+0x380>
movl   $0x58,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805e5ee <fts_open+0x65e>
mov    %eax,%edi
mov    $0x16,%ecx
mov    %esi,%eax
test   $0x2,%bl
rep stos %eax,%es:(%edi)
mov    0x68(%esp),%eax
mov    %eax,0x28(%ebp)
jne    805e2a0 <fts_open+0x310>
mov    %ebx,0x2c(%ebp)
mov    0x60(%esp),%eax
movl   $0xffffff9c,0x1c(%ebp)
mov    (%eax),%eax
test   %eax,%eax
je     805e55a <fts_open+0x5ca>
mov    0x60(%esp),%edi
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049620 <strlen@plt>
cmp    %eax,%esi
cmovb  %eax,%esi
add    $0x4,%edi
mov    (%edi),%eax
test   %eax,%eax
jne    805e018 <fts_open+0x88>
add    $0x1,%esi
mov    $0x1000,%ax
cmp    $0x1000,%esi
cmovb  %eax,%esi
mov    0x20(%ebp),%edx
lea    0x100(%edx,%esi,1),%eax
cmp    %eax,%edx
ja     805e3f8 <fts_open+0x468>
mov    %eax,0x20(%ebp)
mov    %eax,0x4(%esp)
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     805e61a <fts_open+0x68a>
mov    %eax,0x14(%ebp)
mov    0x60(%esp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     805e540 <fts_open+0x5b0>
movl   $0xa8,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     805e2ef <fts_open+0x35f>
mov    $0x3,%edx
xor    %edi,%edi
mov    %dx,0x40(%eax)
movb   $0x0,0xa4(%eax)
movl   $0x0,0x34(%eax)
mov    %ebp,0x2c(%eax)
mov    %esi,0x1c(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0xc(%eax)
mov    %di,0x3e(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0xffffffff,0x30(%eax)
mov    0x60(%esp),%eax
mov    (%eax),%edx
mov    0x68(%esp),%esi
test   %esi,%esi
je     805e550 <fts_open+0x5c0>
mov    0x2c(%ebp),%eax
shr    $0xa,%eax
and    $0x1,%eax
mov    %al,0x37(%esp)
test   %edx,%edx
je     805e5f5 <fts_open+0x665>
xor    %edi,%edi
and    $0x1000,%ebx
lea    0x2c(%ebp),%eax
mov    %edi,0x20(%esp)
mov    %edx,%edi
mov    %ebx,0x2c(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x38(%esp)
jmp    805e183 <fts_open+0x1f3>
lea    0x0(%esi),%esi
cmpb   $0x0,0x37(%esp)
je     805e23a <fts_open+0x2aa>
mov    $0xb,%eax
mov    %ax,0x3c(%ebx)
mov    0x68(%esp),%eax
movl   $0x2,0x70(%ebx)
movl   $0x0,0x74(%ebx)
test   %eax,%eax
je     805e25f <fts_open+0x2cf>
mov    0x20(%esp),%eax
mov    %ebx,0x20(%esp)
mov    %eax,0x8(%ebx)
mov    0x24(%esp),%eax
lea    0x1(%eax),%ebx
mov    0x60(%esp),%eax
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     805e328 <fts_open+0x398>
mov    %ebx,0x24(%esp)
mov    %edi,(%esp)
call   8049620 <strlen@plt>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%esi
jne    805e1a8 <fts_open+0x218>
cmp    $0x2,%eax
jbe    805e1a8 <fts_open+0x218>
cmpb   $0x2f,-0x1(%edi,%eax,1)
je     805e288 <fts_open+0x2f8>
lea    0x0(%esi),%esi
lea    0xa8(%esi),%eax
mov    %eax,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     805e2b0 <fts_open+0x320>
lea    0xa4(%eax),%ecx
mov    %ecx,(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x28(%esp)
call   80493a0 <memcpy@plt>
mov    0x14(%ebp),%eax
movb   $0x0,0xa4(%ebx,%esi,1)
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
mov    %esi,0x34(%ebx)
mov    %eax,0x1c(%ebx)
xor    %eax,%eax
mov    %ax,0x3e(%ebx)
mov    $0x3,%eax
test   %edx,%edx
mov    %ax,0x40(%ebx)
mov    0x30(%esp),%eax
mov    %ebp,0x2c(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
movl   $0x0,0x30(%ebx)
mov    %eax,0x4(%ebx)
mov    %ecx,0x18(%ebx)
jne    805e130 <fts_open+0x1a0>
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x38(%esp),%edx
movl   $0x0,(%esp)
call   805cc30 <__sprintf_chk@plt+0x13360>
mov    %ax,0x3c(%ebx)
mov    0x68(%esp),%eax
test   %eax,%eax
jne    805e15e <fts_open+0x1ce>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%ebx)
test   %eax,%eax
je     805e530 <fts_open+0x5a0>
mov    0x3c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    %ebx,0x8(%eax)
jmp    805e169 <fts_open+0x1d9>
lea    0x0(%esi),%esi
cmpb   $0x2f,-0x2(%edi,%esi,1)
jne    805e1a8 <fts_open+0x218>
sub    $0x1,%esi
cmp    $0x1,%esi
jne    805e288 <fts_open+0x2f8>
jmp    805e1a8 <fts_open+0x218>
mov    %ebx,%eax
and    $0xfd,%ah
or     $0x4,%eax
mov    %eax,0x2c(%ebp)
jmp    805dff8 <fts_open+0x68>
mov    0x20(%esp),%edi
test   %edi,%edi
jne    805e2c2 <fts_open+0x332>
jmp    805e2e0 <fts_open+0x350>
lea    0x0(%esi),%esi
mov    %ebx,%edi
mov    0xc(%edi),%eax
mov    0x8(%edi),%ebx
test   %eax,%eax
je     805e2d4 <fts_open+0x344>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %edi,(%esp)
call   8049390 <free@plt>
test   %ebx,%ebx
jne    805e2c0 <fts_open+0x330>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esp)
call   8049390 <free@plt>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   80496e0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x1,%ebx
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
ja     805e4d8 <fts_open+0x548>
movl   $0xa8,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
je     805e631 <fts_open+0x6a1>
mov    0x14(%ebp),%edx
mov    $0x3,%ecx
mov    $0x9,%ebx
movb   $0x0,0xa4(%eax)
movl   $0x0,0x34(%eax)
mov    %ebp,0x2c(%eax)
mov    %edx,0x1c(%eax)
xor    %edx,%edx
testl  $0x102,0x2c(%ebp)
movl   $0x0,0x20(%eax)
movl   $0x0,0xc(%eax)
mov    %dx,0x3e(%eax)
mov    %cx,0x40(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
mov    %eax,0x0(%ebp)
mov    %edi,0x8(%eax)
mov    %bx,0x3c(%eax)
jne    805e420 <fts_open+0x490>
movl   $0x1c,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%ebp)
je     805e2b4 <fts_open+0x324>
mov    %eax,(%esp)
call   805f640 <fts_children+0x3a0>
mov    0x2c(%ebp),%eax
test   $0x204,%eax
je     805e465 <fts_open+0x4d5>
lea    0x38(%ebp),%eax
mov    %eax,(%esp)
movl   $0xffffffff,0x4(%esp)
call   805f790 <fts_children+0x4f0>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
movl   $0x0,0x14(%ebp)
call   80496e0 <__errno_location@plt>
movl   $0x24,(%eax)
jmp    805e2f7 <fts_open+0x367>
lea    0x0(%esi),%esi
movl   $0x8049390,0x10(%esp)
movl   $0x805cb00,0xc(%esp)
movl   $0x805cb40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   8053be0 <__sprintf_chk@plt+0xa310>
test   %eax,%eax
mov    %eax,0x34(%ebp)
je     805e2b4 <fts_open+0x324>
mov    0x2c(%ebp),%eax
test   $0x204,%eax
jne    805e3d4 <fts_open+0x444>
mov    %eax,%edx
mov    0x1c(%ebp),%ebx
and    $0x10,%edx
cmp    $0x1,%edx
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x70900,%ecx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x30900,%edx
test   $0x8,%ah
cmovne %ecx,%edx
test   $0x2,%ah
je     805e564 <fts_open+0x5d4>
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
movl   $0x8064a72,0x4(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
mov    %eax,%ebx
test   %ebx,%ebx
js     805e5e2 <fts_open+0x652>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   805f520 <fts_children+0x280>
mov    %ebx,0x18(%ebp)
jmp    805e3d4 <fts_open+0x444>
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
test   %eax,%eax
je     805e339 <fts_open+0x3a9>
cmp    %ebx,0x24(%ebp)
mov    0x28(%ebp),%edx
jae    805e57b <fts_open+0x5eb>
mov    0x24(%esp),%eax
add    $0x29,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     805e5fc <fts_open+0x66c>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
je     805e5fc <fts_open+0x66c>
mov    %eax,0x8(%ebp)
mov    0x20(%esp),%edx
jmp    805e580 <fts_open+0x5f0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x3c(%esp)
mov    %ebx,0x20(%esp)
jmp    805e169 <fts_open+0x1d9>
lea    0x0(%esi),%esi
xor    %edx,%edx
movl   $0x0,0x30(%esp)
jmp    805e0e1 <fts_open+0x151>
nop
movb   $0x1,0x37(%esp)
jmp    805e0fa <fts_open+0x16a>
mov    $0x1000,%esi
jmp    805e03e <fts_open+0xae>
mov    %edx,0x4(%esp)
movl   $0x8064a72,(%esp)
call   805f750 <fts_children+0x4b0>
mov    %eax,%ebx
jmp    805e4b4 <fts_open+0x524>
mov    0x8(%ebp),%eax
xchg   %ax,%ax
add    $0x4,%eax
mov    %edi,-0x4(%eax)
mov    0x8(%edi),%edi
test   %edi,%edi
jne    805e580 <fts_open+0x5f0>
mov    %edx,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80497c0 <qsort@plt>
mov    0x24(%esp),%edx
mov    0x8(%ebp),%ecx
test   %edx,%edx
mov    (%ecx),%edi
je     805e63d <fts_open+0x6ad>
mov    %ecx,%eax
mov    %ecx,0x20(%esp)
nop
mov    (%eax),%ebx
add    $0x4,%eax
mov    (%eax),%ecx
sub    $0x1,%edx
mov    %ecx,0x8(%ebx)
jne    805e5c0 <fts_open+0x630>
mov    0x20(%esp),%ecx
mov    (%ecx,%esi,4),%eax
movl   $0x0,0x8(%eax)
jmp    805e339 <fts_open+0x3a9>
mov    %ebx,0x18(%ebp)
orl    $0x4,0x2c(%ebp)
jmp    805e3d4 <fts_open+0x444>
xor    %eax,%eax
jmp    805e301 <fts_open+0x371>
xor    %edi,%edi
jmp    805e339 <fts_open+0x3a9>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    805e339 <fts_open+0x3a9>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
movl   $0x0,0x14(%ebp)
jmp    805e2f7 <fts_open+0x367>
movl   $0x0,0x0(%ebp)
jmp    805e2b4 <fts_open+0x324>
mov    %edi,%eax
jmp    805e5d6 <fts_open+0x646>
jmp    805e650 <fts_close>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     805e6a8 <fts_close+0x58>
mov    0x30(%eax),%edx
test   %edx,%edx
jns    805e681 <fts_close+0x31>
jmp    805e7d6 <fts_close+0x186>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
js     805e6a0 <fts_close+0x50>
mov    %ebx,%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
jne    805e670 <fts_close+0x20>
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
jns    805e67f <fts_close+0x2f>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049390 <free@plt>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    805e6ba <fts_close+0x6a>
jmp    805e6d8 <fts_close+0x88>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%edi
test   %eax,%eax
je     805e6cc <fts_close+0x7c>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %edi,%edi
jne    805e6b8 <fts_close+0x68>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    0x2c(%esi),%eax
test   $0x2,%ah
je     805e788 <fts_close+0x138>
mov    0x1c(%esi),%eax
test   %eax,%eax
js     805e718 <fts_close+0xc8>
mov    %eax,(%esp)
call   8049870 <close@plt>
test   %eax,%eax
jne    805e7ca <fts_close+0x17a>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
lea    0x38(%esi),%ebx
jmp    805e72c <fts_close+0xdc>
nop
mov    %ebx,(%esp)
call   805f810 <fts_children+0x570>
test   %eax,%eax
jns    805e778 <fts_close+0x128>
mov    %ebx,(%esp)
call   805f7c0 <fts_children+0x520>
test   %al,%al
je     805e720 <fts_close+0xd0>
mov    0x30(%esi),%eax
test   %eax,%eax
je     805e747 <fts_close+0xf7>
mov    %eax,(%esp)
call   8053ee0 <__sprintf_chk@plt+0xa610>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     805e7c0 <fts_close+0x170>
test   %eax,%eax
je     805e75f <fts_close+0x10f>
mov    %eax,(%esp)
call   8053ee0 <__sprintf_chk@plt+0xa610>
mov    %esi,(%esp)
call   8049390 <free@plt>
xor    %eax,%eax
test   %edi,%edi
jne    805e80b <fts_close+0x1bb>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,(%esp)
call   8049870 <close@plt>
jmp    805e72c <fts_close+0xdc>
lea    0x0(%esi),%esi
test   $0x4,%al
jne    805e718 <fts_close+0xc8>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049790 <fchdir@plt>
test   %eax,%eax
jne    805e7dd <fts_close+0x18d>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
test   %eax,%eax
je     805e718 <fts_close+0xc8>
call   80496e0 <__errno_location@plt>
mov    %eax,%ebx
mov    (%ebx),%edi
jmp    805e71a <fts_close+0xca>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049390 <free@plt>
jmp    805e75f <fts_close+0x10f>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
jmp    805e71a <fts_close+0xca>
mov    %eax,%ebx
jmp    805e6a0 <fts_close+0x50>
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
test   %eax,%eax
je     805e71a <fts_close+0xca>
test   %edi,%edi
jne    805e71a <fts_close+0xca>
mov    (%ebx),%edi
jmp    805e71a <fts_close+0xca>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80496e0 <__errno_location@plt>
mov    %edi,(%eax)
mov    $0xffffffff,%eax
jmp    805e771 <fts_close+0x121>
jmp    805e830 <fts_read>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    (%esi),%edi
test   %edi,%edi
je     805e96a <fts_read+0x13a>
mov    0x2c(%esi),%edx
test   $0x40,%dh
jne    805e96a <fts_read+0x13a>
movzwl 0x40(%edi),%eax
mov    $0x3,%ebp
mov    %bp,0x40(%edi)
cmp    $0x1,%ax
je     805ece0 <fts_read+0x4b0>
cmp    $0x2,%ax
je     805e978 <fts_read+0x148>
cmpw   $0x1,0x3c(%edi)
jne    805e8ad <fts_read+0x7d>
nop
jmp    805ea12 <fts_read+0x1e2>
lea    0x0(%esi),%esi
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   8049390 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     805ea50 <fts_read+0x220>
movzwl 0x40(%ebx),%eax
cmp    $0x4,%ax
jne    805ebe0 <fts_read+0x3b0>
mov    %ebx,%edi
mov    0x8(%edi),%ebx
test   %ebx,%ebx
jne    805e888 <fts_read+0x58>
mov    0x4(%edi),%ebx
mov    0xc(%ebx),%eax
test   %eax,%eax
jne    805eee8 <fts_read+0x6b8>
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   8049390 <free@plt>
cmpl   $0xffffffff,0x30(%ebx)
je     805edc8 <fts_read+0x598>
cmpw   $0xb,0x3c(%ebx)
je     805f1ee <fts_read+0x9be>
mov    0x14(%esi),%edx
mov    0x28(%ebx),%eax
movb   $0x0,(%edx,%eax,1)
mov    0x30(%ebx),%ecx
test   %ecx,%ecx
je     805ed65 <fts_read+0x535>
movzwl 0x3e(%ebx),%eax
test   $0x2,%al
je     805ed27 <fts_read+0x4f7>
mov    0x2c(%esi),%eax
test   $0x4,%al
jne    805e93f <fts_read+0x10f>
test   $0x2,%ah
je     805ef3f <fts_read+0x70f>
mov    0x1c(%esi),%eax
mov    0x24(%ebx),%edi
cmp    $0xffffff9c,%eax
jne    805f239 <fts_read+0xa09>
mov    %eax,0x4(%esp)
lea    0x38(%esi),%eax
mov    %eax,(%esp)
call   805f7d0 <fts_children+0x530>
test   %eax,%eax
js     805e93c <fts_read+0x10c>
mov    %eax,(%esp)
call   8049870 <close@plt>
mov    %edi,0x1c(%esi)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
mov    0x2c(%esi),%eax
mov    0x20(%ebx),%edx
test   %edx,%edx
je     805ecc0 <fts_read+0x490>
mov    $0x7,%edx
mov    %dx,0x3c(%ebx)
test   $0x40,%ah
je     805ea41 <fts_read+0x211>
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movzwl 0x3c(%edi),%eax
lea    -0xc(%eax),%ecx
cmp    $0x1,%cx
jbe    805ed7d <fts_read+0x54d>
sub    $0x1,%ax
jne    805e8ad <fts_read+0x7d>
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x40,%dl
je     805ec58 <fts_read+0x428>
mov    0x44(%edi),%eax
mov    0x48(%edi),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%eax
or     %eax,%ecx
je     805ec58 <fts_read+0x428>
testb  $0x2,0x3e(%edi)
jne    805eed8 <fts_read+0x6a8>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    805e9ca <fts_read+0x19a>
jmp    805e9ef <fts_read+0x1bf>
mov    %ebp,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%ebp
test   %eax,%eax
je     805e9dc <fts_read+0x1ac>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %ebp,%ebp
jne    805e9c8 <fts_read+0x198>
movl   $0x0,0x4(%esi)
mov    0x2c(%esi),%eax
mov    $0x6,%ebx
mov    %edi,%ecx
mov    %bx,0x3c(%edi)
lea    0x34(%esi),%edx
call   805ce00 <__sprintf_chk@plt+0x13530>
add    $0x8c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x4,%ax
jne    805e998 <fts_read+0x168>
jmp    805e9b5 <fts_read+0x185>
lea    0x0(%esi),%esi
lea    0x44(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   805f660 <fts_children+0x3c0>
test   %al,%al
je     805ea41 <fts_read+0x211>
mov    $0x2,%esi
mov    %ebx,(%ebx)
mov    %si,0x3c(%ebx)
mov    %ebx,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,%eax
call   805ced0 <__sprintf_chk@plt+0x13600>
test   %eax,%eax
jne    805ee45 <fts_read+0x615>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     805ede8 <fts_read+0x5b8>
test   %eax,%eax
je     805ea7b <fts_read+0x24b>
mov    %eax,(%esp)
call   8053ee0 <__sprintf_chk@plt+0xa610>
mov    0x34(%ebx),%eax
lea    0xa4(%ebx),%edi
mov    %eax,0x28(%ebx)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049380 <memmove@plt>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049760 <strrchr@plt>
test   %eax,%eax
je     805eae4 <fts_read+0x2b4>
cmp    %eax,%edi
je     805ee53 <fts_read+0x623>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   8049620 <strlen@plt>
mov    0x18(%esp),%edx
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%ebp
lea    0x1(%eax),%eax
mov    %eax,0x8(%esp)
call   8049380 <memmove@plt>
mov    %ebp,0x34(%ebx)
mov    0x14(%esi),%eax
mov    %eax,0x1c(%ebx)
mov    %eax,0x18(%ebx)
testl  $0x102,0x2c(%esi)
je     805ecff <fts_read+0x4cf>
movl   $0x8049390,0x10(%esp)
movl   $0x805cb00,0xc(%esp)
movl   $0x805cb40,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   8053be0 <__sprintf_chk@plt+0xa310>
movzwl 0x3c(%ebx),%edx
mov    %eax,0x34(%esi)
cmp    $0xb,%dx
mov    %ebx,(%esi)
je     805ec33 <fts_read+0x403>
cmp    $0x1,%dx
mov    %ebx,%eax
jne    805e96c <fts_read+0x13c>
mov    0x30(%ebx),%ebp
test   %ebp,%ebp
jne    805eb58 <fts_read+0x328>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,0xc(%esi)
mov    %edx,0x10(%esi)
testl  $0x102,0x2c(%esi)
je     805ea20 <fts_read+0x1f0>
movl   $0x14,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     805edb8 <fts_read+0x588>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,(%edi)
mov    0x9c(%ebx),%eax
mov    %edx,0x4(%edi)
mov    0xa0(%ebx),%edx
mov    %ebx,0x10(%edi)
mov    %eax,0x8(%edi)
mov    %edx,0xc(%edi)
mov    %edi,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8054500 <__sprintf_chk@plt+0xac30>
cmp    %eax,%edi
mov    %eax,%esi
je     805ea41 <fts_read+0x211>
mov    %edi,(%esp)
call   8049390 <free@plt>
test   %esi,%esi
je     805edb8 <fts_read+0x588>
mov    0x10(%esi),%eax
mov    $0x2,%edi
mov    %di,0x3c(%ebx)
mov    %eax,(%ebx)
mov    %ebx,%eax
jmp    805ea43 <fts_read+0x213>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%ax
je     805ef13 <fts_read+0x6e3>
mov    0x4(%ebx),%ecx
mov    0x28(%ecx),%edx
mov    0x1c(%ecx),%ecx
lea    -0x1(%edx),%eax
cmpb   $0x2f,-0x1(%ecx,%edx,1)
cmovne %edx,%eax
add    0x14(%esi),%eax
movb   $0x2f,(%eax)
mov    0x34(%ebx),%ecx
add    $0x1,%eax
mov    %eax,(%esp)
lea    0x1(%ecx),%edx
mov    %edx,0x8(%esp)
lea    0xa4(%ebx),%edx
mov    %edx,0x4(%esp)
call   8049380 <memmove@plt>
movzwl 0x3c(%ebx),%edx
mov    %ebx,(%esi)
cmp    $0xb,%dx
jne    805eb39 <fts_read+0x309>
mov    0x70(%ebx),%edx
mov    0x74(%ebx),%eax
mov    %edx,%ecx
xor    $0x2,%ecx
or     %eax,%ecx
je     805ee65 <fts_read+0x635>
xor    $0x1,%edx
or     %eax,%edx
jne    805f1ee <fts_read+0x9be>
mov    %ebx,%eax
jmp    805ea43 <fts_read+0x213>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     805ee27 <fts_read+0x5f7>
test   $0x20,%dh
jne    805edf5 <fts_read+0x5c5>
mov    0x18(%edi),%eax
mov    $0xffffffff,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   805cf80 <__sprintf_chk@plt+0x136b0>
test   %eax,%eax
je     805ed75 <fts_read+0x545>
call   80496e0 <__errno_location@plt>
mov    0x4(%esi),%edx
mov    %edx,%ebx
mov    (%eax),%eax
orw    $0x1,0x3e(%edi)
test   %edx,%edx
mov    %eax,0x20(%edi)
je     805ecb2 <fts_read+0x482>
mov    0x4(%ebx),%eax
mov    0x18(%eax),%eax
mov    %eax,0x18(%ebx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    805eca0 <fts_read+0x470>
mov    %edx,%ebx
movl   $0x0,0x4(%esi)
jmp    805ebea <fts_read+0x3ba>
xchg   %ax,%ax
mov    $0x6,%ecx
mov    %cx,0x3c(%ebx)
lea    0x34(%esi),%edx
mov    %ebx,%ecx
call   805ce00 <__sprintf_chk@plt+0x13530>
mov    0x2c(%esi),%eax
jmp    805e961 <fts_read+0x131>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x0,(%esp)
call   805cc30 <__sprintf_chk@plt+0x13360>
mov    %ax,0x3c(%edi)
mov    %edi,%eax
jmp    805e96c <fts_read+0x13c>
movl   $0x1c,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%esi)
je     805ec23 <fts_read+0x3f3>
mov    %eax,(%esp)
call   805f640 <fts_children+0x3a0>
movzwl 0x3c(%ebx),%edx
jmp    805eb2d <fts_read+0x2fd>
test   $0x1,%al
jne    805e94a <fts_read+0x11a>
mov    0x4(%ebx),%edx
mov    $0xffffffff,%ecx
mov    %esi,%eax
movl   $0x8064a71,(%esp)
call   805cf80 <__sprintf_chk@plt+0x136b0>
test   %eax,%eax
je     805e94a <fts_read+0x11a>
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
mov    0x2c(%esi),%eax
or     $0x40,%ah
mov    %eax,0x2c(%esi)
jmp    805e94d <fts_read+0x11d>
mov    %esi,%eax
call   805ced0 <__sprintf_chk@plt+0x13600>
test   %eax,%eax
jne    805ed4d <fts_read+0x51d>
jmp    805e94a <fts_read+0x11a>
mov    0x4(%esi),%ebx
jmp    805ecb2 <fts_read+0x482>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x1,(%esp)
mov    %edi,%ebx
call   805cc30 <__sprintf_chk@plt+0x13360>
cmp    $0x1,%ax
mov    %eax,%edx
mov    %ax,0x3c(%edi)
jne    805eb2d <fts_read+0x2fd>
mov    0x2c(%esi),%ecx
test   $0x4,%cl
je     805f093 <fts_read+0x863>
mov    %edi,(%esi)
mov    %edi,%ebx
jmp    805eb39 <fts_read+0x309>
call   80496e0 <__errno_location@plt>
movl   $0xc,(%eax)
jmp    805e96a <fts_read+0x13a>
mov    %ebx,(%esp)
call   8049390 <free@plt>
call   80496e0 <__errno_location@plt>
movl   $0x0,(%eax)
xor    %eax,%eax
movl   $0x0,(%esi)
jmp    805e96c <fts_read+0x13c>
mov    %eax,(%esp)
call   8049390 <free@plt>
jmp    805ea7b <fts_read+0x24b>
and    $0xdf,%dh
mov    %edx,0x2c(%esi)
jmp    805ee02 <fts_read+0x5d2>
lea    0x0(%esi),%esi
mov    %ebp,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%ebp
test   %eax,%eax
je     805ee14 <fts_read+0x5e4>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebx,(%esp)
call   8049390 <free@plt>
test   %ebp,%ebp
jne    805ee00 <fts_read+0x5d0>
movl   $0x0,0x4(%esi)
mov    $0x3,%edx
mov    %esi,%eax
call   805d2f0 <__sprintf_chk@plt+0x13a20>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     805f05f <fts_read+0x82f>
mov    %eax,%ebx
jmp    805ecb2 <fts_read+0x482>
orl    $0x4000,0x2c(%esi)
xor    %eax,%eax
jmp    805e96c <fts_read+0x13c>
cmpb   $0x0,0xa5(%ebx)
jne    805eab9 <fts_read+0x289>
jmp    805eae4 <fts_read+0x2b4>
mov    0x30(%ebx),%eax
mov    0x4(%ebx),%edi
test   %eax,%eax
jle    805ee85 <fts_read+0x655>
mov    0x38(%edi),%eax
test   %eax,%eax
jne    805ee85 <fts_read+0x655>
mov    0x2c(%esi),%eax
and    $0x18,%eax
cmp    $0x18,%eax
je     805f004 <fts_read+0x7d4>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x0,(%esp)
call   805cc30 <__sprintf_chk@plt+0x13360>
mov    %eax,%edx
mov    %ax,0x3c(%ebx)
mov    0x54(%ebx),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    805eb39 <fts_read+0x309>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     805eb39 <fts_read+0x309>
mov    0x38(%edi),%eax
test   %eax,%eax
je     805eb39 <fts_read+0x309>
sub    $0x1,%eax
mov    %eax,0x38(%edi)
jmp    805eb39 <fts_read+0x309>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
jmp    805e9bf <fts_read+0x18f>
mov    0x28(%ebx),%eax
mov    0x14(%esi),%edx
mov    %ebx,(%esi)
movb   $0x0,(%edx,%eax,1)
mov    $0x3,%edx
mov    %esi,%eax
call   805d2f0 <__sprintf_chk@plt+0x13a20>
test   %eax,%eax
mov    %eax,%ebx
je     805ef78 <fts_read+0x748>
mov    %edi,(%esp)
call   8049390 <free@plt>
jmp    805ebea <fts_read+0x3ba>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x1,(%esp)
call   805cc30 <__sprintf_chk@plt+0x13360>
cmp    $0x1,%ax
mov    %ax,0x3c(%ebx)
je     805ef8a <fts_read+0x75a>
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
jmp    805ebea <fts_read+0x3ba>
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049790 <fchdir@plt>
test   %eax,%eax
je     805e93f <fts_read+0x10f>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebp
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049870 <close@plt>
mov    %edi,0x0(%ebp)
mov    %edi,0x20(%ebx)
orl    $0x4000,0x2c(%esi)
jmp    805e93f <fts_read+0x10f>
testb  $0x40,0x2d(%esi)
jne    805e96a <fts_read+0x13a>
mov    0x4(%edi),%ebx
jmp    805e8c2 <fts_read+0x92>
mov    0x2c(%esi),%ecx
test   $0x4,%cl
jne    805ef31 <fts_read+0x701>
mov    %ecx,%eax
mov    0x1c(%esi),%edi
and    $0x10,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
test   $0x8,%ch
cmovne %edx,%eax
and    $0x2,%ch
je     805f122 <fts_read+0x8f2>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x8064a72,0x4(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
mov    %eax,%edi
test   %edi,%edi
js     805f107 <fts_read+0x8d7>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f520 <fts_children+0x280>
mov    %edi,0x24(%ebx)
orw    $0x2,0x3e(%ebx)
jmp    805ef31 <fts_read+0x701>
mov    0x2c(%edi),%edx
testb  $0x2,0x2d(%edx)
mov    0x30(%edx),%ebp
je     805ee85 <fts_read+0x655>
test   %ebp,%ebp
je     805f1f3 <fts_read+0x9c3>
mov    0x44(%edi),%eax
mov    %edx,0x18(%esp)
mov    0x48(%edi),%edx
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edx,0x24(%esp)
call   8053960 <__sprintf_chk@plt+0xa090>
mov    0x18(%esp),%edx
test   %eax,%eax
je     805f170 <fts_read+0x940>
movzbl 0x8(%eax),%edx
test   %dl,%dl
je     805ee85 <fts_read+0x655>
movzwl 0x3c(%ebx),%edx
jmp    805eb39 <fts_read+0x309>
mov    0x2c(%esi),%eax
test   $0x40,%ah
jne    805e96a <fts_read+0x13a>
mov    0x20(%edi),%ecx
test   %ecx,%ecx
je     805f082 <fts_read+0x852>
cmpw   $0x4,0x3c(%edi)
je     805f082 <fts_read+0x852>
mov    $0x7,%edx
mov    %dx,0x3c(%edi)
lea    0x34(%esi),%edx
mov    %edi,%ecx
call   805ce00 <__sprintf_chk@plt+0x13530>
mov    %edi,%eax
jmp    805e96c <fts_read+0x13c>
mov    %ecx,%eax
mov    0x1c(%esi),%ebx
and    $0x10,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
test   $0x8,%ch
cmovne %edx,%eax
and    $0x2,%ch
je     805f159 <fts_read+0x929>
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x8064a72,0x4(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
mov    %eax,%ebx
test   %ebx,%ebx
js     805f139 <fts_read+0x909>
mov    %ebx,(%esp)
movl   $0x1,0x4(%esp)
call   805f520 <fts_children+0x280>
movzwl 0x3c(%edi),%edx
mov    %ebx,0x24(%edi)
mov    %edi,%ebx
orw    $0x2,0x3e(%edi)
jmp    805eb2d <fts_read+0x2fd>
mov    %edi,0x24(%ebx)
mov    $0x7,%edi
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
mov    %di,0x3c(%ebx)
mov    %eax,0x20(%ebx)
jmp    805ef31 <fts_read+0x701>
mov    %eax,0x4(%esp)
movl   $0x8064a72,(%esp)
call   805f750 <fts_children+0x4b0>
mov    %eax,%edi
jmp    805efdf <fts_read+0x7af>
mov    %ebx,0x24(%edi)
mov    $0x7,%ebp
call   80496e0 <__errno_location@plt>
mov    $0x7,%edx
mov    (%eax),%eax
mov    %bp,0x3c(%edi)
mov    %eax,0x20(%edi)
jmp    805edaf <fts_read+0x57f>
mov    %eax,0x4(%esp)
movl   $0x8064a72,(%esp)
call   805f750 <fts_children+0x4b0>
mov    %eax,%ebx
jmp    805f0e0 <fts_read+0x8b0>
movl   $0xc,(%esp)
mov    %edx,0x1c(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     805ee85 <fts_read+0x655>
mov    0x1c(%esp),%edx
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%edx),%eax
mov    %eax,(%esp)
call   80495e0 <fstatfs64@plt>
xor    %edx,%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    805f1b8 <fts_read+0x988>
cmpl   $0x52654973,0x2c(%esp)
sete   %dl
mov    %dl,0x8(%ecx)
mov    0x44(%edi),%eax
mov    %edx,0x1c(%esp)
mov    0x48(%edi),%edx
mov    %ecx,0x18(%esp)
mov    %eax,(%ecx)
mov    %edx,0x4(%ecx)
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   8054500 <__sprintf_chk@plt+0xac30>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805f243 <fts_read+0xa13>
cmp    %eax,%ecx
je     805f04e <fts_read+0x81e>
call   8049820 <abort@plt>
movl   $0x8049390,0x10(%esp)
movl   $0x805cba0,0xc(%esp)
movl   $0x805cb70,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
mov    %edx,0x18(%esp)
call   8053be0 <__sprintf_chk@plt+0xa310>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,0x30(%edx)
jne    805f01c <fts_read+0x7ec>
jmp    805ee85 <fts_read+0x655>
cmp    %eax,%edi
jne    805e921 <fts_read+0xf1>
jmp    805f1ee <fts_read+0x9be>
mov    %ecx,(%esp)
call   8049390 <free@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805ee85 <fts_read+0x655>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x18(%esp),%eax
cmp    $0x4,%eax
ja     805f280 <fts_set+0x20>
mov    0x14(%esp),%edx
mov    %ax,0x40(%edx)
xor    %eax,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
testl  $0xffffdfff,0x34(%esp)
mov    0x30(%esp),%esi
jne    805f470 <fts_children+0x1d0>
call   80496e0 <__errno_location@plt>
mov    (%esi),%edi
movl   $0x0,(%eax)
testb  $0x40,0x2d(%esi)
mov    %eax,0xc(%esp)
jne    805f370 <fts_children+0xd0>
movzwl 0x3c(%edi),%eax
cmp    $0x9,%ax
je     805f460 <fts_children+0x1c0>
cmp    $0x1,%ax
jne    805f370 <fts_children+0xd0>
mov    0x4(%esi),%ebp
test   %ebp,%ebp
jne    805f332 <fts_children+0x92>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebx
je     805f380 <fts_children+0xe0>
mov    0x30(%edi),%eax
test   %eax,%eax
jne    805f31c <fts_children+0x7c>
mov    0x18(%edi),%eax
cmpb   $0x2f,(%eax)
je     805f31c <fts_children+0x7c>
mov    0x2c(%esi),%eax
test   $0x4,%al
je     805f3a0 <fts_children+0x100>
mov    %ebx,%edx
mov    %esi,%eax
call   805d2f0 <__sprintf_chk@plt+0x13a20>
mov    %eax,0x4(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,%ebp
mov    0xc(%ebp),%eax
mov    0x8(%ebp),%ebx
test   %eax,%eax
je     805f344 <fts_children+0xa4>
mov    %eax,(%esp)
call   8049880 <closedir@plt>
mov    %ebp,(%esp)
call   8049390 <free@plt>
test   %ebx,%ebx
jne    805f330 <fts_children+0x90>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebx
jne    805f302 <fts_children+0x62>
jmp    805f380 <fts_children+0xe0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%edi),%eax
mov    $0x2,%ebx
orl    $0x2000,0x2c(%esi)
test   %eax,%eax
je     805f309 <fts_children+0x69>
jmp    805f31c <fts_children+0x7c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
mov    0x1c(%esi),%edi
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x30900,%ecx
test   $0x8,%ah
cmovne %edx,%ecx
test   $0x2,%ah
je     805f488 <fts_children+0x1e8>
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
movl   $0x8064a72,0x4(%esp)
call   8055270 <__sprintf_chk@plt+0xb9a0>
mov    %eax,%edi
test   %edi,%edi
js     805f368 <fts_children+0xc8>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   805f520 <fts_children+0x280>
mov    %ebx,%edx
mov    %esi,%eax
call   805d2f0 <__sprintf_chk@plt+0x13a20>
testb  $0x2,0x2d(%esi)
mov    %eax,0x4(%esi)
jne    805f438 <fts_children+0x198>
mov    %edi,(%esp)
call   8049790 <fchdir@plt>
test   %eax,%eax
jne    805f49f <fts_children+0x1ff>
mov    %edi,(%esp)
call   8049870 <close@plt>
mov    0x4(%esi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esi),%eax
cmp    %eax,%edi
je     805f4b6 <fts_children+0x216>
mov    %eax,0x4(%esp)
lea    0x38(%esi),%eax
mov    %eax,(%esp)
call   805f7d0 <fts_children+0x530>
test   %eax,%eax
js     805f45a <fts_children+0x1ba>
mov    %eax,(%esp)
call   8049870 <close@plt>
mov    %edi,0x1c(%esi)
jmp    805f42d <fts_children+0x18d>
nop
mov    0x8(%edi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   80496e0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
movl   $0x8064a72,(%esp)
call   805f750 <fts_children+0x4b0>
mov    %eax,%edi
jmp    805f3ef <fts_children+0x14f>
mov    0xc(%esp),%esi
mov    (%esi),%ebx
mov    %edi,(%esp)
call   8049870 <close@plt>
xor    %eax,%eax
mov    %ebx,(%esi)
jmp    805f328 <fts_children+0x88>
cmp    $0xffffff9c,%eax
je     805f43f <fts_children+0x19f>
call   8049820 <abort@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x18(%esp),%ecx
cmp    %ecx,%ebx
jne    805f4e2 <fts_children+0x242>
jmp    805f515 <fts_children+0x275>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ecx
cmp    %dl,%al
jne    805f506 <fts_children+0x266>
movzbl (%ebx),%eax
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
movzbl (%ecx),%edx
lea    0x20(%eax),%esi
cmova  %eax,%esi
mov    %esi,%eax
lea    -0x41(%edx),%ebp
cmp    $0x19,%ebp
lea    0x20(%edx),%edi
cmovbe %edi,%edx
test   %al,%al
jne    805f4d8 <fts_children+0x238>
mov    %esi,%eax
movzbl %dl,%edx
movzbl %al,%eax
pop    %ebx
sub    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8061cd0 <fts_children+0x2a30>
test   %eax,%eax
mov    %eax,%edx
js     805f588 <fts_children+0x2e8>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     805f580 <fts_children+0x2e0>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   8061cd0 <fts_children+0x2a30>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    805f580 <fts_children+0x2e0>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   8061cd0 <fts_children+0x2a30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049500 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   80493d0 <fclose@plt>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    805f600 <fts_children+0x360>
test   %dl,%dl
je     805f5f7 <fts_children+0x357>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     805f620 <fts_children+0x380>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    805f5f7 <fts_children+0x357>
call   80496e0 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   80496e0 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x95f616,0x18(%eax)
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
cmpl   $0x95f616,0x18(%esi)
jne    805f71d <fts_children+0x47d>
mov    0x14(%esi),%edx
mov    0x10(%esi),%eax
mov    %edx,%ebx
or     %eax,%ebx
je     805f6d0 <fts_children+0x430>
mov    0x58(%edi),%ebx
mov    %ebx,%ecx
mov    %ebx,0x18(%esp)
mov    0x5c(%edi),%ebx
xor    (%esi),%ecx
mov    %ebx,0x1c(%esp)
xor    0x4(%esi),%ebx
or     %ecx,%ebx
je     805f700 <fts_children+0x460>
mov    %eax,%ecx
mov    %edx,%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,%ebp
and    %eax,%ebp
and    %ebx,%edx
xor    %eax,%eax
or     %ebp,%edx
mov    %ecx,0x10(%esi)
mov    %ebx,0x14(%esi)
jne    805f6f6 <fts_children+0x456>
mov    %ebx,%eax
or     %ecx,%eax
je     805f710 <fts_children+0x470>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%ecx
jmp    805f6e4 <fts_children+0x444>
lea    0x0(%esi),%esi
mov    0x58(%edi),%ebx
mov    0x5c(%edi),%ecx
movl   $0x1,0x10(%esi)
movl   $0x0,0x14(%esi)
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %ebx,(%esi)
mov    %ecx,0x4(%esi)
mov    %eax,0x8(%esi)
xor    %eax,%eax
mov    %edx,0xc(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%edi),%ecx
mov    0x4(%edi),%ebx
xor    0xc(%esi),%ebx
xor    0x8(%esi),%ecx
or     %ecx,%ebx
jne    805f6a1 <fts_children+0x401>
nop
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x8064ad6,0xc(%esp)
movl   $0x3c,0x8(%esp)
movl   $0x8064ab0,0x4(%esp)
movl   $0x8064abe,(%esp)
call   80498a0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049330 <open64@plt>
mov    %eax,(%esp)
call   8059a30 <__sprintf_chk@plt+0x10160>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movb   $0x1,0x1c(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    %edx,(%eax)
mov    %edx,0x4(%eax)
mov    %edx,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x1c(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
mov    0x14(%esp),%edi
movzbl 0x1c(%edx),%eax
mov    0x14(%edx),%ecx
xor    $0x1,%eax
movzbl %al,%esi
add    %esi,%ecx
and    $0x3,%ecx
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %edi,(%ebx)
mov    0x18(%edx),%ebx
mov    %ecx,0x14(%edx)
cmp    %ecx,%ebx
jne    805f806 <fts_children+0x566>
add    %esi,%ebx
and    $0x3,%ebx
mov    %ebx,0x18(%edx)
movb   $0x0,0x1c(%edx)
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%edx
cmpb   $0x0,0x1c(%edx)
jne    805f84a <fts_children+0x5aa>
mov    0x14(%edx),%ecx
mov    0x10(%edx),%esi
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %esi,(%ebx)
cmp    0x18(%edx),%ecx
je     805f840 <fts_children+0x5a0>
add    $0x3,%ecx
and    $0x3,%ecx
mov    %ecx,0x14(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
movb   $0x1,0x1c(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
call   8049820 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049740 <nl_langinfo@plt>
mov    0x8069670,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x8062531,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     805f91c <fts_children+0x67c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     805f8e7 <fts_children+0x647>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    805f8c0 <fts_children+0x620>
nop
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     805f918 <fts_children+0x678>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8049320 <strcmp@plt>
test   %eax,%eax
je     805f8db <fts_children+0x63b>
cmp    $0x2a,%bl
jne    805f8a0 <fts_children+0x600>
cmpb   $0x0,0x1(%ebp)
jne    805f8a0 <fts_children+0x600>
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x8064ae8,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    805fbdd <fts_children+0x93d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    805f8e7 <fts_children+0x647>
movl   $0x8064aee,(%esp)
call   8049550 <getenv@plt>
test   %eax,%eax
je     805f935 <fts_children+0x695>
cmpb   $0x0,(%eax)
jne    805fb43 <fts_children+0x8a3>
mov    $0x4,%eax
mov    $0x5,%esi
mov    $0x8064ae2,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     805fb34 <fts_children+0x894>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805fbd3 <fts_children+0x933>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80493a0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     805f99c <fts_children+0x6fc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8049330 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     805fb18 <fts_children+0x878>
movl   $0x80627ef,0x4(%esp)
mov    %eax,(%esp)
call   80495b0 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     805fb10 <fts_children+0x870>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    805faf6 <fts_children+0x856>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     805fa00 <fts_children+0x760>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    805fa00 <fts_children+0x760>
cmp    $0x23,%eax
je     805fb6d <fts_children+0x8cd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80496b0 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8064afe,0x4(%esp)
mov    %esi,(%esp)
call   8049610 <fscanf@plt>
cmp    $0x1,%eax
jle    805fb90 <fts_children+0x8f0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    805fbae <fts_children+0x90e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049570 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     805fbe2 <fts_children+0x942>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   80494f0 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   80494f0 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     805fa0c <fts_children+0x76c>
mov    %esi,(%esp)
call   8049730 <__uflow@plt>
cmp    $0xffffffff,%eax
je     805fb90 <fts_children+0x8f0>
jmp    805fa15 <fts_children+0x775>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049870 <close@plt>
mov    $0x8062531,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049390 <free@plt>
mov    %ebp,0x8069670
jmp    805f88f <fts_children+0x5ef>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    805f95b <fts_children+0x6bb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049620 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     805fb34 <fts_children+0x894>
lea    -0x1(%eax),%eax
jmp    805f944 <fts_children+0x6a4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     805fb87 <fts_children+0x8e7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    805fbfc <fts_children+0x95c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    805fb68 <fts_children+0x8c8>
cmp    $0xffffffff,%eax
jne    805fa00 <fts_children+0x760>
mov    %esi,(%esp)
call   80493d0 <fclose@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     805fb18 <fts_children+0x878>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    805fb1d <fts_children+0x87d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049560 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    805faac <fts_children+0x80c>
mov    $0x8062531,%ebp
jmp    805fb29 <fts_children+0x889>
call   8049420 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x8062531,%ebp
call   8049390 <free@plt>
mov    %esi,(%esp)
call   80493d0 <fclose@plt>
jmp    805fb1d <fts_children+0x87d>
mov    %esi,(%esp)
call   8049730 <__uflow@plt>
jmp    805fb82 <fts_children+0x8e2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8(%ebp),%eax
mov    %ecx,-0x30(%ebp)
mov    %eax,-0x34(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmp    $0x3fffffff,%ecx
jbe    805fc51 <fts_children+0x9b1>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    805fd5e <fts_children+0xabe>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%eax
shl    $0x2,%eax
cmp    $0xfb7,%eax
jbe    805fcf9 <fts_children+0xa59>
mov    %eax,(%esp)
mov    %edx,-0x2c(%ebp)
call   8061df0 <fts_children+0x2b50>
mov    -0x2c(%ebp),%edx
test   %eax,%eax
je     805fc37 <fts_children+0x997>
xor    %ecx,%ecx
mov    $0x2,%esi
cmpl   $0x2,-0x30(%ebp)
movl   $0x1,0x4(%eax)
jbe    805fcbb <fts_children+0xa1b>
mov    %edi,-0x2c(%ebp)
mov    -0x30(%ebp),%edi
lea    0x0(%esi),%esi
movzbl -0x1(%edx,%esi,1),%ebx
cmp    %bl,(%edx,%ecx,1)
jne    805fca8 <fts_children+0xa08>
jmp    805fd20 <fts_children+0xa80>
nop
sub    (%eax,%ecx,4),%ecx
cmp    %bl,(%edx,%ecx,1)
je     805fd20 <fts_children+0xa80>
test   %ecx,%ecx
jne    805fca0 <fts_children+0xa00>
mov    %esi,(%eax,%esi,4)
xor    %ecx,%ecx
add    $0x1,%esi
cmp    %edi,%esi
jne    805fc90 <fts_children+0x9f0>
mov    -0x2c(%ebp),%edi
mov    -0x34(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,(%esi)
movzbl (%edi),%ebx
mov    %edi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     805fce7 <fts_children+0xa47>
cmp    %bl,(%edx,%ecx,1)
je     805fd30 <fts_children+0xa90>
test   %ecx,%ecx
je     805fd10 <fts_children+0xa70>
add    (%eax,%ecx,4),%edi
sub    (%eax,%ecx,4),%ecx
test   %bl,%bl
jne    805fcd4 <fts_children+0xa34>
mov    %eax,(%esp)
call   8061e50 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    805fc39 <fts_children+0x999>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x13(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
jmp    805fc6f <fts_children+0x9cf>
movzbl 0x1(%esi),%ebx
add    $0x1,%edi
add    $0x1,%esi
jmp    805fcd0 <fts_children+0xa30>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
mov    %esi,%ebx
sub    %ecx,%ebx
mov    %ebx,(%eax,%esi,4)
jmp    805fcb1 <fts_children+0xa11>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,-0x30(%ebp)
lea    0x1(%esi),%ebx
mov    %ebx,-0x2c(%ebp)
je     805fd47 <fts_children+0xaa7>
movzbl 0x1(%esi),%ebx
mov    -0x2c(%ebp),%esi
jmp    805fcd0 <fts_children+0xa30>
mov    -0x34(%ebp),%esi
mov    %edi,(%esi)
mov    %eax,(%esp)
call   8061e50 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    805fc39 <fts_children+0x999>
call   8049420 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0xec,%esp
mov    %edx,(%esp)
mov    %eax,-0xe8(%ebp)
mov    %ecx,-0xe4(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   8061ec0 <fts_children+0x2c20>
cmp    $0x5d1745d,%eax
mov    %eax,-0xdc(%ebp)
jbe    805fdc4 <fts_children+0xb24>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    80606e7 <fts_children+0x1447>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
imul   $0x2c,-0xdc(%ebp),%eax
cmp    $0xfb7,%eax
jbe    80600cf <fts_children+0xe2f>
mov    %eax,(%esp)
call   8061df0 <fts_children+0x2b50>
mov    %eax,-0xd8(%ebp)
mov    %eax,%edi
test   %edi,%edi
je     805fdaa <fts_children+0xb0a>
mov    -0xdc(%ebp),%eax
mov    %esi,%edx
mov    %esi,-0xb4(%ebp)
lea    0x10(%edi),%ebx
movb   $0x0,-0xc4(%ebp)
lea    -0xc0(%ebp),%esi
movl   $0x0,-0xc0(%ebp)
00
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
mov    %eax,-0xd4(%ebp)
movl   $0x0,-0xbc(%ebp)
00
movb   $0x0,-0xb8(%ebp)
nop
cmpb   $0x0,-0xc4(%ebp)
jne    806012f <fts_children+0xe8f>
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8060118 <fts_children+0xe78>
movl   $0x1,-0xb0(%ebp)
00
movsbl (%edx),%eax
movb   $0x1,-0xac(%ebp)
mov    %eax,-0xa8(%ebp)
mov    -0xa8(%ebp),%eax
movb   $0x1,-0xb8(%ebp)
test   %eax,%eax
jne    80603f0 <fts_children+0x1150>
mov    -0xd4(%ebp),%eax
cmpl   $0x2,-0xdc(%ebp)
movl   $0x1,0x4(%eax)
jbe    805ff55 <fts_children+0xcb5>
mov    -0xd8(%ebp),%eax
mov    $0x2,%esi
xor    %ebx,%ebx
mov    %esi,-0xcc(%ebp)
mov    %eax,%edi
mov    %eax,%esi
cmpb   $0x0,0x30(%edi)
jne    806007a <fts_children+0xdda>
mov    0x2c(%edi),%edx
mov    %edi,%ecx
mov    %esi,%edi
mov    %edx,%esi
mov    -0xd4(%ebp),%edx
jmp    805fee3 <fts_children+0xc43>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8060489 <fts_children+0x11e9>
sub    (%edx,%ebx,4),%ebx
lea    (%ebx,%ebx,4),%eax
lea    (%edi,%eax,8),%eax
cmp    0x4(%eax),%esi
jne    805fed8 <fts_children+0xc38>
mov    %esi,0x8(%esp)
mov    (%eax),%eax
mov    %edx,-0xe0(%ebp)
mov    %ecx,-0xd0(%ebp)
mov    %eax,0x4(%esp)
mov    0x28(%ecx),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
mov    -0xd0(%ebp),%ecx
mov    -0xe0(%ebp),%edx
test   %eax,%eax
jne    805fed8 <fts_children+0xc38>
mov    %edi,%esi
mov    %ecx,%edi
mov    -0xcc(%ebp),%ecx
add    $0x1,%ebx
mov    -0xd4(%ebp),%edx
mov    %ecx,%eax
sub    %ebx,%eax
mov    %eax,(%edx,%ecx,4)
addl   $0x1,-0xcc(%ebp)
add    $0x28,%edi
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xcc(%ebp)
jne    805feb8 <fts_children+0xc18>
mov    -0xe4(%ebp),%eax
xor    %ebx,%ebx
movb   $0x0,-0x8c(%ebp)
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,(%eax)
mov    -0xe8(%ebp),%eax
movb   $0x0,-0x80(%ebp)
movb   $0x0,-0x54(%ebp)
movl   $0x0,-0x50(%ebp)
mov    %eax,-0x7c(%ebp)
mov    %eax,-0x44(%ebp)
movl   $0x0,-0x4c(%ebp)
movb   $0x0,-0x48(%ebp)
movl   $0x0,-0xd0(%ebp)
00
xchg   %ax,%ax
test   %bl,%bl
je     806000f <fts_children+0xd6f>
movzbl -0x3c(%ebp),%ebx
mov    -0xd0(%ebp),%eax
test   %bl,%bl
mov    -0xd8(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
jne    8060593 <fts_children+0x12f3>
mov    0x4(%eax),%ecx
xor    %edx,%edx
cmp    -0x40(%ebp),%ecx
je     80600b0 <fts_children+0xe10>
mov    %edx,%eax
test   %al,%al
je     80601c8 <fts_children+0xf28>
mov    -0x40(%ebp),%eax
add    %eax,-0x44(%ebp)
addl   $0x1,-0xd0(%ebp)
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd0(%ebp)
movb   $0x0,-0x48(%ebp)
je     80600ee <fts_children+0xe4e>
xor    %ebx,%ebx
cmpb   $0x0,-0x54(%ebp)
jne    806035f <fts_children+0x10bf>
mov    -0x44(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8060348 <fts_children+0x10a8>
movl   $0x1,-0x40(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x3c(%ebp)
mov    %eax,-0x38(%ebp)
movb   $0x1,-0x48(%ebp)
jmp    805ffb8 <fts_children+0xd18>
xchg   %ax,%ax
mov    0xc(%eax),%eax
cmp    %eax,0x34(%edi)
sete   %dl
test   %dl,%dl
jne    805ff23 <fts_children+0xc83>
test   %ebx,%ebx
je     806048d <fts_children+0x11ed>
mov    -0xd4(%ebp),%eax
sub    (%eax,%ebx,4),%ebx
lea    (%ebx,%ebx,4),%eax
lea    (%esi,%eax,8),%eax
movzbl 0x8(%eax),%edx
test   %dl,%dl
jne    8060058 <fts_children+0xdb8>
mov    0x2c(%edi),%ecx
cmp    0x4(%eax),%ecx
jne    8060061 <fts_children+0xdc1>
mov    %ecx,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%edi),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8060061 <fts_children+0xdc1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x44(%ebp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    805ffe0 <fts_children+0xd40>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
mov    %eax,-0xd8(%ebp)
mov    %eax,%edi
jmp    805fde6 <fts_children+0xb46>
mov    -0x7c(%ebp),%eax
mov    -0xe4(%ebp),%edi
mov    %eax,(%edi)
mov    -0xd8(%ebp),%eax
mov    %eax,(%esp)
call   8061e50 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    805fdac <fts_children+0xb0c>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806069f <fts_children+0x13ff>
movb   $0x1,-0xc4(%ebp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    -0xb4(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0xb0(%ebp)
je     80604a8 <fts_children+0x1208>
cmp    $0xfffffffe,%eax
je     8060563 <fts_children+0x12c3>
test   %eax,%eax
jne    80601a3 <fts_children+0xf03>
mov    -0xb4(%ebp),%eax
movl   $0x1,-0xb0(%ebp)
00
cmpb   $0x0,(%eax)
jne    80606ec <fts_children+0x144c>
mov    -0xa8(%ebp),%eax
test   %eax,%eax
jne    80606c3 <fts_children+0x1423>
mov    %esi,(%esp)
movb   $0x1,-0xac(%ebp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     805fe72 <fts_children+0xbd2>
movb   $0x0,-0xc4(%ebp)
jmp    805fe72 <fts_children+0xbd2>
xchg   %ax,%ax
mov    -0xd0(%ebp),%eax
test   %eax,%eax
je     8060448 <fts_children+0x11a8>
mov    -0xd0(%ebp),%edi
mov    -0xd4(%ebp),%eax
mov    (%eax,%edi,4),%ebx
sub    %ebx,-0xd0(%ebp)
test   %ebx,%ebx
je     805ffb4 <fts_children+0xd14>
movzbl -0x80(%ebp),%esi
lea    -0x88(%ebp),%edi
mov    %esi,%eax
test   %al,%al
je     8060222 <fts_children+0xf82>
movzbl -0x74(%ebp),%esi
mov    %esi,%eax
test   %al,%al
jne    8060265 <fts_children+0xfc5>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
sub    $0x1,%ebx
movb   $0x0,-0x80(%ebp)
je     8060480 <fts_children+0x11e0>
xor    %esi,%esi
cmpb   $0x0,-0x8c(%ebp)
jne    806028f <fts_children+0xfef>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8060278 <fts_children+0xfd8>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
mov    %esi,%eax
test   %al,%al
movb   $0x1,-0x80(%ebp)
je     806020d <fts_children+0xf6d>
mov    -0x70(%ebp),%esi
test   %esi,%esi
jne    806020d <fts_children+0xf6d>
call   8049820 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806069f <fts_children+0x13ff>
movb   $0x1,-0x8c(%ebp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    -0xcc(%ebp),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8060320 <fts_children+0x1080>
cmp    $0xfffffffe,%eax
je     8060330 <fts_children+0x1090>
test   %eax,%eax
jne    80602f5 <fts_children+0x1055>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    80606ec <fts_children+0x144c>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    80606c3 <fts_children+0x1423>
mov    %edi,(%esp)
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806025b <fts_children+0xfbb>
movb   $0x0,-0x8c(%ebp)
jmp    806025b <fts_children+0xfbb>
lea    0x0(%esi),%esi
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    806025b <fts_children+0xfbb>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    806025b <fts_children+0xfbb>
nop
lea    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806069f <fts_children+0x13ff>
movb   $0x1,-0x54(%ebp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    -0x44(%ebp),%esi
lea    -0x50(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x40(%ebp)
je     8060583 <fts_children+0x12e3>
cmp    $0xfffffffe,%eax
je     8060661 <fts_children+0x13c1>
test   %eax,%eax
jne    80603c4 <fts_children+0x1124>
mov    -0x44(%ebp),%eax
movl   $0x1,-0x40(%ebp)
cmpb   $0x0,(%eax)
jne    80606ec <fts_children+0x144c>
mov    -0x38(%ebp),%edx
test   %edx,%edx
jne    80606c3 <fts_children+0x1423>
lea    -0x50(%ebp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
movb   $0x1,-0x3c(%ebp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806004d <fts_children+0xdad>
movb   $0x0,-0x54(%ebp)
jmp    806004d <fts_children+0xdad>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
mov    $0x1,%eax
cmp    %ecx,%edx
je     80604d6 <fts_children+0x1236>
mov    %edx,-0x10(%ebx)
mov    -0xb0(%ebp),%edx
test   %al,%al
mov    %al,-0x8(%ebx)
mov    %edx,-0xc(%ebx)
je     8060425 <fts_children+0x1185>
mov    -0xa8(%ebp),%eax
mov    %eax,-0x4(%ebx)
mov    -0xb4(%ebp),%edx
add    $0x28,%ebx
add    -0xb0(%ebp),%edx
movb   $0x0,-0xb8(%ebp)
mov    %edx,-0xb4(%ebp)
jmp    805fe30 <fts_children+0xb90>
xchg   %ax,%ax
movzbl -0x80(%ebp),%ebx
test   %bl,%bl
je     8060500 <fts_children+0x1260>
movzbl -0x74(%ebp),%ebx
test   %bl,%bl
jne    8060553 <fts_children+0x12b3>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
mov    -0x40(%ebp),%eax
movb   $0x0,-0x80(%ebp)
add    %eax,-0x44(%ebp)
movb   $0x0,-0x48(%ebp)
jmp    806000d <fts_children+0xd6d>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x48(%ebp),%ebx
jmp    805ffb0 <fts_children+0xd10>
mov    %edi,%esi
mov    %ecx,%edi
mov    -0xcc(%ebp),%ebx
mov    -0xd4(%ebp),%eax
mov    %ebx,(%eax,%ebx,4)
xor    %ebx,%ebx
jmp    805ff39 <fts_children+0xc99>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,-0xb0(%ebp)
00
movb   $0x0,-0xac(%ebp)
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
xor    %eax,%eax
movb   $0x1,-0xb8(%ebp)
cmp    %ecx,%edx
jne    8060409 <fts_children+0x1169>
mov    -0xb0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80493a0 <memcpy@plt>
mov    %ebx,-0x10(%ebx)
movzbl -0xac(%ebp),%eax
jmp    806040c <fts_children+0x116c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x8c(%ebp)
lea    -0x88(%ebp),%esi
jne    80605e2 <fts_children+0x1342>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    80605c5 <fts_children+0x1325>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
test   %bl,%bl
movb   $0x1,-0x80(%ebp)
je     8060460 <fts_children+0x11c0>
mov    -0x70(%ebp),%ecx
test   %ecx,%ecx
jne    8060460 <fts_children+0x11c0>
jmp    806026c <fts_children+0xfcc>
mov    -0xb4(%ebp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,-0xac(%ebp)
mov    %eax,-0xb0(%ebp)
jmp    80604b9 <fts_children+0x1219>
movl   $0x1,-0x40(%ebp)
movb   $0x0,-0x3c(%ebp)
jmp    806004d <fts_children+0xdad>
mov    -0x38(%ebp),%edx
test   %edx,%edx
je     80600f9 <fts_children+0xe59>
mov    -0xd0(%ebp),%eax
mov    -0xd8(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
cmpb   $0x0,0x8(%eax)
je     805ffd2 <fts_children+0xd32>
cmp    0xc(%eax),%edx
sete   %al
jmp    805ffe2 <fts_children+0xd42>
lea    -0x88(%ebp),%esi
mov    %esi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806069f <fts_children+0x13ff>
movb   $0x1,-0x8c(%ebp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8060678 <fts_children+0x13d8>
cmp    $0xfffffffe,%eax
je     8060688 <fts_children+0x13e8>
test   %eax,%eax
jne    806063c <fts_children+0x139c>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    80606ec <fts_children+0x144c>
mov    -0x70(%ebp),%ebx
test   %ebx,%ebx
jne    80606c3 <fts_children+0x1423>
mov    %esi,(%esp)
mov    $0x1,%ebx
movb   $0x1,-0x74(%ebp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8060547 <fts_children+0x12a7>
movb   $0x0,-0x8c(%ebp)
jmp    8060547 <fts_children+0x12a7>
mov    -0x44(%ebp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,-0x3c(%ebp)
mov    %eax,-0x40(%ebp)
jmp    806004d <fts_children+0xdad>
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    8060547 <fts_children+0x12a7>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    8060547 <fts_children+0x12a7>
movl   $0x8064b08,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064b08,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
call   8049420 <__stack_chk_fail@plt>
movl   $0x8064b08,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x15c,%esp
mov    0x170(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x174(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,%edi
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8060b50 <fts_children+0x18b0>
movsbl (%edi),%eax
lea    0x38(%esp),%ebx
mov    %edi,0x44(%esp)
movb   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
movl   $0x0,0x3c(%esp)
movb   $0x0,0x40(%esp)
bt     %eax,%edx
jae    8060ab0 <fts_children+0x1810>
movl   $0x1,0x48(%esp)
mov    %eax,0x50(%esp)
movb   $0x1,0x4c(%esp)
mov    0x50(%esp),%ebx
movb   $0x1,0x40(%esp)
test   %ebx,%ebx
je     8060d48 <fts_children+0x1aa8>
mov    0x20(%esp),%eax
movb   $0x0,0xa4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0x6c(%esp)
mov    %eax,0x7c(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
movb   $0x0,0x78(%esp)
mov    %eax,0xb4(%esp)
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xac(%esp)
00
movb   $0x0,0xb0(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
movb   $0x1,0x28(%esp)
jne    8060a00 <fts_children+0x1760>
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    8060d58 <fts_children+0x1ab8>
movl   $0x1,0xb8(%esp)
00
movsbl (%eax),%eax
movb   $0x1,0xbc(%esp)
mov    %eax,0xc0(%esp)
mov    0xc0(%esp),%ecx
movb   $0x1,0xb0(%esp)
test   %ecx,%ecx
je     8060d40 <fts_children+0x1aa0>
mov    $0x1,%edx
cmpl   $0x9,0x24(%esp)
seta   %al
and    0x28(%esp),%al
mov    %al,0x14(%esp)
je     8061015 <fts_children+0x1d75>
mov    0x24(%esp),%eax
lea    (%eax,%eax,4),%eax
cmp    %eax,0x1c(%esp)
jb     8061010 <fts_children+0x1d70>
mov    0x1c(%esp),%esi
sub    0x2c(%esp),%esi
je     806115f <fts_children+0x1ebf>
movzbl 0x78(%esp),%ebx
lea    0x70(%esp),%edi
test   %bl,%bl
je     80608e9 <fts_children+0x1649>
movzbl 0x84(%esp),%ebx
test   %bl,%bl
jne    806093e <fts_children+0x169e>
mov    0x80(%esp),%eax
add    %eax,0x7c(%esp)
sub    $0x1,%esi
movb   $0x0,0x78(%esp)
je     8061170 <fts_children+0x1ed0>
xor    %ebx,%ebx
cmpb   $0x0,0x6c(%esp)
jne    8060ddd <fts_children+0x1b3d>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8060dc8 <fts_children+0x1b28>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movzbl 0x14(%esp),%ebx
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
test   %bl,%bl
movb   $0x1,0x78(%esp)
je     80608ce <fts_children+0x162e>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    80608ce <fts_children+0x162e>
movzbl 0x84(%esp),%eax
mov    %al,0x14(%esp)
cmpb   $0x0,0x14(%esp)
je     8061058 <fts_children+0x1db8>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    8061058 <fts_children+0x1db8>
mov    0x20(%esp),%edx
lea    0x30(%esp),%ecx
mov    0x18(%esp),%eax
call   805fd70 <fts_children+0xad0>
test   %al,%al
jne    80616b5 <fts_children+0x2415>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
lea    0x0(%esi),%esi
addl   $0x1,0x24(%esp)
test   %dl,%dl
lea    0x1(%eax),%ebx
je     8060e78 <fts_children+0x1bd8>
cmpb   $0x0,0x4c(%esp)
je     8060e78 <fts_children+0x1bd8>
mov    0x50(%esp),%eax
cmp    %eax,0xc0(%esp)
sete   %al
test   %al,%al
jne    8060eb3 <fts_children+0x1c13>
mov    0xb4(%esp),%eax
add    0xb8(%esp),%eax
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0xb0(%esp)
mov    %eax,0xb4(%esp)
mov    %ebx,0x1c(%esp)
je     806082c <fts_children+0x158c>
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0xb4(%esp),%ebx
lea    0xa8(%esp),%esi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xc0(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xb8(%esp)
je     8061530 <fts_children+0x2290>
cmp    $0xfffffffe,%eax
je     8060d98 <fts_children+0x1af8>
test   %eax,%eax
jne    8060a81 <fts_children+0x17e1>
mov    0xb4(%esp),%eax
movl   $0x1,0xb8(%esp)
00
cmpb   $0x0,(%eax)
jne    80616c3 <fts_children+0x2423>
mov    0xc0(%esp),%ecx
test   %ecx,%ecx
jne    8061106 <fts_children+0x1e66>
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
movb   $0x1,0xbc(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8060864 <fts_children+0x15c4>
movb   $0x0,0xa4(%esp)
jmp    8060864 <fts_children+0x15c4>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0x34(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x44(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x48(%esp)
je     8060d80 <fts_children+0x1ae0>
cmp    $0xfffffffe,%eax
je     80615f3 <fts_children+0x2353>
test   %eax,%eax
jne    8060b2d <fts_children+0x188d>
mov    0x44(%esp),%eax
movl   $0x1,0x48(%esp)
cmpb   $0x0,(%eax)
jne    80616c3 <fts_children+0x2423>
mov    0x50(%esp),%esi
test   %esi,%esi
jne    8061106 <fts_children+0x1e66>
mov    %ebx,(%esp)
movb   $0x1,0x4c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806079d <fts_children+0x14fd>
movb   $0x0,0x34(%esp)
jmp    806079d <fts_children+0x14fd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
mov    0x18(%esp),%edi
movzbl (%ecx),%eax
mov    %eax,%ebx
test   %bl,%bl
mov    %al,0x14(%esp)
mov    %edi,%eax
je     8060cc8 <fts_children+0x1a28>
cmpb   $0x0,(%edi)
je     8060d40 <fts_children+0x1aa0>
lea    0x1(%edi),%esi
xor    %ebx,%ebx
mov    %ecx,0x28(%esp)
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
movb   $0x1,0x24(%esp)
mov    0x18(%esp),%eax
add    %ebx,%eax
add    $0x1,%ebx
mov    %eax,0x1c(%esp)
movzbl 0x14(%esp),%eax
cmp    -0x1(%esi),%al
je     8060ce8 <fts_children+0x1a48>
cmpb   $0x0,(%esi)
je     8060d40 <fts_children+0x1aa0>
add    $0x1,%edi
cmp    $0x9,%ebx
jbe    8060c2d <fts_children+0x198d>
cmpb   $0x0,0x24(%esp)
je     8060c2d <fts_children+0x198d>
lea    (%ebx,%ebx,4),%eax
cmp    %eax,%edi
jb     8060c28 <fts_children+0x1988>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     8060bf1 <fts_children+0x1951>
mov    %edi,%eax
sub    0x2c(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049720 <strnlen@plt>
mov    %edi,0x2c(%esp)
add    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax)
jne    8060c28 <fts_children+0x1988>
mov    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
lea    0x30(%esp),%ecx
mov    %ebp,%edx
mov    %ecx,(%esp)
mov    %eax,%ecx
mov    %esi,%eax
call   805fc10 <fts_children+0x970>
test   %al,%al
jne    80616b5 <fts_children+0x2415>
movl   $0x0,0x28(%esp)
movb   $0x0,0x24(%esp)
jmp    8060c2d <fts_children+0x198d>
xchg   %ax,%ax
movb   $0x1,0x24(%esp)
add    $0x1,%esi
jmp    8060b8c <fts_children+0x18ec>
lea    0x0(%esi),%esi
mov    0x124(%esp),%ebx
mov    0x128(%esp),%eax
movb   $0x0,0x120(%esp)
add    %ebx,%eax
mov    0x1c(%esp),%ebx
mov    %eax,0x124(%esp)
add    $0x2,%ebx
cmpb   $0x0,0x114(%esp)
mov    %ebx,%esi
jne    806126a <fts_children+0x1fca>
xchg   %ax,%ax
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %edx,%ecx
jae    80614a0 <fts_children+0x2200>
movl   $0x1,0x128(%esp)
00
movsbl (%eax),%eax
movb   $0x1,0x12c(%esp)
mov    %eax,0x130(%esp)
mov    0x130(%esp),%eax
movb   $0x1,0x120(%esp)
test   %eax,%eax
jne    80611e3 <fts_children+0x1f43>
mov    0xb4(%esp),%eax
xchg   %ax,%ax
mov    0x14c(%esp),%edi
xor    %gs:0x14,%edi
jne    80616be <fts_children+0x241e>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%ebp
movzbl 0x1(%ebp),%eax
test   %al,%al
je     8060d34 <fts_children+0x1a94>
movzbl (%esi),%ecx
test   %cl,%cl
je     8060d40 <fts_children+0x1aa0>
cmp    %cl,%al
lea    0x2(%edi),%edx
jne    8061158 <fts_children+0x1eb8>
neg    %edi
lea    0x0(%ebp,%edi,1),%ebp
add    0x1c(%esp),%edi
jmp    8060d2b <fts_children+0x1a8b>
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
test   %cl,%cl
je     8060d40 <fts_children+0x1aa0>
add    $0x1,%edx
cmp    %cl,%al
jne    8061158 <fts_children+0x1eb8>
movzbl 0x0(%ebp,%edx,1),%eax
test   %al,%al
jne    8060d18 <fts_children+0x1a78>
mov    0x1c(%esp),%eax
jmp    8060cc8 <fts_children+0x1a28>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8060cc8 <fts_children+0x1a28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
jmp    8060cc8 <fts_children+0x1a28>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0xa4(%esp)
jmp    8060a00 <fts_children+0x1760>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x48(%esp)
movb   $0x0,0x4c(%esp)
movb   $0x1,0x40(%esp)
jmp    80607ae <fts_children+0x150e>
nop
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0xbc(%esp)
mov    %eax,0xb8(%esp)
movb   $0x1,0xb0(%esp)
xor    %edx,%edx
jmp    8060880 <fts_children+0x15e0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0x6c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     8061020 <fts_children+0x1d80>
cmp    $0xfffffffe,%eax
je     8061038 <fts_children+0x1d98>
test   %eax,%eax
jne    8060e51 <fts_children+0x1bb1>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    80616c3 <fts_children+0x2423>
mov    0x88(%esp),%edx
test   %edx,%edx
jne    8061106 <fts_children+0x1e66>
mov    %edi,(%esp)
movb   $0x1,0x84(%esp)
call   80493b0 <mbsinit@plt>
movzbl 0x14(%esp),%ebx
test   %eax,%eax
je     8060935 <fts_children+0x1695>
movb   $0x0,0x6c(%esp)
jmp    8060935 <fts_children+0x1695>
mov    0xb8(%esp),%edx
xor    %eax,%eax
cmp    0x48(%esp),%edx
jne    80609c9 <fts_children+0x1729>
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     80609d1 <fts_children+0x1731>
mov    0xbc(%esp),%edx
lea    0x118(%esp),%edi
mov    0xa4(%esp),%eax
mov    %edx,0xf4(%esp)
mov    0xc0(%esp),%edx
mov    %eax,0xdc(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0xf8(%esp)
mov    0xc4(%esp),%edx
mov    %eax,0xe0(%esp)
mov    0xac(%esp),%eax
mov    %edx,0xfc(%esp)
mov    0xc8(%esp),%edx
mov    %eax,0xe4(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x100(%esp)
mov    0xcc(%esp),%edx
mov    %eax,0xe8(%esp)
mov    0xb4(%esp),%eax
movb   $0x0,0xe8(%esp)
mov    %edx,0x104(%esp)
mov    0xd0(%esp),%edx
mov    %eax,0xec(%esp)
mov    0xb8(%esp),%eax
add    %eax,0xec(%esp)
mov    %edx,0x108(%esp)
mov    0xd4(%esp),%edx
mov    %eax,0xf0(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x10c(%esp)
mov    0xd8(%esp),%edx
mov    %eax,0x124(%esp)
mov    %edx,0x110(%esp)
movb   $0x0,0x114(%esp)
movsbl (%eax),%eax
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
movb   $0x0,0x120(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x80641e0(,%edx,4),%edx
bt     %eax,%edx
jae    8061078 <fts_children+0x1dd8>
movl   $0x1,0x128(%esp)
00
mov    %eax,0x130(%esp)
movb   $0x1,0x12c(%esp)
mov    0x130(%esp),%edx
movb   $0x1,0x120(%esp)
test   %edx,%edx
jne    8060c38 <fts_children+0x1998>
call   8049820 <abort@plt>
nop
movb   $0x1,0x28(%esp)
mov    0x1c(%esp),%eax
jmp    80609a0 <fts_children+0x1700>
xchg   %ax,%ax
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
jmp    8060935 <fts_children+0x1695>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x84(%esp)
mov    %eax,0x80(%esp)
jmp    8060935 <fts_children+0x1695>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x1,0x28(%esp)
mov    %eax,0x2c(%esp)
jmp    80609a0 <fts_children+0x1700>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0x114(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     8061632 <fts_children+0x2392>
cmp    $0xfffffffe,%eax
je     8061651 <fts_children+0x23b1>
test   %eax,%eax
jne    8061130 <fts_children+0x1e90>
mov    0x124(%esp),%ebx
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%ebx)
jne    80616c3 <fts_children+0x2423>
mov    0x130(%esp),%eax
test   %eax,%eax
je     8061130 <fts_children+0x1e90>
movl   $0x8064b08,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8060ff3 <fts_children+0x1d53>
movb   $0x0,0x114(%esp)
jmp    8060ff3 <fts_children+0x1d53>
lea    0x0(%esi),%esi
mov    %edx,%edi
jmp    8060bb3 <fts_children+0x1913>
cmpb   $0x0,0x78(%esp)
jne    8060949 <fts_children+0x16a9>
lea    0x0(%esi),%esi
cmpb   $0x0,0x6c(%esp)
lea    0x70(%esp),%ebx
jne    8061561 <fts_children+0x22c1>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8061548 <fts_children+0x22a8>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
movb   $0x1,0x78(%esp)
jmp    8060955 <fts_children+0x16b5>
lea    0x0(%esi),%esi
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
movb   $0x1,0x120(%esp)
movzbl 0xe8(%esp),%ebx
test   %bl,%bl
je     8061310 <fts_children+0x2070>
movzbl 0xf4(%esp),%ebx
test   %bl,%bl
jne    8061375 <fts_children+0x20d5>
mov    0xf0(%esp),%edx
mov    $0x1,%eax
cmp    0x128(%esp),%edx
je     8061478 <fts_children+0x21d8>
test   %al,%al
lea    0x1(%esi),%edx
jne    8061528 <fts_children+0x2288>
mov    0xf0(%esp),%eax
mov    %edx,%esi
add    %eax,0xec(%esp)
mov    0x124(%esp),%eax
add    0x128(%esp),%eax
cmpb   $0x0,0x114(%esp)
movb   $0x0,0xe8(%esp)
mov    %eax,0x124(%esp)
movb   $0x0,0x120(%esp)
je     8060c70 <fts_children+0x19d0>
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     80611c8 <fts_children+0x1f28>
cmp    $0xfffffffe,%eax
je     80614d8 <fts_children+0x2238>
test   %eax,%eax
jne    80612e4 <fts_children+0x2044>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    80616c3 <fts_children+0x2423>
mov    0x130(%esp),%eax
test   %eax,%eax
jne    8061106 <fts_children+0x1e66>
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8060ca8 <fts_children+0x1a08>
movb   $0x0,0x114(%esp)
jmp    8060ca8 <fts_children+0x1a08>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0xdc(%esp)
lea    0xe0(%esp),%ebp
jne    80613c7 <fts_children+0x2127>
mov    0xec(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    80613a8 <fts_children+0x2108>
movl   $0x1,0xf0(%esp)
00
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
mov    %eax,0xf8(%esp)
test   %bl,%bl
movb   $0x1,0xe8(%esp)
je     8061203 <fts_children+0x1f63>
mov    0xf8(%esp),%eax
test   %eax,%eax
je     8060cc8 <fts_children+0x1a28>
cmpb   $0x0,0x12c(%esp)
je     8061203 <fts_children+0x1f63>
cmp    0x130(%esp),%eax
setne  %al
jmp    806121c <fts_children+0x1f7c>
lea    0x0(%esi,%eiz,1),%esi
lea    0xe0(%esp),%ebp
mov    %ebp,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0xdc(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0xec(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    0x14(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xf8(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xf0(%esp)
je     80614c0 <fts_children+0x2220>
cmp    $0xfffffffe,%eax
je     8061500 <fts_children+0x2260>
test   %eax,%eax
jne    8061449 <fts_children+0x21a9>
mov    0xec(%esp),%eax
movl   $0x1,0xf0(%esp)
00
cmpb   $0x0,(%eax)
jne    80616c3 <fts_children+0x2423>
mov    0xf8(%esp),%eax
test   %eax,%eax
jne    8061106 <fts_children+0x1e66>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061365 <fts_children+0x20c5>
movb   $0x0,0xdc(%esp)
jmp    8061365 <fts_children+0x20c5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x124(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   80493e0 <memcmp@plt>
test   %eax,%eax
setne  %al
jmp    806121c <fts_children+0x1f7c>
mov    %edi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0x114(%esp)
jmp    806126a <fts_children+0x1fca>
lea    0x0(%esi),%esi
movl   $0x1,0xf0(%esp)
00
movb   $0x0,0xf4(%esp)
jmp    8061365 <fts_children+0x20c5>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    80611db <fts_children+0x1f3b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0xf4(%esp)
mov    %eax,0xf0(%esp)
jmp    8061365 <fts_children+0x20c5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    80609d1 <fts_children+0x1731>
nop
movl   $0x1,0xb8(%esp)
00
movb   $0x0,0xbc(%esp)
jmp    8060db6 <fts_children+0x1b16>
lea    0x70(%esp),%ebx
mov    %ebx,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061691 <fts_children+0x23f1>
movb   $0x1,0x6c(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     8061674 <fts_children+0x23d4>
cmp    $0xfffffffe,%eax
je     806160d <fts_children+0x236d>
test   %eax,%eax
jne    80615d1 <fts_children+0x2331>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    80616c3 <fts_children+0x2423>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    8061106 <fts_children+0x1e66>
mov    %ebx,(%esp)
movb   $0x1,0x84(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     80611bb <fts_children+0x1f1b>
movb   $0x0,0x6c(%esp)
jmp    80611bb <fts_children+0x1f1b>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x4c(%esp)
mov    %eax,0x48(%esp)
jmp    8060d8d <fts_children+0x1aed>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
mov    %eax,0x80(%esp)
jmp    80611bb <fts_children+0x1f1b>
movl   $0x1,0x128(%esp)
00
mov    0x124(%esp),%ebx
movb   $0x0,0x12c(%esp)
jmp    8060c3f <fts_children+0x199f>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    8060c3f <fts_children+0x199f>
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
jmp    80611bb <fts_children+0x1f1b>
movl   $0x8064b08,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
mov    0x30(%esp),%eax
jmp    8060cc8 <fts_children+0x1a28>
call   8049420 <__stack_chk_fail@plt>
movl   $0x8064b08,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%eax
lea    0x4c(%esp),%ebx
mov    0x1078(%esp),%edi
lea    0x44(%esp),%ebp
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    0x107c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
mov    0x1080(%esp),%eax
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
call   8049630 <iconv@plt>
mov    0x1074(%esp),%eax
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    %eax,0x40(%esp)
test   %eax,%eax
lea    0x48(%esp),%eax
mov    %eax,0x18(%esp)
jne    8061798 <fts_children+0x24f8>
jmp    80617e8 <fts_children+0x2548>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    0x40(%esp),%edx
sub    %ebx,%eax
add    %eax,%esi
test   %edx,%edx
je     80617e8 <fts_children+0x2548>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1000,0x48(%esp)
call   8049630 <iconv@plt>
cmp    $0xffffffff,%eax
jne    8061788 <fts_children+0x24e8>
call   80496e0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x7,%eax
je     8061788 <fts_children+0x24e8>
cmp    $0x16,%eax
jne    806197b <fts_children+0x26db>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
movl   $0x1000,0x48(%esp)
call   8049630 <iconv@plt>
cmp    $0xffffffff,%eax
je     806197b <fts_children+0x26db>
mov    0x44(%esp),%eax
sub    %ebx,%eax
add    %eax,%esi
mov    %esi,0x1c(%esp)
je     8061988 <fts_children+0x26e8>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8061958 <fts_children+0x26b8>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edx
cmp    (%eax),%edx
ja     8061958 <fts_children+0x26b8>
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x0,0xc(%esp)
lea    0x3c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049630 <iconv@plt>
mov    0x2c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x1074(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x1074(%esp),%eax
jmp    80618e1 <fts_children+0x2641>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049630 <iconv@plt>
cmp    $0xffffffff,%eax
je     8061998 <fts_children+0x26f8>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    80618b8 <fts_children+0x2618>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049630 <iconv@plt>
cmp    $0xffffffff,%eax
je     80619a6 <fts_children+0x2706>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    80619d3 <fts_children+0x2733>
mov    0x24(%esp),%eax
xor    %ebx,%ebx
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    0x20(%esp),%eax
mov    %ecx,(%eax)
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    80619d8 <fts_children+0x2738>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
jne    8061855 <fts_children+0x25b5>
call   80496e0 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%ebx
jmp    8061934 <fts_children+0x2694>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
xor    %ebx,%ebx
movl   $0x0,(%eax)
jmp    8061934 <fts_children+0x2694>
xchg   %ax,%ax
call   80496e0 <__errno_location@plt>
cmpl   $0x16,(%eax)
je     80618e5 <fts_children+0x2645>
mov    0x24(%esp),%ecx
mov    $0xffffffff,%ebx
mov    0x28(%esp),%edi
cmp    %edi,(%ecx)
je     8061934 <fts_children+0x2694>
call   80496e0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %edi,(%esp)
call   8049390 <free@plt>
mov    %ebp,(%esi)
jmp    8061934 <fts_children+0x2694>
call   8049820 <abort@plt>
call   8049420 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   8049620 <strlen@plt>
mov    %eax,%ebx
shl    $0x4,%ebx
cmp    $0xfff,%eax
cmova  %eax,%ebx
lea    0x1(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8061ba9 <fts_children+0x2909>
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049630 <iconv@plt>
mov    %esi,0x28(%esp)
mov    %ebx,0x2c(%esp)
jmp    8061ab4 <fts_children+0x2814>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80496e0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     8061b3b <fts_children+0x289b>
cmp    $0x7,%ebx
jne    8061b94 <fts_children+0x28f4>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    8061b88 <fts_children+0x28e8>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049560 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8061b88 <fts_children+0x28e8>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049630 <iconv@plt>
cmp    $0xffffffff,%eax
je     8061a58 <fts_children+0x27b8>
jmp    8061b3b <fts_children+0x289b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80496e0 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x7,%ebx
jne    8061b94 <fts_children+0x28f4>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    8061b88 <fts_children+0x28e8>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049560 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8061b88 <fts_children+0x28e8>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049630 <iconv@plt>
cmp    $0xffffffff,%eax
je     8061af0 <fts_children+0x2850>
mov    0x28(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
movb   $0x0,(%eax)
mov    0x28(%esp),%eax
sub    %esi,%eax
cmp    %edi,%eax
jb     8061bb8 <fts_children+0x2918>
mov    %esi,%eax
jmp    8061ba1 <fts_children+0x2901>
movl   $0xc,0x0(%ebp)
mov    $0xc,%ebx
mov    %esi,(%esp)
call   8049390 <free@plt>
xor    %eax,%eax
mov    %ebx,0x0(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80496e0 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    8061ba1 <fts_children+0x2901>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049560 <realloc@plt>
test   %eax,%eax
cmove  %esi,%eax
jmp    8061ba1 <fts_children+0x2901>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
cmpb   $0x0,(%ebx)
je     8061bf7 <fts_children+0x2957>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   805f4c0 <fts_children+0x220>
test   %eax,%eax
jne    8061c10 <fts_children+0x2970>
mov    %ebx,(%esp)
call   80496d0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8061c60 <fts_children+0x29c0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049840 <iconv_open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     8061c74 <fts_children+0x29d4>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80619e0 <fts_children+0x2740>
test   %eax,%eax
mov    %eax,%ebx
je     8061c78 <fts_children+0x29d8>
mov    %esi,(%esp)
call   8049640 <iconv_close@plt>
test   %eax,%eax
jns    8061c05 <fts_children+0x2965>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   8049390 <free@plt>
mov    %edi,(%esi)
jmp    8061c05 <fts_children+0x2965>
call   80496e0 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %ebx,%ebx
jmp    8061c05 <fts_children+0x2965>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   8049640 <iconv_close@plt>
mov    %edi,(%ebx)
xor    %ebx,%ebx
jmp    8061c05 <fts_children+0x2965>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8061cd0 <fts_children+0x2a30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    8061d30 <fts_children+0x2a90>
mov    0x8069674,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     8061dd8 <fts_children+0x2b38>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049690 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8061d50 <fts_children+0x2ab0>
movl   $0x1,0x8069674
00
test   %ebx,%ebx
js     8061d27 <fts_children+0x2a87>
cmpl   $0xffffffff,0x8069674
je     8061d80 <fts_children+0x2ae0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049690 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   80496e0 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    8061d10 <fts_children+0x2a70>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8061cd0 <fts_children+0x2a30>
test   %eax,%eax
mov    %eax,%ebx
js     8061d27 <fts_children+0x2a87>
movl   $0xffffffff,0x8069674
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049690 <fcntl@plt>
test   %eax,%eax
js     8061db4 <fts_children+0x2b14>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049690 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    8061d27 <fts_children+0x2a87>
call   80496e0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   8049870 <close@plt>
mov    %edi,(%esi)
jmp    8061d27 <fts_children+0x2a87>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8061cd0 <fts_children+0x2a30>
mov    %eax,%ebx
jmp    8061d1a <fts_children+0x2a7a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
lea    0x8(%eax),%edx
cmp    %edx,%eax
ja     8061e48 <fts_children+0x2ba8>
mov    %edx,(%esp)
call   8049570 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     8061e48 <fts_children+0x2ba8>
lea    0x8(%eax),%ebx
mov    $0xff00ff01,%edx
movl   $0x1415fb4a,0x4(%eax)
mov    %ebx,%eax
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    %eax,%edx
mov    0x8069680(,%eax,4),%eax
mov    %ebx,0x8069680(,%edx,4)
mov    %eax,(%ecx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebx
mov    0x8(%esp),%ebx
test   %ebx,%ebx
je     8061e62 <fts_children+0x2bc2>
cmpl   $0x1415fb4a,-0x4(%ebx)
je     8061e68 <fts_children+0x2bc8>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    $0xff00ff01,%edx
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    0x8069680(,%eax,4),%ecx
test   %ecx,%ecx
je     8061e62 <fts_children+0x2bc2>
cmp    %ecx,%ebx
jne    8061e96 <fts_children+0x2bf6>
jmp    8061eb5 <fts_children+0x2c15>
cmp    %edx,%ebx
je     8061ea0 <fts_children+0x2c00>
mov    %edx,%ecx
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    8061e90 <fts_children+0x2bf0>
jmp    8061e62 <fts_children+0x2bc2>
nop
sub    $0x8,%ecx
mov    -0x8(%ebx),%eax
sub    $0x8,%ebx
mov    %eax,(%ecx)
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    8049390 <free@plt>
lea    0x8069680(,%eax,4),%ecx
jmp    8061ea3 <fts_children+0x2c03>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
call   80494e0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8062060 <fts_children+0x2dc0>
mov    %ebx,0x24(%esp)
mov    %ebx,%edx
xor    %ebx,%ebx
movb   $0x0,0x14(%esp)
lea    0x30(%esp),%edi
movl   $0x0,0x18(%esp)
lea    0x18(%esp),%esi
movl   $0x0,0x1c(%esp)
movb   $0x0,0x20(%esp)
nop
cmpb   $0x0,0x14(%esp)
jne    8061f85 <fts_children+0x2ce5>
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x80641e0(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8061f70 <fts_children+0x2cd0>
movl   $0x1,0x28(%esp)
movsbl (%edx),%eax
movb   $0x1,0x2c(%esp)
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
movb   $0x1,0x20(%esp)
test   %eax,%eax
jne    8062011 <fts_children+0x2d71>
mov    %ebx,%eax
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    80620d9 <fts_children+0x2e39>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     806206d <fts_children+0x2dcd>
movb   $0x1,0x14(%esp)
call   80494e0 <__ctype_get_mb_cur_max@plt>
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8059420 <__sprintf_chk@plt+0xfb50>
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049510 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x28(%esp)
je     8062030 <fts_children+0x2d90>
cmp    $0xfffffffe,%eax
je     8062048 <fts_children+0x2da8>
test   %eax,%eax
jne    8061fe6 <fts_children+0x2d46>
mov    0x24(%esp),%ebp
movl   $0x1,0x28(%esp)
cmpb   $0x0,0x0(%ebp)
jne    80620b5 <fts_children+0x2e15>
mov    0x30(%esp),%edx
test   %edx,%edx
jne    8062091 <fts_children+0x2df1>
mov    %esi,(%esp)
movb   $0x1,0x2c(%esp)
call   80493b0 <mbsinit@plt>
test   %eax,%eax
je     8061f42 <fts_children+0x2ca2>
mov    0x30(%esp),%eax
movb   $0x0,0x14(%esp)
movb   $0x1,0x20(%esp)
test   %eax,%eax
je     8061f53 <fts_children+0x2cb3>
mov    0x24(%esp),%ebp
mov    0x28(%esp),%edx
add    $0x1,%ebx
movb   $0x0,0x20(%esp)
add    %ebp,%edx
mov    %edx,0x24(%esp)
jmp    8061f10 <fts_children+0x2c70>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x28(%esp)
mov    0x24(%esp),%ebp
movb   $0x0,0x2c(%esp)
jmp    8062015 <fts_children+0x2d75>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
movb   $0x0,0x2c(%esp)
mov    %eax,0x28(%esp)
jmp    8062015 <fts_children+0x2d75>
nop
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
jmp    8061f55 <fts_children+0x2cb5>
movl   $0x8064b1b,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x80640e9,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064b1b,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064117,(%esp)
call   80498a0 <__assert_fail@plt>
movl   $0x8064b1b,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x80640df,0x4(%esp)
movl   $0x8064100,(%esp)
call   80498a0 <__assert_fail@plt>
call   8049420 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    8062130 <fts_children+0x2e90>
cmp    %ebp,%ecx
ja     8062168 <fts_children+0x2ec8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    8062118 <fts_children+0x2e78>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     8062158 <fts_children+0x2eb8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    8062178 <fts_children+0x2ed8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    80621e8 <fts_children+0x2f48>
cmp    %edx,%eax
jb     80621e8 <fts_children+0x2f48>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     80621f8 <fts_children+0x2f58>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    80621d9 <fts_children+0x2f39>
cmp    (%esp),%esi
je     80621f8 <fts_children+0x2f58>
mov    %edi,%eax
xor    %edx,%edx
jmp    806215c <fts_children+0x2ebc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    806215c <fts_children+0x2ebc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    8062258 <fts_children+0x2fb8>
cmp    %edi,%esi
jbe    8062290 <fts_children+0x2ff0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     80622b0 <fts_children+0x3010>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    80622c0 <fts_children+0x3020>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     8062358 <fts_children+0x30b8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    80622a1 <fts_children+0x3001>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    806224b <fts_children+0x2fab>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     8062344 <fts_children+0x30a4>
cmp    %eax,0xc(%esp)
jb     8062340 <fts_children+0x30a0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    806231e <fts_children+0x307e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    806231e <fts_children+0x307e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     8062271 <fts_children+0x2fd1>
jmp    8062281 <fts_children+0x2fe1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a900 <__sprintf_chk@plt+0x1030>
add    $0x6c85,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   80492d4 <wcrtomb@plt-0x3c>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     80623c9 <fts_children+0x3129>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    80623a8 <fts_children+0x3108>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    80623e0 <fts_children+0x3140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804a900 <__sprintf_chk@plt+0x1030>
add    $0x6c0a,%ebx
sub    $0x18,%esp
lea    0x184(%ebx),%eax
test   %eax,%eax
je     8062428 <fts_children+0x3188>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049520 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    806240b <fts_children+0x316b>
push   %ebx
sub    $0x8,%esp
call   804a900 <__sprintf_chk@plt+0x1030>
add    $0x6bcb,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    80624d3 <_IO_stdin_used+0x8f>
arpl   %sp,0x74(%ecx)
imul   $0x20736120,0x6e(%edi),%ebp
daa
data16
addr16 jb 80624d8 <_IO_stdin_used+0x94>
jo     806249c <_IO_stdin_used+0x58>
and    %ch,0x73(%ecx)
and    %ah,0x70(%ebp,%eiz,2)
jb     80624e3 <_IO_stdin_used+0x9f>
arpl   %sp,0x74(%ecx)
gs cmp %fs:%gs:(%eax),%esp
jne    80624fa <_IO_stdin_used+0xb6>
and    %ah,%gs:(%edi)
addr16 jb 80624f2 <_IO_stdin_used+0xae>
jo     80624af <_IO_stdin_used+0x6b>
sub    $0x69202746,%eax
outsb  %ds:(%esi),(%dx)
jae    806250b <_IO_stdin_used+0xc7>
gs
popa
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    8062514 <_IO_stdin_used+0xd0>
je     80624d1 <_IO_stdin_used+0x8d>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%esi)
ja     8062524 <_IO_stdin_used+0xe0>
imul   $0x7065732d,0x65(%esi),%ebp
popa
jb     8062523 <_IO_stdin_used+0xdf>
je     8062529 <_IO_stdin_used+0xe5>
and    %ah,%fs:0x69(%esi)
js     806252f <_IO_stdin_used+0xeb>
and    %dh,%fs:0x74(%ebx)
jb     8062539 <_IO_stdin_used+0xf5>
outsb  %ds:(%esi),(%dx)
addr16 jae 8062502 <_IO_stdin_used+0xbe>
or     (%eax),%al
add    %al,(%eax)
lock and $0x6,%al
or     %dl,%al
test   $0xab000804,%eax
add    $0x8,%al
data16
addr16 jb 8062559 <_IO_stdin_used+0x115>
jo     80624f6 <_IO_stdin_used+0xb2>
sbb    0x25(%ebx),%ebx
jae    8062568 <_IO_stdin_used+0x124>
add    %bl,(%ebx)
pop    %ebx
insl   (%dx),%es:(%edi)
add    %ch,0x6e(%ecx)
jbe    8062565 <_IO_stdin_used+0x121>
insb   (%dx),%es:(%edi)
imul   $0x68637461,0x6d(%eax,%eiz,1),%esp
gs
jb     8062530 <_IO_stdin_used+0xec>
and    $0x6e690073,%eax
jo     806258c <_IO_stdin_used+0x148>
je     8062539 <_IO_stdin_used+0xf5>
imul   $0x206f6f74,0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
popa
jb     806258b <_IO_stdin_used+0x147>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806252f <_IO_stdin_used+0xeb>
or     %ecx,(%eax)
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     806253e <_IO_stdin_used+0xfa>
jb     80625a5 <_IO_stdin_used+0x161>
arpl   %si,0x72(%ebp)
jae    80625ae <_IO_stdin_used+0x16a>
jbe    80625ac <_IO_stdin_used+0x168>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8062572 <_IO_stdin_used+0x12e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8062557 <_IO_stdin_used+0x113>
ja     80625ba <_IO_stdin_used+0x176>
jb     80625c9 <_IO_stdin_used+0x185>
imul   $0x7325203a,0x67(%esi),%ebp
cmp    (%eax),%ah
and    $0x736c0073,%eax
gs imul $0x66,%gs:(%eax),%esp
popa
imul   $0x6e694200,0x64(%ebp,%eiz,2),%ebp
popa
jb     80625f3 <_IO_stdin_used+0x1af>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x616d2073
je     80625ea <_IO_stdin_used+0x1a6>
push   $0xa7365
and    $0xa646c6c,%eax
add    %ch,(%eax)
jae    8062609 <_IO_stdin_used+0x1c5>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     80625ff <_IO_stdin_used+0x1bb>
and    %ch,0x6e(%ecx)
jo     8062615 <_IO_stdin_used+0x1d1>
je     80625cb <_IO_stdin_used+0x187>
add    %cl,(%edx)
push   %edx
gs
jo     8062617 <_IO_stdin_used+0x1d3>
jb     806261e <_IO_stdin_used+0x1da>
and    %ah,0x75(%edx)
addr16 jae 80625d0 <_IO_stdin_used+0x18c>
je     8062621 <_IO_stdin_used+0x1dd>
cmp    (%eax),%ah
and    $0x62000a73,%eax
jne    8062622 <_IO_stdin_used+0x1de>
sub    $0x70657267,%eax
inc    %eax
outsb  %ds:(%si),(%dx)
jne    80625f3 <_IO_stdin_used+0x1af>
outsl  %ds:(%esi),(%dx)
jb     806262f <_IO_stdin_used+0x1eb>
add    %al,0x4e(%edi)
push   %ebp
and    %al,0x72(%edi)
gs
jo     80625f2 <_IO_stdin_used+0x1ae>
push   $0x20656d6f
jo     806263a <_IO_stdin_used+0x1f6>
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    806261f <_IO_stdin_used+0x1db>
or     (%eax),%al
insl   (%dx),%es:(%edi)
je     80625e6 <_IO_stdin_used+0x1a2>
das
jne    806265c <_IO_stdin_used+0x218>
jb     806261a <_IO_stdin_used+0x1d6>
jae    8062655 <_IO_stdin_used+0x211>
popa
jb     8062655 <_IO_stdin_used+0x211>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x52(%edi)
inc    %ebp
push   %eax
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %dh,0x65(%edx)
popa
add    %dh,%fs:0x6b(%ebx)
imul   $0x6e6b6e75,0x0(%eax),%esi
outsl  %ds:(%esi),(%dx)
ja     8062684 <_IO_stdin_used+0x240>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x656d2073,0x65(%ebx),%esp
je     806268b <_IO_stdin_used+0x247>
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x67(%ebp)
jb     806268f <_IO_stdin_used+0x24b>
jo     806262c <_IO_stdin_used+0x1e8>
jo     8062693 <_IO_stdin_used+0x24f>
jb     806269c <_IO_stdin_used+0x258>
add    %ch,0x7269642d
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x766e6900,0x73(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x63207861,0x6d(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jne    80626bd <_IO_stdin_used+0x279>
je     8062651 <_IO_stdin_used+0x20d>
bound  %ebp,0x6e(%ecx)
popa
jb     80626d0 <_IO_stdin_used+0x28c>
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     80626df <_IO_stdin_used+0x29b>
sub    $0x656c6966,%eax
jae    806268d <_IO_stdin_used+0x249>
je     80626e8 <_IO_stdin_used+0x2a4>
jo     80626d6 <_IO_stdin_used+0x292>
add    %bh,0x65(%ecx)
jae    8062676 <_IO_stdin_used+0x232>
outsw  %ds:(%esi),(%dx)
jb     80626dd <_IO_stdin_used+0x299>
add    %ch,%gs:0x65(%esi)
jbe    80626e5 <_IO_stdin_used+0x2a1>
jb     8062682 <_IO_stdin_used+0x23e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x75(%ecx)
je     80626fd <_IO_stdin_used+0x2b9>
add    %ch,0x66(%ecx)
sub    $0x797474,%eax
inc    %edi
push   %edx
inc    %ebp
push   %eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
add    %al,0x52(%edi)
inc    %ebp
push   %eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
push   %ebx
add    %cl,0x69(%ebp)
imul   $0x48,0x20(%ebp),%esp
popa
gs
jb     806272b <_IO_stdin_used+0x2e7>
gs
insb   (%dx),%es:(%edi)
add    %dh,(%edx)
xor    %esi,%cs:(%esi)
add    %al,0x4e(%edi)
push   %ebp
and    %ah,0x72(%edi)
gs
jo     80626c8 <_IO_stdin_used+0x284>
jb     806272f <_IO_stdin_used+0x2eb>
arpl   %si,0x72(%ebp)
jae    8062734 <_IO_stdin_used+0x2f0>
add    %ah,0x61(%edx)
jae    806273d <_IO_stdin_used+0x2f9>
arpl   %bp,0x65676572
js     806274c <_IO_stdin_used+0x308>
add    %ah,0x78(%ebp)
je     8062746 <_IO_stdin_used+0x302>
outsb  %ds:(%esi),(%dx)
fs
gs
fs
sub    $0x65676572,%eax
js     806275c <_IO_stdin_used+0x318>
add    %ah,0x69(%esi)
js     8062756 <_IO_stdin_used+0x312>
fs
sub    $0x65676572,%eax
js     8062769 <_IO_stdin_used+0x325>
add    %ah,0x69(%esi)
js     8062763 <_IO_stdin_used+0x31f>
fs
sub    $0x69727473,%eax
outsb  %ds:(%esi),(%dx)
addr16 jae 8062708 <_IO_stdin_used+0x2c4>
jo     806276f <_IO_stdin_used+0x32b>
jb     8062778 <_IO_stdin_used+0x334>
sub    $0x65676572,%eax
js     8062783 <_IO_stdin_used+0x33f>
add    %ah,0x66(%ecx)
je     806277d <_IO_stdin_used+0x339>
jb     8062747 <_IO_stdin_used+0x303>
arpl   %bp,0x6e(%edi)
je     8062784 <_IO_stdin_used+0x340>
js     8062795 <_IO_stdin_used+0x351>
add    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     806278d <_IO_stdin_used+0x349>
sub    $0x746e6f63,%eax
gs
js     80627a4 <_IO_stdin_used+0x360>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     80627b0 <_IO_stdin_used+0x36c>
sub    $0x656c6966,%eax
jae    806273e <_IO_stdin_used+0x2fa>
bound  %edi,0x74(%ecx)
gs
sub    $0x7366666f,%eax
gs
je     806274a <_IO_stdin_used+0x306>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     8062750 <_IO_stdin_used+0x30c>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jne    80627c8 <_IO_stdin_used+0x384>
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x78650073,0x65(%ebx),%esp
arpl   %bp,0x64(%ebp,%esi,2)
add    %ah,%gs:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x6d6f7266,%eax
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x726964,%eax
imul   $0x6966,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
gs
jae    80627b8 <_IO_stdin_used+0x374>
ja     80627f6 <_IO_stdin_used+0x3b2>
je     80627f7 <_IO_stdin_used+0x3b3>
sub    $0x6374616d,%eax
push   $0x66007365
imul   $0x7469772d,0x73(%ebp,%eiz,2),%ebp
push   $0x2d74756f
insl   (%dx),%es:(%edi)
popa
je     806280d <_IO_stdin_used+0x3c9>
push   $0x6c656800
jo     80627b1 <_IO_stdin_used+0x36d>
imul   $0x6564756c,0x63(%esi),%ebp
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8062824 <_IO_stdin_used+0x3e0>
sub    $0x65736163,%eax
add    %ch,0x6e(%ecx)
imul   $0x61742d6c,0x61(%ecx,%ebp,2),%esi
bound  %eax,(%eax)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
add    %ch,0x6e(%ecx,%ebp,2)
gs
sub    $0x66667562,%eax
gs
jb     8062848 <_IO_stdin_used+0x404>
add    %ch,%fs:0x6e(%ecx,%ebp,2)
gs
sub    $0x626d756e,%eax
gs
jb     80627f1 <_IO_stdin_used+0x3ad>
insb   (%dx),%es:(%edi)
imul   $0x6765722d,0x65(%esi),%ebp
gs
js     806286c <_IO_stdin_used+0x428>
add    %ch,0x61(%ebp)
js     806282e <_IO_stdin_used+0x3ea>
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     8062807 <_IO_stdin_used+0x3c3>
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
jo     806280c <_IO_stdin_used+0x3c8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
sub    $0x756f7267,%eax
jo     806284e <_IO_stdin_used+0x40a>
jae    8062888 <_IO_stdin_used+0x444>
jo     8062886 <_IO_stdin_used+0x442>
jb     8062888 <_IO_stdin_used+0x444>
je     8062898 <_IO_stdin_used+0x454>
jb     806282b <_IO_stdin_used+0x3e7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7373656d,%eax
popa
addr16
gs
jae    8062837 <_IO_stdin_used+0x3f3>
outsb  %ds:(%esi),(%dx)
jne    80628a6 <_IO_stdin_used+0x462>
insb   (%dx),%es:(%edi)
add    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61746164,%eax
add    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8062878 <_IO_stdin_used+0x434>
insl   (%dx),%es:(%edi)
popa
je     80628b2 <_IO_stdin_used+0x46e>
push   $0x676e69
jno    80628cb <_IO_stdin_used+0x487>
imul   $0x72656400,0x74(%ebp),%esp
gs
data16
gs
jb     80628c7 <_IO_stdin_used+0x483>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
jb     80628cd <_IO_stdin_used+0x489>
arpl   %si,0x72(%ebp)
jae    80628d6 <_IO_stdin_used+0x492>
jbe    80628d4 <_IO_stdin_used+0x490>
add    %ch,0x6e(%ecx)
jbe    80628d9 <_IO_stdin_used+0x495>
jb     80628ea <_IO_stdin_used+0x4a6>
sub    $0x6374616d,%eax
push   $0x6c697300
outsb  %gs:(%esi),(%dx)
je     8062884 <_IO_stdin_used+0x440>
jne    80628f4 <_IO_stdin_used+0x4b0>
imul   $0x65747962,0x2d(%eax),%edi
sub    $0x7366666f,%eax
gs
je     8062908 <_IO_stdin_used+0x4c4>
add    %dh,0x65(%esi)
jb     806290d <_IO_stdin_used+0x4c9>
imul   $0x74697700,0x6e(%edi),%ebp
push   $0x6c69662d
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x6f(%edi)
jb     8062914 <_IO_stdin_used+0x4d0>
sub    $0x65676572,%eax
js     8062927 <_IO_stdin_used+0x4e3>
add    %ch,0x73(%ebp)
add    %ch,0x63(%ebp)
add    %ah,0x6e(%esi)
add    %ch,0x0(%esi,%ebp,2)
bound  %ebp,0x0(%esi)
jae    8062935 <_IO_stdin_used+0x4f1>
add    %ah,0x78(%ebx)
add    %dh,0x76(%edx)
add    %bl,(%ebx)
pop    %ebx
insl   (%dx),%es:(%edi)
sbb    0x4b(%ebx),%ebx
add    %bl,(%ebx)
pop    %ebx
and    $0x5b1b6d73,%eax
dec    %ebx
add    %dh,(%ebx)
add    %dh,%ss:(%ebx)
xor    (%eax),%al
xor    0x3b313000,%esi
xor    (%ecx),%esi
add    %ch,0x2d
and    $0x61632073,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8062920 <_IO_stdin_used+0x4dc>
jne    8062975 <_IO_stdin_used+0x531>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x61702073
je     8062983 <_IO_stdin_used+0x53f>
gs
jb     8062980 <_IO_stdin_used+0x53c>
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     8062979 <_IO_stdin_used+0x535>
js     806291a <_IO_stdin_used+0x4d6>
add    %al,(%eax)
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x20676e69,0x74(%ebx),%esp
insl   (%dx),%es:(%edi)
popa
je     806298f <_IO_stdin_used+0x54b>
push   $0x20737265
jae    80629a3 <_IO_stdin_used+0x55f>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e690000,0x64(%ebp),%esp
jbe    80629a1 <_IO_stdin_used+0x55d>
insb   (%dx),%es:(%edi)
imul   $0x65746e6f,0x63(%eax,%eiz,1),%esp
js     80629bf <_IO_stdin_used+0x57b>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 80629ba <_IO_stdin_used+0x576>
and    %ah,0x72(%ecx)
addr16 jne 80629c5 <_IO_stdin_used+0x581>
outsb  %gs:(%esi),(%dx)
je     806295c <_IO_stdin_used+0x518>
imul   $0x66207475,0x70(%esi),%ebp
imul   $0x69207325,0x20(%ebp,%eiz,2),%ebp
jae    806298d <_IO_stdin_used+0x549>
popa
insb   (%dx),%es:(%edi)
jae    80629e0 <_IO_stdin_used+0x59c>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     80629ea <_IO_stdin_used+0x5a6>
jne    80629f0 <_IO_stdin_used+0x5ac>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    80629e4 <_IO_stdin_used+0x5a0>
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %bl,0x46(%ebx)
dec    %ecx
dec    %esp
inc    %ebp
pop    %ebp
cs cs or %cs:(%eax),%al
add    %al,(%eax)
add    %dl,0x79(%edx,%esi,2)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     80629e0 <_IO_stdin_used+0x59c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8062a29 <_IO_stdin_used+0x5e5>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8062a38 <_IO_stdin_used+0x5f4>
popa
je     8062a37 <_IO_stdin_used+0x5f3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x65(%ebx)
popa
jb     8062a3c <_IO_stdin_used+0x5f8>
push   $0x726f6620
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x6e(%ecx)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x72(%edi)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8062a63 <_IO_stdin_used+0x61f>
and    %ch,0x6e(%ecx)
jo     8062a79 <_IO_stdin_used+0x635>
je     8062a34 <_IO_stdin_used+0x5f0>
or     (%eax),%al
inc    %ebp
js     8062a6c <_IO_stdin_used+0x628>
insl   (%dx),%es:(%edi)
jo     8062a7a <_IO_stdin_used+0x636>
cmp    %gs:(%eax),%ah
and    $0x692d2073,%eax
and    %ah,(%edi)
push   $0x6f6c6c65
and    %dh,0x6f(%edi)
jb     8062a8e <_IO_stdin_used+0x64a>
fs
daa
and    %ch,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
jne    8062a58 <_IO_stdin_used+0x614>
push   $0x69616d20
outsb  %ds:(%esi),(%dx)
arpl   %cx,%cs:(%edx)
or     0x65(%edx),%dl
addr16
gs
js     8062aaa <_IO_stdin_used+0x666>
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x6e(%ecx)
je     8062ab2 <_IO_stdin_used+0x66e>
jb     8062abf <_IO_stdin_used+0x67b>
jb     8062ab6 <_IO_stdin_used+0x672>
je     8062ab4 <_IO_stdin_used+0x670>
je     8062abe <_IO_stdin_used+0x67a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%edx),%cl
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c45
sub    $0x65747865,%eax
outsb  %ds:(%esi),(%dx)
fs
gs
fs
sub    $0x65676572,%eax
js     8062ae3 <_IO_stdin_used+0x69f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ah,0x78(%ebp)
je     8062aef <_IO_stdin_used+0x6ab>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x65(%edx)
addr16 jne 8062b00 <_IO_stdin_used+0x6bc>
popa
jb     8062ab7 <_IO_stdin_used+0x673>
gs
js     8062b0a <_IO_stdin_used+0x6c6>
jb     8062b01 <_IO_stdin_used+0x6bd>
jae    8062b11 <_IO_stdin_used+0x6cd>
imul   $0x52452820,0x6e(%edi),%ebp
inc    %ebp
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c46,%eax
sub    $0x65786966,%eax
fs
sub    $0x69727473,%eax
outsb  %ds:(%esi),(%dx)
addr16 jae 8062ade <_IO_stdin_used+0x69a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    8062b38 <_IO_stdin_used+0x6f4>
je     8062af5 <_IO_stdin_used+0x6b1>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%esi)
ja     8062b48 <_IO_stdin_used+0x704>
imul   $0x7065732d,0x65(%esi),%ebp
popa
jb     8062b47 <_IO_stdin_used+0x703>
je     8062b4d <_IO_stdin_used+0x709>
and    %ah,%fs:0x69(%esi)
js     8062b53 <_IO_stdin_used+0x70f>
and    %dh,%fs:0x74(%ebx)
jb     8062b5d <_IO_stdin_used+0x719>
outsb  %ds:(%esi),(%dx)
addr16 jae 8062b02 <_IO_stdin_used+0x6be>
and    %ah,(%eax)
sub    $0x2d202c47,%eax
sub    $0x69736162,%eax
arpl   %bp,0x65676572
js     8062b7c <_IO_stdin_used+0x738>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
bound  %esp,0x73(%ecx)
imul   $0x75676572,0x20(%ebx),%esp
insb   (%dx),%es:(%edi)
popa
jb     8062b4f <_IO_stdin_used+0x70b>
gs
js     8062ba2 <_IO_stdin_used+0x75e>
jb     8062b99 <_IO_stdin_used+0x755>
jae    8062ba9 <_IO_stdin_used+0x765>
imul   $0x52422820,0x6e(%edi),%ebp
inc    %ebp
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c50,%eax
sub    $0x6c726570,%eax
sub    $0x65676572,%eax
js     8062bc3 <_IO_stdin_used+0x77f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
push   %eax
gs
jb     8062bd9 <_IO_stdin_used+0x795>
and    %dh,0x65(%edx)
addr16 jne 8062bdf <_IO_stdin_used+0x79b>
popa
jb     8062b96 <_IO_stdin_used+0x752>
gs
js     8062be9 <_IO_stdin_used+0x7a5>
jb     8062be0 <_IO_stdin_used+0x79c>
jae    8062bf0 <_IO_stdin_used+0x7ac>
imul   $0xa,0x6e(%edi),%ebp
and    %ah,(%eax)
sub    $0x2d202c65,%eax
sub    $0x65676572,%eax
js     8062c02 <_IO_stdin_used+0x7be>
cmp    $0x54544150,%eax
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8062c15 <_IO_stdin_used+0x7d1>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,0x6f(%esi)
jb     8062bd0 <_IO_stdin_used+0x78c>
insl   (%dx),%es:(%edi)
popa
je     8062c17 <_IO_stdin_used+0x7d3>
push   $0xa676e69
and    %ah,(%eax)
sub    $0x2d202c66,%eax
sub    $0x656c6966,%eax
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x62(%edi)
je     8062c3a <_IO_stdin_used+0x7f6>
imul   $0x54544150,0x20(%esi),%ebp
inc    %ebp
push   %edx
dec    %esi
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c69
sub    $0x6f6e6769,%eax
jb     8062c61 <_IO_stdin_used+0x81d>
sub    $0x65736163,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8062c75 <_IO_stdin_used+0x831>
and    %ah,0x61(%ebx)
jae    8062c7a <_IO_stdin_used+0x836>
and    %ah,0x73(%ecx,%ebp,2)
je     8062c84 <_IO_stdin_used+0x840>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    8062c2d <_IO_stdin_used+0x7e9>
and    %ah,(%eax)
sub    $0x2d202c77,%eax
sub    $0x64726f77,%eax
sub    $0x65676572,%eax
js     8062ca6 <_IO_stdin_used+0x862>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     8062ca6 <_IO_stdin_used+0x862>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     8062cb7 <_IO_stdin_used+0x873>
push   $0x6c6e6f20
jns    8062c7b <_IO_stdin_used+0x837>
ja     8062cc5 <_IO_stdin_used+0x881>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi)
jb     8062cc9 <_IO_stdin_used+0x885>
jae    8062c71 <_IO_stdin_used+0x82d>
and    %ah,(%eax)
sub    $0x2d202c78,%eax
sub    $0x656e696c,%eax
sub    $0x65676572,%eax
js     8062cea <_IO_stdin_used+0x8a6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     8062cea <_IO_stdin_used+0x8a6>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     8062cfb <_IO_stdin_used+0x8b7>
push   $0x6c6e6f20
jns    8062cbf <_IO_stdin_used+0x87b>
ja     8062d09 <_IO_stdin_used+0x8c5>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
gs
jae    8062cb5 <_IO_stdin_used+0x871>
and    %ah,(%eax)
sub    $0x2d202c7a,%eax
sub    $0x6c6c756e,%eax
sub    $0x61746164,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%ecx)
fs
popa
je     8062d2e <_IO_stdin_used+0x8ea>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6e(%ebp)
fs
jae    8062cf8 <_IO_stdin_used+0x8b4>
imul   $0x79622030,0x20(%esi),%ebp
je     8062d46 <_IO_stdin_used+0x902>
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8062d07 <_IO_stdin_used+0x8c3>
outsb  %ds:(%esi),(%dx)
gs
ja     8062d57 <_IO_stdin_used+0x913>
imul   $0x4d0a000a,0x65(%esi),%ebp
imul   $0x616c6c65,0x63(%ebx),%esi
outsb  %ds:(%esi),(%dx)
outsl  %gs:(%esi),(%dx)
jne    8062d71 <_IO_stdin_used+0x92d>
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c73,%eax
sub    $0x6d2d6f6e,%eax
gs
jae    8062d82 <_IO_stdin_used+0x93e>
popa
addr16
gs
jae    8062d34 <_IO_stdin_used+0x8f0>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8062d93 <_IO_stdin_used+0x94f>
jo     8062d90 <_IO_stdin_used+0x94c>
jb     8062d87 <_IO_stdin_used+0x943>
jae    8062d97 <_IO_stdin_used+0x953>
and    %ah,0x72(%ebp)
jb     8062d98 <_IO_stdin_used+0x954>
jb     8062d4b <_IO_stdin_used+0x907>
insl   (%dx),%es:(%edi)
gs
jae    8062da2 <_IO_stdin_used+0x95e>
popa
addr16
gs
jae    8062d3e <_IO_stdin_used+0x8fa>
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x65766e69,%eax
jb     8062db6 <_IO_stdin_used+0x972>
sub    $0x6374616d,%eax
push   $0x20202020
and    %ah,(%eax)
and    %ah,(%eax)
jae    8062db7 <_IO_stdin_used+0x973>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6e(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x6374616d,%eax
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x20200a73,0x65(%esi),%ebp
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x72657620,0x74(%esi),%ebp
jae    8062dfa <_IO_stdin_used+0x9b6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8062e07 <_IO_stdin_used+0x9c3>
popa
je     8062e06 <_IO_stdin_used+0x9c2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x20(%edx,%ecx,1),%esi
and    %ch,0x6c65682d
jo     8062dd6 <_IO_stdin_used+0x992>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     8062e36 <_IO_stdin_used+0x9f2>
popa
jns    8062ded <_IO_stdin_used+0x9a9>
je     8062e37 <_IO_stdin_used+0x9f3>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x20(%edx,%ecx,1),%esi
and    %ch,0x616d6d2d
jo     8062e0d <_IO_stdin_used+0x9c9>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x70(%ebp,%eiz,2)
jb     8062e66 <_IO_stdin_used+0xa22>
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x6f(%esi)
sub    $0x203b706f,%eax
gs
jbe    8062e80 <_IO_stdin_used+0xa3c>
imul   $0x20,0x73(%ebp),%esp
popa
and    %dh,0x61(%edi)
jb     8062e89 <_IO_stdin_used+0xa45>
imul   $0x4f0a000a,0x67(%esi),%ebp
jne    8062e98 <_IO_stdin_used+0xa54>
jo     8062e9b <_IO_stdin_used+0xa57>
je     8062e48 <_IO_stdin_used+0xa04>
arpl   %bp,0x6e(%edi)
je     8062e9f <_IO_stdin_used+0xa5b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c6d,%eax
sub    $0x2d78616d,%eax
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     8062e80 <_IO_stdin_used+0xa3c>
dec    %esi
push   %ebp
dec    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     8062e72 <_IO_stdin_used+0xa2e>
popa
data16
je     8062ebb <_IO_stdin_used+0xa77>
jb     8062e78 <_IO_stdin_used+0xa34>
dec    %esi
push   %ebp
dec    %ebp
and    %ch,0x61(%ebp)
je     8062ec3 <_IO_stdin_used+0xa7f>
push   $0x200a7365
and    %ch,0x2d202c62
sub    $0x65747962,%eax
sub    $0x7366666f,%eax
gs
je     8062e98 <_IO_stdin_used+0xa54>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     8062ef4 <_IO_stdin_used+0xab0>
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x79(%edx)
je     8062ef3 <_IO_stdin_used+0xaaf>
and    %ch,0x66(%edi)
data16
jae    8062ef9 <_IO_stdin_used+0xab5>
je     8062eb6 <_IO_stdin_used+0xa72>
ja     8062f01 <_IO_stdin_used+0xabd>
je     8062f02 <_IO_stdin_used+0xabe>
and    %ch,0x75(%edi)
je     8062f0f <_IO_stdin_used+0xacb>
jne    8062f15 <_IO_stdin_used+0xad1>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    8062eb2 <_IO_stdin_used+0xa6e>
and    %ah,(%eax)
sub    $0x2d202c6e,%eax
sub    $0x656e696c,%eax
sub    $0x626d756e,%eax
gs
jb     8062edc <_IO_stdin_used+0xa98>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     8062f38 <_IO_stdin_used+0xaf4>
imul   $0x6e696c20,0x74(%esi),%ebp
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x69(%edi)
je     8062f42 <_IO_stdin_used+0xafe>
and    %ch,0x75(%edi)
je     8062f4f <_IO_stdin_used+0xb0b>
jne    8062f55 <_IO_stdin_used+0xb11>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    8062ef2 <_IO_stdin_used+0xaae>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e696c2d,%eax
gs
sub    $0x66667562,%eax
gs
jb     8062f61 <_IO_stdin_used+0xb1d>
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%esi)
jne    8062f7b <_IO_stdin_used+0xb37>
push   $0x74756f20
jo     8062f84 <_IO_stdin_used+0xb40>
je     8062f31 <_IO_stdin_used+0xaed>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp)
gs
jb     8062f92 <_IO_stdin_used+0xb4e>
and    %ch,0x6e(%ecx,%ebp,2)
or     %gs:(%eax),%ah
and    %ch,0x2d202c48
sub    $0x68746977,%eax
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     8062f73 <_IO_stdin_used+0xb2f>
gs
popa
arpl   %bp,0x20(%eax)
insl   (%dx),%es:(%edi)
popa
je     8062fbf <_IO_stdin_used+0xb7b>
push   $0x2d20200a
push   $0x2d2d202c
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     8062fee <_IO_stdin_used+0xbaa>
jb     8062fe5 <_IO_stdin_used+0xba1>
jae    8062ff5 <_IO_stdin_used+0xbb1>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
imul   $0x6e6f,%gs:0x20(%eax),%di
and    %ch,0x75(%edi)
je     806300f <_IO_stdin_used+0xbcb>
jne    8063015 <_IO_stdin_used+0xbd1>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x62616c2d
gs
insb   (%dx),%es:(%edi)
cmp    $0x4542414c,%eax
dec    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %cl,%gs:0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
and    %ah,0x73(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806303b <_IO_stdin_used+0xbf7>
and    %ch,0x6e(%ecx)
jo     8063051 <_IO_stdin_used+0xc0d>
je     8062ffe <_IO_stdin_used+0xbba>
imul   $0x616e,0x20(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
imul   $0x2000,%gs:0xa(%eax),%di
and    %ch,0x2d202c6f
sub    $0x796c6e6f,%eax
sub    $0x6374616d,%eax
push   $0x20676e69
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8063076 <_IO_stdin_used+0xc32>
outsl  %ds:(%esi),(%dx)
ja     8063031 <_IO_stdin_used+0xbed>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8063036 <_IO_stdin_used+0xbf2>
je     8063080 <_IO_stdin_used+0xc3c>
and    %dh,%gs:0x61(%eax)
jb     8063092 <_IO_stdin_used+0xc4e>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x74616d20,0x65(%esi),%ebp
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %dl,0x41(%bx,%si)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ch,0x2d202c71
sub    $0x65697571,%eax
je     8063074 <_IO_stdin_used+0xc30>
and    %ch,0x6c69732d
outsb  %gs:(%esi),(%dx)
je     8063072 <_IO_stdin_used+0xc2e>
and    %ah,(%eax)
and    %ah,(%eax)
jae    80630cd <_IO_stdin_used+0xc89>
jo     80630ca <_IO_stdin_used+0xc86>
jb     80630c1 <_IO_stdin_used+0xc7d>
jae    80630d1 <_IO_stdin_used+0xc8d>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
jb     80630d4 <_IO_stdin_used+0xc90>
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     80630de <_IO_stdin_used+0xc9a>
jne    80630e4 <_IO_stdin_used+0xca0>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e69622d
popa
jb     80630f8 <_IO_stdin_used+0xcb4>
sub    $0x656c6966,%eax
jae    80630c3 <_IO_stdin_used+0xc7f>
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ah,(%eax)
and    %ah,0x73(%ecx)
jae    8063106 <_IO_stdin_used+0xcc2>
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax,%ebp,2)
je     80630b9 <_IO_stdin_used+0xc75>
bound  %ebp,0x6e(%ecx)
popa
jb     8063118 <_IO_stdin_used+0xcd4>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    80630c6 <_IO_stdin_used+0xc82>
popa
jb     806310e <_IO_stdin_used+0xcca>
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
cmp    (%edx),%ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ch,0x73(%ecx)
and    %ah,(%edi)
bound  %ebp,0x6e(%ecx)
popa
jb     8063154 <_IO_stdin_used+0xd10>
daa
sub    $0x20,%al
daa
je     8063146 <_IO_stdin_used+0xd02>
js     8063157 <_IO_stdin_used+0xd13>
daa
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8063109 <_IO_stdin_used+0xcc5>
daa
ja     8063155 <_IO_stdin_used+0xd11>
je     8063156 <_IO_stdin_used+0xd12>
outsl  %ds:(%esi),(%dx)
jne    8063165 <_IO_stdin_used+0xd21>
sub    $0x6374616d,%eax
push   $0x20200a27
sub    $0x2d202c61,%eax
sub    $0x74786574,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jno    806318d <_IO_stdin_used+0xd49>
imul   $0x746e656c,0x61(%esi),%esi
and    %dh,0x20(%edi,%ebp,2)
sub    $0x6e69622d,%eax
popa
jb     80631a4 <_IO_stdin_used+0xd60>
sub    $0x656c6966,%eax
jae    806316f <_IO_stdin_used+0xd2b>
je     8063199 <_IO_stdin_used+0xd55>
js     80631aa <_IO_stdin_used+0xd66>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x20202049,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x71(%ebp)
jne    80631c1 <_IO_stdin_used+0xd7d>
jbe    80631bb <_IO_stdin_used+0xd77>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     806317f <_IO_stdin_used+0xd3b>
je     80631d0 <_IO_stdin_used+0xd8c>
and    %ch,0x6e69622d
popa
jb     80631e3 <_IO_stdin_used+0xd9f>
sub    $0x656c6966,%eax
jae    80631ae <_IO_stdin_used+0xd6a>
ja     80631dc <_IO_stdin_used+0xd98>
je     80631dd <_IO_stdin_used+0xd99>
outsl  %ds:(%esi),(%dx)
jne    80631ec <_IO_stdin_used+0xda8>
sub    $0x6374616d,%eax
push   $0x2d20200a
fs
sub    $0x20,%al
sub    $0x7269642d,%eax
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x5443413d,0x73(%ebp),%esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
push   $0x7420776f
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x20200a3b,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
jb     8063244 <_IO_stdin_used+0xe00>
popa
fs
daa
sub    $0x20,%al
daa
jb     806324c <_IO_stdin_used+0xe08>
arpl   %si,0x72(%ebp)
jae    8063251 <_IO_stdin_used+0xe0d>
daa
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8063212 <_IO_stdin_used+0xdce>
daa
jae    8063260 <_IO_stdin_used+0xe1c>
imul   $0x2d20200a,0x27(%eax),%esi
inc    %esp
sub    $0x20,%al
sub    $0x7665642d,%eax
imul   $0x43413d73,0x65(%ebx),%esp
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   $0x7420776f
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x46202c73,0x65(%ebx),%esp
dec    %ecx
inc    %esi
dec    %edi
jae    8063252 <_IO_stdin_used+0xe0e>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     80632b0 <_IO_stdin_used+0xe6c>
cmp    (%edx),%ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
jb     80632cd <_IO_stdin_used+0xe89>
popa
fs
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
jae    80632dd <_IO_stdin_used+0xe99>
imul   $0x2d20200a,0x27(%eax),%esi
jb     80632a7 <_IO_stdin_used+0xe63>
and    %ch,0x6365722d
jne    80632f5 <_IO_stdin_used+0xeb1>
jae    80632ee <_IO_stdin_used+0xeaa>
jbe    80632ec <_IO_stdin_used+0xea8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6b(%ecx,%ebp,2)
and    %ch,%gs:0x7269642d
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6365723d,0x73(%ebp),%esp
jne    806331c <_IO_stdin_used+0xed8>
jae    8063311 <_IO_stdin_used+0xecd>
or     (%eax),%ah
and    %ch,0x2d202c52
sub    $0x65726564,%eax
data16
gs
jb     8063322 <_IO_stdin_used+0xede>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
jb     8063328 <_IO_stdin_used+0xee4>
arpl   %si,0x72(%ebp)
jae    8063331 <_IO_stdin_used+0xeed>
jbe    806332f <_IO_stdin_used+0xeeb>
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x65736977,0x65(%ebx),%ebp
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8063301 <_IO_stdin_used+0xebd>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0xa73,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x636e692d,%eax
insb   (%dx),%es:(%edi)
jne    8063362 <_IO_stdin_used+0xf1e>
gs
cmp    $0x454c4946,%eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
jae    8063375 <_IO_stdin_used+0xf31>
popa
jb     8063376 <_IO_stdin_used+0xf32>
push   $0x6c6e6f20
jns    806333a <_IO_stdin_used+0xef6>
imul   $0x7420,0x73(%ebp,%eiz,2),%bp
push   $0x6d207461
popa
je     806338c <_IO_stdin_used+0xf48>
push   $0x4c494620
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    80633aa <_IO_stdin_used+0xf66>
gs
cmp    $0x454c4946,%eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
jae    80633c3 <_IO_stdin_used+0xf7f>
imul   $0x656c6966,0x20(%eax),%esi
jae    8063381 <_IO_stdin_used+0xf3d>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x74616d20,0x73(%ebp),%esp
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %al,0x49(%bp)
dec    %esp
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    80633f9 <_IO_stdin_used+0xfb5>
gs
sub    $0x6d6f7266,%eax
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %dh,0x6b(%ebx)
imul   $0x656c6966,0x20(%eax),%esi
jae    80633ce <_IO_stdin_used+0xf8a>
insl   (%dx),%es:(%edi)
popa
je     8063415 <_IO_stdin_used+0xfd1>
push   $0x20676e69
popa
outsb  %ds:(%esi),(%dx)
jns    80633db <_IO_stdin_used+0xf97>
imul   $0x6170,0x20(%ebp,%eiz,2),%bp
je     8063438 <_IO_stdin_used+0xff4>
gs
jb     8063435 <_IO_stdin_used+0xff1>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    8063444 <_IO_stdin_used+0x1000>
gs
sub    $0x3d726964,%eax
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x61687420,0x73(%ebp),%esp
je     8063420 <_IO_stdin_used+0xfdc>
insl   (%dx),%es:(%edi)
popa
je     8063467 <_IO_stdin_used+0x1023>
push   $0x54415020
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x6b(%ebx)
imul   $0xa2e6465,0x70(%eax),%esi
add    %ah,(%eax)
and    %ch,0x2d202c4c
sub    $0x656c6966,%eax
jae    806345b <_IO_stdin_used+0x1017>
ja     8063499 <_IO_stdin_used+0x1055>
je     806349a <_IO_stdin_used+0x1056>
outsl  %ds:(%esi),(%dx)
jne    80634a9 <_IO_stdin_used+0x1065>
sub    $0x6374616d,%eax
push   $0x72702020
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    8063468 <_IO_stdin_used+0x1024>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806346e <_IO_stdin_used+0x102a>
outsl  %ds:(%esi),(%dx)
data16
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    8063477 <_IO_stdin_used+0x1033>
arpl   %bp,0x6e(%edi)
je     80634bd <_IO_stdin_used+0x1079>
imul   $0x6e20676e,0x69(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     80634cc <_IO_stdin_used+0x1088>
push   $0x2d20200a
insb   (%dx),%es:(%edi)
sub    $0x20,%al
sub    $0x6c69662d,%eax
gs
jae    80634a6 <_IO_stdin_used+0x1062>
ja     80634e4 <_IO_stdin_used+0x10a0>
je     80634e5 <_IO_stdin_used+0x10a1>
sub    $0x6374616d,%eax
push   $0x20207365
jo     80634fb <_IO_stdin_used+0x10b7>
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    80634b2 <_IO_stdin_used+0x106e>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    80634b8 <_IO_stdin_used+0x1074>
outsl  %ds:(%esi),(%dx)
data16
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    80634c1 <_IO_stdin_used+0x107d>
arpl   %bp,0x6e(%edi)
je     8063507 <_IO_stdin_used+0x10c3>
imul   $0x6d20676e,0x69(%esi),%ebp
popa
je     8063513 <_IO_stdin_used+0x10cf>
push   $0x200a7365
and    %ch,0x2d202c63
sub    $0x6e756f63,%eax
je     80634e2 <_IO_stdin_used+0x109e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     8063544 <_IO_stdin_used+0x1100>
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    80634fb <_IO_stdin_used+0x10b7>
popa
and    %ah,0x6f(%ebx)
jne    806354f <_IO_stdin_used+0x110b>
je     8063503 <_IO_stdin_used+0x10bf>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%ebp)
je     806354d <_IO_stdin_used+0x1109>
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x65702073,0x65(%esi),%ebp
jb     8063519 <_IO_stdin_used+0x10d5>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c54
sub    $0x74696e69,%eax
imul   $0x6261742d,0x6c(%ecx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x74,0x20(%ebp),%esp
popa
bound  %esi,0x20(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x20707520,0x65(%esi),%ebp
sub    %ch,0x66(%ecx)
and    %ch,0x65(%esi)
gs fs gs sub %ecx,%fs:%gs:(%edx)
and    %ah,(%eax)
sub    $0x2d202c5a,%eax
sub    $0x6c6c756e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     80635c8 <_IO_stdin_used+0x1184>
imul   $0x62203020,0x74(%esi),%ebp
jns    80635d3 <_IO_stdin_used+0x118f>
and    %ah,%gs:0x66(%ecx)
je     80635ca <_IO_stdin_used+0x1186>
jb     8063587 <_IO_stdin_used+0x1143>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
or     0x6f(%ebx),%al
outsb  %ds:(%esi),(%dx)
je     80635df <_IO_stdin_used+0x119b>
js     80635f0 <_IO_stdin_used+0x11ac>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80635f4 <_IO_stdin_used+0x11b0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c42,%eax
sub    $0x6f666562,%eax
jb     80635f9 <_IO_stdin_used+0x11b5>
sub    $0x746e6f63,%eax
gs
js     8063610 <_IO_stdin_used+0x11cc>
cmp    $0x204d554e,%eax
and    %dh,0x72(%eax)
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    80635d2 <_IO_stdin_used+0x118e>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%ebp,%eiz,2)
imul   $0x6e6f6320,%fs:0x67(%esi),%ebp
je     8063627 <_IO_stdin_used+0x11e3>
js     8063638 <_IO_stdin_used+0x11f4>
or     (%eax),%ah
and    %ch,0x2d202c41
sub    $0x65746661,%eax
jb     8063600 <_IO_stdin_used+0x11bc>
arpl   %bp,0x6e(%edi)
je     806363d <_IO_stdin_used+0x11f9>
js     806364e <_IO_stdin_used+0x120a>
cmp    $0x204d554e,%eax
and    %ah,(%eax)
jo     8063655 <_IO_stdin_used+0x1211>
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    8063611 <_IO_stdin_used+0x11cd>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx,%esi,2)
imul   $0x6f632067,0x6e(%ecx,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
je     8063667 <_IO_stdin_used+0x1223>
js     8063678 <_IO_stdin_used+0x1234>
or     (%eax),%ah
and    %ch,0x2d202c43
sub    $0x746e6f63,%eax
gs
js     8063688 <_IO_stdin_used+0x1244>
cmp    $0x204d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     8063695 <_IO_stdin_used+0x1251>
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    8063651 <_IO_stdin_used+0x120d>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x75(%edi)
je     80636a8 <_IO_stdin_used+0x1264>
jne    80636ae <_IO_stdin_used+0x126a>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80636a5 <_IO_stdin_used+0x1261>
js     80636b6 <_IO_stdin_used+0x1272>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x204d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6e6f632d
je     80636d4 <_IO_stdin_used+0x1290>
js     80636e5 <_IO_stdin_used+0x12a1>
cmp    $0xa4d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jb     80636df <_IO_stdin_used+0x129b>
cmp    $0x4e454857,%eax
pop    %ebp
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jne    806370c <_IO_stdin_used+0x12c8>
pop    %ebx
cmp    $0x4e454857,%eax
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x61(%ebp)
jb     806371b <_IO_stdin_used+0x12d7>
gs
jb     8063726 <_IO_stdin_used+0x12e2>
and    %dh,0x20(%edi,%ebp,2)
push   $0x6c686769
imul   $0x68742074,0x68(%edi),%esp
and    %ch,%gs:0x61(%ebp)
je     806372c <_IO_stdin_used+0x12e8>
push   $0x20676e69
jae    8063744 <_IO_stdin_used+0x1300>
jb     806373b <_IO_stdin_used+0x12f7>
outsb  %ds:(%esi),(%dx)
addr16 jae 8063711 <_IO_stdin_used+0x12cd>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x48(%edi)
inc    %ebp
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
popa
insb   (%dx),%es:(%edi)
ja     8063761 <_IO_stdin_used+0x131d>
jns    8063775 <_IO_stdin_used+0x1331>
daa
sub    $0x20,%al
daa
outsb  %ds:(%esi),(%dx)
gs
jbe    806376f <_IO_stdin_used+0x132b>
jb     8063733 <_IO_stdin_used+0x12ef>
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8063731 <_IO_stdin_used+0x12ed>
daa
popa
jne    8063789 <_IO_stdin_used+0x1345>
outsl  %ds:(%esi),(%dx)
daa
or     (%eax),%ah
and    %ch,0x2d202c55
sub    $0x616e6962,%eax
jb     806379f <_IO_stdin_used+0x135b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     806375b <_IO_stdin_used+0x1317>
jae    80637b1 <_IO_stdin_used+0x136d>
jb     80637a8 <_IO_stdin_used+0x1364>
jo     8063761 <_IO_stdin_used+0x131d>
inc    %ebx
push   %edx
and    %ah,0x68(%ebx)
popa
jb     80637aa <_IO_stdin_used+0x1366>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806376f <_IO_stdin_used+0x132b>
popa
je     8063772 <_IO_stdin_used+0x132e>
inc    %ebp
dec    %edi
dec    %esp
and    %ch,(%eax)
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
das
push   %edi
imul   $0x2973776f,0x64(%esi),%ebp
or     (%eax),%ah
and    %ch,0x2d202c75
sub    $0x78696e75,%eax
sub    $0x65747962,%eax
sub    $0x7366666f,%eax
gs
je     80637f2 <_IO_stdin_used+0x13ae>
and    %ah,(%eax)
and    %dh,0x65(%edx)
jo     80637f5 <_IO_stdin_used+0x13b1>
jb     80637fc <_IO_stdin_used+0x13b8>
and    %ch,0x66(%edi)
data16
jae    80637f3 <_IO_stdin_used+0x13af>
je     8063803 <_IO_stdin_used+0x13bf>
and    %ah,0x73(%ecx)
and    %ch,0x66(%ecx)
and    %al,0x52(%ebx)
jae    80637bb <_IO_stdin_used+0x1377>
ja     8063802 <_IO_stdin_used+0x13be>
jb     8063804 <_IO_stdin_used+0x13c0>
and    %ch,0x6f(%esi)
je     80637c4 <_IO_stdin_used+0x1380>
je     806380e <_IO_stdin_used+0x13ca>
gs
jb     806380e <_IO_stdin_used+0x13ca>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
das
push   %edi
imul   $0x2973776f,0x64(%esi),%ebp
or     (%edx),%cl
add    %dl,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
and    %ch,0x73(%ecx)
and    %ch,0x6572202c
popa
and    %dh,%fs:0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8063859 <_IO_stdin_used+0x1415>
and    %ch,0x6e(%ecx)
jo     806386f <_IO_stdin_used+0x142b>
je     806382a <_IO_stdin_used+0x13e6>
and    %ah,(%eax)
push   %edi
imul   $0x46206f6e,0x20(%eax,%ebp,2),%esi
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x20,%al
jb     8063873 <_IO_stdin_used+0x142f>
popa
and    %ch,%fs:(%esi)
and    %ch,0x66(%ecx)
and    %ah,0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
sub    $0x656e696c,%eax
or     0x73692072,%ch
and    %ah,0x69(%edi)
jbe    8063894 <_IO_stdin_used+0x1450>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
sub    $0x68746f20,%eax
gs
jb     80638b1 <_IO_stdin_used+0x146d>
imul   $0x4920202e,0x65(%ebx),%esi
data16
and    %ah,0x65(%esi)
ja     80638ac <_IO_stdin_used+0x1468>
jb     8063869 <_IO_stdin_used+0x1425>
je     80638b3 <_IO_stdin_used+0x146f>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%edi,%esi,2)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    8063878 <_IO_stdin_used+0x1434>
popa
jb     80638c0 <_IO_stdin_used+0x147c>
and    %ah,0x69(%edi)
jbe    80638c5 <_IO_stdin_used+0x1481>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
popa
jae    80638d9 <_IO_stdin_used+0x1495>
jne    80638d5 <_IO_stdin_used+0x1491>
and    %ch,%gs:0x450a2e68
js     80638da <_IO_stdin_used+0x1496>
je     8063893 <_IO_stdin_used+0x144f>
jae    80638e9 <_IO_stdin_used+0x14a5>
popa
je     80638ed <_IO_stdin_used+0x14a9>
jae    806389a <_IO_stdin_used+0x1456>
imul   $0x66692030,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
jns    80638a6 <_IO_stdin_used+0x1462>
insb   (%dx),%es:(%edi)
imul   $0x20736920,0x65(%esi),%ebp
jae    80638f5 <_IO_stdin_used+0x14b1>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    $0x20,%al
xor    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
je     8063905 <_IO_stdin_used+0x14c1>
gs
jb     8063917 <_IO_stdin_used+0x14d3>
imul   $0x66690a3b,0x65(%ebx),%esi
and    %ah,0x6e(%ecx)
jns    80638cc <_IO_stdin_used+0x1488>
gs
jb     8063921 <_IO_stdin_used+0x14dd>
outsl  %ds:(%esi),(%dx)
jb     80638d2 <_IO_stdin_used+0x148e>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x75(%ebx)
jb     806392b <_IO_stdin_used+0x14e7>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x73692071
and    %ch,0x6f(%esi)
je     80638e7 <_IO_stdin_used+0x14a3>
imul   $0x74202c6e,0x65(%bp),%esi
push   $0x78652065
imul   $0x75746174,0x73(%eax,%eiz,1),%esi
jae    80638fe <_IO_stdin_used+0x14ba>
imul   $0xa2e32,0x20(%ebx),%esi
add    %al,(%eax)
add    %ch,0x74(%eax)
je     806395c <_IO_stdin_used+0x1518>
cmp    (%edi),%ch
das
ja     8063968 <_IO_stdin_used+0x1524>
ja     8063921 <_IO_stdin_used+0x14dd>
outsb  %ds:(%si),(%dx)
jne    8063925 <_IO_stdin_used+0x14e1>
outsl  %ds:(%esi),(%dx)
jb     8063961 <_IO_stdin_used+0x151d>
das
jae    806396c <_IO_stdin_used+0x1528>
data16
je     8063977 <_IO_stdin_used+0x1533>
popa
jb     8063968 <_IO_stdin_used+0x1524>
das
addr16 jb 806396c <_IO_stdin_used+0x1528>
jo     8063938 <_IO_stdin_used+0x14f4>
add    %al,(%eax)
add    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     8063973 <_IO_stdin_used+0x152f>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8063939 <_IO_stdin_used+0x14f5>
jne    806398e <_IO_stdin_used+0x154a>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     806399f <_IO_stdin_used+0x155b>
popa
jb     8063990 <_IO_stdin_used+0x154c>
cmp    (%eax),%ah
cmp    $0x68,%al
je     80639a5 <_IO_stdin_used+0x1561>
jo     806396d <_IO_stdin_used+0x1529>
das
das
ja     80639ae <_IO_stdin_used+0x156a>
ja     8063967 <_IO_stdin_used+0x1523>
outsb  %ds:(%si),(%dx)
jne    806396b <_IO_stdin_used+0x1527>
outsl  %ds:(%esi),(%dx)
jb     80639a7 <_IO_stdin_used+0x1563>
das
addr16
gs
je     80639ad <_IO_stdin_used+0x1569>
gs
insb   (%dx),%es:(%edi)
jo     8063978 <_IO_stdin_used+0x1534>
or     %ds:(%eax),%al
je     80639b6 <_IO_stdin_used+0x1572>
and    %ch,%gs:0x616d6d2d
jo     8063977 <_IO_stdin_used+0x1533>
outsl  %ds:(%esi),(%dx)
jo     80639ce <_IO_stdin_used+0x158a>
imul   $0x73616820,0x6e(%edi),%ebp
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7320706f,%eax
imul   $0x30322065,0x63(%esi),%ebp
xor    %esi,(%eax)
add    %al,(%eax)
add    %ch,0x74(%edi)
push   $0x2c737265
and    %dh,0x65(%ebx)
and    %bh,%gs:(%eax,%ebp,2)
je     8063a00 <_IO_stdin_used+0x15bc>
jo     80639c8 <_IO_stdin_used+0x1584>
das
das
imul   $0x672e7673,0x2e(%si),%esi
outsb  %ds:(%esi),(%dx)
jne    80639c9 <_IO_stdin_used+0x1585>
outsl  %ds:(%esi),(%dx)
jb     8063a05 <_IO_stdin_used+0x15c1>
das
arpl   %sp,0x69(%edi)
je     80639d3 <_IO_stdin_used+0x158f>
addr16 jb 8063a0c <_IO_stdin_used+0x15c8>
jo     80639d7 <_IO_stdin_used+0x1593>
imul   $0x65657274,0x2f(%si),%esi
das
inc    %ecx
push   %ebp
push   %esp
dec    %eax
dec    %edi
push   %edx
push   %ebx
add    %al,%ds:(%eax)
add    %al,(%eax)
add    %al,(%eax)
rcl    %cl,%bh
add    $0x8,%al
dec    %ebx
fldl   (%eax,%ecx,1)
fcmovu %st(4),%st
add    $0x8,%al
fstp   %st(2)
add    $0x8,%al
jae    80639ae <_IO_stdin_used+0x156a>
add    $0x8,%al
rcl    %cl,%bh
add    $0x8,%al
rcl    %cl,%bh
add    $0x8,%al
jae    80639ba <_IO_stdin_used+0x1576>
add    $0x8,%al
jno    80639bd <_IO_stdin_used+0x1579>
add    $0x8,%al
rcl    %cl,%bh
add    $0x8,%al
jae    80639c6 <_IO_stdin_used+0x1582>
add    $0x8,%al
fstp   %st(2)
add    $0x8,%al
popa
aam    $0x4
or     %dh,-0x25(%ecx)
add    $0x8,%al
popa
aam    $0x4
or     %ah,(%eax)
lcall  $0x804,$0xa4240804
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
add    %esp,0x4a3ed08(%esp,%eax,1)
or     %bl,%dl
mov    %eax,0xa3ad0804
add    $0x8,%al
sahf
mov    %eax,0xa38f0804
add    $0x8,%al
andb   $0x4,-0x5c96f7fc(%ebx)
or     %dl,0x2408049b(%ebx)
movsb  %ds:(%esi),%es:(%edi)
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
pop    %edx
mov    %eax,0xa4240804
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
dec    %ebx
mov    %eax,0xa4240804
add    $0x8,%al
aaa
fwait
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
cmp    $0xa3,%al
add    $0x8,%al
and    %bl,-0x5cd2f7fc(%edx)
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
push   %ds
mov    %eax,0xa4240804
add    $0x8,%al
bt     %eax,(%eax,%ecx,1)
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
insb   (%dx),%es:(%edi)
fwait
add    $0x8,%al
add    %ah,-0x5d0ef7fc(%ebx)
add    $0x8,%al
lcall  $0x4a2,$0x460804a2
or     %ah,-0x5f(%edi)
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
push   %eax
mov    0xa1410804,%eax
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
xor    -0x5f3cf7fc(%ecx),%ah
add    $0x8,%al
mov    $0xa0,%ah
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
mov    0xa4240804,%al
add    $0x8,%al
mov    %fs,-0x64bef7fc(%eax)
add    $0x8,%al
jge    8063b6a <_IO_stdin_used+0x1726>
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    %bl,-0x5fcaf7fc(%edx)
add    $0x8,%al
mov    %es:0xa0170804,%al
add    $0x8,%al
inc    %ecx
mov    0xa00b0804,%eax
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
and    $0xa4,%al
add    $0x8,%al
ficomp -0x6116f7fc(%edi)
add    $0x8,%al
stos   %al,%es:(%edi)
sahf
add    $0x8,%al
stos   %al,%es:(%edi)
sahf
add    $0x8,%al
cmp    %ebx,-0x61d5f7fc(%esi)
add    $0x8,%al
sbb    -0x6214f7fc(%esi),%ebx
add    $0x8,%al
adc    $0x440804a4,%eax
mov    0x20804,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0xc8080626,%eax
es
push   %es
or     %cl,(%edx)
es
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%al
es
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
frstor (%esi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebp)
add    %al,(%eax)
in     (%dx),%eax
es
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
cli
es
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
or     %ah,(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
adc    $0x27,%al
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
and    (%edi),%ah
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
xor    %esp,(%edi)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3e000000(%eax)
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
sub    %esp,(%edi)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
dec    %edx
daa
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x50000000(%ecx)
daa
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x29000000(%ecx)
and    $0x806,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
push   %edi
daa
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dh,(%ebx)
es
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %bl,0x27(%edi)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x67000000(%ebx)
daa
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x27740000(%eax,%eax,1)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x80000000(%edi)
daa
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
test   %esp,(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %bl,0x80627(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %bl,(%ebx)
sub    %al,(%esi)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,-0x54000000(%eax)
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x1080693(%eax)
add    %al,(%eax)
add    %dh,0x1080627(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x47000000(%edx)
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
lds    (%edi),%esp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dl,%cl
daa
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x29000000(%esi)
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x1b000000(%ebp)
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
icebp
daa
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
std
daa
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
pop    %es
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0xc000000(%ecx)
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
sbb    %ch,(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x2b000000(%eax)
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
aaa
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%edx)
add    %al,(%eax)
cmp    $0x28,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
inc    %esi
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
push   %esp
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
data16
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
pop    %edx
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
(bad)
es
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
jo     8063f0a <_IO_stdin_used+0x1ac6>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
jge    8063f1a <_IO_stdin_used+0x1ad6>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
sub    $0x27,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
push   %ecx
es
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
test   %ch,(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
xchg   %eax,%esi
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
sahf
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
sub    %al,(%esi)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
inc    %ecx
cmp    0x3a(%edx),%al
inc    %ebx
cmp    0x45(%edx,%edi,1),%al
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
push   %eax
push   %esp
push   %ebp
push   %esi
pop    %eax
cmp    0x62(%ecx),%ah
arpl   %sp,0x65(%edx,%edi,1)
cmp    0x3a(%esi),%ah
push   $0x6d6c4c69
cmp    0x6f(%esi),%ch
jno    8064002 <_IO_stdin_used+0x1bbe>
jb     8064025 <_IO_stdin_used+0x1be1>
jne    806402a <_IO_stdin_used+0x1be6>
ja     806402e <_IO_stdin_used+0x1bea>
jns    8064012 <_IO_stdin_used+0x1bce>
jp     8063fba <_IO_stdin_used+0x1b76>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jecxz  8063fe7 <_IO_stdin_used+0x1ba3>
push   %es
or     %bh,-0x1ff7f96f(%eax)
scas   %es:(%edi),%al
add    $0x8,%al
mov    $0xb8080628,%eax
xchg   %eax,%ecx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,-0x4bf7f9d8(%ebx)
xchg   %eax,%ecx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %bh,-0x4ff7f9d8(%esi)
xchg   %eax,%ecx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,%cl
sub    %al,(%esi)
or     %ch,0x806(%ecx,%edx,4)
add    %al,(%eax)
les    (%eax),%ebp
push   %es
or     %ch,0x80691(%eax)
add    %al,(%eax)
add    %al,%dl
daa
push   %es
or     %ah,0x806(%ecx,%edx,4)
add    %al,(%eax)
(bad)
sub    %al,(%esi)
or     %ah,0x80691(%eax)
add    %al,(%eax)
add    %cl,%dl
sub    %al,(%esi)
or     %bl,0x806(%ecx,%edx,4)
add    %al,(%eax)
int    $0x28
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%al
scas   %es:(%edi),%al
add    $0x8,%al
xchg   %esp,(%esi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
scas   %es:(%edi),%eax
add    $0x8,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80640cf <_IO_stdin_used+0x1c8b>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %dh,%fs:%gs:0x65(%ebx)
popa
jb     80640c9 <_IO_stdin_used+0x1c85>
push   $0x6c697475
jae    806409b <_IO_stdin_used+0x1c57>
arpl   %ax,(%eax)
outsl  %ds:(%esi),(%dx)
jne    80640e6 <_IO_stdin_used+0x1ca2>
add    %ch,0x6e(%ebp,%eiz,2)
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     806407b <_IO_stdin_used+0x1c37>
insl   (%dx),%es:(%edi)
bound  %esi,0x6c(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     80640e8 <_IO_stdin_used+0x1ca4>
jb     8064085 <_IO_stdin_used+0x1c41>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x72(%ecx)
addr16 jne 80640ff <_IO_stdin_used+0x1cbb>
outsb  %gs:(%esi),(%dx)
je     80640b6 <_IO_stdin_used+0x1c72>
and    $0x6f662073,%eax
jb     80640bd <_IO_stdin_used+0x1c79>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    8064116 <_IO_stdin_used+0x1cd2>
jne    806411c <_IO_stdin_used+0x1cd8>
and    %ah,0x72(%ecx)
addr16 jne 806411c <_IO_stdin_used+0x1cd8>
outsb  %gs:(%esi),(%dx)
je     80640d3 <_IO_stdin_used+0x1c8f>
and    $0x6f662073,%eax
jb     80640da <_IO_stdin_used+0x1c96>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     806413f <_IO_stdin_used+0x1cfb>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x626d0073,%eax
jne    806414c <_IO_stdin_used+0x1d08>
je     806414a <_IO_stdin_used+0x1d06>
jb     8064115 <_IO_stdin_used+0x1cd1>
push   $0x73626d00
imul   $0x26282074,0x69(%esi),%ebp
imul   $0x74733e2d,0x72(%ebp,%eiz,2),%esi
popa
je     8064163 <_IO_stdin_used+0x1d1f>
sub    %eax,(%eax)
sub    0x74(%ecx),%ch
gs
jb     8064133 <_IO_stdin_used+0x1cef>
arpl   %si,%ds:0x72(%ebp)
jo,pn  8064181 <_IO_stdin_used+0x1d3d>
jb     806412f <_IO_stdin_used+0x1ceb>
cmp    $0x5c27203d,%eax
xor    %ah,(%edi)
add    %ch,0x74(%ecx)
gs
jb     8064149 <_IO_stdin_used+0x1d05>
arpl   %si,%ds:0x72(%ebp)
ja,pn  8064186 <_IO_stdin_used+0x1d42>
and    %bh,0x30203d
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     8064194 <_IO_stdin_used+0x1d50>
jb     8064190 <_IO_stdin_used+0x1d4c>
insl   (%dx),%es:(%edi)
jne    80641a0 <_IO_stdin_used+0x1d5c>
je     806419f <_IO_stdin_used+0x1d5b>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     80641af <_IO_stdin_used+0x1d6b>
add    %ah,(%ebx)
and    %ah,0x6e(%ebp)
je     80641b4 <_IO_stdin_used+0x1d70>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     8064190 <_IO_stdin_used+0x1d4c>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 80641e5 <_IO_stdin_used+0x1da1>
cmp    (%eax),%ah
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
enter  $0xcd42,$0xcc
dec    %esp
aas
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
orb    $0x0,0x0(%edi)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
out    %eax,(%dx)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg     80641f1 <_IO_stdin_used+0x1dad>
add    %al,(%eax)
add    %ch,0x62(%ebp)
jne    806426d <_IO_stdin_used+0x1e29>
je     806426b <_IO_stdin_used+0x1e27>
jb     8064267 <_IO_stdin_used+0x1e23>
insl   (%dx),%es:(%edi)
jne    8064277 <_IO_stdin_used+0x1e33>
je     8064276 <_IO_stdin_used+0x1e32>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     8064286 <_IO_stdin_used+0x1e42>
add    %al,(%eax)
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 806427b <_IO_stdin_used+0x1e37>
xor    %bl,0x20(%ebp)
ja     8064286 <_IO_stdin_used+0x1e42>
jae    8064247 <_IO_stdin_used+0x1e03>
jo     806428a <_IO_stdin_used+0x1e46>
jae    806429e <_IO_stdin_used+0x1e5a>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    806429b <_IO_stdin_used+0x1e57>
push   $0x206e6120
gs
js     80642a1 <_IO_stdin_used+0x1e5d>
arpl   %sp,(%eax)
jae    80642b9 <_IO_stdin_used+0x1e75>
jae    80642b6 <_IO_stdin_used+0x1e72>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x20732500,%eax
sub    %ah,0x55002973
push   %esp
inc    %esi
sub    $0x626d0038,%eax
jne    80642d3 <_IO_stdin_used+0x1e8f>
je     80642d1 <_IO_stdin_used+0x1e8d>
jb     80642cd <_IO_stdin_used+0x1e89>
insl   (%dx),%es:(%edi)
jne    80642dd <_IO_stdin_used+0x1e99>
je     80642dc <_IO_stdin_used+0x1e98>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     80642ec <_IO_stdin_used+0x1ea8>
add    %ah,%dl
sbbb   $0x22,0xafa100(%ecx)
add    %ah,-0x1dff9af9(%ecx)
sbbb   $0x38,0x31424700(%eax)
xor    %dh,(%ebx)
xor    %al,(%eax)
pusha
add    %ch,0x74(%ecx,%ebp,2)
gs
jb     80642fb <_IO_stdin_used+0x1eb7>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    8064321 <_IO_stdin_used+0x1edd>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    8064317 <_IO_stdin_used+0x1ed3>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %dl,%al
popa
add    $0x566c808,%eax
or     %al,(%eax)
addr16 add $0x5674008,%eax
or     %al,-0x4ff7fa99(%eax)
addr16 add $0x567d808,%eax
or     %bl,%al
addr16 add $0x567d808,%eax
or     %ah,(%eax)
gs
add    $0x5660808,%eax
or     %cl,(%eax)
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
gs
add    $0x564f008,%eax
or     %bl,(%eax)
gs
add    $0x5651008,%eax
or     %al,(%eax)
gs
add    $0x564f808,%eax
or     %dl,%al
fs
add    $0x5660808,%eax
or     %cl,(%eax)
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x808,%ax
add    $0x5708,%ax
fs
add    $0x5645708,%eax
or     %dl,0x64(%edi)
add    $0x5644f08,%eax
or     %dl,0x64(%edi)
add    $0x5636008,%eax
or     %dl,0x64(%edi)
add    $0x565b808,%eax
or     %dl,0x64(%edi)
add    $0x5645708,%eax
or     %dl,0x64(%edi)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5645708,%eax
or     %dl,0x64(%edi)
add    $0x5645708,%eax
or     %dl,0x64(%edi)
add    $0x562a808,%eax
or     %cl,(%eax)
add    $0x6008,%ax
arpl   %ax,0x5636008
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %dl,0x64(%edi)
add    $0x5659808,%eax
or     %ah,0x63(%eax)
add    $0x5645708,%eax
or     %ah,0x63(%eax)
add    $0x5645708,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %ah,0x63(%eax)
add    $0x5636008,%eax
or     %bh,(%eax)
fs
add    $0x5645708,%eax
or     %bh,(%eax)
fs
add    $0x5644f08,%eax
or     %ch,0x64(%eax)
add    $0x5646808,%eax
or     %bh,0x69(%eax)
add    $0x5646808,%eax
or     %bh,0x69(%eax)
add    $0x5646808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5697808,%eax
or     %bh,0x69(%eax)
add    $0x5646808,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dl,0x429c0806(%edx,%eax,2)
push   %es
or     %ah,-0x43f7f9be(%edx)
dec    %edx
push   %es
or     %ch,-0x48f7f9be(%edi)
inc    %edx
push   %es
or     %dh,%cl
and    $0x42be0806,%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x62(%ebp)
imul   $0x6d00682e,0x72(%ebp,%eiz,2),%esi
bound  %ebp,0x74(%ecx)
gs
jb     8064653 <_IO_stdin_used+0x220f>
insl   (%dx),%es:(%edi)
jne    8064663 <_IO_stdin_used+0x221f>
je     8064662 <_IO_stdin_used+0x221e>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     8064672 <_IO_stdin_used+0x222e>
add    %ah,0x25282073
jae    806462f <_IO_stdin_used+0x21eb>
and    %ah,0x25000a73
jae    806462e <_IO_stdin_used+0x21ea>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     8064682 <_IO_stdin_used+0x223e>
je     806468f <_IO_stdin_used+0x224b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     8064692 <_IO_stdin_used+0x224e>
je     806469f <_IO_stdin_used+0x225b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     80646a9 <_IO_stdin_used+0x2265>
je     80646b6 <_IO_stdin_used+0x2272>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806467b <_IO_stdin_used+0x2237>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
and    $0x6f682073,%eax
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    80646a9 <_IO_stdin_used+0x2265>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    80646b1 <_IO_stdin_used+0x226d>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     8064700 <_IO_stdin_used+0x22bc>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     80646b6 <_IO_stdin_used+0x2272>
insb   (%dx),%es:(%edi)
popa
je     80646ff <_IO_stdin_used+0x22bb>
jb     80646bc <_IO_stdin_used+0x2278>
cmp    $0x68,%al
je     8064714 <_IO_stdin_used+0x22d0>
jo     80646dc <_IO_stdin_used+0x2298>
das
das
outsb  %ds:(%si),(%dx)
jne    80646d6 <_IO_stdin_used+0x2292>
outsl  %ds:(%esi),(%dx)
jb     8064712 <_IO_stdin_used+0x22ce>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 8064724 <_IO_stdin_used+0x22e0>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    80646e5 <_IO_stdin_used+0x22a1>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     8064749 <_IO_stdin_used+0x2305>
popa
jb     806473a <_IO_stdin_used+0x22f6>
cmp    (%eax),%ah
jns    8064748 <_IO_stdin_used+0x2304>
jne    80646fb <_IO_stdin_used+0x22b7>
popa
jb     8064743 <_IO_stdin_used+0x22ff>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8064763 <_IO_stdin_used+0x231f>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     806476d <_IO_stdin_used+0x2329>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     806478a <_IO_stdin_used+0x2346>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     8064789 <_IO_stdin_used+0x2345>
outsb  %ds:(%esi),(%dx)
je     8064747 <_IO_stdin_used+0x2303>
jo     806478e <_IO_stdin_used+0x234a>
jb     8064798 <_IO_stdin_used+0x2354>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     80647a8 <_IO_stdin_used+0x2364>
je     80647b5 <_IO_stdin_used+0x2371>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806477a <_IO_stdin_used+0x2336>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     80647c8 <_IO_stdin_used+0x2384>
je     80647d5 <_IO_stdin_used+0x2391>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806479a <_IO_stdin_used+0x2356>
and    %ah,0x250a2c73
jae    80647a2 <_IO_stdin_used+0x235e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     80647ec <_IO_stdin_used+0x23a8>
je     80647f9 <_IO_stdin_used+0x23b5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80647be <_IO_stdin_used+0x237a>
and    %ah,0x250a2c73
jae    80647c6 <_IO_stdin_used+0x2382>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8064814 <_IO_stdin_used+0x23d0>
je     8064821 <_IO_stdin_used+0x23dd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    80647e6 <_IO_stdin_used+0x23a2>
and    %ah,0x250a2c73
jae    80647ee <_IO_stdin_used+0x23aa>
and    %ah,0x25202c73
jae    80647f6 <_IO_stdin_used+0x23b2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8064840 <_IO_stdin_used+0x23fc>
je     806484d <_IO_stdin_used+0x2409>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8064812 <_IO_stdin_used+0x23ce>
and    %ah,0x250a2c73
jae    806481a <_IO_stdin_used+0x23d6>
and    %ah,0x25202c73
jae    8064822 <_IO_stdin_used+0x23de>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8064870 <_IO_stdin_used+0x242c>
je     806487d <_IO_stdin_used+0x2439>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8064842 <_IO_stdin_used+0x23fe>
and    %ah,0x250a2c73
jae    806484a <_IO_stdin_used+0x2406>
and    %ah,0x25202c73
jae    8064852 <_IO_stdin_used+0x240e>
and    %ah,0x250a2c73
jae    806485a <_IO_stdin_used+0x2416>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     80648a4 <_IO_stdin_used+0x2460>
je     80648b1 <_IO_stdin_used+0x246d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8064876 <_IO_stdin_used+0x2432>
and    %ah,0x250a2c73
jae    806487e <_IO_stdin_used+0x243a>
and    %ah,0x25202c73
jae    8064886 <_IO_stdin_used+0x2442>
and    %ah,0x250a2c73
jae    806488e <_IO_stdin_used+0x244a>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
sbbb   $0x8,0x59c8808(%ebp,%eax,1)
enter  $0x59c,$0x8
adc    %bl,-0x6297f7fb(%ebp)
add    $0x59dc008,%eax
or     %ch,(%eax)
sahf
add    $0x59ea008,%eax
or     %al,-0x65(%eax)
add    $0x59bd808,%eax
or     %dh,%dh
mov    0xa1fb0805,%eax
add    $0x5a23908,%eax
or     %al,-0x35f7fa5e(%ecx)
mov    %al,0xa3220805
add    $0x5a38908,%eax
or     %bh,%bh
mov    %eax,0xa0b60805
add    $0x5a15008,%eax
or     %al,%al
cmpsl  %es:(%edi),%ds:(%esi)
add    $0x5a7c808,%eax
or     %bl,(%eax)
test   $0x5,%al
or     %bh,-0x58(%eax)
add    $0x5a8c808,%eax
or     %ch,(%eax)
test   $0xa9980805,%eax
add    $0x5aa1808,%eax
or     %ah,-0x5a(%eax)
add    $0x5a70808,%eax
or     %bl,-0x5ff7fa52(%eax)
scas   %es:(%edi),%al
add    $0x5aee008,%eax
or     %ch,(%eax)
scas   %es:(%edi),%eax
add    $0x5af7808,%eax
or     %bl,%al
scas   %es:(%edi),%eax
add    $0x5b04808,%eax
or     %cl,%al
mov    $0x5,%al
or     %bh,(%eax)
lods   %ds:(%esi),%eax
add    $0x5ade008,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     806499d <_IO_stdin_used+0x2559>
jb     806498f <_IO_stdin_used+0x254b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     80649b1 <_IO_stdin_used+0x256d>
popa
jb     80649a2 <_IO_stdin_used+0x255e>
and    %al,0x6f(%esi)
jne    80649b0 <_IO_stdin_used+0x256c>
fs
popa
je     80649af <_IO_stdin_used+0x256b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %bh,0x73(%eax)
je     80649c5 <_IO_stdin_used+0x2581>
je     80649c4 <_IO_stdin_used+0x2580>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
add    %dh,(%eax)
and    %bh,0x72747320(,%edi,1)
je     80649d5 <_IO_stdin_used+0x2591>
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     80649e8 <_IO_stdin_used+0x25a4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
mov    $0xbc,%al
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xbd670805,%eax
add    $0x5b8c008,%eax
or     %ch,%dl
mov    $0xb8c00805,%esp
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xbde40805,%eax
add    $0x5b8c008,%eax
or     %bl,0xc00805bc
mov    $0xb8c00805,%eax
add    $0x5bba008,%eax
or     %al,%al
mov    $0xb8c00805,%eax
add    $0x5b8c008,%eax
or     %ch,%dl
mov    $0xb8c00805,%edx
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xb8c00805,%eax
add    $0x5ba6808,%eax
or     %bh,-0x3ff7fa47(%esi)
mov    $0xb8c00805,%eax
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xb8c00805,%eax
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xb9870805,%eax
add    $0x5b96a08,%eax
or     %al,%al
mov    $0xb8c00805,%eax
add    $0x5b8c008,%eax
or     %ch,%dl
mov    $0xb8c00805,%esp
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xbde40805,%eax
add    $0x5b8c008,%eax
or     %bl,0xc00805bc
mov    $0xb8c00805,%eax
add    $0x5b8c008,%eax
or     %al,%al
mov    $0xb8c00805,%eax
add    $0x5b8c008,%eax
or     %ch,%dl
mov    $0xb8c00805,%edx
add    $0x5b8c008,%eax
or     %ah,-0x45(%edi)
add    $0x74737808,%eax
jb     8064ad5 <_IO_stdin_used+0x2691>
outsl  %ds:(%esi),(%dx)
imul   $0x45540078,0x61(%ebp),%ebp
push   %edx
dec    %ebp
add    %ah,0x6d(%ebp,%esi,2)
bound  %eax,(%eax)
cs add %al,%cs:(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
sub    $0x63656863,%eax
imul   $0x63,(%esi),%ebp
add    %dh,0x74(%ebx)
popa
je     8064b28 <_IO_stdin_used+0x26e4>
sub    $0x67616d3e,%eax
imul   $0x39203d3d,0x20(%ebx),%esp
cmp    %dh,(%edx)
aaa
cmp    %dh,(%esi)
xor    (%eax),%al
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x0(%ebx)
das
das
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     8064b73 <_IO_stdin_used+0x272f>
jb     8064b6f <_IO_stdin_used+0x272b>
insl   (%dx),%es:(%edi)
jne    8064b7f <_IO_stdin_used+0x273b>
je     8064b7e <_IO_stdin_used+0x273a>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     8064b8e <_IO_stdin_used+0x274a>
add    %ch,0x62(%ebp)
jne    8064b88 <_IO_stdin_used+0x2744>
je     8064b86 <_IO_stdin_used+0x2742>
jb     8064b82 <_IO_stdin_used+0x273e>
insl   (%dx),%es:(%edi)
jne    8064b92 <_IO_stdin_used+0x274e>
je     8064b91 <_IO_stdin_used+0x274d>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     8064ba1 <_IO_stdin_used+0x275d>
add    %ebx,(%ebx)
add    (%ebx),%edi
and    %al,(%esi)
add    %al,(%eax)
ret
add    %al,(%eax)
add    %dl,%al
inc    %edi
(bad)
(bad)
cmp    $0x6,%al
add    %al,(%eax)
mov    $0x4d,%al
(bad)
pushl  0xa(%eax)
add    %al,(%eax)
mov    0x60fffe5e,%al
push   %es
add    %al,(%eax)
rcrb   -0x2(%edi)
call   *-0x4ffffffa(%eax)
arpl   %di,%si
call   *%eax
push   %es
add    %al,(%eax)
shlb   $0xff,-0x2(%ebx)
in     $0x6,%al
add    %al,(%eax)
shlb   -0x2(%ebx)
(bad)
clc
push   %es
add    %al,(%eax)
lock arpl %di,%si
decl   (%edi,%eax,1)
add    %al,(%eax)
mov    0x4cfffe64,%al
pop    %es
add    %al,(%eax)
xor    %ah,-0x2(%esi)
(bad)
jl     8064b91 <_IO_stdin_used+0x274d>
add    %al,(%eax)
push   %eax
data16
(bad)
call   *-0x5ffffff9(%eax)
push   $0x7d0fffe
add    %al,(%eax)
xor    %ch,-0x2(%ecx)
decl   (%eax)
or     %al,(%eax)
add    %dl,0x48fffe6a(%eax)
or     %al,(%eax)
add    %al,0x70(%eax)
(bad)
decl   -0x2ffffff8(%eax)
je     8064bb5 <_IO_stdin_used+0x2771>
dec    %eax
or     %al,(%eax)
add    %ah,(%eax)
jbe    8064bbd <_IO_stdin_used+0x2779>
jmp    *(%eax)
or     %eax,(%eax)
add    %dl,%al
jns    8064bc5 <_IO_stdin_used+0x2781>
jmp    *0x9(%eax)
add    %al,(%eax)
nop
jle    8064bcd <_IO_stdin_used+0x2789>
call   *%eax
or     %eax,(%eax)
add    %ah,-0x6e(%eax)
(bad)
ljmp   *(%eax)
or     (%eax),%al
add    %dh,(%eax)
xchg   %eax,%ebx
(bad)
call   *0xa(%eax)
add    %al,(%eax)
xor    %dl,0xa90fffe(%edi)
add    %al,(%eax)
rcrb   $0x0,0xad0fffe(%esi)
add    %dl,-0x5c(%eax)
(bad)
call   *(%eax)
or     (%eax),%eax
add    %al,0x50fffea9(%eax)
or     (%eax),%eax
add    %dh,-0x5700014d(%eax)
or     (%eax),%eax
add    %dl,0xfffebc(%eax)
or     $0x0,%al
add    %ah,%al
mov    $0xc40fffe,%ebp
add    %al,(%eax)
mov    $0xc4,%al
(bad)
lcall  *-0x5ffffff4(%eax)
leave
(bad)
(bad)
fmull  (%eax,%eax,1)
add    %dh,0x4cfffecf(%eax)
or     $0xcfe00000,%eax
(bad)
ljmp   *0x0(%ebp,%ecx,1)
add    %dl,-0x30(%eax)
(bad)
decl   0x5000000d(%eax)
sar    %cl,%esi
dec    %eax
or     $0xd4500000,%eax
(bad)
decl   (%eax)
push   %cs
add    %al,(%eax)
jo     8064c2a <_IO_stdin_used+0x27e6>
(bad)
jmp    *(%eax)
push   %cs
add    %al,(%eax)
rcl    %ch
(bad)
(bad)
js     8064c70 <_IO_stdin_used+0x282c>
add    %al,(%eax)
jo     8064c3c <_IO_stdin_used+0x27f8>
(bad)
ljmp   *-0x6ffffff2(%eax)
xlat   %ds:(%ebx)
(bad)
(bad)
cld
push   %cs
add    %al,(%eax)
mov    $0xd9,%al
(bad)
call   *0x0(%edi,%ecx,1)
add    %al,(%eax)
(bad)
call   *0x1000000f(%eax)
(bad)
jmp    *-0x25e00000(%edi,%ecx,1)
(bad)
(bad)
mov    $0xf000000f,%eax
(bad)
jmp    *%esp
sldt   (%eax)
add    %bl,%bl
(bad)
(bad)
clc
sldt   (%eax)
and    %bl,%bl
(bad)
call   *(%eax)
adc    %al,(%eax)
add    %al,-0x25(%eax)
(bad)
ljmp   *(%eax)
adc    %al,(%eax)
add    %dl,-0x25(%eax)
(bad)
(bad)
cmp    $0x10,%al
add    %al,(%eax)
push   %eax
fdivr  %st,%st(6)
call   *%eax
adc    %al,(%eax)
add    %ah,0x10fffede(%eax)
adc    %eax,(%eax)
add    %al,0x38fffee0(%eax)
adc    %eax,(%eax)
add    %ah,0x50fffee0(%eax)
adc    %eax,(%eax)
add    %dl,(%eax)
loope  8064cdd <_IO_stdin_used+0x2899>
incl   -0x1e500000(%ecx,%edx,1)
(bad)
inc    %esp
adc    %eax,(%eax)
add    %dh,%al
jecxz  8064ced <_IO_stdin_used+0x28a9>
lcall  *(%eax)
adc    (%eax),%al
add    %dl,%al
out    %eax,$0xfe
pushl  0x12(%eax)
add    %al,(%eax)
add    %ch,%dl
(bad)
dec    %eax
adc    (%eax),%al
add    %dl,(%eax)
ljmp   $0x0,$0x12dcfffe
and    %ch,%dl
(bad)
push   %eax
adc    (%eax),%al
add    %al,(%eax)
jmp    8064d15 <_IO_stdin_used+0x28d1>
lcall  *0x0(%ebx,%edx,1)
add    %al,-0x14(%eax)
(bad)
pushl  -0x13b00000(%ebx,%edx,1)
(bad)
dec    %eax
adc    (%eax),%eax
add    %ah,-0x14(%eax)
(bad)
(bad)
fcoml  (%ebx)
add    %al,(%eax)
jo     8064d22 <_IO_stdin_used+0x28de>
(bad)
push   %eax
adc    (%eax),%eax
add    %al,%al
in     (%dx),%al
(bad)
call   *(%esp,%edx,1)
add    %al,(%eax)
and    %ch,%ch
(bad)
call   *0x14(%eax)
add    %al,(%eax)
xor    %ch,%dh
(bad)
decl   -0x11600000(%esp,%edx,1)
(bad)
call   *%esp
adc    $0x0,%al
add    %ah,%al
out    %al,(%dx)
(bad)
push   %esp
adc    $0x0,%al
add    %dl,-0x11(%eax)
(bad)
pushl  (%eax)
adc    $0xefc00000,%eax
(bad)
ljmp   *0x0(%ebp,%edx,1)
add    %al,-0x10(%eax)
(bad)
ljmp   *-0x7fffffeb(%eax)
lock (bad)
dec    %esp
adc    $0xf0b00000,%eax
(bad)
jmp    *%eax
adc    $0xf3200000,%eax
(bad)
(bad)
cmp    %dl,(%esi)
add    %al,(%eax)
mov    $0xf3,%al
(bad)
ljmp   *0x0(%esi,%edx,1)
add    %al,-0x5f00010c(%eax)
push   %ss
add    %al,(%eax)
adc    %dh,%bh
(bad)
jmp    *(%edi,%edx,1)
add    %al,(%eax)
sar    $0xfe,%cl
call   *-0x2fffffe9(%eax)
stc
(bad)
jmp    *-0x3b00000(%edi,%edx,1)
(bad)
push   %eax
pop    %ss
add    %al,(%eax)
and    %bh,%bh
(bad)
decl   0x18(%eax)
add    %al,(%eax)
push   %eax
(bad)
(bad)
ljmp   *0x18(%eax)
add    %al,(%eax)
mov    $0xff,%al
(bad)
jmp    *-0x2fffffe8(%eax)
(bad)
(bad)
pushl  0x7400000(%eax,%ebx,1)
(bad)
push   %esp
sbb    %al,(%eax)
add    %al,0xcffff07(%eax)
sbb    %eax,(%eax)
add    %dh,(%eax)
or     %bh,%bh
decl   0x0(%ecx,%ebx,1)
add    %ah,%al
adc    %bh,%bh
call   *-0x7fffffe7(%eax)
adc    %edi,%edi
(bad)
fcomps (%ecx)
add    %al,(%eax)
xor    %dl,(%edi,%edi,8)
incl   0x0(%edx,%ebx,1)
add    %ah,(%eax)
adc    $0x1a84ffff,%eax
add    %al,(%eax)
and    %dl,(%esi)
(bad)
(bad)
mov    $0x3000001a,%esp
and    %bh,%bh
incl   (%eax)
sbb    (%eax),%eax
add    %dh,0x20(%eax)
(bad)
pushl  (%ebx,%ebx,1)
add    %al,(%eax)
nop
and    %bh,%bh
decl   0x1b(%eax)
add    %al,(%eax)
mov    $0x20,%al
(bad)
lcall  *0x0(%ebx,%ebx,1)
add    %dh,%al
and    %bh,%bh
incl   0x1000001b(%eax)
and    %edi,%edi
call   *0x21500000(%ebx,%ebx,1)
(bad)
(bad)
mov    $0xb000001b,%eax
and    %edi,%edi
(bad)
in     (%dx),%al
sbb    (%eax),%eax
add    %dh,0x22(%eax)
(bad)
ljmp   *(%eax)
sbb    $0x0,%al
add    %dl,0x23(%eax)
(bad)
jmp    *0x0(%esp,%ebx,1)
add    %ah,%al
and    %edi,%edi
lcall  *0x7000001c(%eax)
and    $0x1cd8ffff,%eax
add    %al,(%eax)
add    %ah,(%edi)
(bad)
lcall  *(%eax)
sbb    $0x28800000,%eax
(bad)
lcall  *0x1d(%eax)
add    %al,(%eax)
lock sub %edi,%edi
lcall  *0x1d(%eax)
sub    $0xff,%al
(bad)
fcompl 0x2e200000
(bad)
jmp    *(%eax)
push   %ds
add    %al,(%eax)
and    %dh,(%eax)
(bad)
jmp    *0x0(%esi,%ebx,1)
add    %ah,(%eax)
xor    %bh,%bh
ljmp   *0x2000001e(%eax)
xor    $0xff,%al
(bad)
call   28064ee3 <optarg+0x1fffbc5f>
ss
(bad)
ljmp   *(%eax)
pop    %ds
add    %al,(%eax)
add    %bh,(%eax)
(bad)
ljmp   *0x1f(%eax)
add    %al,(%eax)
loopne 8064f0f <_IO_stdin_used+0x2acb>
(bad)
ljmp   *0x2000001f(%eax)
cmp    $0xff,%al
(bad)
in     (%dx),%al
pop    %ds
add    %al,(%eax)
pusha
ds
(bad)
pushl  (%eax)
and    %al,(%eax)
add    %dh,0x40(%eax)
(bad)
pushl  0x20(%eax)
add    %al,(%eax)
addb   $0xff,-0x1(%edx)
mov    $0x20,%al
add    %al,(%eax)
adc    %al,-0x1(%edi,%edi,8)
lock and %al,(%eax)
add    %al,0x30ffff45(%eax)
and    %eax,(%eax)
add    %dl,(%eax)
inc    %edi
(bad)
pushl  0x21(%eax)
add    %al,(%eax)
nop
dec    %eax
(bad)
pushl  -0xfffffdf(%eax)
dec    %eax
(bad)
(bad)
in     (%dx),%al
and    %eax,(%eax)
add    %dh,(%eax)
dec    %ecx
(bad)
jmp    *(%edx,%eiz,1)
add    %al,(%eax)
add    %cl,-0x1(%edi)
ljmp   *0x22(%eax)
add    %al,(%eax)
inc    %eax
dec    %edi
(bad)
jmp    *0x54b00000(%edx,%eiz,1)
(bad)
incl   0x23(%eax)
add    %al,(%eax)
rcrb   -0x1(%ecx)
inc    %esp
and    (%eax),%eax
add    %al,0x4cffff60(%eax)
and    $0x0,%al
add    %dh,(%eax)
addr16 (bad)
jmp    *0x67e00000(%esp)
(bad)
dec    %eax
and    $0x0,%al
add    %ah,(%eax)
push   $0x24ecffff
add    %al,(%eax)
subb   $0xff,-0x1(%eax)
sub    %ah,0x69100000
(bad)
pushl  0x25(%eax)
add    %al,(%eax)
inc    %eax
imul   $0x2594ff,%edi,%edi
add    %dh,0x69(%eax)
(bad)
(bad)
mov    $0xc0000025,%eax
imul   $0x25e8ff,%edi,%edi
add    %dh,(%eax)
push   $0xffffffff
lcall  *(%eax)
add    %al,%es:(%eax)
jo     8065008 <_IO_stdin_used+0x2bc4>
(bad)
(bad)
cmp    $0x26,%al
add    %al,(%eax)
mov    0x58ffff6a,%al
add    %al,%es:(%eax)
loopne 8065018 <_IO_stdin_used+0x2bd4>
(bad)
(bad)
jl     8064fd8 <_IO_stdin_used+0x2b94>
add    %al,(%eax)
and    %ch,-0x1(%ebx)
ljmp   *0x70000026(%eax)
imul   $0xffffffff,%edi,%edi
mov    $0xc0000026,%esp
imul   $0xffffffff,%edi,%edi
loopne 8064ff0 <_IO_stdin_used+0x2bac>
add    %al,(%eax)
add    %ch,-0x1(%edi,%edi,8)
add    $0x27,%al
add    %al,(%eax)
inc    %eax
insb   (%dx),%es:(%edi)
(bad)
ljmp   *(%eax)
daa
add    %al,(%eax)
xor    %bh,-0x1(%edi)
call   *0x7f700000(%edi,%eiz,1)
(bad)
dec    %esp
daa
add    %al,(%eax)
cmpb   $0xff,-0x1(%edi)
loopne 8065019 <_IO_stdin_used+0x2bd5>
add    %al,(%eax)
mov    $0x7f,%al
(bad)
(bad)
clc
daa
add    %al,(%eax)
sarb   -0x1(%edi)
call   *(%eax)
sub    %al,(%eax)
add    %dl,(%eax)
cmp    $0xff,%bh
inc    %eax
sub    %al,(%eax)
add    %al,-0x80(%eax)
(bad)
lcall  *0x28(%eax)
add    %al,(%eax)
jo     8064f96 <_IO_stdin_used+0x2b52>
(bad)
pushl  0x28(%eax)
add    %al,(%eax)
nop
cmp    $0xff,%bh
test   %ch,(%eax)
add    %al,(%eax)
add    %al,0x28b8ffff(%ecx)
add    %al,(%eax)
rolb   0x2910ffff(%edx)
add    %al,(%eax)
mov    0x4cffff83,%al
sub    %eax,(%eax)
add    %dl,-0x7c(%eax)
(bad)
incl   -0x78400000(%ecx,%ebp,1)
(bad)
inc    %esp
sub    %eax,(%eax)
add    %ah,-0x6c(%eax)
(bad)
jmp    *0x0(%edx,%ebp,1)
add    %ah,(%eax)
fwait
(bad)
call   *%esp
sub    (%eax),%al
add    %al,(%eax)
popf
(bad)
decl   (%ebx,%ebp,1)
add    %al,(%eax)
xor    %ah,0x2b7cffff(%edi)
add    %al,(%eax)
jo     8065015 <_IO_stdin_used+0x2bd1>
(bad)
lcall  *-0x56700000(%ebx,%ebp,1)
(bad)
(bad)
cmp    %ch,(%eax,%eax,1)
add    %dh,%al
test   $0x2c84ffff,%eax
add    %al,(%eax)
pusha
stos   %al,%es:(%edi)
(bad)
(bad)
mov    $0x9000002c,%esp
stos   %al,%es:(%edi)
(bad)
call   *%esp
sub    $0x0,%al
add    %dl,(%eax)
stos   %eax,%es:(%edi)
(bad)
ljmp   *-0x54d00000(,%ebp,1)
(bad)
incl   0x2d(%eax)
add    %al,(%eax)
and    %ch,0x2d98ff(%edi,%edi,8)
add    %ah,-0x54(%eax)
(bad)
pushl  -0x6fffffd3(%eax)
lods   %ds:(%esi),%al
(bad)
inc    %esp
sub    $0xaca00000,%eax
(bad)
(bad)
fsubrs 0xace00000
(bad)
incl   (%esi,%ebp,1)
add    %al,(%eax)
and    %ch,0x2e40ffff(%ebp)
add    %al,(%eax)
loopne 8065086 <_IO_stdin_used+0x2c42>
(bad)
incl   0x4000002e(%eax)
mov    $0xff,%dl
pushl  -0x1fffffd2(%eax)
mov    $0x2ee0ffff,%ebx
add    %al,(%eax)
ror    $0xff,%bl
jmp    *(%edi,%ebp,1)
add    %al,(%eax)
mov    $0xce,%al
(bad)
ljmp   *0x2f(%eax)
add    %al,(%eax)
mov    0xa8ffffd0,%al
das
add    %al,(%eax)
jo     80650d7 <_IO_stdin_used+0x2c93>
(bad)
push   %eax
das
add    %al,(%eax)
mov    0x8ffffd1,%al
xor    %al,(%eax)
add    %al,%al
sar    %cl,%bh
call   *0x30(%eax)
add    %al,(%eax)
and    %dl,%bl
(bad)
(bad)
jl     8065152 <_IO_stdin_used+0x2d0e>
add    %al,(%eax)
nop
sar    %cl,%edi
jmp    *-0x2a500000(%eax,%esi,1)
(bad)
jmp    *%esp
xor    %al,(%eax)
add    %ah,%al
(bad)
(bad)
call   *0x31(%eax)
add    %al,(%eax)
inc    %eax
fdivr  %st(7),%st
(bad)
mov    $0xb0000031,%esp
fdivr  %st(7),%st
(bad)
clc
xor    %eax,(%eax)
add    %al,%al
fdivr  %st(7),%st
decl   (%edx,%esi,1)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     806516b <_IO_stdin_used+0x2d27>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    %es,-0x2(%ecx)
jmp    *%eax
add    $0xe000000,%eax
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     806518b <_IO_stdin_used+0x2d47>
js     8065189 <_IO_stdin_used+0x2d45>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sub    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%eax)
pop    %eax
(bad)
ljmp   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
lock or (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     80651c6 <_IO_stdin_used+0x2d82>
add    %al,(%eax)
cmp    %bl,-0x2(%ecx)
jmp    *%eax
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x38,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,-0x28000000(%eax)
pop    %esp
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%ah
add    %al,(%eax)
add    %dl,%ah
pop    %esp
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %dl,%al
pop    %esp
(bad)
call   *0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
add    %al,(%eax)
add    %bl,%ah
pop    %esp
(bad)
ljmp   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff9b,0x2180e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
sub    $0x1,%al
add    %al,(%eax)
dec    %esp
pop    %ebp
(bad)
incl   0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
data16
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %esp
add    %eax,(%eax)
add    %ch,0x15fffe(%esi,%ebx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
jo     80652c7 <_IO_stdin_used+0x2e83>
add    %al,(%eax)
mov    $0x48fffe5e,%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
mov    $0x1,%al
add    %al,(%eax)
enter  $0xfe60,$0xff
xchg   %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %dh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,%al
add    %eax,(%eax)
add    %ah,(%eax)
popa
(bad)
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1900e45
out    %eax,(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sub    %al,(%edx)
add    %al,(%eax)
inc    %eax
(bad)
(bad)
jmp    *0x5(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x30,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   $0xb0000002
addr16 (bad)
decl   0x41000000(%esp,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbf,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %ch,0x2(%eax)
insb   (%dx),%es:(%edi)
(bad)
decl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffe,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
clc
insb   (%dx),%es:(%edi)
(bad)
ljmp   *0x3(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb2,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%ebp
add    %al,0x3(%eax)
add    %al,(%eax)
push   $0xbdfffe70
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc0,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x1,%ch
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
incl   (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,-0x47fffffd(%eax)
je     8065509 <_IO_stdin_used+0x30c5>
dec    %esp
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2b00e46
adc    0x43140e0a,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    (%edx),%cs
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
or     %al,(%eax,%eax,1)
add    %dh,(%eax)
mov    %bh,%dh
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ebx
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %ebp
or     (%esi),%cl
add    $0x43,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax,%eax,1)
add    %bl,%al
mov    %bh,%dh
push   %edx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
add    $0x0,%al
add    %bh,(%eax)
inc    %ebx
(bad)
(bad)
cld
sldt   (%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x3c,%eax
jo     80655ca <_IO_stdin_used+0x3186>
add    %al,(%eax)
cwtl
mov    %?,%esi
incl   0x7(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffae,0x3300e43
push   %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x4,%al
add    %al,(%eax)
call   970654a0 <optarg+0x8effc21c>
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x3300e43
add    $0xc341140e,%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lock add $0x0,%al
add    %bh,(%eax)
cltd
(bad)
ljmp   *(%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1e,0x3300e43
add    $0xc341140e,%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,(%eax)
add    $0x9e280000,%eax
(bad)
jmp    *0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
sti
add    $0xa,%al
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x5(%eax)
test   $0xfe,%al
(bad)
fisttpll (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x9,0x3400e43
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x41140e03,%edi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
loopne 806573b <_IO_stdin_used+0x32f7>
add    %al,(%eax)
mov    %dh,0x150fffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
push   %es
add    %al,(%eax)
cwtl
mov    $0xfe,%cl
inc    %ecx
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x43140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jmp    80657be <_IO_stdin_used+0x337a>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%eax
add    %al,(%eax)
js     80657d4 <_IO_stdin_used+0x3390>
add    %al,(%eax)
adc    %bh,0x4e3fffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xad00e46
js     80657f6 <_IO_stdin_used+0x33b2>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x43440000(%esi,%eax,1)
(bad)
decl   (%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    0x140e0a02,%eax
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
lock add %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x7,%al
add    %al,(%eax)
pop    %esp
ret    $0xfffe
and    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %cl,0x0(%edi,%eax,1)
add    %ch,-0x2(%edx,%eax,8)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   $0xc0000007
ret    $0xfffe
incl   (%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
test   $0x7,%al
add    %al,(%eax)
add    $0xfe,%ch
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
call   48065948 <optarg+0x3fffc6c4>
(bad)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %cl,-0x3a(%eax)
(bad)
lcall  *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
pop    %eax
or     %al,(%eax)
add    %dl,-0x39(%eax)
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     80659d3 <_IO_stdin_used+0x358f>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,-0x3ffffff8(%eax)
(bad)
(bad)
lcall  *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bl,%ah
or     %al,(%eax)
add    %cl,0x215fffe(%eax,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
xor    $0x9,%al
add    %al,(%eax)
push   %esp
lret   $0xfffe
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
jo     8065acf <_IO_stdin_used+0x368b>
add    %al,(%eax)
push   $0xafffeca
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,-0x359c0000(%ecx,%ecx,1)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x60000009(%eax)
lret   $0xfffe
lret   $0x0
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,%ah
or     %eax,(%eax)
add    %al,(%ebx,%ecx,8)
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
fmuls  (%ecx)
add    %al,(%eax)
add    %cl,%bl
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
lock or %eax,(%eax)
add    %cl,(%eax)
lret
(bad)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
or     (%eax),%al
add    %dl,(%eax)
lret
(bad)
incl   0x0
add    %al,(%eax)
add    %dl,0x1c000000(%eax)
or     (%eax),%al
add    %cl,(%ebx,%ecx,8)
(bad)
push   %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x57300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,0x7800000a(%eax)
lret
(bad)
decl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e45
xchg   %eax,%ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
lock or (%eax),%al
add    %cl,-0x28000133(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xab00202(%ebx)
ret
push   %cs
add    $0x47,%al
or     (%edx),%eax
into
or     %bl,%al
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %cl,(%ebx)
add    %al,(%eax)
inc    %eax
iret
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
xor    %cl,(%ebx)
add    %al,(%eax)
dec    %eax
iret
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     %fs:(%eax),%eax
add    %al,0x9efffe(%edi,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ah,-0x301c0000(%ebx,%ecx,1)
(bad)
(bad)
cmp    %al,(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaa,0x2400e43
or     (%esi),%cl
adc    $0x4c,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
jo     8065d37 <_IO_stdin_used+0x38f3>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bh,%al
or     (%eax),%eax
add    %dl,%al
sar    %esi
call   *%ecx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
push   %cs
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,0xc(%eax)
add    %al,(%eax)
pop    %eax
aad    $0xfe
ljmp   *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2600e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
or     (%ecx),%al
or     (%esi),%cl
adc    $0x44,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
test   $0xc,%al
add    %al,(%eax)
xor    %dl,%bh
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x28d40000(%esp,%ecx,1)
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0xd0000000
or     $0x0,%al
add    %ch,(%eax)
xlat   %ds:(%ebx)
(bad)
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,-0x28640000(,%ecx,1)
(bad)
pushl  (%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffa4,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x277c0000(%ebp,%ecx,1)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,-0x7ffffff3(%eax)
fdivr  %st(6),%st
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x27840000(%ebp,%ecx,1)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%al
or     $0xd8780000,%eax
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,%ah
or     $0xd8a40000,%eax
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %dh,(%eax)
push   %cs
add    %al,(%eax)
enter  $0xfed8,$0xff
push   %es
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ch,0x0(%esi,%ecx,1)
add    %bl,0x66fffe(%ecx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0xe,%ah
add    %al,(%eax)
(bad)
fsin
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,%ah
push   %cs
add    %al,(%eax)
in     $0xd9,%al
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
adc    %cl,(%edi)
add    %al,(%eax)
sbb    %bl,%dl
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a5d02
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
dec    %esp
sldt   (%eax)
dec    %esp
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,-0x6ffffff1(%eax)
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
sldt   (%eax)
lods   %ds:(%esi),%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,%al
sldt   (%eax)
enter  $0xfeda,$0xff
push   $0x2
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
inc    %esp
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
sbb    %dl,(%eax)
add    %al,(%eax)
loopne 806614e <_IO_stdin_used+0x3d0a>
(bad)
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ebx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
dec    %esp
adc    %al,(%eax)
add    %bh,0xc2fffe(,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xec34110(%esi,%ecx,1),%dh
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %al,-0x27fffff0(%eax)
(bad)
incl   0x41000000(%edx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
push   %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   $0x4000000
adc    %eax,(%eax)
add    %ah,%ah
(bad)
ljmp   *0x2(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
sahf
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,0x11(%eax)
add    %al,(%eax)
sub    %ah,%dl
(bad)
incl   0x0
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
test   %dl,(%ecx)
add    %al,(%eax)
and    $0xe2,%al
(bad)
(bad)
jnp    80662e4 <_IO_stdin_used+0x3ea0>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
fwait
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,%al
adc    %eax,(%eax)
add    %bl,-0x1c(%eax)
(bad)
dec    %edx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
imul   $0xa,(%ecx),%eax
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
sub    %dl,(%edx)
add    %al,(%eax)
shl    %dh
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,0x12(%eax)
add    %al,(%eax)
loopne 8066388 <_IO_stdin_used+0x3f44>
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adcb   $0x0,(%edx)
add    %cl,(%eax)
out    %eax,$0xfe
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
adc    (%eax),%al
add    %dl,(%edi,%eiz,8)
(bad)
ljmp   *0x0(%edi,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
clc
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
aam    $0x12
add    %al,(%eax)
inc    %esp
out    %al,(%dx)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%ebp)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
adc    (%eax),%al
add    %ch,-0x2(%esi,%ebp,8)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ch,(%ebx,%edx,1)
add    %al,(%eax)
fsubr  %st,%st(6)
(bad)
ljmp   *0x8(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
dec    %ecx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,0x13(%eax)
add    %al,(%eax)
dec    %eax
idiv   %esi
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jo     80664ef <_IO_stdin_used+0x40ab>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0xb8000000
adc    (%eax),%eax
add    %ah,-0x51000109(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    $0x14,%al
add    %al,(%eax)
in     $0xf9,%al
(bad)
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
fs
adc    $0x0,%al
add    %dl,0xf8fffe(%edx,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,-0x4a40000(%esp,%edx,1)
(bad)
decl   0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
push   $0x3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
loopne 806664a <_IO_stdin_used+0x4206>
add    %al,(%eax)
sub    %al,0x36ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x5340000(,%edx,1)
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
adc    $0x5400000,%eax
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x54c0000(,%edx,1)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pusha
adc    $0x5680000,%eax
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp,%edx,1)
add    %dh,-0x1(%ebp,%eax,1)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
cwtl
adc    $0x5900000,%eax
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
int3
adc    $0x5bc0000,%eax
(bad)
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,(%eax)
push   %ss
add    %al,(%eax)
inc    %eax
push   %es
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %al,0x0(%esi,%edx,1)
add    %ah,%ah
push   %es
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
js     80667e4 <_IO_stdin_used+0x43a0>
add    %al,(%eax)
inc    %eax
pop    %es
(bad)
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x90000016,%eax
or     %bh,%bh
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
clc
push   %ss
add    %al,(%eax)
loopne 806685b <_IO_stdin_used+0x4417>
(bad)
(bad)
jl     8066857 <_IO_stdin_used+0x4413>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cmp    %dl,(%edi)
add    %al,(%eax)
and    %cl,(%ebx)
(bad)
ljmp   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
js     80668e5 <_IO_stdin_used+0x44a1>
add    %al,(%eax)
push   %eax
or     $0xff,%al
decl   (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x140e0a01,%ebx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0xe1c0000(%edi,%edx,1)
(bad)
call   *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
roll   $0xa,(%ecx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %bh,%al
(bad)
push   %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x1,%ah
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x0(%eax,%ebx,1)
add    %dh,0x1f9ffff(%ecx,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x140e0a01,%edx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %bl,(%eax)
add    %al,(%eax)
jo     80669f5 <_IO_stdin_used+0x45b1>
(bad)
push   %esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
enter  $0x18,$0x0
xor    %dl,0x1f4ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
or     %bl,(%ecx)
add    %al,(%eax)
lock push %ss
(bad)
(bad)
faddl  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
dec    %eax
sbb    %eax,(%eax)
add    %dl,-0x230000e8(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
mov    %bl,(%ecx)
add    %al,(%eax)
xor    %bl,(%edx)
(bad)
pushl  (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
loope  8066b05 <_IO_stdin_used+0x46c1>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,%ah
sbb    %eax,(%eax)
add    %ch,(%esp,%ebx,1)
(bad)
(bad)
add    %ds:(%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
out    %eax,$0x1
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adc    %bl,(%edx)
add    %al,(%eax)
sub    %bl,(%esi)
(bad)
decl   (%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   %eax
sbb    (%eax),%al
add    %bh,%al
pop    %ds
(bad)
decl   (%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
nop
sbb    (%eax),%al
add    %cl,%al
and    %edi,%edi
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rcrb   (%edx)
add    %al,(%eax)
sbb    %ah,(%ebx)
(bad)
ljmp   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
adc    %bl,(%ebx)
add    %al,(%eax)
dec    %eax
and    $0xff,%al
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   %eax
sbb    (%eax),%eax
add    %bl,0x7cffff25(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,-0x27ffffe5(%eax)
es
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %cl,%ah
sbb    (%eax),%eax
add    %bh,%ah
es
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %al,(%esp,%ebx,1)
add    %al,(%eax)
add    $0x27,%al
(bad)
inc    %edi
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
or     %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
dec    %eax
sbb    $0x0,%al
add    %dl,0x39ffff2c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %al,0x2c940000(%esp,%ebx,1)
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,0x20000000(%eax)
sbb    $0x31680000,%eax
(bad)
call   *0x41000000(,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
test   %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    $0x36040000,%eax
(bad)
ljmp   *0x6(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
hlt
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,(%esi,%ebx,1)
add    %al,(%eax)
sub    $0x3c,%al
(bad)
ljmp   *0x6(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
sbb    $0x2,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esp
add    %al,(%eax)
add    %al,0x42840000(%esi,%ebx,1)
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
test   $0x1e,%al
add    %al,(%eax)
adc    %al,-0x1(%ebx)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
int3
push   %ds
add    %al,(%eax)
sub    $0x43,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
and    %ch,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %cl,(%eax)
pop    %ds
add    %al,(%eax)
push   %eax
inc    %ebx
(bad)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,0x1f(%eax)
add    %al,(%eax)
cwtl
inc    %ebx
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
je     80670e9 <_IO_stdin_used+0x4ca5>
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %ebx
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
cwtl
pop    %ds
add    %al,(%eax)
mov    $0x43,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
enter  $0x1f,$0x0
rolb   -0x1(%ebx)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jne    806713d <_IO_stdin_used+0x4cf9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%esp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
clc
pop    %ds
add    %al,(%eax)
adc    %al,-0x1(%edi,%edi,8)
add    %al,%ss:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
sbb    $0x20,%al
add    %al,(%eax)
sub    $0x44,%al
(bad)
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
and    %al,(%eax)
add    %al,0x44(%eax)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
and    %al,(%eax)
add    %bl,-0x1(%esp,%eax,2)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %cl,0x70000020(%eax)
inc    %esp
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x44ac0000(%eax,%eiz,1)
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jne    8067211 <_IO_stdin_used+0x4dcd>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
shlb   $0x0,(%eax)
add    %bl,%al
inc    %esp
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
in     $0x20,%al
add    %al,(%eax)
hlt
inc    %esp
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0x8000000
and    %eax,(%eax)
add    %dl,(%eax)
inc    %ebp
(bad)
jmp    *%ebp
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
mov    $0xa,%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
je     80672eb <_IO_stdin_used+0x4ea7>
add    %al,(%eax)
xchg   %eax,%esp
push   %edi
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
and    %eax,(%eax)
add    %bl,0x2ffff(%edi,%edx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
shlb   $0x0,(%ecx)
add    %bl,0x23ffff57(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fsubs  (%ecx)
add    %al,(%eax)
mov    $0x57,%al
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%eax)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
lock and %eax,(%eax)
add    %bh,0x32ffff57(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x59,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%ebx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
and    %ah,(%edx)
add    %al,(%eax)
enter  $0xff57,$0xff
sub    $0x0,%eax
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    %ah,(%edx)
add    %al,(%eax)
loopne 80673e9 <_IO_stdin_used+0x4fa5>
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
and    (%eax),%al
add    %bh,%al
push   %edi
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx,%eiz,1)
add    %al,(%eax,%ebx,2)
(bad)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x6f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x40000022(%eax)
pop    %eax
(bad)
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff96,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,%al
and    (%eax),%al
add    %bh,-0x380000a7(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jnp    806746a <_IO_stdin_used+0x5026>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
sub    $0x23,%al
add    %al,(%eax)
dec    %esp
pop    %edx
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %fs:(%eax),%eax
add    %al,%ah
pop    %edx
(bad)
pushl  0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
pop    %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x23a40000(%eax,%eax,1),%ebx
add    %al,(%eax)
hlt
pop    %ebp
(bad)
lcall  *0xc(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
lea    (%edx,%ecx,1),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
and    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
orb    $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %al,0x0(%esp)
add    %dh,%ah
imul   $0x6b1ff,%edi,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x3600e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
ret    $0xe0a
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0x24,%ah
add    %al,(%eax)
inc    %esp
jo     806760e <_IO_stdin_used+0x51ca>
call   *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%esi),%ebx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,%ah
and    $0x0,%al
add    %ch,%ah
jno    8067646 <_IO_stdin_used+0x5202>
jmp    *0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
cmp    %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
xchg   %eax,%ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
and    $0x7bac0000,%eax
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%edx
add    $0x0,%al
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %bh,0x0(%ebp,%eiz,1)
add    %cl,%ah
jnp    80676d6 <_IO_stdin_used+0x5292>
jmp    *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff84,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    $0xa,%bl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %bl,(%eax)
add    %al,%es:(%eax)
push   %eax
jge    8067772 <_IO_stdin_used+0x532e>
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4b02
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
fs add %al,%es:%fs:(%eax)
fs
jge    80677be <_IO_stdin_used+0x537a>
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pushf
add    %al,%es:(%eax)
pushf
jge    80677f6 <_IO_stdin_used+0x53b2>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,0x7db40000(%esi,%eiz,1)
(bad)
(bad)
js     8067812 <_IO_stdin_used+0x53ce>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     8067833 <_IO_stdin_used+0x53ef>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%edi,%eiz,1)
add    %al,(%eax)
fdivrl -0x1(%ebp)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ah,(%eax)
daa
add    %al,(%eax)
call   ea0677fa <optarg+0xe1ffe576>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
js     80678f5 <_IO_stdin_used+0x54b1>
add    %al,(%eax)
cmpb   $0xff,-0x1(%esi)
xor    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
nop
daa
add    %al,(%eax)
test   $0x7e,%al
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x7ec40000(%edi,%eiz,1)
(bad)
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,-0x3fffffd9(%eax)
jle    8067912 <_IO_stdin_used+0x54ce>
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37804(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,%ah
daa
add    %al,(%eax)
aam    $0x7e
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    %ch,(%eax)
add    %al,(%eax)
fdivrs -0x1(%esi)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
pusha
sub    %al,(%eax)
add    %bl,-0x7e(%eax)
(bad)
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a72,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
nop
sub    %al,(%eax)
add    %cl,-0x5f00007d(%eax)
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ecx,%ecx,2)
addl   $0x41,0xc30a4202
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
shrb   $0x0,(%eax)
add    %bh,%al
mov    %?,%edi
call   *%edi
sldt   (%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2f00e46
enter  $0xa05,$0xe
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%ecx,%ebp,1)
add    %al,(%eax)
xchg   %eax,%esp
pushf
(bad)
(bad)
in     (%dx),%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
push   %esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
sub    %eax,(%eax)
add    %al,-0x61(%eax)
(bad)
(bad)
jmp    8067aa7 <_IO_stdin_used+0x5663>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbd,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %cl,-0xfffffd7(%eax)
mov    0xc2ffff,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     8067b07 <_IO_stdin_used+0x56c3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
shrb   (%ecx)
add    %al,(%eax)
js     8067acb <_IO_stdin_used+0x5687>
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %ch,%al
sub    %eax,(%eax)
add    %dl,0x1fffffa1(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,(%eax)
sub    (%eax),%al
add    %ch,-0x5e(%eax)
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
pop    %esp
sub    (%eax),%al
add    %bl,0x6effff(%edx,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5adfe(%ebx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %eax
or     %bl,%al
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   %ch,(%edx)
add    %al,(%eax)
in     $0xa2,%al
(bad)
lcall  *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   $0xc4000000
sub    (%eax),%al
add    %al,%ah
movsb  %ds:(%esi),%es:(%edi)
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
xor    %ch,(%ebx)
add    %al,(%eax)
mov    %ah,0x157ffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8067caf <_IO_stdin_used+0x586b>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8067ce6 <_IO_stdin_used+0x58a2>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bl,-0x59840000(%ebx,%ebp,1)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,%al
sub    (%eax),%eax
add    %dh,0x2ffffa6(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,%ah
sub    (%eax),%eax
add    %ch,0x3cffff(%esi,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0xa0
.byte 0xa9
add    $0x8,%al
.byte 0x80
.byte 0xa9
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x92
add    $0x8,%al
or     $0x2c000000,%eax
and    $0x6,%al
or     %bl,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
popl   (%esi)
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0x8f,%al
push   %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
push   %esp
mov    %eax,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %dl,0x4(%edx,%eax,4)
or     %cl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    $0x0,%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
nop
push   %es
or     %al,(%edx)
add    %al,(%eax)
add    %ch,%al
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ch,%ah
popl   (%eax,%ecx,1)
adc    %eax,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
popl   (%eax,%ecx,1)
adc    (%eax),%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x1c(%edi)
popl   (%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x3c(%edi)
mov    (%eax,%ecx,1),%es
add    %al,(%eax)
or     $0x8f,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%esi)
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    8068fb9 <_IO_stdin_used+0x6b75>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    8068ffa <_IO_stdin_used+0x6bb6>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    806903b <_IO_stdin_used+0x6bf7>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    806907c <_IO_stdin_used+0x6c38>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    80690bd <_IO_stdin_used+0x6c79>
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    80690fe <_IO_stdin_used+0x6cba>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
(bad)
(bad)
lcall  *(%ecx)
add    (%eax),%eax
add    %al,(%edx)
add    %al,(%eax)
add    %dl,%al
sub    %al,(%esi)
or     %dl,%bh
sub    %al,(%esi)
or     %dh,(%ecx)
and    $0x25310806,%eax
push   %es
or     %ah,%al
sub    %al,(%esi)
or     %ah,%bl
sub    %al,(%esi)
or     %ah,%bl
sub    %al,(%esi)
or     %ah,%dh
sub    %al,(%esi)
or     %ch,%cl
sub    %al,(%esi)
or     %ch,%cl
sub    %al,(%esi)
or     %ch,%bh
sub    %al,(%esi)
or     %al,0x108051f(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,(%edx,%edx,4)
push   %es
or     %al,(%eax)
add    %eax,(%eax)
add    %al,-0x6b(%eax)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
data16
addr16 jb 69 <wcrtomb@plt-0x80492a7>
jo     6 <wcrtomb@plt-0x804930a>
add    %al,(%eax)
fistpl 0x6(%ebx)
.byte 0x8b
