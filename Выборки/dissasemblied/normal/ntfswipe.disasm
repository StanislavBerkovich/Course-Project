das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,%ch
xchg   %bh,%ch
jne    1ee <_init-0xd9e>
sub    $0x1c,%al
test   %eax,(%ecx)
add    -0x7d623f6(%edx),%ch
test   $0xd1,%al
das
jle    1c0 <_init-0xdcc>
add    (%eax),%eax
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,0x4012000(%esi)
in     $0x41,%al
sub    %eax,0x0(%esi)
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0x427c92e3,%ebx
pop    %ecx
movsl  %ds:(%esi),%es:(%edi)
xlat   %ds:(%ebx)
lods   %ds:(%esi),%al
dec    %ebx
jecxz  1a0 <_init-0xdec>
pop    %eax
call   71d8eed3 <_end+0x71d828f3>
pop    %eax
sbb    $0xb0,%al
fmuls  -0x34(%ebp)
push   $0x7f
lcall  $0xeb0e,$0xf18db97c
shr    %cl,%edi
push   %cs
push   %edx
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x1,$0x0
adc    (%eax),%al
add    %al,(%eax)
iret
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,%al
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %bh,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dh
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,(%esi)
add    $0x0,%al
add    %ah,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esp
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esp,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %es:(%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%ebx)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pop    %edi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esp,%eax,1)
add    %bl,-0x3f(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
pop    %ss
add    %ah,0x4(%edi)
add    %al,(%eax)
loopne 633 <_init-0x959>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
insb   (%dx),%es:(%edi)
add    $0x0,%al
add    %dl,-0x3f(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
pop    %ss
add    %dh,0x0(%ebx,%eax,1)
add    %bh,%ah
test   %eax,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
jne    69e <_init-0x8ee>
add    %al,(%eax)
clc
test   %eax,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
ltr    0x4(%ebx)
add    %al,(%eax)
pop    %eax
roll   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
jl     6be <_init-0x8ce>
add    %al,(%eax)
push   %esp
roll   $0x0,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
pop    %ss
add    %al,0x4(%ecx)
add    %al,(%eax)
pusha
adc    (%eax),%eax
add    %bl,0x40(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     $0x24500,%eax
add    %cl,0x0(%edi,%ecx,1)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
xor    (%edx),%al
add    %al,(%eax)
in     $0x85,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     765 <_init-0x827>
jae    72e <_init-0x85e>
xor    0x2e(%edi),%esp
jae    775 <_init-0x817>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     779 <_init-0x813>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    7a4 <_init-0x7e8>
popa
jb     7a7 <_init-0x7e5>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    799 <_init-0x7f3>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    7ba <_init-0x7d2>
gs
jae    74a <_init-0x842>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     7b6 <_init-0x7d6>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     7cd <_init-0x7bf>
jae    7c8 <_init-0x7c4>
popa
je     7e0 <_init-0x7ac>
jb     7cd <_init-0x7bf>
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x74(%esi)
data16
jae    7d8 <_init-0x7b4>
jb     7e7 <_init-0x7a5>
pop    %edi
jo     7f0 <_init-0x79c>
gs
popa
add    %al,%fs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    7f1 <_init-0x79b>
arpl   %bp,0x73(%ebp,%esi,2)
je     7fd <_init-0x78f>
jb     7f9 <_init-0x793>
ja     80e <_init-0x77e>
imul   $0x7366746e,0x0(%ebp,%eiz,2),%esi
pop    %edi
popa
je     81c <_init-0x770>
jb     809 <_init-0x783>
jo     823 <_init-0x769>
jb     817 <_init-0x775>
je     815 <_init-0x777>
add    %ch,0x74(%esi)
data16
jae    815 <_init-0x777>
insl   (%dx),%es:(%edi)
jae    82d <_init-0x75f>
pop    %edi
jo     82e <_init-0x75e>
gs
pop    %edi
ja     832 <_init-0x75a>
imul   $0x75786966,0x5f(%ebp,%eiz,2),%esi
jo     7ca <_init-0x7c2>
outsb  %ds:(%esi),(%dx)
je     833 <_init-0x759>
jae    82e <_init-0x75e>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     83d <_init-0x74f>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    83e <_init-0x74e>
insl   (%dx),%es:(%edi)
jae    856 <_init-0x736>
pop    %edi
jo     854 <_init-0x738>
jae    85b <_init-0x731>
pop    %edi
jb     84f <_init-0x73d>
popa
fs
pop    %edi
imul   $0x70,0x75(%eax),%di
outsb  %ds:(%esi),(%dx)
je     85c <_init-0x730>
jae    857 <_init-0x735>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jo     85f <_init-0x72d>
jb     873 <_init-0x719>
gs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     879 <_init-0x713>
imul   $0x66746e00,0x6e(%edi),%ebp
jae    86d <_init-0x71f>
popa
je     885 <_init-0x707>
jb     872 <_init-0x71a>
jo     88a <_init-0x702>
je     876 <_init-0x716>
jae    87e <_init-0x70e>
popa
jb     87f <_init-0x70d>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    886 <_init-0x706>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    892 <_init-0x6fa>
je     88e <_init-0x6fe>
push   $0x6c646e61
gs
jb     837 <_init-0x755>
outsb  %ds:(%esi),(%dx)
je     8a0 <_init-0x6ec>
jae    89b <_init-0x6f1>
popa
je     8b3 <_init-0x6d9>
jb     8a0 <_init-0x6ec>
imul   $0x695f,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
je     8c0 <_init-0x6cc>
jb     8b2 <_init-0x6da>
gs
data16
add    %ch,0x74(%esi)
data16
jae    8b5 <_init-0x6d7>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     8c1 <_init-0x6cb>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     8cc <_init-0x6c0>
jae    8c7 <_init-0x6c5>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    8d2 <_init-0x6ba>
jae    871 <_init-0x71b>
outsb  %ds:(%esi),(%dx)
je     8da <_init-0x6b2>
jae    8d5 <_init-0x6b7>
popa
je     8ed <_init-0x69f>
jb     8da <_init-0x6b2>
insl   (%dx),%es:(%edi)
popa
jo     8de <_init-0x6ae>
ja     8e9 <_init-0x6a3>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
jb     8fc <_init-0x690>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x66746e00,0x74(%ebx),%esi
jae    8f1 <_init-0x69b>
jne    901 <_init-0x68b>
outsl  %ds:(%esi),(%dx)
jne    905 <_init-0x687>
je     899 <_init-0x6f3>
outsb  %ds:(%esi),(%dx)
je     902 <_init-0x68a>
jae    8fd <_init-0x68f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x61(%ebp,%eiz,2)
jb     907 <_init-0x685>
insb   (%dx),%es:(%edi)
gs
jbe    911 <_init-0x67b>
insb   (%dx),%es:(%edi)
jae    8af <_init-0x6dd>
outsb  %ds:(%esi),(%dx)
je     918 <_init-0x674>
jae    913 <_init-0x679>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    924 <_init-0x668>
add    %ch,0x74(%esi)
data16
jae    924 <_init-0x668>
jo     93e <_init-0x64e>
jb     932 <_init-0x65a>
je     930 <_init-0x65c>
add    %ch,0x74(%esi)
data16
jae    930 <_init-0x65c>
jb     93f <_init-0x64d>
pop    %edi
jo     94d <_init-0x63f>
jb     941 <_init-0x64b>
je     93f <_init-0x64d>
add    %ch,0x74(%esi)
data16
jae    93f <_init-0x64d>
popa
je     957 <_init-0x635>
jb     944 <_init-0x648>
jb     94c <_init-0x640>
imul   $0x65735f74,0x69(%esi),%ebp
popa
jb     954 <_init-0x638>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    95b <_init-0x631>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     96c <_init-0x620>
jae    967 <_init-0x625>
popa
je     97f <_init-0x60d>
jb     96c <_init-0x620>
outsl  %ds:(%esi),(%dx)
jo     975 <_init-0x617>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    976 <_init-0x616>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
push   $0x6c646e61
gs
jb     982 <_init-0x60a>
outsl  %ds:(%esi),(%dx)
jne    99a <_init-0x5f2>
gs
jb     99b <_init-0x5f1>
add    %bl,0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    994 <_init-0x5f8>
jne    99a <_init-0x5f2>
jae    9a7 <_init-0x5e5>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jae    9b3 <_init-0x5d9>
je     9af <_init-0x5dd>
insb   (%dx),%es:(%edi)
gs
jbe    9b9 <_init-0x5d3>
insb   (%dx),%es:(%edi)
jae    957 <_init-0x635>
outsb  %ds:(%esi),(%dx)
je     9c0 <_init-0x5cc>
jae    9bb <_init-0x5d1>
popa
je     9d3 <_init-0x5b9>
jb     9c0 <_init-0x5cc>
addr16
gs
je     9c4 <_init-0x5c8>
jae    9cc <_init-0x5c0>
popa
jb     9cd <_init-0x5bf>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    9d4 <_init-0x5b8>
insl   (%dx),%es:(%edi)
popa
jo     9e9 <_init-0x5a3>
imul   $0x6961705f,0x67(%esi),%ebp
jb     9f5 <_init-0x597>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     9fc <_init-0x590>
gs
jae    a00 <_init-0x58c>
add    %ch,0x74(%esi)
data16
jae    9f2 <_init-0x59a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
addr16
gs
je     9fa <_init-0x592>
insb   (%dx),%es:(%edi)
gs
jbe    a04 <_init-0x588>
insb   (%dx),%es:(%edi)
jae    9a2 <_init-0x5ea>
outsb  %ds:(%esi),(%dx)
je     a0b <_init-0x581>
jae    a06 <_init-0x586>
popa
je     a1e <_init-0x56e>
jb     a0b <_init-0x581>
insl   (%dx),%es:(%edi)
jae    a23 <_init-0x569>
pop    %edi
jo     a24 <_init-0x568>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    a1a <_init-0x572>
jo     a1e <_init-0x56e>
je     a27 <_init-0x565>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
je     a35 <_init-0x557>
pop    %edi
imul   $0x6e006564,0x6f(%esi),%ebp
je     a36 <_init-0x556>
jae    a31 <_init-0x55b>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    a44 <_init-0x548>
je     9d8 <_init-0x5b4>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    a4b <_init-0x541>
popa
je     a63 <_init-0x529>
jb     a50 <_init-0x53c>
jo     a65 <_init-0x527>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    a5b <_init-0x531>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     a70 <_init-0x51c>
add    %ch,%fs:0x74(%esi)
data16
jae    a71 <_init-0x51b>
popa
je     a89 <_init-0x503>
jb     a76 <_init-0x516>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     a87 <_init-0x505>
jae    a82 <_init-0x50a>
insl   (%dx),%es:(%edi)
data16
je     a86 <_init-0x506>
jb     a8e <_init-0x4fe>
arpl   %bp,0x72(%edi)
fs
jae    a8e <_init-0x4fe>
ja     aa3 <_init-0x4e9>
imul   $0x7366746e,0x0(%ebp,%eiz,2),%esi
pop    %edi
popa
je     ab1 <_init-0x4db>
jb     a9e <_init-0x4ee>
insl   (%dx),%es:(%edi)
jae    ab6 <_init-0x4d6>
pop    %edi
jo     abc <_init-0x4d0>
jb     ab0 <_init-0x4dc>
je     aae <_init-0x4de>
add    %ch,0x74(%esi)
data16
jae    aae <_init-0x4de>
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     abd <_init-0x4cf>
jae    ab8 <_init-0x4d4>
jne    abe <_init-0x4ce>
jae    ad1 <_init-0x4bb>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    ae6 <_init-0x4a6>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     aeb <_init-0x4a1>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x70(%edi)
je     af2 <_init-0x49a>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x6d(%ecx,%ebp,2)
add    %dh,%gs:0x65(%edx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    b0f <_init-0x47d>
jb     b11 <_init-0x47b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     b19 <_init-0x473>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
jae    b19 <_init-0x473>
je     ab6 <_init-0x4d6>
pop    %edi
pop    %edi
gs
jb     b2d <_init-0x45f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
js     b45 <_init-0x447>
je     b35 <_init-0x457>
je     b0c <_init-0x480>
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     b4f <_init-0x43d>
popa
jb     b45 <_init-0x447>
add    %bl,0x5f(%edi)
jae    b51 <_init-0x43b>
jo     b57 <_init-0x435>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x6f,(%eax),%eax
jo     b65 <_init-0x427>
outsl  %ds:(%esi),(%dx)
jo     b68 <_init-0x424>
add    %ah,0x65(%edi)
je     b68 <_init-0x424>
jo     b6f <_init-0x41d>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x72(%bp,%di)
popa
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     b70 <_init-0x41c>
push   $0x6c730072
gs
gs
jo     b16 <_init-0x476>
pop    %edi
pop    %edi
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     b89 <_init-0x403>
add    %ch,0x70(%edi)
je     b8e <_init-0x3fe>
jb     b9d <_init-0x3ef>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     bac <_init-0x3e0>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x65(%edi)
fs
popa
je     bb3 <_init-0x3d9>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    bcf <_init-0x3bd>
popa
jb     bd2 <_init-0x3ba>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    bc8 <_init-0x3c4>
addr16 jo bd8 <_init-0x3b4>
add    %bl,0x66(%edi)
jo     bd0 <_init-0x3bc>
push   $0x746e0077
data16
jae    bd8 <_init-0x3b4>
bound  %esi,0x67(%ebp)
jae    b7e <_init-0x40e>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    $0x0,%al
push   $0x3
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x50000,%eax
xchg   %al,(%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x40000,(%ecx),%ecx
nop
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
pushf
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%edx)
add    %ah,0x4(%esi)
add    %al,(%eax)
enter  $0xbd,$0x0
or     %al,(%eax)
add    %al,(%eax)
int3
mov    $0x80000,%ebp
add    %al,(%eax)
in     (%dx),%al
mov    $0x80000,%edi
add    %al,(%eax)
add    $0xc0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %al,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %al,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
rolb   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
rolb   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
pusha
rolb   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
jo     ca6 <_init-0x2e6>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,0x80000c0(%eax)
add    %al,(%eax)
add    %ah,0x80000c0(%eax)
add    %al,(%eax)
add    %dh,0x80000c0(%eax)
add    %al,(%eax)
add    %al,%al
rolb   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
rol    %al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
loopne cde <_init-0x2ae>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
lock rolb $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,%cl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
adc    %al,%cl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
and    %al,%cl
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %eax
roll   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
push   %esp
roll   $0x0,(%eax)
or     %al,(%eax)
add    %al,(%eax)
enter  $0xbf,$0x0
push   %es
add    %eax,(%eax)
add    %cl,%ah
mov    $0x8060000,%edi
add    %al,(%eax)
sarb   0xa060000(%edi)
add    %al,(%eax)
aam    $0xbf
add    %al,(%eax)
push   %es
adc    (%eax),%al
add    %bl,%al
mov    $0x16060000,%edi
add    %al,(%eax)
fdivrl 0x17060000(%edi)
add    %al,(%eax)
loopne d45 <_init-0x247>
add    %al,(%eax)
push   %es
sbb    %eax,(%eax)
add    %ah,%ah
mov    $0x1a060000,%edi
add    %al,(%eax)
call   6000e58 <_end+0x5ff4878>
and    (%eax),%eax
add    %dh,%al
mov    $0x36060000,%edi
add    %al,(%eax)
hlt
mov    $0x38060000,%edi
add    %al,(%eax)
clc
mov    $0x3b060000,%edi
add    %al,(%eax)
cld
mov    $0x42060000,%edi
loopne d7c <_init-0x210>
add    %al,(%eax)
pop    %es
add    (%eax),%al
add    %ah,%ah
mov    $0x3070000,%esi
add    %al,(%eax)
call   7000e8f <_end+0x6ff48af>
add    $0x0,%al
add    %ch,%ah
mov    $0x5070000,%esi
add    %al,(%eax)
lock mov $0x6070000,%esi
add    %al,(%eax)
hlt
mov    $0x7070000,%esi
add    %al,(%eax)
clc
mov    $0x9070000,%esi
add    %al,(%eax)
cld
mov    $0xb070000,%esi
add    %al,(%eax)
add    %bh,0xc070000(%edi)
add    %al,(%eax)
add    $0xbf,%al
add    %al,(%eax)
pop    %es
or     $0xbf080000,%eax
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
or     $0xbf,%al
add    %al,(%eax)
pop    %es
sldt   (%eax)
adc    %bh,0x10070000(%edi)
add    %al,(%eax)
adc    $0xbf,%al
add    %al,(%eax)
pop    %es
adc    %eax,(%eax)
add    %bl,(%eax)
mov    $0x13070000,%edi
add    %al,(%eax)
sbb    $0xbf,%al
add    %al,(%eax)
pop    %es
adc    $0x0,%al
add    %ah,(%eax)
mov    $0x15070000,%edi
add    %al,(%eax)
and    $0xbf,%al
add    %al,(%eax)
pop    %es
sbb    %al,(%eax)
add    %ch,(%eax)
mov    $0x1a070000,%edi
add    %al,(%eax)
sub    $0xbf,%al
add    %al,(%eax)
pop    %es
sbb    (%eax),%eax
add    %dh,(%eax)
mov    $0x1c070000,%edi
add    %al,(%eax)
xor    $0xbf,%al
add    %al,(%eax)
pop    %es
sbb    $0xbf380000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
cmp    $0xbf,%al
add    %al,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
inc    %eax
mov    $0x20070000,%edi
add    %al,(%eax)
inc    %esp
mov    $0x21070000,%edi
add    %al,(%eax)
dec    %eax
mov    $0x22070000,%edi
add    %al,(%eax)
dec    %esp
mov    $0x23070000,%edi
add    %al,(%eax)
push   %eax
mov    $0x24070000,%edi
add    %al,(%eax)
push   %esp
mov    $0x25070000,%edi
add    %al,(%eax)
pop    %eax
mov    $0x26070000,%edi
add    %al,(%eax)
pop    %esp
mov    $0x27070000,%edi
add    %al,(%eax)
pusha
mov    $0x28070000,%edi
add    %al,(%eax)
fs
mov    $0x29070000,%edi
add    %al,(%eax)
push   $0x70000bf
sub    (%eax),%al
add    %ch,0x0(%edi,%edi,4)
add    %al,(%edi)
sub    (%eax),%eax
add    %dh,-0x41(%eax)
add    %al,(%eax)
pop    %es
sub    $0x0,%al
add    %dh,0x0(%edi,%edi,4)
add    %al,(%edi)
sub    $0xbf780000,%eax
add    %al,(%eax)
pop    %es
add    %al,%cs:(%eax)
jl     eb5 <_init-0xd7>
add    %al,(%eax)
pop    %es
das
add    %al,(%eax)
cmpb   $0x0,0x30070000(%edi)
add    %al,0x31070000(%edi,%edi,4)
add    %al,(%eax)
mov    %bh,0x32070000(%edi)
add    %al,(%eax)
mov    %?,0x33070000(%edi)
add    %al,(%eax)
nop
mov    $0x34070000,%edi
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x35070000,%edi
add    %al,(%eax)
cwtl
mov    $0x37070000,%edi
add    %al,(%eax)
pushf
mov    $0x39070000,%edi
add    %al,(%eax)
mov    0x70000bf,%al
cmp    (%eax),%al
add    %ah,0x3c070000(%edi,%edi,4)
add    %al,(%eax)
test   $0xbf,%al
add    %al,(%eax)
pop    %es
cmp    $0xbfac0000,%eax
add    %al,(%eax)
pop    %es
add    %al,%ds:(%eax)
mov    $0xbf,%al
add    %al,(%eax)
pop    %es
aas
add    %al,(%eax)
mov    $0xbf,%ah
add    %al,(%eax)
pop    %es
inc    %eax
add    %al,(%eax)
mov    $0x70000bf,%eax
inc    %ecx
add    %al,(%eax)
mov    $0x70000bf,%esp
inc    %ebx
add    %al,(%eax)
sarb   $0x0,0x44070000(%edi)
add    %al,%ah
mov    $0x45070000,%edi
push   %ebx
sub    $0x8,%esp
call   53f0 <main+0x4090>
add    $0xaf3f,%ebx
mov    0x114(%ebx),%eax
test   %eax,%eax
je     faa <_init+0x1e>
call   1170 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    fb0 <_init+0x24>
jmp    *0x10(%ebx)
push   $0x8
jmp    fb0 <_init+0x24>
jmp    *0x14(%ebx)
push   $0x10
jmp    fb0 <_init+0x24>
jmp    *0x18(%ebx)
push   $0x18
jmp    fb0 <_init+0x24>
jmp    *0x1c(%ebx)
push   $0x20
jmp    fb0 <_init+0x24>
jmp    *0x20(%ebx)
push   $0x28
jmp    fb0 <_init+0x24>
jmp    *0x24(%ebx)
push   $0x30
jmp    fb0 <_init+0x24>
jmp    *0x28(%ebx)
push   $0x38
jmp    fb0 <_init+0x24>
jmp    *0x2c(%ebx)
push   $0x40
jmp    fb0 <_init+0x24>
jmp    *0x30(%ebx)
push   $0x48
jmp    fb0 <_init+0x24>
jmp    *0x34(%ebx)
push   $0x50
jmp    fb0 <_init+0x24>
jmp    *0x38(%ebx)
push   $0x58
jmp    fb0 <_init+0x24>
jmp    *0x3c(%ebx)
push   $0x60
jmp    fb0 <_init+0x24>
jmp    *0x40(%ebx)
push   $0x68
jmp    fb0 <_init+0x24>
jmp    *0x44(%ebx)
push   $0x70
jmp    fb0 <_init+0x24>
jmp    *0x48(%ebx)
push   $0x78
jmp    fb0 <_init+0x24>
jmp    *0x4c(%ebx)
push   $0x80
jmp    fb0 <_init+0x24>
jmp    *0x50(%ebx)
push   $0x88
jmp    fb0 <_init+0x24>
jmp    *0x54(%ebx)
push   $0x90
jmp    fb0 <_init+0x24>
jmp    *0x58(%ebx)
push   $0x98
jmp    fb0 <_init+0x24>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    fb0 <_init+0x24>
jmp    *0x60(%ebx)
push   $0xa8
jmp    fb0 <_init+0x24>
jmp    *0x64(%ebx)
push   $0xb0
jmp    fb0 <_init+0x24>
jmp    *0x68(%ebx)
push   $0xb8
jmp    fb0 <_init+0x24>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    fb0 <_init+0x24>
jmp    *0x70(%ebx)
push   $0xc8
jmp    fb0 <_init+0x24>
jmp    *0x74(%ebx)
push   $0xd0
jmp    fb0 <_init+0x24>
jmp    *0x78(%ebx)
push   $0xd8
jmp    fb0 <_init+0x24>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    fb0 <_init+0x24>
jmp    *0x80(%ebx)
push   $0xe8
jmp    fb0 <_init+0x24>
jmp    *0x84(%ebx)
push   $0xf0
jmp    fb0 <_init+0x24>
jmp    *0x88(%ebx)
push   $0xf8
jmp    fb0 <_init+0x24>
jmp    *0x8c(%ebx)
push   $0x100
jmp    fb0 <_init+0x24>
jmp    *0x90(%ebx)
push   $0x108
jmp    fb0 <_init+0x24>
jmp    *0x94(%ebx)
push   $0x110
jmp    fb0 <_init+0x24>
jmp    *0x98(%ebx)
push   $0x118
jmp    fb0 <_init+0x24>
jmp    *0x9c(%ebx)
push   $0x120
jmp    fb0 <_init+0x24>
jmp    *0xa0(%ebx)
push   $0x128
jmp    fb0 <_init+0x24>
jmp    *0xa4(%ebx)
push   $0x130
jmp    fb0 <_init+0x24>
jmp    *0xa8(%ebx)
push   $0x138
jmp    fb0 <_init+0x24>
jmp    *0xac(%ebx)
push   $0x140
jmp    fb0 <_init+0x24>
jmp    *0xb0(%ebx)
push   $0x148
jmp    fb0 <_init+0x24>
jmp    *0xb4(%ebx)
push   $0x150
jmp    fb0 <_init+0x24>
jmp    *0xb8(%ebx)
push   $0x158
jmp    fb0 <_init+0x24>
jmp    *0xbc(%ebx)
push   $0x160
jmp    fb0 <_init+0x24>
jmp    *0xc0(%ebx)
push   $0x168
jmp    fb0 <_init+0x24>
jmp    *0xc4(%ebx)
push   $0x170
jmp    fb0 <_init+0x24>
jmp    *0xc8(%ebx)
push   $0x178
jmp    fb0 <_init+0x24>
jmp    *0xcc(%ebx)
push   $0x180
jmp    fb0 <_init+0x24>
jmp    *0xd0(%ebx)
push   $0x188
jmp    fb0 <_init+0x24>
jmp    *0xd4(%ebx)
push   $0x190
jmp    fb0 <_init+0x24>
jmp    *0xd8(%ebx)
push   $0x198
jmp    fb0 <_init+0x24>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    fb0 <_init+0x24>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    fb0 <_init+0x24>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    fb0 <_init+0x24>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    fb0 <_init+0x24>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    fb0 <_init+0x24>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    fb0 <_init+0x24>
lea    0x4(%esp),%ecx
and    $0xfffffff0,%esp
pushl  -0x4(%ecx)
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
push   %ecx
sub    $0x168,%esp
mov    (%ecx),%eax
call   53f0 <main+0x4090>
add    $0xab56,%ebx
mov    %eax,-0xb0(%ebp)
mov    0x4(%ecx),%eax
mov    %eax,-0x88(%ebp)
mov    0x100(%ebx),%eax
mov    %eax,(%esp)
call   1140 <ntfs_log_set_handler@plt>
mov    0x120(%ebx),%eax
movl   $0x1,0x2e4(%ebx)
00
movl   $0x0,-0x94(%ebp)
00
movl   $0x0,-0x90(%ebp)
00
movl   $0x0,(%eax)
lea    0x14c(%ebx),%eax
mov    %eax,-0x98(%ebp)
lea    -0x37f8(%ebx),%eax
movl   $0x0,-0x80(%ebp)
mov    %eax,-0xc0(%ebp)
movl   $0x0,0x10(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0xc(%esp)
mov    -0xc0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x88(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,(%esp)
call   11a0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     1574 <main+0x214>
cmp    $0x76,%eax
ja     1501 <main+0x1a1>
mov    -0x2a5c(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
addl   $0x1,0x2d0(%ebx)
addl   $0x1,0x2ec(%ebx)
addl   $0x1,0x2f0(%ebx)
addl   $0x1,0x2f4(%ebx)
addl   $0x1,0x2f8(%ebx)
addl   $0x1,0x2fc(%ebx)
addl   $0x1,0x300(%ebx)
addl   $0x1,0x304(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,-0x90(%ebp)
jmp    13ea <main+0x8a>
mov    0x104(%ebx),%eax
lea    -0x3815(%ebx),%edi
mov    -0x88(%ebp),%ecx
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     14d0 <main+0x170>
addl   $0x1,-0x94(%ebp)
jmp    13ea <main+0x8a>
mov    0x2cc(%ebx),%eax
test   %eax,%eax
je     14e4 <main+0x184>
movl   $0x0,0x2cc(%ebx)
00
addl   $0x1,-0x80(%ebp)
jmp    13ea <main+0x8a>
mov    %eax,(%esp)
call   1190 <ntfs_log_parse_option@plt>
cmp    $0x1,%eax
adcl   $0x0,-0x80(%ebp)
jmp    13ea <main+0x8a>
mov    0x104(%ebx),%eax
mov    -0x88(%ebp),%ecx
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    %eax,0x2cc(%ebx)
jmp    13ea <main+0x8a>
mov    0x10c(%ebx),%eax
mov    -0x88(%ebp),%ecx
mov    (%eax),%eax
mov    %eax,-0xa0(%ebp)
sub    $0x62,%eax
cmp    $0x1,%eax
mov    0x104(%ebx),%eax
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    %eax,0x18(%esp)
jbe    198c <main+0x62c>
lea    -0x380e(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x186,0x8(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27a2(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
addl   $0x1,-0x80(%ebp)
jmp    13ea <main+0x8a>
call   1030 <ntfs_log_get_levels@plt>
test   $0x10,%al
je     1584 <main+0x224>
addl   $0x1,0x2dc(%ebx)
test   $0x4,%al
jne    158f <main+0x22f>
addl   $0x1,0x2d8(%ebx)
mov    -0x94(%ebp),%eax
or     -0x90(%ebp),%eax
je     177d <main+0x41d>
mov    -0x90(%ebp),%eax
movl   $0x0,0x2d8(%ebx)
00
test   %eax,%eax
je     16b7 <main+0x357>
lea    -0x37e2(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x3274(%ebx),%eax
lea    -0x27b5(%ebx),%esi
lea    -0x37d4(%ebx),%edi
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %eax,%edi
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x94,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x322c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x95,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x3204(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x96,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0xf4(%ebx),%eax
mov    (%eax),%ecx
lea    0x280(%ebx),%eax
mov    (%eax),%edx
lea    0x27c(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x37cb(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x8,0xc(%esp)
movl   $0x97,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x80(%ebp),%esi
or     -0x94(%ebp),%esi
je     175c <main+0x3fc>
lea    -0x37d4(%ebx),%edi
lea    -0x31e0(%ebx),%eax
mov    %edi,0x18(%esp)
lea    -0x27bb(%ebx),%edi
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0xb9,0x8(%esp)
mov    %eax,-0x98(%ebp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0xf4(%ebx),%eax
mov    (%eax),%edx
lea    0x280(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x37c7(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0xba,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    $0x1,%edi
or     %esi,%eax
je     19b3 <main+0x653>
lea    -0x10(%ebp),%esp
mov    %edi,%eax
pop    %ecx
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
lea    -0x4(%ecx),%esp
ret
mov    0x2cc(%ebx),%edi
test   %edi,%edi
je     18a8 <main+0x548>
mov    0x2d8(%ebx),%esi
test   %esi,%esi
je     17dd <main+0x47d>
mov    0x2dc(%ebx),%ecx
test   %ecx,%ecx
je     17dd <main+0x47d>
lea    -0x330c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27a2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x19e,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
addl   $0x1,-0x80(%ebp)
mov    0x2e4(%ebx),%eax
sub    $0x1,%eax
cmp    $0x63,%eax
jbe    1829 <main+0x4c9>
lea    -0x32d0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27a2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1aa,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
addl   $0x1,-0x80(%ebp)
mov    0x2e8(%ebx),%edx
test   %edx,%edx
je     18f4 <main+0x594>
mov    0x2ec(%ebx),%eax
test   %eax,%eax
jne    16b7 <main+0x357>
mov    0x2f0(%ebx),%eax
test   %eax,%eax
jne    16b7 <main+0x357>
mov    0x2f4(%ebx),%eax
test   %eax,%eax
jne    16b7 <main+0x357>
mov    0x2f8(%ebx),%eax
test   %eax,%eax
jne    16b7 <main+0x357>
mov    0x2fc(%ebx),%eax
test   %eax,%eax
jne    16b7 <main+0x357>
mov    0x300(%ebx),%eax
test   %eax,%eax
jne    16b7 <main+0x357>
mov    0x304(%ebx),%edi
test   %edi,%edi
jne    16b7 <main+0x357>
movl   $0x1,0x2d0(%ebx)
00
jmp    16b7 <main+0x357>
cmpl   $0x1,-0xb0(%ebp)
jle    18eb <main+0x58b>
lea    -0x3334(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27a2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x199,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
addl   $0x1,-0x80(%ebp)
jmp    178b <main+0x42b>
movl   $0x8,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,0x2e8(%ebx)
je     51cf <main+0x3e6f>
movl   $0x0,(%eax)
movl   $0xffffffff,0x4(%eax)
jmp    1837 <main+0x4d7>
addl   $0x1,0x2e0(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,0x2fc(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,0x304(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,0x2d8(%ebx)
movl   $0x4,(%esp)
call   10f0 <ntfs_log_clear_levels@plt>
jmp    13ea <main+0x8a>
addl   $0x1,0x2f8(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,0x2dc(%ebx)
movl   $0x10,(%esp)
call   12f0 <ntfs_log_set_levels@plt>
jmp    13ea <main+0x8a>
addl   $0x1,0x300(%ebx)
jmp    13ea <main+0x8a>
lea    -0x3358(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x184,0x8(%esp)
jmp    1553 <main+0x1f3>
call   6660 <main+0x5300>
mov    0x2d0(%ebx),%esi
test   %esi,%esi
je     4ba7 <main+0x3847>
mov    $0x1,%eax
mov    0x2d4(%ebx),%ecx
mov    %eax,%edx
or     $0x10000000,%edx
test   %ecx,%ecx
cmovne %edx,%eax
mov    0x2cc(%ebx),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   6aa0 <main+0x5740>
test   %eax,%eax
mov    %eax,-0xc4(%ebp)
je     1d73 <main+0xa13>
testb  $0x1,0x12(%eax)
je     1a12 <main+0x6b2>
mov    0x2d4(%ebx),%eax
test   %eax,%eax
je     3763 <main+0x2403>
mov    0x2d0(%ebx),%eax
test   %eax,%eax
jne    4f7f <main+0x3c1f>
mov    0x2e0(%ebx),%eax
test   %eax,%eax
je     4b72 <main+0x3812>
lea    -0x38c6(%ebx),%eax
mov    %eax,-0x98(%ebp)
lea    -0x2794(%ebx),%eax
movl   $0x1,-0xc8(%ebp)
00
mov    %eax,-0xf0(%ebp)
mov    0x2e8(%ebx),%edx
xor    %eax,%eax
mov    (%edx),%edi
test   %edi,%edi
js     41e6 <main+0x2e86>
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jns    1a62 <main+0x702>
mov    %eax,0x2ac(%ebx)
movl   $0x0,(%esp)
call   1090 <time@plt>
mov    %eax,(%esp)
call   1020 <srandom@plt>
lea    -0x3817(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
movl   $0x802,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xf0(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2e4(%ebx),%eax
test   %eax,%eax
jle    2957 <main+0x15f7>
movl   $0x0,-0x12c(%ebp)
00
mov    0x2e8(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,-0x88(%ebp)
js     4b59 <main+0x37f9>
lea    0x2ec,%eax
movl   $0x4,-0x130(%ebp)
00
movl   $0x0,-0xe0(%ebp)
00
movl   $0x0,-0xdc(%ebp)
00
mov    %eax,-0x14c(%ebp)
jmp    1ba6 <main+0x846>
lea    0x0(%esi),%esi
mov    0x2fc(%ebx),%eax
test   %eax,%eax
jne    1ff3 <main+0xc93>
mov    0x2f0(%ebx),%eax
test   %eax,%eax
jne    202f <main+0xccf>
mov    0x2f4(%ebx),%eax
test   %eax,%eax
jne    22a1 <main+0xf41>
mov    0x2f8(%ebx),%eax
test   %eax,%eax
jne    248b <main+0x112b>
mov    0x300(%ebx),%eax
test   %eax,%eax
jne    254a <main+0x11ea>
mov    0x304(%ebx),%eax
test   %eax,%eax
jne    2654 <main+0x12f4>
mov    -0xc8(%ebp),%edx
test   %edx,%edx
je     28f0 <main+0x1590>
mov    -0x130(%ebp),%ecx
mov    0x2e8(%ebx),%eax
addl   $0x4,-0x130(%ebp)
mov    (%eax,%ecx,1),%eax
test   %eax,%eax
mov    %eax,-0x88(%ebp)
js     28f0 <main+0x1590>
mov    -0x14c(%ebp),%eax
mov    (%eax,%ebx,1),%edi
test   %edi,%edi
je     1b20 <main+0x7c0>
mov    -0xc4(%ebp),%ecx
mov    0x78(%ecx),%eax
movzbl 0x25(%ecx),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%esi
sar    $0x1f,%esi
test   $0x20,%cl
cmovne %edx,%eax
cmovne %esi,%edx
cmp    $0x0,%edx
mov    %eax,-0xf8(%ebp)
mov    %edx,-0xf4(%ebp)
jl     4aec <main+0x378c>
jle    4adf <main+0x377f>
lea    -0x27d8(%ebx),%edi
lea    -0x38d4(%ebx),%eax
mov    %edi,-0x80(%ebp)
mov    -0x98(%ebp),%edi
movl   $0x0,-0xe8(%ebp)
00
movl   $0x0,-0xe4(%ebp)
00
movl   $0x5,-0x90(%ebp)
00
movl   $0x0,-0x8c(%ebp)
00
mov    %eax,-0x120(%ebp)
jmp    1caa <main+0x94a>
lea    -0x350c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x46b,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xb0(%ebp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
addl   $0x1,-0x90(%ebp)
adcl   $0x0,-0x8c(%ebp)
mov    -0x8c(%ebp),%edx
mov    -0x90(%ebp),%eax
xor    -0xf4(%ebp),%edx
xor    -0xf8(%ebp),%eax
or     %eax,%edx
je     1f6e <main+0xc0e>
mov    -0x8c(%ebp),%edx
mov    -0x90(%ebp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    -0x120(%ebp),%ecx
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x45f,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%ecx
mov    %ecx,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   12e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,-0xb0(%ebp)
je     1e64 <main+0xb04>
mov    -0xb0(%ebp),%eax
mov    0x8(%eax),%eax
mov    0x24(%eax),%edx
or     0x20(%eax),%edx
je     1d98 <main+0xa38>
cmpl   $0x2,0x2dc(%ebx)
jg     1c3d <main+0x8dd>
lea    -0x372b(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x46d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1c6e <main+0x90e>
mov    $0x1,%esi
mov    0x2e8(%ebx),%eax
mov    %esi,%edi
test   %eax,%eax
je     176f <main+0x40f>
mov    %eax,(%esp)
call   1060 <free@plt>
jmp    176f <main+0x40f>
lea    0x0(%esi),%esi
mov    0x108(%ebx),%eax
movl   $0x4,0xc(%esp)
movl   $0xa0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,-0xa0(%ebp)
je     3df6 <main+0x2a96>
mov    -0xa0(%ebp),%eax
testb  $0x2,0x18(%eax)
jne    1ea7 <main+0xb47>
lea    -0x3729(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x47b,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%esi
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2d70(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x47d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
jmp    1c6e <main+0x90e>
cmpl   $0x2,0x2dc(%ebx)
jle    1f38 <main+0xbd8>
lea    -0x38bb(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x463,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1c7c <main+0x91c>
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   1270 <ntfs_attr_map_whole_runlist@plt>
test   %eax,%eax
je     3e39 <main+0x2ad9>
lea    -0x38a5(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x482,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%esi
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2d38(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x484,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1e51 <main+0xaf1>
lea    0x0(%esi),%esi
lea    -0x372b(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x465,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1c7c <main+0x91c>
mov    -0xe8(%ebp),%eax
mov    -0xe4(%ebp),%edx
mov    -0x80(%ebp),%edi
mov    %eax,0x1c(%esp)
mov    %edx,0x20(%esp)
mov    -0x88(%ebp),%eax
mov    %edx,%esi
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x4c0,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2b40(%ebx),%eax
mov    %eax,0x14(%esp)
mov    -0x98(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
test   %esi,%esi
js     3763 <main+0x2403>
mov    -0xe8(%ebp),%eax
add    %eax,-0xe0(%ebp)
mov    0x2fc(%ebx),%eax
mov    -0xe4(%ebp),%edx
adc    %edx,-0xdc(%ebp)
test   %eax,%eax
je     1b2e <main+0x7ce>
mov    -0xc8(%ebp),%eax
mov    %eax,(%esp)
mov    -0x88(%ebp),%edx
mov    -0xc4(%ebp),%eax
call   55f0 <main+0x4290>
test   %edx,%edx
js     3763 <main+0x2403>
add    %eax,-0xe0(%ebp)
mov    0x2f0(%ebx),%eax
adc    %edx,-0xdc(%ebp)
test   %eax,%eax
je     1b3c <main+0x7dc>
mov    %esp,-0xa8(%ebp)
sub    $0x2000,%esp
lea    0x24(%esp),%eax
mov    %eax,-0x94(%ebp)
movl   $0x2,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   12e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,-0xa0(%ebp)
je     37d0 <main+0x2470>
mov    0xfc(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,-0x80(%ebp)
je     3c06 <main+0x28a6>
mov    -0x80(%ebp),%eax
testb  $0x2,0x18(%eax)
je     37a1 <main+0x2441>
mov    -0x80(%ebp),%eax
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,-0x90(%ebp)
mov    %edx,-0x8c(%ebp)
je     3c14 <main+0x28b4>
xor    %esi,%esi
xor    %edi,%edi
jmp    20d6 <main+0xd76>
add    %eax,%esi
adc    %edx,%edi
mov    -0x94(%ebp),%eax
movl   $0x2000,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edi,0x8(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   11f0 <ntfs_attr_pread@plt>
cmp    $0x0,%edx
jg     20d2 <main+0xd72>
jl     2112 <main+0xdb2>
cmp    $0x0,%eax
lea    0x0(%esi),%esi
ja     20d2 <main+0xd72>
mov    %edi,-0xac(%ebp)
mov    -0x90(%ebp),%edi
mov    %eax,%ecx
mov    %esi,-0xb0(%ebp)
mov    %edx,-0xb8(%ebp)
xor    %esi,%edi
mov    %edi,%esi
mov    -0xac(%ebp),%edi
xor    -0x8c(%ebp),%edi
or     %edi,%esi
jne    3796 <main+0x2436>
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     3796 <main+0x2436>
mov    -0x94(%ebp),%eax
mov    $0x2000,%edx
test   $0x1,%al
mov    %eax,%edi
je     216a <main+0xe0a>
movb   $0xff,(%eax)
lea    0x1(%eax),%edi
mov    $0x1fff,%dx
test   $0x2,%edi
je     2181 <main+0xe21>
mov    $0xffffffff,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
mov    %edx,%ecx
mov    $0xffffffff,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     219e <main+0xe3e>
mov    $0xffffffff,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     21a6 <main+0xe46>
movb   $0xff,(%edi)
mov    -0x90(%ebp),%eax
xor    %esi,%esi
xor    %edi,%edi
mov    -0x8c(%ebp),%edx
cmp    $0x0,%edx
mov    %eax,%ecx
mov    %edx,%eax
jl     21cc <main+0xe6c>
jle    37e0 <main+0x2480>
mov    $0x2000,%ecx
xor    %eax,%eax
mov    -0x94(%ebp),%edx
mov    %ecx,0xc(%esp)
mov    %eax,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %edi,0x8(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   1000 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jle    3788 <main+0x2428>
add    %eax,%esi
mov    -0x90(%ebp),%eax
adc    %edx,%edi
mov    -0x8c(%ebp),%edx
sub    %esi,%eax
sbb    %edi,%edx
cmp    $0x0,%edx
jl     221a <main+0xeba>
jg     21b6 <main+0xe56>
cmp    $0x0,%eax
ja     21b6 <main+0xe56>
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
lea    -0x2b1c(%ebx),%eax
mov    %esi,0x1c(%esp)
mov    %edi,0x20(%esp)
movl   $0xff,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x525,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x2853(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,%eax
mov    %edi,%edx
add    %eax,-0xe0(%ebp)
mov    0x2f4(%ebx),%eax
adc    %edx,-0xdc(%ebp)
mov    -0xa8(%ebp),%esp
test   %eax,%eax
je     1b4a <main+0x7ea>
mov    -0xc4(%ebp),%eax
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     3bb5 <main+0x2855>
mov    -0xc4(%ebp),%ecx
mov    0x78(%ecx),%eax
movzbl 0x25(%ecx),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%edi
sar    $0x1f,%edi
test   $0x20,%cl
cmovne %edx,%eax
cmovne %edi,%edx
cmp    $0x0,%edx
mov    %eax,-0xb0(%ebp)
mov    %edx,-0xac(%ebp)
jl     3b40 <main+0x27e0>
jle    3b33 <main+0x27d3>
mov    -0xc4(%ebp),%eax
movl   $0x1,-0xa0(%ebp)
00
movl   $0x0,-0x9c(%ebp)
00
movl   $0x0,-0x90(%ebp)
00
movl   $0x0,-0x8c(%ebp)
00
mov    %eax,-0x80(%ebp)
mov    -0xa0(%ebp),%eax
mov    -0x9c(%ebp),%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,-0xb8(%ebp)
mov    %eax,-0xa8(%ebp)
mov    %edx,-0xb4(%ebp)
mov    %edx,-0x94(%ebp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   7b60 <main+0x6800>
test   %eax,%eax
jne    380b <main+0x24ab>
mov    -0x80(%ebp),%ecx
mov    $0x2a,%eax
mov    $0x30,%edx
cmpb   $0x3,0x10(%ecx)
cmovne %eax,%edx
mov    0x1c(%ecx),%eax
mov    %eax,%ecx
shr    $0x9,%ecx
add    $0x1,%ecx
cmp    $0xffff,%ecx
mov    %ecx,%edi
ja     4a24 <main+0x36c4>
movzwl %dx,%ecx
add    %edi,%ecx
cmp    $0x1fe,%ecx
ja     4a24 <main+0x36c4>
mov    -0xc8(%ebp),%ecx
test   %ecx,%ecx
jne    39e9 <main+0x2689>
xor    %edx,%edx
add    %eax,-0x90(%ebp)
adc    %edx,-0x8c(%ebp)
mov    -0x9c(%ebp),%ecx
mov    -0xa0(%ebp),%edx
mov    %edx,%eax
mov    %ecx,%edx
addl   $0x1,-0xa0(%ebp)
adcl   $0x0,-0x9c(%ebp)
cmp    %edx,-0xac(%ebp)
jge    37f1 <main+0x2491>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
mov    %eax,0x1c(%esp)
lea    -0x35b2(%ebx),%eax
mov    %edx,0x20(%esp)
mov    -0x88(%ebp),%ecx
mov    %eax,0x14(%esp)
lea    -0x285c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
mov    %ecx,0x18(%esp)
movl   $0x3a6,0x8(%esp)
mov    -0x98(%ebp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
mov    -0x8c(%ebp),%eax
test   %eax,%eax
js     3763 <main+0x2403>
mov    -0x90(%ebp),%eax
add    %eax,-0xe0(%ebp)
mov    0x2f8(%ebx),%eax
mov    -0x8c(%ebp),%edx
adc    %edx,-0xdc(%ebp)
test   %eax,%eax
je     1b58 <main+0x7f8>
mov    %esp,-0xa8(%ebp)
sub    $0x1000,%esp
lea    0x24(%esp),%eax
mov    %eax,-0x94(%ebp)
lea    -0x3595(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   1180 <ntfs_pathname_to_inode@plt>
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,-0xa0(%ebp)
je     2526 <main+0x11c6>
mov    0xfc(%ebx),%eax
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,-0x80(%ebp)
je     3ddd <main+0x2a7d>
mov    -0x80(%ebp),%eax
testb  $0x2,0x18(%eax)
je     3d93 <main+0x2a33>
mov    -0x80(%ebp),%eax
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,-0x90(%ebp)
mov    %edx,-0x8c(%ebp)
jne    3c1d <main+0x28bd>
xor    %eax,%eax
xor    %edx,%edx
add    %eax,-0xe0(%ebp)
mov    0x300(%ebx),%eax
adc    %edx,-0xdc(%ebp)
mov    -0xa8(%ebp),%esp
test   %eax,%eax
je     1b66 <main+0x806>
mov    -0xc8(%ebp),%eax
movl   $0x0,-0x90(%ebp)
00
test   %eax,%eax
jne    503e <main+0x3cde>
mov    -0xc4(%ebp),%eax
cmpl   $0x0,0x60(%eax)
jl     5025 <main+0x3cc5>
jle    501b <main+0x3cbb>
xor    %esi,%esi
xor    %edi,%edi
movl   $0x0,-0x80(%ebp)
movl   $0x0,-0x7c(%ebp)
mov    -0x80(%ebp),%eax
mov    -0x7c(%ebp),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   7980 <main+0x6620>
test   %eax,%eax
jne    25c6 <main+0x1266>
cmpl   $0x2,-0xc8(%ebp)
je     35bc <main+0x225c>
mov    -0xc4(%ebp),%eax
xor    %ecx,%ecx
mov    0x18(%eax),%edx
add    %edx,%esi
adc    %ecx,%edi
mov    -0xc4(%ebp),%eax
addl   $0x1,-0x80(%ebp)
adcl   $0x0,-0x7c(%ebp)
mov    -0x7c(%ebp),%ecx
cmp    0x60(%eax),%ecx
jle    35a5 <main+0x2245>
mov    %esi,0x1c(%esp)
mov    %edi,0x20(%esp)
mov    -0x88(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x1fa,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2ab0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x2876(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    0x304(%ebx),%eax
add    %esi,-0xe0(%ebp)
adc    %edi,-0xdc(%ebp)
test   %eax,%eax
je     1b74 <main+0x814>
movl   $0x2000,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,-0xec(%ebp)
je     3763 <main+0x2403>
mov    -0xc4(%ebp),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x94(%ebp)
je     509a <main+0x3d3a>
mov    -0xc4(%ebp),%eax
mov    0xfc(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0xb0,0x4(%esp)
mov    %eax,(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,-0x110(%ebp)
je     508c <main+0x3d2c>
mov    -0x110(%ebp),%eax
mov    -0xc4(%ebp),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
mov    %edx,-0xfc(%ebp)
mov    %eax,-0x100(%ebp)
mov    0x78(%ecx),%eax
movzbl 0x25(%ecx),%ecx
mov    0x30(%eax),%edi
mov    0x2c(%eax),%esi
shrd   %cl,%edi,%esi
sar    %cl,%edi
mov    %edi,%eax
sar    $0x1f,%eax
test   $0x20,%cl
cmovne %edi,%esi
cmovne %eax,%edi
cmpl   $0x0,-0xfc(%ebp)
mov    %esi,-0x120(%ebp)
mov    %edi,-0x11c(%ebp)
jl     287e <main+0x151e>
jle    507a <main+0x3d1a>
mov    -0x120(%ebp),%eax
mov    -0x11c(%ebp),%edx
mov    -0xc4(%ebp),%edi
movl   $0x0,-0xf8(%ebp)
00
add    $0x1,%eax
adc    $0x0,%edx
mov    %eax,-0x138(%ebp)
lea    -0x70(%ebp),%eax
mov    %edx,-0x134(%ebp)
movl   $0x0,-0xf4(%ebp)
00
mov    %eax,-0x90(%ebp)
mov    -0xec(%ebp),%eax
mov    %eax,0x14(%esp)
mov    -0x100(%ebp),%eax
mov    -0xfc(%ebp),%edx
sub    -0xf8(%ebp),%eax
sbb    -0xf4(%ebp),%edx
cmp    $0x0,%edx
jl     2798 <main+0x1438>
jle    502e <main+0x3cce>
mov    $0x2000,%eax
xor    %edx,%edx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    -0xf8(%ebp),%eax
mov    -0xf4(%ebp),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    -0x110(%ebp),%ecx
mov    %ecx,(%esp)
call   11f0 <ntfs_attr_pread@plt>
test   %edx,%edx
mov    %edx,%ecx
mov    %eax,-0x144(%ebp)
mov    %edx,-0x148(%ebp)
js     287e <main+0x151e>
or     %eax,%ecx
je     50ad <main+0x3d4d>
mov    -0x138(%ebp),%edx
mov    -0xec(%ebp),%ecx
mov    -0xf8(%ebp),%eax
movl   $0x0,-0x128(%ebp)
00
mov    %edx,-0x118(%ebp)
mov    -0xf4(%ebp),%edx
mov    %ecx,-0x140(%ebp)
mov    -0x134(%ebp),%ecx
movl   $0x0,-0x124(%ebp)
00
shld   $0x3,%eax,%edx
shl    $0x3,%eax
mov    %ecx,-0x114(%ebp)
mov    %eax,-0x108(%ebp)
mov    %edx,-0x104(%ebp)
mov    -0x140(%ebp),%eax
mov    -0x104(%ebp),%edx
cmp    -0x11c(%ebp),%edx
movzbl (%eax),%eax
mov    %edx,-0x9c(%ebp)
mov    %al,-0x139(%ebp)
mov    -0x108(%ebp),%eax
mov    %eax,-0xa0(%ebp)
jg     287e <main+0x151e>
jl     2960 <main+0x1600>
mov    -0x120(%ebp),%eax
cmp    %eax,-0x108(%ebp)
jb     2960 <main+0x1600>
mov    -0x110(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0x94(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
lea    -0x3588(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x78f,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x2880(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xc8(%ebp),%edx
test   %edx,%edx
jne    1b82 <main+0x822>
mov    -0xe0(%ebp),%eax
mov    -0xdc(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2a90(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x84a,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xf0(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
addl   $0x1,-0x12c(%ebp)
mov    -0x12c(%ebp),%eax
cmp    %eax,0x2e4(%ebx)
jg     1ad8 <main+0x778>
xor    %esi,%esi
jmp    3768 <main+0x2408>
xchg   %ax,%ax
testb  $0x1,-0x139(%ebp)
movl   $0x1,-0xd8(%ebp)
00
movl   $0x0,-0xd4(%ebp)
00
je     2a15 <main+0x16b5>
cmpl   $0x0,-0xd4(%ebp)
mov    $0x1,%esi
jl     2997 <main+0x1637>
jle    2c80 <main+0x1920>
xor    %esi,%esi
mov    %esi,%eax
mov    $0x1,%edx
shrb   -0x139(%ebp)
test   %al,%al
movl   $0x0,-0xd0(%ebp)
00
je     3511 <main+0x21b1>
mov    -0x108(%ebp),%eax
mov    -0x104(%ebp),%edx
add    -0xd8(%ebp),%eax
adc    -0xd4(%ebp),%edx
addl   $0x1,-0xd8(%ebp)
adcl   $0x0,-0xd4(%ebp)
mov    %eax,-0xa0(%ebp)
mov    -0x118(%ebp),%eax
mov    %edx,-0x9c(%ebp)
mov    -0x114(%ebp),%edx
xor    -0xd4(%ebp),%edx
xor    -0xd8(%ebp),%eax
or     %eax,%edx
je     287e <main+0x151e>
testb  $0x1,-0x139(%ebp)
jne    2981 <main+0x1621>
movl   $0x3c,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,-0xe8(%ebp)
je     4a6f <main+0x370f>
add    $0xc,%eax
mov    -0x9c(%ebp),%edx
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esi)
lea    0x14(%esi),%eax
mov    %eax,0x14(%esi)
mov    %eax,0x18(%esi)
mov    -0xa0(%ebp),%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%esi)
je     4a92 <main+0x3732>
mov    0x74(%edi),%eax
mov    0xfc(%ebx),%ecx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   1200 <ntfs_attr_open@plt>
mov    %eax,%esi
mov    -0xe8(%ebp),%eax
test   %esi,%esi
je     4a7e <main+0x371e>
mov    0x34(%eax),%edx
mov    0x1c(%edi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
mov    -0x9c(%ebp),%ecx
imul   %eax,%ecx
mull   -0xa0(%ebp)
mov    %esi,(%esp)
add    %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   12b0 <ntfs_attr_mst_pread@plt>
cmp    $0x0,%edx
jle    3678 <main+0x2318>
mov    %esi,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0xe8(%ebp),%eax
mov    0x34(%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   12d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,-0xb8(%ebp)
je     4ac5 <main+0x3765>
movzwl -0x9c(%ebp),%ecx
mov    %edi,-0xa8(%ebp)
mov    %eax,%edi
movl   $0x0,-0xd0(%ebp)
00
mov    %ecx,-0xb0(%ebp)
mov    %edi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x30,(%esp)
call   12c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    34b2 <main+0x2152>
mov    0x4(%edi),%eax
test   %eax,%eax
je     34b2 <main+0x2152>
movzwl 0x14(%eax),%edx
lea    0x2e0,%esi
mov    %esi,-0x80(%ebp)
lea    (%eax,%edx,1),%ecx
mov    0x2ac(%ebx),%edx
mov    %ecx,-0xc0(%ebp)
test   %edx,%edx
je     2ca2 <main+0x1942>
test   %ecx,%ecx
sete   -0x88(%ebp)
xor    %esi,%esi
jmp    2be6 <main+0x1886>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
je     2c1a <main+0x18ba>
mov    0x2ac(%ebx),%eax
add    $0x1,%esi
cmp    %esi,%eax
jbe    2f12 <main+0x1bb2>
mov    0x4(%edi),%eax
cmpb   $0x0,-0x88(%ebp)
mov    0x10(%eax),%eax
jne    2bc8 <main+0x1868>
test   %eax,%eax
je     2bc8 <main+0x1868>
mov    -0x90(%ebp),%ecx
mov    %eax,(%esp)
mov    %esi,%eax
mov    %ecx,0x4(%esp)
mov    -0xc0(%ebp),%edx
call   6540 <main+0x51e0>
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
jne    2bd2 <main+0x1872>
mov    (%edi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
mov    0x2ac(%ebx),%eax
jne    2f08 <main+0x1ba8>
cmp    $0x1,%eax
jbe    2bd8 <main+0x1878>
mov    -0xa8(%ebp),%eax
mov    (%eax),%eax
mov    (%eax),%edx
mov    0x1c(%edx),%edx
mov    %eax,(%esp)
call   *%edx
jmp    2bd2 <main+0x1872>
cmpl   $0x7,-0xd8(%ebp)
jbe    2997 <main+0x1637>
lea    0x0(%esi),%esi
jmp    2995 <main+0x1635>
mov    0x4(%edi),%eax
movl   $0xfffffffb,-0xd0(%ebp)
ff
movl   $0x0,0x10(%eax)
mov    0x2e0(%ebx),%esi
test   %esi,%esi
jne    2b35 <main+0x17d5>
mov    (%edi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
je     2b35 <main+0x17d5>
mov    -0xa8(%ebp),%edi
movl   $0xfffffffb,-0xd0(%ebp)
ff
mov    -0xb8(%ebp),%eax
mov    %eax,(%esp)
call   ff0 <ntfs_attr_reinit_search_ctx@plt>
movzwl -0x9c(%ebp),%eax
mov    %eax,-0xb0(%ebp)
mov    -0xb8(%ebp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x20(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
call   12c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    34bd <main+0x215d>
mov    -0xb8(%ebp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
je     34bd <main+0x215d>
cmpb   $0x0,0x8(%eax)
jne    3085 <main+0x1d25>
movzwl 0x14(%eax),%edx
lea    0x2e0,%ecx
mov    %ecx,-0x80(%ebp)
lea    (%eax,%edx,1),%esi
mov    0x2ac(%ebx),%edx
test   %edx,%edx
je     2e9f <main+0x1b3f>
test   %esi,%esi
sete   -0x88(%ebp)
xor    %ecx,%ecx
mov    %edi,-0xa8(%ebp)
mov    %ecx,%edi
mov    %esi,-0xc0(%ebp)
mov    -0xb8(%ebp),%esi
jmp    2df6 <main+0x1a96>
lea    0x0(%esi),%esi
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
je     2e2a <main+0x1aca>
mov    0x2ac(%ebx),%eax
add    $0x1,%edi
cmp    %edi,%eax
jbe    2fc5 <main+0x1c65>
mov    0x4(%esi),%eax
cmpb   $0x0,-0x88(%ebp)
mov    0x10(%eax),%eax
jne    2dd8 <main+0x1a78>
test   %eax,%eax
je     2dd8 <main+0x1a78>
mov    -0x90(%ebp),%ecx
mov    %eax,(%esp)
mov    %edi,%eax
mov    %ecx,0x4(%esp)
mov    -0xc0(%ebp),%edx
call   6540 <main+0x51e0>
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
jne    2de2 <main+0x1a82>
mov    (%esi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
jne    346e <main+0x210e>
mov    0x2ac(%ebx),%eax
cmp    $0x1,%eax
jbe    2de8 <main+0x1a88>
mov    -0xa8(%ebp),%eax
mov    (%eax),%eax
mov    (%eax),%edx
mov    0x1c(%edx),%edx
mov    %eax,(%esp)
call   *%edx
jmp    2de2 <main+0x1a82>
mov    -0x88(%ebp),%edi
mov    -0xb8(%ebp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x10(%eax)
mov    0x2e0(%ebx),%ecx
mov    -0xb8(%ebp),%eax
test   %ecx,%ecx
jne    2d22 <main+0x19c2>
mov    (%eax),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
je     2d22 <main+0x19c2>
xor    %esi,%esi
xor    %edx,%edx
movl   $0xfffffffb,-0xd0(%ebp)
ff
jmp    34e2 <main+0x2182>
nop
movl   $0xfffffffb,-0xd0(%ebp)
ff
test   %eax,%eax
je     2fbd <main+0x1c5d>
xor    %esi,%esi
jmp    2f31 <main+0x1bd1>
xchg   %ax,%ax
mov    0x2ac(%ebx),%eax
add    $0x1,%esi
cmp    %esi,%eax
jbe    2fbd <main+0x1c5d>
mov    0x4(%edi),%edx
add    $0x10,%edx
je     2f51 <main+0x1bf1>
mov    -0x90(%ebp),%eax
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
jne    2f20 <main+0x1bc0>
mov    (%edi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
jne    2c95 <main+0x1935>
mov    0x2ac(%ebx),%eax
cmp    $0x1,%eax
jbe    2f26 <main+0x1bc6>
mov    -0xa8(%ebp),%eax
mov    (%eax),%eax
mov    (%eax),%edx
mov    0x1c(%edx),%edx
mov    %eax,(%esp)
call   *%edx
jmp    2f20 <main+0x1bc0>
mov    0x4(%edi),%eax
jmp    2ca2 <main+0x1942>
mov    -0xa8(%ebp),%edi
test   %eax,%eax
je     2e96 <main+0x1b36>
mov    %edi,-0x88(%ebp)
xor    %esi,%esi
mov    -0xb8(%ebp),%edi
jmp    2ff9 <main+0x1c99>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2ac(%ebx),%eax
add    $0x1,%esi
cmp    %eax,%esi
jae    2e90 <main+0x1b30>
mov    0x4(%edi),%edx
add    $0x10,%edx
je     3019 <main+0x1cb9>
mov    -0x90(%ebp),%eax
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
jne    2fe8 <main+0x1c88>
mov    (%edi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x88(%ebp),%eax
mov    %eax,(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
jne    3489 <main+0x2129>
mov    0x2ac(%ebx),%eax
cmp    $0x1,%eax
jbe    2fee <main+0x1c8e>
mov    -0x88(%ebp),%eax
mov    (%eax),%eax
mov    (%eax),%edx
mov    0x1c(%edx),%edx
mov    %eax,(%esp)
call   *%edx
jmp    2fe8 <main+0x1c88>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   1120 <ntfs_mapping_pairs_decompress@plt>
test   %eax,%eax
je     2d22 <main+0x19c2>
cmpl   $0x0,0x14(%eax)
jl     2d22 <main+0x19c2>
nop
lea    0x0(%esi,%eiz,1),%esi
jle    3590 <main+0x2230>
mov    -0xd0(%ebp),%edx
lea    0x2e0,%ecx
mov    %ecx,-0x80(%ebp)
test   %edx,%edx
jne    326f <main+0x1f0f>
lea    0x18(%eax),%ecx
mov    %ecx,-0xc0(%ebp)
mov    %eax,-0xa8(%ebp)
jmp    30fd <main+0x1d9d>
xchg   %ax,%ax
mov    -0xc0(%ebp),%eax
cmpl   $0x0,0x14(%eax)
mov    %eax,-0xa8(%ebp)
jle    4aac <main+0x374c>
addl   $0x18,-0xc0(%ebp)
mov    -0xa8(%ebp),%esi
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    %edx,%ecx
mov    %eax,%edx
and    %ecx,%eax
cmp    $0xffffffff,%eax
je     30e0 <main+0x1d80>
mov    %edx,%eax
mov    %edx,-0x88(%ebp)
mov    %ecx,%edx
add    0x10(%esi),%eax
mov    %ecx,-0x84(%ebp)
adc    0x14(%esi),%edx
cmp    %edx,-0x84(%ebp)
jg     30e0 <main+0x1d80>
jl     3140 <main+0x1de0>
cmp    %eax,-0x88(%ebp)
jae    30e0 <main+0x1d80>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x88(%ebp),%eax
mov    -0x84(%ebp),%edx
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   7980 <main+0x6620>
test   %eax,%eax
jne    3218 <main+0x1eb8>
mov    0x2ac(%ebx),%eax
test   %eax,%eax
je     3218 <main+0x1eb8>
xor    %esi,%esi
jmp    3193 <main+0x1e33>
xchg   %ax,%ax
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
je     31be <main+0x1e5e>
mov    0x2ac(%ebx),%eax
add    $0x1,%esi
cmp    %eax,%esi
jae    3218 <main+0x1eb8>
mov    0x18(%edi),%eax
test   %eax,%eax
je     3178 <main+0x1e18>
mov    -0x90(%ebp),%ecx
mov    %eax,(%esp)
mov    %esi,%eax
mov    %ecx,0x4(%esp)
mov    -0x94(%ebp),%edx
call   6540 <main+0x51e0>
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
jne    3182 <main+0x1e22>
mov    -0x94(%ebp),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0x88(%ebp),%eax
mov    -0x84(%ebp),%edx
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   10b0 <ntfs_cluster_write@plt>
cmp    $0x0,%edx
jl     3265 <main+0x1f05>
jle    3260 <main+0x1f00>
mov    0x2ac(%ebx),%eax
cmp    $0x1,%eax
jbe    3188 <main+0x1e28>
mov    (%edi),%eax
mov    (%eax),%edx
mov    0x1c(%edx),%edx
mov    %eax,(%esp)
call   *%edx
jmp    3182 <main+0x1e22>
nop
mov    -0xa8(%ebp),%ecx
addl   $0x1,-0x88(%ebp)
adcl   $0x0,-0x84(%ebp)
mov    0xc(%ecx),%edx
mov    0x8(%ecx),%eax
add    0x10(%ecx),%eax
adc    0x14(%ecx),%edx
cmp    -0x84(%ebp),%edx
jl     30e0 <main+0x1d80>
jg     3140 <main+0x1de0>
cmp    -0x88(%ebp),%eax
jbe    30e0 <main+0x1d80>
jmp    3140 <main+0x1de0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x0,%eax
ja     31fb <main+0x1e9b>
movl   $0xfffffffb,-0xd0(%ebp)
ff
mov    0x2ac(%ebx),%eax
test   %eax,%eax
je     33ed <main+0x208d>
mov    %edi,-0x88(%ebp)
xor    %esi,%esi
mov    -0xb8(%ebp),%edi
jmp    32a1 <main+0x1f41>
lea    0x0(%esi),%esi
mov    0x2ac(%ebx),%eax
add    $0x1,%esi
cmp    %eax,%esi
jae    34a7 <main+0x2147>
mov    0x4(%edi),%eax
mov    %eax,%edx
add    $0x10,%edx
je     32c6 <main+0x1f66>
mov    -0x90(%ebp),%eax
movl   $0x8,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    0x4(%edi),%eax
mov    %eax,%edx
add    $0x18,%edx
je     32e8 <main+0x1f88>
mov    -0x90(%ebp),%eax
movl   $0x8,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    0x4(%edi),%eax
mov    %eax,%edx
add    $0x28,%edx
je     330a <main+0x1faa>
mov    -0x90(%ebp),%eax
movl   $0x8,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    0x4(%edi),%eax
mov    %eax,%edx
add    $0x30,%edx
je     332c <main+0x1fcc>
mov    -0x90(%ebp),%eax
movl   $0x8,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    0x4(%edi),%eax
mov    %eax,%edx
add    $0x38,%edx
je     334e <main+0x1fee>
mov    -0x90(%ebp),%eax
movl   $0x8,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    0x4(%edi),%eax
add    $0x40,%eax
mov    %eax,%edx
je     336d <main+0x200d>
mov    -0x90(%ebp),%eax
movl   $0x8,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   6540 <main+0x51e0>
mov    -0x80(%ebp),%eax
mov    (%eax,%ebx,1),%eax
test   %eax,%eax
jne    3290 <main+0x1f30>
mov    (%edi),%eax
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    -0xa0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,0x8(%esp)
mov    -0x88(%ebp),%eax
mov    %eax,(%esp)
call   11e0 <ntfs_mft_records_write@plt>
test   %eax,%eax
jne    33dd <main+0x207d>
mov    0x2ac(%ebx),%eax
cmp    $0x1,%eax
jbe    3296 <main+0x1f36>
mov    -0x88(%ebp),%eax
mov    (%eax),%eax
mov    (%eax),%edx
mov    0x1c(%edx),%edx
mov    %eax,(%esp)
call   *%edx
jmp    3290 <main+0x1f30>
mov    -0x88(%ebp),%edi
movl   $0xfffffffb,-0xd0(%ebp)
ff
mov    -0xb8(%ebp),%ecx
mov    0x4(%ecx),%eax
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
mov    0x4(%ecx),%eax
mov    0x2e0(%ebx),%esi
movl   $0x0,0x18(%eax)
movl   $0x0,0x1c(%eax)
mov    0x4(%ecx),%eax
test   %esi,%esi
movl   $0x0,0x28(%eax)
movl   $0x0,0x2c(%eax)
mov    0x4(%ecx),%eax
movl   $0x0,0x30(%eax)
movl   $0x0,0x34(%eax)
mov    0x4(%ecx),%eax
movl   $0x0,0x38(%eax)
movl   $0x0,0x3c(%eax)
mov    0x4(%ecx),%eax
movl   $0x0,0x40(%eax)
movl   $0x0,0x44(%eax)
jne    2d22 <main+0x19c2>
mov    %ecx,%eax
jmp    2eba <main+0x1b5a>
mov    -0xa8(%ebp),%edi
mov    0x2ac(%ebx),%eax
movl   $0xfffffffb,-0xd0(%ebp)
ff
jmp    2fcb <main+0x1c6b>
mov    -0xb8(%ebp),%eax
mov    -0x88(%ebp),%edi
movl   $0xfffffffb,-0xd0(%ebp)
ff
mov    0x4(%eax),%eax
jmp    2e9f <main+0x1b3f>
mov    -0x88(%ebp),%edi
jmp    33ed <main+0x208d>
mov    -0xa8(%ebp),%edi
jmp    2d07 <main+0x19a7>
mov    -0xd0(%ebp),%ecx
mov    $0x1,%eax
test   %ecx,%ecx
sete   %dl
cmpl   $0x0,-0xd4(%ebp)
jl     34de <main+0x217e>
jle    3579 <main+0x2219>
xor    %eax,%eax
and    %edx,%eax
mov    %eax,%esi
mov    -0xb8(%ebp),%eax
mov    %edx,-0x80(%ebp)
mov    %eax,(%esp)
call   11c0 <ntfs_attr_put_search_ctx@plt>
mov    -0xe8(%ebp),%eax
call   5520 <main+0x41c0>
mov    %esi,%eax
mov    -0x80(%ebp),%edx
shrb   -0x139(%ebp)
test   %al,%al
jne    29b6 <main+0x1656>
addl   $0x1,-0x128(%ebp)
adcl   $0x0,-0x124(%ebp)
addl   $0x1,-0x140(%ebp)
addl   $0x8,-0x108(%ebp)
adcl   $0x0,-0x104(%ebp)
addl   $0xfffffff8,-0x118(%ebp)
adcl   $0xffffffff,-0x114(%ebp)
test   %dl,%dl
je     36a5 <main+0x2345>
mov    -0x124(%ebp),%eax
cmp    %eax,-0x148(%ebp)
jg     2837 <main+0x14d7>
jl     36a5 <main+0x2345>
mov    -0x128(%ebp),%eax
cmp    %eax,-0x144(%ebp)
ja     2837 <main+0x14d7>
jmp    36a5 <main+0x2345>
cmpl   $0x7,-0xd8(%ebp)
jbe    34de <main+0x217e>
jmp    34dc <main+0x217c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x0,0x10(%eax)
jbe    2d22 <main+0x19c2>
lea    0x0(%esi),%esi
jmp    30b6 <main+0x1d56>
jl     258a <main+0x122a>
mov    -0x80(%ebp),%ecx
cmp    0x5c(%eax),%ecx
jae    25e0 <main+0x1280>
jmp    258a <main+0x122a>
mov    -0xc4(%ebp),%ecx
xor    %edx,%edx
mov    %esi,-0xa0(%ebp)
mov    %edi,-0x9c(%ebp)
mov    0x18(%ecx),%eax
mov    (%ecx),%ecx
mov    %ecx,-0x94(%ebp)
mov    -0x90(%ebp),%ecx
mov    %eax,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    -0x7c(%ebp),%edi
mov    -0x80(%ebp),%esi
mov    %edi,%ecx
imul   %eax,%ecx
mul    %esi
add    %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    -0x94(%ebp),%edx
mov    %edx,(%esp)
call   1070 <ntfs_pwrite@plt>
mov    -0xc4(%ebp),%ecx
mov    -0xa0(%ebp),%esi
mov    %edx,%edi
mov    0x18(%ecx),%edx
xor    %ecx,%ecx
xor    %edx,%eax
or     %eax,%edi
mov    -0x9c(%ebp),%edi
je     25c2 <main+0x1262>
lea    -0x35f8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1f2,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x2876(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    262c <main+0x12cc>
lea    0x0(%esi,%eiz,1),%esi
jl     3686 <main+0x2326>
cmp    $0x0,%eax
lea    0x0(%esi),%esi
ja     2ae7 <main+0x1787>
mov    %esi,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0xe8(%ebp),%eax
call   5520 <main+0x41c0>
movl   $0xfffffffd,-0xd0(%ebp)
ff
xor    %edx,%edx
addl   $0x2000,-0xf8(%ebp)
00
adcl   $0x0,-0xf4(%ebp)
addl   $0xffff0000,-0x138(%ebp)
ff
adcl   $0xffffffff,-0x134(%ebp)
test   %dl,%dl
je     36f1 <main+0x2391>
mov    -0xf4(%ebp),%eax
cmp    %eax,-0xfc(%ebp)
jg     2764 <main+0x1404>
jl     36f1 <main+0x2391>
mov    -0xf8(%ebp),%eax
cmp    %eax,-0x100(%ebp)
ja     2764 <main+0x1404>
mov    -0x110(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0x94(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
lea    -0x3588(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x78f,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x2880(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xd0(%ebp),%ecx
test   %ecx,%ecx
je     1b74 <main+0x814>
mov    $0x1,%esi
movl   $0x0,0x4(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   fe0 <ntfs_umount@plt>
jmp    1d78 <main+0xa18>
nop
lea    0x0(%esi,%eiz,1),%esi
jl     3796 <main+0x2436>
cmp    $0x0,%eax
lea    0x0(%esi),%esi
ja     21fa <main+0xe9a>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     3bf8 <main+0x2898>
call   1230 <__errno_location@plt>
mov    $0x5,%edi
mov    %eax,%esi
movl   $0x5,(%eax)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    %edi,(%esi)
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
mov    %edi,(%esi)
mov    $0x1,%esi
mov    -0xa8(%ebp),%esp
jmp    3768 <main+0x2408>
lea    0x0(%esi),%esi
cmp    $0x2000,%ecx
jbe    21cc <main+0xe6c>
jmp    21c5 <main+0xe65>
jg     232e <main+0xfce>
cmp    %eax,-0xb0(%ebp)
lea    0x0(%esi),%esi
ja     232e <main+0xfce>
jmp    23f7 <main+0x1097>
mov    -0x80(%ebp),%ecx
mov    0x1c(%ecx),%eax
mov    0x78(%ecx),%ecx
mov    %esi,0x18(%esp)
movl   $0x1,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ecx,%edi
mov    -0x94(%ebp),%ecx
imul   %eax,%ecx
mull   -0xa8(%ebp)
mov    %edi,(%esp)
add    %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   12b0 <ntfs_attr_mst_pread@plt>
xor    $0x1,%eax
or     %edx,%eax
jne    3af8 <main+0x2798>
mov    0x18(%esi),%eax
mov    -0xc8(%ebp),%edi
sub    $0x4,%eax
cltd
test   %edi,%edi
je     23c1 <main+0x1061>
mov    -0x80(%ebp),%ecx
mov    0x1c(%ecx),%edx
sub    %eax,%edx
add    %esi,%eax
mov    %edx,0x8(%esp)
mov    -0x88(%ebp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   1210 <memset@plt>
mov    -0x80(%ebp),%ecx
mov    0x1c(%ecx),%eax
mov    0x78(%ecx),%ecx
mov    %esi,0x18(%esp)
movl   $0x1,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ecx,%edi
mov    -0x94(%ebp),%ecx
imul   %eax,%ecx
mull   -0xa8(%ebp)
mov    %edi,(%esp)
add    %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   1300 <ntfs_attr_mst_pwrite@plt>
xor    $0x1,%eax
or     %edx,%eax
jne    3a60 <main+0x2700>
mov    -0x80(%ebp),%edi
mov    -0x9c(%ebp),%edx
mov    -0xa0(%ebp),%eax
mov    %esi,-0xec(%ebp)
mov    0x1c(%edi),%ecx
mov    %edx,-0xd8(%ebp)
mov    %eax,-0xd0(%ebp)
mov    %edx,%eax
mov    0xa4(%edi),%edx
movl   $0x0,-0xb4(%ebp)
00
mov    %ecx,-0xb8(%ebp)
mov    %ecx,-0xe8(%ebp)
mov    -0xe8(%ebp),%ecx
mov    %edx,%esi
mov    %edx,-0xc0(%ebp)
imul   %ecx,%eax
mov    %eax,%edi
mov    -0xd0(%ebp),%eax
mul    %ecx
add    %edi,%edx
cmp    0x20(%esi),%edx
mov    -0xec(%ebp),%esi
jg     39c0 <main+0x2660>
jl     3955 <main+0x25f5>
mov    -0xc0(%ebp),%edi
cmp    0x1c(%edi),%eax
ja     39c0 <main+0x2660>
movzwl 0x4(%esi),%eax
subw   $0x1,(%esi,%eax,1)
mov    %esi,0x18(%esp)
mov    %ecx,0x14(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    -0x94(%ebp),%eax
imul   %ecx,%eax
mov    %eax,%edi
mov    %ecx,%eax
mull   -0xa8(%ebp)
add    %edi,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    -0xc0(%ebp),%eax
mov    %eax,(%esp)
call   1300 <ntfs_attr_mst_pwrite@plt>
xor    $0x1,%eax
or     %edx,%eax
jne    3ac0 <main+0x2760>
mov    -0x80(%ebp),%eax
xor    %edx,%edx
mov    %edx,-0xb4(%ebp)
mov    0x1c(%eax),%eax
mov    %eax,-0xb8(%ebp)
mov    -0xb8(%ebp),%eax
mov    -0xb4(%ebp),%edx
add    %eax,-0x90(%ebp)
adc    %edx,-0x8c(%ebp)
mov    -0xd0(%ebp),%eax
mov    -0xd8(%ebp),%edx
jmp    23dd <main+0x107d>
mov    %edi,%ecx
lea    0x7(%edx,%ecx,1),%ecx
and    $0xfffffff8,%ecx
mov    %edx,-0xc0(%ebp)
mov    %ecx,-0xb8(%ebp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   1210 <memset@plt>
mov    -0xb8(%ebp),%ecx
mov    -0xc0(%ebp),%edx
mov    %di,0x6(%esi)
mov    $0x1,%edi
movl   $0x454c4946,(%esi)
mov    %cx,0x14(%esi)
movzwl %cx,%ecx
lea    0x8(%ecx),%eax
mov    %eax,0x18(%esi)
mov    -0x80(%ebp),%eax
mov    %dx,0x4(%esi)
mov    $0x1,%edx
mov    %dx,0x10(%esi)
mov    0x1c(%eax),%eax
mov    %di,0x28(%esi)
mov    %eax,0x1c(%esi)
movl   $0xffffffff,(%esi,%ecx,1)
jmp    388f <main+0x252f>
mov    -0xa8(%ebp),%eax
mov    -0x94(%ebp),%edi
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x35cd(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x38b,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x285c(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
mov    $0x1,%esi
call   1060 <free@plt>
jmp    3768 <main+0x2408>
mov    -0xa8(%ebp),%eax
mov    -0x94(%ebp),%edi
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x35cd(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x39d,0x8(%esp)
jmp    3a96 <main+0x2736>
mov    -0xb8(%ebp),%eax
mov    -0x94(%ebp),%edi
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x35e7(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x350,0x8(%esp)
jmp    3a96 <main+0x2736>
cmpl   $0x0,-0xb0(%ebp)
ja     22fd <main+0xf9d>
movl   $0x0,0x1c(%esp)
movl   $0x0,0x20(%esp)
mov    -0x88(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x3a6,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x35b2(%ebx),%eax
mov    %eax,0x14(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x285c(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
movl   $0x0,-0x90(%ebp)
00
movl   $0x0,-0x8c(%ebp)
00
jmp    2465 <main+0x1105>
lea    -0x3692(%ebx),%eax
mov    $0x1,%si
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x343,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x285c(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3768 <main+0x2408>
call   1230 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    37b3 <main+0x2453>
call   1230 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    37c0 <main+0x2460>
xor    %eax,%eax
xor    %edx,%edx
jmp    2281 <main+0xf21>
mov    -0x94(%ebp),%ecx
mov    $0x1000,%edx
movzbl -0x88(%ebp),%eax
mov    %ecx,%edi
imul   $0x1010101,%eax,%eax
test   $0x1,%cl
je     3c46 <main+0x28e6>
mov    %al,(%ecx)
lea    0x25(%esp),%edi
mov    $0xfff,%dx
test   $0x2,%edi
je     3c57 <main+0x28f7>
mov    %ax,(%edi)
sub    $0x2,%edx
add    $0x2,%edi
mov    %edx,%ecx
shr    $0x2,%ecx
and    $0x3,%edx
rep stos %eax,%es:(%edi)
je     3c76 <main+0x2916>
xor    %eax,%eax
movzbl -0x88(%ebp),%ecx
mov    %cl,(%edi,%eax,1)
add    $0x1,%eax
cmp    %edx,%eax
jb     3c65 <main+0x2905>
cmpl   $0x0,-0x8c(%ebp)
jl     3d0f <main+0x29af>
jle    3d02 <main+0x29a2>
mov    -0x90(%ebp),%eax
xor    %esi,%esi
xor    %edi,%edi
mov    -0x8c(%ebp),%edx
jmp    3cec <main+0x298c>
nop
mov    $0x1000,%ecx
xor    %eax,%eax
mov    -0x94(%ebp),%edx
mov    %ecx,0xc(%esp)
mov    %eax,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %edi,0x8(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   1000 <ntfs_attr_pwrite@plt>
cmp    $0x0,%edx
jle    3d81 <main+0x2a21>
add    %eax,%esi
mov    -0x90(%ebp),%eax
adc    %edx,%edi
mov    -0x8c(%ebp),%edx
sub    %esi,%eax
sbb    %edi,%edx
cmp    $0x0,%edx
jl     3d13 <main+0x29b3>
jle    3de8 <main+0x2a88>
cmp    $0x0,%edx
mov    %eax,%ecx
mov    %edx,%eax
jl     3c9f <main+0x293f>
jg     3c98 <main+0x2938>
cmp    $0x1000,%ecx
jbe    3c9f <main+0x293f>
nop
jmp    3c98 <main+0x2938>
cmpl   $0x0,-0x90(%ebp)
ja     3c85 <main+0x2925>
xor    %esi,%esi
xor    %edi,%edi
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
mov    %esi,0x1c(%esp)
mov    %edi,0x20(%esp)
mov    -0x88(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x580,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2ad4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x286a(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,%eax
mov    %edi,%edx
jmp    252a <main+0x11ca>
jl     3d8c <main+0x2a2c>
cmp    $0x0,%eax
ja     3ccd <main+0x296d>
and    %edx,%eax
cmp    $0xffffffff,%eax
je     3dd2 <main+0x2a72>
call   1230 <__errno_location@plt>
mov    $0x5,%edi
mov    %eax,%esi
movl   $0x5,(%eax)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    %edi,(%esi)
mov    -0xa0(%ebp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
mov    %edi,(%esi)
mov    $0x1,%esi
mov    -0xa8(%ebp),%esp
jmp    3768 <main+0x2408>
call   1230 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    3da5 <main+0x2a45>
call   1230 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    3db2 <main+0x2a52>
cmp    $0x0,%eax
jbe    3d13 <main+0x29b3>
jmp    3cec <main+0x298c>
cmpl   $0x2,0x2dc(%ebx)
jle    3f49 <main+0x2be9>
lea    -0x2d94(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x474,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1c6e <main+0x90e>
mov    0x108(%ebx),%eax
movl   $0x4,0xc(%esp)
movl   $0xb0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,-0xd8(%ebp)
je     416e <main+0x2e0e>
mov    0x108(%ebx),%eax
movl   $0x4,0xc(%esp)
movl   $0x90,0x4(%esp)
mov    %eax,0x8(%esp)
mov    -0xb0(%ebp),%eax
mov    %eax,(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,-0x100(%ebp)
je     40f6 <main+0x2d96>
mov    -0x100(%ebp),%eax
testb  $0x2,0x18(%eax)
je     3f7f <main+0x2c1f>
lea    -0x36db(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x49b,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%esi
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2c34(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x49d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x100(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    -0xd8(%ebp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
jmp    1e51 <main+0xaf1>
lea    -0x372b(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x476,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1c6e <main+0x90e>
lea    -0x70(%ebp),%eax
mov    %eax,0x14(%esp)
movl   $0x4,0xc(%esp)
movl   $0x0,0x10(%esp)
movl   $0x8,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    -0x100(%ebp),%eax
mov    %eax,(%esp)
call   11f0 <ntfs_attr_pread@plt>
xor    $0x4,%eax
or     %edx,%eax
jne    49bd <main+0x365d>
mov    -0x70(%ebp),%eax
test   %eax,%eax
mov    %eax,-0x94(%ebp)
je     4911 <main+0x35b1>
mov    -0xd8(%ebp),%eax
mov    0x28(%eax),%edx
mov    0x24(%eax),%esi
mov    %edx,-0xa8(%ebp)
mov    %esi,(%esp)
call   1130 <malloc@plt>
mov    -0xa8(%ebp),%edx
test   %eax,%eax
mov    %eax,-0xb8(%ebp)
je     4896 <main+0x3536>
mov    -0xb8(%ebp),%eax
mov    %esi,0xc(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x8(%esp)
mov    -0xd8(%ebp),%esi
mov    %esi,(%esp)
call   11f0 <ntfs_attr_pread@plt>
xor    0x28(%esi),%edx
xor    0x24(%esi),%eax
or     %eax,%edx
je     41ff <main+0x2e9f>
lea    -0x38a5(%ebx),%eax
lea    -0x2803(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x3d2,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x3666(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x3d3,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xb8(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x385a(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x4ab,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3f28 <main+0x2bc8>
lea    -0x36f6(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x493,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%esi
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2c9c(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x496,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3f36 <main+0x2bd6>
lea    -0x370d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x48a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%esi
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2d00(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x48d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    1e51 <main+0xaf1>
mov    0x2ac(%ebx),%esi
test   %esi,%esi
jne    1a72 <main+0x712>
mov    0x2e4(%ebx),%eax
jmp    1a6c <main+0x70c>
mov    -0x94(%ebp),%eax
mov    %eax,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     4825 <main+0x34c5>
mov    -0x94(%ebp),%eax
xor    %ecx,%ecx
movb   $0x0,-0xec(%ebp)
movl   $0x0,-0x110(%ebp)
00
movl   $0x0,-0x10c(%ebp)
00
movl   $0x0,-0xc0(%ebp)
00
movl   $0x0,-0xbc(%ebp)
00
movl   $0x0,-0xd0(%ebp)
00
movl   $0x0,-0xcc(%ebp)
00
mov    %eax,-0xa8(%ebp)
movl   $0x0,-0xa4(%ebp)
00
mov    %ecx,-0x108(%ebp)
mov    -0xa0(%ebp),%eax
mov    -0xbc(%ebp),%edx
cmp    0x20(%eax),%edx
jl     4385 <main+0x3025>
jg     429e <main+0x2f3e>
mov    -0xc0(%ebp),%edx
cmp    0x1c(%eax),%edx
jb     4385 <main+0x3025>
cmpl   $0x1,0x2dc(%ebx)
mov    %ecx,%edx
mov    -0x108(%ebp),%ecx
jle    42ea <main+0x2f8a>
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     42ea <main+0x2f8a>
lea    -0x35ea(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2803(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x41d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
mov    -0xb8(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    -0xd0(%ebp),%edx
mov    -0xcc(%ebp),%ecx
mov    %edx,%eax
and    %ecx,%eax
cmp    $0xffffffff,%eax
je     40ac <main+0x2d4c>
mov    -0xcc(%ebp),%edx
mov    -0xd0(%ebp),%eax
mov    %edx,%ecx
or     %eax,%ecx
je     477c <main+0x341c>
mov    %eax,0x18(%esp)
lea    -0x384b(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x4b1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%ecx
mov    %ecx,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xd0(%ebp),%eax
mov    -0xcc(%ebp),%edx
add    %eax,-0xe8(%ebp)
adc    %edx,-0xe4(%ebp)
jmp    3f28 <main+0x2bc8>
movzbl -0xec(%ebp),%ecx
mov    $0x1,%eax
mov    -0x110(%ebp),%edx
shl    %cl,%eax
mov    -0xb8(%ebp),%ecx
test   %al,(%ecx,%edx,1)
jne    44f3 <main+0x3193>
mov    -0xa8(%ebp),%eax
mov    -0xa4(%ebp),%edx
mov    %eax,-0x118(%ebp)
mov    -0x94(%ebp),%eax
mov    %edx,-0x114(%ebp)
mov    %eax,0x8(%esp)
mov    -0x88(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1210 <memset@plt>
cmpl   $0x1,0x2dc(%ebx)
jle    4419 <main+0x30b9>
lea    -0x3603(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2803(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x409,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xa0(%ebp),%eax
mov    (%eax),%eax
mov    %esi,0x20(%esp)
mov    -0xa8(%ebp),%edx
mov    -0xa4(%ebp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    -0xbc(%ebp),%ecx
mov    -0xc0(%ebp),%edx
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   1240 <ntfs_rl_pwrite@plt>
mov    %eax,-0x108(%ebp)
mov    -0xa4(%ebp),%eax
mov    %edx,%ecx
xor    %edx,%eax
mov    %eax,%edx
mov    -0xa8(%ebp),%eax
xor    -0x108(%ebp),%eax
or     %edx,%eax
jne    47b2 <main+0x3452>
mov    -0x118(%ebp),%eax
add    %eax,-0xd0(%ebp)
mov    -0x114(%ebp),%edx
mov    -0xa8(%ebp),%eax
adc    %edx,-0xcc(%ebp)
add    %eax,-0xc0(%ebp)
mov    -0xa4(%ebp),%edx
adc    %edx,-0xbc(%ebp)
addb   $0x1,-0xec(%ebp)
cmpb   $0x7,-0xec(%ebp)
jbe    4278 <main+0x2f18>
addl   $0x1,-0x110(%ebp)
adcl   $0x0,-0x10c(%ebp)
movb   $0x0,-0xec(%ebp)
jmp    4278 <main+0x2f18>
mov    -0xa0(%ebp),%eax
mov    (%eax),%eax
mov    %esi,0x18(%esp)
mov    -0xa8(%ebp),%edx
mov    -0xa4(%ebp),%ecx
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    -0xc0(%ebp),%edx
mov    -0xbc(%ebp),%ecx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    -0xc4(%ebp),%eax
mov    %eax,(%esp)
call   1290 <ntfs_rl_pread@plt>
xor    -0x94(%ebp),%eax
or     %eax,%edx
jne    470c <main+0x33ac>
mov    -0x94(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1010 <ntfs_mst_post_read_fixup@plt>
test   %eax,%eax
je     4591 <main+0x3231>
lea    -0x2bd8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2803(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x3f2,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x20(%esi),%eax
add    $0x18,%eax
cmp    %eax,-0x94(%ebp)
jne    4687 <main+0x3327>
mov    0x1c(%esi),%eax
xor    %edx,%edx
mov    %esi,-0x108(%ebp)
mov    -0xa8(%ebp),%esi
mov    %edi,-0x128(%ebp)
mov    -0xa4(%ebp),%edi
lea    0x18(%eax),%ecx
sub    %ecx,%esi
sbb    %edx,%edi
mov    %esi,-0x118(%ebp)
mov    %edi,-0x114(%ebp)
mov    %esi,0x8(%esp)
mov    -0x88(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x108(%ebp),%esi
add    %esi,%ecx
mov    %ecx,(%esp)
call   1210 <memset@plt>
mov    -0x94(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1340 <ntfs_mst_pre_write_fixup@plt>
mov    -0x128(%ebp),%edi
test   %eax,%eax
je     4641 <main+0x32e1>
lea    -0x2b90(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2803(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x402,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
cmpl   $0x1,0x2dc(%ebx)
jle    4419 <main+0x30b9>
lea    -0x3605(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x2803(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x404,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    4419 <main+0x30b9>
lea    -0x2803(%ebx),%edx
lea    -0x38a5(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x3f6,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,-0xa8(%ebp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x94(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x3f8,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2bb0(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    -0xa8(%ebp),%edx
mov    %edx,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
jmp    409e <main+0x2d3e>
lea    -0x2803(%ebx),%edx
lea    -0x3635(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x3e9,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,-0x94(%ebp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x361f(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x3ea,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x94(%ebp),%edx
mov    %edx,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    46ff <main+0x339f>
lea    -0x3839(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x4b4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3f28 <main+0x2bc8>
lea    -0x2803(%ebx),%edx
lea    -0x3601(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x40e,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,-0x94(%ebp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x2b64(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x40f,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x94(%ebp),%edx
mov    %edx,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    46ff <main+0x339f>
lea    -0x3692(%ebx),%eax
lea    -0x2803(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x3da,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x94(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x3dc,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x3650(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    409e <main+0x2d3e>
lea    -0x3692(%ebx),%eax
lea    -0x2803(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x3ca,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0xd8(%ebp),%eax
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x3683(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x3cc,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    40ac <main+0x2d4c>
lea    -0x38a5(%ebx),%eax
lea    -0x27ed(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x439,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x36aa(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x43a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x90(%ebp),%eax
mov    -0x8c(%ebp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x385a(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x4a3,0x8(%esp)
mov    %edi,0x4(%esp)
mov    -0x80(%ebp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3f28 <main+0x2bc8>
lea    -0x2c00(%ebx),%eax
lea    -0x27ed(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x432,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x36c1(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x433,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    4973 <main+0x3613>
lea    -0x2af8(%ebx),%eax
mov    %edi,0x1c(%esp)
movl   $0x36c,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x36c,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x285c(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3aae <main+0x274e>
movl   $0xffffffff,-0xd0(%ebp)
ff
jmp    36a3 <main+0x2343>
call   5520 <main+0x41c0>
movl   $0xfffffffe,-0xd0(%ebp)
ff
jmp    36a3 <main+0x2343>
mov    -0xe8(%ebp),%eax
call   5520 <main+0x41c0>
movl   $0xffffffff,-0xd0(%ebp)
ff
jmp    36a3 <main+0x2343>
jl     326f <main+0x1f0f>
cmpl   $0x0,0x10(%eax)
ja     30f6 <main+0x1d96>
lea    0x0(%esi,%eiz,1),%esi
jmp    326f <main+0x1f0f>
mov    -0xe8(%ebp),%eax
call   5520 <main+0x41c0>
movl   $0xfffffffc,-0xd0(%ebp)
ff
jmp    36a3 <main+0x2343>
cmpl   $0x5,-0xf8(%ebp)
ja     1bf8 <main+0x898>
movl   $0x0,0x1c(%esp)
lea    -0x27d8(%ebx),%edi
movl   $0x0,0x20(%esp)
mov    -0x88(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x4c0,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2b40(%ebx),%eax
mov    %eax,0x14(%esp)
mov    -0x98(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
movl   $0x0,-0xe8(%ebp)
00
movl   $0x0,-0xe4(%ebp)
00
jmp    1fcd <main+0xc6d>
movl   $0x0,-0xe0(%ebp)
00
movl   $0x0,-0xdc(%ebp)
00
jmp    28f0 <main+0x1590>
mov    0x2d4(%ebx),%eax
test   %eax,%eax
je     4fb0 <main+0x3c50>
lea    -0x38c6(%ebx),%eax
mov    %eax,-0x98(%ebp)
lea    -0x2794(%ebx),%eax
movl   $0x2,-0xc8(%ebp)
00
mov    %eax,-0xf0(%ebp)
jmp    1a50 <main+0x6f0>
mov    0x2e0(%ebx),%ecx
test   %ecx,%ecx
jne    4f30 <main+0x3bd0>
lea    -0x38c6(%ebx),%eax
mov    %eax,-0x98(%ebp)
lea    -0x37d4(%ebx),%edi
lea    -0x27c9(%ebx),%esi
lea    -0x37c1(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7a5,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x300(%ebx),%edx
test   %edx,%edx
je     4c43 <main+0x38e3>
lea    -0x37ab(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7a7,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2fc(%ebx),%eax
test   %eax,%eax
je     4c81 <main+0x3921>
lea    -0x3797(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7a9,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2f4(%ebx),%eax
test   %eax,%eax
je     4cbf <main+0x395f>
lea    -0x378a(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7ab,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2ec(%ebx),%eax
test   %eax,%eax
je     4cfd <main+0x399d>
lea    -0x2e40(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7ad,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2f0(%ebx),%eax
test   %eax,%eax
je     4d3b <main+0x39db>
lea    -0x3777(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7af,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2f8(%ebx),%eax
test   %eax,%eax
je     4d79 <main+0x3a19>
lea    -0x375f(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7b1,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x304(%ebx),%eax
test   %eax,%eax
je     4db7 <main+0x3a57>
lea    -0x3743(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7b3,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x2e20(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7b5,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2e8(%ebx),%eax
test   %eax,%eax
je     4e5e <main+0x3afe>
mov    (%eax),%eax
test   %eax,%eax
js     4e5e <main+0x3afe>
mov    $0x4,%edx
lea    -0x3733(%ebx),%ecx
mov    %edx,-0x88(%ebp)
mov    %ecx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %ecx,-0x80(%ebp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7b8,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x88(%ebp),%edx
mov    0x2e8(%ebx),%eax
mov    -0x80(%ebp),%ecx
mov    (%eax,%edx,1),%eax
add    $0x4,%edx
test   %eax,%eax
jns    4e0a <main+0x3aaa>
lea    -0x3817(%ebx),%eax
mov    %eax,-0x80(%ebp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7ba,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2e4(%ebx),%eax
cmp    $0x1,%eax
jle    4edc <main+0x3b7c>
mov    %eax,0x1c(%esp)
lea    -0x2df8(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7bd,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    -0x80(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7be,0x8(%esp)
mov    %eax,0x14(%esp)
mov    -0x98(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x2d0(%ebx),%edi
test   %edi,%edi
jne    19c6 <main+0x666>
mov    0x2e0(%ebx),%esi
test   %esi,%esi
jne    19c6 <main+0x666>
xor    %eax,%eax
jmp    19cb <main+0x66b>
lea    -0x2e78(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x37d4(%ebx),%edi
lea    -0x38c6(%ebx),%eax
lea    -0x27c9(%ebx),%esi
mov    %edi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7a3,0x8(%esp)
mov    %eax,-0x98(%ebp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    4bcd <main+0x386d>
lea    -0x38c6(%ebx),%eax
mov    %eax,-0x98(%ebp)
lea    -0x2794(%ebx),%eax
movl   $0x1,0x2e4(%ebx)
00
movl   $0x0,-0xc8(%ebp)
00
mov    %eax,-0xf0(%ebp)
jmp    1a50 <main+0x6f0>
lea    -0x37d4(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x2dcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x4,0xc(%esp)
movl   $0x7f2,0x8(%esp)
mov    %eax,-0x98(%ebp)
mov    %eax,0x4(%esp)
lea    -0x2794(%ebx),%eax
mov    %eax,-0xf0(%ebp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
movl   $0x5,(%esp)
call   10a0 <sleep@plt>
movl   $0x2,-0xc8(%ebp)
00
jmp    1a50 <main+0x6f0>
cmpl   $0x0,0x5c(%eax)
ja     2578 <main+0x1218>
xor    %esi,%esi
xor    %edi,%edi
jmp    25e0 <main+0x1280>
cmp    $0x2000,%eax
jbe    2798 <main+0x1438>
jmp    2791 <main+0x1431>
mov    -0xc4(%ebp),%eax
mov    0x18(%eax),%esi
mov    %esi,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,-0x90(%ebp)
je     50c1 <main+0x3d61>
mov    %esi,0x8(%esp)
mov    -0x88(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x90(%ebp),%eax
mov    %eax,(%esp)
call   1210 <memset@plt>
jmp    2562 <main+0x1202>
cmpl   $0x0,-0x100(%ebp)
jbe    287e <main+0x151e>
jmp    2723 <main+0x13c3>
mov    -0x94(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    -0xec(%ebp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
jmp    3763 <main+0x2403>
mov    $0x1,%edx
movl   $0x0,-0xd0(%ebp)
00
jmp    36a5 <main+0x2345>
lea    -0x3692(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1e2,0x8(%esp)
mov    -0x98(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x2876(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    3768 <main+0x2408>
addl   $0x1,0x2d4(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,0x2ec(%ebx)
jmp    13ea <main+0x8a>
cmpl   $0x1,0x2e4(%ebx)
jne    156b <main+0x20b>
mov    0x128(%ebx),%eax
lea    -0x74(%ebp),%edx
movl   $0x0,-0x74(%ebp)
mov    (%eax),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   1330 <strtol@plt>
mov    %eax,0x2e4(%ebx)
mov    -0x74(%ebp),%eax
test   %eax,%eax
je     13ea <main+0x8a>
cmpb   $0x1,(%eax)
sbbl   $0xffffffff,-0x80(%ebp)
jmp    13ea <main+0x8a>
mov    0x2e8(%ebx),%eax
test   %eax,%eax
jne    156b <main+0x20b>
mov    0x128(%ebx),%eax
mov    (%eax),%edi
test   %edi,%edi
je     156b <main+0x20b>
mov    %edi,%eax
xor    %esi,%esi
add    $0x1,%eax
lea    0x1(%esi),%ecx
mov    %ecx,-0xa8(%ebp)
movl   $0x2c,0x4(%esp)
mov    %eax,(%esp)
call   11b0 <strchr@plt>
test   %eax,%eax
je     5212 <main+0x3eb2>
mov    -0xa8(%ebp),%esi
jmp    518f <main+0x3e2f>
addl   $0x1,0x2f0(%ebx)
jmp    13ea <main+0x8a>
addl   $0x1,0x2f4(%ebx)
jmp    13ea <main+0x8a>
lea    -0x32a0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27a2(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1b5,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
addl   $0x1,-0x80(%ebp)
jmp    1837 <main+0x4d7>
lea    0x8(,%esi,4),%edx
mov    %edx,(%esp)
mov    %edx,-0xa0(%ebp)
call   1130 <malloc@plt>
mov    -0xa0(%ebp),%edx
test   %eax,%eax
mov    %eax,%esi
je     52de <main+0x3f7e>
mov    %edx,0x8(%esp)
movl   $0xff,0x4(%esp)
mov    %eax,(%esp)
call   1210 <memset@plt>
lea    -0x70(%ebp),%eax
mov    %edi,%ecx
movl   $0x0,-0xa0(%ebp)
00
mov    %eax,-0xb8(%ebp)
movl   $0x0,-0x70(%ebp)
movl   $0x0,0x8(%esp)
mov    -0xb8(%ebp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,-0xc4(%ebp)
call   1330 <strtol@plt>
mov    -0x70(%ebp),%edx
mov    -0xa0(%ebp),%ecx
test   %edx,%edx
mov    %eax,(%esi,%ecx,4)
je     536d <main+0x400d>
mov    -0xc4(%ebp),%ecx
cmp    %edx,%ecx
je     536d <main+0x400d>
movzbl (%edx),%ecx
test   %cl,%cl
jne    5364 <main+0x4004>
cmp    $0xff,%eax
ja     531d <main+0x3fbd>
addl   $0x1,-0xa0(%ebp)
mov    -0xa8(%ebp),%eax
lea    0x1(%edx),%ecx
cmp    %eax,-0xa0(%ebp)
jne    5260 <main+0x3f00>
mov    %esi,0x2e8(%ebx)
jmp    13ea <main+0x8a>
lea    -0x33a4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27ad(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xdb,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    156b <main+0x20b>
lea    -0x3378(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27ad(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xed,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
jmp    156b <main+0x20b>
cmp    $0x2c,%cl
je     52b4 <main+0x3f54>
lea    -0x3828(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x27ad(%ebx),%eax
mov    %edi,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xe7,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
jmp    156b <main+0x20b>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   53ea <main+0x408a>
add    $0x6b0c,%ebx
lea    -0x38f4(%ebx),%eax
push   %eax
lea    -0x3964(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x118(%ebx)
call   11d0 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   53f0 <main+0x4090>
add    $0x6acb,%ebx
sub    $0x14,%esp
lea    0x287(%ebx),%eax
lea    0x284(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     542b <main+0x40cb>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0xf8(%ebx),%eax
test   %eax,%eax
je     5425 <main+0x40c5>
mov    %edx,(%esp)
call   *%eax
jmp    5425 <main+0x40c5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   53f0 <main+0x4090>
add    $0x6a8b,%ebx
sub    $0x14,%esp
lea    0x284(%ebx),%eax
lea    0x284(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    5474 <main+0x4114>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x124(%ebx),%ecx
test   %ecx,%ecx
je     546e <main+0x410e>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    546e <main+0x410e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   53f0 <main+0x4090>
add    $0x6a3b,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x28c(%ebx)
jne    54cf <main+0x416f>
mov    0x110(%ebx),%eax
test   %eax,%eax
je     54c3 <main+0x4163>
mov    0x130(%ebx),%eax
mov    %eax,(%esp)
call   10e0 <__cxa_finalize@plt>
call   5400 <main+0x40a0>
movb   $0x1,0x28c(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   53f0 <main+0x4090>
add    $0x69eb,%ebx
sub    $0x14,%esp
mov    -0x104(%ebx),%eax
test   %eax,%eax
je     5511 <main+0x41b1>
mov    0x11c(%ebx),%eax
test   %eax,%eax
je     5511 <main+0x41b1>
lea    -0x104(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    5440 <main+0x40e0>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   53f0 <main+0x4090>
add    $0x69a8,%ebx
test   %eax,%eax
mov    %eax,0xc(%esp)
je     55e7 <main+0x4287>
mov    0xc(%eax),%ebp
add    $0xc,%eax
mov    %eax,0x8(%esp)
cmp    %eax,%ebp
mov    0x0(%ebp),%esi
jne    555c <main+0x41fc>
jmp    558d <main+0x422d>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebp
mov    %edx,%esi
mov    0x3c(%ebp),%edx
lea    -0x4(%ebp),%edi
test   %edx,%edx
je     556e <main+0x420e>
mov    %edx,(%esp)
call   1060 <free@plt>
mov    -0x4(%ebp),%eax
test   %eax,%eax
je     557d <main+0x421d>
mov    %eax,(%esp)
call   1060 <free@plt>
mov    %edi,(%esp)
call   1060 <free@plt>
mov    (%esi),%edx
cmp    %esi,0x8(%esp)
jne    5558 <main+0x41f8>
mov    0xc(%esp),%eax
mov    0x14(%eax),%ebp
lea    0x14(%eax),%edi
cmp    %edi,%ebp
mov    0x0(%ebp),%esi
jne    55a4 <main+0x4244>
jmp    55d0 <main+0x4270>
mov    %esi,%ebp
mov    %eax,%esi
mov    0x8(%ebp),%eax
test   %eax,%eax
je     55b3 <main+0x4253>
mov    %eax,(%esp)
call   1060 <free@plt>
mov    0x40(%ebp),%eax
test   %eax,%eax
je     55c2 <main+0x4262>
mov    %eax,(%esp)
call   1060 <free@plt>
mov    %ebp,(%esp)
call   1060 <free@plt>
cmp    %esi,%edi
mov    (%esi),%eax
jne    55a0 <main+0x4240>
mov    0xc(%esp),%edi
mov    0x34(%edi),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    %edi,(%esp)
call   1060 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0xec,%esp
call   53f0 <main+0x4090>
add    $0x68d3,%ebx
test   %eax,%eax
mov    %eax,0xbc(%esp)
mov    %edx,0xb8(%esp)
je     64b6 <main+0x5156>
mov    %edx,%eax
shr    $0x1f,%eax
test   %al,%al
jne    64b6 <main+0x5156>
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%esi
sar    $0x1f,%esi
test   $0x20,%cl
cmovne %edx,%eax
cmovne %esi,%edx
cmp    $0x0,%edx
mov    %eax,0xb0(%esp)
mov    %edx,0xb4(%esp)
jl     61e8 <main+0x4e88>
jle    61da <main+0x4e7a>
lea    -0x38d4(%ebx),%eax
mov    %eax,0xc0(%esp)
lea    -0x38c6(%ebx),%eax
mov    %eax,0x98(%esp)
lea    -0x280e(%ebx),%eax
mov    %eax,0xac(%esp)
lea    -0x385a(%ebx),%eax
movl   $0x10,0x90(%esp)
00
movl   $0x0,0x94(%esp)
00
movl   $0x0,0xc8(%esp)
00
movl   $0x0,0xcc(%esp)
00
mov    %eax,0xc4(%esp)
jmp    5753 <main+0x43f3>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x350c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x300,0x8(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
addl   $0x1,0x90(%esp)
adcl   $0x0,0x94(%esp)
mov    0x94(%esp),%edx
mov    0xb0(%esp),%edi
mov    0xb4(%esp),%ebp
mov    0x90(%esp),%eax
xor    %ebp,%edx
xor    %edi,%eax
or     %eax,%edx
je     6218 <main+0x4eb8>
mov    0xc0(%esp),%eax
mov    0x90(%esp),%edi
mov    0x94(%esp),%ebp
movl   $0x0,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
mov    %edi,0x18(%esp)
mov    %ebp,0x1c(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
movl   $0x2f8,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0xbc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   12e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8c(%esp)
je     6284 <main+0x4f24>
mov    0x8c(%esp),%eax
mov    0x8(%eax),%eax
mov    0x24(%eax),%edx
or     0x20(%eax),%edx
jne    56d0 <main+0x4370>
mov    0x8c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   12d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x88(%esp)
je     643f <main+0x50df>
movl   $0x0,0xa0(%esp)
00
movl   $0x0,0xa4(%esp)
00
xchg   %ax,%ax
mov    0x88(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x20(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80,(%esp)
call   12c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
mov    0x88(%esp),%eax
jne    6018 <main+0x4cb8>
mov    0x4(%eax),%edx
mov    0x10(%eax),%eax
test   %eax,%eax
je     5890 <main+0x4530>
mov    0xc(%eax),%ecx
or     0x8(%eax),%ecx
jne    5820 <main+0x44c0>
mov    0x8c(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,0x44(%esp)
movzbl 0x9(%edx),%eax
mov    %eax,0xc(%esp)
movzwl 0xa(%edx),%eax
movl   $0x80,0x4(%esp)
mov    %edi,(%esp)
add    %eax,%edx
mov    %edx,0x8(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,0x58(%esp)
je     648f <main+0x512f>
mov    0x58(%esp),%eax
testb  $0x2,0x18(%eax)
je     619a <main+0x4e3a>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1270 <ntfs_attr_map_whole_runlist@plt>
test   %eax,%eax
jne    62c5 <main+0x4f65>
mov    0x58(%esp),%eax
movzwl 0xc(%eax),%eax
test   %al,%al
je     5dc0 <main+0x4a60>
mov    0x58(%esp),%esi
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movzbl 0x41(%esi),%eax
mov    (%esi),%edi
xor    %esi,%esi
sub    $0x1,%eax
mov    %eax,%ecx
mov    %eax,%edx
sar    $0x1f,%ecx
mov    %eax,0x38(%esp)
mov    %edi,%eax
mov    %eax,0x5c(%esp)
mov    %edx,%eax
mov    %ecx,%edx
mov    %ecx,0x3c(%esp)
mov    %eax,%ecx
mov    %edx,%eax
lea    0x18(%edi),%ebp
not    %ecx
mov    %edi,0x74(%esp)
not    %eax
neg    %edi
mov    %edi,0x54(%esp)
xor    %edi,%edi
mov    %ebp,0x78(%esp)
mov    %ecx,0x9c(%esp)
mov    %eax,0xa8(%esp)
jmp    5988 <main+0x4628>
lea    0x0(%esi,%eiz,1),%esi
and    -0xc(%ebp),%edx
cmp    $0xffffffff,%edx
je     5a50 <main+0x46f0>
lea    0x0(%esi,%eiz,1),%esi
subl   $0x18,0x54(%esp)
add    $0x18,%ebp
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
lea    -0x18(%ebp),%eax
mov    -0x4(%ebp),%edx
mov    %eax,0x50(%esp)
mov    -0x8(%ebp),%eax
mov    %edx,%ecx
or     %eax,%ecx
je     5e4d <main+0x4aed>
add    %esi,%eax
adc    %edi,%edx
mov    %edx,%ecx
mov    %eax,%edx
mov    %eax,0x30(%esp)
mov    0x38(%esp),%eax
mov    %ecx,0x34(%esp)
and    %edx,%eax
mov    0x3c(%esp),%edx
and    %ecx,%edx
or     %eax,%edx
jne    5978 <main+0x4618>
mov    0x78(%esp),%ecx
mov    %ebp,%eax
sub    0x74(%esp),%eax
mov    -0x4(%eax,%ecx,1),%edx
or     -0x8(%eax,%ecx,1),%edx
mov    -0x10(%ebp),%edx
jne    5968 <main+0x4608>
and    -0xc(%ebp),%edx
cmp    $0xffffffff,%edx
je     5a50 <main+0x46f0>
mov    0x58(%esp),%eax
mov    0x34(%esp),%edx
mov    0x1c(%eax),%esi
mov    0x20(%eax),%edi
sub    0x24(%eax),%esi
sbb    0x28(%eax),%edi
mov    0x44(%esp),%eax
movzbl 0x24(%eax),%ecx
mov    0x30(%esp),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     5a0c <main+0x46ac>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x48(%esp)
sub    %esi,0x48(%esp)
mov    %edx,0x4c(%esp)
sbb    %edi,0x4c(%esp)
test   %edi,%edi
js     5f79 <main+0x4c19>
mov    %esi,%eax
or     %edi,%eax
jne    5bd8 <main+0x4878>
add    %esi,0x68(%esp)
adc    %edi,0x6c(%esp)
mov    -0x10(%ebp),%eax
and    -0xc(%ebp),%eax
cmp    $0xffffffff,%eax
mov    0x5c(%esp),%eax
cmove  %ebp,%eax
mov    %eax,0x5c(%esp)
jmp    5978 <main+0x4618>
nop
mov    0x9c(%esp),%ecx
and    %esi,%ecx
mov    %ecx,0x80(%esp)
mov    0xa8(%esp),%ecx
xor    0x80(%esp),%esi
and    %edi,%ecx
mov    %ecx,%edx
xor    %edi,%edx
or     %esi,%edx
mov    %ecx,0x84(%esp)
je     5ea0 <main+0x4b40>
mov    0x44(%esp),%edi
xor    %edx,%edx
mov    0x80(%esp),%esi
movzbl 0x24(%edi),%ecx
mov    0x84(%esp),%edi
mov    %cl,0x48(%esp)
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
mov    0x74(%esp),%ecx
cmovne %esi,%edi
cmovne %edx,%esi
mov    -0x28(%ecx,%eax,1),%edx
and    -0x24(%ecx,%eax,1),%edx
cmp    $0xffffffff,%edx
jne    618d <main+0x4e2d>
mov    %edi,0x64(%esp)
mov    0x50(%esp),%edx
lea    -0x48(%ebp),%ecx
mov    0x54(%esp),%edi
mov    %esi,0x60(%esp)
lea    0x0(%esi),%esi
sub    $0x18,%edx
lea    (%edx,%edi,1),%esi
mov    0x20(%esi,%ecx,1),%eax
and    0x24(%esi,%ecx,1),%eax
cmp    $0xffffffff,%eax
je     5ad8 <main+0x4778>
mov    0x60(%esp),%esi
mov    0x64(%esp),%edi
mov    %edx,0x70(%esp)
mov    %ebp,0x7c(%esp)
movzbl 0x48(%esp),%ecx
lea    0xde(%esp),%eax
mov    0x5c(%esp),%ebp
mov    %eax,0x60(%esp)
nop
mov    0x60(%esp),%eax
movl   $0x2,0x10(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x18(%esp)
mov    0x0(%ebp),%eax
mov    0x4(%ebp),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     5b3c <main+0x47dc>
mov    %eax,%edx
xor    %eax,%eax
mov    %eax,0x48(%esp)
mov    %esi,%eax
sub    0x48(%esp),%eax
mov    %edx,0x4c(%esp)
mov    %edi,%edx
sbb    0x4c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   1290 <ntfs_rl_pread@plt>
movzwl 0xde(%esp),%ecx
xor    $0x2,%eax
or     %edx,%eax
jne    5eb0 <main+0x4b50>
test   %cx,%cx
je     5f38 <main+0x4bd8>
and    $0xfff,%ecx
xor    %edx,%edx
lea    0x3(%ecx),%eax
add    %eax,%esi
mov    0x44(%esp),%eax
adc    %edx,%edi
movzbl 0x24(%eax),%ecx
mov    0x70(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     5bb2 <main+0x4852>
mov    %eax,%edx
xor    %eax,%eax
add    $0xfffffffe,%eax
adc    $0xffffffff,%edx
cmp    %edx,%edi
jg     5bca <main+0x486a>
jl     5b10 <main+0x47b0>
cmp    %eax,%esi
jb     5b10 <main+0x47b0>
mov    0x7c(%esp),%ebp
xchg   %ax,%ax
jmp    5a36 <main+0x46d6>
lea    0x0(%esi),%esi
mov    0x100(%esp),%eax
test   %eax,%eax
je     5a2e <main+0x46ce>
mov    %esi,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,0x60(%esp)
je     63c5 <main+0x5065>
mov    0xb8(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   1210 <memset@plt>
mov    0x60(%esp),%eax
mov    0x4c(%esp),%edx
mov    0x44(%esp),%ecx
mov    %esi,0x18(%esp)
mov    %eax,0x20(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x5c(%esp),%edx
mov    %edi,0x1c(%esp)
mov    %eax,0x10(%esp)
movzbl 0x24(%ecx),%ecx
mov    (%edx),%eax
mov    0x4(%edx),%edx
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     5c55 <main+0x48f5>
mov    %eax,%edx
xor    %eax,%eax
mov    0x44(%esp),%ecx
mov    %edx,0xc(%esp)
mov    0x5c(%esp),%edx
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
mov    %edx,0x4(%esp)
call   1240 <ntfs_rl_pwrite@plt>
mov    %eax,0x7c(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x70(%esp)
mov    %eax,(%esp)
call   1060 <free@plt>
mov    0x70(%esp),%edx
mov    0x7c(%esp),%eax
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     5a2e <main+0x46ce>
mov    %edi,0x34(%esp)
mov    0x98(%esp),%edi
lea    -0x38a5(%ebx),%eax
mov    %esi,0x30(%esp)
lea    -0x2837(%ebx),%esi
xor    %ebp,%ebp
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x267,0x8(%esp)
mov    %edi,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x50(%esp),%ecx
mov    (%ecx),%eax
mov    0x4(%ecx),%edx
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x10(%esp)
mov    %eax,0x28(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x34(%esp),%edx
movl   $0x80,0xc(%esp)
movl   $0x26b,0x8(%esp)
mov    %eax,0x20(%esp)
mov    0x48(%esp),%eax
mov    %edx,0x24(%esp)
mov    0x4c(%esp),%edx
mov    %edi,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x33fc(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
call   fd0 <ntfs_log_redirect@plt>
or     %esi,%ebp
movl   $0xffffffff,0x68(%esp)
movl   $0xffffffff,0x6c(%esp)
jne    5e65 <main+0x4b05>
nop
mov    0x8c(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0xc4(%esp),%eax
movl   $0x2cf,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x281d(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
jmp    5820 <main+0x44c0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%edi
mov    0x24(%edi),%esi
mov    0x28(%edi),%edi
mov    %edi,%ecx
or     %esi,%ecx
je     6098 <main+0x4d38>
test   $0x40,%ah
je     5df3 <main+0x4a93>
add    $0xffffffff,%esi
adc    $0xffffffff,%edi
shrd   $0xa,%edi,%esi
shr    $0xa,%edi
add    $0x1,%esi
adc    $0x0,%edi
shld   $0xa,%esi,%edi
shl    $0xa,%esi
mov    0x44(%esp),%eax
xor    %edx,%edx
mov    %edx,0x34(%esp)
mov    0x18(%eax),%eax
mov    %eax,0x30(%esp)
sub    %esi,%eax
sbb    %edi,%edx
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x3c(%esp)
mov    0x34(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x3c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8410 <main+0x70b0>
mov    %eax,%ebp
mov    %eax,0x68(%esp)
mov    0x100(%esp),%eax
mov    %edx,0x6c(%esp)
test   %eax,%eax
jne    60c8 <main+0x4d68>
mov    0x68(%esp),%eax
mov    0x6c(%esp),%edx
mov    %eax,%esi
mov    %edx,%ebp
not    %esi
not    %ebp
or     %esi,%ebp
je     5d58 <main+0x49f8>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1160 <ntfs_attr_close@plt>
cmpl   $0x0,0x6c(%esp)
jl     5820 <main+0x44c0>
jle    60b8 <main+0x4d58>
mov    0x68(%esp),%eax
mov    0x6c(%esp),%edx
add    %eax,0xa0(%esp)
adc    %edx,0xa4(%esp)
jmp    5820 <main+0x44c0>
lea    0x0(%esi),%esi
mov    %ebp,0x5c(%esp)
jmp    5978 <main+0x4618>
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%edi
lea    -0x2837(%ebx),%esi
xor    %ebp,%ebp
lea    -0x38a5(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x233,0x8(%esp)
mov    %edi,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x3895(%ebx),%eax
mov    %esi,(%esp)
xor    %esi,%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x234,0x8(%esp)
mov    %edi,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
movl   $0xffffffff,0x68(%esp)
movl   $0xffffffff,0x6c(%esp)
jmp    5e5d <main+0x4afd>
lea    0x0(%esi),%esi
add    $0x2,%esi
mov    0x7c(%esp),%ebp
adc    $0x0,%edi
mov    %esi,%eax
mov    %edi,%edx
mov    %edi,0x4c(%esp)
mov    0x44(%esp),%edi
mov    %esi,0x48(%esp)
movzbl 0x24(%edi),%ecx
mov    0x70(%esp),%edi
mov    (%edi),%esi
mov    0x4(%edi),%edi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     5f6d <main+0x4c0d>
mov    %esi,%edi
xor    %esi,%esi
sub    %eax,%esi
sbb    %edx,%edi
test   %edi,%edi
jns    5a24 <main+0x46c4>
mov    %edi,0x34(%esp)
mov    0x98(%esp),%edi
lea    -0x38a5(%ebx),%eax
mov    %esi,0x30(%esp)
lea    -0x2837(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x249,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3464(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x24c,0x8(%esp)
mov    %esi,(%esp)
xor    %ebp,%ebp
xor    %esi,%esi
mov    %edi,0x4(%esp)
call   fd0 <ntfs_log_redirect@plt>
movl   $0xffffffff,0x68(%esp)
movl   $0xffffffff,0x6c(%esp)
jmp    5e5d <main+0x4afd>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   11c0 <ntfs_attr_put_search_ctx@plt>
mov    0xa4(%esp),%edx
mov    0xa0(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     6166 <main+0x4e06>
mov    %eax,%edi
mov    %edx,%ebp
mov    %eax,0x18(%esp)
lea    -0x384b(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
movl   $0x31a,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    %edi,0xc8(%esp)
adc    %ebp,0xcc(%esp)
jmp    570c <main+0x43ac>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x68(%esp)
mov    $0xffffffff,%ebp
mov    $0xffffffff,%esi
movl   $0x0,0x6c(%esp)
jmp    5e5d <main+0x4afd>
nop
cmpl   $0x0,0x68(%esp)
jbe    5820 <main+0x44c0>
jmp    5e82 <main+0x4b22>
mov    %ebp,(%esp)
call   1130 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     64c5 <main+0x5165>
mov    0xb8(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ecx,(%esp)
mov    %ecx,0x30(%esp)
mov    %eax,0x4(%esp)
call   1210 <memset@plt>
mov    0x58(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x68(%esp),%edx
mov    (%eax),%eax
mov    %ecx,0x20(%esp)
mov    0x6c(%esp),%ecx
mov    %esi,0x10(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %edi,0x14(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
call   1240 <ntfs_rl_pwrite@plt>
mov    0x30(%esp),%ecx
mov    %edx,%ebp
mov    %eax,%esi
not    %ebp
not    %esi
mov    %eax,0x68(%esp)
mov    %ebp,%eax
or     %esi,%eax
mov    %edx,0x6c(%esp)
je     6347 <main+0x4fe7>
mov    %ecx,(%esp)
call   1060 <free@plt>
jmp    5e5d <main+0x4afd>
lea    -0x3839(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x31d,0x8(%esp)
jmp    56f2 <main+0x4392>
mov    0x50(%esp),%eax
mov    %eax,0x70(%esp)
jmp    5af7 <main+0x4797>
lea    -0x34ac(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x2be,0x8(%esp)
mov    0x98(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x281d(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    5da8 <main+0x4a48>
cmpl   $0x10,0xb0(%esp)
ja     5667 <main+0x4307>
lea    -0x38c6(%ebx),%eax
mov    %eax,0x98(%esp)
lea    -0x280e(%ebx),%eax
movl   $0x0,0xc8(%esp)
00
movl   $0x0,0xcc(%esp)
00
mov    %eax,0xac(%esp)
mov    0xb8(%esp),%eax
mov    0xc8(%esp),%edi
mov    0xcc(%esp),%ebp
movl   $0x0,0x10(%esp)
mov    %eax,0x18(%esp)
lea    -0x33c4(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
mov    %edi,0x1c(%esp)
mov    %ebp,0x20(%esp)
movl   $0x4,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
movl   $0x323,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %edi,%eax
mov    %ebp,%edx
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x38bb(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x2fb,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    571b <main+0x43bb>
mov    0x98(%esp),%edi
lea    -0x38a5(%ebx),%eax
lea    -0x281d(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x2c3,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x8c(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
lea    -0x3484(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x2c5,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    5da8 <main+0x4a48>
mov    0x98(%esp),%edi
lea    -0x2846(%ebx),%edx
lea    -0x38a5(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x29f,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x38(%esp)
mov    %edx,0x30(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x30(%esp),%edx
lea    -0x386d(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2a0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x38(%esp),%ecx
jmp    6159 <main+0x4df9>
mov    %edi,0x34(%esp)
mov    0x98(%esp),%edi
lea    -0x3880(%ebx),%eax
mov    %esi,0x30(%esp)
lea    -0x2837(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x25a,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3428(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x25d,0x8(%esp)
jmp    5fee <main+0x4c8e>
lea    -0x34ec(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x98(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x306,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
jmp    6218 <main+0x4eb8>
lea    -0x34cc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b9,0x8(%esp)
jmp    61bc <main+0x4e5c>
mov    $0xffffffff,%eax
mov    $0xffffffff,%edx
jmp    6279 <main+0x4f19>
mov    0x98(%esp),%edi
lea    -0x3880(%ebx),%eax
lea    -0x2846(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x296,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0x68(%esp),%eax
mov    0x6c(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3428(%ebx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
movl   $0x298,0x8(%esp)
jmp    5fee <main+0x4c8e>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
xor    %edx,%edx
push   %ebx
call   53f0 <main+0x4090>
add    $0x5987,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x2ac(%ebx),%ecx
div    %ecx
test   %edx,%edx
jne    6577 <main+0x5217>
xor    %eax,%eax
movl   $0x0,(%esi,%eax,4)
add    $0x1,%eax
cmp    $0x16,%eax
jne    6568 <main+0x5208>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi,%eax,4),%ebp
test   %ebp,%ebp
je     65a7 <main+0x5247>
add    $0x1,%eax
cmp    $0x16,%eax
jne    6580 <main+0x5220>
xor    %al,%al
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esi,%eax,4)
add    $0x1,%eax
cmp    $0x16,%eax
jne    6598 <main+0x5238>
test   %edx,%edx
je     65f8 <main+0x5298>
lea    -0x1(%ecx),%eax
cmp    %eax,%edx
je     65f8 <main+0x5298>
shr    %ecx
mov    $0x2e8ba2e9,%ebp
cmp    %ecx,%edx
je     65f8 <main+0x5298>
lea    0x0(%esi),%esi
call   1320 <random@plt>
mov    %eax,%ecx
imul   %ebp
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
imul   $0x16,%edx,%edx
sub    %edx,%ecx
shl    $0x2,%ecx
lea    (%esi,%ecx,1),%edx
cmpl   $0x1,(%edx)
je     65c0 <main+0x5260>
mov    0x2e8(%ebx),%eax
mov    (%eax,%ecx,1),%eax
movl   $0x1,(%edx)
jmp    6602 <main+0x52a2>
lea    0x0(%esi,%eiz,1),%esi
call   1320 <random@plt>
and    $0xfff,%eax
mov    0x30(%esp),%esi
mov    $0x3,%ebp
mov    %al,(%edi)
mov    %al,0x1(%edi)
mov    %al,0x2(%edi)
shr    %esi
cmp    $0x3,%esi
jbe    6639 <main+0x52d9>
lea    0x0(%esi),%esi
lea    (%edi,%ebp,1),%eax
mov    %ebp,0x8(%esp)
add    %ebp,%ebp
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1080 <memcpy@plt>
cmp    %ebp,%esi
ja     6620 <main+0x52c0>
cmp    %ebp,0x30(%esp)
jbe    6658 <main+0x52f8>
mov    0x30(%esp),%edx
lea    (%edi,%ebp,1),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
sub    %ebp,%edx
mov    %edx,0x8(%esp)
call   1080 <memcpy@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebx
call   53f0 <main+0x4090>
add    $0x586e,%ebx
sub    $0x28,%esp
movl   $0x6,(%esp)
lea    -0x35e8(%ebx),%eax
mov    %eax,0x4(%esp)
call   1280 <setlocale@plt>
xor    %edx,%edx
test   %eax,%eax
je     6698 <main+0x5338>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   1280 <setlocale@plt>
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x8c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x25f0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1916(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   53f0 <main+0x4090>
add    $0x57c4,%ebx
test   %esi,%esi
je     67b7 <main+0x5457>
mov    (%esi),%eax
test   %eax,%eax
je     6798 <main+0x5438>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   12a0 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,%edi
js     6772 <main+0x5412>
cmp    0x48(%esp),%edi
lea    0x2(%eax,%eax,1),%ebp
mov    (%esi),%eax
jge    6780 <main+0x5420>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1080 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1110 <realloc@plt>
test   %eax,%eax
je     67b0 <main+0x5450>
mov    %eax,(%esi)
jmp    6752 <main+0x53f2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   12a0 <ntfs_mbstoucs@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%edi
jmp    6766 <main+0x5406>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    6774 <main+0x5414>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%esi
call   53f0 <main+0x4090>
add    $0x56ee,%ebx
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     6900 <main+0x55a0>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   1310 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     68a0 <main+0x5540>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   10d0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
mov    %eax,%edi
jne    6938 <main+0x55d8>
testb  $0x1,0x2c(%esp)
je     6920 <main+0x55c0>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     69e8 <main+0x5688>
lea    -0x276a(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1929(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   1230 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0x18(%esp)
je     69c0 <main+0x5660>
lea    -0x25c4(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe1,0x8(%esp)
lea    -0x278f(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    -0x1929(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1230 <__errno_location@plt>
xor    %edi,%edi
movl   $0x16,(%eax)
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
lea    -0x25a0(%ebx),%eax
lea    -0x278f(%ebx),%edi
lea    -0x1929(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    0xb4(%esp),%edx
test   %edx,%edx
jne    6a60 <main+0x5700>
lea    -0x2574(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeb,0x8(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    68ee <main+0x558e>
lea    0x0(%esi),%esi
lea    -0x2787(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    68d4 <main+0x5574>
nop
lea    -0x2548(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x278f(%ebx),%ebp
lea    -0x26ed(%ebx),%eax
lea    -0x1929(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x2470(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    68ee <main+0x558e>
nop
lea    -0x276a(%ebx),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xee,0x8(%esp)
mov    %esi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    68ee <main+0x558e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   53f0 <main+0x4090>
add    $0x5424,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     6c48 <main+0x58e8>
mov    %ebp,%edi
and    $0x10000000,%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   67d0 <main+0x5470>
test   %eax,%eax
je     6bc8 <main+0x5868>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   1260 <ntfs_mount@plt>
test   %eax,%eax
je     6b48 <main+0x57e8>
testb  $0x1,0x12(%eax)
mov    %eax,%esi
je     6b38 <main+0x57d8>
test   %edi,%edi
je     6c58 <main+0x58f8>
lea    -0x1d94(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x193c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x138,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x2755(%ebx),%eax
lea    -0x278f(%ebx),%ebp
lea    -0x193c(%ebx),%edi
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x11d,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
call   1230 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
jne    6bd8 <main+0x5878>
lea    -0x2404(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5,%eax
je     6cb3 <main+0x5953>
cmp    $0x1,%eax
je     6cf2 <main+0x5992>
cmp    $0x5f,%eax
je     6d70 <main+0x5a10>
cmp    $0x10,%eax
je     6d31 <main+0x59d1>
cmp    $0x6,%eax
nop
jne    6bc8 <main+0x5868>
lea    -0x2008(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x129,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    6b38 <main+0x57d8>
lea    0x0(%esi,%eiz,1),%esi
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    6b38 <main+0x57d8>
lea    -0x1f34(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x193c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
call   fe0 <ntfs_umount@plt>
jmp    6b38 <main+0x57d8>
lea    -0x2350(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x121,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    6b38 <main+0x57d8>
lea    -0x22a4(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x123,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    6b38 <main+0x57d8>
lea    -0x2548(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x127,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    6b38 <main+0x57d8>
lea    -0x222c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x125,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    6b38 <main+0x57d8>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%esi
call   53f0 <main+0x4090>
add    $0x5115,%ebx
movl   $0x0,0x3c(%esp)
test   %esi,%esi
jne    6de8 <main+0x5a88>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     6dd1 <main+0x5a71>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1100 <strtoll@plt>
test   %edx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
js     6f00 <main+0x5ba0>
call   1230 <__errno_location@plt>
cmpl   $0x22,(%eax)
je     6f00 <main+0x5ba0>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     7030 <main+0x5cd0>
mov    0x58(%esp),%edx
test   %edx,%edx
je     6ed0 <main+0x5b70>
movzbl (%eax),%esi
mov    %esi,%ecx
cmp    $0x4d,%cl
je     6e8e <main+0x5b2e>
jle    6f48 <main+0x5be8>
mov    %esi,%ecx
cmp    $0x6b,%cl
je     6ead <main+0x5b4d>
jg     6f90 <main+0x5c30>
cmp    $0x54,%cl
xchg   %ax,%ax
je     6fa0 <main+0x5c40>
cmp    $0x67,%cl
jne    6f67 <main+0x5c07>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    6edd <main+0x5b7d>
xchg   %ax,%ax
movzbl (%eax),%edi
mov    %edi,%ecx
test   %cl,%cl
jne    6fc8 <main+0x5c68>
mov    0x54(%esp),%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x40,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x2740(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x162,0x8(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x194d(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x2d,%cl
je     6edd <main+0x5b7d>
jle    7020 <main+0x5cc0>
mov    %esi,%ecx
cmp    $0x47,%cl
je     6e6f <main+0x5b0f>
cmp    $0x4b,%cl
je     6ead <main+0x5b4d>
mov    %eax,0x18(%esp)
lea    -0x1d18(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x174,0x8(%esp)
jmp    6f26 <main+0x5bc6>
nop
mov    %esi,%ecx
cmp    $0x6d,%cl
je     6e8e <main+0x5b2e>
cmp    $0x74,%cl
jne    6f67 <main+0x5c07>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    6e6f <main+0x5b0f>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%cl
je     6edd <main+0x5b7d>
sub    %esi,%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
lea    -0x272c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x194d(%ebx),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    6dde <main+0x5a7e>
nop
test   %cl,%cl
je     6edd <main+0x5b7d>
jmp    6f67 <main+0x5c07>
lea    0x0(%esi),%esi
lea    -0x1d4c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x194d(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    6dde <main+0x5a7e>
jmp    7080 <main+0x5d20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   53f0 <main+0x4090>
add    $0x4e45,%ebx
test   %esi,%esi
je     7118 <main+0x5db8>
mov    0x34(%esp),%edx
test   %edx,%edx
je     7118 <main+0x5db8>
mov    0x38(%esp),%eax
test   %eax,%eax
je     7118 <main+0x5db8>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   11b0 <strchr@plt>
cmp    %eax,%esi
mov    %eax,%edi
je     7130 <main+0x5dd0>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   6db0 <main+0x5a50>
test   %eax,%eax
je     7158 <main+0x5df8>
test   %edi,%edi
je     7148 <main+0x5de8>
cmpb   $0x0,0x1(%edi)
jne    7168 <main+0x5e08>
mov    0x10(%esp),%esi
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0x14(%esp),%edi
mov    0x34(%esp),%ecx
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    $0x1,%eax
mov    %edx,0x4(%ecx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
jmp    70df <main+0x5d7f>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
jmp    70f8 <main+0x5d98>
xchg   %ax,%ax
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   6db0 <main+0x5a50>
test   %eax,%eax
je     7158 <main+0x5df8>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    70f8 <main+0x5d98>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   53f0 <main+0x4090>
add    $0x4d26,%ebx
test   %esi,%esi
je     7218 <main+0x5eb8>
mov    0x40(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   12c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    7210 <main+0x5eb0>
mov    0x4(%esi),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    7207 <main+0x5ea7>
lea    0x0(%esi,%eiz,1),%esi
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    7207 <main+0x5ea7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
call   53f0 <main+0x4090>
add    $0x4c95,%ebx
test   %eax,%eax
je     7288 <main+0x5f28>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   12d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%esi
je     7298 <main+0x5f38>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   71a0 <main+0x5e40>
mov    %esi,(%esp)
mov    %eax,%edi
call   11c0 <ntfs_attr_put_search_ctx@plt>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    727b <main+0x5f1b>
nop
lea    -0x1ce8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1962(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1ee,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    727b <main+0x5f1b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%ecx
call   53f0 <main+0x4090>
add    $0x4bde,%ebx
test   %ecx,%ecx
jne    7318 <main+0x5fb8>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc4(%esp),%edx
test   %edx,%edx
je     7300 <main+0x5fa0>
mov    0xc0(%esp),%eax
lea    0x4c(%esp),%edi
mov    $0x15,%ecx
mov    %edi,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x5,0x28(%esp)
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x1cc4(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   12d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     7685 <main+0x6325>
mov    $0x4,%ebp
mov    %ebp,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   71a0 <main+0x5e40>
test   %eax,%eax
je     74a8 <main+0x6148>
movzwl 0x14(%eax),%edi
add    %eax,%edi
movzbl 0x41(%edi),%ebp
cmp    0x20(%esp),%ebp
jg     7398 <main+0x6038>
mov    (%edi),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     73e5 <main+0x6085>
mov    %eax,(%esp)
call   1060 <free@plt>
movl   $0x0,(%esi)
movl   $0x0,0xc(%esp)
add    $0x42,%edi
mov    %esi,0x8(%esp)
movzbl -0x2(%edi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1150 <ntfs_ucstombs@plt>
test   %eax,%eax
js     7410 <main+0x60b0>
mov    %ebp,0x20(%esp)
jmp    7398 <main+0x6038>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x23d,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1977(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
movl   $0x1e,(%esp)
call   1050 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     755b <main+0x61fb>
mov    0xc0(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x2714(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1e,0x4(%esp)
mov    %edi,(%esp)
call   fc0 <__snprintf_chk@plt>
mov    %edi,(%esi)
jmp    7408 <main+0x60a8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   11c0 <ntfs_attr_put_search_ctx@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
je     74d5 <main+0x6175>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
mov    %ebp,%eax
mov    %edi,%ecx
xor    $0x5,%eax
movzwl %di,%edi
or     %edi,%eax
je     75aa <main+0x624a>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   12e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     7568 <main+0x6208>
addl   $0x1,0x30(%esp)
add    $0x4,%esi
cmpl   $0x14,0x30(%esp)
jne    7368 <main+0x6008>
lea    -0x1c94(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1977(%ebx),%eax
movl   $0x14,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x270a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1977(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x257,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    0x48(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x20(%esp)
lea    -0x26ef(%ebx),%eax
lea    0x9c(%esp),%esi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     7616 <main+0x62b6>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    0xc8(%esp),%edi
movl   $0x2f,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0xc4(%esp),%eax
sub    %ebp,%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   fc0 <__snprintf_chk@plt>
cmp    %eax,%edi
jle    7649 <main+0x62e9>
add    %eax,%ebp
sub    $0x4,%esi
cmp    0x20(%esp),%esi
jne    75c8 <main+0x6268>
mov    0x3c(%esp),%eax
lea    0x50(%eax),%edi
mov    %eax,%esi
mov    (%esi),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   1060 <free@plt>
cmp    %edi,%esi
jne    7628 <main+0x62c8>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x26ea(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1977(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    761f <main+0x62bf>
lea    -0x1ce8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1977(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x223,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    730d <main+0x5fad>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   53f0 <main+0x4090>
add    $0x47f4,%ebx
test   %esi,%esi
jne    7700 <main+0x63a0>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     76ea <main+0x638a>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   1040 <ntfs_attr_find_in_attrdef@plt>
test   %eax,%eax
mov    %eax,%edi
je     78b8 <main+0x6558>
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   10c0 <ntfs_ucsnlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1150 <ntfs_ucstombs@plt>
test   %eax,%eax
js     7890 <main+0x6530>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x26ed(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1220 <snprintf@plt>
cmp    0x5c(%esp),%eax
jge    7848 <main+0x64e8>
movzbl 0x9(%esi),%edx
test   %dl,%dl
je     76f5 <main+0x6395>
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
add    %eax,%edi
sub    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movzwl 0xa(%esi),%eax
movl   $0x0,0x2c(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   1150 <ntfs_ucstombs@plt>
test   %eax,%eax
js     7920 <main+0x65c0>
mov    0x2c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x26c7(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   fc0 <__snprintf_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1060 <free@plt>
cmp    %esi,%ebp
jg     76f5 <main+0x6395>
lea    -0x1ba0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b4,0x8(%esp)
jmp    786a <main+0x650a>
lea    0x0(%esi),%esi
lea    -0x1bf8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29a,0x8(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x198b(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1c50(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x28f,0x8(%esp)
jmp    786a <main+0x650a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x295,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x1c18(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x198b(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x26d1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   1220 <snprintf@plt>
jmp    7786 <main+0x6426>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1bd8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x198b(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2aa,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
lea    -0x26d1(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   1220 <snprintf@plt>
jmp    76f5 <main+0x6395>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   53f0 <main+0x4090>
add    $0x453c,%ebx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     7afe <main+0x679e>
mov    0x278(%ebx),%edx
cmp    0x1c(%esp),%edx
mov    0x274(%ebx),%eax
jle    7a88 <main+0x6728>
mov    0x64(%ecx),%eax
mov    0xfc(%ebx),%edx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     7b13 <main+0x67b3>
lea    0x50c(%ebx),%edx
mov    $0xffffffff,%eax
mov    %edx,%edi
mov    $0x80,%ecx
rep stos %eax,%es:(%edi)
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    %edx,0x14(%esp)
mov    %ebp,%edx
sar    $0x3,%edx
movl   $0x200,0xc(%esp)
and    $0xfffff000,%eax
mov    %eax,0x274(%ebx)
shrd   $0x3,%ebp,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x278(%ebx)
call   11f0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     7ab5 <main+0x6755>
mov    %esi,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    0x18(%esp),%esi
mov    $0x1,%edx
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    %esi,%ecx
shrd   $0x3,%edi,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x50c(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jl     7a94 <main+0x6734>
cmp    0x18(%esp),%eax
ja     79c4 <main+0x6664>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,0x1c(%esp)
jl     7a57 <main+0x66f7>
jg     79c4 <main+0x6664>
cmp    %eax,0x18(%esp)
jbe    7a57 <main+0x66f7>
xchg   %ax,%ax
jmp    79c4 <main+0x6664>
lea    -0x26ac(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19a0(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2eb,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    7a80 <main+0x6720>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    7a80 <main+0x6720>
lea    -0x26c2(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19a0(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2e1,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    7a80 <main+0x6720>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   53f0 <main+0x4090>
add    $0x435c,%ebx
test   %edi,%edi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     7c75 <main+0x6915>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
mov    0x270(%ebx),%edx
and    $0xffff,%ecx
mov    %eax,%esi
mov    0x26c(%ebx),%eax
cmp    %edx,%ecx
jge    7c48 <main+0x68e8>
lea    0x30c(%ebx),%ebp
xor    %eax,%eax
mov    $0x80,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    0x40(%esp),%edi
and    $0xfffff000,%esi
xor    %edx,%edx
mov    %esi,%eax
shrd   $0x3,%edx,%eax
mov    %edx,0x270(%ebx)
sar    $0x3,%edx
mov    %esi,0x26c(%ebx)
mov    0x7c(%edi),%ecx
mov    %ebp,0x14(%esp)
movl   $0x200,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   11f0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     7c87 <main+0x6927>
mov    0x18(%esp),%edi
mov    $0x1,%edx
mov    0x1c(%esp),%ebp
mov    %edi,%eax
mov    %edi,%ecx
shrd   $0x3,%ebp,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x30c(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     7c52 <main+0x68f2>
cmp    %eax,%esi
jb     7bb4 <main+0x6854>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,%ecx
jl     7c11 <main+0x68b1>
jg     7bb4 <main+0x6854>
cmp    %eax,%esi
jbe    7c11 <main+0x68b1>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    7bb4 <main+0x6854>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    7c3a <main+0x68da>
lea    -0x2696(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19b4(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x325,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    7c3a <main+0x68da>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   53f0 <main+0x4090>
add    $0x41f4,%ebx
test   %eax,%eax
je     7dbf <main+0x6a5f>
mov    0xc(%eax),%esi
test   %esi,%esi
je     7db8 <main+0x6a58>
mov    0x4(%eax),%edx
mov    (%eax),%edi
cmp    $0x0,%edx
ja     7d08 <main+0x69a8>
cmp    $0xa,%edi
jbe    7d78 <main+0x6a18>
movzbl 0x10(%esi),%ecx
cmp    $0x3,%cl
je     7da8 <main+0x6a48>
mov    0x8(%eax),%eax
test   %eax,%eax
je     7d40 <main+0x69e0>
mov    0x24(%eax),%edx
mov    0x20(%eax),%edi
mov    %edx,%ebp
or     %edi,%ebp
je     7d40 <main+0x69e0>
and    $0xffff,%edx
je     7da0 <main+0x6a40>
cmp    $0x3,%cl
jne    7d40 <main+0x69e0>
xor    $0xb,%edi
or     %edx,%edi
je     7d78 <main+0x6a18>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x30,(%esp)
call   7230 <main+0x5ed0>
test   %eax,%eax
je     7db8 <main+0x6a58>
movzwl 0x14(%eax),%edx
mov    (%eax,%edx,1),%ecx
movzwl 0x4(%eax,%edx,1),%edx
xor    %eax,%eax
mov    %ecx,%edi
xor    $0x5,%edi
or     %edx,%edi
je     7d7d <main+0x6a1d>
cmp    $0x0,%edx
ja     7d88 <main+0x6a28>
cmp    $0xa,%ecx
ja     7d88 <main+0x6a28>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x3,0x10(%esi)
jne    7d7d <main+0x6a1d>
xor    $0xb,%ecx
xor    %eax,%eax
or     %edx,%ecx
sete   %al
jmp    7d7d <main+0x6a1d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edi
jbe    7d78 <main+0x6a18>
jmp    7d30 <main+0x69d0>
nop
xor    $0xb,%edi
or     %edx,%edi
lea    0x0(%esi),%esi
jne    7d15 <main+0x69b5>
jmp    7d78 <main+0x6a18>
mov    $0xffffffff,%eax
jmp    7d7d <main+0x6a1d>
nop
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    7d7d <main+0x6a1d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   53f0 <main+0x4090>
add    $0x40d6,%ebx
test   %esi,%esi
je     7e38 <main+0x6ad8>
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   1350 <calloc@plt>
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %esi,0xc(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    7e2d <main+0x6acd>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   53f0 <main+0x4090>
add    $0x4076,%ebx
test   %esi,%esi
je     7e7f <main+0x6b1f>
mov    0x8(%esi),%eax
test   %eax,%eax
je     7e77 <main+0x6b17>
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
mov    %esi,(%esp)
call   1060 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   53f0 <main+0x4090>
add    $0x4034,%ebx
test   %esi,%esi
je     83fa <main+0x709a>
mov    0x8(%esi),%eax
test   %eax,%eax
je     7ec4 <main+0x6b64>
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
movl   $0x0,0x8(%esi)
mov    0xc(%esi),%edi
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%ebp
sar    $0x1f,%ebp
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebp,%edx
mov    %eax,0x28(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x2c(%esp)
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jle    8290 <main+0x6f30>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   7b60 <main+0x6800>
cmp    $0xffffffff,%eax
je     82a8 <main+0x6f48>
test   %eax,%eax
je     80b0 <main+0x6d50>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    0xc(%esi),%ecx
orl    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   12e0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     8230 <main+0x6ed0>
mov    0x8(%eax),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   7230 <main+0x5ed0>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   7230 <main+0x5ed0>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   7230 <main+0x5ed0>
test   %ebp,%ebp
je     8280 <main+0x6f20>
orl    $0x40,0x4(%esi)
test   %edi,%edi
je     7fb7 <main+0x6c57>
orl    $0x40,0x4(%esi)
test   %eax,%eax
je     7fbf <main+0x6c5f>
orl    $0x4,0x4(%esi)
testb  $0x8,(%esi)
je     803b <main+0x6cdb>
mov    0x8(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   12d0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     83d6 <main+0x7076>
mov    %eax,0x20(%esp)
mov    0x108(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x90,(%esp)
call   12c0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    8033 <main+0x6cd3>
orl    $0x8,0x4(%esi)
mov    %edi,(%esp)
call   11c0 <ntfs_attr_put_search_ctx@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   7cd0 <main+0x6970>
test   %eax,%eax
je     8220 <main+0x6ec0>
cmp    $0x1,%eax
mov    0x4(%esi),%eax
jne    8210 <main+0x6eb0>
or     $0x10,%eax
mov    %eax,0x4(%esi)
test   %eax,(%esi)
jne    809a <main+0x6d3a>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1250 <ntfs_inode_close@plt>
test   %eax,%eax
jne    8300 <main+0x6fa0>
movl   $0x0,0x8(%esi)
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jge    81f8 <main+0x6e98>
mov    0x8(%esi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x4(%esi)
movl   $0x70,0x4(%esp)
movl   $0x1,(%esp)
call   1350 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
je     8359 <main+0x6ff9>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    %eax,(%edi)
mov    0xc(%esi),%eax
mov    %edx,0x4(%edi)
mov    %eax,0xc(%edi)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   1050 <ntfs_malloc@plt>
mov    %eax,0x8(%edi)
mov    0x8(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     83a0 <main+0x7040>
mov    0xc(%esi),%eax
mov    0xfc(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   1200 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     83b2 <main+0x7052>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    0x1c(%edx),%ecx
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
imul   %ecx,%eax
mov    %eax,%ebp
mov    %ecx,%eax
mull   0x10(%esi)
mov    %edi,(%esp)
mov    %edx,%ecx
add    %ebp,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   11f0 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0xc(%esi),%eax
cmp    $0x0,%edx
mov    0x1c(%eax),%eax
jg     81e4 <main+0x6e84>
jge    81e0 <main+0x6e80>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x262c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19c4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x44a,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    80a4 <main+0x6d44>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
jb     8180 <main+0x6e20>
mov    %edi,(%esp)
call   1160 <ntfs_attr_close@plt>
mov    0x4(%esi),%eax
jmp    8060 <main+0x6d00>
lea    0x0(%esi,%eiz,1),%esi
jg     8206 <main+0x6ea6>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jbe    809a <main+0x6d3a>
mov    0xc(%esi),%edi
jmp    7f10 <main+0x6bb0>
xchg   %ax,%ax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    8060 <main+0x6d00>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    8060 <main+0x6d00>
xchg   %ax,%ax
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x267b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19c4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x404,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
jmp    807e <main+0x6d1e>
lea    0x0(%esi),%esi
orl    $0x80,0x4(%esi)
jmp    7faf <main+0x6c4f>
lea    0x0(%esi,%eiz,1),%esi
jl     809a <main+0x6d3a>
cmp    %eax,0x28(%esp)
ja     7f10 <main+0x6bb0>
jmp    809a <main+0x6d3a>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x1b80(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19c4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x3fa,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x260e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19c4(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x459,0x8(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
call   1230 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    -0x2660(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x434,0x8(%esp)
lea    -0x278f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x19c4(%ebx),%eax
mov    %eax,(%esp)
call   fd0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   1060 <free@plt>
mov    $0xffffffff,%eax
jmp    80a4 <main+0x6d44>
lea    -0x2645(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x443,0x8(%esp)
jmp    837b <main+0x701b>
lea    -0x1ce8(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x41f,0x8(%esp)
jmp    837b <main+0x701b>
call   1230 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    80a4 <main+0x6d44>
nop
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    8458 <main+0x70f8>
cmp    %edi,%esi
jbe    8490 <main+0x7130>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     84b0 <main+0x7150>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    84c0 <main+0x7160>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     8558 <main+0x71f8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    84a1 <main+0x7141>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    844b <main+0x70eb>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     8544 <main+0x71e4>
cmp    %eax,0xc(%esp)
jb     8540 <main+0x71e0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    851e <main+0x71be>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    851e <main+0x71be>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     8471 <main+0x7111>
jmp    8481 <main+0x7121>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   53f0 <main+0x4090>
add    $0x3959,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x108(%ebx),%esi
call   f8c <_init>
lea    -0x10c(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     85cb <main+0x726b>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x10c(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    85a8 <main+0x7248>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
push   %ebx
sub    $0x8,%esp
call   53f0 <main+0x4090>
add    $0x38e7,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x20646c6c
sub    $0x746e0020,%eax
data16
jae    868a <_IO_stdin_used+0x8e>
imul   $0x4300632e,0x65(%eax),%esi
outsl  %ds:(%esi),(%dx)
jne    8689 <_IO_stdin_used+0x8d>
and    %ch,%fs:0x6f(%esi)
je     8643 <_IO_stdin_used+0x47>
outsl  %ds:(%esi),(%dx)
jo     868b <_IO_stdin_used+0x8f>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs or  %fs:%gs:(%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     8698 <_IO_stdin_used+0x9c>
jb     86a3 <_IO_stdin_used+0xa7>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     86ab <_IO_stdin_used+0xaf>
jb     8648 <_IO_stdin_used+0x4c>
add    %ch,0x74(%esi)
data16
jae    86a3 <_IO_stdin_used+0xa7>
jb     86b2 <_IO_stdin_used+0xb6>
pop    %edi
jo     86bb <_IO_stdin_used+0xbf>
gs
popa
and    %ah,%fs:0x61(%esi)
imul   $0x746f4e00,0x64(%ebp,%eiz,2),%ebp
and    %ah,0x6e(%ebp)
outsl  %ds:(%esi),(%dx)
jne    86c4 <_IO_stdin_used+0xc8>
push   $0x6d656d20
outsl  %ds:(%esi),(%dx)
jb     86de <_IO_stdin_used+0xe2>
or     (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    86d7 <_IO_stdin_used+0xdb>
outsb  %fs:(%esi),(%dx)
daa
je     8690 <_IO_stdin_used+0x94>
ja     86db <_IO_stdin_used+0xdf>
jo     86d9 <_IO_stdin_used+0xdd>
and    %dh,0x69(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
add    %ah,(%eax)
sub    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x29646c6c
or     (%eax),%al
push   %edi
imul   $0x6c252064,0x65(%eax),%esi
insb   (%dx),%es:(%edi)
jne    86b4 <_IO_stdin_used+0xb8>
bound  %edi,0x74(%ecx)
gs
jae    86a4 <_IO_stdin_used+0xa8>
add    %cl,0x6f(%esi)
je     8707 <_IO_stdin_used+0x10b>
imul   $0x206f7420,0x67(%esi),%ebp
ja     8711 <_IO_stdin_used+0x115>
jo     870f <_IO_stdin_used+0x113>
or     (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8711 <_IO_stdin_used+0x115>
insb   (%dx),%es:(%edi)
imul   $0x20747369,0x6c(%eax,%eiz,1),%esp
daa
and    $0xa2773,%eax
sub    $0x676f6c2d,%eax
sub    $0x6b6e5500,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     873b <_IO_stdin_used+0x13f>
and    %ch,0x70(%edi)
je     873b <_IO_stdin_used+0x13f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x633a6261
cmp    0x68(%esi,%eiz,2),%ah
aas
imul   $0x75747170,0x6e(%ebp,%ebp,2),%ebp
jbe    8746 <_IO_stdin_used+0x14a>
jae    86f2 <_IO_stdin_used+0xf6>
xor    (%eax),%dh
xor    %esi,(%ebx)
xor    %ebp,%cs:(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
outsb  %ds:(%esi),(%dx)
je     8769 <_IO_stdin_used+0x16d>
jae    877c <_IO_stdin_used+0x180>
imul   $0x73250a00,0x65(%eax),%esi
or     0xa732573,%ah
add    %ah,0x73692073
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    8792 <_IO_stdin_used+0x196>
and    %dh,0x20(%edi,%ebp,2)
ja     878d <_IO_stdin_used+0x191>
jo     878b <_IO_stdin_used+0x18f>
cmp    (%edx),%cl
add    %cl,(%ecx)
jne    879a <_IO_stdin_used+0x19e>
jne    87a1 <_IO_stdin_used+0x1a5>
gs and %ah,%fs:%gs:0x73(%ecx,%ebp,2)
imul   $0x73,(%eax),%esp
jo     879a <_IO_stdin_used+0x19e>
arpl   %sp,0xa(%ebp)
add    %cl,(%ecx)
imul   $0x6174,0x20(%ebp,%eiz,2),%bp
imul   $0x6e750900,0xa(%ebx,%esi,2),%ebp
jne    87c2 <_IO_stdin_used+0x1c6>
gs and %ch,%fs:%gs:0x66(%ebp)
je     8776 <_IO_stdin_used+0x17a>
popa
jb     87be <_IO_stdin_used+0x1c2>
popa
jae    8766 <_IO_stdin_used+0x16a>
add    %cl,(%ecx)
je     87c8 <_IO_stdin_used+0x1cc>
and    %ch,%gs:0x67(%edi,%ebp,2)
imul   $0x6a28,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
jne    87e1 <_IO_stdin_used+0x1e5>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
sub    %ecx,(%edx)
add    %cl,(%ecx)
je     87e0 <_IO_stdin_used+0x1e4>
and    %dh,%gs:0x61(%eax)
imul   $0x2820,%gs:0x65(%si),%bp
jae    87fd <_IO_stdin_used+0x201>
popa
jo     87a9 <_IO_stdin_used+0x1ad>
jae    87fb <_IO_stdin_used+0x1ff>
popa
arpl   %sp,0x29(%ebp)
or     (%eax),%al
or     %esi,0x6e(%ebp)
fs
gs
insb   (%dx),%es:(%edi)
gs
je     87ff <_IO_stdin_used+0x203>
and    %ah,0x74(%ecx,%eiz,2)
popa
or     (%eax),%al
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     87c8 <_IO_stdin_used+0x1cc>
add    %cl,0x73655200
imul   $0x49242074,0x6e(%ebp,%eiz,2),%esp
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
or     (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8837 <_IO_stdin_used+0x23b>
outsb  %fs:(%esi),(%dx)
daa
je     87f0 <_IO_stdin_used+0x1f4>
outsl  %ds:(%esi),(%dx)
jo     8838 <_IO_stdin_used+0x23c>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
or     (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    884e <_IO_stdin_used+0x252>
outsb  %fs:(%esi),(%dx)
daa
je     8807 <_IO_stdin_used+0x20b>
outsl  %ds:(%esi),(%dx)
jo     884f <_IO_stdin_used+0x253>
outsb  %ds:(%esi),(%dx)
and    %ah,(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
dec    %edi
dec    %edi
push   %esp
or     (%eax),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
je     881d <_IO_stdin_used+0x221>
jb     8864 <_IO_stdin_used+0x268>
jae    886a <_IO_stdin_used+0x26e>
fs outsb %fs:%gs:(%esi),(%dx)
je     8826 <_IO_stdin_used+0x22a>
and    $0x49,%al
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
dec    %edi
dec    %edi
push   %esp
or     (%eax),%al
outsb  %ds:(%esi),(%dx)
je     887c <_IO_stdin_used+0x280>
jae    8877 <_IO_stdin_used+0x27b>
popa
je     888f <_IO_stdin_used+0x293>
jb     887c <_IO_stdin_used+0x280>
jo     8891 <_IO_stdin_used+0x295>
gs
popa
and    %ah,%fs:0x61(%esi)
imul   $0x444e4900,0x64(%ebp,%eiz,2),%ebp
pop    %eax
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %dh,%fs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    88a7 <_IO_stdin_used+0x2ab>
and    %ah,%fs:0x65(%edx)
and    %dh,(%eax)
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
popaw
imul   $0x6f43000a,0x64(%ebp,%eiz,2),%ebp
jne    88c1 <_IO_stdin_used+0x2c5>
outsb  %fs:(%esi),(%dx)
daa
je     887a <_IO_stdin_used+0x27e>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    886e <_IO_stdin_used+0x272>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    88de <_IO_stdin_used+0x2e2>
outsb  %fs:(%esi),(%dx)
daa
je     8897 <_IO_stdin_used+0x29b>
jb     88de <_IO_stdin_used+0x2e2>
popa
and    %ah,%fs:(%edx,%eax,2)
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x6f(%ebx)
jne    88f4 <_IO_stdin_used+0x2f8>
outsb  %fs:(%esi),(%dx)
daa
je     88ad <_IO_stdin_used+0x2b1>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x79622075
je     8902 <_IO_stdin_used+0x306>
jae    889f <_IO_stdin_used+0x2a3>
outsb  %ds:(%esi),(%dx)
je     8908 <_IO_stdin_used+0x30c>
jae    8903 <_IO_stdin_used+0x307>
jb     8912 <_IO_stdin_used+0x316>
pop    %edi
jo     891b <_IO_stdin_used+0x31f>
gs
popa
and    %ah,%fs:0x61(%esi)
imul   $0x6f43000a,0x64(%ebp,%eiz,2),%ebp
jne    8925 <_IO_stdin_used+0x329>
outsb  %fs:(%esi),(%dx)
daa
je     88de <_IO_stdin_used+0x2e2>
jb     8925 <_IO_stdin_used+0x329>
popa
and    %cl,%fs:0x4e(%ecx)
inc    %esp
pop    %eax
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
add    %ch,%fs:(%ebx)
add    %bh,0x0(%eax)
outsb  %ds:(%esi),(%dx)
je     893c <_IO_stdin_used+0x340>
jae    8937 <_IO_stdin_used+0x33b>
jb     8946 <_IO_stdin_used+0x34a>
pop    %edi
jo     8954 <_IO_stdin_used+0x358>
jb     8948 <_IO_stdin_used+0x34c>
je     8946 <_IO_stdin_used+0x34a>
and    %ah,0x61(%esi)
imul   $0x90a000a,0x64(%ebp,%eiz,2),%ebp
add    %ah,0x72(%ebp)
jb     8960 <_IO_stdin_used+0x364>
jb     8913 <_IO_stdin_used+0x317>
popa
je     896a <_IO_stdin_used+0x36e>
jb     8918 <_IO_stdin_used+0x31c>
insl   (%dx),%es:(%edi)
jae    896f <_IO_stdin_used+0x373>
and    %dh,0x65(%edx)
popa
and    %ah,%fs:0xa646c6c
add    %ah,0x72(%ebp)
jb     897a <_IO_stdin_used+0x37e>
jb     892d <_IO_stdin_used+0x331>
popa
je     8984 <_IO_stdin_used+0x388>
jb     8932 <_IO_stdin_used+0x336>
insl   (%dx),%es:(%edi)
jae    8989 <_IO_stdin_used+0x38d>
and    %dh,0x72(%edi)
imul   $0x646c6c25,0x20(%ebp,%eiz,2),%esi
or     (%eax),%al
ja     898d <_IO_stdin_used+0x391>
jo     898b <_IO_stdin_used+0x38f>
pop    %edi
insl   (%dx),%es:(%edi)
data16
je     894b <_IO_stdin_used+0x34f>
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     895e <_IO_stdin_used+0x362>
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    8948 <_IO_stdin_used+0x34c>
add    %dh,0x61(%eax)
imul   $0x732e,%gs:0x65(%si),%bp
jns    89be <_IO_stdin_used+0x3c2>
add    %dh,0x69(%edi)
jo     89b5 <_IO_stdin_used+0x3b9>
pop    %edi
jne    89c1 <_IO_stdin_used+0x3c5>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     89be <_IO_stdin_used+0x3c2>
or     (%eax),%al
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x6f(%ebx)
jne    89d1 <_IO_stdin_used+0x3d5>
je     8965 <_IO_stdin_used+0x369>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    896f <_IO_stdin_used+0x373>
outsw  %ds:(%esi),(%dx)
jb     89d6 <_IO_stdin_used+0x3da>
add    %ch,%gs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     897a <_IO_stdin_used+0x37e>
imul   $0x6f6c006f,0x66(%esi),%ebp
imul   $0x6d00,0x65(%si),%bp
data16
je     898b <_IO_stdin_used+0x38f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x69746361,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%eax)
imul   $0x7100,%gs:0x65(%si),%bp
jne    8a0a <_IO_stdin_used+0x40e>
gs
je     89a4 <_IO_stdin_used+0x3a8>
je     8a07 <_IO_stdin_used+0x40b>
imul   $0x73756e75,0x0(%ebx,%esi,2),%ebp
gs add %dh,%fs:%gs:0x6e(%ebp)
fs
gs
insb   (%dx),%es:(%edi)
add    %dh,0x65(%esi)
jb     8a1d <_IO_stdin_used+0x421>
outsl  %ds:(%esi),(%dx)
jae    8a23 <_IO_stdin_used+0x427>
add    %dh,0x65(%esi)
jb     8a36 <_IO_stdin_used+0x43a>
imul   $0x6f4e0000,0x6e(%edi),%ebp
je     89ec <_IO_stdin_used+0x3f0>
bound  %esp,0x73(%ecx)
and    %ch,%gs:0x66(%ebp)
je     89f5 <_IO_stdin_used+0x3f9>
jb     8a3c <_IO_stdin_used+0x440>
arpl   %bp,0x72(%edi)
fs and %dl,%cs:%fs:0x6b(%ebx)
imul   $0xa676e69,0x70(%eax),%esi
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     8a0e <_IO_stdin_used+0x412>
addr16
gs
je     8a12 <_IO_stdin_used+0x416>
popa
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8a5e <_IO_stdin_used+0x462>
js     8a6f <_IO_stdin_used+0x473>
sub    $0x20,%al
popa
bound  %ebp,0x72(%edi)
je     8a6c <_IO_stdin_used+0x470>
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%al
add    %al,0x6f(%ebx)
jne    8a78 <_IO_stdin_used+0x47c>
outsb  %fs:(%esi),(%dx)
daa
je     8a31 <_IO_stdin_used+0x435>
outsl  %ds:(%esi),(%dx)
jo     8a79 <_IO_stdin_used+0x47d>
outsb  %ds:(%esi),(%dx)
and    %ah,(%esp,%eax,2)
inc    %ecx
push   %esp
inc    %ecx
and    %ah,0x74(%ecx)
je     8a92 <_IO_stdin_used+0x496>
imul   $0xa6574,0x75(%edx),%esp
add    %dl,0x65(%edx)
jae    8a95 <_IO_stdin_used+0x499>
fs outsb %fs:%gs:(%esi),(%dx)
je     8a51 <_IO_stdin_used+0x455>
and    $0x44,%al
inc    %ecx
push   %esp
inc    %ecx
and    %ah,0x74(%ecx)
je     8aad <_IO_stdin_used+0x4b1>
imul   $0x202e6574,0x75(%edx),%esp
push   %ebx
imul   $0x70,0x70(%ecx),%ebp
imul   $0xa2e,0x67(%esi),%ebp
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     8a76 <_IO_stdin_used+0x47a>
insl   (%dx),%es:(%edi)
popa
jo     8a7a <_IO_stdin_used+0x47e>
jb     8ad1 <_IO_stdin_used+0x4d5>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6e692820,0x74(%ebx),%esi
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x29646c6c
or     (%eax),%al
bound  %esi,0x67(%ebp)
and    %ch,0x72(%edi)
and    %ah,0x6d(%ecx,%eiz,2)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
ja     8aea <_IO_stdin_used+0x4ee>
and    %dh,0x61(%edi)
outsb  %ds:(%esi),(%dx)
je     8aab <_IO_stdin_used+0x4af>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x75(%edx)
data16
data16
gs
jb     8abb <_IO_stdin_used+0x4bf>
jae    8b06 <_IO_stdin_used+0x50a>
jp     8b04 <_IO_stdin_used+0x508>
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    8aab <_IO_stdin_used+0x4af>
add    %cl,0x6f(%esi)
je     8ad0 <_IO_stdin_used+0x4d4>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    8b1c <_IO_stdin_used+0x520>
push   $0x6d656d20
outsl  %ds:(%esi),(%dx)
jb     8b36 <_IO_stdin_used+0x53a>
and    %dh,0x20(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    8ad5 <_IO_stdin_used+0x4d9>
add    %al,(%eax)
add    %ch,0x74(%esi)
data16
jae    8b3c <_IO_stdin_used+0x540>
jb     8b4b <_IO_stdin_used+0x54f>
pop    %edi
jo     8b59 <_IO_stdin_used+0x55d>
jb     8b4d <_IO_stdin_used+0x551>
je     8b4b <_IO_stdin_used+0x54f>
and    %ah,0x61(%esi)
imul   $0x666f202c,0x64(%ebp,%eiz,2),%ebp
data16
jae    8b59 <_IO_stdin_used+0x55d>
je     8b16 <_IO_stdin_used+0x51a>
and    $0x2c756c6c,%eax
and    %dh,0x69(%ebx)
jp     8b65 <_IO_stdin_used+0x569>
and    %ah,0x2c646c6c
and    %dh,0x63(%esi)
outsb  %ds:(%esi),(%dx)
and    %ah,0x646c6c
ja     8b7b <_IO_stdin_used+0x57f>
jo     8b79 <_IO_stdin_used+0x57d>
pop    %edi
je     8b78 <_IO_stdin_used+0x57c>
imul   $0x30257830,0x20(%ebx,%esi,2),%ebp
xor    0x2c(%eax),%bh
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    8b38 <_IO_stdin_used+0x53c>
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8ba0 <_IO_stdin_used+0x5a4>
outsb  %fs:(%esi),(%dx)
daa
je     8b59 <_IO_stdin_used+0x55d>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8bc1 <_IO_stdin_used+0x5c5>
and    %ch,0x6e(%ecx)
and    %dh,0x61(%eax)
jb     8bc3 <_IO_stdin_used+0x5c7>
gs
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0xa2e2928,0x74(%ebx),%esi
add    %al,(%eax)
inc    %edx
jns    8bd3 <_IO_stdin_used+0x5d7>
gs
jae    8b82 <_IO_stdin_used+0x586>
insl   (%dx),%es:(%edi)
jne    8bd8 <_IO_stdin_used+0x5dc>
je     8b87 <_IO_stdin_used+0x58b>
bound  %esp,0x20(%ebp)
imul   $0x676e6172,0x20(%esi),%ebp
and    %dh,%gs:(%eax)
sub    $0x2e353532,%eax
or     (%eax),%al
add    %cl,0x70(%edi)
je     8be9 <_IO_stdin_used+0x5ed>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x72202773,%eax
gs
jno    8c01 <_IO_stdin_used+0x605>
imul   $0x6e612073,0x65(%edx),%esi
and    %ah,0x72(%ecx)
addr16 jne 8c06 <_IO_stdin_used+0x60a>
outsb  %gs:(%esi),(%dx)
je     8bcb <_IO_stdin_used+0x5cf>
or     (%eax),%al
add    %bl,0x6f(%ecx)
jne    8bc4 <_IO_stdin_used+0x5c8>
insl   (%dx),%es:(%edi)
jne    8c1a <_IO_stdin_used+0x61e>
je     8bc9 <_IO_stdin_used+0x5cd>
jae    8c1b <_IO_stdin_used+0x61f>
arpl   %bp,%gs:0x66(%ecx)
jns    8bd1 <_IO_stdin_used+0x5d5>
gs
js     8c15 <_IO_stdin_used+0x619>
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0xa2e,0x65(%ebx),%esp
add    %bl,0x6f(%ecx)
jne    8bec <_IO_stdin_used+0x5f0>
insl   (%dx),%es:(%edi)
popa
jns    8bf0 <_IO_stdin_used+0x5f4>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8bf4 <_IO_stdin_used+0x5f8>
jne    8c49 <_IO_stdin_used+0x64d>
and    %ch,%gs:0x6975712d
gs
je     8c00 <_IO_stdin_used+0x604>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x7265762d
bound  %ebp,0x73(%edi)
and    %ah,%gs:0x74(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6d(%ecx,%ebp,2)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %ch,0x74(%ecx)
gs
jb     8c6e <_IO_stdin_used+0x672>
je     8c78 <_IO_stdin_used+0x67c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
jne    8c84 <_IO_stdin_used+0x688>
je     8c38 <_IO_stdin_used+0x63c>
insl   (%dx),%es:(%edi)
jne    8c8e <_IO_stdin_used+0x692>
je     8c3d <_IO_stdin_used+0x641>
bound  %esp,0x20(%ebp)
bound  %esp,0x74(%ebp)
ja     8c8a <_IO_stdin_used+0x68e>
outsb  %gs:(%esi),(%dx)
and    %dh,(%ecx)
and    %ah,0x6e(%ecx)
and    %dh,%fs:(%ecx)
xor    %dh,(%eax)
or     %cs:(%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8ca4 <_IO_stdin_used+0x6a8>
outsb  %fs:(%esi),(%dx)
daa
je     8c5d <_IO_stdin_used+0x661>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8cc5 <_IO_stdin_used+0x6c9>
and    %ah,0x6f(%esi)
jb     8c71 <_IO_stdin_used+0x675>
bound  %edi,0x74(%ecx)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     8c89 <_IO_stdin_used+0x68d>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
and    $0x25762073,%eax
jae    8c88 <_IO_stdin_used+0x68c>
sub    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     8cd5 <_IO_stdin_used+0x6d9>
jae    8c9e <_IO_stdin_used+0x6a2>
xor    0x29(%edi),%esp
and    %ch,0x65764f20
jb     8cf3 <_IO_stdin_used+0x6f7>
jb     8ce7 <_IO_stdin_used+0x6eb>
je     8ce5 <_IO_stdin_used+0x6e9>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6e(%ebp)
jne    8cfc <_IO_stdin_used+0x700>
gs and %dh,%fs:%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    8d0f <_IO_stdin_used+0x713>
gs or  %cs:%gs:(%edx),%cl
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     8d25 <_IO_stdin_used+0x729>
jb     8d17 <_IO_stdin_used+0x71b>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x35303032,%eax
and    %dl,0x69(%edx)
arpl   %bp,0x61(%eax)
jb     8d2b <_IO_stdin_used+0x72f>
and    %dl,0x75(%edx)
jae    8d3f <_IO_stdin_used+0x743>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     8d4d <_IO_stdin_used+0x751>
jb     8d3f <_IO_stdin_used+0x743>
addr16 push $0x63282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%eax,%eiz,1)
pop    %ecx
jne    8d58 <_IO_stdin_used+0x75c>
popa
and    %dl,0x61(%eax)
imul   $0x63,0x75(%eax),%ebp
push   $0xa7969
add    %cl,(%edx)
push   %ebp
jae    8d59 <_IO_stdin_used+0x75d>
cmp    %gs:(%bx,%si),%ah
and    $0x6f5b2073,%eax
jo     8d77 <_IO_stdin_used+0x77b>
imul   $0x64205d73,0x6e(%edi),%ebp
gs
jbe    8d76 <_IO_stdin_used+0x77a>
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202069,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x666e692d,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
push   $0x7620776f
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    8da2 <_IO_stdin_used+0x7a6>
and    %ch,%gs:0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     8daa <_IO_stdin_used+0x7ae>
popa
je     8da9 <_IO_stdin_used+0x7ad>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
fs
gs
popaw
jne    8db6 <_IO_stdin_used+0x7ba>
je     8d75 <_IO_stdin_used+0x779>
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202064,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x7269642d,%eax
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8d87 <_IO_stdin_used+0x78b>
and    %ah,(%eax)
push   %edi
imul   $0x72696420,0x65(%eax),%esi
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8d98 <_IO_stdin_used+0x79c>
imul   $0x73657865,0x64(%esi),%ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2020206c
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x676f6c2d,%eax
imul   $0x2020,0x20(%ebp,%eiz,2),%bp
and    %ah,(%eax)
push   %edi
imul   $0x65687420,0x65(%eax),%esi
and    %ch,0x67(%edi,%ebp,2)
imul   $0x6a28,0x20(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
jne    8e23 <_IO_stdin_used+0x827>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
sub    %ecx,(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2020206d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x74666d2d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x69(%edi)
jo     8e3a <_IO_stdin_used+0x83e>
and    %ch,0x66(%ebp)
je     8dfa <_IO_stdin_used+0x7fe>
jae    8e4c <_IO_stdin_used+0x850>
popa
arpl   %sp,0xa(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202070,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6761702d,%eax
imul   $0x2020,%gs:0x20(%ebp,%eiz,2),%bp
and    %dl,0x69(%edi)
jo     8e64 <_IO_stdin_used+0x868>
and    %dh,0x61(%eax)
imul   $0x2820,%gs:0x65(%si),%bp
jae    8e83 <_IO_stdin_used+0x887>
popa
jo     8e2f <_IO_stdin_used+0x833>
jae    8e81 <_IO_stdin_used+0x885>
popa
arpl   %sp,0x29(%ebp)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202074
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6961742d,%eax
insb   (%dx),%es:(%edi)
jae    8e4b <_IO_stdin_used+0x84f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %edi
imul   $0x6c696620,0x65(%eax),%esi
and    %dh,%gs:0x69(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
jae    8e4b <_IO_stdin_used+0x84f>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202075,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x756e752d,%eax
jae    8eba <_IO_stdin_used+0x8be>
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %edi
imul   $0x756e7520,0x65(%eax),%esi
jae    8ecb <_IO_stdin_used+0x8cf>
and    %ah,%fs:0x6c(%ebx)
jne    8edf <_IO_stdin_used+0x8e3>
je     8ed3 <_IO_stdin_used+0x8d7>
jb     8ee3 <_IO_stdin_used+0x8e7>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202073
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x646e752d,%eax
gs
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x69(%edi)
jo     8ef5 <_IO_stdin_used+0x8f9>
and    %dh,0x6e(%ebp)
fs
gs
insb   (%dx),%es:(%edi)
gs
je     8efe <_IO_stdin_used+0x902>
and    %ah,0x74(%ecx,%eiz,2)
popa
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x20202061,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6c612d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x69(%edi)
jo     8f24 <_IO_stdin_used+0x928>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x6e(%ebp)
jne    8f3b <_IO_stdin_used+0x93f>
gs and %dh,%fs:%gs:0x70(%ebx)
popa
arpl   %sp,0xa(%ebp)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x756e2063
insl   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ch,0x756f632d
outsb  %ds:(%esi),(%dx)
je     8f07 <_IO_stdin_used+0x90b>
outsb  %ds:(%esi),(%dx)
jne    8f57 <_IO_stdin_used+0x95b>
and    %ah,(%eax)
and    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x6d(%ecx,%ebp,2)
gs
jae    8f1d <_IO_stdin_used+0x921>
je     8f6e <_IO_stdin_used+0x972>
and    %dh,0x72(%edi)
imul   $0x61666564,0x28(%ebp,%eiz,2),%esi
jne    8f78 <_IO_stdin_used+0x97c>
je     8f2e <_IO_stdin_used+0x932>
cmp    $0xa293120,%eax
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x696c2062,%eax
jae    8f92 <_IO_stdin_used+0x996>
and    %ah,(%eax)
sub    $0x7479622d,%eax
gs
jae    8f48 <_IO_stdin_used+0x94c>
insb   (%dx),%es:(%edi)
imul   $0x694c2020,0x74(%ebx),%esi
jae    8fa6 <_IO_stdin_used+0x9aa>
and    %ch,0x66(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8fa0 <_IO_stdin_used+0x9a4>
jae    8f5d <_IO_stdin_used+0x961>
je     8fae <_IO_stdin_used+0x9b2>
and    %dh,0x72(%edi)
imul   $0x61666564,0x28(%ebp,%eiz,2),%esi
jne    8fb8 <_IO_stdin_used+0x9bc>
je     8f6e <_IO_stdin_used+0x972>
cmp    $0xa293020,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2020206e
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d6f6e2d,%eax
popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %al,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8f96 <_IO_stdin_used+0x99a>
ja     8fea <_IO_stdin_used+0x9ee>
imul   $0x64206f74,0x20(%ebp,%eiz,2),%esi
imul   $0x2020200a,0x6b(%ebx),%esi
and    %ch,0x20202066
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x726f662d,%eax
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebp
jae    9007 <_IO_stdin_used+0xa0b>
and    %ch,0x73(%ebp,%eiz,2)
jae    8fc8 <_IO_stdin_used+0x9cc>
arpl   %sp,0x75(%ecx)
je     9016 <_IO_stdin_used+0xa1a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202071
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6975712d,%eax
gs
je     8fe5 <_IO_stdin_used+0x9e9>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %esp
gs
jae    9042 <_IO_stdin_used+0xa46>
and    %ch,0x75(%edi)
je     9044 <_IO_stdin_used+0xa48>
jne    904a <_IO_stdin_used+0xa4e>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202076
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x7265762d,%eax
bound  %ebp,0x73(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %cl,0x6f(%ebp)
jb     905b <_IO_stdin_used+0xa5f>
and    %ch,0x75(%edi)
je     906b <_IO_stdin_used+0xa6f>
jne    9071 <_IO_stdin_used+0xa75>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202056
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x7265762d,%eax
jae    907b <_IO_stdin_used+0xa7f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%esi)
jb     9090 <_IO_stdin_used+0xa94>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     9094 <_IO_stdin_used+0xa98>
popa
je     9093 <_IO_stdin_used+0xa97>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x20202068
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     9061 <_IO_stdin_used+0xa65>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x69687420,0x74(%esi),%ebp
jae    9073 <_IO_stdin_used+0xa77>
push   $0xa706c65
or     (%eax),%al
add    %al,(%eax)
and    $0x73692073,%eax
and    %ch,0x6e(%ecx)
and    %ah,(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x69746361,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
and    %ch,0x6f(%ebp)
fs
gs
sub    $0x20,%al
imul   $0x206c6c69,0x77(%eax,%eiz,1),%esi
dec    %esi
dec    %edi
push   %esp
and    %dh,0x72(%edi)
imul   $0x64206f74,0x20(%ebp,%eiz,2),%esi
imul   $0xa0a2e,0x6b(%ebx),%esi
or     %esi,0x6e(%ebp)
jne    910c <_IO_stdin_used+0xb10>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    90c6 <_IO_stdin_used+0xaca>
imul   $0x73207865,0x64(%esi),%ebp
jo     9110 <_IO_stdin_used+0xb14>
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
or     0x69772073,%ah
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x76(%edi)
gs
jb     9139 <_IO_stdin_used+0xb3d>
jb     912d <_IO_stdin_used+0xb31>
je     912b <_IO_stdin_used+0xb2f>
and    %dh,0x65(%eax,%ebp,2)
jae    9131 <_IO_stdin_used+0xb35>
and    %ah,0x72(%ecx)
gs
popa
jae    90f3 <_IO_stdin_used+0xaf7>
ja     913e <_IO_stdin_used+0xb42>
je     913f <_IO_stdin_used+0xb43>
cmp    (%eax),%ah
add    %al,(%eax)
add    %ah,0x69772073
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
jo     914d <_IO_stdin_used+0xb51>
popa
je     910b <_IO_stdin_used+0xb0f>
je     9155 <_IO_stdin_used+0xb59>
gs
jae    9155 <_IO_stdin_used+0xb59>
and    %ch,0x70(%edi)
gs
jb     9157 <_IO_stdin_used+0xb5b>
je     9161 <_IO_stdin_used+0xb65>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    911c <_IO_stdin_used+0xb20>
and    $0x69742064,%eax
insl   (%dx),%es:(%edi)
gs
jae    9133 <_IO_stdin_used+0xb37>
or     (%eax),%al
add    %cl,(%edx)
and    $0x69772073,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
imul   $0x35206e69,0x20(%bp),%ebp
and    %dh,0x65(%ebx)
arpl   %bp,0x6e(%edi)
fs
jae    9150 <_IO_stdin_used+0xb54>
and    %dh,0x72(%eax)
gs
jae    919d <_IO_stdin_used+0xba1>
and    %al,0x54(%ebx)
push   %edx
dec    %esp
sub    $0x6f742043,%eax
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jb     91ae <_IO_stdin_used+0xbb2>
or     %cs:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    91b0 <_IO_stdin_used+0xbb4>
outsb  %fs:(%esi),(%dx)
daa
je     9169 <_IO_stdin_used+0xb6d>
outsl  %ds:(%esi),(%dx)
jo     91b1 <_IO_stdin_used+0xbb5>
outsb  %ds:(%esi),(%dx)
and    %ah,(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6d(%ecx,%eiz,2)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
push   %edx
gs
jae    91dd <_IO_stdin_used+0xbe1>
fs outsb %fs:%gs:(%esi),(%dx)
je     9199 <_IO_stdin_used+0xb9d>
and    $0x49,%al
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    %ecx,%fs:(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     91c2 <_IO_stdin_used+0xbc6>
insl   (%dx),%es:(%edi)
popa
jo     91c6 <_IO_stdin_used+0xbca>
jb     921d <_IO_stdin_used+0xc21>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x726f6620,0x74(%ebx),%esi
and    %ah,(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    %ecx,%fs:(%edx)
add    %al,(%eax)
add    %ah,0x6d(%ecx,%eiz,2)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
and    $0x49,%al
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %dh,0x72(%eax)
gs
jae    925f <_IO_stdin_used+0xc63>
outsb  %ds:(%esi),(%dx)
je     9229 <_IO_stdin_used+0xc2d>
and    %ah,0x75(%edx)
je     9222 <_IO_stdin_used+0xc26>
ja     9269 <_IO_stdin_used+0xc6d>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     922b <_IO_stdin_used+0xc2f>
outsl  %ds:(%esi),(%dx)
jo     9273 <_IO_stdin_used+0xc77>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
and    %dh,0x69(%edi)
je     9284 <_IO_stdin_used+0xc88>
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    %ecx,%fs:(%edx)
add    %al,(%eax)
add    %al,(%eax)
fs
popa
insl   (%dx),%es:(%edi)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
and    $0x49,%al
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %dh,0x72(%eax)
gs
jae    92c3 <_IO_stdin_used+0xcc7>
outsb  %ds:(%esi),(%dx)
je     928d <_IO_stdin_used+0xc91>
and    %ah,0x75(%edx)
je     9286 <_IO_stdin_used+0xc8a>
ja     92cd <_IO_stdin_used+0xcd1>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     928f <_IO_stdin_used+0xc93>
outsl  %ds:(%esi),(%dx)
jo     92d7 <_IO_stdin_used+0xcdb>
outsb  %ds:(%esi),(%dx)
and    %ah,(%ecx,%ecx,2)
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
dec    %edi
dec    %edi
push   %esp
and    %dh,0x69(%edi)
je     92ec <_IO_stdin_used+0xcf0>
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    %ecx,%fs:(%edx)
add    %al,(%eax)
add    %al,(%eax)
fs
popa
insl   (%dx),%es:(%edi)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
dec    %esi
outsl  %ds:(%esi),(%dx)
je     92d0 <_IO_stdin_used+0xcd4>
jb     9317 <_IO_stdin_used+0xd1b>
jae    931d <_IO_stdin_used+0xd21>
fs outsb %fs:%gs:(%esi),(%dx)
je     92d9 <_IO_stdin_used+0xcdd>
and    $0x49,%al
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
push   %edx
dec    %edi
dec    %edi
push   %esp
and    %ch,(%eax)
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    %ecx,%fs:(%edx)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    9344 <_IO_stdin_used+0xd48>
outsb  %fs:(%esi),(%dx)
daa
je     92fd <_IO_stdin_used+0xd01>
fs
gs
je     9346 <_IO_stdin_used+0xd4a>
jb     9350 <_IO_stdin_used+0xd54>
imul   $0x7a697320,0x65(%esi),%ebp
and    %ch,%gs:0x66(%edi)
and    %cl,0x4e(%ecx)
inc    %esp
pop    %eax
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
or     %fs:(%eax),%al
fs
popa
insl   (%dx),%es:(%edi)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
jae    937f <_IO_stdin_used+0xd83>
pop    %edi
jo     937d <_IO_stdin_used+0xd81>
jae    9384 <_IO_stdin_used+0xd88>
pop    %edi
jb     9378 <_IO_stdin_used+0xd7c>
popa
fs
pop    %edi
imul   $0x2070,0x75(%eax),%di
popaw
imul   $0x4e490000,0x64(%ebp,%eiz,2),%ebp
inc    %esp
pop    %eax
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %dh,%fs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    93a1 <_IO_stdin_used+0xda5>
and    %ah,%fs:0x65(%edx)
and    %ah,0x79622075
je     93a6 <_IO_stdin_used+0xdaa>
jae    9343 <_IO_stdin_used+0xd47>
add    %ah,0x6d(%ecx,%eiz,2)
popa
gs and %ah,%fs:%gs:0x73(%bp)
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
jae    93c7 <_IO_stdin_used+0xdcb>
pop    %edi
jo     93c8 <_IO_stdin_used+0xdcc>
gs
pop    %edi
ja     93cc <_IO_stdin_used+0xdd0>
imul   $0x746f7270,0x5f(%ebp,%eiz,2),%esi
arpl   %si,%gs:0x66(%eax,%eiz,1)
popa
imul   $0x0,0x64(%ebp,%eiz,2),%ebp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    93e0 <_IO_stdin_used+0xde4>
outsb  %fs:(%esi),(%dx)
daa
je     9399 <_IO_stdin_used+0xd9d>
ja     93e4 <_IO_stdin_used+0xde8>
jo     93e2 <_IO_stdin_used+0xde6>
and    %dh,0x69(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,0x66(%edi)
and    %cl,0x4e(%ecx)
inc    %esp
pop    %eax
and    %dh,0x65(%edx)
arpl   %bp,0x72(%edi)
add    %al,%fs:(%eax)
add    %dh,0x69(%edi)
jo     93fd <_IO_stdin_used+0xe01>
pop    %edi
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    93c3 <_IO_stdin_used+0xdc7>
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     93d6 <_IO_stdin_used+0xdda>
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    93c0 <_IO_stdin_used+0xdc4>
add    %al,(%eax)
ja     9423 <_IO_stdin_used+0xe27>
jo     9421 <_IO_stdin_used+0xe25>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x3020,0x65(%si),%bp
js     93ed <_IO_stdin_used+0xdf1>
xor    %dh,(%edx)
js     93f8 <_IO_stdin_used+0xdfc>
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    93e2 <_IO_stdin_used+0xde6>
add    %al,(%eax)
add    %al,(%eax)
and    $0x75203a64,%eax
jae    9444 <_IO_stdin_used+0xe48>
pop    %edi
jae    944f <_IO_stdin_used+0xe53>
jp     944d <_IO_stdin_used+0xe51>
and    %ch,0x75(%edi)
je     940d <_IO_stdin_used+0xe11>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%edx)
jne    9462 <_IO_stdin_used+0xe66>
fs
jae    9417 <_IO_stdin_used+0xe1b>
sub    %ah,0xa2975
add    %al,(%eax)
add    %dh,0x69(%edi)
jo     9469 <_IO_stdin_used+0xe6d>
pop    %edi
jo     9468 <_IO_stdin_used+0xe6c>
imul   $0x3020,%gs:0x65(%si),%bp
js     9436 <_IO_stdin_used+0xe3a>
xor    %dh,(%edx)
js     9441 <_IO_stdin_used+0xe45>
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    942b <_IO_stdin_used+0xe2f>
add    %al,(%eax)
add    %dh,0x69(%edi)
jo     948d <_IO_stdin_used+0xe91>
pop    %edi
jne    9499 <_IO_stdin_used+0xe9d>
jne    94a0 <_IO_stdin_used+0xea4>
gs and %dh,%fs:%gs:(%eax)
js     9458 <_IO_stdin_used+0xe5c>
xor    %dh,(%edx)
js     9463 <_IO_stdin_used+0xe67>
and    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    944d <_IO_stdin_used+0xe51>
add    %ah,0x20646c6c
bound  %edi,0x74(%ecx)
gs
jae    946f <_IO_stdin_used+0xe73>
ja     94b6 <_IO_stdin_used+0xeba>
jb     94b8 <_IO_stdin_used+0xebc>
and    %dh,0x69(%edi)
jo     94bd <_IO_stdin_used+0xec1>
and    %ch,%fs:(%eax)
gs
js     94c1 <_IO_stdin_used+0xec5>
insb   (%dx),%es:(%edi)
jne    94c5 <_IO_stdin_used+0xec9>
imul   $0x646e7520,0x67(%esi),%ebp
gs
insb   (%dx),%es:(%edi)
gs
je     94d2 <_IO_stdin_used+0xed6>
and    %ah,0x74(%ecx,%eiz,2)
popa
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
sub    $0xdfffff56,%eax
push   %ebp
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0xb0ffff56
push   %ebp
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
jmp    *0x562dffff(%ebp,%edx,2)
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
ljmp   *0x6effff56
push   %ebp
(bad)
lcall  *0x49ffff92(%ecx)
xchg   %eax,%edx
(bad)
(bad)
cmp    $0x2dffff92,%eax
push   %esi
(bad)
pushl  (%ecx)
xchg   %eax,%edx
(bad)
ljmp   *0xb0ffff56
push   %ebp
(bad)
jmp    *0x55(%edi)
(bad)
ljmp   *0x2dffff56
push   %esi
(bad)
jmp    *%ebx
xchg   %eax,%edx
(bad)
(bad)
out    %eax,(%dx)
xchg   %eax,%edx
(bad)
decl   -0x1(%edx,%ebx,2)
ljmp   *0x88ffff56
pop    %edx
(bad)
pushl  0x5a(%eax)
(bad)
ljmp   *0x64ffff56
pop    %edx
(bad)
lcall  *0x5a(%eax)
(bad)
ljmp   *0x5a94ffff(%edx,%ebx,2)
(bad)
pushl  0x69(%edi)
jo     96bd <_IO_stdin_used+0x10c1>
pop    %edi
jne    96c9 <_IO_stdin_used+0x10cd>
jb     96ca <_IO_stdin_used+0x10ce>
add    %dh,0x69(%edi)
jo     96c7 <_IO_stdin_used+0x10cb>
pop    %edi
jne    96d3 <_IO_stdin_used+0x10d7>
jne    96da <_IO_stdin_used+0x10de>
gs add %dh,%fs:%gs:0x69(%edi)
jo     96d3 <_IO_stdin_used+0x10d7>
pop    %edi
jo     96d2 <_IO_stdin_used+0x10d6>
imul   $0x7700,%gs:0x65(%si),%bp
imul   $0x74666d5f,0x65(%eax),%esi
add    %dh,0x69(%edi)
jo     96ea <_IO_stdin_used+0x10ee>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x7700,0x65(%si),%bp
imul   $0x7474615f,0x65(%eax),%esi
jb     9701 <_IO_stdin_used+0x1105>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x69(%edi)
jo     9706 <_IO_stdin_used+0x110a>
pop    %edi
arpl   %bp,0x6d(%edi)
jo     9719 <_IO_stdin_used+0x111d>
gs
jae    971d <_IO_stdin_used+0x1121>
gs
fs
pop    %edi
popa
je     9724 <_IO_stdin_used+0x1128>
jb     971b <_IO_stdin_used+0x111f>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x69(%edi)
jo     9720 <_IO_stdin_used+0x1124>
pop    %edi
popa
je     9733 <_IO_stdin_used+0x1137>
jb     9720 <_IO_stdin_used+0x1124>
je     9724 <_IO_stdin_used+0x1128>
imul   $0x5f657069,0x77(%eax,%eax,1),%ebp
je     972e <_IO_stdin_used+0x1132>
imul   $0x65706977,0x0(%ebx,%esi,2),%ebp
pop    %edi
imul   $0x615f7865,0x64(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x74656700,0x6e(%edi),%ebp
pop    %edi
imul   $0x65725f78,0x64(%esi),%ebp
arpl   %bp,0x72(%edi)
fs
pop    %edi
jae    9762 <_IO_stdin_used+0x1166>
jp     9760 <_IO_stdin_used+0x1164>
add    %dh,0x69(%edi)
jo     9765 <_IO_stdin_used+0x1169>
pop    %edi
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    970b <_IO_stdin_used+0x110f>
jo     977f <_IO_stdin_used+0x1183>
imul   $0x6d75735f,0x74(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
jb     9791 <_IO_stdin_used+0x1195>
add    %dh,0x73(%ebp)
popa
add    %dh,%gs:0x65(%bp)
jb     9796 <_IO_stdin_used+0x119a>
imul   $0x72617000,0x6e(%edi),%ebp
jae    9791 <_IO_stdin_used+0x1195>
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x72617000,0x74(%ebx),%esi
jae    979c <_IO_stdin_used+0x11a0>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     97af <_IO_stdin_used+0x11b3>
imul   $0x616d0073,0x6e(%edi),%ebp
imul   $0x6c697475,0x0(%esi),%ebp
jae    9779 <_IO_stdin_used+0x117d>
arpl   %ax,(%eax)
push   %esp
push   $0x65642065
jbe    97be <_IO_stdin_used+0x11c2>
arpl   %sp,0x20(%ebp)
and    $0x6f642073,%eax
gs
jae    97ce <_IO_stdin_used+0x11d2>
daa
je     9783 <_IO_stdin_used+0x1187>
gs
js     97cf <_IO_stdin_used+0x11d3>
jae    97dc <_IO_stdin_used+0x11e0>
or     (%eax),%al
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     97d1 <_IO_stdin_used+0x11d5>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
je     97e2 <_IO_stdin_used+0x11e6>
outsb  %ds:(%esi),(%dx)
jne    97e1 <_IO_stdin_used+0x11e5>
or     %cs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    97fb <_IO_stdin_used+0x11ff>
je     97af <_IO_stdin_used+0x11b3>
daa
and    $0x49002773,%eax
outsb  %ds:(%esi),(%dx)
jbe    97f9 <_IO_stdin_used+0x11fd>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
daa
and    $0xa2e2773,%eax
add    %cl,0x6e(%ecx)
jbe    980d <_IO_stdin_used+0x1211>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     97d7 <_IO_stdin_used+0x11db>
daa
and    $0x27732a2e,%eax
or     %cs:(%eax),%al
cmp    $0x4d,%al
inc    %esi
push   %esp
and    $0x3e756c6c,%eax
add    %al,0x6f(%ebx)
jne    983a <_IO_stdin_used+0x123e>
outsb  %fs:(%esi),(%dx)
daa
je     97f3 <_IO_stdin_used+0x11f7>
outsl  %ds:(%esi),(%dx)
jo     983b <_IO_stdin_used+0x123f>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
and    $0x732563,%eax
push   %eax
popa
je     9856 <_IO_stdin_used+0x125a>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    9817 <_IO_stdin_used+0x121b>
je     986b <_IO_stdin_used+0x126f>
jne    9869 <_IO_stdin_used+0x126d>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
cmp    $0x55,%al
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,%ds:(%eax)
and    $0x43002973,%eax
outsl  %ds:(%esi),(%dx)
jne    9882 <_IO_stdin_used+0x1286>
outsb  %fs:(%esi),(%dx)
daa
je     983b <_IO_stdin_used+0x123f>
outsl  %ds:(%esi),(%dx)
jo     9883 <_IO_stdin_used+0x1287>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    9898 <_IO_stdin_used+0x129c>
outsb  %fs:(%esi),(%dx)
daa
je     9851 <_IO_stdin_used+0x1255>
jb     9898 <_IO_stdin_used+0x129c>
popa
and    %ah,%fs:(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    98ae <_IO_stdin_used+0x12b2>
outsb  %fs:(%esi),(%dx)
daa
je     9867 <_IO_stdin_used+0x126b>
jb     98ae <_IO_stdin_used+0x12b2>
popa
and    %ah,%fs:0x242f5446(,%ecx,2)
inc    %edx
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x72(%ebp)
jb     98cc <_IO_stdin_used+0x12d0>
jb     987f <_IO_stdin_used+0x1283>
jb     98c6 <_IO_stdin_used+0x12ca>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
dec    %edi
jne    98eb <_IO_stdin_used+0x12ef>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     98fa <_IO_stdin_used+0x12fe>
and    %ah,%cs:(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     98f3 <_IO_stdin_used+0x12f7>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    98ff <_IO_stdin_used+0x1303>
outsb  %fs:(%esi),(%dx)
daa
je     98b8 <_IO_stdin_used+0x12bc>
outsl  %ds:(%esi),(%dx)
jo     9900 <_IO_stdin_used+0x1304>
outsb  %ds:(%esi),(%dx)
and    %ah,0x242f5446(,%ecx,2)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
add    %al,0x6f(%ebx)
jne    9918 <_IO_stdin_used+0x131c>
outsb  %fs:(%esi),(%dx)
daa
je     98d1 <_IO_stdin_used+0x12d5>
jb     9918 <_IO_stdin_used+0x131c>
popa
and    %cl,%fs:0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x756c6c
inc    %ebp
jb     993b <_IO_stdin_used+0x133f>
outsl  %ds:(%esi),(%dx)
jb     98ec <_IO_stdin_used+0x12f0>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    9955 <_IO_stdin_used+0x1359>
je     9912 <_IO_stdin_used+0x1316>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
sub    $0x20,%al
jne    996f <_IO_stdin_used+0x1373>
imul   $0x66656420,0x67(%esi),%ebp
popa
jne    9972 <_IO_stdin_used+0x1376>
je     9928 <_IO_stdin_used+0x132c>
daa
and    $0xa2e2773,%eax
add    %al,(%eax)
inc    %ebp
jb     9985 <_IO_stdin_used+0x1389>
outsl  %ds:(%esi),(%dx)
jb     9936 <_IO_stdin_used+0x133a>
addr16
gs
je     998e <_IO_stdin_used+0x1392>
imul   $0x666e6920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     9991 <_IO_stdin_used+0x1395>
popa
je     9990 <_IO_stdin_used+0x1394>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    99a3 <_IO_stdin_used+0x13a7>
and    %ah,0x46000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     99a7 <_IO_stdin_used+0x13ab>
jb     99b1 <_IO_stdin_used+0x13b5>
imul   $0x65687720,0x65(%esi),%ebp
je     99b5 <_IO_stdin_used+0x13b9>
gs
jb     9970 <_IO_stdin_used+0x1374>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    99c8 <_IO_stdin_used+0x13cc>
je     99c1 <_IO_stdin_used+0x13c5>
add    %al,%fs:(%eax)
add    %dl,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     99cf <_IO_stdin_used+0x13d3>
and    %ch,%gs:0x70(%edi)
je     99db <_IO_stdin_used+0x13df>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2065726f,0x6e(%edi),%esp
je     99e9 <_IO_stdin_used+0x13ed>
imul   $0x6f727265,0x20(%ebx),%esi
jb     99b8 <_IO_stdin_used+0x13bc>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    9a05 <_IO_stdin_used+0x1409>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    9a16 <_IO_stdin_used+0x141a>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9a20 <_IO_stdin_used+0x1424>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     9a21 <_IO_stdin_used+0x1425>
popa
fs
jns    99e0 <_IO_stdin_used+0x13e4>
gs
js     9a26 <_IO_stdin_used+0x142a>
insb   (%dx),%es:(%edi)
jne    9a39 <_IO_stdin_used+0x143d>
imul   $0x6f20796c,0x65(%esi),%esi
jo     9a34 <_IO_stdin_used+0x1438>
outsb  %ds:(%esi),(%dx)
gs fs or %cs:%fs:%gs:0x65(%eax,%ebp,2),%dl
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9a4a <_IO_stdin_used+0x144e>
and    %ch,%gs:0x61(%ebp)
jns    9a03 <_IO_stdin_used+0x1407>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
jb     9a4f <_IO_stdin_used+0x1453>
popa
fs
jns    9a0e <_IO_stdin_used+0x1412>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    9a60 <_IO_stdin_used+0x1464>
je     9a59 <_IO_stdin_used+0x145d>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     9a1a <_IO_stdin_used+0x141e>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     9a67 <_IO_stdin_used+0x146b>
gs
jb     9a22 <_IO_stdin_used+0x1426>
jae    9a73 <_IO_stdin_used+0x1477>
data16
je     9a7e <_IO_stdin_used+0x1482>
popa
jb     9a6f <_IO_stdin_used+0x1473>
and    %ch,0x61(%ebp)
jns    9a2f <_IO_stdin_used+0x1433>
jne    9a84 <_IO_stdin_used+0x1488>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x68(%edi)
imul   $0x756f630a,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     9a94 <_IO_stdin_used+0x1498>
imul   $0x6620,0x64(%ebp),%sp
outsl  %ds:(%esi),(%dx)
jb     9a54 <_IO_stdin_used+0x1458>
gs
js     9a98 <_IO_stdin_used+0x149c>
insl   (%dx),%es:(%edi)
jo     9aa6 <_IO_stdin_used+0x14aa>
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     9a68 <_IO_stdin_used+0x146c>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
data16
jne    9ac6 <_IO_stdin_used+0x14ca>
gs
jb     9a7d <_IO_stdin_used+0x1481>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    9a88 <_IO_stdin_used+0x148c>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6f(%esi)
jb     9ad7 <_IO_stdin_used+0x14db>
and    %ch,%gs:0x70(%edi)
je     9ae3 <_IO_stdin_used+0x14e7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
jbe    9af2 <_IO_stdin_used+0x14f6>
imul   $0x20736968,0x74(%eax,%eiz,1),%esp
arpl   %bp,0x65(%eax)
arpl   %bp,0x2c(%ebx)
and    %ah,0x75(%edx)
je     9ab6 <_IO_stdin_used+0x14ba>
je     9b00 <_IO_stdin_used+0x1504>
imul   $0x6e207369,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
je     9ac2 <_IO_stdin_used+0x14c6>
jb     9b09 <_IO_stdin_used+0x150d>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:0x6e(%ecx),%ah
and    %ch,%fs:0x61(%ebp)
jns    9ad6 <_IO_stdin_used+0x14da>
insb   (%dx),%es:(%edi)
gs
popa
and    %dh,%fs:0x20(%edi,%ebp,2)
fs
popa
je     9b23 <_IO_stdin_used+0x1527>
and    %ah,0x6f(%ebx)
jb     9b39 <_IO_stdin_used+0x153d>
jne    9b39 <_IO_stdin_used+0x153d>
je     9b34 <_IO_stdin_used+0x1538>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x65642065
jbe    9b41 <_IO_stdin_used+0x1545>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    9b53 <_IO_stdin_used+0x1557>
daa
je     9b08 <_IO_stdin_used+0x150c>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    9b61 <_IO_stdin_used+0x1565>
and    %bh,%gs:0x6f(%ecx)
jne    9b25 <_IO_stdin_used+0x1529>
jae    9b6c <_IO_stdin_used+0x1570>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    9b85 <_IO_stdin_used+0x1589>
arpl   %sp,0x3f(%ebp)
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    9baa <_IO_stdin_used+0x15ae>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     9ba2 <_IO_stdin_used+0x15a6>
jb     9bb7 <_IO_stdin_used+0x15bb>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    9b83 <_IO_stdin_used+0x1587>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     9b7d <_IO_stdin_used+0x1581>
das
fs
gs
jbe    9b91 <_IO_stdin_used+0x1595>
push   $0x29316164
aas
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%edi)
push   $0x77207265
popa
jns    9b9a <_IO_stdin_used+0x159e>
popa
jb     9bec <_IO_stdin_used+0x15f0>
jne    9bed <_IO_stdin_used+0x15f1>
fs
aas
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    9bfc <_IO_stdin_used+0x1600>
jae    9c09 <_IO_stdin_used+0x160d>
outsb  %gs:(%esi),(%dx)
je     9bc7 <_IO_stdin_used+0x15cb>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %ch,0x6e(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     9c25 <_IO_stdin_used+0x1629>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
bound  %ebp,0x6f(%edi)
je     9bdf <_IO_stdin_used+0x15e3>
imul   $0x45434957,0x54(%eax,%eiz,1),%esi
and    %ecx,(%edx)
push   %esp
push   $0x73752065
popa
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
data16
and    %dh,0x61(%eax)
jb     9c42 <_IO_stdin_used+0x1646>
insl   (%dx),%es:(%edi)
gs
je     9c4a <_IO_stdin_used+0x164e>
jb     9c07 <_IO_stdin_used+0x160b>
imul   $0x79726576,0x20(%ebx),%esi
and    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
inc    %ecx
dec    %esi
push   %esp
and    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    9c18 <_IO_stdin_used+0x161c>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %dh,0x69(%eax,%ebp,2)
jae    9c43 <_IO_stdin_used+0x1647>
jae    9c94 <_IO_stdin_used+0x1698>
data16
je     9c9f <_IO_stdin_used+0x16a3>
popa
jb     9c90 <_IO_stdin_used+0x1694>
or     %cs:(%eax),%al
add    %al,(%eax)
push   %esp
push   $0x544e2065
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     9cb1 <_IO_stdin_used+0x16b5>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     9cb4 <_IO_stdin_used+0x16b8>
fs and %dl,%cs:%fs:0x6c(%eax)
gs
popa
jae    9cbd <_IO_stdin_used+0x16c1>
and    %dh,0x65(%edx)
jae    9cd2 <_IO_stdin_used+0x16d6>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     9cda <_IO_stdin_used+0x16de>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
and    %cl,(%edx)
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     9ce5 <_IO_stdin_used+0x16e9>
jb     9cee <_IO_stdin_used+0x16f2>
jns    9cb0 <_IO_stdin_used+0x16b4>
and    %dh,0x6f(%ebx)
and    %ch,0x6f(%ebp)
jne    9cfa <_IO_stdin_used+0x16fe>
je     9cf7 <_IO_stdin_used+0x16fb>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jne    9d01 <_IO_stdin_used+0x1705>
and    %ah,%fs:0x65(%edx)
and    %ah,0x6e(%edi,%ebp,2)
and    %dh,%gs:0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    9cd4 <_IO_stdin_used+0x16d8>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    9d21 <_IO_stdin_used+0x1725>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    9d32 <_IO_stdin_used+0x1736>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x6f(%edx)
jne    9d40 <_IO_stdin_used+0x1744>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %al,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x72612073,0x65(%ebx),%esp
cmp    %gs:(%edx),%cl
and    %al,0x29(%ecx)
and    %dl,0x68(%ebx)
jne    9d6c <_IO_stdin_used+0x1770>
outsl  %fs:(%esi),(%dx)
ja     9d6a <_IO_stdin_used+0x176e>
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     9d77 <_IO_stdin_used+0x177b>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     9d6f <_IO_stdin_used+0x1773>
jb     9d78 <_IO_stdin_used+0x177c>
jns    9d3c <_IO_stdin_used+0x1740>
or     (%eax),%ah
inc    %edx
sub    %esp,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x6b(%ebx),%esp
and    %ah,(%edi)
push   %ebx
popa
data16
gs
insb   (%dx),%es:(%edi)
jns    9d45 <_IO_stdin_used+0x1749>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    9d90 <_IO_stdin_used+0x1794>
and    %cl,0x61(%eax)
jb     9d94 <_IO_stdin_used+0x1798>
ja     9d93 <_IO_stdin_used+0x1797>
jb     9d99 <_IO_stdin_used+0x179d>
daa
and    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     9dbc <_IO_stdin_used+0x17c0>
and    %dh,0x73(%ecx,%eiz,2)
imul   $0x72,0x61(%edx),%esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x6f(%esi)
je     9dc3 <_IO_stdin_used+0x17c7>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
gs
popa
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     9dd3 <_IO_stdin_used+0x17d7>
and    %ah,0x73(%ecx,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %dh,0x68(%si)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x43200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
push   %ebp
jae    9df5 <_IO_stdin_used+0x17f9>
and    %ah,(%edi)
inc    %ebp
push   $0x65
arpl   %si,0x20(%edi,%eiz,1)
data16
jb     9e0b <_IO_stdin_used+0x180f>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     9e18 <_IO_stdin_used+0x181c>
and    %al,0x78(%ebp)
jo     9e16 <_IO_stdin_used+0x181a>
outsl  %ds:(%esi),(%dx)
jb     9e12 <_IO_stdin_used+0x1816>
jb     9dcf <_IO_stdin_used+0x17d3>
je     9e20 <_IO_stdin_used+0x1824>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    9dd9 <_IO_stdin_used+0x17dd>
jb     9e20 <_IO_stdin_used+0x1824>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    9e24 <_IO_stdin_used+0x1828>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x44200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    9df7 <_IO_stdin_used+0x17fb>
jb     9e3a <_IO_stdin_used+0x183e>
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
jo     9e56 <_IO_stdin_used+0x185a>
gs
jbe    9e50 <_IO_stdin_used+0x1854>
outsl  %ds:(%esi),(%dx)
jne    9e5d <_IO_stdin_used+0x1861>
insb   (%dx),%es:(%edi)
jns    9e0d <_IO_stdin_used+0x1811>
je     9e57 <_IO_stdin_used+0x185b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     9e17 <_IO_stdin_used+0x181b>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
addr16 popa
imul   $0x63696877,0x20(%esi),%ebp
push   $0x6c697720
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x75(%ecx)
je     9e87 <_IO_stdin_used+0x188b>
insl   (%dx),%es:(%edi)
popa
je     9e85 <_IO_stdin_used+0x1889>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    9e42 <_IO_stdin_used+0x1846>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x65687420,0x65(%edx),%edi
and    %ch,0x6f(%edx)
jne    9ea7 <_IO_stdin_used+0x18ab>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
inc    %ebp
sub    %esp,(%eax)
push   %ebx
jne    9ea3 <_IO_stdin_used+0x18a7>
insl   (%dx),%es:(%edi)
imul   $0x63726f66,0x27(%eax,%eiz,1),%esi
gs
daa
and    %ch,0x70(%edi)
je     9eba <_IO_stdin_used+0x18be>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x73207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    9edc <_IO_stdin_used+0x18e0>
imul   $0x20746920,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     9e93 <_IO_stdin_used+0x1897>
jb     9eda <_IO_stdin_used+0x18de>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs sub %ebp,%fs:%gs:(%esi)
or     (%eax),%ah
inc    %esi
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
je     9eee <_IO_stdin_used+0x18f2>
jae    9ef7 <_IO_stdin_used+0x18fb>
outsl  %ds:(%esi),(%dx)
jne    9efb <_IO_stdin_used+0x18ff>
je     9ec9 <_IO_stdin_used+0x18cd>
and    %cl,0x6f(%ebp)
jne    9f02 <_IO_stdin_used+0x1906>
je     9eb6 <_IO_stdin_used+0x18ba>
je     9f00 <_IO_stdin_used+0x1904>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    9f0c <_IO_stdin_used+0x1910>
and    %dh,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,(%edi)
jb     9f2a <_IO_stdin_used+0x192e>
daa
and    %ch,0x6f(%ebp)
jne    9f2f <_IO_stdin_used+0x1933>
je     9ee3 <_IO_stdin_used+0x18e7>
outsl  %ds:(%esi),(%dx)
jo     9f3a <_IO_stdin_used+0x193e>
imul   $0x59000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    9ef0 <_IO_stdin_used+0x18f4>
jae    9f37 <_IO_stdin_used+0x193b>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
popa
and    %dl,0x6f(%ebx)
data16
je     9f36 <_IO_stdin_used+0x193a>
inc    %ecx
dec    %ecx
inc    %esp
das
inc    %esi
popa
imul   $0x41,0x52(%ebp),%esp
dec    %ecx
inc    %esp
and    %ch,0x61(%eax)
jb     9f59 <_IO_stdin_used+0x195d>
ja     9f58 <_IO_stdin_used+0x195c>
jb     9f5e <_IO_stdin_used+0x1962>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x75(%ebp)
jae    9f76 <_IO_stdin_used+0x197a>
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x63(%ecx)
je     9f77 <_IO_stdin_used+0x197b>
jbe    9f71 <_IO_stdin_used+0x1975>
je     9f77 <_IO_stdin_used+0x197b>
fs
sub    $0xa,%al
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     9f3f <_IO_stdin_used+0x1943>
fs
gs
jbe    9f8c <_IO_stdin_used+0x1990>
arpl   %sp,0x20(%ebp)
jne    9f96 <_IO_stdin_used+0x199a>
fs
gs
jb     9f4c <_IO_stdin_used+0x1950>
das
fs
gs
jbe    9f60 <_IO_stdin_used+0x1964>
insl   (%dx),%es:(%edi)
popa
jo     9fa5 <_IO_stdin_used+0x19a9>
gs
jb     9f64 <_IO_stdin_used+0x1968>
and    %ch,(%eax)
gs cs and %ch,%cs:%gs:(%bx)
fs
gs
jbe    9f73 <_IO_stdin_used+0x1977>
insl   (%dx),%es:(%edi)
popa
jo     9fb8 <_IO_stdin_used+0x19bc>
gs
jb     9f7a <_IO_stdin_used+0x197e>
outsb  %ds:(%esi),(%dx)
jbe    9fb7 <_IO_stdin_used+0x19bb>
imul   $0x61686165,%fs:0x5f(%ecx),%esp
popa
bound  %esp,0x63(%ebx)
xor    %ebp,(%ecx)
or     0x20(%edi,%ebp,2),%dh
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    9fd2 <_IO_stdin_used+0x19d6>
je     9f86 <_IO_stdin_used+0x198a>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    9fd7 <_IO_stdin_used+0x19db>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
insl   (%dx),%es:(%edi)
jb     9fe1 <_IO_stdin_used+0x19e5>
imul   $0x75636f64,0x20(%edi,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     9fee <_IO_stdin_used+0x19f2>
je     9ff8 <_IO_stdin_used+0x19fc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     9fb6 <_IO_stdin_used+0x19ba>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    a012 <_IO_stdin_used+0x1a16>
and    %ch,%gs:0x73(%ecx)
and    %dh,0x63(%ebx)
push   $0x6c756465
gs and %ah,%fs:%gs:0x6f(%esi)
jb     9fd8 <_IO_stdin_used+0x19dc>
arpl   %bp,0x65(%eax)
arpl   %bp,0x2e(%ebx)
or     0x6c(%eax),%dl
gs
popa
jae    a02a <_IO_stdin_used+0x1a2e>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     9feb <_IO_stdin_used+0x19ef>
imul   $0x6957206f,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     a04a <_IO_stdin_used+0x1a4e>
and    %dl,0x49(%edi,%edx,2)
inc    %ebx
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     a002 <_IO_stdin_used+0x1a06>
jne    a057 <_IO_stdin_used+0x1a5b>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     a052 <_IO_stdin_used+0x1a56>
gs
daa
and    %ch,0x70(%edi)
je     a05f <_IO_stdin_used+0x1a63>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:0x4f(%esi),%cl
push   %esp
inc    %ebp
cmp    (%eax),%ah
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    a027 <_IO_stdin_used+0x1a2b>
push   $0x6e206461
outsl  %ds:(%esi),(%dx)
je     a02f <_IO_stdin_used+0x1a33>
jae    a074 <_IO_stdin_used+0x1a78>
push   $0x6c756465
gs and %ah,%fs:%gs:0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx,%eiz,2)
je     a048 <_IO_stdin_used+0x1a4c>
je     a093 <_IO_stdin_used+0x1a97>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    a099 <_IO_stdin_used+0x1a9d>
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    a05b <_IO_stdin_used+0x1a5f>
jbe    a0ac <_IO_stdin_used+0x1ab0>
insb   (%dx),%es:(%edi)
jne    a0ad <_IO_stdin_used+0x1ab1>
or     %gs:0x73(%ebp),%dh
imul   $0x66746e20,0x67(%esi),%ebp
jae    a0ba <_IO_stdin_used+0x1abe>
outsl  %ds:(%esi),(%dx)
jne    a0be <_IO_stdin_used+0x1ac2>
je     a072 <_IO_stdin_used+0x1a76>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%ebx)
jne    a0ce <_IO_stdin_used+0x1ad2>
outsl  %fs:(%esi),(%dx)
ja     a0cc <_IO_stdin_used+0x1ad0>
and    %dh,0x79(%ebx)
jae    a0d7 <_IO_stdin_used+0x1adb>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     a0d0 <_IO_stdin_used+0x1ad4>
jb     a0d9 <_IO_stdin_used+0x1add>
jns    a09b <_IO_stdin_used+0x1a9f>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
imul   $0x70697263,0x73(%eax,%eiz,1),%esi
je     a0f4 <_IO_stdin_used+0x1af8>
and    %ch,0x6e(%ecx)
and    %bh,0x6f(%ecx)
jne    a0fb <_IO_stdin_used+0x1aff>
or     0x73(%ecx,%ebp,2),%ah
je     a101 <_IO_stdin_used+0x1b05>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x2e,0x6e(%ebp),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    a10e <_IO_stdin_used+0x1b12>
and    %dh,0x65(%edx)
jo     a11d <_IO_stdin_used+0x1b21>
jb     a124 <_IO_stdin_used+0x1b28>
and    %dh,0x20(%edi,%ebp,2)
jns    a125 <_IO_stdin_used+0x1b29>
jne    a12a <_IO_stdin_used+0x1b2e>
and    %ah,0x73(%ecx,%ebp,2)
je     a130 <_IO_stdin_used+0x1b34>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     a133 <_IO_stdin_used+0x1b37>
jb     a143 <_IO_stdin_used+0x1b47>
or     (%eax),%ch
dec    %esi
dec    %edi
push   %esp
and    %dh,0x20(%edi,%ebp,2)
jne    a14e <_IO_stdin_used+0x1b52>
and    %ebp,(%ecx)
and    %dh,0x61(%eax,%ebp,2)
je     a103 <_IO_stdin_used+0x1b07>
imul   $0x63732074,0x69(%esi),%ebp
jb     a155 <_IO_stdin_used+0x1b59>
jo     a162 <_IO_stdin_used+0x1b66>
jae    a110 <_IO_stdin_used+0x1b14>
imul   $0x6c,0x6c(%ecx),%ebp
and    %ch,0x74(%esi)
data16
jae    a167 <_IO_stdin_used+0x1b6b>
outsl  %ds:(%esi),(%dx)
jne    a16b <_IO_stdin_used+0x1b6f>
je     a11f <_IO_stdin_used+0x1b23>
outsl  %ds:(%esi),(%dx)
jb     a122 <_IO_stdin_used+0x1b26>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    a174 <_IO_stdin_used+0x1b78>
je     a136 <_IO_stdin_used+0x1b3a>
outsb  %ds:(%esi),(%dx)
je     a171 <_IO_stdin_used+0x1b75>
jae    a13a <_IO_stdin_used+0x1b3e>
data16
jne    a183 <_IO_stdin_used+0x1b87>
and    %ah,%gs:0x72(%ebp,%esi,2)
imul   $0x7568730a,0x67(%esi),%ebp
je     a182 <_IO_stdin_used+0x1b86>
outsl  %ds:(%esi),(%dx)
ja     a18f <_IO_stdin_used+0x1b93>
and    %ch,0x6e(%ecx)
jae    a19a <_IO_stdin_used+0x1b9e>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     a197 <_IO_stdin_used+0x1b9b>
jb     a154 <_IO_stdin_used+0x1b58>
jne    a1a3 <_IO_stdin_used+0x1ba7>
outsl  %ds:(%esi),(%dx)
jne    a1a7 <_IO_stdin_used+0x1bab>
je     a169 <_IO_stdin_used+0x1b6d>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6f762079,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    a1c1 <_IO_stdin_used+0x1bc5>
and    %ch,%gs:0x6f(%ebp)
jne    a1c8 <_IO_stdin_used+0x1bcc>
je     a17c <_IO_stdin_used+0x1b80>
ja     a1bf <_IO_stdin_used+0x1bc3>
jae    a180 <_IO_stdin_used+0x1b84>
outsw  %ds:(%esi),(%dx)
jb     a1c7 <_IO_stdin_used+0x1bcb>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     a1d6 <_IO_stdin_used+0x1bda>
gs
daa
and    %ch,0x6f(%ebp)
jne    a1e8 <_IO_stdin_used+0x1bec>
je     a19c <_IO_stdin_used+0x1ba0>
outsl  %ds:(%esi),(%dx)
jo     a1f3 <_IO_stdin_used+0x1bf7>
imul   $0xa2e,0x6e(%edi),%ebp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     a1f1 <_IO_stdin_used+0x1bf5>
jb     a1fc <_IO_stdin_used+0x1c00>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     a204 <_IO_stdin_used+0x1c08>
jb     a1c3 <_IO_stdin_used+0x1bc7>
and    %dh,0x74(%ebx)
jb     a210 <_IO_stdin_used+0x1c14>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
daa
je     a1c7 <_IO_stdin_used+0x1bcb>
jb     a20e <_IO_stdin_used+0x1c12>
je     a220 <_IO_stdin_used+0x1c24>
jb     a21b <_IO_stdin_used+0x1c1f>
and    %ah,0x20(%ecx)
jae    a227 <_IO_stdin_used+0x1c2b>
data32 imul $0xa,0x2e(%eax),%di
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    a221 <_IO_stdin_used+0x1c25>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
jae    a240 <_IO_stdin_used+0x1c44>
data32 imul $0x2527,0x20(%eax),%di
jae    a1fb <_IO_stdin_used+0x1bff>
and    %ah,%cs:(%eax)
push   %ebp
jae    a23f <_IO_stdin_used+0x1c43>
and    %dl,0x20(%esp,%ebp,1)
inc    %edi
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     a207 <_IO_stdin_used+0x1c0b>
dec    %ebx
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    a25c <_IO_stdin_used+0x1c60>
outsb  %fs:(%esi),(%dx)
daa
je     a215 <_IO_stdin_used+0x1c19>
arpl   %si,0x65(%edx)
popa
je     a260 <_IO_stdin_used+0x1c64>
and    %ah,0x20(%ecx)
jae    a265 <_IO_stdin_used+0x1c69>
popa
jb     a266 <_IO_stdin_used+0x1c6a>
push   $0x6e6f6320
je     a26f <_IO_stdin_used+0x1c73>
js     a280 <_IO_stdin_used+0x1c84>
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    a280 <_IO_stdin_used+0x1c84>
outsb  %fs:(%esi),(%dx)
daa
je     a239 <_IO_stdin_used+0x1c3d>
je     a28d <_IO_stdin_used+0x1c91>
popa
outsb  %ds:(%esi),(%dx)
jae    a28b <_IO_stdin_used+0x1c8f>
popa
je     a287 <_IO_stdin_used+0x1c8b>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     a299 <_IO_stdin_used+0x1c9d>
outsb  %ds:(%esi),(%dx)
je     a257 <_IO_stdin_used+0x1c5b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
push   %esp
push   $0x69642065
jb     a2ad <_IO_stdin_used+0x1cb1>
arpl   %si,0x72(%edi,%ebp,2)
jns    a26e <_IO_stdin_used+0x1c72>
jae    a2c4 <_IO_stdin_used+0x1cc8>
jb     a2c7 <_IO_stdin_used+0x1ccb>
arpl   %si,0x72(%ebp,%esi,2)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     a284 <_IO_stdin_used+0x1c88>
sub    %ch,0x76(%edi)
gs
jb     a28a <_IO_stdin_used+0x1c8e>
and    $0x6e202964,%eax
gs
jae    a2e6 <_IO_stdin_used+0x1cea>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0xa2e,0x73(%ebp),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    a2f4 <_IO_stdin_used+0x1cf8>
outsb  %fs:(%esi),(%dx)
daa
je     a2ad <_IO_stdin_used+0x1cb1>
je     a301 <_IO_stdin_used+0x1d05>
popa
outsb  %ds:(%esi),(%dx)
jae    a2ff <_IO_stdin_used+0x1d03>
popa
je     a2fb <_IO_stdin_used+0x1cff>
and    %ah,0x74(%ecx)
je     a30d <_IO_stdin_used+0x1d11>
imul   $0x74206574,0x75(%edx),%esp
jns    a314 <_IO_stdin_used+0x1d18>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     a313 <_IO_stdin_used+0x1d17>
outsb  %ds:(%esi),(%dx)
je     a2d1 <_IO_stdin_used+0x1cd5>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     a33a <_IO_stdin_used+0x1d3e>
imul   $0x74206574,0x75(%edx),%esp
jns    a341 <_IO_stdin_used+0x1d45>
and    %dh,%gs:(%eax)
js     a2fb <_IO_stdin_used+0x1cff>
xor    %dh,(%edx)
js     a2e4 <_IO_stdin_used+0x1ce8>
add    %al,(%eax)
inc    %ecx
je     a353 <_IO_stdin_used+0x1d57>
jb     a34a <_IO_stdin_used+0x1d4e>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    a30f <_IO_stdin_used+0x1d13>
je     a363 <_IO_stdin_used+0x1d67>
jne    a361 <_IO_stdin_used+0x1d65>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x6f(%ebx)
jne    a36c <_IO_stdin_used+0x1d70>
outsb  %fs:(%esi),(%dx)
daa
je     a325 <_IO_stdin_used+0x1d29>
je     a379 <_IO_stdin_used+0x1d7d>
popa
outsb  %ds:(%esi),(%dx)
jae    a377 <_IO_stdin_used+0x1d7b>
popa
je     a373 <_IO_stdin_used+0x1d77>
and    %ah,0x74(%ecx)
je     a385 <_IO_stdin_used+0x1d89>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     a38b <_IO_stdin_used+0x1d8f>
outsb  %ds:(%esi),(%dx)
je     a349 <_IO_stdin_used+0x1d4d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ecx
je     a3ab <_IO_stdin_used+0x1daf>
jb     a3a2 <_IO_stdin_used+0x1da6>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    a367 <_IO_stdin_used+0x1d6b>
je     a3bb <_IO_stdin_used+0x1dbf>
jne    a3b9 <_IO_stdin_used+0x1dbd>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x72(%ebp)
jb     a3c7 <_IO_stdin_used+0x1dcb>
jb     a37a <_IO_stdin_used+0x1d7e>
jb     a3c1 <_IO_stdin_used+0x1dc5>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     a3de <_IO_stdin_used+0x1de2>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
push   %esp
push   $0x70207369
jb     a3f3 <_IO_stdin_used+0x1df7>
addr16 jb a3e8 <_IO_stdin_used+0x1dec>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x6f(%ebx)
data16
je     a40d <_IO_stdin_used+0x1e11>
popa
jb     a3fe <_IO_stdin_used+0x1e02>
sub    $0x20,%al
jb     a402 <_IO_stdin_used+0x1e06>
insb   (%dx),%es:(%edi)
gs
popa
jae    a407 <_IO_stdin_used+0x1e0b>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     a3ca <_IO_stdin_used+0x1dce>
je     a414 <_IO_stdin_used+0x1e18>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     a419 <_IO_stdin_used+0x1e1d>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    a42d <_IO_stdin_used+0x1e31>
or     0x6e(%ecx),%ah
and    %bh,%fs:0x6f(%ecx)
jne    a3f1 <_IO_stdin_used+0x1df5>
popa
jb     a439 <_IO_stdin_used+0x1e3d>
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jb     a447 <_IO_stdin_used+0x1e4b>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     a451 <_IO_stdin_used+0x1e55>
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     a416 <_IO_stdin_used+0x1e1a>
arpl   %sp,0x72(%ebp)
je     a45c <_IO_stdin_used+0x1e60>
imul   $0x646e6f63,0x20(%esi),%ebp
imul   $0x202e736e,0x6f(%ecx,%ebp,2),%esi
and    %cl,0x74(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
jae    a434 <_IO_stdin_used+0x1e38>
ja     a47f <_IO_stdin_used+0x1e83>
je     a480 <_IO_stdin_used+0x1e84>
or     0x42(%ecx),%al
push   %ebx
dec    %edi
dec    %esp
push   %ebp
push   %esp
inc    %ebp
dec    %esp
pop    %ecx
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jb     a455 <_IO_stdin_used+0x1e59>
fs
gs
je     a49a <_IO_stdin_used+0x1e9e>
imul   $0x64616572,0x20(%ebx,%esi,2),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     a4b1 <_IO_stdin_used+0x1eb5>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    a4c5 <_IO_stdin_used+0x1ec9>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0xa(%ebp)
outsw  %ds:(%esi),(%dx)
jne    a4d9 <_IO_stdin_used+0x1edd>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
dec    %ecx
dec    %esi
inc    %edi
and    (%eax),%ah
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     a4f2 <_IO_stdin_used+0x1ef6>
and    %dh,%fs:0x69(%edi)
je     a4fb <_IO_stdin_used+0x1eff>
and    %dh,0x69(%eax,%ebp,2)
jae    a4b9 <_IO_stdin_used+0x1ebd>
jo     a50d <_IO_stdin_used+0x1f11>
outsl  %ds:(%esi),(%dx)
addr16 jb a500 <_IO_stdin_used+0x1f04>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     a4c5 <_IO_stdin_used+0x1ec9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x3a746120,0x65(%esi),%ebp
or     0x74(%eax),%ch
je     a524 <_IO_stdin_used+0x1f28>
cmp    (%edi),%ch
das
ja     a530 <_IO_stdin_used+0x1f34>
ja     a4e9 <_IO_stdin_used+0x1eed>
outsb  %ds:(%si),(%dx)
jne    a4ed <_IO_stdin_used+0x1ef1>
outsl  %ds:(%esi),(%dx)
jb     a529 <_IO_stdin_used+0x1f2d>
das
arpl   %bp,0x70(%edi)
jns    a534 <_IO_stdin_used+0x1f38>
gs
data16
je     a4fb <_IO_stdin_used+0x1eff>
addr16 jo a53b <_IO_stdin_used+0x1f3f>
cs
push   $0xa6c6d74
add    %al,(%eax)
add    %al,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     a545 <_IO_stdin_used+0x1f49>
jb     a555 <_IO_stdin_used+0x1f59>
daa
and    %ah,0x6d(%ebp)
popa
imul   $0x65726464,0x61(%eax,%eiz,1),%ebp
jae    a564 <_IO_stdin_used+0x1f68>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
je     a55c <_IO_stdin_used+0x1f60>
jae    a525 <_IO_stdin_used+0x1f29>
xor    0x2d(%edi),%esp
fs
gs
jbe    a564 <_IO_stdin_used+0x1f68>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     a518 <_IO_stdin_used+0x1f1c>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
data16
je     a573 <_IO_stdin_used+0x1f77>
outsb  %ds:(%esi),(%dx)
gs
js     a58c <_IO_stdin_used+0x1f90>
pop    %edi
jb     a580 <_IO_stdin_used+0x1f84>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x74(%ebp)
imul   $0x7274666d,0x5f(%ebx,%esi,2),%ebp
arpl   %bx,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    a5a5 <_IO_stdin_used+0x1fa9>
add    %dh,%gs:0x74(%ebp)
imul   $0x73756c63,0x5f(%ebx,%esi,2),%ebp
je     a5a5 <_IO_stdin_used+0x1fa9>
jb     a5a1 <_IO_stdin_used+0x1fa5>
imul   $0x657375,0x5f(%esi),%ebp
jne    a5bf <_IO_stdin_used+0x1fc3>
imul   $0x72747461,0x5f(%ebx,%esi,2),%ebp
pop    %edi
addr16
gs
je     a5b7 <_IO_stdin_used+0x1fbb>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebp)
imul   $0x646f6e69,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
addr16
gs
je     a5cc <_IO_stdin_used+0x1fd0>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f74,0x73(%edx),%si
popa
je     a5f4 <_IO_stdin_used+0x1ff8>
jb     a5eb <_IO_stdin_used+0x1fef>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x74(%ebp)
imul   $0x73726170,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
jae    a5fe <_IO_stdin_used+0x2002>
jp     a5fc <_IO_stdin_used+0x2000>
add    %dh,0x74(%ebp)
imul   $0x6e756f6d,0x5f(%ebx,%esi,2),%ebp
je     a603 <_IO_stdin_used+0x2007>
jbe    a615 <_IO_stdin_used+0x2019>
insb   (%dx),%es:(%edi)
jne    a616 <_IO_stdin_used+0x201a>
add    %dh,%gs:0x74(%ebp)
imul   $0x696c6176,0x5f(%ebx,%esi,2),%ebp
fs
pop    %edi
fs
gs
jbe    a624 <_IO_stdin_used+0x2028>
arpl   %sp,0x0(%ebp)
jne    a634 <_IO_stdin_used+0x2038>
imul   $0x5f746573,0x5f(%ebx,%esi,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
rolb   (%eax)
add    %al,(%eax)
sbb    %eax,(%eax)
add    %al,(%eax)
loopne a647 <_IO_stdin_used+0x204b>
(bad)
(bad)
in     (%dx),%al
add    %al,(%eax)
add    %dl,-0x2f000093(%eax)
add    %eax,(%eax)
add    %dl,-0x51(%eax)
(bad)
call   *(%eax)
add    %eax,(%eax)
add    %ah,(%eax)
mov    $0xff,%al
decl   0x0(%ecx,%eax,1)
add    %dh,-0x41(%eax)
(bad)
call   *-0x6fffffff(%eax)
sar    $0xff,%bh
sbb    %al,(%edx)
add    %al,(%eax)
xor    %al,%cl
(bad)
incl   0x0(%edx,%eax,1)
add    %al,(%eax)
ret    $0xffff
pushf
add    (%eax),%al
add    %dl,%al
(bad)
(bad)
jmp    *(%eax)
add    (%eax),%eax
add    %ah,%al
(bad)
(bad)
(bad)
js     a62d <_IO_stdin_used+0x2031>
add    %al,(%eax)
mov    $0xca,%al
(bad)
call   *%esp
add    (%eax),%eax
add    %dl,%al
lret
(bad)
pushl  (%eax)
add    $0x0,%al
add    %ah,-0x34(%eax)
(bad)
jmp    *0x4(%eax)
add    %al,(%eax)
adc    %cl,%ch
(bad)
lcall  *0x4(%eax)
sar    %edi
decl   (%eax)
add    $0xd3b00000,%eax
(bad)
jmp    *0x5(%eax)
add    %al,(%eax)
nop
aad    $0xff
jmp    *0x5(%eax)
xlat   %ds:(%ebx)
(bad)
jmp    *%eax
add    $0xd8100000,%eax
(bad)
jmp    *(%eax)
push   %es
add    %al,(%eax)
and    %bl,%al
(bad)
pushl  (%esi,%eax,1)
add    %al,(%eax)
sbb    $0xff,%al
jmp    *0x6(%eax)
add    %al,(%eax)
rcr    $0xff,%al
decl   -0x21c00000(%esi,%eax,1)
(bad)
call   *(%edi,%eax,1)
add    %al,(%eax)
mov    0x80ffffdf,%al
pop    %es
add    %al,(%eax)
adc    %ah,%al
(bad)
(bad)
.byte 0xbc
pop    %es
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     a6bb <_IO_stdin_used+0x20bf>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
push   $0x3b0ffff
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     a6db <_IO_stdin_used+0x20df>
js     a6d9 <_IO_stdin_used+0x20dd>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
cmp    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%eax)
scas   %es:(%edi),%al
(bad)
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %cl,%ah
scas   %es:(%edi),%al
(bad)
incl   0xf(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
orl    $0xe,(%edx,%ecx,1)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %bl,%al
mov    $0x120ffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5,0x3300e4e
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %bh,0x58ffff6b(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x1(%esp,%ecx,1)
add    %al,0x10(%edi)
add    $0x46007502,%eax
lsl    0x70(%ebp),%esi
push   %es
adc    %al,(%edi)
add    0x7c(%ebp),%dh
adc    %al,(%esi)
add    0x78(%ebp),%dh
adc    %al,(%ebx)
add    0x74(%ebp),%dh
add    (%esp,%eax,1),%eax
or     %cl,%al
or     $0x1,%al
add    %al,-0x3d(%ecx)
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    0xc(%ebx),%eax
add    $0x4,%al
inc    %ecx
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
jo     a7b0 <_IO_stdin_used+0x21b4>
(bad)
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %ah,%ah
mov    $0xc9ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %cl,%ah
add    %eax,(%eax)
add    %bl,-0x1(%edi,%edi,4)
dec    %eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0x43140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
test   $0xc1,%al
(bad)
decl   (%edi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
test   $0x2,%al
add    %al,(%eax)
pusha
(bad)
(bad)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
or     %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
add    $0x3,%al
add    %al,(%eax)
aam    $0xc6
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pusha
add    (%eax),%eax
add    %bl,-0x78000039(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebp),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
nop
add    (%eax),%eax
add    %bh,%al
(bad)
(bad)
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,%al
add    (%eax),%eax
add    %dh,-0x38(%eax)
(bad)
jmp    *%esi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ecx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
add    $0x0,%al
add    %dh,%al
lret
(bad)
jmp    *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x61500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
nop
add    $0x0,%al
add    %cl,-0x32(%eax)
(bad)
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rolb   (%eax,%eax,1)
add    %ch,%al
iret
(bad)
ljmp   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
adc    %al,0xd1180000
(bad)
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
add    $0xd1e80000,%eax
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp,%eax,1)
add    %ah,%ah
sar    %edi
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,0x18000005(%eax)
sar    %cl,%bh
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
mov    $0x2c000005,%esp
sar    %cl,%bh
(bad)
jg     ac6f <_IO_stdin_used+0x2673>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x44000000
push   %es
add    %al,(%eax)
and    $0xd7,%al
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     ad13 <_IO_stdin_used+0x2717>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    ad4a <_IO_stdin_used+0x274e>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,0x18000006(%eax)
fdivr  %st(7),%st
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,%ah
push   %es
add    %al,(%eax)
dec    %esp
fdivr  %st(7),%st
incl   (%edx)
loopne be1e <_IO_stdin_used+0x3822>
nop
push   %esp
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   $0x3
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
mov    %cs,(%edi)
add    %al,(%eax)
or     $0xe4000000,%eax
test   %eax,(%eax)
add    %bl,(%ecx)
add    %al,(%eax)
add    %cl,%al
mov    $0x1b0000,%ebp
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
int3
mov    $0x1c0000,%ebp
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0xf8000000
push   %es
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %dh,0xb000004(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %dl,%ah
mov    $0x20000,%esi
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bh,0x110000(%ebp,%ecx,1)
add    %al,(%eax)
pushf
or     $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %eax,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x4c(%edi)
or     $0x0,%al
add    %bh,%bh
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x56(%edi)
or     (%eax),%eax
add    %bh,%dl
(bad)
ljmp   *0x17(%edi)
aam    $0xbd
add    %al,(%eax)
(bad)
sldt   (%eax)
(bad)
sldt   (%eax)
out    %al,$0xf
add    %al,(%eax)
(bad)
sldt   (%eax)
push   %es
adc    %al,(%eax)
add    %dl,(%esi)
adc    %al,(%eax)
add    %ah,(%esi)
adc    %al,(%eax)
add    %dh,(%esi)
adc    %al,(%eax)
add    %al,0x10(%esi)
add    %al,(%eax)
push   %esi
adc    %al,(%eax)
add    %ah,0x10(%esi)
add    %al,(%eax)
jbe    bf1e <_IO_stdin_used+0x3922>
add    %al,(%eax)
xchg   %dl,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
adc    %al,(%eax)
add    %ah,-0x49fffff0(%esi)
adc    %al,(%eax)
add    %al,%dh
adc    %al,(%eax)
add    %dl,%dh
adc    %al,(%eax)
add    %ah,%dh
adc    %al,(%eax)
add    %dh,%dh
adc    %al,(%eax)
add    %al,(%esi)
adc    %eax,(%eax)
add    %dl,(%esi)
adc    %eax,(%eax)
add    %ah,(%esi)
adc    %eax,(%eax)
add    %dh,(%esi)
adc    %eax,(%eax)
add    %al,0x11(%esi)
add    %al,(%eax)
push   %esi
adc    %eax,(%eax)
add    %ah,0x11(%esi)
add    %al,(%eax)
jbe    bf5f <_IO_stdin_used+0x3963>
add    %al,(%eax)
xchg   %dl,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
adc    %eax,(%eax)
add    %ah,-0x49ffffef(%esi)
adc    %eax,(%eax)
add    %al,%dh
adc    %eax,(%eax)
add    %dl,%dh
adc    %eax,(%eax)
add    %ah,%dh
adc    %eax,(%eax)
add    %dh,%dh
adc    %eax,(%eax)
add    %al,(%esi)
adc    (%eax),%al
add    %dl,(%esi)
adc    (%eax),%al
add    %ah,(%esi)
adc    (%eax),%al
add    %dh,(%esi)
adc    (%eax),%al
add    %al,0x12(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%al
add    %ah,0x12(%esi)
add    %al,(%eax)
jbe    bfa0 <_IO_stdin_used+0x39a4>
add    %al,(%eax)
xchg   %dl,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
adc    (%eax),%al
add    %ah,-0x49ffffee(%esi)
adc    (%eax),%al
add    %al,%dh
adc    (%eax),%al
add    %dl,%dh
adc    (%eax),%al
add    %ah,%dh
adc    (%eax),%al
add    %dh,%dh
adc    (%eax),%al
add    %al,(%esi)
adc    (%eax),%eax
add    %dl,(%esi)
adc    (%eax),%eax
add    %ah,(%esi)
adc    (%eax),%eax
add    %dh,(%esi)
adc    (%eax),%eax
add    %al,0x13(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%eax
add    %ah,0x13(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0xc0,%al
add    %al,(%eax)
pop    %ebx
mov    %eax,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
push   $0x1000088
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
pop    %edi
mov    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
mov    %eax,%gs:(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %ch,-0x77(%edi)
add    %al,(%eax)
data16
add    %al,(%eax)
add    %dh,-0x77(%ebp)
add    %al,(%eax)
push   $0x7a000000
mov    %eax,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
jg     c01b <_IO_stdin_used+0x3a1f>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,0x89(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
mov    0x0(%ecx),%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,0x89(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
sahf
mov    %eax,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    %eax,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %ch,0x89(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
mov    $0x89,%cl
add    %al,(%eax)
jae    c10e <_IO_stdin_used+0x3b12>
add    %al,(%eax)
mov    $0x89,%bh
add    %al,(%eax)
jbe    c11e <_IO_stdin_used+0x3b22>
add    %al,(%eax)
mov    $0x89,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
(bad)
out    %eax,(%dx)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
lock (bad)
incl   (%eax)
add    %al,(%eax)
jl     c0f5 <_IO_stdin_used+0x3af9>
.byte 0xd8
movsb  %ds:(%esi),%es:(%edi)
cmp    %dh,(%esi)
data16
fs
aaa
xor    $0x63323135,%eax
xor    %esp,0x38(%ebx)
xor    $0x32303130,%eax
popa
popa
xor    %ah,0x64(%ecx)
arpl   %si,(%edx)
cmp    %esp,0x38(%esi)
popa
cmp    %ah,0x32(%ecx,%esi,1)
data16
aaa
xor    %esi,%gs:(%esi,%ebp,1)
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
sahf
sbb    %eax,%ebp
.byte 0xbf
