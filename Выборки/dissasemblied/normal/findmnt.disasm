das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dl,-0x6c53a8f1(%ebp)
xor    %ebx,%ebp
sub    %ecx,(%edi)
dec    %ebp
std
clc
mov    $0x74,%al
cmp    $0x2a,%al
pop    %eax
outsb  %ds:(%esi),(%dx)
.byte 0x19
dec    %ecx
add    (%eax),%eax
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x81f8c21(%edx)
add    $0x0,%al
add    %esp,0x64000004(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x297c92e3,%edx
sbb    $0x50bc1c8c,%eax
jbe    8048186 <_init-0x12a6>
cmp    %dh,%dl
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  80481b0 <_init-0x127c>
fdivs  0x58(%ecx)
sbb    $0xe4,%al
bound  %eax,-0xb(%ecx)
mov    $0xea0ef18d,%ecx
shr    %cl,%edi
push   %cs
xor    %ah,%al
notl   (%edx)
mov    $0xa2,%bl
notl   (%edx)
pushf
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%eax,%eax,1)
adc    (%eax),%al
add    %al,(%eax)
nop
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,$0x3
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x5
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x4
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    $0x3,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x4(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x5,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
iret
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x4
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,0x0
00
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fldl   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%edx),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
clc
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x4(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
into
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esp,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    $0x12e00000,%eax
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%eax)
add    %bh,%bh
add    $0x13980000,%eax
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %ch,0x20000004(%ebp)
adc    0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,%ch
add    $0x12e00000,%eax
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bh,%dh
add    $0x0,%al
add    %ah,%ah
adc    0x408,%al
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x24000003(%ebx)
flds   (%eax,%ecx,1)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
repz add $0x12e00000,%eax
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %al,0x5(%ecx)
add    %al,(%eax)
loopne 80488d0 <_init-0xb5c>
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ah,%al
add    $0x942c0000,%eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
out    %al,$0x5
add    %al,(%eax)
hlt
fadds  (%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %dl,%dh
add    (%eax),%eax
add    %al,(%eax)
adc    0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dh,%bh
add    $0x0,%al
add    %ah,(%ebx,%edx,1)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804897e <_init-0xaae>
je     8048940 <_init-0xaec>
jae    8048983 <_init-0xaa9>
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048985 <_init-0xaa7>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80489b0 <_init-0xa7c>
popa
jb     80489b3 <_init-0xa79>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    80489a5 <_init-0xa87>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    80489c6 <_init-0xa66>
gs
jae    8048956 <_init-0xad6>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     80489c2 <_init-0xa6a>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     80489d3 <_init-0xa59>
data16
jae    80489d6 <_init-0xa56>
addr16
gs
je     80489da <_init-0xa52>
je     80489de <_init-0xa4e>
add    %ch,0x6e(%di)
je     80489e2 <_init-0xa4a>
data16
jae    80489e5 <_init-0xa47>
addr16
gs
je     80489e9 <_init-0xa43>
jae    80489fe <_init-0xa2e>
arpl   %si,0x61(%eax)
je     80489f9 <_init-0xa33>
add    %ch,0x6e(%ebp)
je     80489f5 <_init-0xa37>
je     80489f9 <_init-0xa33>
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x6e5f,0x64(%esi),%bp
gs
js     8048a19 <_init-0xa13>
pop    %edi
data16
jae    80489a9 <_init-0xa83>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048a0c <_init-0xa20>
data16
jae    8048a0f <_init-0xa1d>
insl   (%dx),%es:(%edi)
popa
je     8048a17 <_init-0xa15>
push   $0x7473665f
jns    8048a2b <_init-0xa01>
add    %ch,%gs:0x6e(%ebp)
je     8048a20 <_init-0xa0c>
data16
jb     8048a29 <_init-0xa03>
gs
pop    %edi
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
data16
jae    8048a31 <_init-0x9fb>
addr16
gs
je     8048a35 <_init-0x9f7>
fs
gs
jbe    8048a48 <_init-0x9e4>
outsl  %ds:(%esi),(%dx)
add    %ch,0x6e(%ebp)
je     8048a3f <_init-0x9ed>
je     8048a43 <_init-0x9e9>
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
gs
js     8048a5e <_init-0x9ce>
pop    %edi
data16
jae    80489ee <_init-0xa3e>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048a51 <_init-0x9db>
data16
jb     8048a5a <_init-0x9d2>
gs
pop    %edi
je     8048a5a <_init-0x9d2>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048a60 <_init-0x9cc>
jb     8048a68 <_init-0x9c4>
jae    8048a74 <_init-0x9b8>
insb   (%dx),%es:(%edi)
jbe    8048a6d <_init-0x9bf>
pop    %edi
jae    8048a7b <_init-0x9b1>
arpl   %ax,%gs:(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048a71 <_init-0x9bb>
je     8048a75 <_init-0x9b7>
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8048a7f <_init-0x9ad>
je     8048a7b <_init-0x9b1>
arpl   %sp,0x63(%ecx)
push   $0x6e6d0065
je     8048a85 <_init-0x9a7>
je     8048a89 <_init-0x9a3>
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x745f,0x64(%esi),%bp
popa
jb     8048a9c <_init-0x990>
gs
je     8048a38 <_init-0x9f4>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048a9b <_init-0x991>
je     8048a9f <_init-0x98d>
bound  %ebp,0x5f(%ebp,%eiz,2)
imul   $0x735f,0x64(%esi),%bp
outsl  %ds:(%esi),(%dx)
jne    8048abd <_init-0x96f>
arpl   %sp,0x0(%ebp)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048ab1 <_init-0x97b>
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
imul   $0x6f697463,%fs:0x65(%edx),%esi
outsb  %ds:(%esi),(%dx)
add    %ch,0x6e(%ebp)
je     8048ac8 <_init-0x964>
data16
jb     8048ad1 <_init-0x95b>
gs
pop    %edi
arpl   %sp,0x63(%ecx)
push   $0x6e6d0065
je     8048ad7 <_init-0x955>
jb     8048adf <_init-0x94d>
jae    8048aeb <_init-0x941>
insb   (%dx),%es:(%edi)
jbe    8048ae4 <_init-0x948>
pop    %edi
jo     8048ae3 <_init-0x949>
je     8048aec <_init-0x940>
add    %ch,0x6e(%ebp)
je     8048ae8 <_init-0x944>
data16
jae    8048aeb <_init-0x941>
addr16
gs
je     8048aef <_init-0x93d>
outsl  %ds:(%esi),(%dx)
jo     8048b07 <_init-0x925>
imul   $0x6e6d0073,0x6e(%edi),%ebp
je     8048afb <_init-0x931>
outsb  %ds:(%esi),(%dx)
gs
ja     8048aff <_init-0x92d>
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
data16
jae    8048b0b <_init-0x921>
addr16
gs
je     8048b0f <_init-0x91d>
jae    8048b21 <_init-0x90b>
jne    8048b26 <_init-0x906>
arpl   %sp,0x0(%ebp)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048b1a <_init-0x912>
data16
jae    8048b1d <_init-0x90f>
addr16
gs
je     8048b21 <_init-0x90b>
je     8048b25 <_init-0x907>
jb     8048b2d <_init-0x8ff>
gs
je     8048ac9 <_init-0x963>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048b2c <_init-0x900>
outsb  %ds:(%esi),(%dx)
gs
ja     8048b30 <_init-0x8fc>
je     8048b34 <_init-0x8f8>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048b3a <_init-0x8f2>
imul   $0x65645f74,0x69(%esi),%ebp
bound  %esi,0x67(%ebp)
add    %ch,0x6e(%ebp)
je     8048b49 <_init-0x8e3>
imul   $0x6261745f,%fs:0x66(%esi),%esp
insb   (%dx),%es:(%edi)
gs
jae    8048af6 <_init-0x936>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048b59 <_init-0x8d3>
je     8048b5d <_init-0x8cf>
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8048b63 <_init-0x8c9>
jb     8048b77 <_init-0x8b5>
gs
pop    %edi
data16
jae    8048b7d <_init-0x8af>
popa
bound  %eax,(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048b6f <_init-0x8bd>
jb     8048b77 <_init-0x8b5>
jae    8048b79 <_init-0x8b3>
je     8048b75 <_init-0x8b7>
je     8048b79 <_init-0x8b3>
bound  %ebp,0x0(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048b7f <_init-0x8ad>
data16
jae    8048b82 <_init-0x8aa>
insl   (%dx),%es:(%edi)
popa
je     8048b8a <_init-0x8a2>
push   $0x756f735f
jb     8048b91 <_init-0x89b>
add    %ch,%gs:0x6e(%ebp)
je     8048b93 <_init-0x899>
data16
jae    8048b96 <_init-0x896>
insl   (%dx),%es:(%edi)
popa
je     8048b9e <_init-0x88e>
push   $0x7261745f
addr16
gs
je     8048b44 <_init-0x8e8>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048ba7 <_init-0x885>
je     8048bab <_init-0x881>
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8048bb1 <_init-0x87b>
jb     8048bc5 <_init-0x867>
gs
pop    %edi
jae    8048bca <_init-0x862>
jb     8048bbd <_init-0x86f>
popa
insl   (%dx),%es:(%edi)
add    %ch,0x6e(%ebp)
je     8048bbe <_init-0x86e>
data16
jae    8048bc1 <_init-0x86b>
addr16
gs
je     8048bc5 <_init-0x867>
data16
jae    8048bc8 <_init-0x864>
outsl  %ds:(%esi),(%dx)
jo     8048be0 <_init-0x84c>
imul   $0x6e6d0073,0x6e(%edi),%ebp
je     8048bd4 <_init-0x858>
data16
jae    8048bd7 <_init-0x855>
insl   (%dx),%es:(%edi)
popa
je     8048bdf <_init-0x84d>
push   $0x74706f5f
imul   $0x6e6d0073,0x6e(%edi),%ebp
je     8048be9 <_init-0x843>
data16
jae    8048bec <_init-0x840>
addr16
gs
je     8048bf0 <_init-0x83c>
jb     8048c02 <_init-0x82a>
outsl  %ds:(%esi),(%dx)
je     8048b96 <_init-0x896>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048bf9 <_init-0x833>
outsb  %ds:(%esi),(%dx)
gs
ja     8048bfd <_init-0x82f>
arpl   %sp,0x63(%ecx)
push   $0x6e6d0065
je     8048c07 <_init-0x825>
je     8048c0b <_init-0x821>
bound  %ebp,0x5f(%ebp,%eiz,2)
jae    8048c15 <_init-0x817>
je     8048c11 <_init-0x81b>
jo     8048c15 <_init-0x817>
jb     8048c29 <_init-0x803>
gs
jb     8048c18 <_init-0x814>
gs
jb     8048c2e <_init-0x7fe>
arpl   %sp,0x0(%edx)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048c22 <_init-0x80a>
arpl   %sp,0x63(%ecx)
push   $0x69665f65
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
je     8048c31 <_init-0x7fb>
addr16 pop %edi
jbe    8048c35 <_init-0x7f7>
insb   (%dx),%es:(%edi)
jne    8048c3c <_init-0x7f0>
add    %ch,0x6e(%ebp)
je     8048c3b <_init-0x7f1>
data16
jae    8048c3e <_init-0x7ee>
addr16
gs
je     8048c42 <_init-0x7ea>
jbe    8048c4b <_init-0x7e1>
jae    8048c46 <_init-0x7e6>
outsl  %ds:(%esi),(%dx)
jo     8048c5e <_init-0x7ce>
imul   $0x6e6d0073,0x6e(%edi),%ebp
je     8048c52 <_init-0x7da>
data16
jb     8048c5b <_init-0x7d1>
gs
pop    %edi
je     8048c5b <_init-0x7d1>
bound  %esp,0x66(%ecx,%ebp,2)
data16
add    %ch,0x6e(%ebp)
je     8048c63 <_init-0x7c9>
jb     8048c6b <_init-0x7c1>
jae    8048c6d <_init-0x7bf>
je     8048c69 <_init-0x7c3>
imul   $0x746e6d00,0x72(%ebp,%eiz,2),%esi
pop    %edi
je     8048c76 <_init-0x7b6>
bound  %ebp,0x5f(%ebp,%eiz,2)
addr16
gs
je     8048c7c <_init-0x7b0>
jb     8048c8e <_init-0x79e>
outsl  %ds:(%esi),(%dx)
je     8048c81 <_init-0x7ab>
data16
jae    8048c25 <_init-0x807>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048c88 <_init-0x7a4>
outsb  %ds:(%esi),(%dx)
gs
ja     8048c8c <_init-0x7a0>
je     8048c90 <_init-0x79c>
bound  %esp,0x66(%ecx,%ebp,2)
data16
add    %ch,0x6e(%ebp)
je     8048c98 <_init-0x794>
je     8048c9c <_init-0x790>
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8048ca2 <_init-0x78a>
jb     8048cb6 <_init-0x776>
gs
pop    %edi
insl   (%dx),%es:(%edi)
je     8048ca9 <_init-0x783>
bound  %eax,(%eax)
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048cad <_init-0x77f>
je     8048cb1 <_init-0x77b>
bound  %esp,0x66(%ecx,%ebp,2)
pop    %di
outsb  %ds:(%esi),(%dx)
gs
js     8048cce <_init-0x75e>
pop    %edi
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
add    %ch,%gs:0x6e(%di)
je     8048cc5 <_init-0x767>
data16
jae    8048cc8 <_init-0x764>
addr16
gs
je     8048ccc <_init-0x760>
data16
jae    8048ce4 <_init-0x748>
jns    8048ce2 <_init-0x74a>
add    %ch,%gs:0x6e(%ebp)
je     8048cd7 <_init-0x755>
je     8048cdb <_init-0x751>
bound  %ebp,0x5f(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
gs
js     8048cf6 <_init-0x736>
pop    %edi
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
fs
pop    %edi
data16
jae    8048c8c <_init-0x7a0>
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     8048cef <_init-0x73d>
je     8048cf3 <_init-0x739>
bound  %ebp,0x5f(%ebp,%eiz,2)
jo     8048cf9 <_init-0x733>
jb     8048d0d <_init-0x71f>
gs
pop    %edi
imul   $0x696c,0x0(%ebp,%eiz,2),%bp
bound  %esp,0x2e(%ebx)
jae    8048d17 <_init-0x715>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048d25 <_init-0x707>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %bl,0x5f(%edi)
jo     8048d30 <_init-0x6fc>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048d33 <_init-0x6f9>
je     8048ccc <_init-0x760>
jae    8048d33 <_init-0x6f9>
je     8048d3c <_init-0x6f0>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     8048d48 <_init-0x6e4>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048d4b <_init-0x6e1>
outsb  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jae    8048d5d <_init-0x6cf>
jb     8048d4f <_init-0x6dd>
jne    8048d5d <_init-0x6cf>
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048d68 <_init-0x6c4>
gs
js     8048d6b <_init-0x6c1>
add    %dh,0x74(%ebx)
jb     8048d6a <_init-0x6c2>
arpl   %si,0x79(%eax)
add    %ch,0x62(%ebp)
jae    8048d78 <_init-0x6b4>
outsl  %ds:(%esi),(%dx)
ja     8048d6a <_init-0x6c2>
jae    8048d09 <_init-0x723>
ja     8048d6c <_init-0x6c0>
jb     8048d7b <_init-0x6b1>
js     8048d0f <_init-0x71d>
pop    %edi
pop    %edi
jae    8048d87 <_init-0x6a5>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x72747300,0x74(%esi),%ebp
je     8048d9d <_init-0x68f>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
popa
jae    8048da9 <_init-0x683>
gs
jb     8048dad <_init-0x67f>
pop    %edi
popaw
imul   $0x6e697765,0x72(%eax,%eax,1),%ebp
add    %bl,%fs:0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048db1 <_init-0x67b>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048dca <_init-0x662>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048d5d <_init-0x6cf>
jae    8048dd3 <_init-0x659>
jb     8048dd5 <_init-0x657>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048de1 <_init-0x64b>
jb     8048ddb <_init-0x651>
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048ddc <_init-0x650>
je     8048d79 <_init-0x6b3>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
arpl   %bp,%gs:0x6e(%edi)
jbe    8048d84 <_init-0x6a8>
ja     8048de7 <_init-0x645>
jb     8048df6 <_init-0x636>
add    %bl,0x5f(%edi)
gs
jb     8048e00 <_init-0x62c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
jo     8048e02 <_init-0x62a>
jo     8048e1a <_init-0x612>
add    %dh,0x6f(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
data16
jo     8048e1e <_init-0x60e>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     8048e1c <_init-0x610>
outsl  %ds:(%esi),(%dx)
jne    8048e2f <_init-0x5fd>
add    %ah,0x70(%esi)
jne    8048e34 <_init-0x5f8>
arpl   %ax,(%eax)
data16
jo     8048e3a <_init-0x5f2>
je     8048e3a <_init-0x5f2>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %dh,0x74(%ebx)
jb     8048e47 <_init-0x5e5>
outsl  %ds:(%esi),(%dx)
jne    8048e42 <_init-0x5ea>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048e61 <_init-0x5cb>
outsb  %ds:(%esi),(%dx)
jbe    8048dff <_init-0x62d>
outsl  %ds:(%esi),(%dx)
jo     8048e76 <_init-0x5b6>
popa
jb     8048e6c <_init-0x5c0>
add    %dh,0x74(%ebx)
fs
gs
jb     8048e7e <_init-0x5ae>
add    %dh,0x63(%edi)
ja     8048e7a <_init-0x5b2>
fs
je     8048e7c <_init-0x5b0>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
jae    8048e8d <_init-0x59f>
jo     8048e93 <_init-0x599>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     8048e9d <_init-0x58f>
jo     8048ea4 <_init-0x588>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     8048ea8 <_init-0x584>
arpl   %sp,0x73(%ecx)
arpl   %bp,%gs:0x70(%ebp)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 8048eb0 <_init-0x57c>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8048ed5 <_init-0x557>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x63(%edi)
jae    8048edf <_init-0x54d>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
gs
jb     8048ee5 <_init-0x547>
js     8048e75 <_init-0x5b7>
outsw  %ds:(%esi),(%dx)
jo     8048ede <_init-0x54e>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     8048ee8 <_init-0x544>
js     8048ef9 <_init-0x533>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8048f05 <_init-0x527>
add    %dh,0x74(%ebx)
jb     8048efa <_init-0x532>
insl   (%dx),%es:(%edi)
jo     8048e9a <_init-0x592>
pop    %edi
pop    %edi
jae    8048f12 <_init-0x51a>
jb     8048f14 <_init-0x518>
outsl  %ds:(%esi),(%dx)
jne    8048f0f <_init-0x51d>
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
popa
jae    8048f23 <_init-0x509>
jb     8048f1e <_init-0x50e>
outsb  %ds:(%esi),(%dx)
je     8048f1e <_init-0x50e>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048f3d <_init-0x4ef>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
jo     8048f53 <_init-0x4d9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x696e6966,0x5f(%eax,%eax,1),%esi
add    %bl,0x65(%edi)
fs
popa
je     8048f5b <_init-0x4d1>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8048f77 <_init-0x4b5>
popa
jb     8048f7a <_init-0x4b2>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
dec    %ebp
dec    %edi
push   %ebp
dec    %esi
push   %esp
pop    %edi
xor    (%esi),%ch
xor    (%eax),%dh
add    %cl,0x4f(%ebp)
push   %ebp
dec    %esi
push   %esp
pop    %edi
xor    (%esi),%ch
xor    %edi,(%ecx)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    $0x0,%al
add    $0x2000400,%eax
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x6000400,%eax
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
pop    %es
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    $0x2000200,%eax
add    %al,(%eax,%eax,1)
or     %al,(%eax)
add    $0x0,%al
add    $0x2000200,%eax
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    $0x4000200,%eax
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
pop    %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    %al,(%eax)
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    %al,(%eax)
add    $0x2000400,%eax
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
or     (%eax),%al
add    $0x0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    $0x0,%al
add    $0x0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    $0x0,%al
add    %eax,(%eax)
pop    %es
add    %bl,0x10000003(%ecx)
add    %al,(%eax)
add    %al,0x13000000(%eax)
imul   $0xa0000,0xd(%ecx),%ebp
add    $0x6,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x90000,%eax
push   %cs
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %ch,0x69(%ecx)
or     $0x80000,%eax
sbb    %al,(%esi)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x70000,%eax
and    (%esi),%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x62c,0x60000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x40000,%eax
ss
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80490d7 <_init-0x355>
imul   $0x30000,(%ecx),%ecx
inc    %eax
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    (%eax),%al
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lock jne 8049086 <_init-0x3a6>
add    (%eax),%eax
add    %al,0x64c00
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%cl
jne    8049096 <_init-0x396>
add    (%eax),%eax
add    %al,(%edx)
add    %dl,0x6(%edi)
add    %al,(%eax)
add    %al,(%eax)
cld
syscall
or     %al,(%esi)
sub    (%eax),%eax
add    %ah,%al
adc    0x670508,%al
add    %ah,%ah
adc    0x680508,%al
add    %al,(%eax)
adc    0x6e0508,%eax
add    %ah,(%eax)
adc    0x660508,%eax
add    %ah,(%ebx,%edx,1)
add    $0x6f0508,%eax
or     $0x10,%al
add    $0x10708,%eax
add    %dl,(%eax)
adc    %al,0x20708
add    %dl,(%eax,%edx,1)
add    $0x30708,%eax
add    %bl,(%eax)
adc    %al,0x40708
add    %bl,(%eax,%edx,1)
add    $0x50708,%eax
add    %ah,(%eax)
adc    %al,0x70708
add    %ah,(%eax,%edx,1)
add    $0x80708,%eax
add    %ch,(%eax)
adc    %al,0x90708
add    %ch,(%eax,%edx,1)
add    $0xa0708,%eax
add    %dh,(%eax)
adc    %al,0xb0708
add    %dh,(%eax,%edx,1)
add    $0xc0708,%eax
add    %bh,(%eax)
adc    %al,0xd0708
add    %bh,(%eax,%edx,1)
add    $0xe0708,%eax
add    %al,0x10(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%edx,1)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x10(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%edx,1)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x10(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%edx,1)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x10(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%edx,1)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
adc    %al,0x170708
add    %ah,0x5(%eax,%edx,1)
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,0x10(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%edx,1)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x10(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%edx,1)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x10(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%edx,1)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
adcb   $0x5,(%eax)
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
test   %dl,(%eax)
add    $0x200708,%eax
add    %cl,0x7080510(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%edx,1)
add    %al,(%eax)
nop
adc    %al,0x230708
add    %dl,0x24070805(%eax,%edx,1)
add    %al,(%eax)
cwtl
adc    %al,0x250708
add    %bl,0x26070805(%eax,%edx,1)
add    %al,(%eax)
mov    0x7080510,%al
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %al,0x280708
add    %ch,0x7080510(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070805(%eax,%edx,1)
add    %al,(%eax)
mov    $0x10,%al
add    $0x2b0708,%eax
add    %dh,0x2c070805(%eax,%edx,1)
add    %al,(%eax)
mov    $0x7080510,%eax
sub    $0x10bc0000,%eax
add    $0x2e0708,%eax
add    %al,%al
adc    %al,0x2f0708
add    %al,%ah
adc    %al,0x300708
add    %cl,%al
adc    %al,0x310708
add    %cl,%ah
adc    %al,0x320708
add    %dl,%al
adc    %al,0x330708
add    %dl,%ah
adc    %al,0x340708
add    %bl,%al
adc    %al,0x350708
add    %bl,%ah
adc    %al,0x360708
add    %ah,%al
adc    %al,0x370708
add    %ah,%ah
adc    %al,0x380708
add    %ch,%al
adc    %al,0x390708
add    %ch,%ah
adc    %al,0x3a0708
add    %dh,%al
adc    %al,0x3b0708
add    %dh,%ah
adc    %al,0x3c0708
add    %bh,%al
adc    %al,0x3d0708
add    %bh,%ah
adc    %al,0x3e0708
add    %al,(%eax)
adc    %eax,0x3f0708
add    %al,(%ecx,%edx,1)
add    $0x400708,%eax
add    %cl,(%eax)
adc    %eax,0x410708
add    %cl,(%ecx,%edx,1)
add    $0x420708,%eax
add    %dl,(%eax)
adc    %eax,0x430708
add    %dl,(%ecx,%edx,1)
add    $0x440708,%eax
add    %bl,(%eax)
adc    %eax,0x450708
add    %bl,(%ecx,%edx,1)
add    $0x460708,%eax
add    %ah,(%eax)
adc    %eax,0x470708
add    %ah,(%ecx,%edx,1)
add    $0x480708,%eax
add    %ch,(%eax)
adc    %eax,0x490708
add    %ch,(%ecx,%edx,1)
add    $0x4a0708,%eax
add    %dh,(%eax)
adc    %eax,0x4b0708
add    %dh,(%ecx,%edx,1)
add    $0x4c0708,%eax
add    %bh,(%eax)
adc    %eax,0x4d0708
add    %bh,(%ecx,%edx,1)
add    $0x4e0708,%eax
add    %al,0x11(%eax)
add    $0x4f0708,%eax
add    %al,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %eax
adc    %eax,0x510708
add    %cl,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %eax
adc    %eax,0x540708
add    %dl,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pop    %eax
adc    %eax,0x560708
add    %bl,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %edi
add    %al,(%eax)
pusha
adc    %eax,0x590708
add    %ah,0x5(%ecx,%edx,1)
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
push   $0x7080511
pop    %ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %eax,0x5c0708
add    %dh,0x11(%eax)
add    $0x5d0708,%eax
add    %dh,0x5(%ecx,%edx,1)
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
js     8049417 <_init-0x15>
add    $0x5f0708,%eax
add    %bh,0x5(%ecx,%edx,1)
or     %al,(%edi)
pusha
add    %al,(%eax)
adcb   $0x5,(%ecx)
or     %al,(%edi)
popa
add    %al,(%eax)
test   %dl,(%ecx)
add    $0x620708,%eax
add    %cl,0x7080511(%eax)
arpl   %ax,(%eax)
push   %ebx
sub    $0x8,%esp
call   804ac10 <calloc@plt+0x11c0>
add    $0x7bcb,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804944a <_init+0x1e>
call   80496f0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8051004
jmp    *0x8051008
add    %al,(%eax)
jmp    *0x805100c
push   $0x0
jmp    8049450 <_init+0x24>
jmp    *0x8051010
push   $0x8
jmp    8049450 <_init+0x24>
jmp    *0x8051014
push   $0x10
jmp    8049450 <_init+0x24>
jmp    *0x8051018
push   $0x18
jmp    8049450 <_init+0x24>
jmp    *0x805101c
push   $0x20
jmp    8049450 <_init+0x24>
jmp    *0x8051020
push   $0x28
jmp    8049450 <_init+0x24>
jmp    *0x8051024
push   $0x30
jmp    8049450 <_init+0x24>
jmp    *0x8051028
push   $0x38
jmp    8049450 <_init+0x24>
jmp    *0x805102c
push   $0x40
jmp    8049450 <_init+0x24>
jmp    *0x8051030
push   $0x48
jmp    8049450 <_init+0x24>
jmp    *0x8051034
push   $0x50
jmp    8049450 <_init+0x24>
jmp    *0x8051038
push   $0x58
jmp    8049450 <_init+0x24>
jmp    *0x805103c
push   $0x60
jmp    8049450 <_init+0x24>
jmp    *0x8051040
push   $0x68
jmp    8049450 <_init+0x24>
jmp    *0x8051044
push   $0x70
jmp    8049450 <_init+0x24>
jmp    *0x8051048
push   $0x78
jmp    8049450 <_init+0x24>
jmp    *0x805104c
push   $0x80
jmp    8049450 <_init+0x24>
jmp    *0x8051050
push   $0x88
jmp    8049450 <_init+0x24>
jmp    *0x8051054
push   $0x90
jmp    8049450 <_init+0x24>
jmp    *0x8051058
push   $0x98
jmp    8049450 <_init+0x24>
jmp    *0x805105c
push   $0xa0
jmp    8049450 <_init+0x24>
jmp    *0x8051060
push   $0xa8
jmp    8049450 <_init+0x24>
jmp    *0x8051064
push   $0xb0
jmp    8049450 <_init+0x24>
jmp    *0x8051068
push   $0xb8
jmp    8049450 <_init+0x24>
jmp    *0x805106c
push   $0xc0
jmp    8049450 <_init+0x24>
jmp    *0x8051070
push   $0xc8
jmp    8049450 <_init+0x24>
jmp    *0x8051074
push   $0xd0
jmp    8049450 <_init+0x24>
jmp    *0x8051078
push   $0xd8
jmp    8049450 <_init+0x24>
jmp    *0x805107c
push   $0xe0
jmp    8049450 <_init+0x24>
jmp    *0x8051080
push   $0xe8
jmp    8049450 <_init+0x24>
jmp    *0x8051084
push   $0xf0
jmp    8049450 <_init+0x24>
jmp    *0x8051088
push   $0xf8
jmp    8049450 <_init+0x24>
jmp    *0x805108c
push   $0x100
jmp    8049450 <_init+0x24>
jmp    *0x8051090
push   $0x108
jmp    8049450 <_init+0x24>
jmp    *0x8051094
push   $0x110
jmp    8049450 <_init+0x24>
jmp    *0x8051098
push   $0x118
jmp    8049450 <_init+0x24>
jmp    *0x805109c
push   $0x120
jmp    8049450 <_init+0x24>
jmp    *0x80510a0
push   $0x128
jmp    8049450 <_init+0x24>
jmp    *0x80510a4
push   $0x130
jmp    8049450 <_init+0x24>
jmp    *0x80510a8
push   $0x138
jmp    8049450 <_init+0x24>
jmp    *0x80510ac
push   $0x140
jmp    8049450 <_init+0x24>
jmp    *0x80510b0
push   $0x148
jmp    8049450 <_init+0x24>
jmp    *0x80510b4
push   $0x150
jmp    8049450 <_init+0x24>
jmp    *0x80510b8
push   $0x158
jmp    8049450 <_init+0x24>
jmp    *0x80510bc
push   $0x160
jmp    8049450 <_init+0x24>
jmp    *0x80510c0
push   $0x168
jmp    8049450 <_init+0x24>
jmp    *0x80510c4
push   $0x170
jmp    8049450 <_init+0x24>
jmp    *0x80510c8
push   $0x178
jmp    8049450 <_init+0x24>
jmp    *0x80510cc
push   $0x180
jmp    8049450 <_init+0x24>
jmp    *0x80510d0
push   $0x188
jmp    8049450 <_init+0x24>
jmp    *0x80510d4
push   $0x190
jmp    8049450 <_init+0x24>
jmp    *0x80510d8
push   $0x198
jmp    8049450 <_init+0x24>
jmp    *0x80510dc
push   $0x1a0
jmp    8049450 <_init+0x24>
jmp    *0x80510e0
push   $0x1a8
jmp    8049450 <_init+0x24>
jmp    *0x80510e4
push   $0x1b0
jmp    8049450 <_init+0x24>
jmp    *0x80510e8
push   $0x1b8
jmp    8049450 <_init+0x24>
jmp    *0x80510ec
push   $0x1c0
jmp    8049450 <_init+0x24>
jmp    *0x80510f0
push   $0x1c8
jmp    8049450 <_init+0x24>
jmp    *0x80510f4
push   $0x1d0
jmp    8049450 <_init+0x24>
jmp    *0x80510f8
push   $0x1d8
jmp    8049450 <_init+0x24>
jmp    *0x80510fc
push   $0x1e0
jmp    8049450 <_init+0x24>
jmp    *0x8051100
push   $0x1e8
jmp    8049450 <_init+0x24>
jmp    *0x8051104
push   $0x1f0
jmp    8049450 <_init+0x24>
jmp    *0x8051108
push   $0x1f8
jmp    8049450 <_init+0x24>
jmp    *0x805110c
push   $0x200
jmp    8049450 <_init+0x24>
jmp    *0x8051110
push   $0x208
jmp    8049450 <_init+0x24>
jmp    *0x8051114
push   $0x210
jmp    8049450 <_init+0x24>
jmp    *0x8051118
push   $0x218
jmp    8049450 <_init+0x24>
jmp    *0x805111c
push   $0x220
jmp    8049450 <_init+0x24>
jmp    *0x8051120
push   $0x228
jmp    8049450 <_init+0x24>
jmp    *0x8051124
push   $0x230
jmp    8049450 <_init+0x24>
jmp    *0x8051128
push   $0x238
jmp    8049450 <_init+0x24>
jmp    *0x805112c
push   $0x240
jmp    8049450 <_init+0x24>
jmp    *0x8051130
push   $0x248
jmp    8049450 <_init+0x24>
jmp    *0x8051134
push   $0x250
jmp    8049450 <_init+0x24>
jmp    *0x8051138
push   $0x258
jmp    8049450 <_init+0x24>
jmp    *0x805113c
push   $0x260
jmp    8049450 <_init+0x24>
jmp    *0x8051140
push   $0x268
jmp    8049450 <_init+0x24>
jmp    *0x8051144
push   $0x270
jmp    8049450 <_init+0x24>
jmp    *0x8051148
push   $0x278
jmp    8049450 <_init+0x24>
jmp    *0x805114c
push   $0x280
jmp    8049450 <_init+0x24>
jmp    *0x8051150
push   $0x288
jmp    8049450 <_init+0x24>
jmp    *0x8051154
push   $0x290
jmp    8049450 <_init+0x24>
jmp    *0x8051158
push   $0x298
jmp    8049450 <_init+0x24>
jmp    *0x805115c
push   $0x2a0
jmp    8049450 <_init+0x24>
jmp    *0x8051160
push   $0x2a8
jmp    8049450 <_init+0x24>
jmp    *0x8051164
push   $0x2b0
jmp    8049450 <_init+0x24>
jmp    *0x8051168
push   $0x2b8
jmp    8049450 <_init+0x24>
jmp    *0x805116c
push   $0x2c0
jmp    8049450 <_init+0x24>
jmp    *0x8051170
push   $0x2c8
jmp    8049450 <_init+0x24>
jmp    *0x8051174
push   $0x2d0
jmp    8049450 <_init+0x24>
jmp    *0x8051178
push   $0x2d8
jmp    8049450 <_init+0x24>
jmp    *0x805117c
push   $0x2e0
jmp    8049450 <_init+0x24>
jmp    *0x8051180
push   $0x2e8
jmp    8049450 <_init+0x24>
jmp    *0x8051184
push   $0x2f0
jmp    8049450 <_init+0x24>
jmp    *0x8051188
push   $0x2f8
jmp    8049450 <_init+0x24>
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x804d928,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x804e20c,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
call   8049910 <errx@plt>
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x70,%esp
mov    0x8(%ebp),%ebx
movl   $0x804e241,0x4(%esp)
mov    0xc(%ebp),%esi
movl   $0x6,(%esp)
call   8049940 <setlocale@plt>
movl   $0x804e310,0x4(%esp)
movl   $0x804e322,(%esp)
call   80499a0 <bindtextdomain@plt>
movl   $0x804e322,(%esp)
call   80495a0 <textdomain@plt>
orl    $0x40,0x8051390
movl   $0xffffffff,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x48(%esp)
lea    0x0(%esi),%esi
movl   $0x0,0x10(%esp)
movl   $0x804e680,0xc(%esp)
movl   $0x804e028,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8049720 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049dc0 <calloc@plt+0x370>
sub    $0x4f,%eax
cmp    $0x28,%eax
ja     8049db6 <calloc@plt+0x366>
jmp    *0x804e5a4(,%eax,4)
movl   $0x5,0x8(%esp)
movl   $0x804e37e,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,0x4(%esp)
mov    0x8051324,%eax
mov    %eax,(%esp)
call   804cfa0 <calloc@plt+0x3550>
mov    %eax,0x30(%esp)
jmp    8049b08 <calloc@plt+0xb8>
orl    $0x80,0x8051394
00
jmp    8049b08 <calloc@plt+0xb8>
mov    $0x80511cc,%eax
lea    0x0(%esi,%eiz,1),%esi
andl   $0xffffffdf,(%eax)
add    $0x18,%eax
cmp    $0x80512ec,%eax
jne    8049b90 <calloc@plt+0x140>
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%eax
mov    %eax,0x8051204
jmp    8049b08 <calloc@plt+0xb8>
cmpl   $0x0,0x48(%esp)
jne    804aadd <calloc@plt+0x108d>
andl   $0xffffffbf,0x8051390
movl   $0x804e2ee,0x48(%esp)
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051390,%eax
and    $0xffffffbf,%eax
or     $0x2,%eax
mov    %eax,0x8051390
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%eax
test   %eax,%eax
je     8049c17 <calloc@plt+0x1c7>
movl   $0x804b0a0,0xc(%esp)
movl   $0x4,0x8(%esp)
movl   $0x8051348,0x4(%esp)
mov    %eax,(%esp)
call   804d5e0 <calloc@plt+0x3b90>
test   %eax,%eax
mov    %eax,0x8051344
js     8049c5f <calloc@plt+0x20f>
orl    $0x200,0x8051394
00
andl   $0xffffffbf,0x8051390
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%eax
movl   $0x804b170,0xc(%esp)
movl   $0xc,0x8(%esp)
movl   $0x8051360,0x4(%esp)
mov    %eax,(%esp)
call   804d5e0 <calloc@plt+0x3b90>
test   %eax,%eax
mov    %eax,0x8051358
jns    8049b08 <calloc@plt+0xb8>
movl   $0x1,(%esp)
call   8049700 <exit@plt>
orl    $0x8,0x8051390
jmp    8049b08 <calloc@plt+0xb8>
cmpl   $0x0,0x48(%esp)
jne    804aadd <calloc@plt+0x108d>
andl   $0xffffffbf,0x8051390
movl   $0x804e2f9,0x48(%esp)
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051390,%eax
mov    %eax,%edx
and    $0x12,%edx
cmp    $0x12,%edx
je     804aae7 <calloc@plt+0x1097>
and    $0xffffffbf,%eax
mov    %eax,0x8051390
jmp    8049b08 <calloc@plt+0xb8>
cmpl   $0x0,0x48(%esp)
jne    804aadd <calloc@plt+0x108d>
movl   $0x804e2d9,0x48(%esp)
jmp    8049b08 <calloc@plt+0xb8>
orl    $0x10,0x8051394
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051320,%eax
call   804ad20 <calloc@plt+0x12d0>
orl    $0x8,0x8051394
jmp    8049b08 <calloc@plt+0xb8>
orl    $0x2,0x8051394
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%edi
movl   $0x804e32d,0x4(%esp)
mov    %edi,(%esp)
call   80494a0 <strcmp@plt>
test   %eax,%eax
je     804a067 <calloc@plt+0x617>
movl   $0x804e335,0x4(%esp)
mov    %edi,(%esp)
call   80494a0 <strcmp@plt>
test   %eax,%eax
jne    804aaf1 <calloc@plt+0x10a1>
movl   $0x1,0x34(%esp)
jmp    8049b08 <calloc@plt+0xb8>
orl    $0x4,0x8051394
jmp    8049b08 <calloc@plt+0xb8>
orl    $0x4,0x8051390
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%eax
orl    $0x40,0x8051394
mov    %eax,0x80511ec
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%eax
orl    $0x40,0x8051394
mov    %eax,0x80511d4
jmp    8049b08 <calloc@plt+0xb8>
orl    $0x100,0x8051394
00
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051390,%eax
and    $0xffffffbf,%eax
or     $0x10,%eax
mov    %eax,0x8051390
jmp    8049b08 <calloc@plt+0xb8>
mov    0x8051324,%eax
mov    %eax,0x805121c
jmp    8049b08 <calloc@plt+0xb8>
mov    0x80512e4,%eax
call   804ad20 <calloc@plt+0x12d0>
cmpl   $0x0,0x8051358
jne    8049e20 <calloc@plt+0x3d0>
testb  $0x2,0x8051395
je     8049de6 <calloc@plt+0x396>
movl   $0x1,0x8051358
00
movl   $0x9,0x8051360
00
mov    0x8051358,%eax
lea    0x4(%eax),%edx
movl   $0x1,0x8051360(,%eax,4)
00
movl   $0x0,0x8051364(,%eax,4)
00
movl   $0x2,0x8051368(,%eax,4)
00
mov    %edx,0x8051358
movl   $0x3,0x805136c(,%eax,4)
00
cmpl   $0x0,0x48(%esp)
je     804a52f <calloc@plt+0xadf>
mov    0x8051300,%eax
cmp    %eax,%ebx
jle    8049e7c <calloc@plt+0x42c>
cmpl   $0x0,0x80511d4
jne    804ab45 <calloc@plt+0x10f5>
cmpl   $0x0,0x80511ec
jne    804ab45 <calloc@plt+0x10f5>
mov    (%esi,%eax,4),%edi
lea    0x1(%eax),%edx
cmp    %edx,%ebx
mov    %edx,0x8051300
lea    0x0(,%eax,4),%ecx
mov    %edi,0x80511d4
jle    8049e7c <calloc@plt+0x42c>
add    $0x2,%eax
mov    %eax,0x8051300
mov    0x4(%esi,%ecx,1),%eax
mov    %eax,0x80511ec
mov    0x8051394,%ebx
test   $0x1,%bh
jne    804a074 <calloc@plt+0x624>
cmpl   $0x0,0x80511d4
je     804a8e6 <calloc@plt+0xe96>
andl   $0xffffffbf,0x8051390
test   $0x40,%bl
jne    8049eb1 <calloc@plt+0x461>
cmpl   $0x0,0x80511ec
je     804a88e <calloc@plt+0xe3e>
movl   $0x0,(%esp)
call   8049760 <mnt_init_debug@plt>
call   8049590 <mnt_new_table@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     804a9d1 <calloc@plt+0xf81>
mov    0x2c(%esp),%eax
movl   $0x804ace0,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <mnt_table_set_parser_errcb@plt>
mov    0x48(%esp),%eax
movl   $0x804e2ee,0x4(%esp)
mov    %eax,(%esp)
call   80494a0 <strcmp@plt>
test   %eax,%eax
je     804a0cf <calloc@plt+0x67f>
mov    0x48(%esp),%eax
movl   $0x804e2f9,0x4(%esp)
mov    %eax,(%esp)
call   80494a0 <strcmp@plt>
test   %eax,%eax
jne    804a0b6 <calloc@plt+0x666>
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049530 <mnt_table_parse_mtab@plt>
test   %eax,%eax
jne    804a92e <calloc@plt+0xede>
call   8049770 <mnt_new_cache@plt>
test   %eax,%eax
mov    %eax,0x8051340
je     804a856 <calloc@plt+0xe06>
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049860 <mnt_table_set_cache@plt>
mov    0x8051390,%eax
mov    %eax,(%esp)
call   804bb80 <calloc@plt+0x2130>
test   %eax,%eax
mov    %eax,0x44(%esp)
je     804a978 <calloc@plt+0xf28>
xor    %ebx,%ebx
cmpl   $0x0,0x8051358
jg     8049fc9 <calloc@plt+0x579>
jmp    804a0e8 <calloc@plt+0x698>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80511c0(,%esi,8),%eax
mov    %edx,0x10(%esp)
fldl   0x4(%ecx)
fstps  0x4c(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
flds   0x4c(%esp)
fstpl  0x8(%esp)
mov    %eax,(%esp)
call   804bcc0 <calloc@plt+0x2270>
test   %eax,%eax
je     804a22a <calloc@plt+0x7da>
add    $0x1,%ebx
cmp    %ebx,0x8051358
jle    804a0e8 <calloc@plt+0x698>
mov    %ebx,%eax
call   804b200 <calloc@plt+0x17b0>
lea    (%eax,%eax,2),%esi
lea    0x80511c0(,%esi,8),%ecx
mov    0xc(%ecx),%edx
mov    %edx,%edi
and    $0xffffffbf,%edi
testb  $0x40,0x8051390
cmove  %edi,%edx
testb  $0x2,0x8051395
jne    8049f88 <calloc@plt+0x538>
cmp    $0xb,%eax
jg     804ab21 <calloc@plt+0x10d1>
sub    $0x9,%eax
cmp    $0x2,%eax
ja     8049f88 <calloc@plt+0x538>
mov    (%ecx),%ebx
or     $0xffffffff,%edi
movl   $0x5,0x8(%esp)
movl   $0x804e194,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049790 <warnx@plt>
mov    0x2c(%esp),%ebx
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804bc60 <calloc@plt+0x2210>
mov    %ebx,(%esp)
call   80499e0 <mnt_free_table@plt>
mov    0x8051340,%eax
mov    %eax,(%esp)
call   80496e0 <mnt_free_cache@plt>
xor    %eax,%eax
test   %edi,%edi
setne  %al
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x34(%esp)
jmp    8049b08 <calloc@plt+0xb8>
cmpl   $0x0,0x80511d4
jne    8049e9f <calloc@plt+0x44f>
cmpl   $0x0,0x80511ec
jne    8049e9f <calloc@plt+0x44f>
cmpl   $0x0,0x8051204
jne    8049e9f <calloc@plt+0x44f>
cmpl   $0x0,0x805121c
jne    8049e9f <calloc@plt+0x44f>
and    $0xfe,%bh
mov    %ebx,0x8051394
jmp    8049e8b <calloc@plt+0x43b>
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049a20 <mnt_table_parse_file@plt>
jmp    8049f2e <calloc@plt+0x4de>
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80499d0 <mnt_table_parse_fstab@plt>
jmp    8049f2e <calloc@plt+0x4de>
testb  $0x2,0x8051395
jne    804a25a <calloc@plt+0x80a>
testb  $0x40,0x8051390
je     804a10b <calloc@plt+0x6bb>
cmpl   $0x0,0x80511d4
je     804a98d <calloc@plt+0xf3d>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mnt_new_iter@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804aa51 <calloc@plt+0x1001>
or     $0xffffffff,%edi
mov    %edi,0x48(%esp)
mov    0x2c(%esp),%edi
lea    0x68(%esp),%esi
movl   $0x0,0x40(%esp)
cmpl   $0x0,0x80511d4
movl   $0x0,0x68(%esp)
je     804a67f <calloc@plt+0xc2f>
cmpl   $0x0,0x8051204
jne    804a1a6 <calloc@plt+0x756>
jmp    804a7bd <calloc@plt+0xd6d>
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x40,0x8051394
jne    804a6c6 <calloc@plt+0xc76>
mov    0x80511ec,%eax
test   %eax,%eax
jne    804a6c6 <calloc@plt+0xc76>
mov    0x80511d4,%eax
test   %eax,%eax
je     804a6c6 <calloc@plt+0xc76>
movl   $0xffffffff,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x80511ec
movl   $0x0,0x80511d4
00
call   8049a10 <mnt_reset_iter@plt>
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x804af50,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049840 <mnt_table_find_next_fs@plt>
mov    0x68(%esp),%edx
test   %edx,%edx
je     804a160 <calloc@plt+0x710>
mov    0x68(%esp),%edx
testb  $0x40,0x8051390
jne    804a1e8 <calloc@plt+0x798>
testb  $0x1,0x8051395
je     804a707 <calloc@plt+0xcb7>
mov    0x44(%esp),%eax
mov    %edx,%ecx
mov    %edi,%edx
movl   $0x0,(%esp)
call   804b560 <calloc@plt+0x1b10>
mov    %eax,0x48(%esp)
cmpl   $0x0,0x48(%esp)
jne    804a925 <calloc@plt+0xed5>
mov    0x8051394,%eax
addl   $0x1,0x40(%esp)
test   $0x8,%al
jne    804a91b <calloc@plt+0xecb>
or     $0x40,%eax
mov    %eax,0x8051394
jmp    804a138 <calloc@plt+0x6e8>
movl   $0x5,0x8(%esp)
movl   $0x804e120,0x4(%esp)
movl   $0x0,(%esp)
or     $0xffffffff,%edi
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
mov    0x2c(%esp),%ebx
jmp    804a037 <calloc@plt+0x5e7>
call   8049590 <mnt_new_table@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804aba5 <calloc@plt+0x1155>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049510 <mnt_new_iter@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     804ab71 <calloc@plt+0x1121>
call   8049850 <mnt_new_tabdiff@plt>
test   %eax,%eax
mov    %eax,0x38(%esp)
je     804aab1 <calloc@plt+0x1061>
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049860 <mnt_table_set_cache@plt>
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049860 <mnt_table_set_cache@plt>
mov    0x48(%esp),%eax
movl   $0x804e52c,0x4(%esp)
mov    %eax,(%esp)
call   80495f0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804aa7d <calloc@plt+0x102d>
mov    0x1c(%esp),%eax
or     $0xffffffff,%edi
movl   $0x804ace0,0x4(%esp)
mov    %eax,(%esp)
call   8049460 <mnt_table_set_parser_errcb@plt>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049820 <fileno@plt>
movw   $0x2,0x6c(%esp)
mov    %eax,0x68(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x68(%esp),%eax
mov    %eax,(%esp)
call   8049600 <poll@plt>
test   %eax,%eax
je     804a792 <calloc@plt+0xd42>
js     804aa28 <calloc@plt+0xfd8>
mov    0x14(%esp),%edi
mov    %edi,(%esp)
call   8049580 <rewind@plt>
mov    0x48(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049640 <mnt_table_parse_stream@plt>
test   %eax,%eax
mov    %eax,%edi
je     804a833 <calloc@plt+0xde3>
test   %edi,%edi
js     804a794 <calloc@plt+0xd44>
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049a10 <mnt_reset_iter@plt>
movl   $0x0,0x20(%esp)
xchg   %ax,%ax
lea    0x64(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x60(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049540 <mnt_tabdiff_next_change@plt>
test   %eax,%eax
jne    804a723 <calloc@plt+0xcd3>
mov    0x8051344,%edx
mov    0x64(%esp),%ecx
cmp    $0x0,%edx
je     804a3f0 <calloc@plt+0x9a0>
jle    804a390 <calloc@plt+0x940>
xor    %eax,%eax
cmp    0x8051348,%ecx
je     804a3f0 <calloc@plt+0x9a0>
nop
add    $0x1,%eax
cmp    %edx,%eax
je     804a390 <calloc@plt+0x940>
cmp    0x8051348(,%eax,4),%ecx
jne    804a3e0 <calloc@plt+0x990>
mov    0x60(%esp),%eax
movl   $0x0,0x4(%esp)
test   %eax,%eax
cmove  0x5c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,%ebx
call   804af50 <calloc@plt+0x1500>
test   %eax,%eax
jne    804a471 <calloc@plt+0xa21>
testb  $0x40,0x8051394
jne    804a390 <calloc@plt+0x940>
mov    0x80511d4,%esi
test   %esi,%esi
je     804a390 <calloc@plt+0x940>
cmpl   $0x0,0x80511ec
jne    804a390 <calloc@plt+0x940>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x80511ec
movl   $0x0,0x80511d4
00
call   804af50 <calloc@plt+0x1500>
movl   $0x0,0x80511ec
00
mov    %esi,0x80511d4
test   %eax,%eax
je     804a390 <calloc@plt+0x940>
mov    0x64(%esp),%eax
movl   $0x0,0x4(%esp)
mov    0x5c(%esp),%edi
addl   $0x1,0x20(%esp)
mov    %eax,0x40(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804bd40 <calloc@plt+0x22f0>
test   %eax,%eax
mov    %eax,%esi
je     804a9fa <calloc@plt+0xfaa>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
sub    $0x2,%eax
cmpl   $0x0,0x8051358
mov    %eax,0x24(%esp)
jg     804a50c <calloc@plt+0xabc>
jmp    804a5c8 <calloc@plt+0xb78>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xb,%eax
je     804a5b0 <calloc@plt+0xb60>
cmp    $0x9,%eax
je     804a568 <calloc@plt+0xb18>
mov    0x28(%esp),%eax
mov    %ebx,%edx
test   %eax,%eax
je     804a615 <calloc@plt+0xbc5>
call   804b270 <calloc@plt+0x1820>
mov    %ebx,0x4(%esp)
add    $0x1,%ebx
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804be40 <calloc@plt+0x23f0>
cmp    0x8051358,%ebx
jge    804a5c8 <calloc@plt+0xb78>
mov    %ebx,%eax
call   804b200 <calloc@plt+0x17b0>
cmp    $0xa,%eax
jne    804a4c8 <calloc@plt+0xa78>
xor    %eax,%eax
test   %edi,%edi
je     804a4ed <calloc@plt+0xa9d>
cmpl   $0x1,0x24(%esp)
ja     804a4ed <calloc@plt+0xa9d>
mov    %edi,(%esp)
call   8049670 <mnt_fs_get_target@plt>
jmp    804a4ed <calloc@plt+0xa9d>
movl   $0x4,0x4(%esp)
movl   $0x804e2d9,(%esp)
call   8049890 <access@plt>
movl   $0x804e2d9,0x48(%esp)
test   %eax,%eax
je     8049e2b <calloc@plt+0x3db>
andl   $0xffffffbf,0x8051390
movl   $0x804e303,0x48(%esp)
jmp    8049e2b <calloc@plt+0x3db>
nop
cmpl   $0x2,0x40(%esp)
je     804a65e <calloc@plt+0xc0e>
jle    804a5dc <calloc@plt+0xb8c>
mov    0x40(%esp),%eax
cmp    $0x3,%eax
je     804a63d <calloc@plt+0xbed>
cmp    $0x4,%eax
jne    804a61c <calloc@plt+0xbcc>
movl   $0x5,0x8(%esp)
movl   $0x804e259,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
jmp    804a4ed <calloc@plt+0xa9d>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     804a60b <calloc@plt+0xbbb>
cmpl   $0x2,0x40(%esp)
jne    804a604 <calloc@plt+0xbb4>
mov    %edi,(%esp)
call   80499b0 <mnt_fs_get_options@plt>
jmp    804a4ed <calloc@plt+0xa9d>
testb  $0x8,0x8051394
jne    804a757 <calloc@plt+0xd07>
xor    %edi,%edi
jmp    804a390 <calloc@plt+0x940>
cmpl   $0x1,0x40(%esp)
jne    804a61c <calloc@plt+0xbcc>
movl   $0x5,0x8(%esp)
movl   $0x804e25b,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
jmp    804a4ed <calloc@plt+0xa9d>
cmpl   $0x4,0x40(%esp)
je     804a5bb <calloc@plt+0xb6b>
xor    %eax,%eax
lea    0x0(%esi),%esi
jmp    804a4ed <calloc@plt+0xa9d>
mov    %edi,%eax
jmp    804a4e8 <calloc@plt+0xa98>
movl   $0x5,0x8(%esp)
movl   $0x804e3e5,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
jmp    804a4ed <calloc@plt+0xa9d>
movl   $0x5,0x8(%esp)
movl   $0x804e24d,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
jmp    804a4ed <calloc@plt+0xa9d>
movl   $0x5,0x8(%esp)
movl   $0x804e252,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
jmp    804a4ed <calloc@plt+0xa9d>
cmpl   $0x0,0x80511ec
jne    804a1a6 <calloc@plt+0x756>
cmpl   $0x0,0x8051204
jne    804a1a6 <calloc@plt+0x756>
cmpl   $0x0,0x805121c
jne    804a1a6 <calloc@plt+0x756>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   80494f0 <mnt_table_next_fs@plt>
test   %eax,%eax
jne    804a6c6 <calloc@plt+0xc76>
mov    0x68(%esp),%edx
test   %edx,%edx
jne    804a1d2 <calloc@plt+0x782>
cmpl   $0x0,0x40(%esp)
mov    0x48(%esp),%edi
jne    804a91b <calloc@plt+0xecb>
mov    %ebx,(%esp)
call   80497f0 <mnt_free_iter@plt>
test   %edi,%edi
mov    0x2c(%esp),%ebx
jne    804a037 <calloc@plt+0x5e7>
testb  $0x2,0x8051395
jne    804a037 <calloc@plt+0x5e7>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804bf00 <calloc@plt+0x24b0>
jmp    804a037 <calloc@plt+0x5e7>
mov    0x44(%esp),%eax
xor    %ecx,%ecx
call   804b4d0 <calloc@plt+0x1a80>
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x48(%esp)
jmp    804a200 <calloc@plt+0x7b0>
cmpl   $0x0,0x20(%esp)
jne    804a757 <calloc@plt+0xd07>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804bc10 <calloc@plt+0x21c0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80494d0 <mnt_reset_table@plt>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %eax,0x1c(%esp)
mov    %ecx,0x18(%esp)
jmp    804a312 <calloc@plt+0x8c2>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804bf00 <calloc@plt+0x24b0>
test   %eax,%eax
mov    %eax,%edi
jne    804a794 <calloc@plt+0xd44>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   804bc10 <calloc@plt+0x21c0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80494d0 <mnt_reset_table@plt>
testb  $0x8,0x8051394
je     804a742 <calloc@plt+0xcf2>
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
xor    %edi,%edi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80499e0 <mnt_free_table@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   80496c0 <mnt_free_tabdiff@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80497f0 <mnt_free_iter@plt>
jmp    804a6dd <calloc@plt+0xc8d>
cmpl   $0x0,0x805121c
jne    804a1a6 <calloc@plt+0x756>
testb  $0x8,0x8051394
je     804a1a6 <calloc@plt+0x756>
mov    %ebx,(%esp)
call   80497b0 <mnt_iter_get_direction@plt>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x80511d4,%eax
mov    %eax,0x4(%esp)
call   80494b0 <mnt_table_find_source@plt>
test   %eax,%eax
mov    %eax,0x68(%esp)
jne    804a1ce <calloc@plt+0x77e>
testb  $0x40,0x8051394
jne    804a6c6 <calloc@plt+0xc76>
mov    %ebx,(%esp)
call   80497b0 <mnt_iter_get_direction@plt>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x80511d4,%eax
mov    %eax,0x4(%esp)
call   8049880 <mnt_table_find_target@plt>
mov    %eax,0x68(%esp)
jmp    804a6ba <calloc@plt+0xc6a>
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049660 <mnt_diff_tables@plt>
mov    %eax,%edi
jmp    804a36a <calloc@plt+0x91a>
movl   $0x5,0x8(%esp)
or     $0xffffffff,%edi
movl   $0x804e0d8,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
mov    0x2c(%esp),%ebx
movl   $0x0,0x44(%esp)
jmp    804a037 <calloc@plt+0x5e7>
mov    0x80511d4,%esi
test   %esi,%esi
je     8049eb1 <calloc@plt+0x461>
movl   $0x6,0x8(%esp)
movl   $0x804e396,0x4(%esp)
mov    %esi,(%esp)
call   80499c0 <strncmp@plt>
test   %eax,%eax
je     804a8d8 <calloc@plt+0xe88>
movl   $0x5,0x8(%esp)
movl   $0x804e39d,0x4(%esp)
mov    %esi,(%esp)
call   80499c0 <strncmp@plt>
test   %eax,%eax
jne    8049eb1 <calloc@plt+0x461>
or     $0x40,%ebx
mov    %ebx,0x8051394
jmp    8049eb1 <calloc@plt+0x461>
cmpl   $0x0,0x80511ec
jne    8049e98 <calloc@plt+0x448>
cmpl   $0x0,0x8051204
jne    8049e98 <calloc@plt+0x448>
cmpl   $0x0,0x805121c
jne    8049e98 <calloc@plt+0x448>
test   $0x8,%bl
jne    8049e98 <calloc@plt+0x448>
jmp    8049e9f <calloc@plt+0x44f>
xor    %edi,%edi
lea    0x0(%esi),%esi
jmp    804a6d5 <calloc@plt+0xc85>
mov    0x48(%esp),%edi
jmp    804a6d5 <calloc@plt+0xc85>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80499e0 <mnt_free_table@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e3a3,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80498f0 <warn@plt>
xor    %ebx,%ebx
or     $0xffffffff,%edi
movl   $0x0,0x44(%esp)
jmp    804a037 <calloc@plt+0x5e7>
movl   $0x5,0x8(%esp)
movl   $0x804e0fc,0x4(%esp)
jmp    804a23a <calloc@plt+0x7ea>
cmpl   $0x0,0x80511ec
jne    804a10b <calloc@plt+0x6bb>
cmpl   $0x0,0x8051204
jne    804a10b <calloc@plt+0x6bb>
cmpl   $0x0,0x805121c
jne    804a10b <calloc@plt+0x6bb>
mov    0x2c(%esp),%edx
xor    %ecx,%ecx
mov    0x44(%esp),%eax
movl   $0x0,(%esp)
call   804b560 <calloc@plt+0x1b10>
mov    %eax,%edi
jmp    804a6dd <calloc@plt+0xc8d>
movl   $0x5,0x8(%esp)
movl   $0x804e0b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
jmp    804a966 <calloc@plt+0xf16>
movl   $0x5,0x8(%esp)
mov    $0x1,%edi
movl   $0x804e2bc,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
jmp    804a794 <calloc@plt+0xd44>
movl   $0x5,0x8(%esp)
movl   $0x804e3d7,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
jmp    804a794 <calloc@plt+0xd44>
movl   $0x5,0x8(%esp)
or     $0xffffffff,%edi
movl   $0x804e144,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
jmp    804a6d5 <calloc@plt+0xc85>
movl   $0x5,0x8(%esp)
or     $0xffffffff,%edi
movl   $0x804e3c7,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80498f0 <warn@plt>
jmp    804a794 <calloc@plt+0xd44>
movl   $0x5,0x8(%esp)
or     $0xffffffff,%edi
movl   $0x804e16c,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
jmp    804a794 <calloc@plt+0xd44>
mov    $0x804e355,%eax
call   8049a60 <calloc@plt+0x10>
mov    $0x804e36b,%eax
call   8049a60 <calloc@plt+0x10>
movl   $0x5,0x8(%esp)
movl   $0x804e33e,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049910 <errx@plt>
movl   $0x804e648,0xc(%esp)
movl   $0xa0,0x8(%esp)
movl   $0x804e287,0x4(%esp)
movl   $0x804e3b1,(%esp)
call   8049a30 <__assert_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e04c,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049910 <errx@plt>
movl   $0x5,0x8(%esp)
or     $0xffffffff,%edi
movl   $0x804e144,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
movl   $0x0,0x38(%esp)
jmp    804a794 <calloc@plt+0xd44>
movl   $0x5,0x8(%esp)
or     $0xffffffff,%edi
movl   $0x804e0b4,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
jmp    804a794 <calloc@plt+0xd44>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804d8f0
push   $0x804d880
push   %ecx
push   %esi
push   $0x8049aa0
call   8049750 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80512e3,%eax
sub    $0x80512e0,%eax
cmp    $0x6,%eax
ja     804ac30 <calloc@plt+0x11e0>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804ac2f <calloc@plt+0x11df>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80512e0,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80512e0,%eax
sub    $0x80512e0,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804ac69 <calloc@plt+0x1219>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804ac68 <calloc@plt+0x1218>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80512e0,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8051328
jne    804acac <calloc@plt+0x125c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804ac20 <calloc@plt+0x11d0>
movb   $0x1,0x8051328
leave
repz ret
xchg   %ax,%ax
mov    0x8050f08,%eax
test   %eax,%eax
je     804acd8 <calloc@plt+0x1288>
mov    $0x0,%eax
test   %eax,%eax
je     804acd8 <calloc@plt+0x1288>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8050f08,(%esp)
call   *%eax
leave
jmp    804ac50 <calloc@plt+0x1200>
nop
jmp    804ac50 <calloc@plt+0x1200>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x804e212,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80498f0 <warn@plt>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
mov    0x80512e0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804d948,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    $0x80511d0,%ebx
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804d9ec,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804dae0,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804db78,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804dcb0,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804ddb8,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804dedc,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e22d,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
mov    (%ebx),%eax
add    $0x18,%ebx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,0x10(%esp)
mov    -0x28(%ebx),%edx
movl   $0x804e242,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
call   8049980 <__fprintf_chk@plt>
cmp    $0x80512f0,%ebx
jne    804aeb8 <calloc@plt+0x1468>
movl   $0x5,0x8(%esp)
movl   $0x804dfe0,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049980 <__fprintf_chk@plt>
xor    %eax,%eax
cmp    0x80512e4,%esi
sete   %al
mov    %eax,(%esp)
call   8049700 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x8051394,%eax
mov    0x20(%esp),%ebx
shr    $0x4,%eax
mov    %eax,%edi
and    $0x1,%edi
mov    %edi,%eax
movzbl %al,%esi
mov    0x80511ec,%eax
test   %eax,%eax
je     804af91 <calloc@plt+0x1541>
mov    0x8051340,%edx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
call   8049900 <mnt_fs_match_target@plt>
mov    %esi,%edx
test   %eax,%eax
je     804aff2 <calloc@plt+0x15a2>
mov    0x80511d4,%eax
test   %eax,%eax
je     804afb6 <calloc@plt+0x1566>
mov    0x8051340,%edx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
call   8049920 <mnt_fs_match_source@plt>
mov    %esi,%edx
test   %eax,%eax
je     804aff2 <calloc@plt+0x15a2>
mov    0x8051204,%eax
test   %eax,%eax
je     804afd1 <calloc@plt+0x1581>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80498c0 <mnt_fs_match_fstype@plt>
mov    %esi,%edx
test   %eax,%eax
je     804aff2 <calloc@plt+0x15a2>
mov    0x805121c,%eax
test   %eax,%eax
je     804afea <calloc@plt+0x159a>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049830 <mnt_fs_match_options@plt>
test   %eax,%eax
je     804b000 <calloc@plt+0x15b0>
mov    %edi,%eax
xor    $0x1,%eax
movzbl %al,%edx
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
mov    %esi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x24,%esp
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049780 <mnt_fs_get_tag@plt>
test   %eax,%eax
jne    804b049 <calloc@plt+0x15f9>
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494a0 <strcmp@plt>
test   %eax,%eax
je     804b088 <calloc@plt+0x1638>
mov    %ebx,(%esp)
call   8049470 <mnt_fs_get_source@plt>
test   %eax,%eax
je     804b098 <calloc@plt+0x1648>
mov    0x8051340,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80495b0 <mnt_resolve_spec@plt>
test   %eax,%eax
je     804b098 <calloc@plt+0x1648>
mov    %eax,0x4(%esp)
mov    0x8051340,%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8049570 <mnt_cache_find_tag_value@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x1c(%esp),%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
movl   $0x804e24d,0x4(%esp)
mov    %esi,(%esp)
mov    %ebx,0x8(%esp)
call   8049870 <strncasecmp@plt>
test   %eax,%eax
jne    804b0cc <calloc@plt+0x167c>
cmp    $0x4,%ebx
mov    $0x3,%al
je     804b120 <calloc@plt+0x16d0>
mov    %ebx,0x8(%esp)
movl   $0x804e25b,0x4(%esp)
mov    %esi,(%esp)
call   8049870 <strncasecmp@plt>
test   %eax,%eax
jne    804b0e9 <calloc@plt+0x1699>
cmp    $0x5,%ebx
je     804b138 <calloc@plt+0x16e8>
mov    %ebx,0x8(%esp)
movl   $0x804e252,0x4(%esp)
mov    %esi,(%esp)
call   8049870 <strncasecmp@plt>
test   %eax,%eax
je     804b128 <calloc@plt+0x16d8>
mov    %ebx,0x8(%esp)
movl   $0x804e259,0x4(%esp)
mov    %esi,(%esp)
call   8049870 <strncasecmp@plt>
test   %eax,%eax
jne    804b140 <calloc@plt+0x16f0>
cmp    $0x7,%ebx
mov    $0x4,%al
jne    804b140 <calloc@plt+0x16f0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmp    $0x6,%ebx
mov    $0x2,%al
jne    804b101 <calloc@plt+0x16b1>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    $0x1,%eax
jmp    804b120 <calloc@plt+0x16d0>
nop
movl   $0x5,0x8(%esp)
movl   $0x804e261,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049790 <warnx@plt>
mov    $0xffffffff,%eax
jmp    804b120 <calloc@plt+0x16d0>
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    $0x80511c0,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    (%ebx),%ebp
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %ebp,0x4(%esp)
call   8049870 <strncasecmp@plt>
test   %eax,%eax
jne    804b1a9 <calloc@plt+0x1759>
cmpb   $0x0,0x0(%ebp,%edi,1)
je     804b1f0 <calloc@plt+0x17a0>
add    $0x1,%esi
add    $0x18,%ebx
cmp    $0xc,%esi
jne    804b188 <calloc@plt+0x1738>
movl   $0x5,0x8(%esp)
movl   $0x804e274,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049790 <warnx@plt>
mov    $0xffffffff,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,%eax
jmp    804b1e5 <calloc@plt+0x1795>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
cmp    %eax,0x8051358
jle    804b21b <calloc@plt+0x17cb>
mov    0x8051360(,%eax,4),%eax
cmp    $0xb,%eax
jg     804b23f <calloc@plt+0x17ef>
add    $0x1c,%esp
ret
movl   $0x804e65a,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x804e287,0x4(%esp)
movl   $0x804e291,(%esp)
call   8049a30 <__assert_fail@plt>
movl   $0x804e65a,0xc(%esp)
movl   $0x74,0x8(%esp)
movl   $0x804e287,0x4(%esp)
movl   $0x804e008,(%esp)
call   8049a30 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%eax
sub    $0x30,%esp
call   804b200 <calloc@plt+0x17b0>
cmp    $0x8,%eax
ja     804b4c8 <calloc@plt+0x1a78>
jmp    *0x804e580(,%eax,4)
nop
mov    $0x804e507,%edx
mov    %esi,%eax
call   804b010 <calloc@plt+0x15c0>
mov    %eax,%ebx
add    $0x30,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,(%esp)
call   80498d0 <mnt_fs_get_devno@plt>
mov    %edx,%edi
or     %eax,%edi
je     804b4c8 <calloc@plt+0x1a78>
mov    %eax,%ecx
movzbl %al,%ebx
shrd   $0xc,%edx,%ecx
xor    %cl,%cl
or     %ebx,%ecx
testb  $0x12,0x8051390
mov    %ecx,0x10(%esp)
mov    %edx,%ecx
jne    804b428 <calloc@plt+0x19d8>
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
lea    0x2c(%esp),%eax
mov    %ecx,0xc(%esp)
movl   $0x804e2b3,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80496a0 <__asprintf_chk@plt>
xor    %ebx,%ebx
test   %eax,%eax
cmovne 0x2c(%esp),%ebx
jmp    804b29e <calloc@plt+0x184e>
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049680 <mnt_fs_get_root@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049710 <mnt_fs_get_srcpath@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b480 <calloc@plt+0x1a30>
testb  $0x4,0x8051394
jne    804b460 <calloc@plt+0x1a10>
test   %edi,%edi
je     804b29e <calloc@plt+0x184e>
test   %ebx,%ebx
je     804b29e <calloc@plt+0x184e>
testb  $0x80,0x8051394
jne    804b29e <calloc@plt+0x184e>
cmpb   $0x2f,(%edi)
je     804b4b8 <calloc@plt+0x1a68>
lea    0x2c(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %edi,0x10(%esp)
movl   $0x804e2a0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80496a0 <__asprintf_chk@plt>
test   %eax,%eax
cmovg  0x2c(%esp),%ebx
jmp    804b29e <calloc@plt+0x184e>
nop
mov    %esi,(%esp)
call   8049670 <mnt_fs_get_target@plt>
add    $0x30,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049490 <mnt_fs_get_fstype@plt>
add    $0x30,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80499b0 <mnt_fs_get_options@plt>
add    $0x30,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80496d0 <mnt_fs_get_vfs_options@plt>
add    $0x30,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049620 <mnt_fs_get_fs_options@plt>
add    $0x30,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    $0x804e2a7,%edx
call   804b010 <calloc@plt+0x15c0>
add    $0x30,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
shrd   $0x8,%edx,%eax
and    $0xfffff000,%ecx
and    $0xfff,%eax
or     %eax,%ecx
lea    0x2c(%esp),%eax
mov    %ecx,0xc(%esp)
movl   $0x804e2ad,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80496a0 <__asprintf_chk@plt>
jmp    804b30b <calloc@plt+0x18bb>
xchg   %ax,%ax
mov    0x8051340,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80497a0 <mnt_resolve_path@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804b341 <calloc@plt+0x18f1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049470 <mnt_fs_get_source@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b4c8 <calloc@plt+0x1a78>
testb  $0x2,0x8051394
je     804b341 <calloc@plt+0x18f1>
mov    0x8051340,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80495b0 <mnt_resolve_spec@plt>
mov    %eax,%ebx
jmp    804b341 <calloc@plt+0x18f1>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%edi)
je     804b29e <calloc@plt+0x184e>
jmp    804b367 <calloc@plt+0x1917>
nop
xor    %ebx,%ebx
jmp    804b29e <calloc@plt+0x184e>
nop
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804bd40 <calloc@plt+0x22f0>
test   %eax,%eax
mov    %eax,%esi
je     804b531 <calloc@plt+0x1ae1>
mov    0x8051358,%eax
xor    %ebx,%ebx
test   %eax,%eax
jle    804b51c <calloc@plt+0x1acc>
lea    0x0(%esi),%esi
mov    %ebx,%edx
mov    %edi,%eax
call   804b270 <calloc@plt+0x1820>
mov    %ebx,0x4(%esp)
add    $0x1,%ebx
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804be40 <calloc@plt+0x23f0>
cmp    %ebx,0x8051358
jg     804b4f8 <calloc@plt+0x1aa8>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804bee0 <calloc@plt+0x2490>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x5,0x8(%esp)
movl   $0x804e2bc,0x4(%esp)
movl   $0x0,(%esp)
call   8049550 <dcgettext@plt>
mov    %eax,(%esp)
call   80498f0 <warn@plt>
xor    %eax,%eax
jmp    804b52a <calloc@plt+0x1ada>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
test   %ecx,%ecx
mov    %ecx,0x1c(%esp)
movl   $0x0,0x2c(%esp)
je     804b5a8 <calloc@plt+0x1b58>
testb  $0x1,0x8051395
je     804b5c8 <calloc@plt+0x1b78>
mov    0x18(%edi),%eax
lea    0x18(%edi),%edx
cmp    %eax,%edx
jne    804b596 <calloc@plt+0x1b46>
jmp    804b5c8 <calloc@plt+0x1b78>
mov    (%eax),%eax
cmp    %eax,%edx
je     804b5c8 <calloc@plt+0x1b78>
cmp    -0x8(%eax),%ecx
jne    804b590 <calloc@plt+0x1b40>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80498e0 <mnt_table_get_root_fs@plt>
test   %eax,%eax
jne    804b640 <calloc@plt+0x1bf0>
movl   $0x0,0x50(%esp)
movl   $0x0,(%esp)
call   8049510 <mnt_new_iter@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b640 <calloc@plt+0x1bf0>
mov    0x50(%esp),%ecx
mov    %edi,%eax
mov    0x1c(%esp),%edx
call   804b4d0 <calloc@plt+0x1a80>
test   %eax,%eax
mov    %eax,%ebp
jne    804b60c <calloc@plt+0x1bbc>
mov    $0xffffffff,%ebx
jmp    804b62e <calloc@plt+0x1bde>
xchg   %ax,%ax
mov    0x2c(%esp),%ecx
mov    %ebx,%edx
mov    %edi,%eax
mov    %ebp,(%esp)
call   804b560 <calloc@plt+0x1b10>
test   %eax,%eax
jne    804b5ef <calloc@plt+0x1b9f>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049990 <mnt_table_next_child_fs@plt>
test   %eax,%eax
je     804b5f8 <calloc@plt+0x1ba8>
xor    %ebx,%ebx
mov    %esi,(%esp)
call   80497f0 <mnt_free_iter@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%ebx
xor    %esi,%esi
jmp    804b62e <calloc@plt+0x1bde>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
mov    0x28(%eax),%eax
test   %eax,%eax
je     804b6b0 <calloc@plt+0x1c60>
mov    %ecx,%esi
call   804b650 <calloc@plt+0x1c00>
test   %eax,%eax
mov    %eax,%edi
je     804b6d0 <calloc@plt+0x1c80>
mov    0x28(%ebx),%edx
lea    0x20(%ebx),%eax
cmp    %eax,0x1c(%edx)
je     804b6c0 <calloc@plt+0x1c70>
mov    (%ebx),%eax
mov    0x20(%eax),%eax
mov    0x4(%eax),%ebp
mov    %ebp,(%esp)
call   8049740 <strlen@plt>
mov    %eax,%ebx
xor    %eax,%eax
cmp    %ebx,(%esi)
jb     804b6a5 <calloc@plt+0x1c55>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8049500 <memcpy@plt>
lea    (%edi,%ebx,1),%eax
sub    %ebx,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x2,%ebx
mov    $0x804e810,%ebp
jmp    804b68a <calloc@plt+0x1c3a>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804b6a5 <calloc@plt+0x1c55>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
mov    $0x804e241,%eax
test   %ecx,%ecx
cmove  %eax,%ecx
mov    0x8(%ebx),%eax
test   $0x2,%al
jne    804b860 <calloc@plt+0x1e10>
and    $0x10,%eax
mov    %eax,%ebp
je     804b758 <calloc@plt+0x1d08>
mov    %ecx,0x10(%esp)
mov    (%edx),%eax
add    $0x1c,%esi
movl   $0x804e813,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8051320,%eax
mov    %eax,(%esp)
call   8049980 <__fprintf_chk@plt>
cmp    %esi,0x14(%ebx)
je     804b74b <calloc@plt+0x1cfb>
mov    0x8051320,%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   8049950 <fputc@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x18(%esp)
call   8049960 <mbstowcs@plt>
mov    0x18(%esp),%ecx
lea    0x1c(%esi),%edx
mov    %edx,0x18(%esp)
mov    %eax,%edi
lea    -0x1(%eax),%eax
cmp    $0xfffffffd,%eax
mov    0x8(%esi),%eax
cmova  %ebp,%edi
cmova  %ebp,%ecx
cmp    0x14(%ebx),%edx
mov    %eax,0x2c(%esp)
je     804b7ce <calloc@plt+0x1d7e>
cmp    %eax,%edi
jbe    804b7d8 <calloc@plt+0x1d88>
testb  $0x20,0x18(%esi)
je     804b7d8 <calloc@plt+0x1d88>
test   %ecx,%ecx
je     804b7ca <calloc@plt+0x1d7a>
lea    0x2c(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   804c450 <calloc@plt+0x2a00>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
mov    0x2c(%esp),%eax
cmp    $0xffffffff,%edi
jne    804b7dc <calloc@plt+0x1d8c>
xor    %edi,%edi
jmp    804b801 <calloc@plt+0x1db1>
cmp    %eax,%edi
jae    804b799 <calloc@plt+0x1d49>
mov    %edi,0x2c(%esp)
xchg   %ax,%ax
test   %ecx,%ecx
je     804b7fd <calloc@plt+0x1dad>
testb  $0x2,0x8(%ebx)
jne    804b7ec <calloc@plt+0x1d9c>
testb  $0x80,0x18(%esi)
jne    804b8e8 <calloc@plt+0x1e98>
mov    0x8051320,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049a00 <fputs@plt>
mov    0x2c(%esp),%eax
cmp    %edi,%eax
jbe    804b828 <calloc@plt+0x1dd8>
mov    %edi,%ebp
nop
mov    0x8051320,%eax
add    $0x1,%ebp
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   8049950 <fputc@plt>
mov    0x2c(%esp),%eax
cmp    %ebp,%eax
ja     804b808 <calloc@plt+0x1db8>
mov    0x18(%esp),%edx
cmp    0x14(%ebx),%edx
je     804b74b <calloc@plt+0x1cfb>
cmp    %eax,%edi
mov    0x8051320,%eax
jbe    804b844 <calloc@plt+0x1df4>
testb  $0x20,0x18(%esi)
je     804b882 <calloc@plt+0x1e32>
mov    %eax,0x4(%esp)
movl   $0x20,(%esp)
call   8049950 <fputc@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8051320,%eax
add    $0x1c,%esi
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049a00 <fputs@plt>
cmp    %esi,0x14(%ebx)
jne    804b736 <calloc@plt+0x1ce6>
jmp    804b74b <calloc@plt+0x1cfb>
mov    %eax,0x4(%esp)
lea    0x10(%ebx),%ebp
xor    %edi,%edi
movl   $0xa,(%esp)
call   8049950 <fputc@plt>
nop
mov    0x10(%ebx),%ecx
cmp    %ecx,%ebp
jne    804b8ae <calloc@plt+0x1e5e>
jmp    804b920 <calloc@plt+0x1ed0>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%ecx
cmp    %ecx,%ebp
je     804b920 <calloc@plt+0x1ed0>
cmp    -0x18(%ecx),%edi
jne    804b8a8 <calloc@plt+0x1e58>
sub    $0x1c,%ecx
movl   $0x804e811,0xc(%esp)
mov    0x8(%ecx),%eax
add    $0x1,%edi
movl   $0x804e81f,0x4(%esp)
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x8(%esp)
call   80498a0 <__printf_chk@plt>
cmp    %edi,0x4(%esi)
jae    804b898 <calloc@plt+0x1e48>
jmp    804b74b <calloc@plt+0x1cfb>
mov    0x8(%esi),%ebp
mov    0x8051320,%eax
mov    %ecx,0x10(%esp)
movl   $0x804e81b,0x8(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049980 <__fprintf_chk@plt>
cmp    %ebp,%edi
mov    0x2c(%esp),%eax
cmovb  %ebp,%edi
jmp    804b801 <calloc@plt+0x1db1>
xchg   %ax,%ax
xor    %ecx,%ecx
jmp    804b8b6 <calloc@plt+0x1e66>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x4(%eax),%eax
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebp
mov    %ecx,0x1c(%esp)
mov    (%eax,%edx,4),%edi
movl   $0x0,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
call   80497c0 <memset@plt>
test   %edi,%edi
mov    0x1c(%esp),%ecx
je     804ba30 <calloc@plt+0x1fe0>
testb  $0x40,(%ecx)
je     804ba08 <calloc@plt+0x1fb8>
mov    0x28(%ebx),%eax
test   %eax,%eax
je     804b9e8 <calloc@plt+0x1f98>
lea    0x44(%esp),%ecx
mov    %esi,%edx
call   804b650 <calloc@plt+0x1c00>
test   %eax,%eax
je     804ba30 <calloc@plt+0x1fe0>
mov    (%ebx),%edx
mov    0x20(%edx),%ecx
mov    0x28(%ebx),%edx
test   %edx,%edx
je     804ba34 <calloc@plt+0x1fe4>
add    $0x20,%ebx
cmp    %ebx,0x1c(%edx)
mov    %edi,0x18(%esp)
je     804ba28 <calloc@plt+0x1fd8>
mov    (%ecx),%edx
mov    %edx,0x14(%esp)
mov    0x44(%esp),%edx
movl   $0x804e824,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049480 <__snprintf_chk@plt>
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    %edi,0xc(%esp)
movl   $0x804e284,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80497d0 <snprintf@plt>
mov    %esi,%eax
jmp    804b9da <calloc@plt+0x1f8a>
xchg   %ax,%ax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049810 <strncpy@plt>
mov    %esi,%eax
movb   $0x0,-0x1(%esi,%ebp,1)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8(%ecx),%edx
jmp    804b9ac <calloc@plt+0x1f5c>
xor    %eax,%eax
jmp    804b9da <calloc@plt+0x1f8a>
mov    0x44(%esp),%ebp
jmp    804b9ea <calloc@plt+0x1f9a>
lea    0x0(%esi),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%eax),%eax
mov    0x10(%eax),%ebx
add    $0x10,%eax
cmp    %eax,%ebx
je     804ba8b <calloc@plt+0x203b>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x18(%ebx),%edx
lea    -0x4(%ebx),%ecx
mov    %esi,%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804b930 <calloc@plt+0x1ee0>
lea    -0x1c(%ebx),%edx
mov    %eax,%ecx
mov    (%esi),%eax
call   804b6e0 <calloc@plt+0x1c90>
mov    (%esi),%eax
mov    (%ebx),%ebx
add    $0x10,%eax
cmp    %eax,%ebx
jne    804ba60 <calloc@plt+0x2010>
mov    0x8051320,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049950 <fputc@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xc,%esp
call   804ba40 <calloc@plt+0x1ff0>
lea    0x18(%ebx),%esi
mov    0x18(%ebx),%ebx
cmp    %ebx,%esi
je     804bae2 <calloc@plt+0x2092>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x20(%ebx),%eax
mov    %ebp,%ecx
mov    %edi,%edx
call   804bab0 <calloc@plt+0x2060>
mov    (%ebx),%ebx
cmp    %ebx,%esi
jne    804bad0 <calloc@plt+0x2080>
add    $0xc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0xc(%eax),%eax
test   %eax,%eax
je     804bb71 <calloc@plt+0x2121>
testb  $0x18,0x8(%edi)
jne    804bb71 <calloc@plt+0x2121>
lea    0x18(%edi),%eax
cmp    %eax,0x18(%edi)
je     804bb71 <calloc@plt+0x2121>
mov    0x10(%edi),%ebx
lea    0x10(%edi),%eax
mov    %ecx,%ebp
mov    %edx,%esi
mov    %eax,0x18(%esp)
lea    -0x1(%edx,%ecx,1),%ecx
cmp    %eax,%ebx
je     804bb5c <calloc@plt+0x210c>
mov    %edi,0x1c(%esp)
mov    %ecx,%edi
lea    0x0(%esi),%esi
mov    %ebp,0x8(%esp)
mov    -0x1c(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049810 <strncpy@plt>
mov    0x1c(%esp),%eax
lea    -0x1c(%ebx),%edx
movb   $0x0,(%edi)
mov    %esi,%ecx
call   804b6e0 <calloc@plt+0x1c90>
mov    (%ebx),%ebx
cmp    %ebx,0x18(%esp)
jne    804bb30 <calloc@plt+0x20e0>
mov    0x8051320,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049950 <fputc@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x24,0x4(%esp)
mov    0x20(%esp),%esi
movl   $0x1,(%esp)
call   8049a50 <calloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804bc00 <calloc@plt+0x21b0>
mov    %esi,0x8(%eax)
lea    0x18(%eax),%eax
and    $0x4,%esi
mov    %eax,0x18(%ebx)
mov    %eax,0x1c(%ebx)
lea    0x10(%ebx),%eax
mov    %eax,0x10(%ebx)
mov    %eax,0x14(%ebx)
je     804bbd8 <calloc@plt+0x2188>
movl   $0x804e858,0x20(%ebx)
movl   $0x1,0xc(%ebx)
mov    %ebx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0xe,(%esp)
mov    $0x804e829,%edi
call   8049930 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804bbbe <calloc@plt+0x216e>
movl   $0x804e84c,0x20(%ebx)
jmp    804bbc5 <calloc@plt+0x2175>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    804bbce <calloc@plt+0x217e>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
test   %esi,%esi
je     804bc4f <calloc@plt+0x21ff>
mov    0x18(%esi),%ebx
lea    0x18(%esi),%edi
cmp    %ebx,%edi
je     804bc4f <calloc@plt+0x21ff>
mov    (%ebx),%edx
sub    $0x10,%ebx
mov    0x14(%ebx),%eax
mov    %eax,0x4(%edx)
mov    %edx,(%eax)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   80494e0 <free@plt>
mov    %ebx,(%esp)
call   80494e0 <free@plt>
mov    0x18(%esi),%ebx
cmp    %edi,%ebx
jne    804bc28 <calloc@plt+0x21d8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804bcb0 <calloc@plt+0x2260>
mov    %ebx,(%esp)
lea    0x10(%ebx),%esi
call   804bc10 <calloc@plt+0x21c0>
mov    0x10(%ebx),%eax
cmp    %eax,%esi
je     804bc9c <calloc@plt+0x224c>
nop
mov    (%eax),%ecx
sub    $0x1c,%eax
mov    0x20(%eax),%edx
mov    %edx,0x4(%ecx)
mov    %ecx,(%edx)
mov    %eax,(%esp)
call   80494e0 <free@plt>
mov    0x10(%ebx),%eax
cmp    %esi,%eax
jne    804bc80 <calloc@plt+0x2230>
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    80494e0 <free@plt>
lea    0x0(%esi),%esi
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
fldl   0x28(%esp)
mov    0x30(%esp),%esi
test   %ebx,%ebx
je     804bd38 <calloc@plt+0x22e8>
movl   $0x24,0x4(%esp)
fstpl  0x8(%esp)
movl   $0x1,(%esp)
call   8049a50 <calloc@plt>
test   %eax,%eax
je     804bd3a <calloc@plt+0x22ea>
mov    0x24(%esp),%edx
mov    %esi,0x18(%eax)
fldl   0x8(%esp)
and    $0x40,%esi
fstpl  0x10(%eax)
mov    %edx,(%eax)
mov    (%ebx),%edx
lea    0x1(%edx),%ecx
mov    %ecx,(%ebx)
mov    %edx,0x4(%eax)
jne    804bd30 <calloc@plt+0x22e0>
lea    0x1c(%eax),%edx
add    $0x10,%ebx
mov    %edx,0x20(%eax)
mov    0x4(%ebx),%ecx
mov    %edx,0x4(%ebx)
mov    %ebx,0x1c(%eax)
mov    %ecx,0x20(%eax)
mov    %edx,(%ecx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
orl    $0x40,0x8(%ebx)
jmp    804bd10 <calloc@plt+0x22c0>
xchg   %ax,%ax
fstp   %st(0)
xor    %eax,%eax
jmp    804bd27 <calloc@plt+0x22d7>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
test   %esi,%esi
je     804bde8 <calloc@plt+0x2398>
mov    (%esi),%ebp
test   %ebp,%ebp
je     804bde8 <calloc@plt+0x2398>
movl   $0x2c,0x4(%esp)
movl   $0x1,(%esp)
call   8049a50 <calloc@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0xc(%esp)
je     804bde8 <calloc@plt+0x2398>
movl   $0x4,0x4(%esp)
mov    %ebp,(%esp)
call   8049a50 <calloc@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     804bdf0 <calloc@plt+0x23a0>
lea    0x10(%ebx),%edx
lea    0x18(%ebx),%ecx
lea    0x20(%ebx),%eax
mov    %edx,0x14(%ebx)
mov    %eax,0x24(%ebx)
mov    %ecx,0x18(%ebx)
mov    %ecx,0x1c(%ebx)
mov    0x1c(%esi),%ecx
mov    %esi,(%ebx)
add    $0x18,%esi
mov    %edi,0x28(%ebx)
mov    %eax,0x20(%ebx)
mov    %edx,0x4(%esi)
test   %edi,%edi
mov    %esi,0x10(%ebx)
mov    %ecx,0x14(%ebx)
mov    %edx,(%ecx)
je     804be08 <calloc@plt+0x23b8>
mov    0x1c(%edi),%edx
add    $0x18,%edi
mov    %eax,0x4(%edi)
mov    %edi,0x20(%ebx)
mov    %edx,0x24(%ebx)
mov    %eax,(%edx)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <free@plt>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebx,%eax
jmp    804bddb <calloc@plt+0x238b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    0x8(%esp),%ecx
mov    0x10(%edx),%eax
add    $0x10,%edx
cmp    %edx,%eax
jne    804be2e <calloc@plt+0x23de>
jmp    804be38 <calloc@plt+0x23e8>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
cmp    %edx,%eax
je     804be38 <calloc@plt+0x23e8>
cmp    %ecx,-0x18(%eax)
jne    804be28 <calloc@plt+0x23d8>
sub    $0x1c,%eax
ret
nop
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%ecx
mov    0x38(%esp),%esi
test   %ebx,%ebx
je     804bec0 <calloc@plt+0x2470>
mov    (%ebx),%edx
mov    0x10(%edx),%eax
add    $0x10,%edx
cmp    %edx,%eax
jne    804be6e <calloc@plt+0x241e>
jmp    804bec0 <calloc@plt+0x2470>
lea    0x0(%esi),%esi
mov    (%eax),%eax
cmp    %edx,%eax
je     804bec0 <calloc@plt+0x2470>
cmp    -0x18(%eax),%ecx
jne    804be68 <calloc@plt+0x2418>
sub    $0x1c,%eax
test   %eax,%eax
je     804bec0 <calloc@plt+0x2470>
mov    0x4(%eax),%edx
mov    0x4(%ebx),%eax
lea    (%eax,%edx,4),%edi
mov    (%edi),%eax
test   %eax,%eax
je     804bea2 <calloc@plt+0x2452>
mov    %eax,(%esp)
call   8049740 <strlen@plt>
mov    0xc(%ebx),%ecx
xor    %edx,%edx
mov    %ecx,%ebp
sub    %eax,%ebp
cmp    %ecx,%eax
cmovb  %ebp,%edx
mov    %edx,0xc(%ebx)
test   %esi,%esi
mov    %esi,(%edi)
je     804becd <calloc@plt+0x247d>
mov    %esi,(%esp)
call   8049740 <strlen@plt>
add    %eax,0xc(%ebx)
add    $0x1c,%esp
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
test   %eax,%eax
je     804bef2 <calloc@plt+0x24a2>
mov    0x8(%esp),%edx
mov    %edx,0x8(%eax)
xor    %eax,%eax
ret
mov    $0xffffffff,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%ebx
test   %ebx,%ebx
je     804c3b8 <calloc@plt+0x2968>
mov    0x70(%esp),%eax
mov    0xc(%eax),%ecx
test   %ecx,%ecx
jne    804bfe0 <calloc@plt+0x2590>
mov    0x4(%eax),%ecx
mov    0x70(%esp),%eax
mov    0x18(%eax),%esi
lea    0x18(%eax),%ebp
cmp    %ebp,%esi
je     804c350 <calloc@plt+0x2900>
mov    %esi,%eax
mov    %ecx,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%eax),%edx
mov    (%eax),%eax
cmp    %edx,%ebx
cmovb  %edx,%ebx
cmp    %ebp,%eax
jne    804bf40 <calloc@plt+0x24f0>
mov    %ebx,(%esp)
mov    %ecx,0x18(%esp)
call   80496b0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804c3b8 <calloc@plt+0x2968>
mov    0x70(%esp),%eax
mov    0x18(%esp),%ecx
mov    0xc(%eax),%edx
test   %edx,%edx
je     804bf7f <calloc@plt+0x252f>
testb  $0x12,0x8(%eax)
je     804c093 <calloc@plt+0x2643>
mov    0x70(%esp),%eax
mov    %ebx,%ecx
testb  $0x40,0x8(%eax)
je     804c048 <calloc@plt+0x25f8>
mov    0x1c(%esp),%edx
call   804baf0 <calloc@plt+0x20a0>
mov    0x70(%esp),%eax
mov    0x18(%eax),%esi
cmp    %ebp,%esi
je     804bfb9 <calloc@plt+0x2569>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esi),%eax
test   %eax,%eax
je     804c080 <calloc@plt+0x2630>
mov    (%esi),%esi
cmp    %ebp,%esi
jne    804bfa8 <calloc@plt+0x2558>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <free@plt>
mov    0x70(%esp),%eax
movl   $0x0,0xc(%eax)
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,0x18(%esp)
jne    804bf25 <calloc@plt+0x24d5>
lea    0x48(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x0,(%esp)
call   80495e0 <ioctl@plt>
test   %eax,%eax
jne    804c387 <calloc@plt+0x2937>
movzwl 0x4a(%esp),%eax
mov    0x70(%esp),%edi
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,0x4(%edi)
jne    804bf25 <calloc@plt+0x24d5>
mov    0x70(%esp),%eax
mov    $0x50,%ecx
movl   $0x50,0x4(%eax)
jmp    804bf25 <calloc@plt+0x24d5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edi
mov    0x70(%esp),%eax
mov    %edi,%edx
call   804baf0 <calloc@plt+0x20a0>
mov    0x70(%esp),%eax
mov    0x18(%eax),%esi
cmp    %ebp,%esi
je     804bfb9 <calloc@plt+0x2569>
xchg   %ax,%ax
lea    -0x10(%esi),%eax
mov    %ebx,%ecx
mov    %edi,%edx
call   804ba40 <calloc@plt+0x1ff0>
mov    (%esi),%esi
cmp    %ebp,%esi
jne    804c068 <calloc@plt+0x2618>
jmp    804bfb9 <calloc@plt+0x2569>
nop
mov    0x1c(%esp),%edx
lea    -0x10(%esi),%eax
mov    %ebx,%ecx
call   804bab0 <calloc@plt+0x2060>
jmp    804bfb3 <calloc@plt+0x2563>
mov    0x10(%eax),%edi
add    $0x10,%eax
mov    %eax,0x20(%esp)
cmp    %eax,%edi
je     804c3c2 <calloc@plt+0x2972>
mov    %ebp,0x18(%esp)
mov    0x1c(%esp),%ebp
lea    0x0(%esi),%esi
cmp    0x18(%esp),%esi
lea    -0x4(%edi),%eax
mov    %eax,0x10(%esp)
je     804c102 <calloc@plt+0x26b2>
lea    0x0(%esi),%esi
mov    -0x18(%edi),%edx
lea    -0x10(%esi),%eax
mov    0x10(%esp),%ecx
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   804b930 <calloc@plt+0x1ee0>
test   %eax,%eax
je     804c0fa <calloc@plt+0x26aa>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049960 <mbstowcs@plt>
cmp    -0x14(%edi),%eax
jbe    804c0fa <calloc@plt+0x26aa>
mov    %eax,-0x14(%edi)
mov    (%esi),%esi
cmp    0x18(%esp),%esi
jne    804c0c0 <calloc@plt+0x2670>
mov    (%edi),%edi
cmp    0x20(%esp),%edi
je     804c113 <calloc@plt+0x26c3>
mov    0x70(%esp),%eax
mov    0x18(%eax),%esi
jmp    804c0b0 <calloc@plt+0x2660>
mov    0x70(%esp),%eax
mov    0x18(%esp),%ebp
mov    0x10(%eax),%esi
cmp    0x20(%esp),%esi
je     804c3d1 <calloc@plt+0x2981>
xor    %edi,%edi
mov    %ebx,0x18(%esp)
mov    %ebp,0x10(%esp)
jmp    804c159 <calloc@plt+0x2709>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,-0x3(%esi)
jne    804c182 <calloc@plt+0x2732>
mov    %eax,-0x14(%esi)
mov    0x70(%esp),%ebx
xor    %edx,%edx
cmp    %esi,0x14(%ebx)
mov    (%esi),%esi
setne  %dl
add    %edx,%eax
add    %eax,%edi
cmp    0x20(%esp),%esi
je     804c1d5 <calloc@plt+0x2785>
mov    -0x1c(%esi),%eax
test   %eax,%eax
je     804c1d0 <calloc@plt+0x2780>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049960 <mbstowcs@plt>
mov    %eax,-0x10(%esi)
mov    -0x14(%esi),%edx
cmp    %eax,%edx
jb     804c138 <calloc@plt+0x26e8>
fldl   -0xc(%esi)
fld1
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     804c1c0 <calloc@plt+0x2770>
fnstcw 0x36(%esp)
movzwl 0x36(%esp),%ecx
mov    $0xc,%ch
mov    %cx,0x34(%esp)
fldcw  0x34(%esp)
fistpll 0x38(%esp)
fldcw  0x36(%esp)
mov    0x38(%esp),%ecx
cmp    %ecx,%edx
jae    804c1c2 <calloc@plt+0x2772>
cmp    %eax,%ecx
jbe    804c1c2 <calloc@plt+0x2772>
mov    %ecx,-0x14(%esi)
mov    %ecx,%eax
jmp    804c141 <calloc@plt+0x26f1>
xchg   %ax,%ax
fstp   %st(0)
mov    %edx,%eax
jmp    804c141 <calloc@plt+0x26f1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x10(%esi),%eax
jmp    804c17b <calloc@plt+0x272b>
mov    0x70(%esp),%eax
mov    0x10(%esp),%ebp
mov    0x18(%esp),%ebx
mov    %edi,0x18(%esp)
mov    0x4(%eax),%edx
cmp    %edx,0x18(%esp)
je     804bf7f <calloc@plt+0x252f>
jb     804c357 <calloc@plt+0x2907>
jbe    804bf7f <calloc@plt+0x252f>
mov    0x70(%esp),%eax
mov    %edx,%esi
mov    %edx,0x28(%esp)
mov    0x20(%esp),%edi
fld1
movl   $0x0,0x2c(%esp)
mov    %ebx,0x30(%esp)
mov    0x10(%eax),%eax
mov    %ebp,0x20(%esp)
mov    %eax,0x24(%esp)
mov    $0x1,%eax
mov    %eax,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%ecx
mov    0x18(%esp),%ebx
cmp    %edi,%ecx
je     804c348 <calloc@plt+0x28f8>
cmp    %esi,%ebx
jbe    804c33d <calloc@plt+0x28ed>
mov    %edx,%eax
xor    $0x1,%eax
and    $0x1,%eax
fld    %st(0)
mov    %eax,%ebp
jmp    804c2b2 <calloc@plt+0x2862>
xchg   %ax,%ax
fld1
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804c2a8 <calloc@plt+0x2858>
mov    -0x14(%ecx),%eax
test   %eax,%eax
mov    %eax,0x10(%esp)
je     804c2a8 <calloc@plt+0x2858>
test   %ebx,%ebx
je     804c2a8 <calloc@plt+0x2858>
mov    %ebp,%eax
test   %al,%al
je     804c2a8 <calloc@plt+0x2858>
mov    0x10(%esp),%eax
sub    $0x1,%ebx
sub    $0x1,%eax
mov    %eax,-0x14(%ecx)
jmp    804c2a8 <calloc@plt+0x2858>
xchg   %ax,%ax
fstp   %st(0)
jmp    804c2a8 <calloc@plt+0x2858>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
jmp    804c2a8 <calloc@plt+0x2858>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
jmp    804c2a8 <calloc@plt+0x2858>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
mov    (%ecx),%ecx
cmp    %edi,%ecx
je     804c320 <calloc@plt+0x28d0>
cmp    %esi,%ebx
jbe    804c328 <calloc@plt+0x28d8>
fldl   -0xc(%ecx)
fucomi %st(1),%st
mov    -0x4(%ecx),%eax
jbe    804c2c0 <calloc@plt+0x2870>
test   $0x20,%al
je     804c288 <calloc@plt+0x2838>
test   $0x40,%al
jne    804c290 <calloc@plt+0x2840>
test   %edx,%edx
je     804c2cc <calloc@plt+0x287c>
test   $0x20,%al
je     804c298 <calloc@plt+0x2848>
mov    -0x14(%ecx),%eax
cmp    -0x10(%ecx),%eax
je     804c2a0 <calloc@plt+0x2850>
fld1
fucomip %st(1),%st
jbe    804c258 <calloc@plt+0x2808>
test   %eax,%eax
je     804c258 <calloc@plt+0x2808>
test   %ebx,%ebx
je     804c258 <calloc@plt+0x2808>
mov    %eax,0x10(%esp)
movl   $0x0,0x14(%esp)
fildll 0x10(%esp)
fildll 0x28(%esp)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804c258 <calloc@plt+0x2808>
sub    $0x1,%eax
sub    $0x1,%ebx
mov    %eax,-0x14(%ecx)
jmp    804c258 <calloc@plt+0x2808>
xchg   %ax,%ax
fstp   %st(0)
jmp    804c32a <calloc@plt+0x28da>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
cmp    0x18(%esp),%ebx
je     804c348 <calloc@plt+0x28f8>
cmp    %esi,%ebx
jbe    804c374 <calloc@plt+0x2924>
mov    %ebx,0x18(%esp)
jmp    804c230 <calloc@plt+0x27e0>
mov    0x18(%esp),%ebx
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
je     804c378 <calloc@plt+0x2928>
xor    %edx,%edx
jmp    804c330 <calloc@plt+0x28e0>
mov    %ecx,%ebx
jmp    804bf4e <calloc@plt+0x24fe>
mov    0x70(%esp),%eax
mov    0x14(%eax),%eax
testb  $0x80,-0x4(%eax)
jne    804bf7f <calloc@plt+0x252f>
sub    0x18(%esp),%edx
add    %edx,-0x14(%eax)
jmp    804bf7f <calloc@plt+0x252f>
fstp   %st(0)
jmp    804c37a <calloc@plt+0x292a>
fstp   %st(0)
mov    0x30(%esp),%ebx
mov    0x20(%esp),%ebp
jmp    804bf7f <calloc@plt+0x252f>
movl   $0x804e3bf,(%esp)
call   8049690 <getenv@plt>
test   %eax,%eax
je     804c02f <calloc@plt+0x25df>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <strtol@plt>
jmp    804c01e <calloc@plt+0x25ce>
mov    $0xffffffff,%eax
jmp    804bfd2 <calloc@plt+0x2582>
mov    %ecx,%edx
movl   $0x0,0x18(%esp)
jmp    804c1e8 <calloc@plt+0x2798>
mov    0x4(%eax),%edx
movl   $0x0,0x18(%esp)
jmp    804c1e8 <calloc@plt+0x2798>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    (%eax),%ecx
test   %ecx,%ecx
je     804c447 <calloc@plt+0x29f7>
mov    %edx,%edi
xor    %esi,%esi
jmp    804c419 <calloc@plt+0x29c9>
lea    0x0(%esi,%eiz,1),%esi
add    %esi,%eax
cmp    %edi,%eax
ja     804c438 <calloc@plt+0x29e8>
add    $0x4,%ebx
mov    (%ebx),%ecx
mov    %eax,%esi
test   %ecx,%ecx
je     804c438 <calloc@plt+0x29e8>
mov    %ecx,(%esp)
call   80494c0 <wcwidth@plt>
cmp    $0xffffffff,%eax
jne    804c408 <calloc@plt+0x29b8>
mov    $0x1,%eax
add    %esi,%eax
cmp    %edi,%eax
movl   $0xfffd,(%ebx)
jbe    804c40e <calloc@plt+0x29be>
nop
movl   $0x0,(%ebx)
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %esi,%esi
jmp    804c438 <calloc@plt+0x29e8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    %ebx,(%esp)
call   8049740 <strlen@plt>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049960 <mbstowcs@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     804c4af <calloc@plt+0x2a5f>
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   80496b0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804c4af <calloc@plt+0x2a5f>
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049960 <mbstowcs@plt>
test   %eax,%eax
jne    804c4d0 <calloc@plt+0x2a80>
mov    %edi,(%esp)
call   80494e0 <free@plt>
test   %esi,%esi
js     804c4bf <calloc@plt+0x2a6f>
movb   $0x0,(%ebx,%esi,1)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    (%eax),%edx
mov    %edi,%eax
call   804c3f0 <calloc@plt+0x29a0>
mov    0x34(%esp),%ecx
mov    %eax,(%ecx)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8049650 <wcstombs@plt>
mov    %eax,%esi
jmp    804c4af <calloc@plt+0x2a5f>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebx
mov    %eax,(%esp)
call   8049740 <strlen@plt>
mov    %eax,%ebp
mov    %eax,0x18(%esp)
call   8049610 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804c6a8 <calloc@plt+0x2c58>
mov    0x40(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049960 <mbstowcs@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     804c690 <calloc@plt+0x2c40>
lea    0x1(%eax),%edx
lea    0x0(,%edx,4),%esi
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   80496b0 <malloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804c865 <calloc@plt+0x2e15>
mov    0x40(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049960 <mbstowcs@plt>
test   %eax,%eax
jne    804c700 <calloc@plt+0x2cb0>
mov    0x18(%esp),%esi
xor    %edi,%edi
mov    0x4c(%esp),%eax
mov    (%eax),%ecx
cmp    %ecx,%esi
jbe    804c6ba <calloc@plt+0x2c6a>
mov    %ecx,%esi
xor    %edx,%edx
mov    0x4c(%esp),%eax
mov    %esi,(%eax)
mov    0x48(%esp),%eax
lea    (%ecx,%edx,1),%esi
test   %eax,%eax
je     804c66c <calloc@plt+0x2c1c>
mov    0x48(%esp),%eax
lea    -0x1(%ebx,%eax,1),%ebp
mov    0x50(%esp),%eax
test   %eax,%eax
je     804c820 <calloc@plt+0x2dd0>
cmpl   $0x1,0x50(%esp)
je     804c6d0 <calloc@plt+0x2c80>
mov    %edx,%eax
and    $0x1,%edx
shr    %eax
mov    %eax,0x18(%esp)
add    %eax,%edx
sub    $0x1,%eax
mov    %eax,0x1c(%esp)
test   %edx,%edx
lea    -0x1(%edx),%eax
je     804c61a <calloc@plt+0x2bca>
cmp    %ebp,%ebx
jae    804c61a <calloc@plt+0x2bca>
xor    %edx,%edx
jmp    804c60f <calloc@plt+0x2bbf>
nop
add    $0x1,%edx
cmp    %ebp,%ebx
je     804c61a <calloc@plt+0x2bca>
add    $0x1,%ebx
cmp    %edx,%eax
movb   $0x20,-0x1(%ebx)
jne    804c608 <calloc@plt+0x2bb8>
mov    %ebp,%eax
sub    %ebx,%eax
cmp    %ecx,%eax
cmovbe %eax,%ecx
mov    0x40(%esp),%eax
movb   $0x0,(%ebx)
mov    %ecx,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80498b0 <mempcpy@plt>
mov    0x18(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%edx
je     804c669 <calloc@plt+0x2c19>
cmp    %eax,%ebp
jbe    804c669 <calloc@plt+0x2c19>
mov    0x1c(%esp),%ebx
lea    0x1(%eax),%ecx
add    $0x1,%ebp
lea    0x1(%ebx,%eax,1),%eax
jmp    804c65f <calloc@plt+0x2c0f>
add    $0x1,%ecx
cmp    %ebp,%ecx
je     804c669 <calloc@plt+0x2c19>
cmp    %eax,%ecx
mov    %ecx,%edx
movb   $0x20,-0x1(%ecx)
jne    804c658 <calloc@plt+0x2c08>
movb   $0x0,(%edx)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <free@plt>
mov    %edi,(%esp)
call   80494e0 <free@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
testb  $0x1,0x54(%esp)
jne    804c6e8 <calloc@plt+0x2c98>
movl   $0x0,0x14(%esp)
xor    %edi,%edi
mov    $0xffffffff,%esi
jmp    804c66c <calloc@plt+0x2c1c>
movl   $0x0,0x14(%esp)
jmp    804c598 <calloc@plt+0x2b48>
lea    0x0(%esi),%esi
xor    %edi,%edi
cmp    %ecx,%esi
jae    804c895 <calloc@plt+0x2e45>
mov    %ecx,%edx
mov    %ebp,%ecx
sub    %esi,%edx
jmp    804c5b0 <calloc@plt+0x2b60>
lea    0x0(%esi),%esi
movl   $0xffffffff,0x1c(%esp)
movl   $0x0,0x18(%esp)
jmp    804c5f8 <calloc@plt+0x2ba8>
lea    0x0(%esi),%esi
mov    %ebp,%esi
xor    %edi,%edi
movl   $0x0,0x14(%esp)
jmp    804c59e <calloc@plt+0x2b4e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
movl   $0x0,-0x4(%eax,%esi,1)
mov    %eax,%esi
mov    (%eax),%eax
test   %eax,%eax
je     804c884 <calloc@plt+0x2e34>
xor    %edx,%edx
mov    %ebx,0x44(%esp)
mov    %esi,%ebx
mov    %edx,%esi
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   80495d0 <iswprint@plt>
test   %eax,%eax
jne    804c73f <calloc@plt+0x2cef>
movl   $0xfffd,(%ebx)
mov    $0x1,%esi
add    $0x4,%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    804c728 <calloc@plt+0x2cd8>
mov    0x44(%esp),%ebx
mov    %esi,%eax
mov    %al,0x1c(%esp)
mov    0x14(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     804c88e <calloc@plt+0x2e3e>
xor    %edx,%edx
mov    %ebx,0x44(%esp)
mov    %edi,%ebx
mov    %edx,%edi
jmp    804c793 <calloc@plt+0x2d43>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x7fffffff,%ecx
sub    %eax,%ecx
cmp    %ecx,%edi
jg     804c7a3 <calloc@plt+0x2d53>
sub    $0x1,%ebx
add    %eax,%edi
cmp    $0xffffffff,%ebx
je     804c879 <calloc@plt+0x2e29>
mov    (%esi),%eax
test   %eax,%eax
je     804c879 <calloc@plt+0x2e29>
mov    %eax,(%esp)
add    $0x4,%esi
call   80494c0 <wcwidth@plt>
cmp    $0xffffffff,%eax
jne    804c770 <calloc@plt+0x2d20>
mov    0x44(%esp),%ebx
mov    $0xffffffff,%esi
cmpb   $0x0,0x1c(%esp)
je     804c830 <calloc@plt+0x2de0>
mov    0x14(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049650 <wcstombs@plt>
add    $0x1,%eax
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80496b0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804c850 <calloc@plt+0x2e00>
mov    0x4c(%esp),%eax
mov    0x14(%esp),%ebp
mov    (%eax),%edx
mov    %ebp,%eax
call   804c3f0 <calloc@plt+0x29a0>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%esi
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
call   8049650 <wcstombs@plt>
mov    %edi,0x40(%esp)
mov    %eax,%ebp
jmp    804c59e <calloc@plt+0x2b4e>
lea    0x0(%esi),%esi
lea    -0x1(%edx),%eax
mov    %eax,0x1c(%esp)
mov    %edx,0x18(%esp)
jmp    804c61a <calloc@plt+0x2bca>
mov    0x4c(%esp),%eax
mov    (%eax),%ecx
cmp    %esi,%ecx
jae    804c6b8 <calloc@plt+0x2c68>
mov    0x18(%esp),%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
jmp    804c7d6 <calloc@plt+0x2d86>
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x54(%esp)
jne    804c59e <calloc@plt+0x2b4e>
mov    $0xffffffff,%esi
jmp    804c66c <calloc@plt+0x2c1c>
testb  $0x1,0x54(%esp)
je     804c697 <calloc@plt+0x2c47>
mov    %ebp,%esi
xor    %edi,%edi
jmp    804c59e <calloc@plt+0x2b4e>
mov    0x44(%esp),%ebx
mov    %edi,%esi
jmp    804c7ac <calloc@plt+0x2d5c>
movb   $0x0,0x1c(%esp)
jmp    804c752 <calloc@plt+0x2d02>
xor    %esi,%esi
jmp    804c7ac <calloc@plt+0x2d5c>
mov    %ebp,%ecx
xor    %edx,%edx
jmp    804c5b0 <calloc@plt+0x2b60>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
mov    0x54(%esp),%eax
test   %esi,%esi
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
je     804c9ba <calloc@plt+0x2f6a>
movzbl (%esi),%ebx
test   %bl,%bl
je     804c9ba <calloc@plt+0x2f6a>
mov    %esi,0x2c(%esp)
call   8049a40 <__ctype_b_loc@plt>
mov    (%eax),%edi
lea    0x1(%esi),%eax
jmp    804c8eb <calloc@plt+0x2e9b>
nop
mov    %eax,0x2c(%esp)
add    $0x1,%eax
movzbl -0x1(%eax),%ebx
movzbl %bl,%edx
testb  $0x20,0x1(%edi,%edx,2)
jne    804c8e0 <calloc@plt+0x2e90>
cmp    $0x2d,%bl
je     804c9ba <calloc@plt+0x2f6a>
movl   $0x0,0x2c(%esp)
call   8049800 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049520 <__strtoull_internal@plt>
mov    0x2c(%esp),%ecx
cmp    %esi,%ecx
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
je     804c9ba <calloc@plt+0x2f6a>
mov    (%edi),%ebx
test   %ebx,%ebx
je     804c960 <calloc@plt+0x2f10>
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmp    $0xffffffff,%edx
jb     804c960 <calloc@plt+0x2f10>
cmp    $0xfffffffd,%eax
ja     804c9ba <calloc@plt+0x2f6a>
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     804c96b <calloc@plt+0x2f1b>
movzbl (%ecx),%eax
test   %al,%al
jne    804c988 <calloc@plt+0x2f38>
xor    %eax,%eax
mov    0x54(%esp),%esi
mov    0x14(%esp),%ebx
mov    0x10(%esp),%ecx
mov    %ebx,0x4(%esi)
mov    %ecx,(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movzbl 0x1(%ecx),%edx
cmp    $0x69,%dl
je     804c9b0 <calloc@plt+0x2f60>
cmp    $0x42,%dl
je     804c9c7 <calloc@plt+0x2f77>
test   %dl,%dl
jne    804c9ba <calloc@plt+0x2f6a>
mov    $0x400,%esi
sub    $0x45,%eax
cmp    $0x2f,%al
ja     804c9ba <calloc@plt+0x2f6a>
movzbl %al,%eax
jmp    *0x804e864(,%eax,4)
cmpb   $0x42,0x2(%ecx)
je     804ceb5 <calloc@plt+0x3465>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x2(%ecx)
jne    804c9ba <calloc@plt+0x2f6a>
mov    $0x3e8,%esi
jmp    804c99f <calloc@plt+0x2f4f>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     804ca50 <calloc@plt+0x3000>
jb     804ca09 <calloc@plt+0x2fb9>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x6,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jae    804cec5 <calloc@plt+0x3475>
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    $0xfffffffe,%eax
jmp    804c96d <calloc@plt+0x2f1d>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     804ca50 <calloc@plt+0x3000>
jb     804ca8f <calloc@plt+0x303f>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     804ca50 <calloc@plt+0x3000>
ja     804cac7 <calloc@plt+0x3077>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     804ca50 <calloc@plt+0x3000>
ja     804cb07 <calloc@plt+0x30b7>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
jb     804cb47 <calloc@plt+0x30f7>
mov    0x18(%esp),%eax
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
imul   %esi,%edx
imul   %edi,%eax
lea    (%eax,%edx,1),%ebp
mov    %ecx,%eax
mul    %esi
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %edx,0x14(%esp)
add    %ebp,0x14(%esp)
jmp    804c96d <calloc@plt+0x2f1d>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     804ca50 <calloc@plt+0x3000>
jb     804cbb0 <calloc@plt+0x3160>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     804ca50 <calloc@plt+0x3000>
ja     804cbf0 <calloc@plt+0x31a0>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
imul   %esi,%ebp
imul   %edi,%ecx
mul    %esi
add    %ebp,%ecx
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
cmp    0x14(%esp),%ebx
mov    %eax,0x10(%esp)
jb     804ca50 <calloc@plt+0x3000>
ja     804cb47 <calloc@plt+0x30f7>
mov    0x10(%esp),%eax
cmp    %eax,0x18(%esp)
jb     804ca50 <calloc@plt+0x3000>
jmp    804cb47 <calloc@plt+0x30f7>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     804ca50 <calloc@plt+0x3000>
jb     804cc76 <calloc@plt+0x3226>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x5,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jb     804ca48 <calloc@plt+0x2ff8>
ja     804ccc1 <calloc@plt+0x3271>
cmp    %eax,0x1c(%esp)
jb     804ca48 <calloc@plt+0x2ff8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    804ccad <calloc@plt+0x325d>
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %edx,0x14(%esp)
jmp    804c96d <calloc@plt+0x2f1d>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
ja     804ca50 <calloc@plt+0x3000>
jb     804cb47 <calloc@plt+0x30f7>
jmp    804cb3d <calloc@plt+0x30ed>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebp
ja     804ca50 <calloc@plt+0x3000>
jb     804cd5a <calloc@plt+0x330a>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
mov    %ecx,%eax
mov    %ebx,%edx
imul   %esi,%edx
imul   %edi,%eax
add    %edx,%eax
mov    %eax,0x18(%esp)
mov    %ecx,%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x14(%esp)
add    %eax,0x14(%esp)
mov    $0x7,%eax
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
nop
cmp    %edx,%ebp
jb     804ca48 <calloc@plt+0x2ff8>
ja     804cdac <calloc@plt+0x335c>
cmp    %eax,0x1c(%esp)
jb     804ca48 <calloc@plt+0x2ff8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    804cd98 <calloc@plt+0x3348>
jmp    804ccd8 <calloc@plt+0x3288>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,%ebx
ja     804ca50 <calloc@plt+0x3000>
jb     804ce05 <calloc@plt+0x33b5>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
mov    0x14(%esp),%edx
mov    %ebx,%ebp
mov    0x10(%esp),%eax
mov    %edx,%ecx
imul   %edi,%eax
imul   %esi,%ecx
add    %eax,%ecx
mov    0x10(%esp),%eax
mul    %esi
mov    %eax,0x10(%esp)
mov    $0x4,%eax
mov    %edx,0x14(%esp)
add    %ecx,0x14(%esp)
mov    0x14(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x10(%esp),%eax
cmp    %edx,%ebp
jb     804ca48 <calloc@plt+0x2ff8>
ja     804ce50 <calloc@plt+0x3400>
cmp    %eax,0x1c(%esp)
jb     804ca48 <calloc@plt+0x2ff8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    804ce3c <calloc@plt+0x33ec>
jmp    804ccd8 <calloc@plt+0x3288>
mov    %esi,%edi
sar    $0x1f,%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0xffffffff,(%esp)
movl   $0xffffffff,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
cmp    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    %edx,%ebx
ja     804ca50 <calloc@plt+0x3000>
jb     804cbf0 <calloc@plt+0x31a0>
cmp    %eax,0x10(%esp)
ja     804ca50 <calloc@plt+0x3000>
lea    0x0(%esi),%esi
jmp    804cbf0 <calloc@plt+0x31a0>
cmpb   $0x0,0x3(%ecx)
je     804c99a <calloc@plt+0x2f4a>
nop
jmp    804c9ba <calloc@plt+0x2f6a>
ja     804ced6 <calloc@plt+0x3486>
cmp    %eax,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
jb     804ca48 <calloc@plt+0x2ff8>
mov    %edx,%ebx
mov    %edi,%ecx
imul   %eax,%ecx
imul   %esi,%ebx
mul    %esi
add    %ecx,%ebx
add    %ebx,%edx
subl   $0x1,0x18(%esp)
jne    804ca40 <calloc@plt+0x2ff0>
jmp    804ccd8 <calloc@plt+0x3288>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%esi
test   %esi,%esi
je     804cf48 <calloc@plt+0x34f8>
movzbl (%esi),%ebx
test   %bl,%bl
je     804cf48 <calloc@plt+0x34f8>
call   8049a40 <__ctype_b_loc@plt>
mov    (%eax),%edx
mov    %esi,%eax
jmp    804cf2c <calloc@plt+0x34dc>
nop
add    $0x1,%eax
je     804cf48 <calloc@plt+0x34f8>
movzbl (%eax),%ebx
test   %bl,%bl
je     804cf33 <calloc@plt+0x34e3>
testb  $0x8,0x1(%edx,%ebx,2)
jne    804cf20 <calloc@plt+0x34d0>
cmp    %eax,%esi
jae    804cf48 <calloc@plt+0x34f8>
cmpb   $0x0,(%eax)
sete   %al
add    $0x4,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x4,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ecx
mov    0x10(%esp),%eax
mov    0x18(%esp),%edx
test   %ecx,%ecx
lea    -0x1(%ecx),%edi
je     804cf8f <calloc@plt+0x353f>
movzbl (%eax),%ecx
test   %cl,%cl
je     804cf8f <calloc@plt+0x353f>
cmp    %dl,%cl
mov    %edx,%esi
je     804cf91 <calloc@plt+0x3541>
xor    %edx,%edx
jmp    804cf88 <calloc@plt+0x3538>
nop
movzbl (%eax),%ecx
test   %cl,%cl
je     804cf8f <calloc@plt+0x353f>
mov    %esi,%ebx
add    $0x1,%edx
cmp    %bl,%cl
je     804cf91 <calloc@plt+0x3541>
add    $0x1,%eax
cmp    %edi,%edx
jne    804cf78 <calloc@plt+0x3528>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     804cfba <calloc@plt+0x356a>
cmpb   $0x0,(%ebx)
jne    804cfe8 <calloc@plt+0x3598>
call   8049800 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    804d013 <calloc@plt+0x35c3>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x804e924,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049910 <errx@plt>
lea    0x0(%esi),%esi
call   8049800 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80499f0 <strtol@plt>
mov    (%esi),%edx
test   %edx,%edx
je     804d038 <calloc@plt+0x35e8>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x804e924,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80495c0 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
je     804cfc5 <calloc@plt+0x3575>
test   %edx,%edx
je     804d04d <calloc@plt+0x35fd>
cmpb   $0x0,(%edx)
jne    804cfc5 <calloc@plt+0x3575>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     804d07a <calloc@plt+0x362a>
cmpb   $0x0,(%ebx)
jne    804d0a8 <calloc@plt+0x3658>
call   8049800 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    804d0d3 <calloc@plt+0x3683>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x804e924,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049910 <errx@plt>
lea    0x0(%esi),%esi
call   8049800 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049630 <strtoll@plt>
mov    (%esi),%ecx
test   %ecx,%ecx
je     804d0f8 <calloc@plt+0x36a8>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x804e924,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80495c0 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ecx
cmp    %ecx,%ebx
je     804d085 <calloc@plt+0x3635>
test   %ecx,%ecx
je     804d10d <calloc@plt+0x36bd>
cmpb   $0x0,(%ecx)
jne    804d085 <calloc@plt+0x3635>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
movl   $0x0,0x1c(%esp)
test   %ebx,%ebx
je     804d13a <calloc@plt+0x36ea>
cmpb   $0x0,(%ebx)
jne    804d168 <calloc@plt+0x3718>
call   8049800 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
jne    804d193 <calloc@plt+0x3743>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x804e924,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   8049910 <errx@plt>
lea    0x0(%esi),%esi
call   8049800 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049730 <strtoul@plt>
mov    (%esi),%edx
test   %edx,%edx
je     804d1b8 <calloc@plt+0x3768>
mov    0x34(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x804e924,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   80495c0 <err@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
cmp    %edx,%ebx
je     804d145 <calloc@plt+0x36f5>
test   %edx,%edx
je     804d1cd <calloc@plt+0x377d>
cmpb   $0x0,(%edx)
jne    804d145 <calloc@plt+0x36f5>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %eax,%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     804d248 <calloc@plt+0x37f8>
cmp    $0xa000,%ecx
je     804d348 <calloc@plt+0x38f8>
cmp    $0x2000,%ecx
je     804d350 <calloc@plt+0x3900>
cmp    $0x6000,%ecx
je     804d360 <calloc@plt+0x3910>
cmp    $0xc000,%ecx
je     804d358 <calloc@plt+0x3908>
cmp    $0x1000,%ecx
je     804d368 <calloc@plt+0x3918>
cmp    $0x8000,%ecx
jne    804d24b <calloc@plt+0x37fb>
movb   $0x2d,(%edx)
jmp    804d24b <calloc@plt+0x37fb>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x64,(%edx)
mov    %eax,%ecx
and    $0x100,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x1(%edx)
mov    %eax,%ecx
and    $0x80,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x2(%edx)
mov    %eax,%ecx
and    $0x40,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x8,%ah
je     804d318 <calloc@plt+0x38c8>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x3(%edx)
mov    %eax,%ecx
and    $0x20,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x4(%edx)
mov    %eax,%ecx
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
mov    %cl,0x5(%edx)
mov    %eax,%ecx
and    $0x8,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
test   $0x4,%ah
je     804d340 <calloc@plt+0x38f0>
and    $0xffffffe0,%ecx
add    $0x73,%ecx
mov    %cl,0x6(%edx)
mov    %eax,%ecx
and    $0x4,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffbb,%ecx
add    $0x72,%ecx
mov    %cl,0x7(%edx)
mov    %eax,%ecx
and    $0x2,%ecx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xffffffb6,%ecx
add    $0x77,%ecx
test   $0x2,%ah
mov    %cl,0x8(%edx)
je     804d328 <calloc@plt+0x38d8>
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffe0,%eax
add    $0x74,%eax
mov    %al,0x9(%edx)
movb   $0x0,0xa(%edx)
ret
lea    0x0(%esi),%esi
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    804d290 <calloc@plt+0x3840>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x1,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %al,0x9(%edx)
movb   $0x0,0xa(%edx)
ret
xchg   %ax,%ax
and    $0xffffffb5,%ecx
add    $0x78,%ecx
jmp    804d2ce <calloc@plt+0x387e>
movb   $0x6c,(%edx)
jmp    804d24b <calloc@plt+0x37fb>
movb   $0x63,(%edx)
jmp    804d24b <calloc@plt+0x37fb>
movb   $0x73,(%edx)
jmp    804d24b <calloc@plt+0x37fb>
movb   $0x62,(%edx)
jmp    804d24b <calloc@plt+0x37fb>
movb   $0x70,(%edx)
jmp    804d24b <calloc@plt+0x37fb>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
mov    0x94(%esp),%esi
testb  $0x2,0x90(%esp)
mov    0x98(%esp),%edi
je     804d5b0 <calloc@plt+0x3b60>
lea    0x47(%esp),%eax
movb   $0x20,0x47(%esp)
lea    0x48(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0xa,%ebx
mov    %ebx,%ecx
xor    %eax,%eax
xor    %edx,%edx
test   $0x20,%cl
setne  %dl
sete   %al
shl    %cl,%edx
shl    %cl,%eax
cmp    %edx,%edi
ja     804d444 <calloc@plt+0x39f4>
jae    804d440 <calloc@plt+0x39f0>
mov    %ecx,%ebx
sub    $0xa,%ecx
jne    804d454 <calloc@plt+0x3a04>
mov    %esi,0x2c(%esp)
movb   $0x42,0x0(%ebp)
movb   $0x0,0x1(%ebp)
mov    0x38(%esp),%eax
lea    0x4c(%esp),%ebx
movl   $0x804e941,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
call   8049480 <__snprintf_chk@plt>
mov    %ebx,(%esp)
call   80497e0 <__strdup@plt>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804d5da <calloc@plt+0x3b8a>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %eax,%esi
jb     804d3ce <calloc@plt+0x397e>
add    $0xa,%ecx
cmp    $0x46,%ecx
jne    804d3b7 <calloc@plt+0x3967>
mov    %ecx,%ebx
mov    $0x3c,%cl
mov    %ecx,%eax
mov    $0x66666667,%edx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x2,%edx
sub    %eax,%edx
movzbl 0x804e92f(%edx),%eax
mov    %edi,%edx
mov    %al,0x3f(%esp)
mov    %esi,%eax
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
je     804d482 <calloc@plt+0x3a32>
mov    %edx,%eax
xor    %edx,%edx
mov    %eax,0x2c(%esp)
xor    %eax,%eax
test   $0x20,%cl
sete   %al
setne  %dl
shl    %cl,%eax
shl    %cl,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,%ecx
movzbl 0x3f(%esp),%eax
and    %esi,%ecx
and    %edi,%edx
testb  $0x1,0x90(%esp)
mov    %ecx,0x30(%esp)
lea    0x1(%ebp),%ecx
mov    %edx,0x34(%esp)
mov    %al,0x0(%ebp)
jne    804d598 <calloc@plt+0x3b48>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
movb   $0x0,(%ecx)
mov    %edx,%edi
or     %eax,%edi
je     804d3e1 <calloc@plt+0x3991>
lea    -0x14(%ebx),%ecx
xor    %ebx,%ebx
shrd   %cl,%edx,%eax
shr    %cl,%edx
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebx,%edx
add    $0x32,%eax
adc    $0x0,%edx
movl   $0x64,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d750 <calloc@plt+0x3d00>
mov    %eax,%edi
xor    $0xa,%eax
or     %edx,%eax
mov    %edx,%ebx
je     804d5c0 <calloc@plt+0x3b70>
mov    %edx,%eax
or     %edi,%eax
je     804d3e1 <calloc@plt+0x3991>
call   8049970 <localeconv@plt>
test   %eax,%eax
xchg   %ax,%ax
je     804d5d0 <calloc@plt+0x3b80>
mov    (%eax),%ecx
test   %ecx,%ecx
je     804d5d0 <calloc@plt+0x3b80>
cmpb   $0x0,(%ecx)
mov    $0x804e92d,%eax
cmove  %eax,%ecx
mov    0x38(%esp),%eax
mov    %ebx,0x20(%esp)
lea    0x4c(%esp),%ebx
mov    %edi,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x24(%esp)
mov    0x2c(%esp),%eax
movl   $0x804e937,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049480 <__snprintf_chk@plt>
jmp    804d41d <calloc@plt+0x39cd>
cmp    $0x42,%al
je     804d4c4 <calloc@plt+0x3a74>
movb   $0x69,0x1(%ebp)
lea    0x3(%ebp),%ecx
movb   $0x42,0x2(%ebp)
jmp    804d4c4 <calloc@plt+0x3a74>
lea    0x47(%esp),%eax
mov    %eax,0x38(%esp)
mov    %eax,%ebp
jmp    804d3b0 <calloc@plt+0x3960>
nop
addl   $0x1,0x2c(%esp)
jmp    804d3e1 <calloc@plt+0x3991>
lea    0x0(%esi),%esi
mov    $0x804e92d,%ecx
jmp    804d54b <calloc@plt+0x3afb>
call   8049560 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
test   %edx,%edx
je     804d690 <calloc@plt+0x3c40>
movzbl (%edx),%eax
test   %al,%al
je     804d690 <calloc@plt+0x3c40>
mov    0x34(%esp),%esi
test   %esi,%esi
je     804d690 <calloc@plt+0x3c40>
mov    0x38(%esp),%ebx
test   %ebx,%ebx
je     804d690 <calloc@plt+0x3c40>
mov    0x3c(%esp),%ecx
test   %ecx,%ecx
je     804d690 <calloc@plt+0x3c40>
mov    %edx,%ebx
xor    %ebp,%ebp
xor    %edi,%edi
jmp    804d634 <calloc@plt+0x3be4>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
test   %al,%al
je     804d67f <calloc@plt+0x3c2f>
test   %edx,%edx
cmove  %ebx,%edx
cmp    $0x2c,%al
mov    %edi,%esi
cmove  %ebx,%esi
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%eax
cmove  %eax,%esi
test   %esi,%esi
je     804d67a <calloc@plt+0x3c2a>
cmp    %esi,%edx
jae    804d690 <calloc@plt+0x3c40>
mov    %esi,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *0x3c(%esp)
cmp    $0xffffffff,%eax
je     804d690 <calloc@plt+0x3c40>
mov    0x34(%esp),%ecx
lea    0x1(%ebp),%edx
cmp    %edx,0x38(%esp)
mov    %eax,(%ecx,%ebp,4)
jbe    804d69d <calloc@plt+0x3c4d>
cmpb   $0x0,(%esi)
mov    %edx,%ebp
je     804d67f <calloc@plt+0x3c2f>
xor    %edx,%edx
add    $0x1,%ebx
jne    804d628 <calloc@plt+0x3bd8>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0xfffffffe,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
test   %ebx,%ebx
je     804d747 <calloc@plt+0x3cf7>
mov    0x38(%esp),%eax
test   %eax,%eax
je     804d747 <calloc@plt+0x3cf7>
test   %esi,%esi
je     804d747 <calloc@plt+0x3cf7>
xor    %eax,%eax
xor    %edi,%edi
nop
movzbl (%ebx),%ecx
test   %cl,%cl
je     804d730 <calloc@plt+0x3ce0>
test   %eax,%eax
mov    %edi,%ebp
cmove  %ebx,%eax
cmp    $0x2c,%cl
cmove  %ebx,%ebp
cmpb   $0x0,0x1(%ebx)
lea    0x1(%ebx),%ecx
cmove  %ecx,%ebp
test   %ebp,%ebp
je     804d72b <calloc@plt+0x3cdb>
cmp    %ebp,%eax
jae    804d73a <calloc@plt+0x3cea>
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   *0x38(%esp)
mov    %eax,%ecx
test   %ecx,%ecx
js     804d732 <calloc@plt+0x3ce2>
sar    $0x3,%eax
and    $0x7,%ecx
mov    $0x1,%edx
shl    %cl,%edx
or     %dl,(%esi,%eax,1)
cmpb   $0x0,0x0(%ebp)
je     804d730 <calloc@plt+0x3ce0>
xor    %eax,%eax
add    $0x1,%ebx
jne    804d6d8 <calloc@plt+0x3c88>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffea,%eax
jmp    804d732 <calloc@plt+0x3ce2>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    804d7a0 <calloc@plt+0x3d50>
cmp    %ebp,%ecx
ja     804d7d8 <calloc@plt+0x3d88>
test   %ecx,%ecx
mov    %ecx,%esi
jne    804d788 <calloc@plt+0x3d38>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     804d7c8 <calloc@plt+0x3d78>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    804d7e8 <calloc@plt+0x3d98>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    804d858 <calloc@plt+0x3e08>
cmp    %edx,%eax
jb     804d858 <calloc@plt+0x3e08>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     804d868 <calloc@plt+0x3e18>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    804d849 <calloc@plt+0x3df9>
cmp    (%esp),%esi
je     804d868 <calloc@plt+0x3e18>
mov    %edi,%eax
xor    %edx,%edx
jmp    804d7cc <calloc@plt+0x3d7c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    804d7cc <calloc@plt+0x3d7c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804ac10 <calloc@plt+0x11c0>
add    $0x3775,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   804942c <_init>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804d8d9 <calloc@plt+0x3e89>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804d8b8 <calloc@plt+0x3e68>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804d8f0 <calloc@plt+0x3ea0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
push   %ebx
sub    $0x8,%esp
call   804ac10 <calloc@plt+0x11c0>
add    $0x3703,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
outsl  %ds:(%esi),(%dx)
jo     804d99f <_IO_stdin_used+0x7b>
imul   $0x72612073,0x6e(%edi),%ebp
and    %ch,%gs:0x75(%ebp)
je     804d9ad <_IO_stdin_used+0x89>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    804d95d <_IO_stdin_used+0x39>
gs
js     804d9a3 <_IO_stdin_used+0x7f>
insb   (%dx),%es:(%edi)
jne    804d9b6 <_IO_stdin_used+0x92>
imul   $0x550a0000,0x65(%esi),%esi
jae    804d9ad <_IO_stdin_used+0x89>
cmp    %gs:(%bp,%si),%cl
and    %ah,0x20732431
pop    %ebx
outsl  %ds:(%esi),(%dx)
jo     804d9ce <_IO_stdin_used+0xaa>
imul   $0x200a5d73,0x6e(%edi),%ebp
and    $0x20732431,%eax
pop    %ebx
outsl  %ds:(%esi),(%dx)
jo     804d9de <_IO_stdin_used+0xba>
imul   $0x3c205d73,0x6e(%edi),%ebp
fs
gs
jbe    804d9de <_IO_stdin_used+0xba>
arpl   %sp,0x3e(%ebp)
and    %bh,0x3c(%eax,%eiz,1)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804d9ee <_IO_stdin_used+0xca>
je     804d9f2 <_IO_stdin_used+0xce>
outsl  %ds:(%esi),(%dx)
imul   $0x25200a3e,0x74(%esi),%ebp
xor    %esp,(%ebx,%esi,2)
and    %bl,0x6f(%ebx)
jo     804da06 <_IO_stdin_used+0xe2>
imul   $0x3c205d73,0x6e(%edi),%ebp
fs
gs
jbe    804da06 <_IO_stdin_used+0xe2>
arpl   %sp,0x3e(%ebp)
and    %bh,0x746e756f(,%ebp,2)
jo     804da18 <_IO_stdin_used+0xf4>
imul   $0x25200a3e,0x74(%esi),%ebp
xor    %esp,(%ebx,%esi,2)
and    %bl,0x6f(%ebx)
jo     804da2c <_IO_stdin_used+0x108>
imul   $0x5b205d73,0x6e(%edi),%ebp
sub    $0x756f732d,%eax
jb     804da29 <_IO_stdin_used+0x105>
and    %bh,%gs:(%esp,%eiz,2)
gs
jbe    804da36 <_IO_stdin_used+0x112>
arpl   %sp,0x3e(%ebp)
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x67726174,%eax
gs
je     804d9fc <_IO_stdin_used+0xd8>
cmp    $0x6d,%al
outsl  %ds:(%esi),(%dx)
jne    804da4f <_IO_stdin_used+0x12b>
je     804da53 <_IO_stdin_used+0x12f>
outsl  %ds:(%esi),(%dx)
imul   $0xa5d3e,0x74(%esi),%ebp
add    %cl,(%edx)
dec    %edi
jo     804da64 <_IO_stdin_used+0x140>
imul   $0x200a3a73,0x6e(%edi),%ebp
sub    $0x2d202c73,%eax
sub    $0x61747366,%eax
bound  %esp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
popa
jb     804da76 <_IO_stdin_used+0x152>
push   $0x206e6920
jae    804da8e <_IO_stdin_used+0x16a>
popa
je     804da86 <_IO_stdin_used+0x162>
arpl   %sp,(%eax)
je     804da82 <_IO_stdin_used+0x15e>
bound  %ebp,0x20(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804daa7 <_IO_stdin_used+0x183>
jae    804daa4 <_IO_stdin_used+0x180>
gs
insl   (%dx),%es:(%edi)
jae    804da3e <_IO_stdin_used+0x11a>
and    %ch,0x2d202c6d
sub    $0x6261746d,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
popa
jb     804dab4 <_IO_stdin_used+0x190>
push   $0x206e6920
je     804dab9 <_IO_stdin_used+0x195>
bound  %ebp,0x20(%ebp,%eiz,2)
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x6f(%ebp)
jne    804dad1 <_IO_stdin_used+0x1ad>
je     804daca <_IO_stdin_used+0x1a6>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804dae6 <_IO_stdin_used+0x1c2>
jae    804dae3 <_IO_stdin_used+0x1bf>
gs
insl   (%dx),%es:(%edi)
jae    804da7d <_IO_stdin_used+0x159>
and    %ch,0x2d202c6b
sub    $0x6e72656b,%eax
gs
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
popa
jb     804daf3 <_IO_stdin_used+0x1cf>
push   $0x206e6920
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %dh,0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %ch,0x6f(%ebp)
jne    804db17 <_IO_stdin_used+0x1f3>
je     804db10 <_IO_stdin_used+0x1ec>
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804db46 <_IO_stdin_used+0x222>
jae    804db43 <_IO_stdin_used+0x21f>
gs
insl   (%dx),%es:(%edi)
jae    804daf3 <_IO_stdin_used+0x1cf>
sub    %ah,0x66(%ebp,%eiz,2)
popa
jne    804db46 <_IO_stdin_used+0x222>
je     804db05 <_IO_stdin_used+0x1e1>
or     (%edx),%cl
add    %al,(%eax)
and    %ch,0x2d202c70
sub    $0x6c6c6f70,%eax
pop    %ebx
cmp    $0x73696c3c,%eax
je     804db31 <_IO_stdin_used+0x20d>
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x61686320,0x72(%edi,%ebp,2),%esi
outsb  %ds:(%esi),(%dx)
addr16
gs
jae    804db28 <_IO_stdin_used+0x204>
imul   $0x6c626174,0x20(%esi),%ebp
and    %ch,%gs:0x66(%edi)
and    %ch,0x6f(%ebp)
jne    804db86 <_IO_stdin_used+0x262>
je     804db7f <_IO_stdin_used+0x25b>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804db9b <_IO_stdin_used+0x277>
jae    804db98 <_IO_stdin_used+0x274>
gs
insl   (%dx),%es:(%edi)
jae    804db32 <_IO_stdin_used+0x20e>
and    %ch,0x2d202c77
sub    $0x656d6974,%eax
outsl  %ds:(%esi),(%dx)
jne    804dbaa <_IO_stdin_used+0x286>
and    %bh,(%esi,%ebp,2)
jne    804dba8 <_IO_stdin_used+0x284>
and    %ah,%ds:(%eax)
and    %ah,(%eax)
jne    804dbb2 <_IO_stdin_used+0x28e>
jo     804dba9 <_IO_stdin_used+0x285>
jb     804db66 <_IO_stdin_used+0x242>
insb   (%dx),%es:(%edi)
imul   $0x6e692074,0x69(%ebp),%ebp
and    %ch,0x69(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x646e6f63,0x65(%ebx),%esi
jae    804db7c <_IO_stdin_used+0x258>
je     804dbc6 <_IO_stdin_used+0x2a2>
popa
je     804db81 <_IO_stdin_used+0x25d>
sub    $0x6c6f702d,%eax
insb   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0xa(%ebx)
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
sub    $0x2d202c61,%eax
sub    $0x69637361,%eax
imul   $0x20202020,(%eax),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %al,%gs:0x53(%ecx)
inc    %ebx
dec    %ecx
dec    %ecx
and    %ah,0x68(%ebx)
popa
jb     804dc12 <_IO_stdin_used+0x2ee>
and    %ah,0x6f(%esi)
jb     804dbc4 <_IO_stdin_used+0x2a0>
je     804dc18 <_IO_stdin_used+0x2f4>
gs and %ah,%gs:0x6f(%esi)
jb     804dc1a <_IO_stdin_used+0x2f6>
popa
je     804dc24 <_IO_stdin_used+0x300>
imul   $0x632d200a,0x67(%esi),%ebp
sub    $0x20,%al
sub    $0x6e61632d,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %dh,0x72(%eax)
imul   $0x70206465,0x74(%esi),%ebp
popa
je     804dc4d <_IO_stdin_used+0x329>
jae    804dbf1 <_IO_stdin_used+0x2cd>
and    %ch,0x2d202c64
sub    $0x65726964,%eax
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %bh,(%edi,%esi,2)
outsl  %ds:(%esi),(%dx)
jb     804dc61 <_IO_stdin_used+0x33d>
and    %ah,%ds:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x65(%ebx)
popa
jb     804dc74 <_IO_stdin_used+0x350>
push   $0x6627202c
outsl  %ds:(%esi),(%dx)
jb     804dc90 <_IO_stdin_used+0x36c>
popa
jb     804dc80 <_IO_stdin_used+0x35c>
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
bound  %esp,0x63(%ecx)
imul   $0x72,0x61(%edi),%esi
fs
daa
or     (%eax),%ah
sub    $0x2d202c65,%eax
sub    $0x6c617665,%eax
jne    804dc9a <_IO_stdin_used+0x376>
je     804dca0 <_IO_stdin_used+0x37c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    804dcae <_IO_stdin_used+0x38a>
jb     804dcbf <_IO_stdin_used+0x39b>
and    %dh,0x67(%ecx,%eiz,2)
jae    804dc71 <_IO_stdin_used+0x34d>
sub    %cl,0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
das
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
sub    %esp,(%eax)
je     804dccf <_IO_stdin_used+0x3ab>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x6d616e20,0x65(%ebx),%esp
gs
jae    804dc78 <_IO_stdin_used+0x354>
and    %ch,0x2d202c66
sub    $0x73726966,%eax
je     804dca8 <_IO_stdin_used+0x384>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    804dca0 <_IO_stdin_used+0x37c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     804dcfa <_IO_stdin_used+0x3d6>
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x69(%esi)
jb     804dd07 <_IO_stdin_used+0x3e3>
je     804dcb6 <_IO_stdin_used+0x392>
outsw  %ds:(%esi),(%dx)
jne    804dd08 <_IO_stdin_used+0x3e4>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804dd1b <_IO_stdin_used+0x3f7>
jae    804dd18 <_IO_stdin_used+0x3f4>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    804dcb6 <_IO_stdin_used+0x392>
add    %al,(%eax)
add    %al,(%eax)
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     804dd39 <_IO_stdin_used+0x415>
popa
jns    804dcf0 <_IO_stdin_used+0x3cc>
je     804dd3a <_IO_stdin_used+0x416>
imul   $0x706c6568,0x20(%ebx),%esi
and    %dh,0x78(%ebp,%eiz,2)
je     804dcff <_IO_stdin_used+0x3db>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x78(%ebp)
imul   $0x202c692d,0x20(%edx,%ecx,1),%esi
sub    $0x766e692d,%eax
gs
jb     804dd69 <_IO_stdin_used+0x445>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e(%ecx)
jbe    804dd69 <_IO_stdin_used+0x445>
jb     804dd7a <_IO_stdin_used+0x456>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    804dd75 <_IO_stdin_used+0x451>
and    %ch,0x66(%edi)
and    %ch,0x61(%ebp)
je     804dd7b <_IO_stdin_used+0x457>
push   $0xa676e69
and    %ch,0x2d202c6c
sub    $0x7473696c,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     804dd5e <_IO_stdin_used+0x43a>
outsw  %ds:(%esi),(%dx)
jb     804ddaf <_IO_stdin_used+0x48b>
popa
je     804dd65 <_IO_stdin_used+0x441>
outsl  %ds:(%esi),(%dx)
jne    804ddbc <_IO_stdin_used+0x498>
jo     804ddbf <_IO_stdin_used+0x49b>
je     804dd56 <_IO_stdin_used+0x432>
and    %ch,0x2d202c6e
sub    $0x65686f6e,%eax
popa
imul   $0x20202073,%fs:0x67(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     804dd8a <_IO_stdin_used+0x466>
jo     804ddde <_IO_stdin_used+0x4ba>
imul   $0x6c6f6320,0x74(%esi),%ebp
jne    804dde2 <_IO_stdin_used+0x4be>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%eax)
popa
imul   $0x2d200a73,%fs:0x67(%esi),%ebp
jne    804ddb0 <_IO_stdin_used+0x48c>
and    %ch,0x746f6e2d
jb     804de01 <_IO_stdin_used+0x4dd>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%edi,%ebp,2)
daa
je     804ddbe <_IO_stdin_used+0x49a>
je     804de12 <_IO_stdin_used+0x4ee>
jne    804de10 <_IO_stdin_used+0x4ec>
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x78(%ebp,%eiz,2)
je     804ddcc <_IO_stdin_used+0x4a8>
imul   $0x756c6f63,0x20(%esi),%ebp
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
jae    804ddc1 <_IO_stdin_used+0x49d>
add    %ah,(%eax)
sub    $0x2d202c4f,%eax
sub    $0x6974706f,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    804dde7 <_IO_stdin_used+0x4c3>
cmp    $0x6c,%al
imul   $0x2020203e,0x74(%ebx),%esi
insb   (%dx),%es:(%edi)
imul   $0x68742074,0x69(%ebp),%ebp
and    %dh,%gs:0x65(%ebx)
je     804ddfe <_IO_stdin_used+0x4da>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804de60 <_IO_stdin_used+0x53c>
jae    804de5d <_IO_stdin_used+0x539>
gs
insl   (%dx),%es:(%edi)
jae    804de0d <_IO_stdin_used+0x4e9>
bound  %edi,0x20(%ecx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804de62 <_IO_stdin_used+0x53e>
je     804de16 <_IO_stdin_used+0x4f2>
outsl  %ds:(%esi),(%dx)
jo     804de6d <_IO_stdin_used+0x549>
imul   $0x2d200a73,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
sub    $0x20,%al
sub    $0x74756f2d,%eax
jo     804de7f <_IO_stdin_used+0x55b>
je     804de2c <_IO_stdin_used+0x508>
cmp    $0x6c,%al
imul   $0x2020203e,0x74(%ebx),%esi
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     804de8e <_IO_stdin_used+0x56a>
jne    804de94 <_IO_stdin_used+0x570>
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    804de93 <_IO_stdin_used+0x56f>
outsb  %ds:(%esi),(%dx)
jae    804de49 <_IO_stdin_used+0x525>
je     804de9a <_IO_stdin_used+0x576>
and    %ah,0x65(%edx)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     804dea2 <_IO_stdin_used+0x57e>
or     (%eax),%ah
sub    $0x2d202c50,%eax
sub    $0x72696170,%eax
jae    804de62 <_IO_stdin_used+0x53e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x65(%ebx)
jns    804de92 <_IO_stdin_used+0x56e>
and    0x61(%esi),%dh
insb   (%dx),%es:(%edi)
jne    804dec0 <_IO_stdin_used+0x59c>
and    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jne    804ded4 <_IO_stdin_used+0x5b0>
jo     804ded7 <_IO_stdin_used+0x5b3>
je     804de84 <_IO_stdin_used+0x560>
outsw  %ds:(%esi),(%dx)
jb     804ded5 <_IO_stdin_used+0x5b1>
popa
je     804de75 <_IO_stdin_used+0x551>
and    %ch,0x2d202c72
sub    $0x20776172,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %dh,%gs:0x61(%edx)
ja     804deab <_IO_stdin_used+0x587>
outsl  %ds:(%esi),(%dx)
jne    804df02 <_IO_stdin_used+0x5de>
jo     804df05 <_IO_stdin_used+0x5e1>
je     804deb2 <_IO_stdin_used+0x58e>
outsw  %ds:(%esi),(%dx)
jb     804df03 <_IO_stdin_used+0x5df>
popa
je     804dea3 <_IO_stdin_used+0x57f>
and    %ch,0x2d202c74
sub    $0x65707974,%eax
jae    804dec6 <_IO_stdin_used+0x5a2>
cmp    $0x6c,%al
imul   $0x2020203e,0x74(%ebx),%esi
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x68742074,0x69(%ebp),%ebp
and    %dh,%gs:0x65(%ebx)
je     804dedf <_IO_stdin_used+0x5bb>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804df41 <_IO_stdin_used+0x61d>
jae    804df3e <_IO_stdin_used+0x61a>
gs
insl   (%dx),%es:(%edi)
jae    804deee <_IO_stdin_used+0x5ca>
bound  %edi,0x20(%ecx)
inc    %esi
push   %ebx
and    %dh,0x70(%ecx,%edi,2)
gs
jae    804dee4 <_IO_stdin_used+0x5c0>
add    %al,(%eax)
and    %ch,0x2d202c76
sub    $0x73666f6e,%eax
jb     804df58 <_IO_stdin_used+0x634>
outsl  %ds:(%esi),(%dx)
je     804df0c <_IO_stdin_used+0x5e8>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     804df1a <_IO_stdin_used+0x5f6>
jo     804df6e <_IO_stdin_used+0x64a>
imul   $0x642f5b20,0x74(%esi),%ebp
imul   $0x726f6620,0x5d(%edx),%esi
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x72(%edi)
and    %ah,0x74(%edx)
jb     804df7d <_IO_stdin_used+0x659>
jae    804df39 <_IO_stdin_used+0x615>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804df8b <_IO_stdin_used+0x667>
je     804df92 <_IO_stdin_used+0x66e>
or     (%eax),%ah
sub    $0x2d202c52,%eax
sub    $0x6d627573,%eax
outsl  %ds:(%esi),(%dx)
jne    804df9c <_IO_stdin_used+0x678>
je     804dfa3 <_IO_stdin_used+0x67f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     804dfac <_IO_stdin_used+0x688>
imul   $0x6c6c6120,0x74(%esi),%ebp
and    %dh,0x75(%ebx)
bound  %ebp,0x6f(%ebp)
jne    804dfb7 <_IO_stdin_used+0x693>
je     804dfbe <_IO_stdin_used+0x69a>
and    %ah,0x6f(%esi)
jb     804df70 <_IO_stdin_used+0x64c>
je     804dfba <_IO_stdin_used+0x696>
and    %ch,%gs:0x61(%ebp)
je     804dfbb <_IO_stdin_used+0x697>
push   $0x20676e69
imul   $0x7379,0x73(%ebp,%eiz,2),%bp
je     804dfcb <_IO_stdin_used+0x6a7>
insl   (%dx),%es:(%edi)
jae    804df73 <_IO_stdin_used+0x64f>
and    %ch,0x2d202c53
sub    $0x72756f73,%eax
arpl   %sp,0x20(%ebp)
cmp    $0x73,%al
je     804dfed <_IO_stdin_used+0x6c9>
imul   $0x7420203e,0x67(%esi),%ebp
push   $0x65642065
jbe    804dff2 <_IO_stdin_used+0x6ce>
arpl   %sp,0x20(%ebp)
je     804dffd <_IO_stdin_used+0x6d9>
and    %ch,0x6f(%ebp)
jne    804e001 <_IO_stdin_used+0x6dd>
je     804dfb5 <_IO_stdin_used+0x691>
sub    %ah,0x79(%edx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
sub    $0x20,%al
dec    %esp
inc    %ecx
inc    %edx
inc    %ebp
dec    %esp
cmp    $0x20726f20,%eax
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
cmp    $0x2d200a29,%eax
push   %esp
sub    $0x20,%al
sub    $0x7261742d,%eax
addr16
gs
je     804dfde <_IO_stdin_used+0x6ba>
cmp    $0x73,%al
je     804e034 <_IO_stdin_used+0x710>
imul   $0x7420203e,0x67(%esi),%ebp
push   $0x6f6d2065
jne    804e03e <_IO_stdin_used+0x71a>
je     804e042 <_IO_stdin_used+0x71e>
outsl  %ds:(%esi),(%dx)
imul   $0x206f7420,0x74(%esi),%ebp
jne    804e04f <_IO_stdin_used+0x72b>
or     %gs:(%edx),%cl
add    %cl,(%edx)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     804e005 <_IO_stdin_used+0x6e1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804e04e <_IO_stdin_used+0x72a>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     804e05d <_IO_stdin_used+0x739>
popa
je     804e05c <_IO_stdin_used+0x738>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
and    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     804e02a <_IO_stdin_used+0x706>
xor    %ebp,(%ecx)
or     %cs:(%eax),%al
add    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    804e07a <_IO_stdin_used+0x756>
outsb  %ds:(%esi),(%dx)
jae    804e06b <_IO_stdin_used+0x747>
outsb  %ds:(%esi),(%dx)
jne    804e080 <_IO_stdin_used+0x75c>
pop    %ebp
and    %bh,(%eax,%eiz,1)
inc    %esi
dec    %ecx
dec    %esi
inc    %esp
dec    %ebp
dec    %esi
push   %esp
pop    %edi
dec    %esi
inc    %ebx
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
push   %ebx
add    %ah,0x63(%ecx)
cmp    %fs:0x68(%ebp),%ah
imul   $0x703a4f3a,0x6f(%esi),%esp
cmp    (%edx),%bh
push   %eax
imul   $0x72,0x6e(%ebp,%ebp,2),%ebp
jae    804e0b3 <_IO_stdin_used+0x78f>
cmp    0x76(%ebp),%dh
push   %edx
push   %ebx
cmp    0x77(%edx,%edi,1),%dl
cmp    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jo     804e0c3 <_IO_stdin_used+0x79f>
imul   $0x2d2d2073,0x6e(%edi),%ebp
je     804e0b9 <_IO_stdin_used+0x795>
jb     804e0c1 <_IO_stdin_used+0x79d>
gs
je     804e07d <_IO_stdin_used+0x759>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x756f732d
jb     804e0cb <_IO_stdin_used+0x7a7>
and    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     804e090 <_IO_stdin_used+0x76c>
bound  %esp,0x20(%ebp)
jne    804e0e8 <_IO_stdin_used+0x7c4>
gs and %dh,%fs:%gs:0x67(%edi,%ebp,2)
gs
je     804e0e6 <_IO_stdin_used+0x7c2>
gs
jb     804e0a1 <_IO_stdin_used+0x77d>
ja     804e0ec <_IO_stdin_used+0x7c8>
je     804e0ed <_IO_stdin_used+0x7c9>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804e0bb <_IO_stdin_used+0x797>
je     804e105 <_IO_stdin_used+0x7e1>
popa
je     804e0c0 <_IO_stdin_used+0x79c>
imul   $0x20746f6e,0x20(%ebx),%esi
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     804e117 <_IO_stdin_used+0x7f3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x62696c20,0x65(%edx),%edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e13e <_IO_stdin_used+0x81a>
je     804e0f2 <_IO_stdin_used+0x7ce>
je     804e135 <_IO_stdin_used+0x811>
bound  %ebp,0x0(%ebp,%eiz,2)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x62696c20,0x65(%edx),%edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e162 <_IO_stdin_used+0x83e>
je     804e116 <_IO_stdin_used+0x7f2>
arpl   %sp,0x63(%ecx)
push   $0x61660065
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x74756f20,0x65(%edx),%edi
jo     804e18b <_IO_stdin_used+0x867>
je     804e138 <_IO_stdin_used+0x814>
je     804e17b <_IO_stdin_used+0x857>
bound  %ebp,0x0(%ebp,%eiz,2)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x74756f20,0x65(%edx),%edi
jo     804e1af <_IO_stdin_used+0x88b>
je     804e15c <_IO_stdin_used+0x838>
arpl   %bp,0x6c(%edi)
jne    804e1ae <_IO_stdin_used+0x88a>
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x62696c20,0x65(%edx),%edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e1ce <_IO_stdin_used+0x8aa>
je     804e182 <_IO_stdin_used+0x85e>
imul   $0x726f7461,0x72(%ebp,%eiz,2),%esi
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x62696c20,0x65(%edx),%edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e1f6 <_IO_stdin_used+0x8d2>
je     804e1aa <_IO_stdin_used+0x886>
je     804e1ed <_IO_stdin_used+0x8c9>
bound  %esp,0x66(%ecx,%ebp,2)
data16
add    %al,(%eax)
add    %ah,0x6f632073
insb   (%dx),%es:(%edi)
jne    804e209 <_IO_stdin_used+0x8e5>
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %dh,0x65(%edx)
jno    804e21a <_IO_stdin_used+0x8f6>
gs
jae    804e21c <_IO_stdin_used+0x8f8>
gs
fs
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ch,0x6c6f702d
insb   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     804e1de <_IO_stdin_used+0x8ba>
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %ch,0x6c(%edi)
and    %ch,%fs:0x6f(%ebp)
jne    804e23e <_IO_stdin_used+0x91a>
je     804e242 <_IO_stdin_used+0x91e>
outsl  %ds:(%esi),(%dx)
imul   $0x76617320,0x74(%esi),%ebp
gs and %ah,%fs:%gs:0x79(%edx)
and    %ch,0x6c6f702d
insb   (%dx),%es:(%edi)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%ebp)
jne    804e25e <_IO_stdin_used+0x93a>
je     804e212 <_IO_stdin_used+0x8ee>
outsl  %ds:(%esi),(%dx)
jo     804e269 <_IO_stdin_used+0x945>
imul   $0x61732073,0x6e(%edi),%ebp
jbe    804e263 <_IO_stdin_used+0x93f>
and    %ah,%fs:0x79(%edx)
and    %ch,0x6c6f702d
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,0x73252073
add    %ah,0x70203a73
popa
jb     804e28d <_IO_stdin_used+0x969>
and    %ah,%gs:0x72(%ebp)
jb     804e28f <_IO_stdin_used+0x96b>
jb     804e242 <_IO_stdin_used+0x91e>
popa
je     804e245 <_IO_stdin_used+0x921>
insb   (%dx),%es:(%edi)
imul   $0x642520,0x65(%esi),%ebp
or     0x76(%ecx),%al
popa
imul   $0x6320656c,0x62(%ecx,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    804e2aa <_IO_stdin_used+0x986>
outsb  %ds:(%esi),(%dx)
jae    804e27a <_IO_stdin_used+0x956>
or     (%eax),%al
and    %ah,0x20733131
and    %ah,0x6d000a73
outsl  %ds:(%esi),(%dx)
jbe    804e2b6 <_IO_stdin_used+0x992>
add    %dh,0x6d(%ebp)
outsl  %ds:(%esi),(%dx)
jne    804e2c5 <_IO_stdin_used+0x9a1>
je     804e259 <_IO_stdin_used+0x935>
jb     804e2c0 <_IO_stdin_used+0x99c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e2cd <_IO_stdin_used+0x9a9>
je     804e261 <_IO_stdin_used+0x93d>
jne    804e2d1 <_IO_stdin_used+0x9ad>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x63(%ecx)
je     804e2d6 <_IO_stdin_used+0x9b2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0x6e750073,%eax
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    804e2ee <_IO_stdin_used+0x9ca>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0x69660073,%eax
outsb  %ds:(%esi),(%dx)
fs
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
je     804e2bd <_IO_stdin_used+0x999>
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
jne    804e301 <_IO_stdin_used+0x9dd>
and    %bh,(%eax,%eiz,1)
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6c(%edi)
jne    804e30a <_IO_stdin_used+0x9e6>
outsb  %ds:(%esi),(%dx)
jae    804e2a0 <_IO_stdin_used+0x97c>
and    $0x73255b73,%eax
pop    %ebp
add    %cl,0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
add    %ah,0x75253a75
add    %ah,0x253a7533
sub    $0x66007533,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
fs and %ch,%fs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    804e349 <_IO_stdin_used+0xa25>
jo     804e34c <_IO_stdin_used+0xa28>
je     804e2d9 <_IO_stdin_used+0x9b5>
das
jo     804e34e <_IO_stdin_used+0xa2a>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
jae    804e346 <_IO_stdin_used+0xa22>
insb   (%dx),%es:(%edi)
data16
das
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e356 <_IO_stdin_used+0xa32>
je     804e353 <_IO_stdin_used+0xa2f>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %ch,(%edi)
gs
je     804e355 <_IO_stdin_used+0xa31>
das
data16
jae    804e36a <_IO_stdin_used+0xa46>
popa
bound  %eax,(%eax)
das
gs
je     804e360 <_IO_stdin_used+0xa3c>
das
insl   (%dx),%es:(%edi)
je     804e362 <_IO_stdin_used+0xa3e>
bound  %eax,(%eax)
das
jo     804e378 <_IO_stdin_used+0xa54>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e37b <_IO_stdin_used+0xa57>
je     804e382 <_IO_stdin_used+0xa5e>
add    %ch,(%edi)
jne    804e386 <_IO_stdin_used+0xa62>
jb     804e344 <_IO_stdin_used+0xa20>
jae    804e37f <_IO_stdin_used+0xa5b>
popa
jb     804e37f <_IO_stdin_used+0xa5b>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebp)
imul   $0x78756e69,0x6c(%ebp,%ebp,1),%ebp
add    %ah,0x6f(%esi)
jb     804e3a8 <_IO_stdin_used+0xa84>
popa
jb     804e398 <_IO_stdin_used+0xa74>
add    %ah,0x61(%edx)
arpl   %bp,0x77(%ebx)
popa
jb     804e3a1 <_IO_stdin_used+0xa7d>
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x2d002773,%eax
sub    $0x7473667b,%eax
popa
bound  %ebp,0x2c626174(,%ebp,2)
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
jge    804e36b <_IO_stdin_used+0xa47>
sub    $0x61727b2d,%eax
ja     804e39e <_IO_stdin_used+0xa7a>
insb   (%dx),%es:(%edi)
imul   $0x6961702c,0x74(%ebx),%esi
jb     804e3ef <_IO_stdin_used+0xacb>
jge    804e37e <_IO_stdin_used+0xa5a>
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     804e3eb <_IO_stdin_used+0xac7>
jb     804e3ff <_IO_stdin_used+0xadb>
and    %dh,%gs:0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    804e409 <_IO_stdin_used+0xae5>
add    %cl,0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
cmp    $0x49555500,%eax
inc    %esp
cmp    $0x6e616300,%eax
daa
je     804e3c9 <_IO_stdin_used+0xaa5>
jb     804e410 <_IO_stdin_used+0xaec>
popa
and    %ah,%fs:0x64690073
and    %bh,(%eax,%eiz,1)
inc    %esi
dec    %ecx
dec    %esi
inc    %esp
dec    %ebp
dec    %esi
push   %esp
pop    %edi
dec    %esi
inc    %ebx
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
push   %ebx
add    %ah,0x6f203a73
jo     804e433 <_IO_stdin_used+0xb0f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
imul   $0x6c6f7000,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
sub    %ch,(%ecx)
and    %ah,0x61(%esi)
imul   $0x6b6e7500,0x64(%ebp,%eiz,2),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     804e45a <_IO_stdin_used+0xb36>
add    %ah,0x73(%ecx)
arpl   %bp,0x69(%ecx)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
add    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x76(%ebp)
popa
insb   (%dx),%es:(%edi)
jne    804e471 <_IO_stdin_used+0xb4d>
je     804e477 <_IO_stdin_used+0xb53>
add    %ah,0x69(%esi)
jb     804e48a <_IO_stdin_used+0xb66>
je     804e446 <_IO_stdin_used+0xb22>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    804e41e <_IO_stdin_used+0xafa>
push   $0x706c65
imul   $0x747265,0x76(%esi),%ebp
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx,%ebp,2)
je     804e436 <_IO_stdin_used+0xb12>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   $0x69646165
outsb  %ds:(%esi),(%dx)
addr16 jae 804e441 <_IO_stdin_used+0xb1d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e4b7 <_IO_stdin_used+0xb93>
jne    804e4b5 <_IO_stdin_used+0xb91>
arpl   %sp,0x74(%ecx)
add    %dh,%gs:0x61(%eax)
imul   $0x77617200,0x73(%edx),%esi
add    %dh,0x70(%ecx,%edi,2)
gs
jae    804e45c <_IO_stdin_used+0xb38>
data16
jae    804e4d1 <_IO_stdin_used+0xbad>
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e463 <_IO_stdin_used+0xb3f>
jae    804e4da <_IO_stdin_used+0xbb6>
bound  %ebp,0x6f(%ebp)
jne    804e4d8 <_IO_stdin_used+0xbb4>
je     804e4df <_IO_stdin_used+0xbbb>
add    %dh,0x6f(%ebx)
jne    804e4e3 <_IO_stdin_used+0xbbf>
arpl   %sp,0x0(%ebp)
je     804e4d7 <_IO_stdin_used+0xbb3>
jb     804e4df <_IO_stdin_used+0xbbb>
gs
je     804e47b <_IO_stdin_used+0xb57>
push   %ebx
dec    %edi
push   %ebp
push   %edx
inc    %ebx
inc    %ebp
add    %dh,0x6f(%ebx)
jne    804e4f8 <_IO_stdin_used+0xbd4>
arpl   %sp,0x20(%ebp)
fs
gs
jbe    804e4f6 <_IO_stdin_used+0xbd2>
arpl   %sp,0x0(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e502 <_IO_stdin_used+0xbde>
je     804e506 <_IO_stdin_used+0xbe2>
outsl  %ds:(%esi),(%dx)
imul   $0x54534600,0x74(%esi),%ebp
pop    %ecx
push   %eax
inc    %ebp
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804e521 <_IO_stdin_used+0xbfd>
jae    804e51e <_IO_stdin_used+0xbfa>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x70(%ecx,%edi,2)
add    %ah,%gs:0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
jne    804e528 <_IO_stdin_used+0xc04>
je     804e4dc <_IO_stdin_used+0xbb8>
outsl  %ds:(%esi),(%dx)
jo     804e533 <_IO_stdin_used+0xc0f>
imul   $0x46560073,0x6e(%edi),%ebp
push   %ebx
sub    $0x4954504f,%eax
dec    %edi
dec    %esi
push   %ebx
add    %dl,0x46(%esi)
push   %ebx
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e756f6d,0x20(%ebx),%esp
je     804e503 <_IO_stdin_used+0xbdf>
outsl  %ds:(%esi),(%dx)
jo     804e55a <_IO_stdin_used+0xc36>
imul   $0x69660073,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
gs
jae    804e56a <_IO_stdin_used+0xc46>
jae    804e567 <_IO_stdin_used+0xc43>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    804e57b <_IO_stdin_used+0xc57>
jae    804e578 <_IO_stdin_used+0xc54>
gs
insl   (%dx),%es:(%edi)
and    %dl,0x55(%ebp)
dec    %ecx
inc    %esp
add    %cl,0x41(%ebp)
dec    %edx
cmp    0x49(%ebp),%cl
dec    %esi
add    %ch,0x61(%ebp)
push   $0x6f
jb     804e554 <_IO_stdin_used+0xc30>
insl   (%dx),%es:(%edi)
imul   $0x65642072,0x6f(%esi),%ebp
jbe    804e58d <_IO_stdin_used+0xc69>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
jne    804e597 <_IO_stdin_used+0xc73>
bound  %esp,0x72(%ebp)
add    %al,0x43(%ecx)
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %ah,0x63(%ecx)
je     804e5a2 <_IO_stdin_used+0xc7e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ebp,%eiz,2)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x79(%edx)
and    %ch,0x6c6f702d
insb   (%dx),%es:(%edi)
add    %cl,0x4c(%edi)
inc    %esp
sub    $0x47524154,%eax
inc    %ebp
push   %esp
add    %cl,0x4c(%edi)
inc    %esp
sub    $0x4954504f,%eax
dec    %edi
dec    %esi
push   %ebx
add    %al,(%eax)
add    %bl,(%eax)
mov    $0x4,%bl
or     %bl,-0x4ff7fb4d(%eax)
mov    $0x4,%bl
or     %cl,%al
mov    $0x4,%bl
or     %ah,%al
mov    $0x4,%bl
or     %bh,%al
mov    $0x4,%bl
or     %dl,(%eax)
mov    $0x4,%ah
or     %dl,-0x57f7fb4e(%eax)
mov    $0x4,%dl
or     %ah,-0x6df7fb63(%edi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
sbbl   $0x4,-0x6292f7fc(%ebp)
or     %dl,-0x63(%edi)
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
dec    %ebx
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
aas
popf
add    $0x8,%al
cld
pushf
add    $0x8,%al
lock pushf
add    $0x8,%al
in     $0x9c,%al
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
ficompl 0x49cce08(%esp,%eax,1)
or     %dh,-0x49f7fb63(%esi)
pushf
add    $0x8,%al
xchg   %eax,%esi
pushf
add    $0x8,%al
ja     804e5ba <_IO_stdin_used+0xc96>
add    $0x8,%al
imul   $0x8,0x49c2d08(%esp,%eax,1),%ebx
in     $0x9b,%eax
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
rcrb   -0x644ef7fc(%ebx)
add    $0x8,%al
mov    %al,0x8708049b
fwait
add    $0x8,%al
jnp    804e5dd <_IO_stdin_used+0xcb9>
add    $0x8,%al
dec    %eax
fwait
add    $0x8,%al
imul   $0x64626174,0x5f(%ebx),%esi
imul   $0x6c6f635f,0x66(%esi),%esp
jne    804e6c5 <_IO_stdin_used+0xda1>
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     804e6bd <_IO_stdin_used+0xd99>
arpl   %bp,0x6c(%edi)
jne    804e6d0 <_IO_stdin_used+0xdac>
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x0,0x0(%eax,%eax,1),%esp
add    %al,(%eax)
add    %ch,%ch
jecxz  804e687 <_IO_stdin_used+0xd63>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
repz jecxz 804e697 <_IO_stdin_used+0xd73>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
add    %ah,%ah
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %cl,(%edx)
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
adc    %esp,%esp
add    $0x8,%al
data16
add    %al,(%eax)
add    %dh,%bl
loop   804e6d7 <_IO_stdin_used+0xdb3>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
push   %ds
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
and    %esp,%esp
add    $0x8,%al
imul   $0xe42a0000,(%eax),%eax
add    $0x8,%al
imul   $0x0,(%eax),%eax
add    %dh,(%ecx)
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %bh,%dh
loop   804e727 <_IO_stdin_used+0xe03>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
ss
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
inc    %ecx
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
jecxz  804e736 <_IO_stdin_used+0xe12>
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %edi
add    %al,(%eax)
add    %dl,%dl
loop   804e767 <_IO_stdin_used+0xe43>
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
dec    %edx
in     $0x4,%eax
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
dec    %esp
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
push   %edx
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
push   %esi
in     $0x4,%al
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %bl,0x4(%esp,%eiz,8)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
arpl   %sp,%sp
add    $0x8,%al
push   %edx
add    %al,(%eax)
add    %ch,-0x1c(%ebp)
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %dh,0x4(%esp,%eiz,8)
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,0x10804e3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
and    %ah,(%eax)
add    %ah,0x25223d73
jae    804e83c <_IO_stdin_used+0xf18>
add    %ah,0x2500732a
sub    0x20(%ebx),%dh
add    %ah,0x732573
push   %ebp
push   %esp
inc    %esi
sub    $0x94e20038,%eax
pushf
loop   804e7c8 <_IO_stdin_used+0xea4>
addb   $0xe2,(%eax)
xchg   %eax,%esp
(bad)
and    %al,(%eax)
loop   804e7d1 <_IO_stdin_used+0xead>
xchg   %eax,%esp
loop   804e7d4 <_IO_stdin_used+0xeb0>
addb   $0x7c,(%eax)
sub    $0x207c00,%eax
pusha
sub    $0xe82f0000,%eax
add    $0x8,%al
ss
call   f03ff05a <_end+0xe83adcc2>
add    $0x8,%al
inc    %edx
call   f049f062 <_end+0xe844dcca>
add    $0x8,%al
dec    %eax
call   d43df06a <_end+0xcc38dcd2>
add    $0x8,%al
mov    $0x730804c9,%edx
lret
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xe70804c9,%edx
int3
add    $0x8,%al
mov    $0x6c0804c9,%edx
into
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
enter  $0x4cd,$0x8
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0x5a0804c9,%edx
lret   $0x804
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
sbb    $0xd40804cd,%eax
leave
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
cmp    %ecx,%esp
add    $0x8,%al
mov    $0x730804c9,%edx
lret
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0xe70804c9,%edx
int3
add    $0x8,%al
mov    $0x6c0804c9,%edx
into
add    $0x8,%al
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
enter  $0x4cd,$0x8
mov    $0xba0804c9,%edx
leave
add    $0x8,%al
mov    $0x5a0804c9,%edx
lret   $0x804
and    $0x27203a73,%eax
and    $0x2e002773,%eax
add    %al,0x4b(%edx)
dec    %ebp
inc    %edi
push   %esp
push   %eax
inc    %ebp
add    %ah,0x25732564
push   $0x64
and    $0x64250073,%eax
.byte 0x25
jae    804e946 <_IO_stdin_used+0x1022>
add    %ebx,(%ebx)
add    (%ebx),%edi
push   $0x2c000001
add    %al,(%eax)
add    %cl,(%eax)
stos   %eax,%es:(%edi)
(bad)
incl   -0x4ee80000(%ecx,%eax,1)
(bad)
ljmp   *0x58000001(%eax)
mov    $0xff,%cl
lcall  *0x4(%eax)
add    %al,(%eax)
cwtl
ret
(bad)
inc    %esp
add    %eax,(%eax)
add    %bl,%al
ret
(bad)
(bad)
faddl  (%ecx)
add    %al,(%eax)
or     %al,%dh
(bad)
(bad)
cld
add    %eax,(%eax)
add    %cl,%al
(bad)
(bad)
incl   0x0(%edx,%eax,1)
add    %bl,-0x39(%eax)
(bad)
decl   -0x37d80000(%edx,%eax,1)
(bad)
dec    %eax
add    (%eax),%al
add    %bh,0x8ffffc8(%eax)
add    (%eax),%eax
add    %ch,(%eax)
leave
(bad)
jmp    *(%ebx,%eax,1)
add    %al,(%eax)
mov    %cl,%bl
(bad)
dec    %eax
add    (%eax),%eax
add    %bl,(%eax)
int3
(bad)
incl   (%eax)
add    $0x0,%al
add    %cl,(%eax)
int    $0xff
decl   -0x67fffffc(%eax)
int    $0xff
jmp    *%eax
add    $0x0,%al
add    %ch,%al
iret
(bad)
(bad)
cmp    %al,0xd0f80000
(bad)
call   *0x68000005(%eax)
sar    %edi
dec    %esp
add    $0xd1a80000,%eax
(bad)
decl   (%eax)
push   %es
add    %al,(%eax)
cmp    %dl,%dl
(bad)
incl   0x0(%esi,%eax,1)
add    %cl,%al
sar    %cl,%bh
(bad)
jl     804ea00 <_IO_stdin_used+0x10dc>
add    %al,(%eax)
sbb    %dl,%bl
(bad)
pushl  0x78000006(%eax)
sar    %cl,%edi
(bad)
call   4ea13 <_init-0x7ffaa19>
sar    %cl,%edi
lcall  *(%eax)
pop    %es
add    %al,(%eax)
enter  $0xffd4,$0xff
jo     804ea21 <_IO_stdin_used+0x10fd>
add    %al,(%eax)
clc
aam    $0xff
incl   -0x2a680000(%edi,%eax,1)
(bad)
(bad)
in     (%dx),%al
pop    %es
add    %al,(%eax)
mov    $0xffffd5,%eax
or     %al,(%eax)
add    %ch,0x40ffffda(%eax)
or     %al,(%eax)
add    %cl,(%eax)
(bad)
(bad)
js     804ea4a <_IO_stdin_used+0x1126>
add    %al,(%eax)
mov    $0xb8ffffdb,%eax
or     %al,(%eax)
add    %bl,-0x21(%eax)
(bad)
(bad)
clc
or     %al,(%eax)
add    %bh,0x50ffffe5(%eax)
or     %eax,(%eax)
add    %cl,(%eax)
out    %al,$0xff
decl   0x58000009(%eax)
out    %al,$0xff
pushl  -0x18e80000(%ecx,%ecx,1)
(bad)
jmp    *%eax
or     %eax,(%eax)
add    %bl,%al
out    %eax,$0xff
decl   (%edx,%ecx,1)
add    %al,(%eax)
cwtl
call   123dea81 <_end+0xa38d6e9>
add    %al,(%eax)
sub    %ch,%dl
(bad)
decl   0x0(%edx,%ecx,1)
add    %bl,-0x73000014(%eax)
or     (%eax),%al
add    %ch,-0x13(%eax)
(bad)
push   %esp
or     (%eax),%al
add    %cl,(%eax)
out    %al,(%dx)
(bad)
decl   0x0(%ebx,%ecx,1)
add    %bh,(%eax)
out    %eax,(%dx)
(bad)
(bad)
mov    $0xa800000b,%eax
out    %eax,(%dx)
(bad)
push   %esp
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     804eacb <_IO_stdin_used+0x11a7>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jl     804ea7f <_IO_stdin_used+0x115b>
(bad)
call   *(%eax)
push   %es
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     804eaeb <_IO_stdin_used+0x11c7>
js     804eae9 <_IO_stdin_used+0x11c5>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,-0x51(%eax)
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
add    %al,(%eax)
add    %cl,%ah
sar    $0xff,%edi
cmp    $0x0,%eax
inc    %ebx
push   %cs
and    %bh,0xe(%ecx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
je     804eb2a <_IO_stdin_used+0x1206>
add    %al,(%eax)
hlt
sar    $0xff,%edi
and    (%edx),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dl,-0x3bfc0000(%eax,%eax,1)
(bad)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x43100e0a(%edi),%bl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bl,%ah
add    %al,(%eax)
add    %bh,-0x1(%esp,%eax,8)
call   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %al,(%edx)
push   $0xa
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,(%ecx,%eax,1)
add    %al,(%eax)
(bad)
(bad)
(bad)
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
jle    804ebff <_IO_stdin_used+0x12db>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
pusha
add    %eax,(%eax)
add    %bl,-0x3b(%eax)
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6a,0x2300e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
mov    0xa8000001,%al
(bad)
arpl   %ax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%edi)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,-0x44000000(%eax)
add    %eax,(%eax)
add    %bh,%ah
(bad)
pop    %edi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x400e4504(%ebx)
or     0x4310,%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
sti
or     (%esi),%cl
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ecx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
add    (%eax),%al
add    %bh,-0x76000039(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bl,0x10000002(%eax)
enter  $0xffff,$0xe9
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x73500e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
xchg   %eax,%ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
lock add (%eax),%al
add    %bh,%al
lods   %ds:(%esi),%al
(bad)
incl   0x11(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa05b703,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,(%eax)
add    (%eax),%eax
add    %bh,-0x38(%eax)
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4f,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x3(%eax)
add    %al,(%eax)
mov    $0xc8,%al
(bad)
incl   0x0(%edx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x63,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
decl   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dl,%al
add    (%eax),%eax
add    %ch,0xaffffca(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax,%eax,1)
add    %ah,-0x35(%eax)
(bad)
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x56,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,0x0(%esp,%eax,1)
add    %dl,0x3affff(%ebx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x68200e45
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    0x98000004,%al
lret
(bad)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7b,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,%ah
add    $0x0,%al
add    %ch,%ah
lret
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,-0x33bc0000(,%eax,1)
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jl     804eff7 <_IO_stdin_used+0x16d3>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
add    $0xcc600000,%eax
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     0xe(%ebx),%eax
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
addb   $0xff,0xcc880000
(bad)
jle    804f03e <_IO_stdin_used+0x171a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
or     %gs:(%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,-0x27fffffb(%eax)
int3
(bad)
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff97,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
or     %al,(%esi)
add    %al,(%eax)
push   %eax
int    $0xff
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %bl,(%esi,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
int    $0xff
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6f,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,-0x325c0000(%esi,%eax,1)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cwtl
push   %es
add    %al,(%eax)
mov    $0xcd,%al
(bad)
jmp    *%ecx
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffce,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
fadds  (%esi)
add    %al,(%eax)
pusha
sar    %cl,%bh
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    %al,(%edi)
add    %al,(%eax)
mov    %dl,%dl
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
push   %eax
pop    %es
add    %al,(%eax)
clc
sar    %cl,%bh
lcall  *0x3(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,0x58000007(%eax)
(bad)
(bad)
call   *0x6(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
call   6804f2a8 <_end+0x5fffdf10>
fdivr  %st,%st(7)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %bh,0xa(%ebx)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
and    %cl,(%eax)
add    %al,(%eax)
js     804f2b6 <_IO_stdin_used+0x1992>
(bad)
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37f04(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,0x0(%eax,%ecx,1)
add    %bl,0xb3ffff(%esp,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x8(%eax)
add    %al,(%eax)
xor    %bl,%ch
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0x223c0000(%eax,%ecx,1)
(bad)
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
or     %al,(%eax)
add    %bl,-0x22(%eax)
(bad)
call   *0x1(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     $0x8,%al
add    %al,(%eax)
aam    $0xdf
(bad)
ljmp   *0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
ret    $0xe0a
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%esp
add    %ah,(%ecx,%ecx,1)
add    %al,(%eax)
add    $0xe2,%al
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,-0x1d940000(%ecx,%ecx,1)
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0xe4000000
or     %eax,(%eax)
add    %dh,0x124ffff(%edx,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,0xa(%eax)
add    %al,(%eax)
js     804f4ed <_IO_stdin_used+0x1bc9>
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,-0x1c540000(%edx,%ecx,1)
(bad)
incl   (%edx)
mov    $0xac,%al
add    $0x8,%al
nop
lods   %ds:(%esi),%al
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
cltd
add    (%eax),%eax
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x94,%al
add    $0x8,%al
or     $0xf4000000,%eax
fadds  (%eax,%ecx,1)
sbb    %eax,(%eax)
add    %al,(%eax)
add    %cl,(%edi)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0xf,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
or     %cl,0x60804(%ecx)
add    %al,(%eax)
or     %al,0xa0804(%edx)
add    %al,(%eax)
bound  %eax,(%esi)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,0x208
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ch,(%ecx,%edx,4)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
cld
nop
add    $0x8,%al
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x4c(%edi)
nop
add    $0x8,%al
(bad)
(bad)
ljmp   *0x2(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x6a(%edi)
popl   (%eax,%ecx,1)
add    %al,(%eax)
or     $0xf,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,-0x6c(%esi)
add    $0x8,%al
jbe    8050fa6 <_IO_stdin_used+0x3682>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    8050fe7 <_IO_stdin_used+0x36c3>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    8051028 <_IO_stdin_used+0x3704>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    8051069 <_IO_stdin_used+0x3745>
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    80510aa <_IO_stdin_used+0x3786>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
negb   -0x66f9f7fc(%eax)
add    $0x8,%al
push   %ss
cltd
add    $0x8,%al
es
cltd
add    $0x8,%al
ss
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
push   %esi
cltd
add    $0x8,%al
cwtd
add    $0x8,%al
jbe    80510eb <_IO_stdin_used+0x37c7>
add    $0x8,%al
xchg   %bl,-0x6669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
.byte 0x9a
add    $0x8,%al
jnp    80511a6 <_IO_stdin_used+0x3882>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sarb   (%edi)
add    %al,(%eax)
add    %al,(%eax)
(bad)
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %dl,-0x1b(%ebx)
add    $0x8,%al
xor    (%ebx),%esi
xor    (%ebx),%esi
xor    (%ebx),%esi
sarl   %cl,(%edi)
inc    %eax
add    %al,(%eax)
add    %dl,0x804e4(%eax)
add    %al,(%eax)
add    %bl,-0x65f7fb1c(%ebx)
cltd
cltd
cltd
cltd
cltd
mov    $0x203f,%ecx
add    %ah,0x804e4(%edx)
add    %al,(%eax)
add    %bl,-0x1b(%esi)
add    $0x8,%al
lcall  $0xb999,$0x99999999
aas
and    %al,(%eax)
add    %al,(%eax)
mov    $0xe4,%dl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
(bad)
in     $0x4,%al
or     %bl,-0x66666667(%edx)
cltd
leave
aas
and    %al,(%eax)
add    %al,(%eax)
shl    %ah
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
(bad)
or     %bl,-0x66666667(%edx)
cltd
mov    $0x203f,%ecx
add    %dl,%cl
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x65f7fb1e(%edi)
cltd
cltd
cltd
cltd
cltd
mov    $0x3f,%ecx
add    %ch,%bl
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%edi)
in     $0x4,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x40(%edx)
add    %al,(%eax)
add    %al,(%eax)
cld
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x804(,%eiz,8)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,0x0(%eax)
add    %al,(%eax)
add    %dl,0x804(,%eiz,8)
add    %al,(%eax)
cs
in     $0x4,%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax,%eax,2)
add    %al,(%ecx)
add    %al,(%eax)
xor    $0x804e5,%eax
add    %al,(%eax)
add    %cl,-0x1b(%edi)
add    $0x8,%al
xor    (%ebx),%esi
xor    (%ebx),%esi
xor    (%ebx),%esi
sarl   %cl,(%edi)
add    %al,(%eax)
add    %al,(%eax)
enter  $0x4e1,$0x8
add    %al,(%eax)
add    %al,(%eax)
pop    %edx
in     $0x4,%eax
or     %bl,-0x66666667(%edx)
cltd
mov    $0x203f,%ecx
add    %ch,%al
loope  80512df <_IO_stdin_used+0x39bb>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0x6e6d,0x64(%esi),%bp
je     8 <_init-0x8049424>
(bad)
jb     32 <_init-0x80493fa>
.byte 0x72
